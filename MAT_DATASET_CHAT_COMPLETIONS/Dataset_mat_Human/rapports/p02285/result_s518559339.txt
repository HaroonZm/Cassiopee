================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Node(object):
    root = None

    def __init__(self, key, parent=None, left=None, right=None):
        self.key = key
        self.parent = parent
        self.left = left
        self.right = right
        self.height = None

    @classmethod
    def insert(cls, z):
        y = None
        x = cls.root
        while x != None:  # root???????????????????????????y????????\????????????????????¨???????????§??¨????????????
            y = x
            if z.key < x.key:
                x = x.left
            else:
                x = x.right
        # ?????\?????¨?????????????????????????¨??????????
        z.parent = y
        if y == None:
            cls.root = z
        elif z.key < y.key:
            y.left = z
        else:
            y.right = z
        # return z

    @classmethod
    def find(cls, k):
        """ ??????k?????????????????¢?????????????????????????????°None????????? """
        x = cls.root
        while x != None and k != x.key:
            if k < x.key:
                x = x.left
            else:
                x = x.right
        return x

    @classmethod
    def walk_preorder(cls, node):
        """ ??????????????? """
        # results = []
        # results.append(node.key)
        print(' {0}'.format(node.key), end='')
        if node.left != None:
            # results.append(cls.walk_preorder(node.left))
            cls.walk_preorder(node.left)
        if node.right != None:
            # results.append(cls.walk_preorder(node.right))
            cls.walk_preorder(node.right)
        #return results

    @classmethod
    def walk_inorder(cls, node):
        """ ??????????????? """
        # results = []
        if node.left != None:
            # results.append(cls.walk_inorder(node.left))
            cls.walk_inorder(node.left)
        # results.append(node.key)
        print(' {0}'.format(node.key), end='')
        if node.right != None:
            # results.append(cls.walk_inorder(node.right))
            cls.walk_inorder(node.right)
        # return results

    @classmethod
    def delete_node(cls, z):
        if z.left == None or z.right == None:
            y = z
        else:
            y = Node.get_successor(z)
        if y.left != None:
            x = y.left
        else:
            x = y.right
        if x != None:
            x.parent = y.parent
        if y.parent == None:
            Node.root = x
        elif y == y.parent.left:
            y.parent.left = x
        else:
            y.parent.right = x
        if y != z:
            z.key = y.key

    @classmethod
    def get_successor(cls, x):
        if x.right != None:
            return Node.get_minimum(x.right)
        y = x.parent
        while y != None and x == y.right:
            x = yy = y.parent
        return y

    @classmethod
    def get_minimum(cls, x):
        """ ??????x????????¨????????¨?????¨????????§????°?????????????????????????????????? """
        while x.left != None:
            x = x.left
        return x

    def get_type(self):
        if self.parent == None:
            return 'root'
        elif self.left == None and self.right == None:
            return 'leaf'
        else:
            return 'internal node'

    def get_depth(self):
        if self.parent == None:
            return 0
        else:
            depth = 1
            t = self.parent
            while t.parent != None:
                t = t.parent
                depth += 1
            return depth

    def get_height(self):
        if self.height:
            return self.height
        h_left = 0
        h_right = 0
        if self.left != None:
            h_left = self.left.get_height() + 1
        if self.right != None:
            h_right = self.right.get_height() + 1
        self.height = max(h_left, h_right)
        return self.height

    def get_degree(self):
        degree = 0
        if self.left != None:
            degree += 1
        if self.right != None:
            degree += 1
        return degree

    def get_sibling(self):
        if self.parent == None:
            return -1
        p = self.parent
        if p.left != self and p.left != None:
            return p.left
        if p.right != self and p.right != None:
            return p.right

def process_node_data(node_data):
    for inst in node_data:
        if inst[0] == 'print':
            result = Node.walk_inorder(Node.root)
            print('')
            # print(' {0}'.format(' '.join(map(str, flatten(result)))))
            result = Node.walk_preorder(Node.root)
            # print(' {0}'.format(' '.join(map(str, flatten(result)))))
            print('')
        elif inst[0] == 'insert':
            node_key = int(inst[1])
            new_node = Node(node_key)
            Node.insert(new_node)
        elif inst[0] == 'find':
            result = Node.find(int(inst[1]))
            if result:
                print('yes')
            else:
                print('no')
        elif inst[0] == 'delete':
            result = Node.delete_node(Node.find(int(inst[1])))

def flatten(l):
    """ http://stackoverflow.com/questions/2158395/flatten-an-irregular-list-of-lists-in-python """
    import collections
    for el in l:
        if isinstance(el, collections.Iterable) and not isinstance(el, (str, bytes)):
            yield from flatten(el)
        else:
            yield el

if __name__ == '__main__':
    # ??????????????\???
    num_of_nodes = int(input())
    node_data = [input().split(' ') for _ in range(num_of_nodes)]
    # node_data = []
    # with open('ALDS1_8_A-in4.txt') as f:
    #     for line in f:
    #        if ' ' not in line:
    #           num_of_nodes = (int(line))
    #       else:
    #           node_data.append(line.split(' '))

    # ???????????????
    # ??¨???????????????
    process_node_data(node_data)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Node' (ID: 10882)
  → Token d'amorce (pas de prédiction)

Token 2: '(object' (ID: 9750)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16873902082443237
    2. ')' → logprob: -1.9187390804290771
    3. ':' → logprob: -4.793738842010498
    4. '):
' → logprob: -9.293739318847656
    5. ' ):' → logprob: -10.668739318847656
    6. '{' → logprob: -11.293739318847656
    7. '(' → logprob: -11.543739318847656
    8. '):

' → logprob: -11.668739318847656
    9. '```' → logprob: -11.793739318847656
    10. '   ' → logprob: -12.043739318847656

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015300170343834907
    2. ' :' → logprob: -9.750152587890625
    3. ':
' → logprob: -10.375152587890625
    4. '(' → logprob: -10.375152587890625
    5. '   ' → logprob: -11.125152587890625
    6. '():' → logprob: -11.375152587890625
    7. '```' → logprob: -13.250152587890625
    8. '(:' → logprob: -14.000152587890625
    9. '.' → logprob: -14.125152587890625
    10. ':def' → logprob: -14.625152587890625

Token 5: ' root' (ID: 6577)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006987088359892368
    2. '   ' → logprob: -5.75698709487915
    3. ' :' → logprob: -6.13198709487915
    4. '(' → logprob: -6.75698709487915
    5. ':
' → logprob: -9.256986618041992
    6. '```' → logprob: -9.381986618041992
    7. 'def' → logprob: -9.506986618041992
    8. ' ' → logprob: -10.131986618041992
    9. '    ' → logprob: -10.381986618041992
    10. ' def' → logprob: -10.381986618041992

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003314123023301363
    2. '=' → logprob: -5.878314018249512
    3. ' .' → logprob: -8.128314018249512
    4. ')' → logprob: -9.503314018249512
    5. ' =' → logprob: -10.128314018249512
    6. ':' → logprob: -10.503314018249512
    7. ' ' → logprob: -11.878314018249512
    8. '(' → logprob: -12.003314018249512
    9. ',' → logprob: -12.128314018249512
    10. '.

' → logprob: -12.128314018249512

Token 7: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.055013056844472885
    2. 'None' → logprob: -2.9300129413604736
    3. ' Node' → logprob: -9.930012702941895
    4. ' ' → logprob: -10.305012702941895
    5. '   ' → logprob: -11.430012702941895
    6. ' True' → logprob: -11.430012702941895
    7. '    ' → logprob: -11.805012702941895
    8. '(None' → logprob: -12.180012702941895
    9. 'Node' → logprob: -12.430012702941895
    10. ' {}' → logprob: -13.055012702941895

Token 8: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6606894731521606
    2. '(' → logprob: -1.5356894731521606
    3. ':' → logprob: -2.785689353942871
    4. '(
' → logprob: -2.785689353942871
    5. '
' → logprob: -3.160689353942871
    6. '()' → logprob: -3.785689353942871
    7. '\' → logprob: -4.035689353942871
    8. '\n' → logprob: -4.410689353942871
    9. '```' → logprob: -4.785689353942871
    10. '' → logprob: -5.035689353942871

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33410412073135376
    2. '```' → logprob: -2.084104061126709
    3. '    
' → logprob: -3.709104061126709
    4. '\n' → logprob: -3.709104061126709
    5. '
' → logprob: -3.834104061126709
    6. '\' → logprob: -3.834104061126709
    7. '(' → logprob: -4.334104061126709
    8. '    ' → logprob: -4.459104061126709
    9. ' ' → logprob: -4.584104061126709
    10. '``' → logprob: -5.209104061126709

Token 10: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6775792837142944
    2. '   ' → logprob: -1.0525792837142944
    3. 'def' (adapté à ' def') → logprob: -2.052579402923584
    4. '    ' → logprob: -5.052579402923584
    5. '```' → logprob: -5.927579402923584
    6. ' ' → logprob: -6.177579402923584
    7. '	def' → logprob: -7.177579402923584
    8. '    
' → logprob: -7.677579402923584
    9. ' ```' → logprob: -7.802579402923584
    10. ' 
' → logprob: -7.927579402923584

Token 11: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.009396791458129883
    2. '__' → logprob: -5.384396553039551
    3. ' init' → logprob: -5.384396553039551
    4. ' ' → logprob: -9.38439655303955
    5. 'init' → logprob: -10.63439655303955
    6. ' def' → logprob: -11.13439655303955
    7. '_init' → logprob: -11.25939655303955
    8. ' ' → logprob: -11.63439655303955
    9. ' initialize' → logprob: -11.88439655303955
    10. ' add' → logprob: -12.38439655303955

Token 12: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -15.625
    3. 'ini' → logprob: -16.5
    4. 'new' → logprob: -18.75
    5. '_init' → logprob: -19.125
    6. 'in' → logprob: -19.75
    7. 'i' → logprob: -20.125
    8. '	init' → logprob: -20.75
    9. 'inite' → logprob: -21.125
    10. 'innit' → logprob: -21.625

Token 13: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.16737912595272064
    2. '__' → logprob: -1.9173791408538818
    3. '(' → logprob: -6.167378902435303
    4. '(self' → logprob: -6.167378902435303
    5. '__(
' → logprob: -6.667378902435303
    6. '<|end|>' → logprob: -7.167378902435303
    7. '__((' → logprob: -7.792378902435303
    8. '__(*' → logprob: -8.792379379272461
    9. '__('' → logprob: -9.042379379272461
    10. '<|end|>' → logprob: -10.042379379272461

Token 14: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7848862373502925e-05
    2. ' self' → logprob: -10.625027656555176
    3. ')' → logprob: -12.750027656555176
    4. '(self' → logprob: -15.250027656555176
    5. '       ' → logprob: -16.375028610229492
    6. ',self' → logprob: -16.375028610229492
    7. 'root' → logprob: -17.750028610229492
    8. '   ' → logprob: -17.875028610229492
    9. '	self' → logprob: -18.000028610229492
    10. ',' → logprob: -18.375028610229492

Token 15: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44276389479637146
    2. 'self' → logprob: -1.6927639245986938
    3. ',' → logprob: -2.4427638053894043
    4. '<|end|>' → logprob: -2.8177638053894043
    5. '(self' → logprob: -4.192763805389404
    6. '(' → logprob: -5.317763805389404
    7. '):' → logprob: -6.442763805389404
    8. ' self' → logprob: -6.817763805389404
    9. ' )' → logprob: -6.942763805389404
    10. ')(' → logprob: -7.817763805389404

Token 16: ' key' (ID: 2140)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13090787827968597
    2. ' self' → logprob: -3.0059077739715576
    3. 'name' → logprob: -3.8809077739715576
    4. 'value' → logprob: -4.005908012390137
    5. 'data' → logprob: -4.130908012390137
    6. ')' → logprob: -5.255908012390137
    7. ' data' → logprob: -5.630908012390137
    8. ' value' → logprob: -5.755908012390137
    9. ' )' → logprob: -6.130908012390137
    10. 'parent' → logprob: -6.505908012390137

Token 17: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008878922089934349
    2. ',' → logprob: -5.258878707885742
    3. ')' → logprob: -5.633878707885742
    4. '):
' → logprob: -10.758878707885742
    5. ':' → logprob: -10.883878707885742
    6. '<|end|>' → logprob: -11.508878707885742
    7. '   ' → logprob: -12.383878707885742
    8. '=' → logprob: -13.383878707885742
    9. '=None' → logprob: -13.508878707885742
    10. ' ):' → logprob: -13.508878707885742

Token 18: ' parent' (ID: 5980)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.5160804986953735
    2. ' parent' → logprob: -1.5160804986953735
    3. ' val' → logprob: -2.141080379486084
    4. ' data' → logprob: -2.766080379486084
    5. ' left' → logprob: -6.891080379486084
    6. 'value' → logprob: -7.391080379486084
    7. ' ' → logprob: -7.641080379486084
    8. ' )' → logprob: -7.891080379486084
    9. 'val' → logprob: -8.891080856323242
    10. ' root' → logprob: -9.391080856323242

Token 19: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007884726859629154
    2. ',' → logprob: -5.132884502410889
    3. ')' → logprob: -6.632884502410889
    4. '=None' → logprob: -7.882884502410889
    5. '=' → logprob: -8.382884979248047
    6. '):
' → logprob: -11.382884979248047
    7. ':' → logprob: -12.132884979248047
    8. ' ):' → logprob: -12.132884979248047
    9. '   ' → logprob: -12.757884979248047
    10. '):

' → logprob: -13.757884979248047

Token 20: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029021166265010834
    2. ')' → logprob: -6.377902030944824
    3. ',' → logprob: -6.752902030944824
    4. ':' → logprob: -10.627902030944824
    5. '):
' → logprob: -12.877902030944824
    6. ' ):' → logprob: -12.877902030944824
    7. '),' → logprob: -14.252902030944824
    8. '   ' → logprob: -14.377902030944824
    9. ''):' → logprob: -16.12790298461914
    10. ' ' → logprob: -16.25290298461914

Token 21: ' left' (ID: 3561)
  Prédit: ' children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' children' → logprob: -0.06018920987844467
    2. ' left' → logprob: -3.1851892471313477
    3. ' value' → logprob: -5.060189247131348
    4. ' data' → logprob: -5.310189247131348
    5. 'children' → logprob: -5.310189247131348
    6. 'left' → logprob: -8.435189247131348
    7. ' child' → logprob: -8.935189247131348
    8. ' val' → logprob: -9.560189247131348
    9. ')' → logprob: -9.685189247131348
    10. 'value' → logprob: -9.935189247131348

Token 22: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.6062625050544739
    2. '=' → logprob: -0.8562625050544739
    3. ',' → logprob: -3.606262445449829
    4. ')' → logprob: -6.231262683868408
    5. ')=' → logprob: -8.10626220703125
    6. '):' → logprob: -8.10626220703125
    7. ' =' → logprob: -9.85626220703125
    8. '=null' → logprob: -10.48126220703125
    9. '<|end|>' → logprob: -11.23126220703125
    10. '<|end|>' → logprob: -11.23126220703125

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020807012333534658
    2. '):' → logprob: -8.625207901000977
    3. ' ,' → logprob: -11.375207901000977
    4. ')' → logprob: -11.500207901000977
    5. ',left' → logprob: -13.250207901000977
    6. ',right' → logprob: -13.500207901000977
    7. '   ' → logprob: -13.875207901000977
    8. ',None' → logprob: -14.125207901000977
    9. ',parent' → logprob: -14.750207901000977
    10. ',node' → logprob: -15.375207901000977

Token 24: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.10022673010826111
    2. 'right' → logprob: -2.350226640701294
    3. '	right' → logprob: -11.350226402282715
    4. ',right' → logprob: -13.225226402282715
    5. '   ' → logprob: -13.350226402282715
    6. ' ' → logprob: -13.350226402282715
    7. '    ' → logprob: -14.350226402282715
    8. ',' → logprob: -14.850226402282715
    9. ' ' → logprob: -14.975226402282715
    10. ')' → logprob: -15.100226402282715

Token 25: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0051636663265526295
    2. ')' → logprob: -5.380163669586182
    3. ',' → logprob: -7.630163669586182
    4. ':' → logprob: -10.380163192749023
    5. '=None' → logprob: -11.505163192749023
    6. '):
' → logprob: -12.005163192749023
    7. ' ):' → logprob: -12.380163192749023
    8. '=' → logprob: -12.755163192749023
    9. '),' → logprob: -14.130163192749023
    10. '```' → logprob: -15.130163192749023

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014472603797912598
    2. ')' → logprob: -7.1264472007751465
    3. ',' → logprob: -8.001447677612305
    4. ':' → logprob: -8.126447677612305
    5. '):
' → logprob: -12.001447677612305
    6. ' ):' → logprob: -12.501447677612305
    7. '   ' → logprob: -14.001447677612305
    8. '),' → logprob: -14.751447677612305
    9. ' ' → logprob: -16.001447677612305
    10. '       ' → logprob: -16.126447677612305

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3883223235607147
    2. '   ' → logprob: -2.388322353363037
    3. 'self' → logprob: -2.638322353363037
    4. ')' → logprob: -3.013322353363037
    5. ' ' → logprob: -3.388322353363037
    6. ' )' → logprob: -4.263322353363037
    7. '):' → logprob: -4.263322353363037
    8. ' ):' → logprob: -4.263322353363037
    9. '    ' → logprob: -4.513322353363037
    10. ':' → logprob: -5.138322353363037

Token 28: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.025342809036374092
    2. 's' → logprob: -4.52534294128418
    3. ' self' → logprob: -4.77534294128418
    4. '       ' → logprob: -5.52534294128418
    5. '   ' → logprob: -7.02534294128418
    6. '    ' → logprob: -8.40034294128418
    7. ' ' → logprob: -8.65034294128418
    8. 'k' → logprob: -9.02534294128418
    9. 'key' → logprob: -9.15034294128418
    10. '        ' → logprob: -9.52534294128418

Token 29: '.key' (ID: 8839)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28277796506881714
    2. '.key' → logprob: -1.407778024673462
    3. '<|end|>' → logprob: -7.782777786254883
    4. ' .' → logprob: -7.907777786254883
    5. ' key' → logprob: -8.157777786254883
    6. ' ' → logprob: -8.407777786254883
    7. '.Key' → logprob: -8.657777786254883
    8. '.space' → logprob: -10.407777786254883
    9. '.keys' → logprob: -10.782777786254883
    10. '<|end|>' → logprob: -10.907777786254883

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21248672902584076
    2. '=' → logprob: -1.712486743927002
    3. ' ' → logprob: -4.837486743927002
    4. '<|end|>' → logprob: -5.837486743927002
    5. '<|end|>' → logprob: -9.962486267089844
    6. ')' → logprob: -10.212486267089844
    7. ' =)' → logprob: -10.337486267089844
    8. ' is' → logprob: -10.962486267089844
    9. ',' → logprob: -11.587486267089844
    10. ' =
' → logprob: -11.837486267089844

Token 31: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.023245712742209435
    2. 'key' → logprob: -3.7732458114624023
    3. '	key' → logprob: -16.023244857788086
    4. ' ' → logprob: -16.273244857788086
    5. ' ' → logprob: -16.773244857788086
    6. '(key' → logprob: -18.398244857788086
    7. '$key' → logprob: -18.398244857788086
    8. 'Key' → logprob: -18.648244857788086
    9. '_key' → logprob: -18.898244857788086
    10. ' ключ' → logprob: -20.023244857788086

Token 32: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' self' (ID: 1051)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8143459558486938
    2. 'self' (adapté à ' self') → logprob: -0.8143459558486938
    3. ' self' → logprob: -2.5643458366394043
    4. '       ' → logprob: -4.439345836639404
    5. '<|end|>' → logprob: -4.564345836639404
    6. ',' → logprob: -5.064345836639404
    7. '        ' → logprob: -5.439345836639404
    8. ' ' → logprob: -6.189345836639404
    9. ')' → logprob: -7.689345836639404
    10. 'parent' → logprob: -8.189346313476562

Token 35: '.parent' (ID: 17454)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.012747898697853088
    2. '.parent' → logprob: -4.387747764587402
    3. '.left' → logprob: -8.512747764587402
    4. ' .' → logprob: -11.387747764587402
    5. 'parent' → logprob: -12.012747764587402
    6. '.Parent' → logprob: -12.137747764587402
    7. '_parent' → logprob: -12.512747764587402
    8. '<|end|>' → logprob: -13.512747764587402
    9. '.right' → logprob: -13.637747764587402
    10. '.user' → logprob: -13.887747764587402

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12718279659748077
    2. '=' → logprob: -2.127182722091675
    3. '<|end|>' → logprob: -8.627182960510254
    4. ' ' → logprob: -10.252182960510254
    5. ' is' → logprob: -10.627182960510254
    6. ')' → logprob: -12.627182960510254
    7. '<|end|>' → logprob: -12.627182960510254
    8. ' =
' → logprob: -12.877182960510254
    9. ',' → logprob: -13.502182960510254
    10. '_' → logprob: -13.627182960510254

Token 37: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.1426871418952942
    2. 'parent' → logprob: -2.0176870822906494
    3. '	parent' → logprob: -12.14268684387207
    4. ' None' → logprob: -13.26768684387207
    5. '(parent' → logprob: -13.51768684387207
    6. ' ' → logprob: -13.89268684387207
    7. 'None' → logprob: -14.14268684387207
    8. '.parent' → logprob: -14.64268684387207
    9. ' ' → logprob: -15.01768684387207
    10. '[parent' → logprob: -15.26768684387207

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.028506146743893623
    2. '       ' → logprob: -4.278506278991699
    3. ' self' → logprob: -4.278506278991699
    4. '        ' → logprob: -8.2785062789917
    5. ' ' → logprob: -10.0285062789917
    6. ' ' → logprob: -11.0285062789917
    7. '	self' → logprob: -11.2785062789917
    8. 'left' → logprob: -11.5285062789917
    9. '   ' → logprob: -11.7785062789917
    10. '    ' → logprob: -12.0285062789917

Token 41: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.12704075872898102
    2. '.' → logprob: -2.1270408630371094
    3. ' .' → logprob: -9.87704086303711
    4. '.right' → logprob: -10.37704086303711
    5. 'left' → logprob: -11.00204086303711
    6. '.Left' → logprob: -12.37704086303711
    7. '.parent' → logprob: -12.75204086303711
    8. ' left' → logprob: -13.25204086303711
    9. '_left' → logprob: -13.75204086303711
    10. '.child' → logprob: -14.50204086303711

Token 42: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934884190559387
    2. ' =' → logprob: -0.6934884190559387
    3. '<|end|>' → logprob: -8.068488121032715
    4. '<|end|>' → logprob: -11.193488121032715
    5. ' ' → logprob: -12.443488121032715
    6. ')' → logprob: -12.568488121032715
    7. '=None' → logprob: -13.443488121032715
    8. ' =
' → logprob: -13.693488121032715
    9. ',' → logprob: -13.693488121032715
    10. ' =)' → logprob: -14.943488121032715

Token 43: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.3132658004760742
    2. 'left' → logprob: -1.3132658004760742
    3. ' None' → logprob: -13.313265800476074
    4. '	left' → logprob: -14.063265800476074
    5. ' lef' → logprob: -14.063265800476074
    6. 'None' → logprob: -15.188265800476074
    7. ' ' → logprob: -15.688265800476074
    8. '(left' → logprob: -16.31326675415039
    9. '.left' → logprob: -16.56326675415039
    10. ' ' → logprob: -16.68826675415039

Token 44: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.295742392539978
    2. '
' → logprob: -2.1707425117492676
    3. '<|end|>' → logprob: -2.5457425117492676
    4. 'self' → logprob: -3.4207425117492676
    5. ' 
' → logprob: -4.295742511749268
    6. '        
' → logprob: -5.045742511749268
    7. '```' → logprob: -6.045742511749268
    8. '    
' → logprob: -6.170742511749268
    9. '  
' → logprob: -6.670742511749268
    10. '   ' → logprob: -6.795742511749268

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27818718552589417
    2. '<|end|>' → logprob: -1.6531871557235718
    3. 'self' → logprob: -3.6531872749328613
    4. ' 
' → logprob: -5.278187274932861
    5. '        
' → logprob: -5.403187274932861
    6. '```' → logprob: -5.528187274932861
    7. '
' → logprob: -5.778187274932861
    8. '   ' → logprob: -6.528187274932861
    9. '<|end|>' → logprob: -6.528187274932861
    10. '    
' → logprob: -6.778187274932861

Token 46: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3339613080024719
    2. 'right' → logprob: -1.4589612483978271
    3. ' right' → logprob: -3.708961248397827
    4. ' self' → logprob: -3.708961248397827
    5. '       ' → logprob: -6.208961486816406
    6. '```' → logprob: -9.083961486816406
    7. '   ' → logprob: -9.833961486816406
    8. ' 
' → logprob: -10.083961486816406
    9. ' ' → logprob: -10.458961486816406
    10. '           ' → logprob: -10.833961486816406

Token 47: '.right' (ID: 17627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6324557065963745
    2. '.right' → logprob: -1.0074557065963745
    3. '.left' → logprob: -2.382455825805664
    4. '=' → logprob: -4.632455825805664
    5. ' =' → logprob: -7.257455825805664
    6. 'right' → logprob: -8.132455825805664
    7. ')' → logprob: -8.757455825805664
    8. '<|end|>' → logprob: -9.132455825805664
    9. 'left' → logprob: -9.632455825805664
    10. ' ' → logprob: -10.382455825805664

Token 48: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11318302899599075
    2. ' =' → logprob: -2.23818302154541
    3. '<|end|>' → logprob: -8.11318302154541
    4. ')' → logprob: -10.73818302154541
    5. '<|end|>' → logprob: -10.98818302154541
    6. '=
' → logprob: -11.98818302154541
    7. '=None' → logprob: -12.48818302154541
    8. ' ' → logprob: -12.61318302154541
    9. ' =
' → logprob: -12.73818302154541
    10. '   ' → logprob: -12.86318302154541

Token 49: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.3868767023086548
    2. 'right' → logprob: -1.1368767023086548
    3. '	right' → logprob: -12.886877059936523
    4. ' None' → logprob: -13.886877059936523
    5. 'None' → logprob: -14.636877059936523
    6. 'r' → logprob: -14.761877059936523
    7. '(right' → logprob: -15.136877059936523
    8. '[right' → logprob: -15.136877059936523
    9. ' ' → logprob: -15.261877059936523
    10. 'rig' → logprob: -15.761877059936523

Token 50: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5336405634880066
    2. '<|end|>' → logprob: -2.0336406230926514
    3. '
' → logprob: -2.1586406230926514
    4. ':' → logprob: -2.7836406230926514
    5. '\n' → logprob: -3.6586406230926514
    6. '    
' → logprob: -3.7836406230926514
    7. 'def' → logprob: -4.158640384674072
    8. ')' → logprob: -4.783640384674072
    9. ' ' → logprob: -5.158640384674072
    10. ',' → logprob: -5.533640384674072

Token 51: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34402701258659363
    2. '   ' → logprob: -1.594027042388916
    3. '<|end|>' → logprob: -3.469027042388916
    4. '\n' → logprob: -4.094027042388916
    5. 'def' → logprob: -4.469027042388916
    6. '    
' → logprob: -4.844027042388916
    7. ',' → logprob: -5.719027042388916
    8. ' ' → logprob: -5.844027042388916
    9. ' 
' → logprob: -6.469027042388916
    10. '

' → logprob: -6.719027042388916

Token 52: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9330978989601135
    2. '   ' → logprob: -1.4330978393554688
    3. '       ' → logprob: -1.9330978393554688
    4. 'def' → logprob: -2.4330978393554688
    5. '    
' → logprob: -3.1830978393554688
    6. '        
' → logprob: -3.5580978393554688
    7. '\n' → logprob: -3.8080978393554688
    8. ' 
' → logprob: -4.683097839355469
    9. '```' → logprob: -5.058097839355469
    10. 'newline' → logprob: -5.433097839355469

Token 53: '.height' (ID: 11682)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0018354683415964246
    2. '.is' → logprob: -6.501835346221924
    3. '.parent' → logprob: -8.876835823059082
    4. '.root' → logprob: -9.376835823059082
    5. ' .' → logprob: -10.126835823059082
    6. '.next' → logprob: -11.376835823059082
    7. '.children' → logprob: -12.001835823059082
    8. '.has' → logprob: -12.251835823059082
    9. '._' → logprob: -12.376835823059082
    10. '<|end|>' → logprob: -12.626835823059082

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07893330603837967
    2. '=' → logprob: -2.5789332389831543
    3. ' ' → logprob: -10.578933715820312
    4. '<|end|>' → logprob: -11.078933715820312
    5. ')' → logprob: -14.578933715820312
    6. ' =
' → logprob: -14.703933715820312
    7. '<|end|>' → logprob: -14.828933715820312
    8. '   ' → logprob: -15.203933715820312
    9. '_' → logprob: -15.453933715820312
    10. ' =)' → logprob: -15.828933715820312

Token 55: ' None' (ID: 4662)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3164743483066559
    2. ' ' → logprob: -1.6914743185043335
    3. '0' → logprob: -2.441474437713623
    4. '   ' → logprob: -12.441473960876465
    5. '-' → logprob: -14.253973960876465
    6. ' ' → logprob: -15.066473960876465
    7. ' -' → logprob: -15.191473960876465
    8. '  ' → logprob: -15.441473960876465
    9. '       ' → logprob: -16.37897491455078
    10. 'None' → logprob: -16.69147491455078

Token 56: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4315148890018463
    2. 'def' → logprob: -1.931514859199524
    3. ' def' → logprob: -2.4315149784088135
    4. ' ' → logprob: -3.4315149784088135
    5. '<|end|>' → logprob: -3.4315149784088135
    6. '
' → logprob: -3.5565149784088135
    7. ' 
' → logprob: -4.931514739990234
    8. '\' → logprob: -5.556514739990234
    9. '    
' → logprob: -5.931514739990234
    10. ',' → logprob: -5.931514739990234

Token 58: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13243761658668518
    2. '   ' → logprob: -3.2574377059936523
    3. ' def' → logprob: -3.7574377059936523
    4. '@property' → logprob: -3.8824377059936523
    5. '@' (adapté à ' @') → logprob: -4.382437705993652
    6. '
' → logprob: -4.882437705993652
    7. ' ' → logprob: -4.882437705993652
    8. ' 
' → logprob: -5.382437705993652
    9. 'd' → logprob: -5.757437705993652
    10. '    
' → logprob: -6.007437705993652

Token 59: 'classmethod' (ID: 64680)
  Prédit: 'property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.004788476508110762
    2. 'staticmethod' → logprob: -5.504788398742676
    3. 'classmethod' → logprob: -7.379788398742676
    4. 'pro' → logprob: -9.504788398742676
    5. 'proper' → logprob: -12.004788398742676
    6. 'prop' → logprob: -13.129788398742676
    7. 'pr' → logprob: -13.379788398742676
    8. '@property' → logprob: -14.004788398742676
    9. 'p' → logprob: -14.129788398742676
    10. 'static' → logprob: -16.379789352416992

Token 60: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.02229216694831848
    2. 'def' → logprob: -3.897292137145996
    3. '
' → logprob: -6.522292137145996
    4. ' 
' → logprob: -10.147292137145996
    5. '   ' → logprob: -10.272292137145996
    6. '(' → logprob: -10.397292137145996
    7. ' insert' → logprob: -10.647292137145996
    8. '    
' → logprob: -10.647292137145996
    9. '```' → logprob: -10.772292137145996
    10. '<|end|>' → logprob: -11.272292137145996

Token 61: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08926517516374588
    2. ' def' → logprob: -2.4642651081085205
    3. '
' → logprob: -8.089264869689941
    4. '   ' → logprob: -11.464264869689941
    5. '	def' → logprob: -13.089264869689941
    6. '```' → logprob: -13.464264869689941
    7. 'de' → logprob: -13.714264869689941
    8. 'root' → logprob: -14.339264869689941
    9. 's' → logprob: -14.589264869689941
    10. 'classmethod' → logprob: -15.089264869689941

Token 62: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.015380030497908592
    2. 'root' → logprob: -5.015379905700684
    3. 'set' → logprob: -5.265379905700684
    4. ' def' → logprob: -6.515379905700684
    5. 'get' → logprob: -6.890379905700684
    6. 'insert' → logprob: -7.890379905700684
    7. 'initialize' → logprob: -8.640379905700684
    8. 'create' → logprob: -9.140379905700684
    9. 's' → logprob: -10.015379905700684
    10. 'update' → logprob: -10.265379905700684

Token 63: ' insert' (ID: 10898)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.3518983721733093
    2. ' root' → logprob: -1.851898431777954
    3. ' create' → logprob: -2.851898431777954
    4. ' get' → logprob: -2.851898431777954
    5. ' initialize' → logprob: -4.476898193359375
    6. ' find' → logprob: -5.476898193359375
    7. ' insert' → logprob: -6.101898193359375
    8. 'set' → logprob: -6.226898193359375
    9. ' is' → logprob: -6.976898193359375
    10. ' from' → logprob: -7.351898193359375

Token 64: '(cls' (ID: 46446)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020261449739336967
    2. '(cls' → logprob: -4.020261287689209
    3. '(self' → logprob: -6.395261287689209
    4. ' (' → logprob: -8.145261764526367
    5. '(
' → logprob: -10.020261764526367
    6. '<|end|>' → logprob: -10.395261764526367
    7. ' ' → logprob: -11.770261764526367
    8. '(root' → logprob: -11.770261764526367
    9. '   ' → logprob: -12.020261764526367
    10. '(node' → logprob: -12.145261764526367

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002658773912116885
    2. ')' → logprob: -6.252658843994141
    3. ' ,' → logprob: -7.377658843994141
    4. 'self' → logprob: -10.87765884399414
    5. '(cls' → logprob: -11.12765884399414
    6. ',self' → logprob: -11.12765884399414
    7. ' )' → logprob: -11.37765884399414
    8. '<|end|>' → logprob: -12.12765884399414
    9. ',)' → logprob: -12.25265884399414
    10. ',node' → logprob: -12.25265884399414

Token 66: ' z' (ID: 579)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.20614217221736908
    2. ' root' → logprob: -2.3311421871185303
    3. 'key' → logprob: -3.3311421871185303
    4. ' cls' → logprob: -3.5811421871185303
    5. 'root' → logprob: -4.456141948699951
    6. ' node' → logprob: -4.831141948699951
    7. ' self' → logprob: -5.831141948699951
    8. 'node' → logprob: -6.831141948699951
    9. 'self' → logprob: -7.081141948699951
    10. 'cls' → logprob: -7.206141948699951

Token 67: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22739674150943756
    2. '):' → logprob: -1.6023967266082764
    3. ')' → logprob: -7.1023969650268555
    4. ' ):' → logprob: -7.2273969650268555
    5. ' ,' → logprob: -7.8523969650268555
    6. ':' → logprob: -10.852396965026855
    7. ',node' → logprob: -12.477396965026855
    8. ' ' → logprob: -12.977396965026855
    9. ' )' → logprob: -13.102396965026855
    10. ',parent' → logprob: -13.102396965026855

Token 68: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3022402822971344
    2. '):' → logprob: -1.552240252494812
    3. '       ' → logprob: -3.9272403717041016
    4. ')' → logprob: -4.052240371704102
    5. ' :' → logprob: -5.552240371704102
    6. ':
' → logprob: -6.177240371704102
    7. '   ' → logprob: -6.552240371704102
    8. ',' → logprob: -7.052240371704102
    9. ' ' → logprob: -7.177240371704102
    10. '):
' → logprob: -7.552240371704102

Token 69: ' y' (ID: 342)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.30663198232650757
    2. ' if' → logprob: -1.5566320419311523
    3. 'root' → logprob: -4.181632041931152
    4. 'node' → logprob: -4.306632041931152
    5. 'current' → logprob: -4.681632041931152
    6. '       ' → logprob: -5.931632041931152
    7. '        ' → logprob: -6.181632041931152
    8. ' node' → logprob: -6.431632041931152
    9. ' root' → logprob: -6.556632041931152
    10. '#' → logprob: -6.681632041931152

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003187459195032716
    2. '=' → logprob: -5.753187656402588
    3. ' ' → logprob: -11.62818717956543
    4. ',' → logprob: -15.12818717956543
    5. '=None' → logprob: -15.62818717956543
    6. ' =
' → logprob: -16.37818717956543
    7. ' =)' → logprob: -16.75318717956543
    8. '  ' → logprob: -17.00318717956543
    9. ')' → logprob: -17.12818717956543
    10. ' ,' → logprob: -17.37818717956543

Token 71: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.048654019832611084
    2. 'None' → logprob: -3.048654079437256
    3. ' cls' → logprob: -9.673653602600098
    4. 'cls' → logprob: -12.923653602600098
    5. ' ' → logprob: -14.173653602600098
    6. '   ' → logprob: -15.923653602600098
    7. ' N' → logprob: -16.673654556274414
    8. '=None' → logprob: -16.923654556274414
    9. ' none' → logprob: -16.923654556274414
    10. '_None' → logprob: -17.048654556274414

Token 72: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0071226307190954685
    2. ' x' → logprob: -5.00712251663208
    3. 'current' → logprob: -8.507122993469238
    4. '       ' → logprob: -9.382122993469238
    5. 'p' → logprob: -10.507122993469238
    6. ' current' → logprob: -10.757122993469238
    7. 'if' → logprob: -11.132122993469238
    8. 'node' → logprob: -11.507122993469238
    9. 'curr' → logprob: -11.507122993469238
    10. '   ' → logprob: -11.632122993469238

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001705175032839179
    2. '=' → logprob: -6.376705169677734
    3. ' ' → logprob: -13.126705169677734
    4. '<|end|>' → logprob: -14.126705169677734
    5. ' =
' → logprob: -16.876705169677734
    6. '<|end|>' → logprob: -17.126705169677734
    7. '.' → logprob: -17.376705169677734
    8. ',' → logprob: -17.626705169677734
    9. '    ' → logprob: -17.751705169677734
    10. ')' → logprob: -18.001705169677734

Token 76: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.07893595099449158
    2. ' cls' → logprob: -2.5789358615875244
    3. 'Node' → logprob: -10.203935623168945
    4. '(cls' → logprob: -12.703935623168945
    5. 'Cls' → logprob: -12.828935623168945
    6. ' Node' → logprob: -13.078935623168945
    7. 'classmethod' → logprob: -14.203935623168945
    8. '_cls' → logprob: -15.328935623168945
    9. '.cls' → logprob: -15.703935623168945
    10. ' ' → logprob: -16.703935623168945

Token 77: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.005994325038045645
    2. '.' → logprob: -5.1309943199157715
    3. '.ro' → logprob: -9.88099479675293
    4. 'root' → logprob: -11.63099479675293
    5. ' .' → logprob: -12.63099479675293
    6. '[root' → logprob: -13.75599479675293
    7. '.r' → logprob: -15.00599479675293
    8. ' root' → logprob: -15.75599479675293
    9. '	root' → logprob: -16.00599479675293
    10. '.Root' → logprob: -16.13099479675293

Token 78: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5871654748916626
    2. '
' → logprob: -1.7121654748916626
    3. '  
' → logprob: -2.712165355682373
    4. '<|end|>' → logprob: -2.837165355682373
    5. '\n' → logprob: -2.962165355682373
    6. ' ' → logprob: -3.962165355682373
    7. 'while' → logprob: -4.587165355682373
    8. '    
' → logprob: -4.587165355682373
    9. ' while' → logprob: -4.712165355682373
    10. '        
' → logprob: -4.712165355682373

Token 79: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5762007236480713
    2. ' 
' → logprob: -1.4512007236480713
    3. '<|end|>' → logprob: -2.3262007236480713
    4. ' ' → logprob: -3.4512007236480713
    5. '  
' → logprob: -3.5762007236480713
    6. '\n' → logprob: -4.076200485229492
    7. '        
' → logprob: -4.951200485229492
    8. '    
' → logprob: -5.201200485229492
    9. '<|end|>' → logprob: -5.951200485229492
    10. '       ' → logprob: -5.951200485229492

Token 80: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.465952605009079
    2. ' while' → logprob: -1.5909526348114014
    3. ' 
' → logprob: -2.5909526348114014
    4. ' ' → logprob: -2.7159526348114014
    5. '
' → logprob: -4.465952396392822
    6. '<|end|>' → logprob: -5.465952396392822
    7. '	while' → logprob: -5.840952396392822
    8. '  
' → logprob: -5.840952396392822
    9. 'wh' → logprob: -7.340952396392822
    10. 'w' → logprob: -7.465952396392822

Token 81: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.03804229199886322
    2. 'x' → logprob: -3.2880423069000244
    3. '	x' → logprob: -14.163042068481445
    4. '(x' → logprob: -15.788042068481445
    5. ' ' → logprob: -17.913042068481445
    6. ')x' → logprob: -18.913042068481445
    7. ' ' → logprob: -19.663042068481445
    8. '    ' → logprob: -20.413042068481445
    9. '>x' → logprob: -20.538042068481445
    10. ' (' → logprob: -20.663042068481445

Token 82: ' !=' (ID: 1666)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0012038042768836021
    2. ' and' → logprob: -7.501204013824463
    3. 'is' → logprob: -7.626204013824463
    4. ' !=' → logprob: -9.126203536987305
    5. ':' → logprob: -11.126203536987305
    6. 'and' → logprob: -11.251203536987305
    7. '!=' → logprob: -11.251203536987305
    8. ' ' → logprob: -12.376203536987305
    9. ' isn't' → logprob: -12.876203536987305
    10. ' not' → logprob: -13.001203536987305

Token 83: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.31326326727867126
    2. ' None' → logprob: -1.3132632970809937
    3. ' ' → logprob: -13.938262939453125
    4. '_None' → logprob: -14.938262939453125
    5. '=None' → logprob: -15.688262939453125
    6. '   ' → logprob: -17.063262939453125
    7. 'N' → logprob: -17.438262939453125
    8. 'none' → logprob: -17.688262939453125
    9. ',None' → logprob: -17.688262939453125
    10. '  ' → logprob: -17.688262939453125

Token 84: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025528310798108578
    2. ' and' → logprob: -6.5025529861450195
    3. '<|end|>' → logprob: -7.7525529861450195
    4. ' :' → logprob: -8.37755298614502
    5. ':
' → logprob: -8.87755298614502
    6. '):' → logprob: -9.00255298614502
    7. 'and' → logprob: -10.12755298614502
    8. ')' → logprob: -10.75255298614502
    9. '<|end|>' → logprob: -11.00255298614502
    10. '       ' → logprob: -11.12755298614502

Token 85: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20377665758132935
    2. ':' → logprob: -2.4537765979766846
    3. '<|end|>' → logprob: -3.0787765979766846
    4. '        ' → logprob: -4.203776836395264
    5. ' :' → logprob: -4.578776836395264
    6. '       ' → logprob: -4.703776836395264
    7. ' 
' → logprob: -5.328776836395264
    8. '  ' → logprob: -6.203776836395264
    9. '<|end|>' → logprob: -6.453776836395264
    10. '
' → logprob: -6.578776836395264

Token 86: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48037463426589966
    2. ' 
' → logprob: -1.6053745746612549
    3. ':' → logprob: -3.105374574661255
    4. '
' → logprob: -3.480374574661255
    5. '<|end|>' → logprob: -3.480374574661255
    6. '  
' → logprob: -4.105374813079834
    7. '       ' → logprob: -4.230374813079834
    8. '\n' → logprob: -4.355374813079834
    9. '        ' → logprob: -5.355374813079834
    10. '  ' → logprob: -5.855374813079834

Token 87: ' root' (ID: 6577)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12659037113189697
    2. ' 
' → logprob: -3.7515902519226074
    3. ':' → logprob: -4.001590251922607
    4. '<|end|>' → logprob: -4.001590251922607
    5. '    ' → logprob: -4.751590251922607
    6. '        ' → logprob: -4.876590251922607
    7. '       ' → logprob: -4.876590251922607
    8. '
' → logprob: -5.001590251922607
    9. '  ' → logprob: -5.501590251922607
    10. '  
' → logprob: -5.751590251922607

Token 88: '????????' (ID: 85218)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5264060497283936
    2. ':' → logprob: -1.1514060497283936
    3. '<|end|>' → logprob: -3.0264060497283936
    4. ' :' → logprob: -4.651406288146973
    5. '    ' → logprob: -5.026406288146973
    6. '       ' → logprob: -5.526406288146973
    7. '  ' → logprob: -5.776406288146973
    8. '.' → logprob: -5.776406288146973
    9. ')' → logprob: -5.776406288146973
    10. ' and' → logprob: -6.026406288146973

Token 89: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: '????????' (ID: 85218)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07114075869321823
    2. '<|end|>' → logprob: -2.946140766143799
    3. ':' → logprob: -5.821140766143799
    4. '.' → logprob: -5.946140766143799
    5. '    ' → logprob: -6.196140766143799
    6. ',' → logprob: -6.321140766143799
    7. ' and' → logprob: -6.321140766143799
    8. '  ' → logprob: -6.446140766143799
    9. '        ' → logprob: -7.446140766143799
    10. ')' → logprob: -7.821140766143799

Token 91: '???' (ID: 33110)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14089392125606537
    2. '<|end|>' → logprob: -2.8908939361572266
    3. '.' → logprob: -3.2658939361572266
    4. ' and' → logprob: -4.515893936157227
    5. ':' → logprob: -4.890893936157227
    6. '    ' → logprob: -5.265893936157227
    7. '  ' → logprob: -5.765893936157227
    8. ',' → logprob: -6.265893936157227
    9. '        ' → logprob: -6.640893936157227
    10. ' :' → logprob: -6.765893936157227

Token 92: 'y' (ID: 88)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: '????????' (ID: 85218)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2544690668582916
    2. ' =' → logprob: -1.5044690370559692
    3. '=y' → logprob: -6.37946891784668
    4. '=x' → logprob: -7.75446891784668
    5. ' ' → logprob: -8.25446891784668
    6. ',' → logprob: -9.62946891784668
    7. '=z' → logprob: -9.87946891784668
    8. '=
' → logprob: -11.62946891784668
    9. ' =
' → logprob: -12.12946891784668
    10. '=

' → logprob: -12.62946891784668

Token 94: '\' (ID: 59)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1421034038066864
    2. ' =' → logprob: -2.642103433609009
    3. ' ' → logprob: -4.01710319519043
    4. ':' → logprob: -4.14210319519043
    5. '<|end|>' → logprob: -4.14210319519043
    6. '=y' → logprob: -5.76710319519043
    7. 'y' → logprob: -6.14210319519043
    8. ')' → logprob: -6.64210319519043
    9. ',' → logprob: -7.01710319519043
    10. '
' → logprob: -7.64210319519043

Token 95: '????????' (ID: 85218)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33317574858665466
    2. ' ' → logprob: -2.5831756591796875
    3. 'x' → logprob: -2.7081756591796875
    4. ' =' → logprob: -3.0831756591796875
    5. ' x' → logprob: -3.4581756591796875
    6. ',' → logprob: -4.4581756591796875
    7. '=x' → logprob: -4.5831756591796875
    8. '<|end|>' → logprob: -4.8331756591796875
    9. 'y' → logprob: -5.0831756591796875
    10. '    ' → logprob: -5.4581756591796875

Token 96: '????????' (ID: 85218)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2726022005081177
    2. ' ' → logprob: -1.3976022005081177
    3. '=' → logprob: -1.5226022005081177
    4. '<|end|>' → logprob: -2.022602081298828
    5. ' =' → logprob: -3.022602081298828
    6. ' :' → logprob: -3.522602081298828
    7. ',' → logprob: -5.022602081298828
    8. ' and' → logprob: -5.022602081298828
    9. 'and' → logprob: -5.147602081298828
    10. ')' → logprob: -5.397602081298828

Token 97: '????' (ID: 25883)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: '¨' (ID: 64259)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: '???' (ID: 33110)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: '§' (ID: 18596)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: '??' (ID: 6961)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6418612599372864
    2. ' ' → logprob: -1.0168612003326416
    3. '<|end|>' → logprob: -3.2668612003326416
    4. ' :' → logprob: -3.3918612003326416
    5. '.' → logprob: -4.391861438751221
    6. '=' → logprob: -4.641861438751221
    7. ')' → logprob: -5.141861438751221
    8. ',' → logprob: -6.266861438751221
    9. '  ' → logprob: -6.391861438751221
    10. '<|end|>' → logprob: -6.641861438751221

Token 103: '¨' (ID: 64259)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7670366168022156
    2. ' ' → logprob: -0.8920366168022156
    3. '<|end|>' → logprob: -3.1420366764068604
    4. ' :' → logprob: -3.2670366764068604
    5. '=' → logprob: -4.267036437988281
    6. '.' → logprob: -4.517036437988281
    7. ')' → logprob: -5.017036437988281
    8. ',' → logprob: -6.267036437988281
    9. '  ' → logprob: -6.267036437988281
    10. ' and' → logprob: -6.767036437988281

Token 104: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: '???' (ID: 33110)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: '?
' (ID: 3901)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47065624594688416
    2. ' ' → logprob: -1.3456562757492065
    3. ' :' → logprob: -3.220656156539917
    4. '<|end|>' → logprob: -3.470656156539917
    5. '.' → logprob: -4.095656394958496
    6. '=' → logprob: -4.595656394958496
    7. ')' → logprob: -5.470656394958496
    8. ',' → logprob: -6.095656394958496
    9. '  ' → logprob: -6.220656394958496
    10. ' and' → logprob: -6.595656394958496

Token 107: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5694603323936462
    2. ':' → logprob: -1.444460391998291
    3. '<|end|>' → logprob: -2.319460391998291
    4. '        ' → logprob: -3.569460391998291
    5. ' :' → logprob: -3.694460391998291
    6. '
' → logprob: -3.944460391998291
    7. ' 
' → logprob: -5.319460391998291
    8. '       ' → logprob: -5.444460391998291
    9. '  ' → logprob: -5.569460391998291
    10. ':
' → logprob: -6.069460391998291

Token 108: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07797697186470032
    2. 'y' (adapté à ' y') → logprob: -3.702976942062378
    3. '        ' → logprob: -3.827976942062378
    4. 'if' → logprob: -5.202977180480957
    5. ' y' → logprob: -5.327977180480957
    6. '<|end|>' → logprob: -5.952977180480957
    7. ' if' → logprob: -6.077977180480957
    8. ' 
' → logprob: -6.077977180480957
    9. '  ' → logprob: -6.577977180480957
    10. ')' → logprob: -6.702977180480957

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14268197119235992
    2. '=' → logprob: -2.0176820755004883
    3. '=x' → logprob: -12.767682075500488
    4. ' ' → logprob: -13.517682075500488
    5. 'x' → logprob: -14.767682075500488
    6. ',' → logprob: -14.767682075500488
    7. ' =
' → logprob: -15.017682075500488
    8. '＝' → logprob: -15.142682075500488
    9. '=y' → logprob: -15.392682075500488
    10. '=z' → logprob: -15.892682075500488

Token 110: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5759506821632385
    2. 'x' → logprob: -0.8259506821632385
    3. ' ' → logprob: -12.325950622558594
    4. '<|end|>' → logprob: -12.825950622558594
    5. '	x' → logprob: -13.200950622558594
    6. ' ' → logprob: -13.200950622558594
    7. ')x' → logprob: -15.325950622558594
    8. '<|end|>' → logprob: -17.075950622558594
    9. ',x' → logprob: -17.325950622558594
    10. ' 
' → logprob: -17.575950622558594

Token 111: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.1455160528421402
    2. '
' → logprob: -2.5205161571502686
    3. ' ' → logprob: -3.1455161571502686
    4. '<|end|>' → logprob: -5.3955159187316895
    5. '  
' → logprob: -5.5205159187316895
    6. '    
' → logprob: -7.1455159187316895
    7. '<|end|>' → logprob: -7.1455159187316895
    8. '   
' → logprob: -7.7705159187316895
    9. ' if' → logprob: -8.270516395568848
    10. '
' → logprob: -8.895516395568848

Token 112: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5544623732566833
    2. ' ' → logprob: -1.4294624328613281
    3. '
' → logprob: -2.054462432861328
    4. '<|end|>' → logprob: -3.804462432861328
    5. '  
' → logprob: -5.179462432861328
    6. '       ' → logprob: -5.179462432861328
    7. '        
' → logprob: -5.304462432861328
    8. '    
' → logprob: -5.554462432861328
    9. '        ' → logprob: -6.179462432861328
    10. '    ' → logprob: -6.304462432861328

Token 113: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5251874327659607
    2. ' if' → logprob: -1.0251874923706055
    3. 'x' → logprob: -3.7751874923706055
    4. ' ' → logprob: -4.5251874923706055
    5. 'z' → logprob: -5.0251874923706055
    6. '    ' → logprob: -5.7751874923706055
    7. ' z' → logprob: -6.0251874923706055
    8. ' x' → logprob: -6.0251874923706055
    9. '            ' → logprob: -7.6501874923706055
    10. '        ' → logprob: -7.7751874923706055

Token 114: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.5759810209274292
    2. 'z' → logprob: -0.8259810209274292
    3. '	z' → logprob: -11.325981140136719
    4. '    ' → logprob: -11.575981140136719
    5. ' ' → logprob: -11.950981140136719
    6. 'x' → logprob: -12.325981140136719
    7. ' ' → logprob: -12.700981140136719
    8. '           ' → logprob: -13.575981140136719
    9. ' x' → logprob: -13.825981140136719
    10. '   ' → logprob: -13.825981140136719

Token 115: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.00038693982060067356
    2. '.' → logprob: -7.875386714935303
    3. 'key' → logprob: -12.875387191772461
    4. ' key' → logprob: -13.875387191772461
    5. ' .' → logprob: -14.250387191772461
    6. '.<' → logprob: -14.500387191772461
    7. '.
' → logprob: -15.125387191772461
    8. '	key' → logprob: -15.125387191772461
    9. '.Key' → logprob: -15.375387191772461
    10. '[key' → logprob: -16.00038719177246

Token 116: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01144447736442089
    2. ' >' → logprob: -4.636444568634033
    3. '<' → logprob: -6.886444568634033
    4. ' ' → logprob: -7.511444568634033
    5. '<|end|>' → logprob: -9.761444091796875
    6. '>' → logprob: -10.886444091796875
    7. '  ' → logprob: -11.386444091796875
    8. ' <=' → logprob: -11.636444091796875
    9. ' >=' → logprob: -11.886444091796875
    10. ' <",' → logprob: -12.761444091796875

Token 117: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20141851902008057
    2. 'x' → logprob: -1.7014185190200806
    3. '	x' → logprob: -13.32641887664795
    4. '<|end|>' → logprob: -13.82641887664795
    5. ' ' → logprob: -13.95141887664795
    6. ')x' → logprob: -14.32641887664795
    7. ' ' → logprob: -14.70141887664795
    8. '(x' → logprob: -15.45141887664795
    9. '>x' → logprob: -16.451417922973633
    10. ')' → logprob: -16.701417922973633

Token 118: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.0005597044946625829
    2. '.' → logprob: -7.5005598068237305
    3. ' .' → logprob: -12.25055980682373
    4. 'key' → logprob: -14.12555980682373
    5. ' key' → logprob: -15.25055980682373
    6. '	key' → logprob: -15.87555980682373
    7. '`.' → logprob: -16.250558853149414
    8. ').' → logprob: -16.500558853149414
    9. '.Key' → logprob: -16.625558853149414
    10. ''.' → logprob: -16.750558853149414

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026469239965081215
    2. '<|end|>' → logprob: -4.0264692306518555
    3. ':
' → logprob: -5.1514692306518555
    4. '           ' → logprob: -7.2764692306518555
    5. '               ' → logprob: -7.5264692306518555
    6. ' :' → logprob: -7.9014692306518555
    7. ')' → logprob: -8.276469230651855
    8. '<|end|>' → logprob: -8.401469230651855
    9. ' ' → logprob: -9.026469230651855
    10. '):' → logprob: -9.776469230651855

Token 120: '               ' (ID: 506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17053599655628204
    2. ':' → logprob: -3.1705360412597656
    3. '<|end|>' → logprob: -3.5455360412597656
    4. ' 
' → logprob: -3.9205360412597656
    5. ' :' → logprob: -4.170536041259766
    6. '           ' → logprob: -4.420536041259766
    7. '               ' → logprob: -4.670536041259766
    8. '            ' → logprob: -4.795536041259766
    9. ' x' → logprob: -5.295536041259766
    10. ')' → logprob: -5.670536041259766

Token 121: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.44135865569114685
    2. 'x' (adapté à ' x') → logprob: -1.0663586854934692
    3. ' ' → logprob: -4.56635856628418
    4. ' 
' → logprob: -6.31635856628418
    5. '            ' → logprob: -9.31635856628418
    6. ' ' → logprob: -9.56635856628418
    7. '<|end|>' → logprob: -10.31635856628418
    8. '                
' → logprob: -10.44135856628418
    9. '               ' → logprob: -10.56635856628418
    10. '                ' → logprob: -10.69135856628418

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004081959370523691
    2. '=' → logprob: -5.504081726074219
    3. '.' → logprob: -13.254081726074219
    4. ' ' → logprob: -13.504081726074219
    5. ' =
' → logprob: -15.629081726074219
    6. ' ' → logprob: -16.25408172607422
    7. '.left' → logprob: -16.50408172607422
    8. '.=' → logprob: -16.87908172607422
    9. '	' → logprob: -17.12908172607422
    10. '<|end|>' → logprob: -17.37908172607422

Token 123: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06197149679064751
    2. 'x' → logprob: -2.811971426010132
    3. ' ' → logprob: -12.936971664428711
    4. '	x' → logprob: -13.686971664428711
    5. ' ' → logprob: -15.936971664428711
    6. '(x' → logprob: -16.93697166442871
    7. ')x' → logprob: -16.93697166442871
    8. ' left' → logprob: -17.18697166442871
    9. 'left' → logprob: -17.93697166442871
    10. ' 
' → logprob: -18.81197166442871

Token 124: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.006723183207213879
    2. '.' → logprob: -5.006723403930664
    3. '.right' → logprob: -12.131723403930664
    4. ' .' → logprob: -13.131723403930664
    5. '.Left' → logprob: -15.006723403930664
    6. '.le' → logprob: -18.006723403930664
    7. 'left' → logprob: -18.631723403930664
    8. '.parent' → logprob: -18.756723403930664
    9. '.space' → logprob: -19.256723403930664
    10. '.l' → logprob: -19.631723403930664

Token 125: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8588297367095947
    2. 'else' → logprob: -1.2338297367095947
    3. '           ' → logprob: -1.3588297367095947
    4. '
' → logprob: -4.233829498291016
    5. ' 
' → logprob: -5.233829498291016
    6. '            
' → logprob: -5.858829498291016
    7. 'elif' → logprob: -6.358829498291016
    8. '       ' → logprob: -6.608829498291016
    9. '<|end|>' → logprob: -7.483829498291016
    10. '  
' → logprob: -7.983829498291016

Token 126: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4042039215564728
    2. ' else' → logprob: -1.1542038917541504
    3. '       ' → logprob: -5.02920389175415
    4. '
' → logprob: -5.52920389175415
    5. '           ' → logprob: -6.15420389175415
    6. '<|end|>' → logprob: -6.40420389175415
    7. 'elif' → logprob: -6.77920389175415
    8. ' 
' → logprob: -7.52920389175415
    9. '            
' → logprob: -8.154204368591309
    10. '	else' → logprob: -8.279204368591309

Token 127: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.313328355550766
    2. 'else' (adapté à ' else') → logprob: -1.3133283853530884
    3. '	else' → logprob: -10.063328742980957
    4. 'elif' → logprob: -11.688328742980957
    5. ' elif' → logprob: -12.563328742980957
    6. ' ' → logprob: -12.688328742980957
    7. '_else' → logprob: -12.813328742980957
    8. '       ' → logprob: -13.188328742980957
    9. '           ' → logprob: -13.813328742980957
    10. ')' → logprob: -14.438328742980957

Token 128: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5852263569831848
    2. ':' → logprob: -0.8352263569831848
    3. ':
' → logprob: -5.835226535797119
    4. '           ' → logprob: -5.835226535797119
    5. '<|end|>' → logprob: -6.960226535797119
    6. ' x' → logprob: -7.335226535797119
    7. '                ' → logprob: -7.460226535797119
    8. '            ' → logprob: -8.085226058959961
    9. ' :' → logprob: -8.835226058959961
    10. '                   ' → logprob: -8.960226058959961

Token 129: '               ' (ID: 506)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.005915761925280094
    2. '               ' → logprob: -5.630915641784668
    3. 'x' → logprob: -6.130915641784668
    4. '           ' → logprob: -9.380915641784668
    5. ' ' → logprob: -10.630915641784668
    6. '            ' → logprob: -11.255915641784668
    7. '                ' → logprob: -12.005915641784668
    8. ' ' → logprob: -12.380915641784668
    9. ' 
' → logprob: -13.380915641784668
    10. '	x' → logprob: -13.880915641784668

Token 130: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5759415626525879
    2. 'x' (adapté à ' x') → logprob: -0.8259415626525879
    3. '               ' → logprob: -13.32594108581543
    4. '	x' → logprob: -15.32594108581543
    5. '                ' → logprob: -15.95094108581543
    6. ' ' → logprob: -16.45094108581543
    7. '           ' → logprob: -17.82594108581543
    8. '                   ' → logprob: -17.82594108581543
    9. ' ' → logprob: -18.70094108581543
    10. ' 
' → logprob: -19.20094108581543

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975083328783512
    2. '=' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.65475082397461
    4. '.' → logprob: -16.90475082397461
    5. ')' → logprob: -17.52975082397461
    6. ':' → logprob: -17.65475082397461
    7. ' ' → logprob: -17.90475082397461
    8. '.right' → logprob: -17.90475082397461
    9. '＝' → logprob: -18.90475082397461
    10. '	' → logprob: -19.52975082397461

Token 132: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0788913294672966
    2. 'x' → logprob: -2.5788912773132324
    3. '	x' → logprob: -13.70389175415039
    4. ' ' → logprob: -15.45389175415039
    5. ' ' → logprob: -16.45389175415039
    6. 'right' → logprob: -17.70389175415039
    7. ')x' → logprob: -17.70389175415039
    8. ' right' → logprob: -18.70389175415039
    9. '(x' → logprob: -18.82889175415039
    10. 'None' → logprob: -18.95389175415039

Token 133: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.014173625037074089
    2. '.' → logprob: -4.26417350769043
    3. ' .' → logprob: -11.88917350769043
    4. '.left' → logprob: -13.13917350769043
    5. '.Right' → logprob: -14.51417350769043
    6. '	right' → logprob: -15.38917350769043
    7. '​.' → logprob: -15.51417350769043
    8. ' ' → logprob: -16.01417350769043
    9. 'right' → logprob: -16.38917350769043
    10. '.RIGHT' → logprob: -17.01417350769043

Token 134: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03788241371512413
    2. ' 
' → logprob: -3.5378823280334473
    3. '\n' → logprob: -6.412882328033447
    4. '  
' → logprob: -6.412882328033447
    5. '        
' → logprob: -6.537882328033447
    6. '       ' → logprob: -6.787882328033447
    7. '    
' → logprob: -7.287882328033447
    8. '
' → logprob: -7.412882328033447
    9. '<|end|>' → logprob: -7.787882328033447
    10. '' → logprob: -9.412882804870605

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7832006812095642
    2. ' 
' → logprob: -0.9082006812095642
    3. '
' → logprob: -2.908200740814209
    4. '        
' → logprob: -3.783200740814209
    5. '  
' → logprob: -4.033200740814209
    6. ' ' → logprob: -4.533200740814209
    7. '<|end|>' → logprob: -4.908200740814209
    8. '```' → logprob: -5.533200740814209
    9. ')' → logprob: -5.658200740814209
    10. '\n' → logprob: -6.033200740814209

Token 136: ' #' (ID: 1069)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.9068867564201355
    2. '       ' → logprob: -1.2818868160247803
    3. ' z' → logprob: -2.4068868160247803
    4. '
' → logprob: -2.6568868160247803
    5. ')' → logprob: -3.1568868160247803
    6. ' 
' → logprob: -3.2818868160247803
    7. '        
' → logprob: -3.9068868160247803
    8. '        ' → logprob: -4.531886577606201
    9. 'if' → logprob: -4.656886577606201
    10. '<|end|>' → logprob: -5.031886577606201

Token 137: ' ?????' (ID: 149222)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.23466412723064423
    2. ' z' → logprob: -1.7346640825271606
    3. '       ' → logprob: -4.484663963317871
    4. ' if' → logprob: -4.609663963317871
    5. 'if' → logprob: -4.984663963317871
    6. '        ' → logprob: -6.359663963317871
    7. '        
' → logprob: -7.109663963317871
    8. '   ' → logprob: -7.859663963317871
    9. ' ' → logprob: -8.234663963317871
    10. ' 
' → logprob: -8.359663963317871

Token 138: '\' (ID: 59)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5668648481369019
    2. 'z' → logprob: -1.9418648481369019
    3. ' z' → logprob: -2.0668649673461914
    4. 'if' → logprob: -2.3168649673461914
    5. '       ' → logprob: -2.8168649673461914
    6. '   ' → logprob: -6.816864967346191
    7. '        ' → logprob: -7.066864967346191
    8. ' ' → logprob: -7.816864967346191
    9. '        
' → logprob: -7.816864967346191
    10. '    ' → logprob: -8.066864967346191

Token 139: '????' (ID: 25883)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' z' → logprob: -1.1767613887786865
    2. 'z' → logprob: -1.4267613887786865
    3. '       ' → logprob: -1.6767613887786865
    4. ' if' → logprob: -1.8017613887786865
    5. '        ' → logprob: -3.4267613887786865
    6. 'if' → logprob: -3.6767613887786865
    7. ' ' → logprob: -4.551761627197266
    8. '   ' → logprob: -5.051761627197266
    9. ' 
' → logprob: -5.426761627197266
    10. '
' → logprob: -5.551761627197266

Token 140: '?' (ID: 30)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.4385603964328766
    2. ' z' → logprob: -1.3135603666305542
    3. '       ' → logprob: -2.8135604858398438
    4. '   ' → logprob: -5.063560485839844
    5. 'if' → logprob: -5.313560485839844
    6. '
' → logprob: -5.438560485839844
    7. ' if' → logprob: -5.438560485839844
    8. ' ' → logprob: -6.188560485839844
    9. '    ' → logprob: -6.938560485839844
    10. '        
' → logprob: -7.063560485839844

Token 141: '¨' (ID: 64259)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.5591838955879211
    2. ' z' → logprob: -2.0591838359832764
    3. '       ' → logprob: -2.0591838359832764
    4. 'if' → logprob: -2.5591838359832764
    5. ' if' → logprob: -2.8091838359832764
    6. '
' → logprob: -4.5591840744018555
    7. '   ' → logprob: -4.5591840744018555
    8. ' ' → logprob: -5.4341840744018555
    9. '        
' → logprob: -6.0591840744018555
    10. ' 
' → logprob: -6.3091840744018555

Token 142: '????????' (ID: 85218)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.791170060634613
    2. ' z' → logprob: -1.1661701202392578
    3. '       ' → logprob: -1.6661701202392578
    4. ' if' → logprob: -3.916170120239258
    5. '   ' → logprob: -4.666170120239258
    6. 'if' → logprob: -4.791170120239258
    7. '
' → logprob: -6.041170120239258
    8. ' ' → logprob: -6.291170120239258
    9. '    ' → logprob: -6.791170120239258
    10. '        
' → logprob: -6.916170120239258

Token 143: '????????' (ID: 85218)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.7270690202713013
    2. ' z' → logprob: -1.2270690202713013
    3. ' if' → logprob: -1.9770690202713013
    4. '       ' → logprob: -3.1020689010620117
    5. 'if' → logprob: -3.3520689010620117
    6. '   ' → logprob: -6.102068901062012
    7. ' ' → logprob: -7.727068901062012
    8. '
' → logprob: -7.727068901062012
    9. '        
' → logprob: -7.852068901062012
    10. '        ' → logprob: -8.102068901062012

Token 144: '????????' (ID: 85218)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.7203529477119446
    2. ' z' → logprob: -1.3453528881072998
    3. '       ' → logprob: -2.2203528881073
    4. ' if' → logprob: -2.4703528881073
    5. 'if' → logprob: -3.0953528881073
    6. '   ' → logprob: -5.595353126525879
    7. '        
' → logprob: -6.095353126525879
    8. '        ' → logprob: -6.095353126525879
    9. '
' → logprob: -6.220353126525879
    10. ' ' → logprob: -6.845353126525879

Token 145: '?' (ID: 30)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9353508353233337
    2. '       ' → logprob: -1.4353508949279785
    3. 'z' → logprob: -1.8103508949279785
    4. 'if' → logprob: -2.5603508949279785
    5. ' z' → logprob: -3.1853508949279785
    6. '        ' → logprob: -3.1853508949279785
    7. '        
' → logprob: -4.9353508949279785
    8. ' 
' → logprob: -4.9353508949279785
    9. ')' → logprob: -5.1853508949279785
    10. ' ' → logprob: -5.3103508949279785

Token 146: '¨' (ID: 64259)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: '????????' (ID: 85218)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.8444535732269287
    2. ' if' → logprob: -1.4694535732269287
    3. '       ' → logprob: -1.9694535732269287
    4. ' z' → logprob: -2.2194535732269287
    5. 'if' → logprob: -3.0944535732269287
    6. '        ' → logprob: -4.219453811645508
    7. ' 
' → logprob: -4.844453811645508
    8. '
' → logprob: -5.094453811645508
    9. '        
' → logprob: -5.219453811645508
    10. ' ' → logprob: -5.844453811645508

Token 148: '??
' (ID: 108055)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8637776970863342
    2. 'z' → logprob: -1.2387776374816895
    3. '       ' → logprob: -2.2387776374816895
    4. ' z' → logprob: -2.4887776374816895
    5. 'if' → logprob: -2.6137776374816895
    6. '        ' → logprob: -4.4887776374816895
    7. ' 
' → logprob: -5.8637776374816895
    8. ' ' → logprob: -5.9887776374816895
    9. '        
' → logprob: -5.9887776374816895
    10. '   ' → logprob: -6.2387776374816895

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0444530248641968
    2. '<|end|>' → logprob: -1.2944530248641968
    3. ' 
' → logprob: -1.7944530248641968
    4. '        ' → logprob: -2.5444531440734863
    5. '        
' → logprob: -3.2944531440734863
    6. '
' → logprob: -4.044453144073486
    7. ' ' → logprob: -4.044453144073486
    8. 'z' → logprob: -4.544453144073486
    9. '  
' → logprob: -5.044453144073486
    10. ')' → logprob: -5.044453144073486

Token 150: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' (adapté à ' z') → logprob: -1.0985395908355713
    2. 'if' → logprob: -1.0985395908355713
    3. ' if' → logprob: -1.7235395908355713
    4. '       ' → logprob: -2.2235395908355713
    5. ' z' → logprob: -3.0985395908355713
    6. '   ' → logprob: -7.098539352416992
    7. '        ' → logprob: -8.848539352416992
    8. ' ' → logprob: -8.973539352416992
    9. '    ' → logprob: -9.098539352416992
    10. '        
' → logprob: -9.598539352416992

Token 151: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0002353640884393826
    2. '.' → logprob: -8.375235557556152
    3. ' .' → logprob: -13.125235557556152
    4. '.Parent' → logprob: -14.250235557556152
    5. 'parent' → logprob: -14.875235557556152
    6. '.parents' → logprob: -14.875235557556152
    7. '.root' → logprob: -15.000235557556152
    8. ').' → logprob: -16.125234603881836
    9. '.par' → logprob: -16.250234603881836
    10. '.p' → logprob: -16.375234603881836

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132690191268921
    2. ' =' → logprob: -1.313269019126892
    3. '=y' → logprob: -12.688268661499023
    4. ' ' → logprob: -13.938268661499023
    5. ')' → logprob: -13.938268661499023
    6. '＝' → logprob: -14.063268661499023
    7. '<|end|>' → logprob: -14.313268661499023
    8. '=z' → logprob: -15.188268661499023
    9. ',' → logprob: -16.313268661499023
    10. '=

' → logprob: -16.313268661499023

Token 153: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3132631778717041
    2. 'y' → logprob: -1.313263177871704
    3. ' ' → logprob: -13.938262939453125
    4. '	y' → logprob: -14.813262939453125
    5. ')y' → logprob: -16.813262939453125
    6. ' ' → logprob: -17.188262939453125
    7. ''y' → logprob: -17.313262939453125
    8. '[y' → logprob: -18.188262939453125
    9. '@y' → logprob: -18.563262939453125
    10. ')' → logprob: -18.688262939453125

Token 154: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.415233314037323
    2. '<|end|>' → logprob: -1.4152333736419678
    3. ' if' → logprob: -2.6652333736419678
    4. '       ' → logprob: -4.165233135223389
    5. 'if' → logprob: -5.290233135223389
    6. ' 
' → logprob: -6.165233135223389
    7. '<|end|>' → logprob: -6.790233135223389
    8. '        
' → logprob: -7.540233135223389
    9. ' ' → logprob: -7.665233135223389
    10. ';if' → logprob: -8.040233612060547

Token 155: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001691727084107697
    2. ' if' → logprob: -6.501691818237305
    3. '       ' → logprob: -8.751691818237305
    4. 'If' → logprob: -11.126691818237305
    5. '```' → logprob: -11.751691818237305
    6. ';if' → logprob: -13.001691818237305
    7. '
' → logprob: -13.376691818237305
    8. '	if' → logprob: -13.376691818237305
    9. '        ' → logprob: -14.126691818237305
    10. '<|end|>' → logprob: -14.376691818237305

Token 157: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2519318461418152
    2. ' y' → logprob: -1.50193190574646
    3. '   ' → logprob: -14.001932144165039
    4. 'z' → logprob: -14.876932144165039
    5. '	y' → logprob: -14.876932144165039
    6. ' ' → logprob: -15.126932144165039
    7. '(y' → logprob: -15.501932144165039
    8. '    ' → logprob: -15.501932144165039
    9. '  ' → logprob: -15.751932144165039
    10. '       ' → logprob: -16.50193214416504

Token 158: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.04861303046345711
    2. 'is' → logprob: -3.5486130714416504
    3. ' ==' → logprob: -4.67361307144165
    4. '==' → logprob: -4.67361307144165
    5. ' ' → logprob: -12.798612594604492
    6. '=' → logprob: -13.298612594604492
    7. '	is' → logprob: -14.298612594604492
    8. '.is' → logprob: -14.423612594604492
    9. ' =' → logprob: -14.548612594604492
    10. ':' → logprob: -14.548612594604492

Token 159: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00020377879263833165
    2. ' None' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.62520408630371
    4. 'No' → logprob: -16.62520408630371
    5. 'N' → logprob: -17.25020408630371
    6. '=None' → logprob: -17.50020408630371
    7. '_None' → logprob: -18.12520408630371
    8. ' ' → logprob: -18.37520408630371
    9. 'none' → logprob: -18.50020408630371
    10. '  ' → logprob: -18.87520408630371

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005654225824400783
    2. ':
' → logprob: -7.875565528869629
    3. '<|end|>' → logprob: -9.125565528869629
    4. ' :' → logprob: -9.875565528869629
    5. '):' → logprob: -12.000565528869629
    6. '           ' → logprob: -12.875565528869629
    7. '<|end|>' → logprob: -12.875565528869629
    8. '#:' → logprob: -13.000565528869629
    9. '：' → logprob: -13.125565528869629
    10. ':return' → logprob: -13.750565528869629

Token 161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7070131897926331
    2. 'cls' → logprob: -1.2070131301879883
    3. ' cls' → logprob: -1.5820131301879883
    4. '(cls' → logprob: -7.332013130187988
    5. '_cls' → logprob: -7.582013130187988
    6. '.cls' → logprob: -8.832013130187988
    7. '   ' → logprob: -9.082013130187988
    8. 'Cls' → logprob: -9.207013130187988
    9. '  ' → logprob: -9.457013130187988
    10. '<|end|>' → logprob: -9.582013130187988

Token 162: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' (adapté à ' cls') → logprob: -0.023251652717590332
    2. ' cls' → logprob: -3.773251533508301
    3. '(cls' → logprob: -13.1482515335083
    4. 'Cls' → logprob: -13.2732515335083
    5. '.cls' → logprob: -14.0232515335083
    6. 'cl' → logprob: -14.1482515335083
    7. '_cls' → logprob: -14.5232515335083
    8. 'classmethod' → logprob: -14.7732515335083
    9. '           ' → logprob: -16.398252487182617
    10. 'class' → logprob: -17.148252487182617

Token 163: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.00046951865078881383
    2. '.' → logprob: -7.87546968460083
    3. 'root' → logprob: -9.500469207763672
    4. ' .' → logprob: -12.500469207763672
    5. '.ro' → logprob: -12.625469207763672
    6. '[root' → logprob: -12.875469207763672
    7. ' root' → logprob: -13.125469207763672
    8. '	root' → logprob: -13.250469207763672
    9. '=root' → logprob: -15.375469207763672
    10. '/root' → logprob: -15.500469207763672

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142541825771332
    2. '=' → logprob: -1.7014254331588745
    3. ' ' → logprob: -11.576425552368164
    4. '=z' → logprob: -13.076425552368164
    5. '＝' → logprob: -14.951425552368164
    6. ')' → logprob: -16.701425552368164
    7. ' =
' → logprob: -16.951425552368164
    8. ' ' → logprob: -17.076425552368164
    9. '=None' → logprob: -17.326425552368164
    10. '.' → logprob: -18.451425552368164

Token 165: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.038042064756155014
    2. ' z' → logprob: -3.2880420684814453
    3. '	z' → logprob: -14.538042068481445
    4. ''z' → logprob: -17.538042068481445
    5. ' ' → logprob: -17.538042068481445
    6. '   ' → logprob: -18.288042068481445
    7. '_z' → logprob: -18.538042068481445
    8. ' ' → logprob: -18.663042068481445
    9. '[z' → logprob: -18.913042068481445
    10. '.z' → logprob: -19.288042068481445

Token 166: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2065650075674057
    2. ' else' → logprob: -1.831565022468567
    3. 'else' → logprob: -4.206564903259277
    4. ' elif' → logprob: -5.081564903259277
    5. '<|end|>' → logprob: -5.706564903259277
    6. 'elif' → logprob: -6.456564903259277
    7. ' ' → logprob: -9.206564903259277
    8. '      ' → logprob: -9.956564903259277
    9. '        ' → logprob: -9.956564903259277
    10. '   ' → logprob: -10.456564903259277

Token 168: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.16750214993953705
    2. 'elif' (adapté à ' elif') → logprob: -1.9175021648406982
    3. ' else' → logprob: -5.167501926422119
    4. 'else' → logprob: -6.542501926422119
    5. '       ' → logprob: -9.792502403259277
    6. '	elif' → logprob: -10.542502403259277
    7. '    ' → logprob: -11.667502403259277
    8. '   ' → logprob: -11.792502403259277
    9. ' ' → logprob: -12.542502403259277
    10. ':' → logprob: -12.917502403259277

Token 169: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.005937805864959955
    2. 'z' → logprob: -5.130937576293945
    3. ' y' → logprob: -12.255937576293945
    4. ' ' → logprob: -13.005937576293945
    5. ' ' → logprob: -14.005937576293945
    6. '	z' → logprob: -14.755937576293945
    7. '    ' → logprob: -14.880937576293945
    8. '(z' → logprob: -16.380937576293945
    9. '_z' → logprob: -16.505937576293945
    10. 'y' → logprob: -16.568437576293945

Token 170: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -2.7372048862162046e-05
    2. '.' → logprob: -10.625027656555176
    3. 'key' → logprob: -13.500027656555176
    4. ' .' → logprob: -13.625027656555176
    5. ' key' → logprob: -15.000027656555176
    6. '	key' → logprob: -17.62502670288086
    7. '.<' → logprob: -18.00002670288086
    8. '[key' → logprob: -18.25002670288086
    9. '.Key' → logprob: -18.25002670288086
    10. '_key' → logprob: -18.37502670288086

Token 171: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0028073713183403015
    2. '<' → logprob: -5.877807140350342
    3. ' ' → logprob: -13.5028076171875
    4. '<|end|>' → logprob: -15.1278076171875
    5. ' <",' → logprob: -15.3778076171875
    6. ')' → logprob: -16.3778076171875
    7. '<int' → logprob: -16.5028076171875
    8. '<class' → logprob: -16.7528076171875
    9. '<x' → logprob: -17.0028076171875
    10. ' <
' → logprob: -17.1278076171875

Token 172: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.20141363143920898
    2. 'y' → logprob: -1.701413631439209
    3. '	y' → logprob: -15.451414108276367
    4. ' ' → logprob: -16.201414108276367
    5. ' ' → logprob: -16.951414108276367
    6. '_y' → logprob: -17.826414108276367
    7. ')y' → logprob: -18.451414108276367
    8. ''y' → logprob: -18.951414108276367
    9. '(y' → logprob: -18.951414108276367
    10. '   ' → logprob: -18.951414108276367

Token 173: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -1.700132997939363e-05
    2. '.' → logprob: -11.000017166137695
    3. 'key' → logprob: -15.500017166137695
    4. ' .' → logprob: -16.500017166137695
    5. ' key' → logprob: -17.625017166137695
    6. '[key' → logprob: -18.500017166137695
    7. '	key' → logprob: -19.125017166137695
    8. '.Key' → logprob: -19.375017166137695
    9. '$key' → logprob: -19.750017166137695
    10. '.keys' → logprob: -20.250017166137695

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004978670622222126
    2. ' :' → logprob: -8.000497817993164
    3. ':
' → logprob: -8.750497817993164
    4. '):' → logprob: -13.750497817993164
    5. ' :
' → logprob: -14.125497817993164
    6. '<|end|>' → logprob: -14.250497817993164
    7. '           ' → logprob: -15.500497817993164
    8. ':

' → logprob: -15.500497817993164
    9. '       ' → logprob: -15.625497817993164
    10. ')' → logprob: -16.000497817993164

Token 175: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.318394273519516
    2. ' :' → logprob: -1.4433943033218384
    3. '           ' → logprob: -4.193394184112549
    4. ' ' → logprob: -4.693394184112549
    5. '        ' → logprob: -5.568394184112549
    6. ' :
' → logprob: -5.818394184112549
    7. ':
' → logprob: -6.568394184112549
    8. '       ' → logprob: -7.193394184112549
    9. ' None' → logprob: -7.693394184112549
    10. ' ):' → logprob: -7.943394184112549

Token 176: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.16023772954940796
    2. 'y' (adapté à ' y') → logprob: -1.9102377891540527
    3. '           ' → logprob: -12.160237312316895
    4. 'z' → logprob: -12.535237312316895
    5. '            ' → logprob: -14.660237312316895
    6. ' ' → logprob: -14.660237312316895
    7. '	y' → logprob: -14.785237312316895
    8. ' z' → logprob: -14.785237312316895
    9. '    ' → logprob: -14.910237312316895
    10. '       ' → logprob: -14.910237312316895

Token 177: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0019305398454889655
    2. '.' → logprob: -6.2519307136535645
    3. '.right' → logprob: -13.751930236816406
    4. ' .' → logprob: -14.626930236816406
    5. '.Left' → logprob: -15.251930236816406
    6. '.le' → logprob: -15.626930236816406
    7. '.child' → logprob: -18.126930236816406
    8. '.parent' → logprob: -18.876930236816406
    9. '.children' → logprob: -19.501930236816406
    10. '.l' → logprob: -19.751930236816406

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300981014966965
    2. '=' → logprob: -3.1680097579956055
    3. ' ' → logprob: -11.543009757995605
    4. '=None' → logprob: -15.168009757995605
    5. ' =
' → logprob: -15.418009757995605
    6. '<|end|>' → logprob: -15.793009757995605
    7. '＝' → logprob: -16.418010711669922
    8. ' ' → logprob: -16.668010711669922
    9. ' =)' → logprob: -16.793010711669922
    10. ')' → logprob: -17.043010711669922

Token 179: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.1269298940896988
    2. ' z' → logprob: -2.126929998397827
    3. '	z' → logprob: -13.376930236816406
    4. ' ' → logprob: -16.876930236816406
    5. '   ' → logprob: -17.001930236816406
    6. '(z' → logprob: -17.251930236816406
    7. '[z' → logprob: -17.501930236816406
    8. ' ' → logprob: -17.501930236816406
    9. '_z' → logprob: -17.751930236816406
    10. 'y' → logprob: -18.001930236816406

Token 180: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10837041586637497
    2. ' else' → logprob: -2.858370304107666
    3. 'else' → logprob: -3.108370304107666
    4. '
' → logprob: -7.983370304107666
    5. '<|end|>' → logprob: -8.608370780944824
    6. '   ' → logprob: -10.858370780944824
    7. '	else' → logprob: -10.858370780944824
    8. 'elif' → logprob: -11.108370780944824
    9. '      ' → logprob: -11.233370780944824
    10. ' 
' → logprob: -11.483370780944824

Token 181: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1817401498556137
    2. '       ' → logprob: -2.1817400455474854
    3. ' else' → logprob: -2.9317400455474854
    4. '	else' → logprob: -10.931739807128906
    5. '   ' → logprob: -12.681739807128906
    6. '	' → logprob: -12.681739807128906
    7. 'elif' → logprob: -13.181739807128906
    8. '_else' → logprob: -13.556739807128906
    9. ' ' → logprob: -14.431739807128906
    10. '```' → logprob: -14.556739807128906

Token 182: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.23081472516059875
    2. 'else' (adapté à ' else') → logprob: -1.6058146953582764
    3. '       ' → logprob: -5.2308149337768555
    4. '	else' → logprob: -11.605814933776855
    5. '   ' → logprob: -11.730814933776855
    6. ' ' → logprob: -11.730814933776855
    7. ' ' → logprob: -12.230814933776855
    8. '_else' → logprob: -13.480814933776855
    9. '    ' → logprob: -13.980814933776855
    10. '      ' → logprob: -14.105814933776855

Token 183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05082815885543823
    2. '           ' → logprob: -3.050828218460083
    3. ':
' → logprob: -6.175827980041504
    4. ' :' → logprob: -9.300827980041504
    5. '            ' → logprob: -11.175827980041504
    6. '          ' → logprob: -11.300827980041504
    7. '               ' → logprob: -11.425827980041504
    8. ' :
' → logprob: -11.675827980041504
    9. '       ' → logprob: -12.050827980041504
    10. '        ' → logprob: -12.175827980041504

Token 184: '           ' (ID: 352)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.022495003417134285
    2. ' z' → logprob: -4.147494792938232
    3. '           ' → logprob: -5.147494792938232
    4. 'y' → logprob: -8.14749526977539
    5. ' ' → logprob: -9.02249526977539
    6. '            ' → logprob: -9.14749526977539
    7. ' x' → logprob: -9.77249526977539
    8. 'z' → logprob: -10.52249526977539
    9. '        ' → logprob: -11.52249526977539
    10. '               ' → logprob: -12.14749526977539

Token 185: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.3132619559764862
    2. ' y' → logprob: -1.3132619857788086
    3. 'z' → logprob: -15.688261985778809
    4. '	y' → logprob: -17.188261032104492
    5. '           ' → logprob: -17.563261032104492
    6. ' z' → logprob: -18.563261032104492
    7. ''y' → logprob: -19.188261032104492
    8. ')y' → logprob: -20.313261032104492
    9. 'y's' → logprob: -20.438261032104492
    10. '   ' → logprob: -20.438261032104492

Token 186: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0005586316110566258
    2. '.' → logprob: -7.500558853149414
    3. ' .' → logprob: -12.875558853149414
    4. '.left' → logprob: -13.000558853149414
    5. '.key' → logprob: -14.125558853149414
    6. '   ' → logprob: -17.500558853149414
    7. '.Right' → logprob: -17.875558853149414
    8. '.parent' → logprob: -17.875558853149414
    9. '[right' → logprob: -18.875558853149414
    10. 'right' → logprob: -19.125558853149414

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141646265983582
    2. '=' → logprob: -1.7014164924621582
    3. ' ' → logprob: -13.076416015625
    4. '=z' → logprob: -13.826416015625
    5. ' =
' → logprob: -16.326416015625
    6. '＝' → logprob: -17.701416015625
    7. ' =)' → logprob: -17.826416015625
    8. ')' → logprob: -17.951416015625
    9. '<|end|>' → logprob: -18.701416015625
    10. ' z' → logprob: -18.951416015625

Token 188: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.06196858361363411
    2. ' z' → logprob: -2.8119685649871826
    3. '	z' → logprob: -14.061968803405762
    4. '   ' → logprob: -16.686967849731445
    5. ' ' → logprob: -17.186967849731445
    6. 'y' → logprob: -17.686967849731445
    7. 'x' → logprob: -18.811967849731445
    8. '_z' → logprob: -18.936967849731445
    9. '       ' → logprob: -18.936967849731445
    10. ' y' → logprob: -19.186967849731445

Token 189: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8123690485954285
    2. '<|end|>' → logprob: -0.9373690485954285
    3. '\n' → logprob: -1.9373691082000732
    4. 'newline' → logprob: -5.187368869781494
    5. ' 
' → logprob: -5.437368869781494
    6. ' ' → logprob: -6.187368869781494
    7. ')' → logprob: -6.312368869781494
    8. '#' → logprob: -6.812368869781494
    9. '\r' → logprob: -7.062368869781494
    10. '\' → logprob: -7.187368869781494

Token 190: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5721431374549866
    2. '<|end|>' → logprob: -1.4471430778503418
    3. '        ' → logprob: -2.822143077850342
    4. ' ' → logprob: -2.947143077850342
    5. 'return' → logprob: -3.447143077850342
    6. '   ' → logprob: -4.822143077850342
    7. 'z' → logprob: -4.822143077850342
    8. ')' → logprob: -5.072143077850342
    9. '        
' → logprob: -5.197143077850342
    10. '    ' → logprob: -5.572143077850342

Token 192: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5263039469718933
    2. ' z' → logprob: -1.651304006576538
    3. ' return' → logprob: -2.901304006576538
    4. '        ' → logprob: -3.026304006576538
    5. '       ' → logprob: -3.026304006576538
    6. 'return' → logprob: -4.026303768157959
    7. 'z' → logprob: -4.401303768157959
    8. '   ' → logprob: -4.901303768157959
    9. '    ' → logprob: -4.901303768157959
    10. ' #' → logprob: -5.651303768157959

Token 193: ' z' (ID: 579)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11819025874137878
    2. '<|end|>' → logprob: -3.368190288543701
    3. ' None' → logprob: -3.493190288543701
    4. ' z' → logprob: -4.118190288543701
    5. 'None' → logprob: -4.493190288543701
    6. ' 
' → logprob: -4.618190288543701
    7. 'z' → logprob: -5.368190288543701
    8. '
' → logprob: -6.743190288543701
    9. '\n' → logprob: -6.868190288543701
    10. '  
' → logprob: -7.618190288543701

Token 194: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 196: ' @' (ID: 759)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.21571823954582214
    2. 'property' → logprob: -2.2157182693481445
    3. 'staticmethod' → logprob: -2.4657182693481445
    4. 'class' → logprob: -11.590718269348145
    5. '@property' → logprob: -12.590718269348145
    6. '@' → logprob: -14.090718269348145
    7. 'static' → logprob: -15.090718269348145
    8. 'Property' → logprob: -15.340718269348145
    9. ' property' → logprob: -15.465718269348145
    10. 'height' → logprob: -16.215717315673828

Token 198: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.03444739431142807
    2. 'def' → logprob: -3.409447431564331
    3. '   ' → logprob: -7.659447193145752
    4. '(' → logprob: -9.40944766998291
    5. '	def' → logprob: -9.65944766998291
    6. '_def' → logprob: -10.28444766998291
    7. '_' → logprob: -10.28444766998291
    8. '_space' → logprob: -11.03444766998291
    9. ' (' → logprob: -11.15944766998291
    10. '    ' → logprob: -11.53444766998291

Token 199: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11317536234855652
    2. ' def' → logprob: -2.238175392150879
    3. '   ' → logprob: -8.113175392150879
    4. '
' → logprob: -10.863175392150879
    5. '	def' → logprob: -11.113175392150879
    6. '    
' → logprob: -11.988175392150879
    7. ':def' → logprob: -12.988175392150879
    8. ':' → logprob: -13.238175392150879
    9. '#' → logprob: -13.238175392150879
    10. '_def' → logprob: -13.613175392150879

Token 200: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.012735904194414616
    2. ' def' → logprob: -4.637735843658447
    3. 'get' → logprob: -6.762735843658447
    4. 'balance' → logprob: -6.762735843658447
    5. 'search' → logprob: -8.512736320495605
    6. 'height' → logprob: -8.637736320495605
    7. 'in' → logprob: -9.387736320495605
    8. 'update' → logprob: -10.887736320495605
    9. 'delete' → logprob: -10.887736320495605
    10. 'insert' → logprob: -11.012736320495605

Token 201: ' find' (ID: 1646)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -1.3332282304763794
    2. ' get' → logprob: -1.7082282304763794
    3. ' update' → logprob: -1.8332282304763794
    4. 'search' → logprob: -2.70822811126709
    5. 'get' → logprob: -2.70822811126709
    6. ' inorder' → logprob: -2.70822811126709
    7. 'update' → logprob: -3.20822811126709
    8. ' find' → logprob: -3.95822811126709
    9. ' balance' → logprob: -3.95822811126709
    10. ' height' → logprob: -4.08322811126709

Token 202: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.42880406975746155
    2. '(' → logprob: -1.0538040399551392
    3. ' (' → logprob: -9.803804397583008
    4. '(self' → logprob: -11.928804397583008
    5. ',' → logprob: -12.178804397583008
    6. '(class' → logprob: -12.178804397583008
    7. 'cls' → logprob: -12.303804397583008
    8. '(
' → logprob: -12.303804397583008
    9. '   ' → logprob: -12.803804397583008
    10. 'classmethod' → logprob: -12.803804397583008

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04671378433704376
    2. '(cls' → logprob: -3.1717138290405273
    3. ' ,' → logprob: -6.296713829040527
    4. ')' → logprob: -7.046713829040527
    5. ')(' → logprob: -7.546713829040527
    6. '   ' → logprob: -8.296713829040527
    7. '(' → logprob: -9.171713829040527
    8. ' (' → logprob: -10.921713829040527
    9. ',key' → logprob: -11.046713829040527
    10. '       ' → logprob: -11.296713829040527

Token 204: ' k' (ID: 372)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.3869197964668274
    2. 'key' → logprob: -1.1369197368621826
    3. 'root' → logprob: -11.136919975280762
    4. ' root' → logprob: -11.261919975280762
    5. 'k' → logprob: -12.011919975280762
    6. ' ' → logprob: -12.886919975280762
    7. 'z' → logprob: -13.011919975280762
    8. 'x' → logprob: -13.261919975280762
    9. ' z' → logprob: -13.261919975280762
    10. '	key' → logprob: -13.761919975280762

Token 205: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5771481394767761
    2. ',' → logprob: -0.8271481394767761
    3. '(cls' → logprob: -7.577147960662842
    4. '):
' → logprob: -7.702147960662842
    5. '   ' → logprob: -9.3271484375
    6. ')' → logprob: -10.2021484375
    7. 'cls' → logprob: -10.2021484375
    8. ' ):' → logprob: -10.4521484375
    9. '       ' → logprob: -10.4521484375
    10. ' ,' → logprob: -12.2021484375

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03941847011446953
    2. 'x' → logprob: -3.4144184589385986
    3. ' x' → logprob: -5.289418697357178
    4. '   ' → logprob: -7.414418697357178
    5. '    ' → logprob: -10.28941822052002
    6. 'if' → logprob: -11.16441822052002
    7. ' if' → logprob: -11.16441822052002
    8. '        ' → logprob: -11.66441822052002
    9. 'node' → logprob: -11.66441822052002
    10. '```' → logprob: -12.03941822052002

Token 207: ' """' (ID: 9280)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009838140569627285
    2. 'node' → logprob: -5.009838104248047
    3. 'current' → logprob: -6.009838104248047
    4. ' x' → logprob: -7.509838104248047
    5. ' current' → logprob: -9.509838104248047
    6. ' node' → logprob: -10.384838104248047
    7. 'curr' → logprob: -12.259838104248047
    8. '   ' → logprob: -12.384838104248047
    9. 'cur' → logprob: -14.009838104248047
    10. 'def' → logprob: -14.259838104248047

Token 208: ' ?????' (ID: 149222)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06761009246110916
    2. 'node' → logprob: -2.817610025405884
    3. 'current' → logprob: -5.317610263824463
    4. 'def' → logprob: -7.942610263824463
    5. ' x' → logprob: -9.067609786987305
    6. '   ' → logprob: -9.192609786987305
    7. 'curr' → logprob: -10.067609786987305
    8. 'if' → logprob: -10.442609786987305
    9. ' node' → logprob: -10.567609786987305
    10. 'cur' → logprob: -11.067609786987305

Token 209: '?' (ID: 30)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.18162254989147186
    2. 'x' → logprob: -2.0566225051879883
    3. '       ' → logprob: -3.8066225051879883
    4. '   ' → logprob: -4.806622505187988
    5. ' node' → logprob: -5.806622505187988
    6. 'node' → logprob: -6.056622505187988
    7. ' current' → logprob: -6.806622505187988
    8. '    ' → logprob: -8.181622505187988
    9. ' ' → logprob: -8.431622505187988
    10. 'current' → logprob: -8.556622505187988

Token 210: 'k' (ID: 74)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7512062191963196
    2. ' x' → logprob: -1.5012061595916748
    3. 'node' → logprob: -1.7512061595916748
    4. '       ' → logprob: -2.376206159591675
    5. ' node' → logprob: -4.126206398010254
    6. '   ' → logprob: -4.626206398010254
    7. 'if' → logprob: -5.376206398010254
    8. 'def' → logprob: -5.876206398010254
    9. 'current' → logprob: -6.501206398010254
    10. ' if' → logprob: -6.626206398010254

Token 211: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033082131296396255
    2. ':
' → logprob: -4.658082008361816
    3. '   ' → logprob: -5.283082008361816
    4. ':' → logprob: -5.783082008361816
    5. '):
' → logprob: -5.783082008361816
    6. '"""
' → logprob: -5.783082008361816
    7. ',' → logprob: -6.033082008361816
    8. '
' → logprob: -6.033082008361816
    9. '=' → logprob: -7.533082008361816
    10. 'node' → logprob: -7.658082008361816

Token 212: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10297926515340805
    2. ' x' → logprob: -2.8529791831970215
    3. 'x' → logprob: -4.7279791831970215
    4. 'node' → logprob: -4.7279791831970215
    5. ' node' → logprob: -4.9779791831970215
    6. '   ' → logprob: -5.2279791831970215
    7. '
' → logprob: -5.2279791831970215
    8. '        ' → logprob: -7.2279791831970215
    9. '"""
' → logprob: -7.7279791831970215
    10. '        
' → logprob: -7.7279791831970215

Token 213: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1235482394695282
    2. ' x' → logprob: -2.4985482692718506
    3. 'x' → logprob: -4.3735480308532715
    4. 'node' → logprob: -4.7485480308532715
    5. '   ' → logprob: -5.7485480308532715
    6. '        ' → logprob: -5.7485480308532715
    7. ' node' → logprob: -5.8735480308532715
    8. '    ' → logprob: -6.6235480308532715
    9. '
' → logprob: -6.8735480308532715
    10. ' if' → logprob: -8.37354850769043

Token 214: '¢' (ID: 61242)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08005973696708679
    2. ' x' → logprob: -3.455059766769409
    3. 'node' → logprob: -4.08005952835083
    4. 'x' → logprob: -4.20505952835083
    5. ' node' → logprob: -5.45505952835083
    6. '   ' → logprob: -5.83005952835083
    7. '        ' → logprob: -6.08005952835083
    8. '    ' → logprob: -6.08005952835083
    9. ' current' → logprob: -7.20505952835083
    10. 'current' → logprob: -7.45505952835083

Token 215: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04309282451868057
    2. ' x' → logprob: -4.168092727661133
    3. '   ' → logprob: -4.418092727661133
    4. 'node' → logprob: -5.543092727661133
    5. '    ' → logprob: -6.043092727661133
    6. 'x' → logprob: -6.168092727661133
    7. ' node' → logprob: -6.168092727661133
    8. '        ' → logprob: -6.543092727661133
    9. ' if' → logprob: -7.668092727661133
    10. 'if' → logprob: -8.168092727661133

Token 216: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1471976488828659
    2. ' x' → logprob: -2.272197723388672
    3. 'x' → logprob: -4.147197723388672
    4. '   ' → logprob: -5.147197723388672
    5. 'node' → logprob: -5.522197723388672
    6. ' node' → logprob: -5.772197723388672
    7. '        ' → logprob: -6.272197723388672
    8. '    ' → logprob: -6.897197723388672
    9. ' current' → logprob: -7.397197723388672
    10. '
' → logprob: -7.647197723388672

Token 217: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5418388247489929
    2. ' x' → logprob: -1.7918388843536377
    3. '   ' → logprob: -2.0418388843536377
    4. 'node' → logprob: -3.1668388843536377
    5. 'x' → logprob: -3.5418388843536377
    6. ' node' → logprob: -3.7918388843536377
    7. '    ' → logprob: -4.791838645935059
    8. '"""
' → logprob: -5.666838645935059
    9. '```' → logprob: -6.041838645935059
    10. ' current' → logprob: -6.291838645935059

Token 218: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34010881185531616
    2. ' x' → logprob: -2.590108871459961
    3. '    ' → logprob: -2.715108871459961
    4. '   ' → logprob: -2.715108871459961
    5. '        ' → logprob: -3.840108871459961
    6. 'x' → logprob: -4.465108871459961
    7. '
' → logprob: -4.465108871459961
    8. ':' → logprob: -5.465108871459961
    9. 'node' → logprob: -5.715108871459961
    10. ' node' → logprob: -5.715108871459961

Token 219: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30591076612472534
    2. '    ' → logprob: -2.68091082572937
    3. '   ' → logprob: -2.68091082572937
    4. ' x' → logprob: -3.55591082572937
    5. ':' → logprob: -3.68091082572937
    6. '        ' → logprob: -3.68091082572937
    7. ':
' → logprob: -4.930910587310791
    8. ' node' → logprob: -5.055910587310791
    9. 'node' → logprob: -5.305910587310791
    10. 'x' → logprob: -5.555910587310791

Token 220: '°' (ID: 6793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10003066062927246
    2. ' x' → logprob: -3.2250306606292725
    3. 'x' → logprob: -3.7250306606292725
    4. '   ' → logprob: -3.7250306606292725
    5. '    ' → logprob: -5.975030899047852
    6. 'node' → logprob: -6.350030899047852
    7. ' node' → logprob: -7.100030899047852
    8. '        ' → logprob: -7.100030899047852
    9. ' current' → logprob: -7.475030899047852
    10. 'current' → logprob: -8.475030899047852

Token 221: 'None' (ID: 8505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023561300709843636
    2. '    ' → logprob: -4.648561477661133
    3. '        ' → logprob: -4.773561477661133
    4. '   ' → logprob: -5.898561477661133
    5. ':' → logprob: -6.898561477661133
    6. ' x' → logprob: -8.148561477661133
    7. 'x' → logprob: -8.398561477661133
    8. '
' → logprob: -9.023561477661133
    9. ',' → logprob: -9.273561477661133
    10. '.' → logprob: -9.523561477661133

Token 222: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008585020899772644
    2. '
' → logprob: -5.383584976196289
    3. '        
' → logprob: -6.883584976196289
    4. '        ' → logprob: -7.133584976196289
    5. '\n' → logprob: -7.383584976196289
    6. '   ' → logprob: -8.133584976196289
    7. ' 
' → logprob: -8.258584976196289
    8. '  
' → logprob: -8.258584976196289
    9. ')' → logprob: -9.508584976196289
    10. ',' → logprob: -9.633584976196289

Token 223: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0069398521445691586
    2. '        ' → logprob: -5.631939888000488
    3. '
' → logprob: -6.131939888000488
    4. '    ' → logprob: -8.131939888000488
    5. '   ' → logprob: -8.131939888000488
    6. '        
' → logprob: -8.631939888000488
    7. ' ' → logprob: -9.506939888000488
    8. ' 
' → logprob: -9.631939888000488
    9. '```' → logprob: -10.381939888000488
    10. '  
' → logprob: -11.131939888000488

Token 224: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03677728772163391
    2. '    ' → logprob: -3.9117772579193115
    3. '        ' → logprob: -4.411777496337891
    4. '   ' → logprob: -6.161777496337891
    5. ' x' → logprob: -7.536777496337891
    6. 'x' → logprob: -8.03677749633789
    7. ' """' → logprob: -9.28677749633789
    8. '"""' → logprob: -9.28677749633789
    9. '      ' → logprob: -9.41177749633789
    10. '.' → logprob: -9.41177749633789

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01064901053905487
    2. 'x' → logprob: -5.01064920425415
    3. '
' → logprob: -7.13564920425415
    4. ' x' → logprob: -7.38564920425415
    5. '   ' → logprob: -7.38564920425415
    6. '    ' → logprob: -7.63564920425415
    7. '        ' → logprob: -7.88564920425415
    8. '        
' → logprob: -8.010648727416992
    9. 'n' → logprob: -8.885648727416992
    10. '    ' → logprob: -9.510648727416992

Token 226: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0008304747752845287
    2. ' x' → logprob: -7.25083065032959
    3. 'node' → logprob: -9.75083065032959
    4. 'current' → logprob: -9.75083065032959
    5. ' current' → logprob: -13.62583065032959
    6. '   ' → logprob: -13.62583065032959
    7. 'if' → logprob: -14.62583065032959
    8. ' node' → logprob: -14.62583065032959
    9. 'curr' → logprob: -14.62583065032959
    10. 'cur' → logprob: -15.50083065032959

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868713676929474
    2. ' =' → logprob: -1.136871337890625
    3. ' ' → logprob: -16.636871337890625
    4. '＝' → logprob: -16.761871337890625
    5. '=
' → logprob: -16.761871337890625
    6. '   ' → logprob: -17.136871337890625
    7. '    ' → logprob: -17.261871337890625
    8. '=root' → logprob: -17.761871337890625
    9. ',' → logprob: -18.011871337890625
    10. ')' → logprob: -18.636871337890625

Token 228: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.002534521510824561
    2. ' cls' → logprob: -6.00253438949585
    3. 'classmethod' → logprob: -10.502534866333008
    4. 'Node' → logprob: -11.377534866333008
    5. 'Cls' → logprob: -11.502534866333008
    6. '(cls' → logprob: -12.252534866333008
    7. '_cls' → logprob: -13.252534866333008
    8. 'class' → logprob: -13.502534866333008
    9. '.cls' → logprob: -13.752534866333008
    10. '   ' → logprob: -15.002534866333008

Token 229: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0004979863297194242
    2. 'root' → logprob: -7.750497817993164
    3. '.' → logprob: -9.625497817993164
    4. ' .' → logprob: -14.250497817993164
    5. '[root' → logprob: -15.250497817993164
    6. ' root' → logprob: -15.875497817993164
    7. '.ro' → logprob: -16.250497817993164
    8. '	root' → logprob: -16.625497817993164
    9. '_root' → logprob: -18.000497817993164
    10. '.
' → logprob: -18.250497817993164

Token 230: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46332570910453796
    2. '
' → logprob: -1.3383257389068604
    3. '<|end|>' → logprob: -2.4633257389068604
    4. '        ' → logprob: -4.963325500488281
    5. '        
' → logprob: -5.088325500488281
    6. 'while' → logprob: -6.213325500488281
    7. '  
' → logprob: -6.588325500488281
    8. '<|end|>' → logprob: -6.588325500488281
    9. '
' → logprob: -7.088325500488281
    10. '' → logprob: -7.338325500488281

Token 231: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.241265058517456
    2. '<|end|>' → logprob: -1.241265058517456
    3. '       ' → logprob: -1.991265058517456
    4. ' 
' → logprob: -1.991265058517456
    5. ' ' → logprob: -2.741265058517456
    6. ' while' → logprob: -3.366265058517456
    7. '  
' → logprob: -4.616265296936035
    8. '        
' → logprob: -4.991265296936035
    9. '	while' → logprob: -4.991265296936035
    10. 'while' → logprob: -5.241265296936035

Token 232: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.10218778997659683
    2. ' while' → logprob: -2.3521878719329834
    3. '       ' → logprob: -6.977187633514404
    4. '	while' → logprob: -7.102187633514404
    5. '   ' → logprob: -8.477188110351562
    6. '    ' → logprob: -11.727188110351562
    7. '        ' → logprob: -13.602188110351562
    8. '  ' → logprob: -13.727188110351562
    9. 'While' → logprob: -13.852188110351562
    10. ' ' → logprob: -14.227188110351562

Token 233: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.014163863845169544
    2. 'x' → logprob: -4.264163970947266
    3. '	x' → logprob: -15.389163970947266
    4. '(x' → logprob: -16.389163970947266
    5. '   ' → logprob: -18.639163970947266
    6. ' ' → logprob: -18.889163970947266
    7. '    ' → logprob: -20.264163970947266
    8. '(' → logprob: -20.764163970947266
    9. ')x' → logprob: -20.764163970947266
    10. ' (' → logprob: -20.889163970947266

Token 234: ' !=' (ID: 1666)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.43359270691871643
    2. ' and' → logprob: -1.683592677116394
    3. ' !=' → logprob: -1.808592677116394
    4. '!=' → logprob: -6.308592796325684
    5. 'and' → logprob: -8.308592796325684
    6. 'is' → logprob: -9.433592796325684
    7. ' ' → logprob: -10.433592796325684
    8. '.key' → logprob: -10.558592796325684
    9. ' not' → logprob: -12.558592796325684
    10. ' isn't' → logprob: -12.558592796325684

Token 235: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.038042064756155014
    2. ' None' → logprob: -3.2880420684814453
    3. 'k' → logprob: -15.288042068481445
    4. '=None' → logprob: -15.288042068481445
    5. ' ' → logprob: -16.788042068481445
    6. 'N' → logprob: -17.163042068481445
    7. '_None' → logprob: -17.288042068481445
    8. '(None' → logprob: -17.538042068481445
    9. '0' → logprob: -18.038042068481445
    10. 'none' → logprob: -18.288042068481445

Token 236: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1578489989042282
    2. ':' → logprob: -2.032849073410034
    3. ':
' → logprob: -4.782848834991455
    4. 'and' → logprob: -5.157848834991455
    5. '       ' → logprob: -7.532848834991455
    6. ' :' → logprob: -8.907849311828613
    7. ',' → logprob: -9.782849311828613
    8. '           ' → logprob: -10.157849311828613
    9. '<|end|>' → logprob: -10.407849311828613
    10. ' ' → logprob: -10.532849311828613

Token 237: ' k' (ID: 372)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07514787465333939
    2. 'k' → logprob: -3.325147867202759
    3. ' x' → logprob: -3.325147867202759
    4. ' k' → logprob: -7.700148105621338
    5. 'key' → logprob: -12.20014762878418
    6. ' key' → logprob: -14.32514762878418
    7. '   ' → logprob: -14.32514762878418
    8. '	x' → logprob: -15.70014762878418
    9. ' ' → logprob: -16.82514762878418
    10. ' ' → logprob: -17.32514762878418

Token 238: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0036256047897040844
    2. '!=' → logprob: -5.628625392913818
    3. ' >' → logprob: -11.003625869750977
    4. ' ' → logprob: -12.503625869750977
    5. ' !==' → logprob: -13.878625869750977
    6. '>' → logprob: -13.878625869750977
    7. ' !' → logprob: -14.253625869750977
    8. ' <>' → logprob: -14.378625869750977
    9. ' not' → logprob: -15.253625869750977
    10. '()!=' → logprob: -15.378625869750977

Token 239: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6931478381156921
    2. ' x' → logprob: -0.6931478381156921
    3. '	x' → logprob: -14.568147659301758
    4. ' ' → logprob: -16.068147659301758
    5. '   ' → logprob: -17.443147659301758
    6. ')x' → logprob: -18.443147659301758
    7. '
' → logprob: -18.943147659301758
    8. '(x' → logprob: -19.068147659301758
    9. '    ' → logprob: -19.193147659301758
    10. '  ' → logprob: -19.693147659301758

Token 240: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.00033784625702537596
    2. '.' → logprob: -8.000337600708008
    3. ' .' → logprob: -13.125337600708008
    4. 'key' → logprob: -15.500337600708008
    5. '.Key' → logprob: -16.875337600708008
    6. '.
' → logprob: -17.375337600708008
    7. '.token' → logprob: -17.500337600708008
    8. '.keys' → logprob: -17.500337600708008
    9. ' key' → logprob: -17.875337600708008
    10. '.code' → logprob: -17.875337600708008

Token 241: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004301576875150204
    2. ':
' → logprob: -5.87930154800415
    3. ' :' → logprob: -7.12930154800415
    4. '       ' → logprob: -7.62930154800415
    5. ' and' → logprob: -8.879302024841309
    6. '):' → logprob: -11.504302024841309
    7. '   ' → logprob: -11.629302024841309
    8. ' :
' → logprob: -11.879302024841309
    9. '<|end|>' → logprob: -11.879302024841309
    10. '           ' → logprob: -12.254302024841309

Token 242: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4956069886684418
    2. '           ' → logprob: -1.7456070184707642
    3. ' x' → logprob: -2.4956068992614746
    4. '       ' → logprob: -2.4956068992614746
    5. '        ' → logprob: -3.4956068992614746
    6. ' ' → logprob: -4.995606899261475
    7. '<|end|>' → logprob: -5.620606899261475
    8. ' 
' → logprob: -6.120606899261475
    9. 'x' → logprob: -6.745606899261475
    10. '    ' → logprob: -6.745606899261475

Token 243: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.032954223453998566
    2. ' if' → logprob: -4.782954216003418
    3. ' x' → logprob: -4.907954216003418
    4. ' 
' → logprob: -4.907954216003418
    5. '           ' → logprob: -5.532954216003418
    6. ' ' → logprob: -6.532954216003418
    7. 'x' → logprob: -7.032954216003418
    8. '        ' → logprob: -7.157954216003418
    9. '       ' → logprob: -7.157954216003418
    10. '            ' → logprob: -7.532954216003418

Token 244: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.014163863845169544
    2. 'k' → logprob: -4.264163970947266
    3. '	k' → logprob: -15.639163970947266
    4. ' ' → logprob: -16.139163970947266
    5. ' ' → logprob: -16.389163970947266
    6. ' x' → logprob: -17.764163970947266
    7. ' к' → logprob: -18.889163970947266
    8. '    ' → logprob: -19.014163970947266
    9. 'x' → logprob: -19.014163970947266
    10. '_k' → logprob: -20.014163970947266

Token 245: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.006732068490236998
    2. '<' → logprob: -5.006731986999512
    3. ' ' → logprob: -11.631731986999512
    4. '<|end|>' → logprob: -12.006731986999512
    5. ' >' → logprob: -15.006731986999512
    6. '<int' → logprob: -15.631731986999512
    7. ' <
' → logprob: -15.631731986999512
    8. '<class' → logprob: -15.631731986999512
    9. ' <",' → logprob: -15.881731986999512
    10. '<Key' → logprob: -16.631732940673828

Token 246: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04858759790658951
    2. 'x' → logprob: -3.0485875606536865
    3. ' ' → logprob: -15.798587799072266
    4. '	x' → logprob: -15.798587799072266
    5. '(x' → logprob: -18.298587799072266
    6. ')x' → logprob: -18.673587799072266
    7. '<|end|>' → logprob: -19.048587799072266
    8. '>x' → logprob: -19.173587799072266
    9. ' ' → logprob: -19.423587799072266
    10. '"x' → logprob: -20.298587799072266

Token 247: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.000929091009311378
    2. '.' → logprob: -7.00092887878418
    3. ' .' → logprob: -11.00092887878418
    4. 'key' → logprob: -14.25092887878418
    5. ' key' → logprob: -15.50092887878418
    6. '.
' → logprob: -17.37592887878418
    7. '[key' → logprob: -17.62592887878418
    8. '.Key' → logprob: -18.12592887878418
    9. '(key' → logprob: -18.62592887878418
    10. '.left' → logprob: -18.75092887878418

Token 248: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18403328955173492
    2. ':
' → logprob: -1.9340332746505737
    3. '               ' → logprob: -3.8090333938598633
    4. '           ' → logprob: -7.059033393859863
    5. ' :
' → logprob: -8.684033393859863
    6. ' :' → logprob: -8.934033393859863
    7. '       ' → logprob: -9.934033393859863
    8. '):
' → logprob: -9.934033393859863
    9. '<|end|>' → logprob: -11.059033393859863
    10. ',' → logprob: -11.059033393859863

Token 249: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5261366367340088
    2. ' x' → logprob: -1.0261366367340088
    3. ' ' → logprob: -3.401136636734009
    4. '           ' → logprob: -4.40113639831543
    5. ' ' → logprob: -5.90113639831543
    6. ' 
' → logprob: -6.90113639831543
    7. 'x' → logprob: -7.90113639831543
    8. '            ' → logprob: -7.90113639831543
    9. '                
' → logprob: -8.77613639831543
    10. '                ' → logprob: -9.52613639831543

Token 250: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.004128388129174709
    2. 'x' (adapté à ' x') → logprob: -5.504128456115723
    3. '               ' → logprob: -10.504128456115723
    4. ' ' → logprob: -11.504128456115723
    5. ' ' → logprob: -12.254128456115723
    6. ' 
' → logprob: -12.379128456115723
    7. '           ' → logprob: -13.254128456115723
    8. '                ' → logprob: -14.254128456115723
    9. '            ' → logprob: -14.754128456115723
    10. '	x' → logprob: -15.879128456115723

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150413408875465
    2. '=' → logprob: -4.018150329589844
    3. '=x' → logprob: -15.268150329589844
    4. ' ' → logprob: -15.643150329589844
    5. ' =
' → logprob: -16.268150329589844
    6. ' x' → logprob: -17.643150329589844
    7. '=
' → logprob: -18.018150329589844
    8. '	' → logprob: -18.393150329589844
    9. '.' → logprob: -18.518150329589844
    10. '    ' → logprob: -19.018150329589844

Token 252: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0788901224732399
    2. 'x' → logprob: -2.578890085220337
    3. '	x' → logprob: -15.578889846801758
    4. ' ' → logprob: -16.578889846801758
    5. ' ' → logprob: -17.703889846801758
    6. '(x' → logprob: -18.828889846801758
    7. ')x' → logprob: -19.078889846801758
    8. 's' → logprob: -19.578889846801758
    9. '.x' → logprob: -20.078889846801758
    10. '"x' → logprob: -20.578889846801758

Token 253: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -7.85104202805087e-05
    2. '.' → logprob: -9.500078201293945
    3. '.right' → logprob: -12.625078201293945
    4. ' .' → logprob: -15.125078201293945
    5. '.Left' → logprob: -17.750078201293945
    6. 'left' → logprob: -18.375078201293945
    7. '.le' → logprob: -20.125078201293945
    8. '.parent' → logprob: -20.500078201293945
    9. '.key' → logprob: -20.875078201293945
    10. '	left' → logprob: -20.875078201293945

Token 254: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9431687593460083
    2. '       ' → logprob: -1.4431687593460083
    3. '
' → logprob: -1.8181687593460083
    4. ' else' → logprob: -2.5681686401367188
    5. 'else' → logprob: -3.0681686401367188
    6. ' 
' → logprob: -3.1931686401367188
    7. '            
' → logprob: -4.193168640136719
    8. '<|end|>' → logprob: -4.318168640136719
    9. '  
' → logprob: -5.318168640136719
    10. '    
' → logprob: -6.068168640136719

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03521115705370903
    2. ' else' → logprob: -3.6602110862731934
    3. 'else' → logprob: -4.785211086273193
    4. '       ' → logprob: -7.785211086273193
    5. '               ' → logprob: -10.785211563110352
    6. '<|end|>' → logprob: -11.535211563110352
    7. ' 
' → logprob: -11.660211563110352
    8. '          ' → logprob: -11.660211563110352
    9. '            
' → logprob: -11.660211563110352
    10. ' ' → logprob: -12.160211563110352

Token 256: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4742276966571808
    2. ' else' → logprob: -0.9742276668548584
    3. '           ' → logprob: -9.349227905273438
    4. '       ' → logprob: -9.849227905273438
    5. '	else' → logprob: -11.599227905273438
    6. '               ' → logprob: -14.349227905273438
    7. '   ' → logprob: -14.849227905273438
    8. '
' → logprob: -15.349227905273438
    9. ' ' → logprob: -15.849227905273438
    10. '_else' → logprob: -16.474227905273438

Token 257: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012039456516504288
    2. ':' → logprob: -5.137039661407471
    3. '           ' → logprob: -5.762039661407471
    4. ':
' → logprob: -6.012039661407471
    5. ' x' → logprob: -8.262039184570312
    6. '       ' → logprob: -9.887039184570312
    7. '                   ' → logprob: -10.012039184570312
    8. '
' → logprob: -10.262039184570312
    9. '              ' → logprob: -10.387039184570312
    10. '{
' → logprob: -11.637039184570312

Token 258: '               ' (ID: 506)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0792151689529419
    2. '               ' → logprob: -2.5792150497436523
    3. '           ' → logprob: -8.204215049743652
    4. 'x' → logprob: -10.329215049743652
    5. ' ' → logprob: -11.579215049743652
    6. ' ' → logprob: -12.704215049743652
    7. ' 
' → logprob: -13.079215049743652
    8. '
' → logprob: -14.204215049743652
    9. '            ' → logprob: -14.329215049743652
    10. '              ' → logprob: -14.329215049743652

Token 259: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02975824475288391
    2. 'x' (adapté à ' x') → logprob: -3.5297582149505615
    3. '               ' → logprob: -11.77975845336914
    4. '           ' → logprob: -17.65475845336914
    5. '	x' → logprob: -18.02975845336914
    6. '                ' → logprob: -18.40475845336914
    7. ' ' → logprob: -18.65475845336914
    8. ' ' → logprob: -18.90475845336914
    9. '                   ' → logprob: -19.02975845336914
    10. '       ' → logprob: -20.15475845336914

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25242745876312256
    2. '=' → logprob: -1.5024274587631226
    3. '.right' → logprob: -7.627427577972412
    4. '.' → logprob: -11.502427101135254
    5. ' ' → logprob: -15.127427101135254
    6. '   ' → logprob: -15.252427101135254
    7. '.=' → logprob: -15.502427101135254
    8. '	' → logprob: -16.37742805480957
    9. ' .' → logprob: -16.62742805480957
    10. '               ' → logprob: -16.62742805480957

Token 261: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.03804149478673935
    2. 'x' → logprob: -3.288041591644287
    3. '	x' → logprob: -17.288042068481445
    4. '               ' → logprob: -18.038042068481445
    5. ' ' → logprob: -19.663042068481445
    6. ' ' → logprob: -20.413042068481445
    7. '           ' → logprob: -20.788042068481445
    8. '(x' → logprob: -21.163042068481445
    9. '   ' → logprob: -21.663042068481445
    10. '    ' → logprob: -22.663042068481445

Token 262: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.00012833021173719317
    2. '.' → logprob: -9.000128746032715
    3. ' .' → logprob: -12.250128746032715
    4. 'right' → logprob: -16.3751277923584
    5. '.left' → logprob: -17.3751277923584
    6. '.Right' → logprob: -18.5001277923584
    7. '	right' → logprob: -18.6251277923584
    8. '   ' → logprob: -19.8751277923584
    9. '.r' → logprob: -20.0001277923584
    10. ' ' → logprob: -20.1251277923584

Token 263: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.394685298204422
    2. '<|end|>' → logprob: -1.7696852684020996
    3. '
' → logprob: -1.8946852684020996
    4. 'return' → logprob: -6.6446852684021
    5. '<|end|>' → logprob: -6.8946852684021
    6. ' return' → logprob: -7.1446852684021
    7. '        
' → logprob: -7.8946852684021
    8. ' 
' → logprob: -8.394685745239258
    9. '	return' → logprob: -8.519685745239258
    10. ':return' → logprob: -8.519685745239258

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015321242390200496
    2. ' return' → logprob: -7.751532077789307
    3. '        
' → logprob: -8.751532554626465
    4. '	' → logprob: -8.751532554626465
    5. 'return' → logprob: -8.876532554626465
    6. '
' → logprob: -9.001532554626465
    7. '<|end|>' → logprob: -9.001532554626465
    8. ' 
' → logprob: -9.251532554626465
    9. '   ' → logprob: -9.251532554626465
    10. '	return' → logprob: -10.376532554626465

Token 265: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.647316575050354
    2. '       ' → logprob: -0.897316575050354
    3. ' return' → logprob: -2.7723164558410645
    4. '   ' → logprob: -5.3973164558410645
    5. '	return' → logprob: -6.6473164558410645
    6. ':return' → logprob: -7.7723164558410645
    7. '	' → logprob: -10.647316932678223
    8. '           ' → logprob: -11.147316932678223
    9. '    ' → logprob: -11.147316932678223
    10. ' ' → logprob: -11.647316932678223

Token 266: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3868715465068817
    2. ' x' → logprob: -1.136871576309204
    3. 'None' → logprob: -15.261871337890625
    4. ' None' → logprob: -16.011871337890625
    5. '	x' → logprob: -16.386871337890625
    6. ' ' → logprob: -16.386871337890625
    7. ')x' → logprob: -20.011871337890625
    8. '(x' → logprob: -20.011871337890625
    9. '"x' → logprob: -20.636871337890625
    10. '$x' → logprob: -21.261871337890625

Token 267: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.6128215193748474
    2. '   ' → logprob: -0.8628215193748474
    3. ' @' → logprob: -4.487821578979492
    4. 'def' → logprob: -5.362821578979492
    5. ' ' → logprob: -5.612821578979492
    6. '    
' → logprob: -5.737821578979492
    7. '    ' → logprob: -5.862821578979492
    8. '<|end|>' → logprob: -5.987821578979492
    9. '@property' → logprob: -6.862821578979492
    10. '_' → logprob: -6.987821578979492

Token 270: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.00022654302301816642
    2. 'staticmethod' → logprob: -8.500226974487305
    3. 'property' → logprob: -10.750226974487305
    4. 'class' → logprob: -13.375226974487305
    5. '@' → logprob: -17.625226974487305
    6. '__' → logprob: -20.000226974487305
    7. 'classname' → logprob: -20.250226974487305
    8. 'root' → logprob: -20.375226974487305
    9. '.' → logprob: -20.375226974487305
    10. '
' → logprob: -20.500226974487305

Token 271: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0321684293448925
    2. ' def' → logprob: -3.532168388366699
    3. '   ' → logprob: -6.032168388366699
    4. '	def' → logprob: -11.7821683883667
    5. '
' → logprob: -12.5321683883667
    6. ':def' → logprob: -13.2821683883667
    7. '#' → logprob: -13.9071683883667
    8. '_def' → logprob: -14.9071683883667
    9. ' ' → logprob: -15.2821683883667
    10. ':' → logprob: -15.7821683883667

Token 272: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030915196985006332
    2. ' def' → logprob: -3.5309152603149414
    3. '   ' → logprob: -6.780915260314941
    4. '	def' → logprob: -11.280915260314941
    5. ':def' → logprob: -11.905915260314941
    6. '
' → logprob: -11.905915260314941
    7. '#' → logprob: -14.155915260314941
    8. '_def' → logprob: -14.280915260314941
    9. ' ' → logprob: -15.155915260314941
    10. ':' → logprob: -15.655915260314941

Token 273: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003682285314425826
    2. ' def' → logprob: -8.000368118286133
    3. 'delete' → logprob: -11.250368118286133
    4. 'in' → logprob: -11.500368118286133
    5. 'minimum' → logprob: -12.500368118286133
    6. 'min' → logprob: -13.875368118286133
    7. '
' → logprob: -13.875368118286133
    8. 'pre' → logprob: -14.000368118286133
    9. '   ' → logprob: -14.500368118286133
    10. 'height' → logprob: -14.625368118286133

Token 274: ' walk' (ID: 5229)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8022433519363403
    2. 'delete' → logprob: -1.4272433519363403
    3. 'update' → logprob: -1.8022433519363403
    4. 'height' → logprob: -3.302243232727051
    5. 'minimum' → logprob: -3.927243232727051
    6. 'tr' → logprob: -4.052243232727051
    7. ' inorder' → logprob: -4.177243232727051
    8. 'pre' → logprob: -4.552243232727051
    9. 'trans' → logprob: -5.052243232727051
    10. 'set' → logprob: -5.552243232727051

Token 275: '_pre' (ID: 18599)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0083158602938056
    2. '(' → logprob: -5.2583160400390625
    3. '_in' → logprob: -6.1333160400390625
    4. '(self' → logprob: -7.8833160400390625
    5. 'in' → logprob: -8.383316040039062
    6. '   ' → logprob: -9.758316040039062
    7. '_' → logprob: -9.883316040039062
    8. '_pre' → logprob: -9.883316040039062
    9. 'In' → logprob: -10.508316040039062
    10. '_(' → logprob: -11.258316040039062

Token 276: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.00634288415312767
    2. '(cls' → logprob: -5.131342887878418
    3. '_order' → logprob: -7.881342887878418
    4. '(self' → logprob: -10.756342887878418
    5. 'fix' → logprob: -12.631342887878418
    6. 'Order' → logprob: -13.006342887878418
    7. '```' → logprob: -13.131342887878418
    8. '
' → logprob: -13.256342887878418
    9. '(order' → logprob: -13.631342887878418
    10. '

' → logprob: -14.006342887878418

Token 277: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.002482315758243203
    2. '(' → logprob: -6.1274824142456055
    3. '(self' → logprob: -8.127482414245605
    4. '(class' → logprob: -14.627482414245605
    5. ' (' → logprob: -14.877482414245605
    6. '(
' → logprob: -14.877482414245605
    7. '   ' → logprob: -15.377482414245605
    8. '(clazz' → logprob: -16.25248146057129
    9. '(cl' → logprob: -16.37748146057129
    10. 'cls' → logprob: -16.50248146057129

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5842082500457764
    2. '(cls' → logprob: -1.2092082500457764
    3. ')(' → logprob: -2.8342082500457764
    4. ')' → logprob: -3.2092082500457764
    5. '):' → logprob: -3.4592082500457764
    6. '   ' → logprob: -4.7092084884643555
    7. '):
' → logprob: -5.7092084884643555
    8. '       ' → logprob: -7.3342084884643555
    9. '(self' → logprob: -8.834208488464355
    10. '(' → logprob: -9.209208488464355

Token 279: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.8194471001625061
    2. 'cls' → logprob: -1.0694470405578613
    3. 'x' → logprob: -1.5694470405578613
    4. 'root' → logprob: -5.069447040557861
    5. ' cls' → logprob: -7.569447040557861
    6. 'self' → logprob: -7.694447040557861
    7. ' node' → logprob: -7.694447040557861
    8. ' x' → logprob: -9.56944751739502
    9. 'n' → logprob: -10.31944751739502
    10. 'start' → logprob: -10.31944751739502

Token 280: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00112426420673728
    2. ',' → logprob: -7.126124382019043
    3. '):
' → logprob: -8.126124382019043
    4. ')' → logprob: -11.626124382019043
    5. '   ' → logprob: -11.751124382019043
    6. ' ):' → logprob: -13.001124382019043
    7. ':' → logprob: -13.251124382019043
    8. '):
' → logprob: -13.251124382019043
    9. '       ' → logprob: -14.876124382019043
    10. '=None' → logprob: -15.126124382019043

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12482611835002899
    2. '   ' → logprob: -2.374826192855835
    3. ' if' → logprob: -3.749826192855835
    4. '	if' → logprob: -7.499825954437256
    5. 'if' → logprob: -9.249826431274414
    6. '```' → logprob: -10.249826431274414
    7. '    
' → logprob: -10.499826431274414
    8. '	   ' → logprob: -10.499826431274414
    9. '    ' → logprob: -10.874826431274414
    10. '        
' → logprob: -11.249826431274414

Token 282: ' """' (ID: 9280)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6058183908462524
    2. ' if' → logprob: -1.1058183908462524
    3. '       ' → logprob: -2.105818271636963
    4. '   ' → logprob: -6.480818271636963
    5. 'print' → logprob: -8.980818748474121
    6. '	if' → logprob: -11.355818748474121
    7. '    ' → logprob: -11.605818748474121
    8. ' ' → logprob: -12.980818748474121
    9. ' print' → logprob: -13.105818748474121
    10. '	' → logprob: -14.230818748474121

Token 283: ' ?' (ID: 1423)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08390773087739944
    2. '       ' → logprob: -2.8339078426361084
    3. 'if' → logprob: -3.9589078426361084
    4. '   ' → logprob: -6.083907604217529
    5. '    ' → logprob: -8.333908081054688
    6. '	if' → logprob: -9.958908081054688
    7. '        ' → logprob: -11.583908081054688
    8. ' ' → logprob: -11.583908081054688
    9. '	' → logprob: -11.708908081054688
    10. '```' → logprob: -11.958908081054688

Token 284: '????????' (ID: 85218)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08325696736574173
    2. 'if' → logprob: -2.583256959915161
    3. '       ' → logprob: -6.08325719833374
    4. '   ' → logprob: -6.33325719833374
    5. '    ' → logprob: -8.583256721496582
    6. '```' → logprob: -10.208256721496582
    7. '"""' → logprob: -10.583256721496582
    8. '        ' → logprob: -10.708256721496582
    9. ' ' → logprob: -12.208256721496582
    10. ' None' → logprob: -12.833256721496582

Token 285: '????' (ID: 25883)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.49203813076019287
    2. 'if' → logprob: -1.1170381307601929
    3. '       ' → logprob: -3.6170382499694824
    4. '   ' → logprob: -4.242038249969482
    5. ':
' → logprob: -4.242038249969482
    6. ':' → logprob: -5.992038249969482
    7. 'print' → logprob: -6.492038249969482
    8. '
' → logprob: -6.992038249969482
    9. '):
' → logprob: -8.617037773132324
    10. '```' → logprob: -9.117037773132324

Token 286: '??' (ID: 6961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8283829689025879
    2. '       ' → logprob: -1.453382968902588
    3. ':
' → logprob: -1.828382968902588
    4. ':' → logprob: -1.953382968902588
    5. ' if' → logprob: -4.828382968902588
    6. '
' → logprob: -5.453382968902588
    7. '):
' → logprob: -5.703382968902588
    8. '(' → logprob: -5.703382968902588
    9. '(node' → logprob: -5.828382968902588
    10. ',' → logprob: -7.078382968902588

Token 287: ' """
' (ID: 7037)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8257478475570679
    2. '       ' → logprob: -1.2007478475570679
    3. '   ' → logprob: -1.5757478475570679
    4. 'if' → logprob: -3.4507479667663574
    5. '
' → logprob: -4.075747966766357
    6. '    ' → logprob: -6.325747966766357
    7. ':' → logprob: -6.950747966766357
    8. ':
' → logprob: -7.700747966766357
    9. '```' → logprob: -7.950747966766357
    10. '        
' → logprob: -8.0757474899292

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12172625958919525
    2. '   ' → logprob: -2.7467262744903564
    3. ' if' → logprob: -3.4967262744903564
    4. 'if' → logprob: -3.9967262744903564
    5. '	if' → logprob: -6.496726036071777
    6. '	' → logprob: -9.246726036071777
    7. '	   ' → logprob: -9.871726036071777
    8. '    ' → logprob: -9.996726036071777
    9. '```' → logprob: -10.246726036071777
    10. '
' → logprob: -11.621726036071777

Token 289: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00015478975547011942
    2. 'print' → logprob: -9.250154495239258
    3. ' if' → logprob: -9.750154495239258
    4. '   ' → logprob: -15.125154495239258
    5. '       ' → logprob: -15.750154495239258
    6. '```' → logprob: -17.000154495239258
    7. '	if' → logprob: -18.375154495239258
    8. '
' → logprob: -18.750154495239258
    9. 'yield' → logprob: -18.875154495239258
    10. 'result' → logprob: -20.000154495239258

Token 290: ' results' (ID: 4376)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12855227291584015
    2. ' if' → logprob: -2.128552198410034
    3. 'print' → logprob: -6.503552436828613
    4. '       ' → logprob: -9.253552436828613
    5. '   ' → logprob: -11.128552436828613
    6. ' print' → logprob: -11.753552436828613
    7. '    ' → logprob: -12.628552436828613
    8. '        ' → logprob: -13.503552436828613
    9. 'yield' → logprob: -13.753552436828613
    10. '	if' → logprob: -14.503552436828613

Token 291: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06595808267593384
    2. '=' → logprob: -2.815958023071289
    3. '=[]' → logprob: -5.565958023071289
    4. '.append' → logprob: -10.065958023071289
    5. '   ' → logprob: -10.065958023071289
    6. '=[]
' → logprob: -10.815958023071289
    7. '[]' → logprob: -11.065958023071289
    8. '       ' → logprob: -11.815958023071289
    9. '[' → logprob: -11.815958023071289
    10. ',' → logprob: -12.315958023071289

Token 292: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3566945195198059
    2. '[node' → logprob: -1.4816944599151611
    3. '[]
' → logprob: -3.481694459915161
    4. ' []' → logprob: -3.731694459915161
    5. '[' → logprob: -4.35669469833374
    6. ' [' → logprob: -5.48169469833374
    7. ' []
' → logprob: -7.23169469833374
    8. '[n' → logprob: -8.606694221496582
    9. '[]

' → logprob: -10.856694221496582
    10. '   ' → logprob: -11.106694221496582

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0826597511768341
    2. ' if' → logprob: -2.7076597213745117
    3. 'if' → logprob: -4.832659721374512
    4. '   ' → logprob: -5.457659721374512
    5. '    ' → logprob: -8.957659721374512
    6. '	if' → logprob: -9.082659721374512
    7. '	' → logprob: -9.707659721374512
    8. '        ' → logprob: -10.582659721374512
    9. '        
' → logprob: -10.707659721374512
    10. ' ' → logprob: -10.957659721374512

Token 294: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17007620632648468
    2. ' if' → logprob: -1.9200762510299683
    3. '       ' → logprob: -4.670076370239258
    4. 'print' → logprob: -8.295076370239258
    5. '	if' → logprob: -9.045076370239258
    6. '   ' → logprob: -10.170076370239258
    7. '	' → logprob: -10.795076370239258
    8. '    ' → logprob: -13.295076370239258
    9. ' print' → logprob: -13.545076370239258
    10. 'yield' → logprob: -14.295076370239258

Token 295: ' results' (ID: 4376)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38722720742225647
    2. ' if' → logprob: -1.137227177619934
    3. '       ' → logprob: -8.137227058410645
    4. '   ' → logprob: -10.012227058410645
    5. '    ' → logprob: -12.387227058410645
    6. 'print' → logprob: -12.387227058410645
    7. 'yield' → logprob: -12.387227058410645
    8. '        ' → logprob: -12.887227058410645
    9. '	if' → logprob: -13.137227058410645
    10. ' ' → logprob: -14.512227058410645

Token 296: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06786487996578217
    2. ' =' → logprob: -3.0678648948669434
    3. ' if' → logprob: -4.317864894866943
    4. '       ' → logprob: -6.692864894866943
    5. '.' → logprob: -6.942864894866943
    6. '=' → logprob: -7.067864894866943
    7. '   ' → logprob: -7.192864894866943
    8. 'if' → logprob: -7.317864894866943
    9. ':' → logprob: -7.692864894866943
    10. ',' → logprob: -8.942864418029785

Token 297: '(node' (ID: 13356)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.14619231224060059
    2. '(node' → logprob: -2.0211923122406006
    3. '(' → logprob: -5.77119255065918
    4. '(
' → logprob: -8.89619255065918
    5. ' node' → logprob: -9.39619255065918
    6. 'if' → logprob: -9.39619255065918
    7. 'cls' → logprob: -9.64619255065918
    8. '   ' → logprob: -11.64619255065918
    9. '(cls' → logprob: -12.02119255065918
    10. '[node' → logprob: -13.02119255065918

Token 298: '.key' (ID: 8839)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07388010621070862
    2. '.key' → logprob: -2.823880195617676
    3. ')
' → logprob: -4.448880195617676
    4. '.' → logprob: -9.448880195617676
    5. 'key' → logprob: -10.948880195617676
    6. ')
' → logprob: -11.573880195617676
    7. '.
' → logprob: -11.573880195617676
    8. ' key' → logprob: -12.198880195617676
    9. '   ' → logprob: -12.323880195617676
    10. '.)' → logprob: -12.573880195617676

Token 299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6507161259651184
    2. '       ' → logprob: -0.9007161259651184
    3. ')
' → logprob: -2.6507160663604736
    4. '
' → logprob: -7.400716304779053
    5. ' if' → logprob: -8.150715827941895
    6. '   ' → logprob: -8.400715827941895
    7. 'if' → logprob: -10.025715827941895
    8. ' )' → logprob: -10.025715827941895
    9. ')
' → logprob: -10.650715827941895
    10. ' )
' → logprob: -10.775715827941895

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031802088022232056
    2. '
' → logprob: -3.781802177429199
    3. ' if' → logprob: -5.906802177429199
    4. '   ' → logprob: -6.281802177429199
    5. '        
' → logprob: -6.531802177429199
    6. 'if' → logprob: -6.656802177429199
    7. '    
' → logprob: -8.0318021774292
    8. ' 
' → logprob: -8.2818021774292
    9. '\n' → logprob: -9.2818021774292
    10. '  
' → logprob: -9.4068021774292

Token 301: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4992433190345764
    2. ' if' → logprob: -1.7492432594299316
    3. 'if' → logprob: -1.7492432594299316
    4. '
' → logprob: -3.2492432594299316
    5. '   ' → logprob: -5.374243259429932
    6. '        
' → logprob: -7.624243259429932
    7. 'print' (adapté à ' print') → logprob: -8.24924373626709
    8. '	' → logprob: -8.37424373626709
    9. '	if' → logprob: -8.49924373626709
    10. ' ' → logprob: -9.49924373626709

Token 302: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47615793347358704
    2. '(node' → logprob: -0.9761579036712646
    3. '('' → logprob: -7.101158142089844
    4. '("("' → logprob: -7.351158142089844
    5. '("' → logprob: -7.601158142089844
    6. '(f' → logprob: -9.351158142089844
    7. '(
' → logprob: -11.851158142089844
    8. ' (' → logprob: -11.976158142089844
    9. '((' → logprob: -12.351158142089844
    10. '()' → logprob: -12.851158142089844

Token 303: ' {' (ID: 354)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.03125608712434769
    2. '('' → logprob: -3.9062561988830566
    3. '(',' → logprob: -5.031256198883057
    4. 'node' → logprob: -6.156256198883057
    5. '',' → logprob: -6.406256198883057
    6. '(' → logprob: -8.531255722045898
    7. ' ')' → logprob: -10.156255722045898
    8. '')' → logprob: -10.281255722045898
    9. ' (' → logprob: -10.656255722045898
    10. ' ',' → logprob: -10.781255722045898

Token 304: '0' (ID: 15)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.10285483300685883
    2. '}' → logprob: -2.3528547286987305
    3. '}')' → logprob: -6.6028547286987305
    4. '}{' → logprob: -7.1028547286987305
    5. '')' → logprob: -9.35285472869873
    6. 'key' → logprob: -9.47785472869873
    7. ' node' → logprob: -9.72785472869873
    8. '.node' → logprob: -9.97785472869873
    9. '}',' → logprob: -9.97785472869873
    10. '}'' → logprob: -10.22785472869873

Token 305: '}'.' (ID: 58336)
  Prédit: '}'.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}'.' → logprob: -0.022655613720417023
    2. '}' → logprob: -4.147655487060547
    3. '},' → logprob: -6.022655487060547
    4. '.key' → logprob: -6.147655487060547
    5. '}.' → logprob: -6.647655487060547
    6. '.format' → logprob: -7.897655487060547
    7. '}".' → logprob: -9.022655487060547
    8. ''.' → logprob: -9.397655487060547
    9. '.node' → logprob: -9.897655487060547
    10. '}',' → logprob: -10.272655487060547

Token 306: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.0025328563060611486
    2. 'key' → logprob: -6.002532958984375
    3. 'node' → logprob: -9.877532958984375
    4. 'str' → logprob: -12.377532958984375
    5. ' format' → logprob: -13.877532958984375
    6. '.format' → logprob: -15.127532958984375
    7. 'print' → logprob: -15.252532958984375
    8. '	format' → logprob: -16.877532958984375
    9. ' key' → logprob: -17.252532958984375
    10. 'strip' → logprob: -17.627532958984375

Token 307: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0005660186288878322
    2. 'node' → logprob: -7.500566005706787
    3. '(' → logprob: -11.375566482543945
    4. ' node' → logprob: -13.750566482543945
    5. ',node' → logprob: -15.375566482543945
    6. ' (' → logprob: -15.625566482543945
    7. ')' → logprob: -16.875566482543945
    8. '(
' → logprob: -18.125566482543945
    9. '(n' → logprob: -19.000566482543945
    10. '	node' → logprob: -19.125566482543945

Token 308: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -2.4868770196917467e-05
    2. '.' → logprob: -10.625024795532227
    3. ').' → logprob: -14.875024795532227
    4. ' .' → logprob: -15.875024795532227
    5. ')' → logprob: -16.625024795532227
    6. 'key' → logprob: -17.750024795532227
    7. ' key' → logprob: -18.750024795532227
    8. '.Key' → logprob: -18.875024795532227
    9. '[key' → logprob: -20.000024795532227
    10. '.keys' → logprob: -20.000024795532227

Token 309: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4952567219734192
    2. ')' → logprob: -0.9952567219734192
    3. '),' → logprob: -3.8702566623687744
    4. '       ' → logprob: -9.870256423950195
    5. ')),' → logprob: -11.370256423950195
    6. '))
' → logprob: -11.495256423950195
    7. ' ))' → logprob: -11.620256423950195
    8. '   ' → logprob: -11.870256423950195
    9. ')))' → logprob: -12.495256423950195
    10. ' )' → logprob: -12.620256423950195

Token 310: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.25194892287254333
    2. ' end' → logprob: -1.5019489526748657
    3. ')' → logprob: -11.626949310302734
    4. ',end' → logprob: -12.626949310302734
    5. '    ' → logprob: -13.001949310302734
    6. '	end' → logprob: -13.751949310302734
    7. '   ' → logprob: -13.876949310302734
    8. 'node' → logprob: -14.126949310302734
    9. ''end' → logprob: -14.126949310302734
    10. 'sep' → logprob: -14.626949310302734

Token 311: '='')
' (ID: 135148)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.023995868861675262
    2. '=' → logprob: -3.773995876312256
    3. '=''' → logprob: -7.273995876312256
    4. '="' → logprob: -10.648995399475098
    5. '=',' → logprob: -11.148995399475098
    6. ''' → logprob: -11.898995399475098
    7. '='',' → logprob: -12.523995399475098
    8. ' =' → logprob: -13.273995399475098
    9. '='')
' → logprob: -13.273995399475098
    10. ' ='' → logprob: -13.773995399475098

Token 312: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7663112282752991
    2. '       ' → logprob: -0.7663112282752991
    3. ' if' → logprob: -3.8913111686706543
    4. '<|end|>' → logprob: -3.8913111686706543
    5. '   ' → logprob: -4.391311168670654
    6. 'if' → logprob: -5.391311168670654
    7. '	' → logprob: -5.641311168670654
    8. '	if' → logprob: -5.891311168670654
    9. '        
' → logprob: -6.391311168670654
    10. '  
' → logprob: -6.641311168670654

Token 313: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5013831853866577
    2. 'if' (adapté à ' if') → logprob: -1.0013831853866577
    3. '       ' → logprob: -3.8763833045959473
    4. '	if' → logprob: -5.376383304595947
    5. '
' → logprob: -7.751383304595947
    6. '	' → logprob: -8.251382827758789
    7. '        
' → logprob: -8.501382827758789
    8. '\t' → logprob: -8.626382827758789
    9. '   ' → logprob: -9.001382827758789
    10. ' 
' → logprob: -9.751382827758789

Token 314: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.038042064756155014
    2. 'node' → logprob: -3.2880420684814453
    3. '	node' → logprob: -14.538042068481445
    4. '(node' → logprob: -16.413042068481445
    5. ' ' → logprob: -17.663042068481445
    6. ' ' → logprob: -18.163042068481445
    7. 'Node' → logprob: -18.913042068481445
    8. '   ' → logprob: -19.288042068481445
    9. '[node' → logprob: -19.413042068481445
    10. ' not' → logprob: -19.788042068481445

Token 315: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.771655115589965e-05
    2. '.' → logprob: -11.125018119812012
    3. ' .' → logprob: -13.000018119812012
    4. '.right' → logprob: -15.000018119812012
    5. 'left' → logprob: -16.750017166137695
    6. '.Left' → logprob: -17.000017166137695
    7. '.has' → logprob: -17.875017166137695
    8. ' is' → logprob: -18.000017166137695
    9. ' left' → logprob: -18.750017166137695
    10. '.le' → logprob: -19.000017166137695

Token 316: ' !=' (ID: 1666)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014734066091477871
    2. '!=' → logprob: -5.139734268188477
    3. ':' → logprob: -5.389734268188477
    4. ' !=' → logprob: -5.639734268188477
    5. 'is' → logprob: -7.389734268188477
    6. ')' → logprob: -12.264734268188477
    7. '   ' → logprob: -12.514734268188477
    8. '	is' → logprob: -12.639734268188477
    9. ':
' → logprob: -12.639734268188477
    10. '<|end|>' → logprob: -12.639734268188477

Token 317: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.575939953327179
    2. ' None' → logprob: -0.825939953327179
    3. ' ' → logprob: -15.575940132141113
    4. '=None' → logprob: -15.825940132141113
    5. '_None' → logprob: -16.450939178466797
    6. '   ' → logprob: -16.825939178466797
    7. '(None' → logprob: -17.075939178466797
    8. 'null' → logprob: -18.075939178466797
    9. 'none' → logprob: -18.325939178466797
    10. ' none' → logprob: -18.325939178466797

Token 318: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008693634532392025
    2. ':
' → logprob: -4.758693695068359
    3. '):' → logprob: -10.50869369506836
    4. '       ' → logprob: -10.63369369506836
    5. ' :' → logprob: -11.00869369506836
    6. '):
' → logprob: -12.13369369506836
    7. ' and' → logprob: -13.75869369506836
    8. '           ' → logprob: -13.88369369506836
    9. ',' → logprob: -14.13369369506836
    10. ' :
' → logprob: -14.13369369506836

Token 319: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9846407175064087
    2. '           ' → logprob: -0.9846407175064087
    3. '       ' → logprob: -2.109640598297119
    4. ':
' → logprob: -2.859640598297119
    5. '
' → logprob: -4.484640598297119
    6. '<|end|>' → logprob: -4.609640598297119
    7. '        
' → logprob: -4.734640598297119
    8. '):
' → logprob: -4.859640598297119
    9. '):' → logprob: -5.234640598297119
    10. '        ' → logprob: -5.234640598297119

Token 320: ' #' (ID: 1069)
  Prédit: ' Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Node' → logprob: -0.6992864012718201
    2. ' cls' → logprob: -0.8242864012718201
    3. 'cls' → logprob: -3.199286460876465
    4. 'Node' → logprob: -3.824286460876465
    5. '           ' → logprob: -7.699286460876465
    6. ' node' → logprob: -7.949286460876465
    7. 'node' → logprob: -8.199286460876465
    8. 'Cls' → logprob: -9.324286460876465
    9. '	Node' → logprob: -9.324286460876465
    10. '_Node' → logprob: -9.449286460876465

Token 321: ' results' (ID: 4376)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.02992149442434311
    2. ' cls' → logprob: -3.529921531677246
    3. 'Node' → logprob: -8.779921531677246
    4. 'Cls' → logprob: -11.529921531677246
    5. ' Node' → logprob: -12.904921531677246
    6. '(cls' → logprob: -13.654921531677246
    7. 'classmethod' → logprob: -13.654921531677246
    8. '   ' → logprob: -14.029921531677246
    9. '           ' → logprob: -14.154921531677246
    10. '       ' → logprob: -15.404921531677246

Token 322: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12275439500808716
    2. ' =' → logprob: -2.3727543354034424
    3. '=' → logprob: -4.7477545738220215
    4. '.extend' → logprob: -4.9977545738220215
    5. '.' → logprob: -5.7477545738220215
    6. '=node' → logprob: -6.1227545738220215
    7. '   ' → logprob: -8.247754096984863
    8. '[node' → logprob: -8.747754096984863
    9. '.walk' → logprob: -8.872754096984863
    10. 'node' → logprob: -8.872754096984863

Token 323: '(cls' (ID: 46446)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.4263480007648468
    2. '(node' → logprob: -1.5513479709625244
    3. 'Node' → logprob: -3.0513479709625244
    4. ' node' → logprob: -3.1763479709625244
    5. '(' → logprob: -3.6763479709625244
    6. 'cls' → logprob: -4.8013482093811035
    7. '('' → logprob: -5.5513482093811035
    8. '(Node' → logprob: -5.9263482093811035
    9. '(cls' → logprob: -6.0513482093811035
    10. ' Node' → logprob: -6.9263482093811035

Token 324: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -0.0034115586895495653
    2. 'walk' → logprob: -5.878411769866943
    3. '.left' → logprob: -7.503411769866943
    4. '.' → logprob: -9.878411293029785
    5. ' .' → logprob: -13.753411293029785
    6. 'left' → logprob: -13.878411293029785
    7. 'node' → logprob: -14.628411293029785
    8. ' walk' → logprob: -15.128411293029785
    9. '.node' → logprob: -15.378411293029785
    10. '.visit' → logprob: -15.628411293029785

Token 325: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -0.0005848454311490059
    2. 'pre' → logprob: -7.500585079193115
    3. 'Pre' → logprob: -10.875584602355957
    4. '(node' → logprob: -12.000584602355957
    5. '_' → logprob: -12.875584602355957
    6. ' preorder' → logprob: -12.875584602355957
    7. '_PRE' → logprob: -14.625584602355957
    8. 'left' → logprob: -15.375584602355957
    9. '_Pre' → logprob: -15.500584602355957
    10. 'node' → logprob: -15.500584602355957

Token 326: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -8.180258191714529e-06
    2. 'node' → logprob: -11.750008583068848
    3. '_order' → logprob: -17.12500762939453
    4. '(node' → logprob: -17.12500762939453
    5. 'pre' → logprob: -17.37500762939453
    6. 'ord' → logprob: -18.00000762939453
    7. 'left' → logprob: -18.37500762939453
    8. ' order' → logprob: -18.62500762939453
    9. 'tree' → logprob: -18.62500762939453
    10. 'class' → logprob: -19.37500762939453

Token 327: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.00015383612480945885
    2. '(' → logprob: -9.000153541564941
    3. ')' → logprob: -11.125153541564941
    4. '(cls' → logprob: -12.250153541564941
    5. '(n' → logprob: -12.375153541564941
    6. ' (' → logprob: -12.875153541564941
    7. 'left' → logprob: -13.500153541564941
    8. '(
' → logprob: -14.375153541564941
    9. '(root' → logprob: -14.750153541564941
    10. '(left' → logprob: -14.875153541564941

Token 328: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0015859126579016447
    2. '(node' → logprob: -6.751585960388184
    3. '.node' → logprob: -8.001585960388184
    4. '.' → logprob: -10.751585960388184
    5. 'left' → logprob: -11.001585960388184
    6. ',node' → logprob: -11.001585960388184
    7. ' .' → logprob: -11.626585960388184
    8. ').' → logprob: -12.251585960388184
    9. ',' → logprob: -12.751585960388184
    10. '[node' → logprob: -12.876585960388184

Token 329: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18832291662693024
    2. '))' → logprob: -1.813322901725769
    3. '(node' → logprob: -5.063323020935059
    4. '(' → logprob: -6.313323020935059
    5. '   ' → logprob: -8.813323020935059
    6. '())' → logprob: -9.813323020935059
    7. '()))' → logprob: -10.438323020935059
    8. '       ' → logprob: -10.438323020935059
    9. ' )' → logprob: -10.563323020935059
    10. '))
' → logprob: -10.688323020935059

Token 330: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48316141963005066
    2. '
' → logprob: -0.983161449432373
    3. '           ' → logprob: -5.983161449432373
    4. '        
' → logprob: -5.983161449432373
    5. '    
' → logprob: -6.483161449432373
    6. '   ' → logprob: -7.233161449432373
    7. '  
' → logprob: -7.358161449432373
    8. '            
' → logprob: -7.733161449432373
    9. '\n' → logprob: -8.358160972595215
    10. ')
' → logprob: -8.983160972595215

Token 331: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' (adapté à ' cls') → logprob: -0.49397552013397217
    2. ' cls' → logprob: -0.9939755201339722
    3. '           ' → logprob: -3.9939756393432617
    4. '(cls' → logprob: -7.368975639343262
    5. '       ' → logprob: -8.868975639343262
    6. '            
' → logprob: -9.993975639343262
    7. ' ' → logprob: -9.993975639343262
    8. '_cls' → logprob: -9.993975639343262
    9. '   ' → logprob: -10.118975639343262
    10. 'node' → logprob: -10.493975639343262

Token 332: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -0.014204994775354862
    2. '.' → logprob: -4.264204978942871
    3. '.left' → logprob: -10.639204978942871
    4. ' .' → logprob: -11.264204978942871
    5. '.w' → logprob: -13.014204978942871
    6. '.visit' → logprob: -14.139204978942871
    7. '.wave' → logprob: -15.139204978942871
    8. '​.' → logprob: -15.389204978942871
    9. '.right' → logprob: -15.514204978942871
    10. '.print' → logprob: -15.514204978942871

Token 333: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.375000953674316
    3. 'pre' → logprob: -15.375000953674316
    4. '_Pre' → logprob: -16.000001907348633
    5. '(node' → logprob: -16.250001907348633
    6. '_PRE' → logprob: -16.375001907348633
    7. 'Pre' → logprob: -16.875001907348633
    8. '_post' → logprob: -17.500001907348633
    9. '_left' → logprob: -17.750001907348633
    10. '_per' → logprob: -18.375001907348633

Token 334: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.6240566083070007e-06
    2. 'node' → logprob: -14.000001907348633
    3. 'ord' → logprob: -15.000001907348633
    4. '_order' → logprob: -16.125001907348633
    5. 'or' → logprob: -16.375001907348633
    6. 'oder' → logprob: -16.750001907348633
    7. ' order' → logprob: -17.000001907348633
    8. 'orde' → logprob: -17.500001907348633
    9. 'o' → logprob: -18.625001907348633
    10. 'ordre' → logprob: -18.750001907348633

Token 335: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.011048882268369198
    2. '(' → logprob: -4.511048793792725
    3. '(n' → logprob: -14.886049270629883
    4. ' (' → logprob: -15.136049270629883
    5. '(
' → logprob: -15.261049270629883
    6. '(Node' → logprob: -15.636049270629883
    7. '(

' → logprob: -18.511049270629883
    8. ',node' → logprob: -19.011049270629883
    9. ')' → logprob: -19.136049270629883
    10. '(nodes' → logprob: -19.386049270629883

Token 336: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.00012880703434348106
    2. '.' → logprob: -9.000128746032715
    3. 'left' → logprob: -12.625128746032715
    4. ' .' → logprob: -14.125128746032715
    5. '.le' → logprob: -14.750128746032715
    6. '.right' → logprob: -15.375128746032715
    7. ').' → logprob: -15.625128746032715
    8. ')' → logprob: -16.00012969970703
    9. '.Left' → logprob: -16.00012969970703
    10. '(left' → logprob: -16.37512969970703

Token 337: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000742803153116256
    2. ')
' → logprob: -7.2507429122924805
    3. '       ' → logprob: -10.37574291229248
    4. ' )' → logprob: -13.50074291229248
    5. '   ' → logprob: -15.37574291229248
    6. ')
' → logprob: -16.750741958618164
    7. ')#' → logprob: -18.125741958618164
    8. ')

' → logprob: -18.250741958618164
    9. ')\
' → logprob: -18.250741958618164
    10. ' ' → logprob: -18.625741958618164

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008544364012777805
    2. '
' → logprob: -5.383544445037842
    3. '	' → logprob: -5.883544445037842
    4. '   ' → logprob: -7.383544445037842
    5. '<|end|>' → logprob: -8.883543968200684
    6. '        
' → logprob: -9.008543968200684
    7. '		
' → logprob: -9.758543968200684
    8. '	   ' → logprob: -10.508543968200684
    9. '	if' → logprob: -10.633543968200684
    10. '    
' → logprob: -10.633543968200684

Token 339: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05189048498868942
    2. ' if' → logprob: -3.3018903732299805
    3. '   ' → logprob: -5.1768903732299805
    4. '	if' → logprob: -5.8018903732299805
    5. 'if' (adapté à ' if') → logprob: -6.0518903732299805
    6. '	' → logprob: -6.8018903732299805
    7. '        
' → logprob: -7.5518903732299805
    8. ' ' → logprob: -8.17689037322998
    9. ' ' → logprob: -8.55189037322998
    10. '    ' → logprob: -8.92689037322998

Token 340: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.0015031944494694471
    2. 'node' → logprob: -6.501502990722656
    3. '(node' → logprob: -14.251502990722656
    4. '	node' → logprob: -16.501502990722656
    5. ' ' → logprob: -17.876502990722656
    6. '[node' → logprob: -18.251502990722656
    7. 'Node' → logprob: -19.376502990722656
    8. '_node' → logprob: -19.751502990722656
    9. ',node' → logprob: -19.876502990722656
    10. ' ' → logprob: -20.001502990722656

Token 341: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -3.6789137084269896e-05
    2. '.' → logprob: -10.25003719329834
    3. ' .' → logprob: -13.62503719329834
    4. '.left' → logprob: -16.750036239624023
    5. 'right' → logprob: -17.500036239624023
    6. '.Right' → logprob: -18.375036239624023
    7. '   ' → logprob: -18.500036239624023
    8. '	right' → logprob: -18.750036239624023
    9. ' ' → logprob: -19.750036239624023
    10. '[right' → logprob: -20.000036239624023

Token 342: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.005982242990285158
    2. '!=' → logprob: -5.130982398986816
    3. ' is' → logprob: -9.880982398986816
    4. ' ' → logprob: -13.880982398986816
    5. '()!=' → logprob: -14.255982398986816
    6. ' ' → logprob: -14.630982398986816
    7. ' not' → logprob: -15.255982398986816
    8. ')!=' → logprob: -16.1309814453125
    9. ' !==' → logprob: -17.3809814453125
    10. 'is' → logprob: -17.5059814453125

Token 343: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.3132622241973877
    2. 'None' → logprob: -1.3132622241973877
    3. '(None' → logprob: -15.438261985778809
    4. ' ' → logprob: -16.188262939453125
    5. '_None' → logprob: -16.313262939453125
    6. '=None' → logprob: -16.813262939453125
    7. ' not' → logprob: -17.188262939453125
    8. '   ' → logprob: -18.063262939453125
    9. ' none' → logprob: -18.438262939453125
    10. '  ' → logprob: -18.813262939453125

Token 344: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003963585942983627
    2. '           ' → logprob: -5.628963470458984
    3. ':
' → logprob: -8.003963470458984
    4. '       ' → logprob: -11.503963470458984
    5. '):' → logprob: -11.628963470458984
    6. '<|end|>' → logprob: -12.628963470458984
    7. ' :' → logprob: -13.128963470458984
    8. '          ' → logprob: -14.003963470458984
    9. '               ' → logprob: -14.253963470458984
    10. ',' → logprob: -14.378963470458984

Token 345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025479584001004696
    2. '       ' → logprob: -6.127547740936279
    3. '		' → logprob: -8.377548217773438
    4. '	       ' → logprob: -10.252548217773438
    5. 'cls' → logprob: -10.627548217773438
    6. '          ' → logprob: -11.252548217773438
    7. '   ' → logprob: -11.627548217773438
    8. '               ' → logprob: -11.877548217773438
    9. '<|end|>' → logprob: -12.002548217773438
    10. ':' → logprob: -12.252548217773438

Token 346: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3377307653427124
    2. 'cls' → logprob: -1.3377307653427124
    3. ' cls' → logprob: -3.837730884552002
    4. '		' → logprob: -6.712730884552002
    5. '       ' → logprob: -6.712730884552002
    6. '(cls' → logprob: -9.587730407714844
    7. '               ' → logprob: -10.337730407714844
    8. '	' → logprob: -10.587730407714844
    9. '
' → logprob: -11.587730407714844
    10. '.cls' → logprob: -11.712730407714844

Token 347: ' results' (ID: 4376)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.018853258341550827
    2. ' cls' → logprob: -4.018853187561035
    3. '           ' → logprob: -7.268853187561035
    4. '(cls' → logprob: -12.768853187561035
    5. '       ' → logprob: -13.143853187561035
    6. '.cls' → logprob: -14.143853187561035
    7. '_cls' → logprob: -14.893853187561035
    8. 'Cls' → logprob: -16.76885414123535
    9. '   ' → logprob: -17.14385414123535
    10. 'cl' → logprob: -17.14385414123535

Token 348: '.append' (ID: 3709)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23820726573467255
    2. '.walk' → logprob: -2.1132073402404785
    3. 'cls' → logprob: -2.9882073402404785
    4. '.append' → logprob: -3.9882073402404785
    5. '.cls' → logprob: -5.2382073402404785
    6. ':' → logprob: -5.4882073402404785
    7. '.' → logprob: -5.8632073402404785
    8. '(cls' → logprob: -5.9882073402404785
    9. ':
' → logprob: -6.8632073402404785
    10. ' cls' → logprob: -6.9882073402404785

Token 349: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0007121934904716909
    2. 'cls' → logprob: -7.2507123947143555
    3. ' cls' → logprob: -13.625712394714355
    4. '(cl' → logprob: -14.500712394714355
    5. '(' → logprob: -15.375712394714355
    6. '(clazz' → logprob: -16.12571144104004
    7. '.cls' → logprob: -16.75071144104004
    8. '_cls' → logprob: -17.00071144104004
    9. '(class' → logprob: -17.00071144104004
    10. '(
' → logprob: -18.62571144104004

Token 350: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -0.4796834886074066
    2. 'walk' → logprob: -0.979683518409729
    3. '(node' → logprob: -5.3546833992004395
    4. '(cls' → logprob: -7.8546833992004395
    5. '.right' → logprob: -8.604683876037598
    6. '.' → logprob: -9.229683876037598
    7. 'cls' → logprob: -9.229683876037598
    8. 'right' → logprob: -10.104683876037598
    9. '_walk' → logprob: -10.979683876037598
    10. ' walk' → logprob: -11.479683876037598

Token 351: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -0.00033999193692579865
    2. '_right' → logprob: -8.250340461730957
    3. 'right' → logprob: -9.750340461730957
    4. '_post' → logprob: -11.125340461730957
    5. 'pre' → logprob: -12.375340461730957
    6. 'Pre' → logprob: -14.125340461730957
    7. '.right' → logprob: -16.25033950805664
    8. '_per' → logprob: -16.37533950805664
    9. ' preorder' → logprob: -16.50033950805664
    10. '_order' → logprob: -16.62533950805664

Token 352: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -3.292907877039397e-06
    2. 'node' → logprob: -13.75000286102295
    3. '_order' → logprob: -14.25000286102295
    4. 'right' → logprob: -14.25000286102295
    5. 'pre' → logprob: -15.50000286102295
    6. 'post' → logprob: -15.50000286102295
    7. '
' → logprob: -17.000003814697266
    8. '       ' → logprob: -17.125003814697266
    9. 'ordre' → logprob: -17.500003814697266
    10. 'o' → logprob: -17.625003814697266

Token 353: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: 0.0
    2. '(' → logprob: -16.75
    3. 'node' → logprob: -17.0
    4. ')' → logprob: -19.0
    5. '[node' → logprob: -19.125
    6. ' node' → logprob: -20.0
    7. ',node' → logprob: -20.125
    8. '=node' → logprob: -20.75
    9. '(
' → logprob: -21.5
    10. ' (' → logprob: -21.5

Token 354: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0025154929608106613
    2. 'right' → logprob: -6.0025153160095215
    3. '.' → logprob: -10.87751579284668
    4. '(node' → logprob: -11.50251579284668
    5. ')' → logprob: -12.62751579284668
    6. '(right' → logprob: -13.12751579284668
    7. ' right' → logprob: -13.50251579284668
    8. ' .' → logprob: -13.75251579284668
    9. 'Right' → logprob: -14.12751579284668
    10. '.node' → logprob: -14.25251579284668

Token 355: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004216170927975327
    2. ')
' → logprob: -7.875421524047852
    3. '       ' → logprob: -10.875421524047852
    4. '(node' → logprob: -11.375421524047852
    5. '           ' → logprob: -12.375421524047852
    6. '))' → logprob: -12.750421524047852
    7. '):
' → logprob: -13.625421524047852
    8. '   ' → logprob: -14.250421524047852
    9. '               ' → logprob: -15.000421524047852
    10. '):' → logprob: -15.000421524047852

Token 356: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030851051211357117
    2. '       ' → logprob: -4.030850887298584
    3. 'cls' → logprob: -4.530850887298584
    4. '(cls' → logprob: -6.655850887298584
    5. '               ' → logprob: -8.655851364135742
    6. ' cls' → logprob: -8.655851364135742
    7. '		' → logprob: -9.405851364135742
    8. '   ' → logprob: -9.905851364135742
    9. '_cls' → logprob: -11.155851364135742
    10. ')' → logprob: -11.530851364135742

Token 357: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' (adapté à ' cls') → logprob: -0.00020425561524461955
    2. ' cls' → logprob: -8.500204086303711
    3. '           ' → logprob: -14.250204086303711
    4. 'cl' → logprob: -17.12520408630371
    5. '       ' → logprob: -17.25020408630371
    6. '(cls' → logprob: -17.37520408630371
    7. '.cls' → logprob: -18.12520408630371
    8. '_cls' → logprob: -18.25020408630371
    9. 'Cls' → logprob: -19.00020408630371
    10. '   ' → logprob: -19.00020408630371

Token 358: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -0.0008682293118909001
    2. '.right' → logprob: -7.250868320465088
    3. '.' → logprob: -8.87586784362793
    4. 'walk' → logprob: -11.37586784362793
    5. ' .' → logprob: -12.12586784362793
    6. '.w' → logprob: -13.87586784362793
    7. '.watch' → logprob: -15.50086784362793
    8. '.write' → logprob: -16.12586784362793
    9. '.wrap' → logprob: -16.37586784362793
    10. '.wait' → logprob: -16.87586784362793

Token 359: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -0.0011493867496028543
    2. '_right' → logprob: -7.1261491775512695
    3. 'right' → logprob: -8.00114917755127
    4. 'pre' → logprob: -12.37614917755127
    5. '_order' → logprob: -13.37614917755127
    6. '_post' → logprob: -14.00114917755127
    7. 'Pre' → logprob: -14.12614917755127
    8. '_per' → logprob: -14.25114917755127
    9. '_' → logprob: -14.87614917755127
    10. '._' → logprob: -15.12614917755127

Token 360: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.7432603272027336e-06
    2. 'ord' → logprob: -15.000001907348633
    3. '_order' → logprob: -15.250001907348633
    4. 'o' → logprob: -15.750001907348633
    5. ' order' → logprob: -15.750001907348633
    6. 'or' → logprob: -15.750001907348633
    7. '
' → logprob: -16.000001907348633
    8. 'orde' → logprob: -16.250001907348633
    9. 'ordre' → logprob: -16.500001907348633
    10. 'oder' → logprob: -16.750001907348633

Token 361: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -12.87500286102295
    3. '(n' → logprob: -18.625001907348633
    4. 'node' → logprob: -19.625001907348633
    5. '(
' → logprob: -19.750001907348633
    6. ' (' → logprob: -20.125001907348633
    7. '(Node' → logprob: -20.750001907348633
    8. ',node' → logprob: -20.875001907348633
    9. '[node' → logprob: -21.250001907348633
    10. '=node' → logprob: -21.625001907348633

Token 362: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -7.107425062713446e-06
    2. '.' → logprob: -12.000006675720215
    3. ' .' → logprob: -14.625006675720215
    4. 'right' → logprob: -15.625006675720215
    5. ').' → logprob: -15.625006675720215
    6. '.left' → logprob: -16.00000762939453
    7. ')' → logprob: -16.62500762939453
    8. '.Right' → logprob: -17.62500762939453
    9. '(right' → logprob: -19.00000762939453
    10. '[right' → logprob: -20.25000762939453

Token 363: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.64970643306151e-05
    2. ')
' → logprob: -9.375086784362793
    3. ' )' → logprob: -13.875086784362793
    4. '       ' → logprob: -15.250086784362793
    5. '   ' → logprob: -15.500086784362793
    6. ')#' → logprob: -16.500085830688477
    7. ')return' → logprob: -17.000085830688477
    8. ')

' → logprob: -17.125085830688477
    9. '<|end|>' → logprob: -17.750085830688477
    10. ')}' → logprob: -17.750085830688477

Token 364: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 366: 'return' (ID: 1034)
  Prédit: 'return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.43986624479293823
    2. '<|end|>' → logprob: -1.189866304397583
    3. ' return' → logprob: -3.689866304397583
    4. '#' → logprob: -4.189866065979004
    5. '   ' → logprob: -5.564866065979004
    6. '<|end|>' → logprob: -6.439866065979004
    7. ':return' → logprob: -6.564866065979004
    8. '@return' → logprob: -6.814866065979004
    9. '	return' → logprob: -6.939866065979004
    10. '```' → logprob: -7.439866065979004

Token 367: ' results' (ID: 4376)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.4322877824306488
    2. '<|end|>' → logprob: -1.6822878122329712
    3. 'None' → logprob: -1.8072878122329712
    4. ' ' → logprob: -7.432287693023682
    5. '
' → logprob: -8.43228816986084
    6. '(None' → logprob: -9.68228816986084
    7. ' 
' → logprob: -11.05728816986084
    8. '<|end|>' → logprob: -11.55728816986084
    9. '_none' → logprob: -11.93228816986084
    10. '\n' → logprob: -12.05728816986084

Token 368: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 369: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 370: ' @' (ID: 759)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.0006562008056789637
    2. 'staticmethod' → logprob: -7.3756561279296875
    3. 'property' → logprob: -11.125656127929688
    4. 'class' → logprob: -11.250656127929688
    5. '@' → logprob: -13.375656127929688
    6. ' class' → logprob: -16.125656127929688
    7. '
' → logprob: -16.250656127929688
    8. '__' → logprob: -18.250656127929688
    9. '@class' → logprob: -18.250656127929688
    10. '@@' → logprob: -18.500656127929688

Token 372: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0150667829439044
    2. ' def' → logprob: -4.390066623687744
    3. '
' → logprob: -6.015066623687744
    4. '	def' → logprob: -10.015067100524902
    5. '   ' → logprob: -10.890067100524902
    6. ':def' → logprob: -11.140067100524902
    7. ':' → logprob: -11.390067100524902
    8. '(' → logprob: -11.765067100524902
    9. ' ' → logprob: -12.640067100524902
    10. 'de' → logprob: -12.890067100524902

Token 373: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.259079363080673e-05
    2. ' def' → logprob: -11.625012397766113
    3. '
' → logprob: -12.875012397766113
    4. '   ' → logprob: -14.125012397766113
    5. '	def' → logprob: -15.500012397766113
    6. 'de' → logprob: -17.50001335144043
    7. ':def' → logprob: -17.50001335144043
    8. ' ' → logprob: -18.25001335144043
    9. 'Def' → logprob: -19.37501335144043
    10. 'd' → logprob: -19.37501335144043

Token 374: ' def' (ID: 1056)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.2825191617012024
    2. 'def' (adapté à ' def') → logprob: -1.4075191020965576
    3. 'find' → logprob: -8.657519340515137
    4. 'get' → logprob: -8.657519340515137
    5. 'balance' → logprob: -8.657519340515137
    6. ' walk' → logprob: -8.782519340515137
    7. ' def' → logprob: -9.032519340515137
    8. 'update' → logprob: -9.282519340515137
    9. 'in' → logprob: -9.657519340515137
    10. '
' → logprob: -9.782519340515137

Token 375: ' walk' (ID: 5229)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.06595875322818756
    2. ' walk' → logprob: -3.4409587383270264
    3. 'update' → logprob: -4.5659589767456055
    4. 'height' → logprob: -4.8159589767456055
    5. 'get' → logprob: -6.3159589767456055
    6. 'rotate' → logprob: -6.4409589767456055
    7. 'in' → logprob: -6.5659589767456055
    8. 'set' → logprob: -6.5659589767456055
    9. 'insert' → logprob: -6.8159589767456055
    10. 'balance' → logprob: -6.9409589767456055

Token 376: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0004116076452191919
    2. '_post' → logprob: -7.875411510467529
    3. '_pre' → logprob: -10.625411987304688
    4. '_' → logprob: -13.000411987304688
    5. '_level' → logprob: -13.375411987304688
    6. 'in' → logprob: -13.500411987304688
    7. 'In' → logprob: -14.125411987304688
    8. ' inorder' → logprob: -14.625411987304688
    9. '_order' → logprob: -14.750411987304688
    10. '_In' → logprob: -16.125411987304688

Token 377: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -4.127333340875339e-06
    2. '_order' → logprob: -12.500003814697266
    3. '(cls' → logprob: -15.250003814697266
    4. 'pre' → logprob: -16.750003814697266
    5. 'class' → logprob: -17.125003814697266
    6. 'ord' → logprob: -17.250003814697266
    7. '
' → logprob: -17.375003814697266
    8. 'oder' → logprob: -17.500003814697266
    9. 'Order' → logprob: -18.125003814697266
    10. 'orde' → logprob: -18.250003814697266

Token 378: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.25000286102295
    3. '(cl' → logprob: -14.50000286102295
    4. '(clazz' → logprob: -15.62500286102295
    5. 'cls' → logprob: -16.750001907348633
    6. '(class' → logprob: -17.000001907348633
    7. ' (' → logprob: -17.000001907348633
    8. '(c' → logprob: -18.250001907348633
    9. '(
' → logprob: -19.375001907348633
    10. ' cls' → logprob: -19.750001907348633

Token 379: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -3.5597102396423e-05
    2. ',' → logprob: -11.000035285949707
    3. '(' → logprob: -11.250035285949707
    4. ')' → logprob: -12.875035285949707
    5. ')(' → logprob: -12.875035285949707
    6. ' (' → logprob: -15.750035285949707
    7. '(cl' → logprob: -16.000036239624023
    8. '(class' → logprob: -16.250036239624023
    9. '(clazz' → logprob: -16.375036239624023
    10. '   ' → logprob: -16.500036239624023

Token 380: ' node' (ID: 4596)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.01818985491991043
    2. ' cls' → logprob: -4.018189907073975
    3. 'node' → logprob: -10.393189430236816
    4. '(cls' → logprob: -12.143189430236816
    5. 'class' → logprob: -13.018189430236816
    6. ' node' → logprob: -14.143189430236816
    7. 'classmethod' → logprob: -14.143189430236816
    8. 'cl' → logprob: -16.143190383911133
    9. '.cls' → logprob: -16.643190383911133
    10. '_cls' → logprob: -16.768190383911133

Token 381: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04933224245905876
    2. ',' → logprob: -3.0493321418762207
    3. '):
' → logprob: -7.674332141876221
    4. ')' → logprob: -9.299332618713379
    5. '       ' → logprob: -9.674332618713379
    6. '   ' → logprob: -9.799332618713379
    7. '(cls' → logprob: -10.174332618713379
    8. ',node' → logprob: -10.674332618713379
    9. ' ):' → logprob: -13.174332618713379
    10. 'cls' → logprob: -13.424332618713379

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007145775598473847
    2. '   ' → logprob: -7.3757147789001465
    3. '    ' → logprob: -10.000714302062988
    4. ' if' → logprob: -10.625714302062988
    5. '      ' → logprob: -11.750714302062988
    6. '     ' → logprob: -12.500714302062988
    7. '        ' → logprob: -13.625714302062988
    8. 'if' → logprob: -13.625714302062988
    9. '	   ' → logprob: -13.625714302062988
    10. '    ' → logprob: -14.500714302062988

Token 383: ' """' (ID: 9280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07578978687524796
    2. 'if' → logprob: -2.8257896900177
    3. ' if' → logprob: -4.450789928436279
    4. '   ' → logprob: -6.325789928436279
    5. '    ' → logprob: -8.575789451599121
    6. '#' → logprob: -11.075789451599121
    7. '	if' → logprob: -11.325789451599121
    8. '	' → logprob: -11.450789451599121
    9. '      ' → logprob: -11.575789451599121
    10. 'print' → logprob: -11.950789451599121

Token 384: ' ?' (ID: 1423)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.408652663230896
    2. ' if' → logprob: -1.158652663230896
    3. '       ' → logprob: -3.9086527824401855
    4. '   ' → logprob: -6.9086527824401855
    5. '"""' → logprob: -8.158652305603027
    6. ' ' → logprob: -9.783652305603027
    7. ' """' → logprob: -9.783652305603027
    8. '    ' → logprob: -9.908652305603027
    9. 'print' → logprob: -11.408652305603027
    10. '#' → logprob: -12.158652305603027

Token 385: '????????' (ID: 85218)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.08564931154251099
    2. ' """' → logprob: -3.210649251937866
    3. '   ' → logprob: -4.210649490356445
    4. '       ' → logprob: -4.585649490356445
    5. ' ' → logprob: -5.335649490356445
    6. 'if' → logprob: -5.960649490356445
    7. '""' → logprob: -6.460649490356445
    8. '  ' → logprob: -6.835649490356445
    9. '?' → logprob: -6.835649490356445
    10. 'def' → logprob: -7.085649490356445

Token 386: '????' (ID: 25883)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.6083810925483704
    2. 'cls' → logprob: -1.6083810329437256
    3. '   ' → logprob: -2.1083810329437256
    4. '(node' → logprob: -3.1083810329437256
    5. '       ' → logprob: -3.3583810329437256
    6. 'def' → logprob: -4.233381271362305
    7. 'node' → logprob: -4.608381271362305
    8. '"""' → logprob: -4.733381271362305
    9. ' cls' → logprob: -5.108381271362305
    10. ' ' → logprob: -6.108381271362305

Token 387: '??' (ID: 6961)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32754987478256226
    2. '   ' → logprob: -1.702549934387207
    3. ':' → logprob: -2.452549934387207
    4. '"""' → logprob: -5.702549934387207
    5. '#' → logprob: -6.452549934387207
    6. ':
' → logprob: -6.702549934387207
    7. '    ' → logprob: -6.827549934387207
    8. '):' → logprob: -7.827549934387207
    9. ')' → logprob: -7.827549934387207
    10. 'if' → logprob: -8.077549934387207

Token 388: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18605025112628937
    2. '   ' → logprob: -1.811050295829773
    3. 'if' → logprob: -6.1860504150390625
    4. ' if' → logprob: -6.9360504150390625
    5. '
' → logprob: -7.3110504150390625
    6. '(' → logprob: -7.9360504150390625
    7. '(cls' → logprob: -7.9360504150390625
    8. '    ' → logprob: -8.061050415039062
    9. ' ' → logprob: -8.436050415039062
    10. '  ' → logprob: -8.561050415039062

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09086614102125168
    2. 'if' → logprob: -2.5908660888671875
    3. ' if' → logprob: -5.0908660888671875
    4. '   ' → logprob: -5.2158660888671875
    5. '    ' → logprob: -8.840866088867188
    6. '	if' → logprob: -9.215866088867188
    7. '	' → logprob: -10.340866088867188
    8. '  ' → logprob: -11.090866088867188
    9. '      ' → logprob: -11.840866088867188
    10. ' ' → logprob: -11.965866088867188

Token 390: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06723521649837494
    2. '       ' → logprob: -3.317235231399536
    3. ' if' → logprob: -3.567235231399536
    4. '   ' → logprob: -8.067234992980957
    5. '    ' → logprob: -9.192234992980957
    6. '        ' → logprob: -9.692234992980957
    7. '	if' → logprob: -10.192234992980957
    8. '	' → logprob: -11.692234992980957
    9. ' ' → logprob: -12.192234992980957
    10. '  ' → logprob: -13.567234992980957

Token 391: ' results' (ID: 4376)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00045498309191316366
    2. ' if' → logprob: -7.750454902648926
    3. '       ' → logprob: -11.000454902648926
    4. '   ' → logprob: -12.125454902648926
    5. '"""' → logprob: -13.250454902648926
    6. '```' → logprob: -15.750454902648926
    7. '    ' → logprob: -16.250455856323242
    8. '	if' → logprob: -16.500455856323242
    9. ' ' → logprob: -16.625455856323242
    10. '#' → logprob: -17.000455856323242

Token 392: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14829911291599274
    2. ' =' → logprob: -2.023299217224121
    3. 'if' → logprob: -5.773299217224121
    4. '       ' → logprob: -6.398299217224121
    5. '   ' → logprob: -7.898299217224121
    6. ' if' → logprob: -7.898299217224121
    7. '=
' → logprob: -10.148299217224121
    8. '    ' → logprob: -11.273299217224121
    9. '=[]
' → logprob: -11.648299217224121
    10. '=[]' → logprob: -11.773299217224121

Token 393: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.25213634967803955
    2. '[]' → logprob: -1.5021363496780396
    3. 'if' → logprob: -8.87713623046875
    4. '[' → logprob: -10.75213623046875
    5. ' []
' → logprob: -11.50213623046875
    6. 'print' → logprob: -11.75213623046875
    7. ' []' → logprob: -11.87713623046875
    8. '       ' → logprob: -12.12713623046875
    9. '#' → logprob: -12.25213623046875
    10. '   ' → logprob: -12.50213623046875

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015062438324093819
    2. 'if' → logprob: -5.14006233215332
    3. ' if' → logprob: -5.26506233215332
    4. '   ' → logprob: -5.64006233215332
    5. '    ' → logprob: -8.14006233215332
    6. '	if' → logprob: -11.14006233215332
    7. '      ' → logprob: -11.39006233215332
    8. '        ' → logprob: -11.51506233215332
    9. '  ' → logprob: -11.64006233215332
    10. '	' → logprob: -11.76506233215332

Token 395: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005101414280943573
    2. '       ' → logprob: -8.000510215759277
    3. ' if' → logprob: -8.750510215759277
    4. '   ' → logprob: -11.125510215759277
    5. 'print' → logprob: -13.625510215759277
    6. '	if' → logprob: -15.250510215759277
    7. ' ' → logprob: -16.87550926208496
    8. '    ' → logprob: -17.50050926208496
    9. '#' → logprob: -18.12550926208496
    10. 'If' → logprob: -18.25050926208496

Token 396: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.1602250337600708
    2. ' node' → logprob: -1.9102250337600708
    3. '   ' → logprob: -14.910224914550781
    4. '	node' → logprob: -15.160224914550781
    5. ' ' → logprob: -16.28522491455078
    6. '(node' → logprob: -16.41022491455078
    7. 'not' → logprob: -18.16022491455078
    8. '    ' → logprob: -18.41022491455078
    9. '  ' → logprob: -18.78522491455078
    10. 'Node' → logprob: -19.03522491455078

Token 397: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.0280383548888494e-06
    2. '.' → logprob: -14.000000953674316
    3. 'left' → logprob: -15.625000953674316
    4. '!=' → logprob: -17.625001907348633
    5. ' .' → logprob: -18.375001907348633
    6. '.Left' → logprob: -18.625001907348633
    7. ' !=' → logprob: -19.625001907348633
    8. '	left' → logprob: -20.125001907348633
    9. '   ' → logprob: -20.375001907348633
    10. ':' → logprob: -20.500001907348633

Token 398: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.14520485699176788
    2. '!=' → logprob: -2.145204782485962
    3. ' is' → logprob: -4.020205020904541
    4. 'is' → logprob: -8.895204544067383
    5. '()!=' → logprob: -11.770204544067383
    6. ' not' → logprob: -12.145204544067383
    7. ')!=' → logprob: -13.020204544067383
    8. ':' → logprob: -13.020204544067383
    9. '   ' → logprob: -13.395204544067383
    10. ' ' → logprob: -13.895204544067383

Token 399: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.313264399766922
    2. ' None' → logprob: -1.3132643699645996
    3. ' not' → logprob: -13.188264846801758
    4. 'not' → logprob: -15.063264846801758
    5. '=None' → logprob: -16.063264846801758
    6. '_None' → logprob: -16.313264846801758
    7. '   ' → logprob: -16.438264846801758
    8. '(None' → logprob: -16.563264846801758
    9. ' ' → logprob: -16.688264846801758
    10. 'Not' → logprob: -17.313264846801758

Token 400: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08273887634277344
    2. ':
' → logprob: -2.5827388763427734
    3. '           ' → logprob: -5.582738876342773
    4. '       ' → logprob: -9.832738876342773
    5. ' :' → logprob: -12.582738876342773
    6. '):
' → logprob: -12.582738876342773
    7. '<|end|>' → logprob: -12.707738876342773
    8. '):' → logprob: -12.832738876342773
    9. ',' → logprob: -13.207738876342773
    10. ':

' → logprob: -13.457738876342773

Token 401: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007915244204923511
    2. 'cls' → logprob: -7.625791549682617
    3. ' cls' → logprob: -9.125791549682617
    4. '		' → logprob: -9.500791549682617
    5. '	       ' → logprob: -9.875791549682617
    6. '          ' → logprob: -11.125791549682617
    7. '{
' → logprob: -11.875791549682617
    8. '       ' → logprob: -11.875791549682617
    9. '_cls' → logprob: -12.125791549682617
    10. '            
' → logprob: -12.500791549682617

Token 402: ' #' (ID: 1069)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.011918955482542515
    2. ' cls' → logprob: -5.011919021606445
    3. '           ' → logprob: -5.261919021606445
    4. '.cls' → logprob: -13.511919021606445
    5. '(cls' → logprob: -13.886919021606445
    6. '_cls' → logprob: -14.136919021606445
    7. 'Cls' → logprob: -14.886919021606445
    8. '		' → logprob: -15.136919021606445
    9. '   ' → logprob: -15.886919021606445
    10. 'class' → logprob: -16.011919021606445

Token 403: ' results' (ID: 4376)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0001234428636962548
    2. ' cls' → logprob: -9.000123023986816
    3. '           ' → logprob: -17.000123977661133
    4. '       ' → logprob: -19.250123977661133
    5. '_cls' → logprob: -20.125123977661133
    6. 'results' → logprob: -20.250123977661133
    7. '.cls' → logprob: -20.375123977661133
    8. '   ' → logprob: -20.500123977661133
    9. '(cls' → logprob: -20.875123977661133
    10. 'Cls' → logprob: -21.500123977661133

Token 404: '.append' (ID: 3709)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7327967286109924
    2. ':' → logprob: -1.2327966690063477
    3. ':
' → logprob: -1.8577966690063477
    4. 'cls' → logprob: -3.1077966690063477
    5. '.cls' → logprob: -4.107796669006348
    6. '.walk' → logprob: -5.232796669006348
    7. ' cls' → logprob: -6.357796669006348
    8. '       ' → logprob: -6.857796669006348
    9. '_cls' → logprob: -6.982796669006348
    10. '(cls' → logprob: -7.732796669006348

Token 405: '(cls' (ID: 46446)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0002043748099822551
    2. ' cls' → logprob: -8.500204086303711
    3. '(cls' → logprob: -14.000204086303711
    4. 'classmethod' → logprob: -17.62520408630371
    5. 'cl' → logprob: -18.50020408630371
    6. '.cls' → logprob: -19.25020408630371
    7. 'class' → logprob: -19.37520408630371
    8. '           ' → logprob: -19.87520408630371
    9. '_cls' → logprob: -20.50020408630371
    10. 'clazz' → logprob: -21.87520408630371

Token 406: '.walk' (ID: 103978)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.018200749531388283
    2. '.walk' → logprob: -4.018200874328613
    3. ' walk' → logprob: -9.893200874328613
    4. 'walker' → logprob: -15.768200874328613
    5. '_walk' → logprob: -16.018199920654297
    6. '.' → logprob: -17.143199920654297
    7. '.w' → logprob: -18.393199920654297
    8. 'walking' → logprob: -18.643199920654297
    9. 'w' → logprob: -19.143199920654297
    10. '   ' → logprob: -19.768199920654297

Token 407: '_in' (ID: 2267)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6974914073944092
    2. '_in' → logprob: -0.6974914073944092
    3. 'walk' → logprob: -5.447491645812988
    4. 'In' → logprob: -11.822491645812988
    5. 'node' → logprob: -11.822491645812988
    6. '_walk' → logprob: -12.822491645812988
    7. 'walker' → logprob: -13.447491645812988
    8. '(node' → logprob: -13.572491645812988
    9. ' inorder' → logprob: -13.697491645812988
    10. '.in' → logprob: -13.822491645812988

Token 408: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -4.584861744660884e-05
    2. 'node' → logprob: -10.000045776367188
    3. 'ord' → logprob: -16.375045776367188
    4. 'in' → logprob: -16.500045776367188
    5. 'orde' → logprob: -16.625045776367188
    6. 'class' → logprob: -17.125045776367188
    7. 'or' → logprob: -17.500045776367188
    8. ' order' → logprob: -17.625045776367188
    9. '   ' → logprob: -17.875045776367188
    10. ' inorder' → logprob: -18.375045776367188

Token 409: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: 0.0
    2. '(' → logprob: -16.75
    3. ' (' → logprob: -17.5
    4. 'node' → logprob: -20.25
    5. '(n' → logprob: -20.5
    6. ')' → logprob: -21.25
    7. ',node' → logprob: -21.375
    8. '=node' → logprob: -21.625
    9. ' node' → logprob: -21.75
    10. '[node' → logprob: -22.0

Token 410: '.left' (ID: 15388)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.4738621115684509
    2. 'left' → logprob: -1.2238621711730957
    3. '.left' → logprob: -2.8488621711730957
    4. '(left' → logprob: -3.7238621711730957
    5. ' left' → logprob: -7.473862171173096
    6. ')' → logprob: -7.473862171173096
    7. 'node' → logprob: -9.973861694335938
    8. ' (' → logprob: -10.848861694335938
    9. ')(' → logprob: -11.598861694335938
    10. '(' → logprob: -11.848861694335938

Token 411: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009966061916202307
    2. ')
' → logprob: -7.6259965896606445
    3. '())' → logprob: -8.000996589660645
    4. '(node' → logprob: -9.000996589660645
    5. '           ' → logprob: -10.625996589660645
    6. '))' → logprob: -11.875996589660645
    7. '       ' → logprob: -12.125996589660645
    8. '()' → logprob: -12.250996589660645
    9. ' )' → logprob: -12.500996589660645
    10. '())
' → logprob: -13.250996589660645

Token 412: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5110987424850464
    2. '       ' → logprob: -1.0110987424850464
    3. 'cls' → logprob: -3.761098861694336
    4. ' cls' → logprob: -5.386098861694336
    5. '   ' → logprob: -6.386098861694336
    6. '
' → logprob: -6.761098861694336
    7. '	' → logprob: -7.136098861694336
    8. '               ' → logprob: -7.261098861694336
    9. '(cls' → logprob: -7.386098861694336
    10. '        
' → logprob: -7.511098861694336

Token 413: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' (adapté à ' cls') → logprob: -0.17303286492824554
    2. ' cls' → logprob: -2.423032760620117
    3. '           ' → logprob: -2.673032760620117
    4. '		' → logprob: -8.173032760620117
    5. '   ' → logprob: -8.673032760620117
    6. '	       ' → logprob: -8.798032760620117
    7. '               ' → logprob: -8.923032760620117
    8. '       ' → logprob: -9.048032760620117
    9. '(cls' → logprob: -9.923032760620117
    10. 'class' → logprob: -10.048032760620117

Token 414: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -0.00016611411410849541
    2. '.' → logprob: -9.000165939331055
    3. 'walk' → logprob: -10.125165939331055
    4. ' .' → logprob: -13.375165939331055
    5. '.w' → logprob: -14.125165939331055
    6. '.left' → logprob: -16.000165939331055
    7. '_walk' → logprob: -16.875165939331055
    8. ' walk' → logprob: -17.000165939331055
    9. '.visit' → logprob: -17.125165939331055
    10. '.wait' → logprob: -17.250165939331055

Token 415: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -3.8889261304575484e-06
    2. 'in' → logprob: -13.250003814697266
    3. 'walk' → logprob: -13.750003814697266
    4. 'left' → logprob: -15.000003814697266
    5. '.in' → logprob: -15.375003814697266
    6. '._' → logprob: -15.625003814697266
    7. '_pre' → logprob: -15.750003814697266
    8. 'In' → logprob: -16.375003814697266
    9. '_left' → logprob: -17.000003814697266
    10. '   ' → logprob: -17.375003814697266

Token 416: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -2.2007883671903983e-05
    2. 'node' → logprob: -11.000021934509277
    3. 'in' → logprob: -13.750021934509277
    4. 'ord' → logprob: -13.875021934509277
    5. 'class' → logprob: -14.000021934509277
    6. 'or' → logprob: -14.125021934509277
    7. 'orde' → logprob: -14.875021934509277
    8. 'o' → logprob: -15.125021934509277
    9. '   ' → logprob: -15.750021934509277
    10. '_order' → logprob: -16.000022888183594

Token 417: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -13.25000286102295
    3. ' (' → logprob: -13.50000286102295
    4. '(
' → logprob: -18.375003814697266
    5. '(n' → logprob: -18.500003814697266
    6. '(left' → logprob: -19.000003814697266
    7. '=node' → logprob: -20.375003814697266
    8. ',node' → logprob: -20.500003814697266
    9. '(Node' → logprob: -21.125003814697266
    10. '[node' → logprob: -21.125003814697266

Token 418: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -3.292907877039397e-06
    2. '.' → logprob: -13.00000286102295
    3. 'left' → logprob: -14.00000286102295
    4. '.right' → logprob: -16.500003814697266
    5. '(left' → logprob: -17.250003814697266
    6. ')' → logprob: -18.000003814697266
    7. '.Left' → logprob: -18.500003814697266
    8. ' .' → logprob: -18.625003814697266
    9. ').' → logprob: -19.250003814697266
    10. ' left' → logprob: -20.000003814697266

Token 419: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.816652774810791
    2. '       ' → logprob: -0.941652774810791
    3. ')
' → logprob: -1.816652774810791
    4. '()' → logprob: -5.566652774810791
    5. '()
' → logprob: -6.441652774810791
    6. '   ' → logprob: -9.816652297973633
    7. '())
' → logprob: -10.941652297973633
    8. ' )
' → logprob: -11.066652297973633
    9. ' )' → logprob: -12.066652297973633
    10. '())' → logprob: -12.191652297973633

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17645925283432007
    2. '
' → logprob: -1.9264593124389648
    3. '        
' → logprob: -5.176459312438965
    4. '  
' → logprob: -5.926459312438965
    5. ' 
' → logprob: -6.301459312438965
    6. 'print' → logprob: -6.426459312438965
    7. '   ' → logprob: -6.551459312438965
    8. '    
' → logprob: -6.676459312438965
    9. '<|end|>' → logprob: -7.551459312438965
    10. ' print' → logprob: -8.051459312438965

Token 421: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0603104829788208
    2. ' print' → logprob: -1.0603104829788208
    3. '       ' → logprob: -1.3103104829788208
    4. '
' → logprob: -3.4353103637695312
    5. '   ' → logprob: -6.060310363769531
    6. '        
' → logprob: -6.435310363769531
    7. '    
' → logprob: -7.810310363769531
    8. ' 
' → logprob: -8.310310363769531
    9. '	print' → logprob: -8.435310363769531
    10. '  
' → logprob: -8.560310363769531

Token 422: ' results' (ID: 4376)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00026169343618676066
    2. ' print' → logprob: -8.250261306762695
    3. '       ' → logprob: -15.250261306762695
    4. '
' → logprob: -16.750261306762695
    5. '   ' → logprob: -16.750261306762695
    6. '#print' → logprob: -17.250261306762695
    7. ' ' → logprob: -19.000261306762695
    8. 'printf' → logprob: -19.000261306762695
    9. '	print' → logprob: -19.000261306762695
    10. '           ' → logprob: -19.500261306762695

Token 423: '.append' (ID: 3709)
  Prédit: '.print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -0.8284794092178345
    2. 'print' → logprob: -0.9534794092178345
    3. '.' → logprob: -2.453479290008545
    4. '=' → logprob: -2.953479290008545
    5. ' =' → logprob: -4.328479290008545
    6. '.key' → logprob: -5.078479290008545
    7. '.append' → logprob: -5.328479290008545
    8. '   ' → logprob: -5.703479290008545
    9. ' .' → logprob: -6.328479290008545
    10. '       ' → logprob: -6.578479290008545

Token 424: '(node' (ID: 13356)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3952482044696808
    2. '(node' → logprob: -1.2702481746673584
    3. 'print' → logprob: -3.5202481746673584
    4. '(' → logprob: -4.3952484130859375
    5. '(print' → logprob: -5.7702484130859375
    6. ' print' → logprob: -8.395248413085938
    7. 'node' → logprob: -8.895248413085938
    8. ' ('' → logprob: -9.145248413085938
    9. '(
' → logprob: -9.270248413085938
    10. ' (' → logprob: -9.895248413085938

Token 425: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.0001366744691040367
    2. '.' → logprob: -9.375136375427246
    3. ' key' → logprob: -10.375136375427246
    4. 'key' → logprob: -11.250136375427246
    5. ' .' → logprob: -12.625136375427246
    6. ')' → logprob: -13.750136375427246
    7. '(key' → logprob: -14.625136375427246
    8. '.print' → logprob: -14.750136375427246
    9. '.keys' → logprob: -14.750136375427246
    10. '   ' → logprob: -15.000136375427246

Token 426: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0664532482624054
    2. '
' → logprob: -3.441453218460083
    3. ')' → logprob: -3.941453218460083
    4. ')
' → logprob: -4.691453456878662
    5. 'print' → logprob: -5.816453456878662
    6. ' print' → logprob: -9.191452980041504
    7. '        
' → logprob: -9.316452980041504
    8. '   ' → logprob: -9.441452980041504
    9. '()
' → logprob: -9.441452980041504
    10. ',' → logprob: -9.441452980041504

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6215344071388245
    2. '
' → logprob: -1.2465343475341797
    3. 'print' → logprob: -2.1215343475341797
    4. ' print' → logprob: -3.2465343475341797
    5. '   ' → logprob: -4.99653434753418
    6. '        
' → logprob: -5.49653434753418
    7. '    
' → logprob: -5.99653434753418
    8. ' 
' → logprob: -6.62153434753418
    9. '```' → logprob: -7.62153434753418
    10. '\n' → logprob: -7.74653434753418

Token 428: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10816983133554459
    2. ' print' → logprob: -2.3581697940826416
    3. '       ' → logprob: -4.858170032501221
    4. '
' → logprob: -8.858169555664062
    5. '   ' → logprob: -11.483169555664062
    6. '	print' → logprob: -11.983169555664062
    7. '.print' → logprob: -12.983169555664062
    8. '        
' → logprob: -13.733169555664062
    9. '           ' → logprob: -13.983169555664062
    10. '#print' → logprob: -13.983169555664062

Token 429: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00010747690976131707
    2. '(' → logprob: -9.625107765197754
    3. '(f' → logprob: -10.125107765197754
    4. '("' → logprob: -14.375107765197754
    5. ' ('' → logprob: -14.750107765197754
    6. 'f' → logprob: -15.500107765197754
    7. '(('' → logprob: -17.375106811523438
    8. ''' → logprob: -18.500106811523438
    9. ' (' → logprob: -18.875106811523438
    10. '(
' → logprob: -19.125106811523438

Token 430: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.001171056181192398
    2. '{' → logprob: -6.751171112060547
    3. ' ' → logprob: -14.376171112060547
    4. ' {}' → logprob: -15.876171112060547
    5. ' ' → logprob: -16.001171112060547
    6. ' {}'.' → logprob: -17.001171112060547
    7. ' {:' → logprob: -17.876171112060547
    8. '({' → logprob: -18.751171112060547
    9. '{}' → logprob: -18.751171112060547
    10. '{:' → logprob: -19.626171112060547

Token 431: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007529255468398333
    2. '{' → logprob: -5.007529258728027
    3. 'node' → logprob: -7.132529258728027
    4. '{}' → logprob: -11.257529258728027
    5. ' node' → logprob: -14.257529258728027
    6. ' ' → logprob: -15.132529258728027
    7. 'o' → logprob: -15.507529258728027
    8. '{
' → logprob: -15.632529258728027
    9. '}' → logprob: -16.00752830505371
    10. '{}.' → logprob: -16.00752830505371

Token 432: '}'.' (ID: 58336)
  Prédit: '}'.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}'.' → logprob: -0.023320946842432022
    2. ''.' → logprob: -3.7733209133148193
    3. '}.' → logprob: -10.398321151733398
    4. '}' → logprob: -10.398321151733398
    5. '.format' → logprob: -11.648321151733398
    6. '}".' → logprob: -13.023321151733398
    7. '').' → logprob: -13.523321151733398
    8. '{}'.' → logprob: -14.023321151733398
    9. '}'' → logprob: -14.523321151733398
    10. ''' → logprob: -16.0233211517334

Token 433: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -5.512236498361744e-07
    2. ' format' → logprob: -14.500000953674316
    3. '.format' → logprob: -19.25
    4. 'form' → logprob: -19.5
    5. '_format' → logprob: -21.125
    6. '(format' → logprob: -21.125
    7. '	format' → logprob: -21.25
    8. 'node' → logprob: -21.5
    9. 'key' → logprob: -21.625
    10. 'print' → logprob: -22.25

Token 434: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0002036595979006961
    2. 'node' → logprob: -8.500204086303711
    3. ' node' → logprob: -16.00020408630371
    4. '(' → logprob: -18.12520408630371
    5. ',node' → logprob: -18.75020408630371
    6. ' (' → logprob: -19.12520408630371
    7. '	node' → logprob: -20.37520408630371
    8. '=node' → logprob: -21.50020408630371
    9. 'Node' → logprob: -21.75020408630371
    10. '[node' → logprob: -21.75020408630371

Token 435: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -8.061054359131958e-06
    2. '.' → logprob: -11.750007629394531
    3. 'key' → logprob: -16.12500762939453
    4. ' key' → logprob: -17.50000762939453
    5. ' .' → logprob: -17.50000762939453
    6. '.Key' → logprob: -18.75000762939453
    7. '[key' → logprob: -19.50000762939453
    8. ',key' → logprob: -19.87500762939453
    9. '.token' → logprob: -20.00000762939453
    10. '(key' → logprob: -20.25000762939453

Token 436: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5786158442497253
    2. '),' → logprob: -0.8286158442497253
    3. ')' → logprob: -5.953615665435791
    4. ' ,' → logprob: -10.32861614227295
    5. ',end' → logprob: -10.45361614227295
    6. '       ' → logprob: -12.20361614227295
    7. '',' → logprob: -12.95361614227295
    8. ',),' → logprob: -13.07861614227295
    9. '},' → logprob: -13.70361614227295
    10. '           ' → logprob: -13.70361614227295

Token 437: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.03804149478673935
    2. 'end' → logprob: -3.288041591644287
    3. ',end' → logprob: -17.663042068481445
    4. '	end' → logprob: -18.038042068481445
    5. ''end' → logprob: -18.663042068481445
    6. ')' → logprob: -18.788042068481445
    7. '=end' → logprob: -18.913042068481445
    8. '(end' → logprob: -19.038042068481445
    9. '[end' → logprob: -19.038042068481445
    10. ' ' → logprob: -19.538042068481445

Token 438: '='')
' (ID: 135148)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -7.5649528298527e-05
    2. '=''' → logprob: -10.250075340270996
    3. ''' → logprob: -10.375075340270996
    4. '=' → logprob: -12.250075340270996
    5. '='')
' → logprob: -12.875075340270996
    6. '''' → logprob: -13.875075340270996
    7. ' '')' → logprob: -14.625075340270996
    8. '('' → logprob: -15.500075340270996
    9. ' ='' → logprob: -16.375076293945312
    10. ')' → logprob: -17.250076293945312

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011545585468411446
    2. '
' → logprob: -4.886545658111572
    3. '<|end|>' → logprob: -5.886545658111572
    4. ' if' → logprob: -7.011545658111572
    5. '   ' → logprob: -9.261545181274414
    6. 'if' → logprob: -9.761545181274414
    7. '        
' → logprob: -10.386545181274414
    8. ' 
' → logprob: -11.136545181274414
    9. ' ' → logprob: -11.511545181274414
    10. '  
' → logprob: -11.636545181274414

Token 440: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7764912843704224
    2. 'if' (adapté à ' if') → logprob: -0.7764912843704224
    3. ' if' → logprob: -2.526491165161133
    4. '   ' → logprob: -10.901491165161133
    5. '	if' → logprob: -12.651491165161133
    6. ' ' → logprob: -13.401491165161133
    7. '```' → logprob: -13.526491165161133
    8. 'If' → logprob: -14.651491165161133
    9. '        
' → logprob: -15.276491165161133
    10. ';if' → logprob: -15.526491165161133

Token 441: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.006715967319905758
    2. 'node' → logprob: -5.006715774536133
    3. '(node' → logprob: -15.381715774536133
    4. ' ' → logprob: -15.631715774536133
    5. '	node' → logprob: -15.631715774536133
    6. '[node' → logprob: -17.006715774536133
    7. 'Node' → logprob: -17.631715774536133
    8. '=node' → logprob: -19.506715774536133
    9. '_node' → logprob: -19.631715774536133
    10. '   ' → logprob: -19.756715774536133

Token 442: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -2.3676733690081164e-05
    2. '.' → logprob: -10.75002384185791
    3. '.left' → logprob: -13.75002384185791
    4. ' .' → logprob: -14.37502384185791
    5. 'right' → logprob: -14.62502384185791
    6. '	right' → logprob: -18.250022888183594
    7. '.Right' → logprob: -20.000022888183594
    8. '[right' → logprob: -20.750022888183594
    9. '   ' → logprob: -21.125022888183594
    10. ' ' → logprob: -21.125022888183594

Token 443: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0019485102966427803
    2. '!=' → logprob: -6.251948356628418
    3. ' is' → logprob: -11.126948356628418
    4. '<|end|>' → logprob: -12.626948356628418
    5. ' ' → logprob: -14.501948356628418
    6. ' ' → logprob: -14.876948356628418
    7. '()!=' → logprob: -15.001948356628418
    8. ')!=' → logprob: -15.001948356628418
    9. ' not' → logprob: -16.001949310302734
    10. 'is' → logprob: -16.626949310302734

Token 444: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.575940728187561
    2. ' None' → logprob: -0.825940728187561
    3. ' not' → logprob: -14.45094108581543
    4. 'No' → logprob: -15.70094108581543
    5. ' ' → logprob: -15.95094108581543
    6. '(None' → logprob: -15.95094108581543
    7. '_None' → logprob: -16.20094108581543
    8. 'N' → logprob: -16.70094108581543
    9. 'Not' → logprob: -16.82594108581543
    10. '=None' → logprob: -17.07594108581543

Token 445: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004995128605514765
    2. ':
' → logprob: -5.629995346069336
    3. '           ' → logprob: -6.754995346069336
    4. '<|end|>' → logprob: -8.629995346069336
    5. '       ' → logprob: -10.504995346069336
    6. '   ' → logprob: -12.254995346069336
    7. ' :' → logprob: -12.629995346069336
    8. '):' → logprob: -12.754995346069336
    9. ':

' → logprob: -13.254995346069336
    10. '<|end|>' → logprob: -13.379995346069336

Token 446: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001049736310960725
    2. '		' → logprob: -10.375104904174805
    3. '          ' → logprob: -10.500104904174805
    4. '       ' → logprob: -11.250104904174805
    5. '               ' → logprob: -11.875104904174805
    6. '	       ' → logprob: -12.125104904174805
    7. '         ' → logprob: -12.125104904174805
    8. '        ' → logprob: -12.625104904174805
    9. '   ' → logprob: -12.750104904174805
    10. '<|end|>' → logprob: -13.250104904174805

Token 447: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024781618267297745
    2. 'cls' → logprob: -4.024781703948975
    3. ' cls' → logprob: -5.024781703948975
    4. '		' → logprob: -11.649781227111816
    5. '(cls' → logprob: -11.899781227111816
    6. '          ' → logprob: -12.274781227111816
    7. '               ' → logprob: -12.399781227111816
    8. '.cls' → logprob: -12.649781227111816
    9. '       ' → logprob: -12.899781227111816
    10. '            ' → logprob: -13.774781227111816

Token 448: ' results' (ID: 4376)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.06199558824300766
    2. ' cls' → logprob: -2.811995506286621
    3. '           ' → logprob: -10.561995506286621
    4. '(cls' → logprob: -14.061995506286621
    5. '_cls' → logprob: -14.936995506286621
    6. '.cls' → logprob: -15.061995506286621
    7. 'Cls' → logprob: -15.186995506286621
    8. 'cl' → logprob: -15.936995506286621
    9. ' ' → logprob: -16.436996459960938
    10. '               ' → logprob: -16.686996459960938

Token 449: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0059442054480314255
    2. '.walk' → logprob: -5.88094425201416
    3. '           ' → logprob: -6.25594425201416
    4. '.' → logprob: -7.38094425201416
    5. '.cls' → logprob: -8.13094425201416
    6. ' .' → logprob: -9.38094425201416
    7. 'cls' → logprob: -9.63094425201416
    8. '.visit' → logprob: -10.25594425201416
    9. '       ' → logprob: -10.50594425201416
    10. '          ' → logprob: -11.38094425201416

Token 450: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.04863131046295166
    2. 'cls' → logprob: -3.048631191253662
    3. ' cls' → logprob: -10.04863166809082
    4. '(cl' → logprob: -15.67363166809082
    5. '.cls' → logprob: -15.79863166809082
    6. '_cls' → logprob: -16.17363166809082
    7. 'Cls' → logprob: -16.42363166809082
    8. 'class' → logprob: -16.42363166809082
    9. '(clazz' → logprob: -17.42363166809082
    10. '(class' → logprob: -17.54863166809082

Token 451: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -0.014335906133055687
    2. 'walk' → logprob: -4.639336109161377
    3. '_walk' → logprob: -6.264336109161377
    4. 'cls' → logprob: -6.389336109161377
    5. '(cls' → logprob: -7.014336109161377
    6. '.cls' → logprob: -9.639335632324219
    7. '_cls' → logprob: -11.514335632324219
    8. 'Walk' → logprob: -13.389335632324219
    9. '.' → logprob: -13.514335632324219
    10. ' walk' → logprob: -13.639335632324219

Token 452: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -6.630610641877865e-06
    2. 'in' → logprob: -12.375006675720215
    3. '_right' → logprob: -13.625006675720215
    4. 'right' → logprob: -14.625006675720215
    5. 'In' → logprob: -15.375006675720215
    6. '_' → logprob: -15.500006675720215
    7. '(node' → logprob: -16.2500057220459
    8. '(cls' → logprob: -16.6250057220459
    9. 'node' → logprob: -17.7500057220459
    10. ')' → logprob: -17.8750057220459

Token 453: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.00013774730905424803
    2. 'node' → logprob: -9.375137329101562
    3. 'ode' → logprob: -10.375137329101562
    4. 'right' → logprob: -11.500137329101562
    5. 'ord' → logprob: -12.750137329101562
    6. 'or' → logprob: -13.500137329101562
    7. '_order' → logprob: -13.750137329101562
    8. '(node' → logprob: -13.875137329101562
    9. '   ' → logprob: -14.125137329101562
    10. 'oder' → logprob: -14.250137329101562

Token 454: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.9361264946837764e-07
    2. '(cls' → logprob: -17.0
    3. 'node' → logprob: -17.125
    4. '[node' → logprob: -18.25
    5. '(' → logprob: -18.625
    6. ' (' → logprob: -19.75
    7. '=node' → logprob: -20.0
    8. ',node' → logprob: -20.25
    9. ' node' → logprob: -21.5
    10. 'cls' → logprob: -21.625

Token 455: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0032168070320039988
    2. 'right' → logprob: -6.628216743469238
    3. '(node' → logprob: -6.628216743469238
    4. '(right' → logprob: -7.503216743469238
    5. ')' → logprob: -11.628216743469238
    6. ' right' → logprob: -13.503216743469238
    7. ',right' → logprob: -13.753216743469238
    8. '.Right' → logprob: -14.128216743469238
    9. '[right' → logprob: -14.378216743469238
    10. '.' → logprob: -14.628216743469238

Token 456: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031205564737319946
    2. '.right' → logprob: -6.253120422363281
    3. '(node' → logprob: -7.003120422363281
    4. ')
' → logprob: -8.753120422363281
    5. 'right' → logprob: -10.003120422363281
    6. '           ' → logprob: -11.253120422363281
    7. ',' → logprob: -11.753120422363281
    8. '       ' → logprob: -11.878120422363281
    9. '(right' → logprob: -11.878120422363281
    10. '.left' → logprob: -12.253120422363281

Token 457: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06603139638900757
    2. 'cls' → logprob: -3.1910314559936523
    3. ' cls' → logprob: -3.9410314559936523
    4. '(cls' → logprob: -5.816031455993652
    5. '               ' → logprob: -8.691031455993652
    6. '          ' → logprob: -9.941031455993652
    7. '		' → logprob: -9.941031455993652
    8. '_cls' → logprob: -10.691031455993652
    9. '.cls' → logprob: -11.191031455993652
    10. 'Cls' → logprob: -11.566031455993652

Token 458: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' (adapté à ' cls') → logprob: -0.0005548207554966211
    2. ' cls' → logprob: -7.500555038452148
    3. '           ' → logprob: -13.500555038452148
    4. 'Cls' → logprob: -15.375555038452148
    5. '_cls' → logprob: -16.37555503845215
    6. 'cl' → logprob: -16.62555503845215
    7. '(cls' → logprob: -16.87555503845215
    8. '.cls' → logprob: -17.12555503845215
    9. 'class' → logprob: -18.50055503845215
    10. 'classmethod' → logprob: -18.75055503845215

Token 459: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -0.008863210678100586
    2. '.right' → logprob: -4.75886344909668
    3. '.' → logprob: -8.63386344909668
    4. 'walk' → logprob: -9.63386344909668
    5. '._' → logprob: -13.00886344909668
    6. '.w' → logprob: -14.13386344909668
    7. ' .' → logprob: -14.13386344909668
    8. 'right' → logprob: -14.25886344909668
    9. '.left' → logprob: -15.50886344909668
    10. '.write' → logprob: -15.75886344909668

Token 460: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0022294751834124327
    2. 'right' → logprob: -6.752229690551758
    3. '_pre' → logprob: -7.502229690551758
    4. '_right' → logprob: -8.252229690551758
    5. '_order' → logprob: -8.752229690551758
    6. 'in' → logprob: -10.502229690551758
    7. 'order' → logprob: -11.377229690551758
    8. '_or' → logprob: -11.502229690551758
    9. 'node' → logprob: -11.627229690551758
    10. '_post' → logprob: -12.127229690551758

Token 461: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0015721142990514636
    2. 'node' → logprob: -7.001572132110596
    3. 'right' → logprob: -8.626571655273438
    4. 'or' → logprob: -8.751571655273438
    5. '   ' → logprob: -9.376571655273438
    6. 'o' → logprob: -9.626571655273438
    7. '       ' → logprob: -10.001571655273438
    8. '
' → logprob: -10.626571655273438
    9. 'orde' → logprob: -11.501571655273438
    10. '(node' → logprob: -11.751571655273438

Token 462: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.625000953674316
    3. '(n' → logprob: -17.25
    4. 'node' → logprob: -18.125
    5. ' (' → logprob: -18.125
    6. '(
' → logprob: -19.125
    7. ',node' → logprob: -20.125
    8. '[node' → logprob: -20.625
    9. '=node' → logprob: -20.625
    10. ' node' → logprob: -21.0

Token 463: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -1.4974866644479334e-05
    2. 'right' → logprob: -12.125015258789062
    3. '.' → logprob: -12.375015258789062
    4. '.node' → logprob: -13.750015258789062
    5. '(node' → logprob: -13.875015258789062
    6. ')' → logprob: -13.875015258789062
    7. '(right' → logprob: -13.875015258789062
    8. ' .' → logprob: -14.375015258789062
    9. '.left' → logprob: -14.875015258789062
    10. ').' → logprob: -15.750015258789062

Token 464: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.6934557505883276e-05
    2. ')
' → logprob: -10.125057220458984
    3. '       ' → logprob: -11.250057220458984
    4. ' )' → logprob: -13.000057220458984
    5. '<|end|>' → logprob: -14.500057220458984
    6. '()' → logprob: -15.375057220458984
    7. ')return' → logprob: -15.750057220458984
    8. '   ' → logprob: -15.875057220458984
    9. ')n' → logprob: -16.125057220458984
    10. ')#' → logprob: -16.125057220458984

Token 465: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00451698899269104
    2. '#' → logprob: -5.629517078399658
    3. ' return' → logprob: -7.129517078399658
    4. ':return' → logprob: -10.6295166015625
    5. '   ' → logprob: -10.7545166015625
    6. 'pass' → logprob: -10.8795166015625
    7. '<|end|>' → logprob: -10.8795166015625
    8. 'eturn' → logprob: -11.8795166015625
    9. '       ' → logprob: -11.8795166015625
    10. '@return' → logprob: -12.8795166015625

Token 468: ' results' (ID: 4376)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.19264809787273407
    2. ' None' → logprob: -1.8176480531692505
    3. '<|end|>' → logprob: -4.692647933959961
    4. '[]' → logprob: -5.942647933959961
    5. '[' → logprob: -7.942647933959961
    6. ' ' → logprob: -8.567647933959961
    7. '[node' → logprob: -9.317647933959961
    8. '#' → logprob: -9.317647933959961
    9. ' []' → logprob: -9.817647933959961
    10. '(None' → logprob: -9.942647933959961

Token 469: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 470: '   ' (ID: 271)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.2378663867712021
    2. '   ' → logprob: -1.6128664016723633
    3. '<|end|>' → logprob: -4.862866401672363
    4. '@property' → logprob: -7.487866401672363
    5. ' ' → logprob: -7.612866401672363
    6. '@return' → logprob: -7.987866401672363
    7. '
' → logprob: -8.112866401672363
    8. ')' → logprob: -8.237866401672363
    9. 'def' → logprob: -8.237866401672363
    10. '  ' → logprob: -8.487866401672363

Token 471: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -9.078839502763003e-05
    2. '   ' → logprob: -9.375090599060059
    3. ' @' → logprob: -13.250090599060059
    4. '@class' → logprob: -13.625090599060059
    5. 'classmethod' → logprob: -14.000090599060059
    6. '@index' → logprob: -14.500090599060059
    7. '@
' → logprob: -14.750090599060059
    8. '@property' → logprob: -15.125090599060059
    9. '[' → logprob: -15.250090599060059
    10. 'class' → logprob: -16.000091552734375

Token 472: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -1.0280383548888494e-06
    2. 'staticmethod' → logprob: -14.000000953674316
    3. 'class' → logprob: -16.125001907348633
    4. 'property' → logprob: -19.875001907348633
    5. '@' → logprob: -21.625001907348633
    6. '"class' → logprob: -22.125001907348633
    7. '@class' → logprob: -22.875001907348633
    8. 'classname' → logprob: -23.000001907348633
    9. 'aclass' → logprob: -23.125001907348633
    10. 'classpath' → logprob: -24.000001907348633

Token 473: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023545464500784874
    2. ' def' → logprob: -3.773545503616333
    3. '
' → logprob: -8.773545265197754
    4. '   ' → logprob: -9.148545265197754
    5. ' ' → logprob: -10.898545265197754
    6. '	def' → logprob: -11.398545265197754
    7. ':' → logprob: -13.023545265197754
    8. '(' → logprob: -13.023545265197754
    9. ':def' → logprob: -13.023545265197754
    10. 'Def' → logprob: -14.398545265197754

Token 474: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0683535037969705e-05
    2. ' def' → logprob: -11.50001049041748
    3. '   ' → logprob: -14.50001049041748
    4. '	def' → logprob: -17.625011444091797
    5. 'Def' → logprob: -20.500011444091797
    6. ' ' → logprob: -21.125011444091797
    7. ':def' → logprob: -21.750011444091797
    8. '
' → logprob: -22.000011444091797
    9. 'd' → logprob: -22.625011444091797
    10. '_def' → logprob: -23.125011444091797

Token 475: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.8624639324116288e-06
    2. ' def' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.250001907348633
    4. 'Def' → logprob: -19.500001907348633
    5. 'walk' → logprob: -20.125001907348633
    6. '
' → logprob: -21.000001907348633
    7. ' ' → logprob: -21.250001907348633
    8. '	def' → logprob: -22.375001907348633
    9. '`' → logprob: -23.000001907348633
    10. '  ' → logprob: -24.875001907348633

Token 476: ' delete' (ID: 6168)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.00023572170175611973
    2. ' walk' → logprob: -8.500235557556152
    3. 'height' → logprob: -11.625235557556152
    4. 'get' → logprob: -12.500235557556152
    5. 'delete' → logprob: -12.875235557556152
    6. 'find' → logprob: -13.000235557556152
    7. 'update' → logprob: -13.250235557556152
    8. 'balance' → logprob: -13.375235557556152
    9. 'print' → logprob: -13.500235557556152
    10. 'def' → logprob: -13.750235557556152

Token 477: '_node' (ID: 11390)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cls' → logprob: -6.742448022123426e-05
    2. '(' → logprob: -9.625067710876465
    3. 'cls' → logprob: -15.000067710876465
    4. '(class' → logprob: -15.500067710876465
    5. '(cl' → logprob: -15.750067710876465
    6. '(clazz' → logprob: -15.750067710876465
    7. '(
' → logprob: -16.12506675720215
    8. ' (' → logprob: -16.75006675720215
    9. '(c' → logprob: -16.87506675720215
    10. '(self' → logprob: -17.00006675720215

Token 478: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -1.259079363080673e-05
    2. '(' → logprob: -11.375012397766113
    3. '(class' → logprob: -14.875012397766113
    4. ' (' → logprob: -15.250012397766113
    5. '(clazz' → logprob: -15.500012397766113
    6. '(cl' → logprob: -16.37501335144043
    7. '(
' → logprob: -16.75001335144043
    8. 'cls' → logprob: -17.00001335144043
    9. '(c' → logprob: -18.25001335144043
    10. ',' → logprob: -19.12501335144043

Token 479: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.12706302106380463
    2. ',' → logprob: -2.127063035964966
    3. ')(' → logprob: -9.252062797546387
    4. 'cls' → logprob: -10.877062797546387
    5. ',(' → logprob: -11.627062797546387
    6. ' (' → logprob: -13.002062797546387
    7. '(' → logprob: -13.252062797546387
    8. ' ,' → logprob: -13.377062797546387
    9. ' cls' → logprob: -13.377062797546387
    10. ')' → logprob: -14.127062797546387

Token 480: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.33378836512565613
    2. 'node' → logprob: -1.7087883949279785
    3. ' z' → logprob: -2.9587883949279785
    4. ' node' → logprob: -3.5837883949279785
    5. 'key' → logprob: -4.3337883949279785
    6. ' key' → logprob: -5.2087883949279785
    7. 'root' → logprob: -6.2087883949279785
    8. 'x' → logprob: -6.9587883949279785
    9. 'cls' → logprob: -7.2087883949279785
    10. ' root' → logprob: -8.08378791809082

Token 481: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003396343090571463
    2. '):
' → logprob: -8.00033950805664
    3. ')' → logprob: -13.12533950805664
    4. ',' → logprob: -14.25033950805664
    5. '):
' → logprob: -14.37533950805664
    6. ':' → logprob: -14.62533950805664
    7. ' ):' → logprob: -14.87533950805664
    8. '):

' → logprob: -16.75033950805664
    9. '   ' → logprob: -17.37533950805664
    10. ')：' → logprob: -17.75033950805664

Token 482: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40271416306495667
    2. '   ' → logprob: -1.7777141332626343
    3. '       ' → logprob: -2.277714252471924
    4. ' if' → logprob: -3.027714252471924
    5. 'def' → logprob: -5.527714252471924
    6. '#' → logprob: -5.652714252471924
    7. 'y' → logprob: -6.652714252471924
    8. '	if' → logprob: -7.277714252471924
    9. 'x' → logprob: -7.402714252471924
    10. '    ' → logprob: -7.527714252471924

Token 483: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6227759718894958
    2. 'if' (adapté à ' if') → logprob: -1.3727760314941406
    3. ' pass' → logprob: -2.1227760314941406
    4. 'def' → logprob: -3.3727760314941406
    5. 'pass' → logprob: -3.3727760314941406
    6. '#' → logprob: -4.997776031494141
    7. ' #' → logprob: -5.247776031494141
    8. ' def' → logprob: -5.372776031494141
    9. '   ' → logprob: -5.747776031494141
    10. 'x' → logprob: -8.24777603149414

Token 484: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.048593614250421524
    2. ' z' → logprob: -3.048593521118164
    3. ' not' → logprob: -13.298593521118164
    4. 'not' → logprob: -13.548593521118164
    5. '	z' → logprob: -13.673593521118164
    6. ' ' → logprob: -14.048593521118164
    7. '(z' → logprob: -14.173593521118164
    8. '   ' → logprob: -15.298593521118164
    9. '  ' → logprob: -15.923593521118164
    10. '[z' → logprob: -16.798593521118164

Token 485: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0022689702454954386
    2. '.right' → logprob: -6.2522687911987305
    3. '.parent' → logprob: -8.00226879119873
    4. '.key' → logprob: -12.37726879119873
    5. '.' → logprob: -14.62726879119873
    6. ' ==' → logprob: -15.00226879119873
    7. '==' → logprob: -15.00226879119873
    8. ' is' → logprob: -15.37726879119873
    9. 'left' → logprob: -16.377269744873047
    10. ' .' → logprob: -17.627269744873047

Token 486: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9888529181480408
    2. ' ==' → logprob: -0.9888529181480408
    3. '==' → logprob: -1.3638529777526855
    4. 'is' → logprob: -8.363852500915527
    5. '=' → logprob: -11.488852500915527
    6. '=None' → logprob: -11.613852500915527
    7. 'None' → logprob: -11.613852500915527
    8. ' !=' → logprob: -11.738852500915527
    9. ' =' → logprob: -11.988852500915527
    10. ' None' → logprob: -11.988852500915527

Token 487: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.003177952254191041
    2. ' None' → logprob: -5.753178119659424
    3. '_None' → logprob: -16.753177642822266
    4. '=None' → logprob: -17.003177642822266
    5. '(None' → logprob: -17.253177642822266
    6. 'No' → logprob: -17.628177642822266
    7. 'none' → logprob: -17.753177642822266
    8. ' ' → logprob: -18.128177642822266
    9. '   ' → logprob: -18.378177642822266
    10. 'N' → logprob: -18.878177642822266

Token 488: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14659278094768524
    2. ' and' → logprob: -2.021592855453491
    3. 'and' → logprob: -6.396592617034912
    4. ':
' → logprob: -6.521592617034912
    5. '       ' → logprob: -7.646592617034912
    6. ' or' → logprob: -8.64659309387207
    7. '   ' → logprob: -10.14659309387207
    8. '<|end|>' → logprob: -10.89659309387207
    9. ' :' → logprob: -11.14659309387207
    10. '):' → logprob: -11.27159309387207

Token 489: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.08894786238670349
    2. 'z' → logprob: -2.4639477729797363
    3. '   ' → logprob: -12.463948249816895
    4. ' ' → logprob: -13.463948249816895
    5. '	z' → logprob: -13.463948249816895
    6. '       ' → logprob: -14.713948249816895
    7. ' ' → logprob: -15.213948249816895
    8. '    ' → logprob: -15.338948249816895
    9. 'None' → logprob: -15.588948249816895
    10. '  ' → logprob: -15.713948249816895

Token 490: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.00011641718447208405
    2. 'right' → logprob: -9.375116348266602
    3. '.' → logprob: -10.375116348266602
    4. '.left' → logprob: -15.875116348266602
    5. '	right' → logprob: -16.5001163482666
    6. ' .' → logprob: -17.1251163482666
    7. '.Right' → logprob: -17.5001163482666
    8. ' right' → logprob: -17.7501163482666
    9. '[right' → logprob: -17.8751163482666
    10. '.parent' → logprob: -18.5001163482666

Token 491: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31349149346351624
    2. '==' → logprob: -1.3134914636611938
    3. ' is' → logprob: -8.438491821289062
    4. 'None' → logprob: -12.688491821289062
    5. ' None' → logprob: -13.188491821289062
    6. '=None' → logprob: -13.188491821289062
    7. ')==' → logprob: -13.438491821289062
    8. ' ' → logprob: -13.938491821289062
    9. '<|end|>' → logprob: -14.063491821289062
    10. ' ' → logprob: -14.438491821289062

Token 492: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004620472434908152
    2. ' None' → logprob: -5.379620552062988
    3. '_None' → logprob: -16.504619598388672
    4. ' ' → logprob: -16.754619598388672
    5. '=None' → logprob: -17.004619598388672
    6. 'No' → logprob: -17.254619598388672
    7. '   ' → logprob: -17.379619598388672
    8. '(None' → logprob: -17.754619598388672
    9. 'none' → logprob: -18.504619598388672
    10. '0' → logprob: -18.629619598388672

Token 493: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031963700894266367
    2. ':
' → logprob: -5.7531962394714355
    3. ' :' → logprob: -11.753196716308594
    4. '):' → logprob: -12.503196716308594
    5. '       ' → logprob: -12.628196716308594
    6. ',' → logprob: -13.878196716308594
    7. ':return' → logprob: -13.878196716308594
    8. '):
' → logprob: -14.503196716308594
    9. ':

' → logprob: -14.878196716308594
    10. ':
' → logprob: -15.128196716308594

Token 494: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.997356653213501
    2. '       ' → logprob: -1.122356653213501
    3. ':
' → logprob: -1.247356653213501
    4. '<|end|>' → logprob: -5.372356414794922
    5. '           ' → logprob: -5.622356414794922
    6. ':return' → logprob: -5.872356414794922
    7. '#' → logprob: -6.747356414794922
    8. '):
' → logprob: -6.872356414794922
    9. ',' → logprob: -7.247356414794922
    10. '        ' → logprob: -7.372356414794922

Token 495: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.005109475925564766
    2. 'x' → logprob: -6.5051093101501465
    3. 'if' → logprob: -6.7551093101501465
    4. ' y' → logprob: -7.1301093101501465
    5. '   ' → logprob: -7.2551093101501465
    6. ' ' → logprob: -7.6301093101501465
    7. 'trans' → logprob: -8.255109786987305
    8. '       ' → logprob: -9.630109786987305
    9. 'child' → logprob: -10.630109786987305
    10. 'u' → logprob: -11.005109786987305

Token 496: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005233882926404476
    2. '=' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.630233764648438
    4. ',' → logprob: -18.755233764648438
    5. '=y' → logprob: -18.880233764648438
    6. '=None' → logprob: -19.130233764648438
    7. '    ' → logprob: -19.130233764648438
    8. ' =
' → logprob: -19.380233764648438
    9. '＝' → logprob: -20.255233764648438
    10. ' ' → logprob: -20.505233764648438

Token 497: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.03804286941885948
    2. ' z' → logprob: -3.2880427837371826
    3. '	z' → logprob: -13.538043022155762
    4. ' ' → logprob: -17.413042068481445
    5. '   ' → logprob: -19.413042068481445
    6. '    ' → logprob: -20.288042068481445
    7. ' ' → logprob: -20.288042068481445
    8. '
' → logprob: -20.663042068481445
    9. '_z' → logprob: -20.663042068481445
    10. '=z' → logprob: -20.788042068481445

Token 498: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 499: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0330359973013401
    2. '       ' → logprob: -3.90803599357605
    3. ' else' → logprob: -4.408036231994629
    4. '
' → logprob: -8.908036231994629
    5. '#else' → logprob: -10.033036231994629
    6. 'elif' → logprob: -10.533036231994629
    7. '        
' → logprob: -11.783036231994629
    8. '	else' → logprob: -12.033036231994629
    9. ' 
' → logprob: -12.783036231994629
    10. '_else' → logprob: -12.783036231994629

Token 500: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.11321985721588135
    2. ' else' → logprob: -2.363219738006592
    3. '       ' → logprob: -4.363219738006592
    4. 'elif' → logprob: -9.11322021484375
    5. '	else' → logprob: -10.23822021484375
    6. ' elif' → logprob: -11.11322021484375
    7. '_else' → logprob: -11.23822021484375
    8. '#else' → logprob: -12.23822021484375
    9. '
' → logprob: -12.73822021484375
    10. '   ' → logprob: -12.86322021484375

Token 501: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36416828632354736
    2. ' =' → logprob: -1.8641682863235474
    3. '=' → logprob: -1.9891682863235474
    4. ':
' → logprob: -4.864168167114258
    5. '       ' → logprob: -5.489168167114258
    6. '   ' → logprob: -7.239168167114258
    7. ',' → logprob: -7.989168167114258
    8. ' :' → logprob: -9.364168167114258
    9. '.' → logprob: -9.864168167114258
    10. '           ' → logprob: -9.989168167114258

Token 502: '           ' (ID: 352)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38970574736595154
    2. ' y' → logprob: -1.139705777168274
    3. '       ' → logprob: -6.014705657958984
    4. '        ' → logprob: -9.139705657958984
    5. '           ' → logprob: -9.264705657958984
    6. '	y' → logprob: -9.514705657958984
    7. 'z' → logprob: -10.139705657958984
    8. ' ' → logprob: -10.389705657958984
    9. ' z' → logprob: -11.639705657958984
    10. '	       ' → logprob: -11.764705657958984

Token 503: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.016103820875287056
    2. ' y' → logprob: -4.141103744506836
    3. '       ' → logprob: -10.516103744506836
    4. 'x' → logprob: -10.766103744506836
    5. '           ' → logprob: -12.016103744506836
    6. '	y' → logprob: -12.266103744506836
    7. 'z' → logprob: -12.391103744506836
    8. '   ' → logprob: -13.016103744506836
    9. '    ' → logprob: -13.766103744506836
    10. '#' → logprob: -13.891103744506836

Token 504: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003600544296205044
    2. '=' → logprob: -5.628600597381592
    3. ' ' → logprob: -15.128600120544434
    4. '=y' → logprob: -15.753600120544434
    5. '   ' → logprob: -17.75360107421875
    6. ' y' → logprob: -18.12860107421875
    7. 'y' → logprob: -18.37860107421875
    8. '    ' → logprob: -18.37860107421875
    9. ',' → logprob: -18.37860107421875
    10. '.' → logprob: -18.87860107421875

Token 505: ' Node' (ID: 10882)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.5766370892524719
    2. 'cls' → logprob: -0.8266370892524719
    3. ' z' → logprob: -8.201637268066406
    4. ' cls' → logprob: -8.326637268066406
    5. 'Node' → logprob: -8.701637268066406
    6. '(cls' → logprob: -11.826637268066406
    7. '	z' → logprob: -13.076637268066406
    8. 'classmethod' → logprob: -13.701637268066406
    9. 'Cls' → logprob: -13.951637268066406
    10. 'y' → logprob: -13.951637268066406

Token 506: '.get' (ID: 775)
  Prédit: '.find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.14845223724842072
    2. '.delete' → logprob: -2.1484522819519043
    3. '(z' → logprob: -4.648452281951904
    4. '.walk' → logprob: -5.773452281951904
    5. '.z' → logprob: -6.023452281951904
    6. '.success' → logprob: -6.648452281951904
    7. '._' → logprob: -6.898452281951904
    8. '.' → logprob: -7.648452281951904
    9. '.get' → logprob: -7.648452281951904
    10. '(' → logprob: -7.773452281951904

Token 507: '_success' (ID: 43025)
  Prédit: '_success'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_success' → logprob: -0.5292584896087646
    2. '_right' → logprob: -2.2792584896087646
    3. 'success' → logprob: -2.4042584896087646
    4. '_next' → logprob: -3.0292584896087646
    5. 'succ' → logprob: -3.4042584896087646
    6. '_left' → logprob: -3.6542584896087646
    7. 's' → logprob: -4.154258728027344
    8. '_max' → logprob: -4.404258728027344
    9. '_min' → logprob: -4.779258728027344
    10. 'y' → logprob: -4.779258728027344

Token 508: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.00286170095205307
    2. 's' → logprob: -5.877861499786377
    3. 'success' → logprob: -11.127861976623535
    4. 'essor' → logprob: -11.627861976623535
    5. 'class' → logprob: -11.877861976623535
    6. 'os' → logprob: -12.252861976623535
    7. 'cess' → logprob: -12.877861976623535
    8. ' ' → logprob: -13.002861976623535
    9. '__' → logprob: -13.002861976623535
    10. 'o' → logprob: -13.252861976623535

Token 509: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -2.141186450899113e-05
    2. '(' → logprob: -11.000020980834961
    3. '(y' → logprob: -13.000020980834961
    4. '(cls' → logprob: -13.875020980834961
    5. '(x' → logprob: -14.375020980834961
    6. '(q' → logprob: -15.375020980834961
    7. '(node' → logprob: -15.500020980834961
    8. '((' → logprob: -16.75002098083496
    9. '(
' → logprob: -16.75002098083496
    10. '(Z' → logprob: -17.00002098083496

Token 510: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023416792973876
    2. '(z' → logprob: -4.773416996002197
    3. '.right' → logprob: -5.023416996002197
    4. '(y' → logprob: -5.023416996002197
    5. '(right' → logprob: -7.398416996002197
    6. ')(' → logprob: -8.148416519165039
    7. ')y' → logprob: -8.648416519165039
    8. '(' → logprob: -8.898416519165039
    9. 'right' → logprob: -9.148416519165039
    10. '.left' → logprob: -9.148416519165039

Token 511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03519642725586891
    2. 'x' → logprob: -3.785196542739868
    3. ' x' → logprob: -5.285196304321289
    4. '   ' → logprob: -5.410196304321289
    5. 'z' → logprob: -7.660196304321289
    6. '
' → logprob: -8.160196304321289
    7. '        
' → logprob: -8.535196304321289
    8. 's' → logprob: -8.910196304321289
    9. 'return' → logprob: -9.035196304321289
    10. 'def' → logprob: -9.160196304321289

Token 512: ' if' (ID: 538)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4010384678840637
    2. ' if' → logprob: -1.651038408279419
    3. ' x' → logprob: -2.401038408279419
    4. 'if' (adapté à ' if') → logprob: -3.651038408279419
    5. '       ' → logprob: -3.901038408279419
    6. '   ' → logprob: -6.526038646697998
    7. '#' → logprob: -9.65103816986084
    8. 'def' → logprob: -10.27603816986084
    9. ' #' → logprob: -10.65103816986084
    10. ' ' → logprob: -10.77603816986084

Token 513: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.033658724278211594
    2. ' y' → logprob: -3.408658742904663
    3. '	y' → logprob: -11.908658981323242
    4. '(y' → logprob: -12.408658981323242
    5. ' ' → logprob: -14.283658981323242
    6. '   ' → logprob: -14.408658981323242
    7. 'not' → logprob: -14.908658981323242
    8. '  ' → logprob: -15.158658981323242
    9. 'z' → logprob: -16.283658981323242
    10. '    ' → logprob: -16.783658981323242

Token 514: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.048598840832710266
    2. '.parent' → logprob: -3.0485987663269043
    3. 'left' → logprob: -12.298599243164062
    4. '.' → logprob: -12.423599243164062
    5. 'parent' → logprob: -13.798599243164062
    6. '.key' → logprob: -14.048599243164062
    7. '.right' → logprob: -14.298599243164062
    8. '.child' → logprob: -16.298599243164062
    9. '.Left' → logprob: -16.423599243164062
    10. '	left' → logprob: -17.173599243164062

Token 515: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3180811405181885
    2. '!=' → logprob: -2.0680811405181885
    3. ' is' → logprob: -2.4430811405181885
    4. '<|end|>' → logprob: -3.1930811405181885
    5. ' ==' → logprob: -4.818080902099609
    6. '==' → logprob: -5.193080902099609
    7. '<|end|>' → logprob: -6.318080902099609
    8. ' ' → logprob: -6.693080902099609
    9. '=None' → logprob: -8.31808090209961
    10. ' ' → logprob: -8.56808090209961

Token 516: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.038042180240154266
    2. ' None' → logprob: -3.2880420684814453
    3. '_None' → logprob: -15.288042068481445
    4. 'N' → logprob: -15.788042068481445
    5. 'No' → logprob: -15.788042068481445
    6. '=None' → logprob: -16.413042068481445
    7. '(None' → logprob: -16.788042068481445
    8. ' ' → logprob: -16.913042068481445
    9. 'Node' → logprob: -17.288042068481445
    10. ',None' → logprob: -17.913042068481445

Token 517: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022248411551117897
    2. ' :' → logprob: -6.502224922180176
    3. ':
' → logprob: -7.502224922180176
    4. '):' → logprob: -9.627224922180176
    5. '<|end|>' → logprob: -10.627224922180176
    6. ' or' → logprob: -11.627224922180176
    7. '       ' → logprob: -11.627224922180176
    8. '.left' → logprob: -11.752224922180176
    9. '.' → logprob: -11.877224922180176
    10. ')' → logprob: -12.252224922180176

Token 518: '           ' (ID: 352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.670741856098175
    2. ' x' → logprob: -1.0457417964935303
    3. '       ' → logprob: -3.0457417964935303
    4. 'u' → logprob: -3.7957417964935303
    5. '<|end|>' → logprob: -4.295742034912109
    6. '   ' → logprob: -4.920742034912109
    7. '           ' → logprob: -5.045742034912109
    8. ' ' → logprob: -5.420742034912109
    9. '=' → logprob: -5.420742034912109
    10. '        ' → logprob: -5.545742034912109

Token 519: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0001843485952122137
    2. ' x' → logprob: -8.750184059143066
    3. '	x' → logprob: -11.000184059143066
    4. 'y' → logprob: -12.250184059143066
    5. 'child' → logprob: -13.250184059143066
    6. '{x' → logprob: -14.375184059143066
    7. ''x' → logprob: -14.500184059143066
    8. ' ' → logprob: -15.500184059143066
    9. '"x' → logprob: -15.625184059143066
    10. '   ' → logprob: -15.625184059143066

Token 520: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858941584825516
    2. '=' → logprob: -3.0485894680023193
    3. '=y' → logprob: -13.173589706420898
    4. '=x' → logprob: -16.5485897064209
    5. ' ' → logprob: -17.0485897064209
    6. '＝' → logprob: -17.6735897064209
    7. '=
' → logprob: -17.9235897064209
    8. ' =
' → logprob: -18.0485897064209
    9. '	' → logprob: -18.7985897064209
    10. ',' → logprob: -19.4235897064209

Token 521: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002613358374219388
    2. ' y' → logprob: -8.250261306762695
    3. '	y' → logprob: -17.000261306762695
    4. ')y' → logprob: -20.500261306762695
    5. ''y' → logprob: -20.875261306762695
    6. '   ' → logprob: -21.000261306762695
    7. ' ' → logprob: -21.250261306762695
    8. '@y' → logprob: -22.125261306762695
    9. '(y' → logprob: -22.125261306762695
    10. 'y's' → logprob: -22.375261306762695

Token 522: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.4498052223643754e-05
    2. 'left' → logprob: -11.750014305114746
    3. '.' → logprob: -12.125014305114746
    4. ' .' → logprob: -13.875014305114746
    5. '.right' → logprob: -16.000015258789062
    6. '.Left' → logprob: -17.750015258789062
    7. '[left' → logprob: -18.000015258789062
    8. '	left' → logprob: -18.375015258789062
    9. ' left' → logprob: -18.625015258789062
    10. ':left' → logprob: -18.875015258789062

Token 523: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.15394540131092072
    2. '       ' → logprob: -2.5289454460144043
    3. ' else' → logprob: -2.7789454460144043
    4. '#else' → logprob: -8.153944969177246
    5. '
' → logprob: -8.778944969177246
    6. '<|end|>' → logprob: -8.778944969177246
    7. '	else' → logprob: -9.403944969177246
    8. '}else' → logprob: -10.528944969177246
    9. 'elif' → logprob: -10.528944969177246
    10. ' 
' → logprob: -10.653944969177246

Token 524: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07063447684049606
    2. ' else' → logprob: -3.320634365081787
    3. '       ' → logprob: -3.445634365081787
    4. '	else' → logprob: -9.695634841918945
    5. '<|end|>' → logprob: -10.445634841918945
    6. '#else' → logprob: -10.695634841918945
    7. '```' → logprob: -11.195634841918945
    8. '}else' → logprob: -11.695634841918945
    9. 'elif' → logprob: -11.820634841918945
    10. '	' → logprob: -12.070634841918945

Token 525: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.009218101389706135
    2. ' else' → logprob: -5.009218215942383
    3. '       ' → logprob: -6.009218215942383
    4. '	else' → logprob: -10.634218215942383
    5. 'elif' → logprob: -11.009218215942383
    6. '	' → logprob: -14.509218215942383
    7. '}else' → logprob: -14.759218215942383
    8. '#else' → logprob: -15.009218215942383
    9. '_else' → logprob: -15.134218215942383
    10. '   ' → logprob: -15.384218215942383

Token 526: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14654244482517242
    2. ':
' → logprob: -2.021542549133301
    3. '       ' → logprob: -6.771542549133301
    4. 'x' → logprob: -7.146542549133301
    5. ' x' → logprob: -7.146542549133301
    6. 'if' → logprob: -8.0215425491333
    7. ' if' → logprob: -8.3965425491333
    8. '           ' → logprob: -8.7715425491333
    9. ' :' → logprob: -8.8965425491333
    10. '=' → logprob: -9.3965425491333

Token 527: '           ' (ID: 352)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.48943793773651123
    2. 'x' → logprob: -0.9894379377365112
    3. '       ' → logprob: -4.614438056945801
    4. ' None' → logprob: -6.239438056945801
    5. ' if' → logprob: -6.989438056945801
    6. 'None' → logprob: -7.114438056945801
    7. ' y' → logprob: -7.364438056945801
    8. '           ' → logprob: -7.489438056945801
    9. 'if' → logprob: -8.4894380569458
    10. '        ' → logprob: -9.1144380569458

Token 528: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.42139649391174316
    2. 'x' (adapté à ' x') → logprob: -1.1713964939117432
    3. ' y' → logprob: -3.421396493911743
    4. ' x' → logprob: -6.671396255493164
    5. 'None' → logprob: -13.671396255493164
    6. '       ' → logprob: -14.296396255493164
    7. '	y' → logprob: -15.171396255493164
    8. ' ' → logprob: -15.671396255493164
    9. '   ' → logprob: -15.671396255493164
    10. '           ' → logprob: -15.796396255493164

Token 529: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '＝' → logprob: -17.576414108276367
    4. ' ' → logprob: -17.951414108276367
    5. '=None' → logprob: -18.076414108276367
    6. '=
' → logprob: -18.826414108276367
    7. ' =
' → logprob: -19.826414108276367
    8. '=y' → logprob: -20.201414108276367
    9. '=x' → logprob: -20.451414108276367
    10. ')' → logprob: -20.951414108276367

Token 530: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04858759790658951
    2. ' y' → logprob: -3.0485875606536865
    3. 'None' → logprob: -15.923587799072266
    4. '	y' → logprob: -16.673587799072266
    5. ' ' → logprob: -18.173587799072266
    6. ' None' → logprob: -19.798587799072266
    7. ' ' → logprob: -20.048587799072266
    8. '   ' → logprob: -20.173587799072266
    9. 'x' → logprob: -20.298587799072266
    10. ')y' → logprob: -20.423587799072266

Token 531: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -1.4021237802808173e-05
    2. '.' → logprob: -11.500014305114746
    3. 'right' → logprob: -12.500014305114746
    4. '.r' → logprob: -17.37501335144043
    5. ' .' → logprob: -17.50001335144043
    6. '	right' → logprob: -18.50001335144043
    7. '.Right' → logprob: -19.25001335144043
    8. '[right' → logprob: -19.25001335144043
    9. '.left' → logprob: -19.37501335144043
    10. 'Right' → logprob: -19.87501335144043

Token 532: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009789501316845417
    2. '<|end|>' → logprob: -5.88478946685791
    3. ' if' → logprob: -6.00978946685791
    4. 'x' → logprob: -6.38478946685791
    5. 'if' → logprob: -6.63478946685791
    6. '        ' → logprob: -8.38478946685791
    7. '        
' → logprob: -8.75978946685791
    8. ')' → logprob: -8.88478946685791
    9. '   ' → logprob: -8.88478946685791
    10. ' x' → logprob: -8.88478946685791

Token 533: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06617522984743118
    2. 'if' → logprob: -3.4411752223968506
    3. ' if' → logprob: -3.8161752223968506
    4. '<|end|>' → logprob: -5.06617546081543
    5. 'x' → logprob: -6.19117546081543
    6. '
' → logprob: -8.44117546081543
    7. ' ' → logprob: -8.69117546081543
    8. ' x' → logprob: -8.69117546081543
    9. '        
' → logprob: -8.69117546081543
    10. '	if' → logprob: -8.81617546081543

Token 534: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002569289645180106
    2. ' if' → logprob: -8.500256538391113
    3. '       ' → logprob: -9.875256538391113
    4. 'If' → logprob: -14.000256538391113
    5. 'x' → logprob: -14.375256538391113
    6. '	if' → logprob: -14.875256538391113
    7. '   ' → logprob: -16.12525749206543
    8. ' ' → logprob: -17.00025749206543
    9. '        
' → logprob: -17.00025749206543
    10. '#' → logprob: -17.75025749206543

Token 535: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019287518225610256
    2. ' x' → logprob: -6.251928806304932
    3. '	x' → logprob: -17.001928329467773
    4. '   ' → logprob: -17.626928329467773
    5. ' ' → logprob: -17.751928329467773
    6. '(x' → logprob: -19.251928329467773
    7. '  ' → logprob: -19.376928329467773
    8. '$x' → logprob: -20.376928329467773
    9. '"x' → logprob: -21.001928329467773
    10. '    ' → logprob: -21.626928329467773

Token 536: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1473485827445984
    2. ' !=' → logprob: -2.022348642349243
    3. ' is' → logprob: -5.397348403930664
    4. '!' → logprob: -10.022348403930664
    5. ' ' → logprob: -10.897348403930664
    6. ':' → logprob: -10.897348403930664
    7. 'is' → logprob: -11.272348403930664
    8. 'parent' → logprob: -11.522348403930664
    9. ')!=' → logprob: -12.397348403930664
    10. '!='' → logprob: -12.522348403930664

Token 537: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.014164566993713379
    2. ' None' → logprob: -4.264164447784424
    3. 'y' → logprob: -14.014164924621582
    4. '=None' → logprob: -16.014163970947266
    5. '_None' → logprob: -16.764163970947266
    6. ' y' → logprob: -17.014163970947266
    7. 'No' → logprob: -18.389163970947266
    8. 'none' → logprob: -18.639163970947266
    9. '(None' → logprob: -18.764163970947266
    10. '.None' → logprob: -18.764163970947266

Token 538: ':
' (ID: 734)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.1241900622844696
    2. '           ' → logprob: -2.249190092086792
    3. '.x' → logprob: -4.999189853668213
    4. '.' → logprob: -5.499189853668213
    5. ' .' → logprob: -8.499190330505371
    6. '       ' → logprob: -9.374190330505371
    7. '.Parent' → logprob: -9.999190330505371
    8. '   ' → logprob: -10.249190330505371
    9. '               ' → logprob: -11.249190330505371
    10. 'parent' → logprob: -11.499190330505371

Token 539: '           ' (ID: 352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.34934866428375244
    2. '           ' → logprob: -1.3493486642837524
    3. ' x' → logprob: -3.349348545074463
    4. '   ' → logprob: -9.224349021911621
    5. '       ' → logprob: -9.349349021911621
    6. '	x' → logprob: -9.849349021911621
    7. '		' → logprob: -11.224349021911621
    8. '            
' → logprob: -11.224349021911621
    9. ' ' → logprob: -11.349349021911621
    10. '
' → logprob: -11.474349021911621

Token 540: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00020461321400944144
    2. ' x' → logprob: -8.500205039978027
    3. '           ' → logprob: -13.750205039978027
    4. '       ' → logprob: -18.00020408630371
    5. '	x' → logprob: -18.25020408630371
    6. '               ' → logprob: -18.87520408630371
    7. '   ' → logprob: -20.75020408630371
    8. '
' → logprob: -22.00020408630371
    9. '            
' → logprob: -22.00020408630371
    10. ' ' → logprob: -22.50020408630371

Token 541: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -3.054500666621607e-06
    2. '.' → logprob: -12.87500286102295
    3. ' .' → logprob: -15.12500286102295
    4. 'parent' → logprob: -15.37500286102295
    5. '.Parent' → logprob: -17.625003814697266
    6. ',parent' → logprob: -18.750003814697266
    7. '.p' → logprob: -19.000003814697266
    8. '[parent' → logprob: -19.500003814697266
    9. '	parent' → logprob: -19.625003814697266
    10. '.par' → logprob: -19.750003814697266

Token 542: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868718445301056
    2. '=' → logprob: -1.1368718147277832
    3. ' ' → logprob: -15.261872291564941
    4. ' =
' → logprob: -15.636872291564941
    5. '=y' → logprob: -15.761872291564941
    6. '=
' → logprob: -16.636871337890625
    7. '=z' → logprob: -16.636871337890625
    8. ')' → logprob: -17.011871337890625
    9. '=x' → logprob: -17.261871337890625
    10. '＝' → logprob: -17.511871337890625

Token 543: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00020354038861114532
    2. ' y' → logprob: -8.500203132629395
    3. '	y' → logprob: -17.62520408630371
    4. ')y' → logprob: -19.00020408630371
    5. 'None' → logprob: -19.87520408630371
    6. '(y' → logprob: -21.00020408630371
    7. 'x' → logprob: -21.00020408630371
    8. '[y' → logprob: -21.25020408630371
    9. 'y's' → logprob: -21.25020408630371
    10. ' ' → logprob: -23.00020408630371

Token 544: '.parent' (ID: 17454)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.16022787988185883
    2. '.parent' → logprob: -1.91022789478302
    3. ' parent' → logprob: -12.91022777557373
    4. '_parent' → logprob: -14.16022777557373
    5. '	parent' → logprob: -15.03522777557373
    6. '.' → logprob: -16.410228729248047
    7. 'Parent' → logprob: -16.660228729248047
    8. '[parent' → logprob: -17.035228729248047
    9. ',parent' → logprob: -17.410228729248047
    10. '-parent' → logprob: -17.410228729248047

Token 545: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48468393087387085
    2. '<|end|>' → logprob: -0.9846839308738708
    3. '
' → logprob: -5.484683990478516
    4. ' ' → logprob: -7.109683990478516
    5. ' 
' → logprob: -7.234683990478516
    6. '        
' → logprob: -7.234683990478516
    7. ')' → logprob: -7.484683990478516
    8. '        ' → logprob: -7.609683990478516
    9. '```' → logprob: -7.609683990478516
    10. '<|end|>' → logprob: -7.609683990478516

Token 546: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003448729868978262
    2. '<|end|>' → logprob: -5.878448963165283
    3. ' if' → logprob: -8.628448486328125
    4. 'if' → logprob: -9.003448486328125
    5. '```' → logprob: -9.253448486328125
    6. '        
' → logprob: -9.253448486328125
    7. ')' → logprob: -10.253448486328125
    8. '#' → logprob: -10.503448486328125
    9. '
' → logprob: -11.128448486328125
    10. 'y' → logprob: -11.628448486328125

Token 547: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0009386162855662405
    2. ' if' → logprob: -7.625938415527344
    3. '       ' → logprob: -7.750938415527344
    4. '```' → logprob: -12.000938415527344
    5. 'If' → logprob: -12.250938415527344
    6. 'y' → logprob: -13.125938415527344
    7. '#' → logprob: -13.250938415527344
    8. '	if' → logprob: -13.500938415527344
    9. '   ' → logprob: -13.500938415527344
    10. ';if' → logprob: -14.625938415527344

Token 548: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018150413408875465
    2. ' y' → logprob: -4.018150329589844
    3. '	y' → logprob: -14.643150329589844
    4. '   ' → logprob: -17.268150329589844
    5. '(y' → logprob: -17.768150329589844
    6. '[y' → logprob: -18.518150329589844
    7. ' ' → logprob: -18.518150329589844
    8. '  ' → logprob: -19.393150329589844
    9. 'y's' → logprob: -20.018150329589844
    10. ')y' → logprob: -20.018150329589844

Token 549: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00027706706896424294
    2. 'parent' → logprob: -8.625277519226074
    3. '.' → logprob: -9.250277519226074
    4. '==' → logprob: -15.250277519226074
    5. 'Parent' → logprob: -15.250277519226074
    6. '.Parent' → logprob: -15.375277519226074
    7. '_parent' → logprob: -15.500277519226074
    8. ' ==' → logprob: -15.875277519226074
    9. '	parent' → logprob: -16.000276565551758
    10. ' .' → logprob: -16.125276565551758

Token 550: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5788695216178894
    2. ' ==' → logprob: -0.8288695216178894
    3. '=' → logprob: -6.953869342803955
    4. ' is' → logprob: -7.078869342803955
    5. '!=' → logprob: -7.953869342803955
    6. ' !=' → logprob: -7.953869342803955
    7. '=None' → logprob: -9.453869819641113
    8. '   ' → logprob: -9.828869819641113
    9. ' =' → logprob: -10.078869819641113
    10. ')==' → logprob: -10.203869819641113

Token 551: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00015860427811276168
    2. ' None' → logprob: -8.750158309936523
    3. 'N' → logprob: -16.875158309936523
    4. '=None' → logprob: -17.500158309936523
    5. 'No' → logprob: -17.625158309936523
    6. 'z' → logprob: -17.625158309936523
    7. '_None' → logprob: -17.750158309936523
    8. 'y' → logprob: -18.500158309936523
    9. ' ' → logprob: -18.750158309936523
    10. 'Node' → logprob: -18.750158309936523

Token 552: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49191054701805115
    2. '=' → logprob: -0.9919105768203735
    3. ':
' → logprob: -4.366910457611084
    4. ' =' → logprob: -6.366910457611084
    5. '==' → logprob: -6.991910457611084
    6. '=None' → logprob: -7.241910457611084
    7. '):' → logprob: -7.866910457611084
    8. '):
' → logprob: -7.991910457611084
    9. ')' → logprob: -7.991910457611084
    10. '<|end|>' → logprob: -8.991910934448242

Token 553: '           ' (ID: 352)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.1042509377002716
    2. ' cls' → logprob: -2.854250907897949
    3. '           ' → logprob: -3.354250907897949
    4. 'Cls' → logprob: -6.104250907897949
    5. 'Node' → logprob: -6.604250907897949
    6. '(cls' → logprob: -6.979250907897949
    7. '   ' → logprob: -7.104250907897949
    8. '<|end|>' → logprob: -7.604250907897949
    9. '_cls' → logprob: -8.72925090789795
    10. 'classmethod' → logprob: -9.22925090789795

Token 554: ' Node' (ID: 10882)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.00016635251813568175
    2. ' cls' → logprob: -8.750165939331055
    3. 'Node' (adapté à ' Node') → logprob: -11.875165939331055
    4. 'if' → logprob: -14.875165939331055
    5. '(cls' → logprob: -15.250165939331055
    6. 'x' → logprob: -16.000165939331055
    7. 'Cls' → logprob: -16.125165939331055
    8. ' Node' → logprob: -18.750165939331055
    9. '   ' → logprob: -18.875165939331055
    10. 'classmethod' → logprob: -19.000165939331055

Token 555: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -2.534558552724775e-05
    2. '.' → logprob: -11.125025749206543
    3. 'root' → logprob: -11.625025749206543
    4. ' .' → logprob: -13.750025749206543
    5. '[root' → logprob: -15.750025749206543
    6. '=root' → logprob: -16.000024795532227
    7. '.cls' → logprob: -16.250024795532227
    8. '	root' → logprob: -16.625024795532227
    9. '.ro' → logprob: -17.125024795532227
    10. '/root' → logprob: -18.000024795532227

Token 556: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133019506931305
    2. ' =' → logprob: -1.313301920890808
    3. '=None' → logprob: -10.313302040100098
    4. '=root' → logprob: -12.188302040100098
    5. ' ' → logprob: -13.688302040100098
    6. '＝' → logprob: -15.563302040100098
    7. '=x' → logprob: -16.18830108642578
    8. 'None' → logprob: -16.68830108642578
    9. '=node' → logprob: -16.68830108642578
    10. ' None' → logprob: -16.68830108642578

Token 557: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.836499985889532e-05
    2. ' x' → logprob: -9.7500581741333
    3. '	x' → logprob: -17.125059127807617
    4. 'None' → logprob: -21.250059127807617
    5. ')x' → logprob: -21.875059127807617
    6. '$x' → logprob: -23.500059127807617
    7. ' ' → logprob: -23.750059127807617
    8. '   ' → logprob: -24.000059127807617
    9. '_x' → logprob: -24.125059127807617
    10. '"x' → logprob: -24.250059127807617

Token 558: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.031144820153713226
    2. '       ' → logprob: -3.781144857406616
    3. ' else' → logprob: -4.906144618988037
    4. 'elif' → logprob: -7.906144618988037
    5. '	else' → logprob: -10.031145095825195
    6. '<|end|>' → logprob: -10.656145095825195
    7. '}else' → logprob: -11.781145095825195
    8. '#else' → logprob: -12.281145095825195
    9. '.' → logprob: -12.531145095825195
    10. '	' → logprob: -13.031145095825195

Token 559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5801281929016113
    2. 'else' → logprob: -0.8301281929016113
    3. ' else' → logprob: -5.580128192901611
    4. 'elif' → logprob: -7.955128192901611
    5. '```' → logprob: -11.205127716064453
    6. '	' → logprob: -11.330127716064453
    7. '<|end|>' → logprob: -11.830127716064453
    8. '	else' → logprob: -11.830127716064453
    9. '   ' → logprob: -12.205127716064453
    10. '}else' → logprob: -13.205127716064453

Token 560: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0796361118555069
    2. 'elif' (adapté à ' elif') → logprob: -2.5796360969543457
    3. '       ' → logprob: -7.829636096954346
    4. ' else' → logprob: -8.079636573791504
    5. ' elif' → logprob: -10.329636573791504
    6. '   ' → logprob: -12.954636573791504
    7. '```' → logprob: -13.829636573791504
    8. 'elseif' → logprob: -13.954636573791504
    9. '	elif' → logprob: -14.579636573791504
    10. 'y' → logprob: -15.079636573791504

Token 561: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07889331132173538
    2. ' y' → logprob: -2.5788934230804443
    3. '	y' → logprob: -13.203893661499023
    4. '   ' → logprob: -13.828893661499023
    5. '    ' → logprob: -14.578893661499023
    6. '(y' → logprob: -16.453893661499023
    7. '       ' → logprob: -16.703893661499023
    8. '           ' → logprob: -17.078893661499023
    9. ' ' → logprob: -17.578893661499023
    10. '  ' → logprob: -17.953893661499023

Token 562: ' ==' (ID: 951)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -7.421908958349377e-05
    2. 'parent' → logprob: -9.75007438659668
    3. '.' → logprob: -11.37507438659668
    4. ' .' → logprob: -13.50007438659668
    5. ' parent' → logprob: -13.87507438659668
    6. ' ==' → logprob: -14.37507438659668
    7. '	parent' → logprob: -14.37507438659668
    8. 'Parent' → logprob: -15.50007438659668
    9. '==' → logprob: -15.87507438659668
    10. '_parent' → logprob: -15.87507438659668

Token 563: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01105300523340702
    2. ' y' → logprob: -4.511053085327148
    3. '	y' → logprob: -13.136053085327148
    4. '   ' → logprob: -13.261053085327148
    5. '    ' → logprob: -13.636053085327148
    6. ' ' → logprob: -15.636053085327148
    7. '  ' → logprob: -16.26105308532715
    8. '
' → logprob: -17.51105308532715
    9. 'y's' → logprob: -18.01105308532715
    10. '     ' → logprob: -18.63605308532715

Token 564: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.029782544821500778
    2. 'parent' → logprob: -3.52978253364563
    3. '	parent' → logprob: -11.27978229522705
    4. '_parent' → logprob: -12.02978229522705
    5. 'Parent' → logprob: -12.65478229522705
    6. ' parent' → logprob: -12.77978229522705
    7. '   ' → logprob: -13.52978229522705
    8. 'y' → logprob: -13.52978229522705
    9. '.' → logprob: -13.77978229522705
    10. ',parent' → logprob: -13.90478229522705

Token 565: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.2471589798224159e-05
    2. '.right' → logprob: -12.125012397766113
    3. 'left' → logprob: -12.625012397766113
    4. '.le' → logprob: -13.375012397766113
    5. '.' → logprob: -13.625012397766113
    6. ' .' → logprob: -14.000012397766113
    7. '[left' → logprob: -17.62501335144043
    8. '.Left' → logprob: -17.75001335144043
    9. '	left' → logprob: -18.12501335144043
    10. '.l' → logprob: -18.12501335144043

Token 566: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008671772666275501
    2. ':
' → logprob: -4.758671760559082
    3. '.' → logprob: -10.383671760559082
    4. ' :' → logprob: -11.133671760559082
    5. '):' → logprob: -12.758671760559082
    6. ':
' → logprob: -12.883671760559082
    7. '):
' → logprob: -13.258671760559082
    8. ')' → logprob: -13.383671760559082
    9. '   ' → logprob: -14.508671760559082
    10. '       ' → logprob: -14.508671760559082

Token 567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0041188886389136314
    2. ' y' → logprob: -6.879118919372559
    3. ' :' → logprob: -7.129118919372559
    4. '            ' → logprob: -7.379118919372559
    5. '               ' → logprob: -8.254118919372559
    6. ')' → logprob: -8.504118919372559
    7. ':' → logprob: -8.504118919372559
    8. ' ' → logprob: -8.754118919372559
    9. '       ' → logprob: -9.504118919372559
    10. ' =' → logprob: -9.629118919372559

Token 568: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5761562585830688
    2. 'y' (adapté à ' y') → logprob: -0.8261562585830688
    3. '           ' → logprob: -8.576156616210938
    4. '	y' → logprob: -10.826156616210938
    5. '               ' → logprob: -12.326156616210938
    6. '            ' → logprob: -13.576156616210938
    7. '   ' → logprob: -13.701156616210938
    8. ' ' → logprob: -14.326156616210938
    9. ')y' → logprob: -15.951156616210938
    10. ''y' → logprob: -16.076156616210938

Token 569: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.000305310997646302
    2. '.' → logprob: -8.12530517578125
    3. '.left' → logprob: -12.00030517578125
    4. ' .' → logprob: -13.12530517578125
    5. 'parent' → logprob: -14.12530517578125
    6. '.Parent' → logprob: -15.37530517578125
    7. '.right' → logprob: -16.75030517578125
    8. '	parent' → logprob: -17.50030517578125
    9. '_parent' → logprob: -17.75030517578125
    10. '[parent' → logprob: -18.37530517578125

Token 570: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -8.327856630785391e-05
    2. '.' → logprob: -9.500082969665527
    3. '.right' → logprob: -12.500082969665527
    4. ' .' → logprob: -12.750082969665527
    5. '.le' → logprob: -13.750082969665527
    6. '.parent' → logprob: -14.750082969665527
    7. '.Left' → logprob: -16.375083923339844
    8. '.l' → logprob: -17.000083923339844
    9. '.child' → logprob: -17.125083923339844
    10. '[left' → logprob: -18.500083923339844

Token 571: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687199354171753
    2. ' =' → logprob: -1.1368720531463623
    3. ' ' → logprob: -15.386872291564941
    4. '=None' → logprob: -15.636872291564941
    5. '=y' → logprob: -15.761872291564941
    6. '=x' → logprob: -16.261871337890625
    7. ' =
' → logprob: -16.511871337890625
    8. '＝' → logprob: -16.886871337890625
    9. '<|end|>' → logprob: -17.136871337890625
    10. '=
' → logprob: -17.511871337890625

Token 572: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.061967797577381134
    2. ' x' → logprob: -2.8119678497314453
    3. '	x' → logprob: -15.936967849731445
    4. ' ' → logprob: -19.311967849731445
    5. ')x' → logprob: -20.436967849731445
    6. '(x' → logprob: -20.936967849731445
    7. '"x' → logprob: -21.561967849731445
    8. '   ' → logprob: -21.936967849731445
    9. '$x' → logprob: -22.436967849731445
    10. '>x' → logprob: -22.561967849731445

Token 573: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2633110284805298
    2. '       ' → logprob: -1.5133110284805298
    3. ' else' → logprob: -4.51331090927124
    4. '<|end|>' → logprob: -8.513311386108398
    5. 'elif' → logprob: -9.638311386108398
    6. '	else' → logprob: -10.263311386108398
    7. '```' → logprob: -11.638311386108398
    8. '.' → logprob: -11.888311386108398
    9. '#else' → logprob: -12.263311386108398
    10. 'Else' → logprob: -12.388311386108398

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20521195232868195
    2. 'else' → logprob: -1.7052119970321655
    3. ' else' → logprob: -5.580212116241455
    4. '	else' → logprob: -12.330211639404297
    5. 'elif' → logprob: -12.705211639404297
    6. '<|end|>' → logprob: -12.830211639404297
    7. '	' → logprob: -13.080211639404297
    8. '```' → logprob: -13.580211639404297
    9. '   ' → logprob: -13.705211639404297
    10. 'Else' → logprob: -14.205211639404297

Token 575: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04099644720554352
    2. ' else' → logprob: -3.790996551513672
    3. '       ' → logprob: -4.040996551513672
    4. '	else' → logprob: -11.415996551513672
    5. '	' → logprob: -13.540996551513672
    6. 'elif' → logprob: -14.415996551513672
    7. '   ' → logprob: -14.540996551513672
    8. '_else' → logprob: -15.415996551513672
    9. 'y' → logprob: -15.790996551513672
    10. ':
' → logprob: -15.915996551513672

Token 576: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038796667009592056
    2. ':
' → logprob: -3.2887966632843018
    3. '           ' → logprob: -7.288796901702881
    4. '{' → logprob: -10.538796424865723
    5. ' :' → logprob: -10.913796424865723
    6. ' :
' → logprob: -11.788796424865723
    7. ':y' → logprob: -12.163796424865723
    8. ' y' → logprob: -12.163796424865723
    9. ':
' → logprob: -13.288796424865723
    10. 'y' → logprob: -13.413796424865723

Token 577: '           ' (ID: 352)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.551476001739502
    2. 'y' → logprob: -1.551476001739502
    3. '           ' → logprob: -1.551476001739502
    4. '	y' → logprob: -11.051475524902344
    5. '   ' → logprob: -12.426475524902344
    6. ' ' → logprob: -12.551475524902344
    7. '          ' → logprob: -13.426475524902344
    8. ' ' → logprob: -13.926475524902344
    9. '       ' → logprob: -14.176475524902344
    10. '		' → logprob: -14.176475524902344

Token 578: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.07889088988304138
    2. ' y' → logprob: -2.578890800476074
    3. '           ' → logprob: -14.078890800476074
    4. '	y' → logprob: -15.078890800476074
    5. '   ' → logprob: -17.45389175415039
    6. ''y' → logprob: -18.82889175415039
    7. ')y' → logprob: -18.95389175415039
    8. '       ' → logprob: -18.95389175415039
    9. ' ' → logprob: -19.32889175415039
    10. '               ' → logprob: -20.07889175415039

Token 579: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.1160349458805285e-05
    2. 'parent' → logprob: -12.000011444091797
    3. '.' → logprob: -12.250011444091797
    4. ' .' → logprob: -16.250011444091797
    5. '[parent' → logprob: -17.875011444091797
    6. ' parent' → logprob: -18.000011444091797
    7. '	parent' → logprob: -18.125011444091797
    8. '.Parent' → logprob: -18.625011444091797
    9. '_parent' → logprob: -20.125011444091797
    10. '.right' → logprob: -20.750011444091797

Token 580: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0002979240380227566
    2. '.' → logprob: -8.250297546386719
    3. '.left' → logprob: -10.250297546386719
    4. ' .' → logprob: -13.750297546386719
    5. 'right' → logprob: -16.50029754638672
    6. '.Right' → logprob: -17.00029754638672
    7. '.parent' → logprob: -17.25029754638672
    8. '[right' → logprob: -18.25029754638672
    9. '.RIGHT' → logprob: -19.25029754638672
    10. '	right' → logprob: -19.37529754638672

Token 581: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163628220558167
    2. ' =' → logprob: -4.264163494110107
    3. '=x' → logprob: -15.764163970947266
    4. '=
' → logprob: -19.014163970947266
    5. '=

' → logprob: -19.639163970947266
    6. '＝' → logprob: -20.389163970947266
    7. '=y' → logprob: -20.389163970947266
    8. ' ' → logprob: -20.514163970947266
    9. ')' → logprob: -20.639163970947266
    10. '<|end|>' → logprob: -20.639163970947266

Token 582: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004078639671206474
    2. ' x' → logprob: -5.5040788650512695
    3. '	x' → logprob: -15.50407886505127
    4. ' ' → logprob: -19.004077911376953
    5. '   ' → logprob: -19.754077911376953
    6. '(x' → logprob: -21.004077911376953
    7. ')x' → logprob: -21.504077911376953
    8. '  ' → logprob: -21.879077911376953
    9. '"x' → logprob: -21.879077911376953
    10. ' ' → logprob: -22.004077911376953

Token 583: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033585624769330025
    2. '<|end|>' → logprob: -5.878358364105225
    3. '   ' → logprob: -8.253358840942383
    4. ' if' → logprob: -9.753358840942383
    5. '```' → logprob: -10.128358840942383
    6. ' ' → logprob: -10.128358840942383
    7. '        
' → logprob: -10.503358840942383
    8. '	' → logprob: -10.628358840942383
    9. 'if' → logprob: -10.753358840942383
    10. '#' → logprob: -11.128358840942383

Token 584: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1114489957690239
    2. '<|end|>' → logprob: -2.4864490032196045
    3. 'y' → logprob: -4.986448764801025
    4. '   ' → logprob: -5.236448764801025
    5. '```' → logprob: -5.986448764801025
    6. '        
' → logprob: -6.611448764801025
    7. '
' → logprob: -7.236448764801025
    8. '#' → logprob: -7.486448764801025
    9. 'return' → logprob: -7.986448764801025
    10. '\' → logprob: -7.986448764801025

Token 585: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00011069540778407827
    2. ' if' → logprob: -9.250110626220703
    3. '       ' → logprob: -11.250110626220703
    4. '   ' → logprob: -13.750110626220703
    5. '	if' → logprob: -15.375110626220703
    6. '```' → logprob: -15.500110626220703
    7. 'If' → logprob: -17.625110626220703
    8. '#' → logprob: -17.750110626220703
    9. ' ' → logprob: -18.000110626220703
    10. '        
' → logprob: -18.375110626220703

Token 586: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.012515541166067123
    2. ' y' → logprob: -4.387515544891357
    3. '	y' → logprob: -12.2625150680542
    4. '   ' → logprob: -14.6375150680542
    5. 'not' → logprob: -15.0125150680542
    6. ' ' → logprob: -15.6375150680542
    7. ' not' → logprob: -15.8875150680542
    8. '  ' → logprob: -16.262516021728516
    9. '    ' → logprob: -16.762516021728516
    10. 'z' → logprob: -17.137516021728516

Token 587: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.09104953706264496
    2. '!=' → logprob: -2.4660494327545166
    3. '.key' → logprob: -6.216049671173096
    4. '.parent' → logprob: -9.591049194335938
    5. 'key' → logprob: -10.841049194335938
    6. ' is' → logprob: -11.841049194335938
    7. ' isn't' → logprob: -13.341049194335938
    8. ')!=' → logprob: -13.341049194335938
    9. '不是' → logprob: -13.466049194335938
    10. 'parent' → logprob: -13.466049194335938

Token 588: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.061988186091184616
    2. ' z' → logprob: -2.811988115310669
    3. '	z' → logprob: -10.81198787689209
    4. ' ' → logprob: -15.56198787689209
    5. '   ' → logprob: -16.436988830566406
    6. '=z' → logprob: -17.436988830566406
    7. 'y' → logprob: -18.061988830566406
    8. '
' → logprob: -18.186988830566406
    9. '_z' → logprob: -18.186988830566406
    10. '    ' → logprob: -18.186988830566406

Token 589: ':
' (ID: 734)
  Prédit: '.key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.007035631220787764
    2. ':' → logprob: -5.132035732269287
    3. '.' → logprob: -6.882035732269287
    4. ':key' → logprob: -10.007035255432129
    5. ':
' → logprob: -11.507035255432129
    6. ' key' → logprob: -11.757035255432129
    7. '.keys' → logprob: -11.882035255432129
    8. 'key' → logprob: -12.507035255432129
    9. ' :' → logprob: -13.507035255432129
    10. ' .' → logprob: -13.882035255432129

Token 590: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4081505537033081
    2. ' z' → logprob: -1.408150553703308
    3. 'z' → logprob: -2.5331506729125977
    4. '           ' → logprob: -5.408150672912598
    5. '```' → logprob: -6.283150672912598
    6. '   ' → logprob: -6.408150672912598
    7. '<|end|>' → logprob: -7.533150672912598
    8. '	z' → logprob: -7.533150672912598
    9. '        ' → logprob: -7.783150672912598
    10. ',z' → logprob: -8.158150672912598

Token 591: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' (adapté à ' z') → logprob: -0.2520711421966553
    2. ' z' → logprob: -1.5020711421966553
    3. '           ' → logprob: -9.002071380615234
    4. '	z' → logprob: -11.377071380615234
    5. '   ' → logprob: -13.127071380615234
    6. '       ' → logprob: -13.252071380615234
    7. '    ' → logprob: -13.377071380615234
    8. '        ' → logprob: -14.002071380615234
    9. ' ' → logprob: -14.377071380615234
    10. '            ' → logprob: -15.502071380615234

Token 592: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -3.225939872208983e-05
    2. '.' → logprob: -10.375032424926758
    3. ' .' → logprob: -13.875032424926758
    4. 'key' → logprob: -17.875032424926758
    5. '.Key' → logprob: -18.000032424926758
    6. ' key' → logprob: -19.000032424926758
    7. '[key' → logprob: -19.750032424926758
    8. ':key' → logprob: -20.125032424926758
    9. ',key' → logprob: -20.250032424926758
    10. '.keys' → logprob: -20.250032424926758

Token 593: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029756972566246986
    2. '=' → logprob: -3.529757022857666
    3. ' ' → logprob: -12.029756546020508
    4. ',' → logprob: -15.404756546020508
    5. ' =
' → logprob: -15.404756546020508
    6. '<|end|>' → logprob: -17.154756546020508
    7. ' =
' → logprob: -17.154756546020508
    8. '=y' → logprob: -17.779756546020508
    9. ')' → logprob: -18.029756546020508
    10. ' =)' → logprob: -18.154756546020508

Token 594: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2519291639328003
    2. ' y' → logprob: -1.5019291639328003
    3. '	y' → logprob: -16.376928329467773
    4. ' ' → logprob: -17.251928329467773
    5. ' ' → logprob: -17.501928329467773
    6. 'x' → logprob: -18.626928329467773
    7. ''y' → logprob: -19.501928329467773
    8. '   ' → logprob: -19.501928329467773
    9. 'z' → logprob: -19.751928329467773
    10. 'y's' → logprob: -19.751928329467773

Token 595: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -3.2855416066013277e-05
    2. 'key' → logprob: -10.375032424926758
    3. '.' → logprob: -13.500032424926758
    4. ' .' → logprob: -15.625032424926758
    5. ' key' → logprob: -17.000032424926758
    6. ':key' → logprob: -19.500032424926758
    7. ',key' → logprob: -19.625032424926758
    8. '	key' → logprob: -19.750032424926758
    9. '```' → logprob: -20.375032424926758
    10. '$key' → logprob: -20.375032424926758

Token 596: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 597: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4413180351257324
    2. '<|end|>' → logprob: -1.0663180351257324
    3. '\n' → logprob: -5.441318035125732
    4. '#' → logprob: -6.691318035125732
    5. ' ' → logprob: -6.816318035125732
    6. '' → logprob: -6.941318035125732
    7. '<|end|>' → logprob: -7.691318035125732
    8. '

' → logprob: -7.691318035125732
    9. ')' → logprob: -7.816318035125732
    10. 'newline' → logprob: -7.941318035125732

Token 598: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.8428871631622314
    2. '   ' → logprob: -1.0928871631622314
    3. '
' → logprob: -1.4678871631622314
    4. '<|end|>' → logprob: -7.342886924743652
    5. ' ' → logprob: -7.467886924743652
    6. '    
' → logprob: -7.592886924743652
    7. ' @' → logprob: -7.717886924743652
    8. '\n' → logprob: -8.592886924743652
    9. '	' → logprob: -8.717886924743652
    10. '.' → logprob: -8.842886924743652

Token 599: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -1.3663626305060461e-05
    2. 'staticmethod' → logprob: -11.25001335144043
    3. 'class' → logprob: -14.37501335144043
    4. '@' → logprob: -18.00001335144043
    5. '@class' → logprob: -22.25001335144043
    6. ' class' → logprob: -22.50001335144043
    7. '<class' → logprob: -23.37501335144043
    8. '-class' → logprob: -23.62501335144043
    9. '"class' → logprob: -23.62501335144043
    10. '@@' → logprob: -23.87501335144043

Token 600: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21023716032505035
    2. ' def' → logprob: -2.2102372646331787
    3. '
' → logprob: -2.8352372646331787
    4. '   ' → logprob: -4.4602370262146
    5. '.' → logprob: -5.4602370262146
    6. ':' → logprob: -6.4602370262146
    7. ' ' → logprob: -6.7102370262146
    8. '(' → logprob: -7.8352370262146
    9. ' .' → logprob: -8.085237503051758
    10. 'Node' → logprob: -8.085237503051758

Token 601: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016749451169744134
    2. '
' → logprob: -6.876675128936768
    3. ' def' → logprob: -7.376675128936768
    4. ':def' → logprob: -12.12667465209961
    5. '   ' → logprob: -12.37667465209961
    6. ':' → logprob: -12.75167465209961
    7. '	def' → logprob: -13.50167465209961
    8. 'Node' → logprob: -14.50167465209961
    9. '('' → logprob: -14.75167465209961
    10. 'Def' → logprob: -15.12667465209961

Token 602: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004659149795770645
    2. 'get' → logprob: -5.379659175872803
    3. ' def' → logprob: -10.254658699035645
    4. '
' → logprob: -13.504658699035645
    5. 'find' → logprob: -14.754658699035645
    6. 'Get' → logprob: -15.129658699035645
    7. 'class' → logprob: -15.254658699035645
    8. 'classmethod' → logprob: -15.379658699035645
    9. 'staticmethod' → logprob: -15.879658699035645
    10. '@get' → logprob: -15.879658699035645

Token 603: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0006268949946388602
    2. ' get' → logprob: -7.375627040863037
    3. 'find' → logprob: -15.250626564025879
    4. '	get' → logprob: -16.625627517700195
    5. 'minimum' → logprob: -17.375627517700195
    6. '_get' → logprob: -17.375627517700195
    7. 'trans' → logprob: -17.750627517700195
    8. 'success' → logprob: -17.875627517700195
    9. 'min' → logprob: -17.875627517700195
    10. '.get' → logprob: -18.375627517700195

Token 604: '_success' (ID: 43025)
  Prédit: '_success'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_success' → logprob: -5.200166469876422e-06
    2. '_pre' → logprob: -12.500004768371582
    3. '_parent' → logprob: -14.750004768371582
    4. 'success' → logprob: -15.250004768371582
    5. '_left' → logprob: -15.375004768371582
    6. '_' → logprob: -15.750004768371582
    7. '_right' → logprob: -16.1250057220459
    8. '_min' → logprob: -16.2500057220459
    9. '_next' → logprob: -16.7500057220459
    10. '_max' → logprob: -17.0000057220459

Token 605: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -6.704273118884885e-07
    2. '_or' → logprob: -14.750000953674316
    3. 'essor' → logprob: -15.375000953674316
    4. 'ors' → logprob: -18.0
    5. 'class' → logprob: -18.75
    6. ' or' → logprob: -19.5
    7. 'orm' → logprob: -19.5
    8. '_' → logprob: -19.875
    9. '(or' → logprob: -20.0
    10. 'orb' → logprob: -20.125

Token 606: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.75
    3. '(clazz' → logprob: -17.25
    4. '(class' → logprob: -18.0
    5. 'cls' → logprob: -18.5
    6. '(cl' → logprob: -18.625
    7. ' (' → logprob: -20.125
    8. '(c' → logprob: -21.25
    9. '(
' → logprob: -21.75
    10. '(self' → logprob: -21.875

Token 607: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0001158211671281606
    2. ')(' → logprob: -9.125115394592285
    3. ',' → logprob: -12.375115394592285
    4. ')' → logprob: -13.375115394592285
    5. '(' → logprob: -14.500115394592285
    6. 'cls' → logprob: -15.250115394592285
    7. ' (' → logprob: -16.0001163482666
    8. '(node' → logprob: -16.5001163482666
    9. '(clazz' → logprob: -16.8751163482666
    10. ' cls' → logprob: -17.1251163482666

Token 608: ' x' (ID: 1215)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.09869184345006943
    2. 'z' → logprob: -2.598691940307617
    3. 'x' → logprob: -4.473691940307617
    4. 'cls' → logprob: -5.223691940307617
    5. ' node' → logprob: -5.973691940307617
    6. 'Node' → logprob: -8.973691940307617
    7. ' z' → logprob: -9.598691940307617
    8. 'n' → logprob: -10.973691940307617
    9. ' cls' → logprob: -10.973691940307617
    10. 'class' → logprob: -11.848691940307617

Token 609: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05056038498878479
    2. '):' → logprob: -3.050560474395752
    3. '(cls' → logprob: -6.300560474395752
    4. '):
' → logprob: -9.425559997558594
    5. '   ' → logprob: -10.675559997558594
    6. 'cls' → logprob: -11.300559997558594
    7. ')' → logprob: -12.050559997558594
    8. '       ' → logprob: -12.550559997558594
    9. ' ,' → logprob: -12.675559997558594
    10. ' ):' → logprob: -13.050559997558594

Token 610: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17344947159290314
    2. '       ' → logprob: -2.1734495162963867
    3. ' if' → logprob: -3.5484495162963867
    4. '   ' → logprob: -4.673449516296387
    5. 'node' → logprob: -5.048449516296387
    6. 'y' → logprob: -7.423449516296387
    7. 'current' → logprob: -8.548449516296387
    8. '	if' → logprob: -10.298449516296387
    9. ' node' → logprob: -10.673449516296387
    10. ' y' → logprob: -11.173449516296387

Token 611: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.521573543548584
    2. 'x' → logprob: -1.271573543548584
    3. 'node' → logprob: -2.396573543548584
    4. 'current' → logprob: -3.521573543548584
    5. 'curr' → logprob: -6.021573543548584
    6. 'cur' → logprob: -6.896573543548584
    7. '   ' → logprob: -7.021573543548584
    8. 'temp' → logprob: -8.021574020385742
    9. 'y' → logprob: -8.521574020385742
    10. ' if' → logprob: -8.521574020385742

Token 612: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.967624019831419e-05
    2. ' x' → logprob: -9.750060081481934
    3. '	x' → logprob: -13.625060081481934
    4. '   ' → logprob: -16.875059127807617
    5. '(x' → logprob: -19.625059127807617
    6. ' ' → logprob: -19.625059127807617
    7. 'not' → logprob: -20.500059127807617
    8. '  ' → logprob: -20.875059127807617
    9. '"x' → logprob: -22.250059127807617
    10. '{x' → logprob: -22.375059127807617

Token 613: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -7.941850526549388e-06
    2. '.' → logprob: -12.625007629394531
    3. '.left' → logprob: -12.875007629394531
    4. 'right' → logprob: -13.125007629394531
    5. '	right' → logprob: -17.25000762939453
    6. '.Right' → logprob: -18.75000762939453
    7. ' .' → logprob: -18.75000762939453
    8. '   ' → logprob: -19.00000762939453
    9. ':right' → logprob: -19.25000762939453
    10. ',right' → logprob: -20.25000762939453

Token 614: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6229049563407898
    2. ' is' → logprob: -1.1229050159454346
    3. '!=' → logprob: -1.9979050159454346
    4. 'is' → logprob: -6.3729047775268555
    5. '<|end|>' → logprob: -8.372904777526855
    6. ':' → logprob: -8.622904777526855
    7. ' ==' → logprob: -9.122904777526855
    8. ' not' → logprob: -9.622904777526855
    9. '	is' → logprob: -9.872904777526855
    10. '==' → logprob: -9.872904777526855

Token 615: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011047814972698689
    2. ' None' → logprob: -4.511047840118408
    3. '_None' → logprob: -17.88604736328125
    4. ' ' → logprob: -18.63604736328125
    5. '=None' → logprob: -19.76104736328125
    6. '   ' → logprob: -20.01104736328125
    7. 'none' → logprob: -20.13604736328125
    8. 'No' → logprob: -20.76104736328125
    9. '(None' → logprob: -21.01104736328125
    10. '_none' → logprob: -21.13604736328125

Token 616: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013390329666435719
    2. ':
' → logprob: -4.38839054107666
    3. '.' → logprob: -7.76339054107666
    4. '   ' → logprob: -9.26339054107666
    5. '       ' → logprob: -9.26339054107666
    6. '           ' → logprob: -9.76339054107666
    7. ' :' → logprob: -9.76339054107666
    8. '):' → logprob: -10.26339054107666
    9. '<|end|>' → logprob: -10.51339054107666
    10. ',' → logprob: -11.38839054107666

Token 617: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014672634191811085
    2. 'current' → logprob: -4.764672756195068
    3. 'node' → logprob: -6.139672756195068
    4. 'return' → logprob: -6.639672756195068
    5. '       ' → logprob: -7.389672756195068
    6. ' current' → logprob: -7.764672756195068
    7. 'x' → logprob: -8.26467227935791
    8. '	       ' → logprob: -8.38967227935791
    9. '<|end|>' → logprob: -9.01467227935791
    10. ' return' → logprob: -9.13967227935791

Token 618: ' return' (ID: 622)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5625061988830566
    2. 'current' → logprob: -1.9375061988830566
    3. 'node' → logprob: -2.0625061988830566
    4. 'y' → logprob: -2.6875061988830566
    5. 'curr' → logprob: -3.4375061988830566
    6. 'return' (adapté à ' return') → logprob: -3.6875061988830566
    7. 'p' → logprob: -4.562506198883057
    8. 'n' → logprob: -4.687506198883057
    9. 'cur' → logprob: -4.812506198883057
    10. '   ' → logprob: -6.687506198883057

Token 619: ' Node' (ID: 10882)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3151252269744873
    2. 'cls' → logprob: -1.3151252269744873
    3. ' cls' → logprob: -6.940125465393066
    4. ' x' → logprob: -7.190125465393066
    5. 'Node' → logprob: -8.940125465393066
    6. 'classmethod' → logprob: -12.815125465393066
    7. '(cls' → logprob: -12.940125465393066
    8. 'Cls' → logprob: -13.190125465393066
    9. ' Node' → logprob: -14.565125465393066
    10. 'class' → logprob: -14.815125465393066

Token 620: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0038529320154339075
    2. 'get' → logprob: -6.253852844238281
    3. '(x' → logprob: -7.253852844238281
    4. '.walk' → logprob: -7.753852844238281
    5. '.find' → logprob: -8.878852844238281
    6. '.right' → logprob: -8.878852844238281
    7. '.x' → logprob: -9.003852844238281
    8. '.min' → logprob: -9.128852844238281
    9. '.left' → logprob: -9.253852844238281
    10. '.' → logprob: -10.628852844238281

Token 621: '_min' (ID: 15950)
  Prédit: '_success'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_success' → logprob: -0.011305401101708412
    2. '_min' → logprob: -4.511305332183838
    3. 'success' → logprob: -8.386305809020996
    4. '_left' → logprob: -11.011305809020996
    5. 'Success' → logprob: -12.136305809020996
    6. '_max' → logprob: -13.261305809020996
    7. 'min' → logprob: -13.261305809020996
    8. '_right' → logprob: -14.136305809020996
    9. '_s' → logprob: -14.261305809020996
    10. 'succ' → logprob: -14.636305809020996

Token 622: 'imum' (ID: 4556)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3900516629219055
    2. 'imum' → logprob: -1.1400516033172607
    3. 'node' → logprob: -6.51505184173584
    4. '(cls' → logprob: -7.14005184173584
    5. 'inum' → logprob: -8.14005184173584
    6. 'Node' → logprob: -8.51505184173584
    7. 'im' → logprob: -9.01505184173584
    8. 'mum' → logprob: -9.51505184173584
    9. 'value' → logprob: -10.01505184173584
    10. '(node' → logprob: -10.39005184173584

Token 623: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0004564135451801121
    2. '(' → logprob: -8.000456809997559
    3. '(cls' → logprob: -9.125456809997559
    4. '(node' → logprob: -11.500456809997559
    5. '(
' → logprob: -13.875456809997559
    6. ' (' → logprob: -15.000456809997559
    7. '((' → logprob: -15.875456809997559
    8. '(obj' → logprob: -16.125455856323242
    9. '(Node' → logprob: -16.375455856323242
    10. '(xs' → logprob: -16.500455856323242

Token 624: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.000273136975010857
    2. '.' → logprob: -9.500272750854492
    3. ').' → logprob: -9.500272750854492
    4. ')' → logprob: -10.625272750854492
    5. '.left' → logprob: -10.625272750854492
    6. '.x' → logprob: -10.750272750854492
    7. '(x' → logprob: -10.875272750854492
    8. ' .' → logprob: -10.875272750854492
    9. 'right' → logprob: -11.875272750854492
    10. '.key' → logprob: -13.125272750854492

Token 625: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.17420256882906e-05
    2. '.left' → logprob: -10.250091552734375
    3. ' )' → logprob: -10.750091552734375
    4. '       ' → logprob: -10.875091552734375
    5. ')
' → logprob: -12.000091552734375
    6. ').' → logprob: -12.625091552734375
    7. '.right' → logprob: -12.750091552734375
    8. '   ' → logprob: -13.375091552734375
    9. '	' → logprob: -15.125091552734375
    10. '),' → logprob: -15.500091552734375

Token 626: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011932619847357273
    2. '	' → logprob: -5.511932849884033
    3. 'else' → logprob: -6.136932849884033
    4. '   ' → logprob: -6.261932849884033
    5. '
' → logprob: -6.511932849884033
    6. ' else' → logprob: -7.761932849884033
    7. '        
' → logprob: -8.261932373046875
    8. 'return' → logprob: -8.386932373046875
    9. '	else' → logprob: -8.761932373046875
    10. '' → logprob: -8.761932373046875

Token 627: ' y' (ID: 342)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0853973925113678
    2. 'return' → logprob: -3.585397481918335
    3. 'while' → logprob: -3.835397481918335
    4. 'current' → logprob: -4.335397243499756
    5. 'temp' → logprob: -5.085397243499756
    6. 'y' (adapté à ' y') → logprob: -5.710397243499756
    7. 'curr' → logprob: -5.960397243499756
    8. 'i' → logprob: -6.460397243499756
    9. 'cur' → logprob: -6.460397243499756
    10. 't' → logprob: -6.710397243499756

Token 628: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868716359138489
    2. ' =' → logprob: -1.136871576309204
    3. '=x' → logprob: -15.011871337890625
    4. '=y' → logprob: -15.636871337890625
    5. ' ' → logprob: -16.136871337890625
    6. '.' → logprob: -17.761871337890625
    7. '	' → logprob: -18.386871337890625
    8. '＝' → logprob: -18.511871337890625
    9. ' ' → logprob: -18.886871337890625
    10. '=None' → logprob: -19.261871337890625

Token 629: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6240566083070007e-06
    2. ' x' → logprob: -13.375001907348633
    3. '	x' → logprob: -19.250001907348633
    4. '   ' → logprob: -21.625001907348633
    5. 'Node' → logprob: -22.000001907348633
    6. ' ' → logprob: -22.500001907348633
    7. 'class' → logprob: -22.875001907348633
    8. '$x' → logprob: -23.625001907348633
    9. 'node' → logprob: -23.875001907348633
    10. '(x' → logprob: -23.875001907348633

Token 630: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -3.583550642360933e-05
    2. 'parent' → logprob: -10.250036239624023
    3. '.' → logprob: -15.375036239624023
    4. '.Parent' → logprob: -16.750036239624023
    5. '.left' → logprob: -17.750036239624023
    6. ' parent' → logprob: -18.000036239624023
    7. '	parent' → logprob: -18.125036239624023
    8. '_parent' → logprob: -18.250036239624023
    9. 'Parent' → logprob: -18.375036239624023
    10. '.p' → logprob: -19.375036239624023

Token 631: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2959824204444885
    2. '       ' → logprob: -1.4209823608398438
    3. ' while' → logprob: -4.295982360839844
    4. '	while' → logprob: -7.170982360839844
    5. '
' → logprob: -8.545982360839844
    6. 'While' → logprob: -9.420982360839844
    7. '<|end|>' → logprob: -10.920982360839844
    8. '   ' → logprob: -11.670982360839844
    9. 'current' → logprob: -11.670982360839844
    10. '        
' → logprob: -12.295982360839844

Token 632: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18019351363182068
    2. '       ' → logprob: -1.930193543434143
    3. ' while' → logprob: -4.0551934242248535
    4. '	while' → logprob: -6.0551934242248535
    5. '   ' → logprob: -9.430193901062012
    6. 'While' → logprob: -12.305193901062012
    7. '	' → logprob: -13.055193901062012
    8. ' ' → logprob: -13.805193901062012
    9. '	   ' → logprob: -13.805193901062012
    10. ' ' → logprob: -13.930193901062012

Token 633: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0006133131100796163
    2. ' while' → logprob: -7.500613212585449
    3. '	while' → logprob: -9.75061321258545
    4. 'w' → logprob: -13.87561321258545
    5. 'While' → logprob: -14.50061321258545
    6. 'wh' → logprob: -15.12561321258545
    7. '       ' → logprob: -15.75061321258545
    8. '
' → logprob: -16.750614166259766
    9. '   ' → logprob: -17.125614166259766
    10. '' → logprob: -18.000614166259766

Token 634: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04859782010316849
    2. ' y' → logprob: -3.048597812652588
    3. '(y' → logprob: -11.548598289489746
    4. '	y' → logprob: -14.798598289489746
    5. '(' → logprob: -15.423598289489746
    6. 'x' → logprob: -15.673598289489746
    7. ' (' → logprob: -17.04859733581543
    8. '\' → logprob: -18.04859733581543
    9. ' ' → logprob: -18.17359733581543
    10. '   ' → logprob: -18.29859733581543

Token 635: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.8372290730476379
    2. '!=' → logprob: -1.2122290134429932
    3. ' is' → logprob: -1.3372290134429932
    4. ' and' → logprob: -5.337229251861572
    5. 'is' → logprob: -6.462229251861572
    6. 'and' → logprob: -7.462229251861572
    7. ' ' → logprob: -11.212228775024414
    8. '	is' → logprob: -12.462228775024414
    9. ' и' → logprob: -12.837228775024414
    10. ' not' → logprob: -13.587228775024414

Token 636: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004307884373702109
    2. ' None' → logprob: -7.750430583953857
    3. 'x' → logprob: -17.000431060791016
    4. '=None' → logprob: -17.750431060791016
    5. '(None' → logprob: -17.750431060791016
    6. 'N' → logprob: -18.000431060791016
    7. '_None' → logprob: -18.125431060791016
    8. 'No' → logprob: -18.875431060791016
    9. 'Not' → logprob: -19.625431060791016
    10. 'not' → logprob: -19.750431060791016

Token 637: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519318461418152
    2. 'and' → logprob: -1.50193190574646
    3. '	and' → logprob: -14.126932144165039
    4. '    ' → logprob: -14.376932144165039
    5. ' ' → logprob: -14.626932144165039
    6. '        ' → logprob: -15.001932144165039
    7. ' и' → logprob: -15.126932144165039
    8. '   ' → logprob: -16.00193214416504
    9. '           ' → logprob: -16.75193214416504
    10. '            ' → logprob: -16.75193214416504

Token 638: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0381116047501564
    2. ' x' → logprob: -3.288111686706543
    3. 'y' → logprob: -10.163111686706543
    4. ' y' → logprob: -10.538111686706543
    5. '	x' → logprob: -12.288111686706543
    6. '   ' → logprob: -14.788111686706543
    7. ' ' → logprob: -17.913110733032227
    8. '(x' → logprob: -18.288110733032227
    9. '	y' → logprob: -19.038110733032227
    10. '
' → logprob: -19.288110733032227

Token 639: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10021239519119263
    2. '==' → logprob: -2.350212335586548
    3. '=' → logprob: -12.850212097167969
    4. ' =' → logprob: -14.100212097167969
    5. 'y' → logprob: -14.475212097167969
    6. '==
' → logprob: -14.600212097167969
    7. ' !=' → logprob: -14.725212097167969
    8. ' y' → logprob: -14.850212097167969
    9. ' ==
' → logprob: -15.475212097167969
    10. '   ' → logprob: -16.22521209716797

Token 640: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007100477814674377
    2. ' y' → logprob: -7.2507100105285645
    3. '	y' → logprob: -17.375709533691406
    4. '   ' → logprob: -19.250709533691406
    5. ')y' → logprob: -19.625709533691406
    6. 'y's' → logprob: -19.750709533691406
    7. '(y' → logprob: -20.125709533691406
    8. ''y' → logprob: -20.875709533691406
    9. '_y' → logprob: -21.375709533691406
    10. ' ' → logprob: -21.875709533691406

Token 641: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0002382249804213643
    2. 'right' → logprob: -9.125238418579102
    3. '.left' → logprob: -9.125238418579102
    4. '.' → logprob: -10.875238418579102
    5. ' .' → logprob: -14.000238418579102
    6. '.parent' → logprob: -15.625238418579102
    7. '.r' → logprob: -15.875238418579102
    8. '	right' → logprob: -16.2502384185791
    9. '.Right' → logprob: -17.0002384185791
    10. ' right' → logprob: -17.6252384185791

Token 642: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5596124529838562
    2. ':' → logprob: -0.9346124529838562
    3. '):
' → logprob: -3.434612512588501
    4. '):' → logprob: -5.809612274169922
    5. ')' → logprob: -8.309612274169922
    6. '   ' → logprob: -9.059612274169922
    7. '       ' → logprob: -9.684612274169922
    8. ':return' → logprob: -10.809612274169922
    9. '():
' → logprob: -10.934612274169922
    10. 'child' → logprob: -11.309612274169922

Token 643: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4964686930179596
    2. '       ' → logprob: -1.7464686632156372
    3. ' x' → logprob: -2.2464687824249268
    4. 'x' → logprob: -2.2464687824249268
    5. '<|end|>' → logprob: -6.746468544006348
    6. ':
' → logprob: -6.996468544006348
    7. '   ' → logprob: -7.496468544006348
    8. '        ' → logprob: -7.746468544006348
    9. ' ' → logprob: -7.871468544006348
    10. '```' → logprob: -8.246468544006348

Token 644: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.4742196202278137
    2. ' x' → logprob: -0.9742196202278137
    3. '           ' → logprob: -9.22421932220459
    4. '	x' → logprob: -10.72421932220459
    5. '       ' → logprob: -10.97421932220459
    6. '   ' → logprob: -12.97421932220459
    7. '    ' → logprob: -14.09921932220459
    8. '               ' → logprob: -14.84921932220459
    9. '        ' → logprob: -14.84921932220459
    10. ' ' → logprob: -15.22421932220459

Token 645: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20148633420467377
    2. '=' → logprob: -1.701486349105835
    3. '=y' → logprob: -9.826486587524414
    4. ',' → logprob: -11.326486587524414
    5. 'y' → logprob: -12.201486587524414
    6. ',y' → logprob: -13.951486587524414
    7. ' y' → logprob: -14.826486587524414
    8. ' ' → logprob: -14.951486587524414
    9. ' =
' → logprob: -15.951486587524414
    10. '=
' → logprob: -16.326486587524414

Token 646: ' yy' (ID: 31344)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005234002135694027
    2. ' y' → logprob: -5.2552337646484375
    3. 'x' → logprob: -15.630233764648438
    4. '	y' → logprob: -18.005233764648438
    5. ''y' → logprob: -19.755233764648438
    6. '(y' → logprob: -19.755233764648438
    7. ')y' → logprob: -20.255233764648438
    8. 'user' → logprob: -21.130233764648438
    9. 'y's' → logprob: -21.380233764648438
    10. ' ' → logprob: -21.505233764648438

Token 647: ' =' (ID: 314)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.12802746891975403
    2. '.' → logprob: -2.1280274391174316
    3. 'parent' → logprob: -7.003027439117432
    4. '.y' → logprob: -8.75302791595459
    5. 'y' → logprob: -11.50302791595459
    6. '.Parent' → logprob: -11.50302791595459
    7. ' .' → logprob: -13.50302791595459
    8. '.p' → logprob: -13.50302791595459
    9. ' parent' → logprob: -13.62802791595459
    10. '_parent' → logprob: -13.75302791595459

Token 648: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.24299833178520203
    2. '.parent' → logprob: -1.7429983615875244
    3. '.y' → logprob: -3.2429983615875244
    4. 'parent' → logprob: -6.617998123168945
    5. ' y' → logprob: -8.492998123168945
    6. '.' → logprob: -9.617998123168945
    7. 'x' → logprob: -10.867998123168945
    8. '.right' → logprob: -10.867998123168945
    9. '<|end|>' → logprob: -11.117998123168945
    10. '.x' → logprob: -11.492998123168945

Token 649: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.019565662369132042
    2. '.' → logprob: -4.269565582275391
    3. 'parent' → logprob: -5.394565582275391
    4. '.y' → logprob: -7.894565582275391
    5. '<|end|>' → logprob: -8.51956558227539
    6. 'y' → logprob: -8.89456558227539
    7. '.right' → logprob: -9.64456558227539
    8. '.Parent' → logprob: -11.01956558227539
    9. ' parent' → logprob: -11.76956558227539
    10. '_parent' → logprob: -12.01956558227539

Token 650: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03366333618760109
    2. '.y' → logprob: -3.783663272857666
    3. 'y' → logprob: -5.158663272857666
    4. '.parent' → logprob: -6.033663272857666
    5. '<|end|>' → logprob: -6.408663272857666
    6. ')' → logprob: -8.283663749694824
    7. ' y' → logprob: -9.408663749694824
    8. '>' → logprob: -9.783663749694824
    9. ' .' → logprob: -10.033663749694824
    10. '
' → logprob: -10.533663749694824

Token 651: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.021636521443724632
    2. '.y' → logprob: -4.021636486053467
    3. 'y' → logprob: -6.271636486053467
    4. '.parent' → logprob: -7.271636486053467
    5. '>' → logprob: -7.396636486053467
    6. ' .' → logprob: -9.021636962890625
    7. '.
' → logprob: -10.021636962890625
    8. '.x' → logprob: -10.396636962890625
    9. '.right' → logprob: -10.896636962890625
    10. '<|end|>' → logprob: -11.271636962890625

Token 652: ' return' (ID: 622)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006915941834449768
    2. '.y' → logprob: -5.631916046142578
    3. 'y' → logprob: -6.006916046142578
    4. '>' → logprob: -8.506916046142578
    5. '<|end|>' → logprob: -8.631916046142578
    6. '=' → logprob: -8.756916046142578
    7. '.parent' → logprob: -9.381916046142578
    8. ')' → logprob: -9.506916046142578
    9. '.
' → logprob: -10.006916046142578
    10. ' .' → logprob: -10.756916046142578

Token 653: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.28182363510131836
    2. ' y' → logprob: -1.4068236351013184
    3. 'None' → logprob: -7.656823635101318
    4. ' None' → logprob: -8.781824111938477
    5. 'x' → logprob: -10.406824111938477
    6. ' ' → logprob: -12.281824111938477
    7. ' ' → logprob: -12.781824111938477
    8. '	y' → logprob: -13.031824111938477
    9. ' x' → logprob: -13.406824111938477
    10. 'yy' → logprob: -14.406824111938477

Token 654: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011880673468112946
    2. '.y' → logprob: -5.136880874633789
    3. 'y' → logprob: -5.386880874633789
    4. '<|end|>' → logprob: -7.261880874633789
    5. '=' → logprob: -8.261880874633789
    6. '>' → logprob: -9.136880874633789
    7. '.parent' → logprob: -9.636880874633789
    8. '.x' → logprob: -10.011880874633789
    9. ')' → logprob: -10.261880874633789
    10. ' ' → logprob: -10.511880874633789

Token 655: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5773948431015015
    2. 'y' → logprob: -1.0773948431015015
    3. '.y' → logprob: -3.077394962310791
    4. '=' → logprob: -3.577394962310791
    5. ')' → logprob: -5.077394962310791
    6. '<|end|>' → logprob: -5.327394962310791
    7. ' y' → logprob: -5.452394962310791
    8. ' ' → logprob: -5.827394962310791
    9. '>' → logprob: -6.702394962310791
    10. ' =' → logprob: -6.702394962310791

Token 656: ' @' (ID: 759)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.045142389833927155
    2. 'y' → logprob: -3.920142412185669
    3. '.y' → logprob: -3.920142412185669
    4. ')' → logprob: -6.29514217376709
    5. '=' → logprob: -7.54514217376709
    6. '>' → logprob: -7.67014217376709
    7. '.parent' → logprob: -7.67014217376709
    8. '<|end|>' → logprob: -7.79514217376709
    9. ' ' → logprob: -7.92014217376709
    10. ' y' → logprob: -9.17014217376709

Token 657: 'classmethod' (ID: 64680)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005266719032078981
    2. ' y' → logprob: -5.3802666664123535
    3. '<|end|>' → logprob: -8.130267143249512
    4. 'x' → logprob: -8.505267143249512
    5. ')' → logprob: -9.630267143249512
    6. '>' → logprob: -10.505267143249512
    7. '=' → logprob: -11.005267143249512
    8. '.y' → logprob: -12.005267143249512
    9. ' ' → logprob: -12.505267143249512
    10. 'n' → logprob: -12.505267143249512

Token 658: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.012418174184858799
    2. ':' → logprob: -4.637418270111084
    3. ' .' → logprob: -7.512418270111084
    4. '   ' → logprob: -7.762418270111084
    5. '.y' → logprob: -7.762418270111084
    6. 'y' → logprob: -8.137417793273926
    7. 'def' → logprob: -8.762417793273926
    8. '.x' → logprob: -8.887417793273926
    9. ':
' → logprob: -9.137417793273926
    10. '       ' → logprob: -9.512417793273926

Token 659: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04799068346619606
    2. 'def' → logprob: -4.297990798950195
    3. '   ' → logprob: -4.797990798950195
    4. '       ' → logprob: -5.047990798950195
    5. '.y' → logprob: -5.297990798950195
    6. '<|end|>' → logprob: -5.547990798950195
    7. ':' → logprob: -6.297990798950195
    8. ' .' → logprob: -6.672990798950195
    9. '=' → logprob: -7.047990798950195
    10. '.x' → logprob: -7.172990798950195

Token 660: ' def' (ID: 1056)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16234172880649567
    2. '<|end|>' → logprob: -3.287341833114624
    3. 'while' → logprob: -3.412341833114624
    4. '       ' → logprob: -4.037341594696045
    5. ' y' → logprob: -4.287341594696045
    6. '   ' → logprob: -4.537341594696045
    7. '=' → logprob: -4.912341594696045
    8. ' ' → logprob: -5.037341594696045
    9. 'x' → logprob: -5.162341594696045
    10. '  ' → logprob: -5.412341594696045

Token 661: ' get' (ID: 717)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03426782414317131
    2. ' y' → logprob: -4.284267902374268
    3. 'parent' → logprob: -5.284267902374268
    4. '<|end|>' → logprob: -5.534267902374268
    5. 'while' → logprob: -5.909267902374268
    6. 'x' → logprob: -6.034267902374268
    7. ' ' → logprob: -6.409267902374268
    8. '  ' → logprob: -7.284267902374268
    9. '   ' → logprob: -7.534267902374268
    10. ')' → logprob: -7.534267902374268

Token 662: '_min' (ID: 15950)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8930191993713379
    2. '.' → logprob: -1.143019199371338
    3. '<|end|>' → logprob: -1.893019199371338
    4. '_min' → logprob: -2.768019199371338
    5. 'minimum' → logprob: -4.268019199371338
    6. 'y' → logprob: -4.518019199371338
    7. '._' → logprob: -4.518019199371338
    8. '.minimum' → logprob: -5.143019199371338
    9. 'min' → logprob: -5.768019199371338
    10. '_parent' → logprob: -6.143019199371338

Token 663: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -4.572941179503687e-05
    2. 'um' → logprob: -11.250045776367188
    3. 'inum' → logprob: -11.250045776367188
    4. 'im' → logprob: -11.625045776367188
    5. '_node' → logprob: -12.375045776367188
    6. 'in' → logprob: -13.000045776367188
    7. 'IMUM' → logprob: -14.375045776367188
    8. 'mum' → logprob: -14.500045776367188
    9. 'ium' → logprob: -15.000045776367188
    10. '@' → logprob: -15.000045776367188

Token 664: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.005297673400491476
    2. '(' → logprob: -5.255297660827637
    3. '(x' → logprob: -10.755297660827637
    4. '(Node' → logprob: -11.380297660827637
    5. '(class' → logprob: -11.755297660827637
    6. ' (' → logprob: -11.880297660827637
    7. '(node' → logprob: -12.505297660827637
    8. '(cl' → logprob: -12.880297660827637
    9. '(clazz' → logprob: -12.880297660827637
    10. '(Class' → logprob: -13.255297660827637

Token 665: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.08884567022323608
    2. '(' → logprob: -2.588845729827881
    3. '(x' → logprob: -4.713845729827881
    4. ')' → logprob: -8.213845252990723
    5. '(node' → logprob: -8.338845252990723
    6. ')(' → logprob: -8.963845252990723
    7. ',' → logprob: -9.088845252990723
    8. '(Node' → logprob: -10.088845252990723
    9. '(None' → logprob: -10.213845252990723
    10. '(class' → logprob: -10.838845252990723

Token 666: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.030745001509785652
    2. 'node' → logprob: -4.405745029449463
    3. 'y' → logprob: -4.530745029449463
    4. ' x' → logprob: -5.655745029449463
    5. 'cls' → logprob: -6.780745029449463
    6. ')' → logprob: -7.030745029449463
    7. 'Node' → logprob: -7.405745029449463
    8. ' node' → logprob: -7.530745029449463
    9. ' y' → logprob: -7.780745029449463
    10. ')x' → logprob: -10.405744552612305

Token 667: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49397924542427063
    2. '):
' → logprob: -0.9939792156219482
    3. ':' → logprob: -4.243979454040527
    4. '.' → logprob: -6.493979454040527
    5. '.left' → logprob: -6.868979454040527
    6. ':
' → logprob: -6.993979454040527
    7. ')' → logprob: -7.118979454040527
    8. '   ' → logprob: -7.868979454040527
    9. '.right' → logprob: -9.118979454040527
    10. '=' → logprob: -9.118979454040527

Token 668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3410370647907257
    2. '   ' → logprob: -1.7160370349884033
    3. '    ' → logprob: -3.4660370349884033
    4. ' if' → logprob: -3.5910370349884033
    5. ' ' → logprob: -4.341037273406982
    6. '        ' → logprob: -4.716037273406982
    7. 'x' → logprob: -4.966037273406982
    8. 'if' → logprob: -5.716037273406982
    9. '  ' → logprob: -6.341037273406982
    10. ' x' → logprob: -6.466037273406982

Token 669: ' """' (ID: 9280)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0491008423268795
    2. ' while' → logprob: -3.049100875854492
    3. '       ' → logprob: -8.299100875854492
    4. '	while' → logprob: -8.299100875854492
    5. 'While' → logprob: -11.799100875854492
    6. '   ' → logprob: -12.174100875854492
    7. '
' → logprob: -13.799100875854492
    8. 'x' → logprob: -14.049100875854492
    9. '    ' → logprob: -14.924100875854492
    10. 'hile' → logprob: -15.299100875854492

Token 670: ' ?????' (ID: 149222)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6955409646034241
    2. '=' → logprob: -1.0705409049987793
    3. ' =' → logprob: -2.1955409049987793
    4. ' x' → logprob: -3.9455409049987793
    5. 'y' → logprob: -4.820540904998779
    6. 'while' → logprob: -4.820540904998779
    7. '       ' → logprob: -6.070540904998779
    8. ' ' → logprob: -6.195540904998779
    9. ' while' → logprob: -6.195540904998779
    10. '<|end|>' → logprob: -6.695540904998779

Token 671: '?' (ID: 30)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6954277753829956
    2. ' =' → logprob: -0.6954277753829956
    3. '=x' → logprob: -7.695427894592285
    4. '<|end|>' → logprob: -7.695427894592285
    5. 'x' → logprob: -7.945427894592285
    6. '       ' → logprob: -8.445427894592285
    7. '   ' → logprob: -8.820427894592285
    8. 'while' → logprob: -8.945427894592285
    9. ')' → logprob: -8.945427894592285
    10. ' ' → logprob: -9.320427894592285

Token 672: 'x' (ID: 87)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.779012143611908
    2. 'x' → logprob: -1.0290122032165527
    3. ' =' → logprob: -2.6540122032165527
    4. ' x' → logprob: -3.4040122032165527
    5. 'y' → logprob: -4.029012203216553
    6. '       ' → logprob: -4.154012203216553
    7. 'while' → logprob: -4.404012203216553
    8. '<|end|>' → logprob: -4.529012203216553
    9. ')' → logprob: -5.404012203216553
    10. '.x' → logprob: -5.529012203216553

Token 673: '????????' (ID: 85218)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5681130290031433
    2. '.left' → logprob: -1.443113088607788
    3. ' =' → logprob: -1.693113088607788
    4. '<|end|>' → logprob: -5.818112850189209
    5. '.right' → logprob: -5.943112850189209
    6. ')' → logprob: -6.068112850189209
    7. '.' → logprob: -6.818112850189209
    8. 'left' → logprob: -7.193112850189209
    9. 'while' → logprob: -7.193112850189209
    10. '=None' → logprob: -7.693112850189209

Token 674: '¨' (ID: 64259)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6626126170158386
    2. '=' → logprob: -1.9126126766204834
    3. ' while' → logprob: -2.4126126766204834
    4. '       ' → logprob: -2.6626126766204834
    5. ' =' → logprob: -2.7876126766204834
    6. '   ' → logprob: -3.1626126766204834
    7. ')' → logprob: -3.7876126766204834
    8. 'x' → logprob: -4.287612438201904
    9. ' x' → logprob: -5.287612438201904
    10. ' ' → logprob: -5.412612438201904

Token 675: '????????' (ID: 85218)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30968645215034485
    2. ' =' → logprob: -2.4346864223480225
    3. 'x' → logprob: -3.1846864223480225
    4. ')' → logprob: -3.5596864223480225
    5. 'while' → logprob: -3.6846864223480225
    6. '.left' → logprob: -3.6846864223480225
    7. '<|end|>' → logprob: -3.8096864223480225
    8. '
' → logprob: -4.809686660766602
    9. '       ' → logprob: -5.059686660766602
    10. ' while' → logprob: -5.434686660766602

Token 676: '¨' (ID: 64259)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0489146709442139
    2. '=' → logprob: -1.6739146709442139
    3. 'while' → logprob: -2.048914670944214
    4. 'y' → logprob: -2.798914670944214
    5. ')' → logprob: -3.048914670944214
    6. '.left' → logprob: -3.298914670944214
    7. '.' → logprob: -3.548914670944214
    8. ' =' → logprob: -3.798914670944214
    9. '       ' → logprob: -3.798914670944214
    10. ' while' → logprob: -3.923914670944214

Token 677: '????' (ID: 25883)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.0958623886108398
    2. '=' → logprob: -1.8458623886108398
    3. '
' → logprob: -2.22086238861084
    4. 'x' → logprob: -2.59586238861084
    5. 'while' → logprob: -2.84586238861084
    6. '<|end|>' → logprob: -3.09586238861084
    7. ')' → logprob: -3.22086238861084
    8. '.y' → logprob: -3.59586238861084
    9. ' =' → logprob: -3.59586238861084
    10. '.left' → logprob: -4.22086238861084

Token 678: '?' (ID: 30)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4000028371810913
    2. 'x' → logprob: -1.6500028371810913
    3. 'while' → logprob: -2.275002956390381
    4. '       ' → logprob: -2.525002956390381
    5. '<|end|>' → logprob: -2.525002956390381
    6. ')' → logprob: -3.025002956390381
    7. '.left' → logprob: -3.025002956390381
    8. ' =' → logprob: -3.275002956390381
    9. 'y' → logprob: -3.650002956390381
    10. ' x' → logprob: -3.775002956390381

Token 679: '¨' (ID: 64259)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4880369901657104
    2. '=' → logprob: -1.6130369901657104
    3. 'x' → logprob: -1.6130369901657104
    4. 'while' → logprob: -1.6130369901657104
    5. '       ' → logprob: -3.113037109375
    6. '.left' → logprob: -3.863037109375
    7. '<|end|>' → logprob: -4.113037109375
    8. ' while' → logprob: -4.238037109375
    9. '   ' → logprob: -4.363037109375
    10. ' =' → logprob: -4.488037109375

Token 680: '????????' (ID: 85218)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2581063210964203
    2. ' while' → logprob: -2.508106231689453
    3. '=' → logprob: -2.758106231689453
    4. '       ' → logprob: -3.133106231689453
    5. ' =' → logprob: -4.758106231689453
    6. 'x' → logprob: -4.758106231689453
    7. '	while' → logprob: -5.133106231689453
    8. '   ' → logprob: -5.633106231689453
    9. ' x' → logprob: -6.383106231689453
    10. '           ' → logprob: -6.383106231689453

Token 681: '§' (ID: 18596)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6847900152206421
    2. '=' → logprob: -1.934790015220642
    3. ')' → logprob: -2.1847901344299316
    4. '       ' → logprob: -2.5597901344299316
    5. ' while' → logprob: -3.1847901344299316
    6. 'x' → logprob: -3.6847901344299316
    7. ' =' → logprob: -4.059790134429932
    8. '   ' → logprob: -4.434790134429932
    9. '.left' → logprob: -4.434790134429932
    10. '<|end|>' → logprob: -4.684790134429932

Token 682: '????' (ID: 25883)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6030125021934509
    2. ' =' → logprob: -1.8530125617980957
    3. 'while' → logprob: -1.8530125617980957
    4. '       ' → logprob: -3.2280125617980957
    5. '
' → logprob: -3.7280125617980957
    6. 'x' → logprob: -3.7280125617980957
    7. ')' → logprob: -4.228012561798096
    8. ' while' → logprob: -4.353012561798096
    9. '   ' → logprob: -5.478012561798096
    10. 'y' → logprob: -5.853012561798096

Token 683: '°' (ID: 6793)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0720558166503906
    2. 'while' → logprob: -1.1970558166503906
    3. '=' → logprob: -2.6970558166503906
    4. '
' → logprob: -3.0720558166503906
    5. '       ' → logprob: -3.0720558166503906
    6. 'y' → logprob: -3.3220558166503906
    7. ' x' → logprob: -3.9470558166503906
    8. ' while' → logprob: -3.9470558166503906
    9. '<|end|>' → logprob: -3.9470558166503906
    10. '   ' → logprob: -4.197055816650391

Token 684: '????????' (ID: 85218)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5728127360343933
    2. 'x' → logprob: -1.947812795639038
    3. '       ' → logprob: -2.697812795639038
    4. ' while' → logprob: -2.697812795639038
    5. '=' → logprob: -2.822812795639038
    6. ')' → logprob: -3.697812795639038
    7. 'y' → logprob: -4.447812557220459
    8. ' x' → logprob: -4.447812557220459
    9. '<|end|>' → logprob: -4.447812557220459
    10. ' =' → logprob: -4.822812557220459

Token 685: '????????' (ID: 85218)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.27101579308509827
    2. 'x' → logprob: -2.2710158824920654
    3. ' while' → logprob: -2.8960158824920654
    4. '       ' → logprob: -3.6460158824920654
    5. ' x' → logprob: -4.771015644073486
    6. '=' → logprob: -4.771015644073486
    7. ')' → logprob: -4.896015644073486
    8. '   ' → logprob: -5.146015644073486
    9. '<|end|>' → logprob: -5.521015644073486
    10. '	while' → logprob: -5.771015644073486

Token 686: '????????' (ID: 85218)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.466605544090271
    2. 'x' → logprob: -2.4666056632995605
    3. '=' → logprob: -2.8416056632995605
    4. ' while' → logprob: -3.0916056632995605
    5. '<|end|>' → logprob: -3.2166056632995605
    6. 'y' → logprob: -3.2166056632995605
    7. '       ' → logprob: -3.5916056632995605
    8. '
' → logprob: -3.9666056632995605
    9. ')' → logprob: -4.2166056632995605
    10. ' x' → logprob: -4.7166056632995605

Token 687: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7897254824638367
    2. 'while' → logprob: -1.2897255420684814
    3. '=' → logprob: -2.2897255420684814
    4. '
' → logprob: -3.5397255420684814
    5. ' while' → logprob: -3.6647255420684814
    6. ':
' → logprob: -3.7897255420684814
    7. '           ' → logprob: -4.164725303649902
    8. ' =' → logprob: -4.289725303649902
    9. 'x' → logprob: -4.414725303649902
    10. '   ' → logprob: -4.789725303649902

Token 688: '??' (ID: 6961)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1329853534698486
    2. 'x' → logprob: -1.2579853534698486
    3. 'y' → logprob: -1.6329853534698486
    4. '=' → logprob: -2.5079853534698486
    5. '       ' → logprob: -3.8829853534698486
    6. ' while' → logprob: -4.0079851150512695
    7. ')' → logprob: -4.3829851150512695
    8. ' x' → logprob: -4.3829851150512695
    9. '<|end|>' → logprob: -4.3829851150512695
    10. ' =' → logprob: -4.6329851150512695

Token 689: ' """
' (ID: 7037)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3670352697372437
    2. 'while' → logprob: -1.3670352697372437
    3. ' x' → logprob: -1.9920352697372437
    4. ' while' → logprob: -2.492035388946533
    5. '       ' → logprob: -2.742035388946533
    6. '=' → logprob: -2.742035388946533
    7. '<|end|>' → logprob: -3.617035388946533
    8. ' =' → logprob: -3.742035388946533
    9. '	while' → logprob: -4.242035388946533
    10. '   ' → logprob: -4.367035388946533

Token 690: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.29678037762641907
    2. ' while' → logprob: -1.4217803478240967
    3. '       ' → logprob: -4.671780586242676
    4. '	while' → logprob: -5.296780586242676
    5. '   ' → logprob: -7.796780586242676
    6. 'x' → logprob: -7.921780586242676
    7. 'While' → logprob: -9.046780586242676
    8. '	' → logprob: -9.546780586242676
    9. '    ' → logprob: -10.046780586242676
    10. ' x' → logprob: -10.296780586242676

Token 691: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.10752983391284943
    2. ' while' → logprob: -2.357529878616333
    3. 'x' → logprob: -5.482529640197754
    4. '       ' → logprob: -6.607529640197754
    5. '	while' → logprob: -6.857529640197754
    6. ' x' → logprob: -8.232529640197754
    7. '   ' → logprob: -8.482529640197754
    8. '    ' → logprob: -9.732529640197754
    9. 'While' → logprob: -9.732529640197754
    10. ' ' → logprob: -10.232529640197754

Token 692: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01814994215965271
    2. ' x' → logprob: -4.0181498527526855
    3. '	x' → logprob: -17.018150329589844
    4. '(x' → logprob: -18.893150329589844
    5. ')x' → logprob: -20.268150329589844
    6. ' ' → logprob: -20.768150329589844
    7. '   ' → logprob: -21.143150329589844
    8. '{x' → logprob: -21.768150329589844
    9. '$x' → logprob: -21.768150329589844
    10. '>x' → logprob: -22.143150329589844

Token 693: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -8.959636033978313e-05
    2. '.' → logprob: -9.375089645385742
    3. '.Left' → logprob: -13.625089645385742
    4. '.le' → logprob: -13.875089645385742
    5. 'left' → logprob: -14.125089645385742
    6. ' .' → logprob: -14.125089645385742
    7. '.right' → logprob: -14.500089645385742
    8. '.parent' → logprob: -15.500089645385742
    9. '!=' → logprob: -15.875089645385742
    10. ' !=' → logprob: -16.250089645385742

Token 694: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.26984331011772156
    2. ' is' → logprob: -1.644843339920044
    3. '!=' → logprob: -3.144843339920044
    4. 'is' → logprob: -8.644843101501465
    5. '.' → logprob: -9.144843101501465
    6. ' ' → logprob: -10.144843101501465
    7. ':' → logprob: -11.769843101501465
    8. '.left' → logprob: -11.894843101501465
    9. '!' → logprob: -12.144843101501465
    10. '   ' → logprob: -12.144843101501465

Token 695: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.038042180240154266
    2. ' None' → logprob: -3.2880420684814453
    3. '_None' → logprob: -15.663042068481445
    4. 'No' → logprob: -16.038042068481445
    5. ' ' → logprob: -16.163042068481445
    6. '=None' → logprob: -16.538042068481445
    7. '(None' → logprob: -16.538042068481445
    8. 'x' → logprob: -16.788042068481445
    9. ' ' → logprob: -16.913042068481445
    10. '   ' → logprob: -17.413042068481445

Token 696: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35081902146339417
    2. ':
' → logprob: -1.2258189916610718
    3. '       ' → logprob: -7.100819110870361
    4. '   ' → logprob: -7.225819110870361
    5. ' :' → logprob: -8.100818634033203
    6. '=' → logprob: -8.975818634033203
    7. ' :
' → logprob: -9.100818634033203
    8. '           ' → logprob: -9.475818634033203
    9. '.' → logprob: -9.975818634033203
    10. 'x' → logprob: -10.475818634033203

Token 697: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.723709225654602
    2. ' x' → logprob: -1.348709225654602
    3. 'x' → logprob: -1.723709225654602
    4. '   ' → logprob: -2.8487091064453125
    5. '           ' → logprob: -4.2237091064453125
    6. ':' → logprob: -6.9737091064453125
    7. ':
' → logprob: -7.2237091064453125
    8. '=' → logprob: -7.7237091064453125
    9. '    ' → logprob: -7.9737091064453125
    10. '<|end|>' → logprob: -7.9737091064453125

Token 698: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.10028582066297531
    2. ' x' → logprob: -2.350285768508911
    3. '   ' → logprob: -9.850285530090332
    4. '	x' → logprob: -11.600285530090332
    5. '    ' → logprob: -11.975285530090332
    6. '       ' → logprob: -12.225285530090332
    7. ' ' → logprob: -12.725285530090332
    8. ' ' → logprob: -14.350285530090332
    9. '           ' → logprob: -14.350285530090332
    10. '
' → logprob: -14.600285530090332

Token 699: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. 'x' → logprob: -16.51104736328125
    4. '=x' → logprob: -17.26104736328125
    5. '.=' → logprob: -17.76104736328125
    6. '.' → logprob: -17.76104736328125
    7. '＝' → logprob: -18.38604736328125
    8. ' ' → logprob: -18.51104736328125
    9. '=
' → logprob: -18.63604736328125
    10. '=

' → logprob: -18.76104736328125

Token 700: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5759404897689819
    2. 'x' → logprob: -0.8259404897689819
    3. '	x' → logprob: -14.075940132141113
    4. ' ' → logprob: -15.200940132141113
    5. ')x' → logprob: -17.32594108581543
    6. ' ' → logprob: -18.32594108581543
    7. '(x' → logprob: -19.32594108581543
    8. '_x' → logprob: -19.45094108581543
    9. '"x' → logprob: -20.07594108581543
    10. '>x' → logprob: -20.07594108581543

Token 701: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -8.2994620242971e-06
    2. '.' → logprob: -11.750008583068848
    3. ' .' → logprob: -15.125008583068848
    4. 'left' → logprob: -16.12500762939453
    5. '.x' → logprob: -17.25000762939453
    6. '.Left' → logprob: -17.75000762939453
    7. '.right' → logprob: -19.62500762939453
    8. '.le' → logprob: -19.87500762939453
    9. '.parent' → logprob: -21.00000762939453
    10. '.l' → logprob: -21.50000762939453

Token 702: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 703: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 704: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011213571764528751
    2. ' return' → logprob: -4.511213779449463
    3. '
' → logprob: -10.261213302612305
    4. '       ' → logprob: -10.386213302612305
    5. '	return' → logprob: -10.386213302612305
    6. '   ' → logprob: -10.636213302612305
    7. 'x' → logprob: -10.886213302612305
    8. 'eturn' → logprob: -12.011213302612305
    9. ':return' → logprob: -12.011213302612305
    10. ' ' → logprob: -12.386213302612305

Token 705: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00861456897109747
    2. ' x' → logprob: -4.758614540100098
    3. '	x' → logprob: -19.008615493774414
    4. ' ' → logprob: -21.508615493774414
    5. ' ' → logprob: -23.133615493774414
    6. '(x' → logprob: -23.508615493774414
    7. '   ' → logprob: -24.133615493774414
    8. '{x' → logprob: -24.883615493774414
    9. '$x' → logprob: -24.883615493774414
    10. '"x' → logprob: -25.008615493774414

Token 706: '

' (ID: 279)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.43313947319984436
    2. 'y' → logprob: -1.808139443397522
    3. '.' → logprob: -2.3081395626068115
    4. '.parent' → logprob: -2.6831395626068115
    5. '<|end|>' → logprob: -5.183139324188232
    6. '.x' → logprob: -5.683139324188232
    7. '=' → logprob: -6.183139324188232
    8. ' y' → logprob: -6.433139324188232
    9. '
' → logprob: -6.558139324188232
    10. ' ' → logprob: -7.058139324188232

Token 707: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16627798974514008
    2. '.y' → logprob: -2.1662778854370117
    3. '.parent' → logprob: -3.9162778854370117
    4. 'y' → logprob: -4.416277885437012
    5. '<|end|>' → logprob: -5.791277885437012
    6. ' ' → logprob: -7.416277885437012
    7. '       ' → logprob: -7.416277885437012
    8. ')' → logprob: -7.541277885437012
    9. '.x' → logprob: -8.416277885437012
    10. '>' → logprob: -8.416277885437012

Token 708: ' def' (ID: 1056)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04955994710326195
    2. '.y' → logprob: -3.1745598316192627
    3. '.parent' → logprob: -5.424560070037842
    4. 'y' → logprob: -6.299560070037842
    5. '<|end|>' → logprob: -9.299559593200684
    6. '.x' → logprob: -10.424559593200684
    7. '>' → logprob: -10.674559593200684
    8. ')' → logprob: -10.924559593200684
    9. '=' → logprob: -10.924559593200684
    10. ' .' → logprob: -11.174559593200684

Token 709: ' get' (ID: 717)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2504905164241791
    2. ' .' → logprob: -2.250490427017212
    3. '.parent' → logprob: -3.125490427017212
    4. ' ' → logprob: -3.500490427017212
    5. '.height' → logprob: -5.000490665435791
    6. '_parent' → logprob: -5.250490665435791
    7. 'parent' → logprob: -5.625490665435791
    8. ':' → logprob: -5.625490665435791
    9. '.__' → logprob: -5.875490665435791
    10. 'height' → logprob: -5.875490665435791

Token 710: '_type' (ID: 3804)
  Prédit: '_height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.08248928934335709
    2. '_parent' → logprob: -2.707489252090454
    3. '_balance' → logprob: -4.957489490509033
    4. 'height' → logprob: -6.332489490509033
    5. 'Height' → logprob: -6.957489490509033
    6. '_' → logprob: -6.957489490509033
    7. '_key' → logprob: -7.832489490509033
    8. '_max' → logprob: -8.082489013671875
    9. '_size' → logprob: -8.332489013671875
    10. '_min' → logprob: -8.957489013671875

Token 711: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12777677178382874
    2. '(' → logprob: -2.127776861190796
    3. '(s' → logprob: -8.127777099609375
    4. 'self' → logprob: -8.752777099609375
    5. '_' → logprob: -9.377777099609375
    6. ' (' → logprob: -10.127777099609375
    7. '()' → logprob: -10.127777099609375
    8. '(cls' → logprob: -10.127777099609375
    9. 's' → logprob: -10.252777099609375
    10. 'of' → logprob: -10.377777099609375

Token 712: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0069579691626131535
    2. ')' → logprob: -5.2569580078125
    3. '):
' → logprob: -7.0069580078125
    4. ',' → logprob: -7.7569580078125
    5. 'self' → logprob: -8.8819580078125
    6. '():' → logprob: -9.2569580078125
    7. '(self' → logprob: -9.8819580078125
    8. '   ' → logprob: -10.5069580078125
    9. ' ):' → logprob: -10.7569580078125
    10. '(' → logprob: -11.2569580078125

Token 713: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6839529275894165
    2. '(' → logprob: -1.8089529275894165
    3. '(self' → logprob: -2.183952808380127
    4. '   ' → logprob: -2.683952808380127
    5. '():' → logprob: -2.808952808380127
    6. 'self' → logprob: -3.683952808380127
    7. '       ' → logprob: -3.683952808380127
    8. ' ()' → logprob: -4.308952808380127
    9. ':' → logprob: -4.808952808380127
    10. ' (' → logprob: -5.183952808380127

Token 714: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.674612820148468
    2. ' if' → logprob: -1.2996127605438232
    3. 'return' → logprob: -2.4246127605438232
    4. ''' → logprob: -3.0496127605438232
    5. '"' → logprob: -3.5496127605438232
    6. ' return' → logprob: -3.7996127605438232
    7. '   ' → logprob: -4.424612998962402
    8. 'self' → logprob: -5.049612998962402
    9. ''s' → logprob: -5.674612998962402
    10. '       ' → logprob: -6.174612998962402

Token 715: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20142073929309845
    2. ' self' → logprob: -1.701420783996582
    3. '   ' → logprob: -12.701420783996582
    4. '(self' → logprob: -12.951420783996582
    5. ' not' → logprob: -14.201420783996582
    6. ' ' → logprob: -14.451420783996582
    7. '	self' → logprob: -14.701420783996582
    8. 'not' → logprob: -15.451420783996582
    9. '  ' → logprob: -16.201419830322266
    10. '    ' → logprob: -16.576419830322266

Token 716: '.parent' (ID: 17454)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.5761160254478455
    2. '.parent' → logprob: -0.8261160254478455
    3. '.key' → logprob: -9.451115608215332
    4. '.' → logprob: -10.076115608215332
    5. '.right' → logprob: -10.076115608215332
    6. 'parent' → logprob: -11.951115608215332
    7. 'left' → logprob: -12.701115608215332
    8. '.root' → logprob: -13.701115608215332
    9. '.height' → logprob: -13.826115608215332
    10. ' .' → logprob: -13.951115608215332

Token 717: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.21649625897407532
    2. ' ==' → logprob: -1.716496229171753
    3. '==' → logprob: -4.216496467590332
    4. 'is' → logprob: -8.466496467590332
    5. '   ' → logprob: -12.466496467590332
    6. '	is' → logprob: -13.716496467590332
    7. ' =' → logprob: -13.966496467590332
    8. ' ' → logprob: -14.466496467590332
    9. '=None' → logprob: -14.466496467590332
    10. '=' → logprob: -14.591496467590332

Token 718: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.493430894101039e-05
    2. ' None' → logprob: -9.500075340270996
    3. 'self' → logprob: -16.62507438659668
    4. '=None' → logprob: -18.00007438659668
    5. '_None' → logprob: -19.00007438659668
    6. 'none' → logprob: -19.37507438659668
    7. '(None' → logprob: -19.37507438659668
    8. '   ' → logprob: -20.50007438659668
    9. '0' → logprob: -21.50007438659668
    10. 'N' → logprob: -21.62507438659668

Token 719: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6954393982887268
    2. ':
' → logprob: -0.6954393982887268
    3. ':return' → logprob: -6.695439338684082
    4. '       ' → logprob: -7.820439338684082
    5. ' and' → logprob: -8.445439338684082
    6. ' :' → logprob: -8.945439338684082
    7. '   ' → logprob: -8.945439338684082
    8. ' :
' → logprob: -9.070439338684082
    9. ' or' → logprob: -11.320439338684082
    10. '           ' → logprob: -11.695439338684082

Token 720: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01848960667848587
    2. '   ' → logprob: -5.518489837646484
    3. ' return' → logprob: -5.643489837646484
    4. ':' → logprob: -5.768489837646484
    5. ' None' → logprob: -6.393489837646484
    6. ' :' → logprob: -6.518489837646484
    7. '	' → logprob: -6.768489837646484
    8. 'return' → logprob: -7.268489837646484
    9. 'None' → logprob: -8.018489837646484
    10. '           ' → logprob: -8.143489837646484

Token 721: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.054998729377985
    2. ' return' → logprob: -2.9299986362457275
    3. '"' → logprob: -10.179998397827148
    4. ':return' → logprob: -10.679998397827148
    5. '       ' → logprob: -11.054998397827148
    6. '	return' → logprob: -11.304998397827148
    7. ''' → logprob: -11.679998397827148
    8. '   ' → logprob: -11.804998397827148
    9. 'eturn' → logprob: -12.804998397827148
    10. ' ' → logprob: -13.554998397827148

Token 722: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4147190749645233
    2. ''' → logprob: -1.1647191047668457
    3. ' "' → logprob: -3.7897191047668457
    4. ' '' → logprob: -5.539719104766846
    5. ''s' → logprob: -7.664719104766846
    6. '0' → logprob: -9.039718627929688
    7. ' ' → logprob: -9.164718627929688
    8. '   ' → logprob: -10.289718627929688
    9. '"type' → logprob: -10.414718627929688
    10. '"class' → logprob: -10.789718627929688

Token 723: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.02868419699370861
    2. 'Root' → logprob: -3.778684139251709
    3. ' root' → logprob: -5.653684139251709
    4. '根' → logprob: -7.403684139251709
    5. 'ROOT' → logprob: -7.528684139251709
    6. 'None' → logprob: -8.278684616088867
    7. 'r' → logprob: -9.028684616088867
    8. ''' → logprob: -9.153684616088867
    9. '_root' → logprob: -9.403684616088867
    10. ' Root' → logprob: -10.403684616088867

Token 724: ''
' (ID: 2207)
  Prédit: ''
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''
' → logprob: -0.31358861923217773
    2. ''' → logprob: -1.3135886192321777
    3. ''
' → logprob: -8.063589096069336
    4. 'node' → logprob: -11.813589096069336
    5. '\n' → logprob: -14.063589096069336
    6. ''

' → logprob: -14.188589096069336
    7. ''\' → logprob: -14.688589096069336
    8. 'root' → logprob: -14.938589096069336
    9. ')'
' → logprob: -14.938589096069336
    10. ' node' → logprob: -15.063589096069336

Token 725: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08362313359975815
    2. '       ' → logprob: -2.708623170852661
    3. '\n' → logprob: -5.208622932434082
    4. '<|end|>' → logprob: -5.958622932434082
    5. '    
' → logprob: -6.708622932434082
    6. '   ' → logprob: -6.958622932434082
    7. '        
' → logprob: -7.208622932434082
    8. '  
' → logprob: -7.208622932434082
    9. '' → logprob: -7.958622932434082
    10. '	' → logprob: -8.458622932434082

Token 726: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5632774233818054
    2. ' elif' → logprob: -1.0632774829864502
    3. 'elif' (adapté à ' elif') → logprob: -3.18827748298645
    4. ' if' → logprob: -3.31327748298645
    5. '   ' → logprob: -5.813277244567871
    6. 'if' → logprob: -5.813277244567871
    7. ' else' → logprob: -7.313277244567871
    8. ' ' → logprob: -8.313277244567871
    9. '	elif' → logprob: -8.313277244567871
    10. '    ' → logprob: -8.688277244567871

Token 727: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2519306540489197
    2. 'self' → logprob: -1.5019307136535645
    3. '	self' → logprob: -14.376930236816406
    4. '(self' → logprob: -14.501930236816406
    5. ' not' → logprob: -15.126930236816406
    6. ' ' → logprob: -16.126930236816406
    7. '   ' → logprob: -16.251930236816406
    8. ' ' → logprob: -17.626930236816406
    9. 'not' → logprob: -18.251930236816406
    10. '    ' → logprob: -18.626930236816406

Token 728: '.left' (ID: 15388)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.41798272728919983
    2. ' ==' → logprob: -1.7929826974868774
    3. '.left' → logprob: -1.7929826974868774
    4. '==' → logprob: -4.917982578277588
    5. '.' → logprob: -7.792982578277588
    6. 'parent' → logprob: -8.042983055114746
    7. '.right' → logprob: -8.292983055114746
    8. '.key' → logprob: -8.292983055114746
    9. ' is' → logprob: -9.667983055114746
    10. 'left' → logprob: -10.167983055114746

Token 729: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6264491081237793
    2. ' ==' → logprob: -0.8764491081237793
    3. ' is' → logprob: -3.5014491081237793
    4. ' !=' → logprob: -4.501449108123779
    5. '!=' → logprob: -4.876449108123779
    6. 'is' → logprob: -8.126449584960938
    7. ' ' → logprob: -10.501449584960938
    8. 'None' → logprob: -10.751449584960938
    9. '=' → logprob: -11.751449584960938
    10. ':' → logprob: -12.251449584960938

Token 730: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.684157026233152e-05
    2. ' None' → logprob: -9.875077247619629
    3. 'self' → logprob: -10.625077247619629
    4. 'none' → logprob: -14.750077247619629
    5. '   ' → logprob: -15.250077247619629
    6. '=None' → logprob: -16.500076293945312
    7. '(None' → logprob: -16.750076293945312
    8. '_None' → logprob: -17.125076293945312
    9. 'null' → logprob: -17.375076293945312
    10. 'not' → logprob: -17.375076293945312

Token 731: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05800854414701462
    2. 'and' → logprob: -2.9330084323883057
    3. ' or' → logprob: -6.683008670806885
    4. ':' → logprob: -7.183008670806885
    5. ':
' → logprob: -7.808008670806885
    6. '           ' → logprob: -7.933008670806885
    7. '       ' → logprob: -8.183008193969727
    8. '   ' → logprob: -10.808008193969727
    9. ' ' → logprob: -11.183008193969727
    10. '	and' → logprob: -12.058008193969727

Token 732: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2811974883079529
    2. ' self' → logprob: -1.4061975479125977
    3. '       ' → logprob: -10.531197547912598
    4. '   ' → logprob: -11.531197547912598
    5. ' ' → logprob: -12.656197547912598
    6. '	self' → logprob: -12.656197547912598
    7. '(self' → logprob: -13.406197547912598
    8. '           ' → logprob: -14.156197547912598
    9. '  ' → logprob: -14.656197547912598
    10. ' ' → logprob: -15.281197547912598

Token 733: '.right' (ID: 17627)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.02362150140106678
    2. '.right' → logprob: -3.7736215591430664
    3. ' right' → logprob: -8.023621559143066
    4. '.' → logprob: -10.523621559143066
    5. 'parent' → logprob: -11.523621559143066
    6. '	right' → logprob: -12.273621559143066
    7. '.parent' → logprob: -13.398621559143066
    8. '_right' → logprob: -13.523621559143066
    9. '[right' → logprob: -13.898621559143066
    10. ',right' → logprob: -14.523621559143066

Token 734: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.016039295122027397
    2. ' ==' → logprob: -4.1410393714904785
    3. 'None' → logprob: -12.89103889465332
    4. ' is' → logprob: -14.51603889465332
    5. '=None' → logprob: -14.51603889465332
    6. '!=' → logprob: -14.89103889465332
    7. '=' → logprob: -15.39103889465332
    8. '==
' → logprob: -15.64103889465332
    9. ')==' → logprob: -15.76603889465332
    10. ' ' → logprob: -16.01603889465332

Token 735: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0005538671393878758
    2. ' None' → logprob: -7.500554084777832
    3. '   ' → logprob: -15.250554084777832
    4. '_None' → logprob: -15.625554084777832
    5. ' ' → logprob: -16.125553131103516
    6. 'No' → logprob: -16.375553131103516
    7. 'N' → logprob: -16.500553131103516
    8. '=None' → logprob: -16.625553131103516
    9. '(None' → logprob: -16.750553131103516
    10. '  ' → logprob: -16.750553131103516

Token 736: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4764351546764374
    2. ':
' → logprob: -0.9764351844787598
    3. '       ' → logprob: -7.22643518447876
    4. '           ' → logprob: -7.22643518447876
    5. ':return' → logprob: -7.85143518447876
    6. '   ' → logprob: -8.351434707641602
    7. ' and' → logprob: -9.101434707641602
    8. ' :' → logprob: -9.476434707641602
    9. ' :
' → logprob: -10.101434707641602
    10. ' or' → logprob: -11.476434707641602

Token 737: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6049467325210571
    2. '       ' → logprob: -0.8549467325210571
    3. '   ' → logprob: -4.604946613311768
    4. 'return' → logprob: -5.229946613311768
    5. ' return' → logprob: -5.229946613311768
    6. ':' → logprob: -5.729946613311768
    7. ':return' → logprob: -6.354946613311768
    8. ':
' → logprob: -6.979946613311768
    9. '	       ' → logprob: -7.604946613311768
    10. '	return' → logprob: -7.729946613311768

Token 738: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48567095398902893
    2. 'return' (adapté à ' return') → logprob: -0.9856709241867065
    3. '           ' → logprob: -4.985671043395996
    4. '       ' → logprob: -5.860671043395996
    5. '   ' → logprob: -6.985671043395996
    6. '	return' → logprob: -7.110671043395996
    7. ':return' → logprob: -10.485671043395996
    8. ' ' → logprob: -10.610671043395996
    9. '	       ' → logprob: -10.735671043395996
    10. '	   ' → logprob: -11.610671043395996

Token 739: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.055045440793037415
    2. ' '' → logprob: -2.9300453662872314
    3. '"' → logprob: -9.930045127868652
    4. '   ' → logprob: -10.180045127868652
    5. ''s' → logprob: -10.555045127868652
    6. '	' → logprob: -11.430045127868652
    7. ' ' → logprob: -11.430045127868652
    8. ' leaf' → logprob: -11.930045127868652
    9. ''in' → logprob: -13.055045127868652
    10. ''t' → logprob: -13.180045127868652

Token 740: 'leaf' (ID: 50921)
  Prédit: 'leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaf' → logprob: -0.030856484547257423
    2. ''' → logprob: -3.5308563709259033
    3. ' leaf' → logprob: -7.030856609344482
    4. 'le' → logprob: -8.655856132507324
    5. 'child' → logprob: -11.030856132507324
    6. ''l' → logprob: -12.030856132507324
    7. '_leaf' → logprob: -12.030856132507324
    8. 'lea' → logprob: -12.655856132507324
    9. 'leave' → logprob: -12.780856132507324
    10. ' ' → logprob: -13.280856132507324

Token 741: ''
' (ID: 2207)
  Prédit: ''
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''
' → logprob: -0.3132728636264801
    2. ''' → logprob: -1.3132728338241577
    3. ''
' → logprob: -11.438272476196289
    4. ''

' → logprob: -16.68827247619629
    5. '"' → logprob: -17.18827247619629
    6. '"
' → logprob: -17.56327247619629
    7. ''s' → logprob: -17.68827247619629
    8. ''t' → logprob: -17.68827247619629
    9. ''''
' → logprob: -17.93827247619629
    10. '''
' → logprob: -17.93827247619629

Token 742: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016142288222908974
    2. '   ' → logprob: -4.26614236831665
    3. '           ' → logprob: -6.76614236831665
    4. '
' → logprob: -8.516141891479492
    5. ' else' → logprob: -8.516141891479492
    6. '	' → logprob: -8.891141891479492
    7. ':
' → logprob: -9.891141891479492
    8. ' ' → logprob: -10.016141891479492
    9. '               ' → logprob: -10.016141891479492
    10. '  ' → logprob: -10.891141891479492

Token 743: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4404337406158447
    2. '       ' → logprob: -1.6904337406158447
    3. 'else' (adapté à ' else') → logprob: -1.9404337406158447
    4. '   ' → logprob: -4.690433502197266
    5. ' elif' → logprob: -4.690433502197266
    6. 'elif' → logprob: -4.690433502197266
    7. '	else' → logprob: -8.065433502197266
    8. ' ' → logprob: -9.190433502197266
    9. '	elif' → logprob: -9.315433502197266
    10. '	' → logprob: -10.315433502197266

Token 744: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09373468905687332
    2. ':' → logprob: -3.4687347412109375
    3. '   ' → logprob: -4.0937347412109375
    4. '       ' → logprob: -4.2187347412109375
    5. ' if' → logprob: -4.2187347412109375
    6. '           ' → logprob: -4.7187347412109375
    7. ' :
' → logprob: -6.3437347412109375
    8. 'if' → logprob: -7.0937347412109375
    9. ':return' → logprob: -8.093734741210938
    10. ' return' → logprob: -9.093734741210938

Token 745: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2730877697467804
    2. ' return' → logprob: -2.023087739944458
    3. '           ' → logprob: -2.898087739944458
    4. 'return' → logprob: -3.148087739944458
    5. '   ' → logprob: -5.023087978363037
    6. '	return' → logprob: -7.273087978363037
    7. ' if' → logprob: -7.773087978363037
    8. ' ' → logprob: -8.148087501525879
    9. '	   ' → logprob: -8.773087501525879
    10. '	       ' → logprob: -8.898087501525879

Token 746: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004154379945248365
    2. ' return' → logprob: -5.504154205322266
    3. '   ' → logprob: -9.879154205322266
    4. '	return' → logprob: -11.004154205322266
    5. '       ' → logprob: -12.129154205322266
    6. '           ' → logprob: -13.629154205322266
    7. ':return' → logprob: -13.629154205322266
    8. '{return' → logprob: -16.379154205322266
    9. ' ' → logprob: -16.379154205322266
    10. 'eturn' → logprob: -17.004154205322266

Token 747: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.502181887626648
    2. ' '' → logprob: -1.252181887626648
    3. ''in' → logprob: -2.3771820068359375
    4. ''s' → logprob: -4.5021820068359375
    5. ''inter' → logprob: -6.3771820068359375
    6. ''an' → logprob: -6.8771820068359375
    7. ''ins' → logprob: -6.8771820068359375
    8. ''int' → logprob: -7.6271820068359375
    9. ''any' → logprob: -8.627182006835938
    10. ''ind' → logprob: -9.002182006835938

Token 748: 'internal' (ID: 18891)
  Prédit: 'internal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'internal' → logprob: -0.15404585003852844
    2. 'inner' → logprob: -2.279045820236206
    3. ' internal' → logprob: -4.154046058654785
    4. 'node' → logprob: -4.279046058654785
    5. 'inter' → logprob: -4.779046058654785
    6. ' inner' → logprob: -6.904046058654785
    7. ''' → logprob: -7.404046058654785
    8. 'branch' → logprob: -7.904046058654785
    9. ' node' → logprob: -8.779046058654785
    10. 'intern' → logprob: -9.654046058654785

Token 749: ' node' (ID: 4596)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -8.304016228066757e-05
    2. ''
' → logprob: -10.500082969665527
    3. '_node' → logprob: -10.625082969665527
    4. ' '' → logprob: -11.000082969665527
    5. 'node' → logprob: -11.750082969665527
    6. '"' → logprob: -13.125082969665527
    7. ' node' → logprob: -13.125082969665527
    8. ''''' → logprob: -14.750082969665527
    9. '-node' → logprob: -14.875082969665527
    10. ''s' → logprob: -15.625082969665527

Token 750: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -4.251091377227567e-05
    2. ''
' → logprob: -10.375042915344238
    3. ' '' → logprob: -11.750042915344238
    4. ''''' → logprob: -14.125042915344238
    5. ')'' → logprob: -14.125042915344238
    6. '"' → logprob: -14.375042915344238
    7. '`' → logprob: -14.875042915344238
    8. '\n' → logprob: -15.125042915344238
    9. '```' → logprob: -15.375042915344238
    10. '}'' → logprob: -16.000041961669922

Token 751: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014871375635266304
    2. '.parent' → logprob: -4.764871597290039
    3. '.y' → logprob: -5.139871597290039
    4. 'y' → logprob: -8.514871597290039
    5. '=' → logprob: -9.639871597290039
    6. '.
' → logprob: -10.514871597290039
    7. '.x' → logprob: -10.639871597290039
    8. '[' → logprob: -11.389871597290039
    9. ' ' → logprob: -11.764871597290039
    10. '>' → logprob: -11.889871597290039

Token 752: ' def' (ID: 1056)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03239407762885094
    2. '.y' → logprob: -4.157393932342529
    3. '.parent' → logprob: -4.282393932342529
    4. 'y' → logprob: -6.157393932342529
    5. '=' → logprob: -9.282394409179688
    6. '>' → logprob: -10.157394409179688
    7. '.x' → logprob: -10.407394409179688
    8. 'parent' → logprob: -10.782394409179688
    9. '.right' → logprob: -11.157394409179688
    10. '[' → logprob: -11.282394409179688

Token 753: ' get' (ID: 717)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0399295836687088
    2. 'str' → logprob: -4.164929389953613
    3. '_str' → logprob: -5.289929389953613
    4. ' __' → logprob: -5.539929389953613
    5. 'repr' → logprob: -5.664929389953613
    6. 'is' → logprob: -5.914929389953613
    7. '_repr' → logprob: -6.289929389953613
    8. 'get' → logprob: -6.914929389953613
    9. '_height' → logprob: -6.914929389953613
    10. '_is' → logprob: -6.914929389953613

Token 754: '_depth' (ID: 44220)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.6576351523399353
    2. '_height' → logprob: -0.9076351523399353
    3. '_balance' → logprob: -4.15763521194458
    4. '_parent' → logprob: -4.28263521194458
    5. 'height' → logprob: -4.53263521194458
    6. '_size' → logprob: -5.03263521194458
    7. '_depth' → logprob: -5.03263521194458
    8. '_children' → logprob: -5.15763521194458
    9. 'type' → logprob: -5.78263521194458
    10. '_sub' → logprob: -6.40763521194458

Token 755: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009856902994215488
    2. '(' → logprob: -4.634856700897217
    3. 'self' → logprob: -9.759857177734375
    4. ' (' → logprob: -11.009857177734375
    5. '(s' → logprob: -11.634857177734375
    6. '(
' → logprob: -12.009857177734375
    7. 's' → logprob: -12.509857177734375
    8. '   ' → logprob: -12.884857177734375
    9. 'def' → logprob: -13.634857177734375
    10. '(cls' → logprob: -13.759857177734375

Token 756: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.668100118637085
    2. ')' → logprob: -1.293100118637085
    3. 'self' → logprob: -1.793100118637085
    4. '(' → logprob: -3.793100118637085
    5. '):
' → logprob: -5.043100357055664
    6. ',' → logprob: -5.293100357055664
    7. '):' → logprob: -5.418100357055664
    8. ')(' → logprob: -5.668100357055664
    9. '   ' → logprob: -6.543100357055664
    10. 'def' → logprob: -6.918100357055664

Token 757: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22579428553581238
    2. '   ' → logprob: -1.8507943153381348
    3. '    ' → logprob: -4.225794315338135
    4. '1' → logprob: -4.350794315338135
    5. '        ' → logprob: -5.225794315338135
    6. '0' → logprob: -5.350794315338135
    7. '(' → logprob: -6.475794315338135
    8. ' self' → logprob: -6.725794315338135
    9. ' ' → logprob: -6.975794315338135
    10. '     ' → logprob: -7.225794315338135

Token 758: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.48680350184440613
    2. ' if' → logprob: -0.9868035316467285
    3. 'depth' → logprob: -5.1118035316467285
    4. '   ' → logprob: -6.1118035316467285
    5. 'parent' → logprob: -6.2368035316467285
    6. '1' → logprob: -6.7368035316467285
    7. ' depth' → logprob: -7.7368035316467285
    8. '0' → logprob: -7.8618035316467285
    9. 'self' → logprob: -9.23680305480957
    10. ' parent' → logprob: -9.23680305480957

Token 759: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031797364354133606
    2. ' self' → logprob: -5.753179550170898
    3. '   ' → logprob: -13.253179550170898
    4. '       ' → logprob: -16.0031795501709
    5. '	self' → logprob: -16.6281795501709
    6. '(self' → logprob: -17.1281795501709
    7. '    ' → logprob: -17.8781795501709
    8. ' ' → logprob: -18.1281795501709
    9. '  ' → logprob: -18.1281795501709
    10. '     ' → logprob: -19.6281795501709

Token 760: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0001596771035110578
    2. 'parent' → logprob: -8.75015926361084
    3. ' parent' → logprob: -14.50015926361084
    4. '.' → logprob: -15.37515926361084
    5. '	parent' → logprob: -15.50015926361084
    6. '_parent' → logprob: -16.375160217285156
    7. ' ==' → logprob: -17.125160217285156
    8. ' .' → logprob: -17.500160217285156
    9. '   ' → logprob: -17.625160217285156
    10. '==' → logprob: -17.750160217285156

Token 761: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12841850519180298
    2. '==' → logprob: -2.503418445587158
    3. ' is' → logprob: -3.253418445587158
    4. 'is' → logprob: -10.253418922424316
    5. ' None' → logprob: -11.128418922424316
    6. ' ' → logprob: -12.253418922424316
    7. 'None' → logprob: -12.503418922424316
    8. '()==' → logprob: -12.628418922424316
    9. '=None' → logprob: -13.003418922424316
    10. '   ' → logprob: -14.503418922424316

Token 762: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.02324547804892063
    2. ' None' → logprob: -3.7732455730438232
    3. '_None' → logprob: -18.273244857788086
    4. 'none' → logprob: -19.523244857788086
    5. '(None' → logprob: -19.773244857788086
    6. '=None' → logprob: -20.023244857788086
    7. '   ' → logprob: -20.398244857788086
    8. 'No' → logprob: -20.398244857788086
    9. '.None' → logprob: -21.148244857788086
    10. ' ' → logprob: -22.148244857788086

Token 763: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.190709188580513
    2. ':' → logprob: -2.315709114074707
    3. '           ' → logprob: -3.065709114074707
    4. '       ' → logprob: -4.440709114074707
    5. ':return' → logprob: -4.440709114074707
    6. '   ' → logprob: -5.940709114074707
    7. 'return' → logprob: -6.815709114074707
    8. ' return' → logprob: -8.440709114074707
    9. '():
' → logprob: -8.690709114074707
    10. '(None' → logprob: -9.315709114074707

Token 764: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03682244196534157
    2. ' return' → logprob: -4.286822319030762
    3. 'return' → logprob: -4.786822319030762
    4. '           ' → logprob: -5.536822319030762
    5. '	' → logprob: -5.911822319030762
    6. '	return' → logprob: -6.036822319030762
    7. '   ' → logprob: -6.161822319030762
    8. '	   ' → logprob: -6.536822319030762
    9. ' ' → logprob: -7.161822319030762
    10. '	       ' → logprob: -8.661822319030762

Token 765: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029929598793387413
    2. 'return' (adapté à ' return') → logprob: -3.5299296379089355
    3. ' return' → logprob: -9.154929161071777
    4. ' ' → logprob: -10.029929161071777
    5. '       ' → logprob: -10.904929161071777
    6. '           ' → logprob: -11.654929161071777
    7. '   ' → logprob: -13.654929161071777
    8. '1' → logprob: -14.654929161071777
    9. '	return' → logprob: -14.779929161071777
    10. ':return' → logprob: -15.904929161071777

Token 766: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.126171112060547
    4. ' ' → logprob: -18.751171112060547
    5. '       ' → logprob: -19.376171112060547
    6. '  ' → logprob: -20.251171112060547
    7. '０' → logprob: -20.626171112060547
    8. '	' → logprob: -20.626171112060547
    9. '1' → logprob: -20.751171112060547
    10. '۰' → logprob: -20.751171112060547

Token 767: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -17.250017166137695
    4. 'self' → logprob: -17.500017166137695
    5. '   ' → logprob: -18.750017166137695
    6. ''' → logprob: -19.000017166137695
    7. '-' → logprob: -19.125017166137695
    8. '０' → logprob: -19.500017166137695
    9. 'None' → logprob: -19.500017166137695
    10. '"' → logprob: -20.000017166137695

Token 768: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3251556158065796
    2. '       ' → logprob: -1.3251556158065796
    3. '<|end|>' → logprob: -5.825155735015869
    4. '   ' → logprob: -6.075155735015869
    5. '	' → logprob: -6.700155735015869
    6. '\n' → logprob: -7.075155735015869
    7. '  
' → logprob: -7.325155735015869
    8. '' → logprob: -7.700155735015869
    9. 'return' → logprob: -7.825155735015869
    10. '        
' → logprob: -7.950155735015869

Token 769: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5798970460891724
    2. '       ' → logprob: -0.8298970460891724
    3. '   ' → logprob: -6.704896926879883
    4. '	' → logprob: -6.954896926879883
    5. '
' → logprob: -7.954896926879883
    6. '        
' → logprob: -8.579896926879883
    7. '           ' → logprob: -8.579896926879883
    8. '	return' → logprob: -9.079896926879883
    9. ' 
' → logprob: -9.329896926879883
    10. '    
' → logprob: -9.329896926879883

Token 770: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2236310243606567
    2. '       ' → logprob: -1.4736310243606567
    3. '.parent' → logprob: -1.4736310243606567
    4. '
' → logprob: -1.8486310243606567
    5. 'return' → logprob: -3.598630905151367
    6. '.return' → logprob: -4.598630905151367
    7. '	' → logprob: -4.848630905151367
    8. ' return' → logprob: -4.973630905151367
    9. '	return' → logprob: -5.223630905151367
    10. ' else' → logprob: -5.473630905151367

Token 771: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6231980323791504
    2. ':' → logprob: -1.9981980323791504
    3. ' return' → logprob: -2.1231980323791504
    4. '       ' → logprob: -2.6231980323791504
    5. ' :
' → logprob: -3.1231980323791504
    6. '           ' → logprob: -3.3731980323791504
    7. '   ' → logprob: -3.7481980323791504
    8. ':return' → logprob: -3.9981980323791504
    9. ' :' → logprob: -5.37319803237915
    10. 'return' → logprob: -5.49819803237915

Token 772: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1960168033838272
    2. 'return' → logprob: -1.821016788482666
    3. '           ' → logprob: -4.321016788482666
    4. '       ' → logprob: -5.946016788482666
    5. '	return' → logprob: -9.321017265319824
    6. ':return' → logprob: -9.696017265319824
    7. '   ' → logprob: -10.196017265319824
    8. '	       ' → logprob: -11.071017265319824
    9. 'eturn' → logprob: -11.821017265319824
    10. '{return' → logprob: -12.321017265319824

Token 773: ' depth' (ID: 13636)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01820741780102253
    2. ' return' → logprob: -4.018207550048828
    3. '       ' → logprob: -10.143207550048828
    4. '           ' → logprob: -11.268207550048828
    5. '1' → logprob: -12.768207550048828
    6. '   ' → logprob: -13.893207550048828
    7. ':return' → logprob: -14.893207550048828
    8. '0' → logprob: -15.143207550048828
    9. '	return' → logprob: -15.393207550048828
    10. 'self' → logprob: -15.518207550048828

Token 774: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27658993005752563
    2. ' =' → logprob: -2.276589870452881
    3. '.parent' → logprob: -2.526589870452881
    4. '=' → logprob: -2.901589870452881
    5. '.get' → logprob: -6.026589870452881
    6. ' .' → logprob: -7.401589870452881
    7. ' +' → logprob: -7.651589870452881
    8. '+' → logprob: -9.151590347290039
    9. '.=' → logprob: -9.401590347290039
    10. '   ' → logprob: -9.776590347290039

Token 775: ' ' (ID: 220)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20172682404518127
    2. 'self' → logprob: -1.7017267942428589
    3. '1' → logprob: -8.451726913452148
    4. '0' → logprob: -9.951726913452148
    5. ' ' → logprob: -10.576726913452148
    6. '	self' → logprob: -11.826726913452148
    7. '   ' → logprob: -12.201726913452148
    8. ' ' → logprob: -12.451726913452148
    9. '       ' → logprob: -13.201726913452148
    10. 's' → logprob: -13.576726913452148

Token 776: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002985309576615691
    2. '1' → logprob: -5.87798547744751
    3. ' self' → logprob: -8.627985000610352
    4. ' ' → logprob: -14.752985000610352
    5. '0' → logprob: -15.127985000610352
    6. '	self' → logprob: -15.627985000610352
    7. '(self' → logprob: -16.00298500061035
    8. 's' → logprob: -16.25298500061035
    9. '           ' → logprob: -16.25298500061035
    10. '
' → logprob: -16.50298500061035

Token 777: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5721834301948547
    2. ' +' → logprob: -1.82218337059021
    3. '
' → logprob: -2.07218337059021
    4. '=' → logprob: -2.57218337059021
    5. '.parent' → logprob: -3.69718337059021
    6. 'parent' → logprob: -4.197183609008789
    7. '<|end|>' → logprob: -5.197183609008789
    8. ' =' → logprob: -5.572183609008789
    9. '       ' → logprob: -5.947183609008789
    10. '	' → logprob: -6.322183609008789

Token 778: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13019147515296936
    2. '+' → logprob: -2.7551915645599365
    3. ' +' → logprob: -4.005191326141357
    4. '       ' → logprob: -4.505191326141357
    5. 'parent' → logprob: -5.380191326141357
    6. '=' → logprob: -5.630191326141357
    7. '           ' → logprob: -5.630191326141357
    8. '    
' → logprob: -6.505191326141357
    9. '   ' → logprob: -6.505191326141357
    10. '    ' → logprob: -6.505191326141357

Token 779: ' t' (ID: 260)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.23147574067115784
    2. 'y' → logprob: -1.6064757108688354
    3. '    ' → logprob: -6.856475830078125
    4. '=' → logprob: -6.856475830078125
    5. ' =' → logprob: -6.981475830078125
    6. 'x' → logprob: -7.106475830078125
    7. ' x' → logprob: -7.731475830078125
    8. ' while' → logprob: -7.731475830078125
    9. '        ' → logprob: -8.606475830078125
    10. '   ' → logprob: -8.731475830078125

Token 780: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6335986852645874
    2. '=' → logprob: -0.7585986852645874
    3. '=y' → logprob: -8.008598327636719
    4. '.parent' → logprob: -8.258598327636719
    5. 'y' → logprob: -9.133598327636719
    6. 'parent' → logprob: -9.508598327636719
    7. ',' → logprob: -10.258598327636719
    8. 'emp' → logprob: -10.758598327636719
    9. '    ' → logprob: -10.883598327636719
    10. '.y' → logprob: -11.258598327636719

Token 781: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005261510610580444
    2. ' self' → logprob: -5.255261421203613
    3. '   ' → logprob: -11.005261421203613
    4. '       ' → logprob: -12.630261421203613
    5. '           ' → logprob: -12.880261421203613
    6. '    ' → logprob: -13.755261421203613
    7. '	self' → logprob: -13.755261421203613
    8. ' ' → logprob: -13.880261421203613
    9. 's' → logprob: -14.630261421203613
    10. '  ' → logprob: -14.630261421203613

Token 782: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00038539018714800477
    2. 'parent' → logprob: -7.875385284423828
    3. '.' → logprob: -13.125385284423828
    4. '_parent' → logprob: -13.625385284423828
    5. '	parent' → logprob: -13.875385284423828
    6. '.Parent' → logprob: -15.375385284423828
    7. '
' → logprob: -15.375385284423828
    8. ' parent' → logprob: -16.125385284423828
    9. ' .' → logprob: -16.375385284423828
    10. '_PARENT' → logprob: -16.375385284423828

Token 783: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13262076675891876
    2. '.parent' → logprob: -2.5076208114624023
    3. 't' → logprob: -4.507620811462402
    4. 'parent' → logprob: -4.757620811462402
    5. 'while' → logprob: -5.007620811462402
    6. '<|end|>' → logprob: -5.007620811462402
    7. '           ' → logprob: -5.882620811462402
    8. '
' → logprob: -6.757620811462402
    9. '<|end|>' → logprob: -7.382620811462402
    10. '       ' → logprob: -7.632620811462402

Token 784: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19209685921669006
    2. '           ' → logprob: -2.9420969486236572
    3. '<|end|>' → logprob: -3.1920969486236572
    4. '\n' → logprob: -3.9420969486236572
    5. ' 
' → logprob: -4.942096710205078
    6. '' → logprob: -5.067096710205078
    7. '            
' → logprob: -5.192096710205078
    8. 't' → logprob: -5.317096710205078
    9. '  
' → logprob: -5.442096710205078
    10. '       ' → logprob: -5.442096710205078

Token 785: ' while' (ID: 2049)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4224429726600647
    2. 't' → logprob: -1.92244291305542
    3. '
' → logprob: -2.17244291305542
    4. '=' → logprob: -3.17244291305542
    5. '<|end|>' → logprob: -3.92244291305542
    6. ' y' → logprob: -5.42244291305542
    7. 'while' (adapté à ' while') → logprob: -5.42244291305542
    8. 'x' → logprob: -5.79744291305542
    9. 'w' → logprob: -6.17244291305542
    10. ' =' → logprob: -6.92244291305542

Token 786: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5759431719779968
    2. ' t' → logprob: -0.8259431719779968
    3. '	t' → logprob: -13.075942993164062
    4. '(t' → logprob: -14.825942993164062
    5. ' ' → logprob: -14.950942993164062
    6. 'True' → logprob: -15.075942993164062
    7. 'None' → logprob: -15.950942993164062
    8. ' ' → logprob: -16.200942993164062
    9. ' т' → logprob: -16.700942993164062
    10. ' True' → logprob: -17.075942993164062

Token 787: '.parent' (ID: 17454)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.10596034675836563
    2. '!=' → logprob: -2.3559603691101074
    3. ' is' → logprob: -5.605960369110107
    4. '.parent' → logprob: -6.480960369110107
    5. '.' → logprob: -8.73095989227295
    6. ':' → logprob: -9.60595989227295
    7. '=' → logprob: -9.60595989227295
    8. ' not' → logprob: -9.85595989227295
    9. 'parent' → logprob: -10.23095989227295
    10. ' ' → logprob: -10.73095989227295

Token 788: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5815680623054504
    2. '!=' → logprob: -0.8315680623054504
    3. ' is' → logprob: -5.206568241119385
    4. '()!=' → logprob: -9.706567764282227
    5. 'is' → logprob: -10.331567764282227
    6. ')!=' → logprob: -10.956567764282227
    7. '!==' → logprob: -12.581567764282227
    8. '!' → logprob: -12.831567764282227
    9. '!=(' → logprob: -13.331567764282227
    10. ' not' → logprob: -13.456567764282227

Token 789: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011047935113310814
    2. ' None' → logprob: -4.511047840118408
    3. '=None' → logprob: -17.01104736328125
    4. 't' → logprob: -17.26104736328125
    5. '_None' → logprob: -17.51104736328125
    6. '(None' → logprob: -18.26104736328125
    7. 'none' → logprob: -18.38604736328125
    8. 'N' → logprob: -18.51104736328125
    9. ' ' → logprob: -18.76104736328125
    10. 'No' → logprob: -18.88604736328125

Token 790: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.44450169801712036
    2. ':' → logprob: -1.0695016384124756
    3. '               ' → logprob: -4.319501876831055
    4. '):
' → logprob: -7.319501876831055
    5. '<|end|>' → logprob: -7.819501876831055
    6. ' :
' → logprob: -8.069501876831055
    7. '           ' → logprob: -8.569501876831055
    8. ' :' → logprob: -9.069501876831055
    9. ' and' → logprob: -9.444501876831055
    10. '=' → logprob: -9.694501876831055

Token 791: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.057344306260347366
    2. ':
' → logprob: -3.4323441982269287
    3. ':' → logprob: -4.307344436645508
    4. '           ' → logprob: -5.807344436645508
    5. ' :' → logprob: -6.182344436645508
    6. ' :
' → logprob: -6.807344436645508
    7. '              ' → logprob: -7.182344436645508
    8. ' =' → logprob: -7.682344436645508
    9. '            ' → logprob: -7.932344436645508
    10. '<|end|>' → logprob: -8.182344436645508

Token 792: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.19696106016635895
    2. 't' (adapté à ' t') → logprob: -1.9469610452651978
    3. '	t' → logprob: -3.5719611644744873
    4. '               ' → logprob: -5.446960926055908
    5. ' ' → logprob: -6.696960926055908
    6. '                ' → logprob: -6.946960926055908
    7. '			' → logprob: -8.071961402893066
    8. '            ' → logprob: -8.196961402893066
    9. '(t' → logprob: -8.821961402893066
    10. ' 
' → logprob: -9.321961402893066

Token 793: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687410950660706
    2. ' =' → logprob: -1.1368740797042847
    3. '=t' → logprob: -13.261874198913574
    4. '＝' → logprob: -15.136874198913574
    5. 't' → logprob: -15.261874198913574
    6. '.' → logprob: -15.386874198913574
    7. '	' → logprob: -15.511874198913574
    8. ' ' → logprob: -15.886874198913574
    9. '.=' → logprob: -16.011873245239258
    10. 'parent' → logprob: -16.761873245239258

Token 794: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004079470410943031
    2. ' t' → logprob: -5.504079341888428
    3. '	t' → logprob: -13.879079818725586
    4. '`t' → logprob: -16.129079818725586
    5. ' ' → logprob: -17.129079818725586
    6. ' ' → logprob: -17.129079818725586
    7. ')t' → logprob: -18.004079818725586
    8. '_t' → logprob: -18.754079818725586
    9. '   ' → logprob: -19.129079818725586
    10. '(t' → logprob: -19.504079818725586

Token 795: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.31327739357948303
    2. 'parent' → logprob: -1.3132773637771606
    3. ' parent' → logprob: -12.313277244567871
    4. '_parent' → logprob: -12.563277244567871
    5. '.' → logprob: -12.688277244567871
    6. '	parent' → logprob: -12.938277244567871
    7. '.Parent' → logprob: -13.938277244567871
    8. 't' → logprob: -14.188277244567871
    9. 'Parent' → logprob: -15.438277244567871
    10. '[parent' → logprob: -16.063278198242188

Token 796: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05512237921357155
    2. '<|end|>' → logprob: -4.055122375488281
    3. '
' → logprob: -4.430122375488281
    4. '                ' → logprob: -4.805122375488281
    5. '           ' → logprob: -5.555122375488281
    6. 'depth' → logprob: -6.180122375488281
    7. '			' → logprob: -6.305122375488281
    8. '<|end|>' → logprob: -6.930122375488281
    9. ' ' → logprob: -7.430122375488281
    10. ')' → logprob: -7.430122375488281

Token 797: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2102218121290207
    2. '                ' → logprob: -2.585221767425537
    3. '<|end|>' → logprob: -2.710221767425537
    4. '           ' → logprob: -4.210221767425537
    5. '            ' → logprob: -4.960221767425537
    6. ' ' → logprob: -5.335221767425537
    7. '              ' → logprob: -5.960221767425537
    8. '=' → logprob: -6.085221767425537
    9. '                
' → logprob: -6.085221767425537
    10. '			' → logprob: -6.460221767425537

Token 798: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' (adapté à ' depth') → logprob: -0.3132622241973877
    2. ' depth' → logprob: -1.3132622241973877
    3. '(depth' → logprob: -15.063261985778809
    4. '_depth' → logprob: -16.063262939453125
    5. '                ' → logprob: -16.813262939453125
    6. '.depth' → logprob: -17.188262939453125
    7. ' ' → logprob: -17.563262939453125
    8. '               ' → logprob: -17.813262939453125
    9. ' ' → logprob: -18.188262939453125
    10. ' depths' → logprob: -18.313262939453125

Token 799: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.388200968503952
    2. ' +=' → logprob: -1.1382009983062744
    3. '=' → logprob: -6.638200759887695
    4. '+' → logprob: -11.513200759887695
    5. ' =' → logprob: -11.638200759887695
    6. '+='' → logprob: -15.013200759887695
    7. ' ' → logprob: -15.888200759887695
    8. ']+=' → logprob: -15.888200759887695
    9. ' +' → logprob: -16.013200759887695
    10. '+="' → logprob: -16.388200759887695

Token 800: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008614926598966122
    2. ' ' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.508614540100098
    4. '   ' → logprob: -17.133615493774414
    5. '１' → logprob: -17.758615493774414
    6. '           ' → logprob: -17.758615493774414
    7. '    ' → logprob: -18.008615493774414
    8. '               ' → logprob: -19.258615493774414
    9. '            ' → logprob: -19.633615493774414
    10. '
' → logprob: -19.883615493774414

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.625001907348633
    4. '
' → logprob: -20.625001907348633
    5. '１' → logprob: -21.000001907348633
    6. '```' → logprob: -21.750001907348633
    7. '  ' → logprob: -22.375001907348633
    8. '۱' → logprob: -22.750001907348633
    9. '       ' → logprob: -23.125001907348633
    10. '' → logprob: -23.375001907348633

Token 802: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 803: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23215998709201813
    2. ' 
' → logprob: -3.3571600914001465
    3. '           ' → logprob: -3.3571600914001465
    4. '            ' → logprob: -3.7321600914001465
    5. '<|end|>' → logprob: -3.7321600914001465
    6. '\n' → logprob: -4.6071600914001465
    7. '        ' → logprob: -4.7321600914001465
    8. '    ' → logprob: -4.8571600914001465
    9. ' return' → logprob: -4.8571600914001465
    10. '	' → logprob: -4.9821600914001465

Token 804: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29431456327438354
    2. '<|end|>' → logprob: -2.1693146228790283
    3. ' 
' → logprob: -4.169314384460449
    4. 'x' → logprob: -4.169314384460449
    5. 'return' (adapté à ' return') → logprob: -4.169314384460449
    6. '    ' → logprob: -4.419314384460449
    7. '       ' → logprob: -4.419314384460449
    8. ')' → logprob: -4.669314384460449
    9. '        ' → logprob: -4.669314384460449
    10. 'y' → logprob: -4.794314384460449

Token 805: ' depth' (ID: 13636)
  Prédit: ' depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' depth' → logprob: -0.12692810595035553
    2. 'depth' → logprob: -2.1269280910491943
    3. '(depth' → logprob: -16.626928329467773
    4. ' ' → logprob: -18.001928329467773
    5. '_depth' → logprob: -19.376928329467773
    6. '.depth' → logprob: -19.626928329467773
    7. ' depths' → logprob: -20.501928329467773
    8. ' ' → logprob: -20.751928329467773
    9. '   ' → logprob: -22.126928329467773
    10. '-depth' → logprob: -22.251928329467773

Token 806: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5295434594154358
    2. '.parent' → logprob: -1.154543399810791
    3. '.y' → logprob: -2.529543399810791
    4. 'y' → logprob: -4.404543399810791
    5. 'parent' → logprob: -6.404543399810791
    6. '
' → logprob: -7.904543399810791
    7. '>' → logprob: -7.904543399810791
    8. '.x' → logprob: -8.15454387664795
    9. '<|end|>' → logprob: -8.52954387664795
    10. ';' → logprob: -8.77954387664795

Token 807: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4636697769165039
    2. '.y' → logprob: -1.963669776916504
    3. '.parent' → logprob: -2.213669776916504
    4. 'y' → logprob: -2.213669776916504
    5. '=' → logprob: -4.963669776916504
    6. 'parent' → logprob: -6.463669776916504
    7. '>' → logprob: -7.463669776916504
    8. 'x' → logprob: -7.713669776916504
    9. '<|end|>' → logprob: -7.963669776916504
    10. ')' → logprob: -7.963669776916504

Token 808: ' def' (ID: 1056)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13317371904850006
    2. '.parent' → logprob: -2.133173704147339
    3. '.y' → logprob: -5.383173942565918
    4. 'y' → logprob: -7.008173942565918
    5. 'parent' → logprob: -7.633173942565918
    6. '=' → logprob: -9.008173942565918
    7. '>' → logprob: -10.258173942565918
    8. ' ' → logprob: -11.633173942565918
    9. '.x' → logprob: -11.758173942565918
    10. ' =' → logprob: -11.758173942565918

Token 809: ' get' (ID: 717)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6519562602043152
    2. 'get' → logprob: -1.65195631980896
    3. 'str' → logprob: -2.77695631980896
    4. ' __' → logprob: -2.77695631980896
    5. 'height' → logprob: -3.15195631980896
    6. 'set' → logprob: -3.40195631980896
    7. 'is' → logprob: -3.90195631980896
    8. ' get' → logprob: -4.151956081390381
    9. '_height' → logprob: -4.651956081390381
    10. 'repr' → logprob: -4.776956081390381

Token 810: '_height' (ID: 21576)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.4635227620601654
    2. '_height' → logprob: -1.2135227918624878
    3. '_balance' → logprob: -3.9635226726531982
    4. '_parent' → logprob: -4.213522911071777
    5. '_size' → logprob: -4.338522911071777
    6. '_children' → logprob: -4.963522911071777
    7. '_sub' → logprob: -5.088522911071777
    8. '_depth' → logprob: -5.463522911071777
    9. '_max' → logprob: -6.838522911071777
    10. 'type' → logprob: -6.963522911071777

Token 811: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006582146510481834
    2. '(' → logprob: -5.131582260131836
    3. ' (' → logprob: -7.756582260131836
    4. '(s' → logprob: -9.756582260131836
    5. '   ' → logprob: -9.756582260131836
    6. '(
' → logprob: -10.256582260131836
    7. 'self' → logprob: -10.506582260131836
    8. '()' → logprob: -10.881582260131836
    9. 's' → logprob: -12.131582260131836
    10. ' ' → logprob: -12.131582260131836

Token 812: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1904696822166443
    2. '):' → logprob: -2.315469741821289
    3. '):
' → logprob: -2.690469741821289
    4. 'self' → logprob: -6.065469741821289
    5. '():' → logprob: -6.690469741821289
    6. '(' → logprob: -7.190469741821289
    7. '():
' → logprob: -7.190469741821289
    8. '   ' → logprob: -7.315469741821289
    9. '       ' → logprob: -8.065469741821289
    10. ')' → logprob: -8.440469741821289

Token 813: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1697012335062027
    2. ' if' → logprob: -2.044701337814331
    3. 'if' → logprob: -4.294701099395752
    4. '   ' → logprob: -5.419701099395752
    5. '        ' → logprob: -6.044701099395752
    6. ' =' → logprob: -6.544701099395752
    7. ' ' → logprob: -6.794701099395752
    8. '	if' → logprob: -6.919701099395752
    9. '()' → logprob: -7.794701099395752
    10. '    ' → logprob: -7.794701099395752

Token 814: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16484014689922333
    2. 'if' (adapté à ' if') → logprob: -1.9148401021957397
    3. '       ' → logprob: -6.164840221405029
    4. 'left' → logprob: -7.039840221405029
    5. ' left' → logprob: -7.289840221405029
    6. ' h' → logprob: -8.164839744567871
    7. 'h' → logprob: -8.289839744567871
    8. 'max' → logprob: -9.164839744567871
    9. '   ' → logprob: -9.289839744567871
    10. ' max' → logprob: -9.789839744567871

Token 815: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0040818434208631516
    2. ' self' → logprob: -5.504081726074219
    3. '   ' → logprob: -12.879081726074219
    4. '	self' → logprob: -14.629081726074219
    5. '(self' → logprob: -15.504081726074219
    6. ' ' → logprob: -15.879081726074219
    7. '       ' → logprob: -16.75408172607422
    8. 'not' → logprob: -17.50408172607422
    9. '  ' → logprob: -17.75408172607422
    10. '    ' → logprob: -18.50408172607422

Token 816: '.height' (ID: 11682)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0009471880039200187
    2. '.height' → logprob: -7.500946998596191
    3. '.right' → logprob: -8.000946998596191
    4. '.parent' → logprob: -10.125946998596191
    5. 'left' → logprob: -11.000946998596191
    6. '.is' → logprob: -14.000946998596191
    7. 'height' → logprob: -14.500946998596191
    8. '==' → logprob: -14.750946998596191
    9. '.' → logprob: -16.000947952270508
    10. ' is' → logprob: -16.625947952270508

Token 817: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.009075870737433434
    2. 'is' → logprob: -5.38407564163208
    3. '==' → logprob: -5.75907564163208
    4. ' ==' → logprob: -6.75907564163208
    5. '!=' → logprob: -9.509076118469238
    6. ' !=' → logprob: -9.884076118469238
    7. '	is' → logprob: -12.759076118469238
    8. ':' → logprob: -14.509076118469238
    9. ' ' → logprob: -14.509076118469238
    10. 'in' → logprob: -14.759076118469238

Token 818: '           ' (ID: 352)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6076703667640686
    2. '       ' → logprob: -1.3576703071594238
    3. '           ' → logprob: -2.357670307159424
    4. ' return' → logprob: -3.232670307159424
    5. ' =' → logprob: -3.607670307159424
    6. '   ' → logprob: -4.357670307159424
    7. '=' → logprob: -4.732670307159424
    8. ':return' → logprob: -5.857670307159424
    9. '==' → logprob: -5.982670307159424
    10. 'return' → logprob: -5.982670307159424

Token 819: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10418971627950668
    2. ' return' → logprob: -2.35418963432312
    3. '           ' → logprob: -5.979189872741699
    4. '       ' → logprob: -6.729189872741699
    5. '	return' → logprob: -8.8541898727417
    6. ':return' → logprob: -9.7291898727417
    7. '   ' → logprob: -10.4791898727417
    8. '               ' → logprob: -12.8541898727417
    9. ' ' → logprob: -13.3541898727417
    10. '.return' → logprob: -13.4791898727417

Token 820: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10021442919969559
    2. ' self' → logprob: -2.3502144813537598
    3. '0' → logprob: -12.225214004516602
    4. '1' → logprob: -13.100214004516602
    5. ' ' → logprob: -14.975214004516602
    6. '	self' → logprob: -15.475214004516602
    7. ' ' → logprob: -15.725214004516602
    8. 'int' → logprob: -17.1002140045166
    9. '(self' → logprob: -17.3502140045166
    10. '   ' → logprob: -17.4752140045166

Token 821: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -2.1888679839321412e-05
    2. 'height' → logprob: -10.875021934509277
    3. '.' → logprob: -13.250021934509277
    4. ' .' → logprob: -14.250021934509277
    5. ' height' → logprob: -15.250021934509277
    6. '	height' → logprob: -16.50002098083496
    7. '.he' → logprob: -16.75002098083496
    8. ';height' → logprob: -17.37502098083496
    9. '_height' → logprob: -17.62502098083496
    10. ',height' → logprob: -17.87502098083496

Token 822: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2604288160800934
    2. '       ' → logprob: -1.510428786277771
    3. '<|end|>' → logprob: -5.8854289054870605
    4. '	' → logprob: -6.8854289054870605
    5. '  
' → logprob: -7.3854289054870605
    6. ' 
' → logprob: -7.6354289054870605
    7. '   ' → logprob: -7.6354289054870605
    8. '' → logprob: -7.8854289054870605
    9. ' ' → logprob: -8.010428428649902
    10. '        
' → logprob: -8.010428428649902

Token 823: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5826544761657715
    2. '
' → logprob: -0.8326544761657715
    3. '   ' → logprob: -6.4576544761657715
    4. '	' → logprob: -7.2076544761657715
    5. ':
' → logprob: -7.5826544761657715
    6. '        
' → logprob: -7.8326544761657715
    7. 'else' → logprob: -7.9576544761657715
    8. '' → logprob: -7.9576544761657715
    9. ' ' → logprob: -8.20765495300293
    10. '(' → logprob: -8.20765495300293

Token 824: ' h' (ID: 312)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12271758168935776
    2. ' if' → logprob: -2.6227176189422607
    3. 'if' → logprob: -3.9977176189422607
    4. 't' → logprob: -4.872717380523682
    5. '   ' → logprob: -5.872717380523682
    6. 'else' → logprob: -6.122717380523682
    7. 'y' → logprob: -6.372717380523682
    8. 'self' → logprob: -6.872717380523682
    9. 'return' → logprob: -7.247717380523682
    10. ' t' → logprob: -7.247717380523682

Token 825: '_left' (ID: 22189)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41852375864982605
    2. '=' → logprob: -1.6685237884521484
    3. '_left' → logprob: -1.9185237884521484
    4. 'left' → logprob: -5.793523788452148
    5. 'eight' → logprob: -6.918523788452148
    6. '   ' → logprob: -7.168523788452148
    7. '_right' → logprob: -7.918523788452148
    8. 't' → logprob: -8.293523788452148
    9. 'ight' → logprob: -8.418523788452148
    10. '       ' → logprob: -8.418523788452148

Token 826: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313420832157135
    2. ' =' → logprob: -1.3134207725524902
    3. '=None' → logprob: -9.188421249389648
    4. 'if' → logprob: -10.438421249389648
    5. '_left' → logprob: -11.438421249389648
    6. '   ' → logprob: -12.313421249389648
    7. '=self' → logprob: -12.688421249389648
    8. '_' → logprob: -13.313421249389648
    9. ' if' → logprob: -13.688421249389648
    10. ' ' → logprob: -13.813421249389648

Token 827: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43884047865867615
    2. 'self' → logprob: -1.3138405084609985
    3. ' self' → logprob: -3.438840389251709
    4. '1' → logprob: -3.563840389251709
    5. ' ' → logprob: -3.688840389251709
    6. 'None' → logprob: -7.813840389251709
    7. '-' → logprob: -8.313840866088867
    8. '(self' → logprob: -9.063840866088867
    9. ' None' → logprob: -9.813840866088867
    10. '(' → logprob: -9.938840866088867

Token 828: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05520045384764671
    2. '0' → logprob: -3.0552003383636475
    3. '1' → logprob: -5.055200576782227
    4. 'None' → logprob: -9.180200576782227
    5. ' self' → logprob: -9.805200576782227
    6. '(self' → logprob: -10.180200576782227
    7. '(' → logprob: -11.430200576782227
    8. '-' → logprob: -12.680200576782227
    9. ' ' → logprob: -13.180200576782227
    10. 'Node' → logprob: -13.805200576782227

Token 829: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38278087973594666
    2. ' if' → logprob: -1.257780909538269
    3. '	if' → logprob: -4.507781028747559
    4. '       ' → logprob: -4.632781028747559
    5. 'if' → logprob: -5.007781028747559
    6. '<|end|>' → logprob: -5.507781028747559
    7. '		
' → logprob: -8.132781028747559
    8. '<|end|>' → logprob: -8.132781028747559
    9. '        ' → logprob: -8.382781028747559
    10. ' +' → logprob: -8.382781028747559

Token 830: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5614275932312012
    2. ' if' → logprob: -1.0614275932312012
    3. '       ' → logprob: -3.186427593231201
    4. '	if' → logprob: -3.811427593231201
    5. '<|end|>' → logprob: -4.936427593231201
    6. 'if' → logprob: -5.561427593231201
    7. '		
' → logprob: -6.686427593231201
    8. '	
' → logprob: -6.686427593231201
    9. '<|end|>' → logprob: -6.686427593231201
    10. ' 
' → logprob: -6.811427593231201

Token 831: ' h' (ID: 312)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.592633068561554
    2. 'if' → logprob: -1.4676330089569092
    3. 'h' (adapté à ' h') → logprob: -1.5926330089569092
    4. ' h' → logprob: -4.717633247375488
    5. '	if' → logprob: -5.842633247375488
    6. '       ' → logprob: -7.092633247375488
    7. '	h' → logprob: -7.842633247375488
    8. '   ' → logprob: -8.717633247375488
    9. '	' → logprob: -11.967633247375488
    10. ' ' → logprob: -11.967633247375488

Token 832: '_right' (ID: 24402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.05516468733549118
    2. '=' → logprob: -3.9301645755767822
    3. '_right' → logprob: -3.9301645755767822
    4. ' =' → logprob: -4.305164813995361
    5. '_' → logprob: -8.555164337158203
    6. 'ight' → logprob: -8.680164337158203
    7. 'left' → logprob: -8.805164337158203
    8. '=_' → logprob: -9.055164337158203
    9. '_=' → logprob: -10.055164337158203
    10. 'if' → logprob: -10.305164337158203

Token 833: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408220171928406
    2. '=' → logprob: -0.9740822315216064
    3. ' ' → logprob: -12.599081993103027
    4. '	' → logprob: -14.724081993103027
    5. '=None' → logprob: -14.974081993103027
    6. '<|end|>' → logprob: -15.224081993103027
    7. ' =
' → logprob: -15.724081993103027
    8. ',' → logprob: -16.099082946777344
    9. 'if' → logprob: -16.349082946777344
    10. '   ' → logprob: -16.349082946777344

Token 834: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1427205204963684
    2. ' ' → logprob: -2.0177204608917236
    3. 'self' → logprob: -11.142720222473145
    4. '1' → logprob: -11.392720222473145
    5. ' self' → logprob: -11.767720222473145
    6. '   ' → logprob: -12.017720222473145
    7. '=' → logprob: -13.892720222473145
    8. '  ' → logprob: -14.392720222473145
    9. ' ' → logprob: -14.580220222473145
    10. 'max' → logprob: -14.955220222473145

Token 835: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005239326041191816
    2. ' ' → logprob: -5.255239486694336
    3. 'self' → logprob: -12.755239486694336
    4. '   ' → logprob: -13.880239486694336
    5. '1' → logprob: -14.380239486694336
    6. ' self' → logprob: -14.817739486694336
    7. '  ' → logprob: -16.505239486694336
    8. '=' → logprob: -16.567739486694336
    9. '	' → logprob: -16.755239486694336
    10. 'None' → logprob: -16.755239486694336

Token 836: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37122535705566406
    2. '
' → logprob: -1.246225357055664
    3. ' if' → logprob: -4.121225357055664
    4. '        
' → logprob: -6.246225357055664
    5. 'if' → logprob: -6.871225357055664
    6. ' 
' → logprob: -7.371225357055664
    7. '	if' → logprob: -7.621225357055664
    8. '        ' → logprob: -7.996225357055664
    9. '
' → logprob: -8.246225357055664
    10. '  
' → logprob: -8.371225357055664

Token 837: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0357697419822216
    2. ' if' → logprob: -3.9107697010040283
    3. '
' → logprob: -4.535769939422607
    4. '	if' → logprob: -6.285769939422607
    5. 'if' → logprob: -6.910769939422607
    6. '   ' → logprob: -7.035769939422607
    7. '	' → logprob: -8.16076946258545
    8. '        
' → logprob: -9.53576946258545
    9. ' ' → logprob: -10.16076946258545
    10. '    ' → logprob: -10.41076946258545

Token 838: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06924735009670258
    2. ' if' → logprob: -3.194247245788574
    3. 'if' (adapté à ' if') → logprob: -4.194247245788574
    4. '
' → logprob: -4.694247245788574
    5. '	' → logprob: -7.319247245788574
    6. '	if' → logprob: -7.819247245788574
    7. '        
' → logprob: -9.194247245788574
    8. '        ' → logprob: -9.194247245788574
    9. '   ' → logprob: -9.569247245788574
    10. ' ' → logprob: -9.819247245788574

Token 839: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1002088338136673
    2. ' self' → logprob: -2.3502087593078613
    3. '   ' → logprob: -13.85020923614502
    4. '	self' → logprob: -14.35020923614502
    5. '(self' → logprob: -14.85020923614502
    6. ' ' → logprob: -15.35020923614502
    7. '       ' → logprob: -17.225208282470703
    8. '    ' → logprob: -17.475208282470703
    9. '  ' → logprob: -18.350208282470703
    10. 'Self' → logprob: -19.100208282470703

Token 840: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -4.320199877838604e-07
    2. 'left' → logprob: -15.75
    3. '.' → logprob: -16.125
    4. ' .' → logprob: -17.0
    5. '.parent' → logprob: -18.125
    6. '.le' → logprob: -18.375
    7. '.right' → logprob: -18.75
    8. '.Left' → logprob: -20.125
    9. '[left' → logprob: -21.0
    10. '	left' → logprob: -21.125

Token 841: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4376022517681122
    2. ' is' → logprob: -1.5626022815704346
    3. ' !=' → logprob: -2.0626022815704346
    4. ':' → logprob: -4.0626020431518555
    5. 'is' → logprob: -8.562602043151855
    6. ' ' → logprob: -9.437602043151855
    7. ':
' → logprob: -9.562602043151855
    8. '   ' → logprob: -10.187602043151855
    9. '!==' → logprob: -10.812602043151855
    10. ')!=' → logprob: -11.062602043151855

Token 842: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.033650077879428864
    2. ' None' → logprob: -3.4086501598358154
    3. '=None' → logprob: -13.783650398254395
    4. '_None' → logprob: -13.783650398254395
    5. 'No' → logprob: -14.908650398254395
    6. 'N' → logprob: -15.033650398254395
    7. '   ' → logprob: -15.158650398254395
    8. '(None' → logprob: -15.283650398254395
    9. 'none' → logprob: -15.408650398254395
    10. ' ' → logprob: -15.533650398254395

Token 843: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4324345290660858
    2. ':
' → logprob: -1.0574345588684082
    3. '           ' → logprob: -5.682434558868408
    4. '       ' → logprob: -9.05743408203125
    5. '   ' → logprob: -9.68243408203125
    6. ':h' → logprob: -9.68243408203125
    7. '):
' → logprob: -11.05743408203125
    8. ':
' → logprob: -11.30743408203125
    9. ' :' → logprob: -11.80743408203125
    10. ' :
' → logprob: -11.93243408203125

Token 844: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07684225589036942
    2. '       ' → logprob: -3.3268423080444336
    3. ':' → logprob: -3.8268423080444336
    4. ':
' → logprob: -4.451842308044434
    5. '	       ' → logprob: -7.076842308044434
    6. '               ' → logprob: -7.201842308044434
    7. '   ' → logprob: -7.326842308044434
    8. '		' → logprob: -7.326842308044434
    9. '	' → logprob: -7.701842308044434
    10. '        ' → logprob: -8.951842308044434

Token 845: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.00045498309191316366
    2. ' h' → logprob: -8.000454902648926
    3. '           ' → logprob: -9.500454902648926
    4. '	h' → logprob: -10.500454902648926
    5. '       ' → logprob: -11.125454902648926
    6. '   ' → logprob: -13.125454902648926
    7. ',h' → logprob: -15.750454902648926
    8. 'return' → logprob: -16.125455856323242
    9. '_h' → logprob: -16.500455856323242
    10. 'self' → logprob: -16.500455856323242

Token 846: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -7.839121826691553e-05
    2. '.left' → logprob: -9.875078201293945
    3. '_right' → logprob: -11.375078201293945
    4. 'left' → logprob: -12.250078201293945
    5. '._' → logprob: -12.500078201293945
    6. '_height' → logprob: -13.250078201293945
    7. '=' → logprob: -13.375078201293945
    8. '_self' → logprob: -14.125078201293945
    9. 'self' → logprob: -14.375078201293945
    10. '_LEFT' → logprob: -14.750078201293945

Token 847: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28120389580726624
    2. '=' → logprob: -1.4062038660049438
    3. ' +=' → logprob: -10.781204223632812
    4. '=h' → logprob: -11.531204223632812
    5. '+=' → logprob: -11.781204223632812
    6. ' ' → logprob: -12.406204223632812
    7. 'h' → logprob: -13.281204223632812
    8. '            ' → logprob: -13.406204223632812
    9. '    ' → logprob: -13.656204223632812
    10. '   ' → logprob: -13.906204223632812

Token 848: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0052342405542731285
    2. ' self' → logprob: -5.255234241485596
    3. '	self' → logprob: -15.755233764648438
    4. '   ' → logprob: -16.255233764648438
    5. ' ' → logprob: -16.380233764648438
    6. '           ' → logprob: -17.130233764648438
    7. '       ' → logprob: -18.005233764648438
    8. 'Self' → logprob: -18.005233764648438
    9. '1' → logprob: -18.255233764648438
    10. '  ' → logprob: -18.380233764648438

Token 849: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.3544423381972592e-05
    2. 'left' → logprob: -11.25001335144043
    3. '.' → logprob: -15.62501335144043
    4. '.get' → logprob: -16.62501335144043
    5. ' .' → logprob: -16.87501335144043
    6. '.height' → logprob: -17.25001335144043
    7. '.right' → logprob: -17.25001335144043
    8. '	left' → logprob: -17.50001335144043
    9. '[left' → logprob: -17.62501335144043
    10. 'Left' → logprob: -18.37501335144043

Token 850: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00015383612480945885
    2. '.' → logprob: -8.875153541564941
    3. 'get' → logprob: -11.500153541564941
    4. ' .' → logprob: -13.250153541564941
    5. '.height' → logprob: -13.750153541564941
    6. ').' → logprob: -15.375153541564941
    7. 'height' → logprob: -16.125154495239258
    8. ' ' → logprob: -16.250154495239258
    9. '#get' → logprob: -16.375154495239258
    10. '   ' → logprob: -16.750154495239258

Token 851: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -4.246537173457909e-06
    2. 'height' → logprob: -12.750003814697266
    3. '_type' → logprob: -14.250003814697266
    4. '_he' → logprob: -15.250003814697266
    5. '_' → logprob: -16.125003814697266
    6. '_depth' → logprob: -16.500003814697266
    7. '_get' → logprob: -17.250003814697266
    8. 'get' → logprob: -17.500003814697266
    9. '```' → logprob: -17.750003814697266
    10. '_length' → logprob: -18.875003814697266

Token 852: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011939177056774497
    2. '()+' → logprob: -6.751194000244141
    3. '()
' → logprob: -10.87619400024414
    4. '+' → logprob: -12.62619400024414
    5. '(' → logprob: -14.25119400024414
    6. '())' → logprob: -15.00119400024414
    7. ')' → logprob: -16.12619400024414
    8. '()

' → logprob: -16.62619400024414
    9. ' ()' → logprob: -17.25119400024414
    10. '()*' → logprob: -17.37619400024414

Token 853: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011589671485126019
    2. '
' → logprob: -4.511589527130127
    3. '        
' → logprob: -8.761590003967285
    4. ' 
' → logprob: -9.636590003967285
    5. '+' → logprob: -9.761590003967285
    6. '           ' → logprob: -9.886590003967285
    7. '    
' → logprob: -10.511590003967285
    8. '   ' → logprob: -10.761590003967285
    9. '  
' → logprob: -10.761590003967285
    10. '()' → logprob: -10.761590003967285

Token 854: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.750335693359375
    4. '```' → logprob: -18.750335693359375
    5. ' ' → logprob: -19.500335693359375
    6. '۱' → logprob: -20.000335693359375
    7. '  ' → logprob: -20.125335693359375
    8. '
' → logprob: -20.250335693359375
    9. '１' → logprob: -20.375335693359375
    10. '           ' → logprob: -20.375335693359375

Token 855: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.625
    4. '
' → logprob: -19.25
    5. '```' → logprob: -21.0
    6. '１' → logprob: -21.25
    7. '۱' → logprob: -21.5
    8. '१' → logprob: -22.375
    9. '  ' → logprob: -22.5
    10. '' → logprob: -22.5

Token 856: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0248259324580431
    2. '
' → logprob: -3.8998260498046875
    3. '<|end|>' → logprob: -6.1498260498046875
    4. '        
' → logprob: -7.0248260498046875
    5. '\n' → logprob: -8.649826049804688
    6. '' → logprob: -8.774826049804688
    7. '\
' → logprob: -9.024826049804688
    8. ' 
' → logprob: -9.274826049804688
    9. '        ' → logprob: -9.274826049804688
    10. '	' → logprob: -9.399826049804688

Token 857: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010512175969779491
    2. '<|end|>' → logprob: -5.260512351989746
    3. ' ' → logprob: -6.510512351989746
    4. '        ' → logprob: -7.510512351989746
    5. '           ' → logprob: -7.635512351989746
    6. '
' → logprob: -7.760512351989746
    7. '   ' → logprob: -7.885512351989746
    8. ' 
' → logprob: -7.885512351989746
    9. '        
' → logprob: -8.260512351989746
    10. '      ' → logprob: -8.885512351989746

Token 858: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021394360810518265
    2. '
' → logprob: -7.377139568328857
    3. '           ' → logprob: -7.627139568328857
    4. '<|end|>' → logprob: -7.877139568328857
    5. '   ' → logprob: -9.0021390914917
    6. '        ' → logprob: -9.5021390914917
    7. ' 
' → logprob: -9.5021390914917
    8. ' if' → logprob: -10.0021390914917
    9. '        
' → logprob: -10.1271390914917
    10. '```' → logprob: -10.1271390914917

Token 859: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31328052282333374
    2. 'self' → logprob: -1.3132805824279785
    3. '       ' → logprob: -12.18828010559082
    4. '           ' → logprob: -12.56328010559082
    5. '	self' → logprob: -12.81328010559082
    6. '(self' → logprob: -13.06328010559082
    7. '   ' → logprob: -13.18828010559082
    8. ' ' → logprob: -13.43828010559082
    9. 'Self' → logprob: -14.43828010559082
    10. '[self' → logprob: -14.68828010559082

Token 860: '.right' (ID: 17627)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.694864809513092
    2. '.right' → logprob: -0.694864809513092
    3. ' right' → logprob: -6.444864749908447
    4. '.' → logprob: -9.444865226745605
    5. '	right' → logprob: -10.944865226745605
    6. '   ' → logprob: -11.319865226745605
    7. ' .' → logprob: -11.569865226745605
    8. ' ' → logprob: -12.069865226745605
    9. '[right' → logprob: -13.819865226745605
    10. '_right' → logprob: -15.069865226745605

Token 861: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.00862627848982811
    2. '!=' → logprob: -4.758626461029053
    3. ' is' → logprob: -11.758625984191895
    4. '()!=' → logprob: -13.508625984191895
    5. ' ' → logprob: -14.258625984191895
    6. ')!=' → logprob: -14.258625984191895
    7. ' ' → logprob: -14.633625984191895
    8. '!=(' → logprob: -16.13362693786621
    9. '!=-' → logprob: -16.13362693786621
    10. ':' → logprob: -16.25862693786621

Token 862: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5759527087211609
    2. 'None' → logprob: -0.8259527087211609
    3. '_None' → logprob: -12.575952529907227
    4. '=None' → logprob: -13.450952529907227
    5. '(None' → logprob: -13.450952529907227
    6. 'self' → logprob: -13.575952529907227
    7. ' ' → logprob: -13.700952529907227
    8. ' not' → logprob: -13.950952529907227
    9. ' ' → logprob: -14.075952529907227
    10. '.None' → logprob: -14.325952529907227

Token 863: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02723969705402851
    2. ':
' → logprob: -3.9022397994995117
    3. '           ' → logprob: -5.027239799499512
    4. '       ' → logprob: -9.652239799499512
    5. ' :' → logprob: -11.152239799499512
    6. '          ' → logprob: -11.902239799499512
    7. '   ' → logprob: -12.027239799499512
    8. '=' → logprob: -12.652239799499512
    9. '               ' → logprob: -12.652239799499512
    10. '         ' → logprob: -13.027239799499512

Token 864: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005572152324020863
    2. ' ' → logprob: -6.130572319030762
    3. ' h' → logprob: -6.880572319030762
    4. '            ' → logprob: -7.755572319030762
    5. '       ' → logprob: -7.880572319030762
    6. '               ' → logprob: -8.255572319030762
    7. ' 
' → logprob: -8.255572319030762
    8. '          ' → logprob: -8.505572319030762
    9. 'h' → logprob: -8.630572319030762
    10. ' ' → logprob: -9.005572319030762

Token 865: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.429692804813385
    2. 'h' (adapté à ' h') → logprob: -1.0546927452087402
    3. '           ' → logprob: -7.05469274520874
    4. ' ' → logprob: -9.929693222045898
    5. '       ' → logprob: -10.804693222045898
    6. '_h' → logprob: -11.429693222045898
    7. '            ' → logprob: -11.679693222045898
    8. ' ' → logprob: -11.804693222045898
    9. '	h' → logprob: -11.804693222045898
    10. '        ' → logprob: -12.179693222045898

Token 866: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.009040428325533867
    2. '.right' → logprob: -4.759040355682373
    3. '._' → logprob: -8.259040832519531
    4. 'right' → logprob: -9.009040832519531
    5. '.get' → logprob: -10.634040832519531
    6. 'ight' → logprob: -12.259040832519531
    7. '_RIGHT' → logprob: -12.759040832519531
    8. '_get' → logprob: -13.259040832519531
    9. '   ' → logprob: -13.384040832519531
    10. '_left' → logprob: -13.634040832519531

Token 867: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008615515194833279
    2. '=' → logprob: -4.758615493774414
    3. ' +=' → logprob: -14.258615493774414
    4. ' ' → logprob: -15.133615493774414
    5. '+=' → logprob: -16.758615493774414
    6. ')' → logprob: -17.883615493774414
    7. '+' → logprob: -18.258615493774414
    8. '<|end|>' → logprob: -18.258615493774414
    9. ' +' → logprob: -18.383615493774414
    10. ' =
' → logprob: -18.508615493774414

Token 868: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2519313097000122
    2. ' self' → logprob: -1.5019313097000122
    3. '	self' → logprob: -14.126931190490723
    4. ' ' → logprob: -14.626931190490723
    5. '(self' → logprob: -15.126931190490723
    6. ' ' → logprob: -15.751931190490723
    7. '0' → logprob: -16.37693214416504
    8. '   ' → logprob: -16.62693214416504
    9. '       ' → logprob: -16.62693214416504
    10. 'Self' → logprob: -16.62693214416504

Token 869: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0002491807099431753
    2. 'right' → logprob: -8.375248908996582
    3. '.' → logprob: -11.625248908996582
    4. '.left' → logprob: -12.000248908996582
    5. ' .' → logprob: -12.875248908996582
    6. '	right' → logprob: -14.625248908996582
    7. '   ' → logprob: -16.1252498626709
    8. '.get' → logprob: -16.2502498626709
    9. '[right' → logprob: -16.5002498626709
    10. ' right' → logprob: -16.5002498626709

Token 870: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -5.300083648762666e-05
    2. '.' → logprob: -10.000053405761719
    3. ' .' → logprob: -12.000053405761719
    4. 'get' → logprob: -14.000053405761719
    5. '   ' → logprob: -15.125053405761719
    6. ' ' → logprob: -16.75005340576172
    7. '       ' → logprob: -17.00005340576172
    8. '	get' → logprob: -17.12505340576172
    9. ' get' → logprob: -17.75005340576172
    10. '  ' → logprob: -18.00005340576172

Token 871: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.17444784939289093
    2. 'get' → logprob: -2.424447774887085
    3. 'height' → logprob: -2.674447774887085
    4. '.get' → logprob: -6.424448013305664
    5. '_right' → logprob: -7.299448013305664
    6. 'right' → logprob: -8.674448013305664
    7. '_get' → logprob: -9.799448013305664
    8. '.height' → logprob: -11.049448013305664
    9. ' get' → logprob: -11.549448013305664
    10. 'Height' → logprob: -11.924448013305664

Token 872: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001807149383239448
    2. '+' → logprob: -7.12680721282959
    3. '()+' → logprob: -7.12680721282959
    4. ' +' → logprob: -9.75180721282959
    5. ' ()' → logprob: -9.87680721282959
    6. ')' → logprob: -9.87680721282959
    7. '(' → logprob: -10.25180721282959
    8. ')+' → logprob: -14.12680721282959
    9. ']' → logprob: -14.37680721282959
    10. ' ' → logprob: -15.37680721282959

Token 873: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.012511883862316608
    2. '+' → logprob: -4.387511730194092
    3. '       ' → logprob: -14.26251220703125
    4. ' ' → logprob: -14.26251220703125
    5. '   ' → logprob: -15.38751220703125
    6. '()+' → logprob: -15.51251220703125
    7. ' +
' → logprob: -15.76251220703125
    8. '           ' → logprob: -16.38751220703125
    9. ' ' → logprob: -16.88751220703125
    10. '    ' → logprob: -17.01251220703125

Token 874: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0380416102707386
    2. ' ' → logprob: -3.288041591644287
    3. '   ' → logprob: -16.663042068481445
    4. '```' → logprob: -17.788042068481445
    5. '0' → logprob: -17.913042068481445
    6. ' ' → logprob: -18.663042068481445
    7. '2' → logprob: -19.038042068481445
    8. '+' → logprob: -19.538042068481445
    9. '  ' → logprob: -19.788042068481445
    10. '１' → logprob: -20.038042068481445

Token 875: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.625139236450195
    4. '0' → logprob: -18.375139236450195
    5. '```' → logprob: -19.750139236450195
    6. '１' → logprob: -20.250139236450195
    7. '2' → logprob: -20.500139236450195
    8. '  ' → logprob: -20.500139236450195
    9. '
' → logprob: -21.000139236450195
    10. '۱' → logprob: -21.375139236450195

Token 876: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08179430663585663
    2. '
' → logprob: -2.706794261932373
    3. '<|end|>' → logprob: -5.331794261932373
    4. ' ' → logprob: -6.956794261932373
    5. 'return' → logprob: -7.081794261932373
    6. '   ' → logprob: -7.206794261932373
    7. '	' → logprob: -7.331794261932373
    8. '  
' → logprob: -7.706794261932373
    9. '        ' → logprob: -7.831794261932373
    10. '        
' → logprob: -8.081794738769531

Token 877: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00269300932995975
    2. '   ' → logprob: -7.252693176269531
    3. 'return' → logprob: -8.127693176269531
    4. '	' → logprob: -8.252693176269531
    5. ' if' → logprob: -8.252693176269531
    6. '	return' → logprob: -8.377693176269531
    7. ' return' → logprob: -8.377693176269531
    8. '           ' → logprob: -9.252693176269531
    9. '
' → logprob: -9.377693176269531
    10. ')' → logprob: -9.377693176269531

Token 878: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6589471697807312
    2. 'return' → logprob: -0.7839471697807312
    3. ' return' → logprob: -3.783947229385376
    4. '	return' → logprob: -6.408946990966797
    5. ' if' → logprob: -7.533946990966797
    6. 'if' → logprob: -7.783946990966797
    7. '	' → logprob: -8.158946990966797
    8. ':return' → logprob: -9.158946990966797
    9. '   ' → logprob: -9.658946990966797
    10. '```' → logprob: -9.908946990966797

Token 879: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -13.625001907348633
    3. 'height' → logprob: -15.000001907348633
    4. ' .' → logprob: -17.500001907348633
    5. '.width' → logprob: -19.375001907348633
    6. '	height' → logprob: -19.500001907348633
    7. '.he' → logprob: -20.000001907348633
    8. ' height' → logprob: -20.375001907348633
    9. '_height' → logprob: -20.500001907348633
    10. '.
' → logprob: -20.750001907348633

Token 880: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324547804892063
    2. ' =' → logprob: -3.7732455730438232
    3. '=max' → logprob: -17.523244857788086
    4. '＝' → logprob: -17.898244857788086
    5. '.=' → logprob: -19.398244857788086
    6. ' ' → logprob: -20.398244857788086
    7. '=}' → logprob: -20.648244857788086
    8. '	' → logprob: -20.773244857788086
    9. '=
' → logprob: -20.898244857788086
    10. '=

' → logprob: -21.523244857788086

Token 881: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5770527124404907
    2. 'max' → logprob: -0.8270527124404907
    3. ' h' → logprob: -7.327052593231201
    4. 'h' → logprob: -7.702052593231201
    5. '	max' → logprob: -13.32705307006836
    6. '(max' → logprob: -13.70205307006836
    7. '	h' → logprob: -16.07705307006836
    8. ' ' → logprob: -16.20205307006836
    9. 'min' → logprob: -16.70205307006836
    10. '   ' → logprob: -16.82705307006836

Token 882: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.01815052703022957
    2. '(' → logprob: -4.018150329589844
    3. '(
' → logprob: -14.893150329589844
    4. ' (' → logprob: -15.518150329589844
    5. '(self' → logprob: -17.393150329589844
    6. '(ht' → logprob: -19.268150329589844
    7. '(

' → logprob: -19.268150329589844
    8. '(s' → logprob: -19.768150329589844
    9. '(left' → logprob: -19.768150329589844
    10. 'h' → logprob: -19.768150329589844

Token 883: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -6.2729995988775045e-06
    2. '_right' → logprob: -12.250006675720215
    3. 'left' → logprob: -14.250006675720215
    4. '_le' → logprob: -14.875006675720215
    5. '(left' → logprob: -15.375006675720215
    6. '(_' → logprob: -16.7500057220459
    7. '_LEFT' → logprob: -17.3750057220459
    8. '_Left' → logprob: -17.3750057220459
    9. '(h' → logprob: -18.1250057220459
    10. '_h' → logprob: -18.2500057220459

Token 884: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009296991862356663
    2. ',h' → logprob: -5.259296894073486
    3. ' ,' → logprob: -5.509296894073486
    4. ',
' → logprob: -12.509297370910645
    5. 'h' → logprob: -13.884297370910645
    6. ' ' → logprob: -15.384297370910645
    7. '   ' → logprob: -15.509297370910645
    8. '_,' → logprob: -15.634297370910645
    9. ' h' → logprob: -15.759297370910645
    10. ' ,
' → logprob: -16.384296417236328

Token 885: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.474077433347702
    2. 'h' → logprob: -0.9740774631500244
    3. '	h' → logprob: -15.224077224731445
    4. ' ' → logprob: -15.974077224731445
    5. ' ' → logprob: -16.599077224731445
    6. ')' → logprob: -17.974077224731445
    7. '(h' → logprob: -18.224077224731445
    8. '_h' → logprob: -18.474077224731445
    9. ',h' → logprob: -18.724077224731445
    10. '   ' → logprob: -18.974077224731445

Token 886: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -3.404745439183898e-05
    2. 'right' → logprob: -10.75003433227539
    3. '_r' → logprob: -11.62503433227539
    4. 'ight' → logprob: -13.37503433227539
    5. '_' → logprob: -13.87503433227539
    6. '_left' → logprob: -15.00003433227539
    7. 'Right' → logprob: -15.50003433227539
    8. '_Right' → logprob: -15.50003433227539
    9. '_RIGHT' → logprob: -16.00003433227539
    10. ' right' → logprob: -16.50003433227539

Token 887: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013105978723615408
    2. '       ' → logprob: -7.8763108253479
    3. ' )' → logprob: -7.8763108253479
    4. '<|end|>' → logprob: -7.8763108253479
    5. ')return' → logprob: -9.626310348510742
    6. ')
' → logprob: -9.876310348510742
    7. ')+' → logprob: -10.376310348510742
    8. '<|end|>' → logprob: -12.251310348510742
    9. ')}' → logprob: -12.626310348510742
    10. ' +' → logprob: -12.626310348510742

Token 888: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015416992828249931
    2. '	' → logprob: -4.640417098999023
    3. 'return' → logprob: -5.765417098999023
    4. '<|end|>' → logprob: -6.765417098999023
    5. ' return' → logprob: -7.515417098999023
    6. '	return' → logprob: -7.640417098999023
    7. '
' → logprob: -9.515417098999023
    8. '   ' → logprob: -9.515417098999023
    9. '           ' → logprob: -10.015417098999023
    10. ':return' → logprob: -10.515417098999023

Token 889: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8443064093589783
    2. '\n' → logprob: -1.094306468963623
    3. '
' → logprob: -2.094306468963623
    4. '<|end|>' → logprob: -3.219306468963623
    5. 'return' (adapté à ' return') → logprob: -4.469306468963623
    6. '   ' → logprob: -4.594306468963623
    7. ' ' → logprob: -4.969306468963623
    8. ' 
' → logprob: -4.969306468963623
    9. '\' → logprob: -4.969306468963623
    10. ' return' → logprob: -5.219306468963623

Token 890: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0485873706638813
    2. ' self' → logprob: -3.0485873222351074
    3. '	self' → logprob: -17.798587799072266
    4. '(self' → logprob: -18.173587799072266
    5. ' ' → logprob: -18.798587799072266
    6. 'Self' → logprob: -20.048587799072266
    7. '_self' → logprob: -20.173587799072266
    8. '[self' → logprob: -20.673587799072266
    9. ' ' → logprob: -20.923587799072266
    10. '   ' → logprob: -21.173587799072266

Token 891: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.08659613877534866
    2. '<|end|>' → logprob: -3.0865962505340576
    3. '.' → logprob: -3.3365962505340576
    4. 'height' → logprob: -6.4615960121154785
    5. ')' → logprob: -10.336596488952637
    6. '<|end|>' → logprob: -10.711596488952637
    7. '
' → logprob: -10.961596488952637
    8. '.width' → logprob: -11.086596488952637
    9. '.h' → logprob: -11.961596488952637
    10. '.he' → logprob: -12.086596488952637

Token 892: '

' (ID: 279)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.27044883370399475
    2. '.' → logprob: -2.145448923110962
    3. '.y' → logprob: -2.270448923110962
    4. 'y' → logprob: -4.270448684692383
    5. 'parent' → logprob: -6.520448684692383
    6. '>' → logprob: -8.270448684692383
    7. '.x' → logprob: -8.520448684692383
    8. '=' → logprob: -8.895448684692383
    9. '
' → logprob: -9.145448684692383
    10. ' y' → logprob: -10.020448684692383

Token 893: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.39033573865890503
    2. '.parent' → logprob: -1.2653357982635498
    3. '.y' → logprob: -3.26533579826355
    4. 'y' → logprob: -6.265335559844971
    5. 'parent' → logprob: -7.515335559844971
    6. '[' → logprob: -9.890336036682129
    7. '.x' → logprob: -10.015336036682129
    8. '.p' → logprob: -10.140336036682129
    9. '>' → logprob: -10.515336036682129
    10. '=' → logprob: -10.515336036682129

Token 894: ' def' (ID: 1056)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1050921082496643
    2. '.parent' → logprob: -2.4800920486450195
    3. '.y' → logprob: -4.3550920486450195
    4. 'y' → logprob: -6.1050920486450195
    5. '=' → logprob: -8.48009204864502
    6. 'parent' → logprob: -8.60509204864502
    7. '[' → logprob: -8.98009204864502
    8. ';' → logprob: -9.60509204864502
    9. ')' → logprob: -10.10509204864502
    10. '.p' → logprob: -10.35509204864502

Token 895: ' get' (ID: 717)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03424559161067009
    2. 'is' → logprob: -4.659245491027832
    3. 'update' → logprob: -5.159245491027832
    4. 'set' → logprob: -5.534245491027832
    5. 'get' → logprob: -5.659245491027832
    6. ' __' → logprob: -5.784245491027832
    7. '_is' → logprob: -6.034245491027832
    8. 'print' → logprob: -7.034245491027832
    9. 'str' → logprob: -7.159245491027832
    10. '_str' → logprob: -7.409245491027832

Token 896: '_degree' (ID: 128654)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.4966718256473541
    2. '_balance' → logprob: -1.1216717958450317
    3. '_parent' → logprob: -3.8716719150543213
    4. '_s' → logprob: -4.121671676635742
    5. '_children' → logprob: -5.496671676635742
    6. '_sub' → logprob: -5.621671676635742
    7. '_depth' → logprob: -5.746671676635742
    8. '_height' → logprob: -5.746671676635742
    9. '_size' → logprob: -5.746671676635742
    10. '_key' → logprob: -5.996671676635742

Token 897: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00418655201792717
    2. '(' → logprob: -5.504186630249023
    3. '()' → logprob: -9.879186630249023
    4. '(
' → logprob: -10.629186630249023
    5. '   ' → logprob: -11.379186630249023
    6. '(s' → logprob: -11.879186630249023
    7. 'self' → logprob: -12.004186630249023
    8. ' (' → logprob: -12.379186630249023
    9. '       ' → logprob: -13.879186630249023
    10. '(Self' → logprob: -14.379186630249023

Token 898: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011761097237467766
    2. '):' → logprob: -4.76176118850708
    3. '():' → logprob: -6.76176118850708
    4. 'self' → logprob: -6.88676118850708
    5. '):
' → logprob: -8.261760711669922
    6. '(' → logprob: -8.261760711669922
    7. ')' → logprob: -8.511760711669922
    8. '   ' → logprob: -9.136760711669922
    9. '()' → logprob: -9.886760711669922
    10. '():
' → logprob: -10.386760711669922

Token 899: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020461535081267357
    2. 'return' → logprob: -4.770461559295654
    3. '0' → logprob: -4.895461559295654
    4. 'count' → logprob: -6.145461559295654
    5. '   ' → logprob: -7.520461559295654
    6. ' return' → logprob: -8.145461082458496
    7. '	' → logprob: -8.145461082458496
    8. '(' → logprob: -8.395461082458496
    9. 'degree' → logprob: -8.520461082458496
    10. 'result' → logprob: -9.270461082458496

Token 900: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' (adapté à ' degree') → logprob: -0.03972579538822174
    2. '   ' → logprob: -4.1647257804870605
    3. 'deg' → logprob: -4.1647257804870605
    4. 'd' → logprob: -5.1647257804870605
    5. 'count' → logprob: -6.6647257804870605
    6. ' degree' → logprob: -8.164726257324219
    7. '       ' → logprob: -8.289726257324219
    8. 'result' → logprob: -9.164726257324219
    9. 'cnt' → logprob: -9.914726257324219
    10. 'res' → logprob: -10.039726257324219

Token 901: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5776340365409851
    2. ' =' → logprob: -0.8276340365409851
    3. '       ' → logprob: -6.702633857727051
    4. '   ' → logprob: -8.20263385772705
    5. '()' → logprob: -8.82763385772705
    6. '(' → logprob: -11.82763385772705
    7. '	' → logprob: -11.82763385772705
    8. '(self' → logprob: -11.82763385772705
    9. '        ' → logprob: -12.20263385772705
    10. '    ' → logprob: -12.45263385772705

Token 902: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015406885650008917
    2. ' ' → logprob: -6.501540660858154
    3. '(' → logprob: -10.876541137695312
    4. ' (' → logprob: -11.876541137695312
    5. 'int' → logprob: -12.001541137695312
    6. '(len' → logprob: -13.626541137695312
    7. 'sum' → logprob: -13.626541137695312
    8. '(int' → logprob: -14.126541137695312
    9. 'len' → logprob: -14.251541137695312
    10. '   ' → logprob: -14.251541137695312

Token 903: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.060365608893335e-05
    2. 'int' → logprob: -10.875041007995605
    3. '(' → logprob: -11.000041007995605
    4. ' ' → logprob: -13.125041007995605
    5. '(int' → logprob: -13.750041007995605
    6. '(len' → logprob: -14.500041007995605
    7. 'len' → logprob: -14.875041007995605
    8. 'sum' → logprob: -15.250041007995605
    9. '((' → logprob: -15.875041007995605
    10. '(self' → logprob: -16.00004005432129

Token 904: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047555193305015564
    2. ' if' → logprob: -3.9225552082061768
    3. 'if' → logprob: -4.172554969787598
    4. '
' → logprob: -4.672554969787598
    5. '   ' → logprob: -6.547554969787598
    6. '	if' → logprob: -8.172554969787598
    7. '	' → logprob: -9.797554969787598
    8. '
' → logprob: -10.172554969787598
    9. '    ' → logprob: -11.297554969787598
    10. 'If' → logprob: -11.422554969787598

Token 905: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08110906183719635
    2. '
' → logprob: -2.581109046936035
    3. ' if' → logprob: -6.956109046936035
    4. 'if' → logprob: -7.456109046936035
    5. '   ' → logprob: -8.206109046936035
    6. '<|end|>' → logprob: -8.706109046936035
    7. '	' → logprob: -9.581109046936035
    8. '	if' → logprob: -9.831109046936035
    9. '
' → logprob: -10.456109046936035
    10. '        
' → logprob: -10.956109046936035

Token 906: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1605241745710373
    2. ' if' → logprob: -1.9105241298675537
    3. '       ' → logprob: -9.410524368286133
    4. '    ' → logprob: -9.410524368286133
    5. 'degree' → logprob: -9.410524368286133
    6. '   ' → logprob: -10.910524368286133
    7. '	if' → logprob: -11.285524368286133
    8. ' degree' → logprob: -11.410524368286133
    9. '        ' → logprob: -11.660524368286133
    10. '
' → logprob: -13.660524368286133

Token 907: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16026657819747925
    2. ' self' → logprob: -1.910266637802124
    3. '   ' → logprob: -10.285266876220703
    4. '	self' → logprob: -12.410266876220703
    5. ' ' → logprob: -13.285266876220703
    6. '(self' → logprob: -13.535266876220703
    7. '       ' → logprob: -14.660266876220703
    8. '    ' → logprob: -14.785266876220703
    9. '  ' → logprob: -15.410266876220703
    10. '[self' → logprob: -16.910266876220703

Token 908: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0002736138121690601
    2. '.parent' → logprob: -8.875273704528809
    3. '.' → logprob: -9.000273704528809
    4. '.right' → logprob: -11.625273704528809
    5. ' .' → logprob: -14.000273704528809
    6. '.has' → logprob: -15.375273704528809
    7. 'left' → logprob: -16.250272750854492
    8. '.le' → logprob: -16.625272750854492
    9. '   ' → logprob: -16.750272750854492
    10. '.key' → logprob: -17.125272750854492

Token 909: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.49800699949264526
    2. '!=' → logprob: -0.9980069994926453
    3. ' is' → logprob: -3.74800705909729
    4. 'is' → logprob: -10.123006820678711
    5. '()!=' → logprob: -10.498006820678711
    6. ' ' → logprob: -12.498006820678711
    7. ')!=' → logprob: -12.498006820678711
    8. ':' → logprob: -13.373006820678711
    9. '   ' → logprob: -14.248006820678711
    10. ' ' → logprob: -14.373006820678711

Token 910: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.023246292024850845
    2. ' None' → logprob: -3.7732462882995605
    3. '_None' → logprob: -15.148246765136719
    4. '=None' → logprob: -16.14824676513672
    5. '(None' → logprob: -16.39824676513672
    6. ' ' → logprob: -16.39824676513672
    7. 'none' → logprob: -16.77324676513672
    8. 'N' → logprob: -16.77324676513672
    9. '   ' → logprob: -17.39824676513672
    10. 'not' → logprob: -17.52324676513672

Token 911: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6351724863052368
    2. ':
' → logprob: -0.7601724863052368
    3. '       ' → logprob: -6.010172367095947
    4. '   ' → logprob: -9.760172843933105
    5. '           ' → logprob: -10.885172843933105
    6. '):
' → logprob: -11.385172843933105
    7. ' :' → logprob: -12.635172843933105
    8. '+' → logprob: -12.635172843933105
    9. ' :
' → logprob: -12.760172843933105
    10. '.' → logprob: -12.885172843933105

Token 912: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16582229733467102
    2. ':
' → logprob: -2.7908222675323486
    3. ':' → logprob: -3.0408222675323486
    4. '           ' → logprob: -3.2908222675323486
    5. '   ' → logprob: -5.915822505950928
    6. '+' → logprob: -6.665822505950928
    7. 'degree' → logprob: -7.040822505950928
    8. '	' → logprob: -8.29082202911377
    9. '.degree' → logprob: -8.91582202911377
    10. '        ' → logprob: -8.91582202911377

Token 913: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' (adapté à ' degree') → logprob: -0.1272723376750946
    2. ' degree' → logprob: -2.127272367477417
    3. '       ' → logprob: -8.627272605895996
    4. '   ' → logprob: -8.752272605895996
    5. '.degree' → logprob: -12.877272605895996
    6. ' ' → logprob: -13.127272605895996
    7. '_degree' → logprob: -14.377272605895996
    8. '           ' → logprob: -14.877272605895996
    9. ' ' → logprob: -15.127272605895996
    10. '	de' → logprob: -15.502272605895996

Token 914: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16034497320652008
    2. ' +=' → logprob: -1.9103449583053589
    3. '=' → logprob: -9.035345077514648
    4. ' =' → logprob: -14.035345077514648
    5. '+' → logprob: -14.660345077514648
    6. ']+=' → logprob: -15.660345077514648
    7. '   ' → logprob: -15.785345077514648
    8. 'degree' → logprob: -16.53534507751465
    9. '    ' → logprob: -17.28534507751465
    10. '	' → logprob: -17.78534507751465

Token 915: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014163747429847717
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.514163970947266
    4. ' ' → logprob: -17.014163970947266
    5. '+' → logprob: -18.264163970947266
    6. '       ' → logprob: -18.451663970947266
    7. '１' → logprob: -18.576663970947266
    8. '  ' → logprob: -18.639163970947266
    9. '۱' → logprob: -18.764163970947266
    10. '2' → logprob: -18.889163970947266

Token 916: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.500017166137695
    4. '１' → logprob: -19.625017166137695
    5. '۱' → logprob: -20.062517166137695
    6. '2' → logprob: -20.375017166137695
    7. '+' → logprob: -20.500017166137695
    8. '
' → logprob: -20.500017166137695
    9. '```' → logprob: -20.625017166137695
    10. '  ' → logprob: -21.187517166137695

Token 917: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020454058423638344
    2. '
' → logprob: -4.020453929901123
    3. '<|end|>' → logprob: -6.770453929901123
    4. '\
' → logprob: -8.145454406738281
    5. '   ' → logprob: -8.270454406738281
    6. '```' → logprob: -9.020454406738281
    7. '        
' → logprob: -9.145454406738281
    8. '        ' → logprob: -9.645454406738281
    9. '\' → logprob: -10.395454406738281
    10. '           ' → logprob: -10.520454406738281

Token 918: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0041857217438519
    2. '
' → logprob: -6.004185676574707
    3. '   ' → logprob: -6.629185676574707
    4. '	' → logprob: -9.504185676574707
    5. '<|end|>' → logprob: -9.754185676574707
    6. '        ' → logprob: -10.254185676574707
    7. '           ' → logprob: -10.504185676574707
    8. '      ' → logprob: -10.504185676574707
    9. ' if' → logprob: -10.629185676574707
    10. '        
' → logprob: -10.879185676574707

Token 919: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4561757743358612
    2. 'if' (adapté à ' if') → logprob: -1.2061758041381836
    3. '       ' → logprob: -2.7061758041381836
    4. '   ' → logprob: -9.706175804138184
    5. '
' → logprob: -10.331175804138184
    6. 'If' → logprob: -10.456175804138184
    7. '        ' → logprob: -11.456175804138184
    8. '	if' → logprob: -11.581175804138184
    9. '```' → logprob: -12.456175804138184
    10. '​' → logprob: -12.831175804138184

Token 920: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.17975328862667084
    2. 'self' → logprob: -1.804753303527832
    3. '   ' → logprob: -12.929753303527832
    4. '	self' → logprob: -13.179753303527832
    5. ' ' → logprob: -13.429753303527832
    6. '       ' → logprob: -13.679753303527832
    7. '(self' → logprob: -14.179753303527832
    8. '[self' → logprob: -15.429753303527832
    9. ' ' → logprob: -15.679753303527832
    10. '           ' → logprob: -15.679753303527832

Token 921: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.008442944847047329
    2. 'right' → logprob: -4.8834428787231445
    3. '.' → logprob: -7.7584428787231445
    4. ' .' → logprob: -8.258442878723145
    5. ' right' → logprob: -8.883442878723145
    6. '.left' → logprob: -12.758442878723145
    7. '   ' → logprob: -13.008442878723145
    8. ' ' → logprob: -13.133442878723145
    9. '	right' → logprob: -13.133442878723145
    10. '[right' → logprob: -14.133442878723145

Token 922: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.038048721849918365
    2. '!=' → logprob: -3.28804874420166
    3. ' is' → logprob: -12.66304874420166
    4. ' ' → logprob: -13.41304874420166
    5. ')!=' → logprob: -14.16304874420166
    6. ' ' → logprob: -14.41304874420166
    7. '()!=' → logprob: -14.41304874420166
    8. 'is' → logprob: -15.16304874420166
    9. '!=-' → logprob: -15.28804874420166
    10. ']!=' → logprob: -16.788047790527344

Token 923: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5760199427604675
    2. 'None' → logprob: -0.8260199427604675
    3. ' not' → logprob: -9.576020240783691
    4. '_None' → logprob: -12.951020240783691
    5. ' ' → logprob: -13.076020240783691
    6. 'not' → logprob: -13.326020240783691
    7. ' ' → logprob: -13.576020240783691
    8. '=None' → logprob: -13.576020240783691
    9. '(None' → logprob: -13.826020240783691
    10. ' none' → logprob: -14.951020240783691

Token 924: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0643703043460846
    2. ':
' → logprob: -2.8143703937530518
    3. ' +=' → logprob: -7.064370155334473
    4. ' !=' → logprob: -7.939370155334473
    5. '           ' → logprob: -8.064370155334473
    6. '+=' → logprob: -8.689370155334473
    7. '   ' → logprob: -8.814370155334473
    8. '!=' → logprob: -8.939370155334473
    9. ' :' → logprob: -9.189370155334473
    10. '       ' → logprob: -9.564370155334473

Token 925: '           ' (ID: 352)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.060278296470642
    2. ' ' → logprob: -1.185278296470642
    3. ' None' → logprob: -2.0602784156799316
    4. '   ' → logprob: -2.1852784156799316
    5. '           ' → logprob: -3.3102784156799316
    6. 'None' → logprob: -3.3102784156799316
    7. '    ' → logprob: -4.185278415679932
    8. '       ' → logprob: -4.935278415679932
    9. '  ' → logprob: -5.185278415679932
    10. ' +=' → logprob: -6.435278415679932

Token 926: ' degree' (ID: 9882)
  Prédit: ' degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' degree' → logprob: -0.011057606898248196
    2. 'degree' (adapté à ' degree') → logprob: -4.511057376861572
    3. '1' → logprob: -12.01105785369873
    4. ' ' → logprob: -13.26105785369873
    5. '.degree' → logprob: -14.26105785369873
    6. '   ' → logprob: -15.01105785369873
    7. '    ' → logprob: -15.38605785369873
    8. ' ' → logprob: -15.38605785369873
    9. '       ' → logprob: -15.88605785369873
    10. '_degree' → logprob: -16.136056900024414

Token 927: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4740881323814392
    2. ' +=' → logprob: -0.9740881323814392
    3. '+' → logprob: -12.349087715148926
    4. ' ' → logprob: -12.974087715148926
    5. ']+=' → logprob: -13.599087715148926
    6. '   ' → logprob: -13.599087715148926
    7. '    ' → logprob: -14.724087715148926
    8. ' ' → logprob: -14.724087715148926
    9. ' +' → logprob: -15.099087715148926
    10. '!=' → logprob: -15.724087715148926

Token 928: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38687145709991455
    2. '1' → logprob: -1.1368714570999146
    3. '   ' → logprob: -15.261871337890625
    4. ' ' → logprob: -16.886871337890625
    5. '```' → logprob: -17.386871337890625
    6. '	' → logprob: -18.511871337890625
    7. '+' → logprob: -18.574371337890625
    8. '0' → logprob: -18.886871337890625
    9. '  ' → logprob: -18.949371337890625
    10. '１' → logprob: -19.011871337890625

Token 929: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.500335693359375
    4. '１' → logprob: -18.812835693359375
    5. '
' → logprob: -19.500335693359375
    6. ' ' → logprob: -19.625335693359375
    7. '۱' → logprob: -19.625335693359375
    8. '```' → logprob: -20.062835693359375
    9. '  ' → logprob: -20.562835693359375
    10. '0' → logprob: -20.687835693359375

Token 930: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06774478405714035
    2. '   ' → logprob: -3.942744731903076
    3. 'return' → logprob: -4.192744731903076
    4. '
' → logprob: -4.192744731903076
    5. '<|end|>' → logprob: -5.067744731903076
    6. ' return' → logprob: -6.067744731903076
    7. '	return' → logprob: -6.442744731903076
    8. '\n' → logprob: -6.442744731903076
    9. ':return' → logprob: -7.442744731903076
    10. '	' → logprob: -7.442744731903076

Token 931: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017673727124929428
    2. '   ' → logprob: -5.017673492431641
    3. 'return' → logprob: -5.017673492431641
    4. '	return' → logprob: -5.892673492431641
    5. ' return' → logprob: -7.517673492431641
    6. '<|end|>' → logprob: -7.517673492431641
    7. ':return' → logprob: -8.89267349243164
    8. '	' → logprob: -9.01767349243164
    9. '      ' → logprob: -10.39267349243164
    10. '```' → logprob: -10.64267349243164

Token 932: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.339358925819397
    2. '       ' → logprob: -1.339358925819397
    3. ' return' → logprob: -4.089358806610107
    4. '   ' → logprob: -4.964358806610107
    5. '	return' → logprob: -6.464358806610107
    6. '	' → logprob: -8.714359283447266
    7. ' ' → logprob: -8.839359283447266
    8. ':return' → logprob: -9.464359283447266
    9. '    ' → logprob: -11.214359283447266
    10. '     ' → logprob: -11.464359283447266

Token 933: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.20141343772411346
    2. ' degree' → logprob: -1.7014133930206299
    3. 'self' → logprob: -16.326414108276367
    4. '.degree' → logprob: -17.576414108276367
    5. 'deg' → logprob: -17.826414108276367
    6. ' ' → logprob: -18.076414108276367
    7. ' ' → logprob: -18.701414108276367
    8. ' self' → logprob: -18.826414108276367
    9. 'depth' → logprob: -18.951414108276367
    10. 'degrees' → logprob: -19.201414108276367

Token 934: '

' (ID: 279)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6912133097648621
    2. 'y' → logprob: -1.4412133693695068
    3. ' =' → logprob: -1.9412133693695068
    4. '.' → logprob: -2.316213369369507
    5. '.y' → logprob: -5.316213130950928
    6. ' y' → logprob: -5.941213130950928
    7. 'w' → logprob: -6.316213130950928
    8. '   ' → logprob: -6.441213130950928
    9. ' ' → logprob: -6.441213130950928
    10. '       ' → logprob: -6.816213130950928

Token 935: '   ' (ID: 271)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.49542176723480225
    2. '=' → logprob: -1.2454217672348022
    3. '.' → logprob: -2.745421886444092
    4. ' =' → logprob: -4.620421886444092
    5. 'x' → logprob: -5.620421886444092
    6. ' ' → logprob: -5.745421886444092
    7. 'n' → logprob: -5.745421886444092
    8. '       ' → logprob: -5.745421886444092
    9. ' y' → logprob: -5.745421886444092
    10. '.y' → logprob: -5.870421886444092

Token 936: ' def' (ID: 1056)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.9022250771522522
    2. '=' → logprob: -1.0272250175476074
    3. '.' → logprob: -2.6522250175476074
    4. ' y' → logprob: -3.1522250175476074
    5. '       ' → logprob: -3.2772250175476074
    6. ' =' → logprob: -3.5272250175476074
    7. '.y' → logprob: -4.277225017547607
    8. ' ' → logprob: -4.402225017547607
    9. '           ' → logprob: -4.652225017547607
    10. '   ' → logprob: -5.277225017547607

Token 937: ' get' (ID: 717)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.028409741818904877
    2. 'is' → logprob: -4.278409957885742
    3. ' __' → logprob: -4.903409957885742
    4. '_is' → logprob: -5.778409957885742
    5. '_str' → logprob: -7.028409957885742
    6. '___' → logprob: -7.278409957885742
    7. 'str' → logprob: -7.403409957885742
    8. 'get' → logprob: -8.278409957885742
    9. 'set' → logprob: -8.278409957885742
    10. 'print' → logprob: -8.528409957885742

Token 938: '_s' (ID: 1278)
  Prédit: '_parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.8649231195449829
    2. '_children' → logprob: -2.1149230003356934
    3. '_degree' → logprob: -2.2399230003356934
    4. '_s' → logprob: -2.2399230003356934
    5. '_key' → logprob: -3.2399230003356934
    6. '_balance' → logprob: -3.4899230003356934
    7. '_value' → logprob: -3.4899230003356934
    8. '_sub' → logprob: -3.8649230003356934
    9. '_type' → logprob: -3.9899230003356934
    10. '_size' → logprob: -4.239923000335693

Token 939: 'ibling' (ID: 47701)
  Prédit: 'ibling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibling' → logprob: -0.7564612030982971
    2. 'ize' → logprob: -1.0064611434936523
    3. 'iblings' → logprob: -2.5064611434936523
    4. 'uccess' → logprob: -3.0064611434936523
    5. 'ub' → logprob: -4.381461143493652
    6. 'ib' → logprob: -4.631461143493652
    7. 'elf' → logprob: -5.756461143493652
    8. 'uffix' → logprob: -5.756461143493652
    9. 'tring' → logprob: -6.881461143493652
    10. 't' → logprob: -7.256461143493652

Token 940: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00040755473310127854
    2. '(' → logprob: -8.250407218933105
    3. ' (' → logprob: -9.000407218933105
    4. '(s' → logprob: -11.125407218933105
    5. 'self' → logprob: -12.625407218933105
    6. 's' → logprob: -13.250407218933105
    7. '   ' → logprob: -14.375407218933105
    8. 'def' → logprob: -14.625407218933105
    9. '(cls' → logprob: -14.750407218933105
    10. '(sel' → logprob: -14.875407218933105

Token 941: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4879567623138428
    2. '):
' → logprob: -0.9879567623138428
    3. 'self' → logprob: -4.987957000732422
    4. '(self' → logprob: -5.112957000732422
    5. ')' → logprob: -7.237957000732422
    6. '):

' → logprob: -9.237957000732422
    7. '):
' → logprob: -10.237957000732422
    8. ',' → logprob: -10.612957000732422
    9. '(' → logprob: -11.112957000732422
    10. '   ' → logprob: -11.487957000732422

Token 942: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013839183375239372
    2. 'if' → logprob: -4.388839244842529
    3. ' if' → logprob: -6.638839244842529
    4. '	if' → logprob: -12.388838768005371
    5. 'self' → logprob: -12.513838768005371
    6. '   ' → logprob: -12.638838768005371
    7. 's' → logprob: -12.888838768005371
    8. '	' → logprob: -12.888838768005371
    9. 'return' → logprob: -13.388838768005371
    10. '	   ' → logprob: -14.763838768005371

Token 943: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009293572045862675
    2. '       ' → logprob: -5.259293556213379
    3. ' if' → logprob: -5.509293556213379
    4. 'parent' → logprob: -13.259293556213379
    5. '	if' → logprob: -15.009293556213379
    6. '   ' → logprob: -15.384293556213379
    7. 'return' → logprob: -15.509293556213379
    8. '```' → logprob: -17.384294509887695
    9. 'p' → logprob: -17.759294509887695
    10. ' ' → logprob: -18.009294509887695

Token 944: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004084216430783272
    2. ' self' → logprob: -5.50408411026001
    3. '   ' → logprob: -13.129084587097168
    4. 'not' → logprob: -13.129084587097168
    5. ' ' → logprob: -14.254084587097168
    6. '	self' → logprob: -14.379084587097168
    7. ' not' → logprob: -15.004084587097168
    8. '  ' → logprob: -16.12908363342285
    9. '(self' → logprob: -16.12908363342285
    10. '       ' → logprob: -16.50408363342285

Token 945: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -7.73183855926618e-05
    2. 'parent' → logprob: -9.500077247619629
    3. '.' → logprob: -13.000077247619629
    4. '	parent' → logprob: -16.625078201293945
    5. ' parent' → logprob: -17.250078201293945
    6. '_parent' → logprob: -18.375078201293945
    7. ' .' → logprob: -19.000078201293945
    8. 'Parent' → logprob: -19.250078201293945
    9. '.Parent' → logprob: -19.500078201293945
    10. '==' → logprob: -20.125078201293945

Token 946: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5372815132141113
    2. ' ==' → logprob: -1.1622815132141113
    3. ' is' → logprob: -2.2872815132141113
    4. '.left' → logprob: -6.912281513214111
    5. '   ' → logprob: -8.787281036376953
    6. '.' → logprob: -9.287281036376953
    7. ':' → logprob: -10.537281036376953
    8. '=' → logprob: -10.912281036376953
    9. 'is' → logprob: -11.287281036376953
    10. '.is' → logprob: -11.662281036376953

Token 947: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0006273718317970634
    2. ' None' → logprob: -7.375627517700195
    3. '(None' → logprob: -15.625627517700195
    4. '   ' → logprob: -15.875627517700195
    5. 'N' → logprob: -16.000627517700195
    6. '_None' → logprob: -16.125627517700195
    7. ' ' → logprob: -16.500627517700195
    8. '=None' → logprob: -16.500627517700195
    9. 'No' → logprob: -17.250627517700195
    10. '0' → logprob: -17.375627517700195

Token 948: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2637825310230255
    2. ':
' → logprob: -1.5137825012207031
    3. ':return' → logprob: -4.888782501220703
    4. '           ' → logprob: -6.138782501220703
    5. '       ' → logprob: -6.888782501220703
    6. ' or' → logprob: -7.513782501220703
    7. '   ' → logprob: -8.013782501220703
    8. 'return' → logprob: -10.263782501220703
    9. ' :' → logprob: -10.513782501220703
    10. '	return' → logprob: -11.138782501220703

Token 949: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16399362683296204
    2. 'return' → logprob: -2.5389935970306396
    3. ' return' → logprob: -2.6639935970306396
    4. '	return' → logprob: -7.038993835449219
    5. '       ' → logprob: -7.288993835449219
    6. '		' → logprob: -7.413993835449219
    7. '   ' → logprob: -8.538993835449219
    8. '	' → logprob: -9.913993835449219
    9. ':return' → logprob: -10.038993835449219
    10. '	   ' → logprob: -10.163993835449219

Token 950: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03378032147884369
    2. ' return' → logprob: -3.533780336380005
    3. '           ' → logprob: -5.533780097961426
    4. 'None' → logprob: -10.283780097961426
    5. '	return' → logprob: -10.658780097961426
    6. ' None' → logprob: -11.783780097961426
    7. '   ' → logprob: -13.158780097961426
    8. '       ' → logprob: -13.283780097961426
    9. ' ' → logprob: -14.408780097961426
    10. ':return' → logprob: -14.408780097961426

Token 951: ' -' (ID: 533)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.014163628220558167
    2. ' None' → logprob: -4.264163494110107
    3. 'No' → logprob: -17.014163970947266
    4. '   ' → logprob: -18.264163970947266
    5. 'self' → logprob: -18.514163970947266
    6. '_None' → logprob: -18.514163970947266
    7. ' ' → logprob: -19.014163970947266
    8. 'none' → logprob: -19.514163970947266
    9. ',None' → logprob: -19.514163970947266
    10. '(None' → logprob: -20.014163970947266

Token 952: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5771722793579102
    2. 'None' → logprob: -0.8271722793579102
    3. ' None' → logprob: -6.70217227935791
    4. 'none' → logprob: -13.32717227935791
    5. 'self' → logprob: -13.95217227935791
    6. '(None' → logprob: -15.07717227935791
    7. '_None' → logprob: -15.20217227935791
    8. ' ' → logprob: -15.45217227935791
    9. '   ' → logprob: -16.077171325683594
    10. '2' → logprob: -16.452171325683594

Token 953: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5772538185119629
    2. '
' → logprob: -0.8272538185119629
    3. '	' → logprob: -7.327253818511963
    4. '   ' → logprob: -8.452253341674805
    5. '        
' → logprob: -9.077253341674805
    6. '  
' → logprob: -9.577253341674805
    7. '\n' → logprob: -10.077253341674805
    8. '' → logprob: -10.202253341674805
    9. '    
' → logprob: -10.202253341674805
    10. ' 
' → logprob: -10.577253341674805

Token 954: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5245599150657654
    2. '
' → logprob: -0.8995599150657654
    3. '	' → logprob: -6.89955997467041
    4. '  
' → logprob: -9.02455997467041
    5. '   ' → logprob: -9.14955997467041
    6. '        
' → logprob: -9.77455997467041
    7. ' 
' → logprob: -10.14955997467041
    8. '' → logprob: -11.02455997467041
    9. '\n' → logprob: -11.02455997467041
    10. ' ' → logprob: -11.27455997467041

Token 955: ' p' (ID: 275)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36837053298950195
    2. '       ' → logprob: -1.618370532989502
    3. ' if' → logprob: -2.243370532989502
    4. 'elif' → logprob: -6.868370532989502
    5. 't' → logprob: -7.243370532989502
    6. 'else' → logprob: -7.618370532989502
    7. 'return' → logprob: -7.868370532989502
    8. 'parent' → logprob: -7.993370532989502
    9. '   ' → logprob: -8.243370056152344
    10. ' elif' → logprob: -8.993370056152344

Token 956: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10083335638046265
    2. '=' → logprob: -3.1008334159851074
    3. '.' → logprob: -3.8508334159851074
    4. 'ar' → logprob: -4.475833415985107
    5. '.parent' → logprob: -4.725833415985107
    6. '.left' → logprob: -5.100833415985107
    7. 'if' → logprob: -7.725833415985107
    8. '.right' → logprob: -7.725833415985107
    9. '   ' → logprob: -7.975833415985107
    10. 'return' → logprob: -8.10083293914795

Token 957: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008628524839878082
    2. ' self' → logprob: -4.7586283683776855
    3. '   ' → logprob: -11.883628845214844
    4. '       ' → logprob: -12.258628845214844
    5. '	self' → logprob: -13.758628845214844
    6. ' ' → logprob: -14.633628845214844
    7. '    ' → logprob: -15.008628845214844
    8. '  ' → logprob: -15.633628845214844
    9. '           ' → logprob: -16.133628845214844
    10. '     ' → logprob: -16.508628845214844

Token 958: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00016623330884613097
    2. 'parent' → logprob: -8.750165939331055
    3. '.' → logprob: -11.875165939331055
    4. '	parent' → logprob: -15.625165939331055
    5. ' .' → logprob: -15.750165939331055
    6. '[parent' → logprob: -16.375165939331055
    7. '.Parent' → logprob: -16.625165939331055
    8. '_parent' → logprob: -17.000165939331055
    9. '.p' → logprob: -17.000165939331055
    10. ' parent' → logprob: -17.125165939331055

Token 959: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16688622534275055
    2. '
' → logprob: -2.666886329650879
    3. 'if' → logprob: -3.291886329650879
    4. ' if' → logprob: -3.541886329650879
    5. '.left' → logprob: -4.166886329650879
    6. '   ' → logprob: -7.041886329650879
    7. '.' → logprob: -7.166886329650879
    8. '	if' → logprob: -8.166886329650879
    9. '.right' → logprob: -8.791886329650879
    10. '	' → logprob: -9.541886329650879

Token 960: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08759253472089767
    2. ' if' → logprob: -2.712592601776123
    3. 'if' → logprob: -4.462592601776123
    4. '
' → logprob: -5.587592601776123
    5. '	' → logprob: -6.837592601776123
    6. '	if' → logprob: -7.587592601776123
    7. ',' → logprob: -8.712592124938965
    8. '   ' → logprob: -8.837592124938965
    9. 's' → logprob: -10.337592124938965
    10. 't' → logprob: -10.337592124938965

Token 961: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014968497678637505
    2. ' if' → logprob: -4.264968395233154
    3. '       ' → logprob: -7.139968395233154
    4. '	if' → logprob: -12.639968872070312
    5. 'return' → logprob: -12.639968872070312
    6. '   ' → logprob: -13.514968872070312
    7. 'If' → logprob: -13.514968872070312
    8. 'i' → logprob: -14.764968872070312
    9. '
' → logprob: -14.764968872070312
    10. ' ' → logprob: -14.764968872070312

Token 962: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003729534102603793
    2. 'self' → logprob: -5.878729343414307
    3. ' p' → logprob: -7.003729343414307
    4. ' self' → logprob: -11.128729820251465
    5. '	p' → logprob: -14.128729820251465
    6. '(p' → logprob: -16.12872886657715
    7. '   ' → logprob: -16.12872886657715
    8. ' ' → logprob: -16.75372886657715
    9. '  ' → logprob: -17.62872886657715
    10. '	self' → logprob: -17.62872886657715

Token 963: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.8670179997570813e-05
    2. '.right' → logprob: -11.625019073486328
    3. '.le' → logprob: -12.000019073486328
    4. '.' → logprob: -13.125019073486328
    5. '.l' → logprob: -14.375019073486328
    6. 'left' → logprob: -14.500019073486328
    7. '.parent' → logprob: -16.000019073486328
    8. '.Left' → logprob: -16.000019073486328
    9. '.first' → logprob: -16.875019073486328
    10. '.root' → logprob: -17.000019073486328

Token 964: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932795643806458
    2. ' ==' → logprob: -0.6932795643806458
    3. ' is' → logprob: -9.068279266357422
    4. '=' → logprob: -12.193279266357422
    5. '!=' → logprob: -12.693279266357422
    6. ' !=' → logprob: -12.943279266357422
    7. ' ' → logprob: -13.193279266357422
    8. ' =' → logprob: -13.568279266357422
    9. '	' → logprob: -13.943279266357422
    10. 'is' → logprob: -13.943279266357422

Token 965: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012023169983876869
    2. ' self' → logprob: -9.125120162963867
    3. 'None' → logprob: -11.500120162963867
    4. '	self' → logprob: -14.375120162963867
    5. ' ' → logprob: -15.750120162963867
    6. '   ' → logprob: -16.250120162963867
    7. '(self' → logprob: -16.750120162963867
    8. 'p' → logprob: -17.375120162963867
    9. '=self' → logprob: -17.500120162963867
    10. ' None' → logprob: -17.875120162963867

Token 966: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20560376346111298
    2. 'and' → logprob: -2.080603837966919
    3. ':' → logprob: -2.830603837966919
    4. '.' → logprob: -7.20560359954834
    5. ':
' → logprob: -8.20560359954834
    6. '.left' → logprob: -8.20560359954834
    7. '   ' → logprob: -8.58060359954834
    8. ')' → logprob: -8.70560359954834
    9. ' ' → logprob: -8.70560359954834
    10. '	and' → logprob: -9.95560359954834

Token 967: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02976241149008274
    2. ' p' → logprob: -3.5297625064849854
    3. '   ' → logprob: -12.654762268066406
    4. ' ' → logprob: -12.654762268066406
    5. '       ' → logprob: -13.279762268066406
    6. 'self' → logprob: -13.529762268066406
    7. '	p' → logprob: -14.154762268066406
    8. '    ' → logprob: -14.529762268066406
    9. '  ' → logprob: -14.904762268066406
    10. '           ' → logprob: -15.404762268066406

Token 968: '.left' (ID: 15388)
  Prédit: '.right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0003793144423980266
    2. '.left' → logprob: -8.37537956237793
    3. '.' → logprob: -8.87537956237793
    4. 'right' → logprob: -11.75037956237793
    5. ' .' → logprob: -15.00037956237793
    6. '[right' → logprob: -15.37537956237793
    7. '	right' → logprob: -15.62537956237793
    8. '.r' → logprob: -15.62537956237793
    9. '.Right' → logprob: -16.62537956237793
    10. '.RIGHT' → logprob: -17.37537956237793

Token 969: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6478247046470642
    2. ' is' → logprob: -1.147824764251709
    3. ' !=' → logprob: -1.897824764251709
    4. 'is' → logprob: -5.022824764251709
    5. '==' → logprob: -5.897824764251709
    6. ' ==' → logprob: -8.39782428741455
    7. '!' → logprob: -11.39782428741455
    8. '<|end|>' → logprob: -12.27282428741455
    9. '=' → logprob: -12.39782428741455
    10. ' ' → logprob: -12.52282428741455

Token 970: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0024775585625320673
    2. ' None' → logprob: -6.002477645874023
    3. 'N' → logprob: -14.627477645874023
    4. '   ' → logprob: -14.627477645874023
    5. '_None' → logprob: -14.752477645874023
    6. ' ' → logprob: -15.002477645874023
    7. 'none' → logprob: -16.502477645874023
    8. '(None' → logprob: -16.627477645874023
    9. ',None' → logprob: -16.877477645874023
    10. 'No' → logprob: -17.002477645874023

Token 971: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39028969407081604
    2. ':
' → logprob: -1.1402896642684937
    3. '           ' → logprob: -6.140289783477783
    4. ':return' → logprob: -6.765289783477783
    5. '       ' → logprob: -10.140289306640625
    6. ' and' → logprob: -10.890289306640625
    7. ' :
' → logprob: -11.265289306640625
    8. ' :' → logprob: -11.265289306640625
    9. 'return' → logprob: -12.390289306640625
    10. ':
' → logprob: -12.515289306640625

Token 972: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8916078209877014
    2. ':' → logprob: -1.0166077613830566
    3. ':
' → logprob: -1.5166077613830566
    4. ':return' → logprob: -5.016607761383057
    5. 'return' → logprob: -7.016607761383057
    6. ' return' → logprob: -7.766607761383057
    7. ' :
' → logprob: -8.266608238220215
    8. '       ' → logprob: -8.391608238220215
    9. ' :' → logprob: -8.641608238220215
    10. '   ' → logprob: -10.766608238220215

Token 973: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012710237875580788
    2. ' return' → logprob: -4.512710094451904
    3. '           ' → logprob: -6.512710094451904
    4. '       ' → logprob: -9.262710571289062
    5. '
' → logprob: -10.637710571289062
    6. ':return' → logprob: -10.887710571289062
    7. '   ' → logprob: -11.512710571289062
    8. '	return' → logprob: -11.887710571289062
    9. ':
' → logprob: -12.262710571289062
    10. ':' → logprob: -12.512710571289062

Token 974: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.014163628220558167
    2. ' p' → logprob: -4.264163494110107
    3. '	p' → logprob: -16.264163970947266
    4. '   ' → logprob: -17.639163970947266
    5. ' ' → logprob: -18.264163970947266
    6. ''p' → logprob: -19.139163970947266
    7. '<p' → logprob: -19.639163970947266
    8. '(p' → logprob: -19.764163970947266
    9. ' ' → logprob: -19.764163970947266
    10. '[p' → logprob: -20.639163970947266

Token 975: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.9266199160483666e-05
    2. '.' → logprob: -11.000019073486328
    3. '.right' → logprob: -13.500019073486328
    4. 'left' → logprob: -14.125019073486328
    5. ' .' → logprob: -15.375019073486328
    6. '.le' → logprob: -16.250019073486328
    7. '.Left' → logprob: -17.375019073486328
    8. '[left' → logprob: -18.500019073486328
    9. '.l' → logprob: -18.625019073486328
    10. '	left' → logprob: -19.625019073486328

Token 976: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037292989436537027
    2. '
' → logprob: -6.253729343414307
    3. 'else' → logprob: -7.628729343414307
    4. '	' → logprob: -7.753729343414307
    5. 'return' → logprob: -8.253728866577148
    6. ' else' → logprob: -8.378728866577148
    7. '<|end|>' → logprob: -8.378728866577148
    8. '   ' → logprob: -10.003728866577148
    9. '.' → logprob: -10.503728866577148
    10. ' return' → logprob: -11.503728866577148

Token 977: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007518723141402006
    2. '	' → logprob: -5.382518768310547
    3. '
' → logprob: -6.132518768310547
    4. '   ' → logprob: -7.882518768310547
    5. '\
' → logprob: -9.632518768310547
    6. '           ' → logprob: -10.632518768310547
    7. '        
' → logprob: -10.632518768310547
    8. '.' → logprob: -10.757518768310547
    9. '' → logprob: -11.132518768310547
    10. ' ' → logprob: -11.257518768310547

Token 978: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01356733962893486
    2. 'else' → logprob: -5.5135674476623535
    3. ' else' → logprob: -5.7635674476623535
    4. ' if' → logprob: -5.8885674476623535
    5. 'if' (adapté à ' if') → logprob: -6.2635674476623535
    6. 'elif' → logprob: -7.5135674476623535
    7. ' elif' → logprob: -8.013566970825195
    8. '	' → logprob: -8.013566970825195
    9. '   ' → logprob: -8.388566970825195
    10. 'return' → logprob: -9.138566970825195

Token 979: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6326053738594055
    2. ' p' → logprob: -0.7576053738594055
    3. '(p' → logprob: -13.13260555267334
    4. '   ' → logprob: -13.75760555267334
    5. ' ' → logprob: -14.25760555267334
    6. ' ' → logprob: -14.38260555267334
    7. '	p' → logprob: -14.75760555267334
    8. 'not' → logprob: -15.00760555267334
    9. 'self' → logprob: -15.25760555267334
    10. '    ' → logprob: -15.50760555267334

Token 980: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -3.941161776310764e-05
    2. '.' → logprob: -10.625039100646973
    3. 'right' → logprob: -11.250039100646973
    4. '.left' → logprob: -14.000039100646973
    5. '	right' → logprob: -14.625039100646973
    6. ' .' → logprob: -14.875039100646973
    7. '.r' → logprob: -15.750039100646973
    8. '[right' → logprob: -16.75004005432129
    9. ' right' → logprob: -17.50004005432129
    10. '.Right' → logprob: -17.50004005432129

Token 981: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.00863016489893198
    2. '!=' → logprob: -4.758630275726318
    3. ' ' → logprob: -11.75862979888916
    4. ' is' → logprob: -11.88362979888916
    5. '!' → logprob: -14.88362979888916
    6. ' ' → logprob: -15.88362979888916
    7. '()!=' → logprob: -16.008630752563477
    8. ' !' → logprob: -16.133630752563477
    9. 'is' → logprob: -16.883630752563477
    10. ')!=' → logprob: -17.133630752563477

Token 982: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0072098602540791035
    2. ' self' → logprob: -5.007209777832031
    3. 'None' → logprob: -7.632209777832031
    4. ' None' → logprob: -11.632209777832031
    5. '	self' → logprob: -15.007209777832031
    6. '(self' → logprob: -15.382209777832031
    7. ' ' → logprob: -16.25720977783203
    8. '[self' → logprob: -16.75720977783203
    9. 'sel' → logprob: -17.00720977783203
    10. 'none' → logprob: -17.25720977783203

Token 983: ' and' (ID: 326)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.04369117319583893
    2. '!=' → logprob: -3.1686911582946777
    3. ' is' → logprob: -7.543691158294678
    4. ' and' → logprob: -9.293691635131836
    5. 'and' → logprob: -10.168691635131836
    6. ' ' → logprob: -10.918691635131836
    7. ':' → logprob: -12.668691635131836
    8. '!' → logprob: -13.043691635131836
    9. ' not' → logprob: -13.293691635131836
    10. ' ==' → logprob: -13.793691635131836

Token 984: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.25194093585014343
    2. 'p' → logprob: -1.5019409656524658
    3. 'None' → logprob: -11.501940727233887
    4. ' None' → logprob: -13.751940727233887
    5. '	p' → logprob: -15.751940727233887
    6. ' ' → logprob: -16.001941680908203
    7. '(p' → logprob: -16.001941680908203
    8. ' ' → logprob: -16.251941680908203
    9. '       ' → logprob: -17.001941680908203
    10. '   ' → logprob: -17.251941680908203

Token 985: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0001975802006199956
    2. 'right' → logprob: -8.875197410583496
    3. '.' → logprob: -9.875197410583496
    4. '.left' → logprob: -12.250197410583496
    5. ' .' → logprob: -14.000197410583496
    6. 'p' → logprob: -16.000198364257812
    7. ' right' → logprob: -16.250198364257812
    8. '	right' → logprob: -16.250198364257812
    9. '[right' → logprob: -16.375198364257812
    10. '.Right' → logprob: -16.750198364257812

Token 986: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.20147950947284698
    2. '!=' → logprob: -1.7014795541763306
    3. ' is' → logprob: -9.7014799118042
    4. '()!=' → logprob: -13.4514799118042
    5. 'is' → logprob: -13.7014799118042
    6. ')!=' → logprob: -14.2014799118042
    7. '!=-' → logprob: -14.2014799118042
    8. ' ' → logprob: -15.0764799118042
    9. ' ' → logprob: -15.9514799118042
    10. '!' → logprob: -15.9514799118042

Token 987: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.002845294773578644
    2. ' None' → logprob: -6.502845287322998
    3. 'p' → logprob: -6.627845287322998
    4. ' p' → logprob: -11.252845764160156
    5. 'self' → logprob: -12.752845764160156
    6. 'not' → logprob: -14.002845764160156
    7. 'none' → logprob: -14.002845764160156
    8. 'N' → logprob: -14.627845764160156
    9. 'No' → logprob: -15.127845764160156
    10. '(None' → logprob: -15.502845764160156

Token 988: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04893286153674126
    2. ':
' → logprob: -3.4239327907562256
    3. '           ' → logprob: -4.673933029174805
    4. ':return' → logprob: -5.173933029174805
    5. '       ' → logprob: -9.798933029174805
    6. 'return' → logprob: -9.923933029174805
    7. '               ' → logprob: -11.048933029174805
    8. '):' → logprob: -11.298933029174805
    9. ' :' → logprob: -12.048933029174805
    10. ' return' → logprob: -12.048933029174805

Token 989: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006671638693660498
    2. 'return' → logprob: -7.375667095184326
    3. ' return' → logprob: -10.750667572021484
    4. '		' → logprob: -11.500667572021484
    5. '       ' → logprob: -12.375667572021484
    6. '	       ' → logprob: -13.375667572021484
    7. '   ' → logprob: -14.000667572021484
    8. ':return' → logprob: -14.250667572021484
    9. '	return' → logprob: -14.625667572021484
    10. '               ' → logprob: -14.750667572021484

Token 990: ' return' (ID: 622)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.020676301792263985
    2. ' p' → logprob: -3.895676374435425
    3. 'return' (adapté à ' return') → logprob: -9.270676612854004
    4. '           ' → logprob: -10.895676612854004
    5. '       ' → logprob: -11.270676612854004
    6. ' return' → logprob: -12.145676612854004
    7. '   ' → logprob: -13.145676612854004
    8. '	p' → logprob: -14.145676612854004
    9. ' ' → logprob: -15.520676612854004
    10. '               ' → logprob: -16.020675659179688

Token 991: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.029750604182481766
    2. ' p' → logprob: -3.5297505855560303
    3. '	p' → logprob: -15.90475082397461
    4. 'None' → logprob: -17.77975082397461
    5. ' ' → logprob: -18.02975082397461
    6. '   ' → logprob: -18.15475082397461
    7. '(p' → logprob: -18.77975082397461
    8. ' ' → logprob: -19.65475082397461
    9. '    ' → logprob: -20.02975082397461
    10. '       ' → logprob: -20.27975082397461

Token 992: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0002764710516203195
    2. '.' → logprob: -8.250276565551758
    3. '.left' → logprob: -11.625276565551758
    4. ' .' → logprob: -12.875276565551758
    5. 'right' → logprob: -13.250276565551758
    6. '.r' → logprob: -13.625276565551758
    7. '.
' → logprob: -15.750276565551758
    8. '.Right' → logprob: -15.875276565551758
    9. '	right' → logprob: -16.000276565551758
    10. '[right' → logprob: -16.125276565551758

Token 993: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8519148826599121
    2. '<|end|>' → logprob: -0.9769148826599121
    3. 'y' → logprob: -2.726914882659912
    4. '.' → logprob: -2.976914882659912
    5. '       ' → logprob: -3.851914882659912
    6. '.y' → logprob: -4.976914882659912
    7. ' ' → logprob: -5.101914882659912
    8. '   ' → logprob: -5.601914882659912
    9. '           ' → logprob: -5.976914882659912
    10. 'return' → logprob: -5.976914882659912

Token 994: 'def' (ID: 1314)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.8489916920661926
    2. '<|end|>' → logprob: -0.8489916920661926
    3. '       ' → logprob: -2.598991632461548
    4. '
' → logprob: -3.723991632461548
    5. ' y' → logprob: -4.348991870880127
    6. '   ' → logprob: -4.848991870880127
    7. ' ' → logprob: -4.973991870880127
    8. '           ' → logprob: -5.348991870880127
    9. '<|end|>' → logprob: -6.723991870880127
    10. '    ' → logprob: -6.723991870880127

Token 995: ' process' (ID: 2273)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0198148675262928
    2. ' None' → logprob: -4.894814968109131
    3. ' Node' → logprob: -5.894814968109131
    4. ' y' → logprob: -6.269814968109131
    5. '  ' → logprob: -6.269814968109131
    6. '_' → logprob: -7.144814968109131
    7. ' class' → logprob: -7.644814968109131
    8. '   ' → logprob: -8.019814491271973
    9. ' def' → logprob: -8.019814491271973
    10. 'n' → logprob: -8.019814491271973

Token 996: '_node' (ID: 11390)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22585943341255188
    2. '(' → logprob: -2.1008594036102295
    3. '_node' → logprob: -2.9758594036102295
    4. '(node' → logprob: -4.725859642028809
    5. '_(' → logprob: -4.975859642028809
    6. '_token' → logprob: -5.975859642028809
    7. '(_' → logprob: -6.600859642028809
    8. '_input' → logprob: -7.100859642028809
    9. '(Node' → logprob: -7.100859642028809
    10. '_nodes' → logprob: -7.225859642028809

Token 997: '_data' (ID: 3537)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.1303004026412964
    2. '(' → logprob: -2.130300521850586
    3. '(n' → logprob: -6.505300521850586
    4. '(self' → logprob: -7.130300521850586
    5. '(cls' → logprob: -8.130300521850586
    6. '(Node' → logprob: -9.005300521850586
    7. '(parent' → logprob: -9.255300521850586
    8. ':' → logprob: -9.255300521850586
    9. '(def' → logprob: -9.630300521850586
    10. ' (' → logprob: -9.755300521850586

Token 998: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.525373637676239
    2. '(data' → logprob: -1.4003736972808838
    3. '(' → logprob: -1.9003736972808838
    4. '():' → logprob: -5.150373458862305
    5. '(line' → logprob: -6.025373458862305
    6. '(n' → logprob: -6.900373458862305
    7. '(def' → logprob: -7.650373458862305
    8. '(name' → logprob: -7.775373458862305
    9. '(parent' → logprob: -8.025373458862305
    10. '(nodes' → logprob: -8.025373458862305

Token 999: '_data' (ID: 3537)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012811227701604366
    2. ',' → logprob: -4.387811183929443
    3. '_data' → logprob: -9.262811660766602
    4. ':' → logprob: -9.637811660766602
    5. '):
' → logprob: -9.887811660766602
    6. ')' → logprob: -10.762811660766602
    7. ',node' → logprob: -11.012811660766602
    8. 'data' → logprob: -11.137811660766602
    9. ' ):' → logprob: -12.012811660766602
    10. '   ' → logprob: -12.012811660766602

Token 1000: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002133013680577278
    2. ',' → logprob: -6.252132892608643
    3. ':' → logprob: -8.8771333694458
    4. ')' → logprob: -10.7521333694458
    5. '):
' → logprob: -11.3771333694458
    6. '_list' → logprob: -11.7521333694458
    7. '   ' → logprob: -11.8771333694458
    8. '[' → logprob: -12.0021333694458
    9. ' ):' → logprob: -13.1271333694458
    10. ':list' → logprob: -13.5021333694458

Token 1001: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01201095711439848
    2. 'nodes' → logprob: -5.1370110511779785
    3. ' nodes' → logprob: -6.7620110511779785
    4. ':' → logprob: -7.0120110511779785
    5. '	nodes' → logprob: -7.2620110511779785
    6. 'node' → logprob: -7.2620110511779785
    7. ' lines' → logprob: -8.01201057434082
    8. ',' → logprob: -8.38701057434082
    9. 'data' → logprob: -8.51201057434082
    10. 'keys' → logprob: -8.63701057434082

Token 1002: ' for' (ID: 395)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.8431998491287231
    2. 'root' → logprob: -1.2181998491287231
    3. 'node' → logprob: -2.4681997299194336
    4. '   ' → logprob: -2.7181997299194336
    5. 'result' → logprob: -3.2181997299194336
    6. ' nodes' → logprob: -3.3431997299194336
    7. 'if' → logprob: -4.593199729919434
    8. 'key' → logprob: -4.593199729919434
    9. ' root' → logprob: -5.093199729919434
    10. 'keys' → logprob: -5.218199729919434

Token 1003: ' inst' (ID: 1710)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.08349834382534027
    2. ' node' → logprob: -3.583498239517212
    3. 'key' → logprob: -3.833498239517212
    4. ' data' → logprob: -4.583498477935791
    5. ' i' → logprob: -5.208498477935791
    6. ' item' → logprob: -5.333498477935791
    7. 'node' → logprob: -5.333498477935791
    8. 'data' → logprob: -6.458498477935791
    9. 'item' → logprob: -6.583498477935791
    10. 'i' → logprob: -7.208498477935791

Token 1004: ' in' (ID: 306)
  Prédit: 'ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.07722225785255432
    2. 'ance' → logprob: -2.7022223472595215
    3. ' in' → logprob: -5.0772223472595215
    4. 'uction' → logprob: -8.327221870422363
    5. 'r' → logprob: -8.577221870422363
    6. 'n' → logprob: -8.702221870422363
    7. ' ' → logprob: -9.327221870422363
    8. '   ' → logprob: -9.452221870422363
    9. 'truction' → logprob: -9.452221870422363
    10. 'rance' → logprob: -10.077221870422363

Token 1005: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.014170682057738304
    2. ' node' → logprob: -4.2641706466674805
    3. '   ' → logprob: -12.38917064666748
    4. '[node' → logprob: -14.13917064666748
    5. 'range' → logprob: -14.51417064666748
    6. '	node' → logprob: -14.63917064666748
    7. '(node' → logprob: -14.76417064666748
    8. ' ' → logprob: -15.26417064666748
    9. 'Node' → logprob: -15.88917064666748
    10. 'user' → logprob: -16.139171600341797

Token 1006: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.00010366239439463243
    2. 's' → logprob: -9.375103950500488
    3. 'data' → logprob: -11.250103950500488
    4. '_' → logprob: -13.500103950500488
    5. '_list' → logprob: -13.625103950500488
    6. '_datas' → logprob: -14.625103950500488
    7. 'ation' → logprob: -14.750103950500488
    8. 'ations' → logprob: -15.125103950500488
    9. '._' → logprob: -15.375103950500488
    10. '   ' → logprob: -15.625103950500488

Token 1007: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08018330484628677
    2. '[' → logprob: -2.955183267593384
    3. '.' → logprob: -4.205183506011963
    4. '[:' → logprob: -6.205183506011963
    5. '[:]' → logprob: -6.205183506011963
    6. '['' → logprob: -6.330183506011963
    7. ',' → logprob: -6.830183506011963
    8. ' :' → logprob: -7.205183506011963
    9. '   ' → logprob: -7.455183506011963
    10. ':
' → logprob: -7.830183506011963

Token 1008: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006650242023169994
    2. '        ' → logprob: -6.006650447845459
    3. '    ' → logprob: -6.881650447845459
    4. '        
' → logprob: -6.881650447845459
    5. ',' → logprob: -7.006650447845459
    6. ' ' → logprob: -8.1316499710083
    7. '   ' → logprob: -8.5066499710083
    8. '      ' → logprob: -8.8816499710083
    9. '<|end|>' → logprob: -9.5066499710083
    10. '[' → logprob: -9.5066499710083

Token 1009: ' if' (ID: 538)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -1.0664364099502563
    2. ' if' → logprob: -1.8164364099502563
    3. ' key' → logprob: -2.191436290740967
    4. ' action' → logprob: -2.441436290740967
    5. 'z' → logprob: -2.566436290740967
    6. ' node' → logprob: -2.566436290740967
    7. ' op' → logprob: -3.441436290740967
    8. '       ' → logprob: -3.441436290740967
    9. 'node' → logprob: -4.316436290740967
    10. ' cls' → logprob: -4.441436290740967

Token 1010: ' inst' (ID: 1710)
  Prédit: 'inst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inst' → logprob: -0.09299284964799881
    2. ' inst' → logprob: -2.4679927825927734
    3. ' isinstance' → logprob: -5.842992782592773
    4. 'len' → logprob: -7.342992782592773
    5. ' len' → logprob: -8.092992782592773
    6. ' not' → logprob: -9.467992782592773
    7. 'not' → logprob: -10.717992782592773
    8. '(inst' → logprob: -10.967992782592773
    9. 'is' → logprob: -11.217992782592773
    10. ''' → logprob: -11.342992782592773

Token 1011: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05816950649023056
    2. '['' → logprob: -3.4331696033477783
    3. '.' → logprob: -4.183169364929199
    4. ' ==' → logprob: -5.308169364929199
    5. '.startswith' → logprob: -6.433169364929199
    6. ' .' → logprob: -6.558169364929199
    7. '==' → logprob: -7.683169364929199
    8. ' [' → logprob: -8.9331693649292
    9. '["' → logprob: -9.3081693649292
    10. ' ['' → logprob: -9.4331693649292

Token 1012: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0034266351722180843
    2. ' ' → logprob: -6.253426551818848
    3. ''' → logprob: -7.378426551818848
    4. '1' → logprob: -7.503426551818848
    5. '==' → logprob: -9.628426551818848
    6. '[' → logprob: -10.128426551818848
    7. ''s' → logprob: -10.378426551818848
    8. ':' → logprob: -10.378426551818848
    9. ']' → logprob: -10.503426551818848
    10. '2' → logprob: -10.753426551818848

Token 1013: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.055950116366147995
    2. ']==' → logprob: -3.555950164794922
    3. ' ]' → logprob: -4.305950164794922
    4. '[' → logprob: -5.430950164794922
    5. '==' → logprob: -5.555950164794922
    6. ' ==' → logprob: -6.180950164794922
    7. ']=='' → logprob: -6.305950164794922
    8. '][' → logprob: -10.430950164794922
    9. '   ' → logprob: -10.555950164794922
    10. '=='' → logprob: -10.805950164794922

Token 1014: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.43168145418167114
    2. '==' → logprob: -1.0566813945770264
    3. '=='' → logprob: -6.3066816329956055
    4. '=' → logprob: -7.1816816329956055
    5. '[' → logprob: -8.681681632995605
    6. ' =='' → logprob: -9.306681632995605
    7. '=="' → logprob: -9.806681632995605
    8. ' =' → logprob: -10.806681632995605
    9. ')' → logprob: -11.306681632995605
    10. ''' → logprob: -11.556681632995605

Token 1015: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03250705450773239
    2. ''I' → logprob: -3.6575069427490234
    3. ''A' → logprob: -6.282506942749023
    4. '"' → logprob: -6.782506942749023
    5. ''i' → logprob: -7.157506942749023
    6. 'I' → logprob: -7.532506942749023
    7. ''ins' → logprob: -7.657506942749023
    8. ' '' → logprob: -7.657506942749023
    9. ''U' → logprob: -8.532506942749023
    10. ''in' → logprob: -8.782506942749023

Token 1016: 'print' (ID: 1598)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.32882702350616455
    2. 'i' → logprob: -2.203826904296875
    3. 'I' → logprob: -2.453826904296875
    4. 'Insert' → logprob: -2.953826904296875
    5. ''' → logprob: -3.953826904296875
    6. 'N' → logprob: -5.578826904296875
    7. 'INSERT' → logprob: -6.078826904296875
    8. 'Node' → logprob: -6.453826904296875
    9. ''i' → logprob: -7.078826904296875
    10. ''I' → logprob: -7.453826904296875

Token 1017: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.12788407504558563
    2. ''' → logprob: -2.8778841495513916
    3. '':
' → logprob: -3.5028841495513916
    4. '_in' → logprob: -4.6278839111328125
    5. '_pre' → logprob: -5.0028839111328125
    6. '_' → logprob: -5.8778839111328125
    7. '_tree' → logprob: -5.8778839111328125
    8. '_type' → logprob: -6.3778839111328125
    9. '_s' → logprob: -6.3778839111328125
    10. '_depth' → logprob: -7.3778839111328125

Token 1018: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3747807741165161
    2. ':' → logprob: -1.6247807741165161
    3. ''' → logprob: -3.4997806549072266
    4. '       ' → logprob: -3.9997806549072266
    5. '('' → logprob: -4.624780654907227
    6. ':
' → logprob: -4.874780654907227
    7. '(node' → logprob: -5.124780654907227
    8. '(cls' → logprob: -5.249780654907227
    9. 'cls' → logprob: -5.249780654907227
    10. ' and' → logprob: -5.749780654907227

Token 1019: ' result' (ID: 1534)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6279119253158569
    2. 'Node' → logprob: -1.002911925315857
    3. 'node' → logprob: -2.8779120445251465
    4. 'cls' → logprob: -3.8779120445251465
    5. ' if' → logprob: -4.1279120445251465
    6. 'root' → logprob: -6.0029120445251465
    7. ' Node' → logprob: -6.2529120445251465
    8. ' node' → logprob: -7.1279120445251465
    9. 'print' → logprob: -7.8779120445251465
    10. ' cls' → logprob: -8.252911567687988

Token 1020: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4661029577255249
    2. '=' → logprob: -1.216102957725525
    3. '(' → logprob: -2.8411030769348145
    4. '('' → logprob: -4.9661030769348145
    5. '_node' → logprob: -5.5911030769348145
    6. '(node' → logprob: -5.5911030769348145
    7. ',' → logprob: -6.7161030769348145
    8. '   ' → logprob: -7.5911030769348145
    9. '=node' → logprob: -8.091102600097656
    10. '_' → logprob: -8.591102600097656

Token 1021: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.01015822310000658
    2. 'inst' → logprob: -4.635158061981201
    3. 'get' → logprob: -9.01015853881836
    4. 'node' → logprob: -9.13515853881836
    5. ' Node' → logprob: -9.26015853881836
    6. 'None' → logprob: -10.76015853881836
    7. 'process' → logprob: -11.01015853881836
    8. 'find' → logprob: -11.88515853881836
    9. ' getattr' → logprob: -12.26015853881836
    10. 'cls' → logprob: -12.38515853881836

Token 1022: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -0.11174999177455902
    2. '.find' → logprob: -2.3617498874664307
    3. '.print' → logprob: -5.61175012588501
    4. '.' → logprob: -5.98675012588501
    5. 'walk' → logprob: -6.11175012588501
    6. '.root' → logprob: -6.36175012588501
    7. '.insert' → logprob: -7.48675012588501
    8. 'root' → logprob: -8.111749649047852
    9. '.get' → logprob: -8.236749649047852
    10. '.findall' → logprob: -9.611749649047852

Token 1023: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.6933056712150574
    2. '_pre' → logprob: -0.6933056712150574
    3. 'pre' → logprob: -9.443305969238281
    4. '_' → logprob: -9.693305969238281
    5. 'in' → logprob: -11.068305969238281
    6. '_print' → logprob: -14.443305969238281
    7. '_process' → logprob: -15.193305969238281
    8. '_post' → logprob: -15.318305969238281
    9. '_per' → logprob: -15.818305969238281
    10. 'Pre' → logprob: -16.44330596923828

Token 1024: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.9361264946837764e-07
    2. 'node' → logprob: -15.875
    3. '_order' → logprob: -18.875
    4. '```' → logprob: -19.5
    5. 'in' → logprob: -20.0
    6. '(order' → logprob: -20.125
    7. 'orde' → logprob: -20.375
    8. 'print' → logprob: -20.625
    9. 'pre' → logprob: -20.875
    10. 'o' → logprob: -21.0

Token 1025: '(Node' (ID: 43019)
  Prédit: '(Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Node' → logprob: -0.00024287392443511635
    2. '(node' → logprob: -8.875243186950684
    3. '(' → logprob: -9.250243186950684
    4. '(N' → logprob: -13.000243186950684
    5. 'Node' → logprob: -13.500243186950684
    6. '(Note' → logprob: -14.375243186950684
    7. '(
' → logprob: -14.875243186950684
    8. '((' → logprob: -15.000243186950684
    9. ' (' → logprob: -15.000243186950684
    10. '(None' → logprob: -15.125243186950684

Token 1026: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0008791850414127111
    2. 'root' → logprob: -7.125879287719727
    3. '.' → logprob: -9.625879287719727
    4. '.find' → logprob: -12.000879287719727
    5. '[root' → logprob: -14.250879287719727
    6. ' root' → logprob: -14.750879287719727
    7. ' .' → logprob: -15.125879287719727
    8. '.get' → logprob: -15.250879287719727
    9. '.ro' → logprob: -15.625879287719727
    10. '(root' → logprob: -15.750879287719727

Token 1027: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001183204003609717
    2. ')
' → logprob: -6.751183032989502
    3. ' )' → logprob: -11.87618350982666
    4. '))' → logprob: -13.25118350982666
    5. ')

' → logprob: -13.62618350982666
    6. ');' → logprob: -14.37618350982666
    7. '       ' → logprob: -14.50118350982666
    8. ')
' → logprob: -14.50118350982666
    9. '           ' → logprob: -15.50118350982666
    10. '
' → logprob: -15.62618350982666

Token 1028: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14705616235733032
    2. '       ' → logprob: -3.2720561027526855
    3. '<|end|>' → logprob: -3.3970561027526855
    4. ')' → logprob: -3.5220561027526855
    5. '()' → logprob: -4.5220561027526855
    6. '\n' → logprob: -5.1470561027526855
    7. '(' → logprob: -5.2720561027526855
    8. '()
' → logprob: -5.3970561027526855
    9. '' → logprob: -5.8970561027526855
    10. '(
' → logprob: -7.0220561027526855

Token 1029: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8526254296302795
    2. '\n' → logprob: -1.1026253700256348
    3. 'print' (adapté à ' print') → logprob: -2.4776253700256348
    4. '
' → logprob: -2.6026253700256348
    5. '           ' → logprob: -3.4776253700256348
    6. '<|end|>' → logprob: -4.352625370025635
    7. 'return' → logprob: -4.477625370025635
    8. 'elif' → logprob: -4.977625370025635
    9. 'continue' → logprob: -5.352625370025635
    10. '' → logprob: -5.352625370025635

Token 1030: '('')
' (ID: 74203)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -9.591415437171236e-05
    2. '()
' → logprob: -10.000096321105957
    3. '('' → logprob: -10.000096321105957
    4. '("")' → logprob: -13.000096321105957
    5. '(' → logprob: -13.375096321105957
    6. ' ()' → logprob: -13.625096321105957
    7. '()

' → logprob: -17.37509536743164
    8. '（）' → logprob: -17.87509536743164
    9. '()
' → logprob: -18.50009536743164
    10. '().' → logprob: -19.00009536743164

Token 1031: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006394300144165754
    2. '<|end|>' → logprob: -5.256394386291504
    3. '   ' → logprob: -8.006394386291504
    4. '
' → logprob: -8.006394386291504
    5. ' ' → logprob: -9.506394386291504
    6. '	' → logprob: -9.756394386291504
    7. '<|end|>' → logprob: -9.756394386291504
    8. 'elif' → logprob: -9.881394386291504
    9. ' elif' → logprob: -10.006394386291504
    10. ')' → logprob: -10.256394386291504

Token 1032: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018953394144773483
    2. '<|end|>' → logprob: -4.018953323364258
    3. ' elif' → logprob: -8.143953323364258
    4. 'elif' → logprob: -8.268953323364258
    5. ' continue' → logprob: -9.268953323364258
    6. '<|end|>' → logprob: -9.768953323364258
    7. 'continue' → logprob: -10.268953323364258
    8. '           ' → logprob: -10.268953323364258
    9. '.' → logprob: -12.268953323364258
    10. '	elif' → logprob: -12.268953323364258

Token 1033: ' print' (ID: 2123)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6690996885299683
    2. '       ' → logprob: -0.7940996885299683
    3. 'continue' → logprob: -3.419099807739258
    4. ' elif' → logprob: -7.044099807739258
    5. '<|end|>' → logprob: -7.419099807739258
    6. ' continue' → logprob: -7.669099807739258
    7. 'return' → logprob: -7.669099807739258
    8. 'else' → logprob: -8.419099807739258
    9. '           ' → logprob: -9.169099807739258
    10. '   ' → logprob: -9.544099807739258

Token 1034: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09285184741020203
    2. '('' → logprob: -3.4678518772125244
    3. 'result' → logprob: -3.5928518772125244
    4. '(' → logprob: -4.717851638793945
    5. '()
' → logprob: -4.717851638793945
    6. '(result' → logprob: -4.842851638793945
    7. '(inst' → logprob: -6.842851638793945
    8. '(None' → logprob: -7.592851638793945
    9. '("")' → logprob: -7.842851638793945
    10. '(node' → logprob: -8.092851638793945

Token 1035: ' {' (ID: 354)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.043904997408390045
    2. 'result' → logprob: -4.418904781341553
    3. '       ' → logprob: -5.168904781341553
    4. ')' → logprob: -5.668904781341553
    5. 'None' → logprob: -5.668904781341553
    6. '   ' → logprob: -5.918904781341553
    7. '           ' → logprob: -5.918904781341553
    8. '(result' → logprob: -6.043904781341553
    9. '',' → logprob: -6.168904781341553
    10. '('' → logprob: -6.418904781341553

Token 1036: '0' (ID: 15)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.9620108008384705
    2. '0' → logprob: -1.5870108604431152
    3. '}' → logprob: -2.3370108604431152
    4. 'inst' → logprob: -2.4620108604431152
    5. '}')' → logprob: -2.7120108604431152
    6. 'result' → logprob: -3.0870108604431152
    7. '')' → logprob: -3.8370108604431152
    8. 'None' → logprob: -4.212010860443115
    9. '           ' → logprob: -4.337010860443115
    10. 'root' → logprob: -4.462010860443115

Token 1037: '}'.' (ID: 58336)
  Prédit: '}'.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}'.' → logprob: -0.0026606738101691008
    2. ''.' → logprob: -6.377660751342773
    3. '}' → logprob: -8.002660751342773
    4. '}')' → logprob: -8.377660751342773
    5. ')' → logprob: -9.002660751342773
    6. '}.' → logprob: -9.127660751342773
    7. '.format' → logprob: -10.002660751342773
    8. '}".' → logprob: -10.127660751342773
    9. '})' → logprob: -10.377660751342773
    10. '')' → logprob: -11.127660751342773

Token 1038: 'format' (ID: 4078)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25990456342697144
    2. 'format' → logprob: -1.6349046230316162
    3. '')' → logprob: -3.509904623031616
    4. '}' → logprob: -6.259904384613037
    5. '<|end|>' → logprob: -6.634904384613037
    6. '.format' → logprob: -8.384904861450195
    7. '')}' → logprob: -9.759904861450195
    8. '0' → logprob: -10.009904861450195
    9. '}')' → logprob: -10.009904861450195
    10. ')}' → logprob: -10.134904861450195

Token 1039: '('' (ID: 706)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.20554658770561218
    2. 'inst' → logprob: -1.9555466175079346
    3. 'node' → logprob: -3.4555466175079346
    4. ')' → logprob: -5.0805463790893555
    5. '(Node' → logprob: -5.9555463790893555
    6. '(inst' → logprob: -6.8305463790893555
    7. '(node' → logprob: -6.9555463790893555
    8. '')' → logprob: -8.330546379089355
    9. '(' → logprob: -8.455546379089355
    10. 'None' → logprob: -8.705546379089355

Token 1040: ' '.' (ID: 12662)
  Prédit: 'inst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inst' → logprob: -0.25806155800819397
    2. 'None' → logprob: -1.7580615282058716
    3. 'Node' → logprob: -4.008061408996582
    4. 'root' → logprob: -4.383061408996582
    5. 'result' → logprob: -4.508061408996582
    6. ')' → logprob: -6.133061408996582
    7. 'end' → logprob: -6.508061408996582
    8. ''' → logprob: -6.508061408996582
    9. ''))' → logprob: -6.508061408996582
    10. '')' → logprob: -6.758061408996582

Token 1041: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.24684329330921173
    2. ''.' → logprob: -1.7468433380126953
    3. '.join' → logprob: -3.6218433380126953
    4. ')' → logprob: -5.121843338012695
    5. '')' → logprob: -5.496843338012695
    6. 'end' → logprob: -5.621843338012695
    7. '.' → logprob: -6.621843338012695
    8. 'node' → logprob: -7.621843338012695
    9. ''' → logprob: -7.621843338012695
    10. 'None' → logprob: -8.121843338012695

Token 1042: '(map' (ID: 16946)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.139033555984497
    2. '[str' → logprob: -1.389033555984497
    3. 'map' → logprob: -2.014033555984497
    4. 'inst' → logprob: -2.514033555984497
    5. '(inst' → logprob: -2.639033555984497
    6. '(map' → logprob: -3.139033555984497
    7. '([' → logprob: -3.514033555984497
    8. '[node' → logprob: -3.889033555984497
    9. '[i' → logprob: -4.639033317565918
    10. 'list' → logprob: -4.889033317565918

Token 1043: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.01022464968264103
    2. 'str' → logprob: -4.63522481918335
    3. '(lambda' → logprob: -8.135224342346191
    4. '=str' → logprob: -9.385224342346191
    5. '[str' → logprob: -9.760224342346191
    6. 'lambda' → logprob: -11.510224342346191
    7. 'inst' → logprob: -12.135224342346191
    8. ' str' → logprob: -12.260224342346191
    9. '(' → logprob: -13.260224342346191
    10. ',str' → logprob: -13.260224342346191

Token 1044: ',' (ID: 11)
  Prédit: '(inst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inst' → logprob: -0.07819197326898575
    2. '(result' → logprob: -3.2031919956207275
    3. '(node' → logprob: -3.7031919956207275
    4. ',' → logprob: -5.203191757202148
    5. '([' → logprob: -6.453191757202148
    6. '(' → logprob: -6.828191757202148
    7. ',result' → logprob: -7.328191757202148
    8. ')))' → logprob: -8.578191757202148
    9. ',node' → logprob: -8.703191757202148
    10. '(
' → logprob: -8.953191757202148

Token 1045: ' flatten' (ID: 61445)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.401711106300354
    2. 'inst' → logprob: -1.276711106300354
    3. '[' → logprob: -3.4017109870910645
    4. '[]' → logprob: -5.0267109870910645
    5. '[result' → logprob: -5.2767109870910645
    6. 'Node' → logprob: -6.1517109870910645
    7. 'node' → logprob: -6.4017109870910645
    8. '[node' → logprob: -6.7767109870910645
    9. ' result' → logprob: -7.4017109870910645
    10. ' [' → logprob: -8.526711463928223

Token 1046: '(result' (ID: 8111)
  Prédit: '(inst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inst' → logprob: -0.75992751121521
    2. 'result' → logprob: -1.38492751121521
    3. '(result' → logprob: -1.38492751121521
    4. 'inst' → logprob: -3.50992751121521
    5. '([' → logprob: -7.759927749633789
    6. '[' → logprob: -7.759927749633789
    7. '(node' → logprob: -8.384927749633789
    8. '))' → logprob: -8.884927749633789
    9. '[result' → logprob: -8.884927749633789
    10. '(' → logprob: -9.634927749633789

Token 1047: ')))))
' (ID: 190633)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.13001668453216553
    2. ')))' → logprob: -2.880016803741455
    3. '))))
' → logprob: -3.005016803741455
    4. '))' → logprob: -4.880016803741455
    5. ')))))
' → logprob: -5.380016803741455
    6. '[' → logprob: -6.505016803741455
    7. ')' → logprob: -6.505016803741455
    8. ')))
' → logprob: -8.380016326904297
    9. '))))

' → logprob: -8.755016326904297
    10. '   ' → logprob: -9.505016326904297

Token 1048: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11167356371879578
    2. ')' → logprob: -2.986673593521118
    3. '<|end|>' → logprob: -3.361673593521118
    4. '   ' → logprob: -4.986673355102539
    5. '[' → logprob: -5.861673355102539
    6. '.' → logprob: -6.736673355102539
    7. 'elif' → logprob: -6.861673355102539
    8. '
' → logprob: -6.986673355102539
    9. '<|end|>' → logprob: -6.986673355102539
    10. ' ' → logprob: -7.236673355102539

Token 1049: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4108625054359436
    2. '<|end|>' → logprob: -1.2858624458312988
    3. '   ' → logprob: -3.285862445831299
    4. '<|end|>' → logprob: -5.035862445831299
    5. ')' → logprob: -5.285862445831299
    6. '
' → logprob: -5.285862445831299
    7. ' ' → logprob: -6.535862445831299
    8. 'elif' → logprob: -7.285862445831299
    9. '           ' → logprob: -7.535862445831299
    10. '\n' → logprob: -7.535862445831299

Token 1050: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1051: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.39204782247543335
    2. 'None' → logprob: -1.1420478820800781
    3. '[]' → logprob: -5.392047882080078
    4. '[' → logprob: -8.642047882080078
    5. ' None' → logprob: -8.767047882080078
    6. '[]
' → logprob: -9.017047882080078
    7. ' Node' → logprob: -9.767047882080078
    8. 'node' → logprob: -10.767047882080078
    9. ' []' → logprob: -11.267047882080078
    10. 'process' → logprob: -11.267047882080078

Token 1052: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -0.011556429788470268
    2. '.root' → logprob: -4.761556625366211
    3. 'walk' → logprob: -6.011556625366211
    4. '.get' → logprob: -8.636556625366211
    5. 'root' → logprob: -9.136556625366211
    6. '_walk' → logprob: -9.761556625366211
    7. '.' → logprob: -10.386556625366211
    8. '.pre' → logprob: -10.761556625366211
    9. '.print' → logprob: -11.136556625366211
    10. '.insert' → logprob: -11.386556625366211

Token 1053: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -0.004117938689887524
    2. '_in' → logprob: -5.504117965698242
    3. 'pre' → logprob: -10.254117965698242
    4. '_post' → logprob: -12.629117965698242
    5. 'in' → logprob: -14.754117965698242
    6. 'Pre' → logprob: -15.129117965698242
    7. ' preorder' → logprob: -16.254117965698242
    8. '_' → logprob: -16.754117965698242
    9. '_per' → logprob: -17.629117965698242
    10. '_PRE' → logprob: -17.754117965698242

Token 1054: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -6.392202976712724e-06
    2. '_order' → logprob: -12.000006675720215
    3. 'or' → logprob: -17.1250057220459
    4. 'node' → logprob: -18.5000057220459
    5. 'ord' → logprob: -18.6250057220459
    6. ' order' → logprob: -19.0000057220459
    7. 'ordre' → logprob: -19.0000057220459
    8. 'oder' → logprob: -19.1250057220459
    9. 'orde' → logprob: -19.2500057220459
    10. '_' → logprob: -19.2500057220459

Token 1055: '(Node' (ID: 43019)
  Prédit: '(Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Node' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -11.875008583068848
    3. '(node' → logprob: -13.250008583068848
    4. ' (' → logprob: -16.875009536743164
    5. 'Node' → logprob: -17.000009536743164
    6. '<Node' → logprob: -17.125009536743164
    7. '(None' → logprob: -17.375009536743164
    8. '(
' → logprob: -17.625009536743164
    9. '(N' → logprob: -17.625009536743164
    10. '.Node' → logprob: -18.000009536743164

Token 1056: '.root' (ID: 25375)
  Prédit: '(Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Node' → logprob: -0.18988792598247528
    2. ')' → logprob: -1.9398878812789917
    3. '(' → logprob: -4.189888000488281
    4. '.Node' → logprob: -4.689888000488281
    5. '.root' → logprob: -6.564888000488281
    6. '.node' → logprob: -7.064888000488281
    7. 'root' → logprob: -7.314888000488281
    8. '(node' → logprob: -7.314888000488281
    9. '
' → logprob: -8.314888000488281
    10. '(None' → logprob: -8.689888000488281

Token 1057: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009398083784617484
    2. '(Node' → logprob: -7.000939846038818
    3. ')
' → logprob: -11.25093936920166
    4. ')(' → logprob: -11.75093936920166
    5. '(node' → logprob: -12.75093936920166
    6. '))' → logprob: -14.00093936920166
    7. ',' → logprob: -14.12593936920166
    8. '(' → logprob: -14.37593936920166
    9. '.Node' → logprob: -14.62593936920166
    10. ' )' → logprob: -15.00093936920166

Token 1058: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1059: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.141186450899113e-05
    2. ' print' → logprob: -11.625020980834961
    3. '
' → logprob: -12.125020980834961
    4. '(print' → logprob: -12.125020980834961
    5. '(' → logprob: -14.875020980834961
    6. '()
' → logprob: -15.000020980834961
    7. '.print' → logprob: -15.375020980834961
    8. '(Node' → logprob: -15.875020980834961
    9. '#print' → logprob: -16.37502098083496
    10. '	print' → logprob: -16.62502098083496

Token 1060: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.684157026233152e-05
    2. ' print' → logprob: -9.500077247619629
    3. '           ' → logprob: -14.500077247619629
    4. '
' → logprob: -14.625077247619629
    5. '(print' → logprob: -15.250077247619629
    6. '.print' → logprob: -15.875077247619629
    7. ')' → logprob: -15.875077247619629
    8. '#print' → logprob: -16.125076293945312
    9. '       ' → logprob: -16.875076293945312
    10. '   ' → logprob: -17.000076293945312

Token 1061: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0002445317804813385
    2. '('')
' → logprob: -8.500244140625
    3. '(' → logprob: -10.500244140625
    4. '("")' → logprob: -12.250244140625
    5. '('\' → logprob: -12.375244140625
    6. '()' → logprob: -13.375244140625
    7. '''' → logprob: -13.500244140625
    8. '('').' → logprob: -14.750244140625
    9. '('',' → logprob: -14.875244140625
    10. '(
' → logprob: -15.625244140625

Token 1062: ' {' (ID: 354)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.9048922061920166
    2. '')' → logprob: -0.9048922061920166
    3. ')' → logprob: -2.1548922061920166
    4. ''' → logprob: -2.9048922061920166
    5. '''' → logprob: -4.6548919677734375
    6. ' '')' → logprob: -5.1548919677734375
    7. '('')
' → logprob: -5.9048919677734375
    8. '('\' → logprob: -8.404891967773438
    9. '<|end|>' → logprob: -8.404891967773438
    10. '')
' → logprob: -8.654891967773438

Token 1063: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007243485888466239
    2. 'Node' → logprob: -8.625724792480469
    3. ')' → logprob: -8.875724792480469
    4. ' ' → logprob: -9.125724792480469
    5. '}' → logprob: -9.375724792480469
    6. 'root' → logprob: -9.500724792480469
    7. '
' → logprob: -10.125724792480469
    8. '')' → logprob: -10.750724792480469
    9. '{' → logprob: -11.625724792480469
    10. ' Node' → logprob: -11.750724792480469

Token 1064: '}'.' (ID: 58336)
  Prédit: '}'.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}'.' → logprob: -0.11425379663705826
    2. ')' → logprob: -2.3642537593841553
    3. ''.' → logprob: -5.614253997802734
    4. ')}' → logprob: -5.739253997802734
    5. '')' → logprob: -6.114253997802734
    6. '}' → logprob: -6.239253997802734
    7. '}')' → logprob: -6.364253997802734
    8. ')').' → logprob: -7.739253997802734
    9. ')}}' → logprob: -7.989253997802734
    10. '})' → logprob: -9.364253997802734

Token 1065: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.0007522129453718662
    2. ')' → logprob: -7.2507524490356445
    3. '')' → logprob: -10.875752449035645
    4. 'join' → logprob: -11.500752449035645
    5. ' format' → logprob: -12.250752449035645
    6. '(format' → logprob: -13.375752449035645
    7. 'form' → logprob: -13.750752449035645
    8. '))' → logprob: -14.000752449035645
    9. ')
' → logprob: -14.250752449035645
    10. '}' → logprob: -14.750752449035645

Token 1066: '('' (ID: 706)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.6345221996307373
    2. '(Node' → logprob: -1.2595221996307373
    3. ''' → logprob: -2.5095221996307373
    4. '('' → logprob: -3.0095221996307373
    5. '(node' → logprob: -3.3845221996307373
    6. 'node' → logprob: -4.634522438049316
    7. 'flatten' → logprob: -6.134522438049316
    8. ')' → logprob: -6.259522438049316
    9. '')' → logprob: -6.384522438049316
    10. 'result' → logprob: -6.384522438049316

Token 1067: ' '.' (ID: 12662)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.8151466250419617
    2. ''' → logprob: -1.5651466846466064
    3. 'node' → logprob: -2.6901466846466064
    4. 'result' → logprob: -2.9401466846466064
    5. '')' → logprob: -3.4401466846466064
    6. ')' → logprob: -3.6901466846466064
    7. '(Node' → logprob: -3.9401466846466064
    8. 'n' → logprob: -4.065146446228027
    9. ' Node' → logprob: -4.065146446228027
    10. ''))' → logprob: -4.065146446228027

Token 1068: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.15731950104236603
    2. 'format' → logprob: -2.0323195457458496
    3. ')' → logprob: -4.78231954574585
    4. '')' → logprob: -6.78231954574585
    5. 'node' → logprob: -6.78231954574585
    6. 'result' → logprob: -6.78231954574585
    7. 'str' → logprob: -7.40731954574585
    8. 'flatten' → logprob: -7.65731954574585
    9. 'root' → logprob: -8.282319068908691
    10. 'split' → logprob: -8.407319068908691

Token 1069: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0016182884573936462
    2. 'map' → logprob: -6.876618385314941
    3. '(list' → logprob: -8.501618385314941
    4. '(result' → logprob: -8.876618385314941
    5. '(str' → logprob: -9.126618385314941
    6. ')' → logprob: -9.876618385314941
    7. '(flat' → logprob: -10.251618385314941
    8. '(' → logprob: -10.501618385314941
    9. '(node' → logprob: -12.376618385314941
    10. '(Node' → logprob: -13.001618385314941

Token 1070: '(str' (ID: 7946)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0036234736908227205
    2. '(str' → logprob: -5.6286234855651855
    3. ' str' → logprob: -12.003623008728027
    4. 'def' → logprob: -12.503623008728027
    5. '
' → logprob: -12.628623008728027
    6. '[str' → logprob: -12.753623008728027
    7. 'list' → logprob: -13.003623008728027
    8. ')' → logprob: -14.003623008728027
    9. 'result' → logprob: -14.378623008728027
    10. '   ' → logprob: -14.503623008728027

Token 1071: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31338396668434143
    2. '(result' → logprob: -1.938383936882019
    3. '(' → logprob: -3.0633840560913086
    4. ',result' → logprob: -3.0633840560913086
    5. '(Node' → logprob: -5.063384056091309
    6. '(node' → logprob: -5.188384056091309
    7. '(
' → logprob: -5.438384056091309
    8. ')))' → logprob: -5.938384056091309
    9. '(flat' → logprob: -6.063384056091309
    10. '(root' → logprob: -6.063384056091309

Token 1072: ' flatten' (ID: 61445)
  Prédit: 'flatten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flatten' → logprob: -0.13755358755588531
    2. 'Node' → logprob: -2.6375536918640137
    3. 'result' → logprob: -3.0125536918640137
    4. ' flatten' → logprob: -5.512553691864014
    5. '[' → logprob: -6.637553691864014
    6. '(Node' → logprob: -7.262553691864014
    7. 'flat' → logprob: -8.262553215026855
    8. 'map' → logprob: -8.637553215026855
    9. ' Node' → logprob: -9.012553215026855
    10. 'range' → logprob: -9.012553215026855

Token 1073: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.41104668378829956
    2. '(Node' → logprob: -1.6610467433929443
    3. 'result' → logprob: -2.1610467433929443
    4. ')))' → logprob: -4.036046504974365
    5. '))' → logprob: -5.786046504974365
    6. ')' → logprob: -5.786046504974365
    7. '(root' → logprob: -6.286046504974365
    8. ')))
' → logprob: -7.161046504974365
    9. 'Node' → logprob: -7.411046504974365
    10. 's' → logprob: -7.536046504974365

Token 1074: ')))))
' (ID: 190633)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.23939678072929382
    2. ')))' → logprob: -1.7393968105316162
    3. '))))
' → logprob: -3.489396810531616
    4. ')' → logprob: -5.864396572113037
    5. '))' → logprob: -6.364396572113037
    6. ')))
' → logprob: -6.614396572113037
    7. ')))))
' → logprob: -7.239396572113037
    8. '))))

' → logprob: -9.989397048950195
    9. '')))' → logprob: -10.739397048950195
    10. '   ' → logprob: -11.239397048950195

Token 1075: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.060007479041814804
    2. ')
' → logprob: -3.6850075721740723
    3. '<|end|>' → logprob: -4.560007572174072
    4. '       ' → logprob: -4.810007572174072
    5. '
' → logprob: -5.060007572174072
    6. '')' → logprob: -5.435007572174072
    7. '()' → logprob: -6.935007572174072
    8. '   ' → logprob: -7.310007572174072
    9. '<|end|>' → logprob: -8.435007095336914
    10. '           ' → logprob: -8.435007095336914

Token 1076: ' print' (ID: 2123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10633115470409393
    2. '       ' → logprob: -3.1063311100006104
    3. '<|end|>' → logprob: -3.6063311100006104
    4. ')
' → logprob: -4.2313313484191895
    5. '   ' → logprob: -5.2313313484191895
    6. '')' → logprob: -5.8563313484191895
    7. 'return' → logprob: -7.1063313484191895
    8. '
' → logprob: -7.2313313484191895
    9. '           ' → logprob: -7.4813313484191895
    10. ' ' → logprob: -7.4813313484191895

Token 1077: '('')
' (ID: 74203)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0032037352211773396
    2. '()' → logprob: -5.753203868865967
    3. '('')
' → logprob: -11.253203392028809
    4. '("")' → logprob: -11.753203392028809
    5. '(' → logprob: -12.878203392028809
    6. '('\' → logprob: -13.253203392028809
    7. '()
' → logprob: -14.878203392028809
    8. '''' → logprob: -15.128203392028809
    9. '('').' → logprob: -16.128204345703125
    10. '('',' → logprob: -16.253204345703125

Token 1078: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0645346641540527
    2. '<|end|>' → logprob: -1.1895346641540527
    3. ' ' → logprob: -2.4395346641540527
    4. 'y' → logprob: -2.8145346641540527
    5. 'n' → logprob: -3.1895346641540527
    6. 'x' → logprob: -3.4395346641540527
    7. '   ' → logprob: -3.5645346641540527
    8. ')' → logprob: -4.564534664154053
    9. '[' → logprob: -5.314534664154053
    10. '        ' → logprob: -5.314534664154053

Token 1079: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13787664473056793
    2. '   ' → logprob: -3.6378767490386963
    3. '<|end|>' → logprob: -3.6378767490386963
    4. '[' → logprob: -4.012876510620117
    5. ')' → logprob: -4.262876510620117
    6. 'x' → logprob: -5.512876510620117
    7. ' ' → logprob: -5.637876510620117
    8. '_' → logprob: -5.762876510620117
    9. '
' → logprob: -5.887876510620117
    10. 'elif' (adapté à ' elif') → logprob: -6.137876510620117

Token 1080: ' inst' (ID: 1710)
  Prédit: 'inst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inst' → logprob: -0.20145592093467712
    2. ' inst' → logprob: -1.7014559507369995
    3. 'len' → logprob: -10.576456069946289
    4. '(inst' → logprob: -11.826456069946289
    5. '	inst' → logprob: -12.201456069946289
    6. ' len' → logprob: -13.826456069946289
    7. 'ins' → logprob: -13.951456069946289
    8. '[' → logprob: -14.076456069946289
    9. 'type' → logprob: -14.201456069946289
    10. ' isinstance' → logprob: -15.326456069946289

Token 1081: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006591808632947505
    2. ' ==' → logprob: -8.125658988952637
    3. '==' → logprob: -8.375658988952637
    4. ' [' → logprob: -10.250658988952637
    5. '[
' → logprob: -10.250658988952637
    6. '['' → logprob: -10.375658988952637
    7. '.' → logprob: -11.500658988952637
    8. ''' → logprob: -13.000658988952637
    9. '=' → logprob: -13.125658988952637
    10. ' .' → logprob: -13.250658988952637

Token 1082: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010632978519424796
    2. '[' → logprob: -7.376063346862793
    3. ''' → logprob: -8.001063346862793
    4. '1' → logprob: -10.251063346862793
    5. ' ' → logprob: -11.001063346862793
    6. ''[' → logprob: -11.126063346862793
    7. ''s' → logprob: -11.501063346862793
    8. '=' → logprob: -12.001063346862793
    9. '==' → logprob: -12.251063346862793
    10. '
' → logprob: -12.626063346862793

Token 1083: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5430065393447876
    2. '==' → logprob: -1.6680065393447876
    3. ']==' → logprob: -2.293006420135498
    4. ' ==' → logprob: -2.543006420135498
    5. ']' → logprob: -3.168006420135498
    6. '][' → logprob: -5.918006420135498
    7. ']=='' → logprob: -6.293006420135498
    8. '=' → logprob: -6.668006420135498
    9. '=='' → logprob: -7.668006420135498
    10. ')==' → logprob: -7.918006420135498

Token 1084: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2505422830581665
    2. ' ==' → logprob: -1.6255422830581665
    3. '[' → logprob: -3.750542163848877
    4. '=='' → logprob: -6.750542163848877
    5. '=' → logprob: -10.000542640686035
    6. '['' → logprob: -10.375542640686035
    7. ' =='' → logprob: -11.000542640686035
    8. '==
' → logprob: -11.500542640686035
    9. ']==' → logprob: -11.875542640686035
    10. ' =' → logprob: -12.250542640686035

Token 1085: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013031631708145142
    2. ' '' → logprob: -4.638031482696533
    3. ''ins' → logprob: -6.263031482696533
    4. ''d' → logprob: -7.388031482696533
    5. ''s' → logprob: -8.763031959533691
    6. ''in' → logprob: -9.138031959533691
    7. ''instant' → logprob: -9.138031959533691
    8. '"' → logprob: -9.388031959533691
    9. ''z' → logprob: -9.888031959533691
    10. '('' → logprob: -10.138031959533691

Token 1086: 'insert' (ID: 14813)
  Prédit: 'insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.005860059056431055
    2. 'delete' → logprob: -5.505859851837158
    3. 'print' → logprob: -7.630859851837158
    4. ' insert' → logprob: -7.630859851837158
    5. 'find' → logprob: -8.380860328674316
    6. ''' → logprob: -8.380860328674316
    7. 'Node' → logprob: -10.005860328674316
    8. 'ins' → logprob: -10.380860328674316
    9. 'set' → logprob: -10.630860328674316
    10. 'Insert' → logprob: -10.880860328674316

Token 1087: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.6097526550292969
    2. ''' → logprob: -1.1097526550292969
    3. '',' → logprob: -2.359752655029297
    4. '':
' → logprob: -3.984752655029297
    5. ' '' → logprob: -5.609752655029297
    6. '('' → logprob: -6.484752655029297
    7. '',
' → logprob: -6.609752655029297
    8. '','' → logprob: -7.109752655029297
    9. '']:' → logprob: -7.234752655029297
    10. ' ':' → logprob: -7.734752655029297

Token 1088: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25064414739608765
    2. ' Node' → logprob: -2.2506442070007324
    3. ' z' → logprob: -2.5006442070007324
    4. ' node' → logprob: -4.375644207000732
    5. 'Node' → logprob: -5.125644207000732
    6. ' ' → logprob: -5.750644207000732
    7. '_node' → logprob: -5.750644207000732
    8. '(Node' → logprob: -5.875644207000732
    9. ' (' → logprob: -6.500644207000732
    10. '_Node' → logprob: -7.375644207000732

Token 1089: ' node' (ID: 4596)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.2107866406440735
    2. ' Node' → logprob: -1.9607865810394287
    3. 'z' → logprob: -3.3357865810394287
    4. 'Node' → logprob: -4.960786819458008
    5. ' node' → logprob: -5.210786819458008
    6. ' new' → logprob: -7.835786819458008
    7. 'node' (adapté à ' node') → logprob: -8.210786819458008
    8. ' key' → logprob: -8.335786819458008
    9. ' n' → logprob: -9.210786819458008
    10. '_node' → logprob: -9.335786819458008

Token 1090: '_key' (ID: 6724)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06553704291582108
    2. '=' → logprob: -2.8155369758605957
    3. ' ' → logprob: -6.565536975860596
    4. '_data' → logprob: -6.815536975860596
    5. '_' → logprob: -8.190537452697754
    6. ')' → logprob: -8.440537452697754
    7. '.' → logprob: -9.440537452697754
    8. '(' → logprob: -9.565537452697754
    9. 's' → logprob: -9.565537452697754
    10. '  ' → logprob: -9.815537452697754

Token 1091: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1604927033185959
    2. '=' → logprob: -1.9104926586151123
    3. ',' → logprob: -8.410492897033691
    4. ')' → logprob: -11.160492897033691
    5. '=int' → logprob: -11.910492897033691
    6. ' ' → logprob: -12.660492897033691
    7. ' ,' → logprob: -12.910492897033691
    8. '_=' → logprob: -12.910492897033691
    9. '   ' → logprob: -13.285492897033691
    10. '    ' → logprob: -13.410492897033691

Token 1092: ' int' (ID: 677)
  Prédit: 'inst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inst' → logprob: -0.42103973031044006
    2. 'int' → logprob: -1.1710397005081177
    3. ' inst' → logprob: -4.421039581298828
    4. ' int' → logprob: -4.421039581298828
    5. 'Node' → logprob: -4.796039581298828
    6. ' Node' → logprob: -6.671039581298828
    7. '	inst' → logprob: -12.983539581298828
    8. '[int' → logprob: -13.546039581298828
    9. 'node' → logprob: -13.608539581298828
    10. '   ' → logprob: -13.671039581298828

Token 1093: '(inst' (ID: 76440)
  Prédit: '(inst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inst' → logprob: -0.0224927868694067
    2. '(' → logprob: -3.8974928855895996
    3. 'inst' → logprob: -6.3974928855896
    4. ')' → logprob: -9.147492408752441
    5. '('' → logprob: -9.772492408752441
    6. ' inst' → logprob: -10.397492408752441
    7. ' (' → logprob: -10.522492408752441
    8. '(
' → logprob: -10.897492408752441
    9. ''' → logprob: -11.147492408752441
    10. '(instr' → logprob: -11.272492408752441

Token 1094: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.236549335066229e-05
    2. ''' → logprob: -11.250021934509277
    3. '[
' → logprob: -12.250021934509277
    4. ' [' → logprob: -13.250021934509277
    5. '   ' → logprob: -13.750021934509277
    6. ')' → logprob: -14.250021934509277
    7. '1' → logprob: -16.000022888183594
    8. ''[' → logprob: -16.000022888183594
    9. '['' → logprob: -16.125022888183594
    10. '       ' → logprob: -16.625022888183594

Token 1095: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022008095402270555
    2. '[' → logprob: -6.252200603485107
    3. ' ' → logprob: -8.752201080322266
    4. '2' → logprob: -9.752201080322266
    5. ' [' → logprob: -10.252201080322266
    6. '   ' → logprob: -11.127201080322266
    7. ']' → logprob: -13.502201080322266
    8. '][' → logprob: -14.127201080322266
    9. '(' → logprob: -14.252201080322266
    10. '```' → logprob: -14.252201080322266

Token 1096: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005194028373807669
    2. '])
' → logprob: -5.380194187164307
    3. ')' → logprob: -7.755194187164307
    4. ''])' → logprob: -10.255193710327148
    5. ' ])' → logprob: -10.505193710327148
    6. ']' → logprob: -10.755193710327148
    7. '[' → logprob: -10.880193710327148
    8. ')
' → logprob: -11.130193710327148
    9. ')])' → logprob: -11.880193710327148
    10. '           ' → logprob: -12.005193710327148

Token 1097: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08547981083393097
    2. ' 
' → logprob: -3.585479736328125
    3. '
' → logprob: -4.085479736328125
    4. '            
' → logprob: -4.085479736328125
    5. ')' → logprob: -5.085479736328125
    6. ' z' → logprob: -6.585479736328125
    7. '		' → logprob: -6.710479736328125
    8. 'Node' → logprob: -6.710479736328125
    9. '            ' → logprob: -6.960479736328125
    10. 'z' → logprob: -6.960479736328125

Token 1098: ' new' (ID: 620)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.10986693948507309
    2. 'z' → logprob: -2.6098668575286865
    3. 'node' → logprob: -4.109867095947266
    4. 'new' (adapté à ' new') → logprob: -4.359867095947266
    5. 'n' → logprob: -7.109867095947266
    6. ' Node' → logprob: -8.109867095947266
    7. '           ' → logprob: -9.734867095947266
    8. ' z' → logprob: -9.984867095947266
    9. ' new' → logprob: -9.984867095947266
    10. ' node' → logprob: -10.234867095947266

Token 1099: '_node' (ID: 11390)
  Prédit: ' Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Node' → logprob: -0.06531941145658493
    2. '_node' → logprob: -3.565319299697876
    3. 'Node' → logprob: -4.190319538116455
    4. ' ' → logprob: -4.565319538116455
    5. ' node' → logprob: -5.565319538116455
    6. '_Node' → logprob: -5.815319538116455
    7. '	Node' → logprob: -7.065319538116455
    8. '(Node' → logprob: -7.315319538116455
    9. '_' → logprob: -7.940319538116455
    10. '.Node' → logprob: -8.440319061279297

Token 1100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197104603052139
    2. '=' → logprob: -2.8119709491729736
    3. ')' → logprob: -12.936970710754395
    4. '(' → logprob: -15.061970710754395
    5. ' ' → logprob: -15.186970710754395
    6. '	' → logprob: -16.18697166442871
    7. ' =
' → logprob: -16.56197166442871
    8. ')=' → logprob: -16.68697166442871
    9. '＝' → logprob: -17.43697166442871
    10. '(Node' → logprob: -17.68697166442871

Token 1101: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.004078639671206474
    2. ' Node' → logprob: -5.5040788650512695
    3. '	Node' → logprob: -15.25407886505127
    4. '_Node' → logprob: -19.754077911376953
    5. '.Node' → logprob: -20.754077911376953
    6. '(Node' → logprob: -21.129077911376953
    7. '<Node' → logprob: -21.379077911376953
    8. '_node' → logprob: -22.254077911376953
    9. 'Nodo' → logprob: -23.629077911376953
    10. ' ' → logprob: -23.754077911376953

Token 1102: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0013910694979131222
    2. '(' → logprob: -6.6263909339904785
    3. '(
' → logprob: -9.876391410827637
    4. ' (' → logprob: -11.501391410827637
    5. 'node' → logprob: -13.001391410827637
    6. '(key' → logprob: -15.001391410827637
    7. ',node' → logprob: -15.126391410827637
    8. '=node' → logprob: -15.501391410827637
    9. '(n' → logprob: -16.25139045715332
    10. ' node' → logprob: -16.25139045715332

Token 1103: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.00018518301658332348
    2. 'key' → logprob: -9.250185012817383
    3. '(key' → logprob: -10.125185012817383
    4. 'Key' → logprob: -10.750185012817383
    5. '(node' → logprob: -11.375185012817383
    6. '(
' → logprob: -12.625185012817383
    7. 'new' → logprob: -13.000185012817383
    8. ')' → logprob: -13.250185012817383
    9. '(new' → logprob: -14.000185012817383
    10. '
' → logprob: -14.000185012817383

Token 1104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00872105173766613
    2. ')
' → logprob: -4.758720874786377
    3. ',' → logprob: -9.508721351623535
    4. ' )' → logprob: -10.758721351623535
    5. '           ' → logprob: -12.508721351623535
    6. ')
' → logprob: -13.258721351623535
    7. ' )
' → logprob: -13.633721351623535
    8. ')

' → logprob: -13.758721351623535
    9. ');' → logprob: -14.508721351623535
    10. '))' → logprob: -14.633721351623535

Token 1105: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1106: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' (adapté à ' Node') → logprob: -0.00408932426944375
    2. ' Node' → logprob: -5.50408935546875
    3. '           ' → logprob: -12.87908935546875
    4. 'new' → logprob: -12.87908935546875
    5. '.Node' → logprob: -13.12908935546875
    6. '	Node' → logprob: -13.25408935546875
    7. ' new' → logprob: -13.75408935546875
    8. 'New' → logprob: -14.75408935546875
    9. '
' → logprob: -15.37908935546875
    10. '_Node' → logprob: -15.62908935546875

Token 1107: '.insert' (ID: 13222)
  Prédit: '.insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.insert' → logprob: -0.001328572048805654
    2. 'insert' → logprob: -6.751328468322754
    3. '.' → logprob: -8.751328468322754
    4. ' .' → logprob: -16.87632942199707
    5. '_insert' → logprob: -17.00132942199707
    6. ' insert' → logprob: -18.00132942199707
    7. '	insert' → logprob: -18.12632942199707
    8. '.append' → logprob: -18.62632942199707
    9. '\.' → logprob: -18.62632942199707
    10. 'INSERT' → logprob: -19.00132942199707

Token 1108: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0015042672166600823
    2. '(' → logprob: -6.501504421234131
    3. ' (' → logprob: -13.501503944396973
    4. '(
' → logprob: -15.001503944396973
    5. '(node' → logprob: -17.00150489807129
    6. '(n' → logprob: -17.12650489807129
    7. 'new' → logprob: -17.50150489807129
    8. '(next' → logprob: -18.00150489807129
    9. '(

' → logprob: -18.12650489807129
    10. ',new' → logprob: -18.37650489807129

Token 1109: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.097437315271236e-05
    2. 'node' → logprob: -10.37505054473877
    3. 'ode' → logprob: -11.00005054473877
    4. '_' → logprob: -14.12505054473877
    5. 'new' → logprob: -14.25005054473877
    6. ' node' → logprob: -14.75005054473877
    7. '_key' → logprob: -15.12505054473877
    8. 'Node' → logprob: -15.12505054473877
    9. ')' → logprob: -16.250051498413086
    10. '_NODE' → logprob: -16.375051498413086

Token 1110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.583550642360933e-05
    2. ')
' → logprob: -10.375036239624023
    3. ' )' → logprob: -13.125036239624023
    4. '<|end|>' → logprob: -13.500036239624023
    5. '       ' → logprob: -15.000036239624023
    6. '<|end|>' → logprob: -15.250036239624023
    7. ')return' → logprob: -16.000036239624023
    8. ')#' → logprob: -16.375036239624023
    9. '   ' → logprob: -16.500036239624023
    10. '),' → logprob: -16.625036239624023

Token 1111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.63325035572052
    2. 'y' → logprob: -1.38325035572052
    3. '           ' → logprob: -2.8832502365112305
    4. 'n' → logprob: -3.3832502365112305
    5. 'x' → logprob: -4.2582502365112305
    6. ' y' → logprob: -4.2582502365112305
    7. '
' → logprob: -4.6332502365112305
    8. '        
' → logprob: -4.6332502365112305
    9. '   ' → logprob: -4.8832502365112305
    10. ' ' → logprob: -4.8832502365112305

Token 1112: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26312997937202454
    2. '<|end|>' → logprob: -1.8881299495697021
    3. '           ' → logprob: -3.513129949569702
    4. 'y' → logprob: -4.513130187988281
    5. '<|end|>' → logprob: -4.638130187988281
    6. '   ' → logprob: -5.013130187988281
    7. '               ' → logprob: -5.888130187988281
    8. 'elif' (adapté à ' elif') → logprob: -5.888130187988281
    9. '        ' → logprob: -6.138130187988281
    10. ' ' → logprob: -6.138130187988281

Token 1113: ' inst' (ID: 1710)
  Prédit: ' inst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inst' → logprob: -0.3485211730003357
    2. 'inst' → logprob: -1.2235212326049805
    3. '(inst' → logprob: -9.59852123260498
    4. '	inst' → logprob: -11.97352123260498
    5. 'len' → logprob: -14.59852123260498
    6. '[' → logprob: -14.84852123260498
    7. ' ' → logprob: -15.47352123260498
    8. '.inst' → logprob: -15.72352123260498
    9. '   ' → logprob: -15.84852123260498
    10. ' len' → logprob: -15.97352123260498

Token 1114: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.674858301877975e-05
    2. '==' → logprob: -10.375096321105957
    3. ' ==' → logprob: -10.625096321105957
    4. ' [' → logprob: -11.625096321105957
    5. ':' → logprob: -11.750096321105957
    6. '[
' → logprob: -12.375096321105957
    7. '```' → logprob: -12.500096321105957
    8. ''' → logprob: -13.250096321105957
    9. '=='' → logprob: -13.625096321105957
    10. ')' → logprob: -13.625096321105957

Token 1115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004100246820598841
    2. ''' → logprob: -5.754100322723389
    3. '[' → logprob: -7.129100322723389
    4. ' ' → logprob: -9.50409984588623
    5. ''s' → logprob: -10.50409984588623
    6. ''[' → logprob: -11.87909984588623
    7. '   ' → logprob: -13.00409984588623
    8. '1' → logprob: -13.12909984588623
    9. ''t' → logprob: -13.12909984588623
    10. ' '' → logprob: -13.50409984588623

Token 1116: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4588340222835541
    2. '==' → logprob: -1.4588340520858765
    3. ' ==' → logprob: -2.833833932876587
    4. ']' → logprob: -3.208833932876587
    5. ']==' → logprob: -3.458833932876587
    6. ':' → logprob: -6.583834171295166
    7. '=' → logprob: -6.958834171295166
    8. '][' → logprob: -7.458834171295166
    9. ']=='' → logprob: -8.333833694458008
    10. '[]' → logprob: -8.583833694458008

Token 1117: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.36087748408317566
    2. '==' → logprob: -1.360877513885498
    3. '[' → logprob: -3.110877513885498
    4. '=='' → logprob: -6.610877513885498
    5. '=' → logprob: -8.23587703704834
    6. ':' → logprob: -9.11087703704834
    7. ' =' → logprob: -9.36087703704834
    8. ']==' → logprob: -10.73587703704834
    9. '===' → logprob: -11.23587703704834
    10. '[]' → logprob: -11.61087703704834

Token 1118: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08671365678310394
    2. ' '' → logprob: -2.5867135524749756
    3. ''d' → logprob: -4.961713790893555
    4. ' delete' → logprob: -7.961713790893555
    5. ''int' → logprob: -8.711713790893555
    6. 'delete' → logprob: -8.836713790893555
    7. ''in' → logprob: -10.336713790893555
    8. ' ' → logprob: -11.336713790893555
    9. ''ex' → logprob: -11.336713790893555
    10. ''s' → logprob: -11.461713790893555

Token 1119: 'find' (ID: 6555)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.0025202499236911535
    2. 'find' → logprob: -6.2525200843811035
    3. ''' → logprob: -8.377520561218262
    4. ' delete' → logprob: -9.002520561218262
    5. 'print' → logprob: -9.377520561218262
    6. 'search' → logprob: -9.377520561218262
    7. 'remove' → logprob: -10.377520561218262
    8. 'get' → logprob: -11.252520561218262
    9. 'insert' → logprob: -12.002520561218262
    10. '"' → logprob: -13.127520561218262

Token 1120: '':
' (ID: 7669)
  Prédit: ''):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -1.2516459226608276
    2. '':
' → logprob: -2.001646041870117
    3. '<|end|>' → logprob: -2.001646041870117
    4. '',' → logprob: -2.251646041870117
    5. '(node' → logprob: -2.501646041870117
    6. '']:
' → logprob: -3.126646041870117
    7. ':
' → logprob: -3.376646041870117
    8. ''' → logprob: -3.501646041870117
    9. '':' → logprob: -3.876646041870117
    10. '):
' → logprob: -4.001646041870117

Token 1121: '           ' (ID: 352)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.5089705586433411
    2. 'node' → logprob: -2.0089704990386963
    3. ' ' → logprob: -3.5089704990386963
    4. ' k' → logprob: -3.5089704990386963
    5. '	node' → logprob: -3.5089704990386963
    6. '       ' → logprob: -3.6339704990386963
    7. '
' → logprob: -4.258970737457275
    8. '_node' → logprob: -4.383970737457275
    9. '           ' → logprob: -4.383970737457275
    10. '[' → logprob: -4.383970737457275

Token 1122: ' result' (ID: 1534)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.09059407562017441
    2. ' node' → logprob: -2.5905940532684326
    3. 'key' → logprob: -5.340594291687012
    4. 'k' → logprob: -5.965594291687012
    5. ' key' → logprob: -6.465594291687012
    6. '           ' → logprob: -6.590594291687012
    7. ' k' → logprob: -6.715594291687012
    8. '	node' → logprob: -10.340594291687012
    9. '_node' → logprob: -10.465594291687012
    10. 'n' → logprob: -10.840594291687012

Token 1123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024667024612427
    2. '=' → logprob: -1.9102466106414795
    3. '_' → logprob: -11.785246849060059
    4. '[' → logprob: -12.410246849060059
    5. ')' → logprob: -12.785246849060059
    6. ' ' → logprob: -12.910246849060059
    7. '_key' → logprob: -13.660246849060059
    8. ',' → logprob: -13.785246849060059
    9. '   ' → logprob: -14.285246849060059
    10. '_node' → logprob: -14.785246849060059

Token 1124: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.07889485359191895
    2. ' Node' → logprob: -2.578894853591919
    3. 'int' → logprob: -12.82889461517334
    4. '	Node' → logprob: -13.95389461517334
    5. '   ' → logprob: -14.57889461517334
    6. '(Node' → logprob: -15.20389461517334
    7. ' ' → logprob: -15.45389461517334
    8. ' int' → logprob: -15.45389461517334
    9. '.Node' → logprob: -16.453895568847656
    10. '_Node' → logprob: -16.453895568847656

Token 1125: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -5.764977686339989e-05
    2. '.' → logprob: -10.250057220458984
    3. 'find' → logprob: -10.875057220458984
    4. '.findall' → logprob: -13.750057220458984
    5. '(find' → logprob: -14.000057220458984
    6. '.insert' → logprob: -15.000057220458984
    7. ' .' → logprob: -15.250057220458984
    8. '=find' → logprob: -15.500057220458984
    9. ').' → logprob: -16.000057220458984
    10. '   ' → logprob: -16.500057220458984

Token 1126: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004176102578639984
    2. '(node' → logprob: -6.004176139831543
    3. '(' → logprob: -6.879176139831543
    4. 'int' → logprob: -8.004176139831543
    5. ' (' → logprob: -9.254176139831543
    6. '[int' → logprob: -9.754176139831543
    7. '(
' → logprob: -9.879176139831543
    8. '(Node' → logprob: -10.129176139831543
    9. '(None' → logprob: -10.379176139831543
    10. ' int' → logprob: -11.129176139831543

Token 1127: '(inst' (ID: 76440)
  Prédit: '(inst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inst' → logprob: -0.0009014541283249855
    2. ')(' → logprob: -7.250901222229004
    3. 'inst' → logprob: -8.875901222229004
    4. '(' → logprob: -10.375901222229004
    5. ')' → logprob: -11.000901222229004
    6. ' (' → logprob: -13.875901222229004
    7. ')(
' → logprob: -14.250901222229004
    8. '(
' → logprob: -14.625901222229004
    9. '(instr' → logprob: -14.750901222229004
    10. '	inst' → logprob: -15.625901222229004

Token 1128: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.080963092041202e-06
    2. ')' → logprob: -13.000004768371582
    3. '(' → logprob: -13.500004768371582
    4. '[
' → logprob: -15.000004768371582
    5. ')[' → logprob: -15.750004768371582
    6. '['' → logprob: -16.5000057220459
    7. '```' → logprob: -16.5000057220459
    8. ']' → logprob: -16.5000057220459
    9. '(inst' → logprob: -16.5000057220459
    10. '           ' → logprob: -16.7500057220459

Token 1129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006556084263138473
    2. '[' → logprob: -7.375655651092529
    3. 'inst' → logprob: -11.625655174255371
    4. '(' → logprob: -12.375655174255371
    5. '   ' → logprob: -13.125655174255371
    6. '2' → logprob: -13.125655174255371
    7. '
' → logprob: -13.250655174255371
    8. ' ' → logprob: -13.500655174255371
    9. ']' → logprob: -13.500655174255371
    10. ')' → logprob: -13.750655174255371

Token 1130: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4315498471260071
    2. '))
' → logprob: -1.0565497875213623
    3. ']))' → logprob: -6.556550025939941
    4. ')))' → logprob: -7.556550025939941
    5. ']))
' → logprob: -7.806550025939941
    6. '])' → logprob: -8.931550025939941
    7. ')))
' → logprob: -9.181550025939941
    8. '[' → logprob: -9.681550025939941
    9. '))
' → logprob: -9.931550025939941
    10. ')' → logprob: -10.056550025939941

Token 1131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45366400480270386
    2. '<|end|>' → logprob: -1.8286640644073486
    3. '
' → logprob: -2.7036640644073486
    4. '       ' → logprob: -2.9536640644073486
    5. ' =' → logprob: -3.0786640644073486
    6. '=' → logprob: -4.7036638259887695
    7. '<|end|>' → logprob: -5.2036638259887695
    8. '.parent' → logprob: -6.2036638259887695
    9. 'return' → logprob: -6.3286638259887695
    10. '.' → logprob: -6.3286638259887695

Token 1132: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6774442791938782
    2. 'if' (adapté à ' if') → logprob: -0.8024442791938782
    3. 'None' → logprob: -4.0524444580078125
    4. '           ' → logprob: -4.9274444580078125
    5. ' None' → logprob: -5.0524444580078125
    6. '<|end|>' → logprob: -5.3024444580078125
    7. 'print' → logprob: -6.4274444580078125
    8. 'return' → logprob: -6.9274444580078125
    9. '<|end|>' → logprob: -7.1774444580078125
    10. ' ' → logprob: -7.8024444580078125

Token 1133: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3868725895881653
    2. ' result' → logprob: -1.1368725299835205
    3. '(result' → logprob: -13.636872291564941
    4. 'not' → logprob: -15.636872291564941
    5. ' not' → logprob: -17.011873245239258
    6. 'None' → logprob: -17.261873245239258
    7. '[result' → logprob: -17.886873245239258
    8. '	result' → logprob: -18.261873245239258
    9. ' ' → logprob: -18.386873245239258
    10. '
' → logprob: -18.886873245239258

Token 1134: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.011725515127182007
    2. ' !=' → logprob: -4.636725425720215
    3. '!=' → logprob: -6.511725425720215
    4. 'is' → logprob: -8.136725425720215
    5. ')' → logprob: -9.761725425720215
    6. ' ==' → logprob: -10.886725425720215
    7. '<|end|>' → logprob: -11.261725425720215
    8. ':' → logprob: -11.261725425720215
    9. ' None' → logprob: -11.386725425720215
    10. '==' → logprob: -11.511725425720215

Token 1135: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20241223275661469
    2. '           ' → logprob: -2.7024121284484863
    3. '.' → logprob: -3.0774121284484863
    4. '.print' → logprob: -3.7024121284484863
    5. ' print' → logprob: -4.077412128448486
    6. ':' → logprob: -4.452412128448486
    7. 'print' → logprob: -4.827412128448486
    8. ',' → logprob: -6.702412128448486
    9. '<|end|>' → logprob: -6.702412128448486
    10. ':
' → logprob: -6.952412128448486

Token 1136: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1603180468082428
    2. ' print' → logprob: -1.9103180170059204
    3. '           ' → logprob: -10.035318374633789
    4. '               ' → logprob: -10.035318374633789
    5. '                   ' → logprob: -13.160318374633789
    6. '```' → logprob: -13.410318374633789
    7. '	print' → logprob: -13.660318374633789
    8. '   ' → logprob: -15.285318374633789
    9. ' ' → logprob: -15.410318374633789
    10. '                ' → logprob: -15.410318374633789

Token 1137: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.038434237241744995
    2. '(result' → logprob: -3.5384342670440674
    3. '(f' → logprob: -5.288434028625488
    4. '(' → logprob: -5.663434028625488
    5. '("' → logprob: -9.538434028625488
    6. '('{}' → logprob: -10.788434028625488
    7. '('{' → logprob: -11.288434028625488
    8. ''' → logprob: -12.413434028625488
    9. 'result' → logprob: -12.413434028625488
    10. '()' → logprob: -12.788434028625488

Token 1138: 'yes' (ID: 6763)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.9162641763687134
    2. '{' → logprob: -1.1662641763687134
    3. 'Found' → logprob: -2.291264057159424
    4. ' found' → logprob: -2.541264057159424
    5. ' {' → logprob: -3.041264057159424
    6. ' Found' → logprob: -3.916264057159424
    7. 'FOUND' → logprob: -4.541264057159424
    8. '1' → logprob: -5.291264057159424
    9. ''' → logprob: -5.666264057159424
    10. '(found' → logprob: -5.791264057159424

Token 1139: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.5761153101921082
    2. '')' → logprob: -0.8261153101921082
    3. '')
' → logprob: -9.201115608215332
    4. ')' → logprob: -9.951115608215332
    5. ')
' → logprob: -11.326115608215332
    6. '');' → logprob: -12.701115608215332
    7. '")
' → logprob: -12.826115608215332
    8. '")' → logprob: -13.076115608215332
    9. ')')
' → logprob: -13.451115608215332
    10. '<|end|>' → logprob: -13.701115608215332

Token 1140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014853432076051831
    2. '       ' → logprob: -7.126485347747803
    3. '               ' → logprob: -8.126484870910645
    4. '<|end|>' → logprob: -8.626484870910645
    5. '		' → logprob: -10.001484870910645
    6. '<|end|>' → logprob: -10.501484870910645
    7. 'else' → logprob: -10.626484870910645
    8. '```' → logprob: -10.626484870910645
    9. '.' → logprob: -11.001484870910645
    10. '          ' → logprob: -11.501484870910645

Token 1141: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5260413885116577
    2. '       ' → logprob: -1.2760413885116577
    3. ' else' → logprob: -2.5260415077209473
    4. 'else' (adapté à ' else') → logprob: -3.0260415077209473
    5. '               ' → logprob: -7.276041507720947
    6. ' ' → logprob: -8.776041030883789
    7. '		' → logprob: -9.526041030883789
    8. '<|end|>' → logprob: -9.526041030883789
    9. '   ' → logprob: -9.776041030883789
    10. '        ' → logprob: -9.901041030883789

Token 1142: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12610362470149994
    2. ':' → logprob: -2.251103639602661
    3. '               ' → logprob: -4.376103401184082
    4. '           ' → logprob: -7.626103401184082
    5. ' :
' → logprob: -10.126103401184082
    6. '{' → logprob: -10.876103401184082
    7. '                   ' → logprob: -11.001103401184082
    8. '{
' → logprob: -11.626103401184082
    9. '<|end|>' → logprob: -12.376103401184082
    10. '       ' → logprob: -12.626103401184082

Token 1143: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6678012013435364
    2. 'print' → logprob: -0.9178012013435364
    3. '           ' → logprob: -3.4178011417388916
    4. ' print' → logprob: -4.167801380157471
    5. ' 
' → logprob: -4.542801380157471
    6. '                
' → logprob: -4.542801380157471
    7. '
' → logprob: -5.167801380157471
    8. '            
' → logprob: -5.792801380157471
    9. '    
' → logprob: -6.542801380157471
    10. '                ' → logprob: -6.792801380157471

Token 1144: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03805927932262421
    2. ' print' → logprob: -3.2880592346191406
    3. '               ' → logprob: -11.53805923461914
    4. '
' → logprob: -12.03805923461914
    5. ' 
' → logprob: -13.41305923461914
    6. '           ' → logprob: -14.91305923461914
    7. '                ' → logprob: -16.66305923461914
    8. '                
' → logprob: -16.78805923461914
    9. '	print' → logprob: -17.28805923461914
    10. '            ' → logprob: -17.41305923461914

Token 1145: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0019357812125235796
    2. '(' → logprob: -6.251935958862305
    3. '(
' → logprob: -12.251935958862305
    4. '("' → logprob: -14.001935958862305
    5. ' ('' → logprob: -14.251935958862305
    6. '()' → logprob: -14.501935958862305
    7. ''' → logprob: -15.501935958862305
    8. ' (' → logprob: -16.876935958862305
    9. '('')
' → logprob: -17.126935958862305
    10. ' ' → logprob: -18.876935958862305

Token 1146: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.0001462107611587271
    2. ''' → logprob: -8.87514591217041
    3. 'not' → logprob: -12.87514591217041
    4. ' no' → logprob: -13.00014591217041
    5. 'No' → logprob: -14.62514591217041
    6. '')' → logprob: -15.00014591217041
    7. ''n' → logprob: -16.250146865844727
    8. '	no' → logprob: -16.250146865844727
    9. 'n' → logprob: -16.500146865844727
    10. 'none' → logprob: -16.625146865844727

Token 1147: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0003794336807914078
    2. '')
' → logprob: -8.25037956237793
    3. ')' → logprob: -9.12537956237793
    4. '")' → logprob: -12.25037956237793
    5. ''' → logprob: -13.00037956237793
    6. '\n' → logprob: -14.00037956237793
    7. '}')' → logprob: -14.25037956237793
    8. '')}' → logprob: -15.50037956237793
    9. '')
' → logprob: -15.75037956237793
    10. ''))' → logprob: -15.87537956237793

Token 1148: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9034644961357117
    2. ' =' → logprob: -1.2784645557403564
    3. '           ' → logprob: -1.4034645557403564
    4. 'y' → logprob: -3.1534645557403564
    5. '       ' → logprob: -4.278464317321777
    6. '               ' → logprob: -5.778464317321777
    7. ' y' → logprob: -6.028464317321777
    8. '   ' → logprob: -6.653464317321777
    9. 'x' → logprob: -6.903464317321777
    10. '        ' → logprob: -7.153464317321777

Token 1149: ' elif' (ID: 9497)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.632935106754303
    2. ' =' → logprob: -1.2579350471496582
    3. '       ' → logprob: -2.382935047149658
    4. 'y' → logprob: -2.882935047149658
    5. '           ' → logprob: -3.882935047149658
    6. ' y' → logprob: -5.007935047149658
    7. '   ' → logprob: -6.007935047149658
    8. '               ' → logprob: -6.757935047149658
    9. '        ' → logprob: -7.007935047149658
    10. 'n' → logprob: -7.757935047149658

Token 1150: ' inst' (ID: 1710)
  Prédit: ' inst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inst' → logprob: -0.5759842991828918
    2. 'inst' → logprob: -0.8259842991828918
    3. '(inst' → logprob: -10.200984001159668
    4. '	inst' → logprob: -12.075984001159668
    5. 'len' → logprob: -14.325984001159668
    6. ' len' → logprob: -14.700984001159668
    7. ' instr' → logprob: -15.700984001159668
    8. '[' → logprob: -15.700984001159668
    9. ' ' → logprob: -16.200984954833984
    10. 'instr' → logprob: -16.200984954833984

Token 1151: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00030400342075154185
    2. ' [' → logprob: -9.250304222106934
    3. ''' → logprob: -10.125304222106934
    4. '_' → logprob: -10.500304222106934
    5. '[
' → logprob: -10.875304222106934
    6. '0' → logprob: -11.125304222106934
    7. '==' → logprob: -11.250304222106934
    8. ''[' → logprob: -11.250304222106934
    9. ' ==' → logprob: -11.375304222106934
    10. '```' → logprob: -11.875304222106934

Token 1152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0061420840211212635
    2. '1' → logprob: -5.5061421394348145
    3. '[' → logprob: -6.2561421394348145
    4. ''' → logprob: -9.631141662597656
    5. ' ' → logprob: -9.631141662597656
    6. '   ' → logprob: -12.756141662597656
    7. ''s' → logprob: -13.131141662597656
    8. '2' → logprob: -13.756141662597656
    9. '
' → logprob: -13.756141662597656
    10. '"' → logprob: -13.756141662597656

Token 1153: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3841622471809387
    2. ']' → logprob: -2.009162187576294
    3. ']==' → logprob: -2.384162187576294
    4. '==' → logprob: -3.009162187576294
    5. ' ==' → logprob: -3.759162187576294
    6. ':' → logprob: -5.009162425994873
    7. '][' → logprob: -5.134162425994873
    8. ']=='' → logprob: -5.759162425994873
    9. '       ' → logprob: -6.759162425994873
    10. '           ' → logprob: -7.509162425994873

Token 1154: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06567413359880447
    2. ' ==' → logprob: -2.940674066543579
    3. '==' → logprob: -4.565674304962158
    4. ' [' → logprob: -8.440673828125
    5. '[
' → logprob: -10.315673828125
    6. '=='' → logprob: -10.690673828125
    7. ' =' → logprob: -11.440673828125
    8. ']==' → logprob: -12.315673828125
    9. '[]' → logprob: -12.440673828125
    10. '       ' → logprob: -12.440673828125

Token 1155: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005844173487275839
    2. ' '' → logprob: -5.6308441162109375
    3. ''d' → logprob: -6.5058441162109375
    4. ''s' → logprob: -8.255844116210938
    5. ''in' → logprob: -8.380844116210938
    6. ''ins' → logprob: -9.255844116210938
    7. ''post' → logprob: -10.255844116210938
    8. ''ex' → logprob: -11.130844116210938
    9. ''int' → logprob: -11.130844116210938
    10. ' ' → logprob: -11.130844116210938

Token 1156: 'delete' (ID: 8509)
  Prédit: 'delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.00021402664424385875
    2. 'insert' → logprob: -10.000213623046875
    3. 'remove' → logprob: -10.000213623046875
    4. ''' → logprob: -10.125213623046875
    5. 'dele' → logprob: -11.375213623046875
    6. 'get' → logprob: -11.500213623046875
    7. 'd' → logprob: -11.625213623046875
    8. ' delete' → logprob: -11.750213623046875
    9. 'print' → logprob: -11.750213623046875
    10. 'de' → logprob: -12.250213623046875

Token 1157: '':
' (ID: 7669)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35063639283180237
    2. '_node' → logprob: -1.47563636302948
    3. '':' → logprob: -3.7256364822387695
    4. ''' → logprob: -3.8506364822387695
    5. ''_' → logprob: -4.6006364822387695
    6. '_:' → logprob: -5.9756364822387695
    7. ':' → logprob: -6.2256364822387695
    8. '':
' → logprob: -6.4756364822387695
    9. '_Node' → logprob: -6.7256364822387695
    10. '_n' → logprob: -6.8506364822387695

Token 1158: '           ' (ID: 352)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04107540100812912
    2. ' _' → logprob: -4.291075229644775
    3. ' node' → logprob: -5.041075229644775
    4. ' ' → logprob: -5.166075229644775
    5. '       ' → logprob: -6.166075229644775
    6. '_node' → logprob: -6.541075229644775
    7. '    ' → logprob: -6.791075229644775
    8. '           ' → logprob: -6.916075229644775
    9. '<|end|>' → logprob: -6.916075229644775
    10. '(node' → logprob: -7.041075229644775

Token 1159: ' result' (ID: 1534)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.051788050681352615
    2. 'node' → logprob: -3.051788091659546
    3. ' key' → logprob: -6.051787853240967
    4. '_node' → logprob: -8.051788330078125
    5. '           ' → logprob: -8.926788330078125
    6. 'key' → logprob: -9.051788330078125
    7. ' Node' → logprob: -9.426788330078125
    8. 'Node' → logprob: -9.801788330078125
    9. ' 
' → logprob: -10.426788330078125
    10. ' n' → logprob: -10.551788330078125

Token 1160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01436129491776228
    2. '=' → logprob: -4.389361381530762
    3. '_key' → logprob: -6.389361381530762
    4. '_' → logprob: -8.889361381530762
    5. ' ' → logprob: -11.264361381530762
    6. '_node' → logprob: -12.014361381530762
    7. '_=' → logprob: -12.764361381530762
    8. ' _' → logprob: -12.889361381530762
    9. '   ' → logprob: -13.764361381530762
    10. '_token' → logprob: -13.764361381530762

Token 1161: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.011061146855354309
    2. ' Node' → logprob: -4.511061191558838
    3. 'int' → logprob: -11.38606071472168
    4. '	Node' → logprob: -14.38606071472168
    5. 'None' → logprob: -14.51106071472168
    6. '   ' → logprob: -14.88606071472168
    7. '    ' → logprob: -16.01106071472168
    8. '           ' → logprob: -16.13606071472168
    9. '(Node' → logprob: -16.38606071472168
    10. ' int' → logprob: -16.76106071472168

Token 1162: '.delete' (ID: 11951)
  Prédit: '.delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.delete' → logprob: -0.03835885599255562
    2. '.find' → logprob: -3.2883589267730713
    3. '.' → logprob: -8.413358688354492
    4. 'delete' → logprob: -10.288358688354492
    5. '.get' → logprob: -10.663358688354492
    6. 'find' → logprob: -10.788358688354492
    7. '._' → logprob: -12.288358688354492
    8. ' .' → logprob: -13.038358688354492
    9. '.root' → logprob: -13.413358688354492
    10. 'Node' → logprob: -13.788358688354492

Token 1163: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.000646433443762362
    2. '_' → logprob: -7.625646591186523
    3. '_Node' → logprob: -9.375646591186523
    4. '
' → logprob: -11.500646591186523
    5. '_NODE' → logprob: -11.750646591186523
    6. ')_' → logprob: -11.875646591186523
    7. '_
' → logprob: -12.000646591186523
    8. ')' → logprob: -12.125646591186523
    9. ''_' → logprob: -12.125646591186523
    10. '_n' → logprob: -12.375646591186523

Token 1164: '(Node' (ID: 43019)
  Prédit: '(Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Node' → logprob: -0.03532451391220093
    2. 'Node' → logprob: -3.6603245735168457
    3. '(' → logprob: -5.410324573516846
    4. ' Node' → logprob: -5.785324573516846
    5. '(int' → logprob: -7.160324573516846
    6. ' (' → logprob: -8.285324096679688
    7. '(node' → logprob: -9.160324096679688
    8. 'int' → logprob: -9.535324096679688
    9. '(new' → logprob: -10.035324096679688
    10. 'new' → logprob: -10.160324096679688

Token 1165: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.001041978714056313
    2. 'find' → logprob: -6.876041889190674
    3. '(find' → logprob: -12.626042366027832
    4. ').' → logprob: -13.501042366027832
    5. '(Node' → logprob: -13.501042366027832
    6. ')' → logprob: -13.626042366027832
    7. ')find' → logprob: -13.876042366027832
    8. '.' → logprob: -15.376042366027832
    9. '(' → logprob: -15.501042366027832
    10. '.get' → logprob: -16.001041412353516

Token 1166: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004211363382637501
    2. '(' → logprob: -6.25421142578125
    3. ')' → logprob: -6.62921142578125
    4. 'int' → logprob: -8.00421142578125
    5. ')(' → logprob: -8.12921142578125
    6. '(Node' → logprob: -8.62921142578125
    7. ' (' → logprob: -9.62921142578125
    8. '((' → logprob: -10.87921142578125
    9. '[int' → logprob: -11.12921142578125
    10. ',int' → logprob: -11.12921142578125

Token 1167: '(inst' (ID: 76440)
  Prédit: 'inst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inst' → logprob: -0.4741385877132416
    2. '(inst' → logprob: -0.974138617515564
    3. ' inst' → logprob: -10.099138259887695
    4. '(' → logprob: -11.474138259887695
    5. ')' → logprob: -12.224138259887695
    6. '))' → logprob: -13.224138259887695
    7. '	inst' → logprob: -14.099138259887695
    8. '[' → logprob: -14.474138259887695
    9. ')(' → logprob: -14.974138259887695
    10. '.inst' → logprob: -15.349138259887695

Token 1168: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009890307672321796
    2. '(' → logprob: -4.884890079498291
    3. '(inst' → logprob: -6.509890079498291
    4. '1' → logprob: -7.259890079498291
    5. 'inst' → logprob: -10.00989055633545
    6. ']' → logprob: -12.00989055633545
    7. '][' → logprob: -12.00989055633545
    8. ')' → logprob: -12.00989055633545
    9. '[
' → logprob: -12.13489055633545
    10. '   ' → logprob: -12.50989055633545

Token 1169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -14.500001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '[' → logprob: -15.375001907348633
    5. 'inst' → logprob: -15.750001907348633
    6. '   ' → logprob: -16.500001907348633
    7. '(inst' → logprob: -16.875001907348633
    8. '
' → logprob: -17.750001907348633
    9. ']' → logprob: -17.750001907348633
    10. '2' → logprob: -18.312501907348633

Token 1170: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.7669166326522827
    2. '[' → logprob: -1.0169166326522827
    3. '(' → logprob: -2.0169167518615723
    4. ']' → logprob: -4.141916751861572
    5. ')))' → logprob: -4.266916751861572
    6. '(inst' → logprob: -5.766916751861572
    7. '])))' → logprob: -5.891916751861572
    8. ']))
' → logprob: -6.391916751861572
    9. '))' → logprob: -7.516916751861572
    10. ')])' → logprob: -7.641916751861572

Token 1171: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006307095172815025
    2. ')
' → logprob: -7.375630855560303
    3. '       ' → logprob: -13.375630378723145
    4. '))' → logprob: -14.000630378723145
    5. '           ' → logprob: -15.250630378723145
    6. ' )' → logprob: -15.500630378723145
    7. '<|end|>' → logprob: -15.750630378723145
    8. '())' → logprob: -15.875630378723145
    9. '')' → logprob: -15.875630378723145
    10. ')
' → logprob: -16.00063133239746

Token 1172: 'def' (ID: 1314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46810728311538696
    2. 'y' → logprob: -1.5931072235107422
    3. '       ' → logprob: -2.718107223510742
    4. ' =' → logprob: -2.718107223510742
    5. ' y' → logprob: -4.343107223510742
    6. 'x' → logprob: -4.843107223510742
    7. '           ' → logprob: -5.343107223510742
    8. '   ' → logprob: -5.343107223510742
    9. ' ' → logprob: -6.843107223510742
    10. '        ' → logprob: -6.968107223510742

Token 1173: ' flatten' (ID: 61445)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.8404269218444824
    2. 'process' → logprob: -0.8404269218444824
    3. ' __' → logprob: -2.3404269218444824
    4. '__' → logprob: -3.3404269218444824
    5. ' main' → logprob: -5.715426921844482
    6. 'main' → logprob: -7.215426921844482
    7. ' flatten' → logprob: -8.09042739868164
    8. ' Node' → logprob: -8.59042739868164
    9. 'flatten' → logprob: -9.09042739868164
    10. ' ' → logprob: -9.21542739868164

Token 1174: '(l' (ID: 4179)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.008822325617074966
    2. '(' → logprob: -6.008822441101074
    3. '(obj' → logprob: -6.258822441101074
    4. '(arr' → logprob: -7.008822441101074
    5. '(list' → logprob: -7.258822441101074
    6. '(n' → logprob: -7.258822441101074
    7. '(l' → logprob: -7.258822441101074
    8. '(ls' → logprob: -7.758822441101074
    9. '(lista' → logprob: -8.633822441101074
    10. '(x' → logprob: -8.883822441101074

Token 1175: '):
' (ID: 1883)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.0011576045071706176
    2. '(' → logprob: -8.501157760620117
    3. '):' → logprob: -8.876157760620117
    4. '([]' → logprob: -9.126157760620117
    5. '(lst' → logprob: -9.126157760620117
    6. 'st' → logprob: -9.376157760620117
    7. '[]' → logprob: -9.751157760620117
    8. 'isting' → logprob: -9.876157760620117
    9. ')' → logprob: -10.001157760620117
    10. 'iste' → logprob: -10.126157760620117

Token 1176: '   ' (ID: 271)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4038538336753845
    2. '[l' → logprob: -2.2788538932800293
    3. 'l' → logprob: -2.4038538932800293
    4. '[' → logprob: -2.4038538932800293
    5. '[]' → logprob: -3.1538538932800293
    6. '[
' → logprob: -5.778853893280029
    7. '   ' → logprob: -6.403853893280029
    8. ' [' → logprob: -7.153853893280029
    9. 'sum' → logprob: -8.778853416442871
    10. '	l' → logprob: -9.153853416442871

Token 1177: ' """' (ID: 9280)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.45787692070007324
    2. '[' → logprob: -1.2078769207000732
    3. '[]' → logprob: -2.7078769207000732
    4. 'sum' → logprob: -7.832877159118652
    5. ' l' → logprob: -8.207877159118652
    6. '[item' → logprob: -8.207877159118652
    7. '[len' → logprob: -8.707877159118652
    8. '[
' → logprob: -8.832877159118652
    9. 'l' → logprob: -9.207877159118652
    10. '[x' → logprob: -9.332877159118652

Token 1178: ' http' (ID: 3958)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3494355082511902
    2. '[l' → logprob: -2.224435567855835
    3. '[item' → logprob: -2.599435567855835
    4. 'sum' → logprob: -2.599435567855835
    5. '[]' → logprob: -4.849435329437256
    6. ' [' → logprob: -5.224435329437256
    7. 'return' → logprob: -5.349435329437256
    8. '[result' → logprob: -5.849435329437256
    9. '
' → logprob: -5.974435329437256
    10. '[
' → logprob: -5.974435329437256

Token 1179: '://' (ID: 1684)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.789965808391571
    2. ' =' → logprob: -1.2899658679962158
    3. '[' → logprob: -2.164965867996216
    4. 'x' → logprob: -2.789965867996216
    5. 's' → logprob: -3.289965867996216
    6. '[]' → logprob: -4.039965629577637
    7. 'y' → logprob: -4.539965629577637
    8. ')' → logprob: -5.539965629577637
    9. 'l' → logprob: -5.539965629577637
    10. '.' → logprob: -6.164965629577637

Token 1180: 'stackoverflow' (ID: 99294)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2247693538665771
    2. 'i' → logprob: -1.9747693538665771
    3. 'x' → logprob: -1.9747693538665771
    4. '[]' → logprob: -2.099769353866577
    5. 'sum' → logprob: -2.474769353866577
    6. 'a' → logprob: -3.349769353866577
    7. 'token' → logprob: -3.849769353866577
    8. 'item' → logprob: -4.099769592285156
    9. '0' → logprob: -4.349769592285156
    10. 'y' → logprob: -4.474769592285156

Token 1181: '.com' (ID: 1136)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.2670122385025024
    2. ':' → logprob: -1.5170122385025024
    3. '[' → logprob: -1.5170122385025024
    4. '[:]' → logprob: -1.6420122385025024
    5. 'def' → logprob: -4.517012119293213
    6. '.py' → logprob: -4.642012119293213
    7. '[:' → logprob: -4.767012119293213
    8. 's' → logprob: -4.892012119293213
    9. ' :' → logprob: -5.267012119293213
    10. '[
' → logprob: -5.392012119293213

Token 1182: '/questions' (ID: 100087)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5744422078132629
    2. 's' → logprob: -2.199442148208618
    3. '/' → logprob: -2.949442148208618
    4. '<|end|>' → logprob: -3.074442148208618
    5. '   ' → logprob: -3.199442148208618
    6. '<|end|>' → logprob: -3.574442148208618
    7. '_' → logprob: -3.699442148208618
    8. '[' → logprob: -3.699442148208618
    9. ':' → logprob: -4.699442386627197
    10. 'import' → logprob: -4.699442386627197

Token 1183: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.7087465524673462
    2. '/questions' → logprob: -1.4587465524673462
    3. '/items' → logprob: -3.0837464332580566
    4. '/l' → logprob: -3.3337464332580566
    5. '/re' → logprob: -3.3337464332580566
    6. '/a' → logprob: -4.083746433258057
    7. '/wiki' → logprob: -4.458746433258057
    8. '?q' → logprob: -4.583746433258057
    9. '/code' → logprob: -4.708746433258057
    10. '/h' → logprob: -4.708746433258057

Token 1184: '215' (ID: 21625)
  Prédit: 'how'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'how' → logprob: -0.1787983924150467
    2. 'best' → logprob: -3.1787984371185303
    3. 'def' → logprob: -3.4287984371185303
    4. 'flatten' → logprob: -3.6787984371185303
    5. 'complete' → logprob: -4.553798198699951
    6. 'reduce' → logprob: -4.803798198699951
    7. 'view' → logprob: -5.553798198699951
    8. 'import' → logprob: -5.678798198699951
    9. 'completed' → logprob: -6.053798198699951
    10. 'convert' → logprob: -6.303798198699951

Token 1185: '839' (ID: 49502)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1868009567260742
    2. '[]' → logprob: -2.686800956726074
    3. '[' → logprob: -3.061800956726074
    4. '285' → logprob: -3.311800956726074
    5. '286' → logprob: -3.311800956726074
    6. '344' → logprob: -3.686800956726074
    7. '382' → logprob: -3.686800956726074
    8. '372' → logprob: -3.936800956726074
    9. '-' → logprob: -4.061800956726074
    10. '291' → logprob: -4.186800956726074

Token 1186: '5' (ID: 20)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.7631855010986328
    2. 'l' → logprob: -2.513185501098633
    3. '[]' → logprob: -2.638185501098633
    4. 's' → logprob: -2.638185501098633
    5. '/l' → logprob: -2.763185501098633
    6. '0' → logprob: -3.138185501098633
    7. '[' → logprob: -3.263185501098633
    8. '1' → logprob: -3.263185501098633
    9. ']' → logprob: -3.388185501098633
    10. '   ' → logprob: -4.763185501098633

Token 1187: '/' (ID: 14)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1188: 'flatten' (ID: 99592)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12186166644096375
    2. 'for' → logprob: -2.871861696243286
    3. 'it' → logprob: -4.246861457824707
    4. 'yield' → logprob: -4.871861457824707
    5. 'iter' → logprob: -5.621861457824707
    6. 'item' → logprob: -5.621861457824707
    7. ' l' → logprob: -5.746861457824707
    8. 'def' → logprob: -5.746861457824707
    9. 'x' → logprob: -5.871861457824707
    10. 'n' → logprob: -6.371861457824707

Token 1189: '-an' (ID: 32880)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.6778619289398193
    2. '(' → logprob: -1.5528619289398193
    3. '_' → logprob: -2.0528619289398193
    4. '_list' → logprob: -3.1778619289398193
    5. '[' → logprob: -3.8028619289398193
    6. '[]' → logprob: -3.8028619289398193
    7. '[l' → logprob: -3.8028619289398193
    8. '-' → logprob: -5.177862167358398
    9. '-l' → logprob: -5.302862167358398
    10. '_l' → logprob: -5.427862167358398

Token 1190: '-ir' (ID: 162880)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7933240532875061
    2. 'x' → logprob: -0.9183240532875061
    3. 'y' → logprob: -2.2933239936828613
    4. 'for' → logprob: -4.793323993682861
    5. ']' → logprob: -5.043323993682861
    6. 'i' → logprob: -5.668323993682861
    7. '[' → logprob: -5.793323993682861
    8. ')' → logprob: -5.793323993682861
    9. '[]' → logprob: -5.793323993682861
    10. ' l' → logprob: -6.043323993682861

Token 1191: 'regular' (ID: 32790)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.8630940318107605
    2. 'ter' → logprob: -0.8630940318107605
    3. 'sted' → logprob: -2.7380940914154053
    4. 't' → logprob: -3.3630940914154053
    5. 'nested' → logprob: -3.9880940914154053
    6. 'er' → logprob: -4.113093852996826
    7. 'nest' → logprob: -5.238093852996826
    8. '[' → logprob: -5.613093852996826
    9. 'ist' → logprob: -5.738093852996826
    10. 'ed' → logprob: -5.738093852996826

Token 1192: '-list' (ID: 18463)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9837918877601624
    2. 'list' → logprob: -1.1087918281555176
    3. '_' → logprob: -2.1087918281555176
    4. '_list' → logprob: -2.6087918281555176
    5. 'x' → logprob: -3.9837918281555176
    6. ' l' → logprob: -4.358791828155518
    7. '[]' → logprob: -4.733791828155518
    8. '[' → logprob: -4.858791828155518
    9. 'lst' → logprob: -4.858791828155518
    10. '_l' → logprob: -5.108791828155518

Token 1193: '-of' (ID: 13108)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3682275116443634
    2. ']' → logprob: -1.493227481842041
    3. '[' → logprob: -3.618227481842041
    4. '[]' → logprob: -4.618227481842041
    5. '_' → logprob: -4.993227481842041
    6. '-' → logprob: -5.368227481842041
    7. ')]' → logprob: -5.493227481842041
    8. ')">' → logprob: -5.618227481842041
    9. '<|end|>' → logprob: -5.743227481842041
    10. '']' → logprob: -5.993227481842041

Token 1194: '-l' (ID: 2887)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.17687168717384338
    2. '_lists' → logprob: -2.1768717765808105
    3. 'l' → logprob: -4.0518717765808105
    4. ' lists' → logprob: -4.0518717765808105
    5. 'elements' → logprob: -5.9268717765808105
    6. 'nested' → logprob: -6.3018717765808105
    7. '[l' → logprob: -6.6768717765808105
    8. '_l' → logprob: -6.9268717765808105
    9. '[' → logprob: -6.9268717765808105
    10. 'items' → logprob: -7.0518717765808105

Token 1195: 'ists' (ID: 2549)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.39595088362693787
    2. '_lists' → logprob: -1.7709509134292603
    3. 'elements' → logprob: -2.6459507942199707
    4. 'ist' → logprob: -3.5209507942199707
    5. 'items' → logprob: -3.5209507942199707
    6. '_elements' → logprob: -5.145950794219971
    7. 's' → logprob: -6.270950794219971
    8. 'l' → logprob: -6.395950794219971
    9. 'ists' → logprob: -6.395950794219971
    10. '-l' → logprob: -6.395950794219971

Token 1196: '-in' (ID: 4200)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6247210502624512
    2. ')' → logprob: -1.7497210502624512
    3. '[]' → logprob: -2.374721050262451
    4. '[' → logprob: -3.124721050262451
    5. '_' → logprob: -3.374721050262451
    6. '   ' → logprob: -3.374721050262451
    7. '']' → logprob: -3.749721050262451
    8. '<|end|>' → logprob: -3.874721050262451
    9. '"""' → logprob: -4.499721050262451
    10. '<|end|>' → logprob: -5.249721050262451

Token 1197: '-python' (ID: 195043)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.46820569038391113
    2. 'python' → logprob: -1.0932056903839111
    3. 'py' → logprob: -4.218205451965332
    4. ' l' → logprob: -4.343205451965332
    5. 'Python' → logprob: -5.843205451965332
    6. ' python' → logprob: -6.218205451965332
    7. 'elements' → logprob: -6.718205451965332
    8. ')' → logprob: -6.968205451965332
    9. 'lst' → logprob: -7.343205451965332
    10. 'items' → logprob: -7.468205451965332

Token 1198: ' """
' (ID: 7037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3058943450450897
    2. ']' → logprob: -2.305894374847412
    3. '[' → logprob: -2.430894374847412
    4. '')' → logprob: -4.305894374847412
    5. '   ' → logprob: -4.805894374847412
    6. '[]' → logprob: -5.055894374847412
    7. '']' → logprob: -5.055894374847412
    8. '<|end|>' → logprob: -5.305894374847412
    9. '<|end|>' → logprob: -5.680894374847412
    10. '(' → logprob: -5.930894374847412

Token 1199: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6973110437393188
    2. ' for' → logprob: -1.1973110437393188
    3. '[' → logprob: -2.4473109245300293
    4. '   ' → logprob: -3.0723109245300293
    5. 'def' → logprob: -3.9473109245300293
    6. ' l' → logprob: -4.072310924530029
    7. ' [' → logprob: -4.947310924530029
    8. '[]' → logprob: -5.322310924530029
    9. ' []' → logprob: -5.572310924530029
    10. 'for' → logprob: -5.822310924530029

Token 1200: ' import' (ID: 1588)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6041939854621887
    2. '[' → logprob: -1.479193925857544
    3. 'def' → logprob: -2.229193925857544
    4. ' for' → logprob: -3.229193925857544
    5. ' def' → logprob: -4.104194164276123
    6. ' [' → logprob: -4.854194164276123
    7. 'yield' → logprob: -4.854194164276123
    8. '   ' → logprob: -4.979194164276123
    9. '[item' → logprob: -5.479194164276123
    10. '
' → logprob: -5.479194164276123

Token 1201: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -7.469590491382405e-05
    2. ' collections' → logprob: -10.25007438659668
    3. 'numbers' → logprob: -10.37507438659668
    4. 'types' → logprob: -11.87507438659668
    5. 'it' → logprob: -14.37507438659668
    6. 'collect' → logprob: -15.62507438659668
    7. 'copy' → logprob: -16.37507438659668
    8. 'abc' → logprob: -16.37507438659668
    9. '_' → logprob: -16.75007438659668
    10. 'Iterable' → logprob: -17.37507438659668

Token 1202: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6688744425773621
    2. 'def' → logprob: -1.9188745021820068
    3. '
' → logprob: -2.293874502182007
    4. 'abc' → logprob: -2.793874502182007
    5. 'Iterable' → logprob: -2.918874502182007
    6. 'import' → logprob: -3.793874502182007
    7. '    ' → logprob: -3.793874502182007
    8. '.Iter' → logprob: -3.918874502182007
    9. '.' → logprob: -4.168874263763428
    10. ' Iterable' → logprob: -4.543874263763428

Token 1203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4751102328300476
    2. '    ' → logprob: -2.4751102924346924
    3. 'def' → logprob: -2.4751102924346924
    4. 'abc' → logprob: -2.7251102924346924
    5. 'Iterable' → logprob: -2.9751102924346924
    6. ' Iterable' → logprob: -3.7251102924346924
    7. ' abc' → logprob: -3.8501102924346924
    8. '.Iter' → logprob: -4.350110054016113
    9. '
' → logprob: -4.725110054016113
    10. ' def' → logprob: -5.100110054016113

Token 1204: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5160982608795166
    2. 'def' → logprob: -1.8910982608795166
    3. 'Iterable' → logprob: -2.1410982608795166
    4. 'abc' → logprob: -2.8910982608795166
    5. 'is' → logprob: -3.0160982608795166
    6. '       ' → logprob: -4.3910980224609375
    7. '    ' → logprob: -5.2660980224609375
    8. '.Iter' → logprob: -5.6410980224609375
    9. ' Iterable' → logprob: -6.7660980224609375
    10. 'deque' → logprob: -6.7660980224609375

Token 1205: ' el' (ID: 650)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.3483944535255432
    2. 'elt' → logprob: -3.0983943939208984
    3. 'ele' → logprob: -3.0983943939208984
    4. 'el' → logprob: -3.0983943939208984
    5. 'item' → logprob: -3.3483943939208984
    6. 'i' → logprob: -3.8483943939208984
    7. 'sub' → logprob: -3.8483943939208984
    8. 'l' → logprob: -4.098394393920898
    9. 'x' → logprob: -4.473394393920898
    10. 's' → logprob: -4.723394393920898

Token 1206: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021769083105027676
    2. '   ' → logprob: -6.877176761627197
    3. ' ' → logprob: -7.877176761627197
    4. 'in' → logprob: -8.252177238464355
    5. '  ' → logprob: -8.377177238464355
    6. '    ' → logprob: -9.877177238464355
    7. '       ' → logprob: -10.002177238464355
    8. ' if' → logprob: -10.002177238464355
    9. 'import' → logprob: -11.127177238464355
    10. 'if' → logprob: -11.127177238464355

Token 1207: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09535112231969833
    2. 'el' → logprob: -2.845351219177246
    3. '(l' → logprob: -4.220351219177246
    4. '(el' → logprob: -4.220351219177246
    5. ' l' → logprob: -6.220351219177246
    6. ' el' → logprob: -7.470351219177246
    7. ' (' → logprob: -7.470351219177246
    8. 'collections' → logprob: -9.095351219177246
    9. '(collection' → logprob: -10.220351219177246
    10. '(' → logprob: -10.345351219177246

Token 1208: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054794035851955414
    2. '   ' → logprob: -4.304793834686279
    3. '       ' → logprob: -4.304793834686279
    4. 'in' → logprob: -4.554793834686279
    5. ':' → logprob: -5.804793834686279
    6. '  ' → logprob: -5.929793834686279
    7. ':
' → logprob: -6.429793834686279
    8. ' ' → logprob: -6.554793834686279
    9. '    ' → logprob: -6.554793834686279
    10. ' if' → logprob: -6.554793834686279

Token 1209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25834932923316956
    2. '   ' → logprob: -2.5083494186401367
    3. '    ' → logprob: -2.8833494186401367
    4. ' if' → logprob: -2.8833494186401367
    5. 'if' → logprob: -4.258349418640137
    6. '        
' → logprob: -5.133349418640137
    7. '    
' → logprob: -5.383349418640137
    8. '        ' → logprob: -5.758349418640137
    9. '
' → logprob: -6.258349418640137
    10. '	   ' → logprob: -7.008349418640137

Token 1210: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03273516148328781
    2. ' if' → logprob: -3.6577351093292236
    3. '       ' → logprob: -5.407735347747803
    4. '   ' → logprob: -6.782735347747803
    5. 'yield' → logprob: -7.907735347747803
    6. '    ' → logprob: -8.282734870910645
    7. '        ' → logprob: -9.657734870910645
    8. '	if' → logprob: -10.157734870910645
    9. 'while' → logprob: -10.657734870910645
    10. ' ' → logprob: -11.532734870910645

Token 1211: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0011256909929215908
    2. ' isinstance' → logprob: -6.876125812530518
    3. '   ' → logprob: -10.00112533569336
    4. '(is' → logprob: -10.12612533569336
    5. '  ' → logprob: -13.12612533569336
    6. '       ' → logprob: -13.25112533569336
    7. '    ' → logprob: -14.00112533569336
    8. ' is' → logprob: -14.37612533569336
    9. '	is' → logprob: -14.62612533569336
    10. 'elif' → logprob: -14.87612533569336

Token 1212: '(el' (ID: 35872)
  Prédit: '(el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(el' → logprob: -5.7292167184641585e-05
    2. 'el' → logprob: -10.125057220458984
    3. 'collections' → logprob: -12.000057220458984
    4. ' (' → logprob: -12.125057220458984
    5. '(collection' → logprob: -12.750057220458984
    6. '(' → logprob: -13.500057220458984
    7. ' el' → logprob: -14.500057220458984
    8. '	el' → logprob: -14.875057220458984
    9. '(iter' → logprob: -15.375057220458984
    10. '((' → logprob: -16.500057220458984

Token 1213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003589141182601452
    2. '(' → logprob: -6.128589153289795
    3. ',(' → logprob: -7.628589153289795
    4. ',list' → logprob: -8.128588676452637
    5. 'collections' → logprob: -8.378588676452637
    6. '(collection' → logprob: -8.753588676452637
    7. ' (' → logprob: -8.878588676452637
    8. '(list' → logprob: -10.503588676452637
    9. '(el' → logprob: -10.628588676452637
    10. '((' → logprob: -11.878588676452637

Token 1214: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.00044258590787649155
    2. '(collection' → logprob: -7.7504425048828125
    3. ' collections' → logprob: -11.750442504882812
    4. '(' → logprob: -12.625442504882812
    5. 'collection' → logprob: -14.875442504882812
    6. '.collections' → logprob: -16.125442504882812
    7. 'list' → logprob: -17.000442504882812
    8. ' (' → logprob: -17.000442504882812
    9. '   ' → logprob: -17.375442504882812
    10. 'col' → logprob: -17.625442504882812

Token 1215: '.Iter' (ID: 58705)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3041793406009674
    2. '.Iter' → logprob: -1.429179310798645
    3. '.Mutable' → logprob: -4.8041791915893555
    4. '.Sequence' → logprob: -4.9291791915893555
    5. 'abc' → logprob: -5.0541791915893555
    6. '.Iterator' → logprob: -8.179179191589355
    7. 'Iterable' → logprob: -8.304179191589355
    8. 's' → logprob: -8.929179191589355
    9. 'ABC' → logprob: -9.554179191589355
    10. '   ' → logprob: -9.929179191589355

Token 1216: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -4.167648876318708e-05
    2. 'abc' → logprob: -10.375041961669922
    3. '   ' → logprob: -12.125041961669922
    4. 'Iterable' → logprob: -13.750041961669922
    5. 'ABLE' → logprob: -13.875041961669922
    6. 'ables' → logprob: -14.500041961669922
    7. '       ' → logprob: -14.500041961669922
    8. 'abcdef' → logprob: -14.625041961669922
    9. 'import' → logprob: -14.750041961669922
    10. '```' → logprob: -14.750041961669922

Token 1217: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08876997232437134
    2. ' and' → logprob: -2.7137699127197266
    3. ',' → logprob: -4.713769912719727
    4. 'and' → logprob: -5.463769912719727
    5. '):' → logprob: -5.713769912719727
    6. '):
' → logprob: -6.463769912719727
    7. ' ,' → logprob: -8.338769912719727
    8. ' )' → logprob: -8.588769912719727
    9. '),' → logprob: -9.338769912719727
    10. ' but' → logprob: -10.963769912719727

Token 1218: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09498725831508636
    2. 'and' → logprob: -2.469987154006958
    3. ':' → logprob: -5.344987392425537
    4. '       ' → logprob: -8.094986915588379
    5. ':
' → logprob: -8.094986915588379
    6. '           ' → logprob: -8.969986915588379
    7. '        ' → logprob: -8.969986915588379
    8. '	and' → logprob: -9.969986915588379
    9. ' but' → logprob: -9.969986915588379
    10. '    ' → logprob: -10.094986915588379

Token 1219: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.2948405128554441e-05
    2. ' not' → logprob: -11.37501335144043
    3. '
' → logprob: -14.00001335144043
    4. '   ' → logprob: -15.25001335144043
    5. 'el' → logprob: -16.12501335144043
    6. '       ' → logprob: -16.62501335144043
    7. '	not' → logprob: -16.75001335144043
    8. '           ' → logprob: -17.12501335144043
    9. '#' → logprob: -17.75001335144043
    10. '!' → logprob: -18.00001335144043

Token 1220: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -4.334533878136426e-05
    2. ' isinstance' → logprob: -10.250042915344238
    3. '(is' → logprob: -11.750042915344238
    4. '   ' → logprob: -17.000043869018555
    5. 'typeof' → logprob: -17.750043869018555
    6. '
' → logprob: -18.750043869018555
    7. '           ' → logprob: -19.375043869018555
    8. '       ' → logprob: -19.625043869018555
    9. 'str' → logprob: -19.625043869018555
    10. '```' → logprob: -19.875043869018555

Token 1221: '(el' (ID: 35872)
  Prédit: '(el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(el' → logprob: -0.0024914760142564774
    2. '(str' → logprob: -6.002491474151611
    3. 'el' → logprob: -11.75249195098877
    4. 'str' → logprob: -11.87749195098877
    5. ' el' → logprob: -14.50249195098877
    6. '	el' → logprob: -15.00249195098877
    7. '(ele' → logprob: -16.877490997314453
    8. ' (' → logprob: -17.002490997314453
    9. '(' → logprob: -17.252490997314453
    10. '.el' → logprob: -18.002490997314453

Token 1222: ',' (ID: 11)
  Prédit: '(el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(el' → logprob: -0.19382402300834656
    2. ',' → logprob: -2.318824052810669
    3. 'el' → logprob: -2.568824052810669
    4. '	el' → logprob: -8.44382381439209
    5. '.el' → logprob: -8.56882381439209
    6. 'str' → logprob: -8.69382381439209
    7. '[' → logprob: -9.06882381439209
    8. ' el' → logprob: -9.19382381439209
    9. '(str' → logprob: -9.56882381439209
    10. '(' → logprob: -9.56882381439209

Token 1223: ' (' (ID: 350)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.01108389999717474
    2. 'str' → logprob: -4.511084079742432
    3. '(' → logprob: -10.511083602905273
    4. ' (' → logprob: -11.761083602905273
    5. ' str' → logprob: -14.136083602905273
    6. '[str' → logprob: -16.136083602905273
    7. '(s' → logprob: -16.886083602905273
    8. 'bases' → logprob: -17.011083602905273
    9. '(string' → logprob: -17.511083602905273
    10. '(bytes' → logprob: -17.886083602905273

Token 1224: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.16040091216564178
    2. '(str' → logprob: -1.9104008674621582
    3. '(' → logprob: -8.660401344299316
    4. ' str' → logprob: -13.535401344299316
    5. 'bases' → logprob: -13.660401344299316
    6. '[str' → logprob: -14.910401344299316
    7. ' (' → logprob: -15.035401344299316
    8. 'list' → logprob: -16.285400390625
    9. '(int' → logprob: -16.410400390625
    10. '(s' → logprob: -16.535400390625

Token 1225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004299540014471859
    2. ',list' → logprob: -7.875430107116699
    3. ',str' → logprob: -10.5004301071167
    4. ')):' → logprob: -11.6254301071167
    5. '))' → logprob: -12.1254301071167
    6. ' ,' → logprob: -12.7504301071167
    7. ',List' → logprob: -13.6254301071167
    8. ')):
' → logprob: -13.7504301071167
    9. ')' → logprob: -14.0004301071167
    10. 'list' → logprob: -15.0004301071167

Token 1226: ' bytes' (ID: 11643)
  Prédit: 'bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bytes' → logprob: -0.00016349162615370005
    2. ' bytes' → logprob: -8.750163078308105
    3. 'list' → logprob: -13.000163078308105
    4. '
' → logprob: -13.375163078308105
    5. 'tuple' → logprob: -15.000163078308105
    6. 'unicode' → logprob: -15.625163078308105
    7. '       ' → logprob: -15.750163078308105
    8. '   ' → logprob: -16.375164031982422
    9. '	bytes' → logprob: -16.500164031982422
    10. 'byte' → logprob: -16.625164031982422

Token 1227: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.11851060390472412
    2. ')):
' → logprob: -2.2435107231140137
    3. '))' → logprob: -5.368510723114014
    4. ')' → logprob: -7.618510723114014
    5. ',' → logprob: -7.868510723114014
    6. ')):
' → logprob: -9.118510246276855
    7. '):' → logprob: -11.868510246276855
    8. '   ' → logprob: -12.243510246276855
    9. ' ))' → logprob: -12.493510246276855
    10. ',list' → logprob: -12.868510246276855

Token 1228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09876258671283722
    2. 'yield' → logprob: -3.0987625122070312
    3. '            ' → logprob: -3.5987625122070312
    4. ' yield' → logprob: -5.223762512207031
    5. '               ' → logprob: -5.598762512207031
    6. '        ' → logprob: -5.973762512207031
    7. '            
' → logprob: -6.098762512207031
    8. ':' → logprob: -6.473762512207031
    9. '          ' → logprob: -6.973762512207031
    10. ' ' → logprob: -7.098762512207031

Token 1229: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.06270343065261841
    2. '           ' → logprob: -3.5627033710479736
    3. 'for' → logprob: -4.062703609466553
    4. '	yield' → logprob: -5.312703609466553
    5. ' yield' → logprob: -5.437703609466553
    6. '               ' → logprob: -5.437703609466553
    7. '            ' → logprob: -7.562703609466553
    8. '   ' → logprob: -7.687703609466553
    9. '	       ' → logprob: -9.187703132629395
    10. ' ' → logprob: -9.312703132629395

Token 1230: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.003203138941898942
    2. ' from' → logprob: -5.75320291519165
    3. '	from' → logprob: -10.753203392028809
    4. '   ' → logprob: -13.128203392028809
    5. ' ' → logprob: -13.378203392028809
    6. 'el' → logprob: -16.128202438354492
    7. '.from' → logprob: -16.503202438354492
    8. '		' → logprob: -16.753202438354492
    9. '  ' → logprob: -16.753202438354492
    10. 'for' → logprob: -17.003202438354492

Token 1231: ' flatten' (ID: 61445)
  Prédit: 'flatten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flatten' → logprob: -0.00024192029377445579
    2. 'el' → logprob: -8.500242233276367
    3. 'flat' → logprob: -10.750242233276367
    4. ' flatten' → logprob: -11.000242233276367
    5. 'fl' → logprob: -16.125242233276367
    6. '(flat' → logprob: -16.250242233276367
    7. '   ' → logprob: -18.125242233276367
    8. '.flatten' → logprob: -18.750242233276367
    9. '	el' → logprob: -19.750242233276367
    10. '_flat' → logprob: -19.750242233276367

Token 1232: '(el' (ID: 35872)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.00414274213835597
    2. '(el' → logprob: -5.504142761230469
    3. ' el' → logprob: -9.879142761230469
    4. '	el' → logprob: -11.379142761230469
    5. '(' → logprob: -13.629142761230469
    6. 'ele' → logprob: -15.879142761230469
    7. '(
' → logprob: -16.37914276123047
    8. '_el' → logprob: -16.87914276123047
    9. ''el' → logprob: -16.87914276123047
    10. ' ' → logprob: -17.25414276123047

Token 1233: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21854884922504425
    2. '(el' → logprob: -1.7185488939285278
    3. '))' → logprob: -4.593548774719238
    4. 'el' → logprob: -5.093548774719238
    5. ')
' → logprob: -7.468548774719238
    6. '           ' → logprob: -10.593548774719238
    7. '(' → logprob: -10.718548774719238
    8. '	el' → logprob: -10.843548774719238
    9. '))
' → logprob: -11.093548774719238
    10. ' )' → logprob: -11.093548774719238

Token 1234: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32992225885391235
    2. '               ' → logprob: -2.3299221992492676
    3. '       ' → logprob: -2.7049221992492676
    4. ' else' → logprob: -2.9549221992492676
    5. 'else' → logprob: -3.5799221992492676
    6. '                   ' → logprob: -4.829922199249268
    7. ' y' → logprob: -4.829922199249268
    8. 'y' → logprob: -5.329922199249268
    9. ' ' → logprob: -6.079922199249268
    10. '                       ' → logprob: -6.704922199249268

Token 1235: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.43847137689590454
    2. ' else' → logprob: -1.6884713172912598
    3. '       ' → logprob: -1.8134713172912598
    4. '           ' → logprob: -5.31347131729126
    5. ' ' → logprob: -7.43847131729126
    6. '               ' → logprob: -7.43847131729126
    7. '   ' → logprob: -8.938471794128418
    8. '.' → logprob: -9.313471794128418
    9. ':' → logprob: -9.563471794128418
    10. ':
' → logprob: -9.813471794128418

Token 1236: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9287537932395935
    2. '           ' → logprob: -1.0537538528442383
    3. ':
' → logprob: -2.8037538528442383
    4. ' :' → logprob: -3.0537538528442383
    5. '        ' → logprob: -3.1787538528442383
    6. '       ' → logprob: -3.9287538528442383
    7. '         ' → logprob: -4.178753852844238
    8. '            ' → logprob: -4.178753852844238
    9. ' ' → logprob: -4.303753852844238
    10. '               ' → logprob: -4.428753852844238

Token 1237: '           ' (ID: 352)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.0648089349269867
    2. ' yield' → logprob: -3.0648088455200195
    3. '           ' → logprob: -4.1898088455200195
    4. '       ' → logprob: -7.8148088455200195
    5. '	yield' → logprob: -7.8148088455200195
    6. '               ' → logprob: -10.18980884552002
    7. '   ' → logprob: -11.18980884552002
    8. '        ' → logprob: -11.18980884552002
    9. ' ' → logprob: -11.18980884552002
    10. ' ' → logprob: -11.31480884552002

Token 1238: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.0009885076433420181
    2. 'el' → logprob: -7.000988483428955
    3. ' yield' → logprob: -9.625988960266113
    4. '	yield' → logprob: -11.500988960266113
    5. '       ' → logprob: -15.125988960266113
    6. '           ' → logprob: -15.500988960266113
    7. '	el' → logprob: -15.750988960266113
    8. ' el' → logprob: -16.000988006591797
    9. '   ' → logprob: -16.250988006591797
    10. 'Yield' → logprob: -16.750988006591797

Token 1239: ' el' (ID: 650)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.020229671150445938
    2. ' y' → logprob: -4.395229816436768
    3. 'x' → logprob: -4.895229816436768
    4. 'el' → logprob: -10.14522933959961
    5. '=' → logprob: -10.64522933959961
    6. ' x' → logprob: -11.02022933959961
    7. ')y' → logprob: -11.14522933959961
    8. '   ' → logprob: -11.39522933959961
    9. 'z' → logprob: -11.52022933959961
    10. ')' → logprob: -11.52022933959961

Token 1240: '

' (ID: 279)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7790337800979614
    2. '=' → logprob: -1.4040337800979614
    3. 'y' → logprob: -1.6540337800979614
    4. '.y' → logprob: -2.529033660888672
    5. '.' → logprob: -4.779033660888672
    6. ' y' → logprob: -5.529033660888672
    7. '   ' → logprob: -5.904033660888672
    8. '       ' → logprob: -6.154033660888672
    9. ' ' → logprob: -6.904033660888672
    10. 'x' → logprob: -7.029033660888672

Token 1241: 'if' (ID: 366)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6257202625274658
    2. '=' → logprob: -1.0007202625274658
    3. ' =' → logprob: -3.000720262527466
    4. '       ' → logprob: -4.250720024108887
    5. ' y' → logprob: -4.625720024108887
    6. 'x' → logprob: -4.750720024108887
    7. '   ' → logprob: -5.625720024108887
    8. '           ' → logprob: -5.750720024108887
    9. ' ' → logprob: -6.125720024108887
    10. '.' → logprob: -7.000720024108887

Token 1242: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0022160345688462257
    2. '__' → logprob: -6.12721586227417
    3. '_' → logprob: -11.127216339111328
    4. ' _' → logprob: -12.252216339111328
    5. ' ' → logprob: -12.377216339111328
    6. ' ' → logprob: -12.877216339111328
    7. 'name' → logprob: -13.252216339111328
    8. ' True' → logprob: -14.502216339111328
    9. ' ___' → logprob: -14.502216339111328
    10. '_name' → logprob: -14.752216339111328

Token 1243: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0063732098788022995
    2. '_' → logprob: -5.256373405456543
    3. '__.' → logprob: -7.256373405456543
    4. '__.__' → logprob: -8.256373405456543
    5. ' __' → logprob: -9.631373405456543
    6. 'name' → logprob: -11.006373405456543
    7. '.' → logprob: -11.131373405456543
    8. '___' → logprob: -11.381373405456543
    9. '__':
' → logprob: -11.756373405456543
    10. '__
' → logprob: -11.756373405456543

Token 1244: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.896309739408025e-07
    2. '__.__' → logprob: -15.125000953674316
    3. '__
' → logprob: -15.750000953674316
    4. '==' → logprob: -15.750000953674316
    5. '____' → logprob: -16.875
    6. 'name' → logprob: -17.125
    7. ' ==' → logprob: -17.5
    8. '__('' → logprob: -17.625
    9. '__.' → logprob: -17.625
    10. '_' → logprob: -18.125

Token 1245: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07254375517368317
    2. ' ==' → logprob: -2.9475438594818115
    3. '==' → logprob: -4.072543621063232
    4. '=="' → logprob: -8.32254409790039
    5. '=='' → logprob: -8.82254409790039
    6. '_' → logprob: -10.19754409790039
    7. '___' → logprob: -10.94754409790039
    8. '__.__' → logprob: -11.69754409790039
    9. '=' → logprob: -12.07254409790039
    10. ' __' → logprob: -12.94754409790039

Token 1246: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4740884006023407
    2. ''' → logprob: -0.9740884304046631
    3. ' "__' → logprob: -11.974088668823242
    4. '__' → logprob: -12.599088668823242
    5. ' '__' → logprob: -14.099088668823242
    6. '"name' → logprob: -15.099088668823242
    7. ''name' → logprob: -15.724088668823242
    8. '"class' → logprob: -15.849088668823242
    9. '   ' → logprob: -16.474088668823242
    10. ''"' → logprob: -17.099088668823242

Token 1247: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00015955790877342224
    2. 'name' → logprob: -8.75015926361084
    3. '__' → logprob: -14.12515926361084
    4. '_main' → logprob: -15.12515926361084
    5. ' main' → logprob: -17.750160217285156
    6. 'built' → logprob: -18.250160217285156
    7. '(main' → logprob: -19.000160217285156
    8. '-main' → logprob: -20.125160217285156
    9. 'maine' → logprob: -20.125160217285156
    10. 'm' → logprob: -20.250160217285156

Token 1248: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11092953383922577
    2. '__':
' → logprob: -2.860929489135742
    3. '__:' → logprob: -3.110929489135742
    4. '__":
' → logprob: -6.235929489135742
    5. '_' → logprob: -8.110929489135742
    6. ':' → logprob: -8.360929489135742
    7. '__((' → logprob: -8.735929489135742
    8. '():' → logprob: -9.235929489135742
    9. '__(*' → logprob: -9.360929489135742
    10. '__(' → logprob: -9.610929489135742

Token 1249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31098195910453796
    2. 'import' → logprob: -1.5609819889068604
    3. ' import' → logprob: -3.6859819889068604
    4. '	import' → logprob: -3.6859819889068604
    5. '<|end|>' → logprob: -5.435981750488281
    6. '    
' → logprob: -7.810981750488281
    7. '```' → logprob: -7.935981750488281
    8. 'n' → logprob: -7.935981750488281
    9. 'input' → logprob: -9.060981750488281
    10. '(n' → logprob: -9.060981750488281

Token 1250: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1425822228193283
    2. ' import' → logprob: -2.7675821781158447
    3. ' n' → logprob: -3.5175821781158447
    4. 'n' → logprob: -3.6425821781158447
    5. '   ' → logprob: -4.267582416534424
    6. 'N' → logprob: -9.267581939697266
    7. ' N' → logprob: -9.642581939697266
    8. '	import' → logprob: -11.392581939697266
    9. 'while' → logprob: -11.517581939697266
    10. '	n' → logprob: -12.642581939697266

Token 1251: ' ?' (ID: 1423)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.024660661816596985
    2. ' import' → logprob: -4.649660587310791
    3. 'n' → logprob: -4.899660587310791
    4. '   ' → logprob: -5.399660587310791
    5. ' n' → logprob: -6.399660587310791
    6. 'while' → logprob: -7.774660587310791
    7. 'for' → logprob: -8.77466106414795
    8. 'data' → logprob: -8.77466106414795
    9. 'node' → logprob: -9.39966106414795
    10. 'N' → logprob: -9.77466106414795

Token 1252: '????????' (ID: 85218)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.38740649819374084
    2. 'n' → logprob: -2.387406587600708
    3. '   ' → logprob: -2.512406587600708
    4. 'input' → logprob: -3.387406587600708
    5. '__' → logprob: -3.887406587600708
    6. 'i' → logprob: -4.512406349182129
    7. '_' → logprob: -4.512406349182129
    8. ' import' → logprob: -4.762406349182129
    9. '[]' → logprob: -5.137406349182129
    10. 'def' → logprob: -5.137406349182129

Token 1253: '????' (ID: 25883)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06554317474365234
    2. 'import' → logprob: -2.9405431747436523
    3. 'n' → logprob: -5.690543174743652
    4. ' import' → logprob: -6.565543174743652
    5. 'data' → logprob: -7.065543174743652
    6. ' n' → logprob: -7.190543174743652
    7. 'input' → logprob: -7.440543174743652
    8. 's' → logprob: -8.065543174743652
    9. ' lines' → logprob: -8.190543174743652
    10. '(n' → logprob: -8.190543174743652

Token 1254: '?\' (ID: 70237)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.391359806060791
    2. '   ' → logprob: -1.141359806060791
    3. ' import' → logprob: -6.266359806060791
    4. 'n' → logprob: -7.391359806060791
    5. 'data' → logprob: -7.391359806060791
    6. 'node' → logprob: -8.266359329223633
    7. ' n' → logprob: -8.641359329223633
    8. '	import' → logprob: -8.766359329223633
    9. 'input' → logprob: -8.891359329223633
    10. ' lines' → logprob: -9.266359329223633

Token 1255: '???
' (ID: 136325)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0850280299782753
    2. '   ' → logprob: -3.5850279331207275
    3. ' import' → logprob: -3.7100279331207275
    4. 'n' → logprob: -4.460028171539307
    5. ' n' → logprob: -4.710028171539307
    6. 'input' → logprob: -6.335028171539307
    7. 'data' → logprob: -6.460028171539307
    8. ' lines' → logprob: -6.585028171539307
    9. 'inputs' → logprob: -7.210028171539307
    10. ' input' → logprob: -7.335028171539307

Token 1256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06747650355100632
    2. 'import' → logprob: -3.067476511001587
    3. 'n' → logprob: -4.567476272583008
    4. ' import' → logprob: -6.067476272583008
    5. ' n' → logprob: -6.692476272583008
    6. 'i' → logprob: -6.942476272583008
    7. '	import' → logprob: -7.567476272583008
    8. '    ' → logprob: -7.817476272583008
    9. 't' → logprob: -8.067476272583008
    10. ' ' → logprob: -8.067476272583008

Token 1257: ' num' (ID: 2269)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.24951894581317902
    2. 'n' → logprob: -2.124518871307373
    3. ' n' → logprob: -3.374518871307373
    4. '   ' → logprob: -3.374518871307373
    5. ' import' → logprob: -4.124518871307373
    6. 'data' → logprob: -5.374518871307373
    7. 'node' → logprob: -5.999518871307373
    8. 'N' → logprob: -6.749518871307373
    9. 'for' → logprob: -6.749518871307373
    10. 'commands' → logprob: -6.999518871307373

Token 1258: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7300489544868469
    2. 's' → logprob: -1.3550488948822021
    3. '=' → logprob: -2.105048894882202
    4. ' =' → logprob: -2.480048894882202
    5. '=int' → logprob: -4.105049133300781
    6. '_=' → logprob: -4.480049133300781
    7. '_inputs' → logprob: -4.855049133300781
    8. '_lines' → logprob: -4.980049133300781
    9. ' _' → logprob: -5.980049133300781
    10. '_items' → logprob: -6.355049133300781

Token 1259: '_nodes' (ID: 34593)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7249045372009277
    2. 'inputs' → logprob: -1.2249045372009277
    3. 'instructions' → logprob: -2.5999045372009277
    4. 'commands' → logprob: -3.3499045372009277
    5. 'inst' → logprob: -3.3499045372009277
    6. 'lines' → logprob: -3.5999045372009277
    7. 'input' → logprob: -4.224904537200928
    8. 'nodes' → logprob: -4.599904537200928
    9. ' int' → logprob: -5.349904537200928
    10. 'test' → logprob: -5.974904537200928

Token 1260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021964171901345253
    2. '=' → logprob: -4.021964073181152
    3. ',' → logprob: -5.771964073181152
    4. '=int' → logprob: -7.521964073181152
    5. '   ' → logprob: -9.396964073181152
    6. ' ,' → logprob: -10.271964073181152
    7. '=input' → logprob: -12.021964073181152
    8. ' ' → logprob: -12.146964073181152
    9. '    ' → logprob: -12.146964073181152
    10. ',int' → logprob: -12.771964073181152

Token 1261: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.7697225252486533e-06
    2. ' int' → logprob: -12.500003814697266
    3. 'input' → logprob: -18.500003814697266
    4. '[int' → logprob: -19.625003814697266
    5. '	int' → logprob: -19.875003814697266
    6. '   ' → logprob: -19.875003814697266
    7. '10' → logprob: -20.000003814697266
    8. ' ' → logprob: -20.625003814697266
    9. '  ' → logprob: -20.875003814697266
    10. '
' → logprob: -21.375003814697266

Token 1262: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.003179855877533555
    2. 'input' → logprob: -5.753180027008057
    3. '(' → logprob: -13.378179550170898
    4. ' input' → logprob: -14.878179550170898
    5. '=input' → logprob: -16.2531795501709
    6. '	input' → logprob: -17.3781795501709
    7. ',input' → logprob: -17.8781795501709
    8. '<input' → logprob: -19.0031795501709
    9. ' (' → logprob: -19.3781795501709
    10. '(
' → logprob: -19.5031795501709

Token 1263: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04954645037651062
    2. '()' → logprob: -3.049546480178833
    3. '('' → logprob: -7.424546241760254
    4. '(' → logprob: -8.299546241760254
    5. '())
' → logprob: -9.549546241760254
    6. '().' → logprob: -10.799546241760254
    7. ')' → logprob: -12.049546241760254
    8. ' ())' → logprob: -12.174546241760254
    9. '()
' → logprob: -12.799546241760254
    10. '("' → logprob: -13.174546241760254

Token 1264: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007616325747221708
    2. 'node' → logprob: -5.8826165199279785
    3. '   ' → logprob: -6.2576165199279785
    4. ' for' → logprob: -6.3826165199279785
    5. 'nodes' → logprob: -7.0076165199279785
    6. 'inputs' → logprob: -9.38261604309082
    7. 'commands' → logprob: -9.63261604309082
    8. 'while' → logprob: -10.38261604309082
    9. 'lines' → logprob: -10.63261604309082
    10. 'data' → logprob: -11.00761604309082

Token 1265: ' node' (ID: 4596)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3883899748325348
    2. 'node' (adapté à ' node') → logprob: -1.1383899450302124
    3. 'nodes' → logprob: -7.388390064239502
    4. '   ' → logprob: -8.638389587402344
    5. 'commands' → logprob: -8.888389587402344
    6. ' for' → logprob: -8.888389587402344
    7. 'inputs' → logprob: -9.263389587402344
    8. 'line' → logprob: -9.763389587402344
    9. 'import' → logprob: -9.888389587402344
    10. 'lines' → logprob: -10.013389587402344

Token 1266: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -6.034592388459714e-06
    2. 's' → logprob: -12.625005722045898
    3. 'data' → logprob: -13.750005722045898
    4. '_' → logprob: -14.500005722045898
    5. '_datas' → logprob: -15.000005722045898
    6. '_input' → logprob: -15.250005722045898
    7. '_list' → logprob: -15.375005722045898
    8. '_s' → logprob: -16.0000057220459
    9. '_inputs' → logprob: -16.1250057220459
    10. '_commands' → logprob: -17.5000057220459

Token 1267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03022976778447628
    2. ' =' → logprob: -3.5302298069000244
    3. '=[]' → logprob: -7.655229568481445
    4. '=[]
' → logprob: -12.405229568481445
    5. '[]' → logprob: -14.280229568481445
    6. '   ' → logprob: -16.280229568481445
    7. '＝' → logprob: -16.405229568481445
    8. '[' → logprob: -16.530229568481445
    9. '[]=' → logprob: -16.530229568481445
    10. 's' → logprob: -16.655229568481445

Token 1268: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20355017483234406
    2. '[]' → logprob: -1.7035502195358276
    3. '[int' → logprob: -7.453550338745117
    4. '[input' → logprob: -7.453550338745117
    5. '[num' → logprob: -8.828550338745117
    6. '[]
' → logprob: -8.828550338745117
    7. '[class' → logprob: -9.078550338745117
    8. '[list' → logprob: -9.453550338745117
    9. '[n' → logprob: -9.953550338745117
    10. '[str' → logprob: -9.953550338745117

Token 1269: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006026676390320063
    2. 'list' → logprob: -5.506026744842529
    3. ' input' → logprob: -6.256026744842529
    4. '[input' → logprob: -10.881026268005371
    5. ' list' → logprob: -11.881026268005371
    6. '   ' → logprob: -14.131026268005371
    7. '(input' → logprob: -14.756026268005371
    8. '<input' → logprob: -15.506026268005371
    9. '[' → logprob: -16.131027221679688
    10. '=input' → logprob: -16.256027221679688

Token 1270: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00132976402528584
    2. '()' → logprob: -6.6263298988342285
    3. '()]' → logprob: -14.00132942199707
    4. ' ().' → logprob: -14.00132942199707
    5. '(' → logprob: -14.25132942199707
    6. '())' → logprob: -15.00132942199707
    7. '()].' → logprob: -15.25132942199707
    8. '.split' → logprob: -15.37632942199707
    9. '('').' → logprob: -15.37632942199707
    10. '('' → logprob: -16.12632942199707

Token 1271: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008617766201496124
    2. 'strip' → logprob: -4.758617877960205
    3. ' split' → logprob: -13.258617401123047
    4. 'rstrip' → logprob: -13.508617401123047
    5. '(split' → logprob: -16.383617401123047
    6. ' strip' → logprob: -17.508617401123047
    7. 'spl' → logprob: -17.633617401123047
    8. '.split' → logprob: -19.133617401123047
    9. 'str' → logprob: -19.633617401123047
    10. '().' → logprob: -20.383617401123047

Token 1272: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009771942859515548
    2. '()]' → logprob: -7.250977039337158
    3. '())' → logprob: -8.250977516174316
    4. '()
' → logprob: -13.250977516174316
    5. '('' → logprob: -13.250977516174316
    6. '(' → logprob: -13.750977516174316
    7. '()]
' → logprob: -14.250977516174316
    8. ' ()' → logprob: -15.125977516174316
    9. ')' → logprob: -15.625977516174316
    10. '()[' → logprob: -15.625977516174316

Token 1273: ' ')' (ID: 35910)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3483771085739136
    2. ')]' → logprob: -1.8483771085739136
    3. ')' → logprob: -2.348377227783203
    4. '()' → logprob: -3.348377227783203
    5. '()]' → logprob: -5.973377227783203
    6. '')]' → logprob: -6.598377227783203
    7. '(' → logprob: -7.473377227783203
    8. '('' → logprob: -8.098377227783203
    9. ')]
' → logprob: -8.223377227783203
    10. '')' → logprob: -8.223377227783203

Token 1274: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6833885908126831
    2. ' for' → logprob: -1.183388590812683
    3. ')' → logprob: -2.1833887100219727
    4. 'for' → logprob: -2.8083887100219727
    5. '       ' → logprob: -4.808388710021973
    6. '()' → logprob: -5.433388710021973
    7. ']' → logprob: -6.558388710021973
    8. ')]' → logprob: -7.183388710021973
    9. '    ' → logprob: -7.933388710021973
    10. '           ' → logprob: -8.558388710021973

Token 1275: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0010719887213781476
    2. '_i' → logprob: -6.876071929931641
    3. '_in' → logprob: -11.00107192993164
    4. 'i' → logprob: -11.37607192993164
    5. '_range' → logprob: -12.75107192993164
    6. '_num' → logprob: -12.87607192993164
    7. '_n' → logprob: -13.25107192993164
    8. ' _' → logprob: -13.62607192993164
    9. '_
' → logprob: -15.25107192993164
    10. '_token' → logprob: -15.25107192993164

Token 1276: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10061325132846832
    2. 'in' → logprob: -2.3506133556365967
    3. 'range' → logprob: -8.475613594055176
    4. 'i' → logprob: -9.100613594055176
    5. ' ' → logprob: -9.475613594055176
    6. ' range' → logprob: -12.100613594055176
    7. ' i' → logprob: -13.600613594055176
    8. '  ' → logprob: -13.725613594055176
    9. ' _' → logprob: -14.850613594055176
    10. 'inx' → logprob: -14.975613594055176

Token 1277: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003954033018089831
    2. ' range' → logprob: -8.000395774841309
    3. '_' → logprob: -10.250395774841309
    4. '_range' → logprob: -10.625395774841309
    5. '	range' → logprob: -16.125394821166992
    6. 'i' → logprob: -16.625394821166992
    7. '(range' → logprob: -17.000394821166992
    8. '
' → logprob: -17.500394821166992
    9. 'rang' → logprob: -17.500394821166992
    10. 'in' → logprob: -17.750394821166992

Token 1278: '(num' (ID: 15828)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -9.090760431718081e-05
    2. ' num' → logprob: -10.000090599060059
    3. '(num' → logprob: -10.000090599060059
    4. '	num' → logprob: -17.250091552734375
    5. ',num' → logprob: -18.000091552734375
    6. '<num' → logprob: -19.875091552734375
    7. '$num' → logprob: -20.000091552734375
    8. '[num' → logprob: -20.500091552734375
    9. '=num' → logprob: -20.750091552734375
    10. '   ' → logprob: -20.875091552734375

Token 1279: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.1475072056055069
    2. '(num' → logprob: -2.0225071907043457
    3. '_nodes' → logprob: -5.522507190704346
    4. '_OF' → logprob: -8.897507667541504
    5. '_' → logprob: -9.022507667541504
    6. '<num' → logprob: -9.397507667541504
    7. '=num' → logprob: -9.522507667541504
    8. '_)' → logprob: -9.522507667541504
    9. '(' → logprob: -9.772507667541504
    10. ')' → logprob: -10.022507667541504

Token 1280: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.4486270844936371
    2. 'nodes' → logprob: -1.1986271142959595
    3. 'num' → logprob: -2.82362699508667
    4. 'node' → logprob: -8.073627471923828
    5. 'Nodes' → logprob: -8.948627471923828
    6. '(num' → logprob: -11.198627471923828
    7. '(nodes' → logprob: -11.573627471923828
    8. '_num' → logprob: -11.698627471923828
    9. ' nodes' → logprob: -12.323627471923828
    10. '	nodes' → logprob: -12.448627471923828

Token 1281: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004954866599291563
    2. ')' → logprob: -7.625495433807373
    3. ']' → logprob: -12.250495910644531
    4. ')]
' → logprob: -13.875495910644531
    5. '   ' → logprob: -14.625495910644531
    6. ' )' → logprob: -15.375495910644531
    7. ')])' → logprob: -15.500495910644531
    8. '')]' → logprob: -15.625495910644531
    9. '())' → logprob: -16.12549591064453
    10. '))' → logprob: -16.37549591064453

Token 1282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005240514408797026
    2. 'process' → logprob: -6.005240440368652
    3. 'for' → logprob: -6.380240440368652
    4. '    
' → logprob: -7.380240440368652
    5. '<|end|>' → logprob: -9.130240440368652
    6. ' for' → logprob: -9.505240440368652
    7. 'Node' → logprob: -10.005240440368652
    8. ' process' → logprob: -10.005240440368652
    9. '
' → logprob: -10.255240440368652
    10. '	process' → logprob: -10.505240440368652

Token 1283: ' #' (ID: 1069)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.058550383895635605
    2. 'for' → logprob: -3.1835503578186035
    3. '   ' → logprob: -4.3085503578186035
    4. ' process' → logprob: -6.4335503578186035
    5. 'Node' → logprob: -8.683550834655762
    6. ' for' → logprob: -8.808550834655762
    7. 'Process' → logprob: -11.058550834655762
    8. '	process' → logprob: -11.183550834655762
    9. '(process' → logprob: -12.058550834655762
    10. '.process' → logprob: -12.183550834655762

Token 1284: ' node' (ID: 4596)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6940189003944397
    2. 'Node' → logprob: -0.6940189003944397
    3. '   ' → logprob: -7.319018840789795
    4. ' for' → logprob: -8.819019317626953
    5. ' Node' → logprob: -10.444019317626953
    6. 'def' → logprob: -11.694019317626953
    7. 'process' → logprob: -12.069019317626953
    8. 'if' → logprob: -13.069019317626953
    9. 'root' → logprob: -13.069019317626953
    10. '	Node' → logprob: -13.194019317626953

Token 1285: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.13789118826389313
    2. '=' → logprob: -3.0128912925720215
    3. ' =' → logprob: -3.2628912925720215
    4. 'Data' → logprob: -3.7628912925720215
    5. '   ' → logprob: -5.1378912925720215
    6. 'data' → logprob: -5.3878912925720215
    7. 'root' → logprob: -5.6378912925720215
    8. '_root' → logprob: -7.3878912925720215
    9. '=root' → logprob: -7.6378912925720215
    10. '_context' → logprob: -7.8878912925720215

Token 1286: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3959702253341675
    2. 'for' → logprob: -1.7709702253341675
    3. '<|end|>' → logprob: -2.020970344543457
    4. ' for' → logprob: -4.520970344543457
    5. '
' → logprob: -5.395970344543457
    6. ')' → logprob: -5.770970344543457
    7. '<|end|>' → logprob: -6.520970344543457
    8. '[' → logprob: -6.895970344543457
    9. '#' → logprob: -7.520970344543457
    10. ']' → logprob: -7.520970344543457

Token 1287: ' []
' (ID: 8911)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7540702223777771
    2. '[]' → logprob: -1.2540702819824219
    3. '[node' → logprob: -2.004070281982422
    4. '[' → logprob: -3.254070281982422
    5. '[input' → logprob: -3.379070281982422
    6. 'input' → logprob: -4.129070281982422
    7. '[
' → logprob: -5.004070281982422
    8. ' node' → logprob: -5.379070281982422
    9. ' [' → logprob: -6.379070281982422
    10. ' []' → logprob: -6.504070281982422

Token 1288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0047619035467505455
    2. 'for' → logprob: -5.379761695861816
    3. ' for' → logprob: -9.129761695861816
    4. '<|end|>' → logprob: -11.004761695861816
    5. '
' → logprob: -12.004761695861816
    6. '    
' → logprob: -12.879761695861816
    7. '#' → logprob: -13.504761695861816
    8. '       ' → logprob: -13.629761695861816
    9. '	for' → logprob: -13.754761695861816
    10. ')' → logprob: -13.754761695861816

Token 1289: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07512807846069336
    2. 'process' → logprob: -2.8251280784606934
    3. '   ' → logprob: -4.575128078460693
    4. 'Node' → logprob: -5.950128078460693
    5. ' for' → logprob: -9.200128555297852
    6. '	process' → logprob: -11.450128555297852
    7. ' process' → logprob: -11.575128555297852
    8. 'Process' → logprob: -11.825128555297852
    9. '	for' → logprob: -11.825128555297852
    10. '
' → logprob: -12.075128555297852

Token 1290: ' with' (ID: 483)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.38874053955078125
    2. 'for' → logprob: -1.1387405395507812
    3. '   ' → logprob: -6.388740539550781
    4. 'Node' → logprob: -8.888740539550781
    5. ' process' → logprob: -10.638740539550781
    6. ' for' → logprob: -11.388740539550781
    7. 'Process' → logprob: -12.263740539550781
    8. '       ' → logprob: -13.013740539550781
    9. '(process' → logprob: -13.638740539550781
    10. '	process' → logprob: -13.638740539550781

Token 1291: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.009797642007470131
    2. ' open' → logprob: -4.6347975730896
    3. 'True' → logprob: -11.134798049926758
    4. 'num' → logprob: -11.884798049926758
    5. 'node' → logprob: -12.509798049926758
    6. '
' → logprob: -12.634798049926758
    7. 'sys' → logprob: -12.634798049926758
    8. 'input' → logprob: -13.259798049926758
    9. ' ' → logprob: -13.259798049926758
    10. 'len' → logprob: -13.509798049926758

Token 1292: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.020592104643583298
    2. '(' → logprob: -4.145592212677002
    3. '('/' → logprob: -5.895592212677002
    4. '(__' → logprob: -7.645592212677002
    5. '('./' → logprob: -7.895592212677002
    6. '(filename' → logprob: -8.395591735839844
    7. '()' → logprob: -8.520591735839844
    8. '("' → logprob: -8.520591735839844
    9. '('../' → logprob: -9.145591735839844
    10. '(input' → logprob: -9.270591735839844

Token 1293: 'AL' (ID: 1483)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.411289244890213
    2. 'input' → logprob: -2.0362892150878906
    3. '__' → logprob: -2.5362892150878906
    4. ''t' → logprob: -2.6612892150878906
    5. '('' → logprob: -4.411289215087891
    6. ''/' → logprob: -4.786289215087891
    7. ''r' → logprob: -4.786289215087891
    8. ''import' → logprob: -5.286289215087891
    9. '0' → logprob: -5.411289215087891
    10. '"' → logprob: -5.911289215087891

Token 1294: 'DS' (ID: 8804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5931265950202942
    2. '=' → logprob: -1.3431265354156494
    3. 'y' → logprob: -2.0931265354156494
    4. '   ' → logprob: -3.7181265354156494
    5. '.parent' → logprob: -4.8431267738342285
    6. '.y' → logprob: -4.9681267738342285
    7. 'parent' → logprob: -5.0931267738342285
    8. '=y' → logprob: -5.4681267738342285
    9. '       ' → logprob: -5.7181267738342285
    10. 'w' → logprob: -6.9681267738342285

Token 1295: '1' (ID: 16)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.21588003635406494
    2. '.y' → logprob: -2.3408799171447754
    3. 'y' → logprob: -2.8408799171447754
    4. 'parent' → logprob: -3.8408799171447754
    5. '.right' → logprob: -5.090879917144775
    6. '.' → logprob: -5.215879917144775
    7. '=' → logprob: -6.215879917144775
    8. '.left' → logprob: -7.340879917144775
    9. '       ' → logprob: -7.465879917144775
    10. ' =' → logprob: -7.465879917144775

Token 1296: '_' (ID: 62)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.053954266011714935
    2. '.y' → logprob: -3.8039543628692627
    3. 'parent' → logprob: -4.678954124450684
    4. 'y' → logprob: -4.803954124450684
    5. '.' → logprob: -5.303954124450684
    6. '.root' → logprob: -6.303954124450684
    7. ')' → logprob: -6.553954124450684
    8. '.right' → logprob: -7.053954124450684
    9. 'root' → logprob: -7.428954124450684
    10. '=' → logprob: -7.428954124450684

Token 1297: '8' (ID: 23)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.19323118031024933
    2. '.parent' → logprob: -2.0682311058044434
    3. 'y' → logprob: -3.1932311058044434
    4. 'x' → logprob: -6.568231105804443
    5. '[parent' → logprob: -6.568231105804443
    6. ')' → logprob: -7.318231105804443
    7. 'p' → logprob: -7.443231105804443
    8. 'py' → logprob: -7.568231105804443
    9. '_parent' → logprob: -7.693231105804443
    10. 'root' → logprob: -7.818231105804443

Token 1298: '_A' (ID: 6829)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.2426493167877197
    2. '.' → logprob: -1.8676493167877197
    3. 'y' → logprob: -1.8676493167877197
    4. ')' → logprob: -2.4926493167877197
    5. '.y' → logprob: -2.6176493167877197
    6. '0' → logprob: -3.1176493167877197
    7. 'x' → logprob: -3.1176493167877197
    8. '.py' → logprob: -3.9926493167877197
    9. 'parent' → logprob: -4.117649078369141
    10. '9' → logprob: -4.117649078369141

Token 1299: '-in' (ID: 4200)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38890767097473145
    2. '=' → logprob: -1.7639076709747314
    3. ' =' → logprob: -2.6389076709747314
    4. '.y' → logprob: -3.5139076709747314
    5. '.parent' → logprob: -3.8889076709747314
    6. '=y' → logprob: -4.388907432556152
    7. 'parent' → logprob: -5.138907432556152
    8. 'x' → logprob: -5.513907432556152
    9. ')' → logprob: -6.513907432556152
    10. ' y' → logprob: -6.888907432556152

Token 1300: '4' (ID: 19)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.00721246050670743
    2. 'txt' → logprob: -5.6322126388549805
    3. 'puts' → logprob: -6.2572126388549805
    4. 'py' → logprob: -6.6322126388549805
    5. 'p' → logprob: -9.25721263885498
    6. 'ut' → logprob: -9.50721263885498
    7. 'f' → logprob: -9.88221263885498
    8. 't' → logprob: -10.13221263885498
    9. 'pt' → logprob: -11.25721263885498
    10. 'pu' → logprob: -11.38221263885498

Token 1301: '.txt' (ID: 7186)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.11149517446756363
    2. '.y' → logprob: -3.23649525642395
    3. 'parent' → logprob: -3.48649525642395
    4. 'y' → logprob: -4.236495018005371
    5. ')' → logprob: -4.361495018005371
    6. '=' → logprob: -5.986495018005371
    7. ' =' → logprob: -6.861495018005371
    8. '   ' → logprob: -7.736495018005371
    9. '')' → logprob: -7.736495018005371
    10. '.right' → logprob: -7.736495018005371

Token 1302: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.34139764308929443
    2. '',' → logprob: -2.466397762298584
    3. ')' → logprob: -2.841397762298584
    4. '[' → logprob: -3.841397762298584
    5. '       ' → logprob: -3.841397762298584
    6. '   ' → logprob: -4.466397762298584
    7. 'for' → logprob: -4.591397762298584
    8. ''' → logprob: -4.966397762298584
    9. '')[' → logprob: -5.091397762298584
    10. '[x' → logprob: -5.216397762298584

Token 1303: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6987830996513367
    2. 'for' → logprob: -0.8237830996513367
    3. ' for' → logprob: -3.8237831592559814
    4. ':' → logprob: -3.8237831592559814
    5. ')' → logprob: -4.698782920837402
    6. ':
' → logprob: -5.948782920837402
    7. '()' → logprob: -6.198782920837402
    8. '.readlines' → logprob: -6.448782920837402
    9. '       ' → logprob: -6.823782920837402
    10. '.readline' → logprob: -6.948782920837402

Token 1304: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.004855399485677481
    2. 'file' → logprob: -6.004855632781982
    3. 'open' → logprob: -6.504855632781982
    4. 'node' → logprob: -7.879855632781982
    5. ' f' → logprob: -8.129855155944824
    6. 'input' → logprob: -9.004855155944824
    7. 'fp' → logprob: -10.129855155944824
    8. 'in' → logprob: -10.629855155944824
    9. 'fin' → logprob: -12.129855155944824
    10. 'r' → logprob: -12.254855155944824

Token 1305: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26383739709854126
    2. '   ' → logprob: -1.7638373374938965
    3. ':
' → logprob: -3.7638373374938965
    4. '       ' → logprob: -3.8888373374938965
    5. '():' → logprob: -5.1388373374938965
    6. 'for' → logprob: -5.5138373374938965
    7. ' for' → logprob: -6.0138373374938965
    8. '.readlines' → logprob: -6.3888373374938965
    9. '):' → logprob: -7.0138373374938965
    10. '():
' → logprob: -7.0138373374938965

Token 1306: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.036373496055603
    2. '       ' → logprob: -1.286373496055603
    3. ' for' → logprob: -1.536373496055603
    4. '   ' → logprob: -1.911373496055603
    5. 'f' → logprob: -6.036373615264893
    6. '    ' → logprob: -7.036373615264893
    7. ' f' → logprob: -7.161373615264893
    8. '	for' → logprob: -7.411373615264893
    9. ' ' → logprob: -8.286373138427734
    10. '           ' → logprob: -8.661373138427734

Token 1307: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7279891967773438
    2. '       ' → logprob: -1.3529891967773438
    3. 'for' → logprob: -1.4779891967773438
    4. ' for' → logprob: -3.7279891967773438
    5. 'f' → logprob: -5.977989196777344
    6. '	for' → logprob: -6.102989196777344
    7. '    ' → logprob: -7.852989196777344
    8. '#' (adapté à ' #') → logprob: -7.977989196777344
    9. 'lines' → logprob: -9.102989196777344
    10. ' lines' → logprob: -9.102989196777344

Token 1308: '    ' (ID: 257)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6786338090896606
    2. '       ' → logprob: -1.4286338090896606
    3. 'for' → logprob: -1.5536338090896606
    4. '#' → logprob: -3.678633689880371
    5. ' for' → logprob: -4.803633689880371
    6. 'f' → logprob: -5.678633689880371
    7. '	for' → logprob: -6.053633689880371
    8. 'pass' → logprob: -6.928633689880371
    9. '    ' → logprob: -8.303633689880371
    10. ' ' → logprob: -8.928633689880371

Token 1309: ' for' (ID: 395)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8106499910354614
    2. 'for' (adapté à ' for') → logprob: -1.4356499910354614
    3. '       ' → logprob: -1.9356499910354614
    4. 'line' → logprob: -2.560649871826172
    5. '   ' → logprob: -3.685649871826172
    6. 'node' → logprob: -3.935649871826172
    7. ' for' → logprob: -4.560649871826172
    8. '           ' → logprob: -4.685649871826172
    9. 'input' → logprob: -4.685649871826172
    10. ' f' → logprob: -4.810649871826172

Token 1310: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.001395592000335455
    2. ' line' → logprob: -7.0013957023620605
    3. '   ' → logprob: -8.751395225524902
    4. 'f' → logprob: -9.001395225524902
    5. 'l' → logprob: -9.376395225524902
    6. 'True' → logprob: -10.251395225524902
    7. 'row' → logprob: -10.501395225524902
    8. 's' → logprob: -11.501395225524902
    9. 'lines' → logprob: -12.251395225524902
    10. 'for' → logprob: -12.626395225524902

Token 1311: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.26017946004867554
    2. '       ' → logprob: -1.8851795196533203
    3. 'in' → logprob: -2.6351795196533203
    4. '   ' → logprob: -6.26017951965332
    5. ':' → logprob: -6.38517951965332
    6. 'line' → logprob: -7.76017951965332
    7. ':
' → logprob: -8.01017951965332
    8. ' as' → logprob: -8.13517951965332
    9. '        ' → logprob: -9.13517951965332
    10. ' =' → logprob: -9.13517951965332

Token 1312: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0016723261214792728
    2. ' f' → logprob: -6.626672267913818
    3. 'line' → logprob: -8.001672744750977
    4. ' line' → logprob: -12.001672744750977
    5. 'input' → logprob: -13.251672744750977
    6. '   ' → logprob: -13.876672744750977
    7. ')' → logprob: -14.126672744750977
    8. '	f' → logprob: -14.376672744750977
    9. 'range' → logprob: -15.876672744750977
    10. 'lines' → logprob: -16.001672744750977

Token 1313: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.989946722984314
    2. '       ' → logprob: -1.489946722984314
    3. ':' → logprob: -1.739946722984314
    4. '():
' → logprob: -2.3649468421936035
    5. '   ' → logprob: -2.8649468421936035
    6. ' in' → logprob: -3.8649468421936035
    7. '():' → logprob: -3.9899468421936035
    8. 'in' → logprob: -4.4899468421936035
    9. '):
' → logprob: -4.9899468421936035
    10. '.readline' → logprob: -5.4899468421936035

Token 1314: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01842137798666954
    2. '   ' → logprob: -4.268421173095703
    3. ':' → logprob: -6.518421173095703
    4. ' for' → logprob: -6.893421173095703
    5. ':
' → logprob: -7.768421173095703
    6. 'for' → logprob: -8.018421173095703
    7. '           ' → logprob: -8.643421173095703
    8. 'line' → logprob: -9.018421173095703
    9. '        ' → logprob: -9.143421173095703
    10. ' ' → logprob: -9.768421173095703

Token 1315: ' #' (ID: 1069)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06672760844230652
    2. ' line' → logprob: -3.566727638244629
    3. '   ' → logprob: -4.816727638244629
    4. '0' → logprob: -5.316727638244629
    5. 'rstrip' → logprob: -5.316727638244629
    6. 'f' → logprob: -5.441727638244629
    7. '       ' → logprob: -5.691727638244629
    8. ' f' → logprob: -6.316727638244629
    9. 'split' → logprob: -6.441727638244629
    10. 'strip' → logprob: -6.691727638244629

Token 1316: '       ' (ID: 309)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.0315210819244385
    2. 'line' → logprob: -1.5315210819244385
    3. 'rstrip' → logprob: -1.5315210819244385
    4. '0' → logprob: -2.0315210819244385
    5. '       ' → logprob: -3.7815210819244385
    6. '   ' → logprob: -3.9065210819244385
    7. '1' → logprob: -5.156520843505859
    8. 'trip' → logprob: -5.906520843505859
    9. ' ' → logprob: -6.281520843505859
    10. 'x' → logprob: -6.281520843505859

Token 1317: ' if' (ID: 538)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.08674852550029755
    2. 'node' → logprob: -3.5867486000061035
    3. '       ' → logprob: -3.9617486000061035
    4. ' line' → logprob: -4.2117486000061035
    5. '           ' → logprob: -4.5867486000061035
    6. '   ' → logprob: -5.5867486000061035
    7. '#line' → logprob: -6.4617486000061035
    8. '	line' → logprob: -6.4617486000061035
    9. ' node' → logprob: -6.5867486000061035
    10. '#' → logprob: -6.7117486000061035

Token 1318: ' '' (ID: 461)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.005232813768088818
    2. ' line' → logprob: -5.380232810974121
    3. 'True' → logprob: -8.255232810974121
    4. 'len' → logprob: -8.505232810974121
    5. '(line' → logprob: -9.755232810974121
    6. '   ' → logprob: -10.505232810974121
    7. ' True' → logprob: -10.505232810974121
    8. '#line' → logprob: -11.630232810974121
    9. '           ' → logprob: -12.130232810974121
    10. '	line' → logprob: -12.255232810974121

Token 1319: ' '' (ID: 461)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.047237422317266464
    2. 'x' → logprob: -3.5472373962402344
    3. '=' → logprob: -4.922237396240234
    4. ' =' → logprob: -5.422237396240234
    5. ' y' → logprob: -6.297237396240234
    6. '   ' → logprob: -7.047237396240234
    7. '       ' → logprob: -7.922237396240234
    8. 't' → logprob: -8.047237396240234
    9. ')' → logprob: -8.172237396240234
    10. 'p' → logprob: -8.297237396240234

Token 1320: ' not' (ID: 625)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8553996086120605
    2. 'strip' → logprob: -1.6053996086120605
    3. '       ' → logprob: -2.3553996086120605
    4. '')' → logprob: -2.8553996086120605
    5. '.strip' → logprob: -2.8553996086120605
    6. ' in' → logprob: -3.2303996086120605
    7. 'in' → logprob: -3.2303996086120605
    8. '           ' → logprob: -4.1053996086120605
    9. ' not' → logprob: -4.3553996086120605
    10. 'line' → logprob: -5.1053996086120605

Token 1321: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07146123796701431
    2. ' in' → logprob: -2.6964612007141113
    3. 'n' → logprob: -7.071461200714111
    4. '
' → logprob: -8.82146167755127
    5. 'not' → logprob: -8.94646167755127
    6. '  ' → logprob: -9.44646167755127
    7. 'i' → logprob: -9.69646167755127
    8. 'line' → logprob: -10.07146167755127
    9. '   ' → logprob: -10.57146167755127
    10. ' ' → logprob: -10.94646167755127

Token 1322: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -6.420598219847307e-05
    2. ' line' → logprob: -9.7500638961792
    3. '(line' → logprob: -13.0000638961792
    4. '	line' → logprob: -13.7500638961792
    5. '=line' → logprob: -13.8750638961792
    6. '#line' → logprob: -14.3750638961792
    7. '   ' → logprob: -14.6250638961792
    8. '[line' → logprob: -15.7500638961792
    9. 'f' → logprob: -16.250064849853516
    10. 'input' → logprob: -16.500064849853516

Token 1323: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.81523197889328
    2. ':
' → logprob: -1.0652320384979248
    3. ':' → logprob: -2.565232038497925
    4. '():
' → logprob: -2.940232038497925
    5. '       ' → logprob: -3.690232038497925
    6. '          ' → logprob: -4.065231800079346
    7. 'line' → logprob: -5.065231800079346
    8. '.readline' → logprob: -5.315231800079346
    9. '.rstrip' → logprob: -5.315231800079346
    10. '(line' → logprob: -5.440231800079346

Token 1324: '   ' (ID: 271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14012262225151062
    2. '          ' → logprob: -3.015122652053833
    3. '       ' → logprob: -3.390122652053833
    4. ':' → logprob: -4.640122413635254
    5. 'rstrip' → logprob: -4.765122413635254
    6. ':
' → logprob: -5.515122413635254
    7. 'continue' → logprob: -5.765122413635254
    8. '#' → logprob: -5.890122413635254
    9. '<|end|>' → logprob: -6.265122413635254
    10. '():
' → logprob: -6.265122413635254

Token 1325: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07928840816020966
    2. '       ' → logprob: -4.079288482666016
    3. '          ' → logprob: -4.579288482666016
    4. 'rstrip' → logprob: -4.579288482666016
    5. ':
' → logprob: -4.704288482666016
    6. 'continue' → logprob: -4.829288482666016
    7. ':' → logprob: -5.704288482666016
    8. 'strip' → logprob: -5.829288482666016
    9. '():
' → logprob: -5.829288482666016
    10. '.strip' → logprob: -5.954288482666016

Token 1326: '          ' (ID: 3550)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9049874544143677
    2. 'continue' → logprob: -1.0299874544143677
    3. '          ' → logprob: -2.279987335205078
    4. ' continue' → logprob: -3.279987335205078
    5. 'rstrip' → logprob: -3.654987335205078
    6. 'line' → logprob: -3.779987335205078
    7. '       ' → logprob: -4.404987335205078
    8. 'strip' → logprob: -4.779987335205078
    9. ':' → logprob: -5.279987335205078
    10. ':
' → logprob: -5.529987335205078

Token 1327: ' num' (ID: 2269)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.061430394649505615
    2. '           ' → logprob: -3.8114304542541504
    3. 'continue' → logprob: -3.8114304542541504
    4. 'rstrip' → logprob: -5.56143045425415
    5. ' line' → logprob: -6.06143045425415
    6. '       ' → logprob: -6.43643045425415
    7. '   ' → logprob: -6.81143045425415
    8. 'break' → logprob: -6.93643045425415
    9. '          ' → logprob: -7.18643045425415
    10. '               ' → logprob: -7.43643045425415

Token 1328: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.04808759689331055
    2. '_' → logprob: -4.5480875968933105
    3. '()' → logprob: -5.0480875968933105
    4. ')' → logprob: -5.1730875968933105
    5. 'of' → logprob: -5.5480875968933105
    6. '       ' → logprob: -5.5480875968933105
    7. '   ' → logprob: -5.7980875968933105
    8. '_lines' → logprob: -6.4230875968933105
    9. '_data' → logprob: -6.5480875968933105
    10. '_nodes' → logprob: -6.7980875968933105

Token 1329: '_nodes' (ID: 34593)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.160978078842163
    2. 'nodes' → logprob: -1.410978078842163
    3. '_nodes' → logprob: -1.410978078842163
    4. 'lines' → logprob: -1.660978078842163
    5. '_lines' → logprob: -5.660978317260742
    6. 'node' → logprob: -5.910978317260742
    7. 'tokens' → logprob: -6.535978317260742
    8. '_tokens' → logprob: -7.785978317260742
    9. '_line' → logprob: -8.660978317260742
    10. 'code' → logprob: -8.660978317260742

Token 1330: ' =' (ID: 314)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7652778625488281
    2. '          ' → logprob: -1.6402778625488281
    3. '=' → logprob: -2.390277862548828
    4. ' =' → logprob: -3.265277862548828
    5. '.rstrip' → logprob: -3.765277862548828
    6. 'rstrip' → logprob: -3.765277862548828
    7. '       ' → logprob: -3.890277862548828
    8. ':' → logprob: -4.390277862548828
    9. '<|end|>' → logprob: -4.390277862548828
    10. '<|end|>' → logprob: -4.390277862548828

Token 1331: ' (' (ID: 350)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.05144331231713295
    2. 'int' → logprob: -3.176443338394165
    3. 'num' → logprob: -5.176443099975586
    4. '1' → logprob: -7.051443099975586
    5. 'True' → logprob: -7.426443099975586
    6. '0' → logprob: -7.676443099975586
    7. ' line' → logprob: -7.801443099975586
    8. 'len' → logprob: -9.051443099975586
    9. '=line' → logprob: -9.051443099975586
    10. '(line' → logprob: -10.301443099975586

Token 1332: 'int' (ID: 491)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0061140055768191814
    2. ' line' → logprob: -6.1311140060424805
    3. ')' → logprob: -6.2561140060424805
    4. '0' → logprob: -7.2561140060424805
    5. '=line' → logprob: -7.6311140060424805
    6. '')' → logprob: -8.88111400604248
    7. 'num' → logprob: -9.00611400604248
    8. '(line' → logprob: -9.25611400604248
    9. '#line' → logprob: -9.50611400604248
    10. '1' → logprob: -9.88111400604248

Token 1333: '(line' (ID: 18178)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.007974610663950443
    2. '(line' → logprob: -5.382974624633789
    3. ')' → logprob: -5.882974624633789
    4. ' line' → logprob: -8.632974624633789
    5. 'l' → logprob: -9.882974624633789
    6. 'num' → logprob: -10.132974624633789
    7. '   ' → logprob: -10.132974624633789
    8. 'node' → logprob: -10.257974624633789
    9. ')
' → logprob: -10.382974624633789
    10. '=line' → logprob: -10.382974624633789

Token 1334: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35059434175491333
    2. '))' → logprob: -1.3505942821502686
    3. '           ' → logprob: -4.350594520568848
    4. '))
' → logprob: -4.975594520568848
    5. ')
' → logprob: -5.225594520568848
    6. '.strip' → logprob: -5.600594520568848
    7. '.rstrip' → logprob: -6.350594520568848
    8. '[' → logprob: -6.475594520568848
    9. '               ' → logprob: -7.100594520568848
    10. '       ' → logprob: -7.350594520568848

Token 1335: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019843492656946182
    2. '           ' → logprob: -4.269843578338623
    3. '#' → logprob: -6.019843578338623
    4. 'continue' → logprob: -6.894843578338623
    5. '          ' → logprob: -7.269843578338623
    6. '   ' → logprob: -7.394843578338623
    7. '<|end|>' → logprob: -8.519843101501465
    8. ' continue' → logprob: -8.769843101501465
    9. '      ' → logprob: -8.769843101501465
    10. '<|end|>' → logprob: -9.269843101501465

Token 1336: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13791881501674652
    2. '           ' → logprob: -2.637918710708618
    3. 'continue' → logprob: -3.512918710708618
    4. '   ' → logprob: -4.387918949127197
    5. '          ' → logprob: -5.387918949127197
    6. ' continue' → logprob: -6.012918949127197
    7. ':' → logprob: -6.887918949127197
    8. '<|end|>' → logprob: -7.012918949127197
    9. 'for' → logprob: -7.137918949127197
    10. ' for' → logprob: -7.637918949127197

Token 1337: '      ' (ID: 1699)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20816759765148163
    2. '#' → logprob: -1.708167552947998
    3. '   ' → logprob: -5.208167552947998
    4. '           ' → logprob: -7.333167552947998
    5. '      ' → logprob: -8.083168029785156
    6. '          ' → logprob: -9.458168029785156
    7. ' #' → logprob: -9.583168029785156
    8. 'continue' → logprob: -10.458168029785156
    9. '        ' → logprob: -10.833168029785156
    10. ' ' → logprob: -11.083168029785156

Token 1338: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19442260265350342
    2. '           ' → logprob: -2.319422721862793
    3. '          ' → logprob: -3.069422721862793
    4. '#' → logprob: -4.069422721862793
    5. '   ' → logprob: -5.444422721862793
    6. 'continue' → logprob: -5.569422721862793
    7. '      ' → logprob: -5.694422721862793
    8. '        ' → logprob: -7.194422721862793
    9. '         ' → logprob: -7.819422721862793
    10. 'line' → logprob: -8.194422721862793

Token 1339: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13168908655643463
    2. 'line' → logprob: -2.5066890716552734
    3. '          ' → logprob: -3.6316890716552734
    4. ' line' → logprob: -5.381689071655273
    5. '       ' → logprob: -6.131689071655273
    6. 'continue' → logprob: -6.131689071655273
    7. '(line' → logprob: -7.006689071655273
    8. '#line' → logprob: -7.006689071655273
    9. '   ' → logprob: -7.256689071655273
    10. 'node' → logprob: -7.381689071655273

Token 1340: '   ' (ID: 271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9398391842842102
    2. ' x' → logprob: -2.0648391246795654
    3. 'line' → logprob: -2.1898391246795654
    4. 'x' → logprob: -2.3148391246795654
    5. '       ' → logprob: -2.3148391246795654
    6. '          ' → logprob: -2.4398391246795654
    7. ' line' → logprob: -4.0648393630981445
    8. 'n' → logprob: -4.5648393630981445
    9. '#line' → logprob: -5.1898393630981445
    10. '   ' → logprob: -5.3148393630981445

Token 1341: ' #' (ID: 1069)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.21429641544818878
    2. '       ' → logprob: -2.839296340942383
    3. ' line' → logprob: -3.339296340942383
    4. '           ' → logprob: -3.714296340942383
    5. '          ' → logprob: -4.464296340942383
    6. 'node' → logprob: -5.214296340942383
    7. 'n' → logprob: -5.214296340942383
    8. 'rstrip' → logprob: -5.214296340942383
    9. '#line' → logprob: -5.214296340942383
    10. '   ' → logprob: -5.589296340942383

Token 1342: '          ' (ID: 3550)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8959089517593384
    2. '       ' → logprob: -1.3959089517593384
    3. '           ' → logprob: -1.3959089517593384
    4. 'node' → logprob: -3.520908832550049
    5. '          ' → logprob: -3.770908832550049
    6. '   ' → logprob: -4.520908832550049
    7. '#' → logprob: -5.145908832550049
    8. ' line' → logprob: -5.395908832550049
    9. 'continue' → logprob: -5.520908832550049
    10. ' node' → logprob: -5.895908832550049

Token 1343: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.12850257754325867
    2. 'line' → logprob: -2.753502607345581
    3. ' node' → logprob: -3.753502607345581
    4. '           ' → logprob: -3.878502607345581
    5. '   ' → logprob: -5.253502368927002
    6. '          ' → logprob: -6.003502368927002
    7. ' line' → logprob: -6.753502368927002
    8. '       ' → logprob: -7.003502368927002
    9. 'num' → logprob: -7.003502368927002
    10. '	node' → logprob: -8.12850284576416

Token 1344: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.02243625372648239
    2. '_key' → logprob: -3.8974361419677734
    3. ' =' → logprob: -7.897436141967773
    4. 'data' → logprob: -8.022436141967773
    5. '=' → logprob: -8.647436141967773
    6. '   ' → logprob: -8.897436141967773
    7. '_' → logprob: -9.647436141967773
    8. '_keys' → logprob: -9.647436141967773
    9. 'split' → logprob: -9.772436141967773
    10. ')' → logprob: -10.022436141967773

Token 1345: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0036974623799324036
    2. '.' → logprob: -6.628697395324707
    3. '       ' → logprob: -6.628697395324707
    4. '           ' → logprob: -7.878697395324707
    5. ' =' → logprob: -8.128697395324707
    6. '=' → logprob: -9.253697395324707
    7. '.extend' → logprob: -9.503697395324707
    8. '          ' → logprob: -9.753697395324707
    9. 'append' → logprob: -10.003697395324707
    10. ' .' → logprob: -11.003697395324707

Token 1346: '(line' (ID: 18178)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.03047366626560688
    2. ' line' → logprob: -3.5304737091064453
    3. '(line' → logprob: -7.280473709106445
    4. '[line' → logprob: -10.655473709106445
    5. '   ' → logprob: -12.905473709106445
    6. '	line' → logprob: -13.030473709106445
    7. '#line' → logprob: -13.155473709106445
    8. '           ' → logprob: -13.405473709106445
    9. 'list' → logprob: -13.655473709106445
    10. '=line' → logprob: -14.030473709106445

Token 1347: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.6701927185058594
    2. '.rstrip' → logprob: -1.2951927185058594
    3. ')' → logprob: -1.7951927185058594
    4. '.split' → logprob: -3.5451927185058594
    5. '.readline' → logprob: -5.670192718505859
    6. '().' → logprob: -5.920192718505859
    7. '())' → logprob: -5.920192718505859
    8. '       ' → logprob: -6.045192718505859
    9. '<|end|>' → logprob: -6.170192718505859
    10. '.replace' → logprob: -6.670192718505859

Token 1348: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4134701192378998
    2. '())' → logprob: -1.1634701490402222
    3. '('' → logprob: -3.6634700298309326
    4. '()[' → logprob: -8.913470268249512
    5. ')' → logprob: -9.038470268249512
    6. '())
' → logprob: -9.163470268249512
    7. '()]' → logprob: -9.413470268249512
    8. ''' → logprob: -10.038470268249512
    9. '()
' → logprob: -10.038470268249512
    10. '('\' → logprob: -10.538470268249512

Token 1349: ' '' (ID: 461)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -1.3636549711227417
    2. ')' → logprob: -1.4886549711227417
    3. '()' → logprob: -1.6136549711227417
    4. '')' → logprob: -1.7386549711227417
    5. ''' → logprob: -3.3636550903320312
    6. '\n' → logprob: -3.3636550903320312
    7. '('' → logprob: -3.7386550903320312
    8. '('\' → logprob: -4.238655090332031
    9. ''\' → logprob: -4.988655090332031
    10. ' ')' → logprob: -5.238655090332031

Token 1350: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14823035895824432
    2. '       ' → logprob: -2.2732303142547607
    3. '')' → logprob: -4.02323055267334
    4. '           ' → logprob: -4.89823055267334
    5. '))' → logprob: -5.39823055267334
    6. ')
' → logprob: -7.02323055267334
    7. '   ' → logprob: -7.14823055267334
    8. ')]' → logprob: -7.14823055267334
    9. '())' → logprob: -7.39823055267334
    10. '()' → logprob: -7.77323055267334

Token 1351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0342862606048584
    2. 'for' → logprob: -3.4092862606048584
    3. ' for' → logprob: -7.7842864990234375
    4. 'Node' → logprob: -9.284286499023438
    5. '       ' → logprob: -9.659286499023438
    6. 'process' → logprob: -10.284286499023438
    7. '<|end|>' → logprob: -11.159286499023438
    8. '  ' → logprob: -12.534286499023438
    9. '	for' → logprob: -13.159286499023438
    10. '
' → logprob: -13.284286499023438

Token 1352: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4859989881515503
    2. '   ' → logprob: -0.9859989881515503
    3. ' for' → logprob: -5.11099910736084
    4. 'Node' → logprob: -5.36099910736084
    5. '       ' → logprob: -7.23599910736084
    6. ' Node' → logprob: -9.11099910736084
    7. 'process' → logprob: -9.73599910736084
    8. '	for' → logprob: -9.98599910736084
    9. '	Node' → logprob: -10.23599910736084
    10. ' ' → logprob: -10.73599910736084

Token 1353: ' ?' (ID: 1423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43396449089050293
    2. '       ' → logprob: -1.433964490890503
    3. '           ' → logprob: -3.058964490890503
    4. ' for' → logprob: -3.683964490890503
    5. '   ' → logprob: -4.308964729309082
    6. 'x' → logprob: -4.433964729309082
    7. 'y' → logprob: -4.808964729309082
    8. 'if' → logprob: -5.933964729309082
    9. 'Node' → logprob: -6.183964729309082
    10. 't' → logprob: -7.433964729309082

Token 1354: '????????' (ID: 85218)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.17783908545970917
    2. 'Node' → logprob: -2.5528390407562256
    3. '   ' → logprob: -3.1778390407562256
    4. 'for' → logprob: -3.9278390407562256
    5. '       ' → logprob: -4.302839279174805
    6. ' process' → logprob: -4.927839279174805
    7. ' Node' → logprob: -7.427839279174805
    8. ' for' → logprob: -7.677839279174805
    9. 'def' → logprob: -7.927839279174805
    10. 'Process' → logprob: -8.177839279174805

Token 1355: '????' (ID: 25883)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42802831530570984
    2. '   ' → logprob: -1.1780283451080322
    3. ' for' → logprob: -3.8030283451080322
    4. 'Node' → logprob: -4.428028106689453
    5. 'process' → logprob: -5.803028106689453
    6. '       ' → logprob: -6.303028106689453
    7. ' Node' → logprob: -7.803028106689453
    8. 'def' → logprob: -8.553028106689453
    9. '	Node' → logprob: -8.928028106689453
    10. '
' → logprob: -9.053028106689453

Token 1356: '??
' (ID: 108055)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04694686084985733
    2. 'for' → logprob: -3.2969467639923096
    3. 'Node' → logprob: -5.296947002410889
    4. ' for' → logprob: -6.421947002410889
    5. '       ' → logprob: -7.546947002410889
    6. '	Node' → logprob: -7.671947002410889
    7. '(Node' → logprob: -8.04694652557373
    8. 'process' → logprob: -8.29694652557373
    9. ' Node' → logprob: -8.54694652557373
    10. '.Node' → logprob: -9.79694652557373

Token 1357: '   ' (ID: 271)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.08568751066923141
    2. 'for' → logprob: -2.7106873989105225
    3. '   ' → logprob: -4.210687637329102
    4. 'Node' → logprob: -7.335687637329102
    5. ' process' → logprob: -9.460687637329102
    6. '	process' → logprob: -10.835687637329102
    7. ' for' → logprob: -11.210687637329102
    8. '(process' → logprob: -11.710687637329102
    9. '```' → logprob: -11.960687637329102
    10. '       ' → logprob: -12.210687637329102

Token 1358: ' #' (ID: 1069)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.0009194392478093505
    2. 'for' → logprob: -7.000919342041016
    3. ' process' → logprob: -12.125919342041016
    4. '   ' → logprob: -13.125919342041016
    5. 'Node' → logprob: -15.250919342041016
    6. '(process' → logprob: -15.875919342041016
    7. '	process' → logprob: -16.500919342041016
    8. ' for' → logprob: -17.500919342041016
    9. '.process' → logprob: -17.625919342041016
    10. 'proces' → logprob: -18.375919342041016

Token 1359: ' ??' (ID: 16605)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.25542640686035156
    2. 'for' → logprob: -1.5054264068603516
    3. 'Node' → logprob: -6.130426406860352
    4. '   ' → logprob: -6.755426406860352
    5. ' process' → logprob: -9.505426406860352
    6. ' for' → logprob: -10.380426406860352
    7. 'def' → logprob: -11.130426406860352
    8. '(process' → logprob: -11.755426406860352
    9. 'Process' → logprob: -12.630426406860352
    10. '       ' → logprob: -12.630426406860352

Token 1360: '¨' (ID: 64259)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.16497792303562164
    2. 'for' → logprob: -1.9149779081344604
    3. ' process' → logprob: -6.03997802734375
    4. 'Node' → logprob: -6.91497802734375
    5. '   ' → logprob: -7.28997802734375
    6. ' for' → logprob: -7.66497802734375
    7. 'def' → logprob: -9.41497802734375
    8. '       ' → logprob: -10.28997802734375
    9. 'node' → logprob: -11.16497802734375
    10. '(process' → logprob: -11.28997802734375

Token 1361: '????????' (ID: 85218)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.5602601170539856
    2. 'for' → logprob: -2.060260057449341
    3. '   ' → logprob: -2.310260057449341
    4. '#' → logprob: -2.685260057449341
    5. ' Node' → logprob: -3.435260057449341
    6. 'def' → logprob: -3.685260057449341
    7. 'n' → logprob: -4.43526029586792
    8. 'node' → logprob: -4.81026029586792
    9. 'None' → logprob: -5.18526029586792
    10. 'z' → logprob: -5.56026029586792

Token 1362: '????' (ID: 25883)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4364226758480072
    2. 'Node' → logprob: -2.56142258644104
    3. ' for' → logprob: -3.18642258644104
    4. '   ' → logprob: -3.43642258644104
    5. 'if' → logprob: -3.81142258644104
    6. '(Node' → logprob: -3.81142258644104
    7. '<|end|>' → logprob: -3.93642258644104
    8. ' Node' → logprob: -3.93642258644104
    9. 'n' → logprob: -4.061422824859619
    10. 'x' → logprob: -4.561422824859619

Token 1363: '???
' (ID: 136325)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.155577152967453
    2. 'process' → logprob: -2.4055771827697754
    3. '   ' → logprob: -3.1555771827697754
    4. 'Node' → logprob: -4.905577182769775
    5. ' for' → logprob: -6.530577182769775
    6. 'if' → logprob: -6.655577182769775
    7. '       ' → logprob: -7.530577182769775
    8. ' process' → logprob: -9.155576705932617
    9. 'def' → logprob: -9.655576705932617
    10. '(process' → logprob: -10.030576705932617

Token 1364: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3065885603427887
    2. '   ' → logprob: -1.6815885305404663
    3. 'process' → logprob: -2.556588649749756
    4. 'Node' → logprob: -8.431588172912598
    5. ' for' → logprob: -9.306588172912598
    6. '       ' → logprob: -10.431588172912598
    7. 'Process' → logprob: -11.056588172912598
    8. ' process' → logprob: -11.181588172912598
    9. '	process' → logprob: -11.931588172912598
    10. '  ' → logprob: -12.181588172912598

Token 1365: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.2814171612262726
    2. 'for' → logprob: -1.4064171314239502
    3. '   ' → logprob: -9.031416893005371
    4. 'Node' → logprob: -9.281416893005371
    5. ' process' → logprob: -10.781416893005371
    6. ' for' → logprob: -11.531416893005371
    7. '       ' → logprob: -11.906416893005371
    8. 'def' → logprob: -12.656416893005371
    9. '(process' → logprob: -13.031416893005371
    10. 'Process' → logprob: -13.656416893005371

Token 1366: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.6934557505883276e-05
    2. '(node' → logprob: -10.000057220458984
    3. '_' → logprob: -11.750057220458984
    4. 'node' → logprob: -12.750057220458984
    5. '_nodes' → logprob: -14.750057220458984
    6. '_n' → logprob: -15.750057220458984
    7. '_Node' → logprob: -16.625057220458984
    8. ' node' → logprob: -16.875057220458984
    9. '_NODE' → logprob: -17.500057220458984
    10. '[node' → logprob: -18.250057220458984

Token 1367: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -5.908022285439074e-05
    2. 'data' → logprob: -10.125059127807617
    3. '_node' → logprob: -11.375059127807617
    4. '_' → logprob: -12.125059127807617
    5. '_nodes' → logprob: -14.875059127807617
    6. 'node' → logprob: -15.000059127807617
    7. '_d' → logprob: -15.750059127807617
    8. ' data' → logprob: -15.875059127807617
    9. '_dat' → logprob: -15.875059127807617
    10. '_Data' → logprob: -16.000059127807617

Token 1368: '(node' (ID: 13356)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2736581563949585
    2. '=' → logprob: -2.398658275604248
    3. '.parent' → logprob: -2.773658275604248
    4. '.y' → logprob: -3.273658275604248
    5. 'y' → logprob: -3.773658275604248
    6. '.' → logprob: -5.148658275604248
    7. '<|end|>' → logprob: -5.148658275604248
    8. '=y' → logprob: -6.023658275604248
    9. 'parent' → logprob: -6.398658275604248
    10. ' ' → logprob: -6.523658275604248

Token 1369: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.0003231878508813679
    2. 'data' → logprob: -8.500323295593262
    3. ')' → logprob: -9.125323295593262
    4. ')_' → logprob: -12.000323295593262
    5. '_' → logprob: -13.125323295593262
    6. ')data' → logprob: -13.625323295593262
    7. ' data' → logprob: -14.750323295593262
    8. '_)' → logprob: -15.125323295593262
    9. '   ' → logprob: -16.125322341918945
    10. '[' → logprob: -16.125322341918945

Token 1370: ')' (ID: 8)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6546581387519836
    2. '=' → logprob: -1.2796580791473389
    3. '       ' → logprob: -2.404658079147339
    4. ' =' → logprob: -2.904658079147339
    5. 'x' → logprob: -4.654658317565918
    6. '.' → logprob: -4.904658317565918
    7. '           ' → logprob: -4.904658317565918
    8. '   ' → logprob: -5.154658317565918
    9. '.y' → logprob: -5.779658317565918
    10. ' y' → logprob: -5.904658317565918


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1368
Tokens correctement prédits (1ère position, stricte): 487
Tokens correctement prédits (1ère position, avec adaptation): 557
Tokens correctement prédits (top 10): 1048
Précision stricte (1ère position): 35.60%
Précision adaptée (1ère position): 40.72%
Précision (top 10): 76.61%
================================================================================
