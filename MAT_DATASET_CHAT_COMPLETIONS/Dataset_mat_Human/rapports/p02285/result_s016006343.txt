================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Node:
    def __init__(self,key,left,right,parent):
        self.key = key
        self.left = left
        self.right = right
        self.p = parent

    def __repr__(self):
        #return str(self.key) + "[" + str(self.p)+"]"
        return str(self.key)

def insert(T, z):
    y = None
    x = T 
    while x != None:
        y = x
        if z.key < x.key:
            x = x.left
        else:
            x = x.right
    z.p = y
    #print(x,y,z)
    if y == None:
        #print("Y==None")
        T = z
        print(T)
    elif z.key<y.key:
        #print("z.key<y.key")
        y.left = z
    else:
        #print("z.key<y.key")
        y.right = z

def find(T, k, show):
    x = T 
    while x != None:
        if k == x.key:
            if show:
                print('yes')
            return x
        if k < x.key:
            x = x.left
        else:
            x = x.right
    print('no')
    

def getScu(x):
    if x.right == None:
        y = x.p
        while x == y.right and y != None:
            x = y
            y = x.p
        return y
    x = x.right
    while x != None:
        y = x
        x = x.left
    return y

def delete(T,x):
    #print(x.key, id(x))
    if x.left == x.right == None:
        #print("x.left == x.right == None")
        if x.p.key < x.key:
            x.p.right = None
        else:
            x.p.left = None

    elif x.left == None:
        #print("x.left == None")
        y = x.right
        x.key = y.key
        x.right = y.right
        x.left = y.left
        #print(x.key, id(x))
    elif x.right == None:
        #print("x.right == None")
        y = x.left
        x.key = y.key
        x.right = y.right
        x.left = y.left
        #print(x.key, id(x))
    else:
        y = getScu(x)
        delete(T, y)
        x.key = y.key

    

def printPreorder(x):
    if x == None:
        return
    printPreorder(x.left)
    print(end=' ')
    print(x,end='')
    printPreorder(x.right)

def printMidorder(x):
    if x == None:
        return
    print(end=' ')
    print(x,end='')
    printMidorder(x.left)
    printMidorder(x.right)

def printal(x):
    printPreorder(x)
    print()
    printMidorder(x)
    print()

N = int(input())
Q = input().split()
T = Node(int(Q[1]),None,None,None)
for i in range(N-1):
    Q = input().split()
    if Q[0] == "print":
        printal(T)
        continue
    elif Q[0] == "find":
        find(T,int(Q[1]),True)
        continue
    elif Q[0] == "delete":
        delete(T,find(T, int(Q[1]), False))
        continue
    insert(T,Node(int(Q[1]),None,None,None))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Node' (ID: 10882)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.538149893283844
    2. ':' → logprob: -0.913149893283844
    3. '```' → logprob: -5.413149833679199
    4. '(
' → logprob: -6.288149833679199
    5. '   ' → logprob: -6.413149833679199
    6. '():' → logprob: -6.538149833679199
    7. ' (' → logprob: -6.913149833679199
    8. '()' → logprob: -7.288149833679199
    9. ' ' → logprob: -7.413149833679199
    10. '<|end|>' → logprob: -7.538149833679199

Token 4: ' def' (ID: 1056)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5093230605125427
    2. '   ' → logprob: -1.6343231201171875
    3. ' ' → logprob: -2.5093231201171875
    4. '```' → logprob: -3.7593231201171875
    5. '    ' → logprob: -3.8843231201171875
    6. ''' → logprob: -4.2593231201171875
    7. '(space' → logprob: -4.8843231201171875
    8. '`' → logprob: -4.8843231201171875
    9. 'def' (adapté à ' def') → logprob: -5.0093231201171875
    10. ' (' → logprob: -5.0093231201171875

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2476869821548462
    2. ' __' → logprob: -1.7476869821548462
    3. '__' → logprob: -3.7476868629455566
    4. '    ' → logprob: -5.247686862945557
    5. ' ' → logprob: -5.247686862945557
    6. ' init' → logprob: -5.872686862945557
    7. '```' → logprob: -6.997686862945557
    8. ' ```' → logprob: -7.247686862945557
    9. ' def' → logprob: -7.372686862945557
    10. '_' → logprob: -7.372686862945557

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.856408536899835e-05
    2. ' init' → logprob: -11.000028610229492
    3. '_init' → logprob: -11.625028610229492
    4. 'i' → logprob: -13.625028610229492
    5. 'ini' → logprob: -13.625028610229492
    6. '	init' → logprob: -15.750028610229492
    7. '_i' → logprob: -16.000028610229492
    8. '_' → logprob: -16.250028610229492
    9. 'in' → logprob: -16.500028610229492
    10. '   ' → logprob: -18.000028610229492

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10183491557836533
    2. '__' → logprob: -2.351835012435913
    3. '__(
' → logprob: -6.601834774017334
    4. '(' → logprob: -8.976835250854492
    5. '__((' → logprob: -9.476835250854492
    6. '__('' → logprob: -10.476835250854492
    7. '_' → logprob: -11.476835250854492
    8. '__(*' → logprob: -11.601835250854492
    9. '(self' → logprob: -11.851835250854492
    10. '___' → logprob: -12.476835250854492

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010811600368469954
    2. ' self' → logprob: -6.8760809898376465
    3. ')' → logprob: -10.751081466674805
    4. '(self' → logprob: -10.751081466674805
    5. '_self' → logprob: -13.876081466674805
    6. ',self' → logprob: -14.001081466674805
    7. ' ' → logprob: -14.126081466674805
    8. 's' → logprob: -14.376081466674805
    9. ' )' → logprob: -14.876081466674805
    10. ''s' → logprob: -14.876081466674805

Token 9: ',key' (ID: 119403)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8377094268798828
    2. ',' → logprob: -1.2127094268798828
    3. '(' → logprob: -2.212709426879883
    4. 'self' → logprob: -2.837709426879883
    5. '_' → logprob: -3.462709426879883
    6. ' )' → logprob: -3.712709426879883
    7. ' ' → logprob: -4.337709426879883
    8. ' ,' → logprob: -4.712709426879883
    9. '<|end|>' → logprob: -4.837709426879883
    10. '(self' → logprob: -5.337709426879883

Token 10: ',left' (ID: 192836)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5553543567657471
    2. ',' → logprob: -1.430354356765747
    3. ')' → logprob: -1.680354356765747
    4. ':' → logprob: -8.430354118347168
    5. '=' → logprob: -9.305354118347168
    6. ' ,' → logprob: -10.305354118347168
    7. '<|end|>' → logprob: -10.305354118347168
    8. '):
' → logprob: -10.430354118347168
    9. ' ):' → logprob: -10.805354118347168
    10. ')>' → logprob: -11.180354118347168

Token 11: ',right' (ID: 164487)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5206459760665894
    2. '=' → logprob: -1.5206459760665894
    3. ')' → logprob: -1.7706459760665894
    4. '):' → logprob: -4.270646095275879
    5. '=None' → logprob: -6.395646095275879
    6. ' )' → logprob: -7.520646095275879
    7. ' ,' → logprob: -8.270646095275879
    8. ':' → logprob: -8.770646095275879
    9. ' ' → logprob: -9.020646095275879
    10. ')=' → logprob: -9.020646095275879

Token 12: ',parent' (ID: 191621)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01795055903494358
    2. ')' → logprob: -4.142950534820557
    3. ',' → logprob: -6.642950534820557
    4. ':' → logprob: -7.517950534820557
    5. '   ' → logprob: -10.517951011657715
    6. '=' → logprob: -11.392951011657715
    7. '):
' → logprob: -12.142951011657715
    8. ''):' → logprob: -12.142951011657715
    9. ' ):' → logprob: -12.267951011657715
    10. '),' → logprob: -13.642951011657715

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003277056384831667
    2. ')' → logprob: -5.753276824951172
    3. ':' → logprob: -10.003276824951172
    4. ',' → logprob: -10.003276824951172
    5. ' ):' → logprob: -13.003276824951172
    6. '):
' → logprob: -13.378276824951172
    7. '   ' → logprob: -13.378276824951172
    8. ''):' → logprob: -13.878276824951172
    9. '=' → logprob: -14.878276824951172
    10. '```' → logprob: -15.503276824951172

Token 14: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.726254940032959
    2. ')' → logprob: -1.476254940032959
    3. '):' → logprob: -1.851254940032959
    4. ' :' → logprob: -2.976254940032959
    5. '   ' → logprob: -3.476254940032959
    6. ' ' → logprob: -4.226254940032959
    7. ' ):' → logprob: -4.226254940032959
    8. '       ' → logprob: -4.976254940032959
    9. ' )' → logprob: -5.226254940032959
    10. '    ' → logprob: -5.851254940032959

Token 15: ' self' (ID: 1051)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9596607089042664
    2. 'self' (adapté à ' self') → logprob: -1.2096607685089111
    3. ' ' → logprob: -1.7096607685089111
    4. '_' → logprob: -2.334660768508911
    5. ' self' → logprob: -4.709660530090332
    6. '       ' → logprob: -4.709660530090332
    7. '        ' → logprob: -4.959660530090332
    8. '    ' → logprob: -5.459660530090332
    9. '   ' → logprob: -5.459660530090332
    10. ' ' → logprob: -6.209660530090332

Token 16: '.key' (ID: 8839)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002819544170051813
    2. '.key' → logprob: -8.250282287597656
    3. '<|end|>' → logprob: -12.375282287597656
    4. ' .' → logprob: -13.000282287597656
    5. '<|end|>' → logprob: -13.250282287597656
    6. '.space' → logprob: -13.500282287597656
    7. '.value' → logprob: -13.500282287597656
    8. ')' → logprob: -14.000282287597656
    9. '.Key' → logprob: -14.125282287597656
    10. '.keys' → logprob: -14.250282287597656

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04910697415471077
    2. ' =' → logprob: -3.049107074737549
    3. '<|end|>' → logprob: -7.924107074737549
    4. ' ' → logprob: -9.29910659790039
    5. ')' → logprob: -10.17410659790039
    6. '_' → logprob: -12.04910659790039
    7. ' =)' → logprob: -12.17410659790039
    8. ',' → logprob: -12.29910659790039
    9. '=}' → logprob: -13.17410659790039
    10. '<|end|>' → logprob: -13.54910659790039

Token 18: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.023245595395565033
    2. 'key' → logprob: -3.7732455730438232
    3. '	key' → logprob: -16.273244857788086
    4. ' ' → logprob: -17.398244857788086
    5. '(key' → logprob: -17.648244857788086
    6. '_key' → logprob: -18.273244857788086
    7. '$key' → logprob: -19.148244857788086
    8. ' ' → logprob: -19.273244857788086
    9. '.key' → logprob: -19.398244857788086
    10. 'Key' → logprob: -19.523244857788086

Token 19: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5482081770896912
    2. ' self' → logprob: -0.9232081770896912
    3. '       ' → logprob: -3.923208236694336
    4. ' left' → logprob: -5.923208236694336
    5. 'left' → logprob: -7.423208236694336
    6. ' ' → logprob: -7.548208236694336
    7. ' None' → logprob: -7.673208236694336
    8. '        ' → logprob: -8.173208236694336
    9. ' ' → logprob: -8.548208236694336
    10. '   ' → logprob: -10.423208236694336

Token 22: '.left' (ID: 15388)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02988840639591217
    2. '.left' → logprob: -3.529888391494751
    3. '.right' → logprob: -9.154888153076172
    4. ' .' → logprob: -11.029888153076172
    5. '.parent' → logprob: -12.404888153076172
    6. '.Left' → logprob: -12.654888153076172
    7. '.key' → logprob: -13.154888153076172
    8. '.space' → logprob: -14.154888153076172
    9. '.children' → logprob: -14.404888153076172
    10. '.user' → logprob: -14.404888153076172

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2663918137550354
    2. '<|end|>' → logprob: -2.0163917541503906
    3. ' =' → logprob: -2.5163917541503906
    4. ' ' → logprob: -4.266391754150391
    5. '<|end|>' → logprob: -6.391391754150391
    6. '.' → logprob: -6.391391754150391
    7. ')' → logprob: -6.641391754150391
    8. '_' → logprob: -7.391391754150391
    9. ',' → logprob: -8.01639175415039
    10. '=None' → logprob: -9.76639175415039

Token 24: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.14267762005329132
    2. 'left' → logprob: -2.0176775455474854
    3. '	left' → logprob: -13.642677307128906
    4. ' None' → logprob: -14.892677307128906
    5. ' lef' → logprob: -15.017677307128906
    6. ' ' → logprob: -16.017677307128906
    7. '(left' → logprob: -16.267677307128906
    8. '[left' → logprob: -16.267677307128906
    9. '.left' → logprob: -16.517677307128906
    10. ' ' → logprob: -16.642677307128906

Token 25: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021690180525183678
    2. '<|end|>' → logprob: -4.146690368652344
    3. 'newline' → logprob: -6.521690368652344
    4. ')' → logprob: -7.146690368652344
    5. '   ' → logprob: -7.146690368652344
    6. '```' → logprob: -7.771690368652344
    7. '
' → logprob: -7.771690368652344
    8. '        
' → logprob: -8.021690368652344
    9. '<|end|>' → logprob: -8.521690368652344
    10. '\' → logprob: -8.521690368652344

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08863687515258789
    2. '<|end|>' → logprob: -3.213636875152588
    3. ' ' → logprob: -3.963636875152588
    4. '        
' → logprob: -4.588636875152588
    5. ' 
' → logprob: -5.963636875152588
    6. '```' → logprob: -6.213636875152588
    7. '   ' → logprob: -6.213636875152588
    8. ''' → logprob: -6.463636875152588
    9. ')' → logprob: -6.838636875152588
    10. '    
' → logprob: -7.088636875152588

Token 27: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3179906904697418
    2. '       ' → logprob: -1.3179906606674194
    3. ' self' → logprob: -5.817990779876709
    4. 'right' → logprob: -7.567990779876709
    5. ',' → logprob: -8.06799030303955
    6. '   ' → logprob: -8.19299030303955
    7. ' ' → logprob: -8.94299030303955
    8. '```' → logprob: -9.56799030303955
    9. ')' → logprob: -9.81799030303955
    10. '<|end|>' → logprob: -9.94299030303955

Token 28: '.right' (ID: 17627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1798694133758545
    2. '.right' → logprob: -1.8048694133758545
    3. '.left' → logprob: -9.929869651794434
    4. '.parent' → logprob: -10.429869651794434
    5. ' .' → logprob: -10.554869651794434
    6. 'right' → logprob: -11.429869651794434
    7. ' ' → logprob: -13.054869651794434
    8. '<|end|>' → logprob: -13.429869651794434
    9. '.Right' → logprob: -14.179869651794434
    10. '	right' → logprob: -14.304869651794434

Token 29: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16234233975410461
    2. ' =' → logprob: -1.9123423099517822
    3. '<|end|>' → logprob: -6.412342548370361
    4. ' ' → logprob: -8.287342071533203
    5. ')' → logprob: -8.787342071533203
    6. '<|end|>' → logprob: -10.662342071533203
    7. '_' → logprob: -11.287342071533203
    8. '.' → logprob: -11.662342071533203
    9. ',' → logprob: -12.037342071533203
    10. ' =
' → logprob: -12.662342071533203

Token 30: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.011068337596952915
    2. 'right' → logprob: -4.511068344116211
    3. ' parent' → logprob: -10.886068344116211
    4. 'parent' → logprob: -13.886068344116211
    5. '	right' → logprob: -15.011068344116211
    6. ' left' → logprob: -16.26106834411621
    7. ' ' → logprob: -16.38606834411621
    8. '_right' → logprob: -16.51106834411621
    9. '[right' → logprob: -16.51106834411621
    10. '.right' → logprob: -16.88606834411621

Token 31: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04336041957139969
    2. '<|end|>' → logprob: -4.043360233306885
    3. ' ' → logprob: -4.293360233306885
    4. ')' → logprob: -5.668360233306885
    5. '        
' → logprob: -6.168360233306885
    6. '        ' → logprob: -6.418360233306885
    7. 'parent' → logprob: -7.293360233306885
    8. ' 
' → logprob: -7.543360233306885
    9. ' )' → logprob: -7.918360233306885
    10. '   ' → logprob: -7.918360233306885

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030037999153137207
    2. '<|end|>' → logprob: -4.155037879943848
    3. ' ' → logprob: -4.905037879943848
    4. 'parent' → logprob: -6.655037879943848
    5. '        
' → logprob: -6.780037879943848
    6. ')' → logprob: -6.780037879943848
    7. 'self' → logprob: -7.530037879943848
    8. '        ' → logprob: -7.905037879943848
    9. '   ' → logprob: -7.905037879943848
    10. ' )' → logprob: -8.405037879943848

Token 33: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5393508672714233
    2. 'self' (adapté à ' self') → logprob: -1.0393508672714233
    3. 'parent' → logprob: -2.789350986480713
    4. ' self' → logprob: -7.664350986480713
    5. ' parent' → logprob: -7.789350986480713
    6. '<|end|>' → logprob: -8.539350509643555
    7. ')' → logprob: -9.039350509643555
    8. '   ' → logprob: -9.164350509643555
    9. ',parent' → logprob: -9.414350509643555
    10. '\' → logprob: -9.789350509643555

Token 34: '.p' (ID: 1201)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.018177097663283348
    2. '.' → logprob: -4.018177032470703
    3. 'parent' → logprob: -11.518177032470703
    4. '.Parent' → logprob: -12.143177032470703
    5. ' .' → logprob: -12.268177032470703
    6. '.parents' → logprob: -13.268177032470703
    7. '_parent' → logprob: -13.768177032470703
    8. '.user' → logprob: -13.893177032470703
    9. '.left' → logprob: -14.018177032470703
    10. 'Parent' → logprob: -14.768177032470703

Token 35: ' =' (ID: 314)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.00200203456915915
    2. 'a' → logprob: -6.252002239227295
    3. 'parent' → logprob: -9.752001762390137
    4. 'aren' → logprob: -12.002001762390137
    5. 'ARENT' → logprob: -12.002001762390137
    6. 'are' → logprob: -13.127001762390137
    7. 'arr' → logprob: -15.627001762390137
    8. 'arn' → logprob: -15.627001762390137
    9. 'arer' → logprob: -15.752001762390137
    10. '_parent' → logprob: -16.252002716064453

Token 36: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.061969365924596786
    2. ' parent' → logprob: -2.81196928024292
    3. '(parent' → logprob: -14.186969757080078
    4. '	parent' → logprob: -14.186969757080078
    5. '[parent' → logprob: -16.311969757080078
    6. ' ' → logprob: -16.686969757080078
    7. '.parent' → logprob: -16.811969757080078
    8. ',parent' → logprob: -16.936969757080078
    9. 'p' → logprob: -17.436969757080078
    10. '_parent' → logprob: -17.936969757080078

Token 37: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2822906970977783
    2. '   ' → logprob: -1.7822906970977783
    3. 'def' → logprob: -3.9072906970977783
    4. ' ' → logprob: -4.032290458679199
    5. 'n' → logprob: -4.532290458679199
    6. '    
' → logprob: -5.282290458679199
    7. '<|end|>' → logprob: -5.657290458679199
    8. '\n' → logprob: -5.782290458679199
    9. ' 
' → logprob: -5.907290458679199
    10. '.' → logprob: -6.032290458679199

Token 38: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5990356206893921
    2. '   ' → logprob: -1.349035620689392
    3. ' ' → logprob: -3.0990357398986816
    4. 'def' → logprob: -3.4740357398986816
    5. 'd' → logprob: -3.5990357398986816
    6. ' 
' → logprob: -3.8490357398986816
    7. ':' → logprob: -4.349035739898682
    8. '\n' → logprob: -4.849035739898682
    9. '```' → logprob: -5.099035739898682
    10. ')' → logprob: -5.099035739898682

Token 39: ' def' (ID: 1056)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.028608916327357292
    2. 'def' (adapté à ' def') → logprob: -3.778608798980713
    3. '   ' → logprob: -5.528608798980713
    4. ' ' → logprob: -7.528608798980713
    5. ' def' → logprob: -7.778608798980713
    6. ' 
' → logprob: -9.528609275817871
    7. 'de' → logprob: -9.528609275817871
    8. ' d' → logprob: -10.028609275817871
    9. '    
' → logprob: -10.028609275817871
    10. 'n' → logprob: -10.403609275817871

Token 40: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9128394722938538
    2. '_' → logprob: -1.037839412689209
    3. ' insert' → logprob: -2.162839412689209
    4. ' _' → logprob: -2.662839412689209
    5. ' space' → logprob: -3.537839412689209
    6. 'insert' → logprob: -4.912839412689209
    7. 'space' → logprob: -5.037839412689209
    8. ' __' → logprob: -5.412839412689209
    9. '_insert' → logprob: -5.662839412689209
    10. ' ```' → logprob: -6.162839412689209

Token 41: 'repr' (ID: 67002)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0338040590286255
    2. 'repr' → logprob: -1.1588040590286255
    3. 'str' → logprob: -1.7838040590286255
    4. 'r' → logprob: -2.908803939819336
    5. 'init' → logprob: -3.283803939819336
    6. 'i' → logprob: -3.533803939819336
    7. 'eq' → logprob: -3.908803939819336
    8. 's' → logprob: -4.908803939819336
    9. '_i' → logprob: -5.658803939819336
    10. '_repr' → logprob: -6.283803939819336

Token 42: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4795217514038086
    2. '__(' → logprob: -0.9795217514038086
    3. '__('' → logprob: -5.729521751403809
    4. '__(
' → logprob: -6.479521751403809
    5. '_' → logprob: -8.229521751403809
    6. '__((' → logprob: -8.604521751403809
    7. '(' → logprob: -9.354521751403809
    8. '__("' → logprob: -9.979521751403809
    9. '___' → logprob: -10.479521751403809
    10. '__.__' → logprob: -11.354521751403809

Token 43: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5094070477061905e-05
    2. ')' → logprob: -11.125015258789062
    3. ' self' → logprob: -16.250015258789062
    4. '_self' → logprob: -16.625015258789062
    5. '
' → logprob: -17.000015258789062
    6. 'sel' → logprob: -17.375015258789062
    7. '

' → logprob: -17.750015258789062
    8. 'elf' → logprob: -18.125015258789062
    9. ''s' → logprob: -18.500015258789062
    10. '(self' → logprob: -18.500015258789062

Token 44: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39941030740737915
    2. '):' → logprob: -1.1494102478027344
    3. ',' → logprob: -4.399410247802734
    4. '):
' → logprob: -10.274410247802734
    5. 'self' → logprob: -10.524410247802734
    6. ' ):' → logprob: -10.774410247802734
    7. ' )' → logprob: -11.399410247802734
    8. ':' → logprob: -11.774410247802734
    9. '.' → logprob: -11.899410247802734
    10. '):

' → logprob: -12.024410247802734

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028836876153945923
    2. ' return' → logprob: -7.2528839111328125
    3. ''' → logprob: -7.6278839111328125
    4. '   ' → logprob: -8.002883911132812
    5. '    ' → logprob: -8.002883911132812
    6. 'return' → logprob: -8.252883911132812
    7. '        ' → logprob: -8.252883911132812
    8. '"' → logprob: -8.502883911132812
    9. '           ' → logprob: -9.752883911132812
    10. '`' → logprob: -10.127883911132812

Token 46: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04564110189676285
    2. '       ' → logprob: -3.6706411838531494
    3. ' return' → logprob: -4.04564094543457
    4. 'r' → logprob: -6.67064094543457
    5. '   ' → logprob: -8.54564094543457
    6. 'f' → logprob: -9.54564094543457
    7. '{return' → logprob: -10.79564094543457
    8. '    ' → logprob: -10.92064094543457
    9. 'ret' → logprob: -11.42064094543457
    10. '<' → logprob: -11.67064094543457

Token 47: 'return' (ID: 1034)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3541753888130188
    2. ' ' → logprob: -2.604175329208374
    3. ' return' → logprob: -2.729175329208374
    4. 'return' → logprob: -2.979175329208374
    5. '    ' → logprob: -3.229175329208374
    6. ' r' → logprob: -3.229175329208374
    7. '       ' → logprob: -4.479175567626953
    8. '   ' → logprob: -4.729175567626953
    9. '        ' → logprob: -5.354175567626953
    10. 's' → logprob: -6.854175567626953

Token 48: ' str' (ID: 989)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.05361910164356232
    2. ' self' → logprob: -4.178618907928467
    3. ' repr' → logprob: -4.178618907928467
    4. 'f' → logprob: -5.053618907928467
    5. 'repr' → logprob: -5.178618907928467
    6. ' str' → logprob: -5.428618907928467
    7. 'self' → logprob: -5.553618907928467
    8. 'str' → logprob: -7.803618907928467
    9. '"' → logprob: -8.178619384765625
    10. ''' → logprob: -8.303619384765625

Token 49: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.055094968527555466
    2. '(' → logprob: -2.9300949573516846
    3. 'self' → logprob: -8.930094718933105
    4. '(s' → logprob: -10.430094718933105
    5. '(
' → logprob: -10.430094718933105
    6. 's' → logprob: -12.805094718933105
    7. '((' → logprob: -13.055094718933105
    8. ' (' → logprob: -13.055094718933105
    9. '(object' → logprob: -13.430094718933105
    10. '(node' → logprob: -13.430094718933105

Token 50: '.key' (ID: 8839)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0806360244750977
    2. '.key' → logprob: -1.2056360244750977
    3. '(self' → logprob: -1.2056360244750977
    4. '(' → logprob: -2.9556360244750977
    5. 'self' → logprob: -4.830636024475098
    6. '(key' → logprob: -7.955636024475098
    7. '(
' → logprob: -8.080636024475098
    8. '.' → logprob: -8.455636024475098
    9. '.self' → logprob: -8.955636024475098
    10. '   ' → logprob: -9.455636024475098

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ' )' → logprob: -13.375006675720215
    3. '}' → logprob: -13.500006675720215
    4. ')return' → logprob: -14.125006675720215
    5. '   ' → logprob: -14.250006675720215
    6. '')' → logprob: -14.250006675720215
    7. ')#' → logprob: -14.750006675720215
    8. ')
' → logprob: -15.375006675720215
    9. '       ' → logprob: -15.750006675720215
    10. '))' → logprob: -16.0000057220459

Token 52: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.135254368185997
    2. ')' → logprob: -3.010254383087158
    3. '   ' → logprob: -3.010254383087158
    4. '\n' → logprob: -4.510254383087158
    5. '    ' → logprob: -5.385254383087158
    6. ' ' → logprob: -5.510254383087158
    7. '#' → logprob: -6.010254383087158
    8. '        ' → logprob: -7.135254383087158
    9. '  ' → logprob: -7.260254383087158
    10. '\' → logprob: -7.260254383087158

Token 53: ' "["' (ID: 118065)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22528541088104248
    2. ''' → logprob: -1.7252854108810425
    3. ' "' → logprob: -4.100285530090332
    4. ' '' → logprob: -5.600285530090332
    5. ' ' → logprob: -5.975285530090332
    6. '""' → logprob: -8.975285530090332
    7. '",' → logprob: -9.350285530090332
    8. '''' → logprob: -9.475285530090332
    9. 'repr' → logprob: -9.600285530090332
    10. '")' → logprob: -9.600285530090332

Token 54: ' +' (ID: 659)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05211195722222328
    2. ']' → logprob: -4.177112102508545
    3. ')' → logprob: -4.677112102508545
    4. 'repr' → logprob: -5.177112102508545
    5. '']' → logprob: -5.802112102508545
    6. '{' → logprob: -6.052112102508545
    7. ' self' → logprob: -6.177112102508545
    8. ',' → logprob: -6.427112102508545
    9. '   ' → logprob: -6.427112102508545
    10. '.' → logprob: -6.427112102508545

Token 55: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.03921102359890938
    2. ' str' → logprob: -4.164210796356201
    3. 'repr' → logprob: -4.414210796356201
    4. '(str' → logprob: -4.789210796356201
    5. ' repr' → logprob: -6.914210796356201
    6. '"' → logprob: -7.539210796356201
    7. 'self' → logprob: -7.539210796356201
    8. ' (' → logprob: -8.91421127319336
    9. '"]' → logprob: -9.53921127319336
    10. '(' → logprob: -9.66421127319336

Token 56: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004589094896800816
    2. '(' → logprob: -7.750458717346191
    3. 'self' → logprob: -10.625458717346191
    4. '(type' → logprob: -13.500458717346191
    5. '(
' → logprob: -14.750458717346191
    6. ' (' → logprob: -14.875458717346191
    7. '(parent' → logprob: -15.125458717346191
    8. '(s' → logprob: -15.500458717346191
    9. '(len' → logprob: -15.500458717346191
    10. '((' → logprob: -15.750458717346191

Token 57: '.p' (ID: 1201)
  Prédit: '.key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.6392366886138916
    2. '.p' → logprob: -0.7642366886138916
    3. '.left' → logprob: -5.1392364501953125
    4. '.right' → logprob: -7.7642364501953125
    5. '.' → logprob: -8.764236450195312
    6. ')' → logprob: -10.139236450195312
    7. '.parent' → logprob: -10.264236450195312
    8. 'key' → logprob: -10.514236450195312
    9. 'p' → logprob: -11.264236450195312
    10. ').' → logprob: -11.389236450195312

Token 58: ')+' (ID: 16161)
  Prédit: '.key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.14351674914360046
    2. ')' → logprob: -2.018516778945923
    3. ')]' → logprob: -8.518516540527344
    4. ' and' → logprob: -8.643516540527344
    5. 'key' → logprob: -8.893516540527344
    6. ' if' → logprob: -9.268516540527344
    7. '")' → logprob: -9.768516540527344
    8. '.' → logprob: -10.393516540527344
    9. ']' → logprob: -10.518516540527344
    10. ' ' → logprob: -10.643516540527344

Token 59: '"]' (ID: 2601)
  Prédit: '"]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.002712272573262453
    2. ' "]' → logprob: -6.877712249755859
    3. '']' → logprob: -7.752712249755859
    4. 'str' → logprob: -7.877712249755859
    5. '"' → logprob: -8.00271224975586
    6. '",' → logprob: -8.75271224975586
    7. ']' → logprob: -9.87771224975586
    8. ' str' → logprob: -9.87771224975586
    9. '   ' → logprob: -10.00271224975586
    10. '","' → logprob: -10.12771224975586

Token 60: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.13732761144638062
    2. '"]' → logprob: -2.5123276710510254
    3. ']' → logprob: -3.1373276710510254
    4. ')' → logprob: -7.012327671051025
    5. '       ' → logprob: -7.387327671051025
    6. '"""' → logprob: -7.512327671051025
    7. 'return' → logprob: -7.637327671051025
    8. '']' → logprob: -8.012327194213867
    9. '   ' → logprob: -8.387327194213867
    10. ''' → logprob: -8.512327194213867

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04287461191415787
    2. ')' → logprob: -3.917874574661255
    3. '"' → logprob: -4.792874813079834
    4. '   ' → logprob: -4.917874813079834
    5. ''' → logprob: -6.042874813079834
    6. 'return' → logprob: -6.792874813079834
    7. ']' → logprob: -7.542874813079834
    8. '    ' → logprob: -7.542874813079834
    9. '#' → logprob: -8.167874336242676
    10. ' ' → logprob: -8.292874336242676

Token 62: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1339854896068573
    2. '       ' → logprob: -2.2589855194091797
    3. ' return' → logprob: -3.8839855194091797
    4. '   ' → logprob: -8.38398551940918
    5. '        ' → logprob: -10.38398551940918
    6. '    ' → logprob: -10.88398551940918
    7. '	return' → logprob: -11.00898551940918
    8. 'r' → logprob: -11.00898551940918
    9. '      ' → logprob: -11.38398551940918
    10. '           ' → logprob: -11.88398551940918

Token 63: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.026327935978770256
    2. '"' → logprob: -4.401328086853027
    3. 'str' → logprob: -4.776328086853027
    4. ' "' → logprob: -6.276328086853027
    5. ' f' → logprob: -6.276328086853027
    6. ''' → logprob: -7.276328086853027
    7. ' ' → logprob: -7.526328086853027
    8. ' '' → logprob: -8.651328086853027
    9. ' repr' → logprob: -9.276328086853027
    10. ' ' → logprob: -11.151328086853027

Token 64: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12694554030895233
    2. '(self' → logprob: -2.1269454956054688
    3. '(
' → logprob: -12.251945495605469
    4. '(s' → logprob: -12.376945495605469
    5. ' (' → logprob: -13.501945495605469
    6. '(`' → logprob: -13.626945495605469
    7. 'self' → logprob: -13.751945495605469
    8. '('' → logprob: -14.001945495605469
    9. '(this' → logprob: -14.251945495605469
    10. '(

' → logprob: -14.251945495605469

Token 65: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -5.848420551046729e-05
    2. '.' → logprob: -9.7500581741333
    3. ' .' → logprob: -16.250059127807617
    4. '.Key' → logprob: -17.250059127807617
    5. 'key' → logprob: -17.375059127807617
    6. '.user' → logprob: -18.375059127807617
    7. '.token' → logprob: -18.500059127807617
    8. '.keys' → logprob: -19.250059127807617
    9. ').' → logprob: -19.375059127807617
    10. '.k' → logprob: -19.625059127807617

Token 66: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. ' )' → logprob: -12.750011444091797
    3. ')+' → logprob: -13.125011444091797
    4. ')return' → logprob: -13.250011444091797
    5. ')#' → logprob: -14.000011444091797
    6. ')
' → logprob: -14.250011444091797
    7. ')}}' → logprob: -14.375011444091797
    8. ')`' → logprob: -14.875011444091797
    9. '+' → logprob: -15.000011444091797
    10. '}' → logprob: -15.625011444091797

Token 67: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' insert' (ID: 10898)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37810802459716797
    2. ' insert' → logprob: -2.878108024597168
    3. ' Node' → logprob: -3.253108024597168
    4. '_' → logprob: -3.503108024597168
    5. ' _' → logprob: -3.628108024597168
    6. ' find' → logprob: -3.628108024597168
    7. ' dfs' → logprob: -4.128108024597168
    8. ' bst' → logprob: -4.128108024597168
    9. ' space' → logprob: -4.378108024597168
    10. ' tree' → logprob: -4.628108024597168

Token 69: '(T' (ID: 7014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03596458211541176
    2. '(root' → logprob: -4.035964488983154
    3. '(node' → logprob: -4.160964488983154
    4. ' (' → logprob: -6.660964488983154
    5. '(Node' → logprob: -8.285964965820312
    6. '(tree' → logprob: -8.535964965820312
    7. '(self' → logprob: -9.160964965820312
    8. '(nodes' → logprob: -9.660964965820312
    9. '<|end|>' → logprob: -10.410964965820312
    10. '(parent' → logprob: -10.660964965820312

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024474733509123325
    2. ' ,' → logprob: -6.252447605133057
    3. ',T' → logprob: -8.127447128295898
    4. ',node' → logprob: -8.627447128295898
    5. ',key' → logprob: -11.252447128295898
    6. ')' → logprob: -12.002447128295898
    7. ',n' → logprob: -12.002447128295898
    8. ',p' → logprob: -12.752447128295898
    9. ',t' → logprob: -12.877447128295898
    10. ',N' → logprob: -13.002447128295898

Token 71: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.5497511625289917
    2. 'key' → logprob: -1.5497511625289917
    3. 'x' → logprob: -2.0497512817382812
    4. 'k' → logprob: -3.5497512817382812
    5. ' key' → logprob: -3.5497512817382812
    6. 'node' → logprob: -4.424751281738281
    7. ' z' → logprob: -4.674751281738281
    8. ' x' → logprob: -7.174751281738281
    9. 'root' → logprob: -7.174751281738281
    10. ' node' → logprob: -7.424751281738281

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010943770175799727
    2. ')' → logprob: -7.001094341278076
    3. ' ):' → logprob: -8.751094818115234
    4. ',' → logprob: -10.876094818115234
    5. '):
' → logprob: -12.501094818115234
    6. ':' → logprob: -13.876094818115234
    7. ' )' → logprob: -15.626094818115234
    8. ' ' → logprob: -16.001094818115234
    9. '),' → logprob: -16.126094818115234
    10. '   ' → logprob: -16.251094818115234

Token 73: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9312885403633118
    2. '"' → logprob: -1.306288480758667
    3. ''' → logprob: -2.306288480758667
    4. '   ' → logprob: -2.306288480758667
    5. 'None' → logprob: -3.056288480758667
    6. ' None' → logprob: -4.056288719177246
    7. ')' → logprob: -4.181288719177246
    8. '  ' → logprob: -4.306288719177246
    9. 'if' → logprob: -4.306288719177246
    10. ':' → logprob: -5.056288719177246

Token 74: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.6733700633049011
    2. 'if' → logprob: -0.7983700633049011
    3. ' if' → logprob: -4.048369884490967
    4. ' y' → logprob: -4.048369884490967
    5. '   ' → logprob: -6.298369884490967
    6. 'root' → logprob: -7.173369884490967
    7. 'parent' → logprob: -7.298369884490967
    8. 'current' → logprob: -7.423369884490967
    9. 'x' → logprob: -7.798369884490967
    10. 'None' → logprob: -8.298370361328125

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07905899733304977
    2. '=' → logprob: -2.579058885574341
    3. '=None' → logprob: -8.704058647155762
    4. ' None' → logprob: -13.579058647155762
    5. 'None' → logprob: -13.704058647155762
    6. ',' → logprob: -14.579058647155762
    7. ' ' → logprob: -16.204059600830078
    8. '   ' → logprob: -16.329059600830078
    9. '=

' → logprob: -16.954059600830078
    10. '  ' → logprob: -17.329059600830078

Token 76: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.014164801687002182
    2. ' None' → logprob: -4.264164924621582
    3. 'N' → logprob: -14.764164924621582
    4. '   ' → logprob: -14.764164924621582
    5. 'T' → logprob: -15.639164924621582
    6. 'Nil' → logprob: -17.014163970947266
    7. '_None' → logprob: -17.139163970947266
    8. 'none' → logprob: -17.139163970947266
    9. 'nil' → logprob: -17.264163970947266
    10. '(None' → logprob: -17.264163970947266

Token 77: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.14699214696884155
    2. ' x' → logprob: -2.0219922065734863
    3. '   ' → logprob: -5.521992206573486
    4. '	x' → logprob: -8.771991729736328
    5. '<|end|>' → logprob: -9.521991729736328
    6. '    ' → logprob: -10.021991729736328
    7. '    
' → logprob: -12.021991729736328
    8. ''x' → logprob: -12.646991729736328
    9. ' ' → logprob: -12.771991729736328
    10. '  ' → logprob: -12.771991729736328

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048762127757072
    2. '=' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.386048316955566
    4. '<|end|>' → logprob: -15.386048316955566
    5. '=T' → logprob: -15.761048316955566
    6. ',' → logprob: -17.636049270629883
    7. '<|end|>' → logprob: -18.011049270629883
    8. ')' → logprob: -18.136049270629883
    9. ' =
' → logprob: -18.261049270629883
    10. '  ' → logprob: -19.261049270629883

Token 81: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.02054445445537567
    2. ' T' → logprob: -3.8955445289611816
    3. '<|end|>' → logprob: -13.395544052124023
    4. '	T' → logprob: -14.770544052124023
    5. '   ' → logprob: -15.145544052124023
    6. ' ' → logprob: -15.770544052124023
    7. ' ' → logprob: -16.145544052124023
    8. '  ' → logprob: -16.270544052124023
    9. '_T' → logprob: -17.270544052124023
    10. '<|end|>' → logprob: -17.770544052124023

Token 82: ' 
' (ID: 793)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3026549518108368
    2. '<|end|>' → logprob: -2.177654981613159
    3. ' 
' → logprob: -3.177654981613159
    4. '    
' → logprob: -3.427654981613159
    5. '  
' → logprob: -4.05265474319458
    6. 'while' → logprob: -4.05265474319458
    7. '   
' → logprob: -4.17765474319458
    8. '<|end|>' → logprob: -4.30265474319458
    9. '	
' → logprob: -6.05265474319458
    10. ' while' → logprob: -6.80265474319458

Token 84: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0011154505191370845
    2. 'x' → logprob: -6.876115322113037
    3. ' ' → logprob: -9.626115798950195
    4. '	x' → logprob: -11.126115798950195
    5. '(x' → logprob: -14.126115798950195
    6. ' not' → logprob: -14.376115798950195
    7. '<|end|>' → logprob: -15.001115798950195
    8. '  ' → logprob: -15.876115798950195
    9. ' (' → logprob: -15.876115798950195
    10. ' ' → logprob: -16.876115798950195

Token 86: ' !=' (ID: 1666)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007648152764886618
    2. 'is' → logprob: -5.13264799118042
    3. '!=' → logprob: -6.75764799118042
    4. ' !=' → logprob: -7.50764799118042
    5. ' isn't' → logprob: -13.507648468017578
    6. ' ' → logprob: -13.757648468017578
    7. ' not' → logprob: -14.007648468017578
    8. ':' → logprob: -14.507648468017578
    9. ' !' → logprob: -14.507648468017578
    10. ' and' → logprob: -14.632648468017578

Token 87: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.47408103942871094
    2. 'None' → logprob: -0.9740810394287109
    3. ' ' → logprob: -12.849081039428711
    4. '_None' → logprob: -13.974081039428711
    5. '=None' → logprob: -15.974081039428711
    6. 'N' → logprob: -15.974081039428711
    7. ' ' → logprob: -16.09908103942871
    8. '  ' → logprob: -16.97408103942871
    9. '0' → logprob: -17.22408103942871
    10. '(None' → logprob: -17.47408103942871

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011041370453312993
    2. ' :' → logprob: -7.626104354858398
    3. ' and' → logprob: -8.126104354858398
    4. ':
' → logprob: -8.876104354858398
    5. '):' → logprob: -9.626104354858398
    6. '<|end|>' → logprob: -9.876104354858398
    7. 'and' → logprob: -10.501104354858398
    8. ':**' → logprob: -11.626104354858398
    9. ',' → logprob: -12.126104354858398
    10. '   ' → logprob: -12.376104354858398

Token 89: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9279524683952332
    2. ' :' → logprob: -1.427952527999878
    3. ' ' → logprob: -1.802952527999878
    4. '       ' → logprob: -2.552952527999878
    5. '    ' → logprob: -2.802952527999878
    6. '   ' → logprob: -4.052952289581299
    7. ' x' → logprob: -4.552952289581299
    8. ' and' → logprob: -4.802952289581299
    9. '        ' → logprob: -5.302952289581299
    10. '  ' → logprob: -5.552952289581299

Token 90: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.21175071597099304
    2. ' ' → logprob: -2.3367507457733154
    3. ' y' → logprob: -2.8367507457733154
    4. 'x' → logprob: -4.461750507354736
    5. '    ' → logprob: -4.586750507354736
    6. 'z' → logprob: -4.836750507354736
    7. '<|end|>' → logprob: -5.836750507354736
    8. '  ' → logprob: -7.211750507354736
    9. '        ' → logprob: -7.836750507354736
    10. ' x' → logprob: -7.961750507354736

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026884309947490692
    2. '=' → logprob: -3.6518843173980713
    3. ' ' → logprob: -7.526884078979492
    4. '<|end|>' → logprob: -10.651884078979492
    5. ',' → logprob: -11.276884078979492
    6. 'space' → logprob: -13.401884078979492
    7. '=x' → logprob: -13.526884078979492
    8. 'x' → logprob: -14.151884078979492
    9. '<|end|>' → logprob: -14.151884078979492
    10. '	' → logprob: -14.276884078979492

Token 92: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20147055387496948
    2. ' x' → logprob: -1.7014706134796143
    3. '<|end|>' → logprob: -9.826470375061035
    4. '	x' → logprob: -13.326470375061035
    5. ' ' → logprob: -13.951470375061035
    6. '<|end|>' → logprob: -14.576470375061035
    7. ')x' → logprob: -15.701470375061035
    8. '>x' → logprob: -16.45147132873535
    9. '
' → logprob: -17.57647132873535
    10. ' 
' → logprob: -17.70147132873535

Token 93: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.22455675899982452
    2. ' ' → logprob: -2.0995566844940186
    3. '
' → logprob: -2.8495566844940186
    4. '<|end|>' → logprob: -4.599556922912598
    5. '  
' → logprob: -5.099556922912598
    6. '<|end|>' → logprob: -6.599556922912598
    7. '    
' → logprob: -6.724556922912598
    8. '   
' → logprob: -7.599556922912598
    9. '  ' → logprob: -8.599556922912598
    10. ' if' → logprob: -8.599556922912598

Token 94: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8525135517120361
    2. '
' → logprob: -0.9775135517120361
    3. ' ' → logprob: -1.9775135517120361
    4. '<|end|>' → logprob: -3.227513551712036
    5. '  
' → logprob: -4.727513313293457
    6. '        
' → logprob: -6.102513313293457
    7. '       ' → logprob: -6.227513313293457
    8. '    
' → logprob: -6.477513313293457
    9. '<|end|>' → logprob: -6.602513313293457
    10. '   
' → logprob: -7.102513313293457

Token 95: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.43267762660980225
    2. ' if' → logprob: -1.5576776266098022
    3. 'x' → logprob: -2.182677745819092
    4. '    ' → logprob: -4.932677745819092
    5. ' x' → logprob: -4.932677745819092
    6. 'z' → logprob: -5.432677745819092
    7. ' ' → logprob: -5.932677745819092
    8. '        ' → logprob: -6.057677745819092
    9. ' z' → logprob: -6.557677745819092
    10. '       ' → logprob: -7.182677745819092

Token 96: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.06998156756162643
    2. 'z' → logprob: -2.694981575012207
    3. ' ' → logprob: -10.444981575012207
    4. '	z' → logprob: -11.694981575012207
    5. '    ' → logprob: -12.694981575012207
    6. ' ' → logprob: -13.069981575012207
    7. ' 
' → logprob: -14.444981575012207
    8. ' x' → logprob: -14.819981575012207
    9. 'x' → logprob: -15.194981575012207
    10. '   ' → logprob: -15.319981575012207

Token 97: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -1.664371848164592e-05
    2. '.' → logprob: -11.125016212463379
    3. 'key' → logprob: -13.500016212463379
    4. '<' → logprob: -16.125017166137695
    5. ' key' → logprob: -16.250017166137695
    6. '.<' → logprob: -16.625017166137695
    7. '[key' → logprob: -16.625017166137695
    8. '	key' → logprob: -17.375017166137695
    9. ' .' → logprob: -17.500017166137695
    10. ' <' → logprob: -18.375017166137695

Token 98: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00865286123007536
    2. '<' → logprob: -4.758652687072754
    3. ' ' → logprob: -11.008652687072754
    4. '<|end|>' → logprob: -11.883652687072754
    5. ' >' → logprob: -13.008652687072754
    6. '<int' → logprob: -13.508652687072754
    7. ' <",' → logprob: -13.508652687072754
    8. '  ' → logprob: -13.633652687072754
    9. '<Key' → logprob: -14.133652687072754
    10. ' <=' → logprob: -14.383652687072754

Token 99: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4740792512893677
    2. 'x' → logprob: -0.9740792512893677
    3. '	x' → logprob: -13.474079132080078
    4. ')x' → logprob: -14.724079132080078
    5. '<|end|>' → logprob: -15.349079132080078
    6. ' ' → logprob: -16.224079132080078
    7. '(x' → logprob: -16.474079132080078
    8. '>x' → logprob: -16.724079132080078
    9. '"x' → logprob: -18.099079132080078
    10. '<x' → logprob: -18.474079132080078

Token 100: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -2.2007883671903983e-05
    2. '.' → logprob: -10.750021934509277
    3. ' .' → logprob: -15.375021934509277
    4. 'key' → logprob: -15.375021934509277
    5. '`.' → logprob: -17.625022888183594
    6. ' key' → logprob: -17.750022888183594
    7. ''.' → logprob: -18.125022888183594
    8. '.Key' → logprob: -18.125022888183594
    9. '".' → logprob: -18.250022888183594
    10. '```' → logprob: -18.750022888183594

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003316145855933428
    2. ':
' → logprob: -5.7533159255981445
    3. '<|end|>' → logprob: -9.753315925598145
    4. ' :' → logprob: -10.128315925598145
    5. '       ' → logprob: -11.128315925598145
    6. '<|end|>' → logprob: -11.378315925598145
    7. '):' → logprob: -11.878315925598145
    8. '):
' → logprob: -13.128315925598145
    9. ':

' → logprob: -14.003315925598145
    10. ' :
' → logprob: -14.128315925598145

Token 102: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3235913813114166
    2. '       ' → logprob: -1.8235913515090942
    3. '<|end|>' → logprob: -3.323591470718384
    4. ' :' → logprob: -4.323591232299805
    5. '           ' → logprob: -4.448591232299805
    6. ' ' → logprob: -4.448591232299805
    7. ':
' → logprob: -4.573591232299805
    8. ' 
' → logprob: -5.073591232299805
    9. '        ' → logprob: -5.073591232299805
    10. '
' → logprob: -5.323591232299805

Token 103: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1703607738018036
    2. 'x' (adapté à ' x') → logprob: -1.920360803604126
    3. ' ' → logprob: -4.795360565185547
    4. ' 
' → logprob: -6.420360565185547
    5. '        ' → logprob: -9.920360565185547
    6. '            ' → logprob: -10.420360565185547
    7. '           ' → logprob: -10.420360565185547
    8. ' ' → logprob: -11.170360565185547
    9. '    ' → logprob: -11.545360565185547
    10. '        
' → logprob: -11.670360565185547

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011703446507453918
    2. '=' → logprob: -6.7511701583862305
    3. '.' → logprob: -16.751171112060547
    4. ' =
' → logprob: -16.751171112060547
    5. ' ' → logprob: -17.126171112060547
    6. ' x' → logprob: -19.376171112060547
    7. '=x' → logprob: -19.376171112060547
    8. 'x' → logprob: -20.126171112060547
    9. '.=' → logprob: -20.126171112060547
    10. '＝' → logprob: -20.376171112060547

Token 105: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6931484341621399
    2. ' x' → logprob: -0.6931484341621399
    3. '	x' → logprob: -13.943148612976074
    4. ' ' → logprob: -15.693148612976074
    5. '(x' → logprob: -16.943147659301758
    6. ' ' → logprob: -17.068147659301758
    7. ')x' → logprob: -17.193147659301758
    8. '   ' → logprob: -18.193147659301758
    9. '$x' → logprob: -18.943147659301758
    10. '.x' → logprob: -19.068147659301758

Token 106: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0018681871006265283
    2. '.' → logprob: -6.37686824798584
    3. '.right' → logprob: -8.75186824798584
    4. ' .' → logprob: -12.12686824798584
    5. '.Left' → logprob: -13.87686824798584
    6. '.key' → logprob: -15.25186824798584
    7. '.le' → logprob: -15.37686824798584
    8. '.space' → logprob: -15.75186824798584
    9. '.x' → logprob: -16.251867294311523
    10. '.s' → logprob: -16.501867294311523

Token 107: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3212190270423889
    2. '       ' → logprob: -1.5712189674377441
    3. ' else' → logprob: -2.821218967437744
    4. '
' → logprob: -4.946218967437744
    5. 'elif' → logprob: -8.446219444274902
    6. '```' → logprob: -10.946219444274902
    7. '	else' → logprob: -11.071219444274902
    8. '
' → logprob: -11.446219444274902
    9. '<|end|>' → logprob: -11.696219444274902
    10. '        
' → logprob: -11.821219444274902

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4772392213344574
    2. 'else' → logprob: -1.1022392511367798
    3. ' else' → logprob: -3.1022391319274902
    4. '
' → logprob: -6.10223913192749
    5. 'elif' → logprob: -9.727239608764648
    6. '```' → logprob: -9.852239608764648
    7. '	else' → logprob: -10.477239608764648
    8. '   ' → logprob: -11.477239608764648
    9. '  
' → logprob: -11.727239608764648
    10. '        
' → logprob: -11.977239608764648

Token 109: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.08317632973194122
    2. ' else' → logprob: -2.583176374435425
    3. '       ' → logprob: -5.458176136016846
    4. 'elif' → logprob: -11.583176612854004
    5. '	else' → logprob: -12.208176612854004
    6. '   ' → logprob: -14.208176612854004
    7. '
' → logprob: -14.708176612854004
    8. '_else' → logprob: -15.458176612854004
    9. 'els' → logprob: -15.583176612854004
    10. ' elif' → logprob: -16.333175659179688

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2800997793674469
    2. '           ' → logprob: -1.6550997495651245
    3. ':
' → logprob: -3.030099868774414
    4. ' x' → logprob: -5.780099868774414
    5. '       ' → logprob: -6.655099868774414
    6. '          ' → logprob: -9.155099868774414
    7. '               ' → logprob: -9.530099868774414
    8. '   ' → logprob: -9.780099868774414
    9. '        ' → logprob: -9.905099868774414
    10. 'x' → logprob: -10.030099868774414

Token 111: '           ' (ID: 352)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.03604023531079292
    2. 'x' → logprob: -4.036040306091309
    3. '           ' → logprob: -4.036040306091309
    4. '       ' → logprob: -11.161040306091309
    5. ':' → logprob: -11.411040306091309
    6. ' ' → logprob: -11.661040306091309
    7. ' ' → logprob: -11.786040306091309
    8. '   ' → logprob: -12.286040306091309
    9. ' 
' → logprob: -12.786040306091309
    10. '          ' → logprob: -13.036040306091309

Token 112: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.005233882926404476
    2. ' x' → logprob: -5.2552337646484375
    3. '           ' → logprob: -16.505233764648438
    4. '	x' → logprob: -17.005233764648438
    5. '
' → logprob: -17.755233764648438
    6. '               ' → logprob: -17.880233764648438
    7. '   ' → logprob: -19.755233764648438
    8. ' 
' → logprob: -19.880233764648438
    9. '       ' → logprob: -20.255233764648438
    10. '"x' → logprob: -20.380233764648438

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040484048426151276
    2. '=' → logprob: -3.2904839515686035
    3. '.right' → logprob: -6.1654839515686035
    4. '.' → logprob: -8.040484428405762
    5. ' ' → logprob: -11.665484428405762
    6. '.left' → logprob: -12.915484428405762
    7. '.key' → logprob: -13.040484428405762
    8. '.=' → logprob: -13.665484428405762
    9. ')' → logprob: -14.665484428405762
    10. ' .' → logprob: -14.790484428405762

Token 114: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.474077433347702
    2. 'x' → logprob: -0.9740774631500244
    3. '	x' → logprob: -15.349077224731445
    4. 'right' → logprob: -15.474077224731445
    5. ' ' → logprob: -17.224077224731445
    6. ' right' → logprob: -17.349077224731445
    7. ' ' → logprob: -17.849077224731445
    8. ')x' → logprob: -18.099077224731445
    9. 'Right' → logprob: -18.224077224731445
    10. 'None' → logprob: -18.599077224731445

Token 115: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0005622077151201665
    2. '.' → logprob: -7.5005621910095215
    3. ' .' → logprob: -11.87556266784668
    4. '.r' → logprob: -13.87556266784668
    5. 'right' → logprob: -14.00056266784668
    6. '.left' → logprob: -15.50056266784668
    7. '.Right' → logprob: -16.75056266784668
    8. ' ' → logprob: -17.12556266784668
    9. '	right' → logprob: -17.25056266784668
    10. '​.' → logprob: -17.75056266784668

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5686688423156738
    2. '
' → logprob: -0.9436688423156738
    3. '    
' → logprob: -3.193668842315674
    4. '        
' → logprob: -6.568668842315674
    5. '  
' → logprob: -7.318668842315674
    6. '
' → logprob: -7.568668842315674
    7. '   
' → logprob: -7.818668842315674
    8. '       ' → logprob: -9.193668365478516
    9. '            
' → logprob: -9.318668365478516
    10. 'z' → logprob: -9.943668365478516

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011626080609858036
    2. 'z' → logprob: -5.261626243591309
    3. '
' → logprob: -5.636626243591309
    4. '    
' → logprob: -6.136626243591309
    5. ' z' → logprob: -8.261626243591309
    6. '   
' → logprob: -9.511626243591309
    7. 'y' → logprob: -9.636626243591309
    8. '        
' → logprob: -10.136626243591309
    9. '  
' → logprob: -10.261626243591309
    10. ' y' → logprob: -10.261626243591309

Token 118: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' (adapté à ' z') → logprob: -0.009143446572124958
    2. '   ' → logprob: -4.759143352508545
    3. '
' → logprob: -8.134143829345703
    4. ' z' → logprob: -9.134143829345703
    5. '    
' → logprob: -10.259143829345703
    6. 'if' → logprob: -10.259143829345703
    7. '	z' → logprob: -10.884143829345703
    8. ')
' → logprob: -11.884143829345703
    9. ')' → logprob: -12.384143829345703
    10. ' ' → logprob: -12.509143829345703

Token 119: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00019865304057020694
    2. '.' → logprob: -8.625198364257812
    3. '.parent' → logprob: -11.125198364257812
    4. ' .' → logprob: -12.875198364257812
    5. 'p' → logprob: -14.500198364257812
    6. ').' → logprob: -15.500198364257812
    7. '".' → logprob: -15.500198364257812
    8. '```' → logprob: -16.250198364257812
    9. 'parent' → logprob: -16.500198364257812
    10. '<p' → logprob: -16.500198364257812

Token 120: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889022678136826
    2. ' =' → logprob: -2.578890323638916
    3. '=y' → logprob: -15.328889846801758
    4. ')' → logprob: -16.703889846801758
    5. '=
' → logprob: -16.953889846801758
    6. ' ' → logprob: -17.328889846801758
    7. ',' → logprob: -17.578889846801758
    8. '＝' → logprob: -17.578889846801758
    9. '=

' → logprob: -17.703889846801758
    10. '=z' → logprob: -17.703889846801758

Token 121: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001584850688232109
    2. ' y' → logprob: -8.750158309936523
    3. '	y' → logprob: -19.500158309936523
    4. ')y' → logprob: -20.375158309936523
    5. ''y' → logprob: -22.625158309936523
    6. '[y' → logprob: -23.000158309936523
    7. '‘y' → logprob: -23.125158309936523
    8. '_y' → logprob: -23.875158309936523
    9. '@y' → logprob: -24.000158309936523
    10. ',y' → logprob: -24.625158309936523

Token 122: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16937291622161865
    2. ' if' → logprob: -2.044373035430908
    3. '   ' → logprob: -3.919373035430908
    4. '
' → logprob: -6.169373035430908
    5. '<|end|>' → logprob: -6.169373035430908
    6. ' ' → logprob: -7.294373035430908
    7. ' 
' → logprob: -7.794373035430908
    8. ')' → logprob: -7.919373035430908
    9. '	if' → logprob: -8.66937255859375
    10. '    
' → logprob: -8.66937255859375

Token 123: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0288127660751343
    2. ' if' → logprob: -1.5288127660751343
    3. '   ' → logprob: -1.6538127660751343
    4. ' 
' → logprob: -2.028812885284424
    5. ' ' → logprob: -3.153812885284424
    6. '    
' → logprob: -3.403812885284424
    7. '  
' → logprob: -4.653812885284424
    8. '
' → logprob: -5.653812885284424
    9. '<|end|>' → logprob: -5.903812885284424
    10. '   
' → logprob: -6.403812885284424

Token 124: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.2524021157296374e-05
    2. ' if' → logprob: -10.250052452087402
    3. '   ' → logprob: -11.625052452087402
    4. 'y' → logprob: -12.750052452087402
    5. 'If' → logprob: -13.000052452087402
    6. '```' → logprob: -13.000052452087402
    7. '    
' → logprob: -15.750052452087402
    8. '       ' → logprob: -16.00005340576172
    9. 'elif' → logprob: -16.25005340576172
    10. 'z' → logprob: -16.37505340576172

Token 125: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00033188972156494856
    2. ' if' → logprob: -8.25033187866211
    3. 'y' → logprob: -10.37533187866211
    4. '   ' → logprob: -10.87533187866211
    5. 'If' → logprob: -12.12533187866211
    6. '```' → logprob: -12.12533187866211
    7. '
' → logprob: -12.50033187866211
    8. 'z' → logprob: -13.25033187866211
    9. 'elif' → logprob: -14.00033187866211
    10. '       ' → logprob: -14.00033187866211

Token 126: '(x' (ID: 4061)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -1.3781393766403198
    2. '(' → logprob: -1.5031393766403198
    3. '(y' → logprob: -1.5031393766403198
    4. '(z' → logprob: -2.5031394958496094
    5. '('' → logprob: -2.7531394958496094
    6. 'y' → logprob: -3.0031394958496094
    7. '"' → logprob: -3.5031394958496094
    8. '("#' → logprob: -3.7531394958496094
    9. '("("' → logprob: -4.128139495849609
    10. 'z' → logprob: -4.753139495849609

Token 127: ',y' (ID: 16103)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01667596586048603
    2. ')
' → logprob: -4.89167594909668
    3. '")' → logprob: -6.01667594909668
    4. '
' → logprob: -6.64167594909668
    5. '"' → logprob: -7.26667594909668
    6. ' )' → logprob: -7.64167594909668
    7. 'z' → logprob: -7.64167594909668
    8. ',' → logprob: -7.64167594909668
    9. '')' → logprob: -8.14167594909668
    10. '<|end|>' → logprob: -8.14167594909668

Token 128: ',z' (ID: 54920)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.065120168030262
    2. ')
' → logprob: -3.315120220184326
    3. '   ' → logprob: -4.190120220184326
    4. '
' → logprob: -5.815120220184326
    5. 'if' → logprob: -6.065120220184326
    6. ',' → logprob: -6.440120220184326
    7. ' if' → logprob: -6.690120220184326
    8. ')\' → logprob: -7.065120220184326
    9. '')' → logprob: -7.565120220184326
    10. ' )' → logprob: -8.440119743347168

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02256878651678562
    2. '   ' → logprob: -4.397568702697754
    3. ')
' → logprob: -4.772568702697754
    4. 'if' → logprob: -7.897568702697754
    5. ' if' → logprob: -8.022568702697754
    6. ',' → logprob: -8.522568702697754
    7. '
' → logprob: -8.522568702697754
    8. '')' → logprob: -9.147568702697754
    9. '```' → logprob: -10.147568702697754
    10. ' )' → logprob: -10.272568702697754

Token 130: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02006983943283558
    2. '   ' → logprob: -4.3950700759887695
    3. ' if' → logprob: -4.8950700759887695
    4. '```' → logprob: -11.39507007598877
    5. '    
' → logprob: -11.52007007598877
    6. '
' → logprob: -11.64507007598877
    7. 'If' → logprob: -12.39507007598877
    8. '	if' → logprob: -12.77007007598877
    9. ' 
' → logprob: -12.89507007598877
    10. '<|end|>' → logprob: -13.52007007598877

Token 131: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00011486753646750003
    2. ' if' → logprob: -9.375114440917969
    3. '   ' → logprob: -10.625114440917969
    4. 'If' → logprob: -12.875114440917969
    5. '
' → logprob: -13.875114440917969
    6. '```' → logprob: -13.875114440917969
    7. '    
' → logprob: -15.000114440917969
    8. 'return' → logprob: -15.125114440917969
    9. '	if' → logprob: -15.875114440917969
    10. 'elif' → logprob: -16.25011444091797

Token 132: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02630332112312317
    2. ' y' → logprob: -3.651303291320801
    3. '   ' → logprob: -13.5263032913208
    4. ' ' → logprob: -14.1513032913208
    5. '(y' → logprob: -14.9013032913208
    6. '  ' → logprob: -15.2763032913208
    7. '	y' → logprob: -15.2763032913208
    8. 'z' → logprob: -15.7763032913208
    9. '    ' → logprob: -17.901304244995117
    10. 'y's' → logprob: -18.026304244995117

Token 133: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07700947672128677
    2. ' ==' → logprob: -3.077009439468384
    3. ' is' → logprob: -3.702009439468384
    4. 'is' → logprob: -5.702009677886963
    5. '=' → logprob: -12.702009201049805
    6. ' ' → logprob: -12.952009201049805
    7. '==
' → logprob: -14.077009201049805
    8. '   ' → logprob: -14.202009201049805
    9. '===' → logprob: -14.827009201049805
    10. 'key' → logprob: -15.077009201049805

Token 134: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00023107275774236768
    2. ' None' → logprob: -8.37523078918457
    3. '   ' → logprob: -14.75023078918457
    4. ' ' → logprob: -16.50023078918457
    5. '  ' → logprob: -17.25023078918457
    6. '=None' → logprob: -17.25023078918457
    7. 'No' → logprob: -17.62523078918457
    8. '_None' → logprob: -17.62523078918457
    9. '(None' → logprob: -18.12523078918457
    10. 'none' → logprob: -19.00023078918457

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012854302302002907
    2. ':
' → logprob: -4.387854099273682
    3. '       ' → logprob: -8.63785457611084
    4. '<|end|>' → logprob: -9.88785457611084
    5. '   ' → logprob: -10.13785457611084
    6. ':return' → logprob: -10.63785457611084
    7. '):
' → logprob: -11.63785457611084
    8. ' :' → logprob: -11.76285457611084
    9. '<|end|>' → logprob: -12.01285457611084
    10. ':

' → logprob: -12.26285457611084

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026153710205107927
    2. ':' → logprob: -6.877615451812744
    3. '   ' → logprob: -7.377615451812744
    4. ' return' → logprob: -8.127614974975586
    5. '<|end|>' → logprob: -8.377614974975586
    6. '      ' → logprob: -9.502614974975586
    7. 'return' → logprob: -9.627614974975586
    8. '    ' → logprob: -10.002614974975586
    9. '#' → logprob: -10.127614974975586
    10. ' ' → logprob: -10.252614974975586

Token 137: ' #' (ID: 1069)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.02967064082622528
    2. 'return' → logprob: -4.029670715332031
    3. ' z' → logprob: -5.279670715332031
    4. 'T' → logprob: -5.279670715332031
    5. ' return' → logprob: -6.779670715332031
    6. ' T' → logprob: -9.029670715332031
    7. '   ' → logprob: -11.904670715332031
    8. 'x' → logprob: -14.154670715332031
    9. '	z' → logprob: -14.404670715332031
    10. '    ' → logprob: -14.779670715332031

Token 138: 'print' (ID: 1598)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3626081943511963
    2. 'T' → logprob: -1.2376081943511963
    3. ' return' → logprob: -4.362607955932617
    4. ' T' → logprob: -6.862607955932617
    5. 'z' → logprob: -8.487607955932617
    6. '   ' → logprob: -9.862607955932617
    7. ' ' → logprob: -12.487607955932617
    8. '#' → logprob: -12.612607955932617
    9. '  ' → logprob: -13.612607955932617
    10. '
' → logprob: -13.737607955932617

Token 139: '("' (ID: 568)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.011062674224376678
    2. ' z' → logprob: -4.8860626220703125
    3. '"' → logprob: -6.2610626220703125
    4. ''z' → logprob: -7.2610626220703125
    5. '(z' → logprob: -7.5110626220703125
    6. '")' → logprob: -9.636062622070312
    7. 'str' → logprob: -9.886062622070312
    8. 'T' → logprob: -10.136062622070312
    9. ')' → logprob: -10.511062622070312
    10. 'return' → logprob: -11.011062622070312

Token 140: 'Y' (ID: 56)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.023573994636535645
    2. ' z' → logprob: -3.773573875427246
    3. '")' → logprob: -9.523573875427246
    4. '"' → logprob: -9.523573875427246
    5. 'return' → logprob: -10.023573875427246
    6. 'T' → logprob: -10.523573875427246
    7. '(z' → logprob: -10.648573875427246
    8. ')' → logprob: -11.023573875427246
    9. ''z' → logprob: -11.148573875427246
    10. ' ' → logprob: -11.773573875427246

Token 141: '==' (ID: 560)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5481023192405701
    2. '=' → logprob: -1.1731023788452148
    3. ' is' → logprob: -2.423102378845215
    4. '=z' → logprob: -5.048102378845215
    5. '=None' → logprob: -5.048102378845215
    6. ' ==' → logprob: -5.298102378845215
    7. ')' → logprob: -6.173102378845215
    8. '==' → logprob: -6.673102378845215
    9. ' None' → logprob: -7.298102378845215
    10. ',' → logprob: -8.048102378845215

Token 142: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0008352391887456179
    2. ' None' → logprob: -7.125835418701172
    3. 'z' → logprob: -10.500835418701172
    4. 'y' → logprob: -14.250835418701172
    5. 'none' → logprob: -14.375835418701172
    6. '
' → logprob: -14.500835418701172
    7. 'null' → logprob: -14.750835418701172
    8. 'x' → logprob: -14.750835418701172
    9. '   ' → logprob: -15.750835418701172
    10. ' z' → logprob: -15.750835418701172

Token 143: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.23042283952236176
    2. '")
' → logprob: -2.1054227352142334
    3. ')' → logprob: -3.6054227352142334
    4. '
' → logprob: -3.8554227352142334
    5. ':' → logprob: -4.4804229736328125
    6. '\n' → logprob: -4.8554229736328125
    7. ')
' → logprob: -5.6054229736328125
    8. ',' → logprob: -5.8554229736328125
    9. '   ' → logprob: -6.1054229736328125
    10. 'return' → logprob: -6.4804229736328125

Token 144: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6477124094963074
    2. 'return' → logprob: -1.5227124691009521
    3. ' T' → logprob: -1.6477124691009521
    4. 'T' → logprob: -3.022712469100952
    5. '       ' → logprob: -4.647712230682373
    6. '   ' → logprob: -4.897712230682373
    7. ':return' → logprob: -8.897712707519531
    8. ' ' → logprob: -9.272712707519531
    9. '  ' → logprob: -9.897712707519531
    10. '    ' → logprob: -10.397712707519531

Token 145: ' T' (ID: 353)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3202177584171295
    2. 'T' (adapté à ' T') → logprob: -1.3202177286148071
    3. ' return' → logprob: -5.070217609405518
    4. ' T' → logprob: -7.695217609405518
    5. '   ' → logprob: -8.695218086242676
    6. 'z' → logprob: -10.695218086242676
    7. '	return' → logprob: -13.820218086242676
    8. '       ' → logprob: -13.945218086242676
    9. '  ' → logprob: -14.195218086242676
    10. ' ' → logprob: -14.445218086242676

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313311368227005
    2. '=' → logprob: -1.3133113384246826
    3. '=z' → logprob: -10.438311576843262
    4. ' ' → logprob: -11.313311576843262
    5. '=None' → logprob: -12.813311576843262
    6. '.' → logprob: -13.813311576843262
    7. ')' → logprob: -13.938311576843262
    8. '=root' → logprob: -14.313311576843262
    9. '[' → logprob: -14.813311576843262
    10. '.=' → logprob: -14.813311576843262

Token 147: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.008614926598966122
    2. ' z' → logprob: -4.758615016937256
    3. '	z' → logprob: -14.883614540100098
    4. '   ' → logprob: -17.883615493774414
    5. '
' → logprob: -18.258615493774414
    6. ' ' → logprob: -18.258615493774414
    7. ''z' → logprob: -19.008615493774414
    8. '[z' → logprob: -20.258615493774414
    9. ' ' → logprob: -20.383615493774414
    10. '_z' → logprob: -20.383615493774414

Token 148: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.15869054198265076
    2. ' elif' → logprob: -2.0336904525756836
    3. 'else' → logprob: -4.908690452575684
    4. ' else' → logprob: -5.158690452575684
    5. '   ' → logprob: -6.033690452575684
    6. '	elif' → logprob: -8.283690452575684
    7. '<|end|>' → logprob: -9.908690452575684
    8. ' ' → logprob: -11.533690452575684
    9. ',' → logprob: -11.783690452575684
    10. 'elseif' → logprob: -11.908690452575684

Token 149: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8353316783905029
    2. 'elif' → logprob: -0.8353316783905029
    3. ' elif' → logprob: -2.085331678390503
    4. ' else' → logprob: -6.085331916809082
    5. '<|end|>' → logprob: -6.085331916809082
    6. '	elif' → logprob: -6.210331916809082
    7. 'else' → logprob: -6.460331916809082
    8. ',' → logprob: -10.460331916809082
    9. '<|end|>' → logprob: -10.585331916809082
    10. '       ' → logprob: -11.085331916809082

Token 150: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.013065410777926445
    2. ' return' → logprob: -4.388065338134766
    3. 'else' → logprob: -7.638065338134766
    4. ' else' → logprob: -10.513065338134766
    5. '   ' → logprob: -10.763065338134766
    6. 'elif' → logprob: -11.763065338134766
    7. 'T' → logprob: -11.888065338134766
    8. ' T' → logprob: -12.513065338134766
    9. 'eturn' → logprob: -13.638065338134766
    10. '	return' → logprob: -13.888065338134766

Token 151: '(T' (ID: 7014)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6599950194358826
    2. '(' → logprob: -0.7849950194358826
    3. '(T' → logprob: -4.409995079040527
    4. '("("' → logprob: -4.534995079040527
    5. '('' → logprob: -5.659995079040527
    6. '("(' → logprob: -8.784995079040527
    7. '("")' → logprob: -8.784995079040527
    8. '()' → logprob: -9.034995079040527
    9. '("""' → logprob: -10.284995079040527
    10. '"' → logprob: -10.784995079040527

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023178798437584192
    2. '.key' → logprob: -8.875231742858887
    3. ' )' → logprob: -10.125231742858887
    4. ')
' → logprob: -11.000231742858887
    5. ').' → logprob: -11.625231742858887
    6. ')")' → logprob: -12.125231742858887
    7. '")' → logprob: -12.500231742858887
    8. ')`' → logprob: -12.875231742858887
    9. ')#' → logprob: -13.000231742858887
    10. '.' → logprob: -13.375231742858887

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12104620039463043
    2. 'else' → logprob: -2.496046304702759
    3. ' else' → logprob: -3.871046304702759
    4. 'elif' → logprob: -4.62104606628418
    5. ' elif' → logprob: -7.37104606628418
    6. 'return' → logprob: -9.74604606628418
    7. '<|end|>' → logprob: -9.74604606628418
    8. '       ' → logprob: -9.87104606628418
    9. '	elif' → logprob: -10.37104606628418
    10. '	else' → logprob: -10.62104606628418

Token 154: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.23446416854858398
    2. 'else' → logprob: -2.109464168548584
    3. ' elif' → logprob: -3.109464168548584
    4. '   ' → logprob: -3.859464168548584
    5. ' else' → logprob: -3.859464168548584
    6. '	elif' → logprob: -7.234464168548584
    7. '  ' → logprob: -10.359464645385742
    8. ' ' → logprob: -10.484464645385742
    9. '	else' → logprob: -10.609464645385742
    10. ',' → logprob: -10.859464645385742

Token 155: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.11283688992261887
    2. ' z' → logprob: -2.2378368377685547
    3. 'y' → logprob: -11.862836837768555
    4. '   ' → logprob: -13.112836837768555
    5. '(z' → logprob: -13.237836837768555
    6. ' y' → logprob: -13.362836837768555
    7. '	z' → logprob: -13.987836837768555
    8. ' ' → logprob: -14.487836837768555
    9. ' ' → logprob: -15.112836837768555
    10. '  ' → logprob: -16.050336837768555

Token 156: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -4.842555426876061e-06
    2. 'key' → logprob: -13.000004768371582
    3. '.' → logprob: -13.125004768371582
    4. ' key' → logprob: -15.875004768371582
    5. ' .' → logprob: -16.0000057220459
    6. '[key' → logprob: -17.3750057220459
    7. '	key' → logprob: -17.8750057220459
    8. '<p' → logprob: -18.1250057220459
    9. '".' → logprob: -18.2500057220459
    10. '.Key' → logprob: -18.3750057220459

Token 157: '<' (ID: 27)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.020564312115311623
    2. '<' → logprob: -3.895564317703247
    3. '<|end|>' → logprob: -11.895564079284668
    4. ' ' → logprob: -12.395564079284668
    5. ' >' → logprob: -13.395564079284668
    6. '<int' → logprob: -13.895564079284668
    7. '<T' → logprob: -14.020564079284668
    8. '<class' → logprob: -14.145564079284668
    9. ' <",' → logprob: -14.145564079284668
    10. ')' → logprob: -14.145564079284668

Token 158: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4740777015686035
    2. ' y' → logprob: -0.9740777015686035
    3. '	y' → logprob: -15.349077224731445
    4. '   ' → logprob: -15.599077224731445
    5. '<|end|>' → logprob: -16.349077224731445
    6. ' ' → logprob: -17.099077224731445
    7. '(y' → logprob: -17.724077224731445
    8. ',y' → logprob: -17.849077224731445
    9. ')y' → logprob: -17.849077224731445
    10. ''y' → logprob: -18.099077224731445

Token 159: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.000563638168387115
    2. '.' → logprob: -7.500563621520996
    3. ' .' → logprob: -12.250563621520996
    4. 'key' → logprob: -12.375563621520996
    5. ' key' → logprob: -14.500563621520996
    6. '.left' → logprob: -15.500563621520996
    7. ''.' → logprob: -15.625563621520996
    8. '".' → logprob: -15.875563621520996
    9. '.Key' → logprob: -16.250564575195312
    10. '	key' → logprob: -16.375564575195312

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02496383525431156
    2. ':
' → logprob: -3.774963855743408
    3. '       ' → logprob: -6.399963855743408
    4. ' :' → logprob: -10.64996337890625
    5. '):
' → logprob: -11.77496337890625
    6. '):' → logprob: -12.02496337890625
    7. ':
' → logprob: -12.27496337890625
    8. ' :
' → logprob: -12.52496337890625
    9. ',' → logprob: -13.14996337890625
    10. '=' → logprob: -13.52496337890625

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018090588971972466
    2. ':' → logprob: -4.518090724945068
    3. ' y' → logprob: -5.393090724945068
    4. ' :' → logprob: -7.768090724945068
    5. ':
' → logprob: -7.893090724945068
    6. ' ' → logprob: -7.893090724945068
    7. ' =' → logprob: -8.14309024810791
    8. '    ' → logprob: -8.89309024810791
    9. '   ' → logprob: -9.01809024810791
    10. '<|end|>' → logprob: -9.14309024810791

Token 162: ' #' (ID: 1069)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0006390500930137932
    2. 'y' → logprob: -7.375638961791992
    3. '       ' → logprob: -11.750638961791992
    4. ' 
' → logprob: -14.125638961791992
    5. ' ' → logprob: -14.500638961791992
    6. ' (' → logprob: -14.500638961791992
    7. ' ' → logprob: -14.875638961791992
    8. ' left' → logprob: -15.000638961791992
    9. '	y' → logprob: -15.125638961791992
    10. '    ' → logprob: -15.375638961791992

Token 163: 'print' (ID: 1598)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38688406348228455
    2. ' y' → logprob: -1.136884093284607
    3. '   ' → logprob: -12.386883735656738
    4. '       ' → logprob: -13.636883735656738
    5. 'z' → logprob: -13.636883735656738
    6. ' ' → logprob: -13.761883735656738
    7. 'print' → logprob: -13.761883735656738
    8. '    ' → logprob: -13.886883735656738
    9. 'left' → logprob: -14.136883735656738
    10. '	y' → logprob: -14.136883735656738

Token 164: '("' (ID: 568)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.575386106967926
    2. '"' → logprob: -0.950386106967926
    3. 'y' → logprob: -3.5753860473632812
    4. ' "' → logprob: -4.450386047363281
    5. '(y' → logprob: -5.700386047363281
    6. ''' → logprob: -6.200386047363281
    7. ''y' → logprob: -6.325386047363281
    8. '       ' → logprob: -7.200386047363281
    9. ' (' → logprob: -7.700386047363281
    10. '(' → logprob: -7.700386047363281

Token 165: 'z' (ID: 89)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12694910168647766
    2. ' y' → logprob: -2.1269490718841553
    3. ')' → logprob: -12.251949310302734
    4. '")' → logprob: -12.376949310302734
    5. '   ' → logprob: -12.876949310302734
    6. ')y' → logprob: -12.876949310302734
    7. '"' → logprob: -13.376949310302734
    8. '       ' → logprob: -13.876949310302734
    9. ' ")' → logprob: -14.251949310302734
    10. '  ' → logprob: -14.501949310302734

Token 166: '.key' (ID: 8839)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.449318528175354
    2. '.key' → logprob: -1.324318528175354
    3. '.' → logprob: -2.4493184089660645
    4. ')' → logprob: -6.8243184089660645
    5. 'left' → logprob: -7.0743184089660645
    6. '")' → logprob: -7.3243184089660645
    7. '.insert' → logprob: -7.3243184089660645
    8. '.z' → logprob: -7.3243184089660645
    9. ' .' → logprob: -7.6993184089660645
    10. '   ' → logprob: -7.8243184089660645

Token 167: '<' (ID: 27)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7837541699409485
    2. '")' → logprob: -1.7837541103363037
    3. ' ")' → logprob: -1.7837541103363037
    4. '.left' → logprob: -2.7837541103363037
    5. ' =' → logprob: -3.4087541103363037
    6. ' ==' → logprob: -4.158754348754883
    7. ' "' → logprob: -4.283754348754883
    8. '   ' → logprob: -4.408754348754883
    9. ' )' → logprob: -4.658754348754883
    10. '<|end|>' → logprob: -4.783754348754883

Token 168: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.062011487782001495
    2. ' y' → logprob: -2.812011480331421
    3. '<|end|>' → logprob: -10.18701171875
    4. ' ' → logprob: -12.93701171875
    5. 'space' → logprob: -14.43701171875
    6. ')' → logprob: -14.43701171875
    7. '	y' → logprob: -15.06201171875
    8. '   ' → logprob: -15.18701171875
    9. 'z' → logprob: -15.18701171875
    10. ')y' → logprob: -15.18701171875

Token 169: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.0011117587564513087
    2. '.' → logprob: -7.37611198425293
    3. '.left' → logprob: -8.12611198425293
    4. 'key' → logprob: -8.75111198425293
    5. '.right' → logprob: -10.75111198425293
    6. '.")' → logprob: -13.00111198425293
    7. ')' → logprob: -13.50111198425293
    8. '")' → logprob: -13.87611198425293
    9. ' .' → logprob: -14.00111198425293
    10. ' key' → logprob: -14.12611198425293

Token 170: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.5107349157333374
    2. ')' → logprob: -2.510735034942627
    3. '")' → logprob: -2.635735034942627
    4. ':' → logprob: -2.885735034942627
    5. ')
' → logprob: -3.260735034942627
    6. '       ' → logprob: -3.510735034942627
    7. '"):
' → logprob: -3.510735034942627
    8. '   ' → logprob: -3.635735034942627
    9. ' ")
' → logprob: -3.760735034942627
    10. '):
' → logprob: -4.135735034942627

Token 171: '       ' (ID: 309)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3987767994403839
    2. '       ' → logprob: -1.1487767696380615
    3. 'y' → logprob: -5.398777008056641
    4. '
' → logprob: -6.273777008056641
    5. '           ' → logprob: -6.398777008056641
    6. '   ' → logprob: -7.148777008056641
    7. ' left' → logprob: -8.14877700805664
    8. ' 
' → logprob: -8.14877700805664
    9. ' =' → logprob: -8.27377700805664
    10. ' (' → logprob: -8.39877700805664

Token 172: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.313285231590271
    2. ' y' → logprob: -1.313285231590271
    3. '
' → logprob: -11.438284873962402
    4. '       ' → logprob: -11.688284873962402
    5. '	y' → logprob: -12.813284873962402
    6. '   ' → logprob: -14.563284873962402
    7. '           ' → logprob: -14.813284873962402
    8. '    ' → logprob: -15.688284873962402
    9. ''y' → logprob: -16.18828582763672
    10. '        ' → logprob: -16.31328582763672

Token 173: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.00023333763238042593
    2. '.' → logprob: -8.37523365020752
    3. '.right' → logprob: -13.50023365020752
    4. '.Left' → logprob: -14.25023365020752
    5. ' .' → logprob: -14.50023365020752
    6. '.le' → logprob: -17.250232696533203
    7. '.next' → logprob: -17.250232696533203
    8. 'left' → logprob: -17.500232696533203
    9. '[left' → logprob: -18.000232696533203
    10. '.LEFT' → logprob: -18.250232696533203

Token 174: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022655367851257
    2. ' =' → logprob: -1.910226583480835
    3. '=z' → logprob: -13.035226821899414
    4. ' ' → logprob: -16.785226821899414
    5. '=

' → logprob: -16.910226821899414
    6. ')' → logprob: -16.910226821899414
    7. '=
' → logprob: -17.410226821899414
    8. ' =
' → logprob: -17.660226821899414
    9. '＝' → logprob: -17.660226821899414
    10. '<|end|>' → logprob: -18.035226821899414

Token 175: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.25193077325820923
    2. ' z' → logprob: -1.5019307136535645
    3. '	z' → logprob: -13.626931190490723
    4. ' ' → logprob: -16.376930236816406
    5. ' ' → logprob: -16.501930236816406
    6. '(z' → logprob: -16.751930236816406
    7. '   ' → logprob: -17.126930236816406
    8. ''z' → logprob: -17.251930236816406
    9. '_z' → logprob: -17.501930236816406
    10. '[z' → logprob: -18.251930236816406

Token 176: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11642678827047348
    2. 'else' → logprob: -2.491426706314087
    3. ' else' → logprob: -3.616426706314087
    4. '	else' → logprob: -8.991426467895508
    5. '
' → logprob: -9.491426467895508
    6. 'elif' → logprob: -11.366426467895508
    7. '    
' → logprob: -11.741426467895508
    8. '       ' → logprob: -12.116426467895508
    9. '<|end|>' → logprob: -12.491426467895508
    10. '_else' → logprob: -13.616426467895508

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11403749138116837
    2. 'else' → logprob: -2.86403751373291
    3. ' else' → logprob: -2.98903751373291
    4. '	else' → logprob: -7.98903751373291
    5. '       ' → logprob: -10.36403751373291
    6. '<|end|>' → logprob: -10.86403751373291
    7. '_else' → logprob: -12.86403751373291
    8. '    
' → logprob: -12.86403751373291
    9. 'elif' → logprob: -12.98903751373291
    10. '  ' → logprob: -14.11403751373291

Token 178: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3450315594673157
    2. ' else' → logprob: -1.345031499862671
    3. '   ' → logprob: -3.470031499862671
    4. '	else' → logprob: -8.84503173828125
    5. 'elif' → logprob: -12.59503173828125
    6. ' ' → logprob: -13.47003173828125
    7. '_else' → logprob: -13.47003173828125
    8. 'e' → logprob: -13.47003173828125
    9. '       ' → logprob: -13.84503173828125
    10. '  ' → logprob: -14.72003173828125

Token 179: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6500973701477051
    2. ':' → logprob: -0.7750973701477051
    3. ':
' → logprob: -4.150097370147705
    4. '   ' → logprob: -7.650097370147705
    5. ' :' → logprob: -8.025096893310547
    6. '    ' → logprob: -8.775096893310547
    7. '<|end|>' → logprob: -8.775096893310547
    8. '           ' → logprob: -9.025096893310547
    9. '{' → logprob: -9.275096893310547
    10. ' :
' → logprob: -9.400096893310547

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026920976117253304
    2. ' y' → logprob: -3.651921033859253
    3. '   ' → logprob: -8.651921272277832
    4. 'y' → logprob: -9.276921272277832
    5. '    ' → logprob: -9.401921272277832
    6. ' ' → logprob: -9.526921272277832
    7. '           ' → logprob: -10.151921272277832
    8. ' z' → logprob: -10.276921272277832
    9. ' ' → logprob: -10.401921272277832
    10. '        ' → logprob: -11.151921272277832

Token 181: ' #' (ID: 1069)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.061979785561561584
    2. 'y' → logprob: -2.8119797706604004
    3. '       ' → logprob: -11.436980247497559
    4. '	y' → logprob: -15.061980247497559
    5. 'z' → logprob: -15.186980247497559
    6. '   ' → logprob: -15.436980247497559
    7. '    ' → logprob: -15.936980247497559
    8. '        ' → logprob: -16.061979293823242
    9. ' ' → logprob: -16.436979293823242
    10. ''y' → logprob: -16.561979293823242

Token 182: 'print' (ID: 1598)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0025032442063093185
    2. ' y' → logprob: -6.002503395080566
    3. 'print' → logprob: -11.252503395080566
    4. '   ' → logprob: -11.752503395080566
    5. '       ' → logprob: -12.252503395080566
    6. 'z' → logprob: -13.752503395080566
    7. '           ' → logprob: -15.127503395080566
    8. ' ' → logprob: -16.00250244140625
    9. ''y' → logprob: -16.37750244140625
    10. '
' → logprob: -16.50250244140625

Token 183: '("' (ID: 568)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.021968718618154526
    2. '(' → logprob: -4.771968841552734
    3. ' "' → logprob: -5.271968841552734
    4. ' y' → logprob: -5.771968841552734
    5. '   ' → logprob: -6.146968841552734
    6. '       ' → logprob: -7.146968841552734
    7. ' (' → logprob: -7.646968841552734
    8. '("' → logprob: -8.021968841552734
    9. 'y' → logprob: -8.521968841552734
    10. ' ' → logprob: -8.771968841552734

Token 184: 'z' (ID: 89)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005283799953758717
    2. ' y' → logprob: -5.255283832550049
    3. 'z' → logprob: -10.25528335571289
    4. '"' → logprob: -11.50528335571289
    5. ''y' → logprob: -13.13028335571289
    6. '   ' → logprob: -13.63028335571289
    7. '       ' → logprob: -14.13028335571289
    8. ')y' → logprob: -14.75528335571289
    9. '")' → logprob: -16.50528335571289
    10. '           ' → logprob: -16.88028335571289

Token 185: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.0033063970040529966
    2. '.right' → logprob: -5.7533063888549805
    3. '.' → logprob: -9.00330638885498
    4. 'key' → logprob: -12.62830638885498
    5. ' .' → logprob: -13.37830638885498
    6. ' key' → logprob: -14.37830638885498
    7. 'right' → logprob: -16.003307342529297
    8. '[key' → logprob: -17.253307342529297
    9. '   ' → logprob: -17.628307342529297
    10. '```' → logprob: -18.378307342529297

Token 186: '<' (ID: 27)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3850034177303314
    2. '.right' → logprob: -1.6350034475326538
    3. ' >' → logprob: -2.1350033283233643
    4. '.key' → logprob: -5.385003566741943
    5. 'right' → logprob: -7.385003566741943
    6. '.' → logprob: -8.010003089904785
    7. ' >=' → logprob: -8.885003089904785
    8. '<' → logprob: -9.010003089904785
    9. ' right' → logprob: -9.010003089904785
    10. '>.' → logprob: -9.135003089904785

Token 187: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005237668287009001
    2. ' y' → logprob: -5.255237579345703
    3. '>' → logprob: -14.255237579345703
    4. 'z' → logprob: -14.505237579345703
    5. ' ' → logprob: -15.005237579345703
    6. '=' → logprob: -15.005237579345703
    7. '   ' → logprob: -15.130237579345703
    8. '=y' → logprob: -15.255237579345703
    9. '	y' → logprob: -15.380237579345703
    10. ''y' → logprob: -15.630237579345703

Token 188: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.0002445317804813385
    2. 'key' → logprob: -9.000244140625
    3. '.' → logprob: -9.250244140625
    4. '.y' → logprob: -11.375244140625
    5. ' .' → logprob: -11.625244140625
    6. ' key' → logprob: -13.000244140625
    7. '.right' → logprob: -13.125244140625
    8. '>' → logprob: -16.000244140625
    9. 'y' → logprob: -16.375244140625
    10. '.Key' → logprob: -17.125244140625

Token 189: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.13067924976348877
    2. '")
' → logprob: -2.380679130554199
    3. '   ' → logprob: -4.130679130554199
    4. ')' → logprob: -5.130679130554199
    5. '       ' → logprob: -5.755679130554199
    6. ' ")' → logprob: -5.880679130554199
    7. ' ")
' → logprob: -6.630679130554199
    8. ')
' → logprob: -8.3806791305542
    9. ' y' → logprob: -9.1306791305542
    10. 'right' → logprob: -9.2556791305542

Token 190: '       ' (ID: 309)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.08259850740432739
    2. '       ' → logprob: -2.7075984477996826
    3. 'y' → logprob: -4.457598686218262
    4. '   ' → logprob: -6.957598686218262
    5. '	y' → logprob: -11.457598686218262
    6. ' ' → logprob: -11.457598686218262
    7. '           ' → logprob: -12.082598686218262
    8. '    ' → logprob: -12.832598686218262
    9. ',y' → logprob: -13.207598686218262
    10. ')y' → logprob: -13.582598686218262

Token 191: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.023246292024850845
    2. ' y' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.773246765136719
    4. '       ' → logprob: -14.898246765136719
    5. '	y' → logprob: -17.52324676513672
    6. 'y's' → logprob: -17.52324676513672
    7. '
' → logprob: -18.39824676513672
    8. '    ' → logprob: -18.64824676513672
    9. ''y' → logprob: -18.77324676513672
    10. ' ' → logprob: -19.27324676513672

Token 192: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0009143244242295623
    2. '.' → logprob: -7.000914096832275
    3. '.left' → logprob: -13.000914573669434
    4. ' .' → logprob: -14.500914573669434
    5. 'right' → logprob: -17.000913619995117
    6. '.Right' → logprob: -17.250913619995117
    7. '[right' → logprob: -18.875913619995117
    8. '>.' → logprob: -19.000913619995117
    9. '.r' → logprob: -19.375913619995117
    10. '.RIGHT' → logprob: -19.750913619995117

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804183006286621
    2. '=' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.413042068481445
    4. '=z' → logprob: -16.538042068481445
    5. ' =
' → logprob: -16.788042068481445
    6. ')' → logprob: -17.413042068481445
    7. '<|end|>' → logprob: -17.413042068481445
    8. '   ' → logprob: -18.038042068481445
    9. ' =)' → logprob: -19.163042068481445
    10. ' z' → logprob: -20.163042068481445

Token 194: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.126929372549057
    2. ' z' → logprob: -2.12692928314209
    3. '	z' → logprob: -13.87692928314209
    4. ' ' → logprob: -15.75192928314209
    5. '   ' → logprob: -16.251930236816406
    6. '(z' → logprob: -17.376930236816406
    7. '_z' → logprob: -17.751930236816406
    8. '[z' → logprob: -18.001930236816406
    9. '-z' → logprob: -18.126930236816406
    10. '.z' → logprob: -18.126930236816406

Token 195: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02054901234805584
    2. '<|end|>' → logprob: -4.0205488204956055
    3. '    
' → logprob: -7.2705488204956055
    4. ')' → logprob: -7.8955488204956055
    5. ' return' → logprob: -7.8955488204956055
    6. '
' → logprob: -8.270548820495605
    7. 'return' → logprob: -8.395548820495605
    8. '\n' → logprob: -9.395548820495605
    9. '	return' → logprob: -9.770548820495605
    10. '    ' → logprob: -9.770548820495605

Token 196: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9055622220039368
    2. 'return' → logprob: -1.030562162399292
    3. '<|end|>' → logprob: -1.905562162399292
    4. ' return' → logprob: -3.405562162399292
    5. 'T' → logprob: -4.030562400817871
    6. ' ' → logprob: -4.155562400817871
    7. '#' → logprob: -5.655562400817871
    8. '	return' → logprob: -5.905562400817871
    9. ' T' → logprob: -5.905562400817871
    10. '
' → logprob: -6.280562400817871

Token 197: ' find' (ID: 1646)
  Prédit: ' inorder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inorder' → logprob: -0.5542620420455933
    2. 'in' → logprob: -2.054262161254883
    3. 'search' → logprob: -2.179262161254883
    4. ' search' → logprob: -2.679262161254883
    5. ' transplant' → logprob: -3.179262161254883
    6. ' tree' → logprob: -3.679262161254883
    7. 'trans' → logprob: -4.429262161254883
    8. 'tree' → logprob: -4.429262161254883
    9. 'delete' → logprob: -5.429262161254883
    10. 'minimum' → logprob: -5.679262161254883

Token 198: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.576590895652771
    2. '(' → logprob: -0.826590895652771
    3. '(root' → logprob: -7.9515910148620605
    4. '(Tree' → logprob: -9.076590538024902
    5. '(node' → logprob: -9.951590538024902
    6. '(Node' → logprob: -10.326590538024902
    7. '_' → logprob: -10.951590538024902
    8. ' (' → logprob: -11.076590538024902
    9. '(x' → logprob: -11.326590538024902
    10. '(
' → logprob: -11.826590538024902

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005688794772140682
    2. ',key' → logprob: -7.500568866729736
    3. ' ,' → logprob: -11.250569343566895
    4. ',node' → logprob: -13.500569343566895
    5. '):' → logprob: -14.750569343566895
    6. ',T' → logprob: -15.375569343566895
    7. ',k' → logprob: -15.375569343566895
    8. 'key' → logprob: -16.000568389892578
    9. '   ' → logprob: -16.125568389892578
    10. ' key' → logprob: -16.375568389892578

Token 200: ' k' (ID: 372)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.39791423082351685
    2. ' key' → logprob: -1.147914171218872
    3. 'k' → logprob: -4.647914409637451
    4. 'x' → logprob: -7.272914409637451
    5. ' k' → logprob: -7.522914409637451
    6. ' x' → logprob: -9.272913932800293
    7. 'z' → logprob: -10.397913932800293
    8. ' ' → logprob: -10.897913932800293
    9. ' z' → logprob: -12.272913932800293
    10. '	key' → logprob: -12.272913932800293

Token 201: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009016924886964262
    2. '):
' → logprob: -7.125901699066162
    3. ')' → logprob: -10.000901222229004
    4. ' ):' → logprob: -10.625901222229004
    5. ',' → logprob: -10.750901222229004
    6. '   ' → logprob: -13.000901222229004
    7. ':' → logprob: -13.250901222229004
    8. '):
' → logprob: -14.250901222229004
    9. ',key' → logprob: -14.625901222229004
    10. '  ' → logprob: -15.500901222229004

Token 202: ' show' (ID: 2356)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -2.0061731338500977
    2. 'node' → logprob: -2.0061731338500977
    3. 'x' → logprob: -2.1311731338500977
    4. ' parent' → logprob: -3.0061731338500977
    5. '):' → logprob: -3.0061731338500977
    6. ' node' → logprob: -3.0061731338500977
    7. 'depth' → logprob: -3.0061731338500977
    8. ')' → logprob: -3.1311731338500977
    9. '):
' → logprob: -3.7561731338500977
    10. ' x' → logprob: -3.8811731338500977

Token 203: '):
' (ID: 1883)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.7090290188789368
    2. '=False' → logprob: -1.084028959274292
    3. '):' → logprob: -2.084028959274292
    4. '=' → logprob: -3.209028959274292
    5. ')' → logprob: -6.334029197692871
    6. ' =' → logprob: -6.584029197692871
    7. '=None' → logprob: -7.209029197692871
    8. '):
' → logprob: -8.209029197692871
    9. ' ):' → logprob: -8.709029197692871
    10. 'print' → logprob: -9.209029197692871

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007792501710355282
    2. ':' → logprob: -7.875779151916504
    3. '<|end|>' → logprob: -8.875779151916504
    4. '   ' → logprob: -9.500779151916504
    5. ')' → logprob: -10.250779151916504
    6. '    ' → logprob: -10.750779151916504
    7. ' if' → logprob: -10.875779151916504
    8. '    
' → logprob: -10.875779151916504
    9. '   ' → logprob: -11.500779151916504
    10. '‌' → logprob: -11.625779151916504

Token 205: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.262433260679245
    2. 'if' → logprob: -1.6374332904815674
    3. ' if' → logprob: -3.7624332904815674
    4. ' x' → logprob: -4.762433052062988
    5. 'while' → logprob: -5.887433052062988
    6. '   ' → logprob: -6.762433052062988
    7. ' while' → logprob: -7.512433052062988
    8. 'current' → logprob: -10.387433052062988
    9. ' ' → logprob: -10.387433052062988
    10. 'node' → logprob: -11.137433052062988

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144745707511902
    2. '=' → logprob: -1.7014474868774414
    3. '=T' → logprob: -10.451447486877441
    4. ' ' → logprob: -12.451447486877441
    5. ')' → logprob: -14.451447486877441
    6. '   ' → logprob: -14.951447486877441
    7. ',' → logprob: -16.076446533203125
    8. ' =
' → logprob: -16.451446533203125
    9. ' ' → logprob: -16.951446533203125
    10. ' T' → logprob: -17.076446533203125

Token 207: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.03804412856698036
    2. ' T' → logprob: -3.2880442142486572
    3. '   ' → logprob: -13.288043975830078
    4. '	T' → logprob: -14.788043975830078
    5. ' ' → logprob: -15.038043975830078
    6. '  ' → logprob: -15.788043975830078
    7. '[T' → logprob: -17.038043975830078
    8. ' ' → logprob: -17.288043975830078
    9. '(T' → logprob: -17.413043975830078
    10. '<|end|>' → logprob: -17.788043975830078

Token 208: ' 
' (ID: 793)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20246459543704987
    2. 'while' → logprob: -2.4524645805358887
    3. '   ' → logprob: -2.7024645805358887
    4. ' while' → logprob: -4.452464580535889
    5. '<|end|>' → logprob: -4.577464580535889
    6. '    
' → logprob: -5.952464580535889
    7. '  
' → logprob: -6.327464580535889
    8. ' 
' → logprob: -6.452464580535889
    9. '	while' → logprob: -6.827464580535889
    10. '<|end|>' → logprob: -8.202465057373047

Token 209: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6053377985954285
    2. '   ' → logprob: -0.8553377985954285
    3. ' while' → logprob: -4.230337619781494
    4. '
' → logprob: -4.730337619781494
    5. '	while' → logprob: -6.105337619781494
    6. 'if' → logprob: -6.480337619781494
    7. '<|end|>' → logprob: -6.605337619781494
    8. '    
' → logprob: -8.480338096618652
    9. ' if' → logprob: -9.105338096618652
    10. '<|end|>' → logprob: -10.355338096618652

Token 210: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.029840858653187752
    2. ' while' → logprob: -3.5298409461975098
    3. '   ' → logprob: -9.529840469360352
    4. '	while' → logprob: -11.029840469360352
    5. '
' → logprob: -15.029840469360352
    6. 'While' → logprob: -15.279840469360352
    7. 'if' → logprob: -15.529840469360352
    8. ' 
' → logprob: -15.779840469360352
    9. '  ' → logprob: -16.02984046936035
    10. ' ' → logprob: -16.02984046936035

Token 211: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38687369227409363
    2. ' x' → logprob: -1.136873722076416
    3. '(x' → logprob: -13.511873245239258
    4. ' ' → logprob: -14.511873245239258
    5. '   ' → logprob: -14.761873245239258
    6. '	x' → logprob: -15.136873245239258
    7. 'k' → logprob: -16.011873245239258
    8. ' (' → logprob: -17.011873245239258
    9. ' k' → logprob: -17.136873245239258
    10. '(' → logprob: -17.761873245239258

Token 212: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4651040732860565
    2. ' is' → logprob: -1.465104103088379
    3. '!=' → logprob: -1.965104103088379
    4. 'is' → logprob: -7.465104103088379
    5. ' and' → logprob: -9.090104103088379
    6. 'and' → logprob: -10.590104103088379
    7. '!' → logprob: -11.465104103088379
    8. ' ' → logprob: -12.340104103088379
    9. ' isn't' → logprob: -13.340104103088379
    10. ' !' → logprob: -13.840104103088379

Token 213: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.043001025915145874
    2. ' None' → logprob: -3.1680009365081787
    3. ' ' → logprob: -14.793001174926758
    4. '0' → logprob: -15.043001174926758
    5. '=None' → logprob: -15.168001174926758
    6. '   ' → logprob: -15.293001174926758
    7. 'k' → logprob: -15.293001174926758
    8. '(None' → logprob: -15.793001174926758
    9. '  ' → logprob: -15.918001174926758
    10. '_None' → logprob: -16.168001174926758

Token 214: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.010017902590334415
    2. 'and' → logprob: -4.7600178718566895
    3. ':' → logprob: -6.7600178718566895
    4. ':
' → logprob: -9.135018348693848
    5. '<|end|>' → logprob: -9.635018348693848
    6. '   ' → logprob: -10.135018348693848
    7. '	and' → logprob: -11.510018348693848
    8. '       ' → logprob: -11.885018348693848
    9. ',' → logprob: -12.260018348693848
    10. ' ' → logprob: -12.635018348693848

Token 215: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011686748825013638
    2. 'and' → logprob: -4.7616868019104
    3. '   ' → logprob: -6.5116868019104
    4. '       ' → logprob: -6.8866868019104
    5. ' x' → logprob: -9.011686325073242
    6. ' ' → logprob: -9.261686325073242
    7. ':' → logprob: -9.261686325073242
    8. '<|end|>' → logprob: -9.636686325073242
    9. '    ' → logprob: -10.011686325073242
    10. 'x' → logprob: -10.511686325073242

Token 216: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22734194993972778
    2. ' if' → logprob: -1.727341890335083
    3. '       ' → logprob: -3.727341890335083
    4. '   ' → logprob: -6.602342128753662
    5. '
' → logprob: -9.602341651916504
    6. '	if' → logprob: -10.602341651916504
    7. '<|end|>' → logprob: -10.977341651916504
    8. '           ' → logprob: -11.102341651916504
    9. ' ' → logprob: -11.102341651916504
    10. 'k' → logprob: -11.977341651916504

Token 217: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1184859350323677
    2. ' k' → logprob: -2.243485927581787
    3. 'x' → logprob: -5.493485927581787
    4. ' x' → logprob: -6.493485927581787
    5. ' ' → logprob: -11.493486404418945
    6. '   ' → logprob: -12.493486404418945
    7. '  ' → logprob: -12.743486404418945
    8. '	k' → logprob: -13.368486404418945
    9. 'show' → logprob: -14.493486404418945
    10. '    ' → logprob: -14.493486404418945

Token 218: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02820242941379547
    2. '==' → logprob: -3.653202533721924
    3. ' <' → logprob: -6.278202533721924
    4. '<' → logprob: -11.028202056884766
    5. '<|end|>' → logprob: -13.153202056884766
    6. ' =' → logprob: -13.403202056884766
    7. '=' → logprob: -13.653202056884766
    8. ' ' → logprob: -14.153202056884766
    9. ')==' → logprob: -15.028202056884766
    10. '.key' → logprob: -15.403202056884766

Token 219: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023245826363563538
    2. ' x' → logprob: -3.7732458114624023
    3. ' ' → logprob: -15.148245811462402
    4. '	x' → logprob: -16.77324676513672
    5. '   ' → logprob: -18.14824676513672
    6. '  ' → logprob: -18.52324676513672
    7. '<|end|>' → logprob: -19.14824676513672
    8. ')x' → logprob: -19.27324676513672
    9. '(x' → logprob: -19.27324676513672
    10. '
' → logprob: -19.64824676513672

Token 220: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -2.8444881536415778e-05
    2. '.' → logprob: -10.500028610229492
    3. ' .' → logprob: -15.000028610229492
    4. 'key' → logprob: -15.125028610229492
    5. ' key' → logprob: -16.875028610229492
    6. '.Key' → logprob: -17.125028610229492
    7. '.token' → logprob: -17.625028610229492
    8. '	key' → logprob: -17.750028610229492
    9. '.keys' → logprob: -17.875028610229492
    10. ''.' → logprob: -18.250028610229492

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003049604594707489
    2. ':
' → logprob: -6.003049373626709
    3. ':return' → logprob: -7.753049373626709
    4. ' :' → logprob: -9.003049850463867
    5. '       ' → logprob: -11.628049850463867
    6. ' :
' → logprob: -12.628049850463867
    7. '<|end|>' → logprob: -13.003049850463867
    8. '           ' → logprob: -13.628049850463867
    9. '):' → logprob: -14.128049850463867
    10. ' return' → logprob: -14.253049850463867

Token 222: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06863492727279663
    2. ' return' → logprob: -3.3186349868774414
    3. ' ' → logprob: -3.8186349868774414
    4. ' 
' → logprob: -5.818634986877441
    5. '       ' → logprob: -6.818634986877441
    6. '<|end|>' → logprob: -7.568634986877441
    7. 'return' → logprob: -7.818634986877441
    8. '        ' → logprob: -7.943634986877441
    9. '\n' → logprob: -7.943634986877441
    10. ':' → logprob: -7.943634986877441

Token 223: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8073382377624512
    2. '           ' → logprob: -1.0573382377624512
    3. ' if' → logprob: -1.8073382377624512
    4. 'return' → logprob: -3.432338237762451
    5. 'if' (adapté à ' if') → logprob: -5.807338237762451
    6. '               ' → logprob: -5.932338237762451
    7. ' 
' → logprob: -6.682338237762451
    8. '
' → logprob: -6.682338237762451
    9. ' ' → logprob: -7.432338237762451
    10. ':return' → logprob: -7.807338237762451

Token 224: ' show' (ID: 2356)
  Prédit: ' show'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' show' → logprob: -0.20142485201358795
    2. 'show' → logprob: -1.7014248371124268
    3. '(show' → logprob: -12.701424598693848
    4. ' ' → logprob: -12.826424598693848
    5. ' not' → logprob: -13.076424598693848
    6. '	show' → logprob: -13.201424598693848
    7. '  ' → logprob: -13.826424598693848
    8. ' True' → logprob: -15.451424598693848
    9. ' ' → logprob: -15.701424598693848
    10. '   ' → logprob: -15.701424598693848

Token 225: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019750230014324188
    2. '==' → logprob: -5.144750118255615
    3. ' :' → logprob: -5.144750118255615
    4. ':
' → logprob: -5.394750118255615
    5. ' ==' → logprob: -6.519750118255615
    6. '):' → logprob: -6.894750118255615
    7. ')' → logprob: -7.769750118255615
    8. ' and' → logprob: -9.519750595092773
    9. '):
' → logprob: -9.644750595092773
    10. ' :
' → logprob: -9.894750595092773

Token 226: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23789082467556
    2. ' return' → logprob: -1.9878908395767212
    3. 'return' → logprob: -3.3628907203674316
    4. '           ' → logprob: -3.6128907203674316
    5. ' print' → logprob: -4.987890720367432
    6. 'print' → logprob: -5.237890720367432
    7. ':return' → logprob: -7.612890720367432
    8. ':' → logprob: -8.86289119720459
    9. '#print' → logprob: -9.73789119720459
    10. '```' → logprob: -9.73789119720459

Token 227: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.9711267352104187
    2. ' return' → logprob: -1.3461267948150635
    3. 'return' → logprob: -1.5961267948150635
    4. ' print' → logprob: -1.8461267948150635
    5. '               ' → logprob: -8.221126556396484
    6. '           ' → logprob: -8.221126556396484
    7. '#print' → logprob: -11.721126556396484
    8. '
' → logprob: -12.096126556396484
    9. '```' → logprob: -12.721126556396484
    10. ':return' → logprob: -12.846126556396484

Token 228: '('' (ID: 706)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.032682087272405624
    2. '(' → logprob: -3.657682180404663
    3. '("("' → logprob: -5.657681941986084
    4. '("' → logprob: -5.907681941986084
    5. '('' → logprob: -9.282682418823242
    6. '(f' → logprob: -10.407682418823242
    7. '((' → logprob: -11.907682418823242
    8. '(True' → logprob: -12.157682418823242
    9. '()' → logprob: -12.657682418823242
    10. '(k' → logprob: -13.157682418823242

Token 229: 'yes' (ID: 6763)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.23301947116851807
    2. '(x' → logprob: -1.858019471168518
    3. ' x' → logprob: -3.4830193519592285
    4. '"' → logprob: -5.4830193519592285
    5. 'Found' → logprob: -5.8580193519592285
    6. ''' → logprob: -6.1080193519592285
    7. 'found' → logprob: -6.4830193519592285
    8. '('' → logprob: -6.4830193519592285
    9. 'k' → logprob: -6.8580193519592285
    10. '(' → logprob: -6.9830193519592285

Token 230: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.16240081191062927
    2. '')
' → logprob: -1.9124008417129517
    3. ',' → logprob: -6.912400722503662
    4. '',' → logprob: -7.412400722503662
    5. ')' → logprob: -8.41240119934082
    6. ':' → logprob: -9.78740119934082
    7. '')
' → logprob: -10.03740119934082
    8. '")' → logprob: -10.03740119934082
    9. ' x' → logprob: -10.78740119934082
    10. ''' → logprob: -10.78740119934082

Token 231: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.0020742492051795e-05
    2. ' return' → logprob: -10.750049591064453
    3. '               ' → logprob: -10.750049591064453
    4. 'return' → logprob: -12.125049591064453
    5. '            
' → logprob: -14.500049591064453
    6. '       ' → logprob: -14.625049591064453
    7. ',' → logprob: -14.875049591064453
    8. '		' → logprob: -15.875049591064453
    9. '          ' → logprob: -16.750049591064453
    10. '            ' → logprob: -17.000049591064453

Token 232: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.046107225120067596
    2. ' return' → logprob: -3.796107292175293
    3. 'return' (adapté à ' return') → logprob: -3.796107292175293
    4. '               ' → logprob: -9.046107292175293
    5. '       ' → logprob: -11.671107292175293
    6. '		' → logprob: -13.046107292175293
    7. '	return' → logprob: -13.046107292175293
    8. ':return' → logprob: -13.046107292175293
    9. '          ' → logprob: -13.421107292175293
    10. '   ' → logprob: -13.421107292175293

Token 233: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2519296407699585
    2. 'x' → logprob: -1.5019296407699585
    3. '	x' → logprob: -15.37692928314209
    4. ' ' → logprob: -16.001930236816406
    5. '<|end|>' → logprob: -16.501930236816406
    6. ' ' → logprob: -17.376930236816406
    7. '(x' → logprob: -17.501930236816406
    8. '<x' → logprob: -17.876930236816406
    9. ')x' → logprob: -18.126930236816406
    10. '   ' → logprob: -18.501930236816406

Token 234: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.983476436696947e-05
    2. '<|end|>' → logprob: -10.625089645385742
    3. 'elif' → logprob: -10.625089645385742
    4. ' elif' → logprob: -11.000089645385742
    5. '        
' → logprob: -11.750089645385742
    6. ' if' → logprob: -12.000089645385742
    7. 'x' → logprob: -12.875089645385742
    8. '   ' → logprob: -13.250089645385742
    9. ' x' → logprob: -14.000089645385742
    10. 'if' → logprob: -14.000089645385742

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011284107313258573
    2. ' x' → logprob: -10.250112533569336
    3. 'x' → logprob: -10.625112533569336
    4. '        
' → logprob: -11.125112533569336
    5. '   ' → logprob: -11.500112533569336
    6. '<|end|>' → logprob: -12.000112533569336
    7. ' elif' → logprob: -12.500112533569336
    8. ' if' → logprob: -12.875112533569336
    9. 'elif' → logprob: -13.125112533569336
    10. '
' → logprob: -13.250112533569336

Token 236: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.767820417881012
    2. ' elif' → logprob: -1.1428203582763672
    3. ' if' → logprob: -1.6428203582763672
    4. 'elif' → logprob: -4.017820358276367
    5. 'if' (adapté à ' if') → logprob: -5.892820358276367
    6. ' x' → logprob: -6.142820358276367
    7. '        
' → logprob: -9.017820358276367
    8. 'x' → logprob: -9.017820358276367
    9. '    ' → logprob: -9.267820358276367
    10. ' ' → logprob: -9.267820358276367

Token 237: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.1426972597837448
    2. 'k' → logprob: -2.017697334289551
    3. ' ' → logprob: -11.64269733428955
    4. 'x' → logprob: -12.26769733428955
    5. ' x' → logprob: -12.26769733428955
    6. ' ' → logprob: -13.51769733428955
    7. '	k' → logprob: -13.76769733428955
    8. '   ' → logprob: -15.08019733428955
    9. '  ' → logprob: -15.14269733428955
    10. ' к' → logprob: -15.64269733428955

Token 238: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.003613497130572796
    2. '<' → logprob: -5.628613471984863
    3. ' ' → logprob: -11.878613471984863
    4. ' >' → logprob: -12.753613471984863
    5. '<|end|>' → logprob: -13.128613471984863
    6. '<x' → logprob: -14.878613471984863
    7. ' <",' → logprob: -15.628613471984863
    8. '   ' → logprob: -15.878613471984863
    9. '<Key' → logprob: -15.878613471984863
    10. ' <
' → logprob: -16.00361442565918

Token 239: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.061968132853507996
    2. ' x' → logprob: -2.8119680881500244
    3. '	x' → logprob: -15.936967849731445
    4. ' ' → logprob: -15.936967849731445
    5. '(x' → logprob: -16.686967849731445
    6. '<|end|>' → logprob: -16.686967849731445
    7. '   ' → logprob: -16.936967849731445
    8. '       ' → logprob: -17.436967849731445
    9. ')x' → logprob: -17.936967849731445
    10. '=x' → logprob: -18.061967849731445

Token 240: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -6.869017852295656e-06
    2. '.' → logprob: -12.000006675720215
    3. ' .' → logprob: -14.625006675720215
    4. 'key' → logprob: -15.625006675720215
    5. ' key' → logprob: -18.37500762939453
    6. '.left' → logprob: -18.50000762939453
    7. '   ' → logprob: -19.25000762939453
    8. '.keys' → logprob: -19.25000762939453
    9. '.right' → logprob: -20.37500762939453
    10. '	key' → logprob: -20.75000762939453

Token 241: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.39179569482803345
    2. ':' → logprob: -1.1417956352233887
    3. '           ' → logprob: -5.516795635223389
    4. '       ' → logprob: -7.391795635223389
    5. ' :
' → logprob: -9.141796112060547
    6. ' :' → logprob: -10.266796112060547
    7. '<|end|>' → logprob: -10.516796112060547
    8. ',' → logprob: -10.641796112060547
    9. '):
' → logprob: -11.016796112060547
    10. ' x' → logprob: -11.141796112060547

Token 242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09732029587030411
    2. '
' → logprob: -2.722320318222046
    3. ' x' → logprob: -3.722320318222046
    4. 'x' → logprob: -6.222320079803467
    5. ' 
' → logprob: -8.222320556640625
    6. '            
' → logprob: -8.722320556640625
    7. '       ' → logprob: -8.847320556640625
    8. '        
' → logprob: -8.972320556640625
    9. '        ' → logprob: -10.597320556640625
    10. '    
' → logprob: -10.722320556640625

Token 243: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.011098399758338928
    2. 'x' (adapté à ' x') → logprob: -4.511098384857178
    3. '       ' → logprob: -10.886098861694336
    4. '
' → logprob: -11.136098861694336
    5. '           ' → logprob: -11.886098861694336
    6. ' 
' → logprob: -12.136098861694336
    7. '	x' → logprob: -13.261098861694336
    8. '   ' → logprob: -13.636098861694336
    9. '    ' → logprob: -14.011098861694336
    10. ' ' → logprob: -14.761098861694336

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061970822513103485
    2. '=' → logprob: -2.8119707107543945
    3. '=x' → logprob: -12.811970710754395
    4. ' =
' → logprob: -15.311970710754395
    5. ' x' → logprob: -16.31197166442871
    6. '.' → logprob: -16.81197166442871
    7. '=
' → logprob: -16.93697166442871
    8. '.left' → logprob: -17.06197166442871
    9. '.x' → logprob: -17.81197166442871
    10. ' ' → logprob: -17.93697166442871

Token 245: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.003600544296205044
    2. 'x' → logprob: -5.628600597381592
    3. '	x' → logprob: -15.253600120544434
    4. ' ' → logprob: -16.00360107421875
    5. ' ' → logprob: -16.50360107421875
    6. '(x' → logprob: -17.62860107421875
    7. ')x' → logprob: -18.37860107421875
    8. '```' → logprob: -19.37860107421875
    9. '   ' → logprob: -19.50360107421875
    10. ' 
' → logprob: -19.75360107421875

Token 246: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -6.20603168499656e-05
    2. '.right' → logprob: -9.750061988830566
    3. '.' → logprob: -12.625061988830566
    4. ' .' → logprob: -14.875061988830566
    5. 'left' → logprob: -18.125062942504883
    6. '.Left' → logprob: -18.250062942504883
    7. '.parent' → logprob: -19.125062942504883
    8. '.child' → logprob: -19.375062942504883
    9. '.key' → logprob: -19.625062942504883
    10. '.le' → logprob: -19.750062942504883

Token 247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29168519377708435
    2. 'else' → logprob: -1.7916852235794067
    3. ' else' → logprob: -2.541685104370117
    4. '
' → logprob: -4.916685104370117
    5. '	else' → logprob: -8.916685104370117
    6. '<|end|>' → logprob: -9.916685104370117
    7. ' 
' → logprob: -11.041685104370117
    8. '        
' → logprob: -11.041685104370117
    9. '  
' → logprob: -11.166685104370117
    10. '    
' → logprob: -11.791685104370117

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22033777832984924
    2. 'else' → logprob: -2.0953378677368164
    3. ' else' → logprob: -2.5953378677368164
    4. '	else' → logprob: -9.470337867736816
    5. '<|end|>' → logprob: -11.345337867736816
    6. '```' → logprob: -12.470337867736816
    7. '
' → logprob: -12.845337867736816
    8. '	' → logprob: -13.345337867736816
    9. '   ' → logprob: -13.345337867736816
    10. '_else' → logprob: -14.220337867736816

Token 249: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.17231117188930511
    2. ' else' → logprob: -1.9223111867904663
    3. '       ' → logprob: -4.422311305999756
    4. '	else' → logprob: -12.297310829162598
    5. '   ' → logprob: -13.047310829162598
    6. '
' → logprob: -14.547310829162598
    7. '```' → logprob: -15.172310829162598
    8. 'elif' → logprob: -16.422311782836914
    9. ' ' → logprob: -16.672311782836914
    10. '_else' → logprob: -16.922311782836914

Token 250: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04769930616021156
    2. ' x' → logprob: -3.297699213027954
    3. ':' → logprob: -5.047699451446533
    4. ':
' → logprob: -5.922699451446533
    5. 'x' → logprob: -8.172698974609375
    6. '       ' → logprob: -8.922698974609375
    7. '   ' → logprob: -11.047698974609375
    8. '          ' → logprob: -11.297698974609375
    9. '{
' → logprob: -11.422698974609375
    10. '
' → logprob: -11.547698974609375

Token 251: '           ' (ID: 352)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16372597217559814
    2. '           ' → logprob: -1.9137259721755981
    3. 'x' → logprob: -5.663725852966309
    4. '       ' → logprob: -11.288725852966309
    5. ' ' → logprob: -12.788725852966309
    6. '
' → logprob: -12.788725852966309
    7. '   ' → logprob: -13.163725852966309
    8. '		' → logprob: -13.413725852966309
    9. ' ' → logprob: -13.788725852966309
    10. '```' → logprob: -14.163725852966309

Token 252: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.12703940272331238
    2. 'x' (adapté à ' x') → logprob: -2.1270394325256348
    3. '           ' → logprob: -9.127038955688477
    4. '       ' → logprob: -13.002038955688477
    5. '   ' → logprob: -15.627038955688477
    6. '	x' → logprob: -16.627038955688477
    7. ' ' → logprob: -17.502038955688477
    8. '               ' → logprob: -17.502038955688477
    9. '```' → logprob: -17.502038955688477
    10. '
' → logprob: -18.377038955688477

Token 253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47422200441360474
    2. ' =' → logprob: -0.9742220044136047
    3. '.right' → logprob: -8.849222183227539
    4. '.' → logprob: -14.474222183227539
    5. 'right' → logprob: -15.099222183227539
    6. ' ' → logprob: -15.474222183227539
    7. '.=' → logprob: -15.599222183227539
    8. '=x' → logprob: -15.724222183227539
    9. '.key' → logprob: -16.97422218322754
    10. '=
' → logprob: -17.22422218322754

Token 254: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.029750604182481766
    2. 'x' → logprob: -3.5297505855560303
    3. '	x' → logprob: -16.77975082397461
    4. ' ' → logprob: -17.02975082397461
    5. ' ' → logprob: -18.90475082397461
    6. '(x' → logprob: -19.40475082397461
    7. '   ' → logprob: -19.77975082397461
    8. 's' → logprob: -20.65475082397461
    9. ')x' → logprob: -21.02975082397461
    10. '  ' → logprob: -21.15475082397461

Token 255: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -2.1888679839321412e-05
    2. 'right' → logprob: -10.750021934509277
    3. '.left' → logprob: -15.500021934509277
    4. '.' → logprob: -16.37502098083496
    5. ' .' → logprob: -17.00002098083496
    6. '.r' → logprob: -17.75002098083496
    7. '.key' → logprob: -18.37502098083496
    8. '	right' → logprob: -18.50002098083496
    9. '[right' → logprob: -18.62502098083496
    10. '   ' → logprob: -19.87502098083496

Token 256: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18894000351428986
    2. '<|end|>' → logprob: -1.9389400482177734
    3. '       ' → logprob: -4.313940048217773
    4. ' return' → logprob: -5.063940048217773
    5. '
' → logprob: -6.188940048217773
    6. 'return' → logprob: -6.313940048217773
    7. ' ' → logprob: -6.813940048217773
    8. '    
' → logprob: -7.063940048217773
    9. '	return' → logprob: -7.188940048217773
    10. '    ' → logprob: -7.688940048217773

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0955522283911705
    2. '<|end|>' → logprob: -2.8455522060394287
    3. ' return' → logprob: -3.9705522060394287
    4. 'return' → logprob: -4.720552444458008
    5. '       ' → logprob: -6.720552444458008
    6. '	return' → logprob: -6.845552444458008
    7. 'None' → logprob: -7.095552444458008
    8. ' ' → logprob: -7.345552444458008
    9. ' None' → logprob: -7.345552444458008
    10. '  ' → logprob: -8.470552444458008

Token 258: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06888643652200699
    2. '   ' → logprob: -3.3188865184783936
    3. 'if' → logprob: -4.0688862800598145
    4. 'break' → logprob: -4.6938862800598145
    5. ' return' → logprob: -5.8188862800598145
    6. 'None' → logprob: -7.5688862800598145
    7. 'print' (adapté à ' print') → logprob: -7.6938862800598145
    8. ' if' → logprob: -9.568886756896973
    9. ' break' → logprob: -10.193886756896973
    10. '```' → logprob: -10.443886756896973

Token 259: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.06285905838012695
    2. '(' → logprob: -2.812859058380127
    3. '()' → logprob: -7.437859058380127
    4. '(None' → logprob: -8.812858581542969
    5. '("' → logprob: -8.937858581542969
    6. '(False' → logprob: -11.187858581542969
    7. '("")' → logprob: -13.062858581542969
    8. '('\' → logprob: -13.312858581542969
    9. '('(' → logprob: -13.312858581542969
    10. 'None' → logprob: -14.062858581542969

Token 260: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.0008278522291220725
    2. 'not' → logprob: -7.125827789306641
    3. ' no' → logprob: -11.50082778930664
    4. 'none' → logprob: -11.75082778930664
    5. 'na' → logprob: -13.87582778930664
    6. 'No' → logprob: -14.00082778930664
    7. 'NO' → logprob: -14.12582778930664
    8. '(no' → logprob: -14.50082778930664
    9. ''' → logprob: -14.62582778930664
    10. 'None' → logprob: -15.00082778930664

Token 261: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -6.813969957875088e-05
    2. '')
' → logprob: -10.000067710876465
    3. ')' → logprob: -10.750067710876465
    4. '")' → logprob: -13.750067710876465
    5. '')

' → logprob: -16.12506866455078
    6. ''' → logprob: -17.62506866455078
    7. '')
' → logprob: -18.25006866455078
    8. '');' → logprob: -18.37506866455078
    9. '()' → logprob: -18.75006866455078
    10. '')"' → logprob: -19.50006866455078

Token 262: '    

' (ID: 24372)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5618317127227783
    2. '<|end|>' → logprob: -1.0618317127227783
    3. 'None' → logprob: -3.9368317127227783
    4. '#' → logprob: -4.311831474304199
    5. 'def' → logprob: -4.436831474304199
    6. 'n' → logprob: -4.686831474304199
    7. ' None' → logprob: -4.686831474304199
    8. ' 
' → logprob: -5.186831474304199
    9. '    ' → logprob: -6.186831474304199
    10. '   ' → logprob: -6.561831474304199

Token 264: ' get' (ID: 717)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8235427141189575
    2. ' inorder' → logprob: -0.9485427141189575
    3. 'main' → logprob: -2.698542594909668
    4. 'print' → logprob: -3.198542594909668
    5. ' main' → logprob: -3.448542594909668
    6. ' in' → logprob: -4.323542594909668
    7. 'delete' → logprob: -5.073542594909668
    8. ' print' → logprob: -5.698542594909668
    9. 'search' → logprob: -6.573542594909668
    10. 'pre' → logprob: -6.698542594909668

Token 265: 'Sc' (ID: 2986)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.06656690686941147
    2. '_success' → logprob: -3.3165669441223145
    3. '_parent' → logprob: -4.1915669441223145
    4. 'min' → logprob: -5.9415669441223145
    5. '_root' → logprob: -6.1915669441223145
    6. 'Minimum' → logprob: -6.4415669441223145
    7. '_tree' → logprob: -6.4415669441223145
    8. '_max' → logprob: -6.5665669441223145
    9. '_height' → logprob: -6.8165669441223145
    10. 'Min' → logprob: -7.9415669441223145

Token 266: 'u' (ID: 84)
  Prédit: 'ope'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ope' → logprob: -0.725343644618988
    2. 'ore' → logprob: -1.2253437042236328
    3. 'ale' → logprob: -1.8503437042236328
    4. 'r' → logprob: -4.600343704223633
    5. 'h' → logprob: -4.850343704223633
    6. 'reen' → logprob: -5.225343704223633
    7. 'u' → logprob: -5.350343704223633
    8. 'cess' → logprob: -5.475343704223633
    9. 'alar' → logprob: -5.725343704223633
    10. 'o' → logprob: -5.725343704223633

Token 267: '(x' (ID: 4061)
  Prédit: 'ccess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ccess' → logprob: -0.059753283858299255
    2. 'cc' → logprob: -3.309753179550171
    3. 'c' → logprob: -4.30975341796875
    4. 'ss' → logprob: -5.43475341796875
    5. 'cess' → logprob: -5.80975341796875
    6. 'm' → logprob: -8.43475341796875
    7. 'css' → logprob: -9.18475341796875
    8. 'sses' → logprob: -9.80975341796875
    9. 'cces' → logprob: -9.80975341796875
    10. 'cs' → logprob: -10.18475341796875

Token 268: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01096965279430151
    2. '):
' → logprob: -4.635969638824463
    3. ',' → logprob: -7.760969638824463
    4. ')' → logprob: -7.885969638824463
    5. ' ):' → logprob: -9.135970115661621
    6. '.right' → logprob: -10.010970115661621
    7. '):

' → logprob: -10.135970115661621
    8. '   ' → logprob: -10.385970115661621
    9. '.left' → logprob: -10.760970115661621
    10. 'right' → logprob: -11.385970115661621

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38124051690101624
    2. ' if' → logprob: -1.7562404870986938
    3. 'if' → logprob: -2.1312406063079834
    4. 's' → logprob: -4.756240367889404
    5. 'sc' → logprob: -5.756240367889404
    6. 'y' → logprob: -5.881240367889404
    7. 'return' → logprob: -6.381240367889404
    8. 'r' → logprob: -6.631240367889404
    9. ' y' → logprob: -6.631240367889404
    10. ' s' → logprob: -6.881240367889404

Token 270: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11237802356481552
    2. ' if' → logprob: -2.8623781204223633
    3. 's' → logprob: -3.7373781204223633
    4. 'sc' → logprob: -4.487378120422363
    5. 'p' → logprob: -5.612378120422363
    6. '   ' → logprob: -6.112378120422363
    7. 'r' → logprob: -6.237378120422363
    8. 'res' → logprob: -6.612378120422363
    9. 'while' → logprob: -7.112378120422363
    10. 'y' → logprob: -7.862378120422363

Token 271: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0036352307070046663
    2. ' x' → logprob: -5.628635406494141
    3. 'not' → logprob: -10.50363540649414
    4. ' not' → logprob: -12.75363540649414
    5. '(x' → logprob: -12.75363540649414
    6. ' ' → logprob: -14.00363540649414
    7. '   ' → logprob: -14.62863540649414
    8. '	x' → logprob: -15.00363540649414
    9. '  ' → logprob: -15.75363540649414
    10. '"x' → logprob: -17.25363540649414

Token 272: '.right' (ID: 17627)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.2333449274301529
    2. '.right' → logprob: -1.6083449125289917
    3. ' is' → logprob: -5.358345031738281
    4. '==' → logprob: -6.358345031738281
    5. '.' → logprob: -7.358345031738281
    6. ' ==' → logprob: -8.483345031738281
    7. 'left' → logprob: -8.608345031738281
    8. '.is' → logprob: -8.733345031738281
    9. '.key' → logprob: -8.983345031738281
    10. 'is' → logprob: -10.108345031738281

Token 273: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1549413651227951
    2. '!=' → logprob: -2.2799413204193115
    3. ' !=' → logprob: -3.9049413204193115
    4. '==' → logprob: -4.404941558837891
    5. 'is' → logprob: -5.029941558837891
    6. ' ==' → logprob: -6.279941558837891
    7. ':' → logprob: -8.15494155883789
    8. '<|end|>' → logprob: -9.65494155883789
    9. '()!=' → logprob: -10.52994155883789
    10. ')!=' → logprob: -11.27994155883789

Token 274: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0015036711702123284
    2. ' None' → logprob: -6.5015034675598145
    3. ' ' → logprob: -14.251503944396973
    4. '   ' → logprob: -14.626503944396973
    5. '_None' → logprob: -16.376502990722656
    6. '(None' → logprob: -16.501502990722656
    7. 'none' → logprob: -16.626502990722656
    8. '=None' → logprob: -17.251502990722656
    9. '  ' → logprob: -17.376502990722656
    10. 'No' → logprob: -18.251502990722656

Token 275: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5931914448738098
    2. ':' → logprob: -1.093191385269165
    3. ':return' → logprob: -3.093191385269165
    4. ':
' → logprob: -3.218191385269165
    5. '   ' → logprob: -4.093191623687744
    6. ' or' → logprob: -5.218191623687744
    7. 'return' → logprob: -6.593191623687744
    8. ' :' → logprob: -6.843191623687744
    9. ' and' → logprob: -7.093191623687744
    10. ' return' → logprob: -7.468191623687744

Token 276: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6011505722999573
    2. '       ' → logprob: -0.8511505722999573
    3. ' return' → logprob: -4.4761505126953125
    4. '   ' → logprob: -4.4761505126953125
    5. 'if' → logprob: -6.9761505126953125
    6. 'node' → logprob: -8.101150512695312
    7. 'x' → logprob: -8.476150512695312
    8. ' if' → logprob: -8.976150512695312
    9. 'y' → logprob: -9.351150512695312
    10. ' ' → logprob: -9.476150512695312

Token 277: ' y' (ID: 342)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.060416027903556824
    2. 'y' (adapté à ' y') → logprob: -3.4354159832000732
    3. 'if' → logprob: -4.310416221618652
    4. 'p' → logprob: -5.185416221618652
    5. 't' → logprob: -5.935416221618652
    6. 'tmp' → logprob: -6.685416221618652
    7. 'r' → logprob: -7.310416221618652
    8. 'temp' → logprob: -7.685416221618652
    9. 'node' → logprob: -8.060416221618652
    10. 'x' → logprob: -8.185416221618652

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04324706643819809
    2. '=' → logprob: -3.1682469844818115
    3. 'return' → logprob: -9.54324722290039
    4. '=x' → logprob: -9.54324722290039
    5. ' ' → logprob: -10.29324722290039
    6. 'x' → logprob: -11.04324722290039
    7. '   ' → logprob: -11.29324722290039
    8. '  ' → logprob: -11.91824722290039
    9. ',' → logprob: -12.29324722290039
    10. 'def' → logprob: -12.41824722290039

Token 279: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00016563729150220752
    2. 'None' → logprob: -8.875165939331055
    3. ' x' → logprob: -10.625165939331055
    4. ' None' → logprob: -14.750165939331055
    5. '   ' → logprob: -15.500165939331055
    6. 'get' → logprob: -15.625165939331055
    7. '  ' → logprob: -16.000165939331055
    8. '	x' → logprob: -16.125165939331055
    9. ' ' → logprob: -16.375165939331055
    10. '
' → logprob: -16.500165939331055

Token 280: '.p' (ID: 1201)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.4379393458366394
    2. '.p' → logprob: -1.0629394054412842
    3. '.parent' → logprob: -5.312939167022705
    4. '.right' → logprob: -6.187939167022705
    5. 'left' → logprob: -6.312939167022705
    6. 'p' → logprob: -8.062939643859863
    7. 'right' → logprob: -11.437939643859863
    8. 'parent' → logprob: -11.437939643859863
    9. '
' → logprob: -11.562939643859863
    10. '<p' → logprob: -11.812939643859863

Token 281: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46170517802238464
    2. 'else' → logprob: -1.461705207824707
    3. '       ' → logprob: -2.336705207824707
    4. 'return' → logprob: -3.586705207824707
    5. 'while' → logprob: -4.461705207824707
    6. ' else' → logprob: -6.961705207824707
    7. 'elif' → logprob: -7.461705207824707
    8. ' while' → logprob: -8.961705207824707
    9. 'current' → logprob: -9.211705207824707
    10. 'if' → logprob: -9.711705207824707

Token 282: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8655608296394348
    2. '       ' → logprob: -0.8655608296394348
    3. 'else' → logprob: -1.86556077003479
    4. 'while' → logprob: -6.365561008453369
    5. ' else' → logprob: -6.365561008453369
    6. 'elif' → logprob: -9.740560531616211
    7. ' while' → logprob: -10.365560531616211
    8. '  ' → logprob: -11.365560531616211
    9. '    ' → logprob: -12.490560531616211
    10. ' ' → logprob: -12.865560531616211

Token 283: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0015504523180425167
    2. 'x' → logprob: -7.751550674438477
    3. 'z' → logprob: -7.751550674438477
    4. '       ' → logprob: -8.126550674438477
    5. 'w' → logprob: -8.376550674438477
    6. '	while' → logprob: -9.876550674438477
    7. '   ' → logprob: -10.626550674438477
    8. 'n' → logprob: -10.751550674438477
    9. ' while' → logprob: -11.001550674438477
    10. 'y' → logprob: -11.001550674438477

Token 284: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00021366903092712164
    2. ' y' → logprob: -8.500213623046875
    3. 'x' → logprob: -11.625213623046875
    4. '(y' → logprob: -13.750213623046875
    5. '   ' → logprob: -16.375213623046875
    6. '	y' → logprob: -17.125213623046875
    7. '(x' → logprob: -18.500213623046875
    8. ' ' → logprob: -18.500213623046875
    9. '(' → logprob: -18.875213623046875
    10. 'y's' → logprob: -19.125213623046875

Token 285: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04865095764398575
    2. '==' → logprob: -3.0486509799957275
    3. 'y' → logprob: -10.048650741577148
    4. 'p' → logprob: -11.923650741577148
    5. ' =' → logprob: -12.423650741577148
    6. '=' → logprob: -13.423650741577148
    7. ' ' → logprob: -13.673650741577148
    8. '.key' → logprob: -13.673650741577148
    9. 'key' → logprob: -13.923650741577148
    10. ' y' → logprob: -14.173650741577148

Token 286: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001929228543303907
    2. ' y' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.87692928314209
    4. '	y' → logprob: -15.75192928314209
    5. 'y's' → logprob: -16.751928329467773
    6. ')y' → logprob: -16.751928329467773
    7. '    ' → logprob: -17.876928329467773
    8. ' ' → logprob: -18.126928329467773
    9. '(y' → logprob: -18.376928329467773
    10. ''y' → logprob: -18.501928329467773

Token 287: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.07296329736709595
    2. '.y' → logprob: -2.947963237762451
    3. 'y' → logprob: -4.447963237762451
    4. 'right' → logprob: -5.322963237762451
    5. '.' → logprob: -6.947963237762451
    6. ' y' → logprob: -8.44796371459961
    7. ' .' → logprob: -9.57296371459961
    8. '   ' → logprob: -9.94796371459961
    9. ' right' → logprob: -11.44796371459961
    10. ',y' → logprob: -11.82296371459961

Token 288: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007887208834290504
    2. 'and' → logprob: -4.882887363433838
    3. ':' → logprob: -8.38288688659668
    4. '       ' → logprob: -10.75788688659668
    5. ' y' → logprob: -11.88288688659668
    6. ':
' → logprob: -12.00788688659668
    7. '           ' → logprob: -12.38288688659668
    8. '   ' → logprob: -12.38288688659668
    9. ' :' → logprob: -12.63288688659668
    10. ' ' → logprob: -13.63288688659668

Token 289: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6932423710823059
    2. ' y' → logprob: -0.6932423710823059
    3. '   ' → logprob: -9.568242073059082
    4. ' ' → logprob: -11.693242073059082
    5. '    ' → logprob: -12.443242073059082
    6. '	y' → logprob: -12.818242073059082
    7. '       ' → logprob: -12.943242073059082
    8. '  ' → logprob: -12.943242073059082
    9. '     ' → logprob: -13.193242073059082
    10. 'x' → logprob: -13.818242073059082

Token 290: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6947473287582397
    2. '!=' → logprob: -0.8197473287582397
    3. ' is' → logprob: -2.8197474479675293
    4. 'is' → logprob: -7.444747447967529
    5. ')!=' → logprob: -11.569746971130371
    6. '()!=' → logprob: -11.694746971130371
    7. 'y' → logprob: -12.069746971130371
    8. ' isn't' → logprob: -12.069746971130371
    9. '!==' → logprob: -12.694746971130371
    10. '   ' → logprob: -13.069746971130371

Token 291: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0015023599844425917
    2. ' None' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.501502990722656
    4. ' ' → logprob: -19.251502990722656
    5. '(None' → logprob: -19.751502990722656
    6. 'x' → logprob: -19.876502990722656
    7. '_None' → logprob: -19.876502990722656
    8. 'null' → logprob: -20.626502990722656
    9. '=None' → logprob: -20.626502990722656
    10. ',None' → logprob: -20.876502990722656

Token 292: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15133707225322723
    2. ':' → logprob: -2.776337146759033
    3. ' and' → logprob: -2.776337146759033
    4. '           ' → logprob: -4.276337146759033
    5. 'and' → logprob: -7.026337146759033
    6. ' :
' → logprob: -7.401337146759033
    7. '):
' → logprob: -8.526336669921875
    8. '():
' → logprob: -8.776336669921875
    9. '       ' → logprob: -10.151336669921875
    10. ' or' → logprob: -10.526336669921875

Token 293: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007191403768956661
    2. ' y' → logprob: -5.007191181182861
    3. 'y' → logprob: -8.88219165802002
    4. ' x' → logprob: -9.00719165802002
    5. 'x' → logprob: -9.75719165802002
    6. '       ' → logprob: -9.88219165802002
    7. '          ' → logprob: -10.75719165802002
    8. '{
' → logprob: -11.25719165802002
    9. '               ' → logprob: -11.25719165802002
    10. '```' → logprob: -11.25719165802002

Token 294: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.7848426103591919
    2. 'y' → logprob: -1.159842610359192
    3. ' y' → logprob: -1.909842610359192
    4. ' x' → logprob: -2.5348424911499023
    5. '           ' → logprob: -5.909842491149902
    6. '               ' → logprob: -8.909842491149902
    7. '       ' → logprob: -11.284842491149902
    8. '   ' → logprob: -11.909842491149902
    9. ' ' → logprob: -11.909842491149902
    10. ' if' → logprob: -12.284842491149902

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31401246786117554
    2. '=' → logprob: -1.3140125274658203
    3. ',' → logprob: -7.43901252746582
    4. '=y' → logprob: -9.18901252746582
    5. ',y' → logprob: -10.06401252746582
    6. ' y' → logprob: -12.06401252746582
    7. ' ,' → logprob: -12.43901252746582
    8. 'y' → logprob: -12.56401252746582
    9. ' ==' → logprob: -13.68901252746582
    10. ' ' → logprob: -13.68901252746582

Token 296: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3868720829486847
    2. ' y' → logprob: -1.1368720531463623
    3. '	y' → logprob: -14.761872291564941
    4. '<|end|>' → logprob: -15.386872291564941
    5. ')y' → logprob: -15.886872291564941
    6. ''y' → logprob: -16.261871337890625
    7. ' ' → logprob: -16.636871337890625
    8. 'x' → logprob: -16.636871337890625
    9. '   ' → logprob: -17.761871337890625
    10. ',y' → logprob: -17.761871337890625

Token 297: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.495836466550827
    2. '
' → logprob: -0.9958364963531494
    3. 'y' → logprob: -4.87083625793457
    4. ' y' → logprob: -5.24583625793457
    5. ',y' → logprob: -5.37083625793457
    6. '       ' → logprob: -6.74583625793457
    7. ',' → logprob: -7.12083625793457
    8. '
' → logprob: -7.12083625793457
    9. '<|end|>' → logprob: -7.74583625793457
    10. ';y' → logprob: -7.99583625793457

Token 298: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03003649041056633
    2. '       ' → logprob: -4.405036449432373
    3. ' y' → logprob: -4.655036449432373
    4. ' and' → logprob: -5.530036449432373
    5. '
' → logprob: -6.655036449432373
    6. '<|end|>' → logprob: -7.280036449432373
    7. ',y' → logprob: -7.405036449432373
    8. 'y' → logprob: -8.030036926269531
    9. ',' → logprob: -8.405036926269531
    10. '   ' → logprob: -8.905036926269531

Token 299: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0040823169983923435
    2. ' y' → logprob: -5.504082202911377
    3. '           ' → logprob: -12.504082679748535
    4. '       ' → logprob: -16.75408172607422
    5. '	y' → logprob: -17.37908172607422
    6. ',y' → logprob: -18.00408172607422
    7. ''y' → logprob: -18.12908172607422
    8. ')y' → logprob: -18.37908172607422
    9. '   ' → logprob: -18.75408172607422
    10. '(y' → logprob: -19.50408172607422

Token 300: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408488392829895
    2. ' =' → logprob: -0.9740848541259766
    3. '=y' → logprob: -12.599084854125977
    4. '=p' → logprob: -12.724084854125977
    5. 'p' → logprob: -14.849084854125977
    6. '.' → logprob: -15.099084854125977
    7. ' ' → logprob: -15.474084854125977
    8. 'y' → logprob: -15.599084854125977
    9. '.=' → logprob: -16.599084854125977
    10. '=None' → logprob: -16.599084854125977

Token 301: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4740813374519348
    2. ' y' → logprob: -0.9740813374519348
    3. 'x' → logprob: -12.599081039428711
    4. ' x' → logprob: -14.974081039428711
    5. 'None' → logprob: -15.474081039428711
    6. '	y' → logprob: -15.474081039428711
    7. ' None' → logprob: -16.72408103942871
    8. '<|end|>' → logprob: -16.84908103942871
    9. '(y' → logprob: -17.22408103942871
    10. 'user' → logprob: -17.47408103942871

Token 302: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.870950215263292e-05
    2. '.' → logprob: -10.875048637390137
    3. 'p' → logprob: -11.125048637390137
    4. '.parent' → logprob: -11.625048637390137
    5. '<p' → logprob: -12.875048637390137
    6. ' .' → logprob: -13.375048637390137
    7. '<|end|>' → logprob: -14.000048637390137
    8. 'parent' → logprob: -15.375048637390137
    9. '.right' → logprob: -15.500048637390137

Token 303: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09857983142137527
    2. '<|end|>' → logprob: -2.4735798835754395
    3. '
' → logprob: -4.9735798835754395
    4. '<|end|>' → logprob: -7.4735798835754395
    5. ' return' → logprob: -7.7235798835754395
    6. 'return' → logprob: -7.8485798835754395
    7. '[' → logprob: -8.598579406738281
    8. '   ' → logprob: -8.723579406738281
    9. ')' → logprob: -8.973579406738281
    10. ':return' → logprob: -9.473579406738281

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020473632030189037
    2. '<|end|>' → logprob: -6.627047538757324
    3. ' return' → logprob: -7.877047538757324
    4. 'return' → logprob: -9.127047538757324
    5. '   ' → logprob: -10.002047538757324
    6. '
' → logprob: -10.127047538757324
    7. ',' → logprob: -10.752047538757324
    8. '[' → logprob: -10.877047538757324
    9. '           ' → logprob: -10.877047538757324
    10. ')' → logprob: -11.252047538757324

Token 305: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17568042874336243
    2. 'return' (adapté à ' return') → logprob: -2.42568039894104
    3. ' return' → logprob: -2.67568039894104
    4. ' if' → logprob: -6.425680637359619
    5. ' y' → logprob: -6.550680637359619
    6. '   ' → logprob: -7.675680637359619
    7. 'if' → logprob: -9.800680160522461
    8. '           ' → logprob: -9.800680160522461
    9. ' None' → logprob: -9.925680160522461
    10. 'y' → logprob: -10.425680160522461

Token 306: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2519511282444
    2. 'y' → logprob: -1.5019510984420776
    3. ' None' → logprob: -11.501951217651367
    4. 'None' → logprob: -11.501951217651367
    5. ' ' → logprob: -14.501951217651367
    6. '	y' → logprob: -14.751951217651367
    7. ' ' → logprob: -15.126951217651367
    8. '(y' → logprob: -15.626951217651367
    9. '`' → logprob: -16.126951217651367
    10. '    ' → logprob: -17.126951217651367

Token 307: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3094481825828552
    2. '<|end|>' → logprob: -2.1844482421875
    3. ' ' → logprob: -2.5594482421875
    4. '
' → logprob: -3.3094482421875
    5. ' else' → logprob: -4.5594482421875
    6. '    
' → logprob: -5.3094482421875
    7. ' if' → logprob: -5.5594482421875
    8. ' 
' → logprob: -5.6844482421875
    9. '       ' → logprob: -5.9344482421875
    10. '  
' → logprob: -6.0594482421875

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.744521975517273
    2. ' ' → logprob: -2.1195220947265625
    3. ' else' → logprob: -2.1195220947265625
    4. '<|end|>' → logprob: -2.1195220947265625
    5. ' if' → logprob: -3.3695220947265625
    6. '       ' → logprob: -3.6195220947265625
    7. 'else' → logprob: -4.1195220947265625
    8. 'None' → logprob: -4.2445220947265625
    9. '.' → logprob: -4.2445220947265625
    10. '[' → logprob: -4.3695220947265625

Token 309: ' x' (ID: 1215)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7758124470710754
    2. '   ' → logprob: -1.6508123874664307
    3. 'y' → logprob: -1.7758123874664307
    4. ' else' → logprob: -2.0258123874664307
    5. ' y' → logprob: -3.5258123874664307
    6. ' ' → logprob: -4.90081262588501
    7. 'if' → logprob: -6.02581262588501
    8. 'x' (adapté à ' x') → logprob: -6.27581262588501
    9. 'elif' → logprob: -6.90081262588501
    10. ' if' → logprob: -7.02581262588501

Token 310: ' =' (ID: 314)
  Prédit: '.right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.021936757490038872
    2. '=' → logprob: -4.521936893463135
    3. ' =' → logprob: -5.146936893463135
    4. '.' → logprob: -5.771936893463135
    5. '.left' → logprob: -7.146936893463135
    6. 'right' → logprob: -7.396936893463135
    7. '.x' → logprob: -8.521936416625977
    8. '=x' → logprob: -8.896936416625977
    9. '.=' → logprob: -10.146936416625977
    10. ' .' → logprob: -10.271936416625977

Token 311: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.043001484125852585
    2. ' x' → logprob: -3.168001413345337
    3. '<|end|>' → logprob: -13.918001174926758
    4. 'get' → logprob: -14.418001174926758
    5. ' ' → logprob: -14.793001174926758
    6. '	x' → logprob: -15.793001174926758
    7. '   ' → logprob: -16.293001174926758
    8. '(x' → logprob: -16.543001174926758
    9. ' get' → logprob: -16.668001174926758
    10. '  ' → logprob: -16.918001174926758

Token 312: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.002492779865860939
    2. '.left' → logprob: -6.002492904663086
    3. '.' → logprob: -11.252492904663086
    4. 'right' → logprob: -12.877492904663086
    5. '.x' → logprob: -13.752492904663086
    6. ' .' → logprob: -15.002492904663086
    7. '.Right' → logprob: -17.002492904663086
    8. '.next' → logprob: -17.377492904663086
    9. '.r' → logprob: -18.002492904663086
    10. '	right' → logprob: -18.002492904663086

Token 313: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.21116428077220917
    2. '.left' → logprob: -1.8361642360687256
    3. 'left' → logprob: -4.711164474487305
    4. 'y' → logprob: -4.711164474487305
    5. ' while' → logprob: -4.836164474487305
    6. 'x' → logprob: -5.961164474487305
    7. '
' → logprob: -7.461164474487305
    8. '<|end|>' → logprob: -7.836164474487305
    9. '.y' → logprob: -7.961164474487305
    10. 'def' → logprob: -8.461164474487305

Token 314: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.009891965426504612
    2. ' while' → logprob: -4.634891986846924
    3. '	while' → logprob: -9.259891510009766
    4. 'While' → logprob: -10.634891510009766
    5. '   ' → logprob: -11.634891510009766
    6. '<|end|>' → logprob: -13.009891510009766
    7. 'hile' → logprob: -13.384891510009766
    8. 'x' → logprob: -13.634891510009766
    9. 'left' → logprob: -13.634891510009766
    10. ' While' → logprob: -14.009891510009766

Token 315: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -3.531315314830863e-06
    2. ' while' → logprob: -12.750003814697266
    3. 'While' → logprob: -14.500003814697266
    4. '	while' → logprob: -17.000003814697266
    5. '   ' → logprob: -19.250003814697266
    6. '
' → logprob: -19.750003814697266
    7. '```' → logprob: -22.625003814697266
    8. 'left' → logprob: -23.625003814697266
    9. ' While' → logprob: -23.750003814697266
    10. 'if' → logprob: -23.875003814697266

Token 316: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4740830063819885
    2. ' x' → logprob: -0.9740830063819885
    3. '(x' → logprob: -12.099082946777344
    4. ' ' → logprob: -15.349082946777344
    5. '	x' → logprob: -15.849082946777344
    6. '   ' → logprob: -16.474082946777344
    7. ')x' → logprob: -17.974082946777344
    8. '$x' → logprob: -18.224082946777344
    9. '{x' → logprob: -18.349082946777344
    10. '  ' → logprob: -18.474082946777344

Token 317: ' !=' (ID: 1666)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.1398757123970427e-05
    2. '.' → logprob: -11.625011444091797
    3. '.x' → logprob: -13.750011444091797
    4. '.Left' → logprob: -14.375011444091797
    5. ' .' → logprob: -14.625011444091797
    6. '.right' → logprob: -16.125011444091797
    7. 'left' → logprob: -16.250011444091797
    8. '.lower' → logprob: -17.125011444091797
    9. '.has' → logprob: -17.500011444091797
    10. '<|end|>' → logprob: -17.750011444091797

Token 318: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.055168189108371735
    2. ' None' → logprob: -2.9301681518554688
    3. 'x' → logprob: -8.305168151855469
    4. ' x' → logprob: -10.430168151855469
    5. '(None' → logprob: -12.055168151855469
    6. '=None' → logprob: -14.305168151855469
    7. ' ' → logprob: -14.305168151855469
    8. '0' → logprob: -14.430168151855469
    9. '_None' → logprob: -14.430168151855469
    10. 'null' → logprob: -15.180168151855469

Token 319: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4546254575252533
    2. 'and' → logprob: -1.4546254873275757
    3. '.left' → logprob: -2.079625368118286
    4. 'x' → logprob: -5.329625606536865
    5. '.x' → logprob: -6.704625606536865
    6. '   ' → logprob: -8.079625129699707
    7. 'left' → logprob: -8.329625129699707
    8. '.' → logprob: -9.329625129699707
    9. ' x' → logprob: -9.579625129699707
    10. '.Left' → logprob: -10.454625129699707

Token 320: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004697122611105442
    2. ' x' → logprob: -5.754697322845459
    3. '   ' → logprob: -6.504697322845459
    4. 'left' → logprob: -11.2546968460083
    5. '	x' → logprob: -11.8796968460083
    6. '       ' → logprob: -13.7546968460083
    7. ' ' → logprob: -15.2546968460083
    8. ' left' → logprob: -15.3796968460083
    9. ' and' → logprob: -16.129697799682617
    10. 'and' → logprob: -16.129697799682617

Token 321: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02411690540611744
    2. ' x' → logprob: -3.7741169929504395
    3. 'if' → logprob: -7.5241169929504395
    4. '   ' → logprob: -8.524116516113281
    5. ' if' → logprob: -9.024116516113281
    6. '	x' → logprob: -12.149116516113281
    7. '    ' → logprob: -12.774116516113281
    8. ' ' → logprob: -12.899116516113281
    9. '  ' → logprob: -14.649116516113281
    10. 'left' → logprob: -14.899116516113281

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010280822403728962
    2. '=' → logprob: -4.635280609130859
    3. '=x' → logprob: -7.885280609130859
    4. 'x' → logprob: -9.38528060913086
    5. '<|end|>' → logprob: -10.38528060913086
    6. ' ' → logprob: -10.88528060913086
    7. ' x' → logprob: -11.76028060913086
    8. 'left' → logprob: -13.76028060913086
    9. '=
' → logprob: -14.01028060913086
    10. '   ' → logprob: -14.26028060913086

Token 323: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07888989895582199
    2. ' x' → logprob: -2.578889846801758
    3. '<|end|>' → logprob: -16.453889846801758
    4. ' ' → logprob: -16.953889846801758
    5. '	x' → logprob: -17.203889846801758
    6. '(x' → logprob: -18.828889846801758
    7. ')x' → logprob: -19.328889846801758
    8. '   ' → logprob: -20.078889846801758
    9. '>x' → logprob: -20.078889846801758
    10. '"x' → logprob: -20.328889846801758

Token 324: '
' (ID: 198)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.left' → logprob: -6.64708495605737e-05
    2. 'left' → logprob: -9.625066757202148
    3. '.' → logprob: -16.37506675720215
    4. ' left' → logprob: -16.37506675720215
    5. '   ' → logprob: -16.87506675720215
    6. ' .' → logprob: -17.25006675720215
    7. '	left' → logprob: -17.37506675720215
    8. '.x' → logprob: -18.00006675720215
    9. '[left' → logprob: -18.50006675720215
    10. '.Left' → logprob: -18.62506675720215

Token 325: '       ' (ID: 309)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.5347739458084106
    2. ' =' → logprob: -1.0347739458084106
    3. 'left' → logprob: -3.159773826599121
    4. '=' → logprob: -4.159773826599121
    5. ' left' → logprob: -8.034773826599121
    6. 'x' → logprob: -8.909773826599121
    7. '	left' → logprob: -9.409773826599121
    8. ' ' → logprob: -10.034773826599121
    9. '=x' → logprob: -10.159773826599121
    10. '   ' → logprob: -10.159773826599121

Token 326: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.004629245959222317
    2. ' x' → logprob: -5.379629135131836
    3. 'left' → logprob: -12.379629135131836
    4. '   ' → logprob: -12.629629135131836
    5. ' left' → logprob: -14.504629135131836
    6. 'if' → logprob: -14.754629135131836
    7. '	x' → logprob: -15.254629135131836
    8. ' ' → logprob: -15.379629135131836
    9. '  ' → logprob: -16.629629135131836
    10. '    ' → logprob: -17.004629135131836

Token 327: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2894040644168854
    2. '.left' → logprob: -1.789404034614563
    3. ' =' → logprob: -2.5394041538238525
    4. 'left' → logprob: -5.289403915405273
    5. '=x' → logprob: -8.664403915405273
    6. '=y' → logprob: -10.789403915405273
    7. '.' → logprob: -10.914403915405273
    8. '.x' → logprob: -11.289403915405273
    9. 'x' → logprob: -11.664403915405273
    10. ' left' → logprob: -11.664403915405273

Token 328: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005245498847216368
    2. ' y' → logprob: -5.505245685577393
    3. 'x' → logprob: -6.755245685577393
    4. ' x' → logprob: -14.255245208740234
    5. '	y' → logprob: -14.505245208740234
    6. 'y's' → logprob: -15.630245208740234
    7. '<|end|>' → logprob: -16.005245208740234
    8. ')y' → logprob: -16.380245208740234
    9. '(y' → logprob: -17.130245208740234
    10. ''y' → logprob: -17.380245208740234

Token 329: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0019305398454889655
    2. 'left' → logprob: -6.2519307136535645
    3. ' left' → logprob: -14.251930236816406
    4. '.' → logprob: -14.376930236816406
    5. '.right' → logprob: -14.376930236816406
    6. '	left' → logprob: -17.126930236816406
    7. ' .' → logprob: -17.376930236816406
    8. ' ' → logprob: -17.501930236816406
    9. '[left' → logprob: -17.626930236816406
    10. 'Left' → logprob: -18.001930236816406

Token 330: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0442814826965332
    2. ' y' → logprob: -1.7942814826965332
    3. ' return' → logprob: -1.9192814826965332
    4. '<|end|>' → logprob: -2.044281482696533
    5. '   ' → logprob: -2.794281482696533
    6. ' None' → logprob: -2.919281482696533
    7. ' ' → logprob: -3.169281482696533
    8. 'None' → logprob: -3.669281482696533
    9. 'y' → logprob: -4.419281482696533
    10. '
' → logprob: -6.294281482696533

Token 331: '   ' (ID: 271)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -1.0299867391586304
    2. 'y' → logprob: -1.2799867391586304
    3. 'return' → logprob: -1.2799867391586304
    4. ' return' → logprob: -2.90498685836792
    5. '   ' → logprob: -4.65498685836792
    6. '       ' → logprob: -4.77998685836792
    7. '<|end|>' → logprob: -5.15498685836792
    8. ' None' → logprob: -6.40498685836792
    9. ')' → logprob: -6.52998685836792
    10. '.y' → logprob: -6.65498685836792

Token 332: ' return' (ID: 622)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.43624037504196167
    2. 'return' (adapté à ' return') → logprob: -1.4362404346466064
    3. ' y' → logprob: -2.3112404346466064
    4. ' return' → logprob: -5.061240196228027
    5. ')' → logprob: -5.186240196228027
    6. 'None' → logprob: -7.061240196228027
    7. '<|end|>' → logprob: -7.061240196228027
    8. '   ' → logprob: -7.561240196228027
    9. '       ' → logprob: -7.561240196228027
    10. ' None' → logprob: -8.061240196228027

Token 333: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01815006136894226
    2. ' y' → logprob: -4.0181498527526855
    3. 'None' → logprob: -16.143150329589844
    4. ''y' → logprob: -18.893150329589844
    5. '	y' → logprob: -19.143150329589844
    6. '(y' → logprob: -19.393150329589844
    7. ' None' → logprob: -20.143150329589844
    8. ' ' → logprob: -20.518150329589844
    9. 'y's' → logprob: -20.768150329589844
    10. 'x' → logprob: -21.643150329589844

Token 334: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2869114875793457
    2. '<|end|>' → logprob: -1.9119114875793457
    3. ')' → logprob: -2.4119114875793457
    4. 'n' → logprob: -6.161911487579346
    5. '   ' → logprob: -6.536911487579346
    6. ',' → logprob: -6.536911487579346
    7. ':' → logprob: -7.036911487579346
    8. '[' → logprob: -7.161911487579346
    9. ' None' → logprob: -7.536911487579346
    10. ' )' → logprob: -7.536911487579346

Token 335: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6284823417663574
    2. ' ' → logprob: -0.8784823417663574
    3. 'n' → logprob: -4.878482341766357
    4. '<|end|>' → logprob: -4.878482341766357
    5. '   ' → logprob: -5.003482341766357
    6. ':' → logprob: -5.503482341766357
    7. ',' → logprob: -5.628482341766357
    8. '#' → logprob: -5.628482341766357
    9. '(' → logprob: -6.253482341766357
    10. 'r' → logprob: -6.503482341766357

Token 336: ' delete' (ID: 6168)
  Prédit: ' inorder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inorder' → logprob: -0.41988644003868103
    2. ' transplant' → logprob: -2.169886350631714
    3. 'in' → logprob: -2.794886350631714
    4. ' main' → logprob: -3.044886350631714
    5. ' tree' → logprob: -3.419886350631714
    6. ' in' → logprob: -3.919886350631714
    7. ' left' → logprob: -5.169886589050293
    8. ' minimum' → logprob: -5.169886589050293
    9. ' insert' → logprob: -5.419886589050293
    10. 'trans' → logprob: -5.419886589050293

Token 337: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.5242172479629517
    2. '(' → logprob: -0.8992172479629517
    3. '(Node' → logprob: -7.524217128753662
    4. ' (' → logprob: -8.64921760559082
    5. '(node' → logprob: -8.64921760559082
    6. '(Tree' → logprob: -9.39921760559082
    7. '(root' → logprob: -9.64921760559082
    8. '(x' → logprob: -11.14921760559082
    9. '(
' → logprob: -11.89921760559082
    10. 'Node' → logprob: -12.27421760559082

Token 338: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001314295077463612
    2. ',z' → logprob: -9.625131607055664
    3. ',x' → logprob: -9.750131607055664
    4. ' ,' → logprob: -12.625131607055664
    5. ',node' → logprob: -13.125131607055664
    6. ',n' → logprob: -14.750131607055664
    7. ',k' → logprob: -15.125131607055664
    8. ',y' → logprob: -15.125131607055664
    9. ',p' → logprob: -15.500131607055664
    10. ',T' → logprob: -15.625131607055664

Token 339: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008283290662802756
    2. ',' → logprob: -7.375828266143799
    3. '):
' → logprob: -9.000828742980957
    4. ')' → logprob: -9.875828742980957
    5. ' ):' → logprob: -11.000828742980957
    6. ',y' → logprob: -12.875828742980957
    7. '):
' → logprob: -13.500828742980957
    8. '   ' → logprob: -13.625828742980957
    9. ',x' → logprob: -13.750828742980957
    10. ':' → logprob: -13.750828742980957

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021140243858098984
    2. 'if' → logprob: -4.271140098571777
    3. 'y' → logprob: -5.396140098571777
    4. ' if' → logprob: -6.146140098571777
    5. '	if' → logprob: -8.646140098571777
    6. ' y' → logprob: -9.521140098571777
    7. '    ' → logprob: -11.646140098571777
    8. '	y' → logprob: -11.896140098571777
    9. 'p' → logprob: -12.396140098571777
    10. '    
' → logprob: -12.771140098571777

Token 341: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06011098623275757
    2. '   ' → logprob: -3.8101110458374023
    3. ' if' → logprob: -4.060111045837402
    4. 'pass' → logprob: -4.685111045837402
    5. 'y' → logprob: -5.310111045837402
    6. 'def' → logprob: -5.810111045837402
    7. '	if' → logprob: -7.060111045837402
    8. ' pass' → logprob: -7.685111045837402
    9. '#' (adapté à ' #') → logprob: -8.685111045837402
    10. '    ' → logprob: -9.435111045837402

Token 342: 'print' (ID: 1598)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1858215034008026
    2. 'if' → logprob: -1.935821533203125
    3. 'def' → logprob: -3.935821533203125
    4. ' pass' → logprob: -6.560821533203125
    5. ' def' → logprob: -6.810821533203125
    6. ' y' → logprob: -7.185821533203125
    7. 'y' → logprob: -7.310821533203125
    8. 'trans' → logprob: -7.560821533203125
    9. 'pass' → logprob: -7.685821533203125
    10. '   ' → logprob: -8.560821533203125

Token 343: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4471437931060791
    2. '()' → logprob: -1.697143793106079
    3. '("' → logprob: -2.072143793106079
    4. '('' → logprob: -3.322143793106079
    5. '(x' → logprob: -4.4471435546875
    6. '(T' → logprob: -6.4471435546875
    7. ' ' → logprob: -7.8221435546875
    8. '("")' → logprob: -7.9471435546875
    9. '("""' → logprob: -7.9471435546875
    10. '(
' → logprob: -8.9471435546875

Token 344: '.key' (ID: 8839)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006778492126613855
    2. '.right' → logprob: -5.631778717041016
    3. ' )' → logprob: -6.881778717041016
    4. '.left' → logprob: -7.006778717041016
    5. ' ==' → logprob: -7.881778717041016
    6. '.p' → logprob: -8.381778717041016
    7. '==' → logprob: -8.756778717041016
    8. '.key' → logprob: -9.006778717041016
    9. ',' → logprob: -9.006778717041016
    10. ' is' → logprob: -9.256778717041016

Token 345: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007791309617459774
    2. '   ' → logprob: -7.750779151916504
    3. ')
' → logprob: -8.875779151916504
    4. ' )' → logprob: -8.875779151916504
    5. ' if' → logprob: -10.250779151916504
    6. ' ' → logprob: -11.875779151916504
    7. ')#' → logprob: -12.000779151916504
    8. ',' → logprob: -12.250779151916504
    9. '  ' → logprob: -12.375779151916504
    10. ')x' → logprob: -13.125779151916504

Token 346: ' id' (ID: 1211)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.35066965222358704
    2. ')' → logprob: -1.7256696224212646
    3. '"' → logprob: -3.1006696224212646
    4. ' x' → logprob: -3.4756696224212646
    5. 'end' → logprob: -4.725669860839844
    6. ''' → logprob: -4.975669860839844
    7. '")' → logprob: -5.350669860839844
    8. ' ' → logprob: -5.725669860839844
    9. '"x' → logprob: -5.850669860839844
    10. '",' → logprob: -5.975669860839844

Token 347: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2926379442214966
    2. '(' → logprob: -1.7926379442214966
    3. ')' → logprob: -2.917637825012207
    4. '(T' → logprob: -3.667637825012207
    5. 'x' → logprob: -5.542637825012207
    6. '(
' → logprob: -6.542637825012207
    7. ',' → logprob: -7.042637825012207
    8. ')
' → logprob: -8.417637825012207
    9. '
' → logprob: -8.542637825012207
    10. ',x' → logprob: -8.792637825012207

Token 348: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01194875966757536
    2. '))' → logprob: -4.511948585510254
    3. ')
' → logprob: -7.636948585510254
    4. '),' → logprob: -9.386948585510254
    5. ' )' → logprob: -9.511948585510254
    6. '))
' → logprob: -9.761948585510254
    7. '.right' → logprob: -10.136948585510254
    8. ',' → logprob: -10.511948585510254
    9. ')x' → logprob: -10.636948585510254
    10. '.left' → logprob: -10.761948585510254

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04335608705878258
    2. ' if' → logprob: -3.54335618019104
    3. '	if' → logprob: -5.293355941772461
    4. '    ' → logprob: -5.293355941772461
    5. '<|end|>' → logprob: -5.918355941772461
    6. ' ' → logprob: -8.918355941772461
    7. '	' → logprob: -9.043355941772461
    8. ',' → logprob: -9.293355941772461
    9. '  ' → logprob: -9.668355941772461
    10. '    
' → logprob: -9.793355941772461

Token 350: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13126149773597717
    2. ' if' → logprob: -2.2562615871429443
    3. 'def' → logprob: -4.256261348724365
    4. '   ' → logprob: -6.256261348724365
    5. 'y' → logprob: -6.631261348724365
    6. ' y' → logprob: -7.506261348724365
    7. '	if' → logprob: -9.006261825561523
    8. ' def' → logprob: -9.381261825561523
    9. ' ' → logprob: -9.756261825561523
    10. 'z' → logprob: -11.381261825561523

Token 351: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015054593095555902
    2. ' x' → logprob: -6.501505374908447
    3. '(x' → logprob: -14.001505851745605
    4. '   ' → logprob: -14.376505851745605
    5. 'not' → logprob: -14.376505851745605
    6. ' ' → logprob: -14.626505851745605
    7. '	x' → logprob: -15.376505851745605
    8. ' not' → logprob: -15.376505851745605
    9. 'T' → logprob: -15.626505851745605
    10. '  ' → logprob: -16.37650489807129

Token 352: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -3.7146746763028204e-05
    2. '.right' → logprob: -10.37503719329834
    3. '.p' → logprob: -12.25003719329834
    4. '.' → logprob: -14.00003719329834
    5. 'left' → logprob: -15.87503719329834
    6. '==' → logprob: -17.125036239624023
    7. '.parent' → logprob: -17.750036239624023
    8. '.Left' → logprob: -17.875036239624023
    9. ' .' → logprob: -18.375036239624023
    10. '.key' → logprob: -18.750036239624023

Token 353: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5876341462135315
    2. '==' → logprob: -0.8376341462135315
    3. ' is' → logprob: -4.462634086608887
    4. ' None' → logprob: -10.587634086608887
    5. 'None' → logprob: -10.712634086608887
    6. ' ' → logprob: -11.462634086608887
    7. 'is' → logprob: -11.837634086608887
    8. '	' → logprob: -11.962634086608887
    9. ' !=' → logprob: -12.212634086608887
    10. '<|end|>' → logprob: -12.212634086608887

Token 354: ' x' (ID: 1215)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.008615872822701931
    2. ' None' → logprob: -4.758615970611572
    3. ' ' → logprob: -14.383615493774414
    4. '   ' → logprob: -14.883615493774414
    5. '_None' → logprob: -15.383615493774414
    6. '=None' → logprob: -16.383615493774414
    7. '(None' → logprob: -16.508615493774414
    8. '  ' → logprob: -16.758615493774414
    9. 'none' → logprob: -17.758615493774414
    10. '0' → logprob: -18.633615493774414

Token 355: '.right' (ID: 17627)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.5294934511184692
    2. 'None' → logprob: -1.0294934511184692
    3. ' None' → logprob: -3.2794933319091797
    4. '.right' → logprob: -4.65449333190918
    5. '.' → logprob: -5.77949333190918
    6. 'left' → logprob: -6.27949333190918
    7. '   ' → logprob: -7.90449333190918
    8. '.none' → logprob: -8.02949333190918
    9. '=None' → logprob: -8.40449333190918
    10. ' ' → logprob: -8.77949333190918

Token 356: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47614145278930664
    2. '==' → logprob: -1.2261414527893066
    3. ' ==' → logprob: -2.9761414527893066
    4. '<|end|>' → logprob: -4.226141452789307
    5. '=None' → logprob: -5.226141452789307
    6. ' is' → logprob: -5.476141452789307
    7. ' and' → logprob: -6.101141452789307
    8. ':
' → logprob: -6.351141452789307
    9. '<|end|>' → logprob: -6.351141452789307
    10. '=' → logprob: -6.476141452789307

Token 357: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0011705794604495168
    2. ' None' → logprob: -6.751170635223389
    3. '=None' → logprob: -15.62617015838623
    4. '_None' → logprob: -16.251171112060547
    5. ' ' → logprob: -16.626171112060547
    6. '(None' → logprob: -16.876171112060547
    7. '   ' → logprob: -17.626171112060547
    8. '  ' → logprob: -18.626171112060547
    9. 'none' → logprob: -19.376171112060547
    10. ',None' → logprob: -19.751171112060547

Token 358: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08956234157085419
    2. ':
' → logprob: -2.46456241607666
    3. '   ' → logprob: -8.08956241607666
    4. '       ' → logprob: -8.33956241607666
    5. ':return' → logprob: -9.96456241607666
    6. ' :' → logprob: -11.21456241607666
    7. ' :
' → logprob: -12.08956241607666
    8. ':
' → logprob: -12.71456241607666
    9. ' and' → logprob: -13.21456241607666
    10. ',' → logprob: -13.46456241607666

Token 359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6345191597938538
    2. '   ' → logprob: -0.7595191597938538
    3. ' return' → logprob: -6.884519100189209
    4. 'return' → logprob: -7.509519100189209
    5. ' if' → logprob: -8.509519577026367
    6. ':
' → logprob: -10.384519577026367
    7. 'if' → logprob: -10.884519577026367
    8. ':' → logprob: -11.009519577026367
    9. ':return' → logprob: -11.259519577026367
    10. '
' → logprob: -12.009519577026367

Token 360: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.049980975687503815
    2. 'y' → logprob: -3.174980878829956
    3. '   ' → logprob: -5.424981117248535
    4. ' if' → logprob: -6.174981117248535
    5. 'p' → logprob: -8.049981117248535
    6. ' y' → logprob: -9.549981117248535
    7. ' ' → logprob: -9.924981117248535
    8. '  ' → logprob: -12.174981117248535
    9. '
' → logprob: -12.299981117248535
    10. 'return' → logprob: -12.424981117248535

Token 361: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00444839708507061
    2. 'y' → logprob: -6.004448413848877
    3. '   ' → logprob: -6.504448413848877
    4. ' if' → logprob: -7.879448413848877
    5. 'p' → logprob: -10.129447937011719
    6. '
' → logprob: -11.004447937011719
    7. ' ' → logprob: -11.629447937011719
    8. 'return' → logprob: -11.629447937011719
    9. '#' → logprob: -12.254447937011719
    10. ' y' → logprob: -12.879447937011719

Token 362: '("' (ID: 568)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0371193885803223
    2. '("' → logprob: -1.5371193885803223
    3. '"x' → logprob: -2.1621193885803223
    4. '"T' → logprob: -3.0371193885803223
    5. '('' → logprob: -3.1621193885803223
    6. '(x' → logprob: -3.1621193885803223
    7. 'if' → logprob: -3.2871193885803223
    8. '(' → logprob: -3.2871193885803223
    9. ''' → logprob: -3.4121193885803223
    10. '   ' → logprob: -4.412119388580322

Token 363: 'x' (ID: 87)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06667396426200867
    2. '   ' → logprob: -2.941673994064331
    3. ' if' → logprob: -5.066673755645752
    4. 'y' → logprob: -5.441673755645752
    5. ' y' → logprob: -7.566673755645752
    6. '       ' → logprob: -8.19167423248291
    7. 'x' → logprob: -9.06667423248291
    8. ' ' → logprob: -10.56667423248291
    9. 'return' → logprob: -10.69167423248291
    10. ')' → logprob: -10.69167423248291

Token 364: '.left' (ID: 15388)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.2536796033382416
    2. ' ==' → logprob: -2.0036795139312744
    3. '==' → logprob: -2.7536795139312744
    4. ')' → logprob: -4.3786797523498535
    5. 'p' → logprob: -5.8786797523498535
    6. '=' → logprob: -6.0036797523498535
    7. '.' → logprob: -6.1286797523498535
    8. ' ' → logprob: -6.7536797523498535
    9. ' is' → logprob: -7.0036797523498535
    10. ' =' → logprob: -7.2536797523498535

Token 365: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6036605834960938
    2. ' ==' → logprob: -1.8536605834960938
    3. ' =' → logprob: -2.3536605834960938
    4. '=' → logprob: -2.4786605834960938
    5. ')' → logprob: -2.7286605834960938
    6. '==' → logprob: -3.8536605834960938
    7. ',' → logprob: -4.228660583496094
    8. '=None' → logprob: -5.728660583496094
    9. ' )' → logprob: -6.103660583496094
    10. '.p' → logprob: -6.353660583496094

Token 366: ' x' (ID: 1215)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01227499358355999
    2. 'x' → logprob: -4.762275218963623
    3. ' None' → logprob: -5.637275218963623
    4. '=None' → logprob: -10.012274742126465
    5. ' x' → logprob: -10.762274742126465
    6. 'y' → logprob: -11.137274742126465
    7. '(None' → logprob: -12.262274742126465
    8. '_None' → logprob: -13.512274742126465
    9. 'none' → logprob: -14.387274742126465
    10. ',None' → logprob: -14.512274742126465

Token 367: '.right' (ID: 17627)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09944015741348267
    2. ' ==' → logprob: -2.474440097808838
    3. 'None' → logprob: -5.349440097808838
    4. 'right' → logprob: -6.099440097808838
    5. '.right' → logprob: -6.099440097808838
    6. '=' → logprob: -7.849440097808838
    7. ' None' → logprob: -8.099440574645996
    8. '=None' → logprob: -9.474440574645996
    9. ' ' → logprob: -9.724440574645996
    10. '==
' → logprob: -9.849440574645996

Token 368: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6934863924980164
    2. '==' → logprob: -1.0684864521026611
    3. '")' → logprob: -2.943486452102661
    4. '=' → logprob: -2.943486452102661
    5. ' ==' → logprob: -3.443486452102661
    6. ')' → logprob: -4.818486213684082
    7. ' =' → logprob: -5.818486213684082
    8. '=None' → logprob: -6.193486213684082
    9. '   ' → logprob: -7.193486213684082
    10. ',' → logprob: -7.193486213684082

Token 369: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0009373087668791413
    2. 'x' → logprob: -7.500937461853027
    3. ' None' → logprob: -7.875937461853027
    4. 'True' → logprob: -14.000937461853027
    5. '=None' → logprob: -14.125937461853027
    6. '(None' → logprob: -14.250937461853027
    7. ' x' → logprob: -14.375937461853027
    8. 'none' → logprob: -14.750937461853027
    9. '0' → logprob: -15.250937461853027
    10. '   ' → logprob: -15.375937461853027

Token 370: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.7109965085983276
    2. '")
' → logprob: -1.0859965085983276
    3. '   ' → logprob: -2.085996627807617
    4. '\n' → logprob: -4.085996627807617
    5. '       ' → logprob: -4.335996627807617
    6. '
' → logprob: -5.460996627807617
    7. '"):
' → logprob: -5.710996627807617
    8. ')
' → logprob: -5.835996627807617
    9. ')' → logprob: -6.210996627807617
    10. ' ")
' → logprob: -6.835996627807617

Token 371: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04544507712125778
    2. ' if' → logprob: -3.420444965362549
    3. 'if' → logprob: -4.670444965362549
    4. ' y' → logprob: -6.420444965362549
    5. 'y' → logprob: -7.295444965362549
    6. '	if' → logprob: -11.045445442199707
    7. '       ' → logprob: -11.795445442199707
    8. 'p' → logprob: -12.045445442199707
    9. '    
' → logprob: -12.295445442199707
    10. ' p' → logprob: -12.670445442199707

Token 372: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.021296512335538864
    2. 'y' → logprob: -4.146296501159668
    3. '   ' → logprob: -5.521296501159668
    4. ' if' → logprob: -7.271296501159668
    5. 'p' → logprob: -7.646296501159668
    6. ' y' → logprob: -10.896296501159668
    7. 'return' → logprob: -10.896296501159668
    8. ' ' → logprob: -11.771296501159668
    9. 'parent' → logprob: -12.021296501159668
    10. 't' → logprob: -12.521296501159668

Token 373: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005389688070863485
    2. ' x' → logprob: -5.25538969039917
    3. 'T' → logprob: -8.880389213562012
    4. '(x' → logprob: -12.505389213562012
    5. ' ' → logprob: -12.630389213562012
    6. ' T' → logprob: -12.755389213562012
    7. '  ' → logprob: -13.005389213562012
    8. '   ' → logprob: -13.005389213562012
    9. '	x' → logprob: -13.380389213562012
    10. 'not' → logprob: -15.255389213562012

Token 374: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.03464754298329353
    2. ' ==' → logprob: -4.034647464752197
    3. '==' → logprob: -4.159647464752197
    4. 'p' → logprob: -7.284647464752197
    5. '=' → logprob: -11.284647941589355
    6. ' ' → logprob: -11.409647941589355
    7. '.' → logprob: -12.034647941589355
    8. ' p' → logprob: -12.159647941589355
    9. '```' → logprob: -12.159647941589355
    10. ' .' → logprob: -12.284647941589355

Token 375: '.key' (ID: 8839)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.38302528858184814
    2. ' ==' → logprob: -1.5080252885818481
    3. '==' → logprob: -2.6330251693725586
    4. ' is' → logprob: -4.258025169372559
    5. 'left' → logprob: -5.508025169372559
    6. '.right' → logprob: -6.008025169372559
    7. ' !=' → logprob: -6.133025169372559
    8. '!=' → logprob: -7.133025169372559
    9. '=None' → logprob: -7.258025169372559
    10. ' left' → logprob: -8.758025169372559

Token 376: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09888149052858353
    2. ' ==' → logprob: -2.973881483078003
    3. '>' → logprob: -3.348881483078003
    4. '==' → logprob: -5.473881721496582
    5. ' is' → logprob: -6.348881721496582
    6. ' <' → logprob: -6.598881721496582
    7. ' !=' → logprob: -8.223881721496582
    8. '>x' → logprob: -8.973881721496582
    9. ' ' → logprob: -9.973881721496582
    10. '<' → logprob: -10.348881721496582

Token 377: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004882152716163546
    2. ' x' → logprob: -7.62548828125
    3. '>x' → logprob: -17.12548828125
    4. '	x' → logprob: -17.25048828125
    5. '   ' → logprob: -17.25048828125
    6. '0' → logprob: -17.25048828125
    7. '<|end|>' → logprob: -17.75048828125
    8. ' ' → logprob: -17.87548828125
    9. ')x' → logprob: -18.00048828125
    10. 'key' → logprob: -18.62548828125

Token 378: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.00177763809915632
    2. 'key' → logprob: -6.376777648925781
    3. '.p' → logprob: -10.001777648925781
    4. '.' → logprob: -11.001777648925781
    5. ' key' → logprob: -12.126777648925781
    6. '.x' → logprob: -12.501777648925781
    7. ' .' → logprob: -13.376777648925781
    8. '   ' → logprob: -14.126777648925781
    9. 'p' → logprob: -14.751777648925781
    10. 'Key' → logprob: -14.876777648925781

Token 379: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19713765382766724
    2. ':
' → logprob: -1.8221375942230225
    3. ' and' → logprob: -4.197137832641602
    4. '       ' → logprob: -7.447137832641602
    5. '           ' → logprob: -7.697137832641602
    6. ' :' → logprob: -7.822137832641602
    7. ' :
' → logprob: -8.197137832641602
    8. 'and' → logprob: -8.822137832641602
    9. '):
' → logprob: -9.447137832641602
    10. ':

' → logprob: -9.947137832641602

Token 380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05052921548485756
    2. ' x' → logprob: -4.1755290031433105
    3. '
' → logprob: -4.5505290031433105
    4. 'x' → logprob: -4.5505290031433105
    5. ':
' → logprob: -5.6755290031433105
    6. '       ' → logprob: -5.9255290031433105
    7. '<|end|>' → logprob: -6.5505290031433105
    8. ':' → logprob: -6.9255290031433105
    9. ' and' → logprob: -7.3005290031433105
    10. '```' → logprob: -7.6755290031433105

Token 381: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.10026200115680695
    2. ' x' → logprob: -2.350261926651001
    3. '           ' → logprob: -10.100261688232422
    4. '       ' → logprob: -11.475261688232422
    5. '
' → logprob: -13.975261688232422
    6. '   ' → logprob: -14.100261688232422
    7. '<|end|>' → logprob: -14.350261688232422
    8. '               ' → logprob: -14.725261688232422
    9. '	x' → logprob: -14.975261688232422
    10. '    ' → logprob: -15.350261688232422

Token 382: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00033296257606707513
    2. '.' → logprob: -8.375332832336426
    3. 'p' → logprob: -10.250332832336426
    4. ' .' → logprob: -10.500332832336426
    5. '.x' → logprob: -11.250332832336426
    6. 'x' → logprob: -11.500332832336426
    7. ' ' → logprob: -12.875332832336426
    8. ' =' → logprob: -13.125332832336426
    9. '<p' → logprob: -13.375332832336426
    10. '=' → logprob: -13.500332832336426

Token 383: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.000491672137286514
    2. '.left' → logprob: -8.250492095947266
    3. '.' → logprob: -8.500492095947266
    4. ' .' → logprob: -10.750492095947266
    5. 'right' → logprob: -13.125492095947266
    6. '.Right' → logprob: -13.500492095947266
    7. '.r' → logprob: -14.375492095947266
    8. '.x' → logprob: -14.625492095947266
    9. '().' → logprob: -15.000492095947266
    10. '].' → logprob: -15.750492095947266

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38792601227760315
    2. ' =' → logprob: -1.1379259824752808
    3. '=None' → logprob: -6.88792610168457
    4. ' None' → logprob: -10.76292610168457
    5. 'None' → logprob: -11.38792610168457
    6. ',' → logprob: -14.26292610168457
    7. ' ' → logprob: -15.01292610168457
    8. '=null' → logprob: -15.38792610168457
    9. '(None' → logprob: -15.51292610168457
    10. '==' → logprob: -15.88792610168457

Token 385: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004078639671206474
    2. ' None' → logprob: -5.5040788650512695
    3. '(None' → logprob: -16.129077911376953
    4. '   ' → logprob: -16.254077911376953
    5. '_None' → logprob: -16.504077911376953
    6. '=None' → logprob: -17.254077911376953
    7. 'x' → logprob: -17.879077911376953
    8. ',None' → logprob: -18.504077911376953
    9. 'none' → logprob: -18.754077911376953
    10. '.None' → logprob: -19.129077911376953

Token 386: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021773584187030792
    2. '<|end|>' → logprob: -4.146773815155029
    3. 'else' → logprob: -5.521773815155029
    4. ' else' → logprob: -6.521773815155029
    5. 'elif' → logprob: -9.396773338317871
    6. '   ' → logprob: -9.521773338317871
    7. '<|end|>' → logprob: -10.271773338317871
    8. '
' → logprob: -10.771773338317871
    9. '      ' → logprob: -12.146773338317871
    10. ' elif' → logprob: -12.146773338317871

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008546437602490187
    2. '<|end|>' → logprob: -7.7508544921875
    3. 'else' → logprob: -8.6258544921875
    4. ' else' → logprob: -8.8758544921875
    5. '   ' → logprob: -9.3758544921875
    6. '<|end|>' → logprob: -12.5008544921875
    7. '
' → logprob: -12.6258544921875
    8. '      ' → logprob: -13.2508544921875
    9. '    
' → logprob: -13.5008544921875
    10. 'elif' → logprob: -13.5008544921875

Token 388: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.29358986020088196
    2. 'else' (adapté à ' else') → logprob: -1.4185898303985596
    3. '   ' → logprob: -4.543590068817139
    4. '       ' → logprob: -6.793590068817139
    5. ' elif' → logprob: -8.41858959197998
    6. 'elif' → logprob: -8.54358959197998
    7. '<|end|>' → logprob: -9.54358959197998
    8. '	else' → logprob: -9.91858959197998
    9. '    ' → logprob: -10.66858959197998
    10. '  ' → logprob: -10.91858959197998

Token 389: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3189848065376282
    2. ':
' → logprob: -1.3189847469329834
    3. '           ' → logprob: -5.1939849853515625
    4. ' :
' → logprob: -9.443984985351562
    5. ' :' → logprob: -10.943984985351562
    6. '       ' → logprob: -11.193984985351562
    7. '{' → logprob: -11.818984985351562
    8. '        ' → logprob: -12.068984985351562
    9. ':

' → logprob: -12.068984985351562
    10. ',' → logprob: -12.068984985351562

Token 390: '           ' (ID: 352)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2885580062866211
    2. '           ' → logprob: -1.413558006286621
    3. 'x' → logprob: -5.288558006286621
    4. ' ' → logprob: -6.788558006286621
    5. '   ' → logprob: -6.913558006286621
    6. '       ' → logprob: -9.413558006286621
    7. '  ' → logprob: -10.538558006286621
    8. '          ' → logprob: -10.788558006286621
    9. ' None' → logprob: -11.038558006286621
    10. ' ' → logprob: -11.038558006286621

Token 391: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.002475777640938759
    2. ' x' → logprob: -6.002475738525391
    3. '           ' → logprob: -16.37747573852539
    4. '   ' → logprob: -17.62747573852539
    5. '       ' → logprob: -17.75247573852539
    6. '	x' → logprob: -18.62747573852539
    7. ' ' → logprob: -19.00247573852539
    8. '
' → logprob: -20.87747573852539
    9. '               ' → logprob: -21.50247573852539
    10. '  ' → logprob: -21.62747573852539

Token 392: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.5690089639974758e-05
    2. '.' → logprob: -11.125015258789062
    3. '<p' → logprob: -14.625015258789062
    4. ' .' → logprob: -15.375015258789062
    5. 'p' → logprob: -16.125015258789062
    6. '	p' → logprob: -19.000015258789062
    7. ').' → logprob: -19.000015258789062
    8. '   ' → logprob: -19.250015258789062
    9. '.py' → logprob: -19.250015258789062

Token 393: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.250000953674316
    3. 'left' → logprob: -14.375000953674316
    4. '.right' → logprob: -17.375001907348633
    5. ' .' → logprob: -17.500001907348633
    6. '.Left' → logprob: -18.125001907348633
    7. '.le' → logprob: -18.500001907348633
    8. '[left' → logprob: -19.250001907348633
    9. '	left' → logprob: -20.375001907348633
    10. ':left' → logprob: -21.000001907348633

Token 394: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890741527080536
    2. ' =' → logprob: -2.5789074897766113
    3. '=None' → logprob: -10.953907012939453
    4. '   ' → logprob: -17.078907012939453
    5. ' ' → logprob: -17.203907012939453
    6. 'None' → logprob: -17.578907012939453
    7. '=
' → logprob: -17.703907012939453
    8. '<|end|>' → logprob: -17.953907012939453
    9. '(None' → logprob: -18.203907012939453
    10. '=False' → logprob: -18.328907012939453

Token 395: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001584850688232109
    2. ' None' → logprob: -8.750158309936523
    3. 'none' → logprob: -18.500158309936523
    4. '_None' → logprob: -18.625158309936523
    5. '(None' → logprob: -19.375158309936523
    6. '   ' → logprob: -20.250158309936523
    7. '0' → logprob: -20.375158309936523
    8. '=None' → logprob: -20.625158309936523
    9. ',None' → logprob: -20.625158309936523
    10. '.None' → logprob: -20.875158309936523

Token 396: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -1.05512273311615
    2. '
' → logprob: -1.55512273311615
    3. '<|end|>' → logprob: -1.55512273311615
    4. ' ' → logprob: -2.4301228523254395
    5. '   ' → logprob: -2.8051228523254395
    6. ' elif' → logprob: -2.9301228523254395
    7. 'else' → logprob: -4.6801228523254395
    8. ' else' → logprob: -5.3051228523254395
    9. '	elif' → logprob: -5.5551228523254395
    10. '  ' → logprob: -6.4301228523254395

Token 399: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.05495687201619148
    2. 'x' → logprob: -2.9299569129943848
    3. ' ' → logprob: -9.929956436157227
    4. '   ' → logprob: -11.554956436157227
    5. '(x' → logprob: -12.304956436157227
    6. ' not' → logprob: -12.554956436157227
    7. ' (' → logprob: -12.804956436157227
    8. '  ' → logprob: -13.304956436157227
    9. '	x' → logprob: -13.679956436157227
    10. 'not' → logprob: -13.929956436157227

Token 400: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -6.8497312895488e-05
    2. '.right' → logprob: -9.625068664550781
    3. '.' → logprob: -13.000068664550781
    4. 'left' → logprob: -16.12506866455078
    5. ' .' → logprob: -18.12506866455078
    6. '[left' → logprob: -18.37506866455078
    7. '.Left' → logprob: -18.50006866455078
    8. '	left' → logprob: -18.87506866455078
    9. '.le' → logprob: -19.12506866455078
    10. '   ' → logprob: -19.25006866455078

Token 401: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17510105669498444
    2. '==' → logprob: -1.9251010417938232
    3. ' is' → logprob: -4.675101280212402
    4. ' !=' → logprob: -5.675101280212402
    5. ' None' → logprob: -7.050101280212402
    6. ' ' → logprob: -7.800101280212402
    7. '!=' → logprob: -7.800101280212402
    8. 'None' → logprob: -8.425101280212402
    9. 'is' → logprob: -9.925101280212402
    10. '=None' → logprob: -11.300101280212402

Token 402: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06197194382548332
    2. ' None' → logprob: -2.81197190284729
    3. ' ' → logprob: -13.311971664428711
    4. 'x' → logprob: -14.186971664428711
    5. '   ' → logprob: -14.686971664428711
    6. '=None' → logprob: -14.686971664428711
    7. '(None' → logprob: -14.936971664428711
    8. '_None' → logprob: -15.311971664428711
    9. 'none' → logprob: -15.561971664428711
    10. '  ' → logprob: -16.31197166442871

Token 403: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021343659609556198
    2. ':
' → logprob: -3.89634370803833
    3. '       ' → logprob: -7.39634370803833
    4. ' or' → logprob: -9.271343231201172
    5. ' and' → logprob: -10.271343231201172
    6. ':

' → logprob: -10.771343231201172
    7. '   ' → logprob: -11.021343231201172
    8. ' :' → logprob: -11.771343231201172
    9. '<|end|>' → logprob: -12.646343231201172
    10. '	' → logprob: -13.271343231201172

Token 404: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4857070744037628
    2. ':
' → logprob: -1.4857070446014404
    3. '       ' → logprob: -1.8607070446014404
    4. '   ' → logprob: -6.2357072830200195
    5. ' and' → logprob: -8.23570728302002
    6. ' or' → logprob: -8.61070728302002
    7. ' :' → logprob: -9.36070728302002
    8. '	' → logprob: -9.48570728302002
    9. ',' → logprob: -9.61070728302002
    10. ' :
' → logprob: -9.73570728302002

Token 405: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.36586058139801025
    2. 'if' → logprob: -1.8658605813980103
    3. '   ' → logprob: -2.2408604621887207
    4. '       ' → logprob: -3.2408604621887207
    5. ' if' → logprob: -6.240860462188721
    6. ' x' → logprob: -6.615860462188721
    7. 'y' → logprob: -6.990860462188721
    8. 'temp' → logprob: -7.365860462188721
    9. 'z' → logprob: -7.865860462188721
    10. 'tmp' → logprob: -8.490860939025879

Token 406: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.030441628769040108
    2. 'x' → logprob: -3.5304415225982666
    3. '   ' → logprob: -7.780441761016846
    4. 'z' → logprob: -9.655441284179688
    5. ' if' → logprob: -10.280441284179688
    6. 'tmp' → logprob: -10.280441284179688
    7. '       ' → logprob: -10.405441284179688
    8. 'print' → logprob: -10.530441284179688
    9. 'temp' → logprob: -10.780441284179688
    10. 'y' → logprob: -11.030441284179688

Token 407: '("' (ID: 568)
  Prédit: '"x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"x' → logprob: -0.3484632968902588
    2. '"' → logprob: -1.9734632968902588
    3. '(x' → logprob: -2.348463296890259
    4. 'x' → logprob: -3.723463296890259
    5. '("' → logprob: -3.973463296890259
    6. ' x' → logprob: -4.34846305847168
    7. '"T' → logprob: -6.59846305847168
    8. '(' → logprob: -6.72346305847168
    9. ' "' → logprob: -7.09846305847168
    10. ' ' → logprob: -8.59846305847168

Token 408: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00197526509873569
    2. ' x' → logprob: -6.751975059509277
    3. '       ' → logprob: -7.626975059509277
    4. '   ' → logprob: -8.501975059509277
    5. 'if' → logprob: -9.376975059509277
    6. ' ' → logprob: -11.876975059509277
    7. 'print' → logprob: -12.251975059509277
    8. '```' → logprob: -12.251975059509277
    9. '           ' → logprob: -12.376975059509277
    10. '"x' → logprob: -13.001975059509277

Token 409: '.left' (ID: 15388)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.25958362221717834
    2. '.right' → logprob: -1.509583592414856
    3. '.left' → logprob: -5.509583473205566
    4. 'right' → logprob: -6.384583473205566
    5. '.' → logprob: -6.634583473205566
    6. '   ' → logprob: -9.009583473205566
    7. ' ' → logprob: -9.259583473205566
    8. 'p' → logprob: -9.509583473205566
    9. '=' → logprob: -9.634583473205566
    10. ')' → logprob: -10.384583473205566

Token 410: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.015378029085695744
    2. ' is' → logprob: -4.390377998352051
    3. '==' → logprob: -6.140377998352051
    4. ' ' → logprob: -8.39037799835205
    5. ' =' → logprob: -8.64037799835205
    6. ')' → logprob: -9.51537799835205
    7. ',' → logprob: -10.01537799835205
    8. ' !=' → logprob: -10.76537799835205
    9. ' )' → logprob: -10.76537799835205
    10. ' right' → logprob: -10.89037799835205

Token 411: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5808743834495544
    2. ' x' → logprob: -1.4558744430541992
    3. ' None' → logprob: -2.205874443054199
    4. 'x' → logprob: -2.330874443054199
    5. ' ' → logprob: -10.7058744430542
    6. '   ' → logprob: -13.2058744430542
    7. 'True' → logprob: -14.2058744430542
    8. '_None' → logprob: -14.3308744430542
    9. '(None' → logprob: -14.4558744430542
    10. '0' → logprob: -14.4558744430542

Token 412: '")
' (ID: 1896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8954266905784607
    2. '")
' → logprob: -1.2704267501831055
    3. '"):
' → logprob: -1.7704267501831055
    4. '")' → logprob: -2.1454267501831055
    5. '   ' → logprob: -4.0204267501831055
    6. '\n' → logprob: -6.2704267501831055
    7. ' ")
' → logprob: -6.5204267501831055
    8. ':' → logprob: -7.6454267501831055
    9. '           ' → logprob: -8.145426750183105
    10. '"):' → logprob: -8.770426750183105

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049929942935705185
    2. '   ' → logprob: -3.0499298572540283
    3. 'x' → logprob: -7.674930095672607
    4. ' x' → logprob: -8.17492961883545
    5. ' if' → logprob: -8.54992961883545
    6. '```' → logprob: -9.29992961883545
    7. 'if' → logprob: -9.54992961883545
    8. '           ' → logprob: -9.92492961883545
    9. '
' → logprob: -10.04992961883545
    10. ' ' → logprob: -10.54992961883545

Token 414: ' y' (ID: 342)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06512496620416641
    2. 'x' → logprob: -2.815124988555908
    3. '   ' → logprob: -6.690124988555908
    4. 'temp' → logprob: -7.065124988555908
    5. 'tmp' → logprob: -7.690124988555908
    6. 'z' → logprob: -8.44012451171875
    7. '       ' → logprob: -8.69012451171875
    8. 'y' (adapté à ' y') → logprob: -9.56512451171875
    9. 't' → logprob: -10.31512451171875
    10. ' if' → logprob: -10.94012451171875

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02328786998987198
    2. '=' → logprob: -3.773287773132324
    3. '=x' → logprob: -10.398287773132324
    4. '   ' → logprob: -12.148287773132324
    5. '=y' → logprob: -12.648287773132324
    6. ',' → logprob: -13.273287773132324
    7. 'x' → logprob: -15.023287773132324
    8. ' ' → logprob: -15.023287773132324
    9. '=p' → logprob: -15.023287773132324
    10. '       ' → logprob: -15.648287773132324

Token 416: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.033652156591415405
    2. ' x' → logprob: -3.4086520671844482
    3. ' ' → logprob: -12.783652305603027
    4. '   ' → logprob: -13.283652305603027
    5. '	x' → logprob: -14.408652305603027
    6. '(x' → logprob: -14.408652305603027
    7. 'get' → logprob: -14.908652305603027
    8. 'delete' → logprob: -15.158652305603027
    9. '  ' → logprob: -15.658652305603027
    10. '    ' → logprob: -17.28365135192871

Token 417: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0012286811834201217
    2. 'right' → logprob: -7.3762288093566895
    3. '.p' → logprob: -7.6262288093566895
    4. '.left' → logprob: -9.251228332519531
    5. '.x' → logprob: -12.251228332519531
    6. 'p' → logprob: -12.376228332519531
    7. '.' → logprob: -13.376228332519531
    8. '.parent' → logprob: -13.376228332519531
    9. '   ' → logprob: -14.126228332519531
    10. '	right' → logprob: -14.251228332519531

Token 418: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004481273703277111
    2. '   ' → logprob: -6.004481315612793
    3. '<|end|>' → logprob: -6.879481315612793
    4. 'x' → logprob: -7.754481315612793
    5. '<|end|>' → logprob: -8.379481315612793
    6. ' y' → logprob: -9.504481315612793
    7. 'y' → logprob: -10.129481315612793
    8. '#' → logprob: -10.254481315612793
    9. '
' → logprob: -10.379481315612793
    10. ' x' → logprob: -10.504481315612793

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0054516978561878204
    2. '   ' → logprob: -5.630451679229736
    3. 'y' → logprob: -6.880451679229736
    4. 'x' → logprob: -7.880451679229736
    5. ' y' → logprob: -7.880451679229736
    6. '<|end|>' → logprob: -10.755452156066895
    7. ')' → logprob: -11.880452156066895
    8. ',' → logprob: -12.255452156066895
    9. '           ' → logprob: -12.380452156066895
    10. ',y' → logprob: -12.380452156066895

Token 420: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07153336703777313
    2. 'if' → logprob: -2.696533441543579
    3. 'x' (adapté à ' x') → logprob: -7.196533203125
    4. '       ' → logprob: -7.321533203125
    5. '   ' → logprob: -9.071533203125
    6. ' if' → logprob: -10.696533203125
    7. ' y' → logprob: -10.946533203125
    8. 'elif' → logprob: -11.446533203125
    9. 'z' → logprob: -11.696533203125
    10. '
' → logprob: -12.446533203125

Token 421: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.10117977857589722
    2. '.right' → logprob: -2.851179838180542
    3. '.p' → logprob: -3.351179838180542
    4. '.left' → logprob: -6.101179599761963
    5. 'key' → logprob: -7.851179599761963
    6. 'right' → logprob: -7.976179599761963
    7. 'p' → logprob: -8.601180076599121
    8. ' =' → logprob: -9.226180076599121
    9. '_key' → logprob: -9.976180076599121
    10. '=' → logprob: -10.601180076599121

Token 422: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6939279437065125
    2. ' =' → logprob: -0.6939279437065125
    3. ',' → logprob: -7.193927764892578
    4. '=y' → logprob: -11.568927764892578
    5. ' ,' → logprob: -11.693927764892578
    6. ',y' → logprob: -12.693927764892578
    7. ' y' → logprob: -12.818927764892578
    8. 'y' → logprob: -13.193927764892578
    9. ' ' → logprob: -14.318927764892578
    10. '.=' → logprob: -14.443927764892578

Token 423: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.31326213479042053
    2. ' y' → logprob: -1.3132621049880981
    3. '	y' → logprob: -15.438261985778809
    4. 'x' → logprob: -16.563262939453125
    5. '       ' → logprob: -16.688262939453125
    6. '   ' → logprob: -16.938262939453125
    7. '    ' → logprob: -18.313262939453125
    8. ' x' → logprob: -18.563262939453125
    9. ')y' → logprob: -19.313262939453125
    10. ''y' → logprob: -19.438262939453125

Token 424: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -13.00000286102295
    3. 'key' → logprob: -15.12500286102295
    4. ' .' → logprob: -15.25000286102295
    5. '.left' → logprob: -16.750001907348633
    6. ' key' → logprob: -19.625001907348633
    7. '   ' → logprob: -20.500001907348633
    8. ',key' → logprob: -20.875001907348633
    9. '.Key' → logprob: -21.125001907348633
    10. '	key' → logprob: -21.125001907348633

Token 425: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031349360942840576
    2. 'x' → logprob: -6.003134727478027
    3. ',' → logprob: -8.378134727478027
    4. ' x' → logprob: -8.503134727478027
    5. '   ' → logprob: -9.378134727478027
    6. '<|end|>' → logprob: -9.753134727478027
    7. ',x' → logprob: -9.878134727478027
    8. '
' → logprob: -11.378134727478027
    9. '           ' → logprob: -12.503134727478027
    10. '	x' → logprob: -12.753134727478027

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008835912682116032
    2. 'x' → logprob: -4.883835792541504
    3. '<|end|>' → logprob: -7.508835792541504
    4. ' x' → logprob: -8.133835792541504
    5. ',' → logprob: -8.883835792541504
    6. '   ' → logprob: -9.008835792541504
    7. ',x' → logprob: -10.133835792541504
    8. '	x' → logprob: -10.883835792541504
    9. '
' → logprob: -11.008835792541504
    10. '	' → logprob: -11.258835792541504

Token 427: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -2.935296834039036e-06
    2. '       ' → logprob: -13.37500286102295
    3. '   ' → logprob: -13.62500286102295
    4. ' x' → logprob: -15.75000286102295
    5. '           ' → logprob: -19.000003814697266
    6. 'y' → logprob: -20.250003814697266
    7. '	x' → logprob: -20.625003814697266
    8. '(x' → logprob: -21.000003814697266
    9. '```' → logprob: -21.500003814697266
    10. '#' → logprob: -21.625003814697266

Token 428: '.right' (ID: 17627)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.38700392842292786
    2. '.right' → logprob: -1.1370038986206055
    3. '.p' → logprob: -9.387003898620605
    4. '.key' → logprob: -10.262003898620605
    5. '.' → logprob: -11.512003898620605
    6. 'left' → logprob: -13.387003898620605
    7. 'right' → logprob: -13.512003898620605
    8. ' .' → logprob: -15.137003898620605
    9. '=' → logprob: -15.887003898620605
    10. '.parent' → logprob: -16.137004852294922

Token 429: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1800163984298706
    2. '=' → logprob: -1.8050163984298706
    3. '<|end|>' → logprob: -9.18001651763916
    4. '=y' → logprob: -9.80501651763916
    5. ' y' → logprob: -10.18001651763916
    6. ',' → logprob: -10.55501651763916
    7. 'y' → logprob: -10.55501651763916
    8. ')' → logprob: -12.43001651763916
    9. 's' → logprob: -12.55501651763916
    10. '<|end|>' → logprob: -12.68001651763916

Token 430: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0017031522002071142
    2. ' y' → logprob: -6.376703262329102
    3. 'x' → logprob: -14.751703262329102
    4. '	y' → logprob: -15.001703262329102
    5. '(y' → logprob: -16.2517032623291
    6. 'None' → logprob: -16.6267032623291
    7. '   ' → logprob: -16.7517032623291
    8. '<|end|>' → logprob: -17.7517032623291
    9. 'y's' → logprob: -18.3767032623291
    10. ' ' → logprob: -18.3767032623291

Token 431: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.008708884008228779
    2. '.left' → logprob: -4.758708953857422
    3. 'right' → logprob: -9.383708953857422
    4. '.' → logprob: -11.508708953857422
    5. 'left' → logprob: -15.633708953857422
    6. ' .' → logprob: -17.758708953857422
    7. '	right' → logprob: -17.758708953857422
    8. ' right' → logprob: -18.758708953857422
    9. '```' → logprob: -19.633708953857422
    10. ',right' → logprob: -20.008708953857422

Token 432: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18034382164478302
    2. '<|end|>' → logprob: -1.8053438663482666
    3. '<|end|>' → logprob: -8.555343627929688
    4. '
' → logprob: -8.555343627929688
    5. '           ' → logprob: -9.805343627929688
    6. '   ' → logprob: -9.805343627929688
    7. ' ' → logprob: -10.680343627929688
    8. '        ' → logprob: -11.180343627929688
    9. '        
' → logprob: -11.930343627929688
    10. ',y' → logprob: -11.930343627929688

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004333863966166973
    2. '<|end|>' → logprob: -5.504333972930908
    3. 'x' → logprob: -9.25433349609375
    4. 'y' → logprob: -9.75433349609375
    5. ' y' → logprob: -10.12933349609375
    6. '           ' → logprob: -10.87933349609375
    7. '   ' → logprob: -11.00433349609375
    8. '<|end|>' → logprob: -11.75433349609375
    9. 'if' → logprob: -12.62933349609375
    10. ',y' → logprob: -12.75433349609375

Token 434: ' x' (ID: 1215)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2309545874595642
    2. 'x' (adapté à ' x') → logprob: -1.605954647064209
    3. 'y' → logprob: -5.230954647064209
    4. ' if' → logprob: -9.10595417022705
    5. '       ' → logprob: -9.85595417022705
    6. '#' → logprob: -12.73095417022705
    7. '   ' → logprob: -12.85595417022705
    8. 'If' → logprob: -13.35595417022705
    9. 'try' → logprob: -14.10595417022705
    10. '	if' → logprob: -14.10595417022705

Token 435: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -3.1782583391759545e-05
    2. '.right' → logprob: -11.125031471252441
    3. '.p' → logprob: -11.250031471252441
    4. '.' → logprob: -13.000031471252441
    5. 'left' → logprob: -13.500031471252441
    6. '.key' → logprob: -15.500031471252441
    7. ' .' → logprob: -16.750032424926758
    8. '.Left' → logprob: -17.250032424926758
    9. '.parent' → logprob: -17.375032424926758
    10. ').' → logprob: -17.625032424926758

Token 436: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3897535800933838
    2. '=' → logprob: -1.1397535800933838
    3. '<|end|>' → logprob: -5.889753341674805
    4. '=None' → logprob: -9.514753341674805
    5. '<|end|>' → logprob: -11.139753341674805
    6. '=
' → logprob: -11.889753341674805
    7. ' =
' → logprob: -12.139753341674805
    8. ' ' → logprob: -13.139753341674805
    9. '=False' → logprob: -13.889753341674805
    10. 'None' → logprob: -13.889753341674805

Token 437: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1276984065771103
    2. ' y' → logprob: -2.1276984214782715
    3. 'None' → logprob: -7.2526984214782715
    4. ' None' → logprob: -9.752697944641113
    5. 'x' → logprob: -13.127697944641113
    6. '	y' → logprob: -14.002697944641113
    7. '<|end|>' → logprob: -15.252697944641113
    8. ' ' → logprob: -15.502697944641113
    9. '   ' → logprob: -16.12769889831543
    10. '(y' → logprob: -16.87769889831543

Token 438: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.07790564000606537
    2. 'left' → logprob: -2.8279056549072266
    3. '<|end|>' → logprob: -4.202905654907227
    4. '[left' → logprob: -8.077905654907227
    5. ' left' → logprob: -8.077905654907227
    6. '	left' → logprob: -9.327905654907227
    7. '(left' → logprob: -10.202905654907227
    8. '   ' → logprob: -10.827905654907227
    9. '<|end|>' → logprob: -10.952905654907227
    10. '       ' → logprob: -11.452905654907227

Token 439: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03864976391196251
    2. '<|end|>' → logprob: -3.288649797439575
    3. '<|end|>' → logprob: -8.288649559020996
    4. '           ' → logprob: -8.913649559020996
    5. '   ' → logprob: -9.288649559020996
    6. 'x' → logprob: -9.913649559020996
    7. '
' → logprob: -11.413649559020996
    8. '               ' → logprob: -11.538649559020996
    9. '        
' → logprob: -11.913649559020996
    10. ' ' → logprob: -12.038649559020996

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015575934667140245
    2. '<|end|>' → logprob: -6.75155782699585
    3. 'x' → logprob: -8.126557350158691
    4. 'y' → logprob: -10.626557350158691
    5. ' y' → logprob: -10.876557350158691
    6. '           ' → logprob: -11.251557350158691
    7. '<|end|>' → logprob: -11.376557350158691
    8. '   ' → logprob: -12.001557350158691
    9. ' x' → logprob: -12.751557350158691
    10. ',y' → logprob: -12.876557350158691

Token 441: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27402088046073914
    2. 'y' → logprob: -1.5240209102630615
    3. '       ' → logprob: -4.399020671844482
    4. 'x' → logprob: -5.399020671844482
    5. 'return' → logprob: -5.399020671844482
    6. ' if' → logprob: -8.39902114868164
    7. 'for' → logprob: -8.77402114868164
    8. ' y' → logprob: -10.27402114868164
    9. '           ' → logprob: -10.52402114868164
    10. '   ' → logprob: -10.89902114868164

Token 442: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007096820045262575
    2. 'y' → logprob: -5.007096767425537
    3. 'x' → logprob: -8.382097244262695
    4. ' if' → logprob: -9.757097244262695
    5. '       ' → logprob: -10.382097244262695
    6. 'try' → logprob: -10.757097244262695
    7. 'return' → logprob: -11.257097244262695
    8. '```' → logprob: -11.632097244262695
    9. 'z' → logprob: -11.882097244262695
    10. '#' → logprob: -12.757097244262695

Token 443: '(x' (ID: 4061)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.38304805755615234
    2. '(' → logprob: -2.0080480575561523
    3. '("' → logprob: -2.0080480575561523
    4. '(x' → logprob: -3.7580480575561523
    5. '('' → logprob: -4.633048057556152
    6. '()' → logprob: -4.758048057556152
    7. '("("' → logprob: -6.258048057556152
    8. 'y' → logprob: -6.508048057556152
    9. '("")' → logprob: -7.008048057556152
    10. '"' → logprob: -7.133048057556152

Token 444: '.key' (ID: 8839)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.06236233934760094
    2. ')' → logprob: -2.9373624324798584
    3. '.right' → logprob: -5.437362194061279
    4. '.key' → logprob: -7.187362194061279
    5. '.' → logprob: -7.437362194061279
    6. ',' → logprob: -7.812362194061279
    7. '   ' → logprob: -8.312362670898438
    8. '.left' → logprob: -8.562362670898438
    9. '.y' → logprob: -8.687362670898438
    10. ').' → logprob: -9.187362670898438

Token 445: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7414460778236389
    2. ')' → logprob: -1.2414460182189941
    3. ',y' → logprob: -1.8664460182189941
    4. ',' → logprob: -2.741446018218994
    5. '<|end|>' → logprob: -4.991446018218994
    6. ')
' → logprob: -5.366446018218994
    7. ')y' → logprob: -6.491446018218994
    8. ',x' → logprob: -6.866446018218994
    9. '<|end|>' → logprob: -8.366446495056152
    10. '),' → logprob: -8.491446495056152

Token 446: ' id' (ID: 1211)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7012037038803101
    2. 'y' → logprob: -0.7012037038803101
    3. 'id' → logprob: -5.4512038230896
    4. ' y' → logprob: -5.9512038230896
    5. ')' → logprob: -7.3262038230896
    6. ' x' → logprob: -8.451203346252441
    7. 'None' → logprob: -9.326203346252441
    8. ')y' → logprob: -10.326203346252441
    9. '   ' → logprob: -10.451203346252441
    10. 'z' → logprob: -10.826203346252441

Token 447: '(x' (ID: 4061)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.4157102108001709
    2. '(x' → logprob: -1.415710210800171
    3. 'x' → logprob: -2.915710210800171
    4. 'y' → logprob: -3.165710210800171
    5. ' y' → logprob: -7.41571044921875
    6. '(' → logprob: -8.54071044921875
    7. ')' → logprob: -9.29071044921875
    8. ' x' → logprob: -9.29071044921875
    9. ' (' → logprob: -12.04071044921875
    10. ')y' → logprob: -12.04071044921875

Token 448: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008040298125706613
    2. ')
' → logprob: -7.3758039474487305
    3. ',' → logprob: -9.75080394744873
    4. ' )' → logprob: -10.37580394744873
    5. '       ' → logprob: -10.50080394744873
    6. '   ' → logprob: -10.87580394744873
    7. ',y' → logprob: -11.12580394744873
    8. ')y' → logprob: -11.37580394744873
    9. '<|end|>' → logprob: -12.87580394744873
    10. '))' → logprob: -13.00080394744873

Token 449: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00698614539578557
    2. '<|end|>' → logprob: -5.131986141204834
    3. 'x' → logprob: -7.881986141204834
    4. '           ' → logprob: -9.256986618041992
    5. '<|end|>' → logprob: -9.256986618041992
    6. 'y' → logprob: -9.381986618041992
    7. ' y' → logprob: -9.631986618041992
    8. ')' → logprob: -10.131986618041992
    9. '	' → logprob: -10.131986618041992
    10. '	y' → logprob: -10.131986618041992

Token 450: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03157723695039749
    2. '<|end|>' → logprob: -3.7815773487091064
    3. '   ' → logprob: -5.531577110290527
    4. 'x' → logprob: -6.406577110290527
    5. '           ' → logprob: -7.781577110290527
    6. 'y' → logprob: -7.906577110290527
    7. ' ' → logprob: -8.031577110290527
    8. '	y' → logprob: -8.156577110290527
    9. '<|end|>' → logprob: -8.156577110290527
    10. '	' → logprob: -8.281577110290527

Token 451: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.048595886677503586
    2. 'x' → logprob: -3.048595905303955
    3. ' ' → logprob: -12.173595428466797
    4. '   ' → logprob: -13.173595428466797
    5. '(x' → logprob: -14.298595428466797
    6. '	x' → logprob: -14.798595428466797
    7. '  ' → logprob: -15.548595428466797
    8. '"x' → logprob: -16.673595428466797
    9. '    ' → logprob: -17.048595428466797
    10. 'not' → logprob: -17.361095428466797

Token 452: '.right' (ID: 17627)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0006376196397468448
    2. '.right' → logprob: -7.375637531280518
    3. '.' → logprob: -12.250638008117676
    4. 'left' → logprob: -12.375638008117676
    5. '   ' → logprob: -13.875638008117676
    6. '[left' → logprob: -14.625638008117676
    7. ' .' → logprob: -15.625638008117676
    8. '	left' → logprob: -16.37563705444336
    9. '.has' → logprob: -16.62563705444336
    10. ':left' → logprob: -17.00063705444336

Token 453: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03805159032344818
    2. '==' → logprob: -3.2880516052246094
    3. ' is' → logprob: -11.66305160522461
    4. ' =' → logprob: -14.66305160522461
    5. ' ' → logprob: -14.91305160522461
    6. 'is' → logprob: -15.53805160522461
    7. 'None' → logprob: -16.16305160522461
    8. '=None' → logprob: -16.41305160522461
    9. ' None' → logprob: -16.66305160522461
    10. ':' → logprob: -16.78805160522461

Token 454: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04858759790658951
    2. ' None' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.798587799072266
    4. '=None' → logprob: -16.923587799072266
    5. ' ' → logprob: -17.298587799072266
    6. '(None' → logprob: -17.298587799072266
    7. '_None' → logprob: -17.923587799072266
    8. 'none' → logprob: -18.423587799072266
    9. ',None' → logprob: -18.798587799072266
    10. 'x' → logprob: -19.048587799072266

Token 455: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3010798990726471
    2. '       ' → logprob: -1.5510798692703247
    3. ':
' → logprob: -3.0510799884796143
    4. '   ' → logprob: -7.551079750061035
    5. ',' → logprob: -9.926079750061035
    6. '):
' → logprob: -10.801079750061035
    7. '```' → logprob: -11.676079750061035
    8. ':

' → logprob: -11.926079750061035
    9. '<|end|>' → logprob: -11.926079750061035
    10. '):' → logprob: -12.301079750061035

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004988605156540871
    2. '   ' → logprob: -5.379988670349121
    3. '#' → logprob: -8.129988670349121
    4. '```' → logprob: -10.879988670349121
    5. ' y' → logprob: -11.504988670349121
    6. ':
' → logprob: -11.504988670349121
    7. ' #' → logprob: -11.504988670349121
    8. '
' → logprob: -12.004988670349121
    9. '):
' → logprob: -12.504988670349121
    10. ',' → logprob: -12.504988670349121

Token 457: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1353951245546341
    2. '#' (adapté à ' #') → logprob: -2.260395050048828
    3. '   ' → logprob: -4.385395050048828
    4. 'y' → logprob: -5.010395050048828
    5. ' y' → logprob: -6.010395050048828
    6. ' #' → logprob: -7.260395050048828
    7. 'x' → logprob: -11.760395050048828
    8. '
' → logprob: -12.010395050048828
    9. '	y' → logprob: -12.135395050048828
    10. '```' → logprob: -12.135395050048828

Token 458: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.059083808213472366
    2. '#' → logprob: -3.3090837001800537
    3. 'x' → logprob: -4.559083938598633
    4. 'y' → logprob: -4.934083938598633
    5. '       ' → logprob: -5.934083938598633
    6. '#print' → logprob: -8.434083938598633
    7. ' y' → logprob: -9.184083938598633
    8. '   ' → logprob: -9.184083938598633
    9. '
' → logprob: -10.059083938598633
    10. ' print' → logprob: -11.309083938598633

Token 459: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20199355483055115
    2. '("' → logprob: -1.7019935846328735
    3. '(x' → logprob: -7.951993465423584
    4. '(
' → logprob: -9.201993942260742
    5. ' (' → logprob: -9.701993942260742
    6. '('' → logprob: -10.451993942260742
    7. '"' → logprob: -10.451993942260742
    8. ' ("' → logprob: -12.451993942260742
    9. 'x' → logprob: -13.576993942260742
    10. ' ' → logprob: -14.326993942260742

Token 460: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0022764618042856455
    2. '"x' → logprob: -6.127276420593262
    3. ' x' → logprob: -9.877276420593262
    4. '"' → logprob: -10.377276420593262
    5. '(x' → logprob: -12.252276420593262
    6. '   ' → logprob: -13.627276420593262
    7. ' ' → logprob: -14.002276420593262
    8. ''x' → logprob: -14.752276420593262
    9. '
' → logprob: -15.127276420593262
    10. '       ' → logprob: -15.377276420593262

Token 461: '.right' (ID: 17627)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -5.200166469876422e-06
    2. '.' → logprob: -13.250004768371582
    3. '.right' → logprob: -13.625004768371582
    4. 'left' → logprob: -13.625004768371582
    5. '   ' → logprob: -14.625004768371582
    6. ' .' → logprob: -15.500004768371582
    7. '.Left' → logprob: -16.8750057220459
    8. '.le' → logprob: -16.8750057220459
    9. '.parent' → logprob: -16.8750057220459
    10. '[left' → logprob: -17.0000057220459

Token 462: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.003709338838234544
    2. '==' → logprob: -5.628709316253662
    3. ' =' → logprob: -10.00370979309082
    4. ')' → logprob: -10.12870979309082
    5. ' ' → logprob: -11.37870979309082
    6. '=' → logprob: -12.87870979309082
    7. ')==' → logprob: -13.25370979309082
    8. ' is' → logprob: -13.37870979309082
    9. '   ' → logprob: -13.37870979309082
    10. ' )' → logprob: -13.50370979309082

Token 463: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06196802109479904
    2. ' None' → logprob: -2.8119680881500244
    3. '(None' → logprob: -15.936967849731445
    4. '_None' → logprob: -16.561967849731445
    5. ' ' → logprob: -16.686967849731445
    6. '=None' → logprob: -17.061967849731445
    7. ',None' → logprob: -17.061967849731445
    8. 'none' → logprob: -17.311967849731445
    9. '   ' → logprob: -18.186967849731445
    10. '
' → logprob: -18.561967849731445

Token 464: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.09658663719892502
    2. '")' → logprob: -2.5965867042541504
    3. '       ' → logprob: -4.09658670425415
    4. '   ' → logprob: -7.72158670425415
    5. ')
' → logprob: -8.096586227416992
    6. '")
' → logprob: -9.221586227416992
    7. '"):
' → logprob: -10.846586227416992
    8. ')' → logprob: -10.971586227416992
    9. ' ")
' → logprob: -11.846586227416992
    10. '')
' → logprob: -12.471586227416992

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036071976646780968
    2. ' y' → logprob: -6.128607273101807
    3. '   ' → logprob: -6.753607273101807
    4. '
' → logprob: -8.753606796264648
    5. 'y' → logprob: -9.878606796264648
    6. ')' → logprob: -11.378606796264648
    7. ',' → logprob: -11.628606796264648
    8. '```' → logprob: -12.253606796264648
    9. ':
' → logprob: -12.628606796264648
    10. '):
' → logprob: -12.753606796264648

Token 466: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.00034392563975416124
    2. ' y' → logprob: -8.250344276428223
    3. 'x' → logprob: -10.250344276428223
    4. '       ' → logprob: -10.500344276428223
    5. '   ' → logprob: -10.875344276428223
    6. 'elif' → logprob: -15.625344276428223
    7. '     ' → logprob: -15.750344276428223
    8. ' ' → logprob: -16.000343322753906
    9. '	y' → logprob: -16.000343322753906
    10. '    ' → logprob: -16.000343322753906

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519296407699585
    2. '=' → logprob: -1.5019296407699585
    3. '=x' → logprob: -15.87692928314209
    4. '   ' → logprob: -16.001930236816406
    5. ' ' → logprob: -16.126930236816406
    6. 'x' → logprob: -16.376930236816406
    7. ' x' → logprob: -16.501930236816406
    8. ')' → logprob: -18.626930236816406
    9. '	' → logprob: -18.876930236816406
    10. ',' → logprob: -19.001930236816406

Token 468: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008614926598966122
    2. ' x' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.758614540100098
    4. '(x' → logprob: -16.758615493774414
    5. '<|end|>' → logprob: -16.883615493774414
    6. '   ' → logprob: -17.133615493774414
    7. '	x' → logprob: -17.508615493774414
    8. '       ' → logprob: -19.508615493774414
    9. '  ' → logprob: -19.633615493774414
    10. '"x' → logprob: -19.883615493774414

Token 469: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.700132997939363e-05
    2. 'left' → logprob: -11.000017166137695
    3. '.' → logprob: -16.250017166137695
    4. '   ' → logprob: -17.500017166137695
    5. '[left' → logprob: -17.625017166137695
    6. ' left' → logprob: -18.000017166137695
    7. '.right' → logprob: -18.625017166137695
    8. '.Left' → logprob: -18.875017166137695
    9. '(left' → logprob: -18.875017166137695
    10. '       ' → logprob: -18.875017166137695

Token 470: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006706207641400397
    2. 'x' → logprob: -7.625670433044434
    3. '   ' → logprob: -9.000670433044434
    4. '
' → logprob: -10.375670433044434
    5. ' x' → logprob: -10.625670433044434
    6. '           ' → logprob: -13.500670433044434
    7. ',' → logprob: -14.000670433044434
    8. '<|end|>' → logprob: -14.375670433044434
    9. '```' → logprob: -15.625670433044434
    10. ' ' → logprob: -16.00067138671875

Token 471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014864159747958183
    2. 'x' → logprob: -6.626486301422119
    3. ' x' → logprob: -9.376486778259277
    4. '   ' → logprob: -9.626486778259277
    5. '```' → logprob: -12.751486778259277
    6. '
' → logprob: -13.251486778259277
    7. '<|end|>' → logprob: -13.876486778259277
    8. '           ' → logprob: -14.001486778259277
    9. ',' → logprob: -14.126486778259277
    10. '#' → logprob: -14.626486778259277

Token 472: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.015506688505411148
    2. '       ' → logprob: -4.515506744384766
    3. ' x' → logprob: -5.515506744384766
    4. '   ' → logprob: -7.765506744384766
    5. '	x' → logprob: -14.890506744384766
    6. '
' → logprob: -15.765506744384766
    7. '    ' → logprob: -15.890506744384766
    8. '           ' → logprob: -16.140506744384766
    9. ' ' → logprob: -16.140506744384766
    10. '     ' → logprob: -16.640506744384766

Token 473: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.00015217094914987683
    2. '.' → logprob: -9.500152587890625
    3. 'key' → logprob: -10.125152587890625
    4. '.left' → logprob: -10.250152587890625
    5. ' key' → logprob: -14.000152587890625
    6. ' .' → logprob: -14.875152587890625
    7. '.right' → logprob: -15.250152587890625
    8. '```' → logprob: -16.625152587890625
    9. '[key' → logprob: -17.000152587890625
    10. '=' → logprob: -17.000152587890625

Token 474: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. '=y' → logprob: -16.849077224731445
    4. ',' → logprob: -17.724077224731445
    5. ' =
' → logprob: -17.974077224731445
    6. '=
' → logprob: -18.099077224731445
    7. '<|end|>' → logprob: -18.349077224731445
    8. '＝' → logprob: -18.474077224731445
    9. ' ' → logprob: -18.599077224731445
    10. '.=' → logprob: -18.849077224731445

Token 475: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20141352713108063
    2. ' y' → logprob: -1.7014135122299194
    3. '	y' → logprob: -16.201414108276367
    4. '   ' → logprob: -16.451414108276367
    5. '       ' → logprob: -17.951414108276367
    6. ')y' → logprob: -17.951414108276367
    7. '<|end|>' → logprob: -18.326414108276367
    8. 'x' → logprob: -18.326414108276367
    9. ' ' → logprob: -18.451414108276367
    10. '(y' → logprob: -18.701414108276367

Token 476: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -13.25000286102295
    3. 'key' → logprob: -14.37500286102295
    4. '.left' → logprob: -14.62500286102295
    5. ' .' → logprob: -17.250003814697266
    6. ' key' → logprob: -19.375003814697266
    7. '.Key' → logprob: -20.125003814697266
    8. '.right' → logprob: -20.250003814697266
    9. '	key' → logprob: -20.375003814697266
    10. '$key' → logprob: -20.375003814697266

Token 477: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02110663615167141
    2. '<|end|>' → logprob: -3.896106719970703
    3. 'x' → logprob: -7.771106719970703
    4. '<|end|>' → logprob: -10.146106719970703
    5. ' x' → logprob: -10.271106719970703
    6. '
' → logprob: -10.771106719970703
    7. '   ' → logprob: -10.896106719970703
    8. ',' → logprob: -12.021106719970703
    9. ' ' → logprob: -12.521106719970703
    10. '```' → logprob: -12.521106719970703

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04683823138475418
    2. '<|end|>' → logprob: -3.1718382835388184
    3. 'x' → logprob: -6.171838283538818
    4. '   ' → logprob: -8.17183780670166
    5. '        
' → logprob: -8.29683780670166
    6. '
' → logprob: -8.29683780670166
    7. '<|end|>' → logprob: -8.29683780670166
    8. ' x' → logprob: -8.54683780670166
    9. '```' → logprob: -8.92183780670166
    10. '           ' → logprob: -9.42183780670166

Token 479: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.005972165614366531
    2. ' x' → logprob: -5.255972385406494
    3. '       ' → logprob: -7.255972385406494
    4. '   ' → logprob: -10.380971908569336
    5. '	x' → logprob: -14.380971908569336
    6. '           ' → logprob: -15.630971908569336
    7. '```' → logprob: -15.630971908569336
    8. ' ' → logprob: -15.755971908569336
    9. '
' → logprob: -16.630971908569336
    10. '    ' → logprob: -17.380971908569336

Token 480: '.right' (ID: 17627)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -5.5577775128767826e-06
    2. '.' → logprob: -12.750005722045898
    3. 'left' → logprob: -13.625005722045898
    4. '.right' → logprob: -13.750005722045898
    5. '.key' → logprob: -14.750005722045898
    6. ' left' → logprob: -19.0000057220459
    7. '.Left' → logprob: -19.1250057220459
    8. ' .' → logprob: -19.3750057220459
    9. '	left' → logprob: -19.6250057220459
    10. '[left' → logprob: -20.0000057220459

Token 481: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141343772411346
    2. ' =' → logprob: -1.7014133930206299
    3. ' ' → logprob: -16.951414108276367
    4. 's' → logprob: -17.076414108276367
    5. '<|end|>' → logprob: -17.451414108276367
    6. 'x' → logprob: -17.701414108276367
    7. ',' → logprob: -17.826414108276367
    8. '=y' → logprob: -18.326414108276367
    9. '=
' → logprob: -18.826414108276367
    10. ' =
' → logprob: -19.076414108276367

Token 482: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3132619559764862
    2. 'y' → logprob: -1.3132619857788086
    3. '	y' → logprob: -15.938261985778809
    4. 'x' → logprob: -17.313261032104492
    5. '<|end|>' → logprob: -17.813261032104492
    6. '(y' → logprob: -17.938261032104492
    7. ' ' → logprob: -17.938261032104492
    8. 'None' → logprob: -18.188261032104492
    9. '   ' → logprob: -18.813261032104492
    10. ')y' → logprob: -18.938261032104492

Token 483: '.right' (ID: 17627)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.6523005962371826
    2. ' =' → logprob: -1.6523005962371826
    3. '=' → logprob: -1.7773005962371826
    4. '.right' → logprob: -2.5273005962371826
    5. '.y' → logprob: -4.527300834655762
    6. '=y' → logprob: -4.902300834655762
    7. 'left' → logprob: -4.902300834655762
    8. 'y' → logprob: -5.277300834655762
    9. '.key' → logprob: -6.027300834655762
    10. '.' → logprob: -6.652300834655762

Token 484: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014091627672314644
    2. '<|end|>' → logprob: -6.87640905380249
    3. '   ' → logprob: -8.376409530639648
    4. '
' → logprob: -9.501409530639648
    5. '        
' → logprob: -10.501409530639648
    6. ' ' → logprob: -11.376409530639648
    7. 'x' → logprob: -11.626409530639648
    8. '           ' → logprob: -12.001409530639648
    9. '```' → logprob: -12.376409530639648
    10. '<|end|>' → logprob: -12.751409530639648

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004723795282188803
    2. '<|end|>' → logprob: -8.000472068786621
    3. 'x' → logprob: -9.750472068786621
    4. '   ' → logprob: -10.500472068786621
    5. '```' → logprob: -11.125472068786621
    6. ' ' → logprob: -11.125472068786621
    7. ' x' → logprob: -12.125472068786621
    8. '
' → logprob: -12.375472068786621
    9. '<|end|>' → logprob: -12.500472068786621
    10. '        
' → logprob: -12.875472068786621

Token 486: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.3135518729686737
    2. ' x' → logprob: -1.313551902770996
    3. '       ' → logprob: -8.188551902770996
    4. ' y' → logprob: -12.063551902770996
    5. '   ' → logprob: -12.313551902770996
    6. 'y' → logprob: -14.563551902770996
    7. ' ' → logprob: -14.813551902770996
    8. '```' → logprob: -14.813551902770996
    9. '           ' → logprob: -15.438551902770996
    10. '	x' → logprob: -15.688551902770996

Token 487: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.00031520487391389906
    2. '.' → logprob: -8.12531566619873
    3. '.key' → logprob: -11.12531566619873
    4. 'left' → logprob: -13.12531566619873
    5. '=' → logprob: -13.75031566619873
    6. ' =' → logprob: -14.25031566619873
    7. '.right' → logprob: -15.37531566619873
    8. ' .' → logprob: -15.50031566619873
    9. '   ' → logprob: -16.375314712524414
    10. '.x' → logprob: -16.875314712524414

Token 488: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759396553039551
    2. ' =' → logprob: -0.8259396553039551
    3. ' ' → logprob: -16.825939178466797
    4. ' =
' → logprob: -17.075939178466797
    5. '=y' → logprob: -17.450939178466797
    6. '<|end|>' → logprob: -17.575939178466797
    7. '=
' → logprob: -17.825939178466797
    8. '   ' → logprob: -19.075939178466797
    9. '＝' → logprob: -19.450939178466797
    10. '=x' → logprob: -19.575939178466797

Token 489: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1269282102584839
    2. ' y' → logprob: -2.1269283294677734
    3. '	y' → logprob: -16.126928329467773
    4. 'x' → logprob: -17.376928329467773
    5. 'None' → logprob: -18.126928329467773
    6. ' ' → logprob: -18.501928329467773
    7. '   ' → logprob: -18.501928329467773
    8. '(y' → logprob: -18.876928329467773
    9. 'y's' → logprob: -19.126928329467773
    10. ')y' → logprob: -19.126928329467773

Token 490: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -5.4192871175473556e-05
    2. '.' → logprob: -10.500054359436035
    3. 'left' → logprob: -10.625054359436035
    4. '.key' → logprob: -13.375054359436035
    5. '[left' → logprob: -15.750054359436035
    6. '   ' → logprob: -15.875054359436035
    7. '	left' → logprob: -15.875054359436035
    8. ' left' → logprob: -16.25005340576172
    9. '.right' → logprob: -16.37505340576172
    10. ' .' → logprob: -17.25005340576172

Token 491: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 492: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004931025905534625
    2. 'else' → logprob: -8.500493049621582
    3. ' else' → logprob: -8.625493049621582
    4. '	else' → logprob: -9.750493049621582
    5. '<|end|>' → logprob: -10.000493049621582
    6. '       ' → logprob: -12.875493049621582
    7. '```' → logprob: -13.625493049621582
    8. '	elif' → logprob: -14.375493049621582
    9. ',' → logprob: -14.500493049621582
    10. '<|end|>' → logprob: -14.625493049621582

Token 493: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5872119069099426
    2. '   ' → logprob: -0.8372119069099426
    3. ' else' → logprob: -4.712212085723877
    4. '       ' → logprob: -6.587212085723877
    5. '	else' → logprob: -7.462212085723877
    6. '#else' → logprob: -9.587211608886719
    7. '#' (adapté à ' #') → logprob: -9.712211608886719
    8. 'x' → logprob: -10.212211608886719
    9. '<|end|>' → logprob: -10.212211608886719
    10. '```' → logprob: -10.587211608886719

Token 494: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7269846796989441
    2. 'else' → logprob: -1.6019847393035889
    3. '       ' → logprob: -1.8519847393035889
    4. 'return' → logprob: -2.476984739303589
    5. 'x' → logprob: -3.226984739303589
    6. '   ' → logprob: -3.976984739303589
    7. '```' → logprob: -4.85198450088501
    8. 'elif' → logprob: -5.72698450088501
    9. '#' → logprob: -6.60198450088501
    10. 'def' → logprob: -6.85198450088501

Token 495: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.661626634420827e-05
    2. '(' → logprob: -9.500086784362793
    3. '("' → logprob: -11.625086784362793
    4. 'x' → logprob: -13.250086784362793
    5. '()' → logprob: -14.750086784362793
    6. '(
' → logprob: -16.125085830688477
    7. '"x' → logprob: -16.125085830688477
    8. '("("' → logprob: -16.125085830688477
    9. '#' → logprob: -16.625085830688477
    10. '"' → logprob: -17.625085830688477

Token 496: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.0012517772847786546
    2. '.' → logprob: -7.251251697540283
    3. '.right' → logprob: -7.626251697540283
    4. '.p' → logprob: -11.126252174377441
    5. ')' → logprob: -11.126252174377441
    6. '.left' → logprob: -12.001252174377441
    7. 'key' → logprob: -12.376252174377441
    8. ' key' → logprob: -12.626252174377441
    9. ' .' → logprob: -13.376252174377441
    10. ').' → logprob: -13.376252174377441

Token 497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04744855687022209
    2. ')' → logprob: -3.2974486351013184
    3. ',id' → logprob: -5.297448635101318
    4. '<|end|>' → logprob: -5.797448635101318
    5. '   ' → logprob: -7.797448635101318
    6. ' ,' → logprob: -8.17244815826416
    7. ',x' → logprob: -8.42244815826416
    8. ' )' → logprob: -9.54744815826416
    9. '       ' → logprob: -9.54744815826416
    10. ' id' → logprob: -9.79744815826416

Token 498: ' id' (ID: 1211)
  Prédit: ' id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' id' → logprob: -0.00023393364972434938
    2. 'id' → logprob: -8.37523365020752
    3. ' ' → logprob: -14.00023365020752
    4. ' x' → logprob: -14.62523365020752
    5. ' ' → logprob: -14.87523365020752
    6. '"id' → logprob: -15.12523365020752
    7. '(id' → logprob: -15.25023365020752
    8. '	id' → logprob: -15.37523365020752
    9. ')' → logprob: -15.75023365020752
    10. '```' → logprob: -15.87523365020752

Token 499: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0003682285314425826
    2. 'x' → logprob: -8.125368118286133
    3. '(' → logprob: -10.500368118286133
    4. ')' → logprob: -10.625368118286133
    5. '(y' → logprob: -10.875368118286133
    6. '(
' → logprob: -14.500368118286133
    7. ' (' → logprob: -15.000368118286133
    8. ' x' → logprob: -15.375368118286133
    9. ')x' → logprob: -15.750368118286133
    10. ')(' → logprob: -16.625368118286133

Token 500: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.016425641253590584
    2. ')' → logprob: -4.141425609588623
    3. '))
' → logprob: -7.891425609588623
    4. '   ' → logprob: -12.016426086425781
    5. ')
' → logprob: -12.891426086425781
    6. ' ))' → logprob: -13.016426086425781
    7. '       ' → logprob: -13.391426086425781
    8. '))

' → logprob: -13.516426086425781
    9. ')))' → logprob: -13.641426086425781
    10. ')y' → logprob: -14.641426086425781

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034728513564914465
    2. 'else' → logprob: -6.378472805023193
    3. ' else' → logprob: -6.378472805023193
    4. '	else' → logprob: -10.128473281860352
    5. '```' → logprob: -10.878473281860352
    6. 'elif' → logprob: -12.503473281860352
    7. ' elif' → logprob: -13.003473281860352
    8. '	elif' → logprob: -13.128473281860352
    9. '<|end|>' → logprob: -13.378473281860352
    10. ')' → logprob: -14.628473281860352

Token 502: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02783162146806717
    2. 'else' (adapté à ' else') → logprob: -3.777831554412842
    3. ' else' → logprob: -5.402831554412842
    4. '	else' → logprob: -9.77783203125
    5. 'elif' → logprob: -12.15283203125
    6. '```' → logprob: -12.40283203125
    7. ' elif' → logprob: -13.77783203125
    8. '<|end|>' → logprob: -14.02783203125
    9. '	elif' → logprob: -14.15283203125
    10. ')' → logprob: -14.27783203125

Token 503: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3498116731643677
    2. ':
' → logprob: -1.2248116731643677
    3. '       ' → logprob: -6.974811553955078
    4. '   ' → logprob: -7.849811553955078
    5. ':

' → logprob: -11.349811553955078
    6. '):
' → logprob: -11.849811553955078
    7. ' :
' → logprob: -12.599811553955078
    8. ':
' → logprob: -12.724811553955078
    9. ',' → logprob: -12.974811553955078
    10. '```' → logprob: -12.974811553955078

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07968597114086151
    2. '   ' → logprob: -3.454685926437378
    3. ' y' → logprob: -3.454685926437378
    4. 'y' → logprob: -4.454686164855957
    5. '```' → logprob: -6.704686164855957
    6. '
' → logprob: -8.329686164855957
    7. 'x' → logprob: -8.954686164855957
    8. ' x' → logprob: -10.954686164855957
    9. ' successor' → logprob: -11.329686164855957
    10. '#' → logprob: -11.454686164855957

Token 505: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.005731232464313507
    2. 's' → logprob: -5.880731105804443
    3. 'z' → logprob: -6.630731105804443
    4. ' y' → logprob: -7.755731105804443
    5. '       ' → logprob: -7.880731105804443
    6. '   ' → logprob: -8.380731582641602
    7. 't' → logprob: -8.380731582641602
    8. 'succ' → logprob: -9.130731582641602
    9. 'w' → logprob: -9.630731582641602
    10. 'sc' → logprob: -10.130731582641602

Token 506: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023266909644007683
    2. '=' → logprob: -3.7732667922973633
    3. '=get' → logprob: -10.773266792297363
    4. ' ' → logprob: -16.14826774597168
    5. '=find' → logprob: -17.14826774597168
    6. ',' → logprob: -17.27326774597168
    7. '=y' → logprob: -17.27326774597168
    8. 's' → logprob: -17.39826774597168
    9. '=sc' → logprob: -17.52326774597168
    10. ' =
' → logprob: -17.52326774597168

Token 507: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0013273799559101462
    2. ' get' → logprob: -6.6263275146484375
    3. 'x' → logprob: -13.751327514648438
    4. '(get' → logprob: -15.876327514648438
    5. '	get' → logprob: -16.251327514648438
    6. 'find' → logprob: -16.751327514648438
    7. '   ' → logprob: -17.126327514648438
    8. ' ' → logprob: -17.251327514648438
    9. '  ' → logprob: -18.376327514648438
    10. '=get' → logprob: -18.501327514648438

Token 508: 'Sc' (ID: 2986)
  Prédit: 'Sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sc' → logprob: -3.128163257315464e-07
    2. ' Sc' → logprob: -16.625
    3. 'S' → logprob: -17.125
    4. '(x' → logprob: -17.125
    5. '(' → logprob: -17.875
    6. '<Sc' → logprob: -18.0
    7. 'С' → logprob: -18.25
    8. 'SC' → logprob: -19.25
    9. '(y' → logprob: -19.5
    10. 'x' → logprob: -20.375

Token 509: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -4.246537173457909e-06
    2. '	u' → logprob: -14.000003814697266
    3. 'x' → logprob: -14.250003814697266
    4. '(u' → logprob: -14.750003814697266
    5. ' u' → logprob: -15.000003814697266
    6. '```' → logprob: -15.000003814697266
    7. '[u' → logprob: -15.125003814697266
    8. '(x' → logprob: -15.562503814697266
    9. '<u' → logprob: -15.687503814697266
    10. 'у' → logprob: -15.812503814697266

Token 510: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.4418171455617994e-05
    2. '(' → logprob: -10.125044822692871
    3. '(y' → logprob: -13.000044822692871
    4. 'x' → logprob: -13.125044822692871
    5. '((' → logprob: -18.375043869018555
    6. '(z' → logprob: -18.375043869018555
    7. '(
' → logprob: -19.375043869018555
    8. 's' → logprob: -20.000043869018555
    9. '(u' → logprob: -20.375043869018555
    10. ' (' → logprob: -20.375043869018555

Token 511: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07194467633962631
    2. '(y' → logprob: -3.1969447135925293
    3. '(x' → logprob: -3.6969447135925293
    4. ')y' → logprob: -5.946944713592529
    5. ')(' → logprob: -7.446944713592529
    6. ')x' → logprob: -8.196944236755371
    7. ')
' → logprob: -9.696944236755371
    8. '.right' → logprob: -9.821944236755371
    9. '(' → logprob: -10.196944236755371
    10. '(right' → logprob: -10.571944236755371

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006282833404839039
    2. 'x' → logprob: -5.881282806396484
    3. 'z' → logprob: -6.756282806396484
    4. 'if' → logprob: -7.131282806396484
    5. ' if' → logprob: -7.756282806396484
    6. '   ' → logprob: -8.006282806396484
    7. 'delete' → logprob: -8.631282806396484
    8. '<|end|>' → logprob: -8.756282806396484
    9. '#' → logprob: -9.756282806396484
    10. ' x' → logprob: -9.881282806396484

Token 513: ' delete' (ID: 6168)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006020752713084221
    2. 'delete' (adapté à ' delete') → logprob: -5.756020545959473
    3. 'if' → logprob: -5.881020545959473
    4. '   ' → logprob: -11.006020545959473
    5. '#' → logprob: -12.131020545959473
    6. 'z' → logprob: -12.256020545959473
    7. 'print' → logprob: -12.506020545959473
    8. ' x' → logprob: -12.756020545959473
    9. '       ' → logprob: -13.381020545959473
    10. 'del' → logprob: -13.506020545959473

Token 514: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.00524075236171484
    2. '(' → logprob: -5.2552409172058105
    3. '(
' → logprob: -12.630240440368652
    4. ' (' → logprob: -14.130240440368652
    5. '(t' → logprob: -14.630240440368652
    6. '(x' → logprob: -14.755240440368652
    7. '((' → logprob: -14.880240440368652
    8. '(None' → logprob: -15.130240440368652
    9. '('' → logprob: -15.630240440368652
    10. '(`' → logprob: -15.630240440368652

Token 515: ',' (ID: 11)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -5.836499985889532e-05
    2. 'y' → logprob: -10.2500581741333
    3. ',y' → logprob: -11.5000581741333
    4. ' y' → logprob: -12.3750581741333
    5. '(' → logprob: -12.6250581741333
    6. ')y' → logprob: -13.1250581741333
    7. ' (' → logprob: -13.8750581741333
    8. ')' → logprob: -13.8750581741333
    9. ')(' → logprob: -14.1250581741333
    10. ',' → logprob: -14.5000581741333

Token 516: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.941161776310764e-05
    2. ' y' → logprob: -10.250039100646973
    3. '(y' → logprob: -12.500039100646973
    4. '   ' → logprob: -16.12504005432129
    5. '[y' → logprob: -16.12504005432129
    6. ')y' → logprob: -16.62504005432129
    7. ')' → logprob: -16.87504005432129
    8. '	y' → logprob: -17.50004005432129
    9. ' ' → logprob: -18.87504005432129
    10. ',y' → logprob: -19.00004005432129

Token 517: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017028623551595956
    2. ')
' → logprob: -8.750170707702637
    3. ')x' → logprob: -11.875170707702637
    4. ')y' → logprob: -12.750170707702637
    5. ' )' → logprob: -14.000170707702637
    6. '   ' → logprob: -15.125170707702637
    7. ')#' → logprob: -15.375170707702637
    8. '<|end|>' → logprob: -16.25016975402832
    9. ')return' → logprob: -16.37516975402832
    10. ')}}' → logprob: -16.50016975402832

Token 518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016775564290583134
    2. '<|end|>' → logprob: -6.501677513122559
    3. '```' → logprob: -9.251677513122559
    4. '   ' → logprob: -10.501677513122559
    5. 'x' → logprob: -10.876677513122559
    6. ')' → logprob: -11.501677513122559
    7. '<|end|>' → logprob: -11.751677513122559
    8. '           ' → logprob: -13.001677513122559
    9. ' x' → logprob: -13.251677513122559
    10. '#' → logprob: -13.501677513122559

Token 519: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -7.636475493200123e-05
    2. ' x' → logprob: -9.500076293945312
    3. '       ' → logprob: -13.625076293945312
    4. '```' → logprob: -15.500076293945312
    5. '   ' → logprob: -16.500076293945312
    6. '	x' → logprob: -19.000076293945312
    7. 'if' → logprob: -20.375076293945312
    8. '        
' → logprob: -20.500076293945312
    9. ' ' → logprob: -20.625076293945312
    10. '`' → logprob: -21.000076293945312

Token 520: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -1.9361264946837764e-07
    2. 'key' → logprob: -16.25
    3. '.' → logprob: -16.75
    4. ' .' → logprob: -17.875
    5. '.
' → logprob: -20.75
    6. '.Key' → logprob: -21.125
    7. ',key' → logprob: -21.5
    8. ' key' → logprob: -21.625
    9. ':key' → logprob: -21.625
    10. '```' → logprob: -22.125

Token 521: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868725001811981
    2. '=' → logprob: -1.1368725299835205
    3. ',' → logprob: -14.011872291564941
    4. '=y' → logprob: -14.261872291564941
    5. '＝' → logprob: -17.136873245239258
    6. ' =
' → logprob: -17.386873245239258
    7. ' ,' → logprob: -17.886873245239258
    8. '.=' → logprob: -18.011873245239258
    9. '=
' → logprob: -18.511873245239258
    10. ' +=' → logprob: -18.636873245239258

Token 522: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07888978719711304
    2. ' y' → logprob: -2.578889846801758
    3. '	y' → logprob: -16.703889846801758
    4. ' ' → logprob: -19.203889846801758
    5. '(y' → logprob: -19.703889846801758
    6. '   ' → logprob: -19.703889846801758
    7. 'y's' → logprob: -19.953889846801758
    8. ''y' → logprob: -20.078889846801758
    9. ')y' → logprob: -20.328889846801758
    10. '  ' → logprob: -20.703889846801758

Token 523: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -8.180258191714529e-06
    2. 'key' → logprob: -11.750008583068848
    3. '.' → logprob: -15.375008583068848
    4. ' .' → logprob: -17.75000762939453
    5. ' key' → logprob: -19.25000762939453
    6. '```' → logprob: -20.12500762939453
    7. ':key' → logprob: -21.00000762939453
    8. '	key' → logprob: -21.75000762939453
    9. '[key' → logprob: -22.25000762939453
    10. '.x' → logprob: -22.25000762939453

Token 524: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 525: '    

' (ID: 24372)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 526: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 527: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.057377178221940994
    2. 'in' → logprob: -3.3073770999908447
    3. 'print' → logprob: -4.557377338409424
    4. ' main' → logprob: -5.057377338409424
    5. 'insert' → logprob: -7.182377338409424
    6. ' inorder' → logprob: -8.057376861572266
    7. 'run' → logprob: -8.432376861572266
    8. 'pre' → logprob: -8.557376861572266
    9. 'search' → logprob: -8.557376861572266
    10. 'tr' → logprob: -9.682376861572266

Token 528: 'Pre' (ID: 4319)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.8464514017105103
    2. 'In' → logprob: -1.3464514017105103
    3. '(T' → logprob: -2.2214512825012207
    4. 'Tree' → logprob: -2.4714512825012207
    5. '_tree' → logprob: -2.9714512825012207
    6. 'tree' → logprob: -3.4714512825012207
    7. 'in' → logprob: -3.7214512825012207
    8. '_' → logprob: -5.596451282501221
    9. '_all' → logprob: -6.721451282501221
    10. 'All' → logprob: -6.846451282501221

Token 529: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.002867400413379073
    2. 'Order' → logprob: -5.877867221832275
    3. '(T' → logprob: -10.877867698669434
    4. 'fix' → logprob: -11.377867698669434
    5. 'def' → logprob: -11.502867698669434
    6. '_order' → logprob: -12.002867698669434
    7. 'oder' → logprob: -12.377867698669434
    8. 'ord' → logprob: -12.502867698669434
    9. 'x' → logprob: -13.627867698669434
    10. 'root' → logprob: -13.752867698669434

Token 530: '(x' (ID: 4061)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.011333457194268703
    2. '(' → logprob: -4.511333465576172
    3. '(root' → logprob: -8.386333465576172
    4. '(node' → logprob: -9.886333465576172
    5. ' (' → logprob: -13.011333465576172
    6. '(x' → logprob: -13.386333465576172
    7. '(t' → logprob: -13.511333465576172
    8. '(Tree' → logprob: -15.011333465576172
    9. '(self' → logprob: -15.386333465576172
    10. 'def' → logprob: -15.636333465576172

Token 531: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0382121279835701
    2. '):
' → logprob: -3.2882120609283447
    3. ')' → logprob: -9.038211822509766
    4. '):
' → logprob: -10.288211822509766
    5. ':' → logprob: -11.538211822509766
    6. '   ' → logprob: -12.038211822509766
    7. '):

' → logprob: -14.038211822509766
    8. ',' → logprob: -14.288211822509766
    9. ' ):' → logprob: -15.288211822509766
    10. ',x' → logprob: -16.038211822509766

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008607231429778039
    2. ' if' → logprob: -7.250860691070557
    3. '	if' → logprob: -9.375861167907715
    4. 'if' → logprob: -9.625861167907715
    5. '   ' → logprob: -17.0008602142334
    6. '```' → logprob: -17.8758602142334
    7. '       ' → logprob: -19.5008602142334
    8. '	print' → logprob: -19.5008602142334
    9. '\t' → logprob: -19.7508602142334
    10. 'print' → logprob: -20.1258602142334

Token 533: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0010375719284638762
    2. ' if' → logprob: -7.25103759765625
    3. 'print' → logprob: -8.50103759765625
    4. '   ' → logprob: -9.00103759765625
    5. '	if' → logprob: -13.75103759765625
    6. '```' → logprob: -17.62603759765625
    7. ' print' → logprob: -18.12603759765625
    8. 'def' → logprob: -18.75103759765625
    9. 'If' → logprob: -20.00103759765625
    10. '    
' → logprob: -20.00103759765625

Token 534: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.47407710552215576
    2. 'x' → logprob: -0.9740771055221558
    3. '	x' → logprob: -16.599077224731445
    4. ' not' → logprob: -17.724077224731445
    5. '(x' → logprob: -18.849077224731445
    6. 'not' → logprob: -18.974077224731445
    7. '   ' → logprob: -20.599077224731445
    8. ' ' → logprob: -20.974077224731445
    9. ' ' → logprob: -21.099077224731445
    10. '"x' → logprob: -21.349077224731445

Token 535: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08273712545633316
    2. '!=' → logprob: -2.9577372074127197
    3. 'is' → logprob: -4.082736968994141
    4. ' !=' → logprob: -4.707736968994141
    5. '==' → logprob: -6.832736968994141
    6. ':' → logprob: -7.832736968994141
    7. ' ==' → logprob: -9.70773696899414
    8. '	is' → logprob: -11.58273696899414
    9. '[' → logprob: -11.95773696899414
    10. '!==' → logprob: -12.08273696899414

Token 536: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.547789674485102e-05
    2. ' None' → logprob: -10.250035285949707
    3. '   ' → logprob: -20.250036239624023
    4. '_None' → logprob: -20.250036239624023
    5. '=None' → logprob: -21.375036239624023
    6. '
' → logprob: -21.500036239624023
    7. '0' → logprob: -21.500036239624023
    8. 'none' → logprob: -22.000036239624023
    9. '(None' → logprob: -22.625036239624023
    10. 'not' → logprob: -22.625036239624023

Token 537: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03674786910414696
    2. ':
' → logprob: -4.036747932434082
    3. ':return' → logprob: -4.036747932434082
    4. '   ' → logprob: -7.286747932434082
    5. '       ' → logprob: -9.411747932434082
    6. 'return' → logprob: -13.411747932434082
    7. ' :' → logprob: -14.661747932434082
    8. '	return' → logprob: -14.661747932434082
    9. ':
' → logprob: -14.911747932434082
    10. ' return' → logprob: -15.161747932434082

Token 538: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06364001333713531
    2. '       ' → logprob: -3.5636401176452637
    3. '	return' → logprob: -3.6886401176452637
    4. ' return' → logprob: -5.188640117645264
    5. 'return' → logprob: -6.063640117645264
    6. '
' → logprob: -9.063639640808105
    7. '	print' → logprob: -9.313639640808105
    8. 'print' → logprob: -9.813639640808105
    9. '    
' → logprob: -9.938639640808105
    10. ':return' → logprob: -10.438639640808105

Token 539: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008837332017719746
    2. ' return' → logprob: -4.7588372230529785
    3. '   ' → logprob: -8.508837699890137
    4. '	return' → logprob: -11.383837699890137
    5. '       ' → logprob: -12.508837699890137
    6. '
' → logprob: -12.883837699890137
    7. ':return' → logprob: -12.883837699890137
    8. '{return' → logprob: -14.758837699890137
    9. 'print' → logprob: -15.133837699890137
    10. ' ' → logprob: -15.758837699890137

Token 540: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08689738810062408
    2. ' print' → logprob: -2.961897373199463
    3. 'print' → logprob: -3.461897373199463
    4. '	print' → logprob: -9.461897850036621
    5. '```' → logprob: -10.586897850036621
    6. '
' → logprob: -11.086897850036621
    7. '    
' → logprob: -11.836897850036621
    8. '#print' → logprob: -12.336897850036621
    9. '\n' → logprob: -12.711897850036621
    10. '.print' → logprob: -13.711897850036621

Token 541: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027226008474826813
    2. ' print' → logprob: -3.652225971221924
    3. 'print' → logprob: -7.027225971221924
    4. '	print' → logprob: -10.402226448059082
    5. '    
' → logprob: -12.527226448059082
    6. '```' → logprob: -13.402226448059082
    7. '
' → logprob: -14.402226448059082
    8. '   ' → logprob: -14.652226448059082
    9. '.print' → logprob: -15.527226448059082
    10. '(print' → logprob: -15.652226448059082

Token 542: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.451116051815916e-05
    2. ' print' → logprob: -10.625024795532227
    3. '```' → logprob: -16.625024795532227
    4. '   ' → logprob: -17.250024795532227
    5. '
' → logprob: -17.500024795532227
    6. '#print' → logprob: -17.625024795532227
    7. '    
' → logprob: -19.375024795532227
    8. '	print' → logprob: -19.875024795532227
    9. '.print' → logprob: -20.000024795532227
    10. 'printf' → logprob: -20.500024795532227

Token 543: 'Pre' (ID: 4319)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00036049127811565995
    2. '(' → logprob: -8.000360488891602
    3. '(str' → logprob: -10.750360488891602
    4. '("("' → logprob: -13.500360488891602
    5. '('' → logprob: -13.750360488891602
    6. 'x' → logprob: -14.000360488891602
    7. '("' → logprob: -15.625360488891602
    8. '(f' → logprob: -15.875360488891602
    9. '((' → logprob: -17.1253604888916
    10. ' (' → logprob: -17.5003604888916

Token 544: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -3.128163257315464e-07
    2. 'Order' → logprob: -16.875
    3. '(x' → logprob: -17.125
    4. 'oder' → logprob: -17.5
    5. 'or' → logprob: -18.75
    6. ' order' → logprob: -18.875
    7. 'print' → logprob: -19.0
    8. '
' → logprob: -19.0
    9. '   ' → logprob: -19.125
    10. 'x' → logprob: -19.25

Token 545: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.584861744660884e-05
    2. '(' → logprob: -10.000045776367188
    3. ' (' → logprob: -15.125045776367188
    4. 'print' → logprob: -16.750045776367188
    5. '((' → logprob: -17.500045776367188
    6. 'x' → logprob: -17.875045776367188
    7. '(node' → logprob: -18.000045776367188
    8. ',x' → logprob: -18.625045776367188
    9. ' x' → logprob: -19.000045776367188
    10. '(print' → logprob: -19.250045776367188

Token 546: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.00874481350183487
    2. '.' → logprob: -4.758744716644287
    3. '.right' → logprob: -9.883745193481445
    4. ' .' → logprob: -10.258745193481445
    5. ')' → logprob: -10.883745193481445
    6. '.x' → logprob: -11.383745193481445
    7. ').' → logprob: -12.008745193481445
    8. '.space' → logprob: -12.883745193481445
    9. '.Left' → logprob: -13.133745193481445
    10. '.key' → logprob: -14.133745193481445

Token 547: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12709148228168488
    2. ')' → logprob: -2.127091407775879
    3. '   ' → logprob: -9.127091407775879
    4. ' )
' → logprob: -10.502091407775879
    5. ')

' → logprob: -11.377091407775879
    6. ')
' → logprob: -11.752091407775879
    7. ')x' → logprob: -12.627091407775879
    8. ',' → logprob: -13.502091407775879
    9. ' )' → logprob: -14.127091407775879
    10. ');
' → logprob: -14.502091407775879

Token 548: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.49796807765960693
    2. '   ' → logprob: -0.9979680776596069
    3. ' print' → logprob: -3.7479681968688965
    4. '```' → logprob: -10.247967720031738
    5. '	print' → logprob: -12.747967720031738
    6. '    ' → logprob: -13.497967720031738
    7. '    
' → logprob: -13.622967720031738
    8. '.print' → logprob: -14.872967720031738
    9. '
' → logprob: -15.497967720031738
    10. '       ' → logprob: -15.622967720031738

Token 549: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.4121114822482923e-06
    2. ' print' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.750003814697266
    4. '```' → logprob: -18.500003814697266
    5. '#print' → logprob: -18.875003814697266
    6. '	print' → logprob: -19.125003814697266
    7. '.print' → logprob: -19.750003814697266
    8. '
' → logprob: -20.250003814697266
    9. '(print' → logprob: -21.000003814697266
    10. '    
' → logprob: -21.000003814697266

Token 550: '(end' (ID: 29409)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.04889017343521118
    2. '(' → logprob: -3.0488901138305664
    3. '("("' → logprob: -9.048890113830566
    4. '(str' → logprob: -9.173890113830566
    5. '('' → logprob: -9.798890113830566
    6. '(f' → logprob: -11.548890113830566
    7. '("' → logprob: -12.048890113830566
    8. ' (' → logprob: -12.173890113830566
    9. '((' → logprob: -13.173890113830566
    10. 'x' → logprob: -13.548890113830566

Token 551: '='' (ID: 2053)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.1335040032863617
    2. '("' → logprob: -2.6335039138793945
    3. '('' → logprob: -3.1335039138793945
    4. '(' → logprob: -5.0085039138793945
    5. '(x' → logprob: -5.8835039138793945
    6. '("("' → logprob: -10.258503913879395
    7. '(f' → logprob: -10.758503913879395
    8. '("")' → logprob: -10.883503913879395
    9. '(""' → logprob: -11.258503913879395
    10. '((' → logprob: -11.508503913879395

Token 552: ' ')
' (ID: 49195)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2094094157218933
    2. '(str' → logprob: -2.709409475326538
    3. ' ')' → logprob: -3.459409475326538
    4. ' str' → logprob: -3.584409475326538
    5. '{}' → logprob: -3.834409475326538
    6. ' '' → logprob: -4.209409236907959
    7. ' ' → logprob: -5.084409236907959
    8. '')' → logprob: -5.209409236907959
    9. 'str' → logprob: -5.334409236907959
    10. ' x' → logprob: -5.584409236907959

Token 553: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.5
    3. 'x' → logprob: -18.875
    4. 'def' → logprob: -18.875
    5. '   ' → logprob: -18.875
    6. '#print' → logprob: -20.25
    7. '.print' → logprob: -20.375
    8. 'printf' → logprob: -20.75
    9. '(print' → logprob: -20.875
    10. '
' → logprob: -21.75

Token 554: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -14.875000953674316
    3. ' print' → logprob: -15.875000953674316
    4. 'def' → logprob: -18.375
    5. 'x' → logprob: -18.625
    6. '```' → logprob: -19.0
    7. '#print' → logprob: -19.375
    8. '    
' → logprob: -20.125
    9. '(print' → logprob: -20.375
    10. '	print' → logprob: -20.625

Token 555: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.652451464906335e-05
    2. 'x' → logprob: -11.125016212463379
    3. '(str' → logprob: -13.375016212463379
    4. '(' → logprob: -15.875016212463379
    5. ' x' → logprob: -19.000017166137695
    6. 'str' → logprob: -19.750017166137695
    7. '((' → logprob: -20.625017166137695
    8. ' (' → logprob: -20.750017166137695
    9. '(int' → logprob: -20.750017166137695
    10. '	x' → logprob: -21.000017166137695

Token 556: ',end' (ID: 93014)
  Prédit: '.key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.key' → logprob: -6.074907287256792e-05
    2. ')' → logprob: -9.75006103515625
    3. 'key' → logprob: -13.75006103515625
    4. '.' → logprob: -14.12506103515625
    5. ').' → logprob: -14.75006103515625
    6. ' .' → logprob: -17.00006103515625
    7. ' key' → logprob: -17.87506103515625
    8. ',key' → logprob: -17.87506103515625
    9. '$key' → logprob: -18.87506103515625
    10. '(key' → logprob: -18.87506103515625

Token 557: '='')
' (ID: 135148)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.00016873658751137555
    2. '=' → logprob: -9.625168800354004
    3. '=',' → logprob: -10.000168800354004
    4. ''' → logprob: -10.750168800354004
    5. '='')
' → logprob: -10.875168800354004
    6. '="' → logprob: -11.750168800354004
    7. '=''' → logprob: -12.750168800354004
    8. '('' → logprob: -12.750168800354004
    9. ' ='' → logprob: -13.500168800354004
    10. '=('' → logprob: -14.125168800354004

Token 558: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015300170343834907
    2. ' print' → logprob: -9.000152587890625
    3. '   ' → logprob: -11.000152587890625
    4. '
' → logprob: -11.875152587890625
    5. '(print' → logprob: -13.500152587890625
    6. '<|end|>' → logprob: -13.625152587890625
    7. '    
' → logprob: -13.875152587890625
    8. '.print' → logprob: -14.125152587890625
    9. '#print' → logprob: -14.500152587890625
    10. '```' → logprob: -15.375152587890625

Token 559: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005184662528336048
    2. '
' → logprob: -5.505184650421143
    3. '   ' → logprob: -7.755184650421143
    4. '    
' → logprob: -8.3801851272583
    5. '  
' → logprob: -9.1301851272583
    6. ' print' → logprob: -9.5051851272583
    7. '<|end|>' → logprob: -9.5051851272583
    8. '\n' → logprob: -10.2551851272583
    9. ' 
' → logprob: -10.3801851272583
    10. 'newline' → logprob: -10.6301851272583

Token 560: 'Pre' (ID: 4319)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23085248470306396
    2. 'def' → logprob: -1.605852484703064
    3. '()' → logprob: -6.1058526039123535
    4. 'Pre' → logprob: -6.2308526039123535
    5. '(print' → logprob: -8.105852127075195
    6. '(x' → logprob: -8.730852127075195
    7. ')' → logprob: -8.855852127075195
    8. '   ' → logprob: -9.105852127075195
    9. 'pre' → logprob: -9.230852127075195
    10. '()
' → logprob: -9.480852127075195

Token 561: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -6.980854959692806e-05
    2. 'print' → logprob: -9.875069618225098
    3. 'Order' → logprob: -12.250069618225098
    4. 'def' → logprob: -12.375069618225098
    5. 'r' → logprob: -13.125069618225098
    6. '(order' → logprob: -13.125069618225098
    7. 'ord' → logprob: -13.375069618225098
    8. 'o' → logprob: -14.000069618225098
    9. '_order' → logprob: -14.500069618225098
    10. 'or' → logprob: -14.750069618225098

Token 562: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.9146995327901095e-05
    2. '(' → logprob: -10.875019073486328
    3. '(
' → logprob: -16.750019073486328
    4. ' (' → logprob: -18.000019073486328
    5. '(root' → logprob: -18.250019073486328
    6. 'x' → logprob: -18.250019073486328
    7. '(node' → logprob: -18.875019073486328
    8. '(None' → logprob: -20.000019073486328
    9. '```' → logprob: -20.125019073486328
    10. ',x' → logprob: -20.375019073486328

Token 563: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.01867670938372612
    2. '.left' → logprob: -4.0186767578125
    3. '.' → logprob: -7.6436767578125
    4. '.x' → logprob: -10.1436767578125
    5. ')' → logprob: -12.2686767578125
    6. ').' → logprob: -13.3936767578125
    7. ' .' → logprob: -14.0186767578125
    8. '.Right' → logprob: -14.2686767578125
    9. '.next' → logprob: -15.6436767578125
    10. '(x' → logprob: -15.8936767578125

Token 564: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ')
' → logprob: -12.375005722045898
    3. ')x' → logprob: -13.750005722045898
    4. ' )' → logprob: -15.500005722045898
    5. '(x' → logprob: -15.875005722045898
    6. '   ' → logprob: -17.5000057220459
    7. ')`' → logprob: -17.6250057220459
    8. ')#' → logprob: -17.6250057220459
    9. ')return' → logprob: -18.2500057220459
    10. ')

' → logprob: -18.5000057220459

Token 565: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 566: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010418275371193886
    2. ' print' → logprob: -4.76041841506958
    3. 'main' → logprob: -6.51041841506958
    4. ' main' → logprob: -8.760417938232422
    5. 'insert' → logprob: -9.635417938232422
    6. 'in' → logprob: -9.760417938232422
    7. 'input' → logprob: -12.260417938232422
    8. 'search' → logprob: -13.010417938232422
    9. 'def' → logprob: -13.010417938232422
    10. 'pre' → logprob: -13.260417938232422

Token 567: 'Mid' (ID: 41748)
  Prédit: 'In'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'In' → logprob: -0.005964580457657576
    2. 'Pre' → logprob: -5.380964756011963
    3. 'Post' → logprob: -6.755964756011963
    4. 'in' → logprob: -8.880964279174805
    5. 'Order' → logprob: -11.380964279174805
    6. '_in' → logprob: -11.755964279174805
    7. ' inorder' → logprob: -12.130964279174805
    8. 'IN' → logprob: -12.755964279174805
    9. '(In' → logprob: -13.130964279174805
    10. 'Tree' → logprob: -13.130964279174805

Token 568: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0002636006975080818
    2. 'Order' → logprob: -8.375263214111328
    3. 'pre' → logprob: -10.875263214111328
    4. '(x' → logprob: -12.250263214111328
    5. 'ord' → logprob: -13.250263214111328
    6. 'print' → logprob: -13.375263214111328
    7. 'ordert' → logprob: -14.125263214111328
    8. 'orde' → logprob: -14.250263214111328
    9. 'ordre' → logprob: -14.500263214111328
    10. 'oder' → logprob: -14.625263214111328

Token 569: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0007125511183403432
    2. '(' → logprob: -7.2507123947143555
    3. '(root' → logprob: -13.875712394714355
    4. '(s' → logprob: -15.750712394714355
    5. '(X' → logprob: -15.750712394714355
    6. 'x' → logprob: -15.875712394714355
    7. '(n' → logprob: -16.125713348388672
    8. 'def' → logprob: -16.250713348388672
    9. '(a' → logprob: -16.375713348388672
    10. '(T' → logprob: -16.625713348388672

Token 570: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010903744027018547
    2. ')' → logprob: -5.010903835296631
    3. '(x' → logprob: -6.010903835296631
    4. '):
' → logprob: -6.385903835296631
    5. '):

' → logprob: -10.510903358459473
    6. ')x' → logprob: -12.135903358459473
    7. '):
' → logprob: -12.760903358459473
    8. ':' → logprob: -13.385903358459473
    9. ')**' → logprob: -13.760903358459473
    10. 'x' → logprob: -14.010903358459473

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13954642415046692
    2. 'if' → logprob: -2.1395463943481445
    3. ' if' → logprob: -4.3895463943481445
    4. 'def' → logprob: -9.389546394348145
    5. 'print' → logprob: -10.639546394348145
    6. '	if' → logprob: -11.264546394348145
    7. 'x' → logprob: -12.389546394348145
    8. '```' → logprob: -12.389546394348145
    9. ' ' → logprob: -13.514546394348145
    10. '    
' → logprob: -14.264546394348145

Token 572: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -5.3596853831550106e-05
    2. 'print' → logprob: -10.000053405761719
    3. ' if' → logprob: -11.750053405761719
    4. '   ' → logprob: -15.250053405761719
    5. '```' → logprob: -16.87505340576172
    6. 'def' → logprob: -19.25005340576172
    7. '    
' → logprob: -21.00005340576172
    8. '	if' → logprob: -21.37505340576172
    9. 'If' → logprob: -21.50005340576172
    10. '
' → logprob: -21.87505340576172

Token 573: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01416350994259119
    2. ' x' → logprob: -4.264163494110107
    3. '(x' → logprob: -16.764163970947266
    4. ' ' → logprob: -19.889163970947266
    5. '   ' → logprob: -20.139163970947266
    6. '	x' → logprob: -20.514163970947266
    7. ' ' → logprob: -21.139163970947266
    8. 'not' → logprob: -21.264163970947266
    9. '  ' → logprob: -21.639163970947266
    10. ' (' → logprob: -22.639163970947266

Token 574: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31326499581336975
    2. '==' → logprob: -1.3132649660110474
    3. ' is' → logprob: -13.688264846801758
    4. '   ' → logprob: -14.563264846801758
    5. ' !=' → logprob: -14.563264846801758
    6. ' ' → logprob: -15.188264846801758
    7. '=' → logprob: -15.313264846801758
    8. '.left' → logprob: -15.438264846801758
    9. '!=' → logprob: -15.938264846801758
    10. ' =' → logprob: -16.438264846801758

Token 575: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00011617878044489771
    2. ' None' → logprob: -9.375116348266602
    3. 'x' → logprob: -10.375116348266602
    4. '(None' → logprob: -16.7501163482666
    5. 'none' → logprob: -17.6251163482666
    6. '=None' → logprob: -18.3751163482666
    7. '0' → logprob: -18.3751163482666
    8. ' x' → logprob: -18.6251163482666
    9. '   ' → logprob: -18.7501163482666
    10. '_None' → logprob: -19.6251163482666

Token 576: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0777321606874466
    2. ':
' → logprob: -3.0777320861816406
    3. '   ' → logprob: -3.5777320861816406
    4. '       ' → logprob: -7.577732086181641
    5. ':return' → logprob: -8.82773208618164
    6. '():
' → logprob: -9.70273208618164
    7. '():' → logprob: -10.57773208618164
    8. '<|end|>' → logprob: -11.32773208618164
    9. '):
' → logprob: -12.32773208618164
    10. '  ' → logprob: -12.57773208618164

Token 577: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013018222525715828
    2. 'return' → logprob: -4.5130181312561035
    3. '       ' → logprob: -6.2630181312561035
    4. ' return' → logprob: -9.763018608093262
    5. '	return' → logprob: -12.513018608093262
    6. '    
' → logprob: -14.263018608093262
    7. '   ' → logprob: -15.263018608093262
    8. '
' → logprob: -15.513018608093262
    9. '  ' → logprob: -15.888018608093262
    10. ' ' → logprob: -16.138017654418945

Token 578: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.038295771926641464
    2. '   ' → logprob: -3.2882957458496094
    3. ' return' → logprob: -8.28829574584961
    4. '  ' → logprob: -13.91329574584961
    5. '	return' → logprob: -14.41329574584961
    6. ' ' → logprob: -14.41329574584961
    7. '       ' → logprob: -14.53829574584961
    8. 'print' → logprob: -15.53829574584961
    9. '    
' → logprob: -16.28829574584961
    10. '    ' → logprob: -17.41329574584961

Token 579: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003404687449801713
    2. '
' → logprob: -8.250340461730957
    3. '    
' → logprob: -10.625340461730957
    4. 'print' → logprob: -10.750340461730957
    5. ' print' → logprob: -11.125340461730957
    6. '```' → logprob: -12.000340461730957
    7. '[' → logprob: -13.000340461730957
    8. '(print' → logprob: -13.000340461730957
    9. '	print' → logprob: -13.125340461730957
    10. '       ' → logprob: -13.625340461730957

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010733450762927532
    2. ' print' → logprob: -4.635733604431152
    3. 'print' → logprob: -7.010733604431152
    4. '```' → logprob: -10.135733604431152
    5. '(print' → logprob: -11.260733604431152
    6. '
' → logprob: -11.760733604431152
    7. '	print' → logprob: -11.885733604431152
    8. '   ' → logprob: -13.010733604431152
    9. '    
' → logprob: -13.260733604431152
    10. 'def' → logprob: -14.260733604431152

Token 581: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0013124977704137564
    2. ' print' → logprob: -6.751312732696533
    3. '   ' → logprob: -8.876312255859375
    4. '	print' → logprob: -14.251312255859375
    5. '(print' → logprob: -14.376312255859375
    6. ' ' → logprob: -14.501312255859375
    7. '  ' → logprob: -15.376312255859375
    8. 'def' → logprob: -15.376312255859375
    9. '.print' → logprob: -15.626312255859375
    10. '```' → logprob: -16.501312255859375

Token 582: '(end' (ID: 29409)
  Prédit: 'Mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mid' → logprob: -0.264594167470932
    2. '(x' → logprob: -1.6395941972732544
    3. 'Pre' → logprob: -3.264594078063965
    4. 'x' → logprob: -9.014594078063965
    5. 'In' → logprob: -10.639594078063965
    6. '(mid' → logprob: -11.639594078063965
    7. 'print' → logprob: -11.889594078063965
    8. '_mid' → logprob: -12.014594078063965
    9. 'mid' → logprob: -12.139594078063965
    10. 'MID' → logprob: -12.389594078063965

Token 583: '='' (ID: 2053)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12708359956741333
    2. '('' → logprob: -2.1270835399627686
    3. '(' → logprob: -9.627083778381348
    4. ')' → logprob: -10.627083778381348
    5. ''x' → logprob: -10.752083778381348
    6. '"' → logprob: -11.002083778381348
    7. '(x' → logprob: -11.502083778381348
    8. 'x' → logprob: -11.877083778381348
    9. '("' → logprob: -12.627083778381348
    10. '')' → logprob: -13.502083778381348

Token 584: ' ')
' (ID: 49195)
  Prédit: ' ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ')' → logprob: -0.6132925748825073
    2. ' ')
' → logprob: -0.8632925748825073
    3. '')' → logprob: -3.988292694091797
    4. ''' → logprob: -4.363292694091797
    5. '')
' → logprob: -5.488292694091797
    6. ' '' → logprob: -7.363292694091797
    7. ' ')
' → logprob: -8.363292694091797
    8. 'x' → logprob: -8.863292694091797
    9. '('' → logprob: -9.113292694091797
    10. ''x' → logprob: -9.863292694091797

Token 585: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011355629976605996
    2. 'x' → logprob: -9.125113487243652
    3. ' print' → logprob: -13.250113487243652
    4. '   ' → logprob: -13.375113487243652
    5. 'def' → logprob: -14.250113487243652
    6. '(print' → logprob: -14.750113487243652
    7. '.print' → logprob: -16.25011444091797
    8. ' x' → logprob: -16.37511444091797
    9. '
' → logprob: -19.00011444091797
    10. '    
' → logprob: -19.12511444091797

Token 586: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0031793788075447083
    2. 'x' → logprob: -5.753179550170898
    3. ' print' → logprob: -14.128179550170898
    4. '(print' → logprob: -14.628179550170898
    5. '.print' → logprob: -16.3781795501709
    6. 'def' → logprob: -16.3781795501709
    7. ' x' → logprob: -16.5031795501709
    8. '(x' → logprob: -17.0031795501709
    9. '```' → logprob: -17.2531795501709
    10. 'printf' → logprob: -17.2531795501709

Token 587: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.023245826363563538
    2. 'x' → logprob: -3.7732458114624023
    3. ' x' → logprob: -15.773245811462402
    4. '(' → logprob: -16.14824676513672
    5. '{x' → logprob: -18.52324676513672
    6. 'print' → logprob: -18.64824676513672
    7. '   ' → logprob: -18.64824676513672
    8. 'node' → logprob: -19.14824676513672
    9. '	x' → logprob: -19.14824676513672
    10. 'Mid' → logprob: -19.52324676513672

Token 588: ',end' (ID: 93014)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.23303787410259247
    2. '.key' → logprob: -2.4830379486083984
    3. ')' → logprob: -3.2330379486083984
    4. '.x' → logprob: -3.2330379486083984
    5. 'left' → logprob: -3.6080379486083984
    6. 'key' → logprob: -5.733037948608398
    7. ',x' → logprob: -5.983037948608398
    8. 'print' → logprob: -6.233037948608398
    9. '(x' → logprob: -6.358037948608398
    10. 'x' → logprob: -6.483037948608398

Token 589: '='')
' (ID: 135148)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.5421902537345886
    2. ''' → logprob: -1.4171903133392334
    3. ')' → logprob: -1.7921903133392334
    4. '='')
' → logprob: -5.417190074920654
    5. '('' → logprob: -6.417190074920654
    6. '''' → logprob: -6.667190074920654
    7. ' '')' → logprob: -7.042190074920654
    8. '')' → logprob: -7.417190074920654
    9. '=' → logprob: -7.542190074920654
    10. '=''' → logprob: -9.667190551757812

Token 590: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016054363222792745
    2. 'def' → logprob: -7.25160551071167
    3. '   ' → logprob: -7.37660551071167
    4. '
' → logprob: -9.626605033874512
    5. ' print' → logprob: -9.626605033874512
    6. '.print' → logprob: -10.126605033874512
    7. '(print' → logprob: -10.626605033874512
    8. '<|end|>' → logprob: -11.126605033874512
    9. 'Mid' → logprob: -11.501605033874512
    10. '    
' → logprob: -11.501605033874512

Token 591: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.130576806142926e-05
    2. '   ' → logprob: -11.375031471252441
    3. ' print' → logprob: -12.375031471252441
    4. '
' → logprob: -12.500031471252441
    5. 'Print' → logprob: -13.250031471252441
    6. '    
' → logprob: -13.250031471252441
    7. '(print' → logprob: -13.250031471252441
    8. 'Mid' → logprob: -13.500031471252441
    9. '.print' → logprob: -13.625031471252441
    10. 'Pre' → logprob: -14.125031471252441

Token 592: 'Mid' (ID: 41748)
  Prédit: 'Pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pre' → logprob: -0.6703824996948242
    2. 'Mid' → logprob: -0.7953824996948242
    3. 'print' → logprob: -3.670382499694824
    4. '(x' → logprob: -4.545382499694824
    5. 'x' → logprob: -7.795382499694824
    6. 'Post' → logprob: -8.045382499694824
    7. 'pre' → logprob: -8.920382499694824
    8. 'Print' → logprob: -10.045382499694824
    9. '(print' → logprob: -10.045382499694824
    10. 'mid' → logprob: -12.045382499694824

Token 593: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.1472419600977446e-06
    2. '(order' → logprob: -14.500000953674316
    3. 'in' → logprob: -15.750000953674316
    4. 'or' → logprob: -16.000001907348633
    5. 'Order' → logprob: -16.250001907348633
    6. 'o' → logprob: -16.500001907348633
    7. ' order' → logprob: -17.375001907348633
    8. 'ordre' → logprob: -17.750001907348633
    9. 'ord' → logprob: -17.875001907348633
    10. 'oder' → logprob: -18.125001907348633

Token 594: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0002619318547658622
    2. '(' → logprob: -8.250262260437012
    3. 'x' → logprob: -14.875262260437012
    4. '(
' → logprob: -16.000261306762695
    5. ' (' → logprob: -16.125261306762695
    6. '```' → logprob: -16.625261306762695
    7. ',x' → logprob: -17.750261306762695
    8. '(left' → logprob: -18.125261306762695
    9. '((' → logprob: -18.375261306762695
    10. 'left' → logprob: -18.625261306762695

Token 595: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0006516746943816543
    2. '.right' → logprob: -7.500651836395264
    3. '.' → logprob: -9.750651359558105
    4. '.x' → logprob: -10.250651359558105
    5. 'left' → logprob: -12.750651359558105
    6. '(x' → logprob: -13.250651359558105
    7. ')' → logprob: -15.500651359558105
    8. '.Left' → logprob: -16.250652313232422
    9. ' .' → logprob: -16.875652313232422
    10. '(left' → logprob: -17.250652313232422

Token 596: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011079294607043266
    2. ')
' → logprob: -4.51107931137085
    3. '   ' → logprob: -11.136078834533691
    4. ')x' → logprob: -11.761078834533691
    5. '.right' → logprob: -12.386078834533691
    6. ')

' → logprob: -13.386078834533691
    7. '.x' → logprob: -14.011078834533691
    8. '(x' → logprob: -14.886078834533691
    9. '.left' → logprob: -15.011078834533691
    10. '),' → logprob: -15.011078834533691

Token 597: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.061343174427747726
    2. 'def' → logprob: -3.061343193054199
    3. '```' → logprob: -5.186343193054199
    4. '<|end|>' → logprob: -5.436343193054199
    5. '   ' → logprob: -6.811343193054199
    6. '(print' → logprob: -7.311343193054199
    7. ' print' → logprob: -7.561343193054199
    8. ')' → logprob: -8.8113431930542
    9. '``' → logprob: -9.8113431930542
    10. '#print' → logprob: -9.8113431930542

Token 598: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.013614017516374588
    2. '<|end|>' → logprob: -4.388614177703857
    3. ' print' → logprob: -7.138614177703857
    4. '(print' → logprob: -8.7636137008667
    5. ')' → logprob: -10.0136137008667
    6. '   ' → logprob: -10.3886137008667
    7. '<|end|>' → logprob: -10.7636137008667
    8. '	print' → logprob: -11.2636137008667
    9. 'def' → logprob: -11.3886137008667
    10. '.print' → logprob: -11.3886137008667

Token 599: 'Mid' (ID: 41748)
  Prédit: 'Mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mid' → logprob: -0.7263725399971008
    2. '(end' → logprob: -1.226372480392456
    3. '(x' → logprob: -1.726372480392456
    4. '(' → logprob: -3.226372480392456
    5. 'Pre' → logprob: -5.476372718811035
    6. 'end' → logprob: -7.976372718811035
    7. '('' → logprob: -8.226372718811035
    8. 'End' → logprob: -9.226372718811035
    9. '()' → logprob: -9.351372718811035
    10. '(order' → logprob: -9.601372718811035

Token 600: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.652451464906335e-05
    2. '(order' → logprob: -11.125016212463379
    3. ' order' → logprob: -13.875016212463379
    4. 'print' → logprob: -15.875016212463379
    5. 'Order' → logprob: -16.000017166137695
    6. 'ordre' → logprob: -16.625017166137695
    7. '(' → logprob: -16.625017166137695
    8. 'def' → logprob: -17.000017166137695
    9. '	order' → logprob: -17.000017166137695
    10. 'orde' → logprob: -17.000017166137695

Token 601: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -3.166338137816638e-05
    2. '(' → logprob: -10.375031471252441
    3. 'x' → logprob: -15.500031471252441
    4. ' (' → logprob: -16.875032424926758
    5. '(
' → logprob: -17.250032424926758
    6. '```' → logprob: -18.750032424926758
    7. '<|end|>' → logprob: -19.500032424926758
    8. '()' → logprob: -20.125032424926758
    9. ')' → logprob: -20.375032424926758
    10. '((' → logprob: -21.250032424926758

Token 602: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -3.619311974034645e-05
    2. 'right' → logprob: -10.375036239624023
    3. '.' → logprob: -13.000036239624023
    4. '.left' → logprob: -13.125036239624023
    5. ')' → logprob: -15.000036239624023
    6. '(right' → logprob: -15.875036239624023
    7. '.Right' → logprob: -17.000036239624023
    8. ' .' → logprob: -17.250036239624023
    9. 'Right' → logprob: -18.250036239624023
    10. ' right' → logprob: -18.250036239624023

Token 603: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8444881536415778e-05
    2. ')
' → logprob: -11.250028610229492
    3. '(x' → logprob: -11.625028610229492
    4. ')x' → logprob: -12.625028610229492
    5. '())' → logprob: -13.125028610229492
    6. '()' → logprob: -14.250028610229492
    7. '   ' → logprob: -15.125028610229492
    8. ' )' → logprob: -16.375028610229492
    9. ')#' → logprob: -17.000028610229492
    10. '```' → logprob: -17.375028610229492

Token 604: 'def' (ID: 1314)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.4065871238708496
    2. '<|end|>' → logprob: -1.6565871238708496
    3. 'x' → logprob: -2.5315871238708496
    4. '```' → logprob: -4.28158712387085
    5. 'n' → logprob: -4.65658712387085
    6. '#' → logprob: -4.65658712387085
    7. ')' → logprob: -4.90658712387085
    8. '[' → logprob: -5.40658712387085
    9. '(' → logprob: -5.65658712387085
    10. '<|end|>' → logprob: -5.90658712387085

Token 605: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05596296489238739
    2. 'main' → logprob: -3.0559630393981934
    3. 'insert' → logprob: -5.055963039398193
    4. 'in' → logprob: -8.180962562561035
    5. 'search' → logprob: -8.555962562561035
    6. 'delete' → logprob: -8.805962562561035
    7. 'find' → logprob: -9.805962562561035
    8. ' print' → logprob: -10.055962562561035
    9. 'post' → logprob: -10.055962562561035
    10. 'pre' → logprob: -10.930962562561035

Token 606: 'al' (ID: 280)
  Prédit: 'In'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'In' → logprob: -0.2897486090660095
    2. 'Pre' → logprob: -1.5397486686706543
    3. 'Post' → logprob: -3.5397486686706543
    4. 'in' → logprob: -5.164748668670654
    5. 'Mid' → logprob: -6.914748668670654
    6. '('' → logprob: -8.414748191833496
    7. 'Tree' → logprob: -8.789748191833496
    8. 'pre' → logprob: -9.039748191833496
    9. '(x' → logprob: -9.164748191833496
    10. 'Order' → logprob: -9.289748191833496

Token 607: '(x' (ID: 4061)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0006428572814911604
    2. 'L' → logprob: -7.750642776489258
    3. 'll' → logprob: -9.000642776489258
    4. 'Pre' → logprob: -10.125642776489258
    5. 'ldata' → logprob: -11.500642776489258
    6. 'lf' → logprob: -12.500642776489258
    7. 'ls' → logprob: -12.625642776489258
    8. '```' → logprob: -12.750642776489258
    9. 'Post' → logprob: -13.125642776489258
    10. '(' → logprob: -13.250642776489258

Token 608: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04967055469751358
    2. '):
' → logprob: -3.424670457839966
    3. '(x' → logprob: -4.799670696258545
    4. ')' → logprob: -4.924670696258545
    5. ',' → logprob: -9.299670219421387
    6. '):

' → logprob: -9.799670219421387
    7. ':' → logprob: -9.924670219421387
    8. ')x' → logprob: -10.424670219421387
    9. ')(' → logprob: -10.549670219421387
    10. '=' → logprob: -10.799670219421387

Token 609: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0072424099780619144
    2. ' if' → logprob: -5.382242202758789
    3. 'if' → logprob: -6.257242202758789
    4. 'print' → logprob: -7.632242202758789
    5. ' print' → logprob: -9.132242202758789
    6. '#' → logprob: -10.632242202758789
    7. 'x' → logprob: -10.882242202758789
    8. '	if' → logprob: -11.632242202758789
    9. '    
' → logprob: -11.632242202758789
    10. '	print' → logprob: -11.882242202758789

Token 610: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14382177591323853
    2. 'print' (adapté à ' print') → logprob: -2.0188217163085938
    3. ' if' → logprob: -7.393821716308594
    4. 'def' → logprob: -8.018821716308594
    5. '   ' → logprob: -9.643821716308594
    6. 'from' → logprob: -9.643821716308594
    7. 'import' → logprob: -10.518821716308594
    8. 'pass' → logprob: -11.393821716308594
    9. ' print' → logprob: -11.768821716308594
    10. 'x' → logprob: -12.018821716308594

Token 611: 'Pre' (ID: 4319)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.807047426700592
    2. '(' → logprob: -1.0570473670959473
    3. 'Pre' → logprob: -1.6820473670959473
    4. 'Mid' → logprob: -4.557047367095947
    5. '('' → logprob: -5.432047367095947
    6. '()' → logprob: -5.682047367095947
    7. '("("' → logprob: -7.432047367095947
    8. 'x' → logprob: -7.557047367095947
    9. '(end' → logprob: -7.932047367095947
    10. 'pre' → logprob: -9.057047843933105

Token 612: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -4.320199877838604e-07
    2. '(order' → logprob: -16.25
    3. 'or' → logprob: -16.625
    4. 'Order' → logprob: -16.875
    5. 'print' → logprob: -17.0
    6. 'ordre' → logprob: -17.5
    7. 'oder' → logprob: -17.875
    8. 'o' → logprob: -17.875
    9. 'orde' → logprob: -18.25
    10. ' order' → logprob: -18.625

Token 613: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16153927147388458
    2. '(' → logprob: -1.9115393161773682
    3. '<|end|>' → logprob: -6.786539077758789
    4. '("("' → logprob: -10.411539077758789
    5. '(user' → logprob: -10.911539077758789
    6. '(root' → logprob: -11.411539077758789
    7. '(node' → logprob: -11.536539077758789
    8. ')' → logprob: -11.661539077758789
    9. '(X' → logprob: -11.786539077758789
    10. '(xs' → logprob: -12.161539077758789

Token 614: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3915141355246305e-05
    2. ')
' → logprob: -10.87502384185791
    3. '.right' → logprob: -13.12502384185791
    4. '.left' → logprob: -13.87502384185791
    5. ')x' → logprob: -14.00002384185791
    6. ' )' → logprob: -15.00002384185791
    7. '(x' → logprob: -15.12502384185791
    8. '())' → logprob: -15.87502384185791
    9. '.x' → logprob: -16.125024795532227
    10. ')#' → logprob: -16.375024795532227

Token 615: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8998298645019531
    2. '<|end|>' → logprob: -1.2748298645019531
    3. ')' → logprob: -2.399829864501953
    4. 'print' → logprob: -2.774829864501953
    5. 'p' → logprob: -3.024829864501953
    6. 'x' → logprob: -3.649829864501953
    7. '(' → logprob: -4.274829864501953
    8. '()' → logprob: -4.274829864501953
    9. ' ' → logprob: -4.399829864501953
    10. '[' → logprob: -4.899829864501953

Token 616: ' print' (ID: 2123)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7747824192047119
    2. '<|end|>' → logprob: -1.399782419204712
    3. ')' → logprob: -1.649782419204712
    4. '()' → logprob: -3.524782419204712
    5. '[' → logprob: -3.899782419204712
    6. 'def' → logprob: -4.024782180786133
    7. '
' → logprob: -5.399782180786133
    8. '(x' → logprob: -5.524782180786133
    9. ',' → logprob: -5.649782180786133
    10. '```' → logprob: -5.774782180786133

Token 617: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7434186935424805
    2. '<|end|>' → logprob: -1.2434186935424805
    3. '(' → logprob: -2.2434186935424805
    4. '(x' → logprob: -2.7434186935424805
    5. 'x' → logprob: -3.7434186935424805
    6. 'Mid' → logprob: -4.8684186935424805
    7. ')' → logprob: -4.9934186935424805
    8. 'print' → logprob: -5.3684186935424805
    9. 'Pre' → logprob: -5.3684186935424805
    10. '#' → logprob: -5.9934186935424805

Token 618: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31641170382499695
    2. 'p' → logprob: -1.8164117336273193
    3. '[' → logprob: -3.4414117336273193
    4. 'def' → logprob: -3.5664117336273193
    5. '<|end|>' → logprob: -4.06641149520874
    6. ')' → logprob: -5.06641149520874
    7. ' ' → logprob: -5.19141149520874
    8. 'x' → logprob: -5.44141149520874
    9. '#' → logprob: -5.69141149520874
    10. '
' → logprob: -6.06641149520874

Token 619: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0032995089422911406
    2. '<|end|>' → logprob: -6.128299713134766
    3. 'def' → logprob: -7.128299713134766
    4. ' print' → logprob: -8.878299713134766
    5. '(print' → logprob: -9.503299713134766
    6. 'x' → logprob: -10.628299713134766
    7. ')' → logprob: -10.753299713134766
    8. '
' → logprob: -11.753299713134766
    9. '```' → logprob: -11.753299713134766
    10. 'class' → logprob: -11.878299713134766

Token 620: 'Mid' (ID: 41748)
  Prédit: 'Mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mid' → logprob: -0.00019853383128065616
    2. '(x' → logprob: -8.625198364257812
    3. 'x' → logprob: -12.625198364257812
    4. '(' → logprob: -12.750198364257812
    5. '_mid' → logprob: -12.875198364257812
    6. ' Mid' → logprob: -12.875198364257812
    7. 'def' → logprob: -13.375198364257812
    8. 'mid' → logprob: -13.500198364257812
    9. '()' → logprob: -13.750198364257812
    10. 'print' → logprob: -13.750198364257812

Token 621: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -4.320199877838604e-07
    2. '(order' → logprob: -15.0
    3. 'orde' → logprob: -16.75
    4. ' order' → logprob: -17.75
    5. 'ordre' → logprob: -18.0
    6. '```' → logprob: -18.375
    7. 'ord' → logprob: -18.5
    8. 'or' → logprob: -18.5
    9. 'print' → logprob: -18.75
    10. 'orer' → logprob: -19.625

Token 622: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -5.919942486798391e-05
    2. '(' → logprob: -9.750059127807617
    3. '<|end|>' → logprob: -14.875059127807617
    4. ' (' → logprob: -15.625059127807617
    5. '```' → logprob: -16.625059127807617
    6. '(
' → logprob: -16.750059127807617
    7. '(root' → logprob: -17.250059127807617
    8. 'x' → logprob: -17.625059127807617
    9. ')' → logprob: -17.750059127807617
    10. ')(' → logprob: -17.750059127807617

Token 623: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026729601086117327
    2. '(x' → logprob: -8.500267028808594
    3. ')x' → logprob: -9.750267028808594
    4. ')
' → logprob: -12.500267028808594
    5. 'x' → logprob: -14.625267028808594
    6. ');' → logprob: -15.125267028808594
    7. ' )' → logprob: -15.250267028808594
    8. '))' → logprob: -15.375267028808594
    9. ',x' → logprob: -16.125267028808594
    10. ')return' → logprob: -16.750267028808594

Token 624: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6727749705314636
    2. ')' → logprob: -1.2977750301361084
    3. '[' → logprob: -2.1727750301361084
    4. '<|end|>' → logprob: -2.7977750301361084
    5. '_' → logprob: -4.047774791717529
    6. '
' → logprob: -4.672774791717529
    7. ' ' → logprob: -5.797774791717529
    8. ':' → logprob: -6.547774791717529
    9. ',' → logprob: -6.797774791717529
    10. ' (' → logprob: -6.797774791717529

Token 625: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 626: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6377769112586975
    2. '[' → logprob: -1.8877768516540527
    3. ')' → logprob: -2.1377768516540527
    4. '#' → logprob: -2.8877768516540527
    5. 'n' → logprob: -3.5127768516540527
    6. 'x' → logprob: -3.6377768516540527
    7. ' ' → logprob: -4.012776851654053
    8. 'T' → logprob: -4.137776851654053
    9. 'a' → logprob: -4.512776851654053
    10. '<|end|>' → logprob: -4.887776851654053

Token 627: 'N' (ID: 45)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3638998866081238
    2. 'n' → logprob: -2.1138999462127686
    3. 'I' → logprob: -3.4888999462127686
    4. '#' → logprob: -3.6138999462127686
    5. '[' → logprob: -3.6138999462127686
    6. ' ' → logprob: -4.2388997077941895
    7. 'T' → logprob: -4.3638997077941895
    8. ')' → logprob: -4.3638997077941895
    9. 'r' → logprob: -4.4888997077941895
    10. 'a' → logprob: -4.4888997077941895

Token 628: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006148838438093662
    2. ' =' → logprob: -5.381148815155029
    3. '.' → logprob: -8.256149291992188
    4. '=None' → logprob: -8.881149291992188
    5. '_' → logprob: -8.881149291992188
    6. '=[]' → logprob: -9.006149291992188
    7. '<|end|>' → logprob: -9.256149291992188
    8. 'N' → logprob: -9.381149291992188
    9. '=int' → logprob: -9.381149291992188
    10. 'O' → logprob: -9.506149291992188

Token 629: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006878530140966177
    2. 'None' → logprob: -5.13187837600708
    3. '10' → logprob: -7.25687837600708
    4. ' int' → logprob: -9.381878852844238
    5. '0' → logprob: -9.631878852844238
    6. '5' → logprob: -11.131878852844238
    7. '100' → logprob: -11.381878852844238
    8. '7' → logprob: -11.881878852844238
    9. '[int' → logprob: -11.881878852844238
    10. '20' → logprob: -12.006878852844238

Token 630: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3173033893108368
    2. '()' → logprob: -1.3173034191131592
    3. '(' → logprob: -6.31730318069458
    4. '('' → logprob: -6.81730318069458
    5. 'input' → logprob: -6.94230318069458
    6. ' ()' → logprob: -9.567303657531738
    7. '()
' → logprob: -10.942303657531738
    8. '("")' → logprob: -11.067303657531738
    9. '("' → logprob: -11.192303657531738
    10. '=input' → logprob: -11.317303657531738

Token 631: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014189241454005241
    2. '()' → logprob: -4.26418924331665
    3. '())
' → logprob: -11.139188766479492
    4. '(' → logprob: -12.139188766479492
    5. ')' → logprob: -13.014188766479492
    6. '().' → logprob: -14.014188766479492
    7. '()
' → logprob: -14.014188766479492
    8. ' ())' → logprob: -14.264188766479492
    9. '()>' → logprob: -15.014188766479492
    10. '("' → logprob: -15.514188766479492

Token 632: 'Q' (ID: 48)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0010737768607214093
    2. 'root' → logprob: -6.876073837280273
    3. 'import' → logprob: -11.001073837280273
    4. 'for' → logprob: -11.001073837280273
    5. '
' → logprob: -13.626073837280273
    6. 'roots' → logprob: -14.126073837280273
    7. ' T' → logprob: -14.251073837280273
    8. 'tree' → logprob: -14.251073837280273
    9. 'keys' → logprob: -14.626073837280273
    10. 'A' → logprob: -14.876073837280273

Token 633: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0924735963344574
    2. '=' → logprob: -2.4674735069274902
    3. '=int' → logprob: -6.09247350692749
    4. 'u' → logprob: -7.59247350692749
    5. ' ' → logprob: -8.092473983764648
    6. '=input' → logprob: -9.092473983764648
    7. '  ' → logprob: -9.842473983764648
    8. 's' → logprob: -9.967473983764648
    9. '   ' → logprob: -10.467473983764648
    10. 'import' → logprob: -10.592473983764648

Token 634: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005425611976534128
    2. '[]' → logprob: -5.255425453186035
    3. '[int' → logprob: -9.505425453186035
    4. ' int' → logprob: -9.505425453186035
    5. 'N' → logprob: -11.005425453186035
    6. '[]
' → logprob: -11.505425453186035
    7. ' []' → logprob: -11.630425453186035
    8. '0' → logprob: -12.005425453186035
    9. 'input' → logprob: -14.755425453186035
    10. '[' → logprob: -15.130425453186035

Token 635: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024394633248448372
    2. '().' → logprob: -3.7743947505950928
    3. '()
' → logprob: -6.774394512176514
    4. ' ()' → logprob: -12.899394989013672
    5. '()
' → logprob: -14.149394989013672
    6. '()

' → logprob: -14.524394989013672
    7. '(' → logprob: -14.649394989013672
    8. '())' → logprob: -14.774394989013672
    9. '("")' → logprob: -14.899394989013672
    10. '()>' → logprob: -15.899394989013672

Token 636: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020389800192788243
    2. 'strip' → logprob: -8.500204086303711
    3. ' split' → logprob: -15.500204086303711
    4. 'rstrip' → logprob: -16.37520408630371
    5. 'spl' → logprob: -18.75020408630371
    6. '(split' → logprob: -19.12520408630371
    7. '_split' → logprob: -21.00020408630371
    8. 's' → logprob: -21.00020408630371
    9. '.split' → logprob: -21.50020408630371
    10. 'replace' → logprob: -23.00020408630371

Token 637: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006429764907807112
    2. '()
' → logprob: -7.625642776489258
    3. '(' → logprob: -9.375642776489258
    4. '('' → logprob: -9.750642776489258
    5. '()\' → logprob: -12.375642776489258
    6. ' ()' → logprob: -13.375642776489258
    7. '()

' → logprob: -13.375642776489258
    8. '()[' → logprob: -13.750642776489258
    9. '('\' → logprob: -14.375642776489258
    10. '()]' → logprob: -14.625642776489258

Token 638: 'T' (ID: 51)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08325059711933136
    2. 'T' → logprob: -3.0832505226135254
    3. 'if' → logprob: -4.083250522613525
    4. 'root' → logprob: -4.833250522613525
    5. 'i' → logprob: -5.333250522613525
    6. 'x' → logprob: -5.708250522613525
    7. 'while' → logprob: -8.083250999450684
    8. ' for' → logprob: -8.333250999450684
    9. 'z' → logprob: -8.333250999450684
    10. 't' → logprob: -9.708250999450684

Token 639: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868757486343384
    2. ' =' → logprob: -1.1368757486343384
    3. '=None' → logprob: -13.261876106262207
    4. ' ' → logprob: -13.386876106262207
    5. ',' → logprob: -14.511876106262207
    6. '=[]' → logprob: -15.761876106262207
    7. '=
' → logprob: -15.886876106262207
    8. '  ' → logprob: -16.01187515258789
    9. '＝' → logprob: -16.51187515258789
    10. 'None' → logprob: -16.51187515258789

Token 640: ' Node' (ID: 10882)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.615255839889869e-05
    2. ' None' → logprob: -9.250096321105957
    3. '0' → logprob: -19.75009536743164
    4. '(None' → logprob: -21.00009536743164
    5. '_None' → logprob: -21.12509536743164
    6. 'none' → logprob: -21.37509536743164
    7. '=None' → logprob: -22.50009536743164
    8. '   ' → logprob: -23.00009536743164
    9. '```' → logprob: -23.00009536743164
    10. 'Node' → logprob: -23.00009536743164

Token 641: '(int' (ID: 2742)
  Prédit: '(None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.006052747368812561
    2. '(' → logprob: -5.7560529708862305
    3. 'None' → logprob: -5.8810529708862305
    4. '(-' → logprob: -10.25605297088623
    5. '()' → logprob: -10.50605297088623
    6. ' (' → logprob: -12.13105297088623
    7. ' None' → logprob: -13.00605297088623
    8. '(int' → logprob: -13.13105297088623
    9. '(N' → logprob: -13.25605297088623
    10. '('' → logprob: -13.63105297088623

Token 642: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -6.277553620748222e-05
    2. 'Q' → logprob: -9.875062942504883
    3. '(N' → logprob: -11.750062942504883
    4. '(' → logprob: -12.875062942504883
    5. ' ' → logprob: -15.750062942504883
    6. 'N' → logprob: -15.875062942504883
    7. '   ' → logprob: -16.000062942504883
    8. '((' → logprob: -16.500062942504883
    9. '(-' → logprob: -16.625062942504883
    10. '  ' → logprob: -16.875062942504883

Token 643: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00033558503491804004
    2. '0' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.875335693359375
    4. '(' → logprob: -17.250335693359375
    5. '[
' → logprob: -17.375335693359375
    6. '```' → logprob: -18.500335693359375
    7. ' ' → logprob: -18.625335693359375
    8. ' [' → logprob: -18.750335693359375
    9. '.pop' → logprob: -18.875335693359375
    10. '1' → logprob: -19.500335693359375

Token 644: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.794061770662665e-05
    2. '[' → logprob: -9.37509822845459
    3. ' ' → logprob: -11.87509822845459
    4. '1' → logprob: -12.37509822845459
    5. '   ' → logprob: -14.00009822845459
    6. '-' → logprob: -14.75009822845459
    7. '```' → logprob: -16.062597274780273
    8. '2' → logprob: -17.125097274780273
    9. '(' → logprob: -17.125097274780273
    10. '
' → logprob: -17.375097274780273

Token 645: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.36174315214157104
    2. '),' → logprob: -1.2367432117462158
    3. '[' → logprob: -4.986742973327637
    4. '],' → logprob: -5.361742973327637
    5. ']))' → logprob: -7.486742973327637
    6. '])' → logprob: -7.986742973327637
    7. ']' → logprob: -8.611742973327637
    8. ')),' → logprob: -8.611742973327637
    9. ' ),' → logprob: -9.236742973327637
    10. ')' → logprob: -9.486742973327637

Token 646: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00012439649435691535
    2. ' None' → logprob: -9.000123977661133
    3. ',None' → logprob: -14.625123977661133
    4. '   ' → logprob: -15.000123977661133
    5. '(None' → logprob: -16.000123977661133
    6. '_None' → logprob: -17.375123977661133
    7. '```' → logprob: -17.500123977661133
    8. '  ' → logprob: -17.625123977661133
    9. '
' → logprob: -17.750123977661133
    10. '0' → logprob: -17.875123977661133

Token 647: ',None' (ID: 186897)
  Prédit: ',None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',None' → logprob: -0.014195828698575497
    2. ',' → logprob: -4.264195919036865
    3. ',null' → logprob: -11.014195442199707
    4. ' ,' → logprob: -11.639195442199707
    5. 'None' → logprob: -12.514195442199707
    6. ',NULL' → logprob: -13.264195442199707
    7. '(None' → logprob: -14.264195442199707
    8. ',
' → logprob: -15.014195442199707
    9. ',nil' → logprob: -15.139195442199707
    10. ' None' → logprob: -15.139195442199707

Token 648: ',None' (ID: 186897)
  Prédit: ',None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',None' → logprob: -0.0002993544621858746
    2. 'None' → logprob: -8.250299453735352
    3. ',' → logprob: -10.250299453735352
    4. ' None' → logprob: -13.000299453735352
    5. '(None' → logprob: -14.750299453735352
    6. '=None' → logprob: -17.50029945373535
    7. ',null' → logprob: -17.62529945373535
    8. '_None' → logprob: -17.87529945373535
    9. ',NULL' → logprob: -18.00029945373535
    10. ',nil' → logprob: -19.37529945373535

Token 649: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. ')
' → logprob: -12.500004768371582
    3. ' )' → logprob: -14.375004768371582
    4. ')

' → logprob: -16.500003814697266
    5. '),' → logprob: -17.000003814697266
    6. '<|end|>' → logprob: -17.000003814697266
    7. '')' → logprob: -17.750003814697266
    8. ')#' → logprob: -17.875003814697266
    9. ')x' → logprob: -18.125003814697266
    10. ')}' → logprob: -18.250003814697266

Token 650: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10833778232336044
    2. 'i' → logprob: -2.733337879180908
    3. ' for' → logprob: -3.358337879180908
    4. '[' → logprob: -7.108337879180908
    5. ' i' → logprob: -7.858337879180908
    6. '
' → logprob: -8.60833740234375
    7. 'Q' → logprob: -8.60833740234375
    8. ' ' → logprob: -8.60833740234375
    9. 'N' → logprob: -8.73333740234375
    10. '<|end|>' → logprob: -8.98333740234375

Token 651: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43200066685676575
    2. ' i' → logprob: -1.0570006370544434
    3. '_' → logprob: -6.307000637054443
    4. '_i' → logprob: -7.057000637054443
    5. ' _' → logprob: -7.682000637054443
    6. 'q' → logprob: -9.432001113891602
    7. ' q' → logprob: -10.807001113891602
    8. ' ' → logprob: -11.182001113891602
    9. 'e' → logprob: -12.182001113891602
    10. 'v' → logprob: -12.932001113891602

Token 652: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16037289798259735
    2. 'in' → logprob: -1.9103728532791138
    3. ' ' → logprob: -9.035372734069824
    4. '  ' → logprob: -11.160372734069824
    5. 'range' → logprob: -11.910372734069824
    6. '   ' → logprob: -12.535372734069824
    7. ' i' → logprob: -13.785372734069824
    8. 'i' → logprob: -13.910372734069824
    9. '	in' → logprob: -14.535372734069824
    10. 'In' → logprob: -14.660372734069824

Token 653: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061991553753614426
    2. ' range' → logprob: -2.8119914531707764
    3. 'Q' → logprob: -10.686991691589355
    4. ' Q' → logprob: -14.811991691589355
    5. ' ' → logprob: -14.936991691589355
    6. '  ' → logprob: -15.686991691589355
    7. '   ' → logprob: -16.31199073791504
    8. 'list' → logprob: -16.56199073791504
    9. '[' → logprob: -17.06199073791504
    10. '(range' → logprob: -17.56199073791504

Token 654: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002172266598790884
    2. '2' → logprob: -6.252172470092773
    3. ' (' → logprob: -8.377172470092773
    4. ' ' → logprob: -11.377172470092773
    5. '   ' → logprob: -13.502172470092773
    6. '1' → logprob: -15.502172470092773
    7. '(len' → logprob: -15.752172470092773
    8. '
' → logprob: -16.002172470092773
    9. '(int' → logprob: -16.252172470092773
    10. '(N' → logprob: -16.752172470092773

Token 655: '-' (ID: 12)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7590622901916504
    2. '):
' → logprob: -1.6340622901916504
    3. '):' → logprob: -2.0090622901916504
    4. '+' → logprob: -2.2590622901916504
    5. '1' → logprob: -2.5090622901916504
    6. ' ' → logprob: -5.00906229019165
    7. '2' → logprob: -5.75906229019165
    8. ' +' → logprob: -6.38406229019165
    9. '   ' → logprob: -6.63406229019165
    10. '[' → logprob: -6.88406229019165

Token 656: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12706197798252106
    2. '2' → logprob: -2.1270620822906494
    3. ' ' → logprob: -9.00206184387207
    4. '   ' → logprob: -12.12706184387207
    5. 'int' → logprob: -13.12706184387207
    6. '0' → logprob: -13.75206184387207
    7. '```' → logprob: -14.62706184387207
    8. 'len' → logprob: -14.93956184387207
    9. '3' → logprob: -15.00206184387207
    10. '  ' → logprob: -15.81456184387207

Token 657: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10647358745336533
    2. '):' → logprob: -2.606473684310913
    3. ':' → logprob: -4.481473445892334
    4. ':
' → logprob: -4.731473445892334
    5. ' ):
' → logprob: -6.231473445892334
    6. ' :
' → logprob: -6.356473445892334
    7. ' :' → logprob: -6.731473445892334
    8. ',' → logprob: -6.981473445892334
    9. '):
' → logprob: -8.231473922729492
    10. '   ' → logprob: -8.606473922729492

Token 658: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03931715339422226
    2. ' z' → logprob: -3.6643171310424805
    3. ' q' → logprob: -5.6643171310424805
    4. '	z' → logprob: -5.6643171310424805
    5. ' s' → logprob: -6.0393171310424805
    6. '	q' → logprob: -7.5393171310424805
    7. 'z' → logprob: -7.7893171310424805
    8. ' Q' → logprob: -8.16431713104248
    9. '
' → logprob: -8.16431713104248
    10. '	Q' → logprob: -8.16431713104248

Token 659: ' Q' (ID: 1486)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5550690293312073
    2. 'Q' (adapté à ' Q') → logprob: -1.4300689697265625
    3. 'a' → logprob: -2.8050689697265625
    4. 'cmd' → logprob: -4.0550689697265625
    5. 'z' → logprob: -4.4300689697265625
    6. 's' → logprob: -4.5550689697265625
    7. 'A' → logprob: -4.9300689697265625
    8. 'query' → logprob: -4.9300689697265625
    9. 'command' → logprob: -4.9300689697265625
    10. 'L' → logprob: -5.0550689697265625

Token 660: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22629322111606598
    2. '=' → logprob: -1.6012932062149048
    3. '=input' → logprob: -8.101293563842773
    4. '_' → logprob: -8.476293563842773
    5. ' ' → logprob: -8.851293563842773
    6. '=int' → logprob: -9.601293563842773
    7. '_=' → logprob: -9.976293563842773
    8. '[' → logprob: -10.726293563842773
    9. 'input' → logprob: -10.976293563842773
    10. 's' → logprob: -11.601293563842773

Token 661: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018259279429912567
    2. ' input' → logprob: -4.018259048461914
    3. 'list' → logprob: -9.143259048461914
    4. ' list' → logprob: -13.268259048461914
    5. '[input' → logprob: -15.268259048461914
    6. '<input' → logprob: -15.893259048461914
    7. '(input' → logprob: -16.768259048461914
    8. 'int' → logprob: -16.893259048461914
    9. '=input' → logprob: -16.893259048461914
    10. ' ' → logprob: -17.518259048461914

Token 662: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00016885579680092633
    2. '.split' → logprob: -8.875168800354004
    3. '()' → logprob: -11.250168800354004
    4. '.' → logprob: -11.875168800354004
    5. '.s' → logprob: -13.125168800354004
    6. ' .' → logprob: -13.250168800354004
    7. '()
' → logprob: -13.250168800354004
    8. ' ().' → logprob: -13.375168800354004
    9. ' =' → logprob: -14.125168800354004
    10. '=' → logprob: -15.000168800354004

Token 663: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. 'strip' → logprob: -14.000000953674316
    3. ' split' → logprob: -14.750000953674316
    4. 'spl' → logprob: -18.375001907348633
    5. '(split' → logprob: -18.875001907348633
    6. 'rstrip' → logprob: -19.000001907348633
    7. '.split' → logprob: -19.375001907348633
    8. 'plit' → logprob: -20.000001907348633
    9. '_split' → logprob: -20.500001907348633
    10. 's' → logprob: -21.000001907348633

Token 664: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003531655529513955
    2. '
' → logprob: -6.503531455993652
    3. 'z' → logprob: -6.628531455993652
    4. 'if' → logprob: -8.253531455993652
    5. '    
' → logprob: -9.753531455993652
    6. 'key' → logprob: -10.003531455993652
    7. ' if' → logprob: -10.128531455993652
    8. '  ' → logprob: -10.128531455993652
    9. ',' → logprob: -10.378531455993652
    10. '	z' → logprob: -10.628531455993652

Token 665: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11897077411413193
    2. 'z' → logprob: -2.6189708709716797
    3. 'if' → logprob: -3.3689708709716797
    4. ' if' → logprob: -6.11897087097168
    5. ' z' → logprob: -6.49397087097168
    6. 'insert' → logprob: -7.61897087097168
    7. 'key' → logprob: -8.36897087097168
    8. '	z' → logprob: -8.74397087097168
    9. ' ' → logprob: -9.86897087097168
    10. '	if' → logprob: -10.11897087097168

Token 666: ' if' (ID: 538)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.49837490916252136
    2. 'z' → logprob: -1.1233749389648438
    3. 'if' (adapté à ' if') → logprob: -2.7483749389648438
    4. 'key' → logprob: -6.998374938964844
    5. 'k' → logprob: -7.373374938964844
    6. 'x' → logprob: -7.623374938964844
    7. 'v' → logprob: -8.123374938964844
    8. ' insert' → logprob: -8.498374938964844
    9. 'n' → logprob: -8.623374938964844
    10. 'node' → logprob: -8.873374938964844

Token 667: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.002814386272802949
    2. ' Q' → logprob: -5.877814292907715
    3. '   ' → logprob: -12.127814292907715
    4. 'len' → logprob: -13.002814292907715
    5. ' ' → logprob: -14.002814292907715
    6. '(Q' → logprob: -15.002814292907715
    7. '"' → logprob: -15.877814292907715
    8. '	Q' → logprob: -15.877814292907715
    9. ''' → logprob: -16.25281524658203
    10. '  ' → logprob: -16.25281524658203

Token 668: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0206720617134124e-05
    2. ' [' → logprob: -12.50001049041748
    3. '==' → logprob: -12.62501049041748
    4. ' ==' → logprob: -13.37501049041748
    5. ' ' → logprob: -14.37501049041748
    6. '=' → logprob: -15.62501049041748
    7. ' =' → logprob: -16.000009536743164
    8. 'def' → logprob: -16.625009536743164
    9. '[
' → logprob: -16.750009536743164
    10. '=[' → logprob: -16.875009536743164

Token 669: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018149138486478478
    2. '1' → logprob: -9.250181198120117
    3. ' ' → logprob: -9.500181198120117
    4. '[' → logprob: -13.000181198120117
    5. 'i' → logprob: -13.125181198120117
    6. '   ' → logprob: -13.437681198120117
    7. '2' → logprob: -14.375181198120117
    8. '(' → logprob: -14.812681198120117
    9. ']' → logprob: -15.125181198120117
    10. '
' → logprob: -15.187681198120117

Token 670: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1039084643125534
    2. ' ==' → logprob: -2.4789085388183594
    3. '=='' → logprob: -4.353908538818359
    4. '=="' → logprob: -6.353908538818359
    5. '[' → logprob: -8.85390853881836
    6. '=' → logprob: -9.47890853881836
    7. '==
' → logprob: -11.60390853881836
    8. ' =='' → logprob: -11.72890853881836
    9. ''' → logprob: -11.85390853881836
    10. ']==' → logprob: -11.97890853881836

Token 671: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08952146023511887
    2. ' ==' → logprob: -2.5895214080810547
    3. '=='' → logprob: -4.714521408081055
    4. '=="' → logprob: -6.839521408081055
    5. '[' → logprob: -8.089521408081055
    6. '=' → logprob: -8.464521408081055
    7. ' =='' → logprob: -11.839521408081055
    8. '==
' → logprob: -12.214521408081055
    9. ' =' → logprob: -13.464521408081055
    10. ''' → logprob: -13.839521408081055

Token 672: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09033218026161194
    2. '"' → logprob: -3.215332269668579
    3. ''I' → logprob: -3.840332269668579
    4. ''i' → logprob: -4.21533203125
    5. '"I' → logprob: -5.71533203125
    6. 'insert' → logprob: -5.71533203125
    7. ''ins' → logprob: -6.59033203125
    8. ''in' → logprob: -6.71533203125
    9. 'I' → logprob: -8.09033203125
    10. ''int' → logprob: -8.46533203125

Token 673: 'print' (ID: 1598)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.003574649803340435
    2. '"' → logprob: -6.378574848175049
    3. 'i' → logprob: -6.753574848175049
    4. 'Insert' → logprob: -8.37857437133789
    5. ''' → logprob: -8.87857437133789
    6. 'INSERT' → logprob: -9.00357437133789
    7. '"+"' → logprob: -10.12857437133789
    8. ''in' → logprob: -10.50357437133789
    9. 'I' → logprob: -10.50357437133789
    10. 'ins' → logprob: -10.87857437133789

Token 674: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.3349989950656891
    2. '":
' → logprob: -1.3349989652633667
    3. 'al' → logprob: -4.334999084472656
    4. '"' → logprob: -4.834999084472656
    5. ':' → logprob: -9.209999084472656
    6. '":
' → logprob: -9.209999084472656
    7. '(":' → logprob: -9.334999084472656
    8. 'print' → logprob: -9.584999084472656
    9. 'all' → logprob: -10.709999084472656
    10. '()' → logprob: -11.084999084472656

Token 675: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.40054598450660706
    2. 'print' → logprob: -1.9005459547042847
    3. '   ' → logprob: -2.650546073913574
    4. '       ' → logprob: -2.775546073913574
    5. ':' → logprob: -3.650546073913574
    6. ' print' → logprob: -4.150546073913574
    7. '):
' → logprob: -5.775546073913574
    8. '():
' → logprob: -6.650546073913574
    9. '
' → logprob: -7.650546073913574
    10. ' ' → logprob: -9.025546073913574

Token 676: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008657592348754406
    2. ' print' → logprob: -4.758657455444336
    3. '   ' → logprob: -10.133657455444336
    4. '	print' → logprob: -12.883657455444336
    5. '.print' → logprob: -15.258657455444336
    6. '(print' → logprob: -15.633657455444336
    7. '```' → logprob: -16.258657455444336
    8. '
' → logprob: -16.383657455444336
    9. ' ' → logprob: -16.883657455444336
    10. '       ' → logprob: -17.008657455444336

Token 677: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.3663626305060461e-05
    2. 'all' → logprob: -11.87501335144043
    3. '(al' → logprob: -13.25001335144043
    4. 'alq' → logprob: -13.50001335144043
    5. '(T' → logprob: -14.12501335144043
    6. 'ал' → logprob: -14.50001335144043
    7. 'print' → logprob: -14.50001335144043
    8. '	al' → logprob: -14.75001335144043
    9. ''al' → logprob: -14.87501335144043
    10. 'a' → logprob: -15.37501335144043

Token 678: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -2.2200749754119897e-06
    2. 'T' → logprob: -13.375001907348633
    3. '(' → logprob: -15.000001907348633
    4. ' (' → logprob: -15.375001907348633
    5. '(t' → logprob: -17.125001907348633
    6. '((' → logprob: -18.375001907348633
    7. '(
' → logprob: -19.250001907348633
    8. ' T' → logprob: -19.625001907348633
    9. ' ' → logprob: -20.625001907348633
    10. '[T' → logprob: -20.750001907348633

Token 679: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004079708829522133
    2. ')
' → logprob: -5.504079818725586
    3. ')
' → logprob: -14.754079818725586
    4. '   ' → logprob: -15.129079818725586
    5. ' )' → logprob: -15.129079818725586
    6. ')

' → logprob: -16.504079818725586
    7. '")' → logprob: -17.379079818725586
    8. '))' → logprob: -17.379079818725586
    9. '),' → logprob: -17.879079818725586
    10. '()' → logprob: -18.004079818725586

Token 680: '       ' (ID: 309)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.6143910884857178
    2. '<|end|>' → logprob: -1.8643910884857178
    3. ' else' → logprob: -1.9893910884857178
    4. 'elif' → logprob: -2.4893910884857178
    5. '   ' → logprob: -3.1143910884857178
    6. ' ' → logprob: -3.9893910884857178
    7. 'else' → logprob: -4.739391326904297
    8. '[' → logprob: -5.989391326904297
    9. '
' → logprob: -6.239391326904297
    10. '    ' → logprob: -6.614391326904297

Token 681: ' continue' (ID: 4901)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.38349103927612305
    2. 'else' → logprob: -1.633491039276123
    3. 'continue' (adapté à ' continue') → logprob: -2.883491039276123
    4. '   ' → logprob: -3.758491039276123
    5. ' continue' → logprob: -3.758491039276123
    6. ' else' → logprob: -4.258491039276123
    7. ' elif' → logprob: -5.133491039276123
    8. '       ' → logprob: -7.758491039276123
    9. '	continue' → logprob: -9.633491516113281
    10. 'if' → logprob: -10.383491516113281

Token 682: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48946240544319153
    2. 'elif' → logprob: -0.9894623756408691
    3. '   ' → logprob: -4.864462375640869
    4. ' if' → logprob: -5.489462375640869
    5. ' elif' → logprob: -5.864462375640869
    6. ' ' → logprob: -8.614462852478027
    7. 'else' → logprob: -8.739462852478027
    8. 'z' → logprob: -9.239462852478027
    9. 'insert' → logprob: -10.239462852478027
    10. 'x' → logprob: -11.114462852478027

Token 683: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5963869690895081
    2. '   ' → logprob: -1.4713869094848633
    3. ' if' → logprob: -2.5963869094848633
    4. 'z' → logprob: -2.8463869094848633
    5. 'elif' → logprob: -2.8463869094848633
    6. ' z' → logprob: -4.596386909484863
    7. ' elif' → logprob: -4.721386909484863
    8. 'insert' → logprob: -5.721386909484863
    9. 'x' → logprob: -6.346386909484863
    10. ' ' → logprob: -7.471386909484863

Token 684: ' elif' (ID: 9497)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6790568828582764
    2. 'z' → logprob: -0.8040568828582764
    3. 'key' → logprob: -4.3040571212768555
    4. 'elif' (adapté à ' elif') → logprob: -4.4290571212768555
    5. 'k' → logprob: -4.9290571212768555
    6. ' if' → logprob: -5.0540571212768555
    7. ' z' → logprob: -5.9290571212768555
    8. ' key' → logprob: -6.5540571212768555
    9. 'x' → logprob: -6.9290571212768555
    10. 'node' → logprob: -8.179057121276855

Token 685: ' Q' (ID: 1486)
  Prédit: ' Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.11288396269083023
    2. 'Q' → logprob: -2.237884044647217
    3. '(Q' → logprob: -11.362883567810059
    4. 'insert' → logprob: -11.487883567810059
    5. ' ' → logprob: -11.737883567810059
    6. 'find' → logprob: -11.987883567810059
    7. '<Q' → logprob: -11.987883567810059
    8. '	Q' → logprob: -12.362883567810059
    9. ' insert' → logprob: -12.612883567810059
    10. ',Q' → logprob: -13.112883567810059

Token 686: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.301394023466855e-05
    2. '==' → logprob: -10.125062942504883
    3. ' ==' → logprob: -11.500062942504883
    4. '=' → logprob: -11.875062942504883
    5. ' =' → logprob: -12.875062942504883
    6. ' [' → logprob: -13.375062942504883
    7. ' ' → logprob: -15.000062942504883
    8. '   ' → logprob: -15.250062942504883
    9. 'def' → logprob: -15.500062942504883
    10. '=="' → logprob: -15.750062942504883

Token 687: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03286955878138542
    2. '"' → logprob: -4.032869338989258
    3. ''' → logprob: -4.407869338989258
    4. '1' → logprob: -6.157869338989258
    5. ''s' → logprob: -9.282869338989258
    6. '[' → logprob: -9.532869338989258
    7. ' ' → logprob: -10.282869338989258
    8. '"value' → logprob: -10.532869338989258
    9. ''t' → logprob: -11.407869338989258
    10. ''value' → logprob: -11.657869338989258

Token 688: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28195130825042725
    2. '==' → logprob: -1.4069513082504272
    3. '=="' → logprob: -7.656951427459717
    4. '=='' → logprob: -8.906950950622559
    5. ']==' → logprob: -9.656950950622559
    6. '=' → logprob: -10.406950950622559
    7. ' =="' → logprob: -10.531950950622559
    8. '[' → logprob: -10.656950950622559
    9. ']' → logprob: -11.031950950622559
    10. ')' → logprob: -11.656950950622559

Token 689: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4292592406272888
    2. '==' → logprob: -1.0542593002319336
    3. '=="' → logprob: -7.929259300231934
    4. '=='' → logprob: -9.054259300231934
    5. '=' → logprob: -10.179259300231934
    6. ' =="' → logprob: -11.179259300231934
    7. ' =='' → logprob: -11.679259300231934
    8. '[' → logprob: -11.679259300231934
    9. ' =' → logprob: -12.554259300231934
    10. '"' → logprob: -12.929259300231934

Token 690: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -5.538490950129926e-05
    2. ''' → logprob: -10.125055313110352
    3. 'insert' → logprob: -11.750055313110352
    4. ' "' → logprob: -12.375055313110352
    5. ' ' → logprob: -13.375055313110352
    6. '   ' → logprob: -14.500055313110352
    7. '"in' → logprob: -14.625055313110352
    8. '  ' → logprob: -16.12505531311035
    9. '("' → logprob: -16.25005531311035
    10. '"value' → logprob: -16.25005531311035

Token 691: 'find' (ID: 6555)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.006864794064313173
    2. 'find' → logprob: -5.00686502456665
    3. '"' → logprob: -9.006864547729492
    4. ' insert' → logprob: -11.006864547729492
    5. 'i' → logprob: -12.881864547729492
    6. ' find' → logprob: -13.506864547729492
    7. 'in' → logprob: -14.131864547729492
    8. 'Insert' → logprob: -14.256864547729492
    9. '	insert' → logprob: -14.256864547729492
    10. 'print' → logprob: -14.381864547729492

Token 692: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.267478883266449
    2. '"' → logprob: -2.1424789428710938
    3. '":
' → logprob: -2.7674789428710938
    4. '(T' → logprob: -3.1424789428710938
    5. ':' → logprob: -5.767478942871094
    6. '(":' → logprob: -5.767478942871094
    7. '(' → logprob: -6.517478942871094
    8. '("' → logprob: -6.767478942871094
    9. ':
' → logprob: -8.142478942871094
    10. ' "' → logprob: -8.267478942871094

Token 693: '       ' (ID: 309)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.12976837158203125
    2. ' find' → logprob: -3.0047683715820312
    3. '(find' → logprob: -3.1297683715820312
    4. '   ' → logprob: -4.004768371582031
    5. '
' → logprob: -5.379768371582031
    6. 'T' → logprob: -6.754768371582031
    7. 'print' → logprob: -6.879768371582031
    8. '       ' → logprob: -7.629768371582031
    9. ' T' → logprob: -7.754768371582031
    10. '(T' → logprob: -7.879768371582031

Token 694: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' (adapté à ' find') → logprob: -0.15440908074378967
    2. 'x' → logprob: -2.154409170150757
    3. 'k' → logprob: -4.154408931732178
    4. 'T' → logprob: -6.029408931732178
    5. 'res' → logprob: -6.029408931732178
    6. 'print' → logprob: -6.279408931732178
    7. 'node' → logprob: -6.529408931732178
    8. 'z' → logprob: -7.154408931732178
    9. ' find' → logprob: -7.529408931732178
    10. 'ret' → logprob: -8.279409408569336

Token 695: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.0004931025905534625
    2. '(' → logprob: -7.625493049621582
    3. '<|end|>' → logprob: -13.250493049621582
    4. '(
' → logprob: -13.750493049621582
    5. ' (' → logprob: -13.875493049621582
    6. '((' → logprob: -14.625493049621582
    7. '(t' → logprob: -14.875493049621582
    8. '(`' → logprob: -15.250493049621582
    9. '```' → logprob: -16.7504940032959
    10. '(Tree' → logprob: -17.3754940032959

Token 696: ',int' (ID: 20909)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014584291726350784
    2. ',int' → logprob: -4.639584064483643
    3. ',' → logprob: -5.389584064483643
    4. 'int' → logprob: -9.2645845413208
    5. '(Node' → logprob: -9.3895845413208
    6. ' int' → logprob: -10.3895845413208
    7. ' (' → logprob: -10.5145845413208
    8. '(' → logprob: -11.5145845413208
    9. ' ,' → logprob: -13.1395845413208
    10. '[int' → logprob: -13.2645845413208

Token 697: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -1.6047699318733066e-05
    2. 'Q' → logprob: -11.125016212463379
    3. '(' → logprob: -14.375016212463379
    4. ')' → logprob: -14.500016212463379
    5. ' Q' → logprob: -16.500015258789062
    6. ' (' → logprob: -17.125015258789062
    7. ',Q' → logprob: -18.000015258789062
    8. '	Q' → logprob: -18.375015258789062
    9. ')(' → logprob: -19.125015258789062
    10. '((' → logprob: -19.500015258789062

Token 698: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. '2' → logprob: -18.25
    4. '1' → logprob: -19.0
    5. '   ' → logprob: -20.625
    6. ' [' → logprob: -21.625
    7. '()[' → logprob: -22.875
    8. '([' → logprob: -23.25
    9. '[i' → logprob: -23.25
    10. ')' → logprob: -23.5

Token 699: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. ' ' → logprob: -12.12501335144043
    3. '   ' → logprob: -12.50001335144043
    4. '2' → logprob: -12.75001335144043
    5. '[' → logprob: -14.25001335144043
    6. '-' → logprob: -16.25001335144043
    7. '  ' → logprob: -16.62501335144043
    8. '
' → logprob: -16.87501335144043
    9. '3' → logprob: -17.18751335144043
    10. '0' → logprob: -17.75001335144043

Token 700: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0009467111667618155
    2. 'True' → logprob: -8.125946998596191
    3. ',' → logprob: -8.375946998596191
    4. '],' → logprob: -8.750946998596191
    5. '))' → logprob: -9.125946998596191
    6. '[' → logprob: -9.750946998596191
    7. ' ),' → logprob: -10.375946998596191
    8. ',),' → logprob: -10.625946998596191
    9. ')' → logprob: -11.000946998596191
    10. '(True' → logprob: -11.500946998596191

Token 701: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.000454506283858791
    2. ' True' → logprob: -8.625454902648926
    3. 'False' → logprob: -8.750454902648926
    4. '1' → logprob: -9.125454902648926
    5. '   ' → logprob: -13.250454902648926
    6. '(True' → logprob: -13.625454902648926
    7. '       ' → logprob: -13.625454902648926
    8. '           ' → logprob: -14.125454902648926
    9. '          ' → logprob: -15.000454902648926
    10. '    ' → logprob: -15.125454902648926

Token 702: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02332211285829544
    2. ')
' → logprob: -3.773322105407715
    3. '   ' → logprob: -9.523322105407715
    4. ')
' → logprob: -13.523322105407715
    5. '       ' → logprob: -14.148322105407715
    6. ' )' → logprob: -14.273322105407715
    7. ')

' → logprob: -15.023322105407715
    8. '<|end|>' → logprob: -16.14832305908203
    9. ')return' → logprob: -16.27332305908203
    10. '),' → logprob: -16.64832305908203

Token 703: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17019517719745636
    2. 'elif' → logprob: -2.2951951026916504
    3. ' elif' → logprob: -3.5451951026916504
    4. 'else' → logprob: -4.04519510269165
    5. ' else' → logprob: -4.79519510269165
    6. ' ' → logprob: -7.67019510269165
    7. '	elif' → logprob: -8.545195579528809
    8. '       ' → logprob: -8.795195579528809
    9. '    
' → logprob: -9.545195579528809
    10. 'continue' → logprob: -10.420195579528809

Token 704: ' continue' (ID: 4901)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3320240080356598
    2. 'else' → logprob: -1.9570239782333374
    3. 'continue' (adapté à ' continue') → logprob: -2.457024097442627
    4. '   ' → logprob: -3.957024097442627
    5. '       ' → logprob: -4.207024097442627
    6. ' elif' → logprob: -4.457024097442627
    7. ' continue' → logprob: -5.207024097442627
    8. ' else' → logprob: -5.457024097442627
    9. ' ' → logprob: -9.457023620605469
    10. '```' → logprob: -10.457023620605469

Token 705: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010127538815140724
    2. 'elif' → logprob: -4.635127544403076
    3. ' elif' → logprob: -8.135127067565918
    4. '	elif' → logprob: -9.885127067565918
    5. 'else' → logprob: -10.760127067565918
    6. ' ' → logprob: -12.760127067565918
    7. ' else' → logprob: -14.010127067565918
    8. '  ' → logprob: -14.635127067565918
    9. '    
' → logprob: -15.010127067565918
    10. '<|end|>' → logprob: -15.010127067565918

Token 706: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6488193869590759
    2. 'elif' → logprob: -0.7738193869590759
    3. ' elif' → logprob: -4.523819446563721
    4. '```' → logprob: -6.148819446563721
    5. '	elif' → logprob: -6.648819446563721
    6. ' ' → logprob: -7.148819446563721
    7. 'else' → logprob: -8.023818969726562
    8. 'if' → logprob: -8.398818969726562
    9. '[' → logprob: -9.523818969726562
    10. 'insert' → logprob: -9.773818969726562

Token 707: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3114723861217499
    2. '   ' → logprob: -2.5614724159240723
    3. 'insert' → logprob: -2.8114724159240723
    4. 'z' → logprob: -2.9364724159240723
    5. ' elif' → logprob: -2.9364724159240723
    6. 'else' → logprob: -4.311472415924072
    7. ' z' → logprob: -5.811472415924072
    8. ' insert' → logprob: -6.311472415924072
    9. ' ' → logprob: -6.936472415924072
    10. '	elif' → logprob: -6.936472415924072

Token 708: ' Q' (ID: 1486)
  Prédit: ' Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.14270956814289093
    2. 'Q' → logprob: -2.017709493637085
    3. '(Q' → logprob: -11.767709732055664
    4. '   ' → logprob: -11.892709732055664
    5. '	Q' → logprob: -12.017709732055664
    6. '    ' → logprob: -12.767709732055664
    7. 'insert' → logprob: -12.767709732055664
    8. ' ' → logprob: -13.392709732055664
    9. '<Q' → logprob: -13.392709732055664
    10. ',Q' → logprob: -13.517709732055664

Token 709: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008982429862953722
    2. ' ==' → logprob: -7.625898361206055
    3. '==' → logprob: -7.875898361206055
    4. ' [' → logprob: -11.375898361206055
    5. '=="' → logprob: -11.625898361206055
    6. '0' → logprob: -12.375898361206055
    7. '=' → logprob: -13.375898361206055
    8. '=='' → logprob: -13.500898361206055
    9. '[
' → logprob: -14.625898361206055
    10. ' ' → logprob: -15.125898361206055

Token 710: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029306337237358093
    2. '[' → logprob: -6.002930641174316
    3. '"' → logprob: -8.252930641174316
    4. '1' → logprob: -8.877930641174316
    5. ' ' → logprob: -10.127930641174316
    6. ''' → logprob: -11.877930641174316
    7. '```' → logprob: -13.877930641174316
    8. 'Q' → logprob: -14.002930641174316
    9. '
' → logprob: -14.127930641174316
    10. '#' → logprob: -14.127930641174316

Token 711: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0353202819824219
    2. ' ==' → logprob: -1.1603202819824219
    3. '[' → logprob: -1.2853202819824219
    4. ']' → logprob: -3.410320281982422
    5. ']==' → logprob: -3.910320281982422
    6. '=="' → logprob: -6.910320281982422
    7. '[]' → logprob: -8.535320281982422
    8. '"' → logprob: -9.285320281982422
    9. ')==' → logprob: -9.285320281982422
    10. ')' → logprob: -9.535320281982422

Token 712: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2558085322380066
    2. '==' → logprob: -1.5058085918426514
    3. '=="' → logprob: -5.755808353424072
    4. '[' → logprob: -7.505808353424072
    5. ' =="' → logprob: -9.13080883026123
    6. '=='' → logprob: -11.00580883026123
    7. '=' → logprob: -11.13080883026123
    8. '==
' → logprob: -11.75580883026123
    9. ']==' → logprob: -13.00580883026123
    10. ' =' → logprob: -13.50580883026123

Token 713: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.007666013669222593
    2. ' "' → logprob: -4.882666110992432
    3. ''' → logprob: -10.132665634155273
    4. ' ' → logprob: -11.882665634155273
    5. 'insert' → logprob: -12.757665634155273
    6. '"in' → logprob: -12.882665634155273
    7. '("' → logprob: -13.382665634155273
    8. '   ' → logprob: -13.882665634155273
    9. ' insert' → logprob: -14.007665634155273
    10. '	' → logprob: -14.632665634155273

Token 714: 'delete' (ID: 8509)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.00020509003661572933
    2. 'delete' → logprob: -8.750205039978027
    3. ' insert' → logprob: -10.000205039978027
    4. 'ins' → logprob: -15.375205039978027
    5. '	insert' → logprob: -15.500205039978027
    6. 'Insert' → logprob: -15.625205039978027
    7. '_insert' → logprob: -16.250205993652344
    8. 'i' → logprob: -16.375205993652344
    9. 'in' → logprob: -16.625205993652344
    10. '.insert' → logprob: -16.625205993652344

Token 715: '":
' (ID: 9213)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.29188287258148193
    2. '":
' → logprob: -1.541882872581482
    3. '"' → logprob: -3.4168829917907715
    4. '":' → logprob: -5.4168829917907715
    5. '"):
' → logprob: -7.6668829917907715
    6. ' "' → logprob: -8.166882514953613
    7. ':
' → logprob: -8.291882514953613
    8. '"T' → logprob: -8.416882514953613
    9. ' (' → logprob: -9.291882514953613
    10. '("' → logprob: -9.416882514953613

Token 716: '       ' (ID: 309)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2747522294521332
    2. 'x' → logprob: -1.5247522592544556
    3. '       ' → logprob: -4.149752140045166
    4. '   ' → logprob: -5.399752140045166
    5. 'node' → logprob: -7.024752140045166
    6. ' node' → logprob: -7.149752140045166
    7. 'find' → logprob: -9.024752616882324
    8. 'delete' → logprob: -9.024752616882324
    9. ' find' → logprob: -9.274752616882324
    10. ' delete' → logprob: -10.399752616882324

Token 717: ' delete' (ID: 6168)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11908157914876938
    2. 'delete' (adapté à ' delete') → logprob: -2.994081497192383
    3. 'node' → logprob: -3.869081497192383
    4. 'find' → logprob: -4.119081497192383
    5. 'z' → logprob: -4.244081497192383
    6. 't' → logprob: -6.244081497192383
    7. 'y' → logprob: -6.244081497192383
    8. 'n' → logprob: -6.494081497192383
    9. 'tmp' → logprob: -7.119081497192383
    10. 'q' → logprob: -7.119081497192383

Token 718: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -1.4378848391061183e-05
    2. '(' → logprob: -11.500014305114746
    3. 'T' → logprob: -12.750014305114746
    4. '<|end|>' → logprob: -14.250014305114746
    5. '(
' → logprob: -15.500014305114746
    6. ' (' → logprob: -16.000015258789062
    7. ' T' → logprob: -16.625015258789062
    8. ',T' → logprob: -17.500015258789062
    9. '((' → logprob: -18.000015258789062
    10. ')' → logprob: -18.000015258789062

Token 719: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.587580680847168
    2. ',T' → logprob: -0.962580680847168
    3. '(T' → logprob: -2.837580680847168
    4. 'T' → logprob: -6.587580680847168
    5. '(find' → logprob: -6.587580680847168
    6. 'find' → logprob: -7.587580680847168
    7. ' ,' → logprob: -8.462580680847168
    8. ' T' → logprob: -8.837580680847168
    9. ',get' → logprob: -9.712580680847168
    10. ',(' → logprob: -10.212580680847168

Token 720: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.00034595211036503315
    2. ' find' → logprob: -8.000346183776855
    3. '(find' → logprob: -12.000346183776855
    4. ')find' → logprob: -13.250346183776855
    5. '	find' → logprob: -14.000346183776855
    6. ')' → logprob: -14.250346183776855
    7. '   ' → logprob: -14.375346183776855
    8. ' ' → logprob: -16.12534523010254
    9. 'T' → logprob: -16.12534523010254
    10. '=find' → logprob: -16.50034523010254

Token 721: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.875000953674316
    3. ')' → logprob: -15.250000953674316
    4. '(
' → logprob: -16.25
    5. '<|end|>' → logprob: -16.375
    6. '(t' → logprob: -17.625
    7. 'T' → logprob: -18.125
    8. ')(' → logprob: -18.375
    9. '(Q' → logprob: -18.625
    10. ' (' → logprob: -19.0

Token 722: ',' (ID: 11)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -5.8126592193730175e-05
    2. '(' → logprob: -10.1250581741333
    3. '(
' → logprob: -11.3750581741333
    4. ')' → logprob: -12.2500581741333
    5. ' (' → logprob: -14.3750581741333
    6. ',' → logprob: -14.7500581741333
    7. ',T' → logprob: -14.7500581741333
    8. '(t' → logprob: -16.250057220458984
    9. ')(' → logprob: -16.375057220458984
    10. 'T' → logprob: -16.875057220458984

Token 723: ' int' (ID: 677)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.002008933573961258
    2. 'int' → logprob: -6.50200891494751
    3. ' T' → logprob: -7.75200891494751
    4. '(T' → logprob: -9.502009391784668
    5. ' int' → logprob: -14.377009391784668
    6. '(int' → logprob: -14.502009391784668
    7. ',T' → logprob: -15.502009391784668
    8. ')' → logprob: -15.877009391784668
    9. '	T' → logprob: -15.877009391784668
    10. 't' → logprob: -16.37700843811035

Token 724: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -4.36574100604048e-06
    2. 'Q' → logprob: -12.375004768371582
    3. '(' → logprob: -16.500003814697266
    4. ')' → logprob: -18.000003814697266
    5. '<Q' → logprob: -18.250003814697266
    6. ' (' → logprob: -18.375003814697266
    7. '(
' → logprob: -18.375003814697266
    8. ',Q' → logprob: -18.750003814697266
    9. '	Q' → logprob: -19.250003814697266
    10. ' Q' → logprob: -19.625003814697266

Token 725: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001831565605243668
    2. '(' → logprob: -9.12518310546875
    3. '1' → logprob: -9.75018310546875
    4. '(Q' → logprob: -11.75018310546875
    5. 'Q' → logprob: -12.87518310546875
    6. '[
' → logprob: -13.12518310546875
    7. '   ' → logprob: -13.50018310546875
    8. ' [' → logprob: -14.62518310546875
    9. '```' → logprob: -14.87518310546875
    10. '[i' → logprob: -15.25018310546875

Token 726: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004330660216510296
    2. '[' → logprob: -6.004330635070801
    3. 'Q' → logprob: -6.379330635070801
    4. '(' → logprob: -9.1293306350708
    5. '(Q' → logprob: -10.6293306350708
    6. '   ' → logprob: -11.2543306350708
    7. ' ' → logprob: -12.5043306350708
    8. '2' → logprob: -12.6293306350708
    9. ' Q' → logprob: -13.2543306350708
    10. '       ' → logprob: -14.6293306350708

Token 727: ']),' (ID: 19560)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20230549573898315
    2. '),' → logprob: -1.702305555343628
    3. '],' → logprob: -8.202305793762207
    4. '(True' → logprob: -9.202305793762207
    5. '[i' → logprob: -9.452305793762207
    6. 'True' → logprob: -9.577305793762207
    7. ',' → logprob: -9.577305793762207
    8. 'Q' → logprob: -9.952305793762207
    9. ' ),' → logprob: -10.202305793762207
    10. '   ' → logprob: -10.327305793762207

Token 728: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00012106612848583609
    2. 'True' → logprob: -9.125121116638184
    3. ' False' → logprob: -11.375121116638184
    4. '(False' → logprob: -14.625121116638184
    5. '   ' → logprob: -16.250120162963867
    6. '
' → logprob: -16.625120162963867
    7. '=False' → logprob: -17.000120162963867
    8. '0' → logprob: -17.875120162963867
    9. 'false' → logprob: -18.250120162963867
    10. 'None' → logprob: -19.000120162963867

Token 729: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12748277187347412
    2. '))
' → logprob: -2.1274828910827637
    3. ')' → logprob: -7.627482891082764
    4. '   ' → logprob: -10.877482414245605
    5. '       ' → logprob: -11.002482414245605
    6. ')
' → logprob: -11.502482414245605
    7. '))
' → logprob: -12.002482414245605
    8. ' ))' → logprob: -12.127482414245605
    9. '))

' → logprob: -12.627482414245605
    10. ' ))
' → logprob: -12.877482414245605

Token 730: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10942433029413223
    2. 'elif' → logprob: -2.484424352645874
    3. 'else' → logprob: -4.109424114227295
    4. ' elif' → logprob: -5.984424114227295
    5. ' else' → logprob: -6.859424114227295
    6. '<|end|>' → logprob: -8.859424591064453
    7. '	elif' → logprob: -9.234424591064453
    8. ' ' → logprob: -10.484424591064453
    9. '```' → logprob: -11.734424591064453
    10. '	else' → logprob: -12.234424591064453

Token 731: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.7157242298126221
    2. '<|end|>' → logprob: -0.7157242298126221
    3. 'elif' → logprob: -4.465723991394043
    4. ' continue' → logprob: -4.715723991394043
    5. 'else' → logprob: -7.090723991394043
    6. '	continue' → logprob: -8.215723991394043
    7. '_continue' → logprob: -8.465723991394043
    8. '<|end|>' → logprob: -8.590723991394043
    9. '```' → logprob: -8.965723991394043
    10. 'Continue' → logprob: -9.965723991394043

Token 732: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.2540455758571625
    2. '   ' → logprob: -2.1290454864501953
    3. 'else' → logprob: -2.2540454864501953
    4. ' elif' → logprob: -8.504045486450195
    5. 'insert' → logprob: -9.504045486450195
    6. 'if' → logprob: -9.629045486450195
    7. ' else' → logprob: -10.004045486450195
    8. '	elif' → logprob: -11.629045486450195
    9. '```' → logprob: -11.754045486450195
    10. ' ' → logprob: -12.129045486450195

Token 733: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.37214988470077515
    2. 'else' → logprob: -1.37214994430542
    3. '   ' → logprob: -2.87214994430542
    4. 'insert' → logprob: -8.122149467468262
    5. ' elif' → logprob: -9.247149467468262
    6. 'z' → logprob: -9.622149467468262
    7. ' else' → logprob: -9.622149467468262
    8. 'if' → logprob: -9.997149467468262
    9. '```' → logprob: -10.872149467468262
    10. '	elif' → logprob: -11.747149467468262

Token 734: ' insert' (ID: 10898)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.34978383779525757
    2. 'else' → logprob: -1.2247838973999023
    3. 'insert' (adapté à ' insert') → logprob: -6.849783897399902
    4. ' elif' → logprob: -9.099783897399902
    5. 'if' → logprob: -9.599783897399902
    6. ' else' → logprob: -9.724783897399902
    7. '   ' → logprob: -10.724783897399902
    8. ' ' → logprob: -11.474783897399902
    9. '  ' → logprob: -13.974783897399902
    10. '```' → logprob: -13.974783897399902

Token 735: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -1.2113979209971149e-05
    2. '(' → logprob: -11.375012397766113
    3. '(t' → logprob: -15.375012397766113
    4. '(
' → logprob: -15.625012397766113
    5. ' (' → logprob: -15.750012397766113
    6. '((' → logprob: -17.000011444091797
    7. '<|end|>' → logprob: -18.750011444091797
    8. ' ' → logprob: -19.125011444091797
    9. '```' → logprob: -19.375011444091797
    10. '()' → logprob: -19.375011444091797

Token 736: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012827933765947819
    2. '(Node' → logprob: -4.6378278732299805
    3. 'Node' → logprob: -5.8878278732299805
    4. ' Node' → logprob: -8.38782787322998
    5. ',node' → logprob: -10.13782787322998
    6. ' ,' → logprob: -11.01282787322998
    7. '.Node' → logprob: -13.01282787322998
    8. ',(' → logprob: -13.01282787322998
    9. ',None' → logprob: -14.01282787322998
    10. '   ' → logprob: -14.13782787322998

Token 737: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.0009143244242295623
    2. ' Node' → logprob: -7.000914096832275
    3. '   ' → logprob: -13.125914573669434
    4. ' ' → logprob: -15.375914573669434
    5. '  ' → logprob: -15.375914573669434
    6. '    ' → logprob: -15.500914573669434
    7. '	Node' → logprob: -15.500914573669434
    8. '(Node' → logprob: -16.625913619995117
    9. '       ' → logprob: -17.625913619995117
    10. '      ' → logprob: -17.875913619995117

Token 738: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -13.000004768371582
    3. 'int' → logprob: -13.250004768371582
    4. ' (' → logprob: -16.375003814697266
    5. '<int' → logprob: -16.875003814697266
    6. '(
' → logprob: -17.000003814697266
    7. '[int' → logprob: -17.250003814697266
    8. '=int' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.500003814697266
    10. '(None' → logprob: -18.000003814697266

Token 739: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -4.320199877838604e-07
    2. 'Q' → logprob: -14.875
    3. '(' → logprob: -17.5
    4. ' (' → logprob: -19.375
    5. '((' → logprob: -19.375
    6. '(
' → logprob: -19.75
    7. '(int' → logprob: -20.125
    8. '	Q' → logprob: -20.25
    9. '   ' → logprob: -20.375
    10. ' Q' → logprob: -21.0

Token 740: '[' (ID: 58)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.028160255402326584
    2. 'Q' → logprob: -4.278160095214844
    3. '[' → logprob: -4.278160095214844
    4. '(' → logprob: -10.653160095214844
    5. '   ' → logprob: -12.403160095214844
    6. ' Q' → logprob: -13.028160095214844
    7. '	Q' → logprob: -14.778160095214844
    8. '1' → logprob: -15.653160095214844
    9. '.Q' → logprob: -16.278160095214844
    10. ',Q' → logprob: -16.403160095214844

Token 741: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004050514253322035
    2. '[' → logprob: -7.8754048347473145
    3. '   ' → logprob: -11.250405311584473
    4. ' ' → logprob: -11.750405311584473
    5. 'i' → logprob: -14.000405311584473
    6. '[i' → logprob: -14.125405311584473
    7. '2' → logprob: -14.250405311584473
    8. '```' → logprob: -15.000405311584473
    9. '(' → logprob: -15.125405311584473
    10. '       ' → logprob: -15.625405311584473

Token 742: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.35721132159233093
    2. ']),' → logprob: -1.2322113513946533
    3. '],' → logprob: -5.357211112976074
    4. '()),' → logprob: -6.607211112976074
    5. '[' → logprob: -6.732211112976074
    6. '(Q' → logprob: -7.232211112976074
    7. ')],' → logprob: -8.982211112976074
    8. '[i' → logprob: -9.232211112976074
    9. '[int' → logprob: -9.232211112976074
    10. '   ' → logprob: -9.232211112976074

Token 743: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -8.061054359131958e-06
    2. ' None' → logprob: -11.750007629394531
    3. ',None' → logprob: -16.25000762939453
    4. '(None' → logprob: -17.62500762939453
    5. '   ' → logprob: -18.50000762939453
    6. '_None' → logprob: -20.37500762939453
    7. '.None' → logprob: -21.25000762939453
    8. 'none' → logprob: -21.50000762939453
    9. '=None' → logprob: -21.87500762939453
    10. '
' → logprob: -22.62500762939453

Token 744: ',None' (ID: 186897)
  Prédit: ',None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',None' → logprob: -5.431207682704553e-05
    2. ',' → logprob: -10.000054359436035
    3. 'None' → logprob: -11.875054359436035
    4. '(None' → logprob: -13.875054359436035
    5. ',NULL' → logprob: -14.625054359436035
    6. ',null' → logprob: -14.875054359436035
    7. '=None' → logprob: -17.00005340576172
    8. ' None' → logprob: -17.37505340576172
    9. ',
' → logprob: -18.12505340576172
    10. ',nil' → logprob: -18.75005340576172

Token 745: ',None' (ID: 186897)
  Prédit: ',None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',None' → logprob: -0.023525670170783997
    2. 'None' → logprob: -3.7735257148742676
    3. ',' → logprob: -8.52352523803711
    4. '(None' → logprob: -9.89852523803711
    5. ' None' → logprob: -10.39852523803711
    6. '=None' → logprob: -15.02352523803711
    7. '_None' → logprob: -15.52352523803711
    8. '.None' → logprob: -16.89852523803711
    9. ',null' → logprob: -18.89852523803711
    10. ',NULL' → logprob: -18.89852523803711

Token 746: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -9.913265239447355e-05
    2. ',' → logprob: -10.125099182128906
    3. '))
' → logprob: -10.500099182128906
    4. ')' → logprob: -11.000099182128906
    5. ',None' → logprob: -12.375099182128906
    6. '   ' → logprob: -12.500099182128906
    7. ' ))' → logprob: -12.625099182128906
    8. ')))' → logprob: -13.125099182128906
    9. '       ' → logprob: -15.125099182128906
    10. '));' → logprob: -15.375099182128906


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 744
Tokens correctement prédits (1ère position, stricte): 258
Tokens correctement prédits (1ère position, avec adaptation): 313
Tokens correctement prédits (top 10): 625
Précision stricte (1ère position): 34.68%
Précision adaptée (1ère position): 42.07%
Précision (top 10): 84.01%
================================================================================
