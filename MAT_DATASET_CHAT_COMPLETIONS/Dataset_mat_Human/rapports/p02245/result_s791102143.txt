================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
import queue

# ??£??\?????????
adjacent =(
    (1,3),     # 0
    (0,2,4),   # 1
    (1,5),     # 2
    (0,4,6),   # 3
    (1,3,5,7), # 4
    (2,4,8),   # 5
    (3,7),     # 6
    (4,6,8),   # 7
    (5,7)      # 8
)

# ?±???¢?????????
class State:
    def __init__(self,board,space,prev):
        self.board = board # ?????¢?????¨?????????
        self.space = space # ?????´????????????(0?????????)
        self.prev = prev   # 1??????????±???¢(State??????????????§??????)

def bf_search(start,end):
    q = queue.Queue()
    q.put(State(start,start.index(0),None)) #item???Q?????\??????
    table = {} # ??????????????????
    table[tuple(start)] = True # ???????±???¢????????§???????????????????????????

    while not q.empty(): # empty()???Q???????????´??????True????????????????????§????????´??????False?????????
        a = q.get() # Q??????item????????????????????????????????????
        for i in adjacent[a.space]: # i????????????0?????????
            b = a.board[:] # ???????????¢???b????????????
            b[a.space] = b[i] # ?¬?????????¢?????????
            b[i] = 0          # ?¬?????????¢?????????
            
            
            key = tuple(b) # b???????????¨??????table????????¨??????????¢??????????
            if key in table:
                continue # ?????¨?????????for?????????????????£?????°???????????¢b?????????

            # table????????¨???????????´????????°???????±???¢c?????????
            # b?????°???????????¢?????¨????????????i????????????0????????????a???1??????????±???¢
            c = State(b,i,a) 

            # b???end????????´?????????printAns()??§???????????°?????¨???
            if b == end:
                return printAns(c)

            # ?????´???????????£??????Q???c????????????
            q.put(c)
            # key????????£???True?????????
            table[key] = True

count = -1
def printAns(c):
    global count
    if c is not None: 
        count += 1
        printAns(c.prev) # c.prev??????????????????????????¨????????£????????°?????°??????
    return count

# ??????????????????????????????
end = [1,2,3,4,5,6,7,8,0]

# ??\???
start = [ int(n) for _ in range(3) for n in stdin.readline().split() ]

if start == end:
    print(0)
else:
    print(bf_search(start,end))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.05142802372574806
    2. ' argv' → logprob: -3.4264280796051025
    3. 'exit' → logprob: -4.176427841186523
    4. ' exit' → logprob: -6.801427841186523
    5. 'stdout' → logprob: -7.301427841186523
    6. 'stdin' → logprob: -8.426427841186523
    7. 'path' → logprob: -8.801427841186523
    8. 'import' → logprob: -10.176427841186523
    9. 'stderr' → logprob: -10.426427841186523
    10. 'version' → logprob: -10.676427841186523

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006422612932510674
    2. '.readline' → logprob: -8.250641822814941
    3. '\n' → logprob: -8.500641822814941
    4. '.
' → logprob: -10.125641822814941
    5. 'import' → logprob: -10.250641822814941
    6. '\' → logprob: -10.500641822814941
    7. '```' → logprob: -10.875641822814941
    8. '.read' → logprob: -10.875641822814941
    9. '' → logprob: -12.000641822814941
    10. ',' → logprob: -12.125641822814941

Token 5: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10680919140577316
    2. 'for' → logprob: -3.481809139251709
    3. 'import' → logprob: -3.856809139251709
    4. '.readline' → logprob: -4.106809139251709
    5. '\n' → logprob: -4.356809139251709
    6. 'print' → logprob: -5.356809139251709
    7. '' → logprob: -5.856809139251709
    8. '```' → logprob: -5.981809139251709
    9. '
' → logprob: -6.481809139251709
    10. '\' → logprob: -6.606809139251709

Token 6: ' queue' (ID: 13661)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03842815384268761
    2. ' sys' → logprob: -3.2884280681610107
    3. ' ' → logprob: -8.28842830657959
    4. ' math' → logprob: -9.66342830657959
    5. ' re' → logprob: -10.78842830657959
    6. ' io' → logprob: -11.78842830657959
    7. ' itertools' → logprob: -11.91342830657959
    8. ' space' → logprob: -12.03842830657959
    9. ' json' → logprob: -12.16342830657959
    10. ' ' → logprob: -12.28842830657959

Token 7: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39811888337135315
    2. '

' → logprob: -1.6481188535690308
    3. '.' → logprob: -2.8981189727783203
    4. '\n' → logprob: -3.8981189727783203
    5. 'q' → logprob: -4.02311897277832
    6. 'import' → logprob: -4.77311897277832
    7. 'newline' → logprob: -4.77311897277832
    8. '\' → logprob: -4.89811897277832
    9. '
' → logprob: -5.02311897277832
    10. '' → logprob: -5.64811897277832

Token 8: '#' (ID: 2)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10707678645849228
    2. '.' → logprob: -2.48207688331604
    3. '=' → logprob: -4.607076644897461
    4. '.Queue' → logprob: -6.482076644897461
    5. '.
' → logprob: -6.732076644897461
    6. 'Q' → logprob: -6.982076644897461
    7. '```' → logprob: -7.107076644897461
    8. '
' → logprob: -7.357076644897461
    9. 'b' → logprob: -7.732076644897461
    10. '#' → logprob: -7.732076644897461

Token 9: ' ??' (ID: 16605)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.15151074528694153
    2. 'q' → logprob: -2.276510715484619
    3. ' class' → logprob: -4.401510715484619
    4. ' Create' → logprob: -6.026510715484619
    5. ' Define' → logprob: -6.151510715484619
    6. 'Define' → logprob: -6.151510715484619
    7. ' #' → logprob: -6.276510715484619
    8. ' def' → logprob: -6.401510715484619
    9. 'Create' → logprob: -6.526510715484619
    10. 'def' → logprob: -6.651510715484619

Token 10: '£' (ID: 18943)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.015215428546071053
    2. 'b' → logprob: -5.5152153968811035
    3. '=' → logprob: -5.8902153968811035
    4. '`' → logprob: -6.3902153968811035
    5. ' q' → logprob: -6.3902153968811035
    6. '#' → logprob: -6.5152153968811035
    7. 'def' → logprob: -7.0152153968811035
    8. 'Q' → logprob: -8.015215873718262
    9. 'input' → logprob: -8.140215873718262
    10. 'd' → logprob: -8.140215873718262

Token 11: '??' (ID: 6961)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.39907652139663696
    2. '=' → logprob: -1.1490764617919922
    3. ' =' → logprob: -5.524076461791992
    4. 'Q' → logprob: -5.774076461791992
    5. '#' → logprob: -5.899076461791992
    6. '.' → logprob: -8.399076461791992
    7. 's' → logprob: -8.524076461791992
    8. ')' → logprob: -8.524076461791992
    9. 'b' → logprob: -8.649076461791992
    10. '_' → logprob: -8.774076461791992

Token 12: '\' (ID: 59)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04811418429017067
    2. '=' → logprob: -3.92311429977417
    3. '#' → logprob: -4.04811429977417
    4. 'Q' → logprob: -5.92311429977417
    5. 'b' → logprob: -6.17311429977417
    6. '`' → logprob: -6.67311429977417
    7. 'd' → logprob: -7.17311429977417
    8. '.' → logprob: -7.54811429977417
    9. 's' → logprob: -7.54811429977417
    10. 'def' → logprob: -8.048113822937012

Token 13: '????????' (ID: 85218)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.779603898525238
    2. '=' → logprob: -0.904603898525238
    3. '#' → logprob: -2.154603958129883
    4. '.' → logprob: -5.029603958129883
    5. 'Q' → logprob: -5.654603958129883
    6. ' =' → logprob: -6.529603958129883
    7. ':' → logprob: -6.904603958129883
    8. '
' → logprob: -7.029603958129883
    9. '_' → logprob: -7.154603958129883
    10. ')' → logprob: -7.154603958129883

Token 14: '?
' (ID: 3901)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.25605762004852295
    2. 'q' → logprob: -1.881057620048523
    3. ' ' → logprob: -3.6310577392578125
    4. '=' → logprob: -4.0060577392578125
    5. '.' → logprob: -4.1310577392578125
    6. ' #' → logprob: -5.7560577392578125
    7. ' =' → logprob: -6.6310577392578125
    8. 'Q' → logprob: -7.1310577392578125
    9. ',' → logprob: -7.2560577392578125
    10. '_' → logprob: -7.5060577392578125

Token 15: 'adj' (ID: 57001)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09145518392324448
    2. 'q' → logprob: -2.7164552211761475
    3. '=' → logprob: -5.091454982757568
    4. 'def' → logprob: -5.216454982757568
    5. ' ' → logprob: -6.216454982757568
    6. 'b' → logprob: -6.466454982757568
    7. 'd' → logprob: -6.466454982757568
    8. 's' → logprob: -7.341454982757568
    9. 'class' → logprob: -7.466454982757568
    10. ' #' → logprob: -8.341455459594727

Token 16: 'acent' (ID: 28063)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6981841325759888
    2. 'acency' → logprob: -0.8231841325759888
    3. '=' → logprob: -4.198184013366699
    4. ' =' → logprob: -4.323184013366699
    5. '_list' → logprob: -4.448184013366699
    6. 'acent' → logprob: -4.823184013366699
    7. '[]' → logprob: -5.323184013366699
    8. '[u' → logprob: -5.823184013366699
    9. '_' → logprob: -6.073184013366699
    10. 'List' → logprob: -6.948184013366699

Token 17: ' =' (ID: 314)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.5317036509513855
    2. '_' → logprob: -1.2817037105560303
    3. '[' → logprob: -2.7817037105560303
    4. '_nodes' → logprob: -3.7817037105560303
    5. '_lists' → logprob: -4.031703472137451
    6. ' =' → logprob: -4.531703472137451
    7. 's' → logprob: -4.781703472137451
    8. '=' → logprob: -5.031703472137451
    9. 'List' → logprob: -6.031703472137451
    10. '_l' → logprob: -6.906703472137451

Token 18: '(
' (ID: 1607)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.2245798110961914
    2. ' []' → logprob: -1.3495798110961914
    3. '{}' → logprob: -1.9745798110961914
    4. ' {}' → logprob: -2.0995798110961914
    5. ' [[]' → logprob: -2.0995798110961914
    6. '[' → logprob: -3.0995798110961914
    7. ' [' → logprob: -4.474579811096191
    8. ' defaultdict' → logprob: -6.099579811096191
    9. ' ' → logprob: -6.349579811096191
    10. 'dict' → logprob: -6.974579811096191

Token 19: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29322412610054016
    2. '[]' → logprob: -2.1682240962982178
    3. ')' → logprob: -2.5432240962982178
    4. '(' → logprob: -4.418224334716797
    5. ' [' → logprob: -4.543224334716797
    6. '[])' → logprob: -4.543224334716797
    7. '[],' → logprob: -4.918224334716797
    8. '[(' → logprob: -5.168224334716797
    9. '[
' → logprob: -5.293224334716797
    10. ' []' → logprob: -6.793224334716797

Token 20: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9857379794120789
    2. '[]' → logprob: -1.4857380390167236
    3. '(' (adapté à ' (') → logprob: -1.8607380390167236
    4. ')' → logprob: -2.1107380390167236
    5. '[],' → logprob: -3.2357380390167236
    6. '   ' → logprob: -3.8607380390167236
    7. '[(' → logprob: -4.2357378005981445
    8. '[])' → logprob: -4.3607378005981445
    9. '()' → logprob: -4.8607378005981445
    10. '0' → logprob: -5.3607378005981445

Token 21: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7618275880813599
    2. '-' → logprob: -0.8868275880813599
    3. '1' → logprob: -2.1368274688720703
    4. '(' → logprob: -6.13682746887207
    5. ' ' → logprob: -7.26182746887207
    6. '(-' → logprob: -8.63682746887207
    7. ' -' → logprob: -9.13682746887207
    8. ')' → logprob: -10.63682746887207
    9. '2' → logprob: -11.88682746887207
    10. '   ' → logprob: -12.51182746887207

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013400046154856682
    2. ' ,' → logprob: -6.626339912414551
    3. '0' → logprob: -11.75133991241455
    4. ' ' → logprob: -13.25133991241455
    5. ',)' → logprob: -13.87633991241455
    6. ',),' → logprob: -13.87633991241455
    7. '1' → logprob: -14.37633991241455
    8. ',),
' → logprob: -14.62633991241455
    9. '   ' → logprob: -14.75133991241455
    10. '),' → logprob: -15.12633991241455

Token 23: '3' (ID: 18)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28143325448036194
    2. '0' → logprob: -1.4064332246780396
    3. ' -' → logprob: -9.15643310546875
    4. '2' → logprob: -9.78143310546875
    5. '1' → logprob: -10.03143310546875
    6. '-' → logprob: -10.15643310546875
    7. '   ' → logprob: -11.40643310546875
    8. ')' → logprob: -11.90643310546875
    9. '	' → logprob: -12.46893310546875
    10. '  ' → logprob: -12.71893310546875

Token 24: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.08042719215154648
    2. ')' → logprob: -2.8304271697998047
    3. '),(' → logprob: -4.455427169799805
    4. '),
' → logprob: -5.080427169799805
    5. '),

' → logprob: -8.580427169799805
    6. '),
' → logprob: -9.330427169799805
    7. ' ),' → logprob: -9.580427169799805
    8. ',' → logprob: -10.205427169799805
    9. ' ' → logprob: -10.580427169799805
    10. '0' → logprob: -11.955427169799805

Token 25: '    ' (ID: 257)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3340846598148346
    2. ')' → logprob: -2.4590847492218018
    3. ' )' → logprob: -2.4590847492218018
    4. ' ),' → logprob: -3.2090847492218018
    5. ' ' → logprob: -3.3340847492218018
    6. '(' → logprob: -3.9590847492218018
    7. '   ' → logprob: -5.584084510803223
    8. '),' → logprob: -5.709084510803223
    9. '0' → logprob: -5.709084510803223
    10. ' ),
' → logprob: -5.959084510803223

Token 26: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7820425629615784
    2. ' (' → logprob: -1.7820425033569336
    3. '0' → logprob: -1.9070425033569336
    4. '(' → logprob: -2.9070425033569336
    5. '   ' → logprob: -3.1570425033569336
    6. ' ' → logprob: -3.4070425033569336
    7. '),(' → logprob: -3.4070425033569336
    8. '),' → logprob: -3.7820425033569336
    9. '<|end|>' → logprob: -4.282042503356934
    10. ' )' → logprob: -5.157042503356934

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3271590769290924
    2. ' ' → logprob: -1.32715904712677
    3. '1' → logprob: -5.3271589279174805
    4. ')' → logprob: -5.7021589279174805
    5. '-' → logprob: -6.2021589279174805
    6. '<|end|>' → logprob: -6.7021589279174805
    7. ' -' → logprob: -6.9521589279174805
    8. '2' → logprob: -8.07715892791748
    9. ' (' → logprob: -8.70215892791748
    10. '  ' → logprob: -8.95215892791748

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02272879332304001
    2. ' ' → logprob: -4.64772891998291
    3. '-' → logprob: -5.02272891998291
    4. '1' → logprob: -5.39772891998291
    5. ')' → logprob: -7.02272891998291
    6. '2' → logprob: -8.02272891998291
    7. ' -' → logprob: -8.64772891998291
    8. '<|end|>' → logprob: -9.02272891998291
    9. ',' → logprob: -10.14772891998291
    10. '),' → logprob: -10.27272891998291

Token 29: '
' (ID: 198)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.10815881192684174
    2. ')' → logprob: -3.483158826828003
    3. ',' → logprob: -3.858158826828003
    4. '),
' → logprob: -3.983158826828003
    5. '),(' → logprob: -4.233158588409424
    6. ' ),' → logprob: -4.608158588409424
    7. ' ' → logprob: -5.858158588409424
    8. '   ' → logprob: -6.483158588409424
    9. ' ),
' → logprob: -7.358158588409424
    10. ',
' → logprob: -7.608158588409424

Token 30: '   ' (ID: 271)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.23902438580989838
    2. '(' → logprob: -2.4890244007110596
    3. '0' → logprob: -2.9890244007110596
    4. ' ' → logprob: -3.1140244007110596
    5. '   ' → logprob: -3.9890244007110596
    6. ')' → logprob: -4.6140241622924805
    7. '1' → logprob: -6.2390241622924805
    8. ' )' → logprob: -6.6140241622924805
    9. '    ' → logprob: -6.8640241622924805
    10. '2' → logprob: -7.7390241622924805

Token 31: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1631616353988647
    2. ' (' → logprob: -1.1631616353988647
    3. ' ' → logprob: -1.6631616353988647
    4. '(' (adapté à ' (') → logprob: -1.7881616353988647
    5. '1' → logprob: -4.538161754608154
    6. '2' → logprob: -5.163161754608154
    7. ')' → logprob: -7.163161754608154
    8. '   ' → logprob: -7.413161754608154
    9. ' -' → logprob: -9.663161277770996
    10. '    ' → logprob: -9.663161277770996

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02168925292789936
    2. '2' → logprob: -4.771689414978027
    3. '-' → logprob: -5.021689414978027
    4. '1' → logprob: -5.271689414978027
    5. ' ' → logprob: -6.896689414978027
    6. '4' → logprob: -9.146689414978027
    7. '3' → logprob: -9.521689414978027
    8. ' -' → logprob: -10.521689414978027
    9. ')' → logprob: -11.146689414978027
    10. '   ' → logprob: -11.646689414978027

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041279601282440126
    2. ' ,' → logprob: -8.500412940979004
    3. ',),' → logprob: -9.000412940979004
    4. '2' → logprob: -10.375412940979004
    5. '),' → logprob: -10.625412940979004
    6. '1' → logprob: -11.000412940979004
    7. ',)' → logprob: -12.125412940979004
    8. ',),
' → logprob: -12.750412940979004
    9. '3' → logprob: -13.375412940979004
    10. ' ),' → logprob: -14.375412940979004

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00043579499470070004
    2. ' ' → logprob: -7.875435829162598
    3. '4' → logprob: -10.250435829162598
    4. '1' → logprob: -11.125435829162598
    5. '   ' → logprob: -13.375435829162598
    6. '3' → logprob: -13.625435829162598
    7. ')' → logprob: -14.125435829162598
    8. '  ' → logprob: -14.562935829162598
    9. '),' → logprob: -15.562935829162598
    10. '

' → logprob: -15.750435829162598

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050143349915742874
    2. '),' → logprob: -3.050143241882324
    3. ')' → logprob: -7.050143241882324
    4. ' ,' → logprob: -8.550143241882324
    5. '   ' → logprob: -8.925143241882324
    6. ',),' → logprob: -9.050143241882324
    7. '),(' → logprob: -9.300143241882324
    8. ' ),' → logprob: -9.925143241882324
    9. '3' → logprob: -10.050143241882324
    10. ' ' → logprob: -10.425143241882324

Token 36: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.08986244350671768
    2. ' ' → logprob: -2.46486234664917
    3. '   ' → logprob: -8.339862823486328
    4. '3' → logprob: -8.464862823486328
    5. '6' → logprob: -8.589862823486328
    6. '    ' → logprob: -9.214862823486328
    7. ')' → logprob: -9.589862823486328
    8. '  ' → logprob: -10.214862823486328
    9. '7' → logprob: -10.714862823486328
    10. '1' → logprob: -11.214862823486328

Token 37: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04642818868160248
    2. ',' → logprob: -3.5464282035827637
    3. ')' → logprob: -4.171428203582764
    4. '   ' → logprob: -7.921428203582764
    5. ' ),' → logprob: -8.046427726745605
    6. ',),' → logprob: -8.671427726745605
    7. '),(' → logprob: -9.046427726745605
    8. '),
' → logprob: -10.421427726745605
    9. ' ' → logprob: -10.796427726745605
    10. ' ,' → logprob: -11.046427726745605

Token 38: '  ' (ID: 256)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5117077231407166
    2. '    ' → logprob: -1.3867077827453613
    3. '<|end|>' → logprob: -2.6367077827453613
    4. '   ' → logprob: -3.3867077827453613
    5. ' )' → logprob: -4.636707782745361
    6. ')' → logprob: -4.886707782745361
    7. '  ' → logprob: -5.386707782745361
    8. '1' → logprob: -5.386707782745361
    9. '2' → logprob: -5.636707782745361
    10. ' (' → logprob: -5.761707782745361

Token 39: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39799004793167114
    2. '   ' → logprob: -2.0229899883270264
    3. '<|end|>' → logprob: -2.2729899883270264
    4. '    ' → logprob: -3.6479899883270264
    5. '5' → logprob: -3.7729899883270264
    6. ')' → logprob: -4.1479902267456055
    7. '  ' → logprob: -5.1479902267456055
    8. '3' → logprob: -5.1479902267456055
    9. ',' → logprob: -5.3979902267456055
    10. '7' → logprob: -5.5229902267456055

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11357661336660385
    2. ' ' → logprob: -2.363576650619507
    3. '5' → logprob: -4.488576412200928
    4. '2' → logprob: -7.238576412200928
    5. '   ' → logprob: -7.863576412200928
    6. '<|end|>' → logprob: -8.113576889038086
    7. '6' → logprob: -8.738576889038086
    8. '7' → logprob: -8.738576889038086
    9. ')' → logprob: -9.238576889038086
    10. '3' → logprob: -9.613576889038086

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008111746865324676
    2. '5' → logprob: -7.6258111000061035
    3. ')' → logprob: -8.375811576843262
    4. ' ' → logprob: -9.625811576843262
    5. '2' → logprob: -11.875811576843262
    6. '7' → logprob: -12.375811576843262
    7. '<|end|>' → logprob: -12.750811576843262
    8. '   ' → logprob: -13.250811576843262
    9. '...' → logprob: -13.250811576843262
    10. '3' → logprob: -13.375811576843262

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2582278847694397
    2. ')' → logprob: -2.133227825164795
    3. ',' → logprob: -2.383227825164795
    4. ' ' → logprob: -4.758227825164795
    5. ',
' → logprob: -6.258227825164795
    6. '(' → logprob: -6.508227825164795
    7. '<|end|>' → logprob: -6.633227825164795
    8. '  ' → logprob: -7.008227825164795
    9. ' )' → logprob: -7.383227825164795
    10. ' (' → logprob: -7.383227825164795

Token 43: '   ' (ID: 271)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6296023726463318
    2. '   ' → logprob: -1.1296024322509766
    3. '(' → logprob: -2.1296024322509766
    4. ')' → logprob: -4.129602432250977
    5. ' ' → logprob: -5.629602432250977
    6. '    ' → logprob: -6.754602432250977
    7. '5' → logprob: -6.754602432250977
    8. '1' → logprob: -7.254602432250977
    9. '7' → logprob: -7.254602432250977
    10. ' )' → logprob: -7.629602432250977

Token 44: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5782471299171448
    2. ' (' → logprob: -1.5782470703125
    3. '(' (adapté à ' (') → logprob: -1.7032470703125
    4. '3' → logprob: -3.8282470703125
    5. ' ' → logprob: -4.3282470703125
    6. ')' → logprob: -4.4532470703125
    7. '0' → logprob: -6.4532470703125
    8. '   ' → logprob: -6.8282470703125
    9. '5' → logprob: -7.5782470703125
    10. '7' → logprob: -8.2032470703125

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002383441897109151
    2. '3' → logprob: -9.125238418579102
    3. ' ' → logprob: -9.250238418579102
    4. '   ' → logprob: -11.500238418579102
    5. '5' → logprob: -11.937738418579102
    6. '```' → logprob: -12.687738418579102
    7. '0' → logprob: -12.812738418579102
    8. '' → logprob: -13.875238418579102
    9. '  ' → logprob: -14.125238418579102
    10. ')' → logprob: -14.250238418579102

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002084593055769801
    2. ')' → logprob: -6.627084732055664
    3. '3' → logprob: -7.752084732055664
    4. ',)' → logprob: -8.752084732055664
    5. '),' → logprob: -9.252084732055664
    6. ',),' → logprob: -10.252084732055664
    7. ' ,' → logprob: -11.002084732055664
    8. ' ' → logprob: -12.002084732055664
    9. '4' → logprob: -12.377084732055664
    10. '   ' → logprob: -12.752084732055664

Token 47: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0077614812180399895
    2. '3' → logprob: -4.882761478424072
    3. ' ' → logprob: -9.00776195526123
    4. '4' → logprob: -11.00776195526123
    5. '6' → logprob: -11.50776195526123
    6. '0' → logprob: -13.00776195526123
    7. '1' → logprob: -13.69526195526123
    8. '8' → logprob: -13.75776195526123
    9. '7' → logprob: -14.75776195526123
    10. '   ' → logprob: -15.44526195526123

Token 48: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.316622257232666
    2. ')' → logprob: -1.316622257232666
    3. ',' → logprob: -5.816622257232666
    4. ',)' → logprob: -8.941621780395508
    5. ',),' → logprob: -9.566621780395508
    6. ' ),' → logprob: -9.816621780395508
    7. '   ' → logprob: -10.316621780395508
    8. '3' → logprob: -10.941621780395508
    9. '),(' → logprob: -11.316621780395508
    10. ' )' → logprob: -11.566621780395508

Token 49: '    ' (ID: 257)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2727741003036499
    2. '   ' → logprob: -1.89777410030365
    3. ' )' → logprob: -2.7727742195129395
    4. ' ' → logprob: -4.5227742195129395
    5. '),' → logprob: -5.3977742195129395
    6. '3' → logprob: -5.7727742195129395
    7. '4' → logprob: -5.8977742195129395
    8. '  ' → logprob: -6.2727742195129395
    9. ' ),' → logprob: -6.8977742195129395
    10. '    ' → logprob: -7.3977742195129395

Token 50: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15911529958248138
    2. '),' → logprob: -2.6591153144836426
    3. '   ' → logprob: -2.9091153144836426
    4. ' ' → logprob: -4.784115314483643
    5. '3' → logprob: -5.159115314483643
    6. ' )' → logprob: -5.409115314483643
    7. ' ),' → logprob: -6.909115314483643
    8. ',' → logprob: -7.159115314483643
    9. '4' → logprob: -7.409115314483643
    10. '#' (adapté à ' #') → logprob: -7.534115314483643

Token 51: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1409594565629959
    2. ' ' → logprob: -2.1409595012664795
    3. '4' → logprob: -4.3909592628479
    4. '2' → logprob: -7.0159592628479
    5. '0' → logprob: -7.5159592628479
    6. '5' → logprob: -9.765959739685059
    7. '1' → logprob: -11.015959739685059
    8. ')' → logprob: -11.765959739685059
    9. '   ' → logprob: -12.203459739685059
    10. '<|end|>' → logprob: -12.328459739685059

Token 52: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.750041007995605
    3. '4' → logprob: -11.500041007995605
    4. ')' → logprob: -11.875041007995605
    5. '2' → logprob: -14.250041007995605
    6. '0' → logprob: -14.375041007995605
    7. '```' → logprob: -14.375041007995605
    8. '#' → logprob: -15.875041007995605
    9. '<|end|>' → logprob: -15.937541007995605
    10. '),' → logprob: -16.437541961669922

Token 53: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038495372980833054
    2. ',' → logprob: -3.4134953022003174
    3. '   ' → logprob: -6.1634955406188965
    4. '),' → logprob: -6.5384955406188965
    5. ')
' → logprob: -7.6634955406188965
    6. ',
' → logprob: -7.7884955406188965
    7. ' ' → logprob: -8.663495063781738
    8. ',)' → logprob: -9.538495063781738
    9. ' )' → logprob: -9.788495063781738
    10. '3' → logprob: -10.663495063781738

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5421589016914368
    2. ')' → logprob: -0.9171589016914368
    3. '3' → logprob: -4.917159080505371
    4. '4' → logprob: -5.792159080505371
    5. '(' → logprob: -6.042159080505371
    6. ' (' → logprob: -6.167159080505371
    7. ' ' → logprob: -6.667159080505371
    8. '0' → logprob: -7.042159080505371
    9. ' )' → logprob: -7.292159080505371
    10. '7' → logprob: -8.417159080505371

Token 55: ' (' (ID: 350)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5447813272476196
    2. '),' → logprob: -1.6697813272476196
    3. ')' → logprob: -1.9197813272476196
    4. '0' → logprob: -2.79478120803833
    5. '   ' → logprob: -4.66978120803833
    6. ' ' → logprob: -5.04478120803833
    7. '(' (adapté à ' (') → logprob: -6.16978120803833
    8. ',' → logprob: -6.29478120803833
    9. '7' → logprob: -7.16978120803833
    10. ' ),' → logprob: -7.16978120803833

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9795445849886164e-05
    2. '4' → logprob: -10.750060081481934
    3. ' ' → logprob: -10.875060081481934
    4. '2' → logprob: -11.875060081481934
    5. '7' → logprob: -12.000060081481934
    6. '   ' → logprob: -12.875060081481934
    7. '۰' → logprob: -14.312560081481934
    8. ')' → logprob: -14.500060081481934
    9. '1' → logprob: -14.562560081481934
    10. '０' → logprob: -14.875060081481934

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.7689099018462e-05
    2. ' ,' → logprob: -9.37508773803711
    3. '7' → logprob: -13.00008773803711
    4. '4' → logprob: -15.50008773803711
    5. ' ' → logprob: -16.62508773803711
    6. ',)' → logprob: -16.87508773803711
    7. ',),' → logprob: -17.00008773803711
    8. '   ' → logprob: -17.00008773803711
    9. ',
' → logprob: -18.50008773803711
    10. '，' → logprob: -18.87508773803711

Token 58: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.10064515471458435
    2. '7' → logprob: -2.350645065307617
    3. '6' → logprob: -7.850645065307617
    4. ' ' → logprob: -10.600645065307617
    5. '   ' → logprob: -11.850645065307617
    6. '' → logprob: -12.600645065307617
    7. ')' → logprob: -12.975645065307617
    8. '5' → logprob: -13.038145065307617
    9. '  ' → logprob: -13.288145065307617
    10. '```' → logprob: -13.475645065307617

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13112224638462067
    2. '),' → logprob: -2.256122350692749
    3. ')' → logprob: -4.13112211227417
    4. ',),' → logprob: -7.25612211227417
    5. ',)' → logprob: -7.50612211227417
    6. '   ' → logprob: -8.131122589111328
    7. '5' → logprob: -8.256122589111328
    8. '),(' → logprob: -9.506122589111328
    9. '6' → logprob: -9.756122589111328
    10. ' ,' → logprob: -10.256122589111328

Token 60: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00022284770966507494
    2. '7' → logprob: -8.500223159790039
    3. ' ' → logprob: -11.125223159790039
    4. ')' → logprob: -13.250223159790039
    5. '   ' → logprob: -13.750223159790039
    6. '5' → logprob: -14.125223159790039
    7. '۶' → logprob: -14.750223159790039
    8. '٦' → logprob: -15.875223159790039
    9. '６' → logprob: -16.25022315979004
    10. '  ' → logprob: -16.37522315979004

Token 61: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.01612551510334015
    2. ')' → logprob: -4.141125679016113
    3. ',' → logprob: -9.766125679016113
    4. ' ),' → logprob: -11.766125679016113
    5. '   ' → logprob: -12.016125679016113
    6. '),(' → logprob: -12.016125679016113
    7. '),
' → logprob: -12.266125679016113
    8. '7' → logprob: -13.266125679016113
    9. ',),' → logprob: -13.266125679016113
    10. '4' → logprob: -13.266125679016113

Token 62: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5769937038421631
    2. ')' → logprob: -1.076993703842163
    3. '4' → logprob: -2.576993703842163
    4. '),' → logprob: -4.451993942260742
    5. ' ' → logprob: -5.451993942260742
    6. ' )' → logprob: -6.076993942260742
    7. '  ' → logprob: -6.701993942260742
    8. '7' → logprob: -6.826993942260742
    9. '    ' → logprob: -7.701993942260742
    10. ' ),' → logprob: -8.201993942260742

Token 63: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2200721651315689
    2. '   ' → logprob: -2.2200722694396973
    3. '),' → logprob: -2.8450722694396973
    4. '4' → logprob: -3.5950722694396973
    5. ' ' → logprob: -6.720072269439697
    6. ' )' → logprob: -7.345072269439697
    7. '7' → logprob: -7.970072269439697
    8. '  ' → logprob: -8.095071792602539
    9. ' ),' → logprob: -8.095071792602539
    10. ',' → logprob: -8.095071792602539

Token 64: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0967460423707962
    2. '7' → logprob: -2.5967459678649902
    3. '5' → logprob: -4.34674596786499
    4. ')' → logprob: -6.34674596786499
    5. ' ' → logprob: -6.47174596786499
    6. '3' → logprob: -6.97174596786499
    7. '   ' → logprob: -7.97174596786499
    8. '```' → logprob: -9.346746444702148
    9. '  ' → logprob: -10.846746444702148
    10. '#' → logprob: -10.971746444702148

Token 65: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7221921682357788
    2. '4' → logprob: -0.7221921682357788
    3. '7' → logprob: -4.347192287445068
    4. ')' → logprob: -4.347192287445068
    5. ' ' → logprob: -6.222192287445068
    6. '```' → logprob: -8.72219181060791
    7. '   ' → logprob: -8.84719181060791
    8. '5' → logprob: -9.34719181060791
    9. '<|end|>' → logprob: -9.34719181060791
    10. '),' → logprob: -9.34719181060791

Token 66: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1516905277967453
    2. '   ' → logprob: -2.0266904830932617
    3. '),' → logprob: -5.276690483093262
    4. ',' → logprob: -5.901690483093262
    5. '(' → logprob: -7.276690483093262
    6. ' ' → logprob: -8.901690483093262
    7. '4' → logprob: -9.276690483093262
    8. '7' → logprob: -9.901690483093262
    9. '  ' → logprob: -10.276690483093262
    10. ')
' → logprob: -10.526690483093262

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11126353591680527
    2. '4' → logprob: -2.8612635135650635
    3. '(' → logprob: -3.2362635135650635
    4. ')' → logprob: -5.736263751983643
    5. ' ' → logprob: -5.861263751983643
    6. ' (' → logprob: -6.611263751983643
    7. '7' → logprob: -7.611263751983643
    8. '  ' → logprob: -8.236263275146484
    9. '0' → logprob: -8.736263275146484
    10. '5' → logprob: -8.861263275146484

Token 68: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027921702712774277
    2. '(' (adapté à ' (') → logprob: -3.902921676635742
    3. '3' → logprob: -5.777921676635742
    4. '5' → logprob: -6.152921676635742
    5. '2' → logprob: -6.902921676635742
    6. '   ' → logprob: -7.402921676635742
    7. '7' → logprob: -8.402921676635742
    8. ' (' → logprob: -9.027921676635742
    9. ')' → logprob: -9.527921676635742
    10. ' ' → logprob: -9.777921676635742

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062021348625421524
    2. '3' → logprob: -2.812021255493164
    3. '   ' → logprob: -10.687021255493164
    4. '2' → logprob: -11.562021255493164
    5. ' ' → logprob: -11.562021255493164
    6. '```' → logprob: -12.499521255493164
    7. ')' → logprob: -12.874521255493164
    8. '``' → logprob: -14.249521255493164
    9. '  ' → logprob: -14.374521255493164
    10. '
' → logprob: -14.749521255493164

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042209390085190535
    2. '5' → logprob: -8.000422477722168
    3. ' ,' → logprob: -9.500422477722168
    4. ')' → logprob: -13.125422477722168
    5. '   ' → logprob: -13.125422477722168
    6. ' ' → logprob: -13.125422477722168
    7. ',)' → logprob: -13.250422477722168
    8. '),' → logprob: -14.000422477722168
    9. '6' → logprob: -14.125422477722168
    10. '7' → logprob: -14.625422477722168

Token 71: '3' (ID: 18)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0001454955490771681
    2. '7' → logprob: -9.12514591217041
    3. ' ' → logprob: -10.75014591217041
    4. '3' → logprob: -11.12514591217041
    5. ')' → logprob: -15.25014591217041
    6. '５' → logprob: -17.000144958496094
    7. '۵' → logprob: -17.125144958496094
    8. '  ' → logprob: -17.500144958496094
    9. '   ' → logprob: -17.625144958496094
    10. '),' → logprob: -17.750144958496094

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002564480062574148
    2. '5' → logprob: -6.252564430236816
    3. ' ,' → logprob: -7.877564430236816
    4. '7' → logprob: -8.377564430236816
    5. ' ' → logprob: -11.627564430236816
    6. '),' → logprob: -12.252564430236816
    7. ')' → logprob: -12.502564430236816
    8. ',)' → logprob: -12.752564430236816
    9. '   ' → logprob: -12.877564430236816
    10. '8' → logprob: -13.752564430236816

Token 73: '5' (ID: 20)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.029786134138703346
    2. '5' → logprob: -3.5297861099243164
    3. ' ' → logprob: -10.279786109924316
    4. '۷' → logprob: -14.779786109924316
    5. '７' → logprob: -15.654786109924316
    6. '  ' → logprob: -15.904786109924316
    7. '   ' → logprob: -15.904786109924316
    8. '७' → logprob: -16.154787063598633
    9. '৭' → logprob: -16.279787063598633
    10. '' → logprob: -16.779787063598633

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015162474475800991
    2. ')' → logprob: -4.390162467956543
    3. '),' → logprob: -6.390162467956543
    4. '7' → logprob: -7.515162467956543
    5. ' ,' → logprob: -8.890162467956543
    6. ',)' → logprob: -9.015162467956543
    7. '   ' → logprob: -9.140162467956543
    8. ',),' → logprob: -10.515162467956543
    9. ' ' → logprob: -11.515162467956543
    10. ' )' → logprob: -11.765162467956543

Token 75: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0017067246371880174
    2. ' ' → logprob: -6.376706600189209
    3. ')' → logprob: -12.501707077026367
    4. ',' → logprob: -15.001707077026367
    5. '  ' → logprob: -16.376707077026367
    6. '۷' → logprob: -16.376707077026367
    7. '   ' → logprob: -16.501707077026367
    8. '),' → logprob: -16.501707077026367
    9. '٧' → logprob: -17.001707077026367
    10. '' → logprob: -17.501707077026367

Token 76: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.002074955962598324
    2. ')' → logprob: -6.377074718475342
    3. ',' → logprob: -8.2520751953125
    4. ' ),' → logprob: -9.8770751953125
    5. '   ' → logprob: -10.1270751953125
    6. ',),' → logprob: -11.7520751953125
    7. '),
' → logprob: -12.0020751953125
    8. '),(' → logprob: -13.0020751953125
    9. '6' → logprob: -14.1270751953125
    10. '),

' → logprob: -14.2520751953125

Token 77: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20448815822601318
    2. ')' → logprob: -1.8294881582260132
    3. '#' → logprob: -4.329488277435303
    4. '  ' → logprob: -5.704488277435303
    5. ' ' → logprob: -5.829488277435303
    6. ' )' → logprob: -6.329488277435303
    7. '8' → logprob: -6.454488277435303
    8. '6' → logprob: -7.954488277435303
    9. '5' → logprob: -8.079487800598145
    10. ' #' → logprob: -8.204487800598145

Token 78: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.04301311820745468
    2. ' ' → logprob: -3.168013095855713
    3. '6' → logprob: -12.418013572692871
    4. '<|end|>' → logprob: -12.668013572692871
    5. '  ' → logprob: -12.918013572692871
    6. '5' → logprob: -13.043013572692871
    7. '   ' → logprob: -14.418013572692871
    8. ')' → logprob: -14.793013572692871
    9. '8' → logprob: -14.918013572692871
    10. '```' → logprob: -15.293013572692871

Token 79: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.9875325708417222e-05
    2. ' ' → logprob: -10.625029563903809
    3. ')' → logprob: -12.250029563903809
    4. '6' → logprob: -15.000029563903809
    5. '8' → logprob: -15.625029563903809
    6. '  ' → logprob: -16.250030517578125
    7. '<|end|>' → logprob: -16.875030517578125
    8. '   ' → logprob: -17.625030517578125
    9. '```' → logprob: -17.625030517578125
    10. '' → logprob: -17.875030517578125

Token 80: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06179870292544365
    2. ',' → logprob: -3.4367988109588623
    3. '),' → logprob: -4.061798572540283
    4. '   ' → logprob: -4.561798572540283
    5. '6' → logprob: -10.186799049377441
    6. ' ' → logprob: -10.936799049377441
    7. ',)' → logprob: -11.811799049377441
    8. ',
' → logprob: -12.311799049377441
    9. '  ' → logprob: -12.311799049377441
    10. ' )' → logprob: -12.561799049377441

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1657096892595291
    2. ')' → logprob: -2.1657097339630127
    3. ' ' → logprob: -4.040709495544434
    4. '5' → logprob: -4.665709495544434
    5. '6' → logprob: -5.415709495544434
    6. '(' → logprob: -6.040709495544434
    7. '  ' → logprob: -6.290709495544434
    8. ' (' → logprob: -7.290709495544434
    9. '    ' → logprob: -7.540709495544434
    10. '<|end|>' → logprob: -7.665709495544434

Token 82: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' (adapté à ' (') → logprob: -0.19630181789398193
    2. ' (' → logprob: -1.946301817893982
    3. ')' → logprob: -4.0713019371032715
    4. '6' → logprob: -4.1963019371032715
    5. '   ' → logprob: -5.9463019371032715
    6. ' ' → logprob: -7.8213019371032715
    7. '4' → logprob: -8.821301460266113
    8. '  ' → logprob: -9.321301460266113
    9. ',' → logprob: -11.071301460266113
    10. '    ' → logprob: -11.071301460266113

Token 83: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000565541791729629
    2. '4' → logprob: -7.500565528869629
    3. ' ' → logprob: -11.375565528869629
    4. '۲' → logprob: -14.875565528869629
    5. '   ' → logprob: -15.250565528869629
    6. ')' → logprob: -15.750565528869629
    7. '  ' → logprob: -16.000566482543945
    8. '２' → logprob: -16.000566482543945
    9. '२' → logprob: -17.188066482543945
    10. '(' → logprob: -17.188066482543945

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015824666479602456
    2. ' ,' → logprob: -9.500158309936523
    3. ')' → logprob: -9.875158309936523
    4. '6' → logprob: -11.625158309936523
    5. ',)' → logprob: -11.625158309936523
    6. '7' → logprob: -12.250158309936523
    7. ',(' → logprob: -12.875158309936523
    8. '),' → logprob: -12.875158309936523
    9. '8' → logprob: -14.000158309936523
    10. ' ' → logprob: -14.125158309936523

Token 85: '4' (ID: 19)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.009137064218521118
    2. ' ' → logprob: -5.009137153625488
    3. '4' → logprob: -6.384137153625488
    4. '7' → logprob: -7.634137153625488
    5. ')' → logprob: -8.509137153625488
    6. '9' → logprob: -11.509137153625488
    7. '11' → logprob: -11.509137153625488
    8. '6' → logprob: -11.884137153625488
    9. '  ' → logprob: -12.509137153625488
    10. ' )' → logprob: -12.634137153625488

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012850415892899036
    2. ')' → logprob: -4.387850284576416
    3. '),' → logprob: -8.887850761413574
    4. ',)' → logprob: -9.262850761413574
    5. ' ,' → logprob: -9.512850761413574
    6. '7' → logprob: -12.012850761413574
    7. ' )' → logprob: -12.137850761413574
    8. '6' → logprob: -12.512850761413574
    9. ',),' → logprob: -12.512850761413574
    10. '(' → logprob: -12.762850761413574

Token 87: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00902979914098978
    2. ' ' → logprob: -4.884029865264893
    3. '7' → logprob: -6.634029865264893
    4. '11' → logprob: -9.884029388427734
    5. ')' → logprob: -10.009029388427734
    6. '9' → logprob: -12.759029388427734
    7. ' )' → logprob: -12.884029388427734
    8. '  ' → logprob: -13.134029388427734
    9. '８' → logprob: -13.759029388427734
    10. '```' → logprob: -14.634029388427734

Token 88: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014222618192434311
    2. '),' → logprob: -4.264222621917725
    3. ',' → logprob: -10.389222145080566
    4. ' )' → logprob: -11.514222145080566
    5. '   ' → logprob: -12.014222145080566
    6. ')
' → logprob: -12.889222145080566
    7. ',)' → logprob: -13.014222145080566
    8. ')#' → logprob: -13.514222145080566
    9. ' ' → logprob: -14.014222145080566
    10. '}' → logprob: -14.389222145080566

Token 89: '  ' (ID: 256)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.207601398229599
    2. ' )' → logprob: -1.7076014280319214
    3. '   ' → logprob: -5.207601547241211
    4. ' ' → logprob: -8.457601547241211
    5. '6' → logprob: -9.332601547241211
    6. '7' → logprob: -9.332601547241211
    7. '9' → logprob: -9.457601547241211
    8. '  ' → logprob: -9.957601547241211
    9. '#' → logprob: -10.207601547241211
    10. ')#' → logprob: -10.207601547241211

Token 90: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006733130197972059
    2. '#' (adapté à ' #') → logprob: -6.006732940673828
    3. ' )' → logprob: -6.256732940673828
    4. '   ' → logprob: -7.006732940673828
    5. '),' → logprob: -7.381732940673828
    6. ')#' → logprob: -7.506732940673828
    7. ' ' → logprob: -9.006732940673828
    8. '0' → logprob: -10.506732940673828
    9. ')
' → logprob: -10.881732940673828
    10. '7' → logprob: -11.381732940673828

Token 91: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7731658220291138
    2. ' ' → logprob: -0.7731658220291138
    3. '7' → logprob: -3.398165702819824
    4. '9' → logprob: -3.398165702819824
    5. ' )' → logprob: -4.648165702819824
    6. '6' → logprob: -8.023165702819824
    7. '5' → logprob: -10.398165702819824
    8. '<|end|>' → logprob: -10.398165702819824
    9. '8' → logprob: -10.773165702819824
    10. '  ' → logprob: -12.023165702819824

Token 92: '5' (ID: 20)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12149792909622192
    2. '9' → logprob: -2.496497869491577
    3. '5' → logprob: -3.996497869491577
    4. ' ' → logprob: -4.621498107910156
    5. '7' → logprob: -5.996498107910156
    6. ' )' → logprob: -7.121498107910156
    7. '6' → logprob: -7.746498107910156
    8. '8' → logprob: -9.621498107910156
    9. ')#' → logprob: -12.621498107910156
    10. '```' → logprob: -12.746498107910156

Token 93: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014145197346806526
    2. ',' → logprob: -7.6264142990112305
    3. ')
' → logprob: -7.8764142990112305
    4. '   ' → logprob: -8.25141429901123
    5. ' )' → logprob: -8.75141429901123
    6. '),' → logprob: -10.00141429901123
    7. '(' → logprob: -10.75141429901123
    8. ')

' → logprob: -11.25141429901123
    9. ' ' → logprob: -11.62641429901123
    10. ',
' → logprob: -11.87641429901123

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34246179461479187
    2. ')' → logprob: -1.7174618244171143
    3. '(' → logprob: -2.3424618244171143
    4. ' (' → logprob: -5.217461585998535
    5. '6' → logprob: -5.342461585998535
    6. '7' → logprob: -6.092461585998535
    7. ' ' → logprob: -6.967461585998535
    8. '  ' → logprob: -7.717461585998535
    9. '    ' → logprob: -9.217461585998535
    10. '0' → logprob: -9.467461585998535

Token 95: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' (adapté à ' (') → logprob: -0.00013238313840702176
    2. ' (' → logprob: -9.00013256072998
    3. '7' → logprob: -11.75013256072998
    4. ')' → logprob: -14.75013256072998
    5. '(
' → logprob: -15.12513256072998
    6. ' ' → logprob: -15.25013256072998
    7. '   ' → logprob: -16.125131607055664
    8. '  ' → logprob: -17.625131607055664
    9. '()' → logprob: -18.375131607055664
    10. '{' → logprob: -18.500131607055664

Token 96: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.01816457509994507
    2. '7' → logprob: -4.01816463470459
    3. ' ' → logprob: -11.39316463470459
    4. '4' → logprob: -13.39316463470459
    5. '0' → logprob: -15.14316463470459
    6. '(' → logprob: -15.14316463470459
    7. '	' → logprob: -15.26816463470459
    8. '   ' → logprob: -15.39316463470459
    9. '5' → logprob: -15.64316463470459
    10. '```' → logprob: -15.76816463470459

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2020991056924686e-05
    2. ' ,' → logprob: -11.000032424926758
    3. '7' → logprob: -11.250032424926758
    4. ',
' → logprob: -13.250032424926758
    5. ' ' → logprob: -15.375032424926758
    6. ')' → logprob: -16.000032424926758
    7. ',(' → logprob: -17.125032424926758
    8. '，' → logprob: -17.125032424926758
    9. ',

' → logprob: -17.250032424926758
    10. '8' → logprob: -17.375032424926758

Token 98: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '۷' → logprob: -17.125
    4. '７' → logprob: -17.375
    5. '```' → logprob: -18.125
    6. '٧' → logprob: -18.625
    7. '  ' → logprob: -18.875
    8. '
' → logprob: -19.0
    9. '   ' → logprob: -19.375
    10. '9' → logprob: -19.75

Token 99: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038452092558145523
    2. ')' → logprob: -5.62884521484375
    3. '),' → logprob: -8.62884521484375
    4. ' ,' → logprob: -10.50384521484375
    5. '7' → logprob: -11.50384521484375
    6. ',)' → logprob: -11.50384521484375
    7. '   ' → logprob: -11.87884521484375
    8. ' ' → logprob: -12.12884521484375
    9. ',),' → logprob: -13.50384521484375
    10. '),(' → logprob: -13.75384521484375

Token 100: '    ' (ID: 257)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5338166356086731
    2. '(' → logprob: -1.1588165760040283
    3. ')' → logprob: -3.1588165760040283
    4. '   ' → logprob: -3.2838165760040283
    5. '7' → logprob: -4.283816814422607
    6. '  ' → logprob: -5.658816814422607
    7. ' ' → logprob: -6.533816814422607
    8. ' )' → logprob: -7.783816814422607
    9. '    ' → logprob: -7.908816814422607
    10. ',' → logprob: -9.03381633758545

Token 101: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4070201516151428
    2. '(' → logprob: -2.407020092010498
    3. '   ' → logprob: -2.407020092010498
    4. ' (' → logprob: -2.657020092010498
    5. '7' → logprob: -3.032020092010498
    6. ',' → logprob: -3.907020092010498
    7. ' ' → logprob: -4.782020092010498
    8. ' )' → logprob: -5.532020092010498
    9. '  ' → logprob: -6.157020092010498
    10. '    ' → logprob: -7.907020092010498

Token 102: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.058930862694978714
    2. '8' → logprob: -3.4339308738708496
    3. ' ' → logprob: -3.8089308738708496
    4. '(' → logprob: -5.93393087387085
    5. ' (' → logprob: -9.058930397033691
    6. '7' → logprob: -10.683930397033691
    7. '10' → logprob: -12.683930397033691
    8. '   ' → logprob: -13.808930397033691
    9. '  ' → logprob: -13.933930397033691
    10. ')' → logprob: -14.058930397033691

Token 103: '6' (ID: 21)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00998744834214449
    2. '8' → logprob: -4.6349873542785645
    3. ' ' → logprob: -8.384987831115723
    4. ')' → logprob: -12.884987831115723
    5. '```' → logprob: -15.884987831115723
    6. '(' → logprob: -16.384986877441406
    7. '   ' → logprob: -16.509986877441406
    8. '  ' → logprob: -16.509986877441406
    9. '10' → logprob: -16.634986877441406
    10. '
' → logprob: -17.259986877441406

Token 104: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17370562255382538
    2. ')' → logprob: -2.298705577850342
    3. ',
' → logprob: -3.173705577850342
    4. '   ' → logprob: -4.173705577850342
    5. ' ' → logprob: -7.798705577850342
    6. '(' → logprob: -7.923705577850342
    7. ' ,' → logprob: -8.0487060546875
    8. '7' → logprob: -8.4237060546875
    9. ')
' → logprob: -8.5487060546875
    10. ',
' → logprob: -9.7987060546875

Token 105: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6773451566696167
    2. ' (' → logprob: -0.8023451566696167
    3. '   ' → logprob: -3.6773452758789062
    4. ')' → logprob: -4.427345275878906
    5. ' ' → logprob: -5.927345275878906
    6. '7' → logprob: -6.427345275878906
    7. ',' → logprob: -6.927345275878906
    8. '  ' → logprob: -7.427345275878906
    9. '    ' → logprob: -8.177345275878906
    10. '	' → logprob: -9.552345275878906

Token 106: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' (adapté à ' (') → logprob: -0.007627923507243395
    2. ' (' → logprob: -4.882627964019775
    3. '5' → logprob: -11.132627487182617
    4. '(
' → logprob: -12.757627487182617
    5. '8' → logprob: -13.382627487182617
    6. '   ' → logprob: -14.007627487182617
    7. ')' → logprob: -14.382627487182617
    8. '6' → logprob: -14.882627487182617
    9. ' ' → logprob: -15.132627487182617
    10. '（' → logprob: -15.257627487182617

Token 107: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.531315314830863e-06
    2. '6' → logprob: -13.250003814697266
    3. ' ' → logprob: -14.375003814697266
    4. '４' → logprob: -15.375003814697266
    5. '{' → logprob: -15.500003814697266
    6. '۴' → logprob: -15.875003814697266
    7. '' → logprob: -16.000003814697266
    8. '   ' → logprob: -16.250003814697266
    9. '
' → logprob: -16.437503814697266
    10. ''' → logprob: -16.937503814697266

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7120533811976202e-05
    2. ' ,' → logprob: -11.250017166137695
    3. ')' → logprob: -13.250017166137695
    4. '8' → logprob: -13.500017166137695
    5. ',)' → logprob: -15.375017166137695
    6. '6' → logprob: -15.875017166137695
    7. ' ' → logprob: -16.125017166137695
    8. '9' → logprob: -16.250017166137695
    9. ',
' → logprob: -16.375017166137695
    10. '，' → logprob: -17.000017166137695

Token 109: '6' (ID: 21)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.11362471431493759
    2. '8' → logprob: -2.2386248111724854
    3. '9' → logprob: -7.863624572753906
    4. ' ' → logprob: -7.988624572753906
    5. '7' → logprob: -9.738624572753906
    6. ')' → logprob: -11.738624572753906
    7. '```' → logprob: -13.113624572753906
    8. '79' → logprob: -13.363624572753906
    9. '
' → logprob: -13.488624572753906
    10. '6' → logprob: -13.863624572753906

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.682846287731081e-05
    2. '8' → logprob: -10.250066757202148
    3. ' ,' → logprob: -10.875066757202148
    4. ')' → logprob: -11.500066757202148
    5. ',)' → logprob: -13.875066757202148
    6. '),' → logprob: -14.250066757202148
    7. '9' → logprob: -15.125066757202148
    8. ',),' → logprob: -16.00006675720215
    9. ' ' → logprob: -16.12506675720215
    10. '   ' → logprob: -16.25006675720215

Token 111: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.4736459888808895e-05
    2. ' ' → logprob: -11.250014305114746
    3. '9' → logprob: -13.500014305114746
    4. '８' → logprob: -16.250015258789062
    5. '11' → logprob: -17.375015258789062
    6. '10' → logprob: -17.625015258789062
    7. ')' → logprob: -18.000015258789062
    8. '۸' → logprob: -18.125015258789062
    9. '   ' → logprob: -18.750015258789062
    10. '```' → logprob: -18.937515258789062

Token 112: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05495292320847511
    2. '),' → logprob: -2.92995285987854
    3. ' )' → logprob: -10.804952621459961
    4. ',' → logprob: -10.929952621459961
    5. '))' → logprob: -11.429952621459961
    6. '   ' → logprob: -11.929952621459961
    7. '),
' → logprob: -12.554952621459961
    8. ')
' → logprob: -12.679952621459961
    9. ',)' → logprob: -13.054952621459961
    10. ' ),' → logprob: -13.179952621459961

Token 113: '  ' (ID: 256)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6975275278091431
    2. '   ' → logprob: -0.6975275278091431
    3. ' )' → logprob: -6.3225274085998535
    4. '8' → logprob: -7.1975274085998535
    5. '#' → logprob: -7.1975274085998535
    6. '),' → logprob: -7.6975274085998535
    7. '	' → logprob: -8.822527885437012
    8. '  ' → logprob: -9.072527885437012
    9. '(' → logprob: -9.447527885437012
    10. ' ' → logprob: -9.572527885437012

Token 114: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030806250870227814
    2. '),' → logprob: -6.37808084487915
    3. ' )' → logprob: -7.25308084487915
    4. '   ' → logprob: -8.128080368041992
    5. ')

' → logprob: -9.253080368041992
    6. ')
' → logprob: -9.253080368041992
    7. '#' (adapté à ' #') → logprob: -9.503080368041992
    8. ')#' → logprob: -9.878080368041992
    9. ',' → logprob: -10.503080368041992
    10. ' ' → logprob: -11.503080368041992

Token 115: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016437482088804245
    2. '8' → logprob: -4.766437530517578
    3. ' )' → logprob: -5.391437530517578
    4. ' ' → logprob: -6.016437530517578
    5. '7' → logprob: -7.266437530517578
    6. '   ' → logprob: -10.391437530517578
    7. '9' → logprob: -11.141437530517578
    8. '),' → logprob: -11.266437530517578
    9. ')#' → logprob: -11.391437530517578
    10. '  ' → logprob: -11.766437530517578

Token 116: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.12938928604125977
    2. ')' → logprob: -2.2543892860412598
    3. ' ' → logprob: -4.12938928604126
    4. ' )' → logprob: -8.754388809204102
    5. '8' → logprob: -9.379388809204102
    6. '```' → logprob: -9.504388809204102
    7. '),' → logprob: -12.004388809204102
    8. '``' → logprob: -12.754388809204102
    9. '#' → logprob: -12.879388809204102
    10. '  ' → logprob: -13.129388809204102

Token 117: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024437890388071537
    2. '   ' → logprob: -6.502443790435791
    3. ',' → logprob: -7.252443790435791
    4. ',
' → logprob: -9.502443313598633
    5. '),' → logprob: -9.627443313598633
    6. ')
' → logprob: -10.127443313598633
    7. ' )' → logprob: -10.627443313598633
    8. ',)' → logprob: -11.002443313598633
    9. ' ' → logprob: -13.377443313598633
    10. '
' → logprob: -13.627443313598633

Token 118: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07135257124900818
    2. '   ' → logprob: -2.821352481842041
    3. '8' → logprob: -4.821352481842041
    4. ' )' → logprob: -7.571352481842041
    5. ')
' → logprob: -8.1963529586792
    6. '(' → logprob: -8.5713529586792
    7. ' ' → logprob: -9.4463529586792
    8. '9' → logprob: -9.8213529586792
    9. '	' → logprob: -10.0713529586792
    10. '       ' → logprob: -10.6963529586792

Token 119: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' (adapté à ' (') → logprob: -0.16184186935424805
    2. ' (' → logprob: -1.911841869354248
    3. ')' → logprob: -6.536841869354248
    4. '8' → logprob: -8.911842346191406
    5. ' )' → logprob: -10.911842346191406
    6. ' ' → logprob: -12.161842346191406
    7. '()' → logprob: -12.911842346191406
    8. '(
' → logprob: -13.661842346191406
    9. '5' → logprob: -13.786842346191406
    10. ')
' → logprob: -14.161842346191406

Token 120: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.005543104838579893
    2. '7' → logprob: -5.880543231964111
    3. '(' → logprob: -6.005543231964111
    4. ' ' → logprob: -8.505542755126953
    5. ' (' → logprob: -10.130542755126953
    6. '4' → logprob: -10.880542755126953
    7. ')' → logprob: -12.755542755126953
    8. '[' → logprob: -14.005542755126953
    9. ')
' → logprob: -14.005542755126953
    10. '
' → logprob: -14.255542755126953

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04579608887434006
    2. ')' → logprob: -3.1707961559295654
    3. ',)' → logprob: -6.295795917510986
    4. '8' → logprob: -7.920795917510986
    5. ' ,' → logprob: -8.170796394348145
    6. '7' → logprob: -9.295796394348145
    7. ' )' → logprob: -9.420796394348145
    8. '),' → logprob: -9.670796394348145
    9. ' ' → logprob: -10.295796394348145
    10. ',),' → logprob: -10.795796394348145

Token 122: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0007038529147394001
    2. ' ' → logprob: -7.375703811645508
    3. ')' → logprob: -9.500703811645508
    4. '8' → logprob: -13.750703811645508
    5. '
' → logprob: -15.000703811645508
    6. '```' → logprob: -15.500703811645508
    7. ' )' → logprob: -15.625703811645508
    8. ')
' → logprob: -16.000703811645508
    9. '

' → logprob: -16.750703811645508
    10. '  ' → logprob: -16.750703811645508

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00155223673209548
    2. '),' → logprob: -6.501552104949951
    3. ' )' → logprob: -10.87655258178711
    4. '))' → logprob: -11.00155258178711
    5. ')
' → logprob: -11.50155258178711
    6. '),
' → logprob: -13.12655258178711
    7. ',)' → logprob: -14.25155258178711
    8. ')#' → logprob: -15.50155258178711
    9. '   ' → logprob: -15.75155258178711
    10. ' ),' → logprob: -16.00155258178711

Token 124: '     ' (ID: 530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014330153353512287
    2. '),' → logprob: -4.2643303871154785
    3. ')
' → logprob: -9.51432991027832
    4. ',)' → logprob: -9.88932991027832
    5. ' )' → logprob: -10.63932991027832
    6. '),
' → logprob: -11.76432991027832
    7. ',' → logprob: -12.38932991027832
    8. '   ' → logprob: -13.13932991027832
    9. '))' → logprob: -14.01432991027832
    10. ')
' → logprob: -14.38932991027832

Token 125: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014365430688485503
    2. '),' → logprob: -6.626436710357666
    3. ')
' → logprob: -9.501436233520508
    4. ',)' → logprob: -10.876436233520508
    5. ' )' → logprob: -11.501436233520508
    6. '),
' → logprob: -13.376436233520508
    7. ',' → logprob: -13.876436233520508
    8. ')
' → logprob: -13.876436233520508
    9. ');' → logprob: -14.001436233520508
    10. ')

' → logprob: -14.126436233520508

Token 126: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.21648043394088745
    2. ')' → logprob: -1.7164804935455322
    3. ' ' → logprob: -4.591480255126953
    4. ' )' → logprob: -5.341480255126953
    5. '  ' → logprob: -11.591480255126953
    6. '   ' → logprob: -11.841480255126953
    7. '0' → logprob: -13.341480255126953
    8. '9' → logprob: -13.341480255126953
    9. ' ' → logprob: -13.841480255126953
    10. ')
' → logprob: -14.091480255126953

Token 127: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.014549863524734974
    2. ')' → logprob: -4.264549732208252
    3. ' ' → logprob: -7.889549732208252
    4. ' )' → logprob: -11.38955020904541
    5. ' ' → logprob: -15.51455020904541
    6. ')
' → logprob: -17.014549255371094
    7. '   ' → logprob: -17.139549255371094
    8. '８' → logprob: -17.514549255371094
    9. '}' → logprob: -17.639549255371094
    10. '  ' → logprob: -17.764549255371094

Token 128: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022413700353354216
    2. '),' → logprob: -6.127241134643555
    3. ')
' → logprob: -10.002241134643555
    4. ',)' → logprob: -12.127241134643555
    5. ' )' → logprob: -12.627241134643555
    6. '),
' → logprob: -14.377241134643555
    7. ')

' → logprob: -14.627241134643555
    8. ',' → logprob: -15.002241134643555
    9. ');' → logprob: -15.627241134643555
    10. '   ' → logprob: -15.627241134643555

Token 129: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -12.125006675720215
    3. ' )' → logprob: -13.875006675720215
    4. ')

' → logprob: -16.1250057220459
    5. '),' → logprob: -16.7500057220459
    6. ',)' → logprob: -17.1250057220459
    7. '}' → logprob: -17.5000057220459
    8. ')`' → logprob: -17.8750057220459
    9. ')#' → logprob: -18.2500057220459
    10. ',' → logprob: -18.5000057220459

Token 130: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3522263765335083
    2. ')' → logprob: -1.7272263765335083
    3. 'n' → logprob: -1.8522263765335083
    4. '#' → logprob: -2.3522262573242188
    5. '
' → logprob: -2.6022262573242188
    6. '\n' → logprob: -2.8522262573242188
    7. ',' → logprob: -2.9772262573242188
    8. 'visited' → logprob: -3.6022262573242188
    9. 's' → logprob: -3.8522262573242188
    10. '<|end|>' → logprob: -4.227226257324219

Token 131: ' ?' (ID: 1423)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25191861391067505
    2. 'n' → logprob: -2.8769185543060303
    3. ')' → logprob: -3.0019185543060303
    4. '#' → logprob: -3.3769185543060303
    5. 'd' → logprob: -3.7519185543060303
    6. 'q' → logprob: -3.8769185543060303
    7. 's' → logprob: -4.626918792724609
    8. ' ' → logprob: -5.751918792724609
    9. 'dist' → logprob: -5.751918792724609
    10. 'b' → logprob: -6.126918792724609

Token 132: '±' (ID: 32438)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16759631037712097
    2. '#' → logprob: -2.9175963401794434
    3. 'def' → logprob: -3.0425963401794434
    4. 'd' → logprob: -3.5425963401794434
    5. '=' → logprob: -5.042596340179443
    6. ' ' → logprob: -5.667596340179443
    7. '(' → logprob: -5.792596340179443
    8. 's' → logprob: -6.167596340179443
    9. ' )' → logprob: -6.417596340179443
    10. '_' → logprob: -6.667596340179443

Token 133: '???' (ID: 33110)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6154102087020874
    2. '#' → logprob: -1.1154102087020874
    3. ')' → logprob: -2.740410327911377
    4. '=' → logprob: -3.490410327911377
    5. ' ' → logprob: -5.115410327911377
    6. ':' → logprob: -5.365410327911377
    7. ' def' → logprob: -5.365410327911377
    8. 'd' → logprob: -5.490410327911377
    9. ',' → logprob: -5.990410327911377
    10. 's' → logprob: -6.740410327911377

Token 134: '¢' (ID: 61242)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12073193490505219
    2. 'def' → logprob: -2.370731830596924
    3. '#' → logprob: -4.870731830596924
    4. 'visited' → logprob: -5.870731830596924
    5. ' )' → logprob: -6.245731830596924
    6. 'n' → logprob: -6.870731830596924
    7. 'dist' → logprob: -6.870731830596924
    8. 'distance' → logprob: -7.120731830596924
    9. ',' → logprob: -7.870731830596924
    10. '=' → logprob: -7.995731830596924

Token 135: '????????' (ID: 85218)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1421982049942017
    2. '#' → logprob: -1.3921982049942017
    3. 'def' → logprob: -1.3921982049942017
    4. 'visited' → logprob: -2.892198085784912
    5. 'dist' → logprob: -4.142198085784912
    6. 'distance' → logprob: -4.267198085784912
    7. ',' → logprob: -4.392198085784912
    8. '=' → logprob: -4.392198085784912
    9. ' ' → logprob: -4.892198085784912
    10. 'state' → logprob: -5.017198085784912

Token 136: '?
' (ID: 3901)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28070569038391113
    2. '#' → logprob: -2.155705690383911
    3. ')' → logprob: -2.530705690383911
    4. 'visited' → logprob: -4.155705451965332
    5. 'dist' → logprob: -4.780705451965332
    6. '
' → logprob: -5.405705451965332
    7. 'distance' → logprob: -5.530705451965332
    8. ',' → logprob: -6.655705451965332
    9. 'start' → logprob: -6.780705451965332
    10. 's' → logprob: -6.780705451965332

Token 137: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7377302050590515
    2. 'dist' → logprob: -1.1127302646636963
    3. 'visited' → logprob: -2.8627302646636963
    4. 'start' → logprob: -3.2377302646636963
    5. 'distance' → logprob: -3.3627302646636963
    6. 'goal' → logprob: -5.112730026245117
    7. 'depth' → logprob: -5.237730026245117
    8. 'INF' → logprob: -5.237730026245117
    9. 'dp' → logprob: -5.362730026245117
    10. 'state' → logprob: -5.487730026245117

Token 138: ' State' (ID: 5388)
  Prédit: ' Puzzle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Puzzle' → logprob: -0.4355923533439636
    2. ' Solver' → logprob: -2.6855924129486084
    3. 'Puzzle' → logprob: -2.9355924129486084
    4. ' State' → logprob: -2.9355924129486084
    5. ' Node' → logprob: -3.0605924129486084
    6. ' BFS' → logprob: -3.1855924129486084
    7. ' Board' → logprob: -4.185592174530029
    8. 'Solver' → logprob: -4.685592174530029
    9. 'Node' → logprob: -4.685592174530029
    10. 'State' → logprob: -4.685592174530029

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022773505770601332
    2. ':
' → logprob: -9.000227928161621
    3. ' :' → logprob: -9.500227928161621
    4. '(object' → logprob: -11.125227928161621
    5. '():' → logprob: -11.625227928161621
    6. '):' → logprob: -13.000227928161621
    7. '(' → logprob: -13.750227928161621
    8. '：' → logprob: -14.125227928161621
    9. ':**' → logprob: -14.375227928161621
    10. ':

' → logprob: -14.750227928161621

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40705350041389465
    2. '<|end|>' → logprob: -1.7820534706115723
    3. ' ' → logprob: -2.4070534706115723
    4. ':' → logprob: -3.5320534706115723
    5. '  ' → logprob: -4.782053470611572
    6. ')' → logprob: -4.782053470611572
    7. ' def' → logprob: -5.032053470611572
    8. '    ' → logprob: -5.157053470611572
    9. ' (' → logprob: -5.907053470611572
    10. '):' → logprob: -6.157053470611572

Token 141: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6270577311515808
    2. 'def' (adapté à ' def') → logprob: -1.1270577907562256
    3. ' __' → logprob: -2.0020577907562256
    4. '__' → logprob: -5.1270575523376465
    5. '   ' → logprob: -7.8770575523376465
    6. ' ' → logprob: -8.252058029174805
    7. '	def' → logprob: -9.127058029174805
    8. '    
' → logprob: -10.752058029174805
    9. '    ' → logprob: -11.252058029174805
    10. ' 
' → logprob: -11.502058029174805

Token 142: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.19027306139469147
    2. '__' → logprob: -2.1902730464935303
    3. 'init' → logprob: -2.8152730464935303
    4. ' init' → logprob: -6.690273284912109
    5. '_init' → logprob: -8.44027328491211
    6. '```' → logprob: -11.31527328491211
    7. ' def' → logprob: -12.19027328491211
    8. 'def' → logprob: -12.56527328491211
    9. ' ' → logprob: -12.94027328491211
    10. '`' → logprob: -13.31527328491211

Token 143: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0280383548888494e-06
    2. ' init' → logprob: -14.375000953674316
    3. 'ini' → logprob: -15.250000953674316
    4. 'in' → logprob: -16.500001907348633
    5. 'i' → logprob: -17.625001907348633
    6. ' ' → logprob: -17.750001907348633
    7. 'inite' → logprob: -18.000001907348633
    8. 'int' → logprob: -18.750001907348633
    9. 'inti' → logprob: -19.000001907348633
    10. '	init' → logprob: -19.125001907348633

Token 144: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009909666143357754
    2. '__' → logprob: -5.134909629821777
    3. '(' → logprob: -5.634909629821777
    4. '__(
' → logprob: -9.009909629821777
    5. '_(' → logprob: -9.259909629821777
    6. '_' → logprob: -9.509909629821777
    7. '(self' → logprob: -10.134909629821777
    8. ' (' → logprob: -10.509909629821777
    9. '__((' → logprob: -10.634909629821777
    10. '__('' → logprob: -12.134909629821777

Token 145: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010343570029363036
    2. ' self' → logprob: -6.876034259796143
    3. '
' → logprob: -15.0010347366333
    4. 's' → logprob: -15.1260347366333
    5. ')' → logprob: -15.3760347366333
    6. '	self' → logprob: -15.7510347366333
    7. ' ' → logprob: -15.7510347366333
    8. ',' → logprob: -15.7510347366333
    9. '(self' → logprob: -15.7510347366333
    10. ',self' → logprob: -16.376033782958984

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007751794066280127
    2. ' ,' → logprob: -4.882751941680908
    3. ',state' → logprob: -9.25775146484375
    4. ',s' → logprob: -11.75775146484375
    5. ',parent' → logprob: -12.25775146484375
    6. ',data' → logprob: -12.25775146484375
    7. ',self' → logprob: -12.50775146484375
    8. '):' → logprob: -12.88275146484375
    9. ',start' → logprob: -13.00775146484375
    10. 'self' → logprob: -13.13275146484375

Token 147: 'board' (ID: 3935)
  Prédit: 'board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.6213425993919373
    2. 'self' → logprob: -1.371342658996582
    3. 'pos' → logprob: -3.246342658996582
    4. 'arr' → logprob: -3.496342658996582
    5. 'data' → logprob: -3.871342658996582
    6. 's' → logprob: -3.996342658996582
    7. 'p' → logprob: -4.371342658996582
    8. 'tiles' → logprob: -4.496342658996582
    9. 'lst' → logprob: -4.621342658996582
    10. 'field' → logprob: -4.621342658996582

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006902746972627938
    2. ' ,' → logprob: -8.000690460205078
    3. '):' → logprob: -8.125690460205078
    4. ':' → logprob: -10.500690460205078
    5. ',state' → logprob: -11.000690460205078
    6. ' ):' → logprob: -12.625690460205078
    7. ',list' → logprob: -13.625690460205078
    8. ',start' → logprob: -14.250690460205078
    9. ',b' → logprob: -14.250690460205078
    10. ',size' → logprob: -14.375690460205078

Token 149: 'space' (ID: 8775)
  Prédit: 'blank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blank' → logprob: -1.6925472021102905
    2. 'zero' → logprob: -1.6925472021102905
    3. 'pos' → logprob: -2.06754732131958
    4. 'empty' → logprob: -2.31754732131958
    5. 'depth' → logprob: -2.56754732131958
    6. ' blank' → logprob: -2.81754732131958
    7. 'space' → logprob: -2.81754732131958
    8. ' zero' → logprob: -3.31754732131958
    9. 'parent' → logprob: -3.31754732131958
    10. ' empty' → logprob: -3.81754732131958

Token 150: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0986703485250473
    2. '_pos' → logprob: -2.848670244216919
    3. 'pos' → logprob: -4.223670482635498
    4. '_' → logprob: -4.848670482635498
    5. ',' → logprob: -5.223670482635498
    6. ')' → logprob: -5.598670482635498
    7. 'Pos' → logprob: -6.473670482635498
    8. '_idx' → logprob: -6.848670482635498
    9. '_index' → logprob: -7.598670482635498
    10. ' ):' → logprob: -8.34867000579834

Token 151: 'prev' (ID: 15969)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.4382515549659729
    2. 'path' → logprob: -2.313251495361328
    3. 'steps' → logprob: -2.938251495361328
    4. 'dist' → logprob: -3.188251495361328
    5. ' depth' → logprob: -3.313251495361328
    6. 'moves' → logprob: -3.438251495361328
    7. 'step' → logprob: -4.313251495361328
    8. 'move' → logprob: -4.313251495361328
    9. 'distance' → logprob: -4.438251495361328
    10. ' path' → logprob: -4.688251495361328

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.33253028988838196
    2. '_state' → logprob: -1.3325302600860596
    3. ',' → logprob: -4.957530498504639
    4. 'state' → logprob: -5.332530498504639
    5. ')' → logprob: -5.707530498504639
    6. '_' → logprob: -6.207530498504639
    7. ',state' → logprob: -7.207530498504639
    8. 'State' → logprob: -8.33253002166748
    9. '):
' → logprob: -8.33253002166748
    10. '=' → logprob: -8.83253002166748

Token 153: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.348205029964447
    2. '):' → logprob: -1.3482050895690918
    3. '       ' → logprob: -4.723205089569092
    4. ',' → logprob: -4.723205089569092
    5. ')' → logprob: -4.848205089569092
    6. '<|end|>' → logprob: -4.973205089569092
    7. '   ' → logprob: -7.723205089569092
    8. '):
' → logprob: -7.973205089569092
    9. ' :' → logprob: -8.098204612731934
    10. ':
' → logprob: -8.348204612731934

Token 154: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.551929771900177
    2. '       ' → logprob: -1.5519297122955322
    3. ' self' → logprob: -1.5519297122955322
    4. '	self' → logprob: -8.051929473876953
    5. '   ' → logprob: -9.051929473876953
    6. '	' → logprob: -11.051929473876953
    7. ' ' → logprob: -11.051929473876953
    8. ' ' → logprob: -12.051929473876953
    9. '    ' → logprob: -12.676929473876953
    10. '  ' → logprob: -13.551929473876953

Token 155: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.3134786784648895
    2. '.' → logprob: -1.313478708267212
    3. ' .' → logprob: -9.313478469848633
    4. '=' → logprob: -9.688478469848633
    5. ' =' → logprob: -9.938478469848633
    6. '.space' → logprob: -12.313478469848633
    7. '.b' → logprob: -12.938478469848633
    8. '.Board' → logprob: -13.063478469848633
    9. '.=' → logprob: -13.313478469848633
    10. ' board' → logprob: -13.313478469848633

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.56065434217453
    2. '=' → logprob: -0.93565434217453
    3. ',' → logprob: -3.435654401779175
    4. '[' → logprob: -6.060654163360596
    5. '[:]' → logprob: -6.935654163360596
    6. ')' → logprob: -7.310654163360596
    7. '<|end|>' → logprob: -7.810654163360596
    8. ' ,' → logprob: -9.810654640197754
    9. '<|end|>' → logprob: -10.060654640197754
    10. '=[]' → logprob: -10.435654640197754

Token 157: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.0699804499745369
    2. ' board' → logprob: -2.6949803829193115
    3. 'list' → logprob: -10.81998062133789
    4. '	board' → logprob: -11.56998062133789
    5. ' list' → logprob: -12.56998062133789
    6. ' ' → logprob: -12.69498062133789
    7. '(board' → logprob: -13.06998062133789
    8. 'b' → logprob: -13.44498062133789
    9. '[' → logprob: -13.69498062133789
    10. 'bo' → logprob: -14.56998062133789

Token 158: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' ?????' (ID: 149222)
  Prédit: ' board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' board' → logprob: -0.3537098169326782
    2. 'board' → logprob: -1.2287098169326782
    3. ' list' → logprob: -6.228709697723389
    4. 'list' → logprob: -6.353709697723389
    5. '[' → logprob: -7.603709697723389
    6. ' tuple' → logprob: -8.103710174560547
    7. ' [' → logprob: -8.728710174560547
    8. ' ' → logprob: -8.853710174560547
    9. '	board' → logprob: -9.353710174560547
    10. 'space' → logprob: -9.478710174560547

Token 160: '¢' (ID: 61242)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: '????' (ID: 25883)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: '?' (ID: 30)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: '¨' (ID: 64259)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: '?
' (ID: 3901)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7073561549186707
    2. 'self' (adapté à ' self') → logprob: -0.7073561549186707
    3. '<|end|>' → logprob: -4.957355976104736
    4. ' ' → logprob: -6.457355976104736
    5. ' space' → logprob: -6.457355976104736
    6. 'space' → logprob: -6.707355976104736
    7. '       ' → logprob: -6.832355976104736
    8. '
' → logprob: -8.332356452941895
    9. ' 
' → logprob: -8.582356452941895
    10. '_space' → logprob: -8.957356452941895

Token 168: '.space' (ID: 66327)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14894980192184448
    2. '.space' → logprob: -2.0239498615264893
    3. 'space' → logprob: -5.27394962310791
    4. ' .' → logprob: -7.52394962310791
    5. ' space' → logprob: -7.64894962310791
    6. ',' → logprob: -10.39894962310791
    7. '_space' → logprob: -10.77394962310791
    8. '(space' → logprob: -11.27394962310791
    9. '.
' → logprob: -12.14894962310791
    10. '=' → logprob: -12.27394962310791

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805181756615639
    2. '=' → logprob: -3.2880518436431885
    3. ',' → logprob: -12.28805160522461
    4. ' ' → logprob: -13.03805160522461
    5. ' ,' → logprob: -13.28805160522461
    6. ')' → logprob: -14.28805160522461
    7. '_' → logprob: -15.28805160522461
    8. '<|end|>' → logprob: -15.41305160522461
    9. ' )' → logprob: -15.78805160522461
    10. ' =
' → logprob: -16.41305160522461

Token 170: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.3868761360645294
    2. ' space' → logprob: -1.136876106262207
    3. '(space' → logprob: -12.261876106262207
    4. '_space' → logprob: -15.886876106262207
    5. 'spaces' → logprob: -16.636877059936523
    6. 'board' → logprob: -17.011877059936523
    7. ' espace' → logprob: -17.136877059936523
    8. ' ' → logprob: -17.136877059936523
    9. '.space' → logprob: -17.511877059936523
    10. ' ' → logprob: -17.761877059936523

Token 171: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' ?????' (ID: 149222)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.20333677530288696
    2. 'space' → logprob: -1.7033367156982422
    3. '(space' → logprob: -6.328336715698242
    4. ' ' → logprob: -10.078336715698242
    5. 'board' → logprob: -10.828336715698242
    6. ' espacio' → logprob: -10.828336715698242
    7. ' ' → logprob: -11.578336715698242
    8. ' board' → logprob: -11.578336715698242
    9. ' espace' → logprob: -11.703336715698242
    10. ' espaço' → logprob: -12.078336715698242

Token 173: '´' (ID: 14737)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: '????????' (ID: 85218)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49030208587646484
    2. ' #' → logprob: -1.3653020858764648
    3. ')' → logprob: -2.740302085876465
    4. ' )' → logprob: -3.990302085876465
    5. '<|end|>' → logprob: -3.990302085876465
    6. '  ' → logprob: -5.115302085876465
    7. 'position' → logprob: -5.115302085876465
    8. ' position' → logprob: -6.115302085876465
    9. 'index' → logprob: -6.365302085876465
    10. '    ' → logprob: -6.365302085876465

Token 175: '????' (ID: 25883)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: '(' (ID: 7)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0337165892124176
    2. ' )' → logprob: -3.4087166786193848
    3. ' ' → logprob: -10.158716201782227
    4. ')
' → logprob: -12.658716201782227
    5. ' index' → logprob: -12.658716201782227
    6. ' position' → logprob: -12.783716201782227
    7. 'index' → logprob: -12.783716201782227
    8. ',' → logprob: -12.908716201782227
    9. '）' → logprob: -13.033716201782227
    10. '0' → logprob: -13.158716201782227

Token 178: '????????' (ID: 85218)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021183809731155634
    2. ' )' → logprob: -6.2521185874938965
    3. ')
' → logprob: -8.877118110656738
    4. ',' → logprob: -10.252118110656738
    5. ' ' → logprob: -12.627118110656738
    6. ' )
' → logprob: -12.627118110656738
    7. '）' → logprob: -14.127118110656738
    8. '0' → logprob: -14.127118110656738
    9. 'index' → logprob: -14.252118110656738
    10. ')#' → logprob: -14.252118110656738

Token 179: '?)
' (ID: 90794)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07937660813331604
    2. ' )' → logprob: -2.579376697540283
    3. ')
' → logprob: -8.704376220703125
    4. ' index' → logprob: -9.704376220703125
    5. ' )
' → logprob: -9.829376220703125
    6. 'index' → logprob: -9.954376220703125
    7. ' ' → logprob: -9.954376220703125
    8. ',' → logprob: -10.204376220703125
    9. ' position' → logprob: -11.454376220703125
    10. '）' → logprob: -11.829376220703125

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002064852975308895
    2. 'self' → logprob: -6.8770647048950195
    3. '<|end|>' → logprob: -7.2520647048950195
    4. '	' → logprob: -8.87706470489502
    5. ' self' → logprob: -9.25206470489502
    6. '   ' → logprob: -11.00206470489502
    7. '	self' → logprob: -11.25206470489502
    8. ',' → logprob: -11.25206470489502
    9. '<|end|>' → logprob: -11.87706470489502
    10. ' ' → logprob: -12.25206470489502

Token 181: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5381828546524048
    2. 'self' (adapté à ' self') → logprob: -1.0381828546524048
    3. ' self' → logprob: -2.7881827354431152
    4. 'prev' → logprob: -8.663183212280273
    5. '	self' → logprob: -9.163183212280273
    6. ' ' → logprob: -9.663183212280273
    7. '	' → logprob: -9.913183212280273
    8. '   ' → logprob: -10.163183212280273
    9. '
' → logprob: -10.413183212280273
    10. ' ' → logprob: -11.163183212280273

Token 182: '.prev' (ID: 54166)
  Prédit: '.prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prev' → logprob: -0.019044971093535423
    2. '.' → logprob: -4.144044876098633
    3. 'prev' → logprob: -6.019044876098633
    4. ' .' → logprob: -8.269044876098633
    5. '
' → logprob: -8.769044876098633
    6. '.previous' → logprob: -10.269044876098633
    7. '_prev' → logprob: -10.519044876098633
    8. '	prev' → logprob: -10.519044876098633
    9. '.
' → logprob: -11.269044876098633
    10. '._' → logprob: -11.394044876098633

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38700640201568604
    2. '=' → logprob: -1.137006402015686
    3. '<|end|>' → logprob: -9.387006759643555
    4. ',' → logprob: -10.762006759643555
    5. ')' → logprob: -11.137006759643555
    6. ' ' → logprob: -11.887006759643555
    7. '_' → logprob: -12.387006759643555
    8. '<|end|>' → logprob: -13.762006759643555
    9. '=None' → logprob: -13.887006759643555
    10. ' ,' → logprob: -15.012006759643555

Token 184: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.029751179739832878
    2. ' prev' → logprob: -3.5297510623931885
    3. '	prev' → logprob: -14.65475082397461
    4. '(prev' → logprob: -16.02975082397461
    5. '.prev' → logprob: -16.90475082397461
    6. 'pre' → logprob: -17.77975082397461
    7. ' ' → logprob: -17.90475082397461
    8. ' ' → logprob: -18.02975082397461
    9. '_prev' → logprob: -18.02975082397461
    10. '
' → logprob: -19.15475082397461

Token 185: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' ' (ID: 220)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.35482358932495117
    2. ' prev' → logprob: -1.6048235893249512
    3. 'None' → logprob: -2.854823589324951
    4. ' None' → logprob: -3.229823589324951
    5. 'State' → logprob: -8.97982406616211
    6. 'state' → logprob: -8.97982406616211
    7. '(prev' → logprob: -9.72982406616211
    8. '	prev' → logprob: -9.72982406616211
    9. ' ' → logprob: -9.85482406616211
    10. 'Prev' → logprob: -9.97982406616211

Token 188: '1' (ID: 16)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10206744074821472
    2. ' None' → logprob: -2.602067470550537
    3. 'prev' → logprob: -3.977067470550537
    4. 'State' → logprob: -6.602067470550537
    5. ' prev' → logprob: -7.227067470550537
    6. 'state' → logprob: -7.352067470550537
    7. 'previous' → logprob: -7.477067470550537
    8. ' previous' → logprob: -7.727067470550537
    9. '<|end|>' → logprob: -8.977066993713379
    10. 'Previous' → logprob: -9.102066993713379

Token 189: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 190: '??' (ID: 6961)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: '±' (ID: 32438)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: '???' (ID: 33110)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: '¢' (ID: 61242)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: '(' (ID: 7)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: 'State' (ID: 1881)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043795011937618256
    2. ' )' → logprob: -4.168795108795166
    3. ' None' → logprob: -4.293795108795166
    4. 'None' → logprob: -4.293795108795166
    5. ' previous' → logprob: -11.668794631958008
    6. '<|end|>' → logprob: -11.668794631958008
    7. ' ' → logprob: -11.793794631958008
    8. 'prev' → logprob: -11.918794631958008
    9. ' ' → logprob: -12.293794631958008
    10. ')
' → logprob: -12.543794631958008

Token 196: '????????' (ID: 85218)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.514650183613412e-05
    2. ' )' → logprob: -10.000055313110352
    3. ')
' → logprob: -12.000055313110352
    4. '<|end|>' → logprob: -13.875055313110352
    5. '   ' → logprob: -14.500055313110352
    6. ' ' → logprob: -14.750055313110352
    7. '
' → logprob: -15.375055313110352
    8. ')

' → logprob: -15.750055313110352
    9. '）' → logprob: -15.875055313110352
    10. ')#' → logprob: -15.875055313110352

Token 197: '????' (ID: 25883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.194110756041482e-05
    2. ' )' → logprob: -10.125061988830566
    3. ')
' → logprob: -11.625061988830566
    4. '<|end|>' → logprob: -11.625061988830566
    5. ' ' → logprob: -13.875061988830566
    6. 'None' → logprob: -14.625061988830566
    7. ' None' → logprob: -15.000061988830566
    8. '   ' → logprob: -15.500061988830566
    9. ' ' → logprob: -15.500061988830566
    10. ')\' → logprob: -15.500061988830566

Token 198: '??' (ID: 6961)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8325677703833207e-05
    2. '<|end|>' → logprob: -11.500028610229492
    3. ' )' → logprob: -11.750028610229492
    4. ')
' → logprob: -11.750028610229492
    5. ' ' → logprob: -15.125028610229492
    6. '
' → logprob: -15.125028610229492
    7. ')#' → logprob: -15.500028610229492
    8. '\n' → logprob: -15.750028610229492
    9. '`)' → logprob: -16.000028610229492
    10. ')\' → logprob: -16.000028610229492

Token 199: '§' (ID: 18596)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.68022444692906e-05
    2. ')
' → logprob: -10.250046730041504
    3. '<|end|>' → logprob: -12.125046730041504
    4. ' )' → logprob: -12.500046730041504
    5. ')\' → logprob: -15.375046730041504
    6. '   ' → logprob: -15.500046730041504
    7. ')

' → logprob: -15.625046730041504
    8. ')#' → logprob: -15.750046730041504
    9. ')`' → logprob: -15.750046730041504
    10. ' ' → logprob: -16.00004768371582

Token 200: '????' (ID: 25883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.061676347395405e-05
    2. ')
' → logprob: -10.12505054473877
    3. ' )' → logprob: -11.75005054473877
    4. '<|end|>' → logprob: -14.50005054473877
    5. ')#' → logprob: -15.25005054473877
    6. '
' → logprob: -15.25005054473877
    7. ')

' → logprob: -15.37505054473877
    8. ' ' → logprob: -15.75005054473877
    9. '   ' → logprob: -15.75005054473877
    10. ')
' → logprob: -15.87505054473877

Token 201: '??' (ID: 6961)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019579214858822525
    2. ' )' → logprob: -9.000195503234863
    3. '<|end|>' → logprob: -10.375195503234863
    4. ')
' → logprob: -10.500195503234863
    5. '
' → logprob: -12.250195503234863
    6. ' ' → logprob: -13.125195503234863
    7. '`)' → logprob: -14.125195503234863
    8. 'None' → logprob: -14.375195503234863
    9. ')

' → logprob: -14.625195503234863
    10. '")' → logprob: -14.625195503234863

Token 202: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015836587408557534
    2. ' )' → logprob: -8.875158309936523
    3. ')
' → logprob: -11.375158309936523
    4. '<|end|>' → logprob: -13.000158309936523
    5. ' ' → logprob: -14.000158309936523
    6. '
' → logprob: -14.375158309936523
    7. '   ' → logprob: -14.625158309936523
    8. ')#' → logprob: -14.875158309936523
    9. '）' → logprob: -15.250158309936523
    10. ')n' → logprob: -15.250158309936523

Token 203: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' bf' (ID: 74276)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.04245835542678833
    2. ' solve' → logprob: -3.6674582958221436
    3. 'b' → logprob: -5.042458534240723
    4. ' main' → logprob: -5.542458534240723
    5. 'solve' → logprob: -6.542458534240723
    6. ' BFS' → logprob: -7.042458534240723
    7. ' breadth' → logprob: -7.042458534240723
    8. ' find' → logprob: -7.792458534240723
    9. 'B' → logprob: -8.167458534240723
    10. ' ' → logprob: -8.417458534240723

Token 205: '_search' (ID: 23642)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0012746386928483844
    2. 'search' → logprob: -6.876274585723877
    3. '_search' → logprob: -8.376275062561035
    4. '_s' → logprob: -12.126275062561035
    5. 'sf' → logprob: -13.751275062561035
    6. 'scode' → logprob: -13.876275062561035
    7. ' s' → logprob: -14.376275062561035
    8. 'S' → logprob: -14.376275062561035
    9. 'spath' → logprob: -14.376275062561035
    10. 'Search' → logprob: -14.626275062561035

Token 206: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.17374931275844574
    2. '(' → logprob: -2.1737492084503174
    3. '(state' → logprob: -4.4237494468688965
    4. '(queue' → logprob: -4.5487494468688965
    5. '(s' → logprob: -4.7987494468688965
    6. '(root' → logprob: -4.9237494468688965
    7. '(board' → logprob: -5.7987494468688965
    8. '(q' → logprob: -6.2987494468688965
    9. '(initial' → logprob: -7.1737494468688965
    10. '():' → logprob: -7.2987494468688965

Token 207: ',end' (ID: 93014)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015197350643575191
    2. ',' → logprob: -4.390197277069092
    3. ',state' → logprob: -6.765197277069092
    4. '):
' → logprob: -7.265197277069092
    5. ' ):' → logprob: -7.515197277069092
    6. ')' → logprob: -8.76519775390625
    7. ',start' → logprob: -9.64019775390625
    8. '_state' → logprob: -10.89019775390625
    9. '(state' → logprob: -11.14019775390625
    10. '):
' → logprob: -11.39019775390625

Token 208: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004744110628962517
    2. '):
' → logprob: -5.504744052886963
    3. ',' → logprob: -7.629744052886963
    4. ')' → logprob: -9.379744529724121
    5. ' ):' → logprob: -10.129744529724121
    6. ':' → logprob: -10.629744529724121
    7. '):
' → logprob: -11.129744529724121
    8. ',state' → logprob: -12.004744529724121
    9. ')：' → logprob: -13.129744529724121
    10. '   ' → logprob: -13.129744529724121

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015600350685417652
    2. ' q' → logprob: -4.765600204467773
    3. '	q' → logprob: -5.390600204467773
    4. 'q' → logprob: -6.890600204467773
    5. '    
' → logprob: -7.390600204467773
    6. '
' → logprob: -8.515600204467773
    7. '	queue' → logprob: -9.015600204467773
    8. '   ' → logprob: -9.015600204467773
    9. '  ' → logprob: -9.640600204467773
    10. ' ' → logprob: -9.640600204467773

Token 210: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.6554613709449768
    2. '   ' → logprob: -0.9054613709449768
    3. ' q' → logprob: -2.905461311340332
    4. ' que' → logprob: -4.780461311340332
    5. 'que' → logprob: -5.530461311340332
    6. 'Q' → logprob: -5.530461311340332
    7. 'visited' → logprob: -5.905461311340332
    8. ' Q' → logprob: -7.155461311340332
    9. ' ' → logprob: -8.030461311340332
    10. '
' → logprob: -8.280461311340332

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.627002477645874
    2. ' =' → logprob: -0.877002477645874
    3. 'ue' → logprob: -3.002002477645874
    4. 'u' → logprob: -10.002002716064453
    5. 'uer' → logprob: -10.502002716064453
    6. '=q' → logprob: -12.752002716064453
    7. '   ' → logprob: -12.877002716064453
    8. 'e' → logprob: -12.877002716064453
    9. ' ue' → logprob: -12.877002716064453
    10. 'eu' → logprob: -13.377002716064453

Token 212: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0002613358374219388
    2. ' queue' → logprob: -8.250261306762695
    3. '	queue' → logprob: -17.625261306762695
    4. '(queue' → logprob: -18.875261306762695
    5. 'que' → logprob: -19.125261306762695
    6. '.queue' → logprob: -21.000261306762695
    7. 'deque' → logprob: -21.000261306762695
    8. '
' → logprob: -21.125261306762695
    9. '   ' → logprob: -21.250261306762695
    10. 'Queue' → logprob: -21.875261306762695

Token 213: '.Queue' (ID: 97551)
  Prédit: '.Queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Queue' → logprob: -0.0002111694193445146
    2. '.' → logprob: -8.625210762023926
    3. '.Priority' → logprob: -10.625210762023926
    4. '.Simple' → logprob: -12.000210762023926
    5. '.De' → logprob: -14.625210762023926
    6. ' .' → logprob: -15.125210762023926
    7. '.Q' → logprob: -16.000211715698242
    8. '.Empty' → logprob: -16.625211715698242
    9. '.Enqueue' → logprob: -16.625211715698242
    10. '   ' → logprob: -16.750211715698242

Token 214: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.5954712075181305e-05
    2. '()
' → logprob: -10.875036239624023
    3. '(' → logprob: -11.125036239624023
    4. ' ()' → logprob: -13.625036239624023
    5. '()

' → logprob: -14.500036239624023
    6. '()`' → logprob: -16.000036239624023
    7. '())' → logprob: -16.125036239624023
    8. '()
' → logprob: -16.500036239624023
    9. '（）' → logprob: -16.750036239624023
    10. '()\' → logprob: -16.750036239624023

Token 215: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7522944211959839
    2. 'q' → logprob: -1.0022944211959839
    3. '<|end|>' → logprob: -3.0022945404052734
    4. '(q' → logprob: -3.2522945404052734
    5. ' q' → logprob: -3.5022945404052734
    6. '   ' → logprob: -4.627294540405273
    7. '	q' → logprob: -4.877294540405273
    8. '[q' → logprob: -5.002294540405273
    9. '  
' → logprob: -5.127294540405273
    10. ' 
' → logprob: -5.502294540405273

Token 216: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.10027319937944412
    2. ' q' → logprob: -2.3502731323242188
    3. '   ' → logprob: -9.975273132324219
    4. '	q' → logprob: -11.725273132324219
    5. '
' → logprob: -12.100273132324219
    6. '_q' → logprob: -12.850273132324219
    7. ' 
' → logprob: -14.100273132324219
    8. '    
' → logprob: -14.475273132324219
    9. '[q' → logprob: -14.850273132324219
    10. '  ' → logprob: -14.975273132324219

Token 217: '.put' (ID: 5133)
  Prédit: '.put'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.0016663733404129744
    2. '.' → logprob: -6.50166654586792
    3. '.enqueue' → logprob: -8.751666069030762
    4. '.q' → logprob: -13.001666069030762
    5. '.push' → logprob: -13.376666069030762
    6. 'put' → logprob: -14.501666069030762
    7. '.Put' → logprob: -15.001666069030762
    8. ' .' → logprob: -15.251666069030762
    9. ').' → logprob: -15.251666069030762
    10. '.queue' → logprob: -15.751666069030762

Token 218: '(State' (ID: 94112)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.00530645065009594
    2. '(State' → logprob: -5.255306243896484
    3. '(' → logprob: -10.880306243896484
    4. '((' → logprob: -10.880306243896484
    5. '(state' → logprob: -11.005306243896484
    6. 'start' → logprob: -11.255306243896484
    7. '(Start' → logprob: -12.380306243896484
    8. '<State' → logprob: -15.380306243896484
    9. ' (' → logprob: -15.505306243896484
    10. '(states' → logprob: -15.630306243896484

Token 219: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0011059214593842626
    2. '(board' → logprob: -7.501105785369873
    3. '(' → logprob: -7.626105785369873
    4. ')' → logprob: -10.251106262207031
    5. ',start' → logprob: -11.376106262207031
    6. '(
' → logprob: -12.251106262207031
    7. '((' → logprob: -12.501106262207031
    8. 'start' → logprob: -12.501106262207031
    9. ' (' → logprob: -13.376106262207031
    10. '[start' → logprob: -13.626106262207031

Token 220: ',start' (ID: 121128)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002175362315028906
    2. ',None' → logprob: -6.877175331115723
    3. ' ,' → logprob: -7.502175331115723
    4. ',)' → logprob: -8.752175331115723
    5. ')' → logprob: -9.127175331115723
    6. ',start' → logprob: -9.252175331115723
    7. ',[' → logprob: -10.127175331115723
    8. ',,' → logprob: -10.252175331115723
    9. ',
' → logprob: -10.377175331115723
    10. ',len' → logprob: -10.502175331115723

Token 221: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.24660028517246246
    2. ',' → logprob: -2.246600389480591
    3. ')' → logprob: -3.246600389480591
    4. 'space' → logprob: -3.621600389480591
    5. '_space' → logprob: -3.871600389480591
    6. '.space' → logprob: -4.371600151062012
    7. ',None' → logprob: -6.121600151062012
    8. '[' → logprob: -6.246600151062012
    9. ' ,' → logprob: -6.371600151062012
    10. '))' → logprob: -6.746600151062012

Token 222: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024817234370857477
    2. '0' → logprob: -6.002481937408447
    3. '(
' → logprob: -12.752481460571289
    4. ' ' → logprob: -13.502481460571289
    5. ' (' → logprob: -14.127481460571289
    6. ')' → logprob: -14.502481460571289
    7. '((' → logprob: -15.627481460571289
    8. '('' → logprob: -16.12748146057129
    9. '(

' → logprob: -16.25248146057129
    10. '(None' → logprob: -17.25248146057129

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004904801025986671
    2. ' ' → logprob: -7.625490665435791
    3. ''' → logprob: -13.625490188598633
    4. '"' → logprob: -15.000490188598633
    5. '  ' → logprob: -15.500490188598633
    6. ')' → logprob: -15.625490188598633
    7. '   ' → logprob: -15.750490188598633
    8. '    ' → logprob: -16.375490188598633
    9. 'None' → logprob: -16.937990188598633
    10. '`' → logprob: -17.687990188598633

Token 224: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0009660111390985548
    2. ')' → logprob: -7.3759660720825195
    3. ')))' → logprob: -8.50096607208252
    4. ' ),' → logprob: -9.50096607208252
    5. '   ' → logprob: -11.00096607208252
    6. '),
' → logprob: -11.00096607208252
    7. '),(' → logprob: -11.25096607208252
    8. ',' → logprob: -12.00096607208252
    9. ',),' → logprob: -13.37596607208252
    10. '))' → logprob: -13.62596607208252

Token 225: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0006400037091225386
    2. ' None' → logprob: -7.375639915466309
    3. '0' → logprob: -11.375639915466309
    4. ',None' → logprob: -14.375639915466309
    5. '(None' → logprob: -15.000639915466309
    6. '   ' → logprob: -15.125639915466309
    7. 'none' → logprob: -15.125639915466309
    8. 'null' → logprob: -15.375639915466309
    9. '_None' → logprob: -16.250640869140625
    10. ' ' → logprob: -17.250640869140625

Token 226: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008697769604623318
    2. ')' → logprob: -4.758697986602783
    3. '))
' → logprob: -9.508697509765625
    4. ' ))' → logprob: -12.258697509765625
    5. ')
' → logprob: -13.258697509765625
    6. ')))' → logprob: -13.758697509765625
    7. '));' → logprob: -14.758697509765625
    8. '))
' → logprob: -15.383697509765625
    9. ' )' → logprob: -15.633697509765625
    10. '   ' → logprob: -15.633697509765625

Token 227: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3995271623134613
    2. '   ' → logprob: -1.8995271921157837
    3. '<|end|>' → logprob: -2.274527072906494
    4. ' while' → logprob: -3.274527072906494
    5. '    
' → logprob: -4.399527072906494
    6. '  
' → logprob: -4.899527072906494
    7. ')' → logprob: -5.149527072906494
    8. 'while' → logprob: -5.399527072906494
    9. '	while' → logprob: -5.774527072906494
    10. ' 
' → logprob: -5.774527072906494

Token 228: 'item' (ID: 2057)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1441010981798172
    2. 'visited' → logprob: -2.644101142883301
    3. '0' → logprob: -3.894101142883301
    4. '<|end|>' → logprob: -4.269101142883301
    5. 'None' → logprob: -4.394101142883301
    6. 'start' → logprob: -5.144101142883301
    7. ' visited' → logprob: -5.519101142883301
    8. 'True' → logprob: -6.644101142883301
    9. ' )' → logprob: -7.394101142883301
    10. '
' → logprob: -7.519101142883301

Token 229: '???' (ID: 33110)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007826291024684906
    2. '())' → logprob: -5.632826328277588
    3. '()' → logprob: -6.132826328277588
    4. ' )' → logprob: -6.507826328277588
    5. ')
' → logprob: -7.632826328277588
    6. '()
' → logprob: -10.88282585144043
    7. '<|end|>' → logprob: -11.38282585144043
    8. '())
' → logprob: -11.88282585144043
    9. ' ())' → logprob: -12.13282585144043
    10. ' )
' → logprob: -12.75782585144043

Token 230: 'Q' (ID: 48)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009517243131995201
    2. ')
' → logprob: -5.509517192840576
    3. '
' → logprob: -6.134517192840576
    4. ' )' → logprob: -6.634517192840576
    5. '<|end|>' → logprob: -7.009517192840576
    6. '<|end|>' → logprob: -7.884517192840576
    7. '  
' → logprob: -8.634517669677734
    8. ' ' → logprob: -9.759517669677734
    9. '()' → logprob: -9.884517669677734
    10. '\n' → logprob: -10.259517669677734

Token 231: '????' (ID: 25883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08903108537197113
    2. '
' → logprob: -2.7140309810638428
    3. '<|end|>' → logprob: -4.339031219482422
    4. ')
' → logprob: -6.214031219482422
    5. '<|end|>' → logprob: -6.339031219482422
    6. '  
' → logprob: -7.464031219482422
    7. '
' → logprob: -7.964031219482422
    8. '\n' → logprob: -8.214031219482422
    9. ' )' → logprob: -8.339031219482422
    10. ' 
' → logprob: -8.714031219482422

Token 232: '?\' (ID: 70237)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4782998263835907
    2. '<|end|>' → logprob: -1.728299856185913
    3. '   ' → logprob: -2.103299856185913
    4. ')' → logprob: -3.228299856185913
    5. '    
' → logprob: -4.103299617767334
    6. '  
' → logprob: -4.728299617767334
    7. '<|end|>' → logprob: -5.478299617767334
    8. ')
' → logprob: -5.603299617767334
    9. ' 
' → logprob: -5.978299617767334
    10. ' while' → logprob: -6.228299617767334

Token 233: '????' (ID: 25883)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5016161799430847
    2. ')' → logprob: -1.5016162395477295
    3. '<|end|>' → logprob: -2.0016162395477295
    4. '   ' → logprob: -4.00161600112915
    5. ')
' → logprob: -5.00161600112915
    6. '<|end|>' → logprob: -5.25161600112915
    7. '\n' → logprob: -6.62661600112915
    8. '  
' → logprob: -7.00161600112915
    9. '    
' → logprob: -7.00161600112915
    10. ' while' → logprob: -7.37661600112915

Token 234: '??
' (ID: 108055)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04066765308380127
    2. ' while' → logprob: -4.415667533874512
    3. '   ' → logprob: -4.915667533874512
    4. ')' → logprob: -4.915667533874512
    5. 'while' → logprob: -5.665667533874512
    6. ')
' → logprob: -5.915667533874512
    7. '<|end|>' → logprob: -6.040667533874512
    8. '  
' → logprob: -6.790667533874512
    9. '\n' → logprob: -7.040667533874512
    10. '    
' → logprob: -7.165667533874512

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8400405049324036
    2. ' while' → logprob: -1.2150404453277588
    3. '<|end|>' → logprob: -1.9650404453277588
    4. '
' → logprob: -3.215040445327759
    5. 'while' → logprob: -3.590040445327759
    6. ')' → logprob: -3.715040445327759
    7. '	while' → logprob: -4.340040683746338
    8. '    
' → logprob: -4.465040683746338
    9. '  
' → logprob: -5.090040683746338
    10. ' 
' → logprob: -5.840040683746338

Token 236: ' table' (ID: 3293)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6819736361503601
    2. ' while' → logprob: -0.8069736361503601
    3. 'visited' → logprob: -3.681973695755005
    4. '   ' → logprob: -4.056973457336426
    5. ' visited' → logprob: -5.681973457336426
    6. '
' → logprob: -7.806973457336426
    7. '    
' → logprob: -8.056973457336426
    8. '	while' → logprob: -8.181973457336426
    9. 'q' → logprob: -8.306973457336426
    10. 'seen' → logprob: -8.681973457336426

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5253598093986511
    2. ' =' → logprob: -0.9003598093986511
    3. '={}' → logprob: -6.275359630584717
    4. '[' → logprob: -8.650360107421875
    5. '={' → logprob: -9.525360107421875
    6. '=set' → logprob: -9.900360107421875
    7. ' ={' → logprob: -11.275360107421875
    8. '{' → logprob: -11.525360107421875
    9. '={}
' → logprob: -11.775360107421875
    10. '=dict' → logprob: -12.275360107421875

Token 238: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.5892969369888306
    2. 'set' → logprob: -1.4642969369888306
    3. '{' → logprob: -1.5892969369888306
    4. ' set' → logprob: -5.714296817779541
    5. 'dict' → logprob: -5.839296817779541
    6. ' {' → logprob: -6.214296817779541
    7. ' {}' → logprob: -6.714296817779541
    8. '[' → logprob: -8.7142972946167
    9. '{}
' → logprob: -8.7142972946167
    10. '[]' → logprob: -9.5892972946167

Token 239: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: ' ?' (ID: 1423)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8855237364768982
    2. 'table' → logprob: -1.385523796081543
    3. 'dict' → logprob: -2.510523796081543
    4. '
' → logprob: -3.135523796081543
    5. ' True' → logprob: -3.135523796081543
    6. ' table' → logprob: -3.260523796081543
    7. '{}' → logprob: -3.760523796081543
    8. 'False' → logprob: -3.885523796081543
    9. '[start' → logprob: -3.885523796081543
    10. '{' → logprob: -4.260523796081543

Token 241: '????????' (ID: 85218)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2264245748519897
    2. 'start' → logprob: -1.2264245748519897
    3. '[start' → logprob: -1.7264245748519897
    4. ' start' → logprob: -3.2264246940612793
    5. '   ' → logprob: -3.3514246940612793
    6. ')' → logprob: -3.4764246940612793
    7. 'state' → logprob: -4.226424694061279
    8. 'State' → logprob: -4.226424694061279
    9. '  ' → logprob: -4.226424694061279
    10. ' ' → logprob: -4.601424694061279

Token 242: '????????' (ID: 85218)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1536022424697876
    2. '<|end|>' → logprob: -2.778602123260498
    3. '[start' → logprob: -3.403602123260498
    4. '
' → logprob: -3.903602123260498
    5. ')' → logprob: -4.903602123260498
    6. '    
' → logprob: -5.653602123260498
    7. '<|end|>' → logprob: -6.028602123260498
    8. 'def' → logprob: -6.278602123260498
    9. ',' → logprob: -6.653602123260498
    10. 'visited' → logprob: -6.903602123260498

Token 243: '?
' (ID: 3901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023306740447878838
    2. ' table' → logprob: -4.648306846618652
    3. '<|end|>' → logprob: -5.023306846618652
    4. 'table' → logprob: -5.773306846618652
    5. '
' → logprob: -6.148306846618652
    6. '    
' → logprob: -7.648306846618652
    7. '	table' → logprob: -8.773306846618652
    8. '{' → logprob: -8.898306846618652
    9. '  
' → logprob: -9.148306846618652
    10. ' {' → logprob: -9.148306846618652

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8380374312400818
    2. ' table' → logprob: -1.4630374908447266
    3. '
' → logprob: -1.5880374908447266
    4. 'table' → logprob: -3.2130374908447266
    5. '    
' → logprob: -3.5880374908447266
    6. ' 
' → logprob: -3.7130374908447266
    7. '<|end|>' → logprob: -4.338037490844727
    8. '  
' → logprob: -4.463037490844727
    9. '	table' → logprob: -5.838037490844727
    10. '	
' → logprob: -6.588037490844727

Token 245: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' (adapté à ' table') → logprob: -0.4835052788257599
    2. ' table' → logprob: -0.9835052490234375
    3. '   ' → logprob: -5.2335052490234375
    4. ' while' → logprob: -5.8585052490234375
    5. 'while' → logprob: -6.8585052490234375
    6. '	table' → logprob: -9.733505249023438
    7. ' ' → logprob: -10.983505249023438
    8. ' 
' → logprob: -11.358505249023438
    9. '
' → logprob: -11.358505249023438
    10. '    
' → logprob: -11.483505249023438

Token 246: '[' (ID: 58)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.08281218260526657
    2. '[' → logprob: -2.5828120708465576
    3. '[state' → logprob: -5.707812309265137
    4. '[(' → logprob: -8.832812309265137
    5. ' =' → logprob: -8.957812309265137
    6. '=' → logprob: -9.457812309265137
    7. '[end' → logprob: -9.832812309265137
    8. 'start' → logprob: -10.332812309265137
    9. '[str' → logprob: -10.457812309265137
    10. '["' → logprob: -10.582812309265137

Token 247: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.059300314635038376
    2. 'start' → logprob: -3.309300422668457
    3. ' tuple' → logprob: -4.309300422668457
    4. 'str' → logprob: -5.059300422668457
    5. '(tuple' → logprob: -6.934300422668457
    6. ' start' → logprob: -9.184300422668457
    7. '(start' → logprob: -10.184300422668457
    8. '''.' → logprob: -10.809300422668457
    9. 'repr' → logprob: -10.934300422668457
    10. '(' → logprob: -10.934300422668457

Token 248: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -8.268254896393046e-05
    2. 'start' → logprob: -9.625082969665527
    3. '[start' → logprob: -11.250082969665527
    4. '(' → logprob: -13.250082969665527
    5. ' start' → logprob: -14.750082969665527
    6. ')' → logprob: -15.375082969665527
    7. '(end' → logprob: -15.375082969665527
    8. ':start' → logprob: -15.625082969665527
    9. '=start' → logprob: -15.625082969665527
    10. ',start' → logprob: -15.750082969665527

Token 249: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008567414246499538
    2. ')' → logprob: -4.8835673332214355
    3. ' )' → logprob: -7.2585673332214355
    4. '())' → logprob: -8.758567810058594
    5. ')=' → logprob: -9.758567810058594
    6. ']' → logprob: -10.508567810058594
    7. '()]' → logprob: -12.258567810058594
    8. ')])' → logprob: -12.883567810058594
    9. '])' → logprob: -13.508567810058594
    10. '()' → logprob: -13.633567810058594

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741254150867462
    2. '=' → logprob: -0.9741253852844238
    3. '=True' → logprob: -9.974125862121582
    4. '=False' → logprob: -14.224125862121582
    5. ' ' → logprob: -15.099125862121582
    6. ']=' → logprob: -16.099124908447266
    7. ' =[' → logprob: -16.099124908447266
    8. '   ' → logprob: -16.224124908447266
    9. ']' → logprob: -16.224124908447266
    10. '=None' → logprob: -16.349124908447266

Token 251: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5486313700675964
    2. 'None' → logprob: -0.9236313700675964
    3. '0' → logprob: -4.173631191253662
    4. ' None' → logprob: -5.298631191253662
    5. ' True' → logprob: -5.548631191253662
    6. '1' → logprob: -7.798631191253662
    7. ' ' → logprob: -8.54863166809082
    8. '-' → logprob: -8.92363166809082
    9. '(True' → logprob: -9.79863166809082
    10. '[' → logprob: -9.79863166809082

Token 252: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0059196739457547665
    2. '    
' → logprob: -6.130919456481934
    3. '<|end|>' → logprob: -6.380919456481934
    4. '  
' → logprob: -6.880919456481934
    5. '   ' → logprob: -7.630919456481934
    6. ' 
' → logprob: -8.630919456481934
    7. '	
' → logprob: -9.255919456481934
    8. '
' → logprob: -9.505919456481934
    9. '

' → logprob: -10.005919456481934
    10. '   
' → logprob: -10.130919456481934

Token 253: ' ?????' (ID: 149222)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.06207837536931038
    2. ' True' → logprob: -2.8120784759521484
    3. '1' → logprob: -9.937078475952148
    4. '(True' → logprob: -9.937078475952148
    5. '=True' → logprob: -11.437078475952148
    6. '<|end|>' → logprob: -14.187078475952148
    7. 'None' → logprob: -14.312078475952148
    8. ' ' → logprob: -14.437078475952148
    9. '   ' → logprob: -14.562078475952148
    10. 'False' → logprob: -14.937078475952148

Token 254: '??' (ID: 6961)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: '±' (ID: 32438)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: '???' (ID: 33110)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: '¢' (ID: 61242)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: '§' (ID: 18596)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: '????????' (ID: 85218)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7698209285736084
    2. '<|end|>' → logprob: -1.0198209285736084
    3. '   ' → logprob: -2.5198209285736084
    4. '    
' → logprob: -3.6448209285736084
    5. '  
' → logprob: -3.8948209285736084
    6. '<|end|>' → logprob: -4.0198211669921875
    7. ')' → logprob: -4.2698211669921875
    8. ' 
' → logprob: -4.6448211669921875
    9. ' while' → logprob: -6.2698211669921875
    10. '\n' → logprob: -6.5198211669921875

Token 261: '????????' (ID: 85218)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8493326902389526
    2. ' while' → logprob: -1.4743326902389526
    3. '   ' → logprob: -1.5993326902389526
    4. 'while' → logprob: -2.974332809448242
    5. '<|end|>' → logprob: -3.224332809448242
    6. '    
' → logprob: -3.974332809448242
    7. '  
' → logprob: -4.349332809448242
    8. ')' → logprob: -4.974332809448242
    9. '	while' → logprob: -5.474332809448242
    10. ' 
' → logprob: -5.599332809448242

Token 262: '????????' (ID: 85218)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9828011393547058
    2. '   ' → logprob: -1.2328011989593506
    3. '
' → logprob: -1.4828011989593506
    4. 'while' → logprob: -2.6078011989593506
    5. '    
' → logprob: -3.9828011989593506
    6. '  
' → logprob: -5.3578009605407715
    7. '	while' → logprob: -5.3578009605407715
    8. '<|end|>' → logprob: -6.2328009605407715
    9. ' 
' → logprob: -6.8578009605407715
    10. '```' → logprob: -7.7328009605407715

Token 263: '???

' (ID: 85275)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8555227518081665
    2. '   ' → logprob: -1.3555227518081665
    3. ' while' → logprob: -1.4805227518081665
    4. '    
' → logprob: -3.230522632598877
    5. 'while' → logprob: -3.855522632598877
    6. '<|end|>' → logprob: -4.730522632598877
    7. '  
' → logprob: -4.855522632598877
    8. ' 
' → logprob: -5.230522632598877
    9. '	while' → logprob: -5.855522632598877
    10. '	
' → logprob: -6.730522632598877

Token 264: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3415764272212982
    2. '   ' → logprob: -1.4665764570236206
    3. 'while' → logprob: -3.466576337814331
    4. '    
' → logprob: -4.71657657623291
    5. '
' → logprob: -4.84157657623291
    6. '	while' → logprob: -4.96657657623291
    7. ' 
' → logprob: -6.84157657623291
    8. '  
' → logprob: -6.84157657623291
    9. '	
' → logprob: -7.71657657623291
    10. '   
' → logprob: -8.71657657623291

Token 265: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.6408089995384216
    2. ' while' → logprob: -0.7658089995384216
    3. '   ' → logprob: -4.890809059143066
    4. '    
' → logprob: -8.140809059143066
    5. '
' → logprob: -8.640809059143066
    6. '	while' → logprob: -9.265809059143066
    7. ' 
' → logprob: -9.515809059143066
    8. '  
' → logprob: -12.265809059143066
    9. 'While' → logprob: -12.390809059143066
    10. '    ' → logprob: -12.390809059143066

Token 266: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04314020648598671
    2. 'not' → logprob: -3.168140172958374
    3. 'True' → logprob: -9.668140411376953
    4. ' True' → logprob: -9.918140411376953
    5. '(not' → logprob: -11.293140411376953
    6. 'q' → logprob: -11.668140411376953
    7. ' q' → logprob: -12.543140411376953
    8. '	not' → logprob: -13.418140411376953
    9. '(True' → logprob: -14.418140411376953
    10. 'n' → logprob: -14.668140411376953

Token 267: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.11282751709222794
    2. ' q' → logprob: -2.2378275394439697
    3. '	q' → logprob: -13.11282730102539
    4. '   ' → logprob: -13.73782730102539
    5. '
' → logprob: -14.23782730102539
    6. ' ' → logprob: -14.23782730102539
    7. '(q' → logprob: -14.61282730102539
    8. '_q' → logprob: -16.61282730102539
    9. '  ' → logprob: -16.73782730102539
    10. '(' → logprob: -17.73782730102539

Token 268: '.empty' (ID: 18962)
  Prédit: '.empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.empty' → logprob: -2.3080716346157715e-05
    2. '.' → logprob: -11.500022888183594
    3. '.q' → logprob: -11.625022888183594
    4. ' .' → logprob: -13.000022888183594
    5. '.Empty' → logprob: -13.750022888183594
    6. 'empty' → logprob: -15.375022888183594
    7. '.em' → logprob: -15.625022888183594
    8. '.EMPTY' → logprob: -15.875022888183594
    9. '.emp' → logprob: -16.625022888183594
    10. '.put' → logprob: -16.875022888183594

Token 269: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00013595925702247769
    2. '()' → logprob: -9.625136375427246
    3. ' ():' → logprob: -9.750136375427246
    4. '():
' → logprob: -11.500136375427246
    5. ':' → logprob: -14.000136375427246
    6. '(' → logprob: -14.875136375427246
    7. '():
' → logprob: -15.750136375427246
    8. ' ()' → logprob: -17.25013542175293
    9. '):' → logprob: -17.50013542175293
    10. ' :' → logprob: -18.50013542175293

Token 270: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003748298389837146
    2. '        
' → logprob: -6.878748416900635
    3. '   ' → logprob: -7.378748416900635
    4. '    ' → logprob: -8.253747940063477
    5. '     ' → logprob: -8.253747940063477
    6. '<|end|>' → logprob: -8.753747940063477
    7. ' s' → logprob: -9.128747940063477
    8. '  
' → logprob: -9.253747940063477
    9. 'n' → logprob: -9.253747940063477
    10. ' current' → logprob: -9.378747940063477

Token 271: ' empty' (ID: 8213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11047940701246262
    2. ' q' → logprob: -3.1104793548583984
    3. 'q' → logprob: -3.9854793548583984
    4. ' True' → logprob: -4.735479354858398
    5. ')' → logprob: -4.860479354858398
    6. '
' → logprob: -4.985479354858398
    7. '    ' → logprob: -5.735479354858398
    8. '    
' → logprob: -5.985479354858398
    9. 'state' → logprob: -6.360479354858398
    10. '       ' → logprob: -6.360479354858398

Token 272: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0014101164415478706
    2. '()' → logprob: -6.751410007476807
    3. ':' → logprob: -8.501410484313965
    4. '():
' → logprob: -10.501410484313965
    5. ' ():' → logprob: -11.876410484313965
    6. ' :' → logprob: -14.251410484313965
    7. '):' → logprob: -14.251410484313965
    8. '(' → logprob: -15.001410484313965
    9. '():
' → logprob: -15.626410484313965
    10. '()>' → logprob: -16.50140953063965

Token 273: '???' (ID: 33110)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15761268138885498
    2. '():' → logprob: -2.0326128005981445
    3. '):' → logprob: -4.2826128005981445
    4. ' :' → logprob: -8.532612800598145
    5. '<|end|>' → logprob: -8.532612800598145
    6. ')' → logprob: -8.657612800598145
    7. '():
' → logprob: -8.782612800598145
    8. ':
' → logprob: -9.032612800598145
    9. '()' → logprob: -10.157612800598145
    10. '<|end|>' → logprob: -10.407612800598145

Token 274: 'Q' (ID: 48)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02265549823641777
    2. '()' → logprob: -3.897655487060547
    3. ':' → logprob: -6.272655487060547
    4. '():
' → logprob: -9.022655487060547
    5. '()==' → logprob: -10.772655487060547
    6. ' ():' → logprob: -10.772655487060547
    7. ' :' → logprob: -11.022655487060547
    8. '):' → logprob: -11.397655487060547
    9. '(' → logprob: -11.772655487060547
    10. '()>' → logprob: -11.897655487060547

Token 275: '????????' (ID: 85218)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.029385117813944817
    2. ':' → logprob: -4.404385089874268
    3. '()' → logprob: -4.404385089874268
    4. '()==' → logprob: -6.279385089874268
    5. '):' → logprob: -6.529385089874268
    6. '():
' → logprob: -7.654385089874268
    7. '==' → logprob: -8.404385566711426
    8. ')' → logprob: -9.029385566711426
    9. ' ==' → logprob: -9.529385566711426
    10. '()!=' → logprob: -9.529385566711426

Token 276: '???' (ID: 33110)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0291739571839571
    2. '():' → logprob: -4.154173851013184
    3. '):' → logprob: -4.904173851013184
    4. '<|end|>' → logprob: -5.904173851013184
    5. ':
' → logprob: -7.029173851013184
    6. ' :' → logprob: -7.154173851013184
    7. ')' → logprob: -8.404173851013184
    8. '   ' → logprob: -8.654173851013184
    9. '):
' → logprob: -8.779173851013184
    10. '<|end|>' → logprob: -8.779173851013184

Token 277: '´' (ID: 14737)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09556252509355545
    2. '):' → logprob: -2.59556245803833
    3. ' :' → logprob: -5.34556245803833
    4. '   ' → logprob: -5.34556245803833
    5. '       ' → logprob: -5.47056245803833
    6. ':
' → logprob: -6.72056245803833
    7. ')' → logprob: -7.22056245803833
    8. '():' → logprob: -8.470562934875488
    9. '):
' → logprob: -8.970562934875488
    10. '    ' → logprob: -9.220562934875488

Token 278: '????' (ID: 25883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18420472741127014
    2. '):' → logprob: -1.9342046976089478
    3. ')' → logprob: -4.934204578399658
    4. '):
' → logprob: -5.434204578399658
    5. '       ' → logprob: -5.684204578399658
    6. ':
' → logprob: -5.684204578399658
    7. '<|end|>' → logprob: -5.809204578399658
    8. '
' → logprob: -7.059204578399658
    9. '():' → logprob: -7.559204578399658
    10. '<|end|>' → logprob: -8.684205055236816

Token 279: '??' (ID: 6961)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12660004198551178
    2. ':' → logprob: -2.3766000270843506
    3. '):' → logprob: -4.75160026550293
    4. '   ' → logprob: -5.12660026550293
    5. '<|end|>' → logprob: -5.50160026550293
    6. ')' → logprob: -6.12660026550293
    7. ':
' → logprob: -6.62660026550293
    8. ',' → logprob: -7.12660026550293
    9. '):
' → logprob: -7.25160026550293
    10. '        
' → logprob: -7.62660026550293

Token 280: 'True' (ID: 4710)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4850926697254181
    2. '):' → logprob: -1.8600926399230957
    3. '<|end|>' → logprob: -2.4850926399230957
    4. '       ' → logprob: -2.6100926399230957
    5. ')' → logprob: -3.1100926399230957
    6. '   ' → logprob: -4.610092639923096
    7. '
' → logprob: -5.485092639923096
    8. ' :' → logprob: -6.110092639923096
    9. '):
' → logprob: -6.360092639923096
    10. '    ' → logprob: -6.360092639923096

Token 281: '????????' (ID: 85218)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17430105805397034
    2. '):' → logprob: -2.0493011474609375
    3. '       ' → logprob: -4.1743011474609375
    4. ')' → logprob: -4.9243011474609375
    5. '<|end|>' → logprob: -5.4243011474609375
    6. '   ' → logprob: -6.6743011474609375
    7. ' :' → logprob: -6.9243011474609375
    8. '):
' → logprob: -7.6743011474609375
    9. ':
' → logprob: -7.7993011474609375
    10. '():' → logprob: -8.299301147460938

Token 282: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5247645378112793
    2. ':' → logprob: -1.1497645378112793
    3. '):' → logprob: -2.8997645378112793
    4. '   ' → logprob: -4.024764537811279
    5. ')' → logprob: -4.274764537811279
    6. '<|end|>' → logprob: -6.524764537811279
    7. '):
' → logprob: -7.399764537811279
    8. ' :' → logprob: -7.524764537811279
    9. ':
' → logprob: -7.899764537811279
    10. '    ' → logprob: -8.274765014648438

Token 283: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11189582198858261
    2. '):' → logprob: -3.361895799636841
    3. ':' → logprob: -3.486895799636841
    4. ')' → logprob: -3.861895799636841
    5. '):
' → logprob: -5.36189603805542
    6. '
' → logprob: -5.48689603805542
    7. '<|end|>' → logprob: -5.48689603805542
    8. '   ' → logprob: -6.61189603805542
    9. '        
' → logprob: -6.61189603805542
    10. ',' → logprob: -6.98689603805542

Token 284: '§' (ID: 18596)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26807254552841187
    2. '):' → logprob: -2.1430726051330566
    3. '       ' → logprob: -2.2680726051330566
    4. '   ' → logprob: -5.393072605133057
    5. ' :' → logprob: -5.518072605133057
    6. ':
' → logprob: -6.768072605133057
    7. ')' → logprob: -6.893072605133057
    8. '):
' → logprob: -7.018072605133057
    9. '        
' → logprob: -7.518072605133057
    10. '():' → logprob: -7.643072605133057

Token 285: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6663822531700134
    2. '):' → logprob: -1.2913823127746582
    3. '<|end|>' → logprob: -2.666382312774658
    4. ':' → logprob: -2.791382312774658
    5. ')' → logprob: -3.041382312774658
    6. '
' → logprob: -4.416382312774658
    7. '):
' → logprob: -5.166382312774658
    8. '        
' → logprob: -5.666382312774658
    9. '   ' → logprob: -6.041382312774658
    10. ',' → logprob: -6.041382312774658

Token 286: '´' (ID: 14737)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9095292687416077
    2. ':' → logprob: -1.034529209136963
    3. '):' → logprob: -1.534529209136963
    4. '   ' → logprob: -4.534529209136963
    5. ')' → logprob: -5.034529209136963
    6. ' :' → logprob: -5.659529209136963
    7. '        
' → logprob: -6.784529209136963
    8. '):
' → logprob: -6.909529209136963
    9. '    ' → logprob: -7.284529209136963
    10. '
' → logprob: -7.784529209136963

Token 287: '????' (ID: 25883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008751065470278263
    2. ':' → logprob: -5.508750915527344
    3. '):' → logprob: -6.383750915527344
    4. '   ' → logprob: -6.383750915527344
    5. ')' → logprob: -8.008750915527344
    6. ' :' → logprob: -8.383750915527344
    7. '        
' → logprob: -8.508750915527344
    8. ',' → logprob: -9.633750915527344
    9. '     ' → logprob: -10.008750915527344
    10. '    ' → logprob: -10.133750915527344

Token 288: '??' (ID: 6961)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24809487164020538
    2. ':' → logprob: -2.1230947971343994
    3. '):' → logprob: -2.6230947971343994
    4. ')' → logprob: -4.6230950355529785
    5. '):
' → logprob: -5.6230950355529785
    6. '
' → logprob: -5.8730950355529785
    7. '<|end|>' → logprob: -5.9980950355529785
    8. '   ' → logprob: -6.1230950355529785
    9. '        
' → logprob: -6.1230950355529785
    10. ':
' → logprob: -7.1230950355529785

Token 289: 'False' (ID: 8168)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19876666367053986
    2. '       ' → logprob: -1.8237667083740234
    3. ')' → logprob: -5.448766708374023
    4. '    
' → logprob: -5.573766708374023
    5. '
' → logprob: -6.073766708374023
    6. '    ' → logprob: -6.573766708374023
    7. '	' → logprob: -6.948766708374023
    8. ':' → logprob: -7.073766708374023
    9. '  
' → logprob: -7.073766708374023
    10. '        
' → logprob: -7.323766708374023

Token 290: '????????' (ID: 85218)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23357267677783966
    2. '):' → logprob: -1.8585727214813232
    3. '       ' → logprob: -3.1085727214813232
    4. ')' → logprob: -5.858572483062744
    5. '<|end|>' → logprob: -6.858572483062744
    6. '   ' → logprob: -6.983572483062744
    7. ':
' → logprob: -7.108572483062744
    8. '):
' → logprob: -7.233572483062744
    9. ',' → logprob: -7.858572483062744
    10. ' :' → logprob: -7.983572483062744

Token 291: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2256229668855667
    2. ':' → logprob: -2.2256228923797607
    3. '):' → logprob: -2.4756228923797607
    4. ' :' → logprob: -5.60062313079834
    5. ')' → logprob: -6.22562313079834
    6. '   ' → logprob: -6.85062313079834
    7. ',' → logprob: -7.60062313079834
    8. '):
' → logprob: -7.60062313079834
    9. '():' → logprob: -7.60062313079834
    10. '
' → logprob: -8.10062313079834

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05169544741511345
    2. '   ' → logprob: -3.3016953468322754
    3. '        
' → logprob: -5.426695346832275
    4. '    ' → logprob: -5.801695346832275
    5. ' s' → logprob: -6.551695346832275
    6. ' state' → logprob: -7.176695346832275
    7. '    
' → logprob: -7.301695346832275
    8. 'state' → logprob: -7.551695346832275
    9. ')' → logprob: -8.051695823669434
    10. '     ' → logprob: -8.301695823669434

Token 293: ' a' (ID: 261)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.1846400499343872
    2. 'cur' → logprob: -1.3096400499343872
    3. 's' → logprob: -1.6846400499343872
    4. 'current' → logprob: -2.8096399307250977
    5. 'now' → logprob: -2.9346399307250977
    6. 'curr' → logprob: -3.8096399307250977
    7. ' s' → logprob: -3.9346399307250977
    8. '   ' → logprob: -4.559639930725098
    9. ' current' → logprob: -4.559639930725098
    10. ' now' → logprob: -4.559639930725098

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01438808161765337
    2. '=' → logprob: -4.264388084411621
    3. 'state' → logprob: -8.514388084411621
    4. ' ' → logprob: -11.889388084411621
    5. '_state' → logprob: -11.889388084411621
    6. '=current' → logprob: -13.389388084411621
    7. '   ' → logprob: -13.764388084411621
    8. 'State' → logprob: -13.764388084411621
    9. ' state' → logprob: -13.889388084411621
    10. 't' → logprob: -14.264388084411621

Token 295: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.008614926598966122
    2. ' q' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.008614540100098
    4. '	q' → logprob: -16.133615493774414
    5. '
' → logprob: -17.758615493774414
    6. 'a' → logprob: -18.133615493774414
    7. '    ' → logprob: -18.383615493774414
    8. '  ' → logprob: -19.258615493774414
    9. '       ' → logprob: -19.383615493774414
    10. 'state' → logprob: -19.508615493774414

Token 296: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -4.008129963040119e-06
    2. '.' → logprob: -13.125003814697266
    3. 'get' → logprob: -13.500003814697266
    4. ' .' → logprob: -14.250003814697266
    5. '.dequeue' → logprob: -18.000003814697266
    6. '.q' → logprob: -18.500003814697266
    7. '   ' → logprob: -18.750003814697266
    8. '#get' → logprob: -19.250003814697266
    9. '	get' → logprob: -19.500003814697266
    10. '.put' → logprob: -19.875003814697266

Token 297: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004319804720580578
    2. '()
' → logprob: -7.750432014465332
    3. '()
' → logprob: -14.750432014465332
    4. '())' → logprob: -14.875432014465332
    5. ' ()' → logprob: -15.125432014465332
    6. '()

' → logprob: -15.625432014465332
    7. ')' → logprob: -17.250431060791016
    8. '()`' → logprob: -17.750431060791016
    9. '()\' → logprob: -18.000431060791016
    10. '()<' → logprob: -18.500431060791016

Token 298: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47440728545188904
    2. '<|end|>' → logprob: -1.8494073152542114
    3. '       ' → logprob: -2.349407196044922
    4. '        
' → logprob: -3.474407196044922
    5. '   ' → logprob: -3.599407196044922
    6. '    
' → logprob: -4.099407196044922
    7. ' 
' → logprob: -4.224407196044922
    8. ' if' → logprob: -4.349407196044922
    9. '  
' → logprob: -4.724407196044922
    10. '		
' → logprob: -5.474407196044922

Token 299: ' Q' (ID: 1486)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.042417339980602264
    2. ' if' → logprob: -3.667417287826538
    3. 'board' → logprob: -4.292417526245117
    4. '   ' → logprob: -6.792417526245117
    5. 'state' → logprob: -7.292417526245117
    6. 'b' → logprob: -8.292417526245117
    7. 'a' → logprob: -9.667417526245117
    8. '    
' → logprob: -9.917417526245117
    9. ' board' → logprob: -9.917417526245117
    10. '
' → logprob: -10.042417526245117

Token 300: '????' (ID: 25883)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 301: '??' (ID: 6961)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3691645562648773
    2. '<|end|>' → logprob: -1.8691645860671997
    3. '.board' → logprob: -2.61916446685791
    4. '    
' → logprob: -3.49416446685791
    5. '    ' → logprob: -4.49416446685791
    6. '        
' → logprob: -4.74416446685791
    7. '<|end|>' → logprob: -4.99416446685791
    8. '       ' → logprob: -5.11916446685791
    9. '  
' → logprob: -5.36916446685791
    10. '   ' → logprob: -6.24416446685791

Token 302: 'item' (ID: 2057)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 304: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: '???' (ID: 33110)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 308: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9627485275268555
    2. '   ' → logprob: -1.2127485275268555
    3. ' if' → logprob: -2.3377485275268555
    4. '        
' → logprob: -2.5877485275268555
    5. '    
' → logprob: -3.0877485275268555
    6. 'if' → logprob: -3.5877485275268555
    7. '
' → logprob: -3.7127485275268555
    8. '<|end|>' → logprob: -4.3377485275268555
    9. '  
' → logprob: -4.9627485275268555
    10. '    ' → logprob: -5.3377485275268555

Token 309: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17694208025932312
    2. ' if' → logprob: -3.3019421100616455
    3. '    
' → logprob: -3.3019421100616455
    4. '
' → logprob: -3.5519421100616455
    5. '       ' → logprob: -4.551941871643066
    6. '	board' → logprob: -4.676941871643066
    7. 'if' → logprob: -5.301941871643066
    8. '	if' → logprob: -5.426941871643066
    9. 'board' → logprob: -5.426941871643066
    10. '        
' → logprob: -5.551941871643066

Token 310: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1076446995139122
    2. ' if' → logprob: -2.48264479637146
    3. '   ' → logprob: -4.357644557952881
    4. '       ' → logprob: -5.482644557952881
    5. 'board' → logprob: -7.232644557952881
    6. '	if' → logprob: -8.607645034790039
    7. 'b' → logprob: -9.107645034790039
    8. '    ' → logprob: -9.232645034790039
    9. '        
' → logprob: -9.232645034790039
    10. 'for' (adapté à ' for') → logprob: -9.607645034790039

Token 311: ' i' (ID: 575)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.6325939893722534
    2. 'n' → logprob: -1.7575939893722534
    3. 'next' → logprob: -2.132594108581543
    4. ' nxt' → logprob: -2.382594108581543
    5. ' next' → logprob: -2.507594108581543
    6. 'i' → logprob: -2.507594108581543
    7. ' b' → logprob: -3.007594108581543
    8. 'nx' → logprob: -3.757594108581543
    9. 'w' → logprob: -3.757594108581543
    10. 'v' → logprob: -4.132594108581543

Token 312: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14275649189949036
    2. 'in' → logprob: -2.017756462097168
    3. '	in' → logprob: -10.392756462097168
    4. ' ' → logprob: -10.767756462097168
    5. '_in' → logprob: -11.767756462097168
    6. '  ' → logprob: -12.392756462097168
    7. 's' → logprob: -12.892756462097168
    8. '　' → logprob: -12.892756462097168
    9. 'n' → logprob: -13.017756462097168
    10. ' i' → logprob: -13.392756462097168

Token 313: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.1002098023891449
    2. ' adjacent' → logprob: -2.3502097129821777
    3. '   ' → logprob: -14.100210189819336
    4. 'range' → logprob: -14.225210189819336
    5. ' ' → logprob: -14.350210189819336
    6. 'Adjacent' → logprob: -14.975210189819336
    7. '(' → logprob: -15.350210189819336
    8. '[' → logprob: -15.725210189819336
    9. ' adjacency' → logprob: -15.975210189819336
    10. '(adj' → logprob: -16.225210189819336

Token 314: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.300083648762666e-05
    2. ':' → logprob: -10.750053405761719
    3. 'a' → logprob: -11.375053405761719
    4. '[' → logprob: -12.250053405761719
    5. '(a' → logprob: -12.375053405761719
    6. '   ' → logprob: -12.375053405761719
    7. ' [' → logprob: -12.625053405761719
    8. ' a' → logprob: -14.500053405761719
    9. '       ' → logprob: -14.875053405761719
    10. ')' → logprob: -14.875053405761719

Token 315: '.space' (ID: 66327)
  Prédit: '.space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.space' → logprob: -4.320199877838604e-07
    2. '.board' → logprob: -15.375
    3. '.' → logprob: -16.875
    4. ' .' → logprob: -17.0
    5. '.state' → logprob: -17.0
    6. 'space' → logprob: -17.75
    7. '.s' → logprob: -19.875
    8. '.sp' → logprob: -20.5
    9. '(space' → logprob: -20.75
    10. ' space' → logprob: -21.0

Token 316: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0003122247871942818
    2. ']:
' → logprob: -8.375311851501465
    3. ']' → logprob: -9.625311851501465
    4. ']:
' → logprob: -11.500311851501465
    5. '       ' → logprob: -13.375311851501465
    6. ' ]' → logprob: -13.750311851501465
    7. '   ' → logprob: -13.875311851501465
    8. ':' → logprob: -14.750311851501465
    9. ']:

' → logprob: -14.875311851501465
    10. '):' → logprob: -15.250311851501465

Token 317: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044335801154375076
    2. ' new' → logprob: -4.044335842132568
    3. ' if' → logprob: -4.419335842132568
    4. '            ' → logprob: -5.419335842132568
    5. ' board' → logprob: -5.919335842132568
    6. 'new' → logprob: -6.544335842132568
    7. '        ' → logprob: -7.044335842132568
    8. 'board' → logprob: -7.294335842132568
    9. 'if' → logprob: -7.669335842132568
    10. ' #' → logprob: -7.794335842132568

Token 318: ' i' (ID: 575)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3059655427932739
    2. ' new' → logprob: -2.0559654235839844
    3. 'board' → logprob: -3.1809654235839844
    4. 'b' → logprob: -3.4309654235839844
    5. '       ' → logprob: -3.6809654235839844
    6. '   ' → logprob: -4.555965423583984
    7. '    ' → logprob: -5.555965423583984
    8. 'next' → logprob: -5.555965423583984
    9. 'if' → logprob: -5.680965423583984
    10. '           ' → logprob: -5.680965423583984

Token 319: '????????' (ID: 85218)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5635800957679749
    2. '   ' → logprob: -1.68858003616333
    3. ' =' → logprob: -2.31358003616333
    4. '       ' → logprob: -3.68858003616333
    5. ' ==' → logprob: -3.81358003616333
    6. ' ' → logprob: -4.31358003616333
    7. '    ' → logprob: -4.56358003616333
    8. '=' → logprob: -4.56358003616333
    9. ' !=' → logprob: -4.81358003616333
    10. '  ' → logprob: -4.81358003616333

Token 320: '????' (ID: 25883)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 321: '0' (ID: 15)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7515004277229309
    2. '        ' → logprob: -1.8765003681182861
    3. ' new' → logprob: -2.376500368118286
    4. ' if' → logprob: -2.501500368118286
    5. '           ' → logprob: -2.626500368118286
    6. '    ' → logprob: -3.751500368118286
    7. 'if' → logprob: -4.001500606536865
    8. '   ' → logprob: -4.376500606536865
    9. ' #' → logprob: -4.376500606536865
    10. 'new' → logprob: -4.376500606536865

Token 322: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8386954069137573
    2. ':' → logprob: -1.7136954069137573
    3. '   ' → logprob: -2.213695526123047
    4. '    ' → logprob: -2.713695526123047
    5. ',' → logprob: -3.338695526123047
    6. ':
' → logprob: -3.338695526123047
    7. '           ' → logprob: -3.838695526123047
    8. '        ' → logprob: -3.838695526123047
    9. '<|end|>' → logprob: -3.963695526123047
    10. '
' → logprob: -4.088695526123047

Token 323: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8294045925140381
    2. '   ' → logprob: -0.9544045925140381
    3. '    ' → logprob: -2.329404592514038
    4. ' if' → logprob: -4.454404830932617
    5. '<|end|>' → logprob: -4.454404830932617
    6. '
' → logprob: -4.704404830932617
    7. ')' → logprob: -4.829404830932617
    8. '        ' → logprob: -4.829404830932617
    9. ' ' → logprob: -4.829404830932617
    10. '  ' → logprob: -5.829404830932617

Token 324: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44790083169937134
    2. 'new' → logprob: -1.3229007720947266
    3. ' new' → logprob: -2.9479007720947266
    4. '           ' → logprob: -4.322900772094727
    5. 'board' → logprob: -4.947900772094727
    6. '   ' → logprob: -5.072900772094727
    7. 'next' → logprob: -5.447900772094727
    8. 'b' → logprob: -5.822900772094727
    9. 'if' → logprob: -5.947900772094727
    10. ' board' → logprob: -7.072900772094727

Token 325: ' b' (ID: 287)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.897657036781311
    2. 'b' (adapté à ' b') → logprob: -1.772657036781311
    3. '       ' → logprob: -1.772657036781311
    4. 'board' → logprob: -2.2726569175720215
    5. 'if' → logprob: -3.0226569175720215
    6. '           ' → logprob: -3.5226569175720215
    7. ' new' → logprob: -3.7726569175720215
    8. ' if' → logprob: -4.7726569175720215
    9. 'next' → logprob: -4.8976569175720215
    10. '   ' → logprob: -5.0226569175720215

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0743569135665894
    2. 'board' → logprob: -1.0743569135665894
    3. '=' → logprob: -1.3243569135665894
    4. 'oard' → logprob: -3.949357032775879
    5. '_board' → logprob: -4.699357032775879
    6. '   ' → logprob: -4.949357032775879
    7. ' ' → logprob: -6.199357032775879
    8. 'new' → logprob: -6.324357032775879
    9. '.board' → logprob: -6.324357032775879
    10. '       ' → logprob: -6.449357032775879

Token 327: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.43164703249931335
    2. 'list' → logprob: -1.0566470623016357
    3. ' list' → logprob: -6.556646823883057
    4. ' a' → logprob: -6.556646823883057
    5. '[a' → logprob: -10.056647300720215
    6. '[' → logprob: -10.681647300720215
    7. '   ' → logprob: -11.181647300720215
    8. ' ' → logprob: -12.306647300720215
    9. '[list' → logprob: -12.681647300720215
    10. 'State' → logprob: -12.806647300720215

Token 328: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.00010032468708232045
    2. '.space' → logprob: -9.625100135803223
    3. 'board' → logprob: -11.375100135803223
    4. '.' → logprob: -11.500100135803223
    5. '.state' → logprob: -12.750100135803223
    6. '.b' → logprob: -12.875100135803223
    7. '	board' → logprob: -13.125100135803223
    8. '.prev' → logprob: -13.375100135803223
    9. '.__' → logprob: -14.125100135803223
    10. ' .' → logprob: -14.375100135803223

Token 329: '[:]' (ID: 194237)
  Prédit: '[:]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.006782504729926586
    2. '[:' → logprob: -5.006782531738281
    3. '.copy' → logprob: -10.131782531738281
    4. '[' → logprob: -10.506782531738281
    5. ':' → logprob: -17.75678253173828
    6. '.' → logprob: -18.25678253173828
    7. '[::-' → logprob: -18.75678253173828
    8. '[i' → logprob: -19.75678253173828
    9. '[]' → logprob: -19.88178253173828
    10. '[:-' → logprob: -19.88178253173828

Token 330: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012465734966099262
    2. '<|end|>' → logprob: -4.762465953826904
    3. 'b' → logprob: -6.637465953826904
    4. '
' → logprob: -7.637465953826904
    5. '          ' → logprob: -7.887465953826904
    6. '            
' → logprob: -7.887465953826904
    7. '<|end|>' → logprob: -8.137465476989746
    8. ')' → logprob: -9.137465476989746
    9. '       ' → logprob: -9.387465476989746
    10. 'a' → logprob: -9.387465476989746

Token 331: ' ?' (ID: 1423)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7270414233207703
    2. ' ' → logprob: -0.9770414233207703
    3. ' b' → logprob: -3.102041482925415
    4. '<|end|>' → logprob: -3.102041482925415
    5. '[:]' → logprob: -3.602041482925415
    6. '[' → logprob: -4.852041244506836
    7. 'a' → logprob: -5.977041244506836
    8. '    ' → logprob: -6.227041244506836
    9. '[]' → logprob: -6.352041244506836
    10. '  ' → logprob: -6.477041244506836

Token 332: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: '??' (ID: 6961)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: '¢' (ID: 61242)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: '???' (ID: 33110)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.748854398727417
    2. '<|end|>' → logprob: -0.873854398727417
    3. ')' → logprob: -2.748854398727417
    4. 'b' → logprob: -3.998854398727417
    5. '            ' → logprob: -5.123854637145996
    6. '<|end|>' → logprob: -5.373854637145996
    7. ']' → logprob: -5.498854637145996
    8. '[:]' → logprob: -5.623854637145996
    9. '
' → logprob: -6.498854637145996
    10. '          ' → logprob: -6.873854637145996

Token 336: 'b' (ID: 65)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: '????????' (ID: 85218)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.9269165992736816
    2. '           ' → logprob: -1.1769165992736816
    3. '<|end|>' → logprob: -1.4269165992736816
    4. ')' → logprob: -3.9269165992736816
    5. '[:' → logprob: -5.301916599273682
    6. '<|end|>' → logprob: -5.301916599273682
    7. '[]' → logprob: -5.301916599273682
    8. ' =' → logprob: -5.676916599273682
    9. '[' → logprob: -5.801916599273682
    10. '=' → logprob: -6.176916599273682

Token 338: '???' (ID: 33110)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.17840483784675598
    2. '<|end|>' → logprob: -2.5534048080444336
    3. '           ' → logprob: -3.6784048080444336
    4. '[]' → logprob: -4.053404808044434
    5. ')' → logprob: -4.553404808044434
    6. '[:' → logprob: -4.553404808044434
    7. '[' → logprob: -4.678404808044434
    8. ' =' → logprob: -6.303404808044434
    9. '
' → logprob: -6.553404808044434
    10. '<|end|>' → logprob: -6.553404808044434

Token 339: '?
' (ID: 3901)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.3837962746620178
    2. '<|end|>' → logprob: -1.758796215057373
    3. ')' → logprob: -2.883796215057373
    4. '[]' → logprob: -3.508796215057373
    5. '           ' → logprob: -3.758796215057373
    6. ']' → logprob: -4.133796215057373
    7. '[:' → logprob: -5.133796215057373
    8. '[' → logprob: -5.883796215057373
    9. '<|end|>' → logprob: -6.258796215057373
    10. 'b' → logprob: -6.508796215057373

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01508663035929203
    2. 'b' → logprob: -4.890086650848389
    3. '            ' → logprob: -6.265086650848389
    4. 'a' → logprob: -7.015086650848389
    5. '            
' → logprob: -7.015086650848389
    6. '<|end|>' → logprob: -7.890086650848389
    7. '          ' → logprob: -8.01508617401123
    8. '[' → logprob: -8.01508617401123
    9. ' a' → logprob: -8.26508617401123
    10. ' b' → logprob: -8.26508617401123

Token 341: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.030606741085648537
    2. ' b' → logprob: -3.905606746673584
    3. '           ' → logprob: -4.905606746673584
    4. '            ' → logprob: -7.405606746673584
    5. ' ' → logprob: -7.780606746673584
    6. '            
' → logprob: -7.905606746673584
    7. '[' → logprob: -8.280606269836426
    8. 'a' → logprob: -8.655606269836426
    9. ' 
' → logprob: -8.780606269836426
    10. '    ' → logprob: -8.905606269836426

Token 342: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0014877199428156018
    2. '[b' → logprob: -6.751487731933594
    3. '[i' → logprob: -8.251487731933594
    4. 'a' → logprob: -10.126487731933594
    5. '[' → logprob: -11.376487731933594
    6. ',a' → logprob: -13.126487731933594
    7. 'b' → logprob: -13.876487731933594
    8. ',' → logprob: -14.626487731933594
    9. '[
' → logprob: -14.751487731933594
    10. '	a' → logprob: -15.751487731933594

Token 343: '.space' (ID: 66327)
  Prédit: '.space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.space' → logprob: -4.6087021473795176e-05
    2. '.' → logprob: -10.750045776367188
    3. 'space' → logprob: -10.750045776367188
    4. ' .' → logprob: -13.000045776367188
    5. ' space' → logprob: -15.625045776367188
    6. '(space' → logprob: -15.625045776367188
    7. '.square' → logprob: -16.125045776367188
    8. '.s' → logprob: -16.125045776367188
    9. '.sp' → logprob: -16.375045776367188
    10. '_space' → logprob: -16.500045776367188

Token 344: ']' (ID: 60)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.05533343926072121
    2. ',' → logprob: -3.180333375930786
    3. ']' → logprob: -4.680333614349365
    4. ']=' → logprob: -6.180333614349365
    5. ',b' → logprob: -7.055333614349365
    6. ' ],' → logprob: -10.680333137512207
    7. '=' → logprob: -11.555333137512207
    8. '),' → logprob: -12.805333137512207
    9. ' ,' → logprob: -12.930333137512207
    10. '],[' → logprob: -13.055333137512207

Token 345: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15685297548770905
    2. ',b' → logprob: -2.031852960586548
    3. '=' → logprob: -4.281853199005127
    4. ' =' → logprob: -9.281852722167969
    5. ' ,' → logprob: -9.656852722167969
    6. ',i' → logprob: -10.281852722167969
    7. '=b' → logprob: -10.281852722167969
    8. ',a' → logprob: -11.156852722167969
    9. ',j' → logprob: -12.406852722167969
    10. '],' → logprob: -12.781852722167969

Token 346: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.1008713702030946e-06
    2. ' b' → logprob: -13.125001907348633
    3. '   ' → logprob: -20.000001907348633
    4. '	b' → logprob: -20.125001907348633
    5. '\b' → logprob: -20.250001907348633
    6. '           ' → logprob: -21.625001907348633
    7. ')b' → logprob: -23.375001907348633
    8. '       ' → logprob: -23.500001907348633
    9. 'a' → logprob: -23.625001907348633
    10. '  ' → logprob: -23.875001907348633

Token 347: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2519783079624176
    2. 'i' → logprob: -1.5019782781600952
    3. ' i' → logprob: -10.751977920532227
    4. '[' → logprob: -11.751977920532227
    5. '```' → logprob: -11.751977920532227
    6. '	i' → logprob: -12.751977920532227
    7. '(i' → logprob: -13.126977920532227
    8. '_i' → logprob: -13.251977920532227
    9. '<|end|>' → logprob: -14.001977920532227
    10. '`' → logprob: -14.501977920532227

Token 348: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0039770049042999744
    2. '<|end|>' → logprob: -5.753976821899414
    3. ']
' → logprob: -7.628976821899414
    4. ' ]' → logprob: -8.753976821899414
    5. '           ' → logprob: -9.628976821899414
    6. '<|end|>' → logprob: -10.128976821899414
    7. ')' → logprob: -10.378976821899414
    8. 'b' → logprob: -12.378976821899414
    9. '](' → logprob: -12.628976821899414
    10. ' ' → logprob: -13.378976821899414

Token 349: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' ?' (ID: 1423)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2717175781726837
    2. ' b' → logprob: -2.1467175483703613
    3. '0' → logprob: -2.8967175483703613
    4. '<|end|>' → logprob: -3.1467175483703613
    5. ' ' → logprob: -3.8967175483703613
    6. '           ' → logprob: -7.271717548370361
    7. '            ' → logprob: -7.771717548370361
    8. '  ' → logprob: -8.39671802520752
    9. ' 
' → logprob: -8.52171802520752
    10. '    ' → logprob: -8.64671802520752

Token 351: '¬' (ID: 74285)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009205120149999857
    2. ' b' → logprob: -7.000920295715332
    3. 'i' → logprob: -12.125920295715332
    4. 'a' → logprob: -13.625920295715332
    5. '<|end|>' → logprob: -14.250920295715332
    6. '           ' → logprob: -14.500920295715332
    7. ' ' → logprob: -15.625920295715332
    8. '	b' → logprob: -15.750920295715332
    9. '    ' → logprob: -16.00092124938965
    10. '_b' → logprob: -16.25092124938965

Token 352: '????????' (ID: 85218)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02277715690433979
    2. ' b' → logprob: -4.147777080535889
    3. '<|end|>' → logprob: -5.147777080535889
    4. 'i' → logprob: -7.772777080535889
    5. ' ' → logprob: -8.022777557373047
    6. '           ' → logprob: -10.022777557373047
    7. 'a' → logprob: -10.272777557373047
    8. '0' → logprob: -11.147777557373047
    9. '<|end|>' → logprob: -11.397777557373047
    10. '  ' → logprob: -11.772777557373047

Token 353: '?' (ID: 30)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: '¢' (ID: 61242)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 355: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: '?
' (ID: 3901)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 358: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.28358837962150574
    2. ' b' → logprob: -1.4085884094238281
    3. ' 
' → logprob: -6.533588409423828
    4. '           ' → logprob: -7.533588409423828
    5. ' ' → logprob: -8.908588409423828
    6. '            ' → logprob: -9.283588409423828
    7. '<|end|>' → logprob: -9.408588409423828
    8. '            
' → logprob: -10.158588409423828
    9. '[' → logprob: -10.783588409423828
    10. ' space' → logprob: -11.408588409423828

Token 359: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.306760805164231e-05
    2. 'i' → logprob: -11.87501335144043
    3. '[a' → logprob: -12.12501335144043
    4. '[' → logprob: -14.87501335144043
    5. 'a' → logprob: -16.37501335144043
    6. '_i' → logprob: -16.50001335144043
    7. ' i' → logprob: -16.50001335144043
    8. ',i' → logprob: -18.37501335144043
    9. '[b' → logprob: -18.62501335144043
    10. ' [' → logprob: -18.75001335144043

Token 360: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006053462624549866
    2. ' =' → logprob: -6.006053447723389
    3. '=' → logprob: -6.131053447723389
    4. ']=' → logprob: -7.006053447723389
    5. ' ]' → logprob: -7.631053447723389
    6. ')' → logprob: -12.381053924560547
    7. ',' → logprob: -14.506053924560547
    8. ' ' → logprob: -15.506053924560547
    9. '],' → logprob: -15.756053924560547
    10. '[' → logprob: -16.506053924560547

Token 361: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788901224732399
    2. '=' → logprob: -2.578890085220337
    3. ' =
' → logprob: -16.203889846801758
    4. '=b' → logprob: -16.328889846801758
    5. ',' → logprob: -16.703889846801758
    6. ' ' → logprob: -16.828889846801758
    7. '=
' → logprob: -17.203889846801758
    8. '=a' → logprob: -17.328889846801758
    9. '＝' → logprob: -17.578889846801758
    10. ')' → logprob: -18.203889846801758

Token 362: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234002135694027
    2. ' ' → logprob: -5.2552337646484375
    3. 'b' → logprob: -16.380233764648438
    4. '           ' → logprob: -16.880233764648438
    5. 'a' → logprob: -17.505233764648438
    6. ' ' → logprob: -17.505233764648438
    7. '   ' → logprob: -17.567733764648438
    8. ' b' → logprob: -17.755233764648438
    9. '  ' → logprob: -18.192733764648438
    10. '00' → logprob: -18.505233764648438

Token 363: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. 'a' → logprob: -16.625179290771484
    4. 'b' → logprob: -17.812679290771484
    5. '   ' → logprob: -18.500179290771484
    6. '           ' → logprob: -18.500179290771484
    7. '00' → logprob: -18.625179290771484
    8. '０' → logprob: -18.687679290771484
    9. ' ' → logprob: -18.875179290771484
    10. '  ' → logprob: -18.937679290771484

Token 364: '         ' (ID: 983)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38566726446151733
    2. '           ' → logprob: -1.635667324066162
    3. '<|end|>' → logprob: -2.135667324066162
    4. '            
' → logprob: -6.135667324066162
    5. ' 
' → logprob: -6.510667324066162
    6. '
' → logprob: -7.135667324066162
    7. '  
' → logprob: -7.135667324066162
    8. '<|end|>' → logprob: -7.385667324066162
    9. '       ' → logprob: -8.510666847229004
    10. '          ' → logprob: -8.635666847229004

Token 365: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11573070287704468
    2. '<|end|>' → logprob: -2.2407307624816895
    3. ' 
' → logprob: -6.2407307624816895
    4. '
' → logprob: -7.9907307624816895
    5. '<|end|>' → logprob: -8.490730285644531
    6. '  
' → logprob: -8.740730285644531
    7. '            
' → logprob: -9.490730285644531
    8. '\n' → logprob: -9.615730285644531
    9. '           ' → logprob: -10.490730285644531
    10. ' ' → logprob: -10.740730285644531

Token 366: ' ?' (ID: 1423)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.30195367336273193
    2. ' a' → logprob: -1.801953673362732
    3. ' ' → logprob: -2.4269537925720215
    4. '<|end|>' → logprob: -5.6769537925720215
    5. '0' → logprob: -5.9269537925720215
    6. ' 
' → logprob: -8.301953315734863
    7. '  ' → logprob: -8.551953315734863
    8. '    ' → logprob: -8.801953315734863
    9. 'None' → logprob: -9.301953315734863
    10. ' None' → logprob: -9.426953315734863

Token 367: '¬' (ID: 74285)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27000874280929565
    2. '0' → logprob: -2.0200088024139404
    3. 'b' → logprob: -3.0200088024139404
    4. '<|end|>' → logprob: -3.8950088024139404
    5. ''' → logprob: -4.645008563995361
    6. ')' → logprob: -5.020008563995361
    7. ' b' → logprob: -5.145008563995361
    8. 'a' → logprob: -5.770008563995361
    9. ' '' → logprob: -6.645008563995361
    10. '"' → logprob: -6.770008563995361

Token 368: '????????' (ID: 85218)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7448935508728027
    2. '<|end|>' → logprob: -1.3698935508728027
    3. '0' → logprob: -1.4948935508728027
    4. ' ' → logprob: -3.6198935508728027
    5. ' b' → logprob: -4.244893550872803
    6. '
' → logprob: -5.494893550872803
    7. '<|end|>' → logprob: -8.119894027709961
    8. ')' → logprob: -8.494894027709961
    9. ' 
' → logprob: -8.619894027709961
    10. '            ' → logprob: -8.994894027709961

Token 369: '?' (ID: 30)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 370: '¢' (ID: 61242)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: '?
' (ID: 3901)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: '            
            
' (ID: 82115)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6257086992263794
    2. '<|end|>' → logprob: -0.8757086992263794
    3. ' 
' → logprob: -4.25070858001709
    4. '            
' → logprob: -4.25070858001709
    5. '
' → logprob: -4.37570858001709
    6. ' ' → logprob: -6.37570858001709
    7. '<|end|>' → logprob: -6.87570858001709
    8. '  
' → logprob: -7.00070858001709
    9. '		' → logprob: -7.12570858001709
    10. ')' → logprob: -7.62570858001709

Token 374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16719943284988403
    2. ' new' → logprob: -2.6671993732452393
    3. ' next' → logprob: -3.5421993732452393
    4. ' s' → logprob: -3.7921993732452393
    5. ' state' → logprob: -4.167199611663818
    6. ' if' → logprob: -4.917199611663818
    7. '            
' → logprob: -6.417199611663818
    8. 'next' → logprob: -6.542199611663818
    9. 'new' → logprob: -6.667199611663818
    10. 'state' → logprob: -6.792199611663818

Token 375: ' key' (ID: 2140)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10295367240905762
    2. ' if' → logprob: -2.7279536724090576
    3. '           ' → logprob: -3.8529536724090576
    4. 'next' → logprob: -5.477953910827637
    5. 'state' → logprob: -5.602953910827637
    6. 'new' → logprob: -6.477953910827637
    7. 's' → logprob: -7.102953910827637
    8. '            
' → logprob: -8.977953910827637
    9. 'board' → logprob: -9.102953910827637
    10. 'key' (adapté à ' key') → logprob: -9.102953910827637

Token 376: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967913061380386
    2. ' =' → logprob: -2.8119678497314453
    3. '＝' → logprob: -15.686967849731445
    4. '=
' → logprob: -16.686967849731445
    5. ' ' → logprob: -17.936967849731445
    6. ')' → logprob: -18.311967849731445
    7. '=b' → logprob: -18.936967849731445
    8. ')=' → logprob: -19.186967849731445
    9. ' =
' → logprob: -19.436967849731445
    10. '=

' → logprob: -19.436967849731445

Token 377: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -7.517272024415433e-05
    2. ' tuple' → logprob: -9.500075340270996
    3. 'tu' → logprob: -15.500075340270996
    4. '(tuple' → logprob: -17.12507438659668
    5. '   ' → logprob: -20.12507438659668
    6. '_tuple' → logprob: -21.62507438659668
    7. 'Tuple' → logprob: -21.62507438659668
    8. ' ' → logprob: -21.62507438659668
    9. '```' → logprob: -22.37507438659668
    10. 'tpl' → logprob: -22.50007438659668

Token 378: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -2.2200749754119897e-06
    2. 'b' → logprob: -13.125001907348633
    3. '(' → logprob: -15.875001907348633
    4. '[b' → logprob: -19.000001907348633
    5. '(
' → logprob: -19.875001907348633
    6. ')b' → logprob: -20.125001907348633
    7. '	b' → logprob: -21.125001907348633
    8. '(B' → logprob: -21.375001907348633
    9. '\b' → logprob: -22.750001907348633
    10. ' b' → logprob: -22.750001907348633

Token 379: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.526570384972729e-05
    2. ')
' → logprob: -9.875055313110352
    3. ' )' → logprob: -12.625055313110352
    4. ')#' → logprob: -15.750055313110352
    5. ')

' → logprob: -16.25005531311035
    6. '<|end|>' → logprob: -17.37505531311035
    7. '))' → logprob: -17.87505531311035
    8. ' ' → logprob: -18.00005531311035
    9. ')
' → logprob: -18.12505531311035
    10. '),' → logprob: -18.25005531311035

Token 380: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: ' b' (ID: 287)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.43572255969047546
    2. ' if' → logprob: -1.1857225894927979
    3. '<|end|>' → logprob: -4.060722351074219
    4. '            
' → logprob: -4.435722351074219
    5. '           ' → logprob: -4.435722351074219
    6. ')' → logprob: -5.435722351074219
    7. '            ' → logprob: -7.185722351074219
    8. '
' → logprob: -7.810722351074219
    9. '<|end|>' → logprob: -8.185722351074219
    10. ' 
' → logprob: -8.810722351074219

Token 382: '????????' (ID: 85218)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027697350829839706
    2. '<|end|>' → logprob: -4.152697563171387
    3. ' in' → logprob: -5.277697563171387
    4. '<|end|>' → logprob: -6.152697563171387
    5. ' if' → logprob: -6.777697563171387
    6. ')
' → logprob: -7.277697563171387
    7. '
' → logprob: -7.777697563171387
    8. ' )' → logprob: -7.777697563171387
    9. '            
' → logprob: -8.027697563171387
    10. '           ' → logprob: -8.152697563171387

Token 383: '???' (ID: 33110)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6524065732955933
    2. '<|end|>' → logprob: -0.7774065732955933
    3. '<|end|>' → logprob: -4.902406692504883
    4. ']' → logprob: -5.777406692504883
    5. ' )' → logprob: -6.402406692504883
    6. '           ' → logprob: -6.527406692504883
    7. '            
' → logprob: -6.652406692504883
    8. ' if' → logprob: -6.902406692504883
    9. '
' → logprob: -7.027406692504883
    10. ' in' → logprob: -7.777406692504883

Token 384: '¨' (ID: 64259)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 385: '????' (ID: 25883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055492810904979706
    2. '<|end|>' → logprob: -3.305492877960205
    3. '
' → logprob: -4.430492877960205
    4. ')
' → logprob: -6.680492877960205
    5. '<|end|>' → logprob: -6.930492877960205
    6. '            
' → logprob: -6.930492877960205
    7. ' )' → logprob: -7.555492877960205
    8. ' if' → logprob: -7.805492877960205
    9. '           ' → logprob: -8.055492401123047
    10. ']' → logprob: -8.430492401123047

Token 386: '??' (ID: 6961)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40582188963890076
    2. '
' → logprob: -2.1558218002319336
    3. '<|end|>' → logprob: -2.2808218002319336
    4. ' if' → logprob: -2.9058218002319336
    5. '           ' → logprob: -3.7808218002319336
    6. '            
' → logprob: -3.9058218002319336
    7. 'if' → logprob: -5.280821800231934
    8. '<|end|>' → logprob: -5.405821800231934
    9. ')
' → logprob: -5.780821800231934
    10. ']' → logprob: -7.155821800231934

Token 387: 'table' (ID: 4202)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 388: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 389: '¨' (ID: 64259)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 390: '????????' (ID: 85218)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.989302933216095
    2. ' if' → logprob: -1.2393028736114502
    3. '<|end|>' → logprob: -1.4893028736114502
    4. '            
' → logprob: -2.73930287361145
    5. ')' → logprob: -3.98930287361145
    6. '
' → logprob: -4.739303112030029
    7. '<|end|>' → logprob: -4.864303112030029
    8. 'if' → logprob: -5.114303112030029
    9. '            ' → logprob: -5.989303112030029
    10. ' ' → logprob: -6.739303112030029

Token 391: '??' (ID: 6961)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: '¢' (ID: 61242)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 393: '????????' (ID: 85218)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0938751697540283
    2. '<|end|>' → logprob: -1.0938751697540283
    3. '           ' → logprob: -1.4688751697540283
    4. '            
' → logprob: -2.8438751697540283
    5. ')' → logprob: -4.468874931335449
    6. 'if' → logprob: -4.593874931335449
    7. ' ' → logprob: -5.093874931335449
    8. '
' → logprob: -5.468874931335449
    9. '            ' → logprob: -5.593874931335449
    10. '<|end|>' → logprob: -5.968874931335449

Token 394: '??
' (ID: 108055)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7566945552825928
    2. '<|end|>' → logprob: -0.8816945552825928
    3. ' if' → logprob: -2.6316945552825928
    4. '            
' → logprob: -3.6316945552825928
    5. '<|end|>' → logprob: -5.506694793701172
    6. ')' → logprob: -5.506694793701172
    7. '
' → logprob: -5.631694793701172
    8. 'if' → logprob: -5.756694793701172
    9. '            ' → logprob: -6.881694793701172
    10. ' ' → logprob: -7.256694793701172

Token 395: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1015636920928955
    2. '           ' → logprob: -1.3515636920928955
    3. '<|end|>' → logprob: -1.3515636920928955
    4. '
' → logprob: -2.6015636920928955
    5. '            
' → logprob: -3.3515636920928955
    6. ')' → logprob: -3.8515636920928955
    7. '   ' → logprob: -5.226563453674316
    8. ' ' → logprob: -5.851563453674316
    9. 'if' → logprob: -5.851563453674316
    10. '<|end|>' → logprob: -6.351563453674316

Token 396: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3194197714328766
    2. ' if' → logprob: -1.4444197416305542
    3. 'if' (adapté à ' if') → logprob: -3.5694198608398438
    4. '<|end|>' → logprob: -5.194419860839844
    5. '            
' → logprob: -6.069419860839844
    6. ' ' → logprob: -7.069419860839844
    7. '<|end|>' → logprob: -8.694419860839844
    8. '            ' → logprob: -9.069419860839844
    9. '[' → logprob: -10.069419860839844
    10. '          ' → logprob: -10.069419860839844

Token 397: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.19131368398666382
    2. ' key' → logprob: -1.8163137435913086
    3. 'not' → logprob: -4.941313743591309
    4. ' not' → logprob: -5.441313743591309
    5. ' ' → logprob: -11.566313743591309
    6. 'table' → logprob: -12.191313743591309
    7. '(key' → logprob: -12.691313743591309
    8. '   ' → logprob: -12.941313743591309
    9. '	key' → logprob: -13.566313743591309
    10. ' table' → logprob: -14.066313743591309

Token 398: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1608494222164154
    2. 'not' → logprob: -1.9108494520187378
    3. 'in' → logprob: -8.035849571228027
    4. ' in' → logprob: -8.160849571228027
    5. ')' → logprob: -11.660849571228027
    6. '	not' → logprob: -12.535849571228027
    7. ']' → logprob: -14.035849571228027
    8. ' no' → logprob: -14.035849571228027
    9. 'no' → logprob: -14.535849571228027
    10. 'n' → logprob: -14.660849571228027

Token 399: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.011048642918467522
    2. ' table' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.636048316955566
    4. ' ' → logprob: -15.761048316955566
    5. '	table' → logprob: -16.386049270629883
    6. '
' → logprob: -16.886049270629883
    7. '           ' → logprob: -18.761049270629883
    8. '  ' → logprob: -19.011049270629883
    9. ')table' → logprob: -19.636049270629883
    10. 'tab' → logprob: -19.761049270629883

Token 400: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034049976617097855
    2. ':
' → logprob: -3.4090499877929688
    3. '==' → logprob: -8.284049987792969
    4. ' ==' → logprob: -9.284049987792969
    5. ':return' → logprob: -11.034049987792969
    6. ' :' → logprob: -11.159049987792969
    7. '           ' → logprob: -11.784049987792969
    8. ' continue' → logprob: -12.409049987792969
    9. 'continue' → logprob: -12.659049987792969
    10. '       ' → logprob: -13.159049987792969

Token 401: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012808750383555889
    2. ' continue' → logprob: -4.387808799743652
    3. 'continue' → logprob: -9.012808799743652
    4. '           ' → logprob: -9.762808799743652
    5. '	           ' → logprob: -9.762808799743652
    6. '			' → logprob: -11.137808799743652
    7. '	continue' → logprob: -11.637808799743652
    8. '              ' → logprob: -11.637808799743652
    9. ' continues' → logprob: -12.512808799743652
    10. ':' → logprob: -12.512808799743652

Token 402: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.034062646329402924
    2. '               ' → logprob: -3.784062623977661
    3. 'continue' (adapté à ' continue') → logprob: -4.53406286239624
    4. '           ' → logprob: -11.659062385559082
    5. '	continue' → logprob: -11.784062385559082
    6. '_continue' → logprob: -13.034062385559082
    7. '                   ' → logprob: -13.534062385559082
    8. ' continues' → logprob: -14.909062385559082
    9. ' continu' → logprob: -15.159062385559082
    10. ' continuing' → logprob: -15.159062385559082

Token 403: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5404316186904907
    2. '            
' → logprob: -0.9154316186904907
    3. '<|end|>' → logprob: -4.790431499481201
    4. ' 
' → logprob: -5.665431499481201
    5. '  
' → logprob: -6.040431499481201
    6. '           
' → logprob: -6.790431499481201
    7. '
' → logprob: -7.665431499481201
    8. '            ' → logprob: -8.29043197631836
    9. '            
            
' → logprob: -8.54043197631836
    10. '          ' → logprob: -8.66543197631836

Token 404: ' ?????' (ID: 149222)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5964816212654114
    2. '            
' → logprob: -0.9714816212654114
    3. ' 
' → logprob: -3.5964815616607666
    4. '
' → logprob: -3.8464815616607666
    5. '  
' → logprob: -5.096481800079346
    6. '           
' → logprob: -5.596481800079346
    7. '            ' → logprob: -6.221481800079346
    8. '   
' → logprob: -6.471481800079346
    9. 'b' → logprob: -6.721481800079346
    10. '                
' → logprob: -6.846481800079346

Token 405: '¨' (ID: 64259)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: '?' (ID: 30)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.32915055751800537
    2. '           ' → logprob: -1.7041505575180054
    3. '
' → logprob: -3.079150676727295
    4. '<|end|>' → logprob: -3.079150676727295
    5. ' 
' → logprob: -6.454150676727295
    6. '  
' → logprob: -6.579150676727295
    7. '<|end|>' → logprob: -7.329150676727295
    8. '           
' → logprob: -7.329150676727295
    9. '    
' → logprob: -7.579150676727295
    10. '            
            
' → logprob: -7.829150676727295

Token 408: 'for' (ID: 1938)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.799107551574707
    2. '           ' → logprob: -1.049107551574707
    3. '<|end|>' → logprob: -1.799107551574707
    4. '
' → logprob: -3.549107551574707
    5. '<|end|>' → logprob: -6.424107551574707
    6. ' 
' → logprob: -6.924107551574707
    7. '  
' → logprob: -7.174107551574707
    8. '           
' → logprob: -7.549107551574707
    9. '            
            
' → logprob: -8.049107551574707
    10. '                
' → logprob: -8.174107551574707

Token 409: '????????' (ID: 85218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 410: '????????' (ID: 85218)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.525260865688324
    2. '
' → logprob: -1.4002609252929688
    3. '           ' → logprob: -2.2752609252929688
    4. '<|end|>' → logprob: -3.0252609252929688
    5. '  
' → logprob: -5.900260925292969
    6. '\n' → logprob: -6.400260925292969
    7. ' 
' → logprob: -6.400260925292969
    8. '    
' → logprob: -6.650260925292969
    9. '<|end|>' → logprob: -7.150260925292969
    10. '           
' → logprob: -7.525260925292969

Token 411: '?' (ID: 30)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.2946012318134308
    2. '
' → logprob: -1.9196012020111084
    3. '           ' → logprob: -2.4196012020111084
    4. ' 
' → logprob: -4.6696014404296875
    5. '  
' → logprob: -5.5446014404296875
    6. '<|end|>' → logprob: -6.1696014404296875
    7. '   
' → logprob: -7.0446014404296875
    8. '    
' → logprob: -7.0446014404296875
    9. '           
' → logprob: -7.1696014404296875
    10. '        
' → logprob: -7.9196014404296875

Token 412: '£' (ID: 18943)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.27150386571884155
    2. '           ' → logprob: -2.0215039253234863
    3. '
' → logprob: -2.3965039253234863
    4. '  
' → logprob: -5.396503925323486
    5. ' 
' → logprob: -5.521503925323486
    6. '    
' → logprob: -6.521503925323486
    7. '           
' → logprob: -6.771503925323486
    8. '   
' → logprob: -7.146503925323486
    9. '        
' → logprob: -7.521503925323486
    10. '                
' → logprob: -7.896503925323486

Token 413: '????' (ID: 25883)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.20258046686649323
    2. '           ' → logprob: -2.452580451965332
    3. '
' → logprob: -2.702580451965332
    4. ' 
' → logprob: -4.077580451965332
    5. '  
' → logprob: -5.577580451965332
    6. '<|end|>' → logprob: -5.577580451965332
    7. '           
' → logprob: -6.327580451965332
    8. '   
' → logprob: -6.827580451965332
    9. '    
' → logprob: -7.077580451965332
    10. '            
            
' → logprob: -7.577580451965332

Token 414: '?' (ID: 30)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.28397369384765625
    2. '           ' → logprob: -1.9089736938476562
    3. '
' → logprob: -2.7839736938476562
    4. '<|end|>' → logprob: -4.408973693847656
    5. ' 
' → logprob: -4.533973693847656
    6. '  
' → logprob: -5.033973693847656
    7. '    
' → logprob: -6.283973693847656
    8. '           
' → logprob: -6.783973693847656
    9. '   
' → logprob: -7.033973693847656
    10. '                
' → logprob: -7.533973693847656

Token 415: '°' (ID: 6793)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.16282665729522705
    2. '
' → logprob: -2.6628265380859375
    3. '           ' → logprob: -2.7878265380859375
    4. '  
' → logprob: -4.9128265380859375
    5. ' 
' → logprob: -5.4128265380859375
    6. '           
' → logprob: -6.0378265380859375
    7. '<|end|>' → logprob: -6.6628265380859375
    8. '    
' → logprob: -6.9128265380859375
    9. '   
' → logprob: -7.4128265380859375
    10. '        
' → logprob: -7.7878265380859375

Token 416: '????????' (ID: 85218)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.3771214485168457
    2. '           ' → logprob: -1.2521214485168457
    3. '
' → logprob: -4.252121448516846
    4. '<|end|>' → logprob: -5.252121448516846
    5. '  
' → logprob: -5.752121448516846
    6. ' 
' → logprob: -6.377121448516846
    7. '           
' → logprob: -6.752121448516846
    8. '    
' → logprob: -7.627121448516846
    9. '            
            
' → logprob: -7.752121448516846
    10. '                
' → logprob: -7.877121448516846

Token 417: '???' (ID: 33110)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.23998528718948364
    2. '
' → logprob: -2.239985227584839
    3. '           ' → logprob: -2.489985227584839
    4. ' 
' → logprob: -4.489985466003418
    5. '  
' → logprob: -5.239985466003418
    6. '           
' → logprob: -6.114985466003418
    7. '<|end|>' → logprob: -6.614985466003418
    8. '   
' → logprob: -6.989985466003418
    9. '    
' → logprob: -7.114985466003418
    10. '                
' → logprob: -7.739985466003418

Token 418: '¢' (ID: 61242)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.41895854473114014
    2. '           ' → logprob: -1.4189585447311401
    3. '
' → logprob: -2.4189586639404297
    4. ' 
' → logprob: -5.79395866394043
    5. '           
' → logprob: -5.91895866394043
    6. '  
' → logprob: -6.54395866394043
    7. '    
' → logprob: -7.29395866394043
    8. '        
' → logprob: -7.66895866394043
    9. '                
' → logprob: -7.66895866394043
    10. '   
' → logprob: -7.79395866394043

Token 419: 'b' (ID: 65)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.29115912318229675
    2. '           ' → logprob: -1.7911591529846191
    3. '
' → logprob: -2.541159152984619
    4. '           
' → logprob: -6.541159152984619
    5. '  
' → logprob: -6.666159152984619
    6. ' 
' → logprob: -7.041159152984619
    7. '                
' → logprob: -7.291159152984619
    8. '    
' → logprob: -7.416159152984619
    9. '            
            
' → logprob: -7.666159152984619
    10. '        
' → logprob: -8.041158676147461

Token 420: '????????' (ID: 85218)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034318964928388596
    2. '            
' → logprob: -4.034318923950195
    3. '<|end|>' → logprob: -5.034318923950195
    4. '               ' → logprob: -5.409318923950195
    5. '
' → logprob: -6.784318923950195
    6. '       ' → logprob: -7.284318923950195
    7. ' continue' → logprob: -7.659318923950195
    8. 'continue' → logprob: -8.034318923950195
    9. '          ' → logprob: -8.159318923950195
    10. '		' → logprob: -8.159318923950195

Token 421: '?

' (ID: 1715)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011499641463160515
    2. '            
' → logprob: -4.511499404907227
    3. '          ' → logprob: -9.261499404907227
    4. '<|end|>' → logprob: -9.261499404907227
    5. '            
            
' → logprob: -10.511499404907227
    6. '            ' → logprob: -10.511499404907227
    7. '       ' → logprob: -10.636499404907227
    8. '
' → logprob: -10.636499404907227
    9. '               ' → logprob: -10.761499404907227
    10. '           
' → logprob: -10.886499404907227

Token 422: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.173002690076828
    2. '            
' → logprob: -1.9230027198791504
    3. '
' → logprob: -4.54800271987915
    4. '           
' → logprob: -7.42300271987915
    5. '          ' → logprob: -8.423002243041992
    6. 'key' → logprob: -8.548002243041992
    7. 'table' → logprob: -8.548002243041992
    8. '                
' → logprob: -8.673002243041992
    9. '        
' → logprob: -8.923002243041992
    10. '  
' → logprob: -9.298002243041992

Token 423: ' #' (ID: 1069)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.4257095456123352
    2. '           ' → logprob: -1.1757094860076904
    3. ' table' → logprob: -3.4257094860076904
    4. '
' → logprob: -5.6757097244262695
    5. '            
' → logprob: -6.6757097244262695
    6. '   ' → logprob: -7.8007097244262695
    7. '       ' → logprob: -7.9257097244262695
    8. '	table' → logprob: -10.92570972442627
    9. '        
' → logprob: -11.05070972442627
    10. ' ' → logprob: -11.42570972442627

Token 424: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.007451510522514582
    2. '           ' → logprob: -5.38245153427124
    3. ' table' → logprob: -6.63245153427124
    4. 'state' → logprob: -7.25745153427124
    5. 'new' → logprob: -7.63245153427124
    6. 'next' → logprob: -9.007451057434082
    7. 'if' → logprob: -9.757451057434082
    8. 'prev' → logprob: -10.382451057434082
    9. 'queue' → logprob: -10.507451057434082
    10. '   ' → logprob: -10.757451057434082

Token 425: '????????' (ID: 85218)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.375
    3. 'key' → logprob: -17.875
    4. '[k' → logprob: -20.0
    5. ' [' → logprob: -20.25
    6. '           ' → logprob: -21.0
    7. ' key' → logprob: -22.375
    8. '[token' → logprob: -22.375
    9. '   ' → logprob: -22.75
    10. '               ' → logprob: -23.0

Token 426: '¨' (ID: 64259)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0025225074496120214
    2. 'key' → logprob: -6.0025224685668945
    3. '           ' → logprob: -10.502522468566895
    4. ' key' → logprob: -10.877522468566895
    5. 'table' → logprob: -16.25252342224121
    6. '[' → logprob: -16.87752342224121
    7. '               ' → logprob: -17.00252342224121
    8. '            
' → logprob: -17.00252342224121
    9. '
' → logprob: -17.37752342224121
    10. '	key' → logprob: -17.50252342224121

Token 427: '????????' (ID: 85218)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.2582770586013794
    2. 'key' → logprob: -1.5082770586013794
    3. '           ' → logprob: -5.88327693939209
    4. 'True' → logprob: -6.13327693939209
    5. ' table' → logprob: -7.50827693939209
    6. ' key' → logprob: -7.50827693939209
    7. '[key' → logprob: -8.63327693939209
    8. '               ' → logprob: -9.75827693939209
    9. ' True' → logprob: -10.38327693939209
    10. '
' → logprob: -12.88327693939209

Token 428: '???' (ID: 33110)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1767445057630539
    2. '[key' → logprob: -1.9267444610595703
    3. 'table' → logprob: -4.42674446105957
    4. ' table' → logprob: -6.05174446105957
    5. ' key' → logprob: -6.80174446105957
    6. 'key' → logprob: -7.67674446105957
    7. '[' → logprob: -8.17674446105957
    8. '       ' → logprob: -8.92674446105957
    9. '   ' → logprob: -10.05174446105957
    10. '               ' → logprob: -11.05174446105957

Token 429: '´' (ID: 14737)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.0606609545648098
    2. '           ' → logprob: -3.0606608390808105
    3. ' table' → logprob: -4.4356608390808105
    4. '       ' → logprob: -9.560661315917969
    5. '   ' → logprob: -9.810661315917969
    6. '[' → logprob: -12.185661315917969
    7. 'key' → logprob: -12.310661315917969
    8. '               ' → logprob: -12.435661315917969
    9. '	table' → logprob: -12.560661315917969
    10. ' ' → logprob: -12.810661315917969

Token 430: '????????' (ID: 85218)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.04872486740350723
    2. 'key' → logprob: -3.673724889755249
    3. '           ' → logprob: -4.04872465133667
    4. 'table' → logprob: -5.79872465133667
    5. ' key' → logprob: -6.79872465133667
    6. '   ' → logprob: -8.423725128173828
    7. '[' → logprob: -8.798725128173828
    8. ' table' → logprob: -9.673725128173828
    9. '
' → logprob: -9.923725128173828
    10. '       ' → logprob: -10.048725128173828

Token 431: '°' (ID: 6793)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.429888516664505
    2. 'table' → logprob: -1.1798884868621826
    3. ' table' → logprob: -3.1798884868621826
    4. '       ' → logprob: -7.929888725280762
    5. '   ' → logprob: -9.429888725280762
    6. '               ' → logprob: -10.804888725280762
    7. '
' → logprob: -10.929888725280762
    8. '[' → logprob: -11.179888725280762
    9. '[key' → logprob: -12.054888725280762
    10. '	table' → logprob: -12.304888725280762

Token 432: '????' (ID: 25883)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12391375005245209
    2. 'table' → logprob: -2.3739137649536133
    3. ' table' → logprob: -3.9989137649536133
    4. '       ' → logprob: -5.873913764953613
    5. '   ' → logprob: -6.123913764953613
    6. '[' → logprob: -10.998913764953613
    7. '[key' → logprob: -11.123913764953613
    8. '               ' → logprob: -11.373913764953613
    9. '	table' → logprob: -11.373913764953613
    10. ' key' → logprob: -11.623913764953613

Token 433: '???' (ID: 33110)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019612886011600494
    2. 'table' → logprob: -4.269612789154053
    3. ' table' → logprob: -5.269612789154053
    4. '       ' → logprob: -8.394613265991211
    5. '   ' → logprob: -10.519613265991211
    6. '               ' → logprob: -10.769613265991211
    7. ' key' → logprob: -12.269613265991211
    8. '[key' → logprob: -12.769613265991211
    9. 'key' → logprob: -13.644613265991211
    10. '[' → logprob: -13.644613265991211

Token 434: '±' (ID: 32438)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.6956002712249756
    2. '           ' → logprob: -0.9456002712249756
    3. ' table' → logprob: -2.1956002712249756
    4. '       ' → logprob: -6.820600509643555
    5. '   ' → logprob: -8.445600509643555
    6. '               ' → logprob: -8.820600509643555
    7. '	table' → logprob: -11.445600509643555
    8. ' ' → logprob: -11.945600509643555
    9. 'key' → logprob: -13.070600509643555
    10. '                   ' → logprob: -13.195600509643555

Token 435: '???' (ID: 33110)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.12386278063058853
    2. 'key' → logprob: -2.3738627433776855
    3. ' key' → logprob: -4.4988627433776855
    4. '           ' → logprob: -4.4988627433776855
    5. '[' → logprob: -7.7488627433776855
    6. '               ' → logprob: -8.123863220214844
    7. '   ' → logprob: -9.123863220214844
    8. '       ' → logprob: -9.373863220214844
    9. '                   ' → logprob: -10.498863220214844
    10. 'table' → logprob: -10.498863220214844

Token 436: '¢' (ID: 61242)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.33447185158729553
    2. 'key' → logprob: -1.3344718217849731
    3. ' key' → logprob: -4.209471702575684
    4. '           ' → logprob: -5.209471702575684
    5. '[' → logprob: -8.459471702575684
    6. '               ' → logprob: -8.709471702575684
    7. '       ' → logprob: -9.584471702575684
    8. 'table' → logprob: -9.584471702575684
    9. '   ' → logprob: -9.709471702575684
    10. '][' → logprob: -11.084471702575684

Token 437: 'c' (ID: 66)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010932860895991325
    2. 'table' → logprob: -4.760932922363281
    3. ' table' → logprob: -6.135932922363281
    4. '       ' → logprob: -9.135932922363281
    5. '   ' → logprob: -10.385932922363281
    6. '               ' → logprob: -12.135932922363281
    7. '[key' → logprob: -13.385932922363281
    8. '[' → logprob: -13.385932922363281
    9. '
' → logprob: -13.510932922363281
    10. ' key' → logprob: -14.260932922363281

Token 438: '????????' (ID: 85218)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[key' → logprob: -4.263011578586884e-05
    2. 'key' → logprob: -10.375042915344238
    3. '           ' → logprob: -12.125042915344238
    4. '[' → logprob: -13.375042915344238
    5. ' key' → logprob: -13.500042915344238
    6. ' [' → logprob: -13.875042915344238
    7. '[c' → logprob: -14.125042915344238
    8. '               ' → logprob: -14.875042915344238
    9. '[b' → logprob: -15.500042915344238
    10. '
' → logprob: -16.125041961669922

Token 439: '?
' (ID: 3901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030490318313241005
    2. 'table' → logprob: -3.9054903984069824
    3. ' table' → logprob: -4.780490398406982
    4. '       ' → logprob: -6.905490398406982
    5. '   ' → logprob: -8.530489921569824
    6. ' key' → logprob: -9.030489921569824
    7. '               ' → logprob: -10.030489921569824
    8. '[key' → logprob: -10.280489921569824
    9. 'key' → logprob: -10.530489921569824
    10. ' ' → logprob: -10.780489921569824

Token 440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008640097454190254
    2. 'table' → logprob: -4.883640289306641
    3. ' table' → logprob: -7.758640289306641
    4. '       ' → logprob: -8.00864028930664
    5. 'c' → logprob: -9.13364028930664
    6. ' c' → logprob: -9.38364028930664
    7. '   ' → logprob: -9.75864028930664
    8. '
' → logprob: -11.50864028930664
    9. '            
' → logprob: -12.75864028930664
    10. '          ' → logprob: -12.88364028930664

Token 441: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7167056202888489
    2. 'table' → logprob: -0.7167056202888489
    3. ' table' → logprob: -3.966705560684204
    4. 'c' → logprob: -5.716705799102783
    5. ' c' → logprob: -7.091705799102783
    6. '   ' → logprob: -8.716705322265625
    7. '       ' → logprob: -10.841705322265625
    8. ' ' → logprob: -11.466705322265625
    9. '
' → logprob: -11.716705322265625
    10. '  ' → logprob: -12.341705322265625

Token 442: ' b' (ID: 287)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.025339556857943535
    2. '           ' → logprob: -4.150339603424072
    3. ' table' → logprob: -5.275339603424072
    4. 'c' → logprob: -5.525339603424072
    5. ' c' → logprob: -9.025339126586914
    6. '   ' → logprob: -10.650339126586914
    7. '
' → logprob: -12.150339126586914
    8. 'state' → logprob: -12.525339126586914
    9. ' ' → logprob: -13.025339126586914
    10. '            
' → logprob: -13.650339126586914

Token 443: '????' (ID: 25883)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.463369607925415
    2. '[key' → logprob: -2.338369607925415
    3. ' =' → logprob: -2.338369607925415
    4. '[a' → logprob: -2.338369607925415
    5. '[i' → logprob: -2.588369607925415
    6. 'prev' → logprob: -3.088369607925415
    7. '[' → logprob: -3.213369607925415
    8. ')' → logprob: -3.213369607925415
    9. ' key' → logprob: -3.463369607925415
    10. ']' → logprob: -3.713369607925415

Token 444: '?' (ID: 30)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.5514858961105347
    2. '[key' → logprob: -1.8014858961105347
    3. '           ' → logprob: -2.676486015319824
    4. ' =' → logprob: -2.801486015319824
    5. '            
' → logprob: -2.801486015319824
    6. 'c' → logprob: -3.051486015319824
    7. '[' → logprob: -3.301486015319824
    8. '[c' → logprob: -3.426486015319824
    9. '
' → logprob: -3.551486015319824
    10. ')' → logprob: -3.676486015319824

Token 445: '°' (ID: 6793)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.2063675969839096
    2. 'key' → logprob: -2.9563674926757812
    3. 'c' → logprob: -3.9563674926757812
    4. '           ' → logprob: -3.9563674926757812
    5. '[' → logprob: -4.456367492675781
    6. 'a' → logprob: -4.706367492675781
    7. '            
' → logprob: -4.831367492675781
    8. '[key' → logprob: -5.081367492675781
    9. ' table' → logprob: -5.206367492675781
    10. ' =' → logprob: -5.456367492675781

Token 446: '????????' (ID: 85218)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.19357828795909882
    2. 'c' → logprob: -3.5685782432556152
    3. 'queue' → logprob: -3.6935782432556152
    4. 'key' → logprob: -3.8185782432556152
    5. 'tuple' → logprob: -4.068578243255615
    6. '
' → logprob: -4.193578243255615
    7. 'able' → logprob: -4.943578243255615
    8. ' =' → logprob: -5.193578243255615
    9. '           ' → logprob: -5.318578243255615
    10. '            
' → logprob: -5.443578243255615

Token 447: '???' (ID: 33110)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.0008495326619595289
    2. 'key' → logprob: -8.000849723815918
    3. '           ' → logprob: -8.500849723815918
    4. ' table' → logprob: -9.250849723815918
    5. '
' → logprob: -9.750849723815918
    6. 'able' → logprob: -10.125849723815918
    7. '[key' → logprob: -10.250849723815918
    8. '            
' → logprob: -10.750849723815918
    9. 'queue' → logprob: -11.875849723815918
    10. '[' → logprob: -11.875849723815918

Token 448: '¢' (ID: 61242)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.1315407007932663
    2. 'True' → logprob: -3.0065407752990723
    3. 'key' → logprob: -3.2565407752990723
    4. 'c' → logprob: -4.256540775299072
    5. '
' → logprob: -5.631540775299072
    6. '           ' → logprob: -5.756540775299072
    7. ' table' → logprob: -5.881540775299072
    8. ' True' → logprob: -6.381540775299072
    9. 'queue' → logprob: -6.506540775299072
    10. ' =' → logprob: -6.881540775299072

Token 449: '????' (ID: 25883)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.0033197111915796995
    2. ' table' → logprob: -6.12831974029541
    3. '           ' → logprob: -7.00331974029541
    4. 'c' → logprob: -9.25331974029541
    5. '
' → logprob: -9.75331974029541
    6. 'queue' → logprob: -10.00331974029541
    7. '            
' → logprob: -11.62831974029541
    8. ' c' → logprob: -12.50331974029541
    9. 'q' → logprob: -12.62831974029541
    10. '   ' → logprob: -13.37831974029541

Token 450: '?' (ID: 30)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.1061774417757988
    2. '           ' → logprob: -2.60617733001709
    3. 'able' → logprob: -3.98117733001709
    4. ' table' → logprob: -4.98117733001709
    5. '            
' → logprob: -8.35617733001709
    6. '
' → logprob: -8.60617733001709
    7. 'queue' → logprob: -8.60617733001709
    8. 'key' → logprob: -9.60617733001709
    9. 'c' → logprob: -9.60617733001709
    10. '          ' → logprob: -9.73117733001709

Token 451: '¨' (ID: 64259)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.109649658203125
    2. 'table' → logprob: -1.109649658203125
    3. 'able' → logprob: -1.734649658203125
    4. 'key' → logprob: -3.734649658203125
    5. '            
' → logprob: -3.859649658203125
    6. '
' → logprob: -3.984649658203125
    7. 'c' → logprob: -4.109649658203125
    8. 'State' → logprob: -4.734649658203125
    9. '[' → logprob: -4.859649658203125
    10. 'a' → logprob: -4.984649658203125

Token 452: '????????' (ID: 85218)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.1776278167963028
    2. '           ' → logprob: -1.9276278018951416
    3. ' table' → logprob: -4.552628040313721
    4. '
' → logprob: -7.052628040313721
    5. 'key' → logprob: -7.052628040313721
    6. 'c' → logprob: -7.302628040313721
    7. '               ' → logprob: -7.302628040313721
    8. 'queue' → logprob: -7.302628040313721
    9. '            
' → logprob: -7.427628040313721
    10. '[' → logprob: -7.927628040313721

Token 453: '????' (ID: 25883)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.7453469634056091
    2. '           ' → logprob: -0.9953469634056091
    3. ' table' → logprob: -1.870347023010254
    4. '       ' → logprob: -6.870347023010254
    5. '   ' → logprob: -7.870347023010254
    6. '            
' → logprob: -9.870347023010254
    7. '	table' → logprob: -9.995347023010254
    8. '[' → logprob: -10.245347023010254
    9. 'queue' → logprob: -10.620347023010254
    10. ' ' → logprob: -10.620347023010254

Token 454: 'i' (ID: 72)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5838328003883362
    2. 'table' → logprob: -1.2088327407836914
    3. ' table' → logprob: -1.9588327407836914
    4. '       ' → logprob: -6.333832740783691
    5. '   ' → logprob: -7.458832740783691
    6. '            
' → logprob: -10.083832740783691
    7. ' ' → logprob: -10.208832740783691
    8. '	table' → logprob: -10.208832740783691
    9. '
' → logprob: -10.333832740783691
    10. '          ' → logprob: -10.708832740783691

Token 455: '????????' (ID: 85218)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8942313194274902
    2. ' =' → logprob: -1.3942313194274902
    3. '=' → logprob: -2.5192313194274902
    4. '            
' → logprob: -3.5192313194274902
    5. ']' → logprob: -3.7692313194274902
    6. '
' → logprob: -3.8942313194274902
    7. 'table' → logprob: -4.01923131942749
    8. 'c' → logprob: -4.01923131942749
    9. '[' → logprob: -4.14423131942749
    10. '       ' → logprob: -4.26923131942749

Token 456: '????' (ID: 25883)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.8056308627128601
    2. 'c' → logprob: -1.0556309223175049
    3. '           ' → logprob: -1.9306309223175049
    4. ' table' → logprob: -3.805630922317505
    5. ' =' → logprob: -4.305630683898926
    6. '=' → logprob: -4.680630683898926
    7. '
' → logprob: -5.805630683898926
    8. ' c' → logprob: -5.805630683898926
    9. '               ' → logprob: -6.180630683898926
    10. '            
' → logprob: -6.430630683898926

Token 457: '0' (ID: 15)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.4399498403072357
    2. '           ' → logprob: -1.939949870109558
    3. 'c' → logprob: -2.0649497509002686
    4. ' =' → logprob: -3.9399497509002686
    5. ' table' → logprob: -4.189949989318848
    6. '
' → logprob: -4.439949989318848
    7. '            
' → logprob: -5.064949989318848
    8. '=' → logprob: -5.189949989318848
    9. 'key' → logprob: -5.314949989318848
    10. ' c' → logprob: -5.564949989318848

Token 458: '????????' (ID: 85218)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3740198016166687
    2. ' =' → logprob: -1.3740198612213135
    3. '=' → logprob: -3.9990198612213135
    4. '            
' → logprob: -4.499019622802734
    5. ']' → logprob: -5.499019622802734
    6. '
' → logprob: -5.499019622802734
    7. '[' → logprob: -6.124019622802734
    8. ' ' → logprob: -6.624019622802734
    9. '               ' → logprob: -6.749019622802734
    10. '            ' → logprob: -6.874019622802734

Token 459: '????' (ID: 25883)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33879444003105164
    2. 'c' → logprob: -1.463794469833374
    3. ' c' → logprob: -3.338794469833374
    4. '
' → logprob: -4.713794231414795
    5. '            
' → logprob: -5.588794231414795
    6. 'table' → logprob: -5.713794231414795
    7. '            ' → logprob: -6.463794231414795
    8. ' table' → logprob: -7.088794231414795
    9. '   ' → logprob: -8.463794708251953
    10. 'state' → logprob: -8.588794708251953

Token 460: 'a' (ID: 64)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4727654457092285
    2. 'table' → logprob: -1.2227654457092285
    3. ' table' → logprob: -2.5977654457092285
    4. 'c' → logprob: -5.4727654457092285
    5. ' c' → logprob: -6.2227654457092285
    6. '   ' → logprob: -7.7227654457092285
    7. '
' → logprob: -8.09776496887207
    8. '            
' → logprob: -8.09776496887207
    9. ' ' → logprob: -8.59776496887207
    10. '       ' → logprob: -9.09776496887207

Token 461: '???' (ID: 33110)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.5085818767547607
    2. 'c' → logprob: -1.6335818767547607
    3. ' =' → logprob: -1.7585818767547607
    4. 'space' → logprob: -1.8835818767547607
    5. '=' → logprob: -2.3835818767547607
    6. '.put' → logprob: -4.00858211517334
    7. '.prev' → logprob: -4.13358211517334
    8. '
' → logprob: -4.38358211517334
    9. 'table' → logprob: -4.75858211517334
    10. '_space' → logprob: -4.88358211517334

Token 462: '1' (ID: 16)
  Prédit: 'State'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'State' → logprob: -0.8576824069023132
    2. 'prev' → logprob: -1.607682466506958
    3. 'c' → logprob: -2.607682466506958
    4. ' =' → logprob: -2.732682466506958
    5. '=' → logprob: -3.232682466506958
    6. 'space' → logprob: -3.607682466506958
    7. ' State' → logprob: -3.982682466506958
    8. '       ' → logprob: -4.857682228088379
    9. ' space' → logprob: -4.982682228088379
    10. '
' → logprob: -4.982682228088379

Token 463: '????????' (ID: 85218)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5223571062088013
    2. ' =' → logprob: -1.7723571062088013
    3. '=' → logprob: -2.2723569869995117
    4. 'c' → logprob: -2.5223569869995117
    5. ' c' → logprob: -4.397356986999512
    6. '            
' → logprob: -5.147356986999512
    7. '          ' → logprob: -5.397356986999512
    8. '               ' → logprob: -5.522356986999512
    9. '       ' → logprob: -5.522356986999512
    10. '
' → logprob: -5.897356986999512

Token 464: '??' (ID: 6961)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12033481150865555
    2. '           ' → logprob: -2.4953348636627197
    3. ' c' → logprob: -4.120334625244141
    4. ' =' → logprob: -5.495334625244141
    5. '=' → logprob: -5.745334625244141
    6. '
' → logprob: -6.745334625244141
    7. '            
' → logprob: -6.870334625244141
    8. '               ' → logprob: -7.245334625244141
    9. '   ' → logprob: -7.620334625244141
    10. '       ' → logprob: -7.995334625244141

Token 465: '±' (ID: 32438)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06378777325153351
    2. '           ' → logprob: -3.1887876987457275
    3. ' c' → logprob: -4.063787937164307
    4. '
' → logprob: -7.063787937164307
    5. '            
' → logprob: -7.563787937164307
    6. ' =' → logprob: -7.813787937164307
    7. '=' → logprob: -7.938787937164307
    8. '   ' → logprob: -8.813787460327148
    9. '            ' → logprob: -8.938787460327148
    10. ' ' → logprob: -9.063787460327148

Token 466: '???' (ID: 33110)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4050555229187012
    2. ' =' → logprob: -1.5300555229187012
    3. '=' → logprob: -1.6550555229187012
    4. 'state' → logprob: -2.280055522918701
    5. 'c' → logprob: -2.905055522918701
    6. '            ' → logprob: -3.530055522918701
    7. '          ' → logprob: -3.780055522918701
    8. '            
' → logprob: -4.280055522918701
    9. '         ' → logprob: -4.405055522918701
    10. '        ' → logprob: -4.655055522918701

Token 467: '¢' (ID: 61242)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9807104468345642
    2. 'state' → logprob: -1.855710506439209
    3. 'State' → logprob: -2.230710506439209
    4. '=' → logprob: -2.605710506439209
    5. '           ' → logprob: -2.855710506439209
    6. ' =' → logprob: -3.230710506439209
    7. '         ' → logprob: -3.480710506439209
    8. '          ' → logprob: -4.105710506439209
    9. ')' → logprob: -4.230710506439209
    10. '            
' → logprob: -4.355710506439209

Token 468: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.656865119934082
    2. 'c' → logprob: -1.281865119934082
    3. ' c' → logprob: -2.031865119934082
    4. '
' → logprob: -3.281865119934082
    5. 'table' → logprob: -4.156865119934082
    6. ' =' → logprob: -5.156865119934082
    7. ' table' → logprob: -5.281865119934082
    8. '=' → logprob: -6.156865119934082
    9. '            
' → logprob: -6.281865119934082
    10. '   ' → logprob: -7.531865119934082

Token 469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19262675940990448
    2. 'c' → logprob: -2.817626714706421
    3. 'table' → logprob: -2.942626714706421
    4. ' c' → logprob: -3.442626714706421
    5. ' table' → logprob: -3.567626714706421
    6. '   ' → logprob: -6.567626953125
    7. '            
' → logprob: -8.067626953125
    8. '       ' → logprob: -8.942626953125
    9. '
' → logprob: -8.942626953125
    10. ' ' → logprob: -9.192626953125

Token 470: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.7748966217041016
    2. ' c' → logprob: -1.0248966217041016
    3. '           ' → logprob: -1.7748966217041016
    4. 'table' → logprob: -5.774896621704102
    5. ' table' → logprob: -6.274896621704102
    6. '   ' → logprob: -6.274896621704102
    7. '
' → logprob: -6.774896621704102
    8. '            
' → logprob: -7.149896621704102
    9. ' q' → logprob: -7.649896621704102
    10. 'q' → logprob: -7.774896621704102

Token 471: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014465630054474
    2. '=' → logprob: -1.701446533203125
    3. ' ' → logprob: -10.826446533203125
    4. ' =
' → logprob: -13.576446533203125
    5. '=
' → logprob: -13.576446533203125
    6. 'state' → logprob: -13.826446533203125
    7. '=

' → logprob: -14.076446533203125
    8. 'State' → logprob: -14.076446533203125
    9. 't' → logprob: -14.201446533203125
    10. '.' → logprob: -14.201446533203125

Token 472: ' State' (ID: 5388)
  Prédit: 'State'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -0.0067312344908714294
    2. ' State' → logprob: -5.006731033325195
    3. '	State' → logprob: -11.381731033325195
    4. ' ' → logprob: -13.131731033325195
    5. '   ' → logprob: -13.506731033325195
    6. '(State' → logprob: -14.631731033325195
    7. 'state' → logprob: -15.381731033325195
    8. '  ' → logprob: -16.006731033325195
    9. '_State' → logprob: -16.131731033325195
    10. 'a' → logprob: -16.381731033325195

Token 473: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.1517960956552997e-05
    2. '(' → logprob: -11.875011444091797
    3. 'b' → logprob: -12.750011444091797
    4. '(
' → logprob: -13.500011444091797
    5. ' (' → logprob: -16.125011444091797
    6. '(
' → logprob: -17.625011444091797
    7. ' b' → logprob: -18.250011444091797
    8. '	b' → logprob: -18.625011444091797
    9. '           ' → logprob: -19.750011444091797
    10. ',b' → logprob: -20.125011444091797

Token 474: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.3878529667854309
    2. ',' → logprob: -1.1378529071807861
    3. ' ,' → logprob: -7.262853145599365
    4. 'i' → logprob: -8.512852668762207
    5. ' i' → logprob: -10.262852668762207
    6. '   ' → logprob: -11.387852668762207
    7. '           ' → logprob: -11.387852668762207
    8. ',
' → logprob: -12.262852668762207
    9. '       ' → logprob: -12.387852668762207
    10. ',b' → logprob: -12.762852668762207

Token 475: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.002327363472431898
    2. ',' → logprob: -6.1273274421691895
    3. ' ,' → logprob: -9.627326965332031
    4. 'a' → logprob: -9.752326965332031
    5. '   ' → logprob: -12.127326965332031
    6. ' a' → logprob: -12.127326965332031
    7. ',b' → logprob: -13.377326965332031
    8. '  ' → logprob: -13.752326965332031
    9. '       ' → logprob: -14.002326965332031
    10. '    ' → logprob: -14.002326965332031

Token 476: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7954958821064793e-05
    2. ')
' → logprob: -11.125018119812012
    3. ' )' → logprob: -12.750018119812012
    4. ')

' → logprob: -16.500017166137695
    5. '           ' → logprob: -16.625017166137695
    6. ')
' → logprob: -16.875017166137695
    7. '       ' → logprob: -17.875017166137695
    8. '),' → logprob: -18.500017166137695
    9. '   ' → logprob: -18.625017166137695
    10. ')#' → logprob: -18.625017166137695

Token 477: ' 

' (ID: 1202)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00640235748142004
    2. 'q' → logprob: -6.006402492523193
    3. ' q' → logprob: -6.381402492523193
    4. '            
' → logprob: -6.506402492523193
    5. '<|end|>' → logprob: -7.506402492523193
    6. '
' → logprob: -10.131402015686035
    7. ',q' → logprob: -11.131402015686035
    8. ')' → logprob: -11.131402015686035
    9. '          ' → logprob: -11.256402015686035
    10. '  
' → logprob: -11.256402015686035

Token 478: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03368246555328369
    2. '<|end|>' → logprob: -4.033682346343994
    3. 'q' → logprob: -5.283682346343994
    4. '            
' → logprob: -5.533682346343994
    5. ' q' → logprob: -5.908682346343994
    6. ')' → logprob: -6.908682346343994
    7. '<|end|>' → logprob: -7.533682346343994
    8. '	q' → logprob: -8.408682823181152
    9. ',q' → logprob: -8.533682823181152
    10. '	       ' → logprob: -8.533682823181152

Token 479: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.864014744758606
    2. '           ' → logprob: -1.114014744758606
    3. ' q' → logprob: -1.614014744758606
    4. 'if' → logprob: -3.6140146255493164
    5. ' if' → logprob: -4.239014625549316
    6. 'table' → logprob: -5.239014625549316
    7. '
' → logprob: -6.614014625549316
    8. '            
' → logprob: -6.739014625549316
    9. '   ' → logprob: -7.239014625549316
    10. '       ' → logprob: -7.489014625549316

Token 480: ' b' (ID: 287)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5940036177635193
    2. 'if' → logprob: -0.8440036177635193
    3. ' if' → logprob: -4.219003677368164
    4. '           ' → logprob: -6.469003677368164
    5. 'table' → logprob: -7.094003677368164
    6. ' q' → logprob: -7.344003677368164
    7. '            
' → logprob: -10.344003677368164
    8. '               ' → logprob: -10.719003677368164
    9. '   ' → logprob: -10.844003677368164
    10. '       ' → logprob: -11.094003677368164

Token 481: '???' (ID: 33110)
  Prédit: '_key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.4839491844177246
    2. 'key' → logprob: -1.3589491844177246
    3. ')' → logprob: -3.2339491844177246
    4. ' key' → logprob: -3.6089491844177246
    5. ' =' → logprob: -3.9839491844177246
    6. 'Key' → logprob: -4.983949184417725
    7. '            
' → logprob: -4.983949184417725
    8. ' in' → logprob: -5.608949184417725
    9. 'in' → logprob: -5.983949184417725
    10. ']' → logprob: -5.983949184417725

Token 482: 'end' (ID: 419)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.6071829795837402
    2. 'q' → logprob: -1.9821829795837402
    3. '.append' → logprob: -2.8571829795837402
    4. '
' → logprob: -2.8571829795837402
    5. '_key' → logprob: -3.2321829795837402
    6. '            
' → logprob: -3.4821829795837402
    7. ')' → logprob: -3.9821829795837402
    8. ' =' → logprob: -4.35718297958374
    9. '           ' → logprob: -4.48218297958374
    10. 'queue' → logprob: -4.48218297958374

Token 483: '????????' (ID: 85218)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3538246154785156
    2. ' ==' → logprob: -1.2288246154785156
    3. ')==' → logprob: -5.978824615478516
    4. ']==' → logprob: -6.853824615478516
    5. ')' → logprob: -7.353824615478516
    6. ':' → logprob: -8.603824615478516
    7. '===' → logprob: -8.728824615478516
    8. '=' → logprob: -9.103824615478516
    9. '[:]' → logprob: -9.103824615478516
    10. ' =' → logprob: -9.478824615478516

Token 484: '´' (ID: 14737)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2983403503894806
    2. ' ==' → logprob: -2.048340320587158
    3. ':' → logprob: -2.548340320587158
    4. 'if' → logprob: -3.673340320587158
    5. ' if' → logprob: -5.548340320587158
    6. '=' → logprob: -5.548340320587158
    7. '===' → logprob: -5.923340320587158
    8. ')' → logprob: -6.298340320587158
    9. '           ' → logprob: -6.423340320587158
    10. ' =' → logprob: -6.423340320587158

Token 485: '????????' (ID: 85218)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8028658032417297
    2. 'if' → logprob: -1.052865743637085
    3. '==' → logprob: -2.677865743637085
    4. ':' → logprob: -2.927865743637085
    5. ' ==' → logprob: -2.927865743637085
    6. ')' → logprob: -5.427865982055664
    7. ' ' → logprob: -5.677865982055664
    8. '):' → logprob: -5.677865982055664
    9. ' key' → logprob: -5.802865982055664
    10. '
' → logprob: -6.052865982055664

Token 486: '?' (ID: 30)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31557562947273254
    2. 'if' → logprob: -1.9405755996704102
    3. ' if' → logprob: -2.06557559967041
    4. '            
' → logprob: -9.69057559967041
    5. '          ' → logprob: -9.81557559967041
    6. '       ' → logprob: -10.44057559967041
    7. '               ' → logprob: -10.69057559967041
    8. '<|end|>' → logprob: -11.06557559967041
    9. '
' → logprob: -11.19057559967041
    10. 'If' → logprob: -11.69057559967041

Token 487: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6326994895935059
    2. ' if' → logprob: -0.8826994895935059
    3. '           ' → logprob: -3.257699489593506
    4. '<|end|>' → logprob: -5.007699489593506
    5. '
' → logprob: -6.132699489593506
    6. '    ' → logprob: -6.382699489593506
    7. '            
' → logprob: -6.882699489593506
    8. '<|end|>' → logprob: -7.007699489593506
    9. '       ' → logprob: -7.132699489593506
    10. '            ' → logprob: -7.382699489593506

Token 488: 'Ans' (ID: 36478)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2420637160539627
    2. '(c' → logprob: -2.2420637607574463
    3. 'if' → logprob: -3.9920637607574463
    4. 's' → logprob: -4.367063522338867
    5. '("' → logprob: -4.367063522338867
    6. '
' → logprob: -4.367063522338867
    7. '()' → logprob: -4.742063522338867
    8. '(
' → logprob: -4.867063522338867
    9. '?' → logprob: -5.242063522338867
    10. ' if' → logprob: -5.617063522338867

Token 489: '()' (ID: 416)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.821239173412323
    2. '(c' → logprob: -1.0712392330169678
    3. '           ' → logprob: -2.3212392330169678
    4. ' and' → logprob: -3.1962392330169678
    5. ' if' → logprob: -3.8212392330169678
    6. 'if' → logprob: -4.446238994598389
    7. ':
' → logprob: -4.446238994598389
    8. '):' → logprob: -4.446238994598389
    9. ')' → logprob: -4.946238994598389
    10. '(b' → logprob: -6.196238994598389

Token 490: '??' (ID: 6961)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9016220569610596
    2. '           ' → logprob: -1.4016220569610596
    3. ' and' → logprob: -2.1516220569610596
    4. ':' → logprob: -2.4016220569610596
    5. 'if' → logprob: -2.5266220569610596
    6. '<|end|>' → logprob: -4.2766218185424805
    7. ')' → logprob: -4.6516218185424805
    8. 'and' → logprob: -5.1516218185424805
    9. '       ' → logprob: -5.4016218185424805
    10. ':
' → logprob: -5.6516218185424805

Token 491: '§' (ID: 18596)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4502721130847931
    2. ' if' → logprob: -1.0752720832824707
    3. '           ' → logprob: -4.075272083282471
    4. '<|end|>' → logprob: -6.450272083282471
    5. '            ' → logprob: -7.700272083282471
    6. '
' → logprob: -8.075272560119629
    7. ')' → logprob: -8.200272560119629
    8. '            
' → logprob: -8.325272560119629
    9. '==' → logprob: -8.575272560119629
    10. '<|end|>' → logprob: -8.575272560119629

Token 492: '????????' (ID: 85218)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34184280037879944
    2. '           ' → logprob: -1.716842770576477
    3. 'if' → logprob: -2.2168428897857666
    4. '               ' → logprob: -8.716842651367188
    5. '            
' → logprob: -8.716842651367188
    6. '       ' → logprob: -8.841842651367188
    7. '<|end|>' → logprob: -8.841842651367188
    8. ' and' → logprob: -9.716842651367188
    9. '            ' → logprob: -9.966842651367188
    10. '<|end|>' → logprob: -10.341842651367188

Token 493: '???' (ID: 33110)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6820325255393982
    2. '           ' → logprob: -0.8070325255393982
    3. 'if' → logprob: -3.557032585144043
    4. '<|end|>' → logprob: -4.057032585144043
    5. '<|end|>' → logprob: -6.932032585144043
    6. '            
' → logprob: -8.182032585144043
    7. '               ' → logprob: -8.307032585144043
    8. '            ' → logprob: -8.932032585144043
    9. ' and' → logprob: -9.182032585144043
    10. ')' → logprob: -9.182032585144043

Token 494: '°' (ID: 6793)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21783041954040527
    2. ' if' → logprob: -1.9678304195404053
    3. 'if' → logprob: -3.4678304195404053
    4. '<|end|>' → logprob: -3.8428304195404053
    5. '
' → logprob: -6.592830657958984
    6. '<|end|>' → logprob: -7.342830657958984
    7. '            
' → logprob: -8.092830657958984
    8. '       ' → logprob: -8.592830657958984
    9. ')' → logprob: -8.717830657958984
    10. '               ' → logprob: -8.717830657958984

Token 495: '????' (ID: 25883)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3446379005908966
    2. '           ' → logprob: -2.094637870788574
    3. 'if' → logprob: -2.344637870788574
    4. ' and' → logprob: -3.594637870788574
    5. '<|end|>' → logprob: -3.844637870788574
    6. ':' → logprob: -4.969637870788574
    7. ')' → logprob: -5.469637870788574
    8. '       ' → logprob: -6.344637870788574
    9. '<|end|>' → logprob: -6.344637870788574
    10. ' ==' → logprob: -6.594637870788574

Token 496: '?' (ID: 30)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4979920983314514
    2. 'if' → logprob: -1.3729920387268066
    3. '           ' → logprob: -1.9979920387268066
    4. '               ' → logprob: -6.622992038726807
    5. '<|end|>' → logprob: -6.622992038726807
    6. '<|end|>' → logprob: -8.747992515563965
    7. '            ' → logprob: -9.122992515563965
    8. '==' → logprob: -9.872992515563965
    9. '
' → logprob: -9.997992515563965
    10. ' ' → logprob: -10.247992515563965

Token 497: '¨' (ID: 64259)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8118768334388733
    2. ' if' → logprob: -1.0618767738342285
    3. 'if' → logprob: -1.5618767738342285
    4. '       ' → logprob: -9.311877250671387
    5. '          ' → logprob: -9.311877250671387
    6. '            
' → logprob: -9.561877250671387
    7. '<|end|>' → logprob: -9.936877250671387
    8. '            ' → logprob: -10.936877250671387
    9. '               ' → logprob: -11.061877250671387
    10. '   ' → logprob: -11.061877250671387

Token 498: '???
' (ID: 136325)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.579982340335846
    2. 'if' → logprob: -1.4549822807312012
    3. '           ' → logprob: -1.5799822807312012
    4. '               ' → logprob: -8.82998275756836
    5. ' c' → logprob: -8.95498275756836
    6. '<|end|>' → logprob: -9.82998275756836
    7. '       ' → logprob: -9.95498275756836
    8. 'c' → logprob: -9.95498275756836
    9. '            
' → logprob: -10.07998275756836
    10. 'b' → logprob: -10.45498275756836

Token 499: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07831963151693344
    2. '<|end|>' → logprob: -2.828319549560547
    3. ' if' → logprob: -4.703319549560547
    4. '       ' → logprob: -6.203319549560547
    5. '<|end|>' → logprob: -6.328319549560547
    6. 'if' → logprob: -6.453319549560547
    7. '            
' → logprob: -7.203319549560547
    8. '
' → logprob: -7.578319549560547
    9. '   ' → logprob: -9.078319549560547
    10. '          ' → logprob: -9.203319549560547

Token 500: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31391477584838867
    2. ' if' → logprob: -1.5639147758483887
    3. '           ' → logprob: -2.8139147758483887
    4. '       ' → logprob: -9.438915252685547
    5. '   ' → logprob: -10.438915252685547
    6. '	if' → logprob: -11.188915252685547
    7. 'If' → logprob: -12.688915252685547
    8. '    ' → logprob: -13.563915252685547
    9. '            
' → logprob: -13.563915252685547
    10. '          ' → logprob: -13.688915252685547

Token 501: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2099518775939941
    2. ' c' → logprob: -1.3349518775939941
    3. ' b' → logprob: -1.4599518775939941
    4. 'c' → logprob: -1.5849518775939941
    5. ' key' → logprob: -7.459951877593994
    6. ' tuple' → logprob: -7.834951877593994
    7. 'tuple' → logprob: -8.334951400756836
    8. 'key' → logprob: -8.709951400756836
    9. ' ' → logprob: -10.959951400756836
    10. '   ' → logprob: -11.584951400756836

Token 502: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023263299837708473
    2. '==' → logprob: -3.7732632160186768
    3. '[:]' → logprob: -12.273262977600098
    4. '=' → logprob: -12.398262977600098
    5. ')==' → logprob: -12.773262977600098
    6. ' =' → logprob: -13.023262977600098
    7. ']==' → logprob: -13.273262977600098
    8. ' ' → logprob: -14.523262977600098
    9. ')' → logprob: -15.023262977600098
    10. '==
' → logprob: -15.148262977600098

Token 503: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0040785204619169235
    2. ' end' → logprob: -5.504078388214111
    3. '(end' → logprob: -17.254077911376953
    4. '[end' → logprob: -17.504077911376953
    5. '=end' → logprob: -17.879077911376953
    6. '	end' → logprob: -18.129077911376953
    7. '
' → logprob: -18.879077911376953
    8. ' ' → logprob: -19.879077911376953
    9. '   ' → logprob: -20.004077911376953
    10. '.end' → logprob: -21.379077911376953

Token 504: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005246210377663374
    2. ':
' → logprob: -5.255246162414551
    3. ' :' → logprob: -11.63024616241455
    4. '):' → logprob: -13.50524616241455
    5. ':
' → logprob: -14.13024616241455
    6. ':return' → logprob: -14.13024616241455
    7. ' :
' → logprob: -15.13024616241455
    8. ':

' → logprob: -15.75524616241455
    9. '):
' → logprob: -15.88024616241455
    10. ')' → logprob: -17.505247116088867

Token 505: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01008269190788269
    2. ' return' → logprob: -5.010082721710205
    3. 'return' → logprob: -6.135082721710205
    4. ':' → logprob: -7.260082721710205
    5. '           ' → logprob: -8.260082244873047
    6. ':
' → logprob: -9.385082244873047
    7. ':return' → logprob: -10.010082244873047
    8. 'print' → logprob: -10.510082244873047
    9. '              ' → logprob: -11.135082244873047
    10. '			' → logprob: -11.510082244873047

Token 506: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3447604179382324
    2. '               ' → logprob: -1.8447604179382324
    3. ' return' → logprob: -2.0947604179382324
    4. 'print' → logprob: -5.094760417938232
    5. 'def' → logprob: -5.969760417938232
    6. '           ' → logprob: -6.969760417938232
    7. '                   ' → logprob: -8.46976089477539
    8. '	return' → logprob: -8.84476089477539
    9. ' print' → logprob: -9.09476089477539
    10. '   ' → logprob: -9.46976089477539

Token 507: ' print' (ID: 2123)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009108719415962696
    2. ' c' → logprob: -4.759108543395996
    3. 'a' → logprob: -7.634108543395996
    4. 'b' → logprob: -12.759108543395996
    5. ' ' → logprob: -13.009108543395996
    6. ' a' → logprob: -13.009108543395996
    7. '   ' → logprob: -13.259108543395996
    8. '	c' → logprob: -14.509108543395996
    9. '(c' → logprob: -15.134108543395996
    10. '[c' → logprob: -16.009109497070312

Token 508: 'Ans' (ID: 36478)
  Prédit: 'Ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ans' → logprob: -2.1008713702030946e-06
    2. 'ans' → logprob: -13.750001907348633
    3. '_ans' → logprob: -15.000001907348633
    4. 'An' → logprob: -15.250001907348633
    5. 'Answer' → logprob: -16.000001907348633
    6. '_' → logprob: -16.375001907348633
    7. 'Answers' → logprob: -17.000001907348633
    8. ' Ans' → logprob: -17.000001907348633
    9. '
' → logprob: -17.250001907348633
    10. '(ans' → logprob: -17.375001907348633

Token 509: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.8908587662735954e-05
    2. '(' → logprob: -11.750019073486328
    3. '(a' → logprob: -11.750019073486328
    4. ' (' → logprob: -13.125019073486328
    5. 'c' → logprob: -15.125019073486328
    6. '((' → logprob: -15.625019073486328
    7. '(
' → logprob: -16.000019073486328
    8. '(b' → logprob: -16.750019073486328
    9. '           ' → logprob: -16.750019073486328
    10. '(s' → logprob: -17.125019073486328

Token 510: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015812745550647378
    2. ')
' → logprob: -8.875158309936523
    3. ' )' → logprob: -11.000158309936523
    4. ')

' → logprob: -13.750158309936523
    5. ')
' → logprob: -16.250158309936523
    6. ' ' → logprob: -16.500158309936523
    7. ')#' → logprob: -16.875158309936523
    8. ')c' → logprob: -17.375158309936523
    9. ' )
' → logprob: -17.625158309936523
    10. ')`' → logprob: -17.875158309936523

Token 511: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3819321095943451
    2. '<|end|>' → logprob: -1.2569321393966675
    3. '       ' → logprob: -4.506932258605957
    4. ')' → logprob: -5.381932258605957
    5. '   ' → logprob: -5.381932258605957
    6. '            
' → logprob: -5.756932258605957
    7. '<|end|>' → logprob: -6.506932258605957
    8. '          ' → logprob: -6.631932258605957
    9. '               ' → logprob: -6.756932258605957
    10. ' ' → logprob: -6.881932258605957

Token 512: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.12618811428546906
    2. '           ' → logprob: -2.376188039779663
    3. 'table' → logprob: -4.126188278198242
    4. ' q' → logprob: -4.876188278198242
    5. '            
' → logprob: -6.876188278198242
    6. '       ' → logprob: -7.876188278198242
    7. 'queue' → logprob: -8.501188278198242
    8. '
' → logprob: -9.751188278198242
    9. '   ' → logprob: -9.876188278198242
    10. '	q' → logprob: -10.376188278198242

Token 513: ' ?????' (ID: 149222)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1436491459608078
    2. 'table' → logprob: -2.143649101257324
    3. ' q' → logprob: -4.393649101257324
    4. '           ' → logprob: -6.143649101257324
    5. ' table' → logprob: -6.393649101257324
    6. '   ' → logprob: -8.018649101257324
    7. 'queue' → logprob: -10.018649101257324
    8. '       ' → logprob: -10.768649101257324
    9. '               ' → logprob: -12.518649101257324
    10. ' ' → logprob: -12.893649101257324

Token 514: '´' (ID: 14737)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.7492687106132507
    2. '.put' → logprob: -0.9992687106132507
    3. 'put' → logprob: -2.7492687702178955
    4. 'q' → logprob: -3.4992687702178955
    5. '
' → logprob: -3.9992687702178955
    6. 'c' → logprob: -4.874268531799316
    7. '.table' → logprob: -5.124268531799316
    8. ' table' → logprob: -5.624268531799316
    9. '   ' → logprob: -5.999268531799316
    10. '[key' → logprob: -5.999268531799316

Token 515: '????????' (ID: 85218)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.46783024072647095
    2. '.put' → logprob: -2.092830181121826
    3. '           ' → logprob: -2.592830181121826
    4. 'table' → logprob: -2.842830181121826
    5. ' q' → logprob: -3.092830181121826
    6. 'key' → logprob: -4.217830181121826
    7. 'put' → logprob: -4.467830181121826
    8. '(q' → logprob: -4.967830181121826
    9. '(key' → logprob: -5.217830181121826
    10. '(c' → logprob: -5.342830181121826

Token 516: '???' (ID: 33110)
  Prédit: '.put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.4182060956954956
    2. 'q' → logprob: -1.7932060956954956
    3. '           ' → logprob: -2.168206214904785
    4. 'put' → logprob: -4.043206214904785
    5. ' q' → logprob: -4.043206214904785
    6. 'table' → logprob: -4.668206214904785
    7. '   ' → logprob: -5.418206214904785
    8. '       ' → logprob: -6.293206214904785
    9. '            
' → logprob: -6.418206214904785
    10. '               ' → logprob: -6.793206214904785

Token 517: '£' (ID: 18943)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.22968702018260956
    2. 'table' → logprob: -2.229686975479126
    3. ' q' → logprob: -3.229686975479126
    4. '           ' → logprob: -3.229686975479126
    5. '.put' → logprob: -5.104687213897705
    6. ' table' → logprob: -5.479687213897705
    7. '[q' → logprob: -6.104687213897705
    8. 'put' → logprob: -6.354687213897705
    9. 'queue' → logprob: -6.729687213897705
    10. '   ' → logprob: -7.354687213897705

Token 518: '????' (ID: 25883)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04756928235292435
    2. ' q' → logprob: -3.1725692749023438
    3. '           ' → logprob: -5.797569274902344
    4. 'table' → logprob: -6.797569274902344
    5. ' table' → logprob: -8.922569274902344
    6. '            
' → logprob: -9.422569274902344
    7. '   ' → logprob: -9.672569274902344
    8. '       ' → logprob: -10.297569274902344
    9. '
' → logprob: -10.922569274902344
    10. 'queue' → logprob: -11.047569274902344

Token 519: '??' (ID: 6961)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06633968651294708
    2. ' q' → logprob: -2.8163397312164307
    3. '.put' → logprob: -6.191339492797852
    4. '           ' → logprob: -6.941339492797852
    5. 'put' → logprob: -8.066339492797852
    6. ')' → logprob: -8.191339492797852
    7. '.q' → logprob: -8.441339492797852
    8. '(q' → logprob: -8.691339492797852
    9. '            
' → logprob: -10.316339492797852
    10. '       ' → logprob: -10.441339492797852

Token 520: 'Q' (ID: 48)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.05462135747075081
    2. ' q' → logprob: -3.054621458053589
    3. '           ' → logprob: -5.80462121963501
    4. 'table' → logprob: -6.17962121963501
    5. 'queue' → logprob: -8.304621696472168
    6. '
' → logprob: -8.929621696472168
    7. '            
' → logprob: -9.054621696472168
    8. ')' → logprob: -9.429621696472168
    9. ' table' → logprob: -9.554621696472168
    10. ')
' → logprob: -10.179621696472168

Token 521: '???' (ID: 33110)
  Prédit: '.put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.00017243190086446702
    2. '.' → logprob: -8.75017261505127
    3. 'put' → logprob: -11.37517261505127
    4. ' .' → logprob: -13.00017261505127
    5. ' put' → logprob: -16.000171661376953
    6. '.enqueue' → logprob: -17.000171661376953
    7. '   ' → logprob: -18.250171661376953
    8. ').' → logprob: -18.250171661376953
    9. '.
' → logprob: -18.750171661376953
    10. '_put' → logprob: -18.875171661376953

Token 522: 'c' (ID: 66)
  Prédit: '.put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.0009311101748608053
    2. 'put' → logprob: -7.000931262969971
    3. '.' → logprob: -10.875930786132812
    4. 'q' → logprob: -15.750930786132812
    5. ' .' → logprob: -15.750930786132812
    6. ').' → logprob: -16.125930786132812
    7. ' put' → logprob: -16.875930786132812
    8. '.q' → logprob: -17.000930786132812
    9. '.enqueue' → logprob: -17.000930786132812
    10. '
' → logprob: -17.375930786132812

Token 523: '????????' (ID: 85218)
  Prédit: '.put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.00010247035970678553
    2. '.' → logprob: -9.250102043151855
    3. 'put' → logprob: -12.000102043151855
    4. ' .' → logprob: -15.750102043151855
    5. ').' → logprob: -17.750102996826172
    6. '   ' → logprob: -18.000102996826172
    7. ' put' → logprob: -18.375102996826172
    8. '.q' → logprob: -18.500102996826172
    9. ')' → logprob: -18.875102996826172
    10. '.enqueue' → logprob: -18.875102996826172

Token 524: '???' (ID: 33110)
  Prédit: '.put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.2835918664932251
    2. 'put' → logprob: -1.408591866493225
    3. ' put' → logprob: -6.4085917472839355
    4. ')' → logprob: -7.9085917472839355
    5. '           ' → logprob: -8.908592224121094
    6. '	put' → logprob: -9.658592224121094
    7. '_put' → logprob: -9.783592224121094
    8. 'q' → logprob: -9.783592224121094
    9. '   ' → logprob: -10.408592224121094
    10. '()' → logprob: -11.033592224121094

Token 525: '?
' (ID: 3901)
  Prédit: '.put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.16087216138839722
    2. 'put' → logprob: -1.910872220993042
    3. ' put' → logprob: -7.660871982574463
    4. ')' → logprob: -9.535872459411621
    5. '_put' → logprob: -10.160872459411621
    6. 'q' → logprob: -10.910872459411621
    7. '	put' → logprob: -10.910872459411621
    8. '.' → logprob: -12.035872459411621
    9. 'Put' → logprob: -12.160872459411621
    10. '   ' → logprob: -12.410872459411621

Token 526: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5243114233016968
    2. 'q' → logprob: -1.1493114233016968
    3. ' q' → logprob: -2.7743115425109863
    4. '       ' → logprob: -4.274311542510986
    5. 'table' → logprob: -4.524311542510986
    6. '   ' → logprob: -5.774311542510986
    7. ' table' → logprob: -7.524311542510986
    8. '	q' → logprob: -8.899311065673828
    9. 'queue' → logprob: -9.899311065673828
    10. '
' → logprob: -10.649311065673828

Token 527: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0007430415134876966
    2. ' q' → logprob: -7.2507429122924805
    3. '           ' → logprob: -10.50074291229248
    4. 'table' → logprob: -12.50074291229248
    5. '   ' → logprob: -13.50074291229248
    6. '       ' → logprob: -15.12574291229248
    7. '	q' → logprob: -15.62574291229248
    8. '               ' → logprob: -17.250743865966797
    9. ' table' → logprob: -17.500743865966797
    10. ' ' → logprob: -17.625743865966797

Token 528: '.put' (ID: 5133)
  Prédit: '.put'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.0009122979827225208
    2. '.' → logprob: -7.000912189483643
    3. 'put' → logprob: -14.2509126663208
    4. ' .' → logprob: -15.8759126663208
    5. ' put' → logprob: -17.500911712646484
    6. ').' → logprob: -17.625911712646484
    7. '.enqueue' → logprob: -17.625911712646484
    8. '_put' → logprob: -19.125911712646484
    9. '.p' → logprob: -19.125911712646484
    10. '>.' → logprob: -20.125911712646484

Token 529: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: 0.0
    2. '(' → logprob: -16.75
    3. '©' → logprob: -17.875
    4. ')c' → logprob: -21.25
    5. ' (' → logprob: -21.625
    6. 'c' → logprob: -22.0
    7. '(
' → logprob: -22.125
    8. ')' → logprob: -22.25
    9. '	c' → logprob: -22.5
    10. '(C' → logprob: -23.125

Token 530: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.9186317482963204e-05
    2. ' )' → logprob: -10.125049591064453
    3. ')
' → logprob: -11.625049591064453
    4. ')return' → logprob: -16.500049591064453
    5. ')#' → logprob: -17.875049591064453
    6. ')

' → logprob: -18.000049591064453
    7. '))' → logprob: -18.375049591064453
    8. ')}' → logprob: -19.250049591064453
    9. ' )
' → logprob: -19.375049591064453
    10. ')
' → logprob: -19.375049591064453

Token 531: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00807642750442028
    2. '<|end|>' → logprob: -4.883076190948486
    3. '       ' → logprob: -9.008076667785645
    4. '		' → logprob: -9.383076667785645
    5. '	       ' → logprob: -9.508076667785645
    6. '   ' → logprob: -9.508076667785645
    7. '            
' → logprob: -10.633076667785645
    8. '          ' → logprob: -11.008076667785645
    9. 'table' → logprob: -11.258076667785645
    10. '<|end|>' → logprob: -11.383076667785645

Token 532: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28990375995635986
    2. 'table' → logprob: -1.6649037599563599
    3. ' table' → logprob: -3.0399036407470703
    4. '            
' → logprob: -5.66490364074707
    5. '       ' → logprob: -5.91490364074707
    6. '
' → logprob: -6.28990364074707
    7. ')table' → logprob: -6.66490364074707
    8. '	table' → logprob: -6.78990364074707
    9. ')' → logprob: -6.91490364074707
    10. '<|end|>' → logprob: -7.03990364074707

Token 533: ' key' (ID: 2140)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.0011813003802672029
    2. '           ' → logprob: -7.251181125640869
    3. ' table' → logprob: -7.751181125640869
    4. 'key' → logprob: -10.251181602478027
    5. '   ' → logprob: -12.751181602478027
    6. '       ' → logprob: -13.751181602478027
    7. ' key' → logprob: -14.376181602478027
    8. '
' → logprob: -15.376181602478027
    9. '  ' → logprob: -15.376181602478027
    10. '            
' → logprob: -15.376181602478027

Token 534: '????????' (ID: 85218)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.027715906500816345
    2. ']' → logprob: -3.6527159214019775
    3. '[' → logprob: -7.152715682983398
    4. '=' → logprob: -8.152715682983398
    5. ']=' → logprob: -8.152715682983398
    6. ')' → logprob: -11.277715682983398
    7. '][' → logprob: -11.527715682983398
    8. 'key' → logprob: -11.777715682983398
    9. '[]' → logprob: -12.777715682983398
    10. '[token' → logprob: -13.402715682983398

Token 535: '£' (ID: 18943)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[key' → logprob: -4.60414821645827e-06
    2. 'key' → logprob: -12.500004768371582
    3. ' [' → logprob: -14.500004768371582
    4. '[' → logprob: -14.750004768371582
    5. ' key' → logprob: -16.750003814697266
    6. '
' → logprob: -19.125003814697266
    7. '][' → logprob: -19.375003814697266
    8. ']' → logprob: -19.625003814697266
    9. '[index' → logprob: -20.000003814697266
    10. '(key' → logprob: -20.125003814697266

Token 536: '???' (ID: 33110)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.01969752088189125
    2. ' key' → logprob: -4.269697666168213
    3. 'table' → logprob: -5.519697666168213
    4. '[key' → logprob: -6.519697666168213
    5. ' table' → logprob: -10.394697189331055
    6. '           ' → logprob: -12.269697189331055
    7. '
' → logprob: -13.894697189331055
    8. '(key' → logprob: -15.269697189331055
    9. '_key' → logprob: -15.644697189331055
    10. '   ' → logprob: -15.894697189331055

Token 537: 'True' (ID: 4710)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -1.5094070477061905e-05
    2. 'key' → logprob: -11.750015258789062
    3. ' table' → logprob: -12.000015258789062
    4. 'True' → logprob: -13.875015258789062
    5. '
' → logprob: -18.750015258789062
    6. '   ' → logprob: -19.000015258789062
    7. '           ' → logprob: -19.000015258789062
    8. ' True' → logprob: -19.875015258789062
    9. ' key' → logprob: -20.250015258789062
    10. '	table' → logprob: -21.375015258789062

Token 538: '????????' (ID: 85218)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17584653198719025
    2. ' =' → logprob: -1.9258465766906738
    3. '[key' → logprob: -4.175846576690674
    4. ']' → logprob: -9.425846099853516
    5. '[' → logprob: -10.425846099853516
    6. ']=' → logprob: -10.925846099853516
    7. '           ' → logprob: -12.675846099853516
    8. '=True' → logprob: -13.300846099853516
    9. ')' → logprob: -13.800846099853516
    10. ' [' → logprob: -14.050846099853516

Token 539: '?
' (ID: 3901)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.08442685008049011
    2. 'key' → logprob: -2.5844268798828125
    3. ' key' → logprob: -5.3344268798828125
    4. '           ' → logprob: -7.9594268798828125
    5. ' [' → logprob: -8.459426879882812
    6. '[' → logprob: -9.084426879882812
    7. 'table' → logprob: -11.584426879882812
    8. '
' → logprob: -12.709426879882812
    9. '][' → logprob: -13.084426879882812
    10. '               ' → logprob: -13.334426879882812

Token 540: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6222125291824341
    2. 'table' → logprob: -1.122212529182434
    3. ' table' → logprob: -1.997212529182434
    4. '   ' → logprob: -6.4972124099731445
    5. '       ' → logprob: -8.497212409973145
    6. '	table' → logprob: -8.872212409973145
    7. ' key' → logprob: -10.622212409973145
    8. '            
' → logprob: -11.122212409973145
    9. ')table' → logprob: -11.247212409973145
    10. 'key' → logprob: -11.497212409973145

Token 541: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' (adapté à ' table') → logprob: -0.039339158684015274
    2. ' table' → logprob: -3.289339065551758
    3. 'key' → logprob: -7.039339065551758
    4. '           ' → logprob: -8.164339065551758
    5. ' key' → logprob: -8.914339065551758
    6. '   ' → logprob: -14.789339065551758
    7. '
' → logprob: -15.414339065551758
    8. '            
' → logprob: -16.289339065551758
    9. '[key' → logprob: -16.539339065551758
    10. ' ' → logprob: -16.539339065551758

Token 542: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -15.25
    3. '[' → logprob: -16.75
    4. 'key' → logprob: -18.75
    5. ' key' → logprob: -20.25
    6. '[k' → logprob: -21.0
    7. ',key' → logprob: -21.125
    8. '[
' → logprob: -21.25
    9. '
' → logprob: -22.125
    10. '(key' → logprob: -22.125

Token 543: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5564574599266052
    2. ' =' → logprob: -1.05645751953125
    3. ']' → logprob: -2.55645751953125
    4. ']=' → logprob: -6.55645751953125
    5. '=True' → logprob: -10.05645751953125
    6. ')' → logprob: -10.55645751953125
    7. ' ]' → logprob: -12.05645751953125
    8. ')=' → logprob: -12.68145751953125
    9. ' ' → logprob: -15.30645751953125
    10. ' )' → logprob: -15.80645751953125

Token 544: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023246178403496742
    2. ' =' → logprob: -3.7732462882995605
    3. '=True' → logprob: -14.148245811462402
    4. '＝' → logprob: -18.77324676513672
    5. ' ' → logprob: -20.14824676513672
    6. '   ' → logprob: -20.14824676513672
    7. ']' → logprob: -20.89824676513672
    8. '=False' → logprob: -21.14824676513672
    9. ']=' → logprob: -21.39824676513672
    10. ')' → logprob: -21.52324676513672

Token 545: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019286326132714748
    2. ' True' → logprob: -6.251928806304932
    3. '(True' → logprob: -19.751928329467773
    4. 'Tr' → logprob: -20.876928329467773
    5. '=True' → logprob: -21.251928329467773
    6. 'true' → logprob: -22.126928329467773
    7. ' ' → logprob: -22.126928329467773
    8. '   ' → logprob: -22.251928329467773
    9. 'T' → logprob: -23.001928329467773
    10. 'False' → logprob: -23.126928329467773

Token 546: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 547: 'count' (ID: 5420)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 548: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3835044801235199
    2. '=' → logprob: -1.6335045099258423
    3. ' ' → logprob: -2.6335043907165527
    4. '(' → logprob: -3.8835043907165527
    5. '_' → logprob: -4.758504390716553
    6. ')' → logprob: -5.133504390716553
    7. ' +=' → logprob: -5.133504390716553
    8. '<|end|>' → logprob: -5.758504390716553
    9. '[' → logprob: -6.508504390716553
    10. ' (' → logprob: -6.758504390716553

Token 549: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019217245280742645
    2. ' ' → logprob: -4.019217014312744
    3. 'int' → logprob: -7.269217014312744
    4. '{}' → logprob: -8.644217491149902
    5. '1' → logprob: -9.644217491149902
    6. ' int' → logprob: -10.769217491149902
    7. '9' → logprob: -11.019217491149902
    8. '[' → logprob: -11.269217491149902
    9. '3' → logprob: -11.394217491149902
    10. '10' → logprob: -11.644217491149902

Token 550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003666348522529006
    2. ' ' → logprob: -5.628666400909424
    3. 'count' → logprob: -10.378665924072266
    4. '   ' → logprob: -12.003665924072266
    5. '  ' → logprob: -12.003665924072266
    6. '=' → logprob: -12.753665924072266
    7. 'def' → logprob: -13.628665924072266
    8. '.' → logprob: -13.753665924072266
    9. '    ' → logprob: -13.753665924072266
    10. '2' → logprob: -13.878665924072266

Token 551: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6431061029434204
    2. '<|end|>' → logprob: -0.7681061029434204
    3. '
' → logprob: -4.768105983734131
    4. '<|end|>' → logprob: -7.268105983734131
    5. ' def' → logprob: -8.268106460571289
    6. ';' → logprob: -8.268106460571289
    7. ')' → logprob: -8.643106460571289
    8. ' ' → logprob: -8.643106460571289
    9. 'count' → logprob: -9.393106460571289
    10. ',' → logprob: -10.393106460571289

Token 552: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014324389398097992
    2. '<|end|>' → logprob: -4.389324188232422
    3. '
' → logprob: -6.389324188232422
    4. '<|end|>' → logprob: -9.889324188232422
    5. ' def' → logprob: -10.014324188232422
    6. ')' → logprob: -10.764324188232422
    7. 'count' → logprob: -13.014324188232422
    8. '0' → logprob: -13.264324188232422
    9. '#' → logprob: -13.639324188232422
    10. 'ndef' → logprob: -13.764324188232422

Token 553: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.872261317563243e-05
    2. 'def' → logprob: -10.625059127807617
    3. ' print' → logprob: -10.875059127807617
    4. 'count' → logprob: -11.625059127807617
    5. 'dfs' → logprob: -12.125059127807617
    6. 'get' → logprob: -15.375059127807617
    7. 'calc' → logprob: -15.500059127807617
    8. 'ans' → logprob: -16.500059127807617
    9. ' ' → logprob: -17.000059127807617
    10. 'pr' → logprob: -17.125059127807617

Token 554: 'Ans' (ID: 36478)
  Prédit: 'Ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ans' → logprob: -4.320199877838604e-07
    2. 'Answer' → logprob: -16.25
    3. '(ans' → logprob: -16.375
    4. 'An' → logprob: -16.625
    5. 'ans' → logprob: -16.75
    6. ' Ans' → logprob: -18.625
    7. '()' → logprob: -18.875
    8. '`' → logprob: -18.875
    9. '_ans' → logprob: -19.0
    10. '(' → logprob: -19.0

Token 555: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.2742297649383545
    2. '(s' → logprob: -1.5242297649383545
    3. '(state' → logprob: -4.399230003356934
    4. '(a' → logprob: -5.649230003356934
    5. '(node' → logprob: -6.024230003356934
    6. '(x' → logprob: -7.149230003356934
    7. '(now' → logprob: -7.399230003356934
    8. '(n' → logprob: -7.524230003356934
    9. '(t' → logprob: -7.649230003356934
    10. '(r' → logprob: -7.774230003356934

Token 556: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07028985023498535
    2. '):
' → logprob: -2.6952898502349854
    3. '):
' → logprob: -8.070289611816406
    4. ')' → logprob: -10.570289611816406
    5. ' ):' → logprob: -12.570289611816406
    6. ' ' → logprob: -12.570289611816406
    7. '   ' → logprob: -12.695289611816406
    8. '):

' → logprob: -12.945289611816406
    9. ':' → logprob: -13.445289611816406
    10. '  ' → logprob: -15.445289611816406

Token 557: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2618691921234131
    2. '   ' → logprob: -1.511869192123413
    3. 'global' → logprob: -4.761869430541992
    4. ' if' → logprob: -7.011869430541992
    5. ' ' → logprob: -8.011869430541992
    6. '	if' → logprob: -10.136869430541992
    7. ' global' → logprob: -10.136869430541992
    8. 'while' → logprob: -11.136869430541992
    9. '	global' → logprob: -12.011869430541992
    10. '  ' → logprob: -12.636869430541992

Token 558: ' global' (ID: 5466)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007831142283976078
    2. 'global' (adapté à ' global') → logprob: -5.00783109664917
    3. '   ' → logprob: -7.38283109664917
    4. 'while' → logprob: -7.75783109664917
    5. ' if' → logprob: -9.882831573486328
    6. ' ' → logprob: -11.757831573486328
    7. ' global' → logprob: -12.507831573486328
    8. 's' → logprob: -14.257831573486328
    9. '	if' → logprob: -14.382831573486328
    10. 'i' → logprob: -14.632831573486328

Token 559: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -5.5577775128767826e-06
    2. ' count' → logprob: -12.125005722045898
    3. 'c' → logprob: -17.3750057220459
    4. ' ' → logprob: -19.0000057220459
    5. '	count' → logprob: -19.7500057220459
    6. 'cou' → logprob: -21.3750057220459
    7. 'counter' → logprob: -21.7500057220459
    8. 'ount' → logprob: -21.8750057220459
    9. 'cout' → logprob: -22.1250057220459
    10. 'counts' → logprob: -22.5000057220459

Token 560: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37555229663848877
    2. ' if' → logprob: -1.3755522966384888
    3. 'if' → logprob: -2.875552177429199
    4. 'count' → logprob: -6.250552177429199
    5. '	if' → logprob: -6.625552177429199
    6. '	count' → logprob: -8.0005521774292
    7. ' count' → logprob: -9.2505521774292
    8. ' ' → logprob: -9.3755521774292
    9. 'while' → logprob: -9.5005521774292
    10. ' while' → logprob: -9.7505521774292

Token 561: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01570221409201622
    2. 'count' → logprob: -4.265702247619629
    3. '   ' → logprob: -6.765702247619629
    4. ' if' → logprob: -8.265702247619629
    5. 'while' → logprob: -9.015702247619629
    6. ' ' → logprob: -12.890702247619629
    7. '	if' → logprob: -13.390702247619629
    8. '	count' → logprob: -14.140702247619629
    9. ' count' → logprob: -14.140702247619629
    10. ' while' → logprob: -15.390702247619629

Token 562: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008724244311451912
    2. 'count' → logprob: -4.758724212646484
    3. 'while' → logprob: -9.133724212646484
    4. ' if' → logprob: -13.633724212646484
    5. '   ' → logprob: -15.508724212646484
    6. 'i' → logprob: -16.758724212646484
    7. '```' → logprob: -16.883724212646484
    8. 'print' → logprob: -16.883724212646484
    9. 'c' → logprob: -17.008724212646484
    10. '
' → logprob: -17.258724212646484

Token 563: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0052362410351634026
    2. ' c' → logprob: -5.2552361488342285
    3. ' not' → logprob: -13.380236625671387
    4. 'not' → logprob: -14.005236625671387
    5. '   ' → logprob: -17.63023567199707
    6. ' ' → logprob: -17.75523567199707
    7. '(c' → logprob: -18.13023567199707
    8. '	c' → logprob: -18.13023567199707
    9. '  ' → logprob: -19.75523567199707
    10. ')c' → logprob: -21.00523567199707

Token 564: ' is' (ID: 382)
  Prédit: '.prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prev' → logprob: -6.957014556974173e-05
    2. 'prev' → logprob: -10.000069618225098
    3. '.' → logprob: -10.875069618225098
    4. '==' → logprob: -12.500069618225098
    5. ' is' → logprob: -14.500069618225098
    6. '.pre' → logprob: -15.250069618225098
    7. '.previous' → logprob: -15.750069618225098
    8. '	prev' → logprob: -15.750069618225098
    9. ' ==' → logprob: -16.37506866455078
    10. ' .' → logprob: -16.50006866455078

Token 565: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0013574945041909814
    2. 'not' → logprob: -7.001357555389404
    3. ' None' → logprob: -7.751357555389404
    4. ' not' → logprob: -11.126357078552246
    5. '   ' → logprob: -14.876357078552246
    6. '(None' → logprob: -15.001357078552246
    7. 'Not' → logprob: -15.876357078552246
    8. '_None' → logprob: -16.376358032226562
    9. 'none' → logprob: -17.126358032226562
    10. '=None' → logprob: -17.251358032226562

Token 566: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.56102097814437e-05
    2. ' None' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.875045776367188
    4. '_None' → logprob: -17.000045776367188
    5. '(None' → logprob: -17.625045776367188
    6. 'none' → logprob: -19.250045776367188
    7. '  ' → logprob: -20.125045776367188
    8. '0' → logprob: -20.250045776367188
    9. ' ' → logprob: -20.250045776367188
    10. '=None' → logprob: -20.500045776367188

Token 567: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.63308185338974
    2. ':
' → logprob: -0.75808185338974
    3. '):
' → logprob: -8.258081436157227
    4. '   ' → logprob: -8.883081436157227
    5. '():
' → logprob: -10.133081436157227
    6. '<|end|>' → logprob: -11.633081436157227
    7. ' and' → logprob: -11.883081436157227
    8. ' :
' → logprob: -12.133081436157227
    9. ':

' → logprob: -12.633081436157227
    10. '):' → logprob: -12.633081436157227

Token 568: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1252011060714722
    2. '
' → logprob: -1.2502011060714722
    3. ' print' → logprob: -1.6252011060714722
    4. '    
' → logprob: -2.6252012252807617
    5. '   ' → logprob: -2.7502012252807617
    6. '        
' → logprob: -3.8752012252807617
    7. 'print' → logprob: -3.8752012252807617
    8. '  
' → logprob: -5.750201225280762
    9. ' count' → logprob: -6.000201225280762
    10. ' 
' → logprob: -6.375201225280762

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02921181730926037
    2. ' print' → logprob: -4.02921199798584
    3. 'print' → logprob: -4.77921199798584
    4. '   ' → logprob: -6.52921199798584
    5. ' count' → logprob: -7.40421199798584
    6. 'count' → logprob: -7.77921199798584
    7. '	print' → logprob: -10.15421199798584
    8. '```' → logprob: -11.15421199798584
    9. '	count' → logprob: -11.27921199798584
    10. '        
' → logprob: -11.65421199798584

Token 570: ' count' (ID: 3605)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009457848034799099
    2. ' print' → logprob: -4.759458065032959
    3. 'count' (adapté à ' count') → logprob: -7.509458065032959
    4. '       ' → logprob: -8.5094575881958
    5. '   ' → logprob: -9.3844575881958
    6. ' count' → logprob: -12.0094575881958
    7. ' ' → logprob: -13.2594575881958
    8. '	print' → logprob: -13.7594575881958
    9. '           ' → logprob: -15.2594575881958
    10. '  ' → logprob: -15.8844575881958

Token 571: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14875328540802002
    2. '-=' → logprob: -2.6487531661987305
    3. ' +=' → logprob: -2.8987531661987305
    4. ' -=' → logprob: -4.3987531661987305
    5. '=' → logprob: -9.64875316619873
    6. '-' → logprob: -10.52375316619873
    7. '   ' → logprob: -13.89875316619873
    8. '[' → logprob: -14.89875316619873
    9. ' ' → logprob: -15.14875316619873
    10. ' =' → logprob: -15.14875316619873

Token 572: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. 'print' → logprob: -16.500036239624023
    4. '   ' → logprob: -18.125036239624023
    5. '+' → logprob: -18.500036239624023
    6. 'int' → logprob: -19.375036239624023
    7. '-' → logprob: -20.625036239624023
    8. '１' → logprob: -20.625036239624023
    9. '  ' → logprob: -20.750036239624023
    10. '```' → logprob: -20.875036239624023

Token 573: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '-' → logprob: -15.875019073486328
    4. '   ' → logprob: -17.250019073486328
    5. 'print' → logprob: -17.375019073486328
    6. 'int' → logprob: -17.750019073486328
    7. 'count' → logprob: -17.750019073486328
    8. '+' → logprob: -18.125019073486328
    9. ' -' → logprob: -18.250019073486328
    10. '2' → logprob: -18.500019073486328

Token 574: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38543274998664856
    2. '
' → logprob: -1.3854327201843262
    3. 'print' → logprob: -3.385432720184326
    4. '        
' → logprob: -4.260432720184326
    5. '   ' → logprob: -4.510432720184326
    6. '    
' → logprob: -5.510432720184326
    7. ' print' → logprob: -5.635432720184326
    8. '  
' → logprob: -7.010432720184326
    9. ' 
' → logprob: -8.010433197021484
    10. '
' → logprob: -8.260433197021484

Token 575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3289201259613037
    2. 'print' → logprob: -1.5789201259613037
    3. ' print' → logprob: -3.0789201259613037
    4. '   ' → logprob: -3.5789201259613037
    5. '	print' → logprob: -9.203920364379883
    6. ' ' → logprob: -11.203920364379883
    7. ' if' → logprob: -11.328920364379883
    8. '    ' → logprob: -11.578920364379883
    9. '```' → logprob: -11.703920364379883
    10. '      ' → logprob: -11.953920364379883

Token 576: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02244814857840538
    2. ' print' → logprob: -4.0224480628967285
    3. '       ' → logprob: -5.5224480628967285
    4. '   ' → logprob: -8.147448539733887
    5. '	print' → logprob: -13.022448539733887
    6. ' ' → logprob: -14.272448539733887
    7. '    ' → logprob: -16.02244758605957
    8. '  ' → logprob: -16.02244758605957
    9. '#print' → logprob: -16.39744758605957
    10. '     ' → logprob: -16.52244758605957

Token 577: 'Ans' (ID: 36478)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.15424826741218567
    2. 'Ans' → logprob: -2.0292482376098633
    3. '('' → logprob: -5.029248237609863
    4. '("' → logprob: -6.529248237609863
    5. '()' → logprob: -7.154248237609863
    6. '(' → logprob: -7.154248237609863
    7. '(print' → logprob: -7.404248237609863
    8. 'c' → logprob: -7.779248237609863
    9. '(*' → logprob: -8.779248237609863
    10. '("")' → logprob: -9.654248237609863

Token 578: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.500000953674316
    3. '(
' → logprob: -16.875
    4. ')c' → logprob: -18.125
    5. '((' → logprob: -18.25
    6. ' (' → logprob: -18.5
    7. '(C' → logprob: -19.375
    8. 'c' → logprob: -19.375
    9. '```' → logprob: -19.875
    10. '​' → logprob: -20.125

Token 579: '.prev' (ID: 54166)
  Prédit: '.c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.006530280690640211
    2. '.' → logprob: -5.881530284881592
    3. '(c' → logprob: -5.881530284881592
    4. ')' → logprob: -8.006529808044434
    5. ')c' → logprob: -8.131529808044434
    6. 'c' → logprob: -8.881529808044434
    7. ' .' → logprob: -9.756529808044434
    8. ').' → logprob: -9.756529808044434
    9. '.)' → logprob: -10.881529808044434
    10. '.parent' → logprob: -12.756529808044434

Token 580: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013295256067067385
    2. ')
' → logprob: -6.62632942199707
    3. ' )' → logprob: -13.00132942199707
    4. ')
' → logprob: -14.50132942199707
    5. '   ' → logprob: -15.12632942199707
    6. ')

' → logprob: -15.12632942199707
    7. '())' → logprob: -16.62632942199707
    8. ')`' → logprob: -17.00132942199707
    9. ' )
' → logprob: -17.12632942199707
    10. '),' → logprob: -17.12632942199707

Token 581: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15341176092624664
    2. 'print' → logprob: -2.028411865234375
    3. '   ' → logprob: -4.778411865234375
    4. ' print' → logprob: -6.153411865234375
    5. '	print' → logprob: -9.403411865234375
    6. '```' → logprob: -11.028411865234375
    7. ' ' → logprob: -11.403411865234375
    8. '        
' → logprob: -11.653411865234375
    9. '<|end|>' → logprob: -12.403411865234375
    10. '    
' → logprob: -12.903411865234375

Token 582: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09229197353124619
    2. '       ' → logprob: -2.842292070388794
    3. 'return' → logprob: -4.592291831970215
    4. ' print' → logprob: -5.217291831970215
    5. '        ' → logprob: -5.467291831970215
    6. '   ' → logprob: -5.717291831970215
    7. ')' → logprob: -5.842291831970215
    8. '    ' → logprob: -6.592291831970215
    9. '<|end|>' → logprob: -7.217291831970215
    10. ' ' → logprob: -7.592291831970215

Token 583: '.prev' (ID: 54166)
  Prédit: '.prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prev' → logprob: -0.06603832542896271
    2. ')' → logprob: -2.8160383701324463
    3. 'prev' → logprob: -6.316038131713867
    4. '.' → logprob: -6.691038131713867
    5. '<|end|>' → logprob: -7.941038131713867
    6. '   ' → logprob: -8.691038131713867
    7. '       ' → logprob: -9.566038131713867
    8. '	prev' → logprob: -9.566038131713867
    9. ')
' → logprob: -9.816038131713867
    10. ');' → logprob: -9.941038131713867

Token 584: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0357123501598835
    2. '<|end|>' → logprob: -3.660712242126465
    3. ')' → logprob: -4.910712242126465
    4. '
' → logprob: -7.660712242126465
    5. ')
' → logprob: -7.910712242126465
    6. 'print' → logprob: -8.035712242126465
    7. '   ' → logprob: -8.285712242126465
    8. '()' → logprob: -8.535712242126465
    9. '	' → logprob: -8.910712242126465
    10. '<|end|>' → logprob: -9.660712242126465

Token 585: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5179445147514343
    2. ')' → logprob: -1.017944574356079
    3. '<|end|>' → logprob: -3.892944574356079
    4. '   ' → logprob: -4.2679443359375
    5. 'print' → logprob: -5.2679443359375
    6. ')
' → logprob: -7.0179443359375
    7. '()' → logprob: -7.1429443359375
    8. '
' → logprob: -8.1429443359375
    9. 'return' → logprob: -8.5179443359375
    10. 'def' → logprob: -8.5179443359375

Token 586: '????????' (ID: 85218)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03022167645394802
    2. '       ' → logprob: -3.530221700668335
    3. ' print' → logprob: -8.155221939086914
    4. '   ' → logprob: -8.780221939086914
    5. 'else' → logprob: -10.780221939086914
    6. '	print' → logprob: -13.030221939086914
    7. '```' → logprob: -13.405221939086914
    8. '        
' → logprob: -13.780221939086914
    9. '#print' → logprob: -14.155221939086914
    10. '    ' → logprob: -14.405221939086914

Token 587: '??' (ID: 6961)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040497440844774246
    2. 'print' → logprob: -3.2904975414276123
    3. '   ' → logprob: -6.415497303009033
    4. ' print' → logprob: -7.415497303009033
    5. ')' → logprob: -9.665497779846191
    6. 'else' → logprob: -10.290497779846191
    7. ' ' → logprob: -10.415497779846191
    8. '    ' → logprob: -11.040497779846191
    9. '	print' → logprob: -11.665497779846191
    10. '```' → logprob: -11.915497779846191

Token 588: '¨' (ID: 64259)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16168521344661713
    2. 'print' → logprob: -1.9116852283477783
    3. ' print' → logprob: -7.161684989929199
    4. '   ' → logprob: -7.661684989929199
    5. 'else' → logprob: -8.9116849899292
    6. '
' → logprob: -11.0366849899292
    7. '        
' → logprob: -11.6616849899292
    8. '```' → logprob: -11.6616849899292
    9. ' ' → logprob: -11.9116849899292
    10. ')' → logprob: -12.1616849899292

Token 589: '????????' (ID: 85218)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.43674594163894653
    2. '       ' → logprob: -1.0617458820343018
    3. '   ' → logprob: -5.186746120452881
    4. ' print' → logprob: -6.811746120452881
    5. ')' → logprob: -7.061746120452881
    6. 'else' → logprob: -8.811745643615723
    7. ' ' → logprob: -9.811745643615723
    8. '    ' → logprob: -9.936745643615723
    9. 'return' → logprob: -10.436745643615723
    10. '<|end|>' → logprob: -10.436745643615723

Token 590: '£' (ID: 18943)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38938674330711365
    2. '       ' → logprob: -1.139386773109436
    3. ' print' → logprob: -6.2643866539001465
    4. '   ' → logprob: -7.7643866539001465
    5. '        
' → logprob: -9.764387130737305
    6. '```' → logprob: -10.639387130737305
    7. ')' → logprob: -10.764387130737305
    8. '    ' → logprob: -11.139387130737305
    9. '    
' → logprob: -11.514387130737305
    10. '
' → logprob: -11.764387130737305

Token 591: '????????' (ID: 85218)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.257160484790802
    2. 'print' → logprob: -1.5071604251861572
    3. ' print' → logprob: -5.632160663604736
    4. '   ' → logprob: -7.007160663604736
    5. '
' → logprob: -8.132160186767578
    6. 'else' → logprob: -8.382160186767578
    7. '        
' → logprob: -9.757160186767578
    8. '```' → logprob: -10.757160186767578
    9. '    ' → logprob: -11.007160186767578
    10. ' ' → logprob: -11.132160186767578

Token 592: '°' (ID: 6793)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16496942937374115
    2. '       ' → logprob: -1.9149694442749023
    3. ' print' → logprob: -5.914969444274902
    4. '   ' → logprob: -6.289969444274902
    5. 'return' → logprob: -10.164969444274902
    6. '```' → logprob: -10.164969444274902
    7. 'else' → logprob: -10.289969444274902
    8. '    ' → logprob: -11.164969444274902
    9. '	print' → logprob: -11.289969444274902
    10. ' ' → logprob: -11.539969444274902

Token 593: '????' (ID: 25883)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2319963574409485
    2. '       ' → logprob: -1.6069962978363037
    3. '   ' → logprob: -5.356996536254883
    4. ' print' → logprob: -6.481996536254883
    5. 'else' → logprob: -8.856996536254883
    6. '    ' → logprob: -10.356996536254883
    7. '        
' → logprob: -10.356996536254883
    8. ' ' → logprob: -10.856996536254883
    9. '```' → logprob: -11.106996536254883
    10. '
' → logprob: -11.606996536254883

Token 594: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44429677724838257
    2. 'print' → logprob: -1.5692968368530273
    3. ')' → logprob: -1.9442968368530273
    4. '   ' → logprob: -5.944296836853027
    5. 'else' → logprob: -6.444296836853027
    6. ' print' → logprob: -7.194296836853027
    7. 'return' → logprob: -7.194296836853027
    8. '    ' → logprob: -8.069296836853027
    9. '        ' → logprob: -8.319296836853027
    10. ' )' → logprob: -8.569296836853027

Token 595: '°' (ID: 6793)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.486814945936203
    2. '       ' → logprob: -0.9868149757385254
    3. ' print' → logprob: -4.736814975738525
    4. '   ' → logprob: -5.986814975738525
    5. 'else' → logprob: -7.111814975738525
    6. 'return' → logprob: -9.361814498901367
    7. ')' → logprob: -9.361814498901367
    8. '
' → logprob: -9.611814498901367
    9. '```' → logprob: -9.736814498901367
    10. ' ' → logprob: -9.986814498901367

Token 596: '????' (ID: 25883)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6432821154594421
    2. '       ' → logprob: -0.7682821154594421
    3. ' print' → logprob: -4.768281936645508
    4. '   ' → logprob: -6.268281936645508
    5. '```' → logprob: -9.518281936645508
    6. ' ' → logprob: -10.518281936645508
    7. '    ' → logprob: -10.768281936645508
    8. '        
' → logprob: -10.893281936645508
    9. '
' → logprob: -11.018281936645508
    10. 'return' → logprob: -11.268281936645508

Token 597: '??
' (ID: 108055)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3616454005241394
    2. 'print' → logprob: -1.3616454601287842
    3. ')' → logprob: -3.236645460128784
    4. '   ' → logprob: -5.236645221710205
    5. ' print' → logprob: -6.861645221710205
    6. 'return' → logprob: -7.736645221710205
    7. '    ' → logprob: -8.486645698547363
    8. ' ' → logprob: -8.861645698547363
    9. '  ' → logprob: -9.111645698547363
    10. '        ' → logprob: -9.361645698547363

Token 598: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29770517349243164
    2. '       ' → logprob: -1.4227051734924316
    3. '   ' → logprob: -4.297705173492432
    4. ' print' → logprob: -6.172705173492432
    5. 'else' → logprob: -7.922705173492432
    6. '```' → logprob: -8.172704696655273
    7. 'if' → logprob: -10.172704696655273
    8. '
' → logprob: -11.922704696655273
    9. '``' → logprob: -12.047704696655273
    10. ' ' → logprob: -12.047704696655273

Token 599: ' return' (ID: 622)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010535651817917824
    2. '   ' → logprob: -4.885535717010498
    3. ' print' → logprob: -6.385535717010498
    4. '       ' → logprob: -7.260535717010498
    5. 'if' → logprob: -7.760535717010498
    6. 'else' → logprob: -10.51053524017334
    7. '    ' → logprob: -11.26053524017334
    8. 'move' → logprob: -11.51053524017334
    9. ' if' → logprob: -11.63553524017334
    10. 's' → logprob: -11.76053524017334

Token 600: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1357429176568985
    2. '<|end|>' → logprob: -2.2607429027557373
    3. 'None' → logprob: -4.760743141174316
    4. 'print' → logprob: -5.010743141174316
    5. '
' → logprob: -5.260743141174316
    6. '[count' → logprob: -6.510743141174316
    7. '(count' → logprob: -8.760743141174316
    8. ' count' → logprob: -8.885743141174316
    9. 'c' → logprob: -8.885743141174316
    10. ' None' → logprob: -10.135743141174316

Token 601: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 602: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 603: ' ?' (ID: 1423)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5518003702163696
    2. '#' → logprob: -1.9268003702163696
    3. 'n' → logprob: -2.05180025100708
    4. 'input' → logprob: -3.67680025100708
    5. 'start' → logprob: -3.80180025100708
    6. 's' → logprob: -3.80180025100708
    7. 'for' → logprob: -4.17680025100708
    8. ' ' → logprob: -4.55180025100708
    9. 'i' → logprob: -4.92680025100708
    10. '0' → logprob: -5.05180025100708

Token 604: '????????' (ID: 85218)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16504232585430145
    2. '#' → logprob: -2.9150424003601074
    3. 'i' → logprob: -2.9150424003601074
    4. 'def' → logprob: -4.790042400360107
    5. ' ' → logprob: -5.290042400360107
    6. 'a' → logprob: -5.290042400360107
    7. 'n' → logprob: -5.290042400360107
    8. '=' → logprob: -5.540042400360107
    9. ' if' → logprob: -5.665042400360107
    10. 'input' → logprob: -6.165042400360107

Token 605: '????????' (ID: 85218)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12940028309822083
    2. 'for' → logprob: -2.6294002532958984
    3. 'if' → logprob: -3.6294002532958984
    4. 'N' → logprob: -4.629400253295898
    5. 'input' → logprob: -5.754400253295898
    6. 'data' → logprob: -6.129400253295898
    7. 'def' → logprob: -6.254400253295898
    8. '#' → logprob: -6.629400253295898
    9. 'while' → logprob: -6.879400253295898
    10. 'start' → logprob: -7.254400253295898

Token 606: '????????' (ID: 85218)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6737865209579468
    2. 'n' → logprob: -1.2987865209579468
    3. '#' → logprob: -2.7987866401672363
    4. 'if' → logprob: -3.1737866401672363
    5. 'def' → logprob: -3.2987866401672363
    6. 'data' → logprob: -3.4237866401672363
    7. 'input' → logprob: -4.048786640167236
    8. 'import' → logprob: -5.048786640167236
    9. 'while' → logprob: -5.548786640167236
    10. 'start' → logprob: -5.798786640167236

Token 607: '????' (ID: 25883)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6324121952056885
    2. 'if' → logprob: -1.6324121952056885
    3. 'n' → logprob: -2.0074121952056885
    4. 'start' → logprob: -2.1324121952056885
    5. 'N' → logprob: -5.132411956787109
    6. 's' → logprob: -5.882411956787109
    7. 'lines' → logprob: -5.882411956787109
    8. 'input' → logprob: -6.132411956787109
    9. 'line' → logprob: -6.132411956787109
    10. 'def' → logprob: -7.257411956787109

Token 608: '?
' (ID: 3901)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7804506421089172
    2. 'start' → logprob: -1.4054505825042725
    3. 'for' → logprob: -2.0304505825042725
    4. 's' → logprob: -2.6554505825042725
    5. 'N' → logprob: -3.6554505825042725
    6. 'board' → logprob: -4.280450820922852
    7. '#' → logprob: -4.405450820922852
    8. 'if' → logprob: -4.530450820922852
    9. 'r' → logprob: -5.405450820922852
    10. 'input' → logprob: -5.405450820922852

Token 609: 'end' (ID: 419)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7262111902236938
    2. 'for' → logprob: -1.1012111902236938
    3. 'N' → logprob: -2.6012110710144043
    4. 'n' → logprob: -2.6012110710144043
    5. 'if' → logprob: -4.351211071014404
    6. 'end' → logprob: -5.351211071014404
    7. 'def' → logprob: -5.476211071014404
    8. 'input' → logprob: -5.601211071014404
    9. 'board' → logprob: -6.101211071014404
    10. 'lines' → logprob: -6.226211071014404

Token 610: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16026200354099274
    2. '=' → logprob: -1.9102619886398315
    3. ' =[' → logprob: -10.910262107849121
    4. '=[' → logprob: -11.410262107849121
    5. '=[]' → logprob: -12.910262107849121
    6. ' =(' → logprob: -13.785262107849121
    7. '＝' → logprob: -14.035262107849121
    8. ' ' → logprob: -14.285262107849121
    9. '=end' → logprob: -14.285262107849121
    10. '=(' → logprob: -14.410262107849121

Token 611: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04414568096399307
    2. '(' → logprob: -3.1691455841064453
    3. ' [' → logprob: -7.544145584106445
    4. 'list' → logprob: -7.669145584106445
    5. ' (' → logprob: -9.294145584106445
    6. 'tuple' → logprob: -10.419145584106445
    7. '(list' → logprob: -11.919145584106445
    8. '   ' → logprob: -12.169145584106445
    9. '[
' → logprob: -12.669145584106445
    10. '([' → logprob: -12.669145584106445

Token 612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004564135451801121
    2. '0' → logprob: -7.8754563331604
    3. ' ' → logprob: -9.500456809997559
    4. 'int' → logprob: -14.375456809997559
    5. '```' → logprob: -14.875456809997559
    6. '
' → logprob: -16.625455856323242
    7. 'i' → logprob: -16.625455856323242
    8. '8' → logprob: -16.875455856323242
    9. '１' → logprob: -16.937955856323242
    10. '[' → logprob: -17.062955856323242

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033677343162707984
    2. ' ,' → logprob: -8.250336647033691
    3. '2' → logprob: -9.500336647033691
    4. ',
' → logprob: -14.625336647033691
    5. ' ' → logprob: -16.250337600708008
    6. '<|end|>' → logprob: -17.500337600708008
    7. '‌,' → logprob: -18.625337600708008
    8. ',

' → logprob: -18.750337600708008
    9. ',#' → logprob: -19.000337600708008
    10. ',
' → logprob: -19.000337600708008

Token 614: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0802738870552275e-05
    2. ' ' → logprob: -11.50001049041748
    3. '２' → logprob: -14.37501049041748
    4. '
' → logprob: -17.125011444091797
    5. '   ' → logprob: -17.875011444091797
    6. '```' → logprob: -18.000011444091797
    7. '۲' → logprob: -18.125011444091797
    8. '3' → logprob: -18.875011444091797
    9. '8' → logprob: -19.000011444091797
    10. '

' → logprob: -19.000011444091797

Token 615: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003811234375461936
    2. '3' → logprob: -6.003811359405518
    3. ' ,' → logprob: -6.628811359405518
    4. ',
' → logprob: -11.37881088256836
    5. ' ' → logprob: -13.75381088256836
    6. '7' → logprob: -15.50381088256836
    7. ' ,
' → logprob: -16.25381088256836
    8. ',

' → logprob: -17.25381088256836
    9. ',
' → logprob: -17.37881088256836
    10. ',...' → logprob: -17.62881088256836

Token 616: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '３' → logprob: -17.500001907348633
    4. '۳' → logprob: -20.125001907348633
    5. '३' → logprob: -22.375001907348633
    6. '৩' → logprob: -23.000001907348633
    7. ' three' → logprob: -23.875001907348633
    8. '' → logprob: -24.000001907348633
    9. '٣' → logprob: -24.000001907348633
    10. '
' → logprob: -24.250001907348633

Token 617: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006204616511240602
    2. ' ,' → logprob: -7.500620365142822
    3. '4' → logprob: -9.75062084197998
    4. ',
' → logprob: -11.87562084197998
    5. '7' → logprob: -13.75062084197998
    6. ']' → logprob: -14.00062084197998
    7. '0' → logprob: -16.125619888305664
    8. ' ' → logprob: -16.375619888305664
    9. ' ,
' → logprob: -17.125619888305664
    10. ',

' → logprob: -17.375619888305664

Token 618: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00033581978641450405
    2. ' ' → logprob: -8.000335693359375
    3. '8' → logprob: -15.125335693359375
    4. '7' → logprob: -16.250335693359375
    5. '0' → logprob: -17.500335693359375
    6. '   ' → logprob: -19.375335693359375
    7. '  ' → logprob: -19.500335693359375
    8. '４' → logprob: -19.750335693359375
    9. '
' → logprob: -20.125335693359375
    10. '  
' → logprob: -20.375335693359375

Token 619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002525184245314449
    2. '5' → logprob: -8.375252723693848
    3. ' ,' → logprob: -10.750252723693848
    4. ',
' → logprob: -14.875252723693848
    5. '7' → logprob: -15.875252723693848
    6. ' ' → logprob: -18.75025177001953
    7. '6' → logprob: -19.25025177001953
    8. '   ' → logprob: -19.37525177001953
    9. ',\
' → logprob: -20.25025177001953
    10. '0' → logprob: -20.37525177001953

Token 620: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -18.000009536743164
    4. '５' → logprob: -18.125009536743164
    5. '
' → logprob: -19.500009536743164
    6. '8' → logprob: -19.625009536743164
    7. '۵' → logprob: -19.875009536743164
    8. '   ' → logprob: -20.500009536743164
    9. '  ' → logprob: -20.750009536743164
    10. ' 
' → logprob: -21.375009536743164

Token 621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002553793019615114
    2. ' ,' → logprob: -8.750255584716797
    3. '6' → logprob: -9.250255584716797
    4. '7' → logprob: -14.625255584716797
    5. ' ' → logprob: -15.250255584716797
    6. ',
' → logprob: -17.500255584716797
    7. '   ' → logprob: -18.625255584716797
    8. '<|end|>' → logprob: -18.625255584716797
    9. ']' → logprob: -19.250255584716797
    10. '_,' → logprob: -19.625255584716797

Token 622: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -17.875009536743164
    4. '' → logprob: -19.625009536743164
    5. '６' → logprob: -19.875009536743164
    6. '
' → logprob: -20.250009536743164
    7. '۶' → logprob: -20.250009536743164
    8. '   ' → logprob: -20.875009536743164
    9. '৬' → logprob: -21.500009536743164
    10. '६' → logprob: -21.625009536743164

Token 623: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003278368094470352
    2. '7' → logprob: -8.250328063964844
    3. ' ,' → logprob: -9.625328063964844
    4. ',
' → logprob: -14.750328063964844
    5. ' ' → logprob: -19.250328063964844
    6. '，' → logprob: -19.500328063964844
    7. ']' → logprob: -19.625328063964844
    8. ',
' → logprob: -19.625328063964844
    9. '' → logprob: -19.750328063964844
    10. ',\
' → logprob: -19.750328063964844

Token 624: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -15.50001049041748
    4. '
' → logprob: -19.375009536743164
    5. '７' → logprob: -20.000009536743164
    6. '۷' → logprob: -21.250009536743164
    7. '

' → logprob: -21.500009536743164
    8. '   ' → logprob: -21.750009536743164
    9. '  ' → logprob: -21.875009536743164
    10. '' → logprob: -21.937509536743164

Token 625: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044401636114344
    2. ' ,' → logprob: -7.750443935394287
    3. '7' → logprob: -11.375444412231445
    4. '8' → logprob: -13.375444412231445
    5. ',
' → logprob: -15.875444412231445
    6. '0' → logprob: -15.875444412231445
    7. ' ' → logprob: -17.750444412231445
    8. '9' → logprob: -18.375444412231445
    9. ',\
' → logprob: -19.125444412231445
    10. '_,' → logprob: -19.500444412231445

Token 626: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.014165041036903858
    2. '0' → logprob: -4.264164924621582
    3. ' ' → logprob: -13.389164924621582
    4. '7' → logprob: -17.1391658782959
    5. '８' → logprob: -19.7641658782959
    6. '08' → logprob: -20.1391658782959
    7. '' → logprob: -20.2641658782959
    8. 'eight' → logprob: -20.8891658782959
    9. '   ' → logprob: -21.0141658782959
    10. '
' → logprob: -21.0141658782959

Token 627: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005001319805160165
    2. '0' → logprob: -8.125499725341797
    3. ' ,' → logprob: -8.500499725341797
    4. ',
' → logprob: -14.500499725341797
    5. ' ' → logprob: -15.250499725341797
    6. ']' → logprob: -17.875499725341797
    7. ',\
' → logprob: -18.000499725341797
    8. ',
' → logprob: -18.125499725341797
    9. '9' → logprob: -18.250499725341797
    10. '_,' → logprob: -18.625499725341797

Token 628: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '9' → logprob: -17.37520408630371
    4. '
' → logprob: -18.75020408630371
    5. '０' → logprob: -19.62520408630371
    6. '

' → logprob: -20.00020408630371
    7. '۰' → logprob: -20.00020408630371
    8. '  ' → logprob: -20.81270408630371
    9. '   ' → logprob: -21.12520408630371
    10. '০' → logprob: -21.43770408630371

Token 629: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029955735430121422
    2. ')' → logprob: -3.5299556255340576
    3. ']
' → logprob: -9.279955863952637
    4. '])' → logprob: -9.529955863952637
    5. ' ]' → logprob: -11.154955863952637
    6. ')]' → logprob: -11.654955863952637
    7. ')
' → logprob: -12.279955863952637
    8. '<|end|>' → logprob: -12.904955863952637
    9. '']' → logprob: -13.404955863952637
    10. '#' → logprob: -13.779955863952637

Token 630: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3145715594291687
    2. 'start' → logprob: -1.3145716190338135
    3. 'n' → logprob: -7.314571380615234
    4. 'board' → logprob: -8.314571380615234
    5. 'def' → logprob: -8.689571380615234
    6. 'N' → logprob: -8.939571380615234
    7. 's' → logprob: -10.689571380615234
    8. 'line' → logprob: -10.689571380615234
    9. 'lines' → logprob: -10.939571380615234
    10. '#' → logprob: -11.814571380615234

Token 631: ' ??' (ID: 16605)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1028824895620346
    2. 'for' → logprob: -2.3528823852539062
    3. 'n' → logprob: -7.102882385253906
    4. 'N' → logprob: -7.602882385253906
    5. 'board' → logprob: -7.602882385253906
    6. 's' → logprob: -7.977882385253906
    7. 'data' → logprob: -8.977882385253906
    8. 'lines' → logprob: -9.352882385253906
    9. 'line' → logprob: -9.477882385253906
    10. 'input' → logprob: -10.102882385253906

Token 632: '\' (ID: 59)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05920887365937233
    2. 'start' → logprob: -2.934208869934082
    3. 'board' → logprob: -5.934208869934082
    4. ' for' → logprob: -7.184208869934082
    5. 'while' → logprob: -8.434208869934082
    6. 'data' → logprob: -8.684208869934082
    7. 's' → logprob: -9.434208869934082
    8. 'boards' → logprob: -9.434208869934082
    9. 'import' → logprob: -9.684208869934082
    10. 'line' → logprob: -9.809208869934082

Token 633: '???
' (ID: 136325)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0648798793554306
    2. 'start' → logprob: -3.189879894256592
    3. 'lines' → logprob: -4.939879894256592
    4. 'board' → logprob: -5.189879894256592
    5. 'data' → logprob: -5.314879894256592
    6. ' for' → logprob: -6.314879894256592
    7. 'line' → logprob: -6.939879894256592
    8. 'while' → logprob: -8.189879417419434
    9. 'boards' → logprob: -8.439879417419434
    10. 'import' → logprob: -8.689879417419434

Token 634: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.021580755710601807
    2. 'for' → logprob: -4.021580696105957
    3. 'board' → logprob: -5.896580696105957
    4. 'def' → logprob: -8.271580696105957
    5. 'n' → logprob: -9.021580696105957
    6. 'N' → logprob: -9.521580696105957
    7. 'lines' → logprob: -9.771580696105957
    8. 's' → logprob: -10.146580696105957
    9. 'initial' → logprob: -10.396580696105957
    10. 'input' → logprob: -10.521580696105957

Token 635: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134801685810089
    2. '=' → logprob: -1.3134801387786865
    3. ' =[' → logprob: -9.063480377197266
    4. '=[' → logprob: -10.813480377197266
    5. '=[]' → logprob: -10.813480377197266
    6. '=input' → logprob: -10.813480377197266
    7. '[:]' → logprob: -11.438480377197266
    8. '[' → logprob: -11.438480377197266
    9. ',' → logprob: -12.313480377197266
    10. '＝' → logprob: -12.313480377197266

Token 636: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.029562093317508698
    2. '[' → logprob: -4.029561996459961
    3. '[list' → logprob: -4.529561996459961
    4. ' list' → logprob: -7.529561996459961
    5. '[]' → logprob: -11.404561996459961
    6. ' [' → logprob: -12.404561996459961
    7. '(list' → logprob: -13.404561996459961
    8. '[int' → logprob: -13.529561996459961
    9. '[l' → logprob: -13.779561996459961
    10. '[List' → logprob: -13.904561996459961

Token 637: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0076631708070635796
    2. '1' → logprob: -5.507663249969482
    3. '0' → logprob: -6.382663249969482
    4. '*' → logprob: -7.632663249969482
    5. ']' → logprob: -7.882663249969482
    6. ' int' → logprob: -8.257662773132324
    7. '3' → logprob: -8.632662773132324
    8. ']int' → logprob: -9.132662773132324
    9. '9' → logprob: -9.507662773132324
    10. '7' → logprob: -9.507662773132324

Token 638: '(n' (ID: 2406)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0405583418905735
    2. '(i' → logprob: -3.540558338165283
    3. '(stdin' → logprob: -4.915558338165283
    4. '(s' → logprob: -6.040558338165283
    5. '(n' → logprob: -7.790558338165283
    6. '(ch' → logprob: -8.665558815002441
    7. '(a' → logprob: -8.915558815002441
    8. '(c' → logprob: -9.290558815002441
    9. '(' → logprob: -10.290558815002441
    10. '(st' → logprob: -10.540558815002441

Token 639: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1970919519662857
    2. '()' → logprob: -2.197092056274414
    3. '(i' → logprob: -3.072092056274414
    4. '(n' → logprob: -4.072092056274414
    5. '(s' → logprob: -5.947092056274414
    6. '(line' → logprob: -8.197092056274414
    7. '(stdin' → logprob: -8.197092056274414
    8. '(token' → logprob: -8.322092056274414
    9. '(input' → logprob: -8.572092056274414
    10. ')' → logprob: -8.697092056274414

Token 640: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5640634894371033
    2. 'for' → logprob: -1.314063549041748
    3. ' for' → logprob: -2.439063549041748
    4. '()' → logprob: -2.814063549041748
    5. '(i' → logprob: -4.439063549041748
    6. '(n' → logprob: -6.189063549041748
    7. '(s' → logprob: -7.064063549041748
    8. 'x' → logprob: -8.81406307220459
    9. '(stdin' → logprob: -9.68906307220459
    10. 'in' → logprob: -9.81406307220459

Token 641: ' _' (ID: 1175)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.3871985375881195
    2. ' stdin' → logprob: -1.137198567390442
    3. '(stdin' → logprob: -8.137198448181152
    4. '.stdin' → logprob: -10.387198448181152
    5. ' line' → logprob: -13.887198448181152
    6. ' ' → logprob: -13.887198448181152
    7. 'line' → logprob: -14.512198448181152
    8. '   ' → logprob: -14.887198448181152
    9. 'st' → logprob: -15.137198448181152
    10. '  ' → logprob: -15.512198448181152

Token 642: ' in' (ID: 306)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.20705591142177582
    2. ' stdin' → logprob: -1.707055926322937
    3. ' in' → logprob: -5.832056045532227
    4. 'in' → logprob: -6.332056045532227
    5. '(stdin' → logprob: -7.957056045532227
    6. 'input' → logprob: -8.207056045532227
    7. ' line' → logprob: -9.457056045532227
    8. 'line' → logprob: -9.707056045532227
    9. ' input' → logprob: -9.832056045532227
    10. '.stdin' → logprob: -9.957056045532227

Token 643: ' range' (ID: 3352)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.001958371140062809
    2. ' stdin' → logprob: -6.25195837020874
    3. '(stdin' → logprob: -10.626958847045898
    4. '.stdin' → logprob: -12.376958847045898
    5. 'std' → logprob: -14.251958847045898
    6. 'stdout' → logprob: -15.376958847045898
    7. 'st' → logprob: -16.1269588470459
    8. 'input' → logprob: -16.5019588470459
    9. ' ' → logprob: -16.8769588470459
    10. '   ' → logprob: -17.5019588470459

Token 644: '(' (ID: 7)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.6087021473795176e-05
    2. ' ' → logprob: -10.125045776367188
    3. '(' → logprob: -12.500045776367188
    4. '3' → logprob: -13.875045776367188
    5. 'input' → logprob: -14.375045776367188
    6. 'stdin' → logprob: -15.250045776367188
    7. ')' → logprob: -15.875045776367188
    8. '1' → logprob: -16.500045776367188
    9. ',' → logprob: -16.750045776367188
    10. '0' → logprob: -16.875045776367188

Token 645: '3' (ID: 18)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.587483221665025e-05
    2. ' ' → logprob: -9.750065803527832
    3. '3' → logprob: -13.125065803527832
    4. ')' → logprob: -13.125065803527832
    5. '(' → logprob: -13.625065803527832
    6. '0' → logprob: -14.500065803527832
    7. '1' → logprob: -15.125065803527832
    8. 'len' → logprob: -15.125065803527832
    9. 'input' → logprob: -15.125065803527832
    10. '
' → logprob: -15.500065803527832

Token 646: ')' (ID: 8)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025694756768643856
    2. ')' → logprob: -6.377569675445557
    3. '())' → logprob: -8.627569198608398
    4. '()' → logprob: -8.877569198608398
    5. '()]' → logprob: -8.877569198608398
    6. ')]' → logprob: -9.127569198608398
    7. '(len' → logprob: -9.252569198608398
    8. '3' → logprob: -9.752569198608398
    9. ']' → logprob: -10.002569198608398
    10. '(stdin' → logprob: -10.627569198608398

Token 647: ' for' (ID: 395)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.11900940537452698
    2. 'stdin' → logprob: -2.244009494781494
    3. 'input' → logprob: -6.244009494781494
    4. '(input' → logprob: -6.244009494781494
    5. '(' → logprob: -6.869009494781494
    6. ' stdin' → logprob: -7.994009494781494
    7. 'range' → logprob: -7.994009494781494
    8. 'in' → logprob: -8.619009017944336
    9. '()' → logprob: -9.119009017944336
    10. '(range' → logprob: -9.244009017944336

Token 648: ' n' (ID: 297)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -1.3958345651626587
    2. ' stdin' → logprob: -1.6458345651626587
    3. 'stdin' → logprob: -1.7708345651626587
    4. ' range' → logprob: -1.8958345651626587
    5. 'map' → logprob: -2.645834445953369
    6. '[' → logprob: -2.770834445953369
    7. 'range' → logprob: -3.270834445953369
    8. ' n' → logprob: -3.770834445953369
    9. 'n' → logprob: -4.395834445953369
    10. '(stdin' → logprob: -4.520834445953369

Token 649: ' in' (ID: 306)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.9120433330535889
    2. 'stdin' → logprob: -1.0370433330535889
    3. ' stdin' → logprob: -2.037043333053589
    4. ' in' → logprob: -2.787043333053589
    5. 'in' → logprob: -3.162043333053589
    6. '.stdin' → logprob: -5.162043571472168
    7. ' std' → logprob: -6.662043571472168
    8. 'std' → logprob: -6.787043571472168
    9. ' map' → logprob: -8.162043571472168
    10. 'map' → logprob: -8.287043571472168

Token 650: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.007965855300426483
    2. 'map' → logprob: -5.007966041564941
    3. ' stdin' → logprob: -7.132966041564941
    4. '(stdin' → logprob: -8.632966041564941
    5. 'list' → logprob: -8.757966041564941
    6. ' map' → logprob: -9.632966041564941
    7. '.stdin' → logprob: -10.632966041564941
    8. '[' → logprob: -11.382966041564941
    9. 'input' → logprob: -12.257966041564941
    10. 'std' → logprob: -12.757966041564941

Token 651: '.readline' (ID: 74673)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3875857889652252
    2. '.readline' → logprob: -1.1375857591629028
    3. '()]' → logprob: -8.012585639953613
    4. '()' → logprob: -8.137585639953613
    5. '.read' → logprob: -10.137585639953613
    6. '())' → logprob: -10.137585639953613
    7. 'read' → logprob: -12.512585639953613
    8. '.readlines' → logprob: -13.262585639953613
    9. '.split' → logprob: -13.887585639953613
    10. '(stdin' → logprob: -14.012585639953613

Token 652: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001427538663847372
    2. '()' → logprob: -8.875143051147461
    3. '()[' → logprob: -14.125143051147461
    4. '(' → logprob: -14.250143051147461
    5. ' ().' → logprob: -14.250143051147461
    6. 'split' → logprob: -15.375143051147461
    7. '.split' → logprob: -15.375143051147461
    8. '.strip' → logprob: -16.00014305114746
    9. '())' → logprob: -16.12514305114746
    10. '()]' → logprob: -16.25014305114746

Token 653: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.1305496245622635
    2. 'strip' → logprob: -2.130549669265747
    3. 'rstrip' → logprob: -5.630549430847168
    4. ' split' → logprob: -10.880549430847168
    5. '(split' → logprob: -11.880549430847168
    6. ' strip' → logprob: -13.505549430847168
    7. '(strip' → logprob: -14.755549430847168
    8. 'replace' → logprob: -15.255549430847168
    9. 'read' → logprob: -15.255549430847168
    10. '().' → logprob: -15.630549430847168

Token 654: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.005499241407960653
    2. '()' → logprob: -5.255499362945557
    3. '())' → logprob: -8.255498886108398
    4. '(' → logprob: -13.380498886108398
    5. ')]' → logprob: -13.505498886108398
    6. '()][' → logprob: -14.130498886108398
    7. '()]
' → logprob: -14.255498886108398
    8. ']' → logprob: -14.255498886108398
    9. ']()' → logprob: -15.255498886108398
    10. '(),' → logprob: -15.755498886108398

Token 655: ' ]

' (ID: 32229)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0012953581754118204
    2. '()' → logprob: -7.001295566558838
    3. ']' → logprob: -8.00129508972168
    4. '(' → logprob: -10.87629508972168
    5. '()][' → logprob: -11.25129508972168
    6. ']()' → logprob: -11.87629508972168
    7. '())' → logprob: -12.62629508972168
    8. '()]
' → logprob: -12.75129508972168
    9. ')]' → logprob: -13.25129508972168
    10. ' ()' → logprob: -13.75129508972168

Token 656: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.472211968386546e-05
    2. ')' → logprob: -9.750094413757324
    3. 'end' → logprob: -11.375094413757324
    4. 'if' → logprob: -11.625094413757324
    5. '<|end|>' → logprob: -12.000094413757324
    6. '#print' → logprob: -12.750094413757324
    7. ')
' → logprob: -13.125094413757324
    8. '
' → logprob: -13.125094413757324
    9. ' print' → logprob: -14.625094413757324
    10. '```' → logprob: -15.125094413757324

Token 657: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.31545013189315796
    2. 'start' → logprob: -1.3154501914978027
    3. ' __' → logprob: -6.315450191497803
    4. ' ' → logprob: -8.815449714660645
    5. '(start' → logprob: -9.065449714660645
    6. '__' → logprob: -9.690449714660645
    7. ' tuple' → logprob: -11.315449714660645
    8. 'tuple' → logprob: -11.690449714660645
    9. 'count' → logprob: -11.815449714660645
    10. ' count' → logprob: -11.815449714660645

Token 658: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5760363936424255
    2. '!=' → logprob: -0.8260363936424255
    3. '[' → logprob: -10.45103645324707
    4. '==' → logprob: -10.70103645324707
    5. ')!=' → logprob: -11.20103645324707
    6. '!=(' → logprob: -11.57603645324707
    7. '()!=' → logprob: -11.70103645324707
    8. ' ==' → logprob: -12.07603645324707
    9. ']!=' → logprob: -12.70103645324707
    10. '!="' → logprob: -13.32603645324707

Token 659: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0024758970830589533
    2. ' end' → logprob: -6.002475738525391
    3. '[end' → logprob: -16.50247573852539
    4. '(end' → logprob: -16.87747573852539
    5. '=end' → logprob: -17.50247573852539
    6. '   ' → logprob: -18.50247573852539
    7. ' ' → logprob: -18.87747573852539
    8. '	end' → logprob: -19.50247573852539
    9. ''end' → logprob: -20.12747573852539
    10. '[' → logprob: -21.50247573852539

Token 660: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030366552527993917
    2. ':
' → logprob: -6.0030364990234375
    3. ' :' → logprob: -7.5030364990234375
    4. ' :
' → logprob: -12.503036499023438
    5. ':return' → logprob: -12.503036499023438
    6. 'print' → logprob: -14.378036499023438
    7. '():' → logprob: -14.753036499023438
    8. ':
' → logprob: -14.753036499023438
    9. ' print' → logprob: -16.003036499023438
    10. '.' → logprob: -16.378036499023438

Token 661: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005357194691896439
    2. 'print' → logprob: -5.380357265472412
    3. ' print' → logprob: -8.130356788635254
    4. '
' → logprob: -8.755356788635254
    5. '\n' → logprob: -9.380356788635254
    6. '    
' → logprob: -9.880356788635254
    7. ':
' → logprob: -10.130356788635254
    8. ':' → logprob: -10.505356788635254
    9. '	print' → logprob: -10.755356788635254
    10. '#print' → logprob: -11.380356788635254

Token 662: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.4849443838757e-06
    2. '0' → logprob: -12.875004768371582
    3. ' print' → logprob: -13.750004768371582
    4. '   ' → logprob: -14.625004768371582
    5. '	print' → logprob: -15.375004768371582
    6. 'pass' → logprob: -17.000003814697266
    7. 'pr' → logprob: -17.875003814697266
    8. 'prin' → logprob: -17.875003814697266
    9. '#print' → logprob: -18.125003814697266
    10. 'exit' → logprob: -18.375003814697266

Token 663: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06217942759394646
    2. '0' → logprob: -2.8121793270111084
    3. '(count' → logprob: -8.937179565429688
    4. '("' → logprob: -10.062179565429688
    5. '('' → logprob: -11.312179565429688
    6. 'count' → logprob: -11.562179565429688
    7. ' (' → logprob: -11.937179565429688
    8. '(
' → logprob: -11.937179565429688
    9. '()' → logprob: -13.812179565429688
    10. '"' → logprob: -14.812179565429688

Token 664: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.590104698669165e-05
    2. 'count' → logprob: -9.375085830688477
    3. ' ' → logprob: -14.750085830688477
    4. '"' → logprob: -14.750085830688477
    5. ''' → logprob: -16.750085830688477
    6. '-' → logprob: -17.875085830688477
    7. '1' → logprob: -18.000085830688477
    8. '00' → logprob: -18.000085830688477
    9. 'start' → logprob: -18.000085830688477
    10. '`' → logprob: -18.250085830688477

Token 665: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47410327196121216
    2. ')
' → logprob: -0.9741032719612122
    3. 'else' → logprob: -11.724102973937988
    4. ' )' → logprob: -12.349102973937988
    5. ')
' → logprob: -12.349102973937988
    6. ' )
' → logprob: -12.474102973937988
    7. '   ' → logprob: -13.099102973937988
    8. ')

' → logprob: -13.099102973937988
    9. '
' → logprob: -14.224102973937988
    10. ')return' → logprob: -14.599102973937988

Token 666: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00014096579980105162
    2. ' else' → logprob: -9.125141143798828
    3. 'elif' → logprob: -11.000141143798828
    4. '
' → logprob: -12.000141143798828
    5. ')' → logprob: -12.625141143798828
    6. ':
' → logprob: -13.125141143798828
    7. '```' → logprob: -14.250141143798828
    8. '_else' → logprob: -14.500141143798828
    9. ':' → logprob: -15.000141143798828
    10. '}else' → logprob: -15.000141143798828

Token 667: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03473159670829773
    2. ':
' → logprob: -3.40973162651062
    3. '   ' → logprob: -6.909731388092041
    4. '():
' → logprob: -10.7847318649292
    5. '():' → logprob: -11.1597318649292
    6. '(' → logprob: -11.6597318649292
    7. 'print' → logprob: -12.0347318649292
    8. '):' → logprob: -12.1597318649292
    9. '):
' → logprob: -12.2847318649292
    10. ' :' → logprob: -12.4097318649292

Token 668: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05052071809768677
    2. '   ' → logprob: -3.175520658493042
    3. 'count' → logprob: -5.425520896911621
    4. ' print' → logprob: -5.800520896911621
    5. ' count' → logprob: -10.050520896911621
    6. '	print' → logprob: -11.300520896911621
    7. ' ' → logprob: -12.675520896911621
    8. '    
' → logprob: -12.925520896911621
    9. '```' → logprob: -14.050520896911621
    10. '  ' → logprob: -14.175520896911621

Token 669: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.003026314079761505
    2. 'count' → logprob: -6.003026485443115
    3. 'bf' → logprob: -7.628026485443115
    4. ' print' → logprob: -10.003026008605957
    5. 'result' → logprob: -12.128026008605957
    6. '   ' → logprob: -12.503026008605957
    7. 'cnt' → logprob: -13.003026008605957
    8. 'ans' → logprob: -13.253026008605957
    9. ' bf' → logprob: -13.628026008605957
    10. 'pr' → logprob: -13.878026008605957

Token 670: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00022570860164705664
    2. '(' → logprob: -8.625226020812988
    3. 'bf' → logprob: -10.375226020812988
    4. '(count' → logprob: -11.250226020812988
    5. 'count' → logprob: -14.000226020812988
    6. 'b' → logprob: -14.125226020812988
    7. '((' → logprob: -16.250225067138672
    8. ' (' → logprob: -17.000225067138672
    9. '(bp' → logprob: -17.000225067138672
    10. ' bf' → logprob: -17.125225067138672

Token 671: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0280383548888494e-06
    2. '_search' → logprob: -14.625000953674316
    3. 'r' → logprob: -15.375000953674316
    4. 'fs' → logprob: -15.625000953674316
    5. '_f' → logprob: -16.500001907348633
    6. 'search' → logprob: -17.375001907348633
    7. 'F' → logprob: -17.750001907348633
    8. '	f' → logprob: -17.875001907348633
    9. 'd' → logprob: -18.750001907348633
    10. 't' → logprob: -18.875001907348633

Token 672: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: 0.0
    2. 'search' → logprob: -17.875
    3. '_se' → logprob: -19.75
    4. '_SEARCH' → logprob: -21.0
    5. '_' → logprob: -21.5
    6. '_seek' → logprob: -22.375
    7. '_Search' → logprob: -22.625
    8. '_find' → logprob: -23.375
    9. '_s' → logprob: -23.375
    10. '_start' → logprob: -23.375

Token 673: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -2.5107177862082608e-05
    2. 'start' → logprob: -10.750024795532227
    3. '(' → logprob: -12.875024795532227
    4. ',start' → logprob: -14.250024795532227
    5. '(end' → logprob: -15.375024795532227
    6. ')' → logprob: -15.875024795532227
    7. '[start' → logprob: -17.000024795532227
    8. '(Start' → logprob: -18.250024795532227
    9. ')(' → logprob: -18.500024795532227
    10. ' (' → logprob: -18.500024795532227

Token 674: ',end' (ID: 93014)
  Prédit: ',end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',end' → logprob: -0.0019405345665290952
    2. ',' → logprob: -6.251940727233887
    3. ' ,' → logprob: -11.501940727233887
    4. '(end' → logprob: -13.501940727233887
    5. 'end' → logprob: -15.251940727233887
    6. '[end' → logprob: -16.37693977355957
    7. ':end' → logprob: -17.37693977355957
    8. ')' → logprob: -17.37693977355957
    9. ',en' → logprob: -17.87693977355957
    10. ',(' → logprob: -18.37693977355957

Token 675: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20343121886253357
    2. ')' → logprob: -1.703431248664856
    3. '())' → logprob: -6.578431129455566
    4. '()))' → logprob: -7.453431129455566
    5. ' ))' → logprob: -11.078431129455566
    6. '()' → logprob: -11.203431129455566
    7. '))
' → logprob: -11.578431129455566
    8. ' )' → logprob: -12.828431129455566
    9. ')))' → logprob: -13.078431129455566
    10. '(' → logprob: -14.078431129455566


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 673
Tokens correctement prédits (1ère position, stricte): 176
Tokens correctement prédits (1ère position, avec adaptation): 196
Tokens correctement prédits (top 10): 347
Précision stricte (1ère position): 26.15%
Précision adaptée (1ère position): 29.12%
Précision (top 10): 51.56%
================================================================================
