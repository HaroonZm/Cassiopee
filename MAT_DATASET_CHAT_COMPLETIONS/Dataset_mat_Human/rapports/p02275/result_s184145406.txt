================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def CountingSort(A,k):
    C=[0]*(k+1)
    for a in A:
        C[a]+=1
    for i in range(k):
        C[i+1]+=C[i]
    ret=[0]*len(A)
    for a in A[::-1]:
        ret[C[a]-1]=a
        C[a]-=1
    return ret
n=int(input())
A=list(map(int,input().split()))
print(*CountingSort(A,max(A)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' Counting' (ID: 150614)
  → Token d'amorce (pas de prédiction)

Token 2: 'Sort' (ID: 11602)
  → Token d'amorce (pas de prédiction)

Token 3: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001757696009008214
    2. ':' → logprob: -9.250175476074219
    3. '```' → logprob: -10.875175476074219
    4. '_' → logprob: -11.000175476074219
    5. '(:' → logprob: -11.375175476074219
    6. ' (' → logprob: -11.500175476074219
    7. '[' → logprob: -12.250175476074219
    8. '():' → logprob: -12.875175476074219
    9. ''' → logprob: -13.625175476074219
    10. '.' → logprob: -14.000175476074219

Token 4: ',k' (ID: 35155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23738202452659607
    2. ')' → logprob: -2.237381935119629
    3. ',' → logprob: -2.487381935119629
    4. '):' → logprob: -3.987381935119629
    5. '[A' → logprob: -7.362381935119629
    6. '(' → logprob: -7.362381935119629
    7. '```' → logprob: -7.362381935119629
    8. '<|end|>' → logprob: -8.112381935119629
    9. '[
' → logprob: -8.987381935119629
    10. ':' → logprob: -9.487381935119629

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012789919041097164
    2. ')' → logprob: -4.387789726257324
    3. ':' → logprob: -8.262789726257324
    4. ',' → logprob: -12.012789726257324
    5. ''):' → logprob: -12.387789726257324
    6. '```' → logprob: -12.387789726257324
    7. '):
' → logprob: -12.512789726257324
    8. '**' → logprob: -14.012789726257324
    9. ')：' → logprob: -14.637789726257324
    10. '   ' → logprob: -14.887789726257324

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00509334122762084
    2. ':
' → logprob: -5.630093574523926
    3. '   ' → logprob: -6.880093574523926
    4. '  
' → logprob: -9.005093574523926
    5. '```' → logprob: -9.880093574523926
    6. '    
' → logprob: -10.130093574523926
    7. ' ' → logprob: -10.130093574523926
    8. '":' → logprob: -10.130093574523926
    9. '':' → logprob: -10.505093574523926
    10. '"' → logprob: -10.880093574523926

Token 7: ' C' (ID: 363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07563209533691406
    2. '    ' → logprob: -3.325632095336914
    3. '```' → logprob: -4.325632095336914
    4. '`' → logprob: -5.200632095336914
    5. '    
' → logprob: -5.825632095336914
    6. ' ' → logprob: -5.950632095336914
    7. 'n' → logprob: -6.700632095336914
    8. '       ' → logprob: -6.950632095336914
    9. '	count' → logprob: -7.200632095336914
    10. '\n' → logprob: -7.200632095336914

Token 8: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6954635381698608
    2. ' =' → logprob: -0.8204635381698608
    3. '[' → logprob: -2.8204636573791504
    4. '=[]' → logprob: -7.57046365737915
    5. '=[' → logprob: -8.570463180541992
    6. '[:]' → logprob: -8.695463180541992
    7. '[]' → logprob: -9.070463180541992
    8. ',' → logprob: -9.570463180541992
    9. ' ' → logprob: -9.695463180541992
    10. '  ' → logprob: -9.695463180541992

Token 9: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.375045776367188
    4. '  ' → logprob: -19.000045776367188
    5. '۰' → logprob: -19.250045776367188
    6. ']' → logprob: -19.625045776367188
    7. ')' → logprob: -19.875045776367188
    8. ' ' → logprob: -20.250045776367188
    9. '```' → logprob: -20.375045776367188
    10. '    ' → logprob: -20.375045776367188

Token 10: ']*(' (ID: 92627)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.7330182790756226
    2. ']*(' → logprob: -1.2330182790756226
    3. ']' → logprob: -1.4830182790756226
    4. ' for' → logprob: -6.858018398284912
    5. ' ]' → logprob: -9.483017921447754
    6. 'for' → logprob: -10.358017921447754
    7. ',' → logprob: -12.108017921447754
    8. ']+' → logprob: -12.108017921447754
    9. ' ' → logprob: -12.483017921447754
    10. ')' → logprob: -13.608017921447754

Token 11: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.704273118884885e-07
    2. ' k' → logprob: -14.625000953674316
    3. '(k' → logprob: -16.0
    4. ' ' → logprob: -17.375
    5. '   ' → logprob: -18.625
    6. 'len' → logprob: -18.75
    7. '  ' → logprob: -19.375
    8. '{k' → logprob: -19.875
    9. ')' → logprob: -20.0
    10. '	k' → logprob: -20.375

Token 12: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00023071514442563057
    2. ' +' → logprob: -8.37523078918457
    3. ' ' → logprob: -17.25023078918457
    4. '+k' → logprob: -17.25023078918457
    5. '+
' → logprob: -17.37523078918457
    6. '+)' → logprob: -17.62523078918457
    7. '＋' → logprob: -18.12523078918457
    8. ' plus' → logprob: -18.37523078918457
    9. ')' → logprob: -18.87523078918457
    10. '1' → logprob: -19.25023078918457

Token 13: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '  ' → logprob: -17.00002098083496
    4. ')' → logprob: -17.25002098083496
    5. '```' → logprob: -18.00002098083496
    6. '   ' → logprob: -18.12502098083496
    7. '2' → logprob: -18.25002098083496
    8. '１' → logprob: -18.62502098083496
    9. '    ' → logprob: -19.62502098083496
    10. '

' → logprob: -19.87502098083496

Token 14: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ')
' → logprob: -13.625004768371582
    3. ' )' → logprob: -13.750004768371582
    4. '`)' → logprob: -13.750004768371582
    5. '<|end|>' → logprob: -15.250004768371582
    6. ')return' → logprob: -15.375004768371582
    7. '')' → logprob: -15.750004768371582
    8. '),' → logprob: -16.0000057220459
    9. '```' → logprob: -16.0000057220459
    10. ')`' → logprob: -16.0000057220459

Token 15: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7346882224082947
    2. 'for' → logprob: -0.7346882224082947
    3. '
' → logprob: -3.6096882820129395
    4. ' 
' → logprob: -5.6096882820129395
    5. '  
' → logprob: -5.8596882820129395
    6. ' ' → logprob: -6.3596882820129395
    7. '    
' → logprob: -6.7346882820129395
    8. '	for' → logprob: -6.8596882820129395
    9. '   
' → logprob: -6.8596882820129395
    10. '   ' → logprob: -6.9846882820129395

Token 16: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11645904183387756
    2. ' for' → logprob: -2.2414591312408447
    3. ' ' → logprob: -6.616458892822266
    4. '    
' → logprob: -7.866458892822266
    5. '   ' → logprob: -7.991458892822266
    6. '
' → logprob: -7.991458892822266
    7. '  
' → logprob: -8.241458892822266
    8. '\n' → logprob: -8.366458892822266
    9. '```' → logprob: -8.616458892822266
    10. ' 
' → logprob: -8.741458892822266

Token 17: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23300397396087646
    2. ' x' → logprob: -2.108004093170166
    3. 'i' → logprob: -2.983004093170166
    4. ' ' → logprob: -3.858004093170166
    5. 'x' → logprob: -4.358004093170166
    6. ' a' → logprob: -7.233004093170166
    7. '   ' → logprob: -7.983004093170166
    8. '  ' → logprob: -8.858003616333008
    9. 'a' → logprob: -8.983003616333008
    10. ' A' → logprob: -9.233003616333008

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.028663702309131622
    2. 'in' → logprob: -3.6536636352539062
    3. ' ' → logprob: -6.653663635253906
    4. 'n' → logprob: -7.028663635253906
    5. '   ' → logprob: -10.028663635253906
    6. ' n' → logprob: -10.278663635253906
    7. 'i' → logprob: -10.403663635253906
    8. '  ' → logprob: -10.778663635253906
    9. ' i' → logprob: -10.903663635253906
    10. 'a' → logprob: -11.778663635253906

Token 19: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.029757322743535042
    2. ' A' → logprob: -3.529757261276245
    3. ' ' → logprob: -12.279757499694824
    4. '  ' → logprob: -14.154757499694824
    5. '	A' → logprob: -14.779757499694824
    6. 'a' → logprob: -15.279757499694824
    7. '   ' → logprob: -15.529757499694824
    8. 'range' → logprob: -15.904757499694824
    9. '(A' → logprob: -16.404756546020508
    10. '>A' → logprob: -16.404756546020508

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00044056313345208764
    2. ' :' → logprob: -8.25044059753418
    3. ':
' → logprob: -8.87544059753418
    4. '   ' → logprob: -10.75044059753418
    5. '       ' → logprob: -11.75044059753418
    6. '):' → logprob: -12.00044059753418
    7. '    ' → logprob: -14.12544059753418
    8. ' :
' → logprob: -14.62544059753418
    9. ':**' → logprob: -15.00044059753418
    10. '[' → logprob: -15.00044059753418

Token 21: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9873284697532654
    2. ' ' → logprob: -1.6123285293579102
    3. '    ' → logprob: -1.9873285293579102
    4. '       ' → logprob: -2.48732852935791
    5. '   ' → logprob: -2.86232852935791
    6. 'C' → logprob: -3.23732852935791
    7. '     
' → logprob: -3.23732852935791
    8. ' C' → logprob: -3.48732852935791
    9. '    
' → logprob: -4.36232852935791
    10. '```' → logprob: -4.36232852935791

Token 22: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.2543545365333557
    2. ' C' → logprob: -1.504354476928711
    3. '   ' → logprob: -6.254354476928711
    4. '    ' → logprob: -8.754354476928711
    5. ' ' → logprob: -8.754354476928711
    6. '```' → logprob: -9.879354476928711
    7. '       ' → logprob: -10.004354476928711
    8. ' 
' → logprob: -11.004354476928711
    9. '<|end|>' → logprob: -11.254354476928711
    10. '	C' → logprob: -11.754354476928711

Token 23: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0029886364936828613
    2. '[' → logprob: -6.002988815307617
    3. '[C' → logprob: -7.627988815307617
    4. '[c' → logprob: -11.127988815307617
    5. 'a' → logprob: -12.377988815307617
    6. '[A' → logprob: -12.627988815307617
    7. ' [' → logprob: -13.252988815307617
    8. '```' → logprob: -13.877988815307617
    9. 'C' → logprob: -15.127988815307617
    10. '[int' → logprob: -15.752988815307617

Token 24: ']+=' (ID: 123635)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17168444395065308
    2. ']+=' → logprob: -1.9216845035552979
    3. ' ]' → logprob: -4.921684265136719
    4. '+' → logprob: -6.171684265136719
    5. '+=' → logprob: -6.546684265136719
    6. ' +=' → logprob: -7.921684265136719
    7. '+]' → logprob: -9.046684265136719
    8. '']' → logprob: -10.421684265136719
    9. ')' → logprob: -11.046684265136719
    10. ']+' → logprob: -11.171684265136719

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.875158309936523
    4. '<|end|>' → logprob: -19.375158309936523
    5. '  ' → logprob: -20.000158309936523
    6. '```' → logprob: -20.375158309936523
    7. '۱' → logprob: -20.625158309936523
    8. '１' → logprob: -20.750158309936523
    9. '१' → logprob: -21.375158309936523
    10. '    ' → logprob: -21.500158309936523

Token 26: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17807318270206451
    2. ' 
' → logprob: -2.0530731678009033
    3. '  
' → logprob: -3.9280731678009033
    4. '\n' → logprob: -5.178073406219482
    5. '<|end|>' → logprob: -5.678073406219482
    6. '    
' → logprob: -5.803073406219482
    7. ' ' → logprob: -6.803073406219482
    8. '' → logprob: -7.553073406219482
    9. '\r' → logprob: -8.428072929382324
    10. ' for' → logprob: -8.678072929382324

Token 27: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22120510041713715
    2. ' 
' → logprob: -1.7212051153182983
    3. '  
' → logprob: -4.721205234527588
    4. '    
' → logprob: -5.721205234527588
    5. '\n' → logprob: -5.846205234527588
    6. '<|end|>' → logprob: -6.721205234527588
    7. ' ' → logprob: -7.346205234527588
    8. 'for' → logprob: -7.471205234527588
    9. ' for' → logprob: -7.721205234527588
    10. '\r' → logprob: -8.34620475769043

Token 28: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7050937414169312
    2. 'for' (adapté à ' for') → logprob: -1.2050937414169312
    3. ' ' → logprob: -2.8300938606262207
    4. '
' → logprob: -3.4550938606262207
    5. '   ' → logprob: -3.4550938606262207
    6. '    
' → logprob: -3.8300938606262207
    7. '    ' → logprob: -4.580093860626221
    8. ' 
' → logprob: -4.705093860626221
    9. 'i' → logprob: -5.080093860626221
    10. '<|end|>' → logprob: -5.080093860626221

Token 29: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.020362017676234245
    2. ' range' → logprob: -4.27036190032959
    3. ' ' → logprob: -5.39536190032959
    4. 'i' → logprob: -6.64536190032959
    5. 'range' → logprob: -9.14536190032959
    6. '  ' → logprob: -10.27036190032959
    7. ' _' → logprob: -10.39536190032959
    8. ' c' → logprob: -10.52036190032959
    9. ' j' → logprob: -10.77036190032959
    10. '   ' → logprob: -11.02036190032959

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002088877372443676
    2. ' ' → logprob: -6.752089023590088
    3. 'in' → logprob: -7.252089023590088
    4. '  ' → logprob: -8.62708854675293
    5. '   ' → logprob: -11.12708854675293
    6. '	in' → logprob: -12.62708854675293
    7. 'n' → logprob: -13.00208854675293
    8. ',' → logprob: -13.12708854675293
    9. '```' → logprob: -13.25208854675293
    10. 'range' → logprob: -13.37708854675293

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.003672044724225998
    2. 'range' → logprob: -5.628672122955322
    3. ' ' → logprob: -9.628671646118164
    4. '	range' → logprob: -12.878671646118164
    5. ' xrange' → logprob: -13.003671646118164
    6. '  ' → logprob: -14.253671646118164
    7. '   ' → logprob: -15.003671646118164
    8. '(range' → logprob: -15.753671646118164
    9. '    ' → logprob: -16.503671646118164
    10. '1' → logprob: -16.628671646118164

Token 32: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00026872646412812173
    2. '(len' → logprob: -8.625268936157227
    3. '(k' → logprob: -9.500268936157227
    4. ' (' → logprob: -11.375268936157227
    5. '1' → logprob: -13.375268936157227
    6. '((' → logprob: -14.625268936157227
    7. '(
' → logprob: -15.500268936157227
    8. '(n' → logprob: -16.375268936157227
    9. ')' → logprob: -16.625268936157227
    10. ' ' → logprob: -16.625268936157227

Token 33: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0014190420042723417
    2. ' +' → logprob: -6.6264190673828125
    3. '):' → logprob: -9.501419067382812
    4. ' ' → logprob: -11.751419067382812
    5. '1' → logprob: -12.501419067382812
    6. '   ' → logprob: -13.126419067382812
    7. ')' → logprob: -13.501419067382812
    8. '+:' → logprob: -13.626419067382812
    9. '+
' → logprob: -14.501419067382812
    10. '):
' → logprob: -14.501419067382812

Token 34: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.32143694162368774
    2. '   ' → logprob: -1.946436882019043
    3. '1' → logprob: -2.321436882019043
    4. ' +' → logprob: -4.696436882019043
    5. ' C' → logprob: -5.071436882019043
    6. ' ' → logprob: -5.196436882019043
    7. '    ' → logprob: -5.696436882019043
    8. '       ' → logprob: -6.071436882019043
    9. 'C' → logprob: -6.446436882019043
    10. '4' → logprob: -6.696436882019043

Token 35: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.06524357944726944
    2. 'C' (adapté à ' C') → logprob: -2.9402434825897217
    3. '   ' → logprob: -4.815243721008301
    4. ' ' → logprob: -7.315243721008301
    5. '    ' → logprob: -7.440243721008301
    6. '       ' → logprob: -7.815243721008301
    7. '	C' → logprob: -8.6902437210083
    8. '<|end|>' → logprob: -9.4402437210083
    9. '`' → logprob: -10.0652437210083
    10. '  ' → logprob: -10.1902437210083

Token 36: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012411817908287048
    2. '[' → logprob: -4.512411594390869
    3. '+' → logprob: -6.637411594390869
    4. '[I' → logprob: -11.387412071228027
    5. '[j' → logprob: -11.637412071228027
    6. '```' → logprob: -11.637412071228027
    7. '+=' → logprob: -12.137412071228027
    8. '[k' → logprob: -12.887412071228027
    9. '[a' → logprob: -13.012412071228027
    10. '+[' → logprob: -13.137412071228027

Token 37: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000541592831723392
    2. ' +' → logprob: -8.375541687011719
    3. ']' → logprob: -8.625541687011719
    4. ']+=' → logprob: -9.250541687011719
    5. '+]' → logprob: -10.750541687011719
    6. '+=' → logprob: -11.625541687011719
    7. ' +=' → logprob: -13.375541687011719
    8. ']+' → logprob: -13.625541687011719
    9. '1' → logprob: -14.125541687011719
    10. ' ]' → logprob: -14.875541687011719

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006560363341122866
    2. ']' → logprob: -5.381560325622559
    3. ']+=' → logprob: -6.381560325622559
    4. ' ' → logprob: -8.506560325622559
    5. ']=' → logprob: -10.506560325622559
    6. ']+' → logprob: -12.006560325622559
    7. '```' → logprob: -12.631560325622559
    8. '   ' → logprob: -13.131560325622559
    9. '+' → logprob: -13.506560325622559
    10. '0' → logprob: -13.631560325622559

Token 39: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.6277907490730286
    2. '+=' → logprob: -1.2527906894683838
    3. ' +=' → logprob: -1.7527906894683838
    4. ']' → logprob: -5.502790927886963
    5. ')' → logprob: -5.877790927886963
    6. ')+' → logprob: -8.877790451049805
    7. '=' → logprob: -9.627790451049805
    8. ']+' → logprob: -10.252790451049805
    9. '	' → logprob: -10.752790451049805
    10. '+='' → logprob: -10.877790451049805

Token 40: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.001502717612311244
    2. ' C' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.626502990722656
    4. ' ' → logprob: -16.376502990722656
    5. '	C' → logprob: -16.376502990722656
    6. '<|end|>' → logprob: -18.126502990722656
    7. '```' → logprob: -18.626502990722656
    8. '>C' → logprob: -18.751502990722656
    9. '  ' → logprob: -18.751502990722656
    10. ')' → logprob: -20.001502990722656

Token 41: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.375005722045898
    3. 'i' → logprob: -14.125005722045898
    4. '```' → logprob: -14.875005722045898
    5. '\[' → logprob: -16.5000057220459
    6. '[I' → logprob: -17.1250057220459
    7. '[
' → logprob: -18.1250057220459
    8. '[int' → logprob: -18.7500057220459
    9. '[k' → logprob: -19.8750057220459
    10. '`' → logprob: -20.1250057220459

Token 42: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. ')
' → logprob: -12.750004768371582
    3. ')return' → logprob: -14.750004768371582
    4. '   ' → logprob: -15.625004768371582
    5. ']' → logprob: -15.875004768371582
    6. ')`' → logprob: -16.250003814697266
    7. ' )' → logprob: -16.500003814697266
    8. '}' → logprob: -16.500003814697266
    9. '```' → logprob: -16.500003814697266
    10. '[' → logprob: -17.125003814697266

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8296559453010559
    2. ' for' → logprob: -0.8296559453010559
    3. 'for' → logprob: -3.079655885696411
    4. '```' → logprob: -3.704655885696411
    5. '    
' → logprob: -4.07965612411499
    6. '
' → logprob: -4.32965612411499
    7. '<|end|>' → logprob: -4.70465612411499
    8. '	for' → logprob: -5.32965612411499
    9. ' 
' → logprob: -5.95465612411499
    10. '  
' → logprob: -6.07965612411499

Token 44: ' ret' (ID: 2881)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6736628413200378
    2. 'for' → logprob: -1.2986629009246826
    3. 'B' → logprob: -2.4236629009246826
    4. '   ' → logprob: -2.6736629009246826
    5. ' ' → logprob: -4.0486626625061035
    6. ' B' → logprob: -4.2986626625061035
    7. '    
' → logprob: -4.7986626625061035
    8. '  ' → logprob: -5.7986626625061035
    9. 'A' → logprob: -5.9236626625061035
    10. '    ' → logprob: -5.9236626625061035

Token 45: '=[' (ID: 13370)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urn' → logprob: -0.2565895617008209
    2. 'u' → logprob: -1.6315895318984985
    3. '=' → logprob: -3.756589651107788
    4. ' =' → logprob: -5.381589412689209
    5. ' ' → logprob: -7.006589412689209
    6. 'urning' → logprob: -7.131589412689209
    7. '[' → logprob: -7.881589412689209
    8. 'ur' → logprob: -8.506589889526367
    9. ' urn' → logprob: -8.881589889526367
    10. 'urne' → logprob: -9.756589889526367

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014239625306800008
    2. ' ' → logprob: -9.250142097473145
    3. 'None' → logprob: -10.000142097473145
    4. ' None' → logprob: -14.625142097473145
    5. '-' → logprob: -15.750142097473145
    6. '   ' → logprob: -16.62514305114746
    7. ']' → logprob: -16.75014305114746
    8. '  ' → logprob: -17.37514305114746
    9. '    ' → logprob: -17.50014305114746
    10. '[' → logprob: -17.62514305114746

Token 47: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.19276107847690582
    2. ']*(' → logprob: -1.9427610635757446
    3. ']' → logprob: -3.442761182785034
    4. ' ]' → logprob: -10.317761421203613
    5. ']+' → logprob: -14.192761421203613
    6. '*' → logprob: -14.192761421203613
    7. ' for' → logprob: -14.442761421203613
    8. ' ' → logprob: -14.442761421203613
    9. '*(' → logprob: -15.192761421203613
    10. ')]' → logprob: -15.317761421203613

Token 48: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00015550498210359365
    2. '(len' → logprob: -9.250155448913574
    3. ' len' → logprob: -9.750155448913574
    4. '	len' → logprob: -14.750155448913574
    5. '[len' → logprob: -14.750155448913574
    6. '<len' → logprob: -17.12515640258789
    7. 'leni' → logprob: -17.37515640258789
    8. ',len' → logprob: -17.37515640258789
    9. 'length' → logprob: -17.50015640258789
    10. '=len' → logprob: -17.62515640258789

Token 49: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0006266565760597587
    2. '(' → logprob: -7.375626564025879
    3. '(
' → logprob: -17.000627517700195
    4. 'A' → logprob: -17.750627517700195
    5. '(len' → logprob: -18.125627517700195
    6. '(a' → logprob: -18.500627517700195
    7. '((' → logprob: -19.125627517700195
    8. ' (' → logprob: -19.250627517700195
    9. '(

' → logprob: -19.250627517700195
    10. '(C' → logprob: -19.625627517700195

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031802060548216105
    2. ')
' → logprob: -5.753180027008057
    3. ')
' → logprob: -13.253180503845215
    4. ' )' → logprob: -14.628180503845215
    5. '   ' → logprob: -16.2531795501709
    6. ')return' → logprob: -16.7531795501709
    7. ')

' → logprob: -17.7531795501709
    8. '）' → logprob: -17.8781795501709
    9. ')`' → logprob: -18.0031795501709
    10. '),' → logprob: -18.1281795501709

Token 51: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6006217002868652
    2. '   ' → logprob: -0.9756217002868652
    3. ' for' → logprob: -2.6006217002868652
    4. '	for' → logprob: -8.225622177124023
    5. '```' → logprob: -10.850622177124023
    6. '  ' → logprob: -11.225622177124023
    7. '<|end|>' → logprob: -11.725622177124023
    8. ' ' → logprob: -11.850622177124023
    9. ')' → logprob: -12.100622177124023
    10. '
' → logprob: -12.350622177124023

Token 52: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.4855663721391466e-05
    2. ' for' → logprob: -11.250015258789062
    3. '   ' → logprob: -13.375015258789062
    4. '	for' → logprob: -15.375015258789062
    5. 'i' → logprob: -18.875015258789062
    6. '```' → logprob: -19.375015258789062
    7. 'For' → logprob: -19.625015258789062
    8. '<|end|>' → logprob: -19.750015258789062
    9. '  ' → logprob: -20.500015258789062
    10. '    ' → logprob: -21.250015258789062

Token 53: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06262023746967316
    2. ' a' → logprob: -2.812620162963867
    3. 'i' → logprob: -7.437620162963867
    4. ' i' → logprob: -9.687620162963867
    5. 'x' → logprob: -14.187620162963867
    6. ' ' → logprob: -14.687620162963867
    7. '	a' → logprob: -15.187620162963867
    8. 'e' → logprob: -16.062620162963867
    9. '   ' → logprob: -16.812620162963867
    10. ' x' → logprob: -17.312620162963867

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009817242622375488
    2. 'in' → logprob: -4.634817123413086
    3. ' ' → logprob: -10.384817123413086
    4. '  ' → logprob: -11.259817123413086
    5. 's' → logprob: -12.384817123413086
    6. 'In' → logprob: -12.634817123413086
    7. '   ' → logprob: -13.384817123413086
    8. ' :' → logprob: -14.259817123413086
    9. '	in' → logprob: -14.259817123413086
    10. 'A' → logprob: -14.384817123413086

Token 55: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.220490500330925
    2. 're' → logprob: -2.0954904556274414
    3. ' A' → logprob: -2.8454904556274414
    4. ' reversed' → logprob: -4.095490455627441
    5. '   ' → logprob: -10.095490455627441
    6. ' ' → logprob: -11.220490455627441
    7. 'sorted' → logprob: -11.595490455627441
    8. 'reverse' → logprob: -11.595490455627441
    9. 'rev' → logprob: -11.720490455627441
    10. '[::-' → logprob: -11.720490455627441

Token 56: '[::-' (ID: 159890)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013679367839358747
    2. ':
' → logprob: -9.375136375427246
    3. '[' → logprob: -10.375136375427246
    4. ' :' → logprob: -11.375136375427246
    5. '):' → logprob: -12.875136375427246
    6. ':**' → logprob: -13.000136375427246
    7. ']:' → logprob: -13.375136375427246
    8. '[:]' → logprob: -14.375136375427246
    9. ',' → logprob: -14.500136375427246
    10. ':

' → logprob: -15.000136375427246

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1702793389558792
    2. 'erse' → logprob: -2.7952792644500732
    3. 'r' → logprob: -3.1702792644500732
    4. 'verse' → logprob: -3.5452792644500732
    5. 'versed' → logprob: -4.295279502868652
    6. 'er' → logprob: -5.545279502868652
    7. 'rs' → logprob: -6.045279502868652
    8. 'range' → logprob: -7.420279502868652
    9. 'se' → logprob: -7.670279502868652
    10. 's' → logprob: -7.920279502868652

Token 58: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015051016816869378
    2. ':' → logprob: -7.251504898071289
    3. ')' → logprob: -7.376504898071289
    4. ']:' → logprob: -8.751504898071289
    5. ' ):' → logprob: -11.751504898071289
    6. '):
' → logprob: -14.001504898071289
    7. '}:' → logprob: -15.001504898071289
    8. '）：' → logprob: -15.001504898071289
    9. '   ' → logprob: -15.251504898071289
    10. '():' → logprob: -15.376504898071289

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01326399389654398
    2. ' ' → logprob: -5.263264179229736
    3. '<|end|>' → logprob: -5.388264179229736
    4. '   ' → logprob: -6.388264179229736
    5. '    ' → logprob: -7.013264179229736
    6. ' 
' → logprob: -8.263263702392578
    7. '        ' → logprob: -9.263263702392578
    8. '        
' → logprob: -9.388263702392578
    9. '```' → logprob: -9.638263702392578
    10. '  ' → logprob: -9.888263702392578

Token 60: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.008626040071249008
    2. ' ret' → logprob: -5.0086259841918945
    3. 'C' → logprob: -6.7586259841918945
    4. '   ' → logprob: -8.133625984191895
    5. '       ' → logprob: -8.258625984191895
    6. ' C' → logprob: -8.633625984191895
    7. '  ' → logprob: -12.508625984191895
    8. '	ret' → logprob: -12.633625984191895
    9. '    ' → logprob: -12.883625984191895
    10. ' ' → logprob: -13.133625984191895

Token 61: '[C' (ID: 107876)
  Prédit: '[C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.002827104413881898
    2. '[' → logprob: -5.877827167510986
    3. '[
' → logprob: -11.752826690673828
    4. 'C' → logprob: -12.377826690673828
    5. '[c' → logprob: -12.627826690673828
    6. ' [' → logprob: -12.627826690673828
    7. ' C' → logprob: -14.252826690673828
    8. '	C' → logprob: -14.877826690673828
    9. '```' → logprob: -14.877826690673828
    10. '\[' → logprob: -14.877826690673828

Token 62: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.143808109802194e-05
    2. '[' → logprob: -10.375041007995605
    3. 'a' → logprob: -11.500041007995605
    4. '[A' → logprob: -17.375041961669922
    5. '[
' → logprob: -18.375041961669922
    6. '(a' → logprob: -18.625041961669922
    7. ' a' → logprob: -18.625041961669922
    8. ' [' → logprob: -18.625041961669922
    9. '```' → logprob: -19.500041961669922
    10. '	a' → logprob: -19.750041961669922

Token 63: ']-' (ID: 27107)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.13990002870559692
    2. ']' → logprob: -3.014899969100952
    3. ']-' → logprob: -3.139899969100952
    4. 'a' → logprob: -3.639899969100952
    5. '-' → logprob: -4.514900207519531
    6. ' -' → logprob: -7.514900207519531
    7. '   ' → logprob: -8.889900207519531
    8. '[' → logprob: -9.264900207519531
    9. '(a' → logprob: -10.014900207519531
    10. '	a' → logprob: -10.264900207519531

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. '<|end|>' → logprob: -13.625001907348633
    3. '=' → logprob: -14.625001907348633
    4. ' ' → logprob: -15.500001907348633
    5. '<|end|>' → logprob: -17.250001907348633
    6. '```' → logprob: -18.875001907348633
    7. ']' → logprob: -19.000001907348633
    8. '>' → logprob: -19.000001907348633
    9. ')' → logprob: -19.250001907348633
    10. '১' → logprob: -19.500001907348633

Token 65: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02721394971013069
    2. ']=' → logprob: -3.6522140502929688
    3. ' ]' → logprob: -7.152214050292969
    4. '=' → logprob: -9.152214050292969
    5. ']+=' → logprob: -11.902214050292969
    6. ']-' → logprob: -12.027214050292969
    7. ']=-' → logprob: -12.527214050292969
    8. ']==' → logprob: -13.527214050292969
    9. ' =' → logprob: -13.652214050292969
    10. '],' → logprob: -14.027214050292969

Token 66: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.615255839889869e-05
    2. ' a' → logprob: -9.250096321105957
    3. '	a' → logprob: -19.25009536743164
    4. '>a' → logprob: -20.87509536743164
    5. ''a' → logprob: -21.37509536743164
    6. '   ' → logprob: -22.50009536743164
    7. ' ' → logprob: -22.75009536743164
    8. 'а' → logprob: -22.87509536743164
    9. ')a' → logprob: -23.25009536743164
    10. '#a' → logprob: -23.25009536743164

Token 67: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022106081247329712
    2. 'C' → logprob: -4.022106170654297
    3. ' C' → logprob: -5.897106170654297
    4. '   ' → logprob: -7.022106170654297
    5. '<|end|>' → logprob: -8.397106170654297
    6. ' ' → logprob: -10.522106170654297
    7. '	C' → logprob: -10.897106170654297
    8. '```' → logprob: -11.397106170654297
    9. '
' → logprob: -11.772106170654297
    10. '	' → logprob: -12.522106170654297

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036254855804145336
    2. '   ' → logprob: -5.878625392913818
    3. 'C' → logprob: -7.378625392913818
    4. ' C' → logprob: -9.128625869750977
    5. '<|end|>' → logprob: -9.878625869750977
    6. '	C' → logprob: -11.878625869750977
    7. '```' → logprob: -11.878625869750977
    8. ' ' → logprob: -12.128625869750977
    9. '	' → logprob: -12.878625869750977
    10. '      ' → logprob: -13.128625869750977

Token 69: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -4.008129963040119e-06
    2. '   ' → logprob: -13.125003814697266
    3. '       ' → logprob: -13.625003814697266
    4. ' C' → logprob: -14.125003814697266
    5. '	C' → logprob: -16.875003814697266
    6. '  ' → logprob: -17.375003814697266
    7. '<|end|>' → logprob: -18.250003814697266
    8. ' ' → logprob: -18.875003814697266
    9. '```' → logprob: -18.875003814697266
    10. '>C' → logprob: -19.375003814697266

Token 70: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.700132997939363e-05
    2. 'a' → logprob: -11.000017166137695
    3. '[' → logprob: -16.000017166137695
    4. '	a' → logprob: -16.500017166137695
    5. ' a' → logprob: -17.250017166137695
    6. '(a' → logprob: -18.500017166137695
    7. '```' → logprob: -18.750017166137695
    8. ' ' → logprob: -19.750017166137695
    9. '#a' → logprob: -19.875017166137695
    10. '   ' → logprob: -20.250017166137695

Token 71: ']-' (ID: 27107)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.09213979542255402
    2. '-' → logprob: -2.592139720916748
    3. ' -=' → logprob: -4.592139720916748
    4. ']-' → logprob: -6.092139720916748
    5. ')-' → logprob: -7.342139720916748
    6. ')' → logprob: -9.842140197753906
    7. ']' → logprob: -10.467140197753906
    8. '<|end|>' → logprob: -11.592140197753906
    9. '```' → logprob: -11.717140197753906
    10. '=' → logprob: -12.092140197753906

Token 72: '=' (ID: 28)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016361083544325083
    2. '=' → logprob: -8.750164031982422
    3. '<|end|>' → logprob: -12.250164031982422
    4. '>' → logprob: -16.125164031982422
    5. '-' → logprob: -16.125164031982422
    6. '<|end|>' → logprob: -16.875164031982422
    7. '   ' → logprob: -17.250164031982422
    8. '```' → logprob: -17.250164031982422
    9. ' ' → logprob: -17.375164031982422
    10. '0' → logprob: -18.125164031982422

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '<|end|>' → logprob: -16.875
    4. '```' → logprob: -17.375
    5. '   ' → logprob: -18.125
    6. '۱' → logprob: -18.125
    7. '１' → logprob: -19.5
    8. '१' → logprob: -20.125
    9. '  ' → logprob: -20.125
    10. '১' → logprob: -20.75

Token 74: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09569133818149567
    2. '
' → logprob: -2.845691442489624
    3. ' return' → logprob: -4.470691204071045
    4. ' ' → logprob: -5.470691204071045
    5. '	return' → logprob: -5.470691204071045
    6. 'return' → logprob: -5.720691204071045
    7. '```' → logprob: -6.220691204071045
    8. 'r' → logprob: -6.345691204071045
    9. ':return' → logprob: -6.470691204071045
    10. '    
' → logprob: -6.470691204071045

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09144844114780426
    2. '
' → logprob: -2.8414485454559326
    3. 'r' → logprob: -4.4664483070373535
    4. 'return' → logprob: -5.0914483070373535
    5. ' return' → logprob: -5.4664483070373535
    6. '    
' → logprob: -5.9664483070373535
    7. ' ' → logprob: -6.8414483070373535
    8. ' 
' → logprob: -7.2164483070373535
    9. '  
' → logprob: -7.4664483070373535
    10. '' → logprob: -7.4664483070373535

Token 76: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03130149468779564
    2. '   ' → logprob: -3.531301498413086
    3. ' return' → logprob: -6.906301498413086
    4. 'r' → logprob: -7.781301498413086
    5. '	return' → logprob: -10.031301498413086
    6. '```' → logprob: -10.031301498413086
    7. ':return' → logprob: -10.781301498413086
    8. ' ' → logprob: -11.781301498413086
    9. '    
' → logprob: -12.656301498413086
    10. '  ' → logprob: -13.156301498413086

Token 77: ' ret' (ID: 2881)
  Prédit: ' ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ret' → logprob: -0.014163628220558167
    2. 'ret' → logprob: -4.264163494110107
    3. '	ret' → logprob: -16.764163970947266
    4. '(ret' → logprob: -17.014163970947266
    5. 'rets' → logprob: -17.139163970947266
    6. '$ret' → logprob: -18.264163970947266
    7. ' ' → logprob: -18.389163970947266
    8. ' retval' → logprob: -18.639163970947266
    9. ' ' → logprob: -19.139163970947266
    10. 're' → logprob: -19.264163970947266

Token 78: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: 'n' (ID: 77)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4138326942920685
    2. '\n' → logprob: -1.788832664489746
    3. '<|end|>' → logprob: -2.788832664489746
    4. '```' → logprob: -2.913832664489746
    5. '#' → logprob: -3.413832664489746
    6. '' → logprob: -5.163832664489746
    7. ' ' → logprob: -5.413832664489746
    8. '\' → logprob: -5.538832664489746
    9. '[' → logprob: -6.288832664489746
    10. 'newline' → logprob: -6.538832664489746

Token 80: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13732658326625824
    2. '=' → logprob: -2.51232647895813
    3. ' ' → logprob: -3.13732647895813
    4. 'u' → logprob: -6.887326717376709
    5. ',' → logprob: -6.887326717376709
    6. ' =[' → logprob: -7.262326717376709
    7. 'um' → logprob: -8.13732624053955
    8. '[' → logprob: -8.38732624053955
    9. '=int' → logprob: -9.01232624053955
    10. ' ,' → logprob: -9.01232624053955

Token 81: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018558192532509565
    2. '(input' → logprob: -7.251855850219727
    3. '('' → logprob: -7.751855850219727
    4. ' (' → logprob: -7.876855850219727
    5. ' ' → logprob: -9.001855850219727
    6. '(n' → logprob: -9.376855850219727
    7. '<|end|>' → logprob: -9.751855850219727
    8. '()' → logprob: -10.626855850219727
    9. 'input' → logprob: -11.626855850219727
    10. '("' → logprob: -11.751855850219727

Token 82: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.388912171125412
    2. '())' → logprob: -1.1389122009277344
    3. '(' → logprob: -6.263912200927734
    4. ')' → logprob: -9.888912200927734
    5. '()
' → logprob: -10.763912200927734
    6. ' ())' → logprob: -11.513912200927734
    7. '();)' → logprob: -11.888912200927734
    8. '().' → logprob: -11.888912200927734
    9. '()>' → logprob: -12.388912200927734
    10. '())
' → logprob: -12.513912200927734

Token 83: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.693801999092102
    2. ' A' → logprob: -0.693801999092102
    3. '<|end|>' → logprob: -8.568801879882812
    4. '[' → logprob: -8.943801879882812
    5. ' ' → logprob: -9.068801879882812
    6. ')' → logprob: -9.568801879882812
    7. 'a' → logprob: -10.068801879882812
    8. ' 
' → logprob: -10.443801879882812
    9. 'n' → logprob: -10.693801879882812
    10. ' )' → logprob: -11.693801879882812

Token 84: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18780414760112762
    2. ' =' → logprob: -1.812804102897644
    3. '=input' → logprob: -5.562804222106934
    4. '=list' → logprob: -5.687804222106934
    5. '=[]' → logprob: -8.312804222106934
    6. '.' → logprob: -8.937804222106934
    7. '=[' → logprob: -9.562804222106934
    8. ' ' → logprob: -9.687804222106934
    9. '[:]' → logprob: -9.687804222106934
    10. ' =[' → logprob: -9.937804222106934

Token 85: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4178566038608551
    2. '(map' → logprob: -1.1678565740585327
    3. '(input' → logprob: -3.5428566932678223
    4. '(int' → logprob: -6.542856693267822
    5. '(
' → logprob: -10.292856216430664
    6. '(

' → logprob: -10.417856216430664
    7. '()' → logprob: -11.292856216430664
    8. '(range' → logprob: -11.417856216430664
    9. '(list' → logprob: -11.542856216430664
    10. '(eval' → logprob: -11.542856216430664

Token 86: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5358729362487793
    2. '(' → logprob: -0.9108729362487793
    3. '(str' → logprob: -5.535872936248779
    4. '<|end|>' → logprob: -5.660872936248779
    5. '(lambda' → logprob: -5.785872936248779
    6. '(input' → logprob: -6.910872936248779
    7. '(
' → logprob: -7.410872936248779
    8. '[int' → logprob: -8.785873413085938
    9. ')' → logprob: -8.910873413085938
    10. '<int' → logprob: -8.910873413085938

Token 87: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.040443290024995804
    2. ',input' → logprob: -3.415443181991577
    3. '(' → logprob: -5.165443420410156
    4. 'input' → logprob: -7.290443420410156
    5. ',' → logprob: -8.040443420410156
    6. ' (' → logprob: -11.290443420410156
    7. '<input' → logprob: -11.790443420410156
    8. ' input' → logprob: -11.790443420410156
    9. ' ,' → logprob: -12.040443420410156
    10. ' ' → logprob: -12.040443420410156

Token 88: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.635164754698053e-05
    2. '()' → logprob: -9.875066757202148
    3. '(' → logprob: -11.625066757202148
    4. '()))' → logprob: -13.375066757202148
    5. '())' → logprob: -13.375066757202148
    6. ' ().' → logprob: -13.625066757202148
    7. '()
' → logprob: -14.000066757202148
    8. ')' → logprob: -15.500066757202148
    9. '.' → logprob: -16.62506675720215
    10. '()?.' → logprob: -16.75006675720215

Token 89: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005598236457444727
    2. 'strip' → logprob: -7.5005598068237305
    3. 'rstrip' → logprob: -12.37555980682373
    4. ' split' → logprob: -13.62555980682373
    5. '(split' → logprob: -14.25055980682373
    6. 's' → logprob: -14.87555980682373
    7. 'spl' → logprob: -15.25055980682373
    8. 'sp' → logprob: -15.87555980682373
    9. ')' → logprob: -17.250560760498047
    10. '.split' → logprob: -17.875560760498047

Token 90: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.027392813935875893
    2. '())' → logprob: -4.027392864227295
    3. '))' → logprob: -5.402392864227295
    4. '()' → logprob: -5.527392864227295
    5. '(' → logprob: -7.527392864227295
    6. '()))
' → logprob: -9.402392387390137
    7. ')' → logprob: -9.527392387390137
    8. '()));' → logprob: -11.777392387390137
    9. '()))

' → logprob: -12.277392387390137
    10. '())))' → logprob: -12.527392387390137

Token 91: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011730932630598545
    2. 'sorted' → logprob: -4.886731147766113
    3. 'A' → logprob: -6.386731147766113
    4. 'p' → logprob: -7.386731147766113
    5. 'B' → logprob: -7.511731147766113
    6. 'result' → logprob: -7.886731147766113
    7. 'r' → logprob: -8.511731147766113
    8. 's' → logprob: -9.011731147766113
    9. 'pr' → logprob: -9.136731147766113
    10. 'C' → logprob: -9.386731147766113

Token 92: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003782416461035609
    2. '(C' → logprob: -8.375378608703613
    3. '("("' → logprob: -9.500378608703613
    4. '('' → logprob: -10.250378608703613
    5. '(count' → logprob: -11.000378608703613
    6. '((' → logprob: -12.250378608703613
    7. '(Collectors' → logprob: -12.875378608703613
    8. '(
' → logprob: -13.125378608703613
    9. ' (' → logprob: -13.375378608703613
    10. '(Code' → logprob: -13.500378608703613

Token 93: 'Counting' (ID: 180254)
  Prédit: 'Counting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counting' → logprob: -9.610702363715973e-06
    2. 'Sorting' → logprob: -12.250009536743164
    3. ' Counting' → logprob: -12.625009536743164
    4. 'Count' → logprob: -14.125009536743164
    5. ')' → logprob: -14.375009536743164
    6. 'count' → logprob: -16.500009536743164
    7. 'Countdown' → logprob: -16.750009536743164
    8. ' counting' → logprob: -17.375009536743164
    9. 'Counter' → logprob: -17.750009536743164
    10. '(' → logprob: -18.125009536743164

Token 94: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -6.704273118884885e-07
    2. 'Sorting' → logprob: -15.375000953674316
    3. 'S' → logprob: -15.875000953674316
    4. '_sort' → logprob: -16.5
    5. 'Sorted' → logprob: -16.75
    6. 'sort' → logprob: -17.125
    7. 'So' → logprob: -17.75
    8. '(S' → logprob: -18.0
    9. 'Soft' → logprob: -18.875
    10. 'SORT' → logprob: -19.0

Token 95: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0007129086880013347
    2. '(' → logprob: -7.250712871551514
    3. ' (' → logprob: -12.875713348388672
    4. ')' → logprob: -15.875713348388672
    5. '(
' → logprob: -16.250713348388672
    6. '((' → logprob: -16.750713348388672
    7. ')(' → logprob: -18.250713348388672
    8. '(n' → logprob: -18.875713348388672
    9. '(B' → logprob: -18.875713348388672
    10. '(a' → logprob: -19.125713348388672

Token 96: ',max' (ID: 81466)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.29623767733573914
    2. '(' → logprob: -1.5462377071380615
    3. ',n' → logprob: -3.4212377071380615
    4. ',' → logprob: -5.296237468719482
    5. '(len' → logprob: -6.046237468719482
    6. '(A' → logprob: -6.921237468719482
    7. ',len' → logprob: -7.546237468719482
    8. ')' → logprob: -7.796237468719482
    9. ',A' → logprob: -7.796237468719482
    10. ',k' → logprob: -7.921237468719482

Token 97: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.250005722045898
    3. 'A' → logprob: -14.625005722045898
    4. '(max' → logprob: -16.0000057220459
    5. ')' → logprob: -16.5000057220459
    6. '(
' → logprob: -17.5000057220459
    7. '(a' → logprob: -17.8750057220459
    8. '((' → logprob: -18.3750057220459
    9. ')(' → logprob: -18.8750057220459
    10. ' (' → logprob: -18.8750057220459

Token 98: ')))' (ID: 15975)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.5546022057533264
    2. '()))' → logprob: -1.3046021461486816
    3. ')))' → logprob: -2.1796021461486816
    4. '())' → logprob: -3.3046021461486816
    5. '))' → logprob: -5.679602146148682
    6. ')' → logprob: -7.679602146148682
    7. '()' → logprob: -7.804602146148682
    8. '())))
' → logprob: -8.42960262298584
    9. '()))
' → logprob: -9.80460262298584
    10. '(' → logprob: -10.42960262298584


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 96
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 51
Tokens correctement prédits (top 10): 83
Précision stricte (1ère position): 46.88%
Précision adaptée (1ère position): 53.12%
Précision (top 10): 86.46%
================================================================================
