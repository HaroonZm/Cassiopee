================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def countingsort(A, k):
    res = [None for _ in A]
    C = [0 for i in range(k + 1)]

    for x in A:
        C[x] += 1

    for i in range(k):
        C[i + 1] = C[i + 1] + C[i]

    for x in reversed(A):
        res[C[x] - 1] = x
        C[x] -= 1

    return res

input()
A = list(map(int, input().split()))
ret = countingsort(A, 10000)
print(" ".join(map(str, ret)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' count' (ID: 3605)
  → Token d'amorce (pas de prédiction)

Token 2: 'ings' (ID: 963)
  → Token d'amorce (pas de prédiction)

Token 3: 'ort' (ID: 390)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03443381190299988
    2. '(:' → logprob: -3.7844338417053223
    3. '_' → logprob: -4.784433841705322
    4. '():' → logprob: -6.784433841705322
    5. '(_' → logprob: -7.659433841705322
    6. '(_:' → logprob: -8.284433364868164
    7. 'g' → logprob: -8.909433364868164
    8. '(a' → logprob: -9.284433364868164
    9. '):' → logprob: -9.284433364868164
    10. '(count' → logprob: -9.659433364868164

Token 4: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020234835392329842
    2. '_' → logprob: -8.875202178955078
    3. ':' → logprob: -10.625202178955078
    4. ' (' → logprob: -11.250202178955078
    5. '(:' → logprob: -11.625202178955078
    6. '```' → logprob: -12.875202178955078
    7. '[' → logprob: -13.000202178955078
    8. '():' → logprob: -13.250202178955078
    9. '(_:' → logprob: -13.875202178955078
    10. '((' → logprob: -13.875202178955078

Token 5: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5863156914710999
    2. ')' → logprob: -1.586315631866455
    3. '):' → logprob: -1.961315631866455
    4. ',' → logprob: -2.336315631866455
    5. '```' → logprob: -7.586315631866455
    6. '(' → logprob: -8.336316108703613
    7. '[,' → logprob: -8.836316108703613
    8. ':' → logprob: -8.836316108703613
    9. '):
' → logprob: -9.461316108703613
    10. '[
' → logprob: -9.961316108703613

Token 6: ' k' (ID: 372)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.1393338441848755
    2. 'B' → logprob: -3.139333724975586
    3. ' n' → logprob: -3.389333724975586
    4. ')' → logprob: -3.639333724975586
    5. ' )' → logprob: -4.139333724975586
    6. 'n' → logprob: -5.889333724975586
    7. ' ' → logprob: -6.139333724975586
    8. ' A' → logprob: -6.389333724975586
    9. ' k' → logprob: -7.389333724975586
    10. 'A' → logprob: -7.889333724975586

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0061946953646838665
    2. ')' → logprob: -5.131194591522217
    3. ':' → logprob: -8.631195068359375
    4. '):
' → logprob: -10.131195068359375
    5. '```' → logprob: -10.631195068359375
    6. ''):' → logprob: -11.756195068359375
    7. '**' → logprob: -12.881195068359375
    8. ',' → logprob: -13.006195068359375
    9. '）：' → logprob: -13.381195068359375
    10. '   ' → logprob: -13.381195068359375

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02544066496193409
    2. '   ' → logprob: -3.7754406929016113
    3. ':
' → logprob: -6.900440692901611
    4. '```' → logprob: -7.650440692901611
    5. '\n' → logprob: -8.900440216064453
    6. '    
' → logprob: -9.025440216064453
    7. '  
' → logprob: -9.275440216064453
    8. '\' → logprob: -10.025440216064453
    9. '":' → logprob: -10.275440216064453
    10. ' ' → logprob: -10.525440216064453

Token 9: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06388932466506958
    2. '    ' → logprob: -4.313889503479004
    3. ' ' → logprob: -4.563889503479004
    4. '```' → logprob: -4.688889503479004
    5. '    
' → logprob: -4.813889503479004
    6. 'n' → logprob: -5.813889503479004
    7. ' n' → logprob: -5.938889503479004
    8. '       ' → logprob: -6.063889503479004
    9. '`' → logprob: -6.188889503479004
    10. '
' → logprob: -6.313889503479004

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2006734162569046
    2. ' =' → logprob: -2.2006733417510986
    3. 'u' → logprob: -2.7006733417510986
    4. 'ult' → logprob: -6.325673580169678
    5. '[' → logprob: -6.450673580169678
    6. '[u' → logprob: -9.20067310333252
    7. '[:]' → logprob: -9.32567310333252
    8. ' ' → logprob: -9.45067310333252
    9. 'ul' → logprob: -9.95067310333252
    10. ',' → logprob: -9.95067310333252

Token 11: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.313493937253952
    2. ' [' → logprob: -1.3134939670562744
    3. '[]' → logprob: -8.813493728637695
    4. ' []' → logprob: -10.063493728637695
    5. '[A' → logprob: -11.188493728637695
    6. ' ' → logprob: -11.438493728637695
    7. '[len' → logprob: -12.063493728637695
    8. '   ' → logprob: -13.688493728637695
    9. '[k' → logprob: -13.938493728637695
    10. ' [[]' → logprob: -13.938493728637695

Token 12: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.375021934509277
    4. ')' → logprob: -18.12502098083496
    5. ']' → logprob: -18.37502098083496
    6. '  ' → logprob: -18.87502098083496
    7. '    ' → logprob: -19.12502098083496
    8. '```' → logprob: -19.37502098083496
    9. '۰' → logprob: -19.50002098083496
    10. 'False' → logprob: -20.87502098083496

Token 13: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08007382601499557
    2. ' for' → logprob: -2.705073833465576
    3. ',' → logprob: -5.080073833465576
    4. ']*' → logprob: -6.205073833465576
    5. ' ]' → logprob: -6.955073833465576
    6. 'for' → logprob: -7.580073833465576
    7. ')' → logprob: -8.455073356628418
    8. ']*(' → logprob: -9.830073356628418
    9. '   ' → logprob: -10.455073356628418
    10. ')]' → logprob: -10.580073356628418

Token 14: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48573705554008484
    2. ' _' → logprob: -0.9857370853424072
    3. ' ' → logprob: -4.735736846923828
    4. ' i' → logprob: -5.985736846923828
    5. 'range' → logprob: -9.110736846923828
    6. ' range' → logprob: -9.235736846923828
    7. ' in' → logprob: -9.985736846923828
    8. '_range' → logprob: -10.860736846923828
    9. 'i' → logprob: -11.110736846923828
    10. '_i' → logprob: -12.235736846923828

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048633016645908356
    2. 'in' → logprob: -3.423633098602295
    3. ' ' → logprob: -4.923633098602295
    4. 'range' → logprob: -5.048633098602295
    5. ' range' → logprob: -8.173632621765137
    6. 'i' → logprob: -8.173632621765137
    7. ' A' → logprob: -8.673632621765137
    8. ' _' → logprob: -8.798632621765137
    9. '_' → logprob: -8.923632621765137
    10. 'A' → logprob: -9.298632621765137

Token 16: ' A' (ID: 355)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12745222449302673
    2. 'range' → logprob: -2.1274521350860596
    3. ' A' → logprob: -7.752452373504639
    4. 'A' → logprob: -9.37745189666748
    5. ' ' → logprob: -12.00245189666748
    6. '	range' → logprob: -14.25245189666748
    7. ' xrange' → logprob: -14.25245189666748
    8. '_range' → logprob: -14.50245189666748
    9. '_' → logprob: -14.50245189666748
    10. '(range' → logprob: -14.75245189666748

Token 17: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013326213229447603
    2. ' ]' → logprob: -7.376332759857178
    3. ')]' → logprob: -7.501332759857178
    4. '])' → logprob: -9.00133228302002
    5. ')' → logprob: -10.75133228302002
    6. '])]' → logprob: -12.62633228302002
    7. '`]' → logprob: -14.00133228302002
    8. ']
' → logprob: -14.12633228302002
    9. '()]' → logprob: -14.37633228302002
    10. '],' → logprob: -14.37633228302002

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2885339856147766
    2. '
' → logprob: -2.163533926010132
    3. ',' → logprob: -3.288533926010132
    4. ' ' → logprob: -3.788533926010132
    5. 'count' → logprob: -3.913533926010132
    6. '    
' → logprob: -4.663534164428711
    7. '\n' → logprob: -4.663534164428711
    8. ' count' → logprob: -5.288534164428711
    9. ' counts' → logprob: -5.288534164428711
    10. '   
' → logprob: -5.538534164428711

Token 19: ' C' (ID: 363)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.38561350107192993
    2. 'counts' → logprob: -2.510613441467285
    3. 'c' → logprob: -2.635613441467285
    4. 'C' (adapté à ' C') → logprob: -2.885613441467285
    5. '   ' → logprob: -3.135613441467285
    6. ' count' → logprob: -3.135613441467285
    7. ' counts' → logprob: -4.385613441467285
    8. ' C' → logprob: -5.760613441467285
    9. ' ' → logprob: -6.385613441467285
    10. 'cnt' → logprob: -6.510613441467285

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12784747779369354
    2. '=' → logprob: -2.12784743309021
    3. ' ' → logprob: -7.627847671508789
    4. '[' → logprob: -8.252847671508789
    5. '   ' → logprob: -9.252847671508789
    6. '  ' → logprob: -10.377847671508789
    7. 'ount' → logprob: -11.627847671508789
    8. '[:]' → logprob: -12.127847671508789
    9. ',' → logprob: -12.377847671508789
    10. ' =[' → logprob: -12.502847671508789

Token 21: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.061973731964826584
    2. '[' → logprob: -2.811973810195923
    3. '[k' → logprob: -12.061973571777344
    4. ' ' → logprob: -15.686973571777344
    5. '[int' → logprob: -16.436973571777344
    6. ' k' → logprob: -16.936973571777344
    7. ' ' → logprob: -17.561973571777344
    8. '[len' → logprob: -18.311973571777344
    9. '[count' → logprob: -18.436973571777344
    10. 'k' → logprob: -18.811973571777344

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029720881138928235
    2. ' ' → logprob: -8.125297546386719
    3. 'k' → logprob: -13.750297546386719
    4. '  ' → logprob: -16.75029754638672
    5. '   ' → logprob: -16.75029754638672
    6. ' k' → logprob: -18.25029754638672
    7. '    ' → logprob: -18.75029754638672
    8. '۰' → logprob: -19.12529754638672
    9. '(k' → logprob: -19.62529754638672
    10. '(' → logprob: -19.87529754638672

Token 23: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3060869574546814
    2. ']' → logprob: -1.4310870170593262
    3. ']*' → logprob: -4.431087017059326
    4. 'for' → logprob: -4.556087017059326
    5. ']*(' → logprob: -6.681087017059326
    6. ' ' → logprob: -7.556087017059326
    7. ' ]' → logprob: -8.056086540222168
    8. ')' → logprob: -10.056086540222168
    9. '	for' → logprob: -10.931086540222168
    10. ',' → logprob: -10.931086540222168

Token 24: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004661284387111664
    2. 'range' → logprob: -5.3796610832214355
    3. ' ' → logprob: -10.754661560058594
    4. '_' → logprob: -11.379661560058594
    5. '	range' → logprob: -12.879661560058594
    6. '(range' → logprob: -13.004661560058594
    7. '_range' → logprob: -13.629661560058594
    8. ' xrange' → logprob: -13.754661560058594
    9. ' _' → logprob: -14.129661560058594
    10. ' k' → logprob: -15.504661560058594

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01615319587290287
    2. 'in' → logprob: -4.141153335571289
    3. ' ' → logprob: -9.266153335571289
    4. 'range' → logprob: -11.266153335571289
    5. ' range' → logprob: -12.016153335571289
    6. ')' → logprob: -13.391153335571289
    7. '(range' → logprob: -14.391153335571289
    8. '  ' → logprob: -14.391153335571289
    9. '	in' → logprob: -14.516153335571289
    10. ']' → logprob: -14.891153335571289

Token 26: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25196921825408936
    2. 'range' → logprob: -1.5019692182540894
    3. ' ' → logprob: -11.001969337463379
    4. '	range' → logprob: -11.501969337463379
    5. ' xrange' → logprob: -12.751969337463379
    6. 'k' → logprob: -13.126969337463379
    7. ')' → logprob: -13.251969337463379
    8. '(range' → logprob: -13.501969337463379
    9. ' k' → logprob: -13.501969337463379
    10. '   ' → logprob: -14.126969337463379

Token 27: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0028386341873556376
    2. '(' → logprob: -5.877838611602783
    3. ' k' → logprob: -11.002839088439941
    4. 'k' → logprob: -11.877839088439941
    5. '(len' → logprob: -12.377839088439941
    6. ' (' → logprob: -12.502839088439941
    7. ')' → logprob: -13.377839088439941
    8. '	k' → logprob: -15.502839088439941
    9. '(
' → logprob: -15.627839088439941
    10. ',k' → logprob: -16.377838134765625

Token 28: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07737573236227036
    2. ')]' → logprob: -2.827375650405884
    3. ' +' → logprob: -4.202375888824463
    4. ')' → logprob: -8.202375411987305
    5. ')])' → logprob: -10.577375411987305
    6. ' )' → logprob: -11.452375411987305
    7. ' ' → logprob: -12.702375411987305
    8. ')][' → logprob: -12.827375411987305
    9. '):' → logprob: -12.952375411987305
    10. '   ' → logprob: -13.327375411987305

Token 29: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076081594452261925
    2. ' ' → logprob: -4.882607936859131
    3. '2' → logprob: -14.507608413696289
    4. ')' → logprob: -14.507608413696289
    5. '  ' → logprob: -14.757608413696289
    6. '```' → logprob: -15.882608413696289
    7. '   ' → logprob: -16.63260841369629
    8. ' ' → logprob: -16.94510841369629
    9. '0' → logprob: -17.00760841369629
    10. 'len' → logprob: -17.25760841369629

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '  ' → logprob: -16.000051498413086
    4. ')' → logprob: -17.125051498413086
    5. '   ' → logprob: -17.750051498413086
    6. 'len' → logprob: -17.875051498413086
    7. '```' → logprob: -18.000051498413086
    8. '2' → logprob: -18.125051498413086
    9. '0' → logprob: -18.812551498413086
    10. '１' → logprob: -18.875051498413086

Token 31: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003023345780093223
    2. ')' → logprob: -8.6253023147583
    3. ')])' → logprob: -9.2503023147583
    4. ']' → logprob: -11.3753023147583
    5. '')]' → logprob: -12.6253023147583
    6. ' )' → logprob: -12.7503023147583
    7. '])]' → logprob: -13.2503023147583
    8. ')],' → logprob: -13.6253023147583
    9. ')][' → logprob: -13.6253023147583
    10. '):' → logprob: -13.7503023147583

Token 32: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7926085591316223
    2. 'for' → logprob: -1.5426084995269775
    3. ' ' → logprob: -1.7926084995269775
    4. '   ' → logprob: -3.0426084995269775
    5. ' 
' → logprob: -3.1676084995269775
    6. '
' → logprob: -3.1676084995269775
    7. '  
' → logprob: -4.542608737945557
    8. '    
' → logprob: -5.167608737945557
    9. ':' → logprob: -5.417608737945557
    10. '' → logprob: -5.542608737945557

Token 33: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05667804181575775
    2. ' for' → logprob: -2.931678056716919
    3. '   ' → logprob: -6.55667781829834
    4. '
' → logprob: -9.05667781829834
    5. ' ' → logprob: -9.18167781829834
    6. '	for' → logprob: -9.80667781829834
    7. '\n' → logprob: -10.30667781829834
    8. '```' → logprob: -10.93167781829834
    9. '<|end|>' → logprob: -11.30667781829834
    10. '    
' → logprob: -11.68167781829834

Token 34: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.157823845744133
    2. 'x' → logprob: -2.0328238010406494
    3. ' i' → logprob: -5.2828240394592285
    4. ' ' → logprob: -5.4078240394592285
    5. 'i' → logprob: -6.6578240394592285
    6. ' a' → logprob: -7.0328240394592285
    7. 'a' → logprob: -7.1578240394592285
    8. 'A' → logprob: -7.5328240394592285
    9. '   ' → logprob: -7.6578240394592285
    10. ' num' → logprob: -8.28282356262207

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028383955359458923
    2. 'in' → logprob: -5.877838611602783
    3. ' ' → logprob: -10.502838134765625
    4. 'n' → logprob: -13.377838134765625
    5. '   ' → logprob: -13.502838134765625
    6. '  ' → logprob: -13.627838134765625
    7. 's' → logprob: -14.502838134765625
    8. 'i' → logprob: -14.877838134765625
    9. '	in' → logprob: -15.690338134765625
    10. ' i' → logprob: -15.877838134765625

Token 36: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.06205451115965843
    2. 'A' → logprob: -2.812054395675659
    3. ' ' → logprob: -9.437054634094238
    4. '  ' → logprob: -12.687054634094238
    5. '   ' → logprob: -13.562054634094238
    6. '	A' → logprob: -13.812054634094238
    7. '    ' → logprob: -14.562054634094238
    8. '>A' → logprob: -15.624554634094238
    9. ' А' → logprob: -16.124553680419922
    10. ')' → logprob: -16.124553680419922

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010688089241739362
    2. ' :' → logprob: -9.500106811523438
    3. ':
' → logprob: -10.500106811523438
    4. '   ' → logprob: -13.250106811523438
    5. '):' → logprob: -13.625106811523438
    6. ':**' → logprob: -14.875106811523438
    7. '       ' → logprob: -15.625106811523438
    8. '>' → logprob: -15.750106811523438
    9. '=' → logprob: -16.000106811523438
    10. '    ' → logprob: -16.000106811523438

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033505186438560486
    2. ' ' → logprob: -4.658504962921143
    3. '    ' → logprob: -5.033504962921143
    4. '<|end|>' → logprob: -5.158504962921143
    5. '   ' → logprob: -5.783504962921143
    6. 'C' → logprob: -6.283504962921143
    7. ' C' → logprob: -6.533504962921143
    8. ' 
' → logprob: -6.533504962921143
    9. '
' → logprob: -6.783504962921143
    10. '    
' → logprob: -7.408504962921143

Token 39: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.28162017464637756
    2. ' C' → logprob: -1.4066201448440552
    3. ' ' → logprob: -8.281620025634766
    4. '   ' → logprob: -8.656620025634766
    5. '    ' → logprob: -10.906620025634766
    6. '	C' → logprob: -11.781620025634766
    7. '       ' → logprob: -12.281620025634766
    8. '  ' → logprob: -12.531620025634766
    9. ' 
' → logprob: -12.906620025634766
    10. '```' → logprob: -14.031620025634766

Token 40: '[x' (ID: 17295)
  Prédit: '[C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.3004439175128937
    2. '[x' → logprob: -1.5504438877105713
    3. '[' → logprob: -3.0504438877105713
    4. 'C' → logprob: -11.800443649291992
    5. '[c' → logprob: -13.050443649291992
    6. '[...]' → logprob: -13.050443649291992
    7. ' [' → logprob: -13.425443649291992
    8. '```' → logprob: -13.675443649291992
    9. '[int' → logprob: -13.800443649291992
    10. '[T' → logprob: -14.050443649291992

Token 41: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011702303774654865
    2. ']+=' → logprob: -4.511702537536621
    3. ' ]' → logprob: -7.386702537536621
    4. '+' → logprob: -11.511702537536621
    5. '+=' → logprob: -12.136702537536621
    6. '+]' → logprob: -12.136702537536621
    7. '']' → logprob: -12.511702537536621
    8. '`]' → logprob: -12.761702537536621
    9. '[' → logprob: -13.136702537536621
    10. ']+' → logprob: -13.261702537536621

Token 42: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.027661755681037903
    2. ' +=' → logprob: -3.7776618003845215
    3. '+' → logprob: -5.6526618003845215
    4. '=' → logprob: -7.6526618003845215
    5. ']+=' → logprob: -7.9026618003845215
    6. '[' → logprob: -10.652661323547363
    7. '++' → logprob: -11.527661323547363
    8. '<|end|>' → logprob: -11.902661323547363
    9. '```' → logprob: -12.652661323547363
    10. '+='' → logprob: -12.902661323547363

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -16.8767032623291
    4. '  ' → logprob: -19.1267032623291
    5. '<|end|>' → logprob: -19.3767032623291
    6. '    ' → logprob: -19.8767032623291
    7. '```' → logprob: -19.8767032623291
    8. ' ' → logprob: -19.8767032623291
    9. '۱' → logprob: -20.3767032623291
    10. '１' → logprob: -20.6267032623291

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.00000762939453
    4. '  ' → logprob: -18.87500762939453
    5. '```' → logprob: -18.87500762939453
    6. '۱' → logprob: -20.50000762939453
    7. '１' → logprob: -20.56250762939453
    8. '' → logprob: -20.68750762939453
    9. '१' → logprob: -21.12500762939453
    10. '`' → logprob: -21.18750762939453

Token 45: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020163318142294884
    2. '<|end|>' → logprob: -4.895163536071777
    3. ' 
' → logprob: -5.270163536071777
    4. '  
' → logprob: -5.895163536071777
    5. '\n' → logprob: -6.020163536071777
    6. '    
' → logprob: -6.770163536071777
    7. '   ' → logprob: -7.770163536071777
    8. ' ' → logprob: -8.895163536071777
    9. '
' → logprob: -9.145163536071777
    10. '```' → logprob: -9.395163536071777

Token 46: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47646528482437134
    2. '<|end|>' → logprob: -2.2264652252197266
    3. '\n' → logprob: -2.3514652252197266
    4. '  
' → logprob: -3.2264652252197266
    5. '    
' → logprob: -3.2264652252197266
    6. '   ' → logprob: -3.2264652252197266
    7. ' 
' → logprob: -4.101465225219727
    8. ' for' → logprob: -4.101465225219727
    9. 'for' → logprob: -5.226465225219727
    10. ' ' → logprob: -5.726465225219727

Token 47: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3587104380130768
    2. 'for' (adapté à ' for') → logprob: -1.3587104082107544
    3. '   ' → logprob: -3.483710527420044
    4. ' ' → logprob: -4.608710289001465
    5. '    
' → logprob: -7.108710289001465
    6. '    ' → logprob: -7.358710289001465
    7. '<|end|>' → logprob: -7.483710289001465
    8. '
' → logprob: -7.608710289001465
    9. '  ' → logprob: -7.858710289001465
    10. '  
' → logprob: -9.108710289001465

Token 48: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0020982760470360518
    2. 'i' → logprob: -6.877098083496094
    3. ' ' → logprob: -7.002098083496094
    4. ' range' → logprob: -9.502098083496094
    5. ' _' → logprob: -10.752098083496094
    6. '   ' → logprob: -11.002098083496094
    7. '_' → logprob: -11.252098083496094
    8. '  ' → logprob: -12.002098083496094
    9. '	i' → logprob: -12.002098083496094
    10. ' ' → logprob: -12.502098083496094

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019483910873532295
    2. 'in' → logprob: -6.501948356628418
    3. ' ' → logprob: -8.001948356628418
    4. '  ' → logprob: -9.376948356628418
    5. 'n' → logprob: -12.001948356628418
    6. '	in' → logprob: -12.001948356628418
    7. '   ' → logprob: -12.126948356628418
    8. 'range' → logprob: -12.876948356628418
    9. ',' → logprob: -13.501948356628418
    10. 'space' → logprob: -14.376948356628418

Token 50: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1002107709646225
    2. ' range' → logprob: -2.350210666656494
    3. '	range' → logprob: -13.350211143493652
    4. '(range' → logprob: -13.475211143493652
    5. ' ' → logprob: -14.475211143493652
    6. ' xrange' → logprob: -15.350211143493652
    7. '1' → logprob: -15.850211143493652
    8. '   ' → logprob: -15.975211143493652
    9. '  ' → logprob: -16.350210189819336
    10. '[' → logprob: -17.975210189819336

Token 51: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0802738870552275e-05
    2. '1' → logprob: -11.87501049041748
    3. '(k' → logprob: -13.25001049041748
    4. ' (' → logprob: -13.37501049041748
    5. '(len' → logprob: -15.12501049041748
    6. '(
' → logprob: -16.625011444091797
    7. '\(' → logprob: -18.000011444091797
    8. ' ' → logprob: -18.125011444091797
    9. '((' → logprob: -18.625011444091797
    10. '   ' → logprob: -18.625011444091797

Token 52: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.128694087266922
    2. ' +' → logprob: -2.1286940574645996
    3. '):' → logprob: -6.8786940574646
    4. '   ' → logprob: -8.253694534301758
    5. ' ' → logprob: -8.253694534301758
    6. '):
' → logprob: -9.128694534301758
    7. '1' → logprob: -9.753694534301758
    8. '
' → logprob: -11.753694534301758
    9. '  ' → logprob: -11.753694534301758
    10. ')' → logprob: -11.878694534301758

Token 53: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7482924461364746
    2. ' C' → logprob: -0.8732924461364746
    3. 'C' → logprob: -2.8732924461364746
    4. '       ' → logprob: -3.6232924461364746
    5. '    ' → logprob: -4.248292446136475
    6. ' ' → logprob: -4.873292446136475
    7. '	C' → logprob: -6.248292446136475
    8. '  ' → logprob: -7.498292446136475
    9. '+' → logprob: -8.248292922973633
    10. ' `' → logprob: -8.623292922973633

Token 54: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.22682403028011322
    2. 'C' (adapté à ' C') → logprob: -1.6018240451812744
    3. '	C' → logprob: -7.101823806762695
    4. '   ' → logprob: -7.851823806762695
    5. '    ' → logprob: -9.601823806762695
    6. '       ' → logprob: -9.726823806762695
    7. ' ' → logprob: -9.976823806762695
    8. ' ' → logprob: -12.476823806762695
    9. '>C' → logprob: -13.101823806762695
    10. '	' → logprob: -13.226823806762695

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005606581107713282
    2. '[' → logprob: -7.500560760498047
    3. '+' → logprob: -13.000560760498047
    4. '```' → logprob: -13.375560760498047
    5. ' [' → logprob: -13.875560760498047
    6. '[k' → logprob: -14.375560760498047
    7. '[I' → logprob: -14.500560760498047
    8. '[j' → logprob: -14.875560760498047
    9. 'i' → logprob: -14.875560760498047
    10. '`' → logprob: -15.375560760498047

Token 56: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07891137897968292
    2. ' +' → logprob: -2.578911304473877
    3. ']' → logprob: -10.953911781311035
    4. ' +=' → logprob: -13.703911781311035
    5. '1' → logprob: -13.953911781311035
    6. ' ' → logprob: -14.453911781311035
    7. '   ' → logprob: -15.078911781311035
    8. '+]' → logprob: -15.078911781311035
    9. '＋' → logprob: -15.078911781311035
    10. '+=' → logprob: -15.328911781311035

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011021859245374799
    2. ' ' → logprob: -9.125110626220703
    3. ']' → logprob: -14.000110626220703
    4. '   ' → logprob: -15.625110626220703
    5. '  ' → logprob: -15.875110626220703
    6. '```' → logprob: -16.875110626220703
    7. '`' → logprob: -17.625110626220703
    8. '0' → logprob: -18.062610626220703
    9. '+' → logprob: -18.125110626220703
    10. '１' → logprob: -18.437610626220703

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -11.25001335144043
    3. '0' → logprob: -15.12501335144043
    4. '   ' → logprob: -16.00001335144043
    5. '  ' → logprob: -17.00001335144043
    6. '`' → logprob: -17.43751335144043
    7. '```' → logprob: -17.75001335144043
    8. '' → logprob: -17.93751335144043
    9. '	' → logprob: -18.18751335144043
    10. '
' → logprob: -18.18751335144043

Token 59: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0723029226064682
    2. ' +=' → logprob: -3.19730281829834
    3. ']+=' → logprob: -3.69730281829834
    4. ' ]' → logprob: -6.32230281829834
    5. '+=' → logprob: -6.44730281829834
    6. ')' → logprob: -7.57230281829834
    7. '    ' → logprob: -10.07230281829834
    8. '[' → logprob: -10.44730281829834
    9. '   ' → logprob: -10.57230281829834
    10. '>' → logprob: -10.57230281829834

Token 60: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10033876448869705
    2. '+=' → logprob: -2.3503386974334717
    3. '=' → logprob: -9.47533893585205
    4. ']+=' → logprob: -10.60033893585205
    5. ' ' → logprob: -11.97533893585205
    6. '	' → logprob: -12.10033893585205
    7. '    ' → logprob: -12.35033893585205
    8. ' =' → logprob: -12.35033893585205
    9. '   ' → logprob: -12.60033893585205
    10. '[' → logprob: -13.22533893585205

Token 61: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.5759488344192505
    2. 'C' → logprob: -0.8259488344192505
    3. '	C' → logprob: -12.575948715209961
    4. ' ' → logprob: -12.575948715209961
    5. '   ' → logprob: -13.325948715209961
    6. '    ' → logprob: -14.825948715209961
    7. ' ' → logprob: -15.825948715209961
    8. '  ' → logprob: -16.07594871520996
    9. '>C' → logprob: -16.20094871520996
    10. '+' → logprob: -16.32594871520996

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9385402993066236e-05
    2. '[' → logprob: -11.500019073486328
    3. 'i' → logprob: -11.750019073486328
    4. '[I' → logprob: -13.750019073486328
    5. '```' → logprob: -15.375019073486328
    6. ' [' → logprob: -17.875019073486328
    7. '`' → logprob: -18.125019073486328
    8. '[C' → logprob: -18.750019073486328
    9. '[j' → logprob: -18.750019073486328
    10. '[int' → logprob: -18.750019073486328

Token 63: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4684946537017822
    2. ' +' → logprob: -1.0934946537017822
    3. ']' → logprob: -3.3434946537017822
    4. ']+' → logprob: -6.093494415283203
    5. ')' → logprob: -6.968494415283203
    6. ' ]' → logprob: -8.343494415283203
    7. ' ' → logprob: -9.968494415283203
    8. ')+' → logprob: -9.968494415283203
    9. '   ' → logprob: -10.218494415283203
    10. '>' → logprob: -10.343494415283203

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13001468777656555
    2. ']' → logprob: -2.255014657974243
    3. '<|end|>' → logprob: -5.005014896392822
    4. 'i' → logprob: -5.880014896392822
    5. '+' → logprob: -5.880014896392822
    6. ' ' → logprob: -6.005014896392822
    7. ']+' → logprob: -6.880014896392822
    8. ')' → logprob: -8.255014419555664
    9. '[i' → logprob: -8.380014419555664
    10. '0' → logprob: -8.880014419555664

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.941093385219574
    2. ']' → logprob: -1.0660934448242188
    3. 'i' → logprob: -1.9410934448242188
    4. '+' → logprob: -2.8160934448242188
    5. ']+' → logprob: -3.3160934448242188
    6. '<|end|>' → logprob: -3.8160934448242188
    7. ')' → logprob: -7.316093444824219
    8. '[i' → logprob: -7.316093444824219
    9. '0' → logprob: -7.566093444824219
    10. ']+=' → logprob: -7.941093444824219

Token 66: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12696003913879395
    2. '+' → logprob: -2.126960039138794
    3. '+C' → logprob: -11.001959800720215
    4. ' ' → logprob: -11.501959800720215
    5. '<|end|>' → logprob: -13.626959800720215
    6. '   ' → logprob: -13.626959800720215
    7. ' +
' → logprob: -14.501959800720215
    8. '    ' → logprob: -14.751959800720215
    9. ' plus' → logprob: -14.876959800720215
    10. ']+' → logprob: -15.126959800720215

Token 67: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16024574637413025
    2. ' +' → logprob: -1.9102457761764526
    3. '+C' → logprob: -11.285245895385742
    4. ' ' → logprob: -12.660245895385742
    5. '   ' → logprob: -13.035245895385742
    6. ' +
' → logprob: -14.160245895385742
    7. '       ' → logprob: -14.285245895385742
    8. '    ' → logprob: -14.910245895385742
    9. '+
' → logprob: -15.035245895385742
    10. '>' → logprob: -15.035245895385742

Token 68: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.12694691121578217
    2. 'C' → logprob: -2.1269469261169434
    3. '	C' → logprob: -11.251946449279785
    4. ' ' → logprob: -12.376946449279785
    5. ' ' → logprob: -13.501946449279785
    6. '    ' → logprob: -15.751946449279785
    7. '   ' → logprob: -16.1269474029541
    8. '	' → logprob: -17.1269474029541
    9. '<|end|>' → logprob: -17.3769474029541
    10. '‌' → logprob: -17.7519474029541

Token 69: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0015041481237858534
    2. '[' → logprob: -6.501503944396973
    3. 'i' → logprob: -14.126503944396973
    4. '[I' → logprob: -14.626503944396973
    5. '[
' → logprob: -15.251503944396973
    6. '```' → logprob: -15.626503944396973
    7. '[int' → logprob: -16.25150489807129
    8. '\[' → logprob: -16.87650489807129
    9. '<|end|>' → logprob: -18.12650489807129
    10. '[k' → logprob: -18.37650489807129

Token 70: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001650068094022572
    2. '<|end|>' → logprob: -6.501649856567383
    3. '   ' → logprob: -10.001649856567383
    4. ']' → logprob: -10.251649856567383
    5. ')return' → logprob: -10.876649856567383
    6. ')
' → logprob: -10.876649856567383
    7. '<|end|>' → logprob: -11.001649856567383
    8. '
' → logprob: -12.501649856567383
    9. '```' → logprob: -12.876649856567383
    10. '}' → logprob: -13.876649856567383

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5313780903816223
    2. ' for' → logprob: -1.5313780307769775
    3. '
' → logprob: -2.0313780307769775
    4. 'for' → logprob: -3.1563780307769775
    5. '    
' → logprob: -4.031378269195557
    6. '  
' → logprob: -6.281378269195557
    7. ' 
' → logprob: -7.531378269195557
    8. '	for' → logprob: -7.781378269195557
    9. '<|end|>' → logprob: -8.031377792358398
    10. '   
' → logprob: -8.281377792358398

Token 72: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6126264929771423
    2. '   ' → logprob: -0.9876264929771423
    3. 'for' (adapté à ' for') → logprob: -2.487626552581787
    4. '    
' → logprob: -6.862626552581787
    5. '
' → logprob: -7.362626552581787
    6. ' ' → logprob: -8.112626075744629
    7. '  ' → logprob: -8.487626075744629
    8. '  
' → logprob: -9.737626075744629
    9. ' 
' → logprob: -9.737626075744629
    10. '    ' → logprob: -9.987626075744629

Token 73: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.01399189978837967
    2. 'x' → logprob: -4.638991832733154
    3. ' i' → logprob: -5.513991832733154
    4. 'i' → logprob: -9.638992309570312
    5. ' ' → logprob: -9.763992309570312
    6. ' A' → logprob: -10.138992309570312
    7. ' a' → logprob: -11.638992309570312
    8. '	x' → logprob: -11.638992309570312
    9. 'A' → logprob: -11.763992309570312
    10. ' j' → logprob: -12.638992309570312

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003233917523175478
    2. 'in' → logprob: -5.878233909606934
    3. ' ' → logprob: -8.253233909606934
    4. '  ' → logprob: -9.003233909606934
    5. ' i' → logprob: -10.878233909606934
    6. 's' → logprob: -11.378233909606934
    7. '   ' → logprob: -12.128233909606934
    8. ' A' → logprob: -13.378233909606934
    9. '[::-' → logprob: -13.503233909606934
    10. '    ' → logprob: -13.628233909606934

Token 75: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -1.1568371057510376
    2. ' A' → logprob: -1.2818371057510376
    3. 'A' → logprob: -1.5318371057510376
    4. ' reversed' → logprob: -1.6568371057510376
    5. ' ' → logprob: -8.156837463378906
    6. 'range' → logprob: -8.281837463378906
    7. ' range' → logprob: -8.656837463378906
    8. '   ' → logprob: -8.781837463378906
    9. '[::-' → logprob: -10.031837463378906
    10. 'rev' → logprob: -10.156837463378906

Token 76: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20143009722232819
    2. '(A' → logprob: -1.701430082321167
    3. ' (' → logprob: -11.701430320739746
    4. '(s' → logprob: -13.326430320739746
    5. '(
' → logprob: -13.826430320739746
    6. '((' → logprob: -13.826430320739746
    7. '(S' → logprob: -13.951430320739746
    8. '(x' → logprob: -14.201430320739746
    9. '(a' → logprob: -14.451430320739746
    10. '('' → logprob: -14.576430320739746

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001167483744211495
    2. ')' → logprob: -6.876167297363281
    3. ':' → logprob: -9.001167297363281
    4. ' ):' → logprob: -11.751167297363281
    5. '):
' → logprob: -13.001167297363281
    6. ']:' → logprob: -14.501167297363281
    7. '   ' → logprob: -15.626167297363281
    8. ')：' → logprob: -16.12616729736328
    9. '():' → logprob: -16.50116729736328
    10. ',' → logprob: -16.87616729736328

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24203349649906158
    2. '        
' → logprob: -2.6170334815979004
    3. ' 
' → logprob: -3.1170334815979004
    4. '    ' → logprob: -3.2420334815979004
    5. ' ' → logprob: -3.4920334815979004
    6. '     
' → logprob: -4.7420334815979
    7. '    
' → logprob: -4.8670334815979
    8. '   ' → logprob: -5.7420334815979
    9. ')' → logprob: -6.3670334815979
    10. '        ' → logprob: -6.6170334815979

Token 79: ' res' (ID: 694)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7863665819168091
    2. ' res' → logprob: -2.0363664627075195
    3. '    ' → logprob: -2.2863664627075195
    4. '   ' → logprob: -2.4113664627075195
    5. ' ' → logprob: -2.6613664627075195
    6. 'res' (adapté à ' res') → logprob: -2.7863664627075195
    7. '       ' → logprob: -2.7863664627075195
    8. '    
' → logprob: -4.9113664627075195
    9. '  ' → logprob: -5.5363664627075195
    10. '
' → logprob: -5.9113664627075195

Token 80: '[C' (ID: 107876)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42874598503112793
    2. '[C' → logprob: -1.053745985031128
    3. ']' → logprob: -11.303746223449707
    4. '[
' → logprob: -11.553746223449707
    5. '[c' → logprob: -11.928746223449707
    6. ' [' → logprob: -12.178746223449707
    7. '\[' → logprob: -12.928746223449707
    8. '[]' → logprob: -13.678746223449707
    9. '[int' → logprob: -13.803746223449707
    10. '[...]' → logprob: -13.803746223449707

Token 81: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.012530840933322906
    2. '[' → logprob: -4.38753080368042
    3. 'x' → logprob: -11.012531280517578
    4. '[
' → logprob: -12.637531280517578
    5. ' [' → logprob: -15.262531280517578
    6. '```' → logprob: -15.262531280517578
    7. '[int' → logprob: -15.637531280517578
    8. '	x' → logprob: -16.137531280517578
    9. '(x' → logprob: -16.137531280517578
    10. ' ' → logprob: -16.387531280517578

Token 82: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0919288620352745
    2. '[x' → logprob: -3.0919289588928223
    3. '-' → logprob: -3.5919289588928223
    4. ']-' → logprob: -4.341928958892822
    5. ' -' → logprob: -6.966928958892822
    6. 'x' → logprob: -7.466928958892822
    7. ' ]' → logprob: -9.091928482055664
    8. '[' → logprob: -9.466928482055664
    9. '   ' → logprob: -9.716928482055664
    10. '(x' → logprob: -11.091928482055664

Token 83: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00525747612118721
    2. ']' → logprob: -6.005257606506348
    3. ' -' → logprob: -6.005257606506348
    4. ']-' → logprob: -8.630257606506348
    5. '[' → logprob: -10.130257606506348
    6. ')' → logprob: -10.380257606506348
    7. ' -=' → logprob: -10.505257606506348
    8. '-=' → logprob: -10.630257606506348
    9. '<|end|>' → logprob: -13.130257606506348
    10. ')-' → logprob: -13.130257606506348

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.625027656555176
    3. '<|end|>' → logprob: -12.875027656555176
    4. '=' → logprob: -14.375027656555176
    5. '<|end|>' → logprob: -17.12502670288086
    6. ']' → logprob: -17.75002670288086
    7. '>' → logprob: -18.00002670288086
    8. ')' → logprob: -18.12502670288086
    9. '```' → logprob: -18.12502670288086
    10. '   ' → logprob: -18.87502670288086

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '<|end|>' → logprob: -14.125000953674316
    3. ' ' → logprob: -14.625000953674316
    4. '=' → logprob: -17.375001907348633
    5. '<|end|>' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.875001907348633
    7. '  ' → logprob: -18.875001907348633
    8. '```' → logprob: -19.125001907348633
    9. '    ' → logprob: -20.500001907348633

Token 86: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.134509021649137e-05
    2. ' ]' → logprob: -9.75006103515625
    3. ']=' → logprob: -13.50006103515625
    4. ')]' → logprob: -14.37506103515625
    5. ']
' → logprob: -14.62506103515625
    6. ')' → logprob: -15.00006103515625
    7. '=' → logprob: -16.50006103515625
    8. '],' → logprob: -17.00006103515625
    9. ':]' → logprob: -17.12506103515625
    10. ']-' → logprob: -17.37506103515625

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048722367733716965
    2. '=' → logprob: -3.048722267150879
    3. ' =
' → logprob: -9.923722267150879
    4. ')' → logprob: -10.548722267150879
    5. ' ' → logprob: -10.798722267150879
    6. ']' → logprob: -11.298722267150879
    7. '<|end|>' → logprob: -11.423722267150879
    8. ' =)' → logprob: -12.798722267150879
    9. ' -=' → logprob: -13.423722267150879
    10. ' ='' → logprob: -13.548722267150879

Token 88: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3132663369178772
    2. 'x' → logprob: -1.3132662773132324
    3. '	x' → logprob: -12.43826675415039
    4. ' ' → logprob: -14.56326675415039
    5. ''x' → logprob: -16.93826675415039
    6. ' ' → logprob: -17.06326675415039
    7. '"x' → logprob: -17.43826675415039
    8. '>x' → logprob: -18.31326675415039
    9. ')x' → logprob: -18.43826675415039
    10. '<|end|>' → logprob: -19.56326675415039

Token 89: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005200197454541922
    2. '   ' → logprob: -5.630200386047363
    3. '	' → logprob: -7.630200386047363
    4. '
' → logprob: -8.130200386047363
    5. '<|end|>' → logprob: -8.130200386047363
    6. ')' → logprob: -8.755200386047363
    7. ' ' → logprob: -9.630200386047363
    8. '        
' → logprob: -10.005200386047363
    9. ' 
' → logprob: -10.130200386047363
    10. '' → logprob: -10.255200386047363

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005910073406994343
    2. '   ' → logprob: -5.2559099197387695
    3. '	' → logprob: -8.13090991973877
    4. '
' → logprob: -9.38090991973877
    5. 'C' → logprob: -9.88090991973877
    6. '<|end|>' → logprob: -10.25590991973877
    7. ' ' → logprob: -10.63090991973877
    8. ')' → logprob: -10.88090991973877
    9. '     ' → logprob: -11.00590991973877
    10. '      ' → logprob: -11.13090991973877

Token 91: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.0021054097451269627
    2. '       ' → logprob: -6.377105236053467
    3. '   ' → logprob: -8.002105712890625
    4. '	C' → logprob: -10.127105712890625
    5. ' C' → logprob: -10.877105712890625
    6. '	   ' → logprob: -12.502105712890625
    7. '  ' → logprob: -13.627105712890625
    8. '    ' → logprob: -13.752105712890625
    9. '      ' → logprob: -14.252105712890625
    10. ' ' → logprob: -14.252105712890625

Token 92: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00023560250701848418
    2. '[' → logprob: -8.500235557556152
    3. 'x' → logprob: -10.375235557556152
    4. '[
' → logprob: -15.250235557556152
    5. '```' → logprob: -15.500235557556152
    6. ' ' → logprob: -16.12523651123047
    7. '	x' → logprob: -16.25023651123047
    8. ' x' → logprob: -16.87523651123047
    9. ' [' → logprob: -17.00023651123047
    10. '{x' → logprob: -17.25023651123047

Token 93: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.03956996649503708
    2. '-' → logprob: -3.914569854736328
    3. '-=' → logprob: -4.414569854736328
    4. ')' → logprob: -5.539569854736328
    5. '<|end|>' → logprob: -6.914569854736328
    6. ' -' → logprob: -6.914569854736328
    7. ']' → logprob: -7.789569854736328
    8. ' ' → logprob: -8.164569854736328
    9. '=' → logprob: -10.039569854736328
    10. ')-' → logprob: -10.664569854736328

Token 94: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.03335738927125931
    2. '-=' → logprob: -3.9083573818206787
    3. '-' → logprob: -4.408357620239258
    4. ' -' → logprob: -8.533357620239258
    5. ' ' → logprob: -8.908357620239258
    6. '<|end|>' → logprob: -9.158357620239258
    7. '=' → logprob: -9.908357620239258
    8. ' =' → logprob: -10.033357620239258
    9. ')' → logprob: -11.783357620239258
    10. '```' → logprob: -11.908357620239258

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.250085830688477
    4. '<|end|>' → logprob: -16.000085830688477
    5. '```' → logprob: -16.125085830688477
    6. '  ' → logprob: -16.750085830688477
    7. ' ' → logprob: -17.625085830688477
    8. '۱' → logprob: -18.437585830688477
    9. '	' → logprob: -18.500085830688477
    10. '>' → logprob: -18.500085830688477

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. '<|end|>' → logprob: -15.250003814697266
    4. '```' → logprob: -16.375003814697266
    5. '   ' → logprob: -16.500003814697266
    6. '۱' → logprob: -17.500003814697266
    7. '  ' → logprob: -17.750003814697266
    8. '１' → logprob: -18.125003814697266
    9. '>' → logprob: -18.312503814697266
    10. '१' → logprob: -18.750003814697266

Token 97: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04055273160338402
    2. '
' → logprob: -3.9155526161193848
    3. ' ' → logprob: -5.290552616119385
    4. ' return' → logprob: -5.415552616119385
    5. 'return' → logprob: -6.165552616119385
    6. '    
' → logprob: -6.290552616119385
    7. 'r' → logprob: -6.790552616119385
    8. '<|end|>' → logprob: -6.915552616119385
    9. '	return' → logprob: -7.290552616119385
    10. '\n' → logprob: -7.415552616119385

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011149567551910877
    2. 'return' → logprob: -5.2611494064331055
    3. 'r' → logprob: -6.1361494064331055
    4. '
' → logprob: -6.3861494064331055
    5. ' return' → logprob: -6.8861494064331055
    6. '    
' → logprob: -7.7611494064331055
    7. ':return' → logprob: -9.011149406433105
    8. ' ' → logprob: -9.136149406433105
    9. '	return' → logprob: -9.261149406433105
    10. '```' → logprob: -9.386149406433105

Token 99: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0023638748098164797
    2. '   ' → logprob: -6.252363681793213
    3. ' return' → logprob: -7.752363681793213
    4. ' ' → logprob: -13.252364158630371
    5. '	return' → logprob: -13.752364158630371
    6. 'ret' → logprob: -14.002364158630371
    7. ':return' → logprob: -14.877364158630371
    8. '  ' → logprob: -15.002364158630371
    9. '```' → logprob: -15.002364158630371
    10. 'r' → logprob: -15.127364158630371

Token 100: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.0788925439119339
    2. 'res' → logprob: -2.578892469406128
    3. '(res' → logprob: -13.953892707824707
    4. ' ' → logprob: -14.078892707824707
    5. '	res' → logprob: -14.203892707824707
    6. ' ' → logprob: -15.578892707824707
    7. 'space' → logprob: -16.45389175415039
    8. 'r' → logprob: -17.82889175415039
    9. '<|end|>' → logprob: -17.95389175415039
    10. '$res' → logprob: -18.07889175415039

Token 101: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: 'input' (ID: 2586)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.186672329902649
    2. '
' → logprob: -1.811672329902649
    3. '<|end|>' → logprob: -2.1866722106933594
    4. ' ' → logprob: -2.3116722106933594
    5. '(' → logprob: -2.3116722106933594
    6. '\n' → logprob: -2.5616722106933594
    7. '```' → logprob: -3.0616722106933594
    8. ')' → logprob: -3.0616722106933594
    9. '\' → logprob: -4.061672210693359
    10. 'n' → logprob: -4.936672210693359

Token 103: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03063194639980793
    2. '()' → logprob: -4.155632019042969
    3. '_' → logprob: -4.905632019042969
    4. '[' → logprob: -6.030632019042969
    5. '_data' → logprob: -6.780632019042969
    6. '('' → logprob: -7.655632019042969
    7. ' =' → logprob: -7.780632019042969
    8. '(
' → logprob: -7.780632019042969
    9. '[:]' → logprob: -8.030632019042969
    10. '("' → logprob: -8.530632019042969

Token 104: 'A' (ID: 32)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0021371750626713037
    2. '.split' → logprob: -7.127137184143066
    3. '[' → logprob: -7.502137184143066
    4. '.sort' → logprob: -8.377137184143066
    5. ' =' → logprob: -8.877137184143066
    6. '[:]' → logprob: -9.377137184143066
    7. '=' → logprob: -9.627137184143066
    8. '.append' → logprob: -10.002137184143066
    9. '.strip' → logprob: -10.002137184143066
    10. '.=' → logprob: -11.002137184143066

Token 106: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07042118161916733
    2. ' list' → logprob: -2.8204212188720703
    3. '[' → logprob: -5.19542121887207
    4. '[list' → logprob: -5.94542121887207
    5. ' [' → logprob: -8.69542121887207
    6. '[input' → logprob: -9.94542121887207
    7. '[]' → logprob: -11.19542121887207
    8. '[int' → logprob: -11.19542121887207
    9. 'input' → logprob: -12.44542121887207
    10. '=list' → logprob: -12.69542121887207

Token 107: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2845759391784668
    2. '(' → logprob: -1.4095759391784668
    3. '(input' → logprob: -6.284575939178467
    4. '(int' → logprob: -6.534575939178467
    5. '()' → logprob: -10.409576416015625
    6. '(range' → logprob: -10.784576416015625
    7. '(eval' → logprob: -11.284576416015625
    8. '(filter' → logprob: -11.784576416015625
    9. '(
' → logprob: -12.284576416015625
    10. '(

' → logprob: -12.409576416015625

Token 108: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10207046568393707
    2. '(' → logprob: -2.4770705699920654
    3. '(str' → logprob: -4.352070331573486
    4. '(input' → logprob: -9.227070808410645
    5. '(
' → logprob: -10.227070808410645
    6. '<int' → logprob: -12.227070808410645
    7. '<|end|>' → logprob: -12.352070808410645
    8. '(lambda' → logprob: -12.602070808410645
    9. 'int' → logprob: -12.852070808410645
    10. '(float' → logprob: -12.977070808410645

Token 109: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.056237973272800446
    2. '(' → logprob: -3.4312379360198975
    3. ',input' → logprob: -4.181238174438477
    4. 'input' → logprob: -5.431238174438477
    5. ',' → logprob: -6.306238174438477
    6. ')' → logprob: -7.431238174438477
    7. '<|end|>' → logprob: -8.806238174438477
    8. ' input' → logprob: -10.681238174438477
    9. '(
' → logprob: -11.306238174438477
    10. '=input' → logprob: -11.431238174438477

Token 110: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011213688179850578
    2. ' input' → logprob: -4.511213779449463
    3. '(input' → logprob: -9.261213302612305
    4. ',input' → logprob: -9.886213302612305
    5. ')' → logprob: -11.386213302612305
    6. '=input' → logprob: -13.011213302612305
    7. '	input' → logprob: -13.261213302612305
    8. '<input' → logprob: -13.386213302612305
    9. '   ' → logprob: -13.886213302612305
    10. ' ' → logprob: -13.886213302612305

Token 111: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.1318875446449965e-05
    2. '()' → logprob: -10.125041007995605
    3. ' ().' → logprob: -15.250041007995605
    4. '(' → logprob: -15.375041007995605
    5. '()
' → logprob: -15.500041007995605
    6. '())' → logprob: -15.625041007995605
    7. ')' → logprob: -15.750041007995605
    8. '()))' → logprob: -16.750041961669922
    9. '('').' → logprob: -17.500041961669922
    10. '("").' → logprob: -17.750041961669922

Token 112: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00409419322386384
    2. 'strip' → logprob: -5.504094123840332
    3. 'rstrip' → logprob: -11.129094123840332
    4. ' split' → logprob: -14.004094123840332
    5. '(split' → logprob: -15.754094123840332
    6. ')' → logprob: -17.00409507751465
    7. ' ' → logprob: -17.50409507751465
    8. 'spl' → logprob: -17.50409507751465
    9. 's' → logprob: -18.00409507751465
    10. ' strip' → logprob: -18.12909507751465

Token 113: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07128940522670746
    2. '))' → logprob: -3.071289300918579
    3. '())' → logprob: -4.321289539337158
    4. '()' → logprob: -4.821289539337158
    5. ')' → logprob: -7.071289539337158
    6. '(' → logprob: -8.6962890625
    7. '()))
' → logprob: -9.5712890625
    8. '()));' → logprob: -12.0712890625
    9. '())))' → logprob: -12.3212890625
    10. ')))' → logprob: -13.1962890625

Token 114: 'ret' (ID: 3431)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19146576523780823
    2. 'k' → logprob: -2.0664658546447754
    3. 'sorted' → logprob: -3.8164658546447754
    4. 'res' → logprob: -4.191465854644775
    5. 'result' → logprob: -4.941465854644775
    6. 'n' → logprob: -7.316465854644775
    7. 'r' → logprob: -7.441465854644775
    8. 'output' → logprob: -7.691465854644775
    9. 'A' → logprob: -7.691465854644775
    10. '<|end|>' → logprob: -8.441465377807617

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026641743257641792
    2. ' =' → logprob: -3.651641845703125
    3. 's' → logprob: -9.276641845703125
    4. '_=' → logprob: -9.401641845703125
    5. '_' → logprob: -10.276641845703125
    6. 'ort' → logprob: -10.276641845703125
    7. '(' → logprob: -10.526641845703125
    8. '()' → logprob: -10.651641845703125
    9. '=[]' → logprob: -12.276641845703125
    10. 'o' → logprob: -13.026641845703125

Token 116: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07889022678136826
    2. ' count' → logprob: -2.578890323638916
    3. '(count' → logprob: -15.578889846801758
    4. '[count' → logprob: -15.953889846801758
    5. '	count' → logprob: -16.578889846801758
    6. ' ' → logprob: -17.203889846801758
    7. 'counter' → logprob: -18.578889846801758
    8. '.count' → logprob: -18.703889846801758
    9. 'sorted' → logprob: -18.703889846801758
    10. '=count' → logprob: -18.703889846801758

Token 117: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -2.8325677703833207e-05
    2. 'ing' → logprob: -10.625028610229492
    3. 'ingss' → logprob: -12.625028610229492
    4. 'count' → logprob: -16.125028610229492
    5. 's' → logprob: -16.250028610229492
    6. 'igs' → logprob: -16.375028610229492
    7. '```' → logprob: -16.500028610229492
    8. 'ins' → logprob: -16.625028610229492
    9. ' ' → logprob: -17.250028610229492
    10. 'i' → logprob: -17.250028610229492

Token 118: 'ort' (ID: 390)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -6.301394023466855e-05
    2. 'ort' → logprob: -9.750062942504883
    3. 's' → logprob: -12.875062942504883
    4. '(sort' → logprob: -14.500062942504883
    5. '_sort' → logprob: -14.625062942504883
    6. 'sorted' → logprob: -14.875062942504883
    7. 'so' → logprob: -15.375062942504883
    8. ' sort' → logprob: -15.500062942504883
    9. 'Sort' → logprob: -15.875062942504883
    10. '	sort' → logprob: -16.250062942504883

Token 119: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.023258639499545097
    2. '(' → logprob: -3.773258686065674
    3. '(
' → logprob: -11.648258209228516
    4. '((' → logprob: -12.898258209228516
    5. ' (' → logprob: -13.898258209228516
    6. '(

' → logprob: -15.523258209228516
    7. '(a' → logprob: -15.898258209228516
    8. '```' → logprob: -16.023258209228516
    9. '(B' → logprob: -16.523258209228516
    10. '("("' → logprob: -16.773258209228516

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017565040616318583
    2. ',len' → logprob: -8.875175476074219
    3. 'len' → logprob: -11.375175476074219
    4. ')' → logprob: -11.500175476074219
    5. '(len' → logprob: -11.875175476074219
    6. ' ,' → logprob: -13.000175476074219
    7. ',)' → logprob: -13.250175476074219
    8. ',max' → logprob: -13.875175476074219
    9. ',
' → logprob: -14.875175476074219
    10. '(' → logprob: -15.000175476074219

Token 121: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0024779161904007196
    2. ' max' → logprob: -6.002478122711182
    3. '(max' → logprob: -13.252477645874023
    4. '	max' → logprob: -15.377477645874023
    5. ')' → logprob: -16.127477645874023
    6. '[max' → logprob: -16.252477645874023
    7. ' ' → logprob: -16.752477645874023
    8. '=max' → logprob: -17.877477645874023
    9. '   ' → logprob: -18.002477645874023
    10. '<|end|>' → logprob: -18.502477645874023

Token 122: '100' (ID: 1353)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.036524842376821e-05
    2. ' max' → logprob: -10.250040054321289
    3. '(max' → logprob: -12.250040054321289
    4. '[max' → logprob: -15.750040054321289
    5. '	max' → logprob: -17.12504005432129
    6. '=max' → logprob: -17.87504005432129
    7. ')' → logprob: -18.37504005432129
    8. '   ' → logprob: -19.00004005432129
    9. ',max' → logprob: -19.62504005432129
    10. '100' → logprob: -19.75004005432129

Token 123: '00' (ID: 504)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.931863051955588e-05
    2. ' )' → logprob: -10.500059127807617
    3. '0' → logprob: -10.875059127807617
    4. '9' → logprob: -11.750059127807617
    5. ')
' → logprob: -13.250059127807617
    6. '5' → logprob: -14.250059127807617
    7. '2' → logprob: -14.500059127807617
    8. ')

' → logprob: -14.500059127807617
    9. '4' → logprob: -15.125059127807617
    10. '1' → logprob: -15.250059127807617

Token 124: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011677479778882116
    2. '))' → logprob: -9.375116348266602
    3. ')
' → logprob: -10.375116348266602
    4. ')

' → logprob: -15.000116348266602
    5. ' )' → logprob: -16.2501163482666
    6. '0' → logprob: -16.5001163482666
    7. '1' → logprob: -17.2501163482666
    8. '')' → logprob: -17.2501163482666
    9. ')))' → logprob: -17.3751163482666
    10. ')`' → logprob: -17.7501163482666

Token 125: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002615742268972099
    2. 'for' → logprob: -8.250261306762695
    3. '```' → logprob: -15.625261306762695
    4. '#print' → logprob: -16.000261306762695
    5. ' print' → logprob: -17.250261306762695
    6. '
' → logprob: -17.750261306762695
    7. 'pr' → logprob: -18.250261306762695
    8. ' for' → logprob: -19.500261306762695
    9. '<|end|>' → logprob: -19.875261306762695
    10. '  
' → logprob: -20.000261306762695

Token 126: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25203195214271545
    2. '(ret' → logprob: -1.502031922340393
    3. '("("' → logprob: -9.877032279968262
    4. '(res' → logprob: -10.627032279968262
    5. '('' → logprob: -11.377032279968262
    6. '(len' → logprob: -12.752032279968262
    7. '(re' → logprob: -12.877032279968262
    8. '(rest' → logprob: -13.252032279968262
    9. '(return' → logprob: -13.502032279968262
    10. '(
' → logprob: -13.752032279968262

Token 127: ' ".' (ID: 11730)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.26000362634658813
    2. '*' → logprob: -1.5100035667419434
    3. ''' → logprob: -5.885003566741943
    4. 'ret' → logprob: -6.260003566741943
    5. '"' → logprob: -6.385003566741943
    6. ' *' → logprob: -7.260003566741943
    7. '('' → logprob: -7.760003566741943
    8. '(' → logprob: -8.260004043579102
    9. '(ret' → logprob: -9.135004043579102
    10. ' ret' → logprob: -9.260004043579102

Token 128: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -9.088346359931165e-07
    2. 'jo' → logprob: -14.750000953674316
    3. 'j' → logprob: -15.500000953674316
    4. 'print' → logprob: -16.125
    5. ' join' → logprob: -16.25
    6. '```' → logprob: -18.0
    7. ' ' → logprob: -18.125
    8. '
' → logprob: -19.625
    9. '(join' → logprob: -20.375
    10. '.' → logprob: -20.375

Token 129: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.1627121865749359
    2. '(str' → logprob: -1.9127122163772583
    3. '(' → logprob: -6.037712097167969
    4. 'map' → logprob: -9.912712097167969
    5. '(list' → logprob: -10.912712097167969
    6. 'str' → logprob: -11.037712097167969
    7. ')' → logprob: -12.037712097167969
    8. '([' → logprob: -12.412712097167969
    9. ' map' → logprob: -13.787712097167969
    10. '(
' → logprob: -13.787712097167969

Token 130: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0026273811236023903
    2. '(' → logprob: -6.127627372741699
    3. 'str' → logprob: -8.0026273727417
    4. ')' → logprob: -9.6276273727417
    5. '=str' → logprob: -11.6276273727417
    6. '[str' → logprob: -11.7526273727417
    7. '(
' → logprob: -11.7526273727417
    8. ' str' → logprob: -12.0026273727417
    9. '	str' → logprob: -12.0026273727417
    10. '```' → logprob: -13.6276273727417

Token 131: ',' (ID: 11)
  Prédit: '(ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.004977104719728231
    2. '(' → logprob: -5.504977226257324
    3. ',' → logprob: -7.504977226257324
    4. '(res' → logprob: -8.254977226257324
    5. '(
' → logprob: -10.254977226257324
    6. ' (' → logprob: -10.379977226257324
    7. '(return' → logprob: -12.254977226257324
    8. '(rest' → logprob: -12.754977226257324
    9. ')' → logprob: -12.879977226257324
    10. '(r' → logprob: -13.004977226257324

Token 132: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0024775585625320673
    2. ' ret' → logprob: -6.002477645874023
    3. '(ret' → logprob: -13.252477645874023
    4. '	ret' → logprob: -17.502477645874023
    5. '$ret' → logprob: -18.002477645874023
    6. 'rets' → logprob: -18.502477645874023
    7. '_ret' → logprob: -19.377477645874023
    8. ')' → logprob: -19.877477645874023
    9. '.ret' → logprob: -20.502477645874023
    10. 'retval' → logprob: -20.627477645874023

Token 133: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5768992304801941
    2. ')))' → logprob: -0.8268992304801941
    3. ')' → logprob: -6.95189905166626
    4. '))))' → logprob: -13.451899528503418
    5. ')))
' → logprob: -15.201899528503418
    6. '))
' → logprob: -15.326899528503418
    7. ')));' → logprob: -15.951899528503418
    8. '()))' → logprob: -15.951899528503418
    9. ' ))' → logprob: -16.4518985748291
    10. '()' → logprob: -16.8268985748291


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 131
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 113
Précision stricte (1ère position): 42.75%
Précision adaptée (1ère position): 45.80%
Précision (top 10): 86.26%
================================================================================
