================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
INF = 10 ** 18
n, m = map(int, input().split())
c = list(map(int, input().split()))
dp = [INF] * (n + 1)
dp[0] = 0
for i in range(m):
    for j in range(c[i], n + 1):
        dp[j] = min(dp[j], dp[j - c[i]] + 1)

print(dp[n])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'INF' (ID: 64358)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.27699604630470276
    2. '10' → logprob: -2.15199613571167
    3. ' float' → logprob: -2.65199613571167
    4. ' ' → logprob: -3.15199613571167
    5. '1' → logprob: -4.65199613571167
    6. 'int' → logprob: -6.77699613571167
    7. '100' → logprob: -6.90199613571167
    8. '999' → logprob: -7.77699613571167
    9. 'inf' → logprob: -9.151995658874512
    10. ' int' → logprob: -9.651995658874512

Token 4: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40936174988746643
    2. '**' → logprob: -1.159361720085144
    3. '_' → logprob: -4.909361839294434
    4. '*' → logprob: -5.034361839294434
    5. '000' → logprob: -6.409361839294434
    6. '^' → logprob: -6.534361839294434
    7. ' **' → logprob: -6.659361839294434
    8. '6' → logprob: -6.659361839294434
    9. '00' → logprob: -7.034361839294434
    10. '4' → logprob: -7.659361839294434

Token 5: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '09' → logprob: -16.500009536743164
    4. '```' → logprob: -16.500009536743164
    5. '   ' → logprob: -17.875009536743164
    6. ' ' → logprob: -18.250009536743164
    7. '**' → logprob: -18.625009536743164
    8. '``' → logprob: -19.000009536743164
    9. '  ' → logprob: -19.875009536743164
    10. '18' → logprob: -20.250009536743164

Token 6: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.5048530030981055e-06
    2. '6' → logprob: -14.375001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '```' → logprob: -15.500001907348633
    5. '18' → logprob: -15.750001907348633
    6. '``' → logprob: -18.000001907348633
    7. '12' → logprob: -18.250001907348633
    8. '09' → logprob: -18.625001907348633
    9. '**' → logprob: -19.250001907348633
    10. ' ' → logprob: -19.500001907348633

Token 7: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4358055293560028
    2. '+' → logprob: -1.9358055591583252
    3. '_' → logprob: -2.310805559158325
    4. '\n' → logprob: -3.560805559158325
    5. '\' → logprob: -3.685805559158325
    6. '```' → logprob: -4.060805320739746
    7. '#' → logprob: -4.560805320739746
    8. '
' → logprob: -5.060805320739746
    9. '-' → logprob: -5.060805320739746
    10. '**' → logprob: -5.310805320739746

Token 8: 'n' (ID: 77)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9651440978050232
    2. '\n' → logprob: -1.840144157409668
    3. '
' → logprob: -1.965144157409668
    4. '+' → logprob: -2.215144157409668
    5. '*' → logprob: -2.340144157409668
    6. '#' → logprob: -3.590144157409668
    7. '\' → logprob: -3.840144157409668
    8. ')' → logprob: -4.340144157409668
    9. '' → logprob: -4.840144157409668
    10. '-' → logprob: -4.840144157409668

Token 9: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3880695402622223
    2. '_' → logprob: -1.5130695104599
    3. '[' → logprob: -2.7630696296691895
    4. ' =' → logprob: -4.5130696296691895
    5. ')' → logprob: -4.8880696296691895
    6. '.' → logprob: -5.2630696296691895
    7. '=' → logprob: -5.2630696296691895
    8. ',' → logprob: -6.3880696296691895
    9. '+' → logprob: -6.7630696296691895
    10. ''' → logprob: -7.1380696296691895

Token 10: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7477918863296509
    2. ' m' → logprob: -1.3727918863296509
    3. ' k' → logprob: -2.3727917671203613
    4. 'k' → logprob: -2.7477917671203613
    5. ' ' → logprob: -2.8727917671203613
    6. 'a' → logprob: -3.7477917671203613
    7. ' a' → logprob: -4.497791767120361
    8. '=' → logprob: -4.872791767120361
    9. ' INF' → logprob: -4.872791767120361
    10. 'x' → logprob: -6.122791767120361

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.328971266746521
    2. '=' → logprob: -1.453971266746521
    3. ',' → logprob: -3.0789713859558105
    4. '<|end|>' → logprob: -8.328970909118652
    5. ')' → logprob: -8.828970909118652
    6. ' ' → logprob: -9.078970909118652
    7. ' ,' → logprob: -9.078970909118652
    8. '<|end|>' → logprob: -11.203970909118652
    9. '```' → logprob: -11.328970909118652
    10. ' =
' → logprob: -12.203970909118652

Token 12: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5853840708732605
    2. 'map' → logprob: -0.8353840708732605
    3. '0' → logprob: -5.210383892059326
    4. ' ' → logprob: -6.085383892059326
    5. 'input' → logprob: -6.960383892059326
    6. ' input' → logprob: -7.960383892059326
    7. '10' → logprob: -9.335384368896484
    8. 'int' → logprob: -9.585384368896484
    9. ' list' → logprob: -9.585384368896484
    10. 'list' → logprob: -9.710384368896484

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6041938066482544
    2. '(' → logprob: -0.8541938066482544
    3. '(lambda' → logprob: -4.229193687438965
    4. '(str' → logprob: -4.479193687438965
    5. '[int' → logprob: -7.854193687438965
    6. '<|end|>' → logprob: -7.979193687438965
    7. 'int' → logprob: -8.104193687438965
    8. '(input' → logprob: -9.104193687438965
    9. '(user' → logprob: -9.229193687438965
    10. '<int' → logprob: -9.354193687438965

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06582136452198029
    2. '(input' → logprob: -3.690821409225464
    3. ',input' → logprob: -4.065821170806885
    4. '(' → logprob: -4.690821170806885
    5. 'input' → logprob: -5.190821170806885
    6. ')' → logprob: -5.440821170806885
    7. '```' → logprob: -7.940821170806885
    8. '),' → logprob: -8.065821647644043
    9. '(),' → logprob: -8.190821647644043
    10. '(int' → logprob: -8.565821647644043

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20142260193824768
    2. ' input' → logprob: -1.7014225721359253
    3. ')' → logprob: -12.076422691345215
    4. ' ' → logprob: -13.576422691345215
    5. '(input' → logprob: -13.826422691345215
    6. ' )' → logprob: -14.701422691345215
    7. ',input' → logprob: -15.076422691345215
    8. '=input' → logprob: -15.326422691345215
    9. 'str' → logprob: -15.951422691345215
    10. '	input' → logprob: -16.3264217376709

Token 16: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.35275164246559143
    2. '()' → logprob: -1.227751612663269
    3. '().' → logprob: -5.727751731872559
    4. '(' → logprob: -7.977751731872559
    5. ')' → logprob: -8.352751731872559
    6. '());' → logprob: -8.727751731872559
    7. '(),' → logprob: -9.102751731872559
    8. '()),' → logprob: -9.977751731872559
    9. '('' → logprob: -10.727751731872559
    10. '()`' → logprob: -10.727751731872559

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043817906407639384
    2. 'strip' → logprob: -7.750438213348389
    3. 'rstrip' → logprob: -12.00043773651123
    4. ' split' → logprob: -14.25043773651123
    5. 'read' → logprob: -14.75043773651123
    6. ')' → logprob: -15.50043773651123
    7. '(split' → logprob: -16.750438690185547
    8. 'spl' → logprob: -16.750438690185547
    9. 's' → logprob: -17.375438690185547
    10. '_split' → logprob: -17.500438690185547

Token 18: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010326245799660683
    2. '))' → logprob: -4.635326385498047
    3. '())' → logprob: -8.260326385498047
    4. '')' → logprob: -8.760326385498047
    5. '`)' → logprob: -10.260326385498047
    6. '('' → logprob: -10.385326385498047
    7. '),' → logprob: -10.885326385498047
    8. '()' → logprob: -11.260326385498047
    9. '(' → logprob: -11.260326385498047
    10. '(','' → logprob: -11.385326385498047

Token 19: 'c' (ID: 66)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1708645820617676
    2. 'graph' → logprob: -1.1708645820617676
    3. 'for' → logprob: -2.9208645820617676
    4. 'dp' → logprob: -3.0458645820617676
    5. ' 
' → logprob: -3.4208645820617676
    6. 'array' → logprob: -3.4208645820617676
    7. 'd' → logprob: -3.4208645820617676
    8. '
' → logprob: -3.6708645820617676
    9. 's' → logprob: -4.295864582061768
    10. 'data' → logprob: -4.670864582061768

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8393546938896179
    2. 'ost' → logprob: -1.4643547534942627
    3. 'o' → logprob: -1.7143547534942627
    4. '[' → logprob: -3.3393547534942627
    5. 'ount' → logprob: -3.3393547534942627
    6. 'ol' → logprob: -4.214354515075684
    7. 'h' → logprob: -4.339354515075684
    8. '[]' → logprob: -4.964354515075684
    9. '=' → logprob: -5.214354515075684
    10. '=[]' → logprob: -5.339354515075684

Token 21: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1983339637517929
    2. ' list' → logprob: -2.698333978652954
    3. '[' → logprob: -2.823333978652954
    4. 'list' → logprob: -3.573333978652954
    5. '[list' → logprob: -4.698333740234375
    6. ' []' → logprob: -4.948333740234375
    7. '[]' → logprob: -5.323333740234375
    8. '[input' → logprob: -5.948333740234375
    9. '[int' → logprob: -6.948333740234375
    10. ' [[]' → logprob: -9.448333740234375

Token 22: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07038140296936035
    2. '(int' → logprob: -3.0703814029693604
    3. '(range' → logprob: -4.195381164550781
    4. '(map' → logprob: -5.195381164550781
    5. '(input' → logprob: -7.945381164550781
    6. '(list' → logprob: -8.570381164550781
    7. '(

' → logprob: -9.070381164550781
    8. '(eval' → logprob: -10.070381164550781
    9. '[int' → logprob: -10.445381164550781
    10. '(len' → logprob: -10.445381164550781

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.034682661294937134
    2. '(' → logprob: -3.4096827507019043
    3. '(str' → logprob: -7.534682750701904
    4. ')' → logprob: -8.534682273864746
    5. ')(' → logprob: -9.284682273864746
    6. '[int' → logprob: -9.659682273864746
    7. '=int' → logprob: -10.659682273864746
    8. '<int' → logprob: -10.659682273864746
    9. '(input' → logprob: -10.909682273864746
    10. '<|end|>' → logprob: -11.159682273864746

Token 24: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07802008837461472
    2. '(' → logprob: -2.8280200958251953
    3. ',input' → logprob: -4.453020095825195
    4. ',' → logprob: -6.078020095825195
    5. '(int' → logprob: -6.578020095825195
    6. ' (' → logprob: -8.203020095825195
    7. ' ,' → logprob: -9.703020095825195
    8. '```' → logprob: -9.828020095825195
    9. 'input' → logprob: -10.453020095825195
    10. '(),' → logprob: -10.703020095825195

Token 25: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020958632230759
    2. ' input' → logprob: -2.3502094745635986
    3. '(input' → logprob: -13.35020923614502
    4. ',input' → logprob: -15.10020923614502
    5. ' ' → logprob: -15.22520923614502
    6. ')' → logprob: -15.60020923614502
    7. '=input' → logprob: -15.85020923614502
    8. 'list' → logprob: -16.100210189819336
    9. 'range' → logprob: -16.350210189819336
    10. '	input' → logprob: -16.850210189819336

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0012212978908792138
    2. '(' → logprob: -7.251221179962158
    3. '()' → logprob: -8.251221656799316
    4. '())' → logprob: -9.126221656799316
    5. '(.' → logprob: -9.626221656799316
    6. '()))' → logprob: -10.501221656799316
    7. '(int' → logprob: -11.501221656799316
    8. '(),' → logprob: -12.126221656799316
    9. ')' → logprob: -12.626221656799316
    10. ' ().' → logprob: -12.626221656799316

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.173704271830502e-06
    2. 'strip' → logprob: -12.87500286102295
    3. '(split' → logprob: -14.75000286102295
    4. ' split' → logprob: -16.125003814697266
    5. 'rstrip' → logprob: -17.375003814697266
    6. 'spl' → logprob: -18.750003814697266
    7. ')' → logprob: -19.750003814697266
    8. '()' → logprob: -20.625003814697266
    9. 'plit' → logprob: -20.875003814697266
    10. '())' → logprob: -21.250003814697266

Token 28: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04684381186962128
    2. '())' → logprob: -3.4218437671661377
    3. '))' → logprob: -4.796844005584717
    4. '()' → logprob: -6.171844005584717
    5. '(' → logprob: -6.296844005584717
    6. ')' → logprob: -7.171844005584717
    7. '()))
' → logprob: -9.796843528747559
    8. '()));' → logprob: -10.421843528747559
    9. '())))' → logprob: -11.046843528747559
    10. '()))

' → logprob: -11.046843528747559

Token 29: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4617977440357208
    2. 'd' → logprob: -1.7117977142333984
    3. 'a' → logprob: -2.4617977142333984
    4. 'for' → logprob: -4.336797714233398
    5. 'p' → logprob: -4.461797714233398
    6. 'b' → logprob: -4.586797714233398
    7. 'q' → logprob: -4.711797714233398
    8. 'c' → logprob: -4.836797714233398
    9. 'k' → logprob: -5.086797714233398
    10. 's' → logprob: -5.211797714233398

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0252275038510561
    2. '[' → logprob: -4.2752275466918945
    3. '=' → logprob: -4.5252275466918945
    4. ' ' → logprob: -9.400227546691895
    5. ' =[' → logprob: -10.400227546691895
    6. '=[' → logprob: -11.400227546691895
    7. '_' → logprob: -11.650227546691895
    8. '[:]' → logprob: -12.025227546691895
    9. ')' → logprob: -12.525227546691895
    10. '.' → logprob: -12.775227546691895

Token 31: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07954781502485275
    2. ' [' → logprob: -2.579547882080078
    3. '[-' → logprob: -7.954547882080078
    4. '[[' → logprob: -8.704547882080078
    5. ' [[' → logprob: -9.079547882080078
    6. ' [-' → logprob: -10.954547882080078
    7. '[n' → logprob: -12.329547882080078
    8. '{' → logprob: -13.579547882080078
    9. '[len' → logprob: -14.079547882080078
    10. '[in' → logprob: -14.454547882080078

Token 32: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.024231985211372375
    2. '0' → logprob: -4.399231910705566
    3. '[' → logprob: -4.774231910705566
    4. '-INF' → logprob: -6.399231910705566
    5. ' INF' → logprob: -7.149231910705566
    6. '-' → logprob: -7.774231910705566
    7. ' [' → logprob: -9.774231910705566
    8. '-inf' → logprob: -9.899231910705566
    9. '_INF' → logprob: -10.149231910705566
    10. 'False' → logprob: -10.649231910705566

Token 33: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00024299313372466713
    2. ']*' → logprob: -8.875243186950684
    3. ' ]' → logprob: -9.875243186950684
    4. ' for' → logprob: -11.000243186950684
    5. ')]' → logprob: -11.000243186950684
    6. ']*(' → logprob: -11.250243186950684
    7. ',' → logprob: -13.250243186950684
    8. ']+' → logprob: -14.375243186950684
    9. '`]' → logprob: -14.375243186950684
    10. '()]' → logprob: -14.500243186950684

Token 34: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3248055577278137
    2. '*' → logprob: -1.949805498123169
    3. ' for' → logprob: -2.699805498123169
    4. ',' → logprob: -3.574805498123169
    5. ']*' → logprob: -4.574805736541748
    6. ' *' → logprob: -4.949805736541748
    7. '[' → logprob: -5.074805736541748
    8. ')' → logprob: -5.699805736541748
    9. ']+' → logprob: -5.824805736541748
    10. ']*(' → logprob: -5.824805736541748

Token 35: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.03294695168733597
    2. '(n' → logprob: -3.657947063446045
    3. '(' → logprob: -5.032947063446045
    4. ' (' → logprob: -9.907946586608887
    5. '((' → logprob: -10.657946586608887
    6. '(max' → logprob: -11.157946586608887
    7. '(c' → logprob: -12.532946586608887
    8. '(sum' → logprob: -12.782946586608887
    9. 'm' → logprob: -12.907946586608887
    10. '(M' → logprob: -13.282946586608887

Token 36: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.010984507389366627
    2. 'n' → logprob: -4.885984420776367
    3. '(m' → logprob: -6.010984420776367
    4. ' m' → logprob: -8.010984420776367
    5. '100' → logprob: -8.635984420776367
    6. '(n' → logprob: -8.760984420776367
    7. '(' → logprob: -9.510984420776367
    8. '10' → logprob: -9.635984420776367
    9. ' (' → logprob: -10.510984420776367
    10. '1' → logprob: -11.260984420776367

Token 37: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00976116769015789
    2. ' +' → logprob: -4.634761333465576
    3. '+
' → logprob: -13.134760856628418
    4. ')' → logprob: -13.884760856628418
    5. '1' → logprob: -14.384760856628418
    6. ' +
' → logprob: -14.384760856628418
    7. '+)' → logprob: -14.509760856628418
    8. '*' → logprob: -16.134761810302734
    9. '2' → logprob: -16.384761810302734
    10. '+

' → logprob: -16.509761810302734

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005440193694084883
    2. ' ' → logprob: -5.2554402351379395
    3. 'm' → logprob: -9.255439758300781
    4. '2' → logprob: -9.255439758300781
    5. ' m' → logprob: -11.380439758300781
    6. '7' → logprob: -13.380439758300781
    7. '   ' → logprob: -15.130439758300781
    8. '  ' → logprob: -15.130439758300781
    9. '3' → logprob: -15.192939758300781
    10. '10' → logprob: -15.255439758300781

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009492144454270601
    2. ' ' → logprob: -7.625949382781982
    3. 'm' → logprob: -7.875949382781982
    4. '2' → logprob: -9.625948905944824
    5. ' m' → logprob: -12.250948905944824
    6. '10' → logprob: -13.000948905944824
    7. '7' → logprob: -13.250948905944824
    8. '5' → logprob: -14.188448905944824
    9. '100' → logprob: -14.250948905944824
    10. '  ' → logprob: -14.500948905944824

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6060808522743173e-05
    2. ']' → logprob: -11.125025749206543
    3. ')]' → logprob: -12.500025749206543
    4. '])' → logprob: -12.750025749206543
    5. ' )' → logprob: -12.875025749206543
    6. ')])' → logprob: -14.250025749206543
    7. ')
' → logprob: -14.750025749206543
    8. '))' → logprob: -15.250025749206543
    9. '),' → logprob: -16.12502670288086
    10. '）' → logprob: -16.12502670288086

Token 41: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00024311232846230268
    2. '```' → logprob: -8.375243186950684
    3. '\' → logprob: -12.500243186950684
    4. '``' → logprob: -12.875243186950684
    5. '
' → logprob: -13.625243186950684
    6. ' dp' → logprob: -13.750243186950684
    7. '\n' → logprob: -13.875243186950684
    8. '_dp' → logprob: -14.250243186950684
    9. '	dp' → logprob: -14.375243186950684
    10. '(dp' → logprob: -14.500243186950684

Token 42: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.2576454335358e-05
    2. '<|end|>' → logprob: -10.125092506408691
    3. '[
' → logprob: -10.250092506408691
    4. '\[' → logprob: -12.000092506408691
    5. '```' → logprob: -12.375092506408691
    6. '
' → logprob: -13.250092506408691
    7. '<|end|>' → logprob: -14.125092506408691
    8. '[:]' → logprob: -14.250092506408691
    9. '[user' → logprob: -14.500092506408691
    10. '[]' → logprob: -14.625092506408691

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -12.250007629394531
    3. '1' → logprob: -13.000007629394531
    4. '[' → logprob: -16.62500762939453
    5. '```' → logprob: -17.06250762939453
    6. 'n' → logprob: -17.12500762939453
    7. ')' → logprob: -17.25000762939453
    8. ']' → logprob: -17.31250762939453
    9. '۰' → logprob: -17.50000762939453
    10. '-' → logprob: -17.50000762939453

Token 44: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00039158877916634083
    2. ')' → logprob: -9.000391960144043
    3. '=' → logprob: -9.125391960144043
    4. ' ]' → logprob: -9.375391960144043
    5. ']=' → logprob: -9.750391960144043
    6. ' =' → logprob: -11.125391960144043
    7. ')]' → logprob: -14.375391960144043
    8. '[' → logprob: -15.750391960144043
    9. ')=' → logprob: -16.125391006469727
    10. '`]' → logprob: -16.125391006469727

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687241077423096
    2. '=' → logprob: -1.136872410774231
    3. ' =)' → logprob: -15.011872291564941
    4. '<|end|>' → logprob: -15.386872291564941
    5. '＝' → logprob: -15.886872291564941
    6. ' ' → logprob: -16.136873245239258
    7. ' =
' → logprob: -16.761873245239258
    8. '=

' → logprob: -16.886873245239258
    9. ',' → logprob: -17.011873245239258
    10. '=}' → logprob: -17.261873245239258

Token 46: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '00' → logprob: -20.0
    4. '۰' → logprob: -20.0
    5. '```' → logprob: -20.125
    6. '   ' → logprob: -20.25
    7. '000' → logprob: -20.25
    8. '०' → logprob: -21.9375
    9. '  ' → logprob: -21.9375
    10. '1' → logprob: -22.0625

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '۰' → logprob: -19.75
    4. '1' → logprob: -22.0
    5. '०' → logprob: -22.0
    6. '০' → logprob: -22.125
    7. '０' → logprob: -22.25
    8. '٠' → logprob: -22.375
    9. '```' → logprob: -22.375
    10. '000' → logprob: -22.75

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5843402147293091
    2. '\n' → logprob: -0.9593402147293091
    3. '' → logprob: -3.9593400955200195
    4. ' for' → logprob: -4.4593400955200195
    5. 'for' → logprob: -4.9593400955200195
    6. ' 
' → logprob: -5.0843400955200195
    7. '<|end|>' → logprob: -5.0843400955200195
    8. '
' → logprob: -5.5843400955200195
    9. '```' → logprob: -5.7093400955200195
    10. '  
' → logprob: -7.3343400955200195

Token 49: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5657631158828735
    2. '
' → logprob: -1.4407631158828735
    3. '\n' → logprob: -1.8157631158828735
    4. ' for' → logprob: -4.190762996673584
    5. ' 
' → logprob: -5.190762996673584
    6. '' → logprob: -5.315762996673584
    7. '```' → logprob: -5.315762996673584
    8. '\' → logprob: -7.690762996673584
    9. '
' → logprob: -7.690762996673584
    10. '  
' → logprob: -8.065763473510742

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06365713477134705
    2. ' ' → logprob: -2.93865704536438
    3. 'i' → logprob: -5.063657283782959
    4. '_' → logprob: -6.688657283782959
    5. ' _' → logprob: -6.938657283782959
    6. ' ‌' → logprob: -8.8136568069458
    7. '	i' → logprob: -11.0636568069458
    8. ' ' → logprob: -12.0636568069458
    9. '  ' → logprob: -12.0636568069458
    10. '_i' → logprob: -12.4386568069458

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02687084674835205
    2. 'in' → logprob: -3.9018707275390625
    3. ' ' → logprob: -5.4018707275390625
    4. '+' → logprob: -6.6518707275390625
    5. '  ' → logprob: -9.526870727539062
    6. '[' → logprob: -9.526870727539062
    7. '=' → logprob: -9.901870727539062
    8. '1' → logprob: -10.151870727539062
    9. '(' → logprob: -10.276870727539062
    10. ' i' → logprob: -10.276870727539062

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02975812554359436
    2. 'range' → logprob: -3.5297582149505615
    3. ' ' → logprob: -12.02975845336914
    4. '	range' → logprob: -14.27975845336914
    5. ' xrange' → logprob: -14.40475845336914
    6. '(range' → logprob: -15.77975845336914
    7. ' r' → logprob: -16.15475845336914
    8. '  ' → logprob: -16.65475845336914
    9. '_range' → logprob: -17.27975845336914
    10. ' ' → logprob: -17.77975845336914

Token 53: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006566287018358707
    2. '(n' → logprob: -5.131566524505615
    3. '(m' → logprob: -7.381566524505615
    4. ' (' → logprob: -11.506566047668457
    5. '(
' → logprob: -13.006566047668457
    6. ' ' → logprob: -14.381566047668457
    7. '(len' → logprob: -14.881566047668457
    8. '(i' → logprob: -15.006566047668457
    9. '1' → logprob: -15.131566047668457
    10. '(

' → logprob: -15.506566047668457

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03324415907263756
    2. '+' → logprob: -3.7832441329956055
    3. ' ):' → logprob: -4.9082441329956055
    4. ')' → logprob: -6.0332441329956055
    5. ' +' → logprob: -9.783244132995605
    6. '):
' → logprob: -9.908244132995605
    7. ':' → logprob: -11.158244132995605
    8. ',' → logprob: -11.158244132995605
    9. ' )' → logprob: -11.908244132995605
    10. '+:' → logprob: -11.908244132995605

Token 55: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019045908004045486
    2. '   ' → logprob: -5.144045829772949
    3. '    ' → logprob: -5.144045829772949
    4. '  ' → logprob: -6.269045829772949
    5. '<|end|>' → logprob: -6.519045829772949
    6. ' 
' → logprob: -6.894045829772949
    7. ' for' → logprob: -7.644045829772949
    8. ' c' → logprob: -7.644045829772949
    9. '     
' → logprob: -8.01904582977295
    10. ' dp' → logprob: -8.14404582977295

Token 56: ' for' (ID: 395)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.705752968788147
    2. 'x' → logprob: -1.580752968788147
    3. 'for' (adapté à ' for') → logprob: -2.3307528495788574
    4. 'l' → logprob: -3.3307528495788574
    5. 'a' → logprob: -3.3307528495788574
    6. 't' → logprob: -3.8307528495788574
    7. 'k' → logprob: -4.080752849578857
    8. 'b' → logprob: -4.205752849578857
    9. 'range' → logprob: -4.455752849578857
    10. 'j' → logprob: -4.580752849578857

Token 57: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9384498000144958
    2. ' j' → logprob: -1.0634498596191406
    3. ' n' → logprob: -2.0634498596191406
    4. 'range' → logprob: -2.9384498596191406
    5. 'j' → logprob: -3.0634498596191406
    6. 'n' → logprob: -4.438449859619141
    7. ')' → logprob: -4.938449859619141
    8. ' ' → logprob: -5.063449859619141
    9. '_' → logprob: -5.313449859619141
    10. ' c' → logprob: -5.438449859619141

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006954300217330456
    2. 'in' → logprob: -5.381954193115234
    3. '(' → logprob: -6.381954193115234
    4. '(n' → logprob: -8.631954193115234
    5. 'range' → logprob: -9.131954193115234
    6. ' range' → logprob: -9.256954193115234
    7. ' ' → logprob: -9.756954193115234
    8. ')' → logprob: -10.006954193115234
    9. '	in' → logprob: -10.381954193115234
    10. '+' → logprob: -10.506954193115234

Token 59: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3514520525932312
    2. 'range' → logprob: -1.226452112197876
    3. 'c' → logprob: -6.476451873779297
    4. ' c' → logprob: -6.976451873779297
    5. 'n' → logprob: -8.101451873779297
    6. ' n' → logprob: -8.726451873779297
    7. '(range' → logprob: -10.101451873779297
    8. '(n' → logprob: -11.726451873779297
    9. '(c' → logprob: -12.226451873779297
    10. '   ' → logprob: -12.726451873779297

Token 60: '(c' (ID: 2410)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.48112884163856506
    2. '(c' → logprob: -0.9811288118362427
    3. '(' → logprob: -4.981128692626953
    4. '(m' → logprob: -9.981128692626953
    5. '(i' → logprob: -10.356128692626953
    6. '(j' → logprob: -10.606128692626953
    7. 'n' → logprob: -10.856128692626953
    8. 'c' → logprob: -11.606128692626953
    9. '(len' → logprob: -11.731128692626953
    10. '(a' → logprob: -12.106128692626953

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005611348897218704
    2. '[j' → logprob: -7.500561237335205
    3. '[' → logprob: -12.125560760498047
    4. 'i' → logprob: -14.375560760498047
    5. '[-' → logprob: -14.625560760498047
    6. '[m' → logprob: -15.000560760498047
    7. ')' → logprob: -15.125560760498047
    8. '[c' → logprob: -15.750560760498047
    9. '):' → logprob: -16.000560760498047
    10. '```' → logprob: -16.125560760498047

Token 62: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.35073378682136536
    2. ',' → logprob: -1.850733757019043
    3. ']+' → logprob: -2.475733757019043
    4. ']' → logprob: -3.850733757019043
    5. ' ,' → logprob: -4.350733757019043
    6. ']):' → logprob: -4.600733757019043
    7. '),' → logprob: -5.475733757019043
    8. ' ],' → logprob: -6.350733757019043
    9. '   ' → logprob: -6.975733757019043
    10. '+' → logprob: -7.100733757019043

Token 63: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0052342405542731285
    2. ' n' → logprob: -5.255234241485596
    3. '	n' → logprob: -15.630233764648438
    4. '   ' → logprob: -16.255233764648438
    5. 'len' → logprob: -16.255233764648438
    6. '(n' → logprob: -17.380233764648438
    7. ')n' → logprob: -18.005233764648438
    8. ' ' → logprob: -18.505233764648438
    9. '  ' → logprob: -18.880233764648438
    10. '_n' → logprob: -19.005233764648438

Token 64: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020849853754044
    2. ' +' → logprob: -2.3502085208892822
    3. '+
' → logprob: -14.225208282470703
    4. ' ' → logprob: -15.100208282470703
    5. '   ' → logprob: -15.725208282470703
    6. ' +
' → logprob: -15.850208282470703
    7. '
' → logprob: -16.100208282470703
    8. ')' → logprob: -16.100208282470703
    9. ')+' → logprob: -16.225208282470703
    10. '1' → logprob: -16.225208282470703

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.710618905955926e-05
    2. ' ' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.625097274780273
    4. '```' → logprob: -15.000097274780273
    5. ')' → logprob: -16.250097274780273
    6. '  ' → logprob: -17.750097274780273
    7. '<|end|>' → logprob: -17.937597274780273
    8. '۱' → logprob: -18.375097274780273
    9. '`' → logprob: -18.437597274780273
    10. '    ' → logprob: -18.562597274780273

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.750021934509277
    4. '```' → logprob: -16.62502098083496
    5. ')' → logprob: -17.75002098083496
    6. '  ' → logprob: -18.00002098083496
    7. '0' → logprob: -19.06252098083496
    8. '１' → logprob: -19.06252098083496
    9. '    ' → logprob: -19.12502098083496
    10. '``' → logprob: -19.37502098083496

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018545080674812198
    2. ':' → logprob: -6.751854419708252
    3. '):
' → logprob: -7.376854419708252
    4. ']:' → logprob: -10.75185489654541
    5. ')' → logprob: -10.87685489654541
    6. ' ):' → logprob: -11.37685489654541
    7. '   ' → logprob: -12.75185489654541
    8. '):
' → logprob: -13.37685489654541
    9. '}:' → logprob: -13.75185489654541
    10. '():' → logprob: -15.00185489654541

Token 68: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.139503002166748
    2. ' ' → logprob: -1.639503002166748
    3. '       ' → logprob: -1.639503002166748
    4. ' dp' → logprob: -2.264503002166748
    5. '    ' → logprob: -2.389503002166748
    6. 'dp' → logprob: -2.514503002166748
    7. '	dp' → logprob: -5.389503002166748
    8. '<|end|>' → logprob: -5.764503002166748
    9. '  ' → logprob: -6.514503002166748
    10. '    
' → logprob: -6.764503002166748

Token 69: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6446263790130615
    2. 'dp' (adapté à ' dp') → logprob: -0.7696263790130615
    3. '           ' → logprob: -4.644626617431641
    4. ' if' → logprob: -6.644626617431641
    5. ' 
' → logprob: -7.894626617431641
    6. ' ' → logprob: -8.51962661743164
    7. 'if' → logprob: -8.89462661743164
    8. '            ' → logprob: -9.89462661743164
    9. '	dp' → logprob: -9.89462661743164
    10. '            
' → logprob: -10.14462661743164

Token 70: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0007114782347343862
    2. '[' → logprob: -7.250711441040039
    3. '[i' → logprob: -14.625711441040039
    4. ' [' → logprob: -15.875711441040039
    5. '```' → logprob: -15.875711441040039
    6. '[min' → logprob: -16.00071144104004
    7. '[J' → logprob: -16.12571144104004
    8. '\[' → logprob: -16.25071144104004
    9. 'j' → logprob: -16.37571144104004
    10. '[
' → logprob: -16.37571144104004

Token 71: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007846142980270088
    2. ')' → logprob: -8.000784873962402
    3. ']=' → logprob: -8.000784873962402
    4. ' ]' → logprob: -9.375784873962402
    5. '=' → logprob: -11.375784873962402
    6. ' =' → logprob: -11.500784873962402
    7. '=min' → logprob: -13.000784873962402
    8. '[' → logprob: -13.875784873962402
    9. 'min' → logprob: -14.000784873962402
    10. ')=' → logprob: -14.375784873962402

Token 72: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.577521800994873
    2. ' =' → logprob: -0.827521800994873
    3. '=min' → logprob: -6.452521800994873
    4. 'min' → logprob: -12.827522277832031
    5. '=max' → logprob: -13.952522277832031
    6. '=

' → logprob: -15.577522277832031
    7. '[min' → logprob: -15.702522277832031
    8. '.=' → logprob: -16.07752227783203
    9. ' min' → logprob: -16.32752227783203
    10. '.' → logprob: -16.57752227783203

Token 73: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0009115827269852161
    2. ' min' → logprob: -7.000911712646484
    3. 'max' → logprob: -16.125911712646484
    4. '	min' → logprob: -17.000911712646484
    5. '   ' → logprob: -18.125911712646484
    6. 'mi' → logprob: -18.500911712646484
    7. 'mini' → logprob: -19.000911712646484
    8. '[min' → logprob: -19.000911712646484
    9. ' ' → logprob: -19.750911712646484
    10. '(min' → logprob: -20.250911712646484

Token 74: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.018150296062231064
    2. '(' → logprob: -4.018150329589844
    3. '(
' → logprob: -16.018150329589844
    4. 'dp' → logprob: -16.268150329589844
    5. ' (' → logprob: -16.518150329589844
    6. '(

' → logprob: -17.018150329589844
    7. '	dp' → logprob: -17.768150329589844
    8. '(df' → logprob: -18.018150329589844
    9. '(dt' → logprob: -18.643150329589844
    10. '(d' → logprob: -19.143150329589844

Token 75: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -12.87500286102295
    3. '[i' → logprob: -17.375001907348633
    4. 'j' → logprob: -17.750001907348633
    5. '[
' → logprob: -17.750001907348633
    6. '```' → logprob: -18.000001907348633
    7. '[js' → logprob: -18.125001907348633
    8. ')' → logprob: -18.500001907348633
    9. ']' → logprob: -18.875001907348633
    10. ' [' → logprob: -19.000001907348633

Token 76: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.06425181031227112
    2. ',' → logprob: -2.8142518997192383
    3. '-' → logprob: -6.814251899719238
    4. ' -' → logprob: -8.064251899719238
    5. ' ],' → logprob: -8.189251899719238
    6. ' ,' → logprob: -8.314251899719238
    7. ']' → logprob: -8.814251899719238
    8. '[j' → logprob: -9.564251899719238
    9. '),' → logprob: -10.064251899719238
    10. '[' → logprob: -10.689251899719238

Token 77: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.018167614936828613
    2. 'dp' → logprob: -4.018167495727539
    3. '	dp' → logprob: -11.518167495727539
    4. '1' → logprob: -12.643167495727539
    5. '(dp' → logprob: -12.893167495727539
    6. ' ' → logprob: -13.893167495727539
    7. ' ' → logprob: -15.393167495727539
    8. '   ' → logprob: -15.518167495727539
    9. '_dp' → logprob: -15.643167495727539
    10. '.dp' → logprob: -15.768167495727539

Token 78: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -12.375003814697266
    3. '[
' → logprob: -18.625003814697266
    4. '[js' → logprob: -19.125003814697266
    5. 'j' → logprob: -19.500003814697266
    6. '   ' → logprob: -20.125003814697266
    7. '	j' → logprob: -20.250003814697266
    8. ' [' → logprob: -20.750003814697266
    9. '```' → logprob: -21.250003814697266
    10. '[i' → logprob: -22.625003814697266

Token 79: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06105388328433037
    2. '-' → logprob: -3.061053991317749
    3. '-j' → logprob: -4.43605375289917
    4. '-c' → logprob: -7.93605375289917
    5. '[j' → logprob: -8.936054229736328
    6. '[' → logprob: -10.811054229736328
    7. '   ' → logprob: -11.311054229736328
    8. ' ' → logprob: -11.686054229736328
    9. '[c' → logprob: -12.186054229736328
    10. 'j' → logprob: -12.311054229736328

Token 80: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004972710739821196
    2. ' c' → logprob: -7.625497341156006
    3. '	c' → logprob: -12.000496864318848
    4. '   ' → logprob: -13.375496864318848
    5. '[c' → logprob: -14.000496864318848
    6. ')c' → logprob: -15.625496864318848
    7. 'ci' → logprob: -16.125497817993164
    8. ' ' → logprob: -16.750497817993164
    9. '```' → logprob: -16.875497817993164
    10. 'с' → logprob: -17.125497817993164

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[j' → logprob: -13.750001907348633
    3. '[' → logprob: -15.125001907348633
    4. 'i' → logprob: -15.500001907348633
    5. ']' → logprob: -17.500001907348633
    6. '```' → logprob: -17.875001907348633
    7. '[
' → logprob: -18.000001907348633
    8. '[I' → logprob: -18.250001907348633
    9. ' [' → logprob: -18.750001907348633
    10. '   ' → logprob: -19.000001907348633

Token 82: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04109484329819679
    2. ']]' → logprob: -3.2910947799682617
    3. '])' → logprob: -5.916094779968262
    4. ']+' → logprob: -8.291094779968262
    5. ' ]' → logprob: -10.541094779968262
    6. ']])' → logprob: -10.916094779968262
    7. ')]' → logprob: -11.041094779968262
    8. '[i' → logprob: -11.541094779968262
    9. '`]' → logprob: -11.666094779968262
    10. ' ]]' → logprob: -12.416094779968262

Token 83: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7274837493896484
    2. '+' → logprob: -0.9774837493896484
    3. ')' → logprob: -1.9774837493896484
    4. ']' → logprob: -6.227483749389648
    5. ')+' → logprob: -9.477483749389648
    6. ']+' → logprob: -9.852483749389648
    7. ' )' → logprob: -10.352483749389648
    8. '])' → logprob: -10.477483749389648
    9. '   ' → logprob: -12.102483749389648
    10. '```' → logprob: -12.102483749389648

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011057252995669842
    2. ' ' → logprob: -4.511057376861572
    3. ' c' → logprob: -12.261056900024414
    4. 'c' → logprob: -12.886056900024414
    5. ')' → logprob: -14.261056900024414
    6. '   ' → logprob: -14.636056900024414
    7. '100' → logprob: -15.386056900024414
    8. '  ' → logprob: -15.948556900024414
    9. ' )' → logprob: -16.448556900024414
    10. 'j' → logprob: -16.448556900024414

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.983476436696947e-05
    2. ' ' → logprob: -9.500089645385742
    3. 'c' → logprob: -11.250089645385742
    4. 'j' → logprob: -14.750089645385742
    5. '100' → logprob: -14.875089645385742
    6. ')' → logprob: -15.437589645385742
    7. '   ' → logprob: -15.562589645385742
    8. '2' → logprob: -15.937589645385742
    9. 'i' → logprob: -15.937589645385742
    10. ' c' → logprob: -16.125089645385742

Token 86: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.747814349073451e-05
    2. ')
' → logprob: -11.000017166137695
    3. ' )' → logprob: -14.375017166137695
    4. '))' → logprob: -16.625017166137695
    5. '`)' → logprob: -17.750017166137695
    6. ')`' → logprob: -18.625017166137695
    7. ')
' → logprob: -19.000017166137695
    8. '）' → logprob: -19.000017166137695
    9. ')

' → logprob: -19.375017166137695
    10. ')return' → logprob: -19.875017166137695

Token 87: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008743155747652054
    2. '\n' → logprob: -5.7587432861328125
    3. 'n' → logprob: -6.7587432861328125
    4. '
' → logprob: -7.0087432861328125
    5. 'for' → logprob: -7.2587432861328125
    6. 'if' → logprob: -7.3837432861328125
    7. 'p' → logprob: -7.5087432861328125
    8. '```' → logprob: -7.7587432861328125
    9. '#' → logprob: -8.133743286132812
    10. ' 
' → logprob: -8.258743286132812

Token 88: '(dp' (ID: 68843)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004096804652363062
    2. '(dp' → logprob: -5.504096984863281
    3. '("("' → logprob: -12.129096984863281
    4. '(n' → logprob: -12.629096984863281
    5. '((' → logprob: -13.129096984863281
    6. '(np' → logprob: -13.629096984863281
    7. '()' → logprob: -13.754096984863281
    8. '(j' → logprob: -14.004096984863281
    9. '(

' → logprob: -14.004096984863281
    10. '(len' → logprob: -14.129096984863281

Token 89: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.652451464906335e-05
    2. '[-' → logprob: -11.875016212463379
    3. ')' → logprob: -12.000016212463379
    4. '[' → logprob: -12.875016212463379
    5. '[j' → logprob: -15.125016212463379
    6. ')n' → logprob: -15.750016212463379
    7. ']' → logprob: -16.000017166137695
    8. '(n' → logprob: -16.250017166137695
    9. 'n' → logprob: -16.375017166137695
    10. '[N' → logprob: -17.250017166137695

Token 90: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005236041033640504
    2. '])' → logprob: -7.875523567199707
    3. '))' → logprob: -8.875523567199707
    4. '})' → logprob: -13.000523567199707
    5. '）' → logprob: -14.875523567199707
    6. ' )' → logprob: -14.875523567199707
    7. ')]' → logprob: -15.500523567199707
    8. ')])' → logprob: -15.875523567199707
    9. ')
' → logprob: -16.000524520874023
    10. ']' → logprob: -16.125524520874023


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 88
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 85
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 96.59%
================================================================================
