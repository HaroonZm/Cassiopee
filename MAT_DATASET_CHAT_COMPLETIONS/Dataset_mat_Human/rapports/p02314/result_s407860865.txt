================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N,M = map(int,input().split())
C = list(map(int,input().split()))
INF = float('inf')
dp = [INF] * (N+1)
dp[0] = 0
for i in range(M):
  c = C[i]
  for j in range(N+1):
    if j >= c:
      dp[j] = min(dp[j], dp[j-c]+1)

print(dp[N])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',M' (ID: 54127)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.22154709696769714
    2. 'map' → logprob: -1.7215471267700195
    3. ' input' → logprob: -4.8465471267700195
    4. 'input' → logprob: -5.3465471267700195
    5. '10' → logprob: -5.7215471267700195
    6. ' ' → logprob: -5.7215471267700195
    7. '0' → logprob: -7.4715471267700195
    8. ' list' → logprob: -9.84654712677002
    9. '1' → logprob: -10.47154712677002
    10. 'list' → logprob: -10.97154712677002

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002777654677629471
    2. '(int' → logprob: -6.627777576446533
    3. '```' → logprob: -7.752777576446533
    4. '(lambda' → logprob: -7.877777576446533
    5. '(str' → logprob: -8.627778053283691
    6. '(user' → logprob: -10.002778053283691
    7. ')' → logprob: -10.127778053283691
    8. '(input' → logprob: -10.127778053283691
    9. '(N' → logprob: -10.377778053283691
    10. '(`' → logprob: -10.502778053283691

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023575274273753166
    2. ')' → logprob: -4.023575305938721
    3. '(' → logprob: -5.773575305938721
    4. 'input' → logprob: -7.648575305938721
    5. '(str' → logprob: -7.648575305938721
    6. '`)' → logprob: -8.273574829101562
    7. '(int' → logprob: -8.523574829101562
    8. '(user' → logprob: -8.523574829101562
    9. '```' → logprob: -8.773574829101562
    10. '`' → logprob: -9.398574829101562

Token 6: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9663654565811157
    2. '())' → logprob: -1.3413654565811157
    3. ')' → logprob: -1.7163654565811157
    4. '()' → logprob: -1.9663654565811157
    5. '()>' → logprob: -4.466365337371826
    6. '('' → logprob: -4.841365337371826
    7. '(">' → logprob: -5.591365337371826
    8. '()">' → logprob: -5.591365337371826
    9. '().' → logprob: -5.841365337371826
    10. '();)' → logprob: -7.216365337371826

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005026352009736001
    2. 'strip' → logprob: -7.625502586364746
    3. 'rstrip' → logprob: -11.500502586364746
    4. ' split' → logprob: -13.125502586364746
    5. ')' → logprob: -13.375502586364746
    6. 'replace' → logprob: -14.750502586364746
    7. 'spl' → logprob: -14.875502586364746
    8. '(split' → logprob: -16.250503540039062
    9. 'read' → logprob: -16.625503540039062
    10. 'startswith' → logprob: -16.625503540039062

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2887325584888458
    2. '())' → logprob: -1.4137325286865234
    3. '()' → logprob: -5.913732528686523
    4. '))' → logprob: -6.038732528686523
    5. '`)' → logprob: -6.788732528686523
    6. '(' → logprob: -7.038732528686523
    7. '()))' → logprob: -8.663732528686523
    8. '```' → logprob: -10.163732528686523
    9. '`()' → logprob: -10.163732528686523
    10. '')' → logprob: -10.413732528686523

Token 9: 'C' (ID: 34)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4907127916812897
    2. 'for' → logprob: -1.6157127618789673
    3. '\n' → logprob: -2.615712881088257
    4. '#' → logprob: -3.990712881088257
    5. 'x' → logprob: -4.115712642669678
    6. 's' → logprob: -4.115712642669678
    7. '`' → logprob: -4.365712642669678
    8. '```' → logprob: -4.740712642669678
    9. '\' → logprob: -4.990712642669678
    10. 'if' → logprob: -5.115712642669678

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2182224839925766
    2. '=' → logprob: -2.7182223796844482
    3. 'ount' → logprob: -3.2182223796844482
    4. '[' → logprob: -3.2182223796844482
    5. '[i' → logprob: -4.468222618103027
    6. '_' → logprob: -4.843222618103027
    7. 'ounter' → logprob: -5.093222618103027
    8. '[]' → logprob: -5.468222618103027
    9. '=[]' → logprob: -5.843222618103027
    10. ',' → logprob: -5.968222618103027

Token 11: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8813161253929138
    2. 'list' → logprob: -1.2563161849975586
    3. '[' → logprob: -1.8813161849975586
    4. '[input' → logprob: -2.5063161849975586
    5. '[list' → logprob: -3.6313161849975586
    6. '[int' → logprob: -4.006316184997559
    7. ' [' → logprob: -4.881316184997559
    8. ' []' → logprob: -5.256316184997559
    9. ' list' → logprob: -5.381316184997559
    10. 'input' → logprob: -5.506316184997559

Token 12: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002003218833124265
    2. '(range' → logprob: -9.125200271606445
    3. '(
' → logprob: -11.375200271606445
    4. '("("' → logprob: -11.375200271606445
    5. ' (' → logprob: -11.875200271606445
    6. '((' → logprob: -11.875200271606445
    7. '```' → logprob: -11.875200271606445
    8. '(

' → logprob: -12.125200271606445
    9. '(int' → logprob: -12.375200271606445
    10. '(C' → logprob: -13.125200271606445

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0023654208052903414
    2. '(' → logprob: -6.127365589141846
    3. '(str' → logprob: -9.002365112304688
    4. '(input' → logprob: -10.752365112304688
    5. '<int' → logprob: -11.127365112304688
    6. 'int' → logprob: -12.252365112304688
    7. '=int' → logprob: -12.877365112304688
    8. '(lambda' → logprob: -12.877365112304688
    9. '[int' → logprob: -13.002365112304688
    10. '```' → logprob: -13.002365112304688

Token 14: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13058970868587494
    2. ',input' → logprob: -2.130589723587036
    3. '(' → logprob: -6.005589485168457
    4. ',' → logprob: -6.880589485168457
    5. '),' → logprob: -10.130589485168457
    6. '(int' → logprob: -10.380589485168457
    7. '=input' → logprob: -10.630589485168457
    8. ' (' → logprob: -11.255589485168457
    9. ',int' → logprob: -11.255589485168457
    10. ')' → logprob: -11.505589485168457

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018422193825244904
    2. '()' → logprob: -4.3934221267700195
    3. '(' → logprob: -5.8934221267700195
    4. '()))' → logprob: -6.3934221267700195
    5. '())' → logprob: -7.3934221267700195
    6. '(.' → logprob: -7.6434221267700195
    7. '(),' → logprob: -9.14342212677002
    8. ')' → logprob: -9.89342212677002
    9. '(input' → logprob: -10.14342212677002
    10. '()),' → logprob: -10.51842212677002

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0280383548888494e-06
    2. ' split' → logprob: -14.250000953674316
    3. 'strip' → logprob: -15.750000953674316
    4. 'spl' → logprob: -16.375001907348633
    5. '(split' → logprob: -16.500001907348633
    6. 'rstrip' → logprob: -16.625001907348633
    7. 'plit' → logprob: -20.000001907348633
    8. 's' → logprob: -20.000001907348633
    9. '.split' → logprob: -21.000001907348633
    10. 'sp' → logprob: -21.250001907348633

Token 17: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1646547168493271
    2. '())' → logprob: -2.7896547317504883
    3. '))' → logprob: -2.9146547317504883
    4. ')' → logprob: -3.7896547317504883
    5. '(' → logprob: -4.914654731750488
    6. '()' → logprob: -5.164654731750488
    7. '())))' → logprob: -9.289654731750488
    8. '()));' → logprob: -9.664654731750488
    9. '('' → logprob: -9.914654731750488
    10. ')))' → logprob: -10.664654731750488

Token 18: 'INF' (ID: 64358)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.1506613492965698
    2. 'dp' → logprob: -1.7756613492965698
    3. 's' → logprob: -2.2756614685058594
    4. 'c' → logprob: -2.2756614685058594
    5. 'S' → logprob: -2.7756614685058594
    6. 'count' → logprob: -2.9006614685058594
    7. 'd' → logprob: -3.2756614685058594
    8. 'D' → logprob: -3.5256614685058594
    9. 'A' → logprob: -3.7756614685058594
    10. 'for' → logprob: -3.9006614685058594

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03381040319800377
    2. '=' → logprob: -3.4088103771209717
    3. ')' → logprob: -8.90881061553955
    4. '_' → logprob: -11.65881061553955
    5. ',' → logprob: -12.53381061553955
    6. ' =)' → logprob: -12.53381061553955
    7. '＝' → logprob: -12.78381061553955
    8. '=int' → logprob: -13.03381061553955
    9. ' )' → logprob: -13.40881061553955
    10. '=float' → logprob: -13.78381061553955

Token 20: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7066324353218079
    2. '10' → logprob: -0.7066324353218079
    3. ' float' → logprob: -4.706632614135742
    4. 'float' → logprob: -5.456632614135742
    5. '1' → logprob: -10.081632614135742
    6. ' int' → logprob: -10.831632614135742
    7. 'int' → logprob: -10.956632614135742
    8. '100' → logprob: -12.456632614135742
    9. ' ' → logprob: -12.456632614135742
    10. '(float' → logprob: -13.456632614135742

Token 21: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.001886872691102326
    2. '(' → logprob: -6.37688684463501
    3. '("' → logprob: -9.251887321472168
    4. '('.')' → logprob: -10.501887321472168
    5. '('.' → logprob: -11.126887321472168
    6. '('+' → logprob: -11.126887321472168
    7. '('-' → logprob: -12.001887321472168
    8. '```' → logprob: -12.251887321472168
    9. ' ('' → logprob: -12.876887321472168
    10. ''' → logprob: -12.876887321472168

Token 22: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.07230902463197708
    2. ''' → logprob: -2.6973090171813965
    3. 'inf' → logprob: -6.8223090171813965
    4. ''int' → logprob: -8.572309494018555
    5. ''ins' → logprob: -8.697309494018555
    6. ''ex' → logprob: -8.822309494018555
    7. ''i' → logprob: -9.072309494018555
    8. ''e' → logprob: -10.072309494018555
    9. ''inc' → logprob: -10.072309494018555
    10. ''un' → logprob: -10.072309494018555

Token 23: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0921942703134846e-05
    2. '')' → logprob: -11.75001049041748
    3. '))' → logprob: -13.62501049041748
    4. ' )' → logprob: -13.75001049041748
    5. ')
' → logprob: -15.50001049041748
    6. '()' → logprob: -16.000011444091797
    7. '`)' → logprob: -16.250011444091797
    8. ')

' → logprob: -16.375011444091797
    9. '())' → logprob: -17.000011444091797
    10. '")' → logprob: -17.125011444091797

Token 24: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007888393476605415
    2. 'dist' → logprob: -5.632888317108154
    3. 'DP' → logprob: -5.757888317108154
    4. 'D' → logprob: -7.382888317108154
    5. 'd' → logprob: -8.007888793945312
    6. 'for' → logprob: -10.007888793945312
    7. 'Dp' → logprob: -10.257888793945312
    8. 'distance' → logprob: -10.382888793945312
    9. 'ans' → logprob: -11.757888793945312
    10. '_dp' → logprob: -11.882888793945312

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04679625853896141
    2. '=' → logprob: -3.4217963218688965
    3. '[' → logprob: -4.4217963218688965
    4. ' ' → logprob: -8.171795845031738
    5. '_' → logprob: -8.296795845031738
    6. '=[' → logprob: -8.296795845031738
    7. ' =[' → logprob: -8.421795845031738
    8. ' [' → logprob: -11.296795845031738
    9. '[:]' → logprob: -12.171795845031738
    10. '[i' → logprob: -12.421795845031738

Token 26: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.039365410804748535
    2. ' [' → logprob: -3.289365291595459
    3. '[[' → logprob: -6.789365291595459
    4. ' [[' → logprob: -8.914365768432617
    5. '[-' → logprob: -10.039365768432617
    6. '[int' → logprob: -12.164365768432617
    7. '[N' → logprob: -12.914365768432617
    8. '[array' → logprob: -13.164365768432617
    9. '[len' → logprob: -13.289365768432617
    10. '[in' → logprob: -13.789365768432617

Token 27: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.023719988763332367
    2. '[' → logprob: -4.023719787597656
    3. '0' → logprob: -5.273719787597656
    4. '-INF' → logprob: -8.773719787597656
    5. '-' → logprob: -9.398719787597656
    6. 'inf' → logprob: -10.148719787597656
    7. ' INF' → logprob: -10.148719787597656
    8. '-inf' → logprob: -10.523719787597656
    9. 'False' → logprob: -10.648719787597656
    10. ' [' → logprob: -11.023719787597656

Token 28: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013996724970638752
    2. ']*(' → logprob: -4.638996601104736
    3. ']*' → logprob: -5.638996601104736
    4. ' ]' → logprob: -8.013997077941895
    5. ')]' → logprob: -8.638997077941895
    6. ' for' → logprob: -9.888997077941895
    7. ',' → logprob: -10.013997077941895
    8. ')' → logprob: -10.138997077941895
    9. ']+' → logprob: -10.763997077941895
    10. '[' → logprob: -13.013997077941895

Token 29: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7554247975349426
    2. '[' → logprob: -1.2554247379302979
    3. ' *' → logprob: -2.255424737930298
    4. ' for' → logprob: -3.505424737930298
    5. ']' → logprob: -3.755424737930298
    6. '*(' → logprob: -3.880424737930298
    7. '+' → logprob: -4.130424976348877
    8. ',' → logprob: -4.255424976348877
    9. ']*(' → logprob: -4.380424976348877
    10. '*[' → logprob: -4.505424976348877

Token 30: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.4753837287425995
    2. '(N' → logprob: -0.9753837585449219
    3. '(' → logprob: -6.725383758544922
    4. ' (' → logprob: -9.600383758544922
    5. 'N' → logprob: -11.225383758544922
    6. '(m' → logprob: -12.100383758544922
    7. '(C' → logprob: -12.100383758544922
    8. '((' → logprob: -12.350383758544922
    9. '(n' → logprob: -12.850383758544922
    10. '(MAX' → logprob: -13.350383758544922

Token 31: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5233076214790344
    2. 'M' → logprob: -0.8983076214790344
    3. ' M' → logprob: -9.523307800292969
    4. '100' → logprob: -10.148307800292969
    5. ' N' → logprob: -10.148307800292969
    6. '(M' → logprob: -11.398307800292969
    7. '10' → logprob: -12.523307800292969
    8. '(N' → logprob: -12.773307800292969
    9. ' ' → logprob: -13.148307800292969
    10. '1' → logprob: -13.273307800292969

Token 32: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0059296246618032455
    2. ' +' → logprob: -5.130929470062256
    3. '+
' → logprob: -14.880929946899414
    4. '1' → logprob: -15.505929946899414
    5. ')' → logprob: -16.255929946899414
    6. '＋' → logprob: -16.380929946899414
    7. ' +
' → logprob: -16.630929946899414
    8. '+)' → logprob: -17.130929946899414
    9. '```' → logprob: -17.755929946899414
    10. ')+' → logprob: -17.880929946899414

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010473522706888616
    2. ' ' → logprob: -9.375104904174805
    3. '2' → logprob: -11.125104904174805
    4. '10' → logprob: -12.875104904174805
    5. '100' → logprob: -14.000104904174805
    6. '5' → logprob: -14.875104904174805
    7. '3' → logprob: -15.250104904174805
    8. '7' → logprob: -15.500104904174805
    9. '  ' → logprob: -16.000104904174805
    10. '   ' → logprob: -16.062604904174805

Token 34: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. ' )' → logprob: -12.750007629394531
    3. ')
' → logprob: -13.000007629394531
    4. ']' → logprob: -14.250007629394531
    5. ')]' → logprob: -14.625007629394531
    6. '))' → logprob: -15.375007629394531
    7. '`)' → logprob: -15.625007629394531
    8. '])' → logprob: -15.750007629394531
    9. ')])' → logprob: -16.00000762939453
    10. '）' → logprob: -16.12500762939453

Token 35: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08666545152664185
    2. '
' → logprob: -2.586665391921997
    3. '  
' → logprob: -6.211665630340576
    4. ' 
' → logprob: -6.586665630340576
    5. '
' → logprob: -6.586665630340576
    6. '\n' → logprob: -6.711665630340576
    7. '```' → logprob: -7.336665630340576
    8. ' dp' → logprob: -7.711665630340576
    9. '\' → logprob: -9.086665153503418
    10. '' → logprob: -9.336665153503418

Token 36: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007344625773839653
    2. '<|end|>' → logprob: -7.500734329223633
    3. '\[' → logprob: -10.125734329223633
    4. '[
' → logprob: -10.250734329223633
    5. '```' → logprob: -10.375734329223633
    6. '<|end|>' → logprob: -10.875734329223633
    7. '[]' → logprob: -11.250734329223633
    8. '[user' → logprob: -11.625734329223633
    9. '[N' → logprob: -11.875734329223633
    10. '[:]' → logprob: -12.125734329223633

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.041768160182983e-05
    2. ' ' → logprob: -9.500080108642578
    3. '1' → logprob: -12.750080108642578
    4. '-' → logprob: -14.375080108642578
    5. '[' → logprob: -14.812580108642578
    6. ')' → logprob: -14.812580108642578
    7. '```' → logprob: -15.250080108642578
    8. '۰' → logprob: -15.562580108642578
    9. ']' → logprob: -15.812580108642578
    10. '०' → logprob: -16.937580108642578

Token 38: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05108973756432533
    2. ')' → logprob: -3.0510897636413574
    3. '=' → logprob: -6.801089763641357
    4. ' ]' → logprob: -7.051089763641357
    5. ']=' → logprob: -8.0510892868042
    6. ' =' → logprob: -9.1760892868042
    7. ' )' → logprob: -9.6760892868042
    8. ')=' → logprob: -10.4260892868042
    9. ')]' → logprob: -13.0510892868042
    10. '])' → logprob: -13.5510892868042

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164102263748646
    2. '=' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.264163970947266
    4. ' =)' → logprob: -16.514163970947266
    5. '<|end|>' → logprob: -16.764163970947266
    6. '[' → logprob: -16.764163970947266
    7. ' |=' → logprob: -17.264163970947266
    8. '＝' → logprob: -17.264163970947266
    9. ',' → logprob: -17.389163970947266
    10. ' ==' → logprob: -17.514163970947266

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '۰' → logprob: -19.750024795532227
    4. '00' → logprob: -20.625024795532227
    5. '```' → logprob: -20.625024795532227
    6. '０' → logprob: -20.875024795532227
    7. '000' → logprob: -21.000024795532227
    8. '   ' → logprob: -21.250024795532227
    9. '  ' → logprob: -22.250024795532227
    10. ' ' → logprob: -22.375024795532227

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '۰' → logprob: -20.375
    4. '０' → logprob: -21.0
    5. '00' → logprob: -22.375
    6. '000' → logprob: -22.75
    7. '०' → logprob: -22.875
    8. '٠' → logprob: -23.25
    9. '```' → logprob: -23.75
    10. '০' → logprob: -23.75

Token 42: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7974516749382019
    2. '
' → logprob: -1.4224517345428467
    3. '\n' → logprob: -1.5474517345428467
    4. ' for' → logprob: -3.0474517345428467
    5. '' → logprob: -3.6724517345428467
    6. ' 
' → logprob: -5.172451496124268
    7. '<|end|>' → logprob: -5.172451496124268
    8. '
' → logprob: -6.047451496124268
    9. '```' → logprob: -6.172451496124268
    10. '  
' → logprob: -6.172451496124268

Token 43: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022357912734150887
    2. '\n' → logprob: -4.647357940673828
    3. ' for' → logprob: -4.897357940673828
    4. '
' → logprob: -5.522357940673828
    5. '```' → logprob: -7.397357940673828
    6. '\' → logprob: -8.772357940673828
    7. '<|end|>' → logprob: -9.272357940673828
    8. ' 
' → logprob: -9.522357940673828
    9. '' → logprob: -10.022357940673828
    10. '  
' → logprob: -11.397357940673828

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004719784017652273
    2. 'i' → logprob: -5.3797197341918945
    3. ' _' → logprob: -9.879719734191895
    4. ' ' → logprob: -10.129719734191895
    5. '_' → logprob: -12.004719734191895
    6. '	i' → logprob: -14.504719734191895
    7. ' n' → logprob: -14.754719734191895
    8. '_i' → logprob: -15.129719734191895
    9. ' x' → logprob: -15.254719734191895
    10. ' c' → logprob: -15.379719734191895

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020840467885136604
    2. 'in' → logprob: -3.8958404064178467
    3. ' ' → logprob: -8.645840644836426
    4. '+' → logprob: -9.395840644836426
    5. '	in' → logprob: -11.645840644836426
    6. '  ' → logprob: -11.895840644836426
    7. ' i' → logprob: -12.020840644836426
    8. ')' → logprob: -12.520840644836426
    9. '<|end|>' → logprob: -13.145840644836426
    10. '1' → logprob: -13.270840644836426

Token 46: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132653534412384
    2. 'range' → logprob: -1.313265323638916
    3. '(range' → logprob: -12.688265800476074
    4. ')' → logprob: -15.438265800476074
    5. '	range' → logprob: -15.563265800476074
    6. ' xrange' → logprob: -16.438264846801758
    7. ' in' → logprob: -17.188264846801758
    8. '_range' → logprob: -17.563264846801758
    9. ' ' → logprob: -17.563264846801758
    10. '_' → logprob: -18.313264846801758

Token 47: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032815716695040464
    2. '(N' → logprob: -6.253281593322754
    3. ' (' → logprob: -6.753281593322754
    4. '(M' → logprob: -8.628281593322754
    5. '(n' → logprob: -13.378281593322754
    6. '(len' → logprob: -13.878281593322754
    7. ' ' → logprob: -14.128281593322754
    8. '(i' → logprob: -14.253281593322754
    9. '(
' → logprob: -14.628281593322754
    10. '(range' → logprob: -15.003281593322754

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016401888569816947
    2. '+' → logprob: -6.626640319824219
    3. ' ):' → logprob: -8.751640319824219
    4. ')' → logprob: -9.001640319824219
    5. ':' → logprob: -10.501640319824219
    6. '):
' → logprob: -12.876640319824219
    7. '+:' → logprob: -13.751640319824219
    8. ',' → logprob: -14.501640319824219
    9. '=' → logprob: -16.00164031982422
    10. '}:' → logprob: -16.12664031982422

Token 49: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5161168575286865
    2. '   ' → logprob: -1.0161168575286865
    3. ' for' → logprob: -4.141117095947266
    4. '  ' → logprob: -5.016117095947266
    5. '    ' → logprob: -5.266117095947266
    6. ' 
' → logprob: -5.516117095947266
    7. '<|end|>' → logprob: -6.266117095947266
    8. 'C' → logprob: -6.516117095947266
    9. 'for' → logprob: -6.766117095947266
    10. '    
' → logprob: -7.141117095947266

Token 50: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2510599195957184
    2. ' for' → logprob: -1.876059889793396
    3. 'for' → logprob: -3.5010600090026855
    4. '   ' → logprob: -4.0010600090026855
    5. ' c' → logprob: -4.6260600090026855
    6. 'c' → logprob: -5.8760600090026855
    7. ' C' → logprob: -6.0010600090026855
    8. 'C' → logprob: -6.5010600090026855
    9. '  ' → logprob: -7.1260600090026855
    10. ' coin' → logprob: -7.2510600090026855

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18454328179359436
    2. '=' → logprob: -2.0595433712005615
    3. ' ' → logprob: -3.3095433712005615
    4. 'C' → logprob: -6.934543132781982
    5. ')' → logprob: -7.309543132781982
    6. '  ' → logprob: -7.309543132781982
    7. '<|end|>' → logprob: -7.559543132781982
    8. '[' → logprob: -8.05954360961914
    9. ']' → logprob: -8.43454360961914
    10. '   ' → logprob: -8.68454360961914

Token 52: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2520749270915985
    2. ' C' → logprob: -1.502074956893921
    3. ' ' → logprob: -8.8770751953125
    4. 'c' → logprob: -13.3770751953125
    5. '	C' → logprob: -13.7520751953125
    6. '(C' → logprob: -14.6270751953125
    7. '=C' → logprob: -14.6270751953125
    8. '_C' → logprob: -14.8770751953125
    9. '>C' → logprob: -14.8770751953125
    10. '  ' → logprob: -14.8770751953125

Token 53: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00027921271976083517
    2. '[' → logprob: -8.750279426574707
    3. '[c' → logprob: -9.125279426574707
    4. '[C' → logprob: -12.250279426574707
    5. '[I' → logprob: -12.750279426574707
    6. '[]' → logprob: -13.875279426574707
    7. '\[' → logprob: -14.500279426574707
    8. 'i' → logprob: -14.750279426574707
    9. ' [' → logprob: -15.375279426574707
    10. '[s' → logprob: -15.500279426574707

Token 54: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01025096420198679
    2. '])' → logprob: -5.135251045227051
    3. ')
' → logprob: -6.135251045227051
    4. ']' → logprob: -6.385251045227051
    5. ' )' → logprob: -8.01025104522705
    6. ' ' → logprob: -9.51025104522705
    7. ')])' → logprob: -11.51025104522705
    8. ')]' → logprob: -11.63525104522705
    9. '）' → logprob: -12.01025104522705
    10. '`)' → logprob: -12.26025104522705

Token 55: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06765978038311005
    2. ' for' → logprob: -3.442659854888916
    3. ' 
' → logprob: -4.192659854888916
    4. '<|end|>' → logprob: -4.567659854888916
    5. '  
' → logprob: -5.692659854888916
    6. '
' → logprob: -6.567659854888916
    7. 'for' → logprob: -6.567659854888916
    8. '  ' → logprob: -7.317659854888916
    9. '\n' → logprob: -7.692659854888916
    10. '\' → logprob: -8.942659378051758

Token 56: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16480891406536102
    2. ' ' → logprob: -2.164808988571167
    3. 'for' → logprob: -3.414808988571167
    4. ' 
' → logprob: -6.039808750152588
    5. '
' → logprob: -6.539808750152588
    6. '\n' → logprob: -8.289809226989746
    7. '  
' → logprob: -9.789809226989746
    8. '<|end|>' → logprob: -9.789809226989746
    9. '' → logprob: -11.164809226989746
    10. '  ' → logprob: -11.289809226989746

Token 57: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.04899687319993973
    2. ' range' → logprob: -3.423996925354004
    3. 'j' → logprob: -4.298996925354004
    4. 'range' → logprob: -6.798996925354004
    5. ' c' → logprob: -8.673996925354004
    6. ' ' → logprob: -8.923996925354004
    7. ' _' → logprob: -9.798996925354004
    8. '_j' → logprob: -10.173996925354004
    9. ' x' → logprob: -10.548996925354004
    10. '_' → logprob: -10.923996925354004

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012240495532751083
    2. 'in' → logprob: -4.512240409851074
    3. 'range' → logprob: -7.137240409851074
    4. ' ' → logprob: -8.262240409851074
    5. ' range' → logprob: -9.637240409851074
    6. 'c' → logprob: -11.137240409851074
    7. ' c' → logprob: -11.387240409851074
    8. ')' → logprob: -11.762240409851074
    9. '(c' → logprob: -12.137240409851074
    10. ',' → logprob: -12.262240409851074

Token 59: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038299560546875
    2. ' range' → logprob: -3.288299560546875
    3. 'c' → logprob: -8.288299560546875
    4. '(range' → logprob: -12.913299560546875
    5. ' c' → logprob: -13.038299560546875
    6. '   ' → logprob: -14.288299560546875
    7. ' ' → logprob: -14.788299560546875
    8. 'C' → logprob: -15.163299560546875
    9. 'r' → logprob: -15.538299560546875
    10. '[c' → logprob: -15.663299560546875

Token 60: '(N' (ID: 10564)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0056677027605473995
    2. '(N' → logprob: -5.630667686462402
    3. '(' → logprob: -6.255667686462402
    4. '(C' → logprob: -9.130667686462402
    5. '(n' → logprob: -11.130667686462402
    6. 'c' → logprob: -11.255667686462402
    7. ' (' → logprob: -12.380667686462402
    8. '(len' → logprob: -13.505667686462402
    9. ' c' → logprob: -13.630667686462402
    10. ' ' → logprob: -14.630667686462402

Token 61: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17972490191459656
    2. ' -' → logprob: -2.429724931716919
    3. '-c' → logprob: -2.804724931716919
    4. ' +' → logprob: -4.80472469329834
    5. '-' → logprob: -5.17972469329834
    6. '+c' → logprob: -6.55472469329834
    7. ' ' → logprob: -8.42972469329834
    8. ',' → logprob: -8.92972469329834
    9. 'c' → logprob: -9.17972469329834
    10. ',c' → logprob: -9.67972469329834

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009205120149999857
    2. ' ' → logprob: -7.000920295715332
    3. ')' → logprob: -12.625920295715332
    4. '   ' → logprob: -13.250920295715332
    5. ' c' → logprob: -14.125920295715332
    6. '-' → logprob: -14.375920295715332
    7. 'c' → logprob: -14.875920295715332
    8. '```' → logprob: -14.875920295715332
    9. '  ' → logprob: -15.125920295715332
    10. '(' → logprob: -15.625920295715332

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026489056181162596
    2. ' ' → logprob: -7.127648830413818
    3. '):
' → logprob: -7.127648830413818
    4. '-' → logprob: -7.502648830413818
    5. ')' → logprob: -8.002649307250977
    6. ' -' → logprob: -9.877649307250977
    7. ' ):' → logprob: -9.877649307250977
    8. ':' → logprob: -11.252649307250977
    9. '-c' → logprob: -11.627649307250977
    10. '   ' → logprob: -11.627649307250977

Token 64: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44577160477638245
    2. ' if' → logprob: -1.57077157497406
    3. '   ' → logprob: -2.4457716941833496
    4. 'if' → logprob: -3.0707716941833496
    5. '  ' → logprob: -4.07077169418335
    6. '+' → logprob: -7.57077169418335
    7. '    ' → logprob: -7.69577169418335
    8. '       ' → logprob: -8.695771217346191
    9. '<|end|>' → logprob: -9.195771217346191
    10. 'dp' → logprob: -9.320771217346191

Token 65: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4943264424800873
    2. ' if' → logprob: -1.1193264722824097
    3. ' ' → logprob: -2.86932635307312
    4. '   ' → logprob: -5.869326591491699
    5. '    ' → logprob: -6.244326591491699
    6. 'dp' → logprob: -7.244326591491699
    7. '  ' → logprob: -7.494326591491699
    8. 'j' → logprob: -8.2443265914917
    9. '     ' → logprob: -8.6193265914917
    10. ' dp' → logprob: -9.2443265914917

Token 66: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3576495945453644
    2. 'j' → logprob: -1.357649564743042
    3. ' dp' → logprob: -3.357649564743042
    4. 'dp' → logprob: -4.857649803161621
    5. ' ' → logprob: -7.107649803161621
    6. ' ' → logprob: -13.107649803161621
    7. ' c' → logprob: -13.232649803161621
    8. '   ' → logprob: -13.482649803161621
    9. '	dp' → logprob: -13.482649803161621
    10. '	j' → logprob: -13.607649803161621

Token 67: ' >=' (ID: 5064)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6237138509750366
    2. '>=' → logprob: -0.9987138509750366
    3. ' -' → logprob: -2.873713970184326
    4. ' >=' → logprob: -3.373713970184326
    5. '+' → logprob: -5.498713970184326
    6. ' ' → logprob: -7.498713970184326
    7. ']>=' → logprob: -9.123713493347168
    8. ')>=' → logprob: -9.373713493347168
    9. '-c' → logprob: -10.373713493347168
    10. '>' → logprob: -10.748713493347168

Token 68: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.007626149337738752
    2. ' c' → logprob: -4.882626056671143
    3. ' ' → logprob: -10.8826265335083
    4. '   ' → logprob: -14.1326265335083
    5. '	c' → logprob: -15.6326265335083
    6. ')c' → logprob: -15.8826265335083
    7. '  ' → logprob: -16.632625579833984
    8. 'C' → logprob: -17.382625579833984
    9. 'с' → logprob: -17.507625579833984
    10. '_c' → logprob: -17.882625579833984

Token 69: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5608610510826111
    2. ':' → logprob: -0.9358610510826111
    3. 'and' → logprob: -3.935861110687256
    4. ':
' → logprob: -4.060861110687256
    5. ' ' → logprob: -8.685860633850098
    6. ' :' → logprob: -10.060860633850098
    7. '   ' → logprob: -11.435860633850098
    8. '	and' → logprob: -11.685860633850098
    9. 'dp' → logprob: -11.685860633850098
    10. ':

' → logprob: -11.810860633850098

Token 70: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.03895077854394913
    2. ' and' → logprob: -3.2889506816864014
    3. ':' → logprob: -8.16395092010498
    4. ' dp' → logprob: -8.41395092010498
    5. 'dp' → logprob: -9.53895092010498
    6. 'and' → logprob: -9.53895092010498
    7. '    ' → logprob: -9.53895092010498
    8. '       ' → logprob: -9.66395092010498
    9. '   ' → logprob: -10.28895092010498
    10. '      ' → logprob: -10.78895092010498

Token 71: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.006997507996857166
    2. ' dp' → logprob: -5.006997585296631
    3. '       ' → logprob: -8.256997108459473
    4. ' ' → logprob: -11.506997108459473
    5. '	dp' → logprob: -12.256997108459473
    6. '     ' → logprob: -13.006997108459473
    7. 'if' → logprob: -13.256997108459473
    8. '(dp' → logprob: -13.756997108459473
    9. '_dp' → logprob: -14.506997108459473
    10. '      ' → logprob: -14.881997108459473

Token 72: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.250001907348633
    3. '[i' → logprob: -18.375001907348633
    4. 'j' → logprob: -18.875001907348633
    5. '[js' → logprob: -19.125001907348633
    6. ' [' → logprob: -20.000001907348633
    7. ' ' → logprob: -20.875001907348633
    8. '   ' → logprob: -20.875001907348633
    9. '[
' → logprob: -20.875001907348633
    10. '```' → logprob: -21.000001907348633

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02566133812069893
    2. ' =' → logprob: -3.7756612300872803
    3. ']=' → logprob: -6.775661468505859
    4. '=' → logprob: -7.150661468505859
    5. ' ]' → logprob: -7.650661468505859
    6. ')' → logprob: -12.15066146850586
    7. ' ' → logprob: -12.90066146850586
    8. '[' → logprob: -13.15066146850586
    9. '>' → logprob: -15.02566146850586
    10. 'dp' → logprob: -15.52566146850586

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136672079563141
    2. '=' → logprob: -1.3136671781539917
    3. '=min' → logprob: -7.813667297363281
    4. '=max' → logprob: -14.813667297363281
    5. 'min' → logprob: -15.313667297363281
    6. '=
' → logprob: -16.31366729736328
    7. '=

' → logprob: -16.43866729736328
    8. '＝' → logprob: -16.56366729736328
    9. '[min' → logprob: -16.81366729736328
    10. 'dp' → logprob: -17.06366729736328

Token 75: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00317783304490149
    2. ' min' → logprob: -5.753177642822266
    3. ' ' → logprob: -16.503177642822266
    4. 'max' → logprob: -16.878177642822266
    5. 'dp' → logprob: -17.003177642822266
    6. '	min' → logprob: -17.628177642822266
    7. '[min' → logprob: -17.878177642822266
    8. 'mi' → logprob: -18.128177642822266
    9. '(min' → logprob: -18.128177642822266
    10. '   ' → logprob: -18.878177642822266

Token 76: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.005239445250481367
    2. '(' → logprob: -5.255239486694336
    3. 'dp' → logprob: -12.255239486694336
    4. '(
' → logprob: -15.255239486694336
    5. ' (' → logprob: -15.380239486694336
    6. ' dp' → logprob: -15.505239486694336
    7. '	dp' → logprob: -16.005239486694336
    8. '(

' → logprob: -16.880239486694336
    9. '_dp' → logprob: -17.130239486694336
    10. ' ' → logprob: -17.755239486694336

Token 77: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.3902033970225602e-05
    2. '[' → logprob: -11.250014305114746
    3. ' [' → logprob: -14.125014305114746
    4. ' ' → logprob: -16.75001335144043
    5. '[
' → logprob: -16.75001335144043
    6. '[js' → logprob: -17.50001335144043
    7. 'j' → logprob: -17.62501335144043
    8. ')' → logprob: -17.62501335144043
    9. '[i' → logprob: -17.75001335144043
    10. ']' → logprob: -17.87501335144043

Token 78: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.10731729865074158
    2. ',' → logprob: -2.4823172092437744
    3. ' ,' → logprob: -5.2323174476623535
    4. '-' → logprob: -5.6073174476623535
    5. ' -' → logprob: -5.7323174476623535
    6. ' ],' → logprob: -5.8573174476623535
    7. ']' → logprob: -6.9823174476623535
    8. '[j' → logprob: -7.2323174476623535
    9. 'dp' → logprob: -7.8573174476623535
    10. ' ' → logprob: -8.107316970825195

Token 79: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.38695240020751953
    2. ' dp' → logprob: -1.1369524002075195
    3. '	dp' → logprob: -9.88695240020752
    4. ' ' → logprob: -11.01195240020752
    5. '1' → logprob: -11.63695240020752
    6. '(dp' → logprob: -12.76195240020752
    7. '   ' → logprob: -13.63695240020752
    8. '_dp' → logprob: -15.01195240020752
    9. '.dp' → logprob: -15.13695240020752
    10. '     ' → logprob: -15.88695240020752

Token 80: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.12500286102295
    3. 'j' → logprob: -14.75000286102295
    4. ' [' → logprob: -16.875001907348633
    5. '[
' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.500001907348633
    7. '	j' → logprob: -18.375001907348633
    8. '[js' → logprob: -18.750001907348633
    9. ' j' → logprob: -19.625001907348633
    10. ' ' → logprob: -19.875001907348633

Token 81: '-c' (ID: 3452)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.36648115515708923
    2. '-j' → logprob: -1.3664811849594116
    3. '-' → logprob: -3.366481065750122
    4. '-c' → logprob: -4.366481304168701
    5. '[j' → logprob: -5.491481304168701
    6. ' ' → logprob: -8.116480827331543
    7. 'j' → logprob: -9.366480827331543
    8. '[c' → logprob: -9.866480827331543
    9. '[' → logprob: -10.366480827331543
    10. '-[' → logprob: -11.366480827331543

Token 82: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006970040500164032
    2. ']+' → logprob: -5.006969928741455
    3. ')' → logprob: -8.881970405578613
    4. '])' → logprob: -9.131970405578613
    5. ' ]' → logprob: -12.006970405578613
    6. ')+' → logprob: -14.381970405578613
    7. '+' → logprob: -14.881970405578613
    8. '])+' → logprob: -15.006970405578613
    9. ']))' → logprob: -16.506969451904297
    10. ' ' → logprob: -17.006969451904297

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005929393693804741
    2. ' ' → logprob: -5.130929470062256
    3. ')' → logprob: -14.755928993225098
    4. '   ' → logprob: -15.505928993225098
    5. '  ' → logprob: -16.130929946899414
    6. '+' → logprob: -18.130929946899414
    7. '0' → logprob: -18.380929946899414
    8. '100' → logprob: -18.443429946899414
    9. '１' → logprob: -18.755929946899414
    10. ' ' → logprob: -18.943429946899414

Token 84: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1875571544806007e-05
    2. ')
' → logprob: -11.625011444091797
    3. ' )' → logprob: -12.875011444091797
    4. ' ' → logprob: -16.750011444091797
    5. '`)' → logprob: -17.375011444091797
    6. '）' → logprob: -17.625011444091797
    7. ')return' → logprob: -17.750011444091797
    8. '}' → logprob: -17.750011444091797
    9. '))' → logprob: -18.000011444091797
    10. '```' → logprob: -18.000011444091797

Token 85: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0945393294095993
    2. '\n' → logprob: -3.4695394039154053
    3. '
' → logprob: -3.8445394039154053
    4. ' ' → logprob: -4.594539165496826
    5. '<|end|>' → logprob: -4.844539165496826
    6. '#' → logprob: -5.219539165496826
    7. ')' → logprob: -5.594539165496826
    8. 'for' → logprob: -5.844539165496826
    9. '  
' → logprob: -6.344539165496826
    10. ' 
' → logprob: -7.094539165496826

Token 86: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.4741159975528717
    2. '(' → logprob: -0.9741159677505493
    3. '("("' → logprob: -11.724116325378418
    4. '(np' → logprob: -11.849116325378418
    5. '(D' → logprob: -12.724116325378418
    6. '(max' → logprob: -12.849116325378418
    7. ' (' → logprob: -12.974116325378418
    8. '(len' → logprob: -13.099116325378418
    9. '()' → logprob: -13.224116325378418
    10. '('' → logprob: -13.349116325378418

Token 87: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -13.000003814697266
    3. '[-' → logprob: -13.500003814697266
    4. ')' → logprob: -15.500003814697266
    5. '[n' → logprob: -15.625003814697266
    6. 'N' → logprob: -16.125003814697266
    7. '[j' → logprob: -17.125003814697266
    8. '(N' → logprob: -17.375003814697266
    9. ')[' → logprob: -19.000003814697266
    10. '[
' → logprob: -19.250003814697266

Token 88: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001078183762729168
    2. '])' → logprob: -7.126078128814697
    3. '))' → logprob: -8.251078605651855
    4. '})' → logprob: -11.501078605651855
    5. ' )' → logprob: -14.251078605651855
    6. '）' → logprob: -14.751078605651855
    7. ')])' → logprob: -15.251078605651855
    8. '>)' → logprob: -15.376078605651855
    9. ')]' → logprob: -15.501078605651855
    10. ']' → logprob: -15.501078605651855


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 86
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 77
Précision stricte (1ère position): 54.65%
Précision adaptée (1ère position): 56.98%
Précision (top 10): 89.53%
================================================================================
