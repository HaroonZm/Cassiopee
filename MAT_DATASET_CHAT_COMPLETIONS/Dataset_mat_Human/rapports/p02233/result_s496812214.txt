================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())

dp = [-1] * (n+1)

# def fibonacci(n):
#     if n==0 or n==1:
#         dp[n] = 1
#         return dp[n]
#     else:
#         if dp[n]!=-1:
#             return dp[n]
#         else:
#             dp[n] = fibonacci(n-1) + fibonacci(n-2)
#             return dp[n]

# ans = fibonacci(n)
# print(ans)

dp[0] = 1
dp[1] = 1

for i in range(2,n+1):
    dp[i] = dp[i-1] + dp[i-2]

print(dp[n])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004278083215467632
    2. ''' → logprob: -8.625428199768066
    3. '('' → logprob: -9.375428199768066
    4. '(n' → logprob: -9.875428199768066
    5. '```' → logprob: -10.375428199768066
    6. '`' → logprob: -10.750428199768066
    7. '("("' → logprob: -11.125428199768066
    8. '(
' → logprob: -11.125428199768066
    9. ')' → logprob: -11.750428199768066
    10. '()' → logprob: -12.250428199768066

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11814047396183014
    2. ')' → logprob: -2.243140459060669
    3. '()' → logprob: -5.493140697479248
    4. '())' → logprob: -7.493140697479248
    5. '(
' → logprob: -8.24314022064209
    6. '```' → logprob: -9.99314022064209
    7. '(

' → logprob: -10.36814022064209
    8. '('' → logprob: -10.49314022064209
    9. ''' → logprob: -10.74314022064209
    10. '(n' → logprob: -10.86814022064209

Token 5: 'dp' (ID: 19037)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49552208185195923
    2. 'for' → logprob: -1.4955220222473145
    3. 'i' → logprob: -1.9955220222473145
    4. 's' → logprob: -3.8705220222473145
    5. 'f' → logprob: -5.2455220222473145
    6. ' if' → logprob: -7.1205220222473145
    7. 'x' → logprob: -7.1205220222473145
    8. 'total' → logprob: -7.7455220222473145
    9. 'result' → logprob: -7.8705220222473145
    10. 'factor' → logprob: -7.8705220222473145

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00046320082037709653
    2. '[n' → logprob: -8.000463485717773
    3. '\[' → logprob: -9.750463485717773
    4. '[]' → logprob: -11.125463485717773
    5. ']' → logprob: -11.125463485717773
    6. '=' → logprob: -11.250463485717773
    7. '[i' → logprob: -11.750463485717773
    8. '_' → logprob: -12.375463485717773
    9. '```' → logprob: -12.750463485717773
    10. '[:]' → logprob: -12.875463485717773

Token 7: ' [-' (ID: 20191)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.055011145770549774
    2. '[' → logprob: -3.055011034011841
    3. '[n' → logprob: -5.05501127243042
    4. '[int' → logprob: -11.055010795593262
    5. ' ' → logprob: -13.305010795593262
    6. ' [[' → logprob: -13.430010795593262
    7. '[input' → logprob: -13.930010795593262
    8. ' [-' → logprob: -14.055010795593262
    9. '[m' → logprob: -14.305010795593262
    10. '[a' → logprob: -14.680010795593262

Token 8: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008162968442775309
    2. 'float' → logprob: -7.375816345214844
    3. '10' → logprob: -8.750816345214844
    4. '(' → logprob: -11.125816345214844
    5. '100' → logprob: -11.500816345214844
    6. '-' → logprob: -13.000816345214844
    7. ' ' → logprob: -14.000816345214844
    8. '2' → logprob: -14.125816345214844
    9. '101' → logprob: -14.250816345214844
    10. ' float' → logprob: -14.500816345214844

Token 9: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017050117254257202
    2. ']*' → logprob: -4.392050266265869
    3. ' for' → logprob: -6.517050266265869
    4. ']*(' → logprob: -6.517050266265869
    5. ' ]' → logprob: -7.142050266265869
    6. '1' → logprob: -8.392049789428711
    7. ',' → logprob: -8.767049789428711
    8. ']+' → logprob: -9.142049789428711
    9. '']' → logprob: -9.392049789428711
    10. ')' → logprob: -9.392049789428711

Token 10: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3795591592788696
    2. '*' → logprob: -1.5045591592788696
    3. ' *' → logprob: -1.7545591592788696
    4. '[' → logprob: -2.12955904006958
    5. '(n' → logprob: -2.87955904006958
    6. '[n' → logprob: -3.25455904006958
    7. ' +' → logprob: -3.75455904006958
    8. ' for' → logprob: -3.87955904006958
    9. '0' → logprob: -3.87955904006958
    10. '*(' → logprob: -4.12955904006958

Token 11: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00013512482109945267
    2. '(' → logprob: -9.50013542175293
    3. ' (' → logprob: -9.75013542175293
    4. '((' → logprob: -13.62513542175293
    5. '100' → logprob: -14.87513542175293
    6. '(max' → logprob: -16.12513542175293
    7. ' ' → logprob: -16.37513542175293
    8. '   ' → logprob: -17.12513542175293
    9. '(abs' → logprob: -17.50013542175293
    10. 'n' → logprob: -17.50013542175293

Token 12: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25849953293800354
    2. '(n' → logprob: -1.5084995031356812
    3. ' n' → logprob: -5.383499622344971
    4. ' (' → logprob: -6.258499622344971
    5. '(' → logprob: -10.633499145507812
    6. ')' → logprob: -12.258499145507812
    7. ')n' → logprob: -12.383499145507812
    8. '   ' → logprob: -12.883499145507812
    9. ' ' → logprob: -13.008499145507812
    10. '100' → logprob: -13.758499145507812

Token 13: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868730664253235
    2. ' +' → logprob: -1.1368730068206787
    3. ' +
' → logprob: -14.511873245239258
    4. ')' → logprob: -14.886873245239258
    5. '+
' → logprob: -15.011873245239258
    6. ' ' → logprob: -15.136873245239258
    7. ' plus' → logprob: -15.636873245239258
    8. '```' → logprob: -16.011873245239258
    9. '1' → logprob: -16.136873245239258
    10. '＋' → logprob: -16.761873245239258

Token 14: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0219828002154827e-05
    2. ' ' → logprob: -10.875020027160645
    3. '2' → logprob: -13.625020027160645
    4. '7' → logprob: -17.75002098083496
    5. '１' → logprob: -17.87502098083496
    6. '10' → logprob: -18.25002098083496
    7. '   ' → logprob: -18.37502098083496
    8. '  ' → logprob: -18.50002098083496
    9. '```' → logprob: -18.56252098083496
    10. '5' → logprob: -18.62502098083496

Token 15: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -15.250000953674316
    3. '))' → logprob: -16.125
    4. ']' → logprob: -16.125
    5. ')`' → logprob: -16.125
    6. '`)' → logprob: -16.25
    7. '```' → logprob: -16.625
    8. '}' → logprob: -17.375
    9. '）' → logprob: -17.5
    10. ')n' → logprob: -17.5

Token 16: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.050557103008031845
    2. 'def' → logprob: -3.3005571365356445
    3. '
' → logprob: -5.3005571365356445
    4. '\' → logprob: -5.5505571365356445
    5. 'for' → logprob: -6.5505571365356445
    6. 'if' → logprob: -7.5505571365356445
    7. '
' → logprob: -7.8005571365356445
    8. '' → logprob: -8.550557136535645
    9. '\n' → logprob: -8.550557136535645
    10. '```' → logprob: -8.550557136535645

Token 17: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4111053943634033
    2. 'd' → logprob: -1.6611053943634033
    3. ' def' → logprob: -2.1611053943634033
    4. 'dp' → logprob: -3.6611053943634033
    5. ' dp' → logprob: -6.036105155944824
    6. ' d' → logprob: -6.661105155944824
    7. ' for' → logprob: -7.411105155944824
    8. '#' → logprob: -7.786105155944824
    9. 'f' → logprob: -7.911105155944824
    10. 'for' → logprob: -8.411105155944824

Token 18: ' fibonacci' (ID: 165916)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4609414339065552
    2. ' ' → logprob: -1.2109414339065552
    3. 'f' → logprob: -3.5859413146972656
    4. 'def' → logprob: -4.460941314697266
    5. 'p' → logprob: -4.710941314697266
    6. '_' → logprob: -5.085941314697266
    7. ' d' → logprob: -5.335941314697266
    8. 'dfs' → logprob: -5.585941314697266
    9. 's' → logprob: -5.835941314697266
    10. ' def' → logprob: -6.710941314697266

Token 19: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4999006390571594
    2. '_' → logprob: -1.3749005794525146
    3. '(n' → logprob: -2.1249005794525146
    4. ')' → logprob: -4.999900817871094
    5. '_dp' → logprob: -5.874900817871094
    6. '[' → logprob: -5.999900817871094
    7. '_recursive' → logprob: -5.999900817871094
    8. ':' → logprob: -7.249900817871094
    9. '(_' → logprob: -7.499900817871094
    10. '_f' → logprob: -7.749900817871094

Token 20: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055486489087343216
    2. '):' → logprob: -2.9304864406585693
    3. ' )' → logprob: -7.930486679077148
    4. '[' → logprob: -9.305486679077148
    5. '):
' → logprob: -10.055486679077148
    6. ')
' → logprob: -11.055486679077148
    7. ' ):' → logprob: -11.305486679077148
    8. '[n' → logprob: -11.305486679077148
    9. ':' → logprob: -11.555486679077148
    10. 'def' → logprob: -11.805486679077148

Token 21: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2951321303844452
    2. 'def' → logprob: -2.2951321601867676
    3. ')' → logprob: -2.6701321601867676
    4. 'dp' → logprob: -3.5451321601867676
    5. 'f' → logprob: -4.295132160186768
    6. '   ' → logprob: -4.795132160186768
    7. '\' → logprob: -4.795132160186768
    8. '(' → logprob: -4.920132160186768
    9. 'if' → logprob: -5.420132160186768
    10. '
' → logprob: -5.545132160186768

Token 22: '    ' (ID: 257)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017896119505167007
    2. ' 
' → logprob: -5.2678961753845215
    3. ')' → logprob: -5.7678961753845215
    4. ' )' → logprob: -6.1428961753845215
    5. 'def' → logprob: -6.2678961753845215
    6. ' def' → logprob: -6.2678961753845215
    7. '
' → logprob: -7.2678961753845215
    8. '\' → logprob: -7.5178961753845215
    9. 'n' → logprob: -8.017895698547363
    10. '_' → logprob: -8.392895698547363

Token 23: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05609799176454544
    2. ' if' → logprob: -3.181097984313965
    3. '    ' → logprob: -5.681097984313965
    4. '   ' → logprob: -5.931097984313965
    5. ' 
' → logprob: -6.681097984313965
    6. ' )' → logprob: -6.806097984313965
    7. ' def' → logprob: -7.181097984313965
    8. 'def' → logprob: -7.181097984313965
    9. ')' → logprob: -7.556097984313965
    10. 'if' (adapté à ' if') → logprob: -7.681097984313965

Token 24: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0181527491658926
    2. 'n' → logprob: -4.018152713775635
    3. ' ' → logprob: -13.518153190612793
    4. ' ' → logprob: -14.518153190612793
    5. '	n' → logprob: -15.393153190612793
    6. '0' → logprob: -15.518153190612793
    7. '   ' → logprob: -15.893153190612793
    8. ')n' → logprob: -15.893153190612793
    9. '(n' → logprob: -16.518152236938477
    10. '    ' → logprob: -16.518152236938477

Token 25: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5313015580177307
    2. ' <=' → logprob: -1.406301498413086
    3. ' ' → logprob: -2.406301498413086
    4. '==' → logprob: -3.781301498413086
    5. ':' → logprob: -4.281301498413086
    6. '<=' → logprob: -4.656301498413086
    7. '<|end|>' → logprob: -5.156301498413086
    8. '0' → logprob: -5.406301498413086
    9. ' <' → logprob: -5.906301498413086
    10. '[' → logprob: -5.906301498413086

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519349455833435
    2. ' ' → logprob: -1.5019350051879883
    3. '1' → logprob: -12.501935005187988
    4. '  ' → logprob: -14.126935005187988
    5. '   ' → logprob: -15.001935005187988
    6. ' ' → logprob: -15.126935005187988
    7. ')' → logprob: -15.564435005187988
    8. '=' → logprob: -15.751935005187988
    9. '<' → logprob: -16.376934051513672
    10. ' )' → logprob: -16.439434051513672

Token 27: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011815639212727547
    2. ' :' → logprob: -5.261815547943115
    3. ')' → logprob: -5.761815547943115
    4. '):' → logprob: -6.511815547943115
    5. ':return' → logprob: -7.261815547943115
    6. ':
' → logprob: -7.886815547943115
    7. '<|end|>' → logprob: -8.761816024780273
    8. '0' → logprob: -8.761816024780273
    9. ' ' → logprob: -9.136816024780273
    10. '```' → logprob: -9.761816024780273

Token 28: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.180759996175766
    2. 'n' → logprob: -1.8057600259780884
    3. '1' → logprob: -6.930759906768799
    4. ' ' → logprob: -10.430760383605957
    5. ' ' → logprob: -12.430760383605957
    6. '	n' → logprob: -13.055760383605957
    7. '    ' → logprob: -14.680760383605957
    8. '   ' → logprob: -14.805760383605957
    9. ')n' → logprob: -15.805760383605957
    10. '(n' → logprob: -16.61825942993164

Token 29: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0432257242500782
    2. ' ==' → logprob: -3.1682257652282715
    3. '1' → logprob: -8.793225288391113
    4. 'n' → logprob: -10.918225288391113
    5. '=' → logprob: -11.168225288391113
    6. ']==' → logprob: -11.293225288391113
    7. '===' → logprob: -11.918225288391113
    8. ' ' → logprob: -11.918225288391113
    9. ')==' → logprob: -12.418225288391113
    10. '==-' → logprob: -12.668225288391113

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013283335138112307
    2. ' ' → logprob: -6.626328468322754
    3. '   ' → logprob: -13.751328468322754
    4. '  ' → logprob: -14.376328468322754
    5. '0' → logprob: -15.251328468322754
    6. '    ' → logprob: -16.563827514648438
    7. '```' → logprob: -16.563827514648438
    8. '１' → logprob: -16.688827514648438
    9. ' ' → logprob: -16.938827514648438
    10. '-' → logprob: -17.188827514648438

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015582392923533916
    2. ' :' → logprob: -4.89058256149292
    3. ':
' → logprob: -5.39058256149292
    4. ':return' → logprob: -6.26558256149292
    5. ' :
' → logprob: -7.14058256149292
    6. '):' → logprob: -7.89058256149292
    7. ')' → logprob: -9.640582084655762
    8. '):
' → logprob: -9.640582084655762
    9. ':def' → logprob: -10.265582084655762
    10. 'n' → logprob: -10.890582084655762

Token 32: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6621140241622925
    2. ' :' → logprob: -1.7871140241622925
    3. '    ' → logprob: -2.537114143371582
    4. ' :
' → logprob: -2.912114143371582
    5. '   ' → logprob: -3.412114143371582
    6. ' 
' → logprob: -3.662114143371582
    7. '```' → logprob: -3.912114143371582
    8. ':
' → logprob: -4.037114143371582
    9. ':return' → logprob: -4.162114143371582
    10. ' return' → logprob: -4.662114143371582

Token 33: '        ' (ID: 269)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32331550121307373
    2. ' return' → logprob: -2.3233156204223633
    3. '    ' → logprob: -2.9483156204223633
    4. ' n' → logprob: -3.4483156204223633
    5. '0' → logprob: -3.9483156204223633
    6. ' )' → logprob: -4.323315620422363
    7. ')' → logprob: -4.323315620422363
    8. ':' → logprob: -4.698315620422363
    9. '<|end|>' → logprob: -4.948315620422363
    10. ' :' → logprob: -5.073315620422363

Token 34: ' dp' (ID: 21546)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.1865761280059814
    2. 'return' → logprob: -1.3115761280059814
    3. 'dp' (adapté à ' dp') → logprob: -1.5615761280059814
    4. ' dp' → logprob: -2.0615761280059814
    5. '1' → logprob: -3.3115761280059814
    6. ' n' → logprob: -3.5615761280059814
    7. 'n' → logprob: -3.9365761280059814
    8. ' ' → logprob: -5.936575889587402
    9. '0' → logprob: -7.311575889587402
    10. '   ' → logprob: -8.061575889587402

Token 35: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0024805311113595963
    2. '[' → logprob: -6.002480506896973
    3. '[i' → logprob: -13.627480506896973
    4. ' [' → logprob: -13.877480506896973
    5. 'n' → logprob: -14.377480506896973
    6. '[node' → logprob: -14.627480506896973
    7. ' ' → logprob: -15.002480506896973
    8. '[]' → logprob: -15.002480506896973
    9. ' n' → logprob: -16.00248146057129
    10. '\[' → logprob: -16.00248146057129

Token 36: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.036938369274139404
    2. ']==' → logprob: -3.911938428878784
    3. ' ]' → logprob: -4.661938190460205
    4. '[n' → logprob: -5.536938190460205
    5. ']=' → logprob: -5.911938190460205
    6. '[' → logprob: -9.911938667297363
    7. ']!=' → logprob: -9.911938667297363
    8. '==' → logprob: -10.661938667297363
    9. ')' → logprob: -11.286938667297363
    10. ']+=' → logprob: -12.036938667297363

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014801949262619
    2. '=' → logprob: -1.7014801502227783
    3. ' ' → logprob: -9.7014799118042
    4. 'return' → logprob: -13.3264799118042
    5. ' return' → logprob: -14.0764799118042
    6. '<|end|>' → logprob: -14.2014799118042
    7. '=n' → logprob: -14.7014799118042
    8. '[' → logprob: -15.2014799118042
    9. ')' → logprob: -15.2014799118042
    10. ' =
' → logprob: -15.3264799118042

Token 38: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3791345953941345
    2. '1' → logprob: -1.2541346549987793
    3. ' n' → logprob: -3.7541346549987793
    4. ' ' → logprob: -5.004134654998779
    5. '0' → logprob: -9.629134178161621
    6. '	n' → logprob: -11.754134178161621
    7. 'dp' → logprob: -12.254134178161621
    8. '   ' → logprob: -12.504134178161621
    9. 'fib' → logprob: -13.191634178161621
    10. '  ' → logprob: -13.254134178161621

Token 39: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5772844552993774
    2. '1' → logprob: -0.8272844552993774
    3. ' n' → logprob: -7.077284336090088
    4. ' ' → logprob: -8.202284812927246
    5. '0' → logprob: -8.452284812927246
    6. '	n' → logprob: -12.952284812927246
    7. 'dp' → logprob: -13.077284812927246
    8. 'fib' → logprob: -13.452284812927246
    9. '   ' → logprob: -13.702284812927246
    10. '[n' → logprob: -13.764784812927246

Token 40: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18593484163284302
    2. '<|end|>' → logprob: -2.1859347820281982
    3. '#' → logprob: -3.5609347820281982
    4. '\n' → logprob: -4.310935020446777
    5. '   ' → logprob: -5.185935020446777
    6. '
' → logprob: -5.810935020446777
    7. '\' → logprob: -5.935935020446777
    8. '<|end|>' → logprob: -6.685935020446777
    9. ')
' → logprob: -7.935935020446777
    10. '```' → logprob: -8.185935020446777

Token 41: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2221914380788803
    2. '
' → logprob: -2.847191333770752
    3. '   ' → logprob: -3.097191333770752
    4. '\n' → logprob: -3.847191333770752
    5. '```' → logprob: -3.972191333770752
    6. ')
' → logprob: -4.097191333770752
    7. '\' → logprob: -4.347191333770752
    8. 'def' → logprob: -5.222191333770752
    9. '<|end|>' → logprob: -5.222191333770752
    10. '#' → logprob: -5.347191333770752

Token 42: '        ' (ID: 269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.790384829044342
    2. '   ' → logprob: -1.2903847694396973
    3. '```' → logprob: -2.4153847694396973
    4. '
' → logprob: -3.2903847694396973
    5. '\n' → logprob: -3.2903847694396973
    6. '#' → logprob: -3.2903847694396973
    7. ':' → logprob: -3.5403847694396973
    8. 'def' → logprob: -4.790384769439697
    9. '\' → logprob: -4.915384769439697
    10. 'n' → logprob: -5.165384769439697

Token 43: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0690976232290268
    2. ')' → logprob: -3.8190975189208984
    3. 'def' → logprob: -4.319097518920898
    4. '#' → logprob: -4.444097518920898
    5. '```' → logprob: -4.444097518920898
    6. ' return' → logprob: -5.819097518920898
    7. 'n' → logprob: -6.444097518920898
    8. ' def' → logprob: -6.694097518920898
    9. '       ' → logprob: -7.569097518920898
    10. ' n' → logprob: -7.569097518920898

Token 44: ' dp' (ID: 21546)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9578602313995361
    2. '1' → logprob: -1.8328602313995361
    3. ' n' → logprob: -1.9578602313995361
    4. ' dp' → logprob: -1.9578602313995361
    5. 'dp' → logprob: -1.9578602313995361
    6. ' ' → logprob: -3.457860231399536
    7. '0' → logprob: -6.957859992980957
    8. '(dp' → logprob: -8.832859992980957
    9. ' ' → logprob: -9.957859992980957
    10. '2' → logprob: -10.457859992980957

Token 45: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.12870730459690094
    2. '[' → logprob: -2.1287074089050293
    3. '\[' → logprob: -6.878707408905029
    4. '```' → logprob: -8.378706932067871
    5. '\' → logprob: -8.878706932067871
    6. '[s' → logprob: -9.503706932067871
    7. 'n' → logprob: -10.003706932067871
    8. '[
' → logprob: -10.003706932067871
    9. 's' → logprob: -10.003706932067871
    10. '[]' → logprob: -10.628706932067871

Token 46: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.41129949549213e-05
    2. ')
' → logprob: -10.250083923339844
    3. ')n' → logprob: -10.250083923339844
    4. ' )' → logprob: -12.375083923339844
    5. '#' → logprob: -13.375083923339844
    6. '   ' → logprob: -13.750083923339844
    7. ']' → logprob: -14.000083923339844
    8. ')return' → logprob: -14.125083923339844
    9. '`)' → logprob: -14.625083923339844
    10. '）' → logprob: -14.625083923339844

Token 47: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41356226801872253
    2. ')' → logprob: -2.413562297821045
    3. 'def' → logprob: -2.538562297821045
    4. '```' → logprob: -2.913562297821045
    5. '
' → logprob: -3.038562297821045
    6. '\' → logprob: -3.663562297821045
    7. ' 
' → logprob: -4.538562297821045
    8. ' ' → logprob: -4.788562297821045
    9. '    
' → logprob: -5.038562297821045
    10. 'n' → logprob: -5.663562297821045

Token 48: '    ' (ID: 257)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11094937473535538
    2. '   ' → logprob: -2.7359492778778076
    3. ' )' → logprob: -3.7359492778778076
    4. 'def' → logprob: -4.860949516296387
    5. 'n' → logprob: -5.735949516296387
    6. ' ' → logprob: -6.735949516296387
    7. '#' → logprob: -7.110949516296387
    8. ' def' → logprob: -7.360949516296387
    9. 'd' → logprob: -7.735949516296387
    10. '    ' → logprob: -7.985949516296387

Token 49: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22636054456233978
    2. '#' → logprob: -2.476360559463501
    3. ')' → logprob: -3.351360559463501
    4. ' ' → logprob: -3.476360559463501
    5. 'def' → logprob: -4.101360321044922
    6. '    ' → logprob: -4.726360321044922
    7. 'n' → logprob: -4.851360321044922
    8. ' )' → logprob: -5.601360321044922
    9. ' def' → logprob: -5.851360321044922
    10. ' else' → logprob: -6.101360321044922

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5642361640930176
    2. '   ' → logprob: -1.0642361640930176
    3. '       ' → logprob: -3.6892361640930176
    4. 'n' → logprob: -3.8142361640930176
    5. '
' → logprob: -4.189236164093018
    6. ':
' → logprob: -4.939236164093018
    7. '    ' → logprob: -5.439236164093018
    8. '(n' → logprob: -6.439236164093018
    9. 'dp' → logprob: -6.689236164093018
    10. '(' → logprob: -6.814236164093018

Token 51: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7650429606437683
    2. ' ' → logprob: -1.140043020248413
    3. '    ' → logprob: -2.640043020248413
    4. ' dp' → logprob: -2.640043020248413
    5. 'n' → logprob: -4.015042781829834
    6. 'd' → logprob: -4.640042781829834
    7. 'dp' → logprob: -4.765042781829834
    8. ' n' → logprob: -4.765042781829834
    9. ')' → logprob: -5.015042781829834
    10. '(' → logprob: -5.015042781829834

Token 52: '        ' (ID: 269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.195115566253662
    2. ' dp' → logprob: -1.195115566253662
    3. '    ' → logprob: -1.820115566253662
    4. ' def' → logprob: -2.070115566253662
    5. ' if' → logprob: -3.070115566253662
    6. ' return' → logprob: -3.945115566253662
    7. ' ' → logprob: -4.445115566253662
    8. ' ' → logprob: -4.945115566253662
    9. ' for' → logprob: -5.070115566253662
    10. ' n' → logprob: -5.320115566253662

Token 53: ' if' (ID: 538)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7339622974395752
    2. 'dp' → logprob: -1.1089622974395752
    3. ' return' → logprob: -2.608962297439575
    4. 'return' → logprob: -2.608962297439575
    5. '(' → logprob: -4.108962059020996
    6. '   ' → logprob: -4.233962059020996
    7. '(dp' → logprob: -5.483962059020996
    8. ' (' → logprob: -5.608962059020996
    9. '    ' → logprob: -6.983962059020996
    10. 'f' → logprob: -7.108962059020996

Token 54: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.03805423527956009
    2. 'dp' → logprob: -3.2880542278289795
    3. '(dp' → logprob: -11.663054466247559
    4. '	dp' → logprob: -12.663054466247559
    5. '_dp' → logprob: -14.913054466247559
    6. ' ' → logprob: -15.288054466247559
    7. '.dp' → logprob: -15.663054466247559
    8. 'n' → logprob: -15.788054466247559
    9. ' n' → logprob: -17.663053512573242
    10. 'd' → logprob: -18.288053512573242

Token 55: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0015116469003260136
    2. '[' → logprob: -6.501511573791504
    3. 'n' → logprob: -12.251511573791504
    4. ' [' → logprob: -13.626511573791504
    5. 'dp' → logprob: -14.751511573791504
    6. '[]' → logprob: -15.126511573791504
    7. '[
' → logprob: -15.126511573791504
    8. '[i' → logprob: -15.251511573791504
    9. ']' → logprob: -15.376511573791504
    10. '```' → logprob: -15.501511573791504

Token 56: ']!=' (ID: 85780)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.1356065720319748
    2. ']' → logprob: -2.135606527328491
    3. '[' → logprob: -5.13560676574707
    4. ' ]' → logprob: -6.51060676574707
    5. ']==' → logprob: -6.88560676574707
    6. ']!=' → logprob: -9.38560676574707
    7. ' [' → logprob: -10.38560676574707
    8. '[-' → logprob: -11.01060676574707
    9. '-' → logprob: -11.13560676574707
    10. '```' → logprob: -11.13560676574707

Token 57: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028048718813806772
    2. ' -' → logprob: -5.877804756164551
    3. '−' → logprob: -17.252805709838867
    4. ' ' → logprob: -17.502805709838867
    5. '-n' → logprob: -17.502805709838867
    6. '   ' → logprob: -17.627805709838867
    7. '1' → logprob: -18.127805709838867
    8. '  ' → logprob: -19.627805709838867
    9. '	' → logprob: -19.627805709838867
    10. '‌' → logprob: -20.127805709838867

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.704065213445574e-05
    2. ' ' → logprob: -10.000046730041504
    3. ' -' → logprob: -15.375046730041504
    4. '```' → logprob: -15.500046730041504
    5. ' dp' → logprob: -15.625046730041504
    6. '   ' → logprob: -15.875046730041504
    7. 'dp' → logprob: -16.12504768371582
    8. '2' → logprob: -16.25004768371582
    9. '  ' → logprob: -16.68754768371582
    10. '-' → logprob: -16.81254768371582

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020724674686789513
    2. ' :' → logprob: -6.627072334289551
    3. '):' → logprob: -7.752072334289551
    4. ':return' → logprob: -8.25207233428955
    5. ':
' → logprob: -10.62707233428955
    6. ')' → logprob: -11.87707233428955
    7. '       ' → logprob: -12.37707233428955
    8. '   ' → logprob: -12.75207233428955
    9. '    ' → logprob: -13.12707233428955
    10. '        ' → logprob: -13.50207233428955

Token 60: '#' (ID: 2)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1269062757492065
    2. '           ' → logprob: -1.2519062757492065
    3. ' return' → logprob: -1.3769062757492065
    4. '        ' → logprob: -2.876906394958496
    5. 'return' → logprob: -3.126906394958496
    6. '   ' → logprob: -4.376906394958496
    7. '            ' → logprob: -4.751906394958496
    8. 'n' → logprob: -5.376906394958496
    9. '    ' → logprob: -6.001906394958496
    10. '               ' → logprob: -6.626906394958496

Token 61: '            ' (ID: 3346)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.6689833402633667
    2. ' return' → logprob: -0.9189833402633667
    3. ' ' → logprob: -3.2939834594726562
    4. 'return' → logprob: -3.5439834594726562
    5. '       ' → logprob: -4.543983459472656
    6. '            ' → logprob: -6.043983459472656
    7. '           ' → logprob: -6.543983459472656
    8. '    ' → logprob: -6.543983459472656
    9. '<|end|>' → logprob: -6.793983459472656
    10. ':return' → logprob: -7.168983459472656

Token 62: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11315375566482544
    2. ' return' → logprob: -2.2381536960601807
    3. '           ' → logprob: -8.863153457641602
    4. '   ' → logprob: -10.113153457641602
    5. 'dp' → logprob: -10.113153457641602
    6. '       ' → logprob: -10.613153457641602
    7. '        ' → logprob: -10.863153457641602
    8. '```' → logprob: -10.863153457641602
    9. ':return' → logprob: -11.488153457641602
    10. '    ' → logprob: -11.863153457641602

Token 63: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.2519381642341614
    2. 'dp' → logprob: -1.5019381046295166
    3. '	dp' → logprob: -12.126937866210938
    4. '(dp' → logprob: -13.001937866210938
    5. ' ' → logprob: -13.751937866210938
    6. '_dp' → logprob: -15.626937866210938
    7. '.dp' → logprob: -15.876937866210938
    8. ' ' → logprob: -17.251937866210938
    9. '```' → logprob: -18.501937866210938
    10. 'DP' → logprob: -19.751937866210938

Token 64: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0019037702586501837
    2. '[' → logprob: -6.501903533935547
    3. ' [' → logprob: -7.876903533935547
    4. 'n' → logprob: -11.501903533935547
    5. ' n' → logprob: -12.501903533935547
    6. '\[' → logprob: -13.501903533935547
    7. '```' → logprob: -13.751903533935547
    8. ' ' → logprob: -14.126903533935547
    9. '	n' → logprob: -14.376903533935547
    10. '(n' → logprob: -14.751903533935547

Token 65: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025430822279304266
    2. ')
' → logprob: -6.252542972564697
    3. ' )' → logprob: -8.252543449401855
    4. ')n' → logprob: -9.252543449401855
    5. 'else' → logprob: -10.127543449401855
    6. ')return' → logprob: -10.127543449401855
    7. '])' → logprob: -10.127543449401855
    8. ']' → logprob: -10.127543449401855
    9. '   ' → logprob: -10.502543449401855
    10. '       ' → logprob: -10.627543449401855

Token 66: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06147187203168869
    2. 'n' → logprob: -4.436471939086914
    3. ')' → logprob: -4.811471939086914
    4. '    
' → logprob: -4.936471939086914
    5. '    ' → logprob: -5.061471939086914
    6. ' else' → logprob: -5.436471939086914
    7. ' 
' → logprob: -5.561471939086914
    8. ' dp' → logprob: -5.561471939086914
    9. '       ' → logprob: -5.811471939086914
    10. ' ' → logprob: -6.061471939086914

Token 67: '        ' (ID: 269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24822749197483063
    2. ' else' → logprob: -1.9982274770736694
    3. '    ' → logprob: -3.373227596282959
    4. ' ' → logprob: -4.498227596282959
    5. '       ' → logprob: -4.748227596282959
    6. 'n' → logprob: -5.248227596282959
    7. '    
' → logprob: -5.748227596282959
    8. ' dp' → logprob: -5.748227596282959
    9. ' 
' → logprob: -5.873227596282959
    10. ' n' → logprob: -5.873227596282959

Token 68: ' else' (ID: 1203)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4954235851764679
    2. ' dp' → logprob: -1.4954235553741455
    3. '   ' → logprob: -2.4954235553741455
    4. 'return' → logprob: -3.4954235553741455
    5. '       ' → logprob: -3.9954235553741455
    6. ' return' → logprob: -4.120423793792725
    7. '    ' → logprob: -4.870423793792725
    8. 'n' → logprob: -5.620423793792725
    9. '        ' → logprob: -5.745423793792725
    10. 'def' → logprob: -6.745423793792725

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08342783153057098
    2. '           ' → logprob: -2.583427906036377
    3. ':
' → logprob: -6.708427906036377
    4. '       ' → logprob: -7.083427906036377
    5. ':return' → logprob: -7.458427906036377
    6. '            ' → logprob: -8.458427429199219
    7. 'n' → logprob: -8.583427429199219
    8. ' :' → logprob: -8.833427429199219
    9. '   ' → logprob: -8.833427429199219
    10. 'return' → logprob: -8.958427429199219

Token 70: '#' (ID: 2)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3801366984844208
    2. '            ' → logprob: -1.6301367282867432
    3. '       ' → logprob: -3.255136728286743
    4. '        ' → logprob: -3.255136728286743
    5. ' dp' → logprob: -4.005136489868164
    6. '   ' → logprob: -4.630136489868164
    7. '               ' → logprob: -5.880136489868164
    8. 'dp' → logprob: -6.005136489868164
    9. '    ' → logprob: -6.255136489868164
    10. '```' → logprob: -6.755136489868164

Token 71: '            ' (ID: 3346)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.02085844986140728
    2. 'dp' → logprob: -4.145858287811279
    3. ' return' → logprob: -5.770858287811279
    4. '        ' → logprob: -7.270858287811279
    5. 'return' → logprob: -8.270858764648438
    6. '       ' → logprob: -8.520858764648438
    7. '    ' → logprob: -8.770858764648438
    8. '   ' → logprob: -9.145858764648438
    9. '	dp' → logprob: -9.520858764648438
    10. ' ' → logprob: -10.020858764648438

Token 72: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.17983175814151764
    2. ' dp' → logprob: -1.8048317432403564
    3. '(dp' → logprob: -11.179831504821777
    4. '	dp' → logprob: -11.304831504821777
    5. 'return' → logprob: -11.429831504821777
    6. ' ' → logprob: -11.554831504821777
    7. '    ' → logprob: -12.054831504821777
    8. 'f' → logprob: -12.054831504821777
    9. '```' → logprob: -12.054831504821777
    10. 'd' → logprob: -12.304831504821777

Token 73: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.03370482847094536
    2. '[' → logprob: -3.4087047576904297
    3. ' [' → logprob: -11.15870475769043
    4. '[
' → logprob: -11.40870475769043
    5. 'n' → logprob: -12.03370475769043
    6. '<|end|>' → logprob: -12.03370475769043
    7. '\[' → logprob: -12.78370475769043
    8. '```' → logprob: -12.90870475769043
    9. '[next' → logprob: -13.03370475769043
    10. '=' → logprob: -13.40870475769043

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029370876029133797
    2. ']=' → logprob: -3.7793707847595215
    3. ' ]' → logprob: -5.4043707847595215
    4. '=' → logprob: -6.9043707847595215
    5. '-' → logprob: -7.6543707847595215
    6. ' =' → logprob: -9.77937126159668
    7. ')' → logprob: -10.77937126159668
    8. ']==' → logprob: -11.02937126159668
    9. ']+=' → logprob: -11.65437126159668
    10. ' -' → logprob: -12.02937126159668

Token 75: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061982475221157074
    2. ' =' → logprob: -2.8119823932647705
    3. '=
' → logprob: -11.936982154846191
    4. '=n' → logprob: -12.686982154846191
    5. '=

' → logprob: -12.811982154846191
    6. ' =
' → logprob: -13.811982154846191
    7. '[' → logprob: -14.311982154846191
    8. 'dp' → logprob: -15.436982154846191
    9. '=}' → logprob: -16.561983108520508
    10. '"' → logprob: -16.811983108520508

Token 76: ' fibonacci' (ID: 165916)
  Prédit: ' fibonacci'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fibonacci' → logprob: -0.093047596514225
    2. 'f' → logprob: -2.468047618865967
    3. 'fib' → logprob: -6.718047618865967
    4. ' dp' → logprob: -6.968047618865967
    5. 'dp' → logprob: -6.968047618865967
    6. ' f' → logprob: -7.718047618865967
    7. ' fib' → logprob: -7.968047618865967
    8. ' ' → logprob: -10.093047142028809
    9. '(f' → logprob: -10.343047142028809
    10. ' Fibonacci' → logprob: -10.780547142028809

Token 77: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00020520923135336488
    2. '(' → logprob: -8.500205039978027
    3. 'n' → logprob: -13.750205039978027
    4. '```' → logprob: -16.000205993652344
    5. '(
' → logprob: -16.125205993652344
    6. '\(' → logprob: -16.375205993652344
    7. ' (' → logprob: -16.500205993652344
    8. '-' → logprob: -16.875205993652344
    9. '((' → logprob: -17.250205993652344
    10. '[n' → logprob: -17.625205993652344

Token 78: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.908022285439074e-05
    2. ' -' → logprob: -9.750059127807617
    3. '1' → logprob: -15.125059127807617
    4. '```' → logprob: -15.750059127807617
    5. '-
' → logprob: -15.875059127807617
    6. ')' → logprob: -16.500059127807617
    7. '(n' → logprob: -16.875059127807617
    8. '   ' → logprob: -17.000059127807617
    9. '−' → logprob: -17.250059127807617
    10. ' ' → logprob: -17.250059127807617

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001600347168277949
    2. '2' → logprob: -9.125160217285156
    3. ' ' → logprob: -10.000160217285156
    4. '
' → logprob: -13.750160217285156
    5. ')' → logprob: -13.937660217285156
    6. '

' → logprob: -13.937660217285156
    7. '   ' → logprob: -14.375160217285156
    8. '```' → logprob: -14.437660217285156
    9. '  ' → logprob: -15.500160217285156
    10. ' )' → logprob: -15.687660217285156

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017452733591198921
    2. ')+' → logprob: -6.751745223999023
    3. ' )' → logprob: -7.501745223999023
    4. '+' → logprob: -11.376745223999023
    5. ' +' → logprob: -11.876745223999023
    6. '+)' → logprob: -13.376745223999023
    7. ' ' → logprob: -14.751745223999023
    8. ')
' → logprob: -15.001745223999023
    9. '')' → logprob: -15.126745223999023
    10. '`)' → logprob: -15.126745223999023

Token 81: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34850624203681946
    2. '+' → logprob: -1.223506212234497
    3. ' ' → logprob: -10.848505973815918
    4. ' +
' → logprob: -12.098505973815918
    5. '[' → logprob: -12.223505973815918
    6. ')' → logprob: -12.223505973815918
    7. '<|end|>' → logprob: -12.473505973815918
    8. ' plus' → logprob: -12.598505973815918
    9. '+
' → logprob: -12.723505973815918
    10. ' ' → logprob: -12.848505973815918

Token 82: ' fibonacci' (ID: 165916)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.43055060505867004
    2. ' fibonacci' → logprob: -1.0555505752563477
    3. ' f' → logprob: -6.805550575256348
    4. 'fib' → logprob: -7.555550575256348
    5. ' ' → logprob: -9.055550575256348
    6. ' ' → logprob: -10.430550575256348
    7. '	f' → logprob: -10.930550575256348
    8. ' fib' → logprob: -11.305550575256348
    9. ' Fibonacci' → logprob: -11.805550575256348
    10. ' fibr' → logprob: -11.805550575256348

Token 83: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.14312207698822021
    2. '(' → logprob: -2.0181221961975098
    3. ' (' → logprob: -8.018121719360352
    4. '(
' → logprob: -9.518121719360352
    5. '-' → logprob: -10.768121719360352
    6. '(-' → logprob: -11.643121719360352
    7. '`' → logprob: -12.643121719360352
    8. '```' → logprob: -12.643121719360352
    9. '((' → logprob: -13.643121719360352
    10. ' ' → logprob: -13.768121719360352

Token 84: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012118533049942926
    2. '2' → logprob: -9.250121116638184
    3. ' -' → logprob: -10.875121116638184
    4. ')' → logprob: -13.125121116638184
    5. '-)' → logprob: -13.375121116638184
    6. '```' → logprob: -14.125121116638184
    7. '-
' → logprob: -14.375121116638184
    8. 'n' → logprob: -14.375121116638184
    9. ')-' → logprob: -15.375121116638184
    10. '1' → logprob: -16.7501220703125

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -12.000009536743164
    3. '1' → logprob: -12.875009536743164
    4. ')' → logprob: -14.250009536743164
    5. '```' → logprob: -15.500009536743164
    6. '۲' → logprob: -17.250009536743164
    7. '<|end|>' → logprob: -17.250009536743164
    8. '`)' → logprob: -17.750009536743164
    9. '   ' → logprob: -17.937509536743164
    10. '  ' → logprob: -18.312509536743164

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001563065918162465
    2. ')
' → logprob: -6.75156307220459
    3. '   ' → logprob: -8.50156307220459
    4. ')n' → logprob: -9.75156307220459
    5. '       ' → logprob: -10.00156307220459
    6. ' )' → logprob: -10.12656307220459
    7. ')return' → logprob: -10.87656307220459
    8. ')
' → logprob: -11.37656307220459
    9. ')

' → logprob: -13.00156307220459
    10. '           ' → logprob: -13.25156307220459

Token 87: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8055800199508667
    2. ')' → logprob: -0.9305800199508667
    3. '    
' → logprob: -3.1805801391601562
    4. '#' → logprob: -3.6805801391601562
    5. '       ' → logprob: -4.180580139160156
    6. ')
' → logprob: -4.430580139160156
    7. '
' → logprob: -4.430580139160156
    8. 'n' → logprob: -4.555580139160156
    9. 'return' → logprob: -4.680580139160156
    10. '<|end|>' → logprob: -5.305580139160156

Token 88: '            ' (ID: 3346)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7256561517715454
    2. ')' → logprob: -1.3506561517715454
    3. '       ' → logprob: -2.850656032562256
    4. ' return' → logprob: -3.225656032562256
    5. 'return' → logprob: -3.350656032562256
    6. '           ' → logprob: -4.100656032562256
    7. ' ' → logprob: -4.225656032562256
    8. '    ' → logprob: -4.225656032562256
    9. '    
' → logprob: -4.225656032562256
    10. ' 
' → logprob: -4.475656032562256

Token 89: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.029375271871685982
    2. ' return' → logprob: -4.404375076293945
    3. '           ' → logprob: -4.654375076293945
    4. '       ' → logprob: -5.654375076293945
    5. '   ' → logprob: -5.654375076293945
    6. '               ' → logprob: -9.904375076293945
    7. '	return' → logprob: -9.904375076293945
    8. '```' → logprob: -10.404375076293945
    9. ' ' → logprob: -10.654375076293945
    10. '  ' → logprob: -11.279375076293945

Token 90: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5759723782539368
    2. 'dp' → logprob: -0.8259723782539368
    3. '(dp' → logprob: -11.075972557067871
    4. '	dp' → logprob: -11.200972557067871
    5. ' ' → logprob: -13.325972557067871
    6. ' ' → logprob: -14.575972557067871
    7. '_dp' → logprob: -14.825972557067871
    8. '.dp' → logprob: -15.075972557067871
    9. 'd' → logprob: -15.325972557067871
    10. '   ' → logprob: -15.825972557067871

Token 91: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.07002779841423035
    2. '[' → logprob: -2.6950278282165527
    3. ')' → logprob: -10.070027351379395
    4. ']' → logprob: -10.820027351379395
    5. '\[' → logprob: -11.945027351379395
    6. 'n' → logprob: -12.570027351379395
    7. '```' → logprob: -12.570027351379395
    8. '(n' → logprob: -12.820027351379395
    9. '[
' → logprob: -13.320027351379395
    10. ' [' → logprob: -13.445027351379395

Token 92: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5928495486150496e-05
    2. '}' → logprob: -11.750016212463379
    3. ')
' → logprob: -12.875016212463379
    4. ' )' → logprob: -13.250016212463379
    5. ']' → logprob: -14.250016212463379
    6. ')n' → logprob: -14.250016212463379
    7. ')}' → logprob: -14.750016212463379
    8. '')' → logprob: -15.125016212463379
    9. ')

' → logprob: -15.375016212463379
    10. '#' → logprob: -15.625016212463379

Token 93: '#' (ID: 2)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8662750124931335
    2. 'd' → logprob: -1.2412750720977783
    3. 'def' → logprob: -1.3662750720977783
    4. 'dp' → logprob: -4.241274833679199
    5. 'n' → logprob: -4.491274833679199
    6. '_' → logprob: -6.241274833679199
    7. 'fib' → logprob: -6.241274833679199
    8. 'print' → logprob: -6.366274833679199
    9. '#' → logprob: -6.866274833679199
    10. '```' → logprob: -7.741274833679199

Token 94: ' ans' (ID: 3345)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020159341394901276
    2. 'f' → logprob: -5.0201592445373535
    3. 'd' → logprob: -5.2701592445373535
    4. 'dp' → logprob: -5.7701592445373535
    5. 'n' → logprob: -5.8951592445373535
    6. 'print' → logprob: -6.7701592445373535
    7. 'for' → logprob: -7.3951592445373535
    8. '#' → logprob: -8.895159721374512
    9. 'if' → logprob: -9.645159721374512
    10. ')' → logprob: -9.770159721374512

Token 95: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02652890607714653
    2. ' =' → logprob: -3.651528835296631
    3. '(' → logprob: -9.401529312133789
    4. ')' → logprob: -10.276529312133789
    5. '_' → logprob: -10.776529312133789
    6. '[' → logprob: -10.776529312133789
    7. ':' → logprob: -11.151529312133789
    8. ' ' → logprob: -11.526529312133789
    9. '=
' → logprob: -11.526529312133789
    10. ',' → logprob: -11.776529312133789

Token 96: ' fibonacci' (ID: 165916)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07958590984344482
    2. ' fibonacci' → logprob: -2.8295860290527344
    3. 'dp' → logprob: -4.329586029052734
    4. 'fib' → logprob: -5.954586029052734
    5. ' dp' → logprob: -6.954586029052734
    6. ' f' → logprob: -7.579586029052734
    7. ' fib' → logprob: -9.579586029052734
    8. ' ' → logprob: -10.079586029052734
    9. '0' → logprob: -10.204586029052734
    10. '1' → logprob: -11.704586029052734

Token 97: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001593195047462359
    2. '(' → logprob: -8.75015926361084
    3. '(s' → logprob: -15.50015926361084
    4. ' (' → logprob: -15.87515926361084
    5. ')' → logprob: -16.625160217285156
    6. '(i' → logprob: -16.625160217285156
    7. '(
' → logprob: -16.750160217285156
    8. 's' → logprob: -16.750160217285156
    9. '
' → logprob: -16.750160217285156
    10. '[n' → logprob: -16.750160217285156

Token 98: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8219583075260743e-05
    2. ')
' → logprob: -10.375038146972656
    3. '))' → logprob: -13.375038146972656
    4. ' )' → logprob: -13.500038146972656
    5. '()' → logprob: -13.875038146972656
    6. ')n' → logprob: -14.250038146972656
    7. ')

' → logprob: -14.750038146972656
    8. '#' → logprob: -14.750038146972656
    9. ')#' → logprob: -14.875038146972656
    10. '())' → logprob: -15.000038146972656

Token 99: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14163823425769806
    2. 'dp' → logprob: -2.7666382789611816
    3. 'n' → logprob: -4.016638278961182
    4. '
' → logprob: -4.141638278961182
    5. 'p' → logprob: -4.766638278961182
    6. '#' → logprob: -5.266638278961182
    7. '\' → logprob: -5.766638278961182
    8. 'a' → logprob: -5.766638278961182
    9. 'print' → logprob: -5.891638278961182
    10. 'i' → logprob: -5.891638278961182

Token 100: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00032354547875002027
    2. 'dp' → logprob: -8.500323295593262
    3. 'pr' → logprob: -10.000323295593262
    4. 'if' → logprob: -10.625323295593262
    5. 'for' → logprob: -10.625323295593262
    6. 'ans' → logprob: -11.625323295593262
    7. ' print' → logprob: -12.125323295593262
    8. 'n' → logprob: -12.625323295593262
    9. '#' → logprob: -13.000323295593262
    10. 'pri' → logprob: -13.375323295593262

Token 101: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.3869423568248749
    2. '(' → logprob: -1.1369423866271973
    3. '(dp' → logprob: -9.761941909790039
    4. '()' → logprob: -12.261941909790039
    5. '(
' → logprob: -13.136941909790039
    6. 'ans' → logprob: -13.261941909790039
    7. ' (' → logprob: -14.136941909790039
    8. '(an' → logprob: -14.261941909790039
    9. '(answer' → logprob: -14.261941909790039
    10. '(a' → logprob: -14.386941909790039

Token 102: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -14.12500286102295
    3. '))' → logprob: -14.37500286102295
    4. ')n' → logprob: -14.62500286102295
    5. ')
' → logprob: -15.12500286102295
    6. '#' → logprob: -15.12500286102295
    7. '')' → logprob: -15.37500286102295
    8. ')}' → logprob: -15.87500286102295
    9. ')`' → logprob: -16.125003814697266
    10. '`)' → logprob: -16.375003814697266

Token 103: 'dp' (ID: 19037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7415304183959961
    2. 'd' → logprob: -0.8665304183959961
    3. 'dp' → logprob: -2.491530418395996
    4. 'n' → logprob: -4.991530418395996
    5. 'if' → logprob: -5.241530418395996
    6. 'f' → logprob: -5.991530418395996
    7. '0' → logprob: -6.116530418395996
    8. 'i' → logprob: -6.491530418395996
    9. 'for' → logprob: -7.116530418395996
    10. '#' → logprob: -7.616530418395996

Token 104: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.055727239698171616
    2. '<|end|>' → logprob: -3.555727243423462
    3. '[n' → logprob: -3.805727243423462
    4. '[:]' → logprob: -6.555727005004883
    5. '[]' → logprob: -7.430727005004883
    6. '<|end|>' → logprob: -8.430727005004883
    7. '[end' → logprob: -8.680727005004883
    8. '```' → logprob: -8.680727005004883
    9. ')' → logprob: -9.055727005004883
    10. '\[' → logprob: -9.180727005004883

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.843177233240567e-05
    2. ' ' → logprob: -11.000018119812012
    3. '1' → logprob: -13.625018119812012
    4. ']' → logprob: -15.375018119812012
    5. '[' → logprob: -16.500019073486328
    6. '-' → logprob: -17.125019073486328
    7. ')' → logprob: -17.750019073486328
    8. '2' → logprob: -18.562519073486328
    9. '   ' → logprob: -18.875019073486328
    10. '=' → logprob: -19.437519073486328

Token 106: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016754455282352865
    2. ' ]' → logprob: -9.125167846679688
    3. ']=' → logprob: -9.750167846679688
    4. '=' → logprob: -15.500167846679688
    5. ']
' → logprob: -18.125167846679688
    6. ' =' → logprob: -18.750167846679688
    7. ')' → logprob: -19.000167846679688
    8. '],' → logprob: -19.250167846679688
    9. '[' → logprob: -19.375167846679688
    10. ' ' → logprob: -19.500167846679688

Token 107: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14268475770950317
    2. ' =' → logprob: -2.0176846981048584
    3. '=
' → logprob: -13.017684936523438
    4. ' =
' → logprob: -13.392684936523438
    5. '=

' → logprob: -13.642684936523438
    6. ']' → logprob: -13.767684936523438
    7. ',' → logprob: -13.767684936523438
    8. ' ' → logprob: -14.267684936523438
    9. ')' → logprob: -14.767684936523438
    10. '<|end|>' → logprob: -15.267684936523438

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00048501143464818597
    2. '0' → logprob: -7.750484943389893
    3. ' ' → logprob: -9.87548542022705
    4. 'dp' → logprob: -12.87548542022705
    5. '2' → logprob: -17.187984466552734
    6. ' dp' → logprob: -17.312984466552734
    7. '   ' → logprob: -17.375484466552734
    8. '(dp' → logprob: -18.000484466552734
    9. '(' → logprob: -18.250484466552734
    10. '۱' → logprob: -18.500484466552734

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016337241686414927
    2. '0' → logprob: -8.750163078308105
    3. ' ' → logprob: -12.625163078308105
    4. 'dp' → logprob: -13.375163078308105
    5. '2' → logprob: -17.875164031982422
    6. '[' → logprob: -18.187664031982422
    7. ' dp' → logprob: -18.625164031982422
    8. '   ' → logprob: -18.937664031982422
    9. '```' → logprob: -18.937664031982422
    10. '(dp' → logprob: -19.125164031982422

Token 110: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05030286684632301
    2. '
' → logprob: -3.1753029823303223
    3. ' dp' → logprob: -5.050302982330322
    4. '(dp' → logprob: -7.925302982330322
    5. ' 
' → logprob: -8.550302505493164
    6. '<|end|>' → logprob: -9.050302505493164
    7. '	dp' → logprob: -9.175302505493164
    8. '
' → logprob: -10.425302505493164
    9. '_dp' → logprob: -10.550302505493164
    10. ' ' → logprob: -11.425302505493164

Token 111: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005109758349135518
    2. ' dp' → logprob: -8.250511169433594
    3. '
' → logprob: -8.375511169433594
    4. '(dp' → logprob: -11.250511169433594
    5. '0' → logprob: -13.000511169433594
    6. '	dp' → logprob: -13.375511169433594
    7. '_dp' → logprob: -13.875511169433594
    8. '```' → logprob: -14.625511169433594
    9. ' 
' → logprob: -14.875511169433594
    10. '[' → logprob: -16.000511169433594

Token 112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.953082341467962e-05
    2. '<|end|>' → logprob: -10.875039100646973
    3. ' [' → logprob: -12.250039100646973
    4. '[
' → logprob: -12.375039100646973
    5. ' =' → logprob: -13.000039100646973
    6. '.' → logprob: -13.250039100646973
    7. '<|end|>' → logprob: -13.625039100646973
    8. 'dp' → logprob: -13.750039100646973
    9. '=' → logprob: -14.250039100646973
    10. ' ' → logprob: -14.250039100646973

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '0' → logprob: -15.250000953674316
    4. '   ' → logprob: -18.125001907348633
    5. ']' → logprob: -18.875001907348633
    6. '-' → logprob: -19.250001907348633
    7. '```' → logprob: -19.250001907348633
    8. '۱' → logprob: -19.812501907348633
    9. '１' → logprob: -19.937501907348633
    10. '
' → logprob: -19.937501907348633

Token 114: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.5941604690160602e-05
    2. ' ]' → logprob: -10.625025749206543
    3. ']=' → logprob: -13.750025749206543
    4. '=' → logprob: -15.125025749206543
    5. ' =' → logprob: -15.500025749206543
    6. ')' → logprob: -16.25002670288086
    7. '']' → logprob: -17.62502670288086
    8. ' ' → logprob: -18.75002670288086
    9. ']
' → logprob: -19.12502670288086
    10. '}' → logprob: -19.25002670288086

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197284162044525
    2. '=' → logprob: -2.8119728565216064
    3. ' ' → logprob: -12.186972618103027
    4. ')' → logprob: -18.436973571777344
    5. ' ' → logprob: -18.436973571777344
    6. ' =)' → logprob: -18.686973571777344
    7. ']' → logprob: -18.811973571777344
    8. ' =
' → logprob: -19.186973571777344
    9. '＝' → logprob: -19.311973571777344
    10. ' ='' → logprob: -19.936973571777344

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -17.75010871887207
    4. '0' → logprob: -18.87510871887207
    5. '```' → logprob: -19.56260871887207
    6. '2' → logprob: -19.62510871887207
    7. '  ' → logprob: -19.87510871887207
    8. '１' → logprob: -20.00010871887207
    9. '۱' → logprob: -20.37510871887207
    10. '' → logprob: -21.25010871887207

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -18.750001907348633
    4. '2' → logprob: -19.312501907348633
    5. '0' → logprob: -19.312501907348633
    6. '۱' → logprob: -19.812501907348633
    7. '１' → logprob: -20.062501907348633
    8. '   ' → logprob: -20.437501907348633
    9. '১' → logprob: -21.062501907348633
    10. '`' → logprob: -21.125001907348633

Token 118: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0041191233322024345
    2. ' for' → logprob: -5.504118919372559
    3. 'i' → logprob: -10.129118919372559
    4. '```' → logprob: -14.879118919372559
    5. '
' → logprob: -15.629118919372559
    6. '	for' → logprob: -17.004119873046875
    7. ' i' → logprob: -17.129119873046875
    8. '2' → logprob: -17.254119873046875
    9. 'def' → logprob: -17.254119873046875
    10. '   ' → logprob: -17.504119873046875

Token 119: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.375
    3. 'i' → logprob: -18.5
    4. 'if' → logprob: -22.625
    5. '	for' → logprob: -22.875
    6. '```' → logprob: -23.0
    7. '2' → logprob: -23.125
    8. 'For' → logprob: -24.375
    9. '1' → logprob: -24.625
    10. 'from' → logprob: -24.875

Token 120: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.061969365924596786
    2. 'i' → logprob: -2.81196928024292
    3. ' ' → logprob: -13.561969757080078
    4. '	i' → logprob: -15.061969757080078
    5. '   ' → logprob: -17.061969757080078
    6. ' ' → logprob: -17.686969757080078
    7. ' _' → logprob: -17.936969757080078
    8. '(i' → logprob: -18.811969757080078
    9. '_i' → logprob: -18.811969757080078
    10. '  ' → logprob: -19.061969757080078

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011309880763292313
    2. 'in' → logprob: -4.51131010055542
    3. ' ' → logprob: -8.261309623718262
    4. ' i' → logprob: -13.511309623718262
    5. '	in' → logprob: -13.511309623718262
    6. '  ' → logprob: -15.761309623718262
    7. '1' → logprob: -16.011310577392578
    8. '=' → logprob: -16.136310577392578
    9. ' =' → logprob: -16.511310577392578
    10. ' range' → logprob: -16.511310577392578

Token 122: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038042064756155014
    2. ' range' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.413042068481445
    4. '(range' → logprob: -15.413042068481445
    5. '	range' → logprob: -15.913042068481445
    6. '2' → logprob: -17.413042068481445
    7. '   ' → logprob: -17.913042068481445
    8. '  ' → logprob: -19.163042068481445
    9. 'rang' → logprob: -20.538042068481445
    10. 'r' → logprob: -20.663042068481445

Token 123: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.9153885558771435e-06
    2. '2' → logprob: -12.375005722045898
    3. ' (' → logprob: -13.375005722045898
    4. ' ' → logprob: -16.0000057220459
    5. '(
' → logprob: -17.8750057220459
    6. '	' → logprob: -21.2500057220459
    7. '```' → logprob: -21.3750057220459
    8. '3' → logprob: -22.2500057220459
    9. '()' → logprob: -22.2500057220459
    10. '1' → logprob: -23.3750057220459

Token 124: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -16.250179290771484
    4. '  ' → logprob: -17.625179290771484
    5. '２' → logprob: -17.875179290771484
    6. '
' → logprob: -17.875179290771484
    7. '    ' → logprob: -18.187679290771484
    8. '

' → logprob: -18.375179290771484
    9. 'n' → logprob: -18.500179290771484
    10. '۲' → logprob: -18.687679290771484

Token 125: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003814330091699958
    2. ' ,' → logprob: -5.753814220428467
    3. ',n' → logprob: -7.378814220428467
    4. ' n' → logprob: -11.753814697265625
    5. 'n' → logprob: -13.128814697265625
    6. '(n' → logprob: -14.003814697265625
    7. ' ' → logprob: -14.128814697265625
    8. ',
' → logprob: -15.128814697265625
    9. '，' → logprob: -16.628814697265625
    10. '   ' → logprob: -16.628814697265625

Token 126: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011148543562740088
    2. ' +' → logprob: -7.251114845275879
    3. '):' → logprob: -8.251114845275879
    4. '):
' → logprob: -8.876114845275879
    5. '+
' → logprob: -12.751114845275879
    6. ')' → logprob: -14.626114845275879
    7. '+:' → logprob: -15.001114845275879
    8. ')+' → logprob: -15.501114845275879
    9. ' ):' → logprob: -16.751115798950195
    10. ':' → logprob: -17.126115798950195

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. ')' → logprob: -16.875045776367188
    4. '   ' → logprob: -17.000045776367188
    5. '):
' → logprob: -17.375045776367188
    6. '):' → logprob: -18.500045776367188
    7. '```' → logprob: -18.500045776367188
    8. '  ' → logprob: -18.625045776367188
    9. '
' → logprob: -20.125045776367188
    10. '2' → logprob: -20.125045776367188

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01210694294422865
    2. ':' → logprob: -4.512106895446777
    3. '):
' → logprob: -7.387106895446777
    4. ')' → logprob: -7.762106895446777
    5. ' ):' → logprob: -11.637106895446777
    6. ':
' → logprob: -13.262106895446777
    7. '   ' → logprob: -13.762106895446777
    8. ']:' → logprob: -14.637106895446777
    9. ':)' → logprob: -14.637106895446777
    10. '):
' → logprob: -14.887106895446777

Token 129: '   ' (ID: 271)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.18278227746486664
    2. '   ' → logprob: -1.9327822923660278
    3. 'dp' → logprob: -3.8077821731567383
    4. '	dp' → logprob: -9.182782173156738
    5. '(dp' → logprob: -12.807782173156738
    6. ' ' → logprob: -14.057782173156738
    7. '    
' → logprob: -14.432782173156738
    8. '_dp' → logprob: -14.682782173156738
    9. '    ' → logprob: -14.932782173156738
    10. '   ' → logprob: -16.057783126831055

Token 130: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.029756393283605576
    2. ' dp' → logprob: -3.5297563076019287
    3. '   ' → logprob: -12.404756546020508
    4. '	dp' → logprob: -13.279756546020508
    5. '_dp' → logprob: -17.529756546020508
    6. '(dp' → logprob: -17.779756546020508
    7. ' ' → logprob: -17.779756546020508
    8. '.dp' → logprob: -18.279756546020508
    9. 'd' → logprob: -19.279756546020508
    10. '       ' → logprob: -19.279756546020508

Token 131: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000488811288960278
    2. '[' → logprob: -7.625488758087158
    3. '```' → logprob: -15.250489234924316
    4. ' [' → logprob: -16.12548828125
    5. '[n' → logprob: -16.12548828125
    6. '\[' → logprob: -16.25048828125
    7. '[I' → logprob: -16.37548828125
    8. '[in' → logprob: -18.25048828125
    9. '[ip' → logprob: -18.25048828125
    10. '[data' → logprob: -18.37548828125

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002754949266090989
    2. ' ]' → logprob: -6.127755165100098
    3. '=' → logprob: -8.002755165100098
    4. ']=' → logprob: -8.377755165100098
    5. ' =' → logprob: -12.252755165100098
    6. ')' → logprob: -14.752755165100098
    7. ' ' → logprob: -16.50275421142578
    8. '[' → logprob: -17.37775421142578
    9. '   ' → logprob: -18.25275421142578
    10. ']
' → logprob: -18.50275421142578

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. 'dp' → logprob: -18.251928329467773
    4. '.=' → logprob: -18.626928329467773
    5. ' =)' → logprob: -18.876928329467773
    6. ')' → logprob: -19.001928329467773
    7. '=

' → logprob: -19.001928329467773
    8. '=
' → logprob: -19.126928329467773
    9. '=}' → logprob: -19.126928329467773
    10. '＝' → logprob: -19.251928329467773

Token 134: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02975129522383213
    2. ' dp' → logprob: -3.5297513008117676
    3. '	dp' → logprob: -14.77975082397461
    4. '(dp' → logprob: -15.02975082397461
    5. '   ' → logprob: -16.40475082397461
    6. ' ' → logprob: -19.02975082397461
    7. 'df' → logprob: -19.40475082397461
    8. 'd' → logprob: -19.52975082397461
    9. '_dp' → logprob: -19.65475082397461
    10. ' ' → logprob: -20.65475082397461

Token 135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. 'i' → logprob: -17.25
    3. '```' → logprob: -19.875
    4. '[I' → logprob: -21.375
    5. '(i' → logprob: -21.75
    6. '[-' → logprob: -21.75
    7. '[' → logprob: -21.875
    8. '[j' → logprob: -22.125
    9. ' [' → logprob: -22.75
    10. '[n' → logprob: -22.75

Token 136: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00015860427811276168
    2. ' -' → logprob: -8.750158309936523
    3. ']' → logprob: -16.625158309936523
    4. '-
' → logprob: -18.250158309936523
    5. '1' → logprob: -18.375158309936523
    6. ']-' → logprob: -18.750158309936523
    7. '-i' → logprob: -19.000158309936523
    8. '[i' → logprob: -19.500158309936523
    9. '−' → logprob: -20.125158309936523
    10. '```' → logprob: -20.875158309936523

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.966313281329349e-05
    2. '2' → logprob: -10.000049591064453
    3. ' ' → logprob: -13.250049591064453
    4. '
' → logprob: -14.500049591064453
    5. '   ' → logprob: -14.625049591064453
    6. '```' → logprob: -14.625049591064453
    7. ']' → logprob: -15.000049591064453
    8. '-' → logprob: -16.000049591064453
    9. '

' → logprob: -16.312549591064453
    10. '  ' → logprob: -17.062549591064453

Token 138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24421356618404388
    2. '+' → logprob: -1.994213581085205
    3. ' +' → logprob: -2.869213581085205
    4. ']+' → logprob: -3.744213581085205
    5. ' ]' → logprob: -9.369213104248047
    6. ')' → logprob: -9.619213104248047
    7. ')+' → logprob: -12.244213104248047
    8. '}' → logprob: -13.494213104248047
    9. '+]' → logprob: -13.619213104248047
    10. ' ' → logprob: -14.494213104248047

Token 139: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132624924182892
    2. ' +' → logprob: -1.3132624626159668
    3. ' ' → logprob: -14.688262939453125
    4. '+
' → logprob: -15.813262939453125
    5. ' ' → logprob: -16.313262939453125
    6. ' plus' → logprob: -17.063262939453125
    7. ' +
' → logprob: -17.188262939453125
    8. '＋' → logprob: -17.313262939453125
    9. '   ' → logprob: -18.813262939453125
    10. '  ' → logprob: -19.063262939453125

Token 140: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4740773141384125
    2. ' dp' → logprob: -0.9740773439407349
    3. '	dp' → logprob: -15.724077224731445
    4. '(dp' → logprob: -16.474077224731445
    5. '_dp' → logprob: -17.349077224731445
    6. ' ' → logprob: -17.849077224731445
    7. ' ' → logprob: -19.224077224731445
    8. '.dp' → logprob: -19.849077224731445
    9. '   ' → logprob: -20.349077224731445
    10. '  ' → logprob: -21.224077224731445

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.5
    3. '[' → logprob: -17.875
    4. '[I' → logprob: -18.125
    5. '[-' → logprob: -20.375
    6. '2' → logprob: -20.625
    7. '-' → logprob: -20.625
    8. '[j' → logprob: -20.75
    9. ' [' → logprob: -21.0
    10. '{i' → logprob: -21.125

Token 142: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004882152716163546
    2. '2' → logprob: -7.62548828125
    3. ' -' → logprob: -16.00048828125
    4. ']' → logprob: -16.50048828125
    5. '[' → logprob: -17.75048828125
    6. '```' → logprob: -18.12548828125
    7. ']-' → logprob: -18.50048828125
    8. ' ' → logprob: -18.75048828125
    9. '[-' → logprob: -19.37548828125
    10. '−' → logprob: -19.37548828125

Token 143: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -18.4375
    4. '1' → logprob: -18.5625
    5. '۲' → logprob: -18.75
    6. ']' → logprob: -18.8125
    7. ')' → logprob: -19.1875
    8. '२' → logprob: -19.3125
    9. '   ' → logprob: -19.5
    10. '-' → logprob: -19.5625

Token 144: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. ']' → logprob: -12.37501049041748
    3. '}' → logprob: -13.37501049041748
    4. ')
' → logprob: -13.37501049041748
    5. '<|end|>' → logprob: -13.37501049041748
    6. '   ' → logprob: -14.12501049041748
    7. ' )' → logprob: -15.25001049041748
    8. '```' → logprob: -15.62501049041748
    9. '),' → logprob: -17.250009536743164
    10. '')' → logprob: -17.375009536743164

Token 145: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1888679839321412e-05
    2. ' print' → logprob: -11.375021934509277
    3. '
' → logprob: -11.500021934509277
    4. '```' → logprob: -15.875021934509277
    5. '  
' → logprob: -17.25002098083496
    6. ' 
' → logprob: -17.50002098083496
    7. '    
' → logprob: -18.75002098083496
    8. '\n' → logprob: -18.75002098083496
    9. '
' → logprob: -18.75002098083496
    10. '#print' → logprob: -19.37502098083496

Token 146: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.20141440629959106
    2. '(' → logprob: -1.7014143466949463
    3. '(df' → logprob: -14.951414108276367
    4. '(
' → logprob: -15.076414108276367
    5. '(n' → logprob: -16.576414108276367
    6. '()' → logprob: -16.826414108276367
    7. '(

' → logprob: -16.951414108276367
    8. '((' → logprob: -17.326414108276367
    9. '(fp' → logprob: -17.451414108276367
    10. '(len' → logprob: -17.451414108276367

Token 147: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.319370302458992e-06
    2. '[i' → logprob: -12.375005722045898
    3. '[' → logprob: -14.000005722045898
    4. ')' → logprob: -15.750005722045898
    5. ')n' → logprob: -17.1250057220459
    6. '[-' → logprob: -18.0000057220459
    7. 'n' → logprob: -18.3750057220459
    8. ']' → logprob: -19.3750057220459
    9. ' [' → logprob: -19.8750057220459
    10. '(n' → logprob: -20.0000057220459

Token 148: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003186863148584962
    2. '])' → logprob: -5.7531867027282715
    3. '))' → logprob: -12.12818717956543
    4. '})' → logprob: -13.25318717956543
    5. ']' → logprob: -13.62818717956543
    6. ' )' → logprob: -15.25318717956543
    7. '）' → logprob: -15.62818717956543
    8. ')])' → logprob: -16.00318717956543
    9. ')]' → logprob: -16.25318717956543
    10. ')
' → logprob: -16.87818717956543


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 146
Tokens correctement prédits (1ère position, stricte): 64
Tokens correctement prédits (1ère position, avec adaptation): 68
Tokens correctement prédits (top 10): 115
Précision stricte (1ère position): 43.84%
Précision adaptée (1ère position): 46.58%
Précision (top 10): 78.77%
================================================================================
