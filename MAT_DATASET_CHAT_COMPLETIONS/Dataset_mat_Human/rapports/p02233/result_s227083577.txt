================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
if n==0 or n==1:
    print(1)
else:
    fib=[0]*(n+1)
    fib[0]=1
    fib[1]=1
    for i in range(2,n+1):
        fib[i]=fib[i-1]+fib[i-2]
    print(fib[n])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.295667439699173
    2. '(' → logprob: -1.4206674098968506
    3. '())' → logprob: -5.29566764831543
    4. '()' → logprob: -5.42066764831543
    5. '```' → logprob: -6.17066764831543
    6. '<|end|>' → logprob: -7.29566764831543
    7. '(
' → logprob: -7.67066764831543
    8. '")' → logprob: -7.92066764831543
    9. '`)' → logprob: -8.54566764831543
    10. '')' → logprob: -8.67066764831543

Token 4: 'if' (ID: 366)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.5210232734680176
    2. '+' → logprob: -1.5210232734680176
    3. '#' → logprob: -2.0210232734680176
    4. ')' → logprob: -2.1460232734680176
    5. ' ' → logprob: -2.3960232734680176
    6. ''' → logprob: -2.7710232734680176
    7. 'i' → logprob: -3.0210232734680176
    8. 's' → logprob: -3.8960232734680176
    9. 'a' → logprob: -4.521023273468018
    10. '\n' → logprob: -4.521023273468018

Token 5: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.253608375787735
    2. ' n' → logprob: -1.5036083459854126
    3. 'n' → logprob: -6.503608226776123
    4. '  ' → logprob: -8.878608703613281
    5. ' (' → logprob: -11.253608703613281
    6. ' )' → logprob: -11.878608703613281
    7. '(n' → logprob: -12.628608703613281
    8. ' ' → logprob: -12.753608703613281
    9. ' not' → logprob: -13.253608703613281
    10. ' a' → logprob: -13.378608703613281

Token 6: '==' (ID: 560)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.13643011450767517
    2. ' ' → logprob: -2.886430025100708
    3. '>' → logprob: -3.136430025100708
    4. ' <' → logprob: -4.136430263519287
    5. ' %' → logprob: -5.386430263519287
    6. ' >=' → logprob: -6.011430263519287
    7. ' ==' → logprob: -6.636430263519287
    8. '%' → logprob: -6.636430263519287
    9. '<' → logprob: -6.636430263519287
    10. ')' → logprob: -8.136429786682129

Token 7: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2591264247894287
    2. ' ' → logprob: -1.7591264247894287
    3. '1' → logprob: -2.8841264247894287
    4. '2' → logprob: -9.134126663208008
    5. '3' → logprob: -11.009126663208008
    6. ''' → logprob: -11.009126663208008
    7. '4' → logprob: -11.259126663208008
    8. '5' → logprob: -11.884126663208008
    9. '"' → logprob: -12.509126663208008
    10. '10' → logprob: -13.009126663208008

Token 8: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -7.226628895296017e-06
    2. ' :' → logprob: -12.625007629394531
    3. '':'' → logprob: -13.875007629394531
    4. ':**' → logprob: -14.125007629394531
    5. '':' → logprob: -14.375007629394531
    6. ':
' → logprob: -14.375007629394531
    7. ':return' → logprob: -14.375007629394531
    8. '":"' → logprob: -16.12500762939453
    9. '>:' → logprob: -17.00000762939453
    10. '):' → logprob: -17.12500762939453

Token 9: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02055053412914276
    2. 'n' → logprob: -3.895550489425659
    3. ' not' → logprob: -12.770550727844238
    4. ' ' → logprob: -13.145550727844238
    5. '1' → logprob: -13.395550727844238
    6. ' ' → logprob: -13.645550727844238
    7. '```' → logprob: -15.270550727844238
    8. '	n' → logprob: -15.520550727844238
    9. 'not' → logprob: -15.770550727844238
    10. '   ' → logprob: -16.645549774169922

Token 10: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.2296844720840454
    2. ' <' → logprob: -1.3546844720840454
    3. '==' → logprob: -2.104684352874756
    4. '<' → logprob: -2.104684352874756
    5. ' >' → logprob: -2.854684352874756
    6. ' <=' → logprob: -2.979684352874756
    7. '>' → logprob: -3.479684352874756
    8. ' ' → logprob: -3.604684352874756
    9. '<=' → logprob: -4.104684352874756
    10. '%' → logprob: -5.479684352874756

Token 11: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22543878853321075
    2. ' ' → logprob: -1.6004388332366943
    3. '2' → logprob: -12.475439071655273
    4. '-' → logprob: -12.600439071655273
    5. '10' → logprob: -12.725439071655273
    6. '0' → logprob: -12.975439071655273
    7. ' n' → logprob: -13.412939071655273
    8. '100' → logprob: -13.537939071655273
    9. ' ' → logprob: -13.537939071655273
    10. '   ' → logprob: -13.662939071655273

Token 12: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.133198283147067e-05
    2. ' :' → logprob: -10.250051498413086
    3. ':
' → logprob: -11.625051498413086
    4. ':return' → logprob: -12.250051498413086
    5. ':**' → logprob: -13.750051498413086
    6. '):' → logprob: -14.375051498413086
    7. '':' → logprob: -15.625051498413086
    8. '():' → logprob: -16.125051498413086
    9. '>:' → logprob: -16.875051498413086
    10. '':'' → logprob: -16.875051498413086

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5516253709793091
    2. '\n' → logprob: -2.1766252517700195
    3. ' ' → logprob: -2.5516252517700195
    4. ':' → logprob: -3.1766252517700195
    5. ' 
' → logprob: -3.3016252517700195
    6. ' print' → logprob: -3.3016252517700195
    7. '\' → logprob: -3.4266252517700195
    8. ' return' → logprob: -3.5516252517700195
    9. '    ' → logprob: -3.9266252517700195
    10. '    
' → logprob: -4.6766252517700195

Token 14: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3285656273365021
    2. '    ' → logprob: -2.2035655975341797
    3. ' return' → logprob: -2.5785655975341797
    4. '   ' → logprob: -2.8285655975341797
    5. ' ' → logprob: -4.32856559753418
    6. ' pass' → logprob: -4.45356559753418
    7. 'print' (adapté à ' print') → logprob: -5.32856559753418
    8. ' 
' → logprob: -6.45356559753418
    9. 'return' → logprob: -7.45356559753418
    10. '    
' → logprob: -7.70356559753418

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002343184780329466
    2. '()' → logprob: -6.12734317779541
    3. '('' → logprob: -9.87734317779541
    4. '(n' → logprob: -9.87734317779541
    5. '("' → logprob: -10.87734317779541
    6. '(False' → logprob: -11.50234317779541
    7. '("")' → logprob: -11.50234317779541
    8. '(True' → logprob: -12.25234317779541
    9. '(None' → logprob: -12.87734317779541
    10. '("("' → logprob: -13.25234317779541

Token 16: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6286378502845764
    2. '"' → logprob: -1.5036377906799316
    3. '0' → logprob: -1.8786377906799316
    4. '1' → logprob: -2.5036377906799316
    5. ''' → logprob: -5.253637790679932
    6. ' n' → logprob: -6.003637790679932
    7. ''n' → logprob: -7.253637790679932
    8. ' ' → logprob: -7.378637790679932
    9. ')' → logprob: -8.37863826751709
    10. '")' → logprob: -8.50363826751709

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.500001907348633
    3. '()' → logprob: -14.750001907348633
    4. '')' → logprob: -15.500001907348633
    5. '`)' → logprob: -16.125001907348633
    6. '())' → logprob: -17.000001907348633
    7. '")' → logprob: -17.375001907348633
    8. ' )' → logprob: -17.375001907348633
    9. '))' → logprob: -17.625001907348633
    10. '```' → logprob: -17.625001907348633

Token 18: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0023548337630927563
    2. 'elif' → logprob: -6.752354621887207
    3. ' else' → logprob: -7.252354621887207
    4. '```' → logprob: -7.752354621887207
    5. '_else' → logprob: -11.377354621887207
    6. ')' → logprob: -11.627354621887207
    7. 'n' → logprob: -12.127354621887207
    8. '#else' → logprob: -12.877354621887207
    9. '    
' → logprob: -13.002354621887207
    10. '\n' → logprob: -13.127354621887207

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.531315314830863e-06
    2. ':
' → logprob: -13.250003814697266
    3. ' :' → logprob: -13.625003814697266
    4. '   ' → logprob: -15.750003814697266
    5. ':**' → logprob: -16.000003814697266
    6. ':def' → logprob: -17.000003814697266
    7. '':' → logprob: -17.250003814697266
    8. ':return' → logprob: -17.375003814697266
    9. '):' → logprob: -17.500003814697266
    10. '```' → logprob: -18.000003814697266

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007382051553577185
    2. '    ' → logprob: -5.882381916046143
    3. '    
' → logprob: -6.382381916046143
    4. ':' → logprob: -7.632381916046143
    5. '\n' → logprob: -7.757381916046143
    6. ' n' → logprob: -7.757381916046143
    7. '\' → logprob: -8.2573823928833
    8. 'n' → logprob: -8.3823823928833
    9. ' ' → logprob: -8.3823823928833
    10. '```' → logprob: -8.3823823928833

Token 21: ' fib' (ID: 18795)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03989681974053383
    2. ' factorial' → logprob: -4.4148969650268555
    3. ' print' → logprob: -5.1648969650268555
    4. ' fact' → logprob: -5.4148969650268555
    5. '    ' → logprob: -5.4148969650268555
    6. ' result' → logprob: -6.1648969650268555
    7. 'fact' → logprob: -6.1648969650268555
    8. ' f' → logprob: -6.5398969650268555
    9. 'print' → logprob: -6.6648969650268555
    10. ' for' → logprob: -6.7898969650268555

Token 22: '=[' (ID: 13370)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5546410083770752
    2. 'o' → logprob: -1.4296410083770752
    3. '(n' → logprob: -1.8046410083770752
    4. '[' → logprob: -4.429640769958496
    5. 'onacci' → logprob: -5.179640769958496
    6. '[n' → logprob: -6.429640769958496
    7. 'onn' → logprob: -7.429640769958496
    8. '[(' → logprob: -7.554640769958496
    9. '[]' → logprob: -8.304640769958496
    10. '[i' → logprob: -8.304640769958496

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036045825108885765
    2. '1' → logprob: -5.628604412078857
    3. ' ' → logprob: -12.378604888916016
    4. '   ' → logprob: -15.753604888916016
    5. '```' → logprob: -16.628604888916016
    6. '2' → logprob: -17.753604888916016
    7. '[' → logprob: -17.753604888916016
    8. '-' → logprob: -18.003604888916016
    9. '  ' → logprob: -18.128604888916016
    10. '    ' → logprob: -18.628604888916016

Token 24: ']*(' (ID: 92627)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020926215802319348
    2. ' ,' → logprob: -8.500208854675293
    3. '1' → logprob: -12.750208854675293
    4. ',
' → logprob: -13.500208854675293
    5. '0' → logprob: -14.500208854675293
    6. '2' → logprob: -14.875208854675293
    7. ' ' → logprob: -15.750208854675293
    8. ',n' → logprob: -15.875208854675293
    9. '，' → logprob: -16.37520980834961
    10. ',

' → logprob: -16.50020980834961

Token 25: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.619311974034645e-05
    2. ' n' → logprob: -10.250036239624023
    3. ')n' → logprob: -14.500036239624023
    4. '(n' → logprob: -15.375036239624023
    5. '	n' → logprob: -17.000036239624023
    6. '   ' → logprob: -17.000036239624023
    7. ')' → logprob: -18.500036239624023
    8. ' ' → logprob: -18.625036239624023
    9. '  ' → logprob: -18.750036239624023
    10. '2' → logprob: -18.875036239624023

Token 26: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004242395516484976
    2. '-' → logprob: -8.6254243850708
    3. ')' → logprob: -8.7504243850708
    4. '+)' → logprob: -10.0004243850708
    5. ' +' → logprob: -10.3754243850708
    6. ' )' → logprob: -12.2504243850708
    7. ')+' → logprob: -12.6254243850708
    8. '+
' → logprob: -14.5004243850708
    9. '1' → logprob: -14.8754243850708
    10. '2' → logprob: -16.000423431396484

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003144896763842553
    2. ' ' → logprob: -8.500314712524414
    3. '2' → logprob: -9.125314712524414
    4. '   ' → logprob: -14.125314712524414
    5. '  ' → logprob: -14.875314712524414
    6. '-' → logprob: -15.250314712524414
    7. ')' → logprob: -15.500314712524414
    8. '3' → logprob: -16.000314712524414
    9. '```' → logprob: -16.750314712524414
    10. '0' → logprob: -16.875314712524414

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004933410091325641
    2. ')
' → logprob: -7.62549352645874
    3. ')

' → logprob: -13.375493049621582
    4. ' )' → logprob: -13.625493049621582
    5. '<|end|>' → logprob: -14.250493049621582
    6. ')
' → logprob: -15.000493049621582
    7. '),' → logprob: -15.375493049621582
    8. '```' → logprob: -15.500493049621582
    9. '   ' → logprob: -15.750493049621582
    10. ']' → logprob: -15.875493049621582

Token 29: '   ' (ID: 271)
  Prédit: 'fib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fib' → logprob: -0.342072457075119
    2. ' fib' → logprob: -2.0920724868774414
    3. '   ' → logprob: -2.3420724868774414
    4. '\n' → logprob: -3.3420724868774414
    5. ' ' → logprob: -4.342072486877441
    6. '<|end|>' → logprob: -4.967072486877441
    7. ' 
' → logprob: -5.717072486877441
    8. '[' → logprob: -6.467072486877441
    9. '
' → logprob: -6.467072486877441
    10. '```' → logprob: -6.592072486877441

Token 30: ' fib' (ID: 18795)
  Prédit: 'fib'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fib' (adapté à ' fib') → logprob: -0.0001422770437784493
    2. ' fib' → logprob: -8.875142097473145
    3. '   ' → logprob: -13.125142097473145
    4. ' ' → logprob: -16.12514305114746
    5. '```' → logprob: -16.12514305114746
    6. '[' → logprob: -16.25014305114746
    7. 'f' → logprob: -17.12514305114746
    8. '0' → logprob: -17.62514305114746
    9. '1' → logprob: -17.87514305114746
    10. 'for' → logprob: -18.12514305114746

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0325924449716695e-05
    2. '\[' → logprob: -12.50001049041748
    3. ' [' → logprob: -13.50001049041748
    4. '[:]' → logprob: -13.62501049041748
    5. '[]' → logprob: -14.00001049041748
    6. '```' → logprob: -14.12501049041748
    7. '[i' → logprob: -14.62501049041748
    8. '   ' → logprob: -15.12501049041748
    9. ']' → logprob: -15.25001049041748
    10. '=[' → logprob: -15.62501049041748

Token 32: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17986243963241577
    2. '0' → logprob: -1.8048624992370605
    3. '2' → logprob: -9.179862022399902
    4. ' ' → logprob: -11.429862022399902
    5. ']' → logprob: -13.679862022399902
    6. '-' → logprob: -13.679862022399902
    7. ')' → logprob: -14.679862022399902
    8. '   ' → logprob: -14.929862022399902
    9. '  ' → logprob: -15.992362022399902
    10. ' ]' → logprob: -16.67986297607422

Token 33: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5009596347808838
    2. ']=' → logprob: -1.0009596347808838
    3. ' ]' → logprob: -3.750959634780884
    4. '=' → logprob: -5.875959396362305
    5. ')=' → logprob: -9.500959396362305
    6. ')' → logprob: -9.625959396362305
    7. ' =' → logprob: -9.750959396362305
    8. ']+=' → logprob: -12.375959396362305
    9. ' )' → logprob: -12.500959396362305
    10. ']='' → logprob: -12.625959396362305

Token 34: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.41866585687967e-06
    2. '1' → logprob: -11.750008583068848
    3. ' ' → logprob: -14.500008583068848
    4. '۰' → logprob: -17.37500762939453
    5. 'fib' → logprob: -18.12500762939453
    6. '01' → logprob: -18.37500762939453
    7. '   ' → logprob: -19.56250762939453
    8. '০' → logprob: -20.06250762939453
    9. '०' → logprob: -20.12500762939453
    10. 'f' → logprob: -20.37500762939453

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' fib' (ID: 18795)
  Prédit: 'fib'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fib' (adapté à ' fib') → logprob: -4.620622712536715e-05
    2. ' fib' → logprob: -10.000045776367188
    3. '1' → logprob: -14.500045776367188
    4. 'f' → logprob: -16.250045776367188
    5. 'Fib' → logprob: -17.000045776367188
    6. 'fiber' → logprob: -17.125045776367188
    7. '<|end|>' → logprob: -17.500045776367188
    8. ' ' → logprob: -17.625045776367188
    9. '   ' → logprob: -18.125045776367188
    10. '```' → logprob: -18.125045776367188

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '1' → logprob: -16.75
    3. ' [' → logprob: -17.0
    4. '\[' → logprob: -17.875
    5. '[
' → logprob: -18.875
    6. '```' → logprob: -19.0
    7. '	' → logprob: -19.75
    8. '   ' → logprob: -20.125
    9. '<|end|>' → logprob: -20.5
    10. '[i' → logprob: -20.875

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '0' → logprob: -16.000003814697266
    4. '-' → logprob: -17.875003814697266
    5. '   ' → logprob: -18.875003814697266
    6. '2' → logprob: -19.000003814697266
    7. '  ' → logprob: -19.375003814697266
    8. '```' → logprob: -20.375003814697266
    9. '१' → logprob: -20.812503814697266
    10. '' → logprob: -20.937503814697266

Token 40: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.26968419551849365
    2. '=' → logprob: -2.019684314727783
    3. ']' → logprob: -2.269684314727783
    4. ' ]' → logprob: -8.894683837890625
    5. ')=' → logprob: -9.144683837890625
    6. ' =' → logprob: -9.519683837890625
    7. ')' → logprob: -11.769683837890625
    8. '']=' → logprob: -11.894683837890625
    9. '}=' → logprob: -13.394683837890625
    10. '"]=' → logprob: -13.769683837890625

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '2' → logprob: -16.375001907348633
    4. '۱' → logprob: -18.437501907348633
    5. '0' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.750001907348633
    7. '१' → logprob: -18.937501907348633
    8. '' → logprob: -18.937501907348633
    9. '১' → logprob: -19.000001907348633
    10. '１' → logprob: -19.375001907348633

Token 42: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.386981725692749
    2. '\n' → logprob: -1.886981725692749
    3. '   ' → logprob: -2.136981725692749
    4. '    
' → logprob: -3.261981725692749
    5. '```' → logprob: -5.761981964111328
    6. ' 
' → logprob: -5.886981964111328
    7. '  
' → logprob: -6.136981964111328
    8. '\' → logprob: -6.511981964111328
    9. '   
' → logprob: -6.511981964111328
    10. 'for' → logprob: -7.386981964111328

Token 43: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24686023592948914
    2. '\n' → logprob: -2.6218602657318115
    3. '   ' → logprob: -2.7468602657318115
    4. '    
' → logprob: -2.8718602657318115
    5. ' 
' → logprob: -4.371860027313232
    6. '  
' → logprob: -4.996860027313232
    7. '   
' → logprob: -6.246860027313232
    8. '```' → logprob: -6.371860027313232
    9. '\' → logprob: -7.496860027313232
    10. 'for' → logprob: -7.746860027313232

Token 44: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6012551784515381
    2. 'for' (adapté à ' for') → logprob: -1.226255178451538
    3. ' for' → logprob: -2.726255178451538
    4. ' 
' → logprob: -3.476255178451538
    5. '\n' → logprob: -4.101255416870117
    6. '
' → logprob: -4.226255416870117
    7. 'i' → logprob: -4.351255416870117
    8. '    
' → logprob: -5.226255416870117
    9. '```' → logprob: -5.476255416870117
    10. '    ' → logprob: -6.351255416870117

Token 45: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34950944781303406
    2. ' i' → logprob: -1.2245094776153564
    3. 'i' → logprob: -7.099509239196777
    4. ' _' → logprob: -8.974509239196777
    5. '_' → logprob: -9.974509239196777
    6. ' ‌' → logprob: -10.099509239196777
    7. '  ' → logprob: -11.224509239196777
    8. ' ​' → logprob: -13.349509239196777
    9. ' ▁' → logprob: -13.474509239196777
    10. '	i' → logprob: -13.599509239196777

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25972530245780945
    2. ' ' → logprob: -1.5097253322601318
    3. 'in' → logprob: -5.384725093841553
    4. ' i' → logprob: -6.509725093841553
    5. '<|end|>' → logprob: -7.259725093841553
    6. ' =' → logprob: -8.134725570678711
    7. '=' → logprob: -8.259725570678711
    8. '  ' → logprob: -8.634725570678711
    9. ')' → logprob: -10.384725570678711
    10. '[' → logprob: -10.509725570678711

Token 47: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1362314522266388
    2. ' ' → logprob: -2.1362314224243164
    3. 'range' → logprob: -4.761231422424316
    4. '2' → logprob: -7.261231422424316
    5. '	range' → logprob: -13.761231422424316
    6. ' xrange' → logprob: -14.136231422424316
    7. ' space' → logprob: -14.886231422424316
    8. '(range' → logprob: -15.386231422424316
    9. '  ' → logprob: -15.761231422424316
    10. '3' → logprob: -16.261232376098633

Token 48: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020652047533076257
    2. ' (' → logprob: -8.75020694732666
    3. ' ' → logprob: -10.50020694732666
    4. '2' → logprob: -11.25020694732666
    5. '(
' → logprob: -12.00020694732666
    6. '(space' → logprob: -14.37520694732666
    7. ')' → logprob: -15.75020694732666
    8. '()' → logprob: -16.000205993652344
    9. '(i' → logprob: -16.125205993652344
    10. '1' → logprob: -16.125205993652344

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.503177642822266
    4. ')' → logprob: -17.503177642822266
    5. '  ' → logprob: -17.753177642822266
    6. '    ' → logprob: -18.253177642822266
    7. ' )' → logprob: -18.503177642822266
    8. ' ' → logprob: -18.878177642822266
    9. '۲' → logprob: -19.378177642822266
    10. '２' → logprob: -20.003177642822266

Token 50: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5414285659790039
    2. ',n' → logprob: -1.041428565979004
    3. ' ,' → logprob: -2.791428565979004
    4. ' ' → logprob: -5.791428565979004
    5. ' )' → logprob: -8.416428565979004
    6. ')' → logprob: -8.666428565979004
    7. ' n' → logprob: -9.166428565979004
    8. 'n' → logprob: -9.916428565979004
    9. ':n' → logprob: -10.291428565979004
    10. ':' → logprob: -10.291428565979004

Token 51: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.717296517104842e-05
    2. ' +' → logprob: -10.000057220458984
    3. ')' → logprob: -12.000057220458984
    4. '):' → logprob: -13.000057220458984
    5. '+
' → logprob: -13.500057220458984
    6. '+)' → logprob: -13.500057220458984
    7. '+:' → logprob: -15.125057220458984
    8. ')+' → logprob: -15.375057220458984
    9. ':' → logprob: -16.625057220458984
    10. '):
' → logprob: -16.875057220458984

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020461321400944144
    2. ' ' → logprob: -8.500205039978027
    3. ')' → logprob: -13.750205039978027
    4. '+' → logprob: -18.00020408630371
    5. '):' → logprob: -18.50020408630371
    6. '):
' → logprob: -19.62520408630371
    7. '   ' → logprob: -19.75020408630371
    8. '```' → logprob: -20.37520408630371
    9. '  ' → logprob: -20.75020408630371
    10. '１' → logprob: -21.12520408630371

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.046474389731884
    2. ')' → logprob: -3.2964744567871094
    3. ':' → logprob: -4.796474456787109
    4. '):
' → logprob: -9.79647445678711
    5. ' ):' → logprob: -10.29647445678711
    6. '   ' → logprob: -10.42147445678711
    7. ':)' → logprob: -11.79647445678711
    8. ' ' → logprob: -12.17147445678711
    9. ' )' → logprob: -12.54647445678711
    10. ':**' → logprob: -14.92147445678711

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.913740336894989
    2. ' fib' → logprob: -1.2887403964996338
    3. 'fib' → logprob: -2.038740396499634
    4. '   ' → logprob: -2.538740396499634
    5. ' ' → logprob: -2.788740396499634
    6. '    ' → logprob: -3.038740396499634
    7. '        ' → logprob: -7.163740158081055
    8. 'f' → logprob: -7.538740158081055
    9. ' 
' → logprob: -7.663740158081055
    10. '  ' → logprob: -7.663740158081055

Token 55: ' fib' (ID: 18795)
  Prédit: ' fib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fib' → logprob: -0.39213797450065613
    2. 'fib' (adapté à ' fib') → logprob: -1.1421380043029785
    3. 'f' → logprob: -5.5171380043029785
    4. '   ' → logprob: -7.7671380043029785
    5. ' f' → logprob: -8.26713752746582
    6. ' ' → logprob: -8.39213752746582
    7. '    ' → logprob: -9.39213752746582
    8. ' )' → logprob: -9.89213752746582
    9. '	f' → logprob: -10.64213752746582
    10. 's' → logprob: -10.64213752746582

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04861586540937424
    2. '[' → logprob: -3.0486159324645996
    3. '[I' → logprob: -11.173615455627441
    4. '\[' → logprob: -12.173615455627441
    5. '```' → logprob: -13.173615455627441
    6. '[f' → logprob: -13.923615455627441
    7. '[int' → logprob: -14.048615455627441
    8. '[in' → logprob: -14.173615455627441
    9. '[n' → logprob: -14.423615455627441
    10. '[input' → logprob: -14.423615455627441

Token 57: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28946831822395325
    2. ' =' → logprob: -1.4144682884216309
    3. ']=' → logprob: -5.164468288421631
    4. ']' → logprob: -6.164468288421631
    5. ' ]' → logprob: -7.789468288421631
    6. ')=' → logprob: -10.914468765258789
    7. '=f' → logprob: -11.914468765258789
    8. ')' → logprob: -12.289468765258789
    9. ' ' → logprob: -12.289468765258789
    10. ' =)' → logprob: -12.539468765258789

Token 58: 'fib' (ID: 138552)
  Prédit: 'fib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fib' → logprob: -0.00043281487887725234
    2. ' fib' → logprob: -7.750432968139648
    3. 'f' → logprob: -13.125432968139648
    4. 'Fib' → logprob: -16.62543296813965
    5. '	f' → logprob: -17.37543296813965
    6. 'fab' → logprob: -17.62543296813965
    7. ' ' → logprob: -18.87543296813965
    8. '   ' → logprob: -19.00043296813965
    9. 'fi' → logprob: -19.12543296813965
    10. ' fibonacci' → logprob: -19.25043296813965

Token 59: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002492183819413185
    2. '[' → logprob: -6.0024919509887695
    3. '[-' → logprob: -12.12749195098877
    4. '\[' → logprob: -12.62749195098877
    5. '[I' → logprob: -12.75249195098877
    6. '[
' → logprob: -13.75249195098877
    7. '[j' → logprob: -14.12749195098877
    8. '```' → logprob: -14.12749195098877
    9. '-' → logprob: -14.50249195098877
    10. 'i' → logprob: -14.75249195098877

Token 60: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.531315314830863e-06
    2. ' -' → logprob: -12.750003814697266
    3. ']-' → logprob: -15.750003814697266
    4. '[-' → logprob: -16.500003814697266
    5. '-
' → logprob: -16.500003814697266
    6. ']' → logprob: -16.625003814697266
    7. '[i' → logprob: -16.875003814697266
    8. '-i' → logprob: -17.625003814697266
    9. '```' → logprob: -17.750003814697266
    10. '1' → logprob: -18.250003814697266

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.946405094116926e-05
    2. '2' → logprob: -9.500079154968262
    3. ' ' → logprob: -12.875079154968262
    4. '   ' → logprob: -14.875079154968262
    5. ']' → logprob: -14.937579154968262
    6. '
' → logprob: -15.437579154968262
    7. '

' → logprob: -15.750079154968262
    8. '	' → logprob: -16.125080108642578
    9. '```' → logprob: -16.125080108642578
    10. '  ' → logprob: -16.250080108642578

Token 62: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004621187690645456
    2. ' +' → logprob: -5.3796210289001465
    3. ']+' → logprob: -14.879621505737305
    4. ')+' → logprob: -14.879621505737305
    5. ' ' → logprob: -16.254621505737305
    6. ' plus' → logprob: -16.629621505737305
    7. '+
' → logprob: -17.504621505737305
    8. '}+' → logprob: -17.879621505737305
    9. '＋' → logprob: -18.129621505737305
    10. ')' → logprob: -18.379621505737305

Token 63: 'fib' (ID: 138552)
  Prédit: 'fib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fib' → logprob: -0.014164801687002182
    2. ' fib' → logprob: -4.264164924621582
    3. 'f' → logprob: -14.014164924621582
    4. ' ' → logprob: -15.764164924621582
    5. '	f' → logprob: -16.264163970947266
    6. ' fibonacci' → logprob: -16.514163970947266
    7. 'Fib' → logprob: -16.514163970947266
    8. '1' → logprob: -16.639163970947266
    9. ' ' → logprob: -17.139163970947266
    10. 'fiber' → logprob: -17.764163970947266

Token 64: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001825642102630809
    2. '[' → logprob: -8.625182151794434
    3. '[I' → logprob: -13.375182151794434
    4. ' [' → logprob: -14.750182151794434
    5. '[j' → logprob: -15.125182151794434
    6. '[
' → logprob: -15.750182151794434
    7. '[f' → logprob: -16.12518310546875
    8. '\[' → logprob: -16.37518310546875
    9. '```' → logprob: -16.87518310546875
    10. 'i' → logprob: -17.12518310546875

Token 65: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.320199877838604e-07
    2. ' -' → logprob: -15.625
    3. '2' → logprob: -16.125
    4. ']-' → logprob: -17.25
    5. '[i' → logprob: -17.625
    6. '[-' → logprob: -18.375
    7. ']' → logprob: -18.625
    8. '```' → logprob: -18.625
    9. '1' → logprob: -19.375
    10. '[' → logprob: -20.125

Token 66: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '1' → logprob: -18.37500762939453
    4. '۲' → logprob: -18.50000762939453
    5. '   ' → logprob: -18.75000762939453
    6. '```' → logprob: -19.37500762939453
    7. '  ' → logprob: -19.75000762939453
    8. '２' → logprob: -19.93750762939453
    9. '२' → logprob: -20.43750762939453
    10. ')' → logprob: -20.50000762939453

Token 67: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ')
' → logprob: -11.875008583068848
    3. '<|end|>' → logprob: -13.750008583068848
    4. ' )' → logprob: -15.250008583068848
    5. '   ' → logprob: -16.000009536743164
    6. '}' → logprob: -16.125009536743164
    7. ')return' → logprob: -16.375009536743164
    8. ']' → logprob: -16.625009536743164
    9. '```' → logprob: -17.000009536743164
    10. '),' → logprob: -17.125009536743164

Token 68: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11468427628278732
    2. '   ' → logprob: -2.3646843433380127
    3. '    
' → logprob: -4.864684104919434
    4. 'print' → logprob: -5.614684104919434
    5. '  
' → logprob: -6.239684104919434
    6. '\n' → logprob: -7.114684104919434
    7. '   
' → logprob: -9.489684104919434
    8. '
' → logprob: -9.864684104919434
    9. '```' → logprob: -10.114684104919434
    10. ' 
' → logprob: -10.239684104919434

Token 69: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.694703996181488
    2. 'print' (adapté à ' print') → logprob: -0.694703996181488
    3. ' print' → logprob: -7.194704055786133
    4. '
' → logprob: -7.819704055786133
    5. '    
' → logprob: -8.069704055786133
    6. '```' → logprob: -9.569704055786133
    7. '  
' → logprob: -12.069704055786133
    8. '	print' → logprob: -12.319704055786133
    9. '\n' → logprob: -12.569704055786133
    10. ' 
' → logprob: -12.944704055786133

Token 70: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.47407880425453186
    2. '(' → logprob: -0.9740787744522095
    3. '(n' → logprob: -14.349079132080078
    4. '(F' → logprob: -14.599079132080078
    5. '(
' → logprob: -15.099079132080078
    6. '(

' → logprob: -15.224079132080078
    7. '(fi' → logprob: -16.474079132080078
    8. '((' → logprob: -16.599079132080078
    9. ' (' → logprob: -16.849079132080078
    10. '()' → logprob: -18.099079132080078

Token 71: 'ib' (ID: 526)
  Prédit: 'ib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ib' → logprob: -0.019670870155096054
    2. 'i' → logprob: -4.1446709632873535
    3. 'b' → logprob: -5.8946709632873535
    4. 'n' → logprob: -8.144670486450195
    5. '[i' → logprob: -8.644670486450195
    6. 'fib' → logprob: -8.644670486450195
    7. 'a' → logprob: -9.269670486450195
    8. '[' → logprob: -10.269670486450195
    9. '[n' → logprob: -11.019670486450195
    10. ')' → logprob: -11.394670486450195

Token 72: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0004247163888067007
    2. '[' → logprob: -8.2504243850708
    3. '[i' → logprob: -9.1254243850708
    4. '[-' → logprob: -10.1254243850708
    5. ')' → logprob: -11.2504243850708
    6. ')n' → logprob: -14.0004243850708
    7. ']' → logprob: -15.3754243850708
    8. 'n' → logprob: -16.000425338745117
    9. '(n' → logprob: -16.250425338745117
    10. '[N' → logprob: -16.500425338745117

Token 73: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011134950444102287
    2. '])' → logprob: -4.511135101318359
    3. ']' → logprob: -9.76113510131836
    4. '))' → logprob: -11.01113510131836
    5. '})' → logprob: -12.38613510131836
    6. ')]' → logprob: -12.76113510131836
    7. '）' → logprob: -13.38613510131836
    8. ')
' → logprob: -13.76113510131836
    9. ')])' → logprob: -14.01113510131836
    10. ' )' → logprob: -14.13613510131836


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 71
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 53.52%
Précision adaptée (1ère position): 56.34%
Précision (top 10): 85.92%
================================================================================
