================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
dp=[0]*50
dp[0]=1
dp[1]=1
N = int(input())

def makefib(n):
    if n == 0 or n == 1:
        return 1
    elif dp[n] == 0:
        dp[n] = makefib(n-1) + makefib(n-2)
        return dp[n]
    else:
        return dp[n]
print(makefib(N))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'dp' (ID: 19037)
  → Token d'amorce (pas de prédiction)

Token 1: '=[' (ID: 13370)
  → Token d'amorce (pas de prédiction)

Token 2: '0' (ID: 15)
  → Token d'amorce (pas de prédiction)

Token 3: ']*' (ID: 18579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4793205261230469
    2. ']' → logprob: -0.9793205261230469
    3. ']*' → logprob: -5.354320526123047
    4. ' ]' → logprob: -8.229320526123047
    5. ' for' → logprob: -9.479320526123047
    6. ']+' → logprob: -9.479320526123047
    7. ' ,' → logprob: -10.979320526123047
    8. ']*(' → logprob: -10.979320526123047
    9. '0' → logprob: -11.729320526123047
    10. '[' → logprob: -11.854320526123047

Token 4: '50' (ID: 1434)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6180550456047058
    2. '10' → logprob: -0.9930550456047058
    3. '101' → logprob: -3.4930551052093506
    4. '(' → logprob: -3.8680551052093506
    5. '(n' → logprob: -3.9930551052093506
    6. 'n' → logprob: -4.2430548667907715
    7. '11' → logprob: -5.7430548667907715
    8. '1' → logprob: -6.7430548667907715
    9. '50' → logprob: -7.9930548667907715
    10. 'len' → logprob: -8.24305534362793

Token 5: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01103957835584879
    2. '+' → logprob: -5.511039733886719
    3. '=' → logprob: -6.136039733886719
    4. ',' → logprob: -6.886039733886719
    5. ']' → logprob: -6.886039733886719
    6. '.' → logprob: -7.136039733886719
    7. ' ' → logprob: -7.511039733886719
    8. '\[' → logprob: -8.011039733886719
    9. '#' → logprob: -8.261039733886719
    10. '_' → logprob: -8.386039733886719

Token 6: 'dp' (ID: 19037)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02335495501756668
    2. ',' → logprob: -5.023355007171631
    3. '=' → logprob: -5.148355007171631
    4. 'dp' → logprob: -6.148355007171631
    5. '
' → logprob: -6.273355007171631
    6. '.' → logprob: -6.398355007171631
    7. '#' → logprob: -6.523355007171631
    8. '[
' → logprob: -6.773355007171631
    9. '+' → logprob: -7.523355007171631
    10. '\' → logprob: -8.023354530334473

Token 7: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0030570924282073975
    2. '\[' → logprob: -6.62805700302124
    3. '```' → logprob: -7.37805700302124
    4. '<|end|>' → logprob: -7.75305700302124
    5. '[
' → logprob: -8.503057479858398
    6. ']' → logprob: -8.878057479858398
    7. '[]' → logprob: -9.503057479858398
    8. '[:]' → logprob: -9.503057479858398
    9. '`' → logprob: -10.253057479858398
    10. '[user' → logprob: -10.628057479858398

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010780644370242953
    2. '1' → logprob: -7.501078128814697
    3. ' ' → logprob: -7.751078128814697
    4. ')' → logprob: -9.501077651977539
    5. ']' → logprob: -11.001077651977539
    6. ' )' → logprob: -13.751077651977539
    7. '])' → logprob: -14.251077651977539
    8. 'i' → logprob: -14.751077651977539
    9. ')]' → logprob: -15.251077651977539
    10. ' ]' → logprob: -16.00107765197754

Token 9: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04114643484354019
    2. ' ]' → logprob: -3.2911465167999268
    3. ']=' → logprob: -5.791146278381348
    4. '=' → logprob: -10.291146278381348
    5. ']+=' → logprob: -12.166146278381348
    6. ']==' → logprob: -12.541146278381348
    7. '+' → logprob: -15.041146278381348
    8. ']>' → logprob: -15.166146278381348
    9. ' =' → logprob: -15.166146278381348
    10. '`]' → logprob: -15.416146278381348

Token 10: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015223604859784245
    2. '0' → logprob: -6.501522541046143
    3. ' ' → logprob: -11.376522064208984
    4. '-' → logprob: -12.626522064208984
    5. '100' → logprob: -12.751522064208984
    6. '50' → logprob: -14.251522064208984
    7. '10' → logprob: -14.376522064208984
    8. '2' → logprob: -14.876522064208984
    9. '5' → logprob: -16.501522064208984
    10. '9' → logprob: -16.501522064208984

Token 11: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23734347522258759
    2. ' ' → logprob: -2.8623435497283936
    3. '+' → logprob: -3.3623435497283936
    4. '' → logprob: -3.4873435497283936
    5. ' for' → logprob: -3.9873435497283936
    6. ' 
' → logprob: -4.1123433113098145
    7. ',' → logprob: -4.3623433113098145
    8. 'for' → logprob: -4.8623433113098145
    9. '#' → logprob: -5.1123433113098145
    10. '.' → logprob: -5.2373433113098145

Token 12: 'dp' (ID: 19037)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6254321336746216
    2. 'for' → logprob: -1.5004321336746216
    3. '
' → logprob: -2.000432014465332
    4. '+' → logprob: -2.875432014465332
    5. '' → logprob: -4.625432014465332
    6. '\n' → logprob: -4.750432014465332
    7. ' ' → logprob: -4.875432014465332
    8. ' 
' → logprob: -5.125432014465332
    9. ',' → logprob: -5.875432014465332
    10. '#' → logprob: -6.125432014465332

Token 13: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012788071762770414
    2. '\[' → logprob: -7.251278877258301
    3. '<|end|>' → logprob: -8.7512788772583
    4. '```' → logprob: -9.0012788772583
    5. ']' → logprob: -9.3762788772583
    6. '[]' → logprob: -9.6262788772583
    7. '#' → logprob: -10.6262788772583
    8. '\' → logprob: -10.8762788772583
    9. '.' → logprob: -11.1262788772583
    10. ',' → logprob: -11.5012788772583

Token 14: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002728432649746537
    2. ' ' → logprob: -6.002728462219238
    3. '0' → logprob: -9.002728462219238
    4. ']' → logprob: -9.252728462219238
    5. ' ]' → logprob: -12.002728462219238
    6. '2' → logprob: -12.127728462219238
    7. '+' → logprob: -12.252728462219238
    8. ')' → logprob: -12.377728462219238
    9. '4' → logprob: -12.502728462219238
    10. '-' → logprob: -13.377728462219238

Token 15: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16163967549800873
    2. '=' → logprob: -2.53663969039917
    3. ']=' → logprob: -3.41163969039917
    4. ' ]' → logprob: -3.91163969039917
    5. ' =' → logprob: -4.66163969039917
    6. '+' → logprob: -5.41163969039917
    7. ']+=' → logprob: -6.53663969039917
    8. '+=' → logprob: -7.53663969039917
    9. ')' → logprob: -7.91163969039917
    10. ']+' → logprob: -8.161639213562012

Token 16: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010580825619399548
    2. '0' → logprob: -5.135581016540527
    3. '2' → logprob: -5.385581016540527
    4. '3' → logprob: -10.635581016540527
    5. '-' → logprob: -11.823081016540527
    6. ' ' → logprob: -11.823081016540527
    7. '4' → logprob: -12.135581016540527
    8. '5' → logprob: -12.260581016540527
    9. '```' → logprob: -13.448081016540527
    10. '9' → logprob: -14.198081016540527

Token 17: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03231940045952797
    2. '+' → logprob: -4.53231954574585
    3. 'dp' → logprob: -5.28231954574585
    4. '*' → logprob: -6.03231954574585
    5. '
' → logprob: -6.03231954574585
    6. '\n' → logprob: -6.15731954574585
    7. '+
' → logprob: -6.15731954574585
    8. ' 
' → logprob: -6.40731954574585
    9. 'for' → logprob: -6.90731954574585
    10. '\' → logprob: -7.15731954574585

Token 18: 'N' (ID: 45)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5795893669128418
    2. 'dp' → logprob: -1.5795893669128418
    3. '\n' → logprob: -2.329589366912842
    4. 'for' → logprob: -2.704589366912842
    5. '```' → logprob: -3.579589366912842
    6. '\' → logprob: -4.329589366912842
    7. '
' → logprob: -4.454589366912842
    8. ' for' → logprob: -5.329589366912842
    9. '(dp' → logprob: -6.079589366912842
    10. '``' → logprob: -6.329589366912842

Token 19: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18018373847007751
    2. ' =' → logprob: -1.8051837682724
    3. '=int' → logprob: -8.305183410644531
    4. ' ' → logprob: -9.680183410644531
    5. '[' → logprob: -10.680183410644531
    6. '=input' → logprob: -10.805183410644531
    7. '_' → logprob: -10.930183410644531
    8. ',' → logprob: -11.180183410644531
    9. ')' → logprob: -11.930183410644531
    10. 's' → logprob: -12.055183410644531

Token 20: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08077769726514816
    2. '2' → logprob: -3.330777645111084
    3. '10' → logprob: -4.080777645111084
    4. '5' → logprob: -4.205777645111084
    5. ' int' → logprob: -5.455777645111084
    6. '20' → logprob: -6.080777645111084
    7. '0' → logprob: -6.580777645111084
    8. 'int' → logprob: -7.080777645111084
    9. '1' → logprob: -7.955777645111084
    10. '50' → logprob: -7.955777645111084

Token 21: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31365153193473816
    2. '(input' → logprob: -1.3136515617370605
    3. '()' → logprob: -8.688651084899902
    4. '('' → logprob: -9.188651084899902
    5. 'input' → logprob: -9.813651084899902
    6. '(
' → logprob: -10.063651084899902
    7. '(int' → logprob: -12.813651084899902
    8. '("' → logprob: -12.938651084899902
    9. '(

' → logprob: -13.063651084899902
    10. '(`' → logprob: -13.313651084899902

Token 22: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5442855358123779
    2. '()' → logprob: -1.044285535812378
    3. ')' → logprob: -3.044285535812378
    4. '(' → logprob: -3.919285535812378
    5. '('' → logprob: -9.544285774230957
    6. '")' → logprob: -10.044285774230957
    7. ' ())' → logprob: -10.169285774230957
    8. '`)' → logprob: -10.419285774230957
    9. '')' → logprob: -10.794285774230957
    10. ' )' → logprob: -11.169285774230957

Token 23: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26909977197647095
    2. '\n' → logprob: -2.394099712371826
    3. ' for' → logprob: -2.519099712371826
    4. 'for' → logprob: -3.519099712371826
    5. '```' → logprob: -4.394099712371826
    6. ' 
' → logprob: -4.644099712371826
    7. '' → logprob: -5.269099712371826
    8. '
' → logprob: -5.394099712371826
    9. '\' → logprob: -7.269099712371826
    10. '<|end|>' → logprob: -7.394099712371826

Token 24: ' make' (ID: 1520)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.8501127362251282
    2. ' fibonacci' → logprob: -1.1001126766204834
    3. ' fib' → logprob: -2.9751126766204834
    4. ' f' → logprob: -3.1001126766204834
    5. ' stair' → logprob: -3.2251126766204834
    6. ' solve' → logprob: -3.3501126766204834
    7. ' dp' → logprob: -4.3501129150390625
    8. ' solution' → logprob: -4.6001129150390625
    9. ' factorial' → logprob: -4.6001129150390625
    10. ' calculate' → logprob: -4.7251129150390625

Token 25: 'fib' (ID: 138552)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03071841597557068
    2. '_dp' → logprob: -4.0307183265686035
    3. '_array' → logprob: -5.5307183265686035
    4. '(' → logprob: -5.5307183265686035
    5. '_arr' → logprob: -7.0307183265686035
    6. '_div' → logprob: -8.030718803405762
    7. '()' → logprob: -8.280718803405762
    8. '_sum' → logprob: -8.280718803405762
    9. '_triangle' → logprob: -8.530718803405762
    10. '_table' → logprob: -8.530718803405762

Token 26: '(n' (ID: 2406)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.36543896794319153
    2. '(' → logprob: -1.6154389381408691
    3. 'onacci' → logprob: -2.615438938140869
    4. '(n' → logprob: -4.240438938140869
    5. '(i' → logprob: -5.490438938140869
    6. 's' → logprob: -5.865438938140869
    7. '_sequence' → logprob: -6.365438938140869
    8. 'a' → logprob: -6.490438938140869
    9. '_' → logprob: -6.615438938140869
    10. 'on' → logprob: -6.615438938140869

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004891331307590008
    2. ')' → logprob: -5.379891395568848
    3. ' ):' → logprob: -9.754891395568848
    4. '(n' → logprob: -9.879891395568848
    5. ')n' → logprob: -10.004891395568848
    6. '):
' → logprob: -10.004891395568848
    7. ':' → logprob: -10.629891395568848
    8. 'u' → logprob: -12.254891395568848
    9. '**' → logprob: -12.504891395568848
    10. ',' → logprob: -12.504891395568848

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12717336416244507
    2. ':' → logprob: -2.62717342376709
    3. ' ' → logprob: -3.62717342376709
    4. ' if' → logprob: -5.00217342376709
    5. '(' → logprob: -5.37717342376709
    6. 'if' → logprob: -6.62717342376709
    7. ')' → logprob: -6.62717342376709
    8. '	if' → logprob: -7.00217342376709
    9. '  ' → logprob: -7.25217342376709
    10. '    ' → logprob: -7.37717342376709

Token 29: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1764310747385025
    2. ' if' → logprob: -2.426431179046631
    3. ' ' → logprob: -3.051431179046631
    4. ' for' → logprob: -4.301431179046631
    5. '    ' → logprob: -5.301431179046631
    6. ' 
' → logprob: -6.301431179046631
    7. 'if' (adapté à ' if') → logprob: -6.301431179046631
    8. '\t' → logprob: -7.176431179046631
    9. '  ' → logprob: -7.676431179046631
    10. ' i' → logprob: -8.051430702209473

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.042572252452373505
    2. 'n' → logprob: -3.292572259902954
    3. ' dp' → logprob: -5.542572021484375
    4. 'dp' → logprob: -7.542572021484375
    5. ' ' → logprob: -9.917572021484375
    6. '	n' → logprob: -11.667572021484375
    7. ' ' → logprob: -12.292572021484375
    8. '	dp' → logprob: -13.292572021484375
    9. ' not' → logprob: -13.355072021484375
    10. '(dp' → logprob: -14.042572021484375

Token 31: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9077627062797546
    2. '<=' → logprob: -1.5327627658843994
    3. '==' → logprob: -1.6577627658843994
    4. ' <' → logprob: -2.5327627658843994
    5. ' ==' → logprob: -2.7827627658843994
    6. ' <=' → logprob: -3.0327627658843994
    7. '<len' → logprob: -8.15776252746582
    8. '=' → logprob: -9.65776252746582
    9. ' ' → logprob: -10.28276252746582
    10. '>' → logprob: -10.40776252746582

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043119773268699646
    2. ' ' → logprob: -3.1681196689605713
    3. '1' → logprob: -9.043119430541992
    4. '2' → logprob: -14.293119430541992
    5. '<' → logprob: -14.668119430541992
    6. '  ' → logprob: -15.168119430541992
    7. '۰' → logprob: -16.105619430541992
    8. '<|end|>' → logprob: -16.230619430541992
    9. '-' → logprob: -16.293119430541992
    10. '   ' → logprob: -16.668119430541992

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021045419271104038
    2. ' ' → logprob: -9.125210762023926
    3. '1' → logprob: -9.250210762023926
    4. '2' → logprob: -12.625210762023926
    5. '-' → logprob: -13.750210762023926
    6. '  ' → logprob: -15.562710762023926
    7. '   ' → logprob: -16.06270980834961
    8. ')' → logprob: -16.25020980834961
    9. '    ' → logprob: -16.25020980834961
    10. '<' → logprob: -16.50020980834961

Token 34: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03498821705579758
    2. ' or' → logprob: -3.6599881649017334
    3. ':return' → logprob: -5.2849884033203125
    4. ' :' → logprob: -5.7849884033203125
    5. ' ' → logprob: -8.409988403320312
    6. ':
' → logprob: -8.659988403320312
    7. '   ' → logprob: -9.784988403320312
    8. ' return' → logprob: -11.034988403320312
    9. 'or' → logprob: -11.409988403320312
    10. ' :
' → logprob: -12.284988403320312

Token 35: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0486745722591877
    2. 'n' → logprob: -3.0486745834350586
    3. '1' → logprob: -9.548674583435059
    4. ' ' → logprob: -11.423674583435059
    5. '	n' → logprob: -12.798674583435059
    6. ' ' → logprob: -13.673674583435059
    7. '   ' → logprob: -14.548674583435059
    8. ')n' → logprob: -16.361173629760742
    9. '    ' → logprob: -16.486173629760742
    10. 'dp' → logprob: -16.798673629760742

Token 36: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20150622725486755
    2. '==' → logprob: -1.70150625705719
    3. ' ' → logprob: -10.076506614685059
    4. '=' → logprob: -11.076506614685059
    5. ' ' → logprob: -11.826506614685059
    6. '<|end|>' → logprob: -11.951506614685059
    7. '1' → logprob: -12.826506614685059
    8. '  ' → logprob: -12.826506614685059
    9. '   ' → logprob: -13.014006614685059
    10. ']==' → logprob: -13.451506614685059

Token 37: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012514126487076283
    2. ' ' → logprob: -4.387514114379883
    3. '  ' → logprob: -13.575014114379883
    4. '   ' → logprob: -13.700014114379883
    5. ' ' → logprob: -14.762514114379883
    6. '2' → logprob: -15.262514114379883
    7. '0' → logprob: -15.575014114379883
    8. '<|end|>' → logprob: -15.950014114379883
    9. '    ' → logprob: -16.325014114379883
    10. '１' → logprob: -16.637514114379883

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2524021157296374e-05
    2. ' ' → logprob: -9.875052452087402
    3. '  ' → logprob: -15.687552452087402
    4. '-' → logprob: -15.812552452087402
    5. '0' → logprob: -16.25005340576172
    6. '<|end|>' → logprob: -16.37505340576172
    7. '   ' → logprob: -16.50005340576172
    8. '2' → logprob: -16.62505340576172
    9. '49' → logprob: -16.68755340576172
    10. '```' → logprob: -17.12505340576172

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011602196609601378
    2. ':return' → logprob: -7.001160144805908
    3. ':
' → logprob: -8.376160621643066
    4. '):' → logprob: -11.376160621643066
    5. ' :' → logprob: -12.376160621643066
    6. '   ' → logprob: -14.126160621643066
    7. ':**' → logprob: -14.626160621643066
    8. ' or' → logprob: -14.876160621643066
    9. ':def' → logprob: -15.251160621643066
    10. '<|end|>' → logprob: -15.626160621643066

Token 40: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9017514586448669
    2. '   ' → logprob: -1.5267515182495117
    3. ':return' → logprob: -1.6517515182495117
    4. '       ' → logprob: -2.0267515182495117
    5. ' return' → logprob: -3.4017515182495117
    6. '    ' → logprob: -4.401751518249512
    7. 'return' → logprob: -6.026751518249512
    8. '	return' → logprob: -6.776751518249512
    9. ':
' → logprob: -6.901751518249512
    10. ' ' → logprob: -6.901751518249512

Token 41: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5790486335754395
    2. 'return' (adapté à ' return') → logprob: -0.8290486335754395
    3. '   ' → logprob: -5.8290486335754395
    4. '    ' → logprob: -10.079048156738281
    5. '       ' → logprob: -10.329048156738281
    6. ':return' → logprob: -10.329048156738281
    7. ' ' → logprob: -10.454048156738281
    8. '	return' → logprob: -11.079048156738281
    9. ' ' → logprob: -12.829048156738281
    10. ' dp' → logprob: -12.954048156738281

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.057032566517591476
    2. 'dp' → logprob: -3.182032585144043
    3. ' ' → logprob: -4.557032585144043
    4. ' dp' → logprob: -5.682032585144043
    5. '0' → logprob: -11.682032585144043
    6. '(dp' → logprob: -11.807032585144043
    7. 'n' → logprob: -12.182032585144043
    8. '	dp' → logprob: -12.619532585144043
    9. 'd' → logprob: -13.369532585144043
    10. ' ' → logprob: -13.432032585144043

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036035135854035616
    2. 'dp' → logprob: -5.628603458404541
    3. ' ' → logprob: -13.0036039352417
    4. ' dp' → logprob: -14.6286039352417
    5. '(dp' → logprob: -15.2536039352417
    6. 'n' → logprob: -15.5036039352417
    7. '0' → logprob: -17.128602981567383
    8. '(' → logprob: -17.316102981567383
    9. '	dp' → logprob: -17.441102981567383
    10. '```' → logprob: -17.691102981567383

Token 44: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3955445885658264
    2. '<|end|>' → logprob: -1.7705445289611816
    3. '\n' → logprob: -2.6455445289611816
    4. '   ' → logprob: -3.5205445289611816
    5. '    
' → logprob: -4.270544528961182
    6. ' 
' → logprob: -4.395544528961182
    7. '  
' → logprob: -4.395544528961182
    8. '```' → logprob: -5.645544528961182
    9. '<|end|>' → logprob: -6.020544528961182
    10. '   
' → logprob: -6.145544528961182

Token 45: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8333889842033386
    2. '   ' → logprob: -1.8333890438079834
    3. '\n' → logprob: -2.0833890438079834
    4. '<|end|>' → logprob: -2.4583890438079834
    5. ' 
' → logprob: -2.5833890438079834
    6. '    
' → logprob: -3.3333890438079834
    7. '  
' → logprob: -3.5833890438079834
    8. '```' → logprob: -3.9583890438079834
    9. '   
' → logprob: -4.958388805389404
    10. ' ' → logprob: -5.333388805389404

Token 46: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6315104961395264
    2. ' ' → logprob: -2.2565104961395264
    3. '<|end|>' → logprob: -2.3815104961395264
    4. ' if' → logprob: -2.5065104961395264
    5. 'if' → logprob: -2.7565104961395264
    6. '  ' → logprob: -3.8815104961395264
    7. '    ' → logprob: -3.8815104961395264
    8. '    
' → logprob: -4.0065107345581055
    9. ' elif' → logprob: -4.2565107345581055
    10. 'elif' (adapté à ' elif') → logprob: -4.2565107345581055

Token 47: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7030935287475586
    2. ' dp' → logprob: -1.3280935287475586
    3. ' n' → logprob: -1.9530935287475586
    4. 'n' → logprob: -2.3280935287475586
    5. '   ' → logprob: -8.578093528747559
    6. '0' → logprob: -8.828093528747559
    7. ' ' → logprob: -9.578093528747559
    8. '	dp' → logprob: -9.828093528747559
    9. ' not' → logprob: -10.203093528747559
    10. '(dp' → logprob: -10.328093528747559

Token 48: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.8325677703833207e-05
    2. '[' → logprob: -10.500028610229492
    3. '[N' → logprob: -15.125028610229492
    4. 'n' → logprob: -16.375028610229492
    5. '[
' → logprob: -16.500028610229492
    6. '[]' → logprob: -16.625028610229492
    7. '[node' → logprob: -16.875028610229492
    8. '<n' → logprob: -17.000028610229492
    9. '[int' → logprob: -17.625028610229492
    10. '[i' → logprob: -17.750028610229492

Token 49: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08052157610654831
    2. ']!=' → logprob: -2.580521583557129
    3. ']==' → logprob: -6.705521583557129
    4. ' ]' → logprob: -8.830521583557129
    5. ']>' → logprob: -8.830521583557129
    6. '[' → logprob: -9.580521583557129
    7. '-' → logprob: -10.955521583557129
    8. ']:' → logprob: -11.830521583557129
    9. '!=' → logprob: -12.330521583557129
    10. ']!='' → logprob: -12.705521583557129

Token 50: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.11570808291435242
    2. '==' → logprob: -2.490708112716675
    3. ' !=' → logprob: -3.740708112716675
    4. ' ==' → logprob: -6.615707874298096
    5. '>' → logprob: -7.365707874298096
    6. ']!=' → logprob: -7.990707874298096
    7. '[' → logprob: -9.365708351135254
    8. ')!=' → logprob: -9.615708351135254
    9. ']==' → logprob: -9.865708351135254
    10. '=' → logprob: -10.240708351135254

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021853535436093807
    2. ' ' → logprob: -6.127185344696045
    3. '-' → logprob: -15.252185821533203
    4. '۰' → logprob: -17.127185821533203
    5. '<|end|>' → logprob: -17.752185821533203
    6. ' ' → logprob: -17.752185821533203
    7. '[' → logprob: -18.127185821533203
    8. ' -' → logprob: -18.127185821533203
    9. '```' → logprob: -18.127185821533203
    10. '1' → logprob: -18.752185821533203

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.805981972021982e-05
    2. ' ' → logprob: -9.62509822845459
    3. '-' → logprob: -10.37509822845459
    4. ' -' → logprob: -15.25009822845459
    5. '۰' → logprob: -15.75009822845459
    6. '1' → logprob: -16.937597274780273
    7. '[' → logprob: -17.500097274780273
    8. '...' → logprob: -17.750097274780273
    9. '０' → logprob: -17.875097274780273
    10. '০' → logprob: -18.062597274780273

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004037402104586363
    2. '):' → logprob: -8.25040340423584
    3. ' :' → logprob: -9.50040340423584
    4. ':return' → logprob: -9.87540340423584
    5. ':
' → logprob: -11.50040340423584
    6. ')' → logprob: -13.12540340423584
    7. ':**' → logprob: -13.75040340423584
    8. '():' → logprob: -14.25040340423584
    9. '   ' → logprob: -14.50040340423584
    10. ' ):' → logprob: -15.00040340423584

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022457817569375038
    2. '   ' → logprob: -4.272457599639893
    3. ' return' → logprob: -5.897457599639893
    4. '    ' → logprob: -6.647457599639893
    5. ' dp' → logprob: -6.647457599639893
    6. '\n' → logprob: -7.772457599639893
    7. '    
' → logprob: -7.772457599639893
    8. ' 
' → logprob: -7.897457599639893
    9. ' ' → logprob: -8.02245807647705
    10. '
' → logprob: -8.27245807647705

Token 55: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.31340688467025757
    2. 'dp' (adapté à ' dp') → logprob: -1.3134069442749023
    3. '(dp' → logprob: -9.688406944274902
    4. '	dp' → logprob: -10.563406944274902
    5. ' make' → logprob: -10.938406944274902
    6. 'make' → logprob: -11.063406944274902
    7. '   ' → logprob: -11.438406944274902
    8. ' ' → logprob: -12.563406944274902
    9. '_dp' → logprob: -13.188406944274902
    10. 'd' → logprob: -13.563406944274902

Token 56: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0031793788075447083
    2. '[' → logprob: -5.753179550170898
    3. '[N' → logprob: -13.628179550170898
    4. 'n' → logprob: -15.878179550170898
    5. '[i' → logprob: -16.1281795501709
    6. '[
' → logprob: -17.1281795501709
    7. '[int' → logprob: -17.6281795501709
    8. '[m' → logprob: -17.6281795501709
    9. '[next' → logprob: -17.7531795501709
    10. '[node' → logprob: -17.7531795501709

Token 57: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047038644552230835
    2. ']=' → logprob: -3.1720385551452637
    3. ')' → logprob: -6.172038555145264
    4. '=' → logprob: -6.422038555145264
    5. ')=' → logprob: -8.547039031982422
    6. ' ]' → logprob: -9.922039031982422
    7. '-' → logprob: -10.297039031982422
    8. ']+=' → logprob: -10.922039031982422
    9. ' =' → logprob: -11.922039031982422
    10. ']==' → logprob: -12.047039031982422

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0006271334132179618
    2. ' =' → logprob: -7.375627040863037
    3. '=m' → logprob: -15.500627517700195
    4. '=create' → logprob: -16.125627517700195
    5. '＝' → logprob: -17.125627517700195
    6. '=f' → logprob: -17.500627517700195
    7. '=

' → logprob: -17.625627517700195
    8. '=int' → logprob: -17.875627517700195
    9. '+=' → logprob: -18.500627517700195
    10. '=}' → logprob: -18.875627517700195

Token 59: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.01612117327749729
    2. ' make' → logprob: -4.1411213874816895
    3. 'dp' → logprob: -10.016120910644531
    4. '(make' → logprob: -10.266120910644531
    5. '	make' → logprob: -12.766120910644531
    6. ' dp' → logprob: -12.891120910644531
    7. 'mak' → logprob: -13.641120910644531
    8. '   ' → logprob: -15.766120910644531
    9. ' mak' → logprob: -16.14112091064453
    10. ' ' → logprob: -16.14112091064453

Token 60: 'fib' (ID: 138552)
  Prédit: 'fib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fib' → logprob: -4.961759259458631e-06
    2. 'f' → logprob: -12.250004768371582
    3. 'ib' → logprob: -16.1250057220459
    4. ' fib' → logprob: -17.2500057220459
    5. 'fb' → logprob: -17.2500057220459
    6. '(f' → logprob: -19.0000057220459
    7. 'fab' → logprob: -19.1250057220459
    8. 'b' → logprob: -19.3750057220459
    9. '(n' → logprob: -19.5000057220459
    10. 'rib' → logprob: -19.5000057220459

Token 61: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00026169343618676066
    2. '(' → logprob: -8.250261306762695
    3. ' (' → logprob: -15.500261306762695
    4. '```' → logprob: -16.625261306762695
    5. '((' → logprob: -16.875261306762695
    6. 'n' → logprob: -17.625261306762695
    7. '(
' → logprob: -18.000261306762695
    8. '[n' → logprob: -18.500261306762695
    9. '\(' → logprob: -18.500261306762695
    10. ' ' → logprob: -18.625261306762695

Token 62: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9146995327901095e-05
    2. ' -' → logprob: -10.875019073486328
    3. '()-' → logprob: -16.750019073486328
    4. '(' → logprob: -16.750019073486328
    5. '−' → logprob: -17.375019073486328
    6. ')' → logprob: -17.500019073486328
    7. '-
' → logprob: -17.625019073486328
    8. ' ' → logprob: -18.125019073486328
    9. '1' → logprob: -18.375019073486328
    10. '-)' → logprob: -18.625019073486328

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023691373644396663
    2. '2' → logprob: -8.625236511230469
    3. ' ' → logprob: -10.250236511230469
    4. '   ' → logprob: -11.750236511230469
    5. ')' → logprob: -12.000236511230469
    6. '```' → logprob: -13.625236511230469
    7. '１' → logprob: -13.875236511230469
    8. '

' → logprob: -13.937736511230469
    9. '۱' → logprob: -14.500236511230469
    10. '  ' → logprob: -14.687736511230469

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007791044190526009
    2. ')+' → logprob: -4.882791042327881
    3. ' )' → logprob: -9.007791519165039
    4. '+' → logprob: -9.757791519165039
    5. ' +' → logprob: -13.007791519165039
    6. '+)' → logprob: -14.007791519165039
    7. ')+(' → logprob: -15.007791519165039
    8. ']+' → logprob: -15.132791519165039
    9. '   ' → logprob: -15.632791519165039
    10. ' ' → logprob: -15.882791519165039

Token 65: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47408992052078247
    2. '+' → logprob: -0.9740899205207825
    3. '(' → logprob: -12.724089622497559
    4. ')+' → logprob: -13.224089622497559
    5. '()+' → logprob: -13.474089622497559
    6. ' plus' → logprob: -13.599089622497559
    7. '+n' → logprob: -13.849089622497559
    8. ')' → logprob: -13.974089622497559
    9. ' ' → logprob: -14.224089622497559
    10. ' +
' → logprob: -14.349089622497559

Token 66: ' make' (ID: 1520)
  Prédit: ' make'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' make' → logprob: -0.01105359848588705
    2. 'make' → logprob: -4.511053562164307
    3. '	make' → logprob: -13.011054039001465
    4. ' ' → logprob: -13.136054039001465
    5. '(make' → logprob: -13.386054039001465
    6. ' ' → logprob: -17.63605308532715
    7. '.make' → logprob: -17.88605308532715
    8. ' mak' → logprob: -18.51105308532715
    9. '_make' → logprob: -18.76105308532715
    10. ' making' → logprob: -19.88605308532715

Token 67: 'fib' (ID: 138552)
  Prédit: 'fib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fib' → logprob: -0.00018280261429026723
    2. 'ib' → logprob: -9.37518310546875
    3. 'f' → logprob: -10.00018310546875
    4. ' fib' → logprob: -10.62518310546875
    5. 'fb' → logprob: -11.00018310546875
    6. 'b' → logprob: -12.37518310546875
    7. 'ibb' → logprob: -12.87518310546875
    8. ' ' → logprob: -15.00018310546875
    9. 'dp' → logprob: -15.00018310546875
    10. 'fab' → logprob: -15.00018310546875

Token 68: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0232830997556448
    2. '(' → logprob: -3.773283004760742
    3. ' (' → logprob: -10.398283004760742
    4. 'f' → logprob: -13.523283004760742
    5. '(f' → logprob: -13.773283004760742
    6. '(i' → logprob: -14.023283004760742
    7. '((' → logprob: -14.273283004760742
    8. '(N' → logprob: -15.023283004760742
    9. '(s' → logprob: -15.148283004760742
    10. '```' → logprob: -15.273283004760742

Token 69: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002334568416699767
    2. '2' → logprob: -8.62523365020752
    3. ' -' → logprob: -10.00023365020752
    4. 'n' → logprob: -12.62523365020752
    5. ')' → logprob: -13.12523365020752
    6. '-n' → logprob: -13.62523365020752
    7. '-)' → logprob: -14.62523365020752
    8. '   ' → logprob: -14.87523365020752
    9. ' ' → logprob: -15.37523365020752
    10. '[' → logprob: -15.75023365020752

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.750003814697266
    3. ')' → logprob: -14.250003814697266
    4. '۲' → logprob: -15.812503814697266
    5. '```' → logprob: -16.500003814697266
    6. '   ' → logprob: -16.812503814697266
    7. '<|end|>' → logprob: -16.937503814697266
    8. '-' → logprob: -17.000003814697266
    9. '२' → logprob: -17.375003814697266
    10. '1' → logprob: -17.562503814697266

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.762356209335849e-05
    2. ')
' → logprob: -11.37503719329834
    3. ' )' → logprob: -11.50003719329834
    4. '   ' → logprob: -11.62503719329834
    5. ')return' → logprob: -12.37503719329834
    6. ')n' → logprob: -13.75003719329834
    7. '<|end|>' → logprob: -14.62503719329834
    8. '')' → logprob: -15.25003719329834
    9. '```' → logprob: -15.50003719329834
    10. '}' → logprob: -15.75003719329834

Token 72: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010603943839669228
    2. '    
' → logprob: -4.760603904724121
    3. 'return' → logprob: -6.885603904724121
    4. ' return' → logprob: -7.885603904724121
    5. '<|end|>' → logprob: -8.385603904724121
    6. '	return' → logprob: -8.760603904724121
    7. '```' → logprob: -10.010603904724121
    8. '  
' → logprob: -10.510603904724121
    9. '   
' → logprob: -10.885603904724121
    10. ' 
' → logprob: -11.135603904724121

Token 73: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06442037969827652
    2. 'return' (adapté à ' return') → logprob: -2.814420461654663
    3. ' return' → logprob: -6.189420223236084
    4. '
' → logprob: -8.814420700073242
    5. '    
' → logprob: -9.564420700073242
    6. ' ' → logprob: -9.689420700073242
    7. '  ' → logprob: -10.189420700073242
    8. '	return' → logprob: -10.439420700073242
    9. ':return' → logprob: -10.564420700073242
    10. '   
' → logprob: -12.814420700073242

Token 74: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03804757073521614
    2. ' dp' → logprob: -3.2880475521087646
    3. '(dp' → logprob: -12.163047790527344
    4. '	dp' → logprob: -14.288047790527344
    5. ' ' → logprob: -16.288047790527344
    6. 'd' → logprob: -16.788047790527344
    7. '_dp' → logprob: -17.663047790527344
    8. '.dp' → logprob: -18.538047790527344
    9. '   ' → logprob: -18.788047790527344
    10. ' ' → logprob: -19.038047790527344

Token 75: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00012475410767365247
    2. '[' → logprob: -9.00012493133545
    3. 'n' → logprob: -14.00012493133545
    4. '[N' → logprob: -15.62512493133545
    5. '[end' → logprob: -16.375123977661133
    6. '<|end|>' → logprob: -17.000123977661133
    7. '```' → logprob: -17.625123977661133
    8. '[
' → logprob: -17.750123977661133
    9. '	n' → logprob: -18.375123977661133
    10. ' [' → logprob: -18.375123977661133

Token 76: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7330323457717896
    2. '<|end|>' → logprob: -1.3580323457717896
    3. '}' → logprob: -1.6080323457717896
    4. ']' → logprob: -2.8580322265625
    5. '<|end|>' → logprob: -5.7330322265625
    6. '   ' → logprob: -7.1080322265625
    7. ')return' → logprob: -8.7330322265625
    8. '```' → logprob: -8.8580322265625
    9. '
' → logprob: -8.9830322265625
    10. ')
' → logprob: -10.1080322265625

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0960584208369255
    2. 'else' → logprob: -3.7210583686828613
    3. ')' → logprob: -3.9710583686828613
    4. '    
' → logprob: -4.221058368682861
    5. 'n' → logprob: -4.471058368682861
    6. '<|end|>' → logprob: -5.221058368682861
    7. 'return' → logprob: -5.721058368682861
    8. '  
' → logprob: -5.971058368682861
    9. 'print' → logprob: -6.096058368682861
    10. ' else' → logprob: -6.471058368682861

Token 78: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1731802374124527
    2. ' else' → logprob: -2.298180341720581
    3. '   ' → logprob: -3.423180341720581
    4. 'n' → logprob: -4.173180103302002
    5. 'return' → logprob: -5.173180103302002
    6. ' ' → logprob: -5.923180103302002
    7. ')' → logprob: -7.173180103302002
    8. '  ' → logprob: -8.29818058013916
    9. '    
' → logprob: -8.29818058013916
    10. ' return' → logprob: -8.67318058013916

Token 79: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042776837944984436
    2. '   ' → logprob: -4.042777061462402
    3. ':' → logprob: -4.417777061462402
    4. ':return' → logprob: -5.042777061462402
    5. ' return' → logprob: -6.292777061462402
    6. '    ' → logprob: -6.292777061462402
    7. '<|end|>' → logprob: -7.292777061462402
    8. 'return' → logprob: -7.292777061462402
    9. '      ' → logprob: -8.417777061462402
    10. '     ' → logprob: -8.792777061462402

Token 80: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3871552646160126
    2. ' dp' → logprob: -1.137155294418335
    3. 'return' → logprob: -8.387155532836914
    4. ' return' → logprob: -10.637155532836914
    5. '   ' → logprob: -11.387155532836914
    6. '(dp' → logprob: -11.762155532836914
    7. '	dp' → logprob: -11.887155532836914
    8. '    ' → logprob: -12.137155532836914
    9. '_dp' → logprob: -14.512155532836914
    10. ' ' → logprob: -15.387155532836914

Token 81: ' return' (ID: 622)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08711451292037964
    2. 'return' (adapté à ' return') → logprob: -2.5871145725250244
    3. ' dp' → logprob: -4.837114334106445
    4. ' return' → logprob: -8.337114334106445
    5. '(dp' → logprob: -11.212114334106445
    6. 'd' → logprob: -13.462114334106445
    7. '	dp' → logprob: -13.462114334106445
    8. '    ' → logprob: -13.712114334106445
    9. '   ' → logprob: -13.837114334106445
    10. ' ' → logprob: -13.962114334106445

Token 82: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1269332468509674
    2. ' dp' → logprob: -2.1269333362579346
    3. '(dp' → logprob: -12.251933097839355
    4. '	dp' → logprob: -15.001933097839355
    5. '_dp' → logprob: -17.251934051513672
    6. ' ' → logprob: -17.251934051513672
    7. 'd' → logprob: -19.251934051513672
    8. '.dp' → logprob: -19.626934051513672
    9. ' ' → logprob: -19.751934051513672
    10. 'dpi' → logprob: -22.626934051513672

Token 83: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.3485974073410034
    2. '[' → logprob: -1.2235974073410034
    3. '[N' → logprob: -9.098597526550293
    4. ']' → logprob: -11.723597526550293
    5. '[end' → logprob: -11.848597526550293
    6. '[]' → logprob: -12.473597526550293
    7. '<|end|>' → logprob: -12.598597526550293
    8. '```' → logprob: -12.973597526550293
    9. ')' → logprob: -13.098597526550293
    10. '[s' → logprob: -13.348597526550293

Token 84: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06245037540793419
    2. ']' → logprob: -2.812450408935547
    3. '}' → logprob: -7.812450408935547
    4. '[' → logprob: -9.687450408935547
    5. ')]' → logprob: -13.187450408935547
    6. '   ' → logprob: -13.312450408935547
    7. '])' → logprob: -13.312450408935547
    8. ' )' → logprob: -13.312450408935547
    9. '）' → logprob: -13.437450408935547
    10. ')}' → logprob: -13.562450408935547

Token 85: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03887143358588219
    2. 'make' → logprob: -4.6638712882995605
    3. 'n' → logprob: -4.9138712882995605
    4. 'p' → logprob: -5.4138712882995605
    5. 'f' → logprob: -5.7888712882995605
    6. '\' → logprob: -6.2888712882995605
    7. '
' → logprob: -6.4138712882995605
    8. 'result' → logprob: -6.4138712882995605
    9. '(' → logprob: -6.6638712882995605
    10. '\n' → logprob: -6.7888712882995605

Token 86: '(make' (ID: 73860)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009327789884991944
    2. '(make' → logprob: -7.000932693481445
    3. '(dp' → logprob: -11.500932693481445
    4. '('' → logprob: -11.875932693481445
    5. '(m' → logprob: -14.000932693481445
    6. '(
' → logprob: -14.250932693481445
    7. '()' → logprob: -14.625932693481445
    8. '(f' → logprob: -14.750932693481445
    9. 'make' → logprob: -14.875932693481445
    10. '("("' → logprob: -15.000932693481445

Token 87: 'fib' (ID: 138552)
  Prédit: 'fib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fib' → logprob: -0.00014025058771949261
    2. 'f' → logprob: -8.875140190124512
    3. 'fb' → logprob: -15.000140190124512
    4. 'fab' → logprob: -16.750141143798828
    5. ' fib' → logprob: -17.000141143798828
    6. 'fi' → logprob: -17.375141143798828
    7. 'fiber' → logprob: -18.125141143798828
    8. 'ib' → logprob: -18.500141143798828
    9. 'ф' → logprob: -19.375141143798828
    10. 'Fib' → logprob: -19.750141143798828

Token 88: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5760912895202637
    2. '(' → logprob: -0.8260912895202637
    3. '(n' → logprob: -8.826091766357422
    4. ')' → logprob: -13.076091766357422
    5. '(`' → logprob: -13.576091766357422
    6. '((' → logprob: -14.701091766357422
    7. '(
' → logprob: -14.951091766357422
    8. '(

' → logprob: -14.951091766357422
    9. '('' → logprob: -16.201091766357422
    10. '(int' → logprob: -16.951091766357422

Token 89: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048591118305921555
    2. '))' → logprob: -3.048591136932373
    3. ' )' → logprob: -12.923590660095215
    4. ')
' → logprob: -14.173590660095215
    5. ')))' → logprob: -15.798590660095215
    6. ')**' → logprob: -16.04859161376953
    7. ')`' → logprob: -17.04859161376953
    8. '))
' → logprob: -17.04859161376953
    9. ')")' → logprob: -17.04859161376953
    10. ')}' → logprob: -17.29859161376953


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 87
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 47.13%
Précision adaptée (1ère position): 48.28%
Précision (top 10): 86.21%
================================================================================
