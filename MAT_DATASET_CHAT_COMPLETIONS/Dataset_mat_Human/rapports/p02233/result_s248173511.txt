================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())

F = [0] * (n + 1)

F[0] = 1
F[1] = 1

for i in range(2, len(F)):
    F[i] = F[i - 1] + F[i - 2]

print(F[n])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001601539261173457
    2. '(
' → logprob: -10.125160217285156
    3. '(n' → logprob: -10.250160217285156
    4. ''' → logprob: -10.625160217285156
    5. '```' → logprob: -11.000160217285156
    6. '('' → logprob: -11.375160217285156
    7. '`' → logprob: -11.500160217285156
    8. '("("' → logprob: -12.250160217285156
    9. '(input' → logprob: -12.750160217285156
    10. ')' → logprob: -12.750160217285156

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13287097215652466
    2. ')' → logprob: -2.13287091255188
    3. '()' → logprob: -5.382871150970459
    4. '())' → logprob: -7.382871150970459
    5. '(
' → logprob: -8.1328706741333
    6. '```' → logprob: -9.8828706741333
    7. '(

' → logprob: -10.2578706741333
    8. '('' → logprob: -10.3828706741333
    9. ''' → logprob: -10.6328706741333
    10. '(n' → logprob: -10.7578706741333

Token 5: 'F' (ID: 37)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21271561086177826
    2. 'for' → logprob: -2.2127156257629395
    3. 'i' → logprob: -2.5877156257629395
    4. 's' → logprob: -5.3377156257629395
    5. 'f' → logprob: -7.3377156257629395
    6. ' if' → logprob: -7.9627156257629395
    7. 'x' → logprob: -8.337715148925781
    8. '#' → logprob: -9.087715148925781
    9. '`' → logprob: -9.337715148925781
    10. '*' → logprob: -9.337715148925781

Token 6: ' =' (ID: 314)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0017793069127947092
    2. 'a' → logprob: -7.376779079437256
    3. 'or' → logprob: -7.626779079437256
    4. 'i' → logprob: -8.626779556274414
    5. '#' → logprob: -9.251779556274414
    6. '=' → logprob: -9.251779556274414
    7. '(' → logprob: -10.126779556274414
    8. '.' → logprob: -10.376779556274414
    9. '-' → logprob: -10.876779556274414
    10. 'u' → logprob: -11.001779556274414

Token 7: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.35404568910598755
    2. ' ' → logprob: -2.2290456295013428
    3. ' []' → logprob: -2.6040456295013428
    4. 'n' → logprob: -3.2290456295013428
    5. '[' → logprob: -3.6040456295013428
    6. '[n' → logprob: -3.8540456295013428
    7. '1' → logprob: -4.354045867919922
    8. ' n' → logprob: -4.854045867919922
    9. '[]' → logprob: -5.604045867919922
    10. '[int' → logprob: -6.604045867919922

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017231269157491624
    2. ' ' → logprob: -9.62517261505127
    3. '1' → logprob: -9.75017261505127
    4. ']' → logprob: -11.12517261505127
    5. 'int' → logprob: -11.37517261505127
    6. 'n' → logprob: -11.50017261505127
    7. 'i' → logprob: -12.62517261505127
    8. '   ' → logprob: -12.75017261505127
    9. 'False' → logprob: -13.12517261505127
    10. ')' → logprob: -14.25017261505127

Token 9: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1557481437921524
    2. ',' → logprob: -2.030748128890991
    3. ']*' → logprob: -4.53074836730957
    4. ' for' → logprob: -6.90574836730957
    5. ' ]' → logprob: -6.90574836730957
    6. ']*(' → logprob: -8.78074836730957
    7. ']+' → logprob: -11.15574836730957
    8. ')' → logprob: -11.28074836730957
    9. ' ,' → logprob: -11.90574836730957
    10. ',
' → logprob: -12.53074836730957

Token 10: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003124598413705826
    2. ' ,' → logprob: -6.128124713897705
    3. ',
' → logprob: -7.378124713897705
    4. ']' → logprob: -8.628124237060547
    5. ' ' → logprob: -10.003124237060547
    6. ',n' → logprob: -10.628124237060547
    7. ' ]' → logprob: -10.753124237060547
    8. ')' → logprob: -11.253124237060547
    9. '0' → logprob: -11.878124237060547
    10. '(' → logprob: -12.503124237060547

Token 11: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0020629495847970247
    2. '(' → logprob: -6.627062797546387
    3. ' (' → logprob: -7.377062797546387
    4. 'n' → logprob: -9.127062797546387
    5. '100' → logprob: -14.127062797546387
    6. ' n' → logprob: -14.502062797546387
    7. ' ' → logprob: -14.877062797546387
    8. '((' → logprob: -15.002062797546387
    9. '(max' → logprob: -15.752062797546387
    10. '10' → logprob: -15.877062797546387

Token 12: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007154120248742402
    2. ' n' → logprob: -7.250715255737305
    3. '(n' → logprob: -12.250715255737305
    4. ')n' → logprob: -15.000715255737305
    5. ' ' → logprob: -16.000715255737305
    6. ')' → logprob: -16.000715255737305
    7. '   ' → logprob: -17.250715255737305
    8. ' (' → logprob: -17.375715255737305
    9. '	n' → logprob: -18.500715255737305
    10. '(' → logprob: -18.875715255737305

Token 13: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.022484278306365013
    2. ' +' → logprob: -3.897484302520752
    3. ')' → logprob: -6.272484302520752
    4. ' )' → logprob: -10.522483825683594
    5. '+)' → logprob: -10.647483825683594
    6. ' ' → logprob: -14.772483825683594
    7. '+
' → logprob: -14.772483825683594
    8. '1' → logprob: -15.022483825683594
    9. '-' → logprob: -15.397483825683594
    10. '>' → logprob: -15.647483825683594

Token 14: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002388495020568371
    2. ' ' → logprob: -6.1273884773254395
    3. '2' → logprob: -8.502388954162598
    4. '```' → logprob: -16.25238800048828
    5. ' ' → logprob: -16.81488800048828
    6. '  ' → logprob: -16.81488800048828
    7. ')' → logprob: -17.00238800048828
    8. '   ' → logprob: -17.18988800048828
    9. '+' → logprob: -17.31488800048828
    10. '3' → logprob: -17.56488800048828

Token 15: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026860725483857095
    2. '2' → logprob: -8.250268936157227
    3. ' ' → logprob: -11.875268936157227
    4. '   ' → logprob: -16.875268936157227
    5. '```' → logprob: -16.937768936157227
    6. '  ' → logprob: -17.250268936157227
    7. '+' → logprob: -17.562768936157227
    8. '１' → logprob: -17.625268936157227
    9. '{' → logprob: -18.250268936157227
    10. '۱' → logprob: -18.625268936157227

Token 16: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -14.250001907348633
    3. ')
' → logprob: -15.000001907348633
    4. '`)' → logprob: -15.125001907348633
    5. ']' → logprob: -16.125001907348633
    6. '))' → logprob: -16.375001907348633
    7. ')`' → logprob: -16.375001907348633
    8. '')' → logprob: -17.000001907348633
    9. '```' → logprob: -17.000001907348633
    10. '）' → logprob: -17.125001907348633

Token 17: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.030259260907769203
    2. 'for' → logprob: -3.530259370803833
    3. '
' → logprob: -8.155259132385254
    4. 'if' → logprob: -9.655259132385254
    5. ' for' → logprob: -9.655259132385254
    6. '```' → logprob: -9.780259132385254
    7. ' F' → logprob: -11.155259132385254
    8. '``' → logprob: -11.655259132385254
    9. 'i' → logprob: -12.780259132385254
    10. '
' → logprob: -13.030259132385254

Token 18: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014574972447007895
    2. '[]' → logprob: -7.876457691192627
    3. '[:]' → logprob: -8.251457214355469
    4. '[n' → logprob: -8.376457214355469
    5. '\[' → logprob: -8.501457214355469
    6. '<|end|>' → logprob: -9.126457214355469
    7. '```' → logprob: -9.376457214355469
    8. ']' → logprob: -9.876457214355469
    9. '[user' → logprob: -11.251457214355469
    10. '[
' → logprob: -11.251457214355469

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005270634312182665
    2. '1' → logprob: -5.255270481109619
    3. ' ' → logprob: -10.505270957946777
    4. '2' → logprob: -11.755270957946777
    5. ']' → logprob: -13.630270957946777
    6. ')' → logprob: -14.880270957946777
    7. '-' → logprob: -17.00527000427246
    8. '۰' → logprob: -17.50527000427246
    9. ' ]' → logprob: -18.00527000427246
    10. '])' → logprob: -18.19277000427246

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003209680551663041
    2. ' ]' → logprob: -5.753209590911865
    3. ']=' → logprob: -10.628210067749023
    4. ')' → logprob: -12.503210067749023
    5. ')]' → logprob: -13.378210067749023
    6. '`]' → logprob: -13.878210067749023
    7. '=' → logprob: -14.878210067749023
    8. ']==' → logprob: -15.003210067749023
    9. ']
' → logprob: -15.378210067749023
    10. ' )' → logprob: -16.503210067749023

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41851362586021423
    2. '=' → logprob: -1.2935136556625366
    3. ' ' → logprob: -2.793513536453247
    4. '<|end|>' → logprob: -5.418513774871826
    5. ',' → logprob: -7.043513774871826
    6. ' ,' → logprob: -8.043513298034668
    7. ' ==' → logprob: -8.168513298034668
    8. ' +=' → logprob: -8.918513298034668
    9. '  ' → logprob: -9.668513298034668
    10. '0' → logprob: -9.918513298034668

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001713974168524146
    2. '1' → logprob: -6.376713752746582
    3. ' ' → logprob: -11.376713752746582
    4. 'F' → logprob: -14.876713752746582
    5. '01' → logprob: -16.8767147064209
    6. '۰' → logprob: -17.6267147064209
    7. '   ' → logprob: -18.2517147064209
    8. '-' → logprob: -18.2517147064209
    9. '```' → logprob: -18.4392147064209
    10. '[' → logprob: -18.7517147064209

Token 23: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002807963639497757
    2. '1' → logprob: -5.877808094024658
    3. 'F' → logprob: -13.1278076171875
    4. ' ' → logprob: -13.8778076171875
    5. '01' → logprob: -16.7528076171875
    6. '-' → logprob: -17.2528076171875
    7. '2' → logprob: -17.3153076171875
    8. '[' → logprob: -17.6903076171875
    9. '۰' → logprob: -17.9403076171875
    10. '00' → logprob: -17.9403076171875

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12459860742092133
    2. '\n' → logprob: -2.374598503112793
    3. '
' → logprob: -4.749598503112793
    4. '' → logprob: -5.374598503112793
    5. ' 
' → logprob: -5.749598503112793
    6. 'F' → logprob: -6.624598503112793
    7. '```' → logprob: -6.749598503112793
    8. '  
' → logprob: -6.874598503112793
    9. 'for' → logprob: -6.999598503112793
    10. ' for' → logprob: -6.999598503112793

Token 25: 'F' (ID: 37)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1584947109222412
    2. 'for' → logprob: -2.158494710922241
    3. ' for' → logprob: -3.908494710922241
    4. '\n' → logprob: -5.15849494934082
    5. 'F' → logprob: -6.53349494934082
    6. '
' → logprob: -6.78349494934082
    7. '' → logprob: -7.03349494934082
    8. ' 
' → logprob: -7.53349494934082
    9. '<|end|>' → logprob: -7.65849494934082
    10. '```' → logprob: -8.40849494934082

Token 26: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.4121114822482923e-06
    2. '\[' → logprob: -13.375003814697266
    3. '[i' → logprob: -14.750003814697266
    4. '[n' → logprob: -14.875003814697266
    5. '1' → logprob: -15.750003814697266
    6. '[...]' → logprob: -15.875003814697266
    7. '[
' → logprob: -15.875003814697266
    8. '[]' → logprob: -16.000003814697266
    9. ' [' → logprob: -16.250003814697266
    10. '```' → logprob: -16.375003814697266

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.702754474943504e-05
    2. '0' → logprob: -10.50003719329834
    3. ' ' → logprob: -11.62503719329834
    4. ']' → logprob: -14.75003719329834
    5. ')' → logprob: -17.375036239624023
    6. '-' → logprob: -17.437536239624023
    7. '2' → logprob: -17.937536239624023
    8. '```' → logprob: -18.187536239624023
    9. 'i' → logprob: -18.625036239624023
    10. '   ' → logprob: -18.687536239624023

Token 28: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014846124686300755
    2. ' ]' → logprob: -4.764846324920654
    3. ')' → logprob: -5.264846324920654
    4. '=' → logprob: -7.264846324920654
    5. ' =' → logprob: -8.639845848083496
    6. ' )' → logprob: -8.889845848083496
    7. ' ' → logprob: -11.014845848083496
    8. ']=' → logprob: -12.014845848083496
    9. '}' → logprob: -13.514845848083496
    10. '']' → logprob: -13.764845848083496

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759539604187012
    2. '=' → logprob: -0.8259539604187012
    3. ' ' → logprob: -11.57595443725586
    4. ' +=' → logprob: -12.82595443725586
    5. ' *=' → logprob: -13.70095443725586
    6. '+=' → logprob: -15.57595443725586
    7. ' =
' → logprob: -16.20095443725586
    8. ' |=' → logprob: -16.20095443725586
    9. ',' → logprob: -16.32595443725586
    10. '=

' → logprob: -16.32595443725586

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004908377304673195
    2. ' ' → logprob: -7.625490665435791
    3. '0' → logprob: -13.12549114227295
    4. 'n' → logprob: -14.93799114227295
    5. '   ' → logprob: -15.75049114227295
    6. '2' → logprob: -16.562990188598633
    7. '```' → logprob: -17.500490188598633
    8. '  ' → logprob: -17.625490188598633
    9. 'F' → logprob: -17.687990188598633
    10. '`' → logprob: -17.875490188598633

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. '0' → logprob: -13.125003814697266
    3. ' ' → logprob: -13.500003814697266
    4. '2' → logprob: -16.125003814697266
    5. 'n' → logprob: -16.937503814697266
    6. '```' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.750003814697266
    8. 'F' → logprob: -17.875003814697266
    9. '-' → logprob: -18.062503814697266
    10. '01' → logprob: -18.687503814697266

Token 32: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8131271600723267
    2. 'for' → logprob: -0.9381271600723267
    3. ' for' → logprob: -1.8131271600723267
    4. '```' → logprob: -6.688127040863037
    5. '\n' → logprob: -7.938127040863037
    6. '

' → logprob: -9.063127517700195
    7. '<|end|>' → logprob: -9.063127517700195
    8. 'if' → logprob: -9.688127517700195
    9. '	for' → logprob: -10.188127517700195
    10. '
' → logprob: -10.438127517700195

Token 33: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011393846943974495
    2. '
' → logprob: -7.501139163970947
    3. ' for' → logprob: -7.626139163970947
    4. '\n' → logprob: -9.626139640808105
    5. '```' → logprob: -10.626139640808105
    6. 'if' → logprob: -12.876139640808105
    7. 'i' → logprob: -13.376139640808105
    8. '	for' → logprob: -14.251139640808105
    9. '' → logprob: -14.376139640808105
    10. 'n' → logprob: -14.626139640808105

Token 34: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20349366962909698
    2. ' ' → logprob: -1.7034937143325806
    3. 'i' → logprob: -6.203493595123291
    4. ' _' → logprob: -10.57849407196045
    5. '  ' → logprob: -11.32849407196045
    6. '_' → logprob: -12.20349407196045
    7. ' ‌' → logprob: -12.32849407196045
    8. ' ' → logprob: -13.07849407196045
    9. ' )' → logprob: -13.70349407196045
    10. ' space' → logprob: -13.70349407196045

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014768489636480808
    2. ' ' → logprob: -4.264768600463867
    3. 'in' → logprob: -7.764768600463867
    4. ' i' → logprob: -8.764768600463867
    5. '  ' → logprob: -11.889768600463867
    6. '	in' → logprob: -12.389768600463867
    7. ' =' → logprob: -12.764768600463867
    8. '=' → logprob: -13.639768600463867
    9. ')' → logprob: -13.764768600463867
    10. ' space' → logprob: -13.889768600463867

Token 36: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011058438569307327
    2. 'range' → logprob: -4.511058330535889
    3. ' ' → logprob: -12.011058807373047
    4. '2' → logprob: -12.386058807373047
    5. '	range' → logprob: -15.386058807373047
    6. '(range' → logprob: -16.261058807373047
    7. ' xrange' → logprob: -17.511058807373047
    8. '  ' → logprob: -18.761058807373047
    9. '.range' → logprob: -19.511058807373047
    10. 'Range' → logprob: -19.761058807373047

Token 37: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007980733062140644
    2. '2' → logprob: -7.250798225402832
    3. ' (' → logprob: -9.625798225402832
    4. ' ' → logprob: -10.750798225402832
    5. '(
' → logprob: -14.500798225402832
    6. '```' → logprob: -17.125797271728516
    7. '(i' → logprob: -17.375797271728516
    8. '   ' → logprob: -17.750797271728516
    9. ')' → logprob: -18.000797271728516
    10. '  ' → logprob: -18.625797271728516

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. ')' → logprob: -17.37506675720215
    4. '   ' → logprob: -17.50006675720215
    5. '  ' → logprob: -17.87506675720215
    6. '۲' → logprob: -17.87506675720215
    7. '２' → logprob: -18.75006675720215
    8. '(' → logprob: -19.12506675720215
    9. '```' → logprob: -19.25006675720215
    10. '3' → logprob: -19.37506675720215

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12993566691875458
    2. ')' → logprob: -3.0049357414245605
    3. ',n' → logprob: -3.5049357414245605
    4. ' ,' → logprob: -3.6299357414245605
    5. ' )' → logprob: -5.2549357414245605
    6. ' ' → logprob: -5.6299357414245605
    7. '):' → logprob: -6.2549357414245605
    8. ' n' → logprob: -6.2549357414245605
    9. ' ):' → logprob: -6.7549357414245605
    10. '(n' → logprob: -6.8799357414245605

Token 40: ' len' (ID: 4631)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12692831456661224
    2. 'n' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.626928329467773
    4. ')' → logprob: -17.001928329467773
    5. '	n' → logprob: -17.001928329467773
    6. ')n' → logprob: -17.751928329467773
    7. ' ' → logprob: -18.626928329467773
    8. ' 
' → logprob: -19.251928329467773
    9. '```' → logprob: -19.251928329467773
    10. ' )' → logprob: -19.376928329467773

Token 41: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.0009118211455643177
    2. '(' → logprob: -7.000911712646484
    3. ')' → logprob: -16.500911712646484
    4. ' (' → logprob: -17.000911712646484
    5. '(
' → logprob: -17.375911712646484
    6. '(A' → logprob: -17.625911712646484
    7. 'F' → logprob: -17.750911712646484
    8. '(f' → logprob: -18.000911712646484
    9. '(`' → logprob: -18.375911712646484
    10. '(S' → logprob: -18.875911712646484

Token 42: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027502302080392838
    2. ')' → logprob: -3.9025022983551025
    3. ')):' → logprob: -5.027502536773682
    4. '))' → logprob: -8.277502059936523
    5. '):
' → logprob: -9.402502059936523
    6. ':' → logprob: -10.527502059936523
    7. ' ):' → logprob: -11.652502059936523
    8. ')):
' → logprob: -12.402502059936523
    9. ']):' → logprob: -13.777502059936523
    10. ' ' → logprob: -14.152502059936523

Token 43: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4875836968421936
    2. ' F' → logprob: -1.7375836372375488
    3. 'F' → logprob: -2.612583637237549
    4. '   ' → logprob: -2.737583637237549
    5. '    ' → logprob: -3.487583637237549
    6. ' 
' → logprob: -3.862583637237549
    7. '    
' → logprob: -5.112583637237549
    8. '  ' → logprob: -5.612583637237549
    9. '     
' → logprob: -5.862583637237549
    10. ' i' → logprob: -6.862583637237549

Token 44: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -0.0027459117118269205
    2. ' F' → logprob: -6.127746105194092
    3. '   ' → logprob: -7.502746105194092
    4. '	F' → logprob: -12.252745628356934
    5. ' ' → logprob: -13.627745628356934
    6. '    ' → logprob: -14.377745628356934
    7. '  ' → logprob: -14.377745628356934
    8. 'i' → logprob: -14.752745628356934
    9. '    
' → logprob: -15.252745628356934
    10. '`' → logprob: -15.252745628356934

Token 45: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008619419299066067
    2. '[' → logprob: -4.75861930847168
    3. '[F' → logprob: -13.00861930847168
    4. '[I' → logprob: -13.50861930847168
    5. '[n' → logprob: -15.25861930847168
    6. '\[' → logprob: -15.25861930847168
    7. '[...]' → logprob: -16.25861930847168
    8. '[e' → logprob: -16.38361930847168
    9. '[j' → logprob: -16.38361930847168
    10. '[f' → logprob: -16.75861930847168

Token 46: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10725412517786026
    2. '=' → logprob: -2.4822540283203125
    3. ' =' → logprob: -4.3572540283203125
    4. ']=' → logprob: -5.9822540283203125
    5. ' ]' → logprob: -6.3572540283203125
    6. ')' → logprob: -6.8572540283203125
    7. ')=' → logprob: -11.607254028320312
    8. ' ' → logprob: -12.357254028320312
    9. ' )' → logprob: -12.357254028320312
    10. ')]' → logprob: -13.607254028320312

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692904472351074
    2. ' =' → logprob: -2.1269290447235107
    3. ' +=' → logprob: -14.75192928314209
    4. '+=' → logprob: -14.87692928314209
    5. ' ' → logprob: -16.501928329467773
    6. '=}' → logprob: -17.126928329467773
    7. '=

' → logprob: -17.126928329467773
    8. '＝' → logprob: -18.001928329467773
    9. '.=' → logprob: -18.376928329467773
    10. ' =)' → logprob: -18.501928329467773

Token 48: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0011726059019565582
    2. ' F' → logprob: -6.7511725425720215
    3. '(F' → logprob: -13.75117301940918
    4. '   ' → logprob: -14.37617301940918
    5. ' ' → logprob: -15.00117301940918
    6. '	F' → logprob: -15.37617301940918
    7. '(' → logprob: -15.75117301940918
    8. '  ' → logprob: -17.50117301940918
    9. ' ' → logprob: -17.75117301940918
    10. ' (' → logprob: -18.50117301940918

Token 49: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. 'i' → logprob: -13.12500286102295
    3. '[' → logprob: -14.37500286102295
    4. '[I' → logprob: -15.50000286102295
    5. '[F' → logprob: -16.375003814697266
    6. '```' → logprob: -17.375003814697266
    7. '[-' → logprob: -17.750003814697266
    8. '\[' → logprob: -18.125003814697266
    9. 'F' → logprob: -18.750003814697266
    10. '[j' → logprob: -18.875003814697266

Token 50: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007366081699728966
    2. '[i' → logprob: -7.375736713409424
    3. ' -' → logprob: -9.375736236572266
    4. '[-' → logprob: -11.125736236572266
    5. ']' → logprob: -11.625736236572266
    6. '[' → logprob: -14.375736236572266
    7. '	' → logprob: -15.000736236572266
    8. '-i' → logprob: -16.000736236572266
    9. ' ' → logprob: -16.375736236572266
    10. '−' → logprob: -16.500736236572266

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012365375878289342
    2. '2' → logprob: -6.876236438751221
    3. ' ' → logprob: -8.501236915588379
    4. '   ' → logprob: -16.063735961914062
    5. '  ' → logprob: -16.313735961914062
    6. ' ' → logprob: -16.563735961914062
    7. ']' → logprob: -17.126235961914062
    8. '-' → logprob: -17.501235961914062
    9. '	' → logprob: -17.876235961914062
    10. '１' → logprob: -17.938735961914062

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009126556105911732
    2. '2' → logprob: -7.000912666320801
    3. ' ' → logprob: -13.8759126663208
    4. '   ' → logprob: -16.563411712646484
    5. '```' → logprob: -16.688411712646484
    6. '  ' → logprob: -17.563411712646484
    7. '１' → logprob: -17.625911712646484
    8. ']' → logprob: -17.688411712646484
    9. '۱' → logprob: -17.688411712646484
    10. '-' → logprob: -17.688411712646484

Token 53: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12693051993846893
    2. '+' → logprob: -2.1269304752349854
    3. ' ' → logprob: -14.126930236816406
    4. ')' → logprob: -14.251930236816406
    5. ' plus' → logprob: -14.626930236816406
    6. ']' → logprob: -16.001930236816406
    7. '*' → logprob: -16.251930236816406
    8. ' ' → logprob: -16.376930236816406
    9. '>' → logprob: -17.126930236816406
    10. '}' → logprob: -17.501930236816406

Token 54: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12692894041538239
    2. ' +' → logprob: -2.1269290447235107
    3. '*' → logprob: -15.00192928314209
    4. ' plus' → logprob: -15.12692928314209
    5. ' ' → logprob: -15.87692928314209
    6. '+
' → logprob: -16.876928329467773
    7. '＋' → logprob: -17.751928329467773
    8. 'plus' → logprob: -17.876928329467773
    9. ' ' → logprob: -18.001928329467773
    10. '```' → logprob: -18.126928329467773

Token 55: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.693148672580719
    2. ' F' → logprob: -0.693148672580719
    3. ' ' → logprob: -14.193148612976074
    4. ' ' → logprob: -14.568148612976074
    5. '	F' → logprob: -15.318148612976074
    6. '`' → logprob: -17.19314956665039
    7. '   ' → logprob: -17.56814956665039
    8. '_F' → logprob: -17.69314956665039
    9. '    ' → logprob: -17.81814956665039
    10. ''' → logprob: -18.31814956665039

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.676981345459353e-06
    2. 'i' → logprob: -12.250005722045898
    3. '[' → logprob: -14.000005722045898
    4. '[I' → logprob: -17.7500057220459
    5. '`' → logprob: -18.7500057220459
    6. '```' → logprob: -19.5000057220459
    7. ' [' → logprob: -19.6250057220459
    8. '   ' → logprob: -19.8750057220459
    9. '(i' → logprob: -19.8750057220459
    10. '	i' → logprob: -19.8750057220459

Token 57: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005937686190009117
    2. ' -' → logprob: -5.130937576293945
    3. '2' → logprob: -12.255937576293945
    4. ']' → logprob: -12.880937576293945
    5. '`' → logprob: -14.380937576293945
    6. ' ' → logprob: -14.505937576293945
    7. '	' → logprob: -15.755937576293945
    8. '–' → logprob: -16.005937576293945
    9. '"' → logprob: -16.505937576293945
    10. '−' → logprob: -16.630937576293945

Token 58: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.375012397766113
    3. '۲' → logprob: -15.250012397766113
    4. '22' → logprob: -16.687511444091797
    5. '२' → logprob: -16.750011444091797
    6. '```' → logprob: -17.000011444091797
    7. '２' → logprob: -17.187511444091797
    8. '212' → logprob: -17.625011444091797
    9. '٢' → logprob: -17.812511444091797
    10. '২' → logprob: -17.812511444091797

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.62500286102295
    3. '۲' → logprob: -14.62500286102295
    4. '22' → logprob: -15.18750286102295
    5. '२' → logprob: -15.93750286102295
    6. '212' → logprob: -16.625001907348633
    7. '٢' → logprob: -16.812501907348633
    8. '```' → logprob: -16.812501907348633
    9. '210' → logprob: -16.875001907348633
    10. '২' → logprob: -16.937501907348633

Token 60: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -16.250001907348633
    4. '}' → logprob: -17.000001907348633
    5. '```' → logprob: -17.250001907348633
    6. ']' → logprob: -17.500001907348633
    7. '<|end|>' → logprob: -17.875001907348633
    8. ')

' → logprob: -18.500001907348633
    9. '）' → logprob: -18.625001907348633
    10. '')' → logprob: -18.875001907348633

Token 61: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00014323067443910986
    2. 'for' → logprob: -9.500143051147461
    3. 'if' → logprob: -10.625143051147461
    4. 'n' → logprob: -11.000143051147461
    5. '```' → logprob: -12.125143051147461
    6. '
' → logprob: -12.250143051147461
    7. 'p' → logprob: -12.500143051147461
    8. '#' → logprob: -13.375143051147461
    9. 'prin' → logprob: -13.500143051147461
    10. '  
' → logprob: -13.500143051147461

Token 62: '(F' (ID: 12044)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5765262842178345
    2. '(F' → logprob: -0.8265262842178345
    3. '(f' → logprob: -7.951526165008545
    4. '("("' → logprob: -9.076526641845703
    5. '('' → logprob: -9.451526641845703
    6. '((' → logprob: -10.451526641845703
    7. '(
' → logprob: -13.326526641845703
    8. '([' → logprob: -13.451526641845703
    9. '(len' → logprob: -13.576526641845703
    10. '()' → logprob: -13.701526641845703

Token 63: '[n' (ID: 15433)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4431973695755005
    2. '[n' → logprob: -1.1931973695755005
    3. '[-' → logprob: -3.193197250366211
    4. '])' → logprob: -5.318197250366211
    5. '[' → logprob: -5.943197250366211
    6. '-' → logprob: -5.943197250366211
    7. ']' → logprob: -6.318197250366211
    8. ')n' → logprob: -6.568197250366211
    9. '[i' → logprob: -9.068197250366211
    10. '))' → logprob: -9.193197250366211

Token 64: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133796155452728
    2. '])' → logprob: -1.3133796453475952
    3. '))' → logprob: -9.938379287719727
    4. ']' → logprob: -10.063379287719727
    5. '})' → logprob: -11.938379287719727
    6. '）' → logprob: -12.063379287719727
    7. ')]' → logprob: -12.313379287719727
    8. ')])' → logprob: -12.438379287719727
    9. ''])' → logprob: -12.438379287719727
    10. '"])' → logprob: -14.313379287719727


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 62
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 55
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 51.61%
Précision (top 10): 88.71%
================================================================================
