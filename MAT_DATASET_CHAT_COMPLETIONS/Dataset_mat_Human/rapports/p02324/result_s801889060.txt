================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:20:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#! /usr/bin/python

"""Chinese Postman Problem."""

import sys

f_i = sys.stdin

V, E = map(int, f_i.readline().split())

# adjacency matrix
no_edge = 14001

adj = [[no_edge] * V for i in range(V)]

for i in range(V):
    adj[i][i] = 0

odd_b = 0 # bit DP to record odd vertex

ans = 0

# acceptance of input
for l_i in f_i:
    s, t, d = map(int, l_i.split())
    t_d = min(d, adj[s][t])
    adj[s][t] = t_d
    adj[t][s] = t_d
    odd_b ^= 1 << s
    odd_b ^= 1 << t
    ans += d

# A function to check if the number of 1 is odd in binary notation
def odd_one(n):
    ans = 0
    while n:
        ans ^= (n & 1)
        n >>= 1
    return ans

import math

if odd_b:
    # Warshall???Floyd Algorithm
    for k in range(V):
        for i in range(V):
            for j in range(V):
                adj[i][j] = min(adj[i][j], adj[i][k] + adj[k][j])
                
    # Minimum weighted matching
    mw = [no_edge] * (odd_b + 1)
    mw[0] = 0
    digits = int(math.log2(odd_b)) + 1

    for b in range(odd_b):
        if odd_one(b):
            continue
        for i in range(0, digits):
            if not (b & (1 << i)):
                for j in range(i + 1, digits):
                    if not (b & (1 << j)):
                        t_b = b + (1 << i) + (1 << j)
                        if t_b == t_b & odd_b:
                            t_w = mw[t_b]
                            mw[t_b] = min(t_w, mw[b] + adj[i][j])

    # Output
    ans += mw[odd_b]
    print(ans)
else:
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!' (ID: 18666)
  → Token d'amorce (pas de prédiction)

Token 1: ' /' (ID: 820)
  → Token d'amorce (pas de prédiction)

Token 2: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 3: '/bin' (ID: 20950)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3869089186191559
    2. '/bin' → logprob: -1.1369088888168335
    3. '/b' → logprob: -10.261908531188965
    4. '/local' → logprob: -13.761908531188965
    5. '/env' → logprob: -14.261908531188965
    6. '/
' → logprob: -15.011908531188965
    7. 'bin' → logprob: -15.136908531188965
    8. 'b' → logprob: -15.136908531188965
    9. ' /' → logprob: -15.761908531188965
    10. '/bash' → logprob: -16.26190948486328

Token 4: '/python' (ID: 56900)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0120017658919096
    2. '/python' → logprob: -5.012001991271973
    3. '/env' → logprob: -5.262001991271973
    4. '/bash' → logprob: -10.137001991271973
    5. 'python' → logprob: -10.387001991271973
    6. '/bin' → logprob: -11.512001991271973
    7. '/b' → logprob: -13.387001991271973
    8. ' /' → logprob: -13.512001991271973
    9. 'env' → logprob: -13.637001991271973
    10. '/usr' → logprob: -13.762001991271973

Token 5: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2255062311887741
    2. ' 
' → logprob: -1.8505061864852905
    3. '  
' → logprob: -4.35050630569458
    4. '3' → logprob: -4.35050630569458
    5. '\' → logprob: -4.97550630569458
    6. '' → logprob: -5.72550630569458
    7. '```' → logprob: -6.10050630569458
    8. ' ' → logprob: -6.47550630569458
    9. ' \' → logprob: -6.85050630569458
    10. '   
' → logprob: -6.97550630569458

Token 6: '"""' (ID: 29376)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1812211573123932
    2. 'import' → logprob: -2.6812212467193604
    3. '3' → logprob: -3.5562212467193604
    4. ' 
' → logprob: -4.056221008300781
    5. '\' → logprob: -4.181221008300781
    6. '```' → logprob: -4.556221008300781
    7. '  
' → logprob: -5.306221008300781
    8. '-' → logprob: -5.431221008300781
    9. '' → logprob: -5.431221008300781
    10. '#!/' → logprob: -5.931221008300781

Token 7: 'Chinese' (ID: 73237)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9766002297401428
    2. '\n' → logprob: -0.9766002297401428
    3. 'import' → logprob: -2.226600170135498
    4. '"""' → logprob: -3.101600170135498
    5. '#!/' → logprob: -3.101600170135498
    6. '#!' → logprob: -3.851600170135498
    7. '
' → logprob: -5.351600170135498
    8. 'from' → logprob: -5.476600170135498
    9. 'f' → logprob: -5.851600170135498
    10. 'u' → logprob: -6.101600170135498

Token 8: ' Post' (ID: 5511)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.6201745867729187
    2. '3' → logprob: -1.6201746463775635
    3. ' text' → logprob: -2.3701746463775635
    4. '
' → logprob: -3.7451746463775635
    5. ' ' → logprob: -3.9951746463775635
    6. '```' → logprob: -4.120174407958984
    7. '_' → logprob: -4.745174407958984
    8. '#' → logprob: -4.745174407958984
    9. ' -*-' → logprob: -4.870174407958984
    10. ' """' → logprob: -4.870174407958984

Token 9: 'man' (ID: 2309)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.2572827935218811
    2. 'a' → logprob: -3.2572827339172363
    3. '```' → logprob: -3.2572827339172363
    4. 'man' → logprob: -3.3822827339172363
    5. 'ag' → logprob: -3.6322827339172363
    6. '#' → logprob: -3.7572827339172363
    7. '"""' → logprob: -4.507282733917236
    8. 'el' → logprob: -4.507282733917236
    9. 'ing' → logprob: -4.632282733917236
    10. 'fix' → logprob: -5.507282733917236

Token 10: ' Problem' (ID: 26113)
  Prédit: ' Problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Problem' → logprob: -0.022557249292731285
    2. 'Problem' → logprob: -3.897557258605957
    3. ' problem' → logprob: -6.272557258605957
    4. 'problem' → logprob: -9.647557258605957
    5. '"""' → logprob: -10.272557258605957
    6. '_problem' → logprob: -10.897557258605957
    7. ' Proble' → logprob: -12.522557258605957
    8. ''''' → logprob: -14.147557258605957
    9. ' ' → logprob: -14.397557258605957
    10. ' """' → logprob: -14.647557258605957

Token 11: '."""

' (ID: 68934)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.04616778343915939
    2. ' """' → logprob: -4.046167850494385
    3. ' Solver' → logprob: -4.421167850494385
    4. ' (' → logprob: -4.671167850494385
    5. ' solver' → logprob: -6.671167850494385
    6. '```' → logprob: -6.921167850494385
    7. '\n' → logprob: -7.296167850494385
    8. '.py' → logprob: -7.296167850494385
    9. 'Solver' → logprob: -7.671167850494385
    10. ''''' → logprob: -8.296167373657227

Token 12: 'import' (ID: 561)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.101044774055481
    2. ' ' → logprob: -1.226044774055481
    3. 'import' → logprob: -1.601044774055481
    4. '
' → logprob: -2.8510446548461914
    5. ' 

' → logprob: -3.1010446548461914
    6. 'from' → logprob: -3.7260446548461914
    7. '#' → logprob: -3.8510446548461914
    8. '  
' → logprob: -5.101044654846191
    9. '<|end|>' → logprob: -5.601044654846191
    10. 'def' → logprob: -5.851044654846191

Token 13: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.06358879059553146
    2. ' itertools' → logprob: -3.813588857650757
    3. ' math' → logprob: -4.563588619232178
    4. ' os' → logprob: -4.563588619232178
    5. ' network' → logprob: -4.563588619232178
    6. ' ' → logprob: -4.938588619232178
    7. ' collections' → logprob: -7.813588619232178
    8. ' ' → logprob: -8.063589096069336
    9. ' numpy' → logprob: -9.188589096069336
    10. ' space' → logprob: -9.313589096069336

Token 14: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 15: 'f' (ID: 69)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10967551916837692
    2. 'def' → logprob: -3.859675407409668
    3. 'from' → logprob: -4.109675407409668
    4. '
' → logprob: -4.234675407409668
    5. ' 
' → logprob: -4.484675407409668
    6. ' ' → logprob: -4.984675407409668
    7. ' 

' → logprob: -5.234675407409668
    8. '\' → logprob: -5.734675407409668
    9. '

' → logprob: -5.734675407409668
    10. '\n' → logprob: -5.984675407409668

Token 16: '_i' (ID: 10853)
  Prédit: 'rom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rom' → logprob: -0.0014354701852425933
    2. 'ro' → logprob: -6.626435279846191
    3. 'or' → logprob: -9.376435279846191
    4. 'r' → logprob: -10.751435279846191
    5. 'ile' → logprob: -13.376435279846191
    6. 'i' → logprob: -14.626435279846191
    7. 'romb' → logprob: -14.626435279846191
    8. 'orm' → logprob: -15.876435279846191
    9. 'ron' → logprob: -16.126436233520508
    10. 'rob' → logprob: -16.126436233520508

Token 17: ' =' (ID: 314)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.177544966340065
    2. 'l' → logprob: -2.0525450706481934
    3. 'n' → logprob: -3.5525450706481934
    4. 'lename' → logprob: -5.552545070648193
    5. 'les' → logprob: -6.677545070648193
    6. 'nd' → logprob: -8.302544593811035
    7. 'f' → logprob: -10.427544593811035
    8. 'll' → logprob: -10.427544593811035
    9. 'nf' → logprob: -10.677544593811035
    10. 'nt' → logprob: -10.677544593811035

Token 18: ' sys' (ID: 12228)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.6982622146606445
    2. ' open' → logprob: -0.9482622146606445
    3. ' sys' → logprob: -2.6982622146606445
    4. 'sys' → logprob: -3.0732622146606445
    5. ' ' → logprob: -7.3232622146606445
    6. 'input' → logprob: -8.948262214660645
    7. 'int' → logprob: -9.073262214660645
    8. '	open' → logprob: -9.073262214660645
    9. ' None' → logprob: -9.323262214660645
    10. ' input' → logprob: -9.823262214660645

Token 19: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.30452144145965576
    2. '.stdin' → logprob: -1.9295214414596558
    3. '.argv' → logprob: -2.1795215606689453
    4. '.stdout' → logprob: -6.304521560668945
    5. ' .' → logprob: -6.429521560668945
    6. '.input' → logprob: -8.429521560668945
    7. '.std' → logprob: -8.929521560668945
    8. '.path' → logprob: -9.054521560668945
    9. '.stderr' → logprob: -9.179521560668945
    10. '.exit' → logprob: -10.179521560668945

Token 20: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12124760448932648
    2. '.readline' → logprob: -2.6212475299835205
    3. '.read' → logprob: -3.4962475299835205
    4. '.' → logprob: -4.8712477684021
    5. 'nt' → logprob: -7.3712477684021
    6. 'nit' → logprob: -7.3712477684021
    7. '.readlines' → logprob: -7.4962477684021
    8. 't' → logprob: -7.6212477684021
    9. 'read' → logprob: -7.9962477684021
    10. '.n' → logprob: -9.121247291564941

Token 21: 'V' (ID: 53)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2882993817329407
    2. '.readline' → logprob: -1.413299322128296
    3. '.read' → logprob: -5.038299560546875
    4. '.readlines' → logprob: -8.163299560546875
    5. 'read' → logprob: -8.788299560546875
    6. '=' → logprob: -8.788299560546875
    7. '.write' → logprob: -11.288299560546875
    8. ' =' → logprob: -12.413299560546875
    9. ' readline' → logprob: -12.913299560546875
    10. '.]' → logprob: -13.038299560546875

Token 22: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1272992044687271
    2. ' =' → logprob: -2.1272993087768555
    3. 'ALUE' → logprob: -9.252299308776855
    4. ',' → logprob: -9.252299308776855
    5. '_' → logprob: -9.752299308776855
    6. 'AL' → logprob: -10.377299308776855
    7. 'al' → logprob: -10.877299308776855
    8. '=int' → logprob: -11.502299308776855
    9. '=[]' → logprob: -11.627299308776855
    10. '.' → logprob: -11.752299308776855

Token 23: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.6952381134033203
    2. ' E' → logprob: -0.6952381134033203
    3. ' ' → logprob: -6.32023811340332
    4. ' =' → logprob: -9.32023811340332
    5. 'f' → logprob: -10.19523811340332
    6. '  ' → logprob: -10.69523811340332
    7. '	E' → logprob: -10.82023811340332
    8. ' ' → logprob: -11.07023811340332
    9. '"E' → logprob: -11.88273811340332
    10. '    ' → logprob: -11.94523811340332

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2812041640281677
    2. '=' → logprob: -1.4062042236328125
    3. ' ' → logprob: -10.406204223632812
    4. ',' → logprob: -11.031204223632812
    5. ')' → logprob: -13.156204223632812
    6. ' ,' → logprob: -13.281204223632812
    7. '=input' → logprob: -14.531204223632812
    8. ' =",' → logprob: -15.156204223632812
    9. ' =
' → logprob: -15.281204223632812
    10. '=

' → logprob: -15.281204223632812

Token 25: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1648631989955902
    2. 'map' → logprob: -1.9148632287979126
    3. ' f' → logprob: -5.664863109588623
    4. 'f' → logprob: -7.164863109588623
    5. ' [' → logprob: -9.164863586425781
    6. ' ' → logprob: -9.414863586425781
    7. '[' → logprob: -9.539863586425781
    8. 'list' → logprob: -10.164863586425781
    9. ' list' → logprob: -10.164863586425781
    10. '(map' → logprob: -11.039863586425781

Token 26: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09803548455238342
    2. '(lambda' → logprob: -2.8480355739593506
    3. '(int' → logprob: -3.8480355739593506
    4. '<|end|>' → logprob: -4.5980353355407715
    5. '(str' → logprob: -6.0980353355407715
    6. '(f' → logprob: -7.4730353355407715
    7. '(
' → logprob: -8.72303581237793
    8. '(len' → logprob: -9.09803581237793
    9. '<|end|>' → logprob: -9.09803581237793
    10. '(V' → logprob: -9.34803581237793

Token 27: ',' (ID: 11)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.021759232506155968
    2. ')' → logprob: -4.646759033203125
    3. 'f' → logprob: -5.021759033203125
    4. '(' → logprob: -6.146759033203125
    5. ' f' → logprob: -6.521759033203125
    6. ',' → logprob: -6.896759033203125
    7. ',f' → logprob: -7.396759033203125
    8. '	f' → logprob: -9.646759033203125
    9. '(sys' → logprob: -11.771759033203125
    10. '()' → logprob: -12.271759033203125

Token 28: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.1271476298570633
    2. 'f' → logprob: -2.127147674560547
    3. ')' → logprob: -8.502147674560547
    4. ' )' → logprob: -11.377147674560547
    5. '	f' → logprob: -13.252147674560547
    6. ' ' → logprob: -13.502147674560547
    7. '(f' → logprob: -13.627147674560547
    8. ' ' → logprob: -15.877147674560547
    9. ' (' → logprob: -16.252147674560547
    10. '(' → logprob: -16.377147674560547

Token 29: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0003819332632701844
    2. '.readline' → logprob: -8.125381469726562
    3. '_' → logprob: -10.000381469726562
    4. '_.' → logprob: -11.000381469726562
    5. '_input' → logprob: -11.750381469726562
    6. '.read' → logprob: -12.625381469726562
    7. '._' → logprob: -13.125381469726562
    8. ')' → logprob: -13.125381469726562
    9. ' _' → logprob: -13.375381469726562
    10. '().' → logprob: -13.875381469726562

Token 30: '.readline' (ID: 74673)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6933676600456238
    2. '.readline' → logprob: -0.6933676600456238
    3. '.' → logprob: -8.693367958068848
    4. '()' → logprob: -10.818367958068848
    5. '.read' → logprob: -10.818367958068848
    6. ' ().' → logprob: -12.193367958068848
    7. ' readline' → logprob: -12.943367958068848
    8. ')' → logprob: -13.568367958068848
    9. ').' → logprob: -13.943367958068848
    10. '(' → logprob: -14.193367958068848

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011173540260642767
    2. '()' → logprob: -7.00111722946167
    3. '())' → logprob: -8.501117706298828
    4. ' ().' → logprob: -14.251117706298828
    5. '()))' → logprob: -14.376117706298828
    6. ')' → logprob: -14.626117706298828
    7. '(' → logprob: -15.251117706298828
    8. '()[' → logprob: -16.376117706298828
    9. ' ()' → logprob: -16.501117706298828
    10. '()
' → logprob: -16.626117706298828

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6938706636428833
    2. 'strip' → logprob: -0.6938706636428833
    3. 'rstrip' → logprob: -7.318870544433594
    4. ' strip' → logprob: -10.818870544433594
    5. ' split' → logprob: -10.818870544433594
    6. ')' → logprob: -11.193870544433594
    7. '(split' → logprob: -13.193870544433594
    8. ' ' → logprob: -13.318870544433594
    9. '()' → logprob: -14.068870544433594
    10. '(strip' → logprob: -14.443870544433594

Token 33: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7134117484092712
    2. '())' → logprob: -0.7134117484092712
    3. '()' → logprob: -4.213411808013916
    4. '))' → logprob: -5.588411808013916
    5. '()))' → logprob: -6.588411808013916
    6. '(' → logprob: -9.213411331176758
    7. '())
' → logprob: -11.338411331176758
    8. '('' → logprob: -11.713411331176758
    9. ' )' → logprob: -12.713411331176758
    10. ' ())' → logprob: -12.963411331176758

Token 34: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13568057119846344
    2. '<|end|>' → logprob: -2.885680675506592
    3. '\n' → logprob: -3.635680675506592
    4. '<|end|>' → logprob: -4.135680675506592
    5. ' 
' → logprob: -4.260680675506592
    6. ' ' → logprob: -6.135680675506592
    7. '  
' → logprob: -6.385680675506592
    8. 'v' → logprob: -6.510680675506592
    9. 'for' → logprob: -6.510680675506592
    10. ')' → logprob: -7.010680675506592

Token 35: ' adjacency' (ID: 177015)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6870889067649841
    2. ' edges' → logprob: -1.812088966369629
    3. 'graph' → logprob: -2.312088966369629
    4. ' vertices' → logprob: -2.687088966369629
    5. 'edges' → logprob: -3.187088966369629
    6. 'vertices' → logprob: -3.937088966369629
    7. ' adj' → logprob: -3.937088966369629
    8. ' f' → logprob: -4.187088966369629
    9. ' adjacency' → logprob: -4.437088966369629
    10. 'adj' → logprob: -4.812088966369629

Token 36: ' matrix' (ID: 12248)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.739960253238678
    2. '_' → logprob: -0.989960253238678
    3. '_matrix' → logprob: -2.489960193634033
    4. ' ' → logprob: -3.114960193634033
    5. ' =' → logprob: -4.114960193634033
    6. ' _' → logprob: -5.364960193634033
    7. ' matrix' → logprob: -6.739960193634033
    8. ' list' → logprob: -7.489960193634033
    9. '=' → logprob: -8.239960670471191
    10. '_lists' → logprob: -8.614960670471191

Token 37: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44498851895332336
    2. '<|end|>' → logprob: -2.069988489151001
    3. 'matrix' → logprob: -3.319988489151001
    4. '[' → logprob: -3.319988489151001
    5. '<|end|>' → logprob: -3.694988489151001
    6. 'a' → logprob: -3.819988489151001
    7. ' matrix' → logprob: -3.819988489151001
    8. 'm' → logprob: -3.944988489151001
    9. ' =' → logprob: -4.31998872756958
    10. ',' → logprob: -4.69498872756958

Token 38: 'no' (ID: 1750)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -1.2935987710952759
    2. ' matrix' → logprob: -1.9185987710952759
    3. 'adj' → logprob: -2.1685986518859863
    4. ' adj' → logprob: -2.5435986518859863
    5. ' graph' → logprob: -2.9185986518859863
    6. 'A' → logprob: -2.9185986518859863
    7. 'graph' → logprob: -3.1685986518859863
    8. ' A' → logprob: -3.2935986518859863
    9. ' adjacency' → logprob: -3.2935986518859863
    10. ' G' → logprob: -3.2935986518859863

Token 39: '_edge' (ID: 43226)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.14484485983848572
    2. 't' → logprob: -2.2698447704315186
    3. 'd' → logprob: -4.519845008850098
    4. 'ne' → logprob: -5.394845008850098
    5. 'r' → logprob: -5.644845008850098
    6. 'des' → logprob: -6.019845008850098
    7. 'e' → logprob: -6.519845008850098
    8. '_' → logprob: -6.769845008850098
    9. 'te' → logprob: -6.769845008850098
    10. 'w' → logprob: -6.769845008850098

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10330334305763245
    2. '=' → logprob: -2.3533034324645996
    3. 's' → logprob: -6.3533034324646
    4. ' ' → logprob: -7.7283034324646
    5. '_weight' → logprob: -8.353302955627441
    6. '_' → logprob: -8.603302955627441
    7. '_value' → logprob: -8.603302955627441
    8. '_cost' → logprob: -9.853302955627441
    9. '_val' → logprob: -9.978302955627441
    10. 'weight' → logprob: -10.228302955627441

Token 41: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.11775656789541245
    2. 'float' → logprob: -2.8677566051483154
    3. ' ' → logprob: -2.9927566051483154
    4. '10' → logprob: -5.992756366729736
    5. '0' → logprob: -7.492756366729736
    6. '999' → logprob: -7.617756366729736
    7. ' int' → logprob: -8.867756843566895
    8. ' -' → logprob: -9.117756843566895
    9. '100' → logprob: -9.242756843566895
    10. ' sys' → logprob: -9.492756843566895

Token 42: '140' (ID: 10165)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.7401342391967773
    2. 'float' → logprob: -0.7401342391967773
    3. ' ' → logprob: -3.7401342391967773
    4. '10' → logprob: -4.490134239196777
    5. '999' → logprob: -5.115134239196777
    6. '0' → logprob: -5.990134239196777
    7. ' sys' → logprob: -7.615134239196777
    8. '100' → logprob: -7.740134239196777
    9. ' -' → logprob: -7.990134239196777
    10. 'int' → logprob: -7.990134239196777

Token 43: '01' (ID: 2290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49574118852615356
    2. '000' → logprob: -0.9957411885261536
    3. '00' → logprob: -4.245741367340088
    4. '739' → logprob: -6.245741367340088
    5. '737' → logprob: -6.870741367340088
    6. '<|end|>' → logprob: -7.370741367340088
    7. '7' → logprob: -7.495741367340088
    8. '1' → logprob: -7.745741367340088
    9. '069' → logprob: -8.80824089050293
    10. '742' → logprob: -8.87074089050293

Token 44: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37707236409187317
    2. '<|end|>' → logprob: -1.3770723342895508
    3. '0' → logprob: -3.377072334289551
    4. ' ' → logprob: -4.877072334289551
    5. '000' → logprob: -5.877072334289551
    6. '

' → logprob: -6.002072334289551
    7. '<|end|>' → logprob: -6.002072334289551
    8. ' 
' → logprob: -6.127072334289551
    9. '*' → logprob: -6.627072334289551
    10. '```' → logprob: -6.877072334289551

Token 45: 'adj' (ID: 57001)
  Prédit: 'adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6026327013969421
    2. 'matrix' → logprob: -1.477632761001587
    3. 'graph' → logprob: -2.102632761001587
    4. ' adjacency' → logprob: -4.102632522583008
    5. '
' → logprob: -4.227632522583008
    6. ' adj' → logprob: -4.352632522583008
    7. ' matrix' → logprob: -4.977632522583008
    8. 'dist' → logprob: -5.227632522583008
    9. '_adj' → logprob: -5.477632522583008
    10. '_matrix' → logprob: -5.852632522583008

Token 46: ' =' (ID: 314)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.01621079072356224
    2. '=' → logprob: -4.391210556030273
    3. ' =' → logprob: -6.266210556030273
    4. '_matrix' → logprob: -7.641210556030273
    5. 'ac' → logprob: -7.766210556030273
    6. '```' → logprob: -7.891210556030273
    7. '[' → logprob: -8.266210556030273
    8. 'acent' → logprob: -10.141210556030273
    9. '_' → logprob: -10.516210556030273
    10. 'acy' → logprob: -10.766210556030273

Token 47: ' [[' (ID: 9237)
  Prédit: ' [['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.5952687859535217
    2. '[[' → logprob: -0.8452687859535217
    3. '[' → logprob: -4.345268726348877
    4. ' [' → logprob: -5.095268726348877
    5. '[]' → logprob: -10.470269203186035
    6. '[
' → logprob: -11.845269203186035
    7. ' []' → logprob: -12.220269203186035
    8. ' [[]' → logprob: -12.970269203186035
    9. '[['' → logprob: -13.470269203186035
    10. ' [
' → logprob: -13.720269203186035

Token 48: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.00021891399228479713
    2. ' no' → logprob: -8.625219345092773
    3. '0' → logprob: -10.250219345092773
    4. '140' → logprob: -12.750219345092773
    5. '	no' → logprob: -14.375219345092773
    6. '   ' → logprob: -15.750219345092773
    7. ' ' → logprob: -15.875219345092773
    8. '(no' → logprob: -16.500219345092773
    9. ']' → logprob: -17.750219345092773
    10. '  ' → logprob: -18.125219345092773

Token 49: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -9.090760431718081e-05
    2. '_edges' → logprob: -9.875090599060059
    3. '_' → logprob: -11.000090599060059
    4. ' _' → logprob: -11.625090599060059
    5. ']_' → logprob: -12.625090599060059
    6. '_EDGE' → logprob: -12.750090599060059
    7. '_ed' → logprob: -12.875090599060059
    8. '_e' → logprob: -13.750090599060059
    9. '   ' → logprob: -14.125090599060059
    10. 'edge' → logprob: -14.125090599060059

Token 50: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16833432018756866
    2. ']' → logprob: -2.1683342456817627
    3. 'for' → logprob: -3.2933342456817627
    4. ']*' → logprob: -6.043334484100342
    5. ' ]' → logprob: -7.918334484100342
    6. ']*(' → logprob: -8.418334007263184
    7. ' ' → logprob: -8.543334007263184
    8. '	for' → logprob: -8.543334007263184
    9. ')' → logprob: -10.043334007263184
    10. '   ' → logprob: -11.543334007263184

Token 51: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08137372136116028
    2. 'for' → logprob: -2.831373691558838
    3. ']' → logprob: -4.456373691558838
    4. ']*(' → logprob: -5.331373691558838
    5. ']*' → logprob: -5.956373691558838
    6. '	for' → logprob: -9.331374168395996
    7. ' ]' → logprob: -9.581374168395996
    8. ' ' → logprob: -11.081374168395996
    9. '   ' → logprob: -12.581374168395996
    10. ' if' → logprob: -13.081374168395996

Token 52: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.39456993341445923
    2. '(V' → logprob: -1.1445698738098145
    3. '(' → logprob: -5.6445698738098145
    4. ' (' → logprob: -6.1445698738098145
    5. ' V' → logprob: -6.2695698738098145
    6. '(E' → logprob: -9.894570350646973
    7. ' ' → logprob: -11.769570350646973
    8. 'E' → logprob: -11.894570350646973
    9. '	V' → logprob: -12.707070350646973
    10. '   ' → logprob: -12.769570350646973

Token 53: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10051234811544418
    2. 'for' → logprob: -2.3505122661590576
    3. '<|end|>' → logprob: -9.100512504577637
    4. ']' → logprob: -9.350512504577637
    5. '	for' → logprob: -9.850512504577637
    6. ' ' → logprob: -10.600512504577637
    7. ')' → logprob: -11.350512504577637
    8. ' ]' → logprob: -11.850512504577637
    9. '<|end|>' → logprob: -12.100512504577637
    10. '```' → logprob: -13.350512504577637

Token 54: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0031865055207163095
    2. 'range' → logprob: -6.5031867027282715
    3. ' _' → logprob: -7.0031867027282715
    4. '_' → logprob: -8.128186225891113
    5. '_range' → logprob: -9.003186225891113
    6. '(range' → logprob: -9.253186225891113
    7. ' ' → logprob: -9.378186225891113
    8. '<|end|>' → logprob: -9.378186225891113
    9. ' xrange' → logprob: -10.253186225891113
    10. '	range' → logprob: -10.378186225891113

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04025757685303688
    2. 'in' → logprob: -3.290257692337036
    3. '<|end|>' → logprob: -6.540257453918457
    4. ' ' → logprob: -7.290257453918457
    5. '<|end|>' → logprob: -9.790257453918457
    6. '	in' → logprob: -11.290257453918457
    7. '  ' → logprob: -12.665257453918457
    8. ')' → logprob: -12.915257453918457
    9. 's' → logprob: -13.040257453918457
    10. 'In' → logprob: -13.477757453918457

Token 56: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326377391815186
    2. ' range' → logprob: -1.3132637739181519
    3. '	range' → logprob: -13.313263893127441
    4. ' xrange' → logprob: -15.563263893127441
    5. '(range' → logprob: -15.688263893127441
    6. ' ' → logprob: -16.688262939453125
    7. '_range' → logprob: -17.938262939453125
    8. '  ' → logprob: -19.188262939453125
    9. '.range' → logprob: -19.313262939453125
    10. ')' → logprob: -19.438262939453125

Token 57: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.002218295820057392
    2. '(' → logprob: -6.127218246459961
    3. ' (' → logprob: -10.502218246459961
    4. '(
' → logprob: -13.127218246459961
    5. 'V' → logprob: -13.627218246459961
    6. '	V' → logprob: -14.252218246459961
    7. ' V' → logprob: -14.377218246459961
    8. ')' → logprob: -14.627218246459961
    9. ')V' → logprob: -15.002218246459961
    10. ']' → logprob: -16.50221824645996

Token 58: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00034511767444200814
    2. ')' → logprob: -8.125345230102539
    3. ']' → logprob: -10.000345230102539
    4. ')],' → logprob: -13.750345230102539
    5. ')])' → logprob: -13.875345230102539
    6. '])]' → logprob: -14.500345230102539
    7. '])' → logprob: -14.875345230102539
    8. ')]
' → logprob: -15.750345230102539
    9. ' )' → logprob: -15.875345230102539
    10. '')]' → logprob: -16.00034523010254

Token 59: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45764175057411194
    2. ' _' → logprob: -1.0826417207717896
    3. ' i' → logprob: -3.582641839981079
    4. '_' → logprob: -7.7076416015625
    5. ' in' → logprob: -8.8326416015625
    6. '  ' → logprob: -9.5826416015625
    7. ' ' → logprob: -10.4576416015625
    8. 'i' → logprob: -11.8326416015625
    9. ' range' → logprob: -11.9576416015625
    10. ' s' → logprob: -13.0826416015625

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033878158777952194
    2. 'in' → logprob: -3.4088780879974365
    3. ' ' → logprob: -8.408878326416016
    4. '  ' → logprob: -12.783878326416016
    5. '	in' → logprob: -13.283878326416016
    6. 'range' → logprob: -13.658878326416016
    7. 'In' → logprob: -14.158878326416016
    8. 'n' → logprob: -14.533878326416016
    9. '_' → logprob: -14.908878326416016
    10. ')' → logprob: -15.033878326416016

Token 62: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002481246367096901
    2. ' range' → logprob: -6.002481460571289
    3. '(range' → logprob: -12.627481460571289
    4. 'E' → logprob: -14.002481460571289
    5. '	range' → logprob: -14.377481460571289
    6. ' ' → logprob: -14.877481460571289
    7. ')' → logprob: -15.752481460571289
    8. 'in' → logprob: -16.37748146057129
    9. ' xrange' → logprob: -16.62748146057129
    10. 'r' → logprob: -16.62748146057129

Token 63: '(V' (ID: 16949)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.0002967320033349097
    2. '(' → logprob: -8.125296592712402
    3. '(V' → logprob: -14.875296592712402
    4. ' (' → logprob: -16.00029754638672
    5. 'E' → logprob: -16.37529754638672
    6. '(s' → logprob: -17.12529754638672
    7. '(e' → logprob: -17.12529754638672
    8. '(F' → logprob: -17.75029754638672
    9. ')' → logprob: -18.00029754638672
    10. '	E' → logprob: -18.12529754638672

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007565005216747522
    2. '):
' → logprob: -7.75075626373291
    3. ')' → logprob: -8.25075626373291
    4. ' ):' → logprob: -9.87575626373291
    5. '+' → logprob: -12.25075626373291
    6. '-' → logprob: -12.75075626373291
    7. ']:' → logprob: -13.87575626373291
    8. ':' → logprob: -14.12575626373291
    9. '):
' → logprob: -14.37575626373291
    10. '):

' → logprob: -14.62575626373291

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07847250998020172
    2. ' adj' → logprob: -2.70347261428833
    3. 'adj' → logprob: -4.82847261428833
    4. '<|end|>' → logprob: -8.578472137451172
    5. ' ' → logprob: -9.328472137451172
    6. '   ' → logprob: -9.453472137451172
    7. '  ' → logprob: -10.328472137451172
    8. '<|end|>' → logprob: -10.578472137451172
    9. '[' → logprob: -10.703472137451172
    10. '_adj' → logprob: -11.703472137451172

Token 66: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.02568155527114868
    2. ' adj' → logprob: -3.900681495666504
    3. '   ' → logprob: -5.275681495666504
    4. ' ' → logprob: -12.400681495666504
    5. '  ' → logprob: -12.650681495666504
    6. '    ' → logprob: -13.650681495666504
    7. '_adj' → logprob: -14.025681495666504
    8. '(adj' → logprob: -14.275681495666504
    9. 'for' → logprob: -14.775681495666504
    10. '    
' → logprob: -15.025681495666504

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.018159780651330948
    2. '[' → logprob: -4.018159866333008
    3. '[I' → logprob: -12.768159866333008
    4. '[id' → logprob: -13.268159866333008
    5. ' [' → logprob: -14.268159866333008
    6. '[V' → logprob: -14.518159866333008
    7. '[ii' → logprob: -14.643159866333008
    8. '[in' → logprob: -14.643159866333008
    9. '[u' → logprob: -14.643159866333008
    10. '[node' → logprob: -14.768159866333008

Token 68: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4297245144844055
    2. '[i' → logprob: -1.0547244548797607
    3. '[' → logprob: -7.17972469329834
    4. ']' → logprob: -8.92972469329834
    5. '[I' → logprob: -9.92972469329834
    6. ' ][' → logprob: -10.30472469329834
    7. ')[' → logprob: -10.92972469329834
    8. ' [' → logprob: -12.17972469329834
    9. '[
' → logprob: -12.67972469329834
    10. ' ' → logprob: -12.80472469329834

Token 69: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0206720617134124e-05
    2. ' i' → logprob: -11.50001049041748
    3. ' ' → logprob: -17.250009536743164
    4. '   ' → logprob: -17.375009536743164
    5. '	i' → logprob: -17.875009536743164
    6. '_i' → logprob: -18.000009536743164
    7. ')i' → logprob: -19.125009536743164
    8. ')' → logprob: -19.375009536743164
    9. '<|end|>' → logprob: -20.000009536743164
    10. '=i' → logprob: -20.125009536743164

Token 70: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028404995799064636
    2. ' =' → logprob: -4.27840518951416
    3. ']' → logprob: -4.40340518951416
    4. ']=' → logprob: -6.27840518951416
    5. '<|end|>' → logprob: -11.02840518951416
    6. ' ' → logprob: -12.40340518951416
    7. ')' → logprob: -13.02840518951416
    8. '0' → logprob: -13.27840518951416
    9. ' ]' → logprob: -13.52840518951416
    10. ')=' → logprob: -14.15340518951416

Token 71: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '=int' → logprob: -17.13604736328125
    4. ' ' → logprob: -17.26104736328125
    5. '=}' → logprob: -17.26104736328125
    6. '0' → logprob: -18.26104736328125
    7. '＝' → logprob: -18.76104736328125
    8. ' ' → logprob: -18.88604736328125
    9. '.=' → logprob: -19.13604736328125
    10. '=
' → logprob: -19.13604736328125

Token 72: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.87523078918457
    4. '  ' → logprob: -16.75023078918457
    5. ' ' → logprob: -18.00023078918457
    6. '۰' → logprob: -19.00023078918457
    7. '    ' → logprob: -19.50023078918457
    8. '```' → logprob: -19.62523078918457
    9. '1' → logprob: -19.68773078918457
    10. '00' → logprob: -19.87523078918457

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.375009536743164
    4. '  ' → logprob: -19.250009536743164
    5. '1' → logprob: -20.125009536743164
    6. ' ' → logprob: -20.687509536743164
    7. '00' → logprob: -20.812509536743164
    8. '000' → logprob: -21.062509536743164
    9. '```' → logprob: -21.187509536743164
    10. '    ' → logprob: -21.375009536743164

Token 74: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20386894047260284
    2. '<|end|>' → logprob: -2.203868865966797
    3. '\n' → logprob: -3.203868865966797
    4. 'for' → logprob: -3.703868865966797
    5. '<|end|>' → logprob: -6.328868865966797
    6. ' 
' → logprob: -6.453868865966797
    7. ' for' → logprob: -6.578868865966797
    8. '' → logprob: -6.703868865966797
    9. '  
' → logprob: -6.703868865966797
    10. '    
' → logprob: -7.953868865966797

Token 75: 'odd' (ID: 18303)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01816597953438759
    2. '<|end|>' → logprob: -4.2681660652160645
    3. ' for' → logprob: -6.0181660652160645
    4. '<|end|>' → logprob: -6.6431660652160645
    5. '
' → logprob: -8.393165588378906
    6. '```' → logprob: -11.893165588378906
    7. '\n' → logprob: -12.018165588378906
    8. '#' → logprob: -12.393165588378906
    9. '\' → logprob: -12.768165588378906
    10. 'n' → logprob: -13.018165588378906

Token 76: '_b' (ID: 1535)
  Prédit: '_degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.7653340101242065
    2. '_vertices' → logprob: -1.3903340101242065
    3. '_de' → logprob: -1.7653340101242065
    4. '_deg' → logprob: -2.390334129333496
    5. '_nodes' → logprob: -4.390334129333496
    6. 'deg' → logprob: -5.265334129333496
    7. '_vertex' → logprob: -6.515334129333496
    8. 'degree' → logprob: -6.765334129333496
    9. 's' → logprob: -6.765334129333496
    10. '_' → logprob: -7.515334129333496

Token 77: ' =' (ID: 314)
  Prédit: '_vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.6148397922515869
    2. 'deg' → logprob: -1.989839792251587
    3. '```' → logprob: -2.364839792251587
    4. '_deg' → logprob: -2.864839792251587
    5. 'ert' → logprob: -3.739839792251587
    6. '_nodes' → logprob: -3.989839792251587
    7. '_degree' → logprob: -4.364839553833008
    8. 'ound' → logprob: -4.489839553833008
    9. 'vertices' → logprob: -4.489839553833008
    10. 'Vertices' → logprob: -4.739839553833008

Token 78: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12712045013904572
    2. ' []' → logprob: -2.1271204948425293
    3. '[' → logprob: -9.127120018005371
    4. ' ' → logprob: -10.377120018005371
    5. '0' → logprob: -10.877120018005371
    6. '[]}' → logprob: -11.127120018005371
    7. ' [' → logprob: -12.002120018005371
    8. '[]>' → logprob: -12.252120018005371
    9. '[]
' → logprob: -13.002120018005371
    10. 'set' → logprob: -13.127120018005371

Token 79: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0001710014621494338
    2. '[' → logprob: -8.750170707702637
    3. '[]}' → logprob: -11.875170707702637
    4. '[]
' → logprob: -13.250170707702637
    5. ' []' → logprob: -13.875170707702637
    6. '[]>' → logprob: -14.250170707702637
    7. '0' → logprob: -14.500170707702637
    8. '[]

' → logprob: -14.750170707702637
    9. '[int' → logprob: -14.875170707702637
    10. '[],' → logprob: -15.500170707702637

Token 80: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.645327091217041
    2. '<|end|>' → logprob: -0.770327091217041
    3. '<|end|>' → logprob: -4.770327091217041
    4. 'for' → logprob: -6.895327091217041
    5. '

' → logprob: -6.895327091217041
    6. '\n' → logprob: -7.020327091217041
    7. ' ' → logprob: -8.020326614379883
    8. '#' → logprob: -8.270326614379883
    9. ' 
' → logprob: -8.520326614379883
    10. ' for' → logprob: -9.270326614379883

Token 81: ' bit' (ID: 3546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8047520518302917
    2. 'vertices' → logprob: -1.8047521114349365
    3. 'odd' → logprob: -2.8047521114349365
    4. ' vertices' → logprob: -2.8047521114349365
    5. 'count' → logprob: -3.1797521114349365
    6. '#' → logprob: -3.1797521114349365
    7. 'for' → logprob: -3.4297521114349365
    8. 'vertex' → logprob: -3.6797521114349365
    9. ' odd' → logprob: -3.6797521114349365
    10. ' for' → logprob: -3.9297521114349365

Token 82: ' DP' (ID: 51992)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.2346689701080322
    2. 'm' → logprob: -1.4846689701080322
    3. 's' → logprob: -1.4846689701080322
    4. '<|end|>' → logprob: -2.3596689701080322
    5. '-' → logprob: -3.3596689701080322
    6. '=' → logprob: -3.4846689701080322
    7. '_' → logprob: -3.6096689701080322
    8. ')' → logprob: -4.234668731689453
    9. ' ' → logprob: -4.359668731689453
    10. ' =' → logprob: -4.609668731689453

Token 83: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' record' (ID: 3704)
  Prédit: ' represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' represent' → logprob: -1.0822356939315796
    2. ' track' → logprob: -1.0822356939315796
    3. ' store' → logprob: -1.8322356939315796
    4. ' encode' → logprob: -3.207235813140869
    5. ' find' → logprob: -3.832235813140869
    6. 'encode' → logprob: -3.957235813140869
    7. ' count' → logprob: -4.082235813140869
    8. ' cover' → logprob: -4.582235813140869
    9. ' mark' → logprob: -4.707235813140869
    10. ' keep' → logprob: -5.082235813140869

Token 85: ' odd' (ID: 14210)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' vertex' (ID: 25363)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.053896669298410416
    2. ' for' → logprob: -3.05389666557312
    3. '<|end|>' → logprob: -6.303896903991699
    4. ' ' → logprob: -6.803896903991699
    5. 's' → logprob: -7.428896903991699
    6. '<|end|>' → logprob: -7.678896903991699
    7. 'f' → logprob: -8.0538969039917
    8. 'edges' → logprob: -8.3038969039917
    9. 'b' → logprob: -9.5538969039917
    10. 'v' → logprob: -9.6788969039917

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741356074810028
    2. '=' → logprob: -0.9741356372833252
    3. '_' → logprob: -10.474135398864746
    4. ',' → logprob: -11.224135398864746
    5. 's' → logprob: -11.849135398864746
    6. ' =
' → logprob: -12.849135398864746
    7. ' ' → logprob: -13.599135398864746
    8. 'space' → logprob: -13.974135398864746
    9. '_=' → logprob: -14.099135398864746
    10. '=

' → logprob: -14.349135398864746

Token 90: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03811389580368996
    2. ' ' → logprob: -3.288113832473755
    3. 'float' → logprob: -10.913113594055176
    4. ' float' → logprob: -11.413113594055176
    5. ' no' → logprob: -11.663113594055176
    6. 'sum' → logprob: -12.038113594055176
    7. '140' → logprob: -12.163113594055176
    8. 'no' → logprob: -12.288113594055176
    9. ' ' → logprob: -12.788113594055176
    10. '  ' → logprob: -13.475613594055176

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009143244242295623
    2. 'float' → logprob: -7.500914096832275
    3. '140' → logprob: -8.500914573669434
    4. ' ' → logprob: -10.000914573669434
    5. 'no' → logprob: -10.375914573669434
    6. '[]' → logprob: -11.000914573669434
    7. '-' → logprob: -11.500914573669434
    8. 'sum' → logprob: -11.625914573669434
    9. '1' → logprob: -11.750914573669434
    10. 'sys' → logprob: -11.750914573669434

Token 92: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0193206071853638
    2. 'for' → logprob: -1.0193206071853638
    3. '<|end|>' → logprob: -1.5193206071853638
    4. ' for' → logprob: -3.019320487976074
    5. '<|end|>' → logprob: -5.144320487976074
    6. '\n' → logprob: -6.144320487976074
    7. ' ' → logprob: -6.894320487976074
    8. ' 
' → logprob: -7.894320487976074
    9. '' → logprob: -8.269320487976074
    10. ')' → logprob: -9.019320487976074

Token 93: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019589634612202644
    2. ' for' → logprob: -6.251958847045898
    3. '
' → logprob: -11.501958847045898
    4. '<|end|>' → logprob: -11.626958847045898
    5. '<|end|>' → logprob: -12.876958847045898
    6. 'E' → logprob: -13.251958847045898
    7. 'f' → logprob: -13.501958847045898
    8. ' ' → logprob: -13.751958847045898
    9. 'while' → logprob: -14.001958847045898
    10. '\n' → logprob: -14.376958847045898

Token 94: ' acceptance' (ID: 38916)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00024620062322355807
    2. ' for' → logprob: -8.375246047973633
    3. 'range' → logprob: -11.625246047973633
    4. 'f' → logprob: -13.250246047973633
    5. 'E' → logprob: -13.625246047973633
    6. 'while' → logprob: -13.875246047973633
    7. '#' → logprob: -14.125246047973633
    8. 'or' → logprob: -14.625246047973633
    9. 'i' → logprob: -15.125246047973633
    10. 'def' → logprob: -15.875246047973633

Token 95: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1448158025741577
    2. 'criteria' → logprob: -1.3948158025741577
    3. 'for' → logprob: -1.5198158025741577
    4. 'of' → logprob: -1.8948158025741577
    5. '<|end|>' → logprob: -4.394815921783447
    6. ' for' → logprob: -4.644815921783447
    7. ' criteria' → logprob: -4.644815921783447
    8. 'def' → logprob: -5.144815921783447
    9. ':' → logprob: -5.269815921783447
    10. 'range' → logprob: -5.394815921783447

Token 96: ' input' (ID: 3422)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6500478982925415
    2. 'edges' → logprob: -1.1500478982925415
    3. 'E' → logprob: -3.525047779083252
    4. ' input' → logprob: -3.525047779083252
    5. 'input' → logprob: -4.025047779083252
    6. ' each' → logprob: -4.525047779083252
    7. ' the' → logprob: -4.525047779083252
    8. 'the' → logprob: -4.650047779083252
    9. 'each' → logprob: -4.650047779083252
    10. ' E' → logprob: -4.775047779083252

Token 97: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08944232761859894
    2. ' for' → logprob: -2.464442253112793
    3. '<|end|>' → logprob: -7.839442253112793
    4. '<|end|>' → logprob: -9.714442253112793
    5. 'edges' → logprob: -10.839442253112793
    6. ' edges' → logprob: -11.589442253112793
    7. '
' → logprob: -11.839442253112793
    8. ':' → logprob: -13.214442253112793
    9. 's' → logprob: -13.839442253112793
    10. ' and' → logprob: -13.839442253112793

Token 98: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020401719666551799
    2. ' for' → logprob: -8.500204086303711
    3. '<|end|>' → logprob: -14.500204086303711
    4. 'edges' → logprob: -17.37520408630371
    5. '<|end|>' → logprob: -17.75020408630371
    6. '```' → logprob: -18.00020408630371
    7. '
' → logprob: -19.12520408630371
    8. '	for' → logprob: -19.12520408630371
    9. 'while' → logprob: -19.37520408630371
    10. '#' → logprob: -19.87520408630371

Token 99: ' l' (ID: 305)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.08026603609323502
    2. '_' → logprob: -2.580265998840332
    3. ' i' → logprob: -6.830265998840332
    4. ' ' → logprob: -8.830265998840332
    5. ' ' → logprob: -9.705265998840332
    6. 'i' → logprob: -10.080265998840332
    7. '_i' → logprob: -10.955265998840332
    8. '  ' → logprob: -11.080265998840332
    9. ' __' → logprob: -13.080265998840332
    10. ' in' → logprob: -13.205265998840332

Token 100: '_i' (ID: 10853)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.338074266910553
    2. 'ine' → logprob: -1.3380742073059082
    3. 'in' → logprob: -4.213074207305908
    4. '_' → logprob: -5.588074207305908
    5. 'ines' → logprob: -5.838074207305908
    6. 'range' → logprob: -6.713074207305908
    7. 'n' → logprob: -8.213074684143066
    8. 'f' → logprob: -8.213074684143066
    9. 'ange' → logprob: -8.463074684143066
    10. 's' → logprob: -8.713074684143066

Token 101: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.154906764626503
    2. 'ne' → logprob: -2.279906749725342
    3. ' in' → logprob: -3.279906749725342
    4. 'in' → logprob: -6.154906749725342
    5. 'ine' → logprob: -7.029906749725342
    6. 'nes' → logprob: -8.0299072265625
    7. 'nge' → logprob: -8.9049072265625
    8. 'range' → logprob: -10.6549072265625
    9. 'ni' → logprob: -11.1549072265625
    10. 's' → logprob: -12.1549072265625

Token 102: ' f' (ID: 285)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25317683815956116
    2. ' range' → logprob: -1.5031768083572388
    3. 'f' → logprob: -7.003176689147949
    4. ' f' → logprob: -8.75317668914795
    5. 'sys' → logprob: -9.12817668914795
    6. ' sys' → logprob: -10.00317668914795
    7. ' ' → logprob: -12.50317668914795
    8. '(range' → logprob: -12.50317668914795
    9. '	range' → logprob: -12.50317668914795
    10. ' xrange' → logprob: -12.62817668914795

Token 103: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.19115309417247772
    2. 'range' → logprob: -1.8161530494689941
    3. 'i' → logprob: -4.566153049468994
    4. 'ile' → logprob: -7.816153049468994
    5. '(range' → logprob: -8.816153526306152
    6. 'in' → logprob: -8.941153526306152
    7. 'ange' → logprob: -10.316153526306152
    8. ' range' → logprob: -10.316153526306152
    9. 'input' → logprob: -10.316153526306152
    10. 'stdin' → logprob: -10.566153526306152

Token 104: ':
' (ID: 734)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.35633397102355957
    2. ' in' → logprob: -2.4813339710235596
    3. 'n' → logprob: -2.4813339710235596
    4. ':' → logprob: -2.7313339710235596
    5. '.readline' → logprob: -2.9813339710235596
    6. 'ine' → logprob: -5.4813337326049805
    7. '():' → logprob: -5.4813337326049805
    8. '.readlines' → logprob: -6.1063337326049805
    9. 's' → logprob: -6.3563337326049805
    10. 'ne' → logprob: -7.2313337326049805

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058218881487846375
    2. ' u' → logprob: -3.0582189559936523
    3. 'u' → logprob: -4.683218955993652
    4. '	u' → logprob: -9.058218955993652
    5. ' if' → logprob: -9.308218955993652
    6. '    
' → logprob: -11.058218955993652
    7. ' a' → logprob: -11.183218955993652
    8. 'a' → logprob: -11.183218955993652
    9. '    ' → logprob: -11.558218955993652
    10. ' parts' → logprob: -11.683218955993652

Token 106: ' s' (ID: 265)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.014869729056954384
    2. 'a' → logprob: -5.139869689941406
    3. ' u' → logprob: -5.264869689941406
    4. '   ' → logprob: -6.514869689941406
    5. 'if' → logprob: -6.889869689941406
    6. 's' (adapté à ' s') → logprob: -7.889869689941406
    7. 'x' → logprob: -8.639869689941406
    8. 'v' → logprob: -8.639869689941406
    9. 'w' → logprob: -9.514869689941406
    10. 'b' → logprob: -9.639869689941406

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2118569165468216
    2. ' =' → logprob: -2.0868568420410156
    3. '=' → logprob: -3.5868568420410156
    4. '_,' → logprob: -4.086856842041016
    5. ' ,' → logprob: -5.461856842041016
    6. 'plit' → logprob: -5.711856842041016
    7. '=line' → logprob: -6.211856842041016
    8. '_' → logprob: -6.336856842041016
    9. 'trip' → logprob: -6.586856842041016
    10. 'pl' → logprob: -6.586856842041016

Token 108: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.15865981578826904
    2. ' t' → logprob: -2.5336599349975586
    3. 'e' → logprob: -2.7836599349975586
    4. ' e' → logprob: -5.783659934997559
    5. 'd' → logprob: -6.158659934997559
    6. ' d' → logprob: -8.283659934997559
    7. ' ' → logprob: -10.158659934997559
    8. 'w' → logprob: -11.533659934997559
    9. '   ' → logprob: -11.658659934997559
    10. '  ' → logprob: -12.283659934997559

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007961008697748184
    2. '=' → logprob: -5.007960796356201
    3. ' ,' → logprob: -7.007960796356201
    4. ' =' → logprob: -8.00796127319336
    5. ',v' → logprob: -13.63296127319336
    6. 's' → logprob: -13.75796127319336
    7. ',s' → logprob: -13.88296127319336
    8. '<|end|>' → logprob: -14.63296127319336
    9. ',length' → logprob: -15.00796127319336
    10. ',n' → logprob: -15.00796127319336

Token 110: ' d' (ID: 272)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.7372984290122986
    2. 'w' → logprob: -0.8622984290122986
    3. 'd' → logprob: -3.6122984886169434
    4. 'c' → logprob: -3.7372984886169434
    5. ' d' → logprob: -3.7372984886169434
    6. ' c' → logprob: -3.8622984886169434
    7. 'l' → logprob: -6.862298488616943
    8. ' l' → logprob: -7.112298488616943
    9. ' ' → logprob: -7.862298488616943
    10. 'v' → logprob: -8.612298011779785

Token 111: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023246875032782555
    2. ' =' → logprob: -3.7732467651367188
    3. ')' → logprob: -14.773246765136719
    4. ',' → logprob: -15.773246765136719
    5. '=}' → logprob: -16.02324676513672
    6. ' ' → logprob: -16.14824676513672
    7. '=
' → logprob: -16.39824676513672
    8. 's' → logprob: -16.39824676513672
    9. '=

' → logprob: -16.52324676513672
    10. '＝' → logprob: -16.77324676513672

Token 112: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.47407931089401245
    2. ' map' → logprob: -0.9740793108940125
    3. 'l' → logprob: -13.474079132080078
    4. ' l' → logprob: -14.974079132080078
    5. '	map' → logprob: -14.974079132080078
    6. '   ' → logprob: -16.349079132080078
    7. ' ' → logprob: -16.474079132080078
    8. '(map' → logprob: -16.599079132080078
    9. '  ' → logprob: -17.349079132080078
    10. 'm' → logprob: -18.099079132080078

Token 113: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.953082341467962e-05
    2. '(lambda' → logprob: -11.375039100646973
    3. 'int' → logprob: -11.500039100646973
    4. '(' → logprob: -11.500039100646973
    5. '(str' → logprob: -12.000039100646973
    6. '[int' → logprob: -14.500039100646973
    7. '=int' → logprob: -14.750039100646973
    8. '```' → logprob: -15.250039100646973
    9. ',int' → logprob: -15.375039100646973
    10. '<int' → logprob: -16.00004005432129

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07900766283273697
    2. ',l' → logprob: -2.579007625579834
    3. '(l' → logprob: -9.704008102416992
    4. 's' → logprob: -10.954008102416992
    5. ' ,' → logprob: -11.204008102416992
    6. ',line' → logprob: -11.454008102416992
    7. 'l' → logprob: -12.329008102416992
    8. ',s' → logprob: -12.829008102416992
    9. '(' → logprob: -13.204008102416992
    10. ',f' → logprob: -13.454008102416992

Token 115: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.029756855219602585
    2. ' l' → logprob: -3.529756784439087
    3. '	l' → logprob: -13.154756546020508
    4. '   ' → logprob: -13.529756546020508
    5. ' ' → logprob: -13.529756546020508
    6. '  ' → logprob: -14.029756546020508
    7. '    ' → logprob: -14.779756546020508
    8. ')' → logprob: -14.904756546020508
    9. ' ' → logprob: -16.967256546020508
    10. 's' → logprob: -17.092256546020508

Token 116: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.125
    3. ')' → logprob: -17.0
    4. '.readline' → logprob: -19.0
    5. ').' → logprob: -19.25
    6. '.strip' → logprob: -19.75
    7. '_ip' → logprob: -20.5
    8. 's' → logprob: -20.625
    9. '```' → logprob: -20.625
    10. '_o' → logprob: -20.75

Token 117: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.023235691711306572
    2. '.strip' → logprob: -4.27323579788208
    3. '.split' → logprob: -5.14823579788208
    4. '.' → logprob: -5.89823579788208
    5. ' .' → logprob: -8.148235321044922
    6. 'split' → logprob: -9.648235321044922
    7. 'strip' → logprob: -10.398235321044922
    8. '()' → logprob: -10.773235321044922
    9. '.rstrip' → logprob: -10.773235321044922
    10. 'rstrip' → logprob: -11.523235321044922

Token 118: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10260334610939026
    2. '()' → logprob: -2.8526034355163574
    3. ')' → logprob: -3.2276034355163574
    4. '(' → logprob: -8.9776029586792
    5. '(),' → logprob: -11.6026029586792
    6. '()))' → logprob: -11.7276029586792
    7. '())
' → logprob: -11.8526029586792
    8. '(','' → logprob: -12.4776029586792
    9. '();)' → logprob: -12.6026029586792
    10. '('' → logprob: -13.2276029586792

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026873021852225065
    2. '<|end|>' → logprob: -6.502687454223633
    3. '
' → logprob: -8.002687454223633
    4. 'ans' → logprob: -8.252687454223633
    5. 'adj' → logprob: -9.002687454223633
    6. '    
' → logprob: -9.002687454223633
    7. '  ' → logprob: -9.502687454223633
    8. 's' → logprob: -9.752687454223633
    9. ' ans' → logprob: -10.002687454223633
    10. ')' → logprob: -10.127687454223633

Token 120: ' t' (ID: 260)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5645536184310913
    2. 'ans' → logprob: -0.9395536184310913
    3. 's' → logprob: -4.314553737640381
    4. '   ' → logprob: -4.564553737640381
    5. 'if' → logprob: -4.564553737640381
    6. ' ans' → logprob: -5.939553737640381
    7. ' adj' → logprob: -6.564553737640381
    8. 'd' → logprob: -7.189553737640381
    9. '    
' → logprob: -7.314553737640381
    10. ' if' → logprob: -8.189553260803223

Token 121: '_d' (ID: 1565)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.22652393579483032
    2. '-' → logprob: -1.8515238761901855
    3. '-=' → logprob: -3.6015238761901855
    4. ' -' → logprob: -4.1015238761901855
    5. '--;' → logprob: -7.3515238761901855
    6. '--' → logprob: -8.226524353027344
    7. '<|end|>' → logprob: -8.601524353027344
    8. ' =' → logprob: -9.226524353027344
    9. '=' → logprob: -9.351524353027344
    10. 'mp' → logprob: -9.476524353027344

Token 122: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.32474714517593384
    2. '-=' → logprob: -1.699747085571289
    3. '-' → logprob: -2.699747085571289
    4. ' =' → logprob: -4.199747085571289
    5. '=' → logprob: -4.824747085571289
    6. ' +=' → logprob: -5.949747085571289
    7. '+=' → logprob: -7.199747085571289
    8. ' -' → logprob: -8.324747085571289
    9. 'istance' → logprob: -8.574747085571289
    10. ',' → logprob: -8.824747085571289

Token 123: ' min' (ID: 1349)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7284708619117737
    2. 'adj' → logprob: -0.8534708619117737
    3. ' adj' → logprob: -2.978470802307129
    4. ' d' → logprob: -3.728470802307129
    5. 'min' → logprob: -4.728470802307129
    6. ' min' → logprob: -5.478470802307129
    7. 't' → logprob: -7.103470802307129
    8. 'int' → logprob: -7.353470802307129
    9. ' ' → logprob: -7.353470802307129
    10. '   ' → logprob: -7.978470802307129

Token 124: '(d' (ID: 2572)
  Prédit: '(adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.34927627444267273
    2. '(d' → logprob: -1.2242763042449951
    3. '(' → logprob: -7.599276065826416
    4. 'adj' → logprob: -9.599276542663574
    5. '(ad' → logprob: -9.599276542663574
    6. 'd' → logprob: -9.724276542663574
    7. '(t' → logprob: -10.724276542663574
    8. '(s' → logprob: -10.724276542663574
    9. '(dist' → logprob: -10.724276542663574
    10. '(ans' → logprob: -10.974276542663574

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001530812936834991
    2. ' ,' → logprob: -7.126530647277832
    3. 'adj' → logprob: -8.001530647277832
    4. ',
' → logprob: -8.876530647277832
    5. ')' → logprob: -9.126530647277832
    6. '   ' → logprob: -9.501530647277832
    7. ',

' → logprob: -11.126530647277832
    8. '),' → logprob: -11.501530647277832
    9. '(adj' → logprob: -11.876530647277832
    10. '_adj' → logprob: -12.251530647277832

Token 126: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0036534101236611605
    2. ' adj' → logprob: -5.628653526306152
    3. '   ' → logprob: -10.878653526306152
    4. 'd' → logprob: -11.003653526306152
    5. ' ' → logprob: -12.003653526306152
    6. '  ' → logprob: -12.878653526306152
    7. 'ad' → logprob: -13.003653526306152
    8. '    ' → logprob: -14.128653526306152
    9. ' no' → logprob: -14.253653526306152
    10. '140' → logprob: -14.253653526306152

Token 127: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -5.200166469876422e-06
    2. 's' → logprob: -12.875004768371582
    3. '[' → logprob: -13.875004768371582
    4. '[t' → logprob: -14.750004768371582
    5. ')[' → logprob: -14.875004768371582
    6. ')' → logprob: -15.375004768371582
    7. '   ' → logprob: -15.625004768371582
    8. ' [' → logprob: -15.750004768371582
    9. '[S' → logprob: -16.0000057220459
    10. ')s' → logprob: -17.0000057220459

Token 128: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013104787794873118
    2. '[t' → logprob: -6.751310348510742
    3. '[' → logprob: -9.626310348510742
    4. ' ][' → logprob: -10.626310348510742
    5. ']' → logprob: -10.876310348510742
    6. '[s' → logprob: -11.251310348510742
    7. '"][' → logprob: -12.126310348510742
    8. 't' → logprob: -12.751310348510742
    9. ''][' → logprob: -13.126310348510742
    10. ' [' → logprob: -13.126310348510742

Token 129: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -6.392202976712724e-06
    2. ' t' → logprob: -12.000006675720215
    3. ' ' → logprob: -16.3750057220459
    4. '   ' → logprob: -16.5000057220459
    5. '
' → logprob: -17.3750057220459
    6. '][' → logprob: -17.3750057220459
    7. '	t' → logprob: -17.7500057220459
    8. '[t' → logprob: -18.1250057220459
    9. '  ' → logprob: -18.7500057220459
    10. '`t' → logprob: -19.5000057220459

Token 130: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005097838002257049
    2. '])
' → logprob: -8.625510215759277
    3. ')' → logprob: -8.875510215759277
    4. ' ])' → logprob: -9.250510215759277
    5. ']' → logprob: -9.875510215759277
    6. '])

' → logprob: -11.750510215759277
    7. '   ' → logprob: -12.000510215759277
    8. ']);' → logprob: -12.000510215759277
    9. ']])' → logprob: -12.250510215759277
    10. '],' → logprob: -12.625510215759277

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007637646631337702
    2. 'adj' → logprob: -7.375763893127441
    3. '    
' → logprob: -9.250763893127441
    4. ' adj' → logprob: -10.750763893127441
    5. '
' → logprob: -11.375763893127441
    6. ')' → logprob: -13.250763893127441
    7. '  
' → logprob: -13.500763893127441
    8. 's' → logprob: -13.750763893127441
    9. '  ' → logprob: -13.750763893127441
    10. '   
' → logprob: -14.625763893127441

Token 132: ' adj' (ID: 20251)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38959601521492004
    2. 'adj' (adapté à ' adj') → logprob: -1.1395959854125977
    3. ' adj' → logprob: -6.639595985412598
    4. '    
' → logprob: -7.264595985412598
    5. '
' → logprob: -7.639595985412598
    6. '  ' → logprob: -9.639595985412598
    7. '_adj' → logprob: -10.764595985412598
    8. ' ' → logprob: -10.764595985412598
    9. ' 
' → logprob: -10.889595985412598
    10. '  
' → logprob: -10.889595985412598

Token 133: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -12.375005722045898
    3. 's' → logprob: -13.625005722045898
    4. '<|end|>' → logprob: -16.0000057220459
    5. '[t' → logprob: -16.3750057220459
    6. '[S' → logprob: -16.3750057220459
    7. ' [' → logprob: -17.6250057220459
    8. '[
' → logprob: -17.8750057220459
    9. '][' → logprob: -17.8750057220459
    10. '[src' → logprob: -18.0000057220459

Token 134: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.466968650580384e-05
    2. ']' → logprob: -10.375054359436035
    3. '[' → logprob: -12.000054359436035
    4. '[s' → logprob: -12.000054359436035
    5. '"][' → logprob: -12.750054359436035
    6. ' ][' → logprob: -13.000054359436035
    7. '[t' → logprob: -13.125054359436035
    8. '<|end|>' → logprob: -13.750054359436035
    9. ''][' → logprob: -13.875054359436035
    10. ']][' → logprob: -14.000054359436035

Token 135: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.9875325708417222e-05
    2. ' t' → logprob: -10.500029563903809
    3. '   ' → logprob: -14.250029563903809
    4. ' ' → logprob: -14.375029563903809
    5. 's' → logprob: -15.500029563903809
    6. ']' → logprob: -15.500029563903809
    7. '
' → logprob: -16.000030517578125
    8. '	t' → logprob: -16.500030517578125
    9. '  ' → logprob: -16.500030517578125
    10. ')t' → logprob: -16.500030517578125

Token 136: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11512741446495056
    2. '=' → logprob: -2.6151273250579834
    3. ']=' → logprob: -3.3651273250579834
    4. ' =' → logprob: -6.9901275634765625
    5. ' ]' → logprob: -9.740127563476562
    6. ')' → logprob: -10.490127563476562
    7. ',' → logprob: -11.740127563476562
    8. ')=' → logprob: -12.240127563476562
    9. '],' → logprob: -13.740127563476562
    10. '=t' → logprob: -13.865127563476562

Token 137: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008616461418569088
    2. ' =' → logprob: -4.7586164474487305
    3. '[' → logprob: -13.38361644744873
    4. '=
' → logprob: -15.88361644744873
    5. ',' → logprob: -16.008617401123047
    6. ']=' → logprob: -16.633617401123047
    7. '.=' → logprob: -16.883617401123047
    8. '=

' → logprob: -17.258617401123047
    9. ']' → logprob: -17.633617401123047
    10. '=t' → logprob: -18.133617401123047

Token 138: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0018393946811556816
    2. ' t' → logprob: -6.3768391609191895
    3. 'adj' → logprob: -9.126839637756348
    4. '
' → logprob: -11.001839637756348
    5. ' adj' → logprob: -12.126839637756348
    6. '   ' → logprob: -13.001839637756348
    7. '<|end|>' → logprob: -13.751839637756348
    8. '    
' → logprob: -14.126839637756348
    9. ' ' → logprob: -14.376839637756348
    10. ' 
' → logprob: -14.876839637756348

Token 139: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0005745976231992245
    2. 'd' → logprob: -7.625574588775635
    3. 't' → logprob: -10.625575065612793
    4. '_t' → logprob: -10.750575065612793
    5. '_s' → logprob: -11.250575065612793
    6. '<|end|>' → logprob: -12.250575065612793
    7. 's' → logprob: -12.625575065612793
    8. '_' → logprob: -12.625575065612793
    9. '[' → logprob: -12.875575065612793
    10. '-d' → logprob: -13.000575065612793

Token 140: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04817802459001541
    2. ' adj' → logprob: -3.17317795753479
    3. 'adj' → logprob: -5.423178195953369
    4. '<|end|>' → logprob: -7.298178195953369
    5. '  ' → logprob: -10.548177719116211
    6. '
' → logprob: -10.798177719116211
    7. '    
' → logprob: -11.298177719116211
    8. ' ' → logprob: -12.548177719116211
    9. '_adj' → logprob: -13.173177719116211
    10. '    ' → logprob: -13.423177719116211

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06222882866859436
    2. 'adj' → logprob: -2.8122289180755615
    3. ' adj' → logprob: -8.31222915649414
    4. '  ' → logprob: -12.06222915649414
    5. '<|end|>' → logprob: -12.31222915649414
    6. '    
' → logprob: -13.18722915649414
    7. ' ' → logprob: -13.56222915649414
    8. '(adj' → logprob: -14.06222915649414
    9. 'ad' → logprob: -14.93722915649414
    10. '    ' → logprob: -15.06222915649414

Token 142: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.0003380846756044775
    2. '   ' → logprob: -8.125338554382324
    3. ' adj' → logprob: -10.125338554382324
    4. 'ans' → logprob: -13.750338554382324
    5. 'ad' → logprob: -14.500338554382324
    6. '  ' → logprob: -16.500337600708008
    7. '(adj' → logprob: -16.625337600708008
    8. '    
' → logprob: -17.250337600708008
    9. ' ' → logprob: -17.875337600708008
    10. '[' → logprob: -18.750337600708008

Token 143: '[t' (ID: 32184)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0067603676579892635
    2. '[t' → logprob: -5.006760597229004
    3. '[' → logprob: -10.131760597229004
    4. '][' → logprob: -12.756760597229004
    5. 's' → logprob: -13.631760597229004
    6. '<|end|>' → logprob: -15.631760597229004
    7. 't' → logprob: -15.756760597229004
    8. '[target' → logprob: -16.006759643554688
    9. '```' → logprob: -16.631759643554688
    10. '[a' → logprob: -16.756759643554688

Token 144: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6932572722434998
    2. '[s' → logprob: -0.6932572722434998
    3. 's' → logprob: -9.568257331848145
    4. '[' → logprob: -10.818257331848145
    5. ']' → logprob: -12.068257331848145
    6. ' ][' → logprob: -12.443257331848145
    7. ')[' → logprob: -12.943257331848145
    8. '[t' → logprob: -13.318257331848145
    9. '"][' → logprob: -13.943257331848145
    10. '<|end|>' → logprob: -14.193257331848145

Token 145: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.6550729419104755e-05
    2. 't' → logprob: -10.875036239624023
    3. ' s' → logprob: -11.250036239624023
    4. '[s' → logprob: -13.750036239624023
    5. 'adj' → logprob: -14.000036239624023
    6. '   ' → logprob: -14.250036239624023
    7. ']' → logprob: -15.000036239624023
    8. ' ' → logprob: -15.125036239624023
    9. '[' → logprob: -15.250036239624023
    10. '_s' → logprob: -15.500036239624023

Token 146: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021169506944715977
    2. '=' → logprob: -6.752117156982422
    3. ']=' → logprob: -7.002117156982422
    4. '[' → logprob: -11.127117156982422
    5. ' ]' → logprob: -11.127117156982422
    6. ' =' → logprob: -13.127117156982422
    7. ')' → logprob: -13.377117156982422
    8. '][' → logprob: -13.377117156982422
    9. '   ' → logprob: -14.002117156982422
    10. '[t' → logprob: -14.627117156982422

Token 147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003600782947614789
    2. ' =' → logprob: -5.628600597381592
    3. '[' → logprob: -14.50360107421875
    4. '<|end|>' → logprob: -15.75360107421875
    5. ')' → logprob: -17.00360107421875
    6. ']=' → logprob: -17.12860107421875
    7. ']' → logprob: -17.37860107421875
    8. '=
' → logprob: -17.75360107421875
    9. ')=' → logprob: -18.00360107421875
    10. '＝' → logprob: -18.00360107421875

Token 148: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0006268949946388602
    2. ' t' → logprob: -7.375627040863037
    3. '   ' → logprob: -16.000627517700195
    4. '`t' → logprob: -16.125627517700195
    5. '	t' → logprob: -16.500627517700195
    6. 's' → logprob: -17.625627517700195
    7. '_t' → logprob: -18.625627517700195
    8. ' ' → logprob: -19.500627517700195
    9. 'adj' → logprob: -19.500627517700195
    10. '    ' → logprob: -19.750627517700195

Token 149: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00021676832693628967
    2. '_s' → logprob: -8.750216484069824
    3. 'd' → logprob: -10.000216484069824
    4. '_' → logprob: -13.000216484069824
    5. ' ' → logprob: -13.125216484069824
    6. '_t' → logprob: -13.125216484069824
    7. '   ' → logprob: -13.625216484069824
    8. 's' → logprob: -14.125216484069824
    9. ')' → logprob: -14.250216484069824
    10. '<|end|>' → logprob: -14.500216484069824

Token 150: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8896655440330505
    2. '<|end|>' → logprob: -1.0146656036376953
    3. '   ' → logprob: -1.6396656036376953
    4. '+' → logprob: -3.8896656036376953
    5. ' ' → logprob: -5.639665603637695
    6. '    
' → logprob: -6.514665603637695
    7. ' 
' → logprob: -6.514665603637695
    8. '<|end|>' → logprob: -6.764665603637695
    9. '+
' → logprob: -7.139665603637695
    10. '\n' → logprob: -7.389665603637695

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0298174899071455
    2. '<|end|>' → logprob: -4.154817581176758
    3. '
' → logprob: -4.779817581176758
    4. '+' → logprob: -6.154817581176758
    5. 'ans' → logprob: -6.279817581176758
    6. '	ans' → logprob: -8.279817581176758
    7. '  ' → logprob: -8.279817581176758
    8. ' ans' → logprob: -8.779817581176758
    9. ' ' → logprob: -9.154817581176758
    10. '<|end|>' → logprob: -9.279817581176758

Token 152: ' odd' (ID: 14210)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.317247167928144e-05
    2. '   ' → logprob: -9.500093460083008
    3. ' ans' → logprob: -11.125093460083008
    4. '	ans' → logprob: -13.375093460083008
    5. '(ans' → logprob: -14.625093460083008
    6. 'adj' → logprob: -14.875093460083008
    7. 'answer' → logprob: -15.500093460083008
    8. '  ' → logprob: -16.000093460083008
    9. '
' → logprob: -16.000093460083008
    10. 'anst' → logprob: -16.000093460083008

Token 153: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.512236498361744e-07
    2. 'b' → logprob: -15.500000953674316
    3. '_' → logprob: -16.0
    4. '=' → logprob: -16.625
    5. '_bit' → logprob: -16.875
    6. '_bits' → logprob: -17.25
    7. '_a' → logprob: -17.875
    8. ' ^=' → logprob: -19.125
    9. '_d' → logprob: -19.375
    10. ' =' → logprob: -19.375

Token 154: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.05552371218800545
    2. '^' → logprob: -2.930523633956909
    3. ' ^' → logprob: -8.305523872375488
    4. '|' → logprob: -8.930523872375488
    5. '=' → logprob: -8.930523872375488
    6. ' |=' → logprob: -9.180523872375488
    7. ' ' → logprob: -11.055523872375488
    8. '+=' → logprob: -12.680523872375488
    9. ' ' → logprob: -13.055523872375488
    10. ' =' → logprob: -13.680523872375488

Token 155: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004114138428121805
    2. '1' → logprob: -5.504114151000977
    3. ' (' → logprob: -10.254114151000977
    4. '   ' → logprob: -15.254114151000977
    5. ' ' → logprob: -15.754114151000977
    6. '```' → logprob: -16.504114151000977
    7. '{' → logprob: -17.004114151000977
    8. '((' → logprob: -17.004114151000977
    9. '[' → logprob: -18.879114151000977
    10. '  ' → logprob: -19.379114151000977

Token 156: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006726975552737713
    2. '1' → logprob: -5.0067267417907715
    3. ' (' → logprob: -11.38172721862793
    4. ' ' → logprob: -16.50672721862793
    5. '```' → logprob: -16.75672721862793
    6. '((' → logprob: -17.00672721862793
    7. '{' → logprob: -17.00672721862793
    8. '   ' → logprob: -17.13172721862793
    9. '
' → logprob: -18.63172721862793
    10. '[' → logprob: -19.00672721862793

Token 157: ' <<' (ID: 2256)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04832092672586441
    2. '(' → logprob: -3.298321008682251
    3. ' s' → logprob: -5.298320770263672
    4. '1' → logprob: -6.173320770263672
    5. ' (' → logprob: -6.673320770263672
    6. '<<' → logprob: -6.923320770263672
    7. ' ' → logprob: -7.548320770263672
    8. '(s' → logprob: -8.173320770263672
    9. '   ' → logprob: -10.173320770263672
    10. ' <<' → logprob: -11.423320770263672

Token 158: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.723973582556937e-05
    2. ' s' → logprob: -11.000017166137695
    3. 't' → logprob: -15.375017166137695
    4. '   ' → logprob: -15.875017166137695
    5. '<|end|>' → logprob: -16.875017166137695
    6. '	s' → logprob: -17.625017166137695
    7. '
' → logprob: -18.000017166137695
    8. '(s' → logprob: -18.250017166137695
    9. '`s' → logprob: -18.375017166137695
    10. ' ' → logprob: -18.625017166137695

Token 159: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003865516046062112
    2. '<|end|>' → logprob: -5.753865718841553
    3. ' ' → logprob: -8.003865242004395
    4. '  ' → logprob: -8.753865242004395
    5. ' ^' → logprob: -9.503865242004395
    6. '    ' → logprob: -10.128865242004395
    7. '<|end|>' → logprob: -10.628865242004395
    8. '    
' → logprob: -11.003865242004395
    9. '^' → logprob: -11.878865242004395
    10. ' ^=' → logprob: -11.878865242004395

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000519312743563205
    2. 'odd' → logprob: -7.625519275665283
    3. ' ' → logprob: -11.375519752502441
    4. '  ' → logprob: -11.750519752502441
    5. ' odd' → logprob: -12.625519752502441
    6. '<|end|>' → logprob: -12.625519752502441
    7. '    
' → logprob: -12.875519752502441
    8. '    ' → logprob: -14.125519752502441
    9. '```' → logprob: -14.625519752502441
    10. 'od' → logprob: -15.000519752502441

Token 161: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' (adapté à ' odd') → logprob: -0.10182651877403259
    2. '   ' → logprob: -2.3518264293670654
    3. ' odd' → logprob: -6.4768266677856445
    4. '1' → logprob: -9.726826667785645
    5. ' ' → logprob: -11.476826667785645
    6. '  ' → logprob: -12.226826667785645
    7. '    ' → logprob: -13.226826667785645
    8. 'od' → logprob: -13.476826667785645
    9. '    
' → logprob: -14.601826667785645
    10. '0' → logprob: -14.726826667785645

Token 162: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.3557529857498594e-05
    2. '_' → logprob: -11.75002384185791
    3. ' _' → logprob: -12.25002384185791
    4. 'b' → logprob: -12.50002384185791
    5. '   ' → logprob: -12.62502384185791
    6. '_a' → logprob: -14.12502384185791
    7. '_s' → logprob: -15.00002384185791
    8. '_i' → logprob: -15.00002384185791
    9. '<|end|>' → logprob: -15.12502384185791
    10. 's' → logprob: -15.25002384185791

Token 163: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.16046082973480225
    2. ' ^=' → logprob: -1.9104608297348022
    3. ' ^' → logprob: -9.035460472106934
    4. '=' → logprob: -9.535460472106934
    5. ' ' → logprob: -11.285460472106934
    6. '|' → logprob: -11.410460472106934
    7. '^

' → logprob: -12.410460472106934
    8. '^{' → logprob: -12.785460472106934
    9. '^\' → logprob: -13.160460472106934
    10. '^(' → logprob: -13.285460472106934

Token 164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34869125485420227
    2. ' ' → logprob: -1.2236912250518799
    3. ' t' → logprob: -8.9736909866333
    4. 't' → logprob: -9.0986909866333
    5. '   ' → logprob: -12.3486909866333
    6. '  ' → logprob: -13.5986909866333
    7. ' ' → logprob: -14.0986909866333
    8. ' (' → logprob: -14.3486909866333
    9. '`' → logprob: -15.2236909866333
    10. '(' → logprob: -15.2236909866333

Token 165: '1' (ID: 16)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3876117467880249
    2. '1' → logprob: -1.137611746788025
    3. ' t' → logprob: -7.3876118659973145
    4. ' ' → logprob: -9.137611389160156
    5. '`t' → logprob: -12.012611389160156
    6. '   ' → logprob: -12.512611389160156
    7. '(t' → logprob: -13.387611389160156
    8. '	t' → logprob: -13.887611389160156
    9. '```' → logprob: -14.512611389160156
    10. '(' → logprob: -14.887611389160156

Token 166: ' <<' (ID: 2256)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04352809116244316
    2. ' t' → logprob: -3.1685280799865723
    3. '1' → logprob: -8.16852855682373
    4. '<<' → logprob: -9.29352855682373
    5. ' ' → logprob: -9.66852855682373
    6. '_t' → logprob: -10.29352855682373
    7. ' <<' → logprob: -11.54352855682373
    8. '<t' → logprob: -11.66852855682373
    9. '	t' → logprob: -11.66852855682373
    10. '   ' → logprob: -11.79352855682373

Token 167: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.024604277219623e-05
    2. ' t' → logprob: -10.125040054321289
    3. '`t' → logprob: -16.00004005432129
    4. '	t' → logprob: -18.50004005432129
    5. '   ' → logprob: -18.87504005432129
    6. '<|end|>' → logprob: -19.25004005432129
    7. '_t' → logprob: -21.12504005432129
    8. '  ' → logprob: -22.12504005432129
    9. ' ' → logprob: -22.12504005432129
    10. '(t' → logprob: -22.37504005432129

Token 168: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35146695375442505
    2. 'ans' → logprob: -1.3514668941497803
    3. '<|end|>' → logprob: -4.351467132568359
    4. '
' → logprob: -4.726467132568359
    5. '	ans' → logprob: -5.476467132568359
    6. ' ans' → logprob: -5.601467132568359
    7. '#' → logprob: -6.351467132568359
    8. '+' → logprob: -6.601467132568359
    9. '(ans' → logprob: -6.976467132568359
    10. '<|end|>' → logprob: -7.101467132568359

Token 169: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04183833673596382
    2. '<|end|>' → logprob: -4.2918381690979
    3. 'E' → logprob: -4.6668381690979
    4. 'for' → logprob: -5.5418381690979
    5. '#' → logprob: -5.7918381690979
    6. '   ' → logprob: -5.9168381690979
    7. ' ans' → logprob: -6.4168381690979
    8. '
' → logprob: -6.9168381690979
    9. '...' → logprob: -6.9168381690979
    10. '+' → logprob: -7.0418381690979

Token 170: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.000283265660982579
    2. ' ans' → logprob: -8.375283241271973
    3. '   ' → logprob: -10.000283241271973
    4. '	ans' → logprob: -12.625283241271973
    5. '(ans' → logprob: -12.875283241271973
    6. '_ans' → logprob: -15.000283241271973
    7. '  ' → logprob: -15.375283241271973
    8. ' ' → logprob: -15.500283241271973
    9. 'answer' → logprob: -16.00028419494629
    10. '+' → logprob: -16.12528419494629

Token 171: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0013589247828349471
    2. ' +=' → logprob: -6.626358985900879
    3. '+' → logprob: -10.626358985900879
    4. '=' → logprob: -11.876358985900879
    5. ']+=' → logprob: -13.376358985900879
    6. '-=' → logprob: -16.751358032226562
    7. '+='' → logprob: -17.251358032226562
    8. '+="' → logprob: -17.626358032226562
    9. '+=(' → logprob: -17.751358032226562
    10. '>' → logprob: -18.376358032226562

Token 172: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31503039598464966
    2. 't' → logprob: -1.3150303363800049
    3. ' t' → logprob: -6.815030574798584
    4. ' d' → logprob: -7.315030574798584
    5. 'td' → logprob: -13.190030097961426
    6. '   ' → logprob: -13.815030097961426
    7. ' ' → logprob: -13.940030097961426
    8. '`t' → logprob: -15.190030097961426
    9. '  ' → logprob: -15.815030097961426
    10. '	d' → logprob: -16.065031051635742

Token 173: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7692073583602905
    2. '<|end|>' → logprob: -0.8942073583602905
    3. '
' → logprob: -2.51920747756958
    4. '#' → logprob: -3.26920747756958
    5. ' for' → logprob: -5.64420747756958
    6. '...' → logprob: -6.14420747756958
    7. '<|end|>' → logprob: -6.76920747756958
    8. '```' → logprob: -7.26920747756958
    9. '

' → logprob: -7.39420747756958
    10. 'V' → logprob: -8.894207000732422

Token 174: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04512551799416542
    2. '#' → logprob: -3.1701254844665527
    3. ' for' → logprob: -6.670125484466553
    4. '<|end|>' → logprob: -7.795125484466553
    5. 'V' → logprob: -8.795125961303711
    6. '
' → logprob: -9.045125961303711
    7. 'def' → logprob: -10.295125961303711
    8. 'if' → logprob: -10.670125961303711
    9. '...' → logprob: -10.920125961303711
    10. ')' → logprob: -11.170125961303711

Token 175: ' A' (ID: 355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016885098069906235
    2. ' for' → logprob: -4.516885280609131
    3. '#' → logprob: -5.516885280609131
    4. '<|end|>' → logprob: -7.141885280609131
    5. ')' → logprob: -7.891885280609131
    6. '...' → logprob: -8.766884803771973
    7. ' ' → logprob: -9.016884803771973
    8. 'V' → logprob: -9.266884803771973
    9. '   ' → logprob: -9.641884803771973
    10. '
' → logprob: -10.641884803771973

Token 176: ' function' (ID: 1114)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dj' → logprob: -1.1007219552993774
    2. '#' → logprob: -1.2257219552993774
    3. 'll' → logprob: -1.6007219552993774
    4. 'for' → logprob: -2.350721836090088
    5. 'd' → logprob: -2.975721836090088
    6. 'def' → logprob: -4.475721836090088
    7. 'ns' → logprob: -5.975721836090088
    8. 'import' → logprob: -6.100721836090088
    9. 'adj' → logprob: -6.600721836090088
    10. 'dd' → logprob: -6.975721836090088

Token 177: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004112354479730129
    2. ' def' → logprob: -6.879112243652344
    3. ' to' → logprob: -6.879112243652344
    4. 'to' → logprob: -7.004112243652344
    5. 'for' → logprob: -8.254112243652344
    6. '<|end|>' → logprob: -8.504112243652344
    7. ' for' → logprob: -9.004112243652344
    8. 'f' → logprob: -9.254112243652344
    9. '
' → logprob: -9.379112243652344
    10. '=' → logprob: -9.879112243652344

Token 178: ' check' (ID: 2371)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.18786326050758362
    2. 'def' → logprob: -1.9378632307052612
    3. 'flo' → logprob: -4.812863349914551
    4. ' flo' → logprob: -5.187863349914551
    5. 'run' → logprob: -6.062863349914551
    6. 'fro' → logprob: -6.312863349914551
    7. 'find' → logprob: -6.812863349914551
    8. 'update' → logprob: -6.937863349914551
    9. 'compute' → logprob: -7.312863349914551
    10. 'for' → logprob: -7.312863349914551

Token 179: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.817422091960907
    2. 'if' → logprob: -1.0674221515655518
    3. 'adj' → logprob: -2.0674221515655518
    4. 'the' → logprob: -3.6924221515655518
    5. 'paths' → logprob: -4.567421913146973
    6. 'for' → logprob: -4.692421913146973
    7. ' if' → logprob: -4.942421913146973
    8. 'dist' → logprob: -5.192421913146973
    9. ')' → logprob: -5.567421913146973
    10. 'all' → logprob: -6.067421913146973

Token 180: ' the' (ID: 290)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6238203048706055
    2. 'a' → logprob: -1.8738203048706055
    3. 'all' → logprob: -2.7488203048706055
    4. 'the' → logprob: -2.9988203048706055
    5. 'there' → logprob: -2.9988203048706055
    6. 's' → logprob: -3.9988203048706055
    7. 'no' → logprob: -4.2488203048706055
    8. 'two' → logprob: -4.2488203048706055
    9. 'V' → logprob: -4.6238203048706055
    10. 'dist' → logprob: -4.6238203048706055

Token 181: ' number' (ID: 2086)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.24944044649600983
    2. 'dist' → logprob: -3.4994404315948486
    3. 's' → logprob: -3.6244404315948486
    4. 'graph' → logprob: -3.8744404315948486
    5. 'for' → logprob: -3.8744404315948486
    6. 'V' → logprob: -3.9994404315948486
    7. ')' → logprob: -4.249440670013428
    8. 'path' → logprob: -4.624440670013428
    9. ' adj' → logprob: -5.124440670013428
    10. 'distance' → logprob: -5.374440670013428

Token 182: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.11761116981506348
    2. ' of' → logprob: -2.4926111698150635
    3. 'odd' → logprob: -4.617610931396484
    4. 'def' → logprob: -5.242610931396484
    5. 'adj' → logprob: -5.492610931396484
    6. '#' → logprob: -6.617610931396484
    7. 'is' → logprob: -6.617610931396484
    8. ' is' → logprob: -6.742610931396484
    9. 'od' → logprob: -7.117610931396484
    10. 'for' → logprob: -7.492610931396484

Token 183: ' ' (ID: 220)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -1.044694185256958
    2. 'edges' → logprob: -1.044694185256958
    3. 'odd' → logprob: -2.669694185256958
    4. ' edges' → logprob: -3.544694185256958
    5. ' vertices' → logprob: -3.669694185256958
    6. 'set' → logprob: -3.669694185256958
    7. 'bits' → logprob: -3.794694185256958
    8. '1' → logprob: -3.794694185256958
    9. 'paths' → logprob: -3.794694185256958
    10. 'bit' → logprob: -4.544693946838379

Token 184: '1' (ID: 16)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.2101500034332275
    2. 'vertices' → logprob: -1.3351500034332275
    3. 'set' → logprob: -1.7101500034332275
    4. 'odd' → logprob: -2.4601500034332275
    5. 'bits' → logprob: -2.7101500034332275
    6. '1' → logprob: -2.9601500034332275
    7. 'bit' → logprob: -4.960149765014648
    8. 'ones' → logprob: -4.960149765014648
    9. 'vertex' → logprob: -5.335149765014648
    10. 'steps' → logprob: -5.335149765014648

Token 185: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010685441084206104
    2. ''s' → logprob: -5.135685443878174
    3. 'bits' → logprob: -6.385685443878174
    4. ' s' → logprob: -6.510685443878174
    5. ' bits' → logprob: -6.635685443878174
    6. '_bits' → logprob: -9.510684967041016
    7. ' in' → logprob: -9.760684967041016
    8. '(bits' → logprob: -10.510684967041016
    9. ')' → logprob: -10.760684967041016
    10. '`s' → logprob: -11.260684967041016

Token 186: ' odd' (ID: 14210)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.18706399202346802
    2. 'odd' → logprob: -2.3120639324188232
    3. ' even' → logprob: -2.9370639324188232
    4. 'set' → logprob: -5.062064170837402
    5. ' odd' → logprob: -5.312064170837402
    6. ' set' → logprob: -6.687064170837402
    7. 's' → logprob: -6.937064170837402
    8. 'equal' → logprob: -6.937064170837402
    9. '#' → logprob: -7.437064170837402
    10. 'pop' → logprob: -7.562064170837402

Token 187: ' in' (ID: 306)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.923874702304602e-05
    2. '```' → logprob: -10.375089645385742
    3. '(' → logprob: -11.000089645385742
    4. ')' → logprob: -11.750089645385742
    5. ' def' → logprob: -11.875089645385742
    6. '(def' → logprob: -12.250089645385742
    7. ':' → logprob: -13.125089645385742
    8. 'de' → logprob: -13.125089645385742
    9. ':def' → logprob: -13.125089645385742
    10. '
' → logprob: -13.125089645385742

Token 188: ' binary' (ID: 15600)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15395663678646088
    2. 'n' → logprob: -2.903956651687622
    3. 'bin' → logprob: -3.403956651687622
    4. 'a' → logprob: -3.653956651687622
    5. 'num' → logprob: -5.528956413269043
    6. 'v' → logprob: -5.528956413269043
    7. 'b' → logprob: -5.653956413269043
    8. 'mask' → logprob: -6.028956413269043
    9. ' x' → logprob: -6.153956413269043
    10. 'val' → logprob: -6.278956413269043

Token 189: ' notation' (ID: 92060)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004116273485124111
    2. 'count' → logprob: -6.004116058349609
    3. 'pop' → logprob: -8.12911605834961
    4. ')' → logprob: -8.50411605834961
    5. '```' → logprob: -8.62911605834961
    6. 'representation' → logprob: -9.00411605834961
    7. ' def' → logprob: -9.12911605834961
    8. 's' → logprob: -9.25411605834961
    9. '_' → logprob: -9.50411605834961
    10. '   ' → logprob: -9.62911605834961

Token 190: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015633940347470343
    2. '
' → logprob: -9.75015640258789
    3. '```' → logprob: -10.00015640258789
    4. ')' → logprob: -11.50015640258789
    5. '   ' → logprob: -12.00015640258789
    6. ' def' → logprob: -12.12515640258789
    7. '(' → logprob: -12.25015640258789
    8. '(def' → logprob: -12.62515640258789
    9. 'de' → logprob: -13.25015640258789
    10. ':' → logprob: -13.25015640258789

Token 191: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.512236498361744e-07
    2. '#' → logprob: -15.500000953674316
    3. ' def' → logprob: -15.625000953674316
    4. 'de' → logprob: -16.125
    5. '
' → logprob: -17.25
    6. '```' → logprob: -17.875
    7. '   ' → logprob: -18.0
    8. 'from' → logprob: -18.625
    9. 'bin' → logprob: -18.625
    10. '1' → logprob: -18.75

Token 192: ' odd' (ID: 14210)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.32952478528022766
    2. 'pop' → logprob: -2.0795247554779053
    3. 'par' → logprob: -3.0795247554779053
    4. 'odd' → logprob: -3.2045247554779053
    5. 'count' → logprob: -3.2045247554779053
    6. 'check' → logprob: -4.704524993896484
    7. 'bit' → logprob: -5.079524993896484
    8. ' is' → logprob: -5.079524993896484
    9. 'has' → logprob: -5.704524993896484
    10. ' parity' → logprob: -6.329524993896484

Token 193: '_one' (ID: 26979)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9221502542495728
    2. '(num' → logprob: -1.5471502542495728
    3. '(n' → logprob: -1.6721502542495728
    4. '_' → logprob: -3.297150135040283
    5. 'number' → logprob: -3.547150135040283
    6. '(number' → logprob: -3.547150135040283
    7. '_count' → logprob: -3.672150135040283
    8. 'num' → logprob: -4.297150135040283
    9. '_num' → logprob: -4.422150135040283
    10. 'count' → logprob: -4.547150135040283

Token 194: '(n' (ID: 2406)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05962705984711647
    2. '(n' → logprob: -3.809627056121826
    3. 'count' → logprob: -4.184627056121826
    4. '(s' → logprob: -5.059627056121826
    5. '(num' → logprob: -5.684627056121826
    6. '_count' → logprob: -5.809627056121826
    7. '(' → logprob: -5.809627056121826
    8. 'bit' → logprob: -6.184627056121826
    9. '(x' → logprob: -6.684627056121826
    10. '(bit' → logprob: -8.184627532958984

Token 195: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08929090946912766
    2. '):
' → logprob: -2.4642908573150635
    3. '):
' → logprob: -8.714290618896484
    4. ')' → logprob: -9.089290618896484
    5. ':' → logprob: -9.839290618896484
    6. '):

' → logprob: -11.339290618896484
    7. ' ):' → logprob: -12.714290618896484
    8. '   ' → logprob: -13.339290618896484
    9. '**' → logprob: -14.839290618896484
    10. ',' → logprob: -14.964290618896484

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024202491622418165
    2. ':' → logprob: -6.502420425415039
    3. ' return' → logprob: -7.627420425415039
    4. '(' → logprob: -8.752420425415039
    5. '(n' → logprob: -9.627420425415039
    6. ':return' → logprob: -10.002420425415039
    7. ':
' → logprob: -10.377420425415039
    8. 'n' → logprob: -10.627420425415039
    9. '    ' → logprob: -11.252420425415039
    10. '	return' → logprob: -11.377420425415039

Token 197: ' ans' (ID: 3345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09868904203176498
    2. '   ' → logprob: -3.223689079284668
    3. 'c' → logprob: -4.223689079284668
    4. 'count' → logprob: -4.223689079284668
    5. 'cnt' → logprob: -4.723689079284668
    6. 'res' → logprob: -5.598689079284668
    7. ' return' → logprob: -5.598689079284668
    8. 'r' → logprob: -5.848689079284668
    9. 'n' → logprob: -6.723689079284668
    10. 'ret' → logprob: -6.973689079284668

Token 198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20322945713996887
    2. ' =' → logprob: -1.7032294273376465
    3. ' ^=' → logprob: -6.4532294273376465
    4. ' ' → logprob: -8.578229904174805
    5. '   ' → logprob: -10.578229904174805
    6. '=n' → logprob: -11.578229904174805
    7. '=int' → logprob: -12.328229904174805
    8. ',' → logprob: -13.078229904174805
    9. '^' → logprob: -13.203229904174805
    10. '  ' → logprob: -13.578229904174805

Token 199: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45297127962112427
    2. 'n' → logprob: -1.2029712200164795
    3. 'False' → logprob: -3.3279712200164795
    4. ' n' → logprob: -3.9529712200164795
    5. ' ' → logprob: -5.827971458435059
    6. '1' → logprob: -5.827971458435059
    7. ' False' → logprob: -5.952971458435059
    8. '   ' → logprob: -9.327971458435059
    9. 'True' → logprob: -9.452971458435059
    10. '(n' → logprob: -9.827971458435059

Token 200: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28756067156791687
    2. '0' → logprob: -1.4125607013702393
    3. '1' → logprob: -5.66256046295166
    4. 'False' → logprob: -6.03756046295166
    5. 'bin' → logprob: -7.78756046295166
    6. 'True' → logprob: -9.91256046295166
    7. ' n' → logprob: -10.53756046295166
    8. '(n' → logprob: -11.66256046295166
    9. 'bool' → logprob: -11.78756046295166
    10. 'int' → logprob: -12.28756046295166

Token 201: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013677161186933517
    2. '<|end|>' → logprob: -5.63867712020874
    3. '
' → logprob: -5.88867712020874
    4. '^' → logprob: -6.26367712020874
    5. ' ' → logprob: -6.76367712020874
    6. ' for' → logprob: -7.51367712020874
    7. ' ^' → logprob: -8.013677597045898
    8. ' while' → logprob: -8.138677597045898
    9. '  ' → logprob: -8.263677597045898
    10. '	while' → logprob: -8.263677597045898

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008224829100072384
    2. ' for' → logprob: -6.258224964141846
    3. ' ' → logprob: -6.883224964141846
    4. '^' → logprob: -7.133224964141846
    5. 'for' → logprob: -7.258224964141846
    6. ' while' → logprob: -7.383224964141846
    7. ',' → logprob: -8.008224487304688
    8. '
' → logprob: -8.133224487304688
    9. ' ^' → logprob: -8.133224487304688
    10. '	while' → logprob: -8.258224487304688

Token 203: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.19015824794769287
    2. 'n' → logprob: -2.1901583671569824
    3. 'for' → logprob: -3.3151583671569824
    4. ' while' → logprob: -3.8151583671569824
    5. '   ' → logprob: -6.315158367156982
    6. ' for' → logprob: -7.690158367156982
    7. ' n' → logprob: -7.690158367156982
    8. 'i' → logprob: -9.190157890319824
    9. '	while' → logprob: -10.690157890319824
    10. ' ' → logprob: -11.565157890319824

Token 204: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1602497100830078
    2. ' n' → logprob: -1.9102497100830078
    3. '(n' → logprob: -10.785249710083008
    4. '	n' → logprob: -12.785249710083008
    5. '   ' → logprob: -13.535249710083008
    6. ' ' → logprob: -14.910249710083008
    7. '
' → logprob: -15.785249710083008
    8. ' ' → logprob: -15.785249710083008
    9. '(' → logprob: -16.660249710083008
    10. ' (' → logprob: -17.410249710083008

Token 205: ':
' (ID: 734)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.13248221576213837
    2. '>' → logprob: -2.6324822902679443
    3. ':' → logprob: -3.1324822902679443
    4. ':
' → logprob: -5.507482051849365
    5. '&gt' → logprob: -6.507482051849365
    6. '!=' → logprob: -7.132482051849365
    7. '   ' → logprob: -7.507482051849365
    8. '=' → logprob: -7.882482051849365
    9. ' &' → logprob: -8.382482528686523
    10. ' ^=' → logprob: -8.757482528686523

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026868414133787155
    2. ' n' → logprob: -3.9018683433532715
    3. 'n' → logprob: -5.1518683433532715
    4. '   ' → logprob: -7.7768683433532715
    5. '```' → logprob: -10.40186882019043
    6. ' ans' → logprob: -11.15186882019043
    7. ' if' → logprob: -11.15186882019043
    8. ' ' → logprob: -11.65186882019043
    9. 'ans' → logprob: -12.02686882019043
    10. ' s' → logprob: -12.40186882019043

Token 207: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.10299991071224213
    2. ' ans' → logprob: -2.8529999256134033
    3. 'n' → logprob: -3.3529999256134033
    4. ' n' → logprob: -6.227999687194824
    5. '   ' → logprob: -6.477999687194824
    6. '	ans' → logprob: -6.477999687194824
    7. '       ' → logprob: -8.977999687194824
    8. '           ' → logprob: -10.602999687194824
    9. '(ans' → logprob: -11.477999687194824
    10. ' ' → logprob: -12.477999687194824

Token 208: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.0067698415368795395
    2. '^' → logprob: -5.00676965713501
    3. '=' → logprob: -9.881770133972168
    4. ' ' → logprob: -13.756770133972168
    5. '+=' → logprob: -13.881770133972168
    6. '   ' → logprob: -14.881770133972168
    7. ' =' → logprob: -15.006770133972168
    8. ' ^' → logprob: -15.006770133972168
    9. ',' → logprob: -16.00676918029785
    10. '^

' → logprob: -16.13176918029785

Token 209: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.052669551223516464
    2. ' n' → logprob: -3.0526695251464844
    3. '1' → logprob: -5.802669525146484
    4. '(n' → logprob: -6.927669525146484
    5. ' ' → logprob: -10.427669525146484
    6. ' (' → logprob: -10.677669525146484
    7. '(' → logprob: -11.177669525146484
    8. '   ' → logprob: -12.677669525146484
    9. '	n' → logprob: -12.677669525146484
    10. '_n' → logprob: -15.052669525146484

Token 210: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005714046768844128
    2. ' n' → logprob: -5.755713939666748
    3. '1' → logprob: -6.005713939666748
    4. '(n' → logprob: -9.755714416503906
    5. ' ' → logprob: -12.255714416503906
    6. ' (' → logprob: -13.130714416503906
    7. '   ' → logprob: -13.255714416503906
    8. '(' → logprob: -13.755714416503906
    9. '	n' → logprob: -14.380714416503906
    10. '[n' → logprob: -16.380714416503906

Token 211: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.062027622014284134
    2. ' &' → logprob: -2.8120276927948
    3. '1' → logprob: -9.937027931213379
    4. ' ' → logprob: -11.812027931213379
    5. '&
' → logprob: -13.312027931213379
    6. '&amp' → logprob: -13.812027931213379
    7. ')' → logprob: -14.187027931213379
    8. ')&' → logprob: -15.062027931213379
    9. ' ' → logprob: -16.187026977539062
    10. '   ' → logprob: -16.437026977539062

Token 212: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024780353996902704
    2. ' ' → logprob: -6.002478122711182
    3. '-' → logprob: -13.502477645874023
    4. '   ' → logprob: -14.002477645874023
    5. '  ' → logprob: -16.877477645874023
    6. ' -' → logprob: -17.439977645874023
    7. ' ' → logprob: -18.002477645874023
    8. '' → logprob: -18.439977645874023
    9. '(' → logprob: -18.439977645874023
    10. 'n' → logprob: -18.689977645874023

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.347765181795694e-05
    2. '-' → logprob: -10.125053405761719
    3. ' ' → logprob: -11.250053405761719
    4. ' -' → logprob: -16.25005340576172
    5. 'n' → logprob: -16.75005340576172
    6. '(' → logprob: -17.00005340576172
    7. '   ' → logprob: -17.00005340576172
    8. '(n' → logprob: -18.50005340576172
    9. '(-' → logprob: -18.50005340576172
    10. '' → logprob: -19.12505340576172

Token 214: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023019269108772278
    2. ')' → logprob: -3.898019313812256
    3. '       ' → logprob: -6.523019313812256
    4. ')n' → logprob: -7.023019313812256
    5. ')
' → logprob: -9.773018836975098
    6. 'n' → logprob: -10.148018836975098
    7. ' )
' → logprob: -11.398018836975098
    8. ' n' → logprob: -13.523018836975098
    9. ')

' → logprob: -13.898018836975098
    10. ');
' → logprob: -14.023018836975098

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001882823125924915
    2. 'n' → logprob: -9.250187873840332
    3. '   ' → logprob: -9.375187873840332
    4. ' n' → logprob: -12.000187873840332
    5. '
' → logprob: -15.250187873840332
    6. '           ' → logprob: -15.500187873840332
    7. ' ' → logprob: -15.750187873840332
    8. '        
' → logprob: -15.750187873840332
    9. '      ' → logprob: -16.50018882751465
    10. '	' → logprob: -16.87518882751465

Token 216: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.011064562946557999
    2. ' n' → logprob: -4.511064529418945
    3. '       ' → logprob: -11.011064529418945
    4. '   ' → logprob: -15.761064529418945
    5. '	n' → logprob: -16.761064529418945
    6. '
' → logprob: -17.511064529418945
    7. '      ' → logprob: -18.261064529418945
    8. ' ' → logprob: -18.386064529418945
    9. '     ' → logprob: -18.511064529418945
    10. '    ' → logprob: -18.511064529418945

Token 217: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.029149524867534637
    2. ' >>=' → logprob: -3.6541495323181152
    3. '=' → logprob: -5.904149532318115
    4. '>' → logprob: -10.029149055480957
    5. '>>>' → logprob: -10.279149055480957
    6. '   ' → logprob: -11.029149055480957
    7. ' ' → logprob: -11.779149055480957
    8. '//=' → logprob: -12.029149055480957
    9. ' ' → logprob: -13.529149055480957
    10. '  ' → logprob: -13.529149055480957

Token 218: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '```' → logprob: -16.50048828125
    4. '   ' → logprob: -16.62548828125
    5. '
' → logprob: -18.12548828125
    6. '  ' → logprob: -19.18798828125
    7. ' ' → logprob: -19.37548828125
    8. '１' → logprob: -19.81298828125
    9. '`' → logprob: -20.31298828125
    10. '۱' → logprob: -20.37548828125

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -17.125028610229492
    4. '
' → logprob: -17.437528610229492
    5. '   ' → logprob: -17.687528610229492
    6. '  ' → logprob: -19.312528610229492
    7. '۱' → logprob: -19.562528610229492
    8. '`' → logprob: -19.750028610229492
    9. '<|end|>' → logprob: -19.875028610229492
    10. '१' → logprob: -20.125028610229492

Token 220: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0285288505256176
    2. '
' → logprob: -3.653528928756714
    3. '    
' → logprob: -6.403528690338135
    4. '  
' → logprob: -8.403529167175293
    5. ' 
' → logprob: -9.028529167175293
    6. ' return' → logprob: -9.403529167175293
    7. '	return' → logprob: -10.278529167175293
    8. '	
' → logprob: -10.403529167175293
    9. '   
' → logprob: -10.778529167175293
    10. 'return' → logprob: -10.903529167175293

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004699954588431865
    2. ' return' → logprob: -7.750470161437988
    3. '
' → logprob: -11.875470161437988
    4. 'return' → logprob: -11.875470161437988
    5. '	return' → logprob: -12.125470161437988
    6. '       ' → logprob: -12.250470161437988
    7. '    
' → logprob: -12.375470161437988
    8. '    ' → logprob: -12.750470161437988
    9. '<|end|>' → logprob: -12.875470161437988
    10. ' 
' → logprob: -13.875470161437988

Token 222: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5034631490707397
    2. '   ' → logprob: -1.5034631490707397
    3. 'return' (adapté à ' return') → logprob: -1.7534631490707397
    4. ' ' → logprob: -10.628462791442871
    5. '	return' → logprob: -11.753462791442871
    6. '  ' → logprob: -13.628462791442871
    7. '    ' → logprob: -14.378462791442871
    8. '       ' → logprob: -15.503462791442871
    9. 'eturn' → logprob: -16.503463745117188
    10. ':return' → logprob: -17.253463745117188

Token 223: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06197104603052139
    2. ' ans' → logprob: -2.8119709491729736
    3. '(ans' → logprob: -12.811970710754395
    4. '	ans' → logprob: -14.561970710754395
    5. ' ' → logprob: -16.18697166442871
    6. '   ' → logprob: -17.43697166442871
    7. ' ' → logprob: -18.31197166442871
    8. 'bool' → logprob: -18.56197166442871
    9. '  ' → logprob: -18.68697166442871
    10. 'Ans' → logprob: -19.06197166442871

Token 224: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14275607466697693
    2. 'def' → logprob: -2.7677559852600098
    3. '

' → logprob: -3.2677559852600098
    4. '<|end|>' → logprob: -3.5177559852600098
    5. '#' → logprob: -6.51775598526001
    6. '```' → logprob: -7.89275598526001
    7. '<|end|>' → logprob: -9.142756462097168
    8. '  
' → logprob: -9.767756462097168
    9. ')' → logprob: -9.767756462097168
    10. '
' → logprob: -9.892756462097168

Token 225: 'import' (ID: 561)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5961623787879944
    2. 'def' → logprob: -0.9711623787879944
    3. 'for' → logprob: -2.9711623191833496
    4. 'dp' → logprob: -4.97116231918335
    5. 'dist' → logprob: -5.97116231918335
    6. 'if' → logprob: -6.22116231918335
    7. 'import' → logprob: -6.47116231918335
    8. '
' → logprob: -6.47116231918335
    9. '<|end|>' → logprob: -7.09616231918335
    10. ')' → logprob: -7.22116231918335

Token 226: ' math' (ID: 13324)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.10610176622867584
    2. 'math' → logprob: -2.6061017513275146
    3. ' heap' → logprob: -4.106101989746094
    4. ' math' → logprob: -5.106101989746094
    5. ' itertools' → logprob: -5.606101989746094
    6. 'collections' → logprob: -8.231101989746094
    7. 'sys' → logprob: -8.231101989746094
    8. 'it' → logprob: -9.481101989746094
    9. ' sys' → logprob: -11.231101989746094
    10. 'copy' → logprob: -11.731101989746094

Token 227: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7942625880241394
    2. '#' → logprob: -1.6692626476287842
    3. '
' → logprob: -1.7942626476287842
    4. 'def' → logprob: -2.044262647628784
    5. '

' → logprob: -3.919262647628784
    6. 'import' → logprob: -4.294262409210205
    7. 'from' → logprob: -5.044262409210205
    8. 'INF' → logprob: -5.044262409210205
    9. 'dist' → logprob: -5.169262409210205
    10. 'inf' → logprob: -5.294262409210205

Token 228: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44109073281288147
    2. '#' → logprob: -1.316090703010559
    3. 'dist' → logprob: -3.1910908222198486
    4. 'def' → logprob: -3.1910908222198486
    5. 'dp' → logprob: -5.3160905838012695
    6. 'd' → logprob: -7.6910905838012695
    7. 'INF' → logprob: -9.19109058380127
    8. 'D' → logprob: -9.31609058380127
    9. 'from' → logprob: -9.44109058380127
    10. 'dis' → logprob: -9.69109058380127

Token 229: ' odd' (ID: 14210)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.8431222438812256
    2. ' __' → logprob: -1.0931222438812256
    3. ' odd' → logprob: -1.8431222438812256
    4. 'V' → logprob: -3.4681222438812256
    5. ' len' → logprob: -4.218122482299805
    6. '__' → logprob: -4.593122482299805
    7. 'odd' → logprob: -4.593122482299805
    8. ' not' → logprob: -5.343122482299805
    9. ' math' → logprob: -5.968122482299805
    10. ' ' → logprob: -6.718122482299805

Token 230: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.3487119674682617
    2. '_one' → logprob: -1.2237119674682617
    3. 'one' → logprob: -8.473711967468262
    4. '_' → logprob: -10.598711967468262
    5. 'One' → logprob: -11.348711967468262
    6. 'b' → logprob: -12.223711967468262
    7. ' one' → logprob: -12.473711967468262
    8. '_a' → logprob: -13.223711967468262
    9. '_ONE' → logprob: -13.598711967468262
    10. '_two' → logprob: -13.723711967468262

Token 231: ':
' (ID: 734)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.9044346809387207
    2. ':' → logprob: -1.0294346809387207
    3. ' !=' → logprob: -1.7794346809387207
    4. '==' → logprob: -2.9044346809387207
    5. '>' → logprob: -4.904434680938721
    6. ' ==' → logprob: -5.029434680938721
    7. ':
' → logprob: -8.404434204101562
    8. ' >' → logprob: -8.779434204101562
    9. 'and' → logprob: -9.779434204101562
    10. '>:' → logprob: -10.779434204101562

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7334076762199402
    2. ':
' → logprob: -0.8584076762199402
    3. ':' → logprob: -2.608407735824585
    4. ' :
' → logprob: -4.358407497406006
    5. ' :' → logprob: -5.733407497406006
    6. ' for' → logprob: -6.108407497406006
    7. ',' → logprob: -7.108407497406006
    8. 'for' → logprob: -7.483407497406006
    9. '):
' → logprob: -7.858407497406006
    10. '[' → logprob: -8.233407974243164

Token 233: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8635948896408081
    2. '#' (adapté à ' #') → logprob: -1.613594889640808
    3. 'dist' → logprob: -1.988594889640808
    4. '   ' → logprob: -1.988594889640808
    5. 'for' → logprob: -3.4885950088500977
    6. ' dp' → logprob: -4.238595008850098
    7. ' #' → logprob: -4.613595008850098
    8. 'd' → logprob: -4.738595008850098
    9. ' dist' → logprob: -4.988595008850098
    10. ' for' → logprob: -5.488595008850098

Token 234: ' War' (ID: 8545)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5345212817192078
    2. 'dist' → logprob: -1.2845213413238525
    3. 'for' → logprob: -2.2845213413238525
    4. 'dp' → logprob: -4.034521102905273
    5. '   ' → logprob: -4.784521102905273
    6. 'import' → logprob: -5.659521102905273
    7. 'd' → logprob: -6.159521102905273
    8. 'from' → logprob: -7.034521102905273
    9. 'def' → logprob: -7.284521102905273
    10. 'dis' → logprob: -7.784521102905273

Token 235: 'shall' (ID: 30275)
  Prédit: 'shall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shall' → logprob: -0.0013652353081852198
    2. 'shal' → logprob: -7.1263651847839355
    3. 'ning' → logprob: -7.7513651847839355
    4. 'nings' → logprob: -9.751365661621094
    5. 'sh' → logprob: -9.876365661621094
    6. 'n' → logprob: -12.001365661621094
    7. 'shaw' → logprob: -12.501365661621094
    8. 's' → logprob: -12.501365661621094
    9. ' shall' → logprob: -12.876365661621094
    10. 'sal' → logprob: -14.376365661621094

Token 236: '???' (ID: 33110)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022707350552082062
    2. ' for' → logprob: -4.022707462310791
    3. '   ' → logprob: -5.522707462310791
    4. '-F' → logprob: -8.397706985473633
    5. ' ' → logprob: -8.897706985473633
    6. '-f' → logprob: -10.147706985473633
    7. 'f' → logprob: -10.147706985473633
    8. '#' → logprob: -10.397706985473633
    9. '	for' → logprob: -10.647706985473633
    10. 'F' → logprob: -11.397706985473633

Token 237: 'F' (ID: 37)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006509078200906515
    2. 'F' → logprob: -5.756509304046631
    3. '-F' → logprob: -7.006509304046631
    4. '   ' → logprob: -7.006509304046631
    5. ' for' → logprob: -7.256509304046631
    6. 'f' → logprob: -7.506509304046631
    7. 'ford' → logprob: -9.006508827209473
    8. '#' → logprob: -9.756508827209473
    9. ' Floyd' → logprob: -11.506508827209473
    10. '```' → logprob: -11.756508827209473

Token 238: 'loyd' (ID: 58664)
  Prédit: 'loyd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loyd' → logprob: -6.897412822581828e-05
    2. 'loid' → logprob: -10.500068664550781
    3. 'o' → logprob: -11.875068664550781
    4. 'lo' → logprob: -12.125068664550781
    5. '```' → logprob: -12.375068664550781
    6. 'ord' → logprob: -12.500068664550781
    7. 'll' → logprob: -12.500068664550781
    8. 'old' → logprob: -12.625068664550781
    9. 'orld' → logprob: -13.000068664550781
    10. 'l' → logprob: -13.000068664550781

Token 239: ' Algorithm' (ID: 78719)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.745205819606781
    2. 'for' → logprob: -0.870205819606781
    3. '   ' → logprob: -2.245205879211426
    4. ' ' → logprob: -8.620205879211426
    5. '  ' → logprob: -8.995205879211426
    6. '	for' → logprob: -9.120205879211426
    7. 'or' → logprob: -10.495205879211426
    8. ' or' → logprob: -10.620205879211426
    9. '
' → logprob: -10.745205879211426
    10. '    ' → logprob: -10.745205879211426

Token 240: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38777387142181396
    2. ' for' → logprob: -1.387773871421814
    3. 'for' → logprob: -2.6377739906311035
    4. '  ' → logprob: -9.512773513793945
    5. ' ' → logprob: -9.637773513793945
    6. ',' → logprob: -10.512773513793945
    7. '	for' → logprob: -11.012773513793945
    8. ':' → logprob: -11.262773513793945
    9. '
' → logprob: -11.262773513793945
    10. ' =' → logprob: -11.387773513793945

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05618027225136757
    2. ' for' → logprob: -3.431180238723755
    3. 'for' → logprob: -3.806180238723755
    4. '  ' → logprob: -10.806180000305176
    5. ' ' → logprob: -11.806180000305176
    6. '	for' → logprob: -12.056180000305176
    7. ',' → logprob: -12.556180000305176
    8. '    ' → logprob: -12.806180000305176
    9. ':' → logprob: -13.306180000305176
    10. ')' → logprob: -13.556180000305176

Token 242: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04485350102186203
    2. ' for' → logprob: -3.169853448867798
    3. '   ' → logprob: -6.294853687286377
    4. '	for' → logprob: -13.044853210449219
    5. '  ' → logprob: -13.169853210449219
    6. ' ' → logprob: -13.169853210449219
    7. '    ' → logprob: -15.169853210449219
    8. '#' → logprob: -15.919853210449219
    9. 'from' → logprob: -16.98235321044922
    10. ')' → logprob: -17.04485321044922

Token 243: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.2855416066013277e-05
    2. ' k' → logprob: -10.750032424926758
    3. 'i' → logprob: -11.875032424926758
    4. 'u' → logprob: -13.750032424926758
    5. 'w' → logprob: -14.375032424926758
    6. 'm' → logprob: -14.625032424926758
    7. 'v' → logprob: -14.750032424926758
    8. 'j' → logprob: -14.875032424926758
    9. 'p' → logprob: -15.125032424926758
    10. 'via' → logprob: -15.250032424926758

Token 244: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03364811837673187
    2. 'in' → logprob: -3.4086480140686035
    3. '	in' → logprob: -14.408648490905762
    4. '   ' → logprob: -14.533648490905762
    5. 'n' → logprob: -14.658648490905762
    6. 'range' → logprob: -15.033648490905762
    7. ' ' → logprob: -15.283648490905762
    8. '  ' → logprob: -15.658648490905762
    9. 'In' → logprob: -15.783648490905762
    10. '_in' → logprob: -17.283647537231445

Token 245: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '(range' → logprob: -19.875036239624023
    4. '	range' → logprob: -20.500036239624023
    5. '   ' → logprob: -20.625036239624023
    6. ' ' → logprob: -22.625036239624023
    7. '  ' → logprob: -22.750036239624023
    8. ' xrange' → logprob: -23.000036239624023
    9. 'Range' → logprob: -23.750036239624023
    10. '```' → logprob: -24.125036239624023

Token 246: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0004931025905534625
    2. 'V' → logprob: -7.625493049621582
    3. '(' → logprob: -12.500493049621582
    4. '   ' → logprob: -14.500493049621582
    5. ' V' → logprob: -14.500493049621582
    6. '	V' → logprob: -15.250493049621582
    7. 'range' → logprob: -16.8754940032959
    8. '(v' → logprob: -17.6254940032959
    9. ' (' → logprob: -17.8754940032959
    10. ' ' → logprob: -18.1254940032959

Token 247: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5761584043502808
    2. '):' → logprob: -0.8261584043502808
    3. ':' → logprob: -9.07615852355957
    4. '   ' → logprob: -9.32615852355957
    5. '):
' → logprob: -11.82615852355957
    6. ':
' → logprob: -12.32615852355957
    7. ')' → logprob: -13.57615852355957
    8. '):

' → logprob: -14.07615852355957
    9. ' ):
' → logprob: -14.95115852355957
    10. '+' → logprob: -15.20115852355957

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003710411721840501
    2. ' for' → logprob: -6.1287102699279785
    3. 'for' → logprob: -6.8787102699279785
    4. '   ' → logprob: -7.6287102699279785
    5. '	for' → logprob: -12.378710746765137
    6. '	   ' → logprob: -13.503710746765137
    7. '     ' → logprob: -14.128710746765137
    8. ' ' → logprob: -14.378710746765137
    9. '    ' → logprob: -14.628710746765137
    10. '	' → logprob: -15.253710746765137

Token 249: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05468941107392311
    2. ' for' → logprob: -3.054689407348633
    3. '   ' → logprob: -5.304689407348633
    4. '       ' → logprob: -6.804689407348633
    5. '	for' → logprob: -12.179689407348633
    6. ' ' → logprob: -13.804689407348633
    7. '           ' → logprob: -15.429689407348633
    8. '  ' → logprob: -16.054689407348633
    9. '    ' → logprob: -16.554689407348633
    10. '
' → logprob: -16.804689407348633

Token 250: ' i' (ID: 575)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.012214940041303635
    2. ' range' → logprob: -5.0122151374816895
    3. 'range' → logprob: -5.5122151374816895
    4. ' V' → logprob: -6.8872151374816895
    5. 'v' → logprob: -8.262214660644531
    6. 'for' → logprob: -9.262214660644531
    7. '   ' → logprob: -10.137214660644531
    8. ' ' → logprob: -11.262214660644531
    9. 'i' → logprob: -11.387214660644531
    10. 'j' → logprob: -12.637214660644531

Token 251: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026304133236408234
    2. 'in' → logprob: -3.651304244995117
    3. '   ' → logprob: -13.526304244995117
    4. ' ' → logprob: -13.651304244995117
    5. 'n' → logprob: -15.026304244995117
    6. 'range' → logprob: -15.151304244995117
    7. '       ' → logprob: -15.776304244995117
    8. '  ' → logprob: -15.901304244995117
    9. '    ' → logprob: -16.401304244995117
    10. 'In' → logprob: -16.651304244995117

Token 252: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858953505754471
    2. ' range' → logprob: -3.0485894680023193
    3. 'V' → logprob: -13.298589706420898
    4. ' V' → logprob: -15.798589706420898
    5. '(range' → logprob: -15.798589706420898
    6. ' ' → logprob: -15.798589706420898
    7. '   ' → logprob: -16.9235897064209
    8. 'in' → logprob: -18.1735897064209
    9. '  ' → logprob: -18.7985897064209
    10. '	range' → logprob: -19.0485897064209

Token 253: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0004920298233628273
    2. 'range' → logprob: -8.250492095947266
    3. 'V' → logprob: -8.500492095947266
    4. ' range' → logprob: -10.875492095947266
    5. '(' → logprob: -13.125492095947266
    6. '   ' → logprob: -13.250492095947266
    7. ' ' → logprob: -13.375492095947266
    8. ' (' → logprob: -14.000492095947266
    9. '(range' → logprob: -14.000492095947266
    10. ' V' → logprob: -14.250492095947266

Token 254: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2253214567899704
    2. ':' → logprob: -2.3503215312957764
    3. '):' → logprob: -3.1003215312957764
    4. ':
' → logprob: -3.1003215312957764
    5. '       ' → logprob: -4.600321292877197
    6. '           ' → logprob: -5.850321292877197
    7. '   ' → logprob: -6.100321292877197
    8. ',' → logprob: -8.225321769714355
    9. ' in' → logprob: -8.350321769714355
    10. 'for' → logprob: -9.100321769714355

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.584861744660884e-05
    2. ' for' → logprob: -10.500045776367188
    3. 'for' → logprob: -11.125045776367188
    4. '       ' → logprob: -13.375045776367188
    5. '   ' → logprob: -14.000045776367188
    6. '               ' → logprob: -15.125045776367188
    7. '	       ' → logprob: -15.125045776367188
    8. '          ' → logprob: -15.500045776367188
    9. '         ' → logprob: -15.750045776367188
    10. '	   ' → logprob: -16.250045776367188

Token 256: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016373811289668083
    2. '               ' → logprob: -4.516373634338379
    3. ' for' → logprob: -5.266373634338379
    4. '           ' → logprob: -9.266373634338379
    5. '   ' → logprob: -9.891373634338379
    6. '       ' → logprob: -13.016373634338379
    7. '	for' → logprob: -13.516373634338379
    8. ' ' → logprob: -14.391373634338379
    9. '                   ' → logprob: -15.891373634338379
    10. '```' → logprob: -18.016374588012695

Token 257: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12883369624614716
    2. ' j' → logprob: -3.003833770751953
    3. ' range' → logprob: -3.128833770751953
    4. 'range' → logprob: -3.628833770751953
    5. 'k' → logprob: -7.503833770751953
    6. '   ' → logprob: -8.878833770751953
    7. ' in' → logprob: -9.128833770751953
    8. ' ' → logprob: -9.753833770751953
    9. 'V' → logprob: -10.628833770751953
    10. 'v' → logprob: -10.753833770751953

Token 258: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0232466422021389
    2. 'in' → logprob: -3.7732465267181396
    3. ' ' → logprob: -14.898246765136719
    4. '   ' → logprob: -15.398246765136719
    5. 'import' → logprob: -16.14824676513672
    6. '	in' → logprob: -16.27324676513672
    7. '           ' → logprob: -16.39824676513672
    8. '=' → logprob: -16.64824676513672
    9. '       ' → logprob: -16.89824676513672
    10. '               ' → logprob: -16.89824676513672

Token 259: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859906807541847
    2. ' range' → logprob: -3.0485990047454834
    3. 'V' → logprob: -11.673599243164062
    4. '(V' → logprob: -13.423599243164062
    5. '(range' → logprob: -13.798599243164062
    6. ' ' → logprob: -14.923599243164062
    7. '   ' → logprob: -15.673599243164062
    8. ' V' → logprob: -15.673599243164062
    9. '           ' → logprob: -17.673599243164062
    10. '  ' → logprob: -18.423599243164062

Token 260: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.00022964231902733445
    2. 'V' → logprob: -9.000229835510254
    3. 'range' → logprob: -9.375229835510254
    4. ' range' → logprob: -11.250229835510254
    5. ' ' → logprob: -13.250229835510254
    6. ' (' → logprob: -13.375229835510254
    7. '   ' → logprob: -13.625229835510254
    8. '           ' → logprob: -14.125229835510254
    9. 'Range' → logprob: -14.875229835510254
    10. '               ' → logprob: -14.875229835510254

Token 261: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47566118836402893
    2. '):' → logprob: -0.9756611585617065
    3. ')' → logprob: -6.725661277770996
    4. '):
' → logprob: -9.225661277770996
    5. '           ' → logprob: -9.850661277770996
    6. ':' → logprob: -9.975661277770996
    7. '=' → logprob: -10.600661277770996
    8. '       ' → logprob: -10.975661277770996
    9. ']:
' → logprob: -10.975661277770996
    10. '):

' → logprob: -10.975661277770996

Token 262: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0031833017710596323
    2. ' if' → logprob: -6.128183364868164
    3. ' adj' → logprob: -7.128183364868164
    4. 'if' → logprob: -8.753183364868164
    5. '                   ' → logprob: -11.378183364868164
    6. 'adj' → logprob: -12.003183364868164
    7. '           ' → logprob: -12.128183364868164
    8. ',' → logprob: -12.878183364868164
    9. ':' → logprob: -13.128183364868164
    10. '                       ' → logprob: -13.128183364868164

Token 263: ' adj' (ID: 20251)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9268858432769775
    2. 'adj' (adapté à ' adj') → logprob: -0.9268858432769775
    3. '                   ' → logprob: -2.0518858432769775
    4. ' adj' → logprob: -2.9268858432769775
    5. ' if' → logprob: -3.6768858432769775
    6. '               ' → logprob: -7.426885604858398
    7. '                       ' → logprob: -8.301885604858398
    8. '   ' → logprob: -8.801885604858398
    9. 'new' → logprob: -11.551885604858398
    10. 'ans' → logprob: -11.551885604858398

Token 264: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.319370302458992e-06
    2. '[I' → logprob: -12.625005722045898
    3. '[j' → logprob: -14.125005722045898
    4. ' [' → logprob: -15.000005722045898
    5. '[' → logprob: -15.375005722045898
    6. '[u' → logprob: -15.625005722045898
    7. '[a' → logprob: -15.750005722045898
    8. '][' → logprob: -16.5000057220459
    9. '```' → logprob: -17.0000057220459
    10. ')[' → logprob: -17.2500057220459

Token 265: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0032063538674265146
    2. '[j' → logprob: -5.753206253051758
    3. '[i' → logprob: -11.378206253051758
    4. ' ][' → logprob: -11.753206253051758
    5. ']' → logprob: -12.378206253051758
    6. '[k' → logprob: -13.878206253051758
    7. ']][' → logprob: -14.003206253051758
    8. '[' → logprob: -14.253206253051758
    9. '```' → logprob: -14.628206253051758
    10. 'j' → logprob: -15.003206253051758

Token 266: 'j' (ID: 73)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.048592709004879
    2. 'j' → logprob: -3.0485928058624268
    3. ' k' → logprob: -13.423592567443848
    4. ']' → logprob: -13.798592567443848
    5. '][' → logprob: -13.798592567443848
    6. '[k' → logprob: -14.923592567443848
    7. ' j' → logprob: -15.048592567443848
    8. '           ' → logprob: -15.048592567443848
    9. '               ' → logprob: -15.298592567443848
    10. '[j' → logprob: -15.548592567443848

Token 267: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.037757646292448044
    2. ']=' → logprob: -3.662757635116577
    3. '>' → logprob: -4.912757873535156
    4. '=' → logprob: -5.537757873535156
    5. ' =' → logprob: -9.787757873535156
    6. ']>' → logprob: -11.537757873535156
    7. ')' → logprob: -11.787757873535156
    8. ' ]' → logprob: -11.912757873535156
    9. '   ' → logprob: -11.912757873535156
    10. 'min' → logprob: -12.037757873535156

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024859998375177383
    2. ' =' → logprob: -6.002486228942871
    3. '=min' → logprob: -11.502486228942871
    4. '>' → logprob: -16.377485275268555
    5. '.=' → logprob: -18.502485275268555
    6. 'min' → logprob: -19.002485275268555
    7. '=

' → logprob: -19.002485275268555
    8. '   ' → logprob: -19.377485275268555
    9. ']=' → logprob: -19.627485275268555
    10. '=
' → logprob: -19.752485275268555

Token 269: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0002613358374219388
    2. ' min' → logprob: -8.250261306762695
    3. '	min' → logprob: -17.625261306762695
    4. '   ' → logprob: -18.500261306762695
    5. '[min' → logprob: -20.500261306762695
    6. '(min' → logprob: -21.375261306762695
    7. '.min' → logprob: -21.750261306762695
    8. 'max' → logprob: -21.875261306762695
    9. '```' → logprob: -22.125261306762695
    10. 'math' → logprob: -22.125261306762695

Token 270: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -6.153795766294934e-06
    2. '(' → logprob: -12.250005722045898
    3. 'adj' → logprob: -13.750005722045898
    4. '(
' → logprob: -15.500005722045898
    5. '(ad' → logprob: -18.2500057220459
    6. ' adj' → logprob: -18.7500057220459
    7. '(ans' → logprob: -20.5000057220459
    8. '(arr' → logprob: -20.8750057220459
    9. '(

' → logprob: -21.5000057220459
    10. '(att' → logprob: -21.7500057220459

Token 271: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. ' [' → logprob: -14.875001907348633
    3. '][' → logprob: -15.125001907348633
    4. ')[' → logprob: -15.250001907348633
    5. '[' → logprob: -15.500001907348633
    6. 'i' → logprob: -15.625001907348633
    7. '```' → logprob: -15.875001907348633
    8. '[j' → logprob: -16.375001907348633
    9. '   ' → logprob: -16.750001907348633
    10. '
' → logprob: -17.125001907348633

Token 272: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0026647194754332304
    2. '[i' → logprob: -6.002664566040039
    3. '[j' → logprob: -8.877664566040039
    4. ']' → logprob: -10.502664566040039
    5. ' ][' → logprob: -11.127664566040039
    6. '[' → logprob: -13.127664566040039
    7. '[k' → logprob: -13.252664566040039
    8. ']][' → logprob: -14.127664566040039
    9. 'i' → logprob: -14.502664566040039
    10. '   ' → logprob: -15.252664566040039

Token 273: 'j' (ID: 73)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0011910604080185294
    2. 'j' → logprob: -7.001191139221191
    3. '[k' → logprob: -9.001191139221191
    4. ']' → logprob: -9.376191139221191
    5. '])' → logprob: -10.126191139221191
    6. '][' → logprob: -11.126191139221191
    7. ' k' → logprob: -12.126191139221191
    8. 'i' → logprob: -12.126191139221191
    9. '
' → logprob: -13.376191139221191
    10. '[j' → logprob: -13.876191139221191

Token 274: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018811618210747838
    2. '],' → logprob: -6.626881122589111
    3. ' ,' → logprob: -7.626881122589111
    4. 'adj' → logprob: -10.12688159942627
    5. ',
' → logprob: -11.00188159942627
    6. '+' → logprob: -11.87688159942627
    7. '],
' → logprob: -13.75188159942627
    8. ']' → logprob: -14.00188159942627
    9. ']+' → logprob: -14.37688159942627
    10. '   ' → logprob: -14.87688159942627

Token 275: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0234956294298172
    2. ' adj' → logprob: -3.773495674133301
    3. '   ' → logprob: -8.3984956741333
    4. '    ' → logprob: -11.5234956741333
    5. '  ' → logprob: -12.2734956741333
    6. ' ' → logprob: -12.5234956741333
    7. '           ' → logprob: -13.3984956741333
    8. '               ' → logprob: -13.3984956741333
    9. '       ' → logprob: -13.6484956741333
    10. '     ' → logprob: -14.1484956741333

Token 276: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '][' → logprob: -14.500000953674316
    3. 'i' → logprob: -16.0
    4. ')[' → logprob: -17.625
    5. '[j' → logprob: -17.875
    6. '[I' → logprob: -18.0
    7. '[
' → logprob: -18.125
    8. '
' → logprob: -18.125
    9. '[' → logprob: -18.5
    10. '```' → logprob: -18.75

Token 277: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003413031517993659
    2. '[i' → logprob: -8.000341415405273
    3. '[k' → logprob: -13.125341415405273
    4. ' ][' → logprob: -13.875341415405273
    5. ']' → logprob: -14.000341415405273
    6. '[' → logprob: -14.250341415405273
    7. '[I' → logprob: -14.625341415405273
    8. '[j' → logprob: -15.125341415405273
    9. ')[' → logprob: -15.875341415405273
    10. '}[' → logprob: -16.125341415405273

Token 278: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.5048530030981055e-06
    2. '[k' → logprob: -14.125001907348633
    3. '
' → logprob: -14.625001907348633
    4. ']' → logprob: -16.000001907348633
    5. ' k' → logprob: -16.875001907348633
    6. 'i' → logprob: -17.000001907348633
    7. '])' → logprob: -18.750001907348633
    8. ')' → logprob: -18.875001907348633
    9. 'j' → logprob: -19.250001907348633
    10. '][' → logprob: -19.375001907348633

Token 279: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008899956941604614
    2. ']+' → logprob: -5.008900165557861
    3. '][' → logprob: -6.133900165557861
    4. '])' → logprob: -12.008899688720703
    5. '[j' → logprob: -12.133899688720703
    6. ' ]' → logprob: -13.383899688720703
    7. '],' → logprob: -15.258899688720703
    8. '[k' → logprob: -15.383899688720703
    9. 'k' → logprob: -15.758899688720703
    10. '[' → logprob: -15.758899688720703

Token 280: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38179028034210205
    2. ']+' → logprob: -1.381790280342102
    3. '[j' → logprob: -3.3817901611328125
    4. '+' → logprob: -3.6317901611328125
    5. '[' → logprob: -5.8817901611328125
    6. '+j' → logprob: -6.6317901611328125
    7. '][' → logprob: -7.0067901611328125
    8. ' +' → logprob: -7.6317901611328125
    9. '[i' → logprob: -9.756790161132812
    10. '[k' → logprob: -10.131790161132812

Token 281: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.004079708829522133
    2. ' adj' → logprob: -5.504079818725586
    3. '   ' → logprob: -14.254079818725586
    4. '           ' → logprob: -15.629079818725586
    5. ' ' → logprob: -16.379079818725586
    6. '(adj' → logprob: -16.504079818725586
    7. '               ' → logprob: -16.754079818725586
    8. '  ' → logprob: -17.004079818725586
    9. 'ad' → logprob: -17.379079818725586
    10. '    ' → logprob: -17.504079818725586

Token 282: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.5451681974809617e-05
    2. 'k' → logprob: -11.500015258789062
    3. '][' → logprob: -12.875015258789062
    4. '[i' → logprob: -13.750015258789062
    5. '[' → logprob: -13.875015258789062
    6. '```' → logprob: -15.000015258789062
    7. '[
' → logprob: -15.750015258789062
    8. '[f' → logprob: -17.500015258789062
    9. ')[' → logprob: -17.750015258789062
    10. '	k' → logprob: -18.250015258789062

Token 283: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001290454383706674
    2. '[k' → logprob: -9.250128746032715
    3. '[j' → logprob: -10.875128746032715
    4. ']' → logprob: -11.375128746032715
    5. 'k' → logprob: -13.500128746032715
    6. '[' → logprob: -14.875128746032715
    7. '[l' → logprob: -15.625128746032715
    8. ' ][' → logprob: -15.625128746032715
    9. '[i' → logprob: -16.12512969970703
    10. ''][' → logprob: -16.50012969970703

Token 284: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.6047699318733066e-05
    2. 'k' → logprob: -11.125016212463379
    3. ' j' → logprob: -14.000016212463379
    4. '1' → logprob: -15.125016212463379
    5. 'i' → logprob: -16.500015258789062
    6. '
' → logprob: -17.000015258789062
    7. '[j' → logprob: -17.500015258789062
    8. 's' → logprob: -18.625015258789062
    9. '   ' → logprob: -18.750015258789062
    10. 'adj' → logprob: -18.750015258789062

Token 285: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.908022285439074e-05
    2. '))' → logprob: -10.000059127807617
    3. ')
' → logprob: -11.375059127807617
    4. '])' → logprob: -13.875059127807617
    5. ' )' → logprob: -14.375059127807617
    6. ')))' → logprob: -15.000059127807617
    7. '）' → logprob: -16.625059127807617
    8. '               ' → logprob: -16.750059127807617
    9. ')])' → logprob: -17.625059127807617
    10. ']' → logprob: -17.750059127807617

Token 286: '                
' (ID: 13466)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5604380965232849
    2. '<|end|>' → logprob: -0.9354380965232849
    3. ' dp' → logprob: -4.68543815612793
    4. '
' → logprob: -5.31043815612793
    5. 'dp' → logprob: -5.56043815612793
    6. '#' → logprob: -5.81043815612793
    7. ' for' → logprob: -5.93543815612793
    8. 'for' → logprob: -6.31043815612793
    9. ')' → logprob: -6.56043815612793
    10. 'import' → logprob: -6.68543815612793

Token 287: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3436513841152191
    2. 'mask' → logprob: -2.343651294708252
    3. '   ' → logprob: -2.968651294708252
    4. '#' → logprob: -3.843651294708252
    5. 'm' → logprob: -3.843651294708252
    6. 'odd' → logprob: -4.343651294708252
    7. 'for' → logprob: -4.593651294708252
    8. 'def' → logprob: -4.718651294708252
    9. 'match' → logprob: -4.968651294708252
    10. 'valid' → logprob: -5.218651294708252

Token 288: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3255089819431305
    2. 'odd' → logprob: -2.7005090713500977
    3. '#' (adapté à ' #') → logprob: -3.2005090713500977
    4. 'def' → logprob: -3.7005090713500977
    5. 'memo' → logprob: -4.075509071350098
    6. 'mask' → logprob: -4.200509071350098
    7. 'm' → logprob: -4.325509071350098
    8. 'from' → logprob: -4.450509071350098
    9. 'bit' → logprob: -4.575509071350098
    10. 'pairs' → logprob: -4.825509071350098

Token 289: ' Minimum' (ID: 47219)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14721719920635223
    2. 'memo' → logprob: -3.522217273712158
    3. 'def' → logprob: -3.772217273712158
    4. 'odd' → logprob: -4.022217273712158
    5. 'from' → logprob: -4.272217273712158
    6. '#' → logprob: -4.647217273712158
    7. 'm' → logprob: -5.147217273712158
    8. 'd' → logprob: -5.897217273712158
    9. 'mask' → logprob: -5.897217273712158
    10. 'pair' → logprob: -6.022217273712158

Token 290: ' weighted' (ID: 70288)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -1.0787547826766968
    2. 'dp' → logprob: -1.2037547826766968
    3. 'cost' → logprob: -2.3287549018859863
    4. 'matching' → logprob: -2.8287549018859863
    5. 'perfect' → logprob: -2.8287549018859863
    6. 'match' → logprob: -2.9537549018859863
    7. 'pairs' → logprob: -3.5787549018859863
    8. 'weight' → logprob: -4.203754901885986
    9. 'import' → logprob: -4.453754901885986
    10. 'odd' → logprob: -4.953754901885986

Token 291: ' matching' (ID: 20238)
  Prédit: 'perfect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perfect' → logprob: -0.01412142813205719
    2. ' perfect' → logprob: -4.6391215324401855
    3. 'matching' → logprob: -5.5141215324401855
    4. 'weight' → logprob: -8.889121055603027
    5. '#' → logprob: -9.514121055603027
    6. 'Perfect' → logprob: -10.889121055603027
    7. 'perf' → logprob: -11.014121055603027
    8. 'odd' → logprob: -11.014121055603027
    9. 'pair' → logprob: -11.264121055603027
    10. ' matching' → logprob: -11.389121055603027

Token 292: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3264245390892029
    2. 'def' → logprob: -1.8264245986938477
    3. '   ' → logprob: -2.9514245986938477
    4. ' dp' → logprob: -3.5764245986938477
    5. 'import' → logprob: -4.451424598693848
    6. '    
' → logprob: -5.576424598693848
    7. 'from' → logprob: -5.576424598693848
    8. 'for' → logprob: -6.326424598693848
    9. 'mask' → logprob: -6.451424598693848
    10. ' for' → logprob: -6.576424598693848

Token 293: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.046442750841379166
    2. 'def' → logprob: -3.671442747116089
    3. '   ' → logprob: -5.296442985534668
    4. 'm' → logprob: -5.921442985534668
    5. 'from' → logprob: -5.921442985534668
    6. 'memo' → logprob: -6.296442985534668
    7. ' dp' → logprob: -6.546442985534668
    8. 'match' → logprob: -6.671442985534668
    9. 'mask' → logprob: -7.046442985534668
    10. 'import' → logprob: -7.046442985534668

Token 294: ' mw' (ID: 18407)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03891855850815773
    2. 'memo' → logprob: -4.913918495178223
    3. 'from' → logprob: -5.163918495178223
    4. 'def' → logprob: -5.288918495178223
    5. 'INF' → logprob: -5.413918495178223
    6. 'm' → logprob: -5.788918495178223
    7. 'match' → logprob: -5.913918495178223
    8. 'd' → logprob: -6.913918495178223
    9. 'DP' → logprob: -7.038918495178223
    10. 'f' → logprob: -7.163918495178223

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3336867690086365
    2. 'atching' → logprob: -2.3336868286132812
    3. '=' → logprob: -2.8336868286132812
    4. 'atch' → logprob: -2.9586868286132812
    5. '=[]' → logprob: -3.5836868286132812
    6. '_mask' → logprob: -4.583686828613281
    7. '_m' → logprob: -5.208686828613281
    8. '_b' → logprob: -5.208686828613281
    9. 't' → logprob: -5.333686828613281
    10. 'm' → logprob: -5.583686828613281

Token 296: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14474298059940338
    2. '{}' → logprob: -2.269742965698242
    3. '{' → logprob: -3.519742965698242
    4. '[-' → logprob: -7.019742965698242
    5. 'math' → logprob: -8.269742965698242
    6. ' [' → logprob: -9.269742965698242
    7. '{}
' → logprob: -9.394742965698242
    8. 'dict' → logprob: -9.394742965698242
    9. '[int' → logprob: -9.644742965698242
    10. '[m' → logprob: -10.019742965698242

Token 297: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.9573502540588379
    2. 'float' → logprob: -1.207350254058838
    3. 'math' → logprob: -1.582350254058838
    4. '-' → logprob: -3.207350254058838
    5. '0' → logprob: -3.957350254058838
    6. '140' → logprob: -3.957350254058838
    7. 'None' → logprob: -4.082350254058838
    8. '[' → logprob: -4.582350254058838
    9. '(no' → logprob: -6.582350254058838
    10. 'none' → logprob: -7.082350254058838

Token 298: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.02217697724699974
    2. 'edge' → logprob: -3.89717698097229
    3. 'dge' → logprob: -6.647176742553711
    4. ']' → logprob: -9.772176742553711
    5. 'Edge' → logprob: -10.022176742553711
    6. 'e' → logprob: -10.272176742553711
    7. '-edge' → logprob: -10.272176742553711
    8. '_EDGE' → logprob: -10.522176742553711
    9. 'x' → logprob: -11.147176742553711
    10. 'EDGE' → logprob: -11.522176742553711

Token 299: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003370118502061814
    2. ']*(' → logprob: -8.375336647033691
    3. ']*' → logprob: -9.625336647033691
    4. ' for' → logprob: -10.625336647033691
    5. 'for' → logprob: -11.500336647033691
    6. '   ' → logprob: -12.625336647033691
    7. ' ' → logprob: -13.500336647033691
    8. '*' → logprob: -14.750336647033691
    9. ' ]' → logprob: -15.125336647033691
    10. '()]' → logprob: -16.000337600708008

Token 300: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1103836297988892
    2. ']' → logprob: -1.2353836297988892
    3. 'for' → logprob: -1.3603836297988892
    4. ']*(' → logprob: -3.4853835105895996
    5. '[' → logprob: -3.6103835105895996
    6. ' *' → logprob: -3.7353835105895996
    7. '*' → logprob: -3.9853835105895996
    8. ']*' → logprob: -5.2353835105896
    9. '*(' → logprob: -5.4853835105896
    10. ')' → logprob: -5.7353835105896

Token 301: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010007746750488877
    2. 'V' → logprob: -7.626000881195068
    3. '(V' → logprob: -9.25100040435791
    4. '(E' → logprob: -9.25100040435791
    5. 'odd' → logprob: -9.25100040435791
    6. 'E' → logprob: -10.00100040435791
    7. 'no' → logprob: -10.00100040435791
    8. '(no' → logprob: -10.25100040435791
    9. 'len' → logprob: -11.12600040435791
    10. '(len' → logprob: -11.12600040435791

Token 302: 'odd' (ID: 18303)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028418414294719696
    2. '(' → logprob: -5.877841949462891
    3. ' ' → logprob: -11.37784194946289
    4. '   ' → logprob: -11.37784194946289
    5. '2' → logprob: -12.00284194946289
    6. 'odd' → logprob: -12.37784194946289
    7. '409' → logprob: -13.50284194946289
    8. 'no' → logprob: -15.25284194946289
    9. '102' → logprob: -15.50284194946289
    10. '           ' → logprob: -15.50284194946289

Token 303: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.011373155459296e-05
    2. 'b' → logprob: -10.500030517578125
    3. 'V' → logprob: -14.125030517578125
    4. ')' → logprob: -15.125030517578125
    5. '_a' → logprob: -15.375030517578125
    6. 'B' → logprob: -15.500030517578125
    7. '1' → logprob: -16.312530517578125
    8. '#' → logprob: -16.312530517578125
    9. '   ' → logprob: -16.750030517578125
    10. '2' → logprob: -17.187530517578125

Token 304: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008812114829197526
    2. ' +' → logprob: -7.250881195068359
    3. ')' → logprob: -9.12588119506836
    4. ']' → logprob: -10.62588119506836
    5. '])' → logprob: -11.62588119506836
    6. ']+' → logprob: -12.12588119506836
    7. '+)' → logprob: -12.50088119506836
    8. ')]' → logprob: -12.62588119506836
    9. '[' → logprob: -12.87588119506836
    10. '
' → logprob: -13.25088119506836

Token 305: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.750006675720215
    3. '(' → logprob: -13.250006675720215
    4. '2' → logprob: -14.000006675720215
    5. ')' → logprob: -15.500006675720215
    6. '-' → logprob: -16.25000762939453
    7. 'V' → logprob: -16.31250762939453
    8. '```' → logprob: -16.37500762939453
    9. '(V' → logprob: -16.50000762939453
    10. '0' → logprob: -16.62500762939453

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. '2' → logprob: -12.500004768371582
    3. ' ' → logprob: -13.875004768371582
    4. '(' → logprob: -15.625004768371582
    5. '```' → logprob: -17.1250057220459
    6. '-' → logprob: -17.2500057220459
    7. '0' → logprob: -17.7500057220459
    8. '3' → logprob: -18.1250057220459
    9. '   ' → logprob: -18.1875057220459
    10. '4' → logprob: -18.1875057220459

Token 307: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.543733904138207e-05
    2. ')
' → logprob: -9.37509536743164
    3. ']' → logprob: -13.00009536743164
    4. '**' → logprob: -13.25009536743164
    5. ')

' → logprob: -13.62509536743164
    6. ' )' → logprob: -13.87509536743164
    7. '[' → logprob: -14.25009536743164
    8. 'for' → logprob: -14.25009536743164
    9. '1' → logprob: -14.50009536743164
    10. '
' → logprob: -14.75009536743164

Token 308: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: ' mw' (ID: 18407)
  Prédit: 'mw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mw' (adapté à ' mw') → logprob: -1.170928955078125
    2. '[' → logprob: -1.420928955078125
    3. 'for' → logprob: -1.545928955078125
    4. '0' → logprob: -1.920928955078125
    5. '1' → logprob: -2.795928955078125
    6. 'm' → logprob: -5.170928955078125
    7. ' mw' → logprob: -5.795928955078125
    8. '[m' → logprob: -5.795928955078125
    9. 'import' → logprob: -6.045928955078125
    10. '...' → logprob: -6.295928955078125

Token 310: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01048740278929472
    2. ' =' → logprob: -4.6354875564575195
    3. '=' → logprob: -7.3854875564575195
    4. '=[' → logprob: -9.26048755645752
    5. ' =[' → logprob: -12.38548755645752
    6. '[m' → logprob: -12.63548755645752
    7. ' [' → logprob: -13.01048755645752
    8. '```' → logprob: -13.76048755645752
    9. ']' → logprob: -14.13548755645752
    10. '.' → logprob: -14.51048755645752

Token 311: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026753442944027483
    2. 'odd' → logprob: -8.37526798248291
    3. ' ' → logprob: -10.87526798248291
    4. '1' → logprob: -12.37526798248291
    5. '(' → logprob: -12.50026798248291
    6. '[' → logprob: -13.12526798248291
    7. ']' → logprob: -13.50026798248291
    8. '...' → logprob: -14.06276798248291
    9. '000' → logprob: -14.06276798248291
    10. '-' → logprob: -14.18776798248291

Token 312: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09922449290752411
    2. '=' → logprob: -2.59922456741333
    3. ' =' → logprob: -4.59922456741333
    4. ']=' → logprob: -4.59922456741333
    5. ' ]' → logprob: -11.849224090576172
    6. ')' → logprob: -13.849224090576172
    7. '0' → logprob: -14.474224090576172
    8. ' ' → logprob: -14.599224090576172
    9. '[' → logprob: -14.849224090576172
    10. ')=' → logprob: -15.724224090576172

Token 313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759397745132446
    2. ' =' → logprob: -0.8259397745132446
    3. ']=' → logprob: -15.700940132141113
    4. ']' → logprob: -16.325939178466797
    5. ' ' → logprob: -16.700939178466797
    6. '＝' → logprob: -17.575939178466797
    7. '[' → logprob: -18.825939178466797
    8. '.=' → logprob: -19.200939178466797
    9. ',' → logprob: -19.700939178466797
    10. '0' → logprob: -19.950939178466797

Token 314: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.75002098083496
    4. '[' → logprob: -18.87502098083496
    5. '  ' → logprob: -19.25002098083496
    6. '000' → logprob: -19.50002098083496
    7. '۰' → logprob: -20.37502098083496
    8. '00' → logprob: -20.75002098083496
    9. '```' → logprob: -21.12502098083496
    10. '1' → logprob: -21.12502098083496

Token 315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.3750057220459
    4. '[' → logprob: -18.3750057220459
    5. '000' → logprob: -18.6250057220459
    6. '1' → logprob: -19.2500057220459
    7. '00' → logprob: -19.5625057220459
    8. '  ' → logprob: -19.6250057220459
    9. '۰' → logprob: -20.0000057220459
    10. '```' → logprob: -20.1250057220459

Token 316: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8266593813896179
    2. ' for' → logprob: -0.9516593813896179
    3. '<|end|>' → logprob: -2.3266594409942627
    4. '   ' → logprob: -2.7016594409942627
    5. '
' → logprob: -4.576659202575684
    6. ')' → logprob: -7.451659202575684
    7. ' ' → logprob: -7.826659202575684
    8. '    
' → logprob: -8.951659202575684
    9. ' 
' → logprob: -9.701659202575684
    10. '  ' → logprob: -10.326659202575684

Token 317: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0717143565416336
    2. ' for' → logprob: -2.696714401245117
    3. '<|end|>' → logprob: -6.571714401245117
    4. ')' → logprob: -8.446714401245117
    5. '   ' → logprob: -9.446714401245117
    6. '
' → logprob: -10.446714401245117
    7. ' ' → logprob: -11.196714401245117
    8. ' 
' → logprob: -11.821714401245117
    9. ']' → logprob: -11.946714401245117
    10. '```' → logprob: -12.196714401245117

Token 318: ' digits' (ID: 37806)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020294437126722187
    2. ' for' → logprob: -9.625203132629395
    3. 'mask' → logprob: -9.625203132629395
    4. '   ' → logprob: -10.125203132629395
    5. 'm' → logprob: -11.000203132629395
    6. 'def' → logprob: -12.500203132629395
    7. 'from' → logprob: -12.875203132629395
    8. 'i' → logprob: -13.125203132629395
    9. 'b' → logprob: -13.500203132629395
    10. 'bit' → logprob: -14.375203132629395

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009841318242251873
    2. '=' → logprob: -4.634841442108154
    3. '_count' → logprob: -10.259840965270996
    4. 's' → logprob: -11.259840965270996
    5. 'count' → logprob: -11.259840965270996
    6. 'num' → logprob: -12.509840965270996
    7. ' ' → logprob: -12.759840965270996
    8. '_num' → logprob: -12.759840965270996
    9. 'cnt' → logprob: -12.759840965270996
    10. '_' → logprob: -13.009840965270996

Token 320: ' int' (ID: 677)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8534108996391296
    2. '[]' → logprob: -1.6034109592437744
    3. 'bin' → logprob: -1.7284109592437744
    4. '[]
' → logprob: -2.3534109592437744
    5. 'odd' → logprob: -2.9784109592437744
    6. '[]

' → logprob: -3.9784109592437744
    7. '[int' → logprob: -4.353410720825195
    8. '0' → logprob: -4.978410720825195
    9. '[m' → logprob: -5.978410720825195
    10. 'int' → logprob: -5.978410720825195

Token 321: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.316265732049942
    2. '(' → logprob: -1.9412657022476196
    3. '(bin' → logprob: -2.066265821456909
    4. '(bit' → logprob: -7.56626558303833
    5. '((' → logprob: -8.566266059875488
    6. 'bin' → logprob: -8.816266059875488
    7. '.bit' → logprob: -10.441266059875488
    8. 'math' → logprob: -11.566266059875488
    9. '(V' → logprob: -11.566266059875488
    10. '(len' → logprob: -12.441266059875488

Token 322: '.log' (ID: 2659)
  Prédit: '.log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.log' → logprob: -0.4061964154243469
    2. '(log' → logprob: -1.6561963558197021
    3. 'log' → logprob: -2.281196355819702
    4. '.bit' → logprob: -3.406196355819702
    5. '(math' → logprob: -5.906196594238281
    6. 'bit' → logprob: -6.031196594238281
    7. '.ceil' → logprob: -7.031196594238281
    8. 'ceil' → logprob: -7.531196594238281
    9. '(bit' → logprob: -8.531196594238281
    10. '32' → logprob: -8.531196594238281

Token 323: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.500005722045898
    3. 'odd' → logprob: -14.250005722045898
    4. '10' → logprob: -14.875005722045898
    5. '```' → logprob: -14.875005722045898
    6. '(len' → logprob: -15.375005722045898
    7. ' ' → logprob: -15.500005722045898
    8. '   ' → logprob: -17.1250057220459
    9. ')' → logprob: -17.1250057220459
    10. 'len' → logprob: -17.3750057220459

Token 324: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00034940900513902307
    2. 'odd' → logprob: -8.000349044799805
    3. ' (' → logprob: -11.625349044799805
    4. '((' → logprob: -12.625349044799805
    5. ' odd' → logprob: -14.625349044799805
    6. '   ' → logprob: -15.125349044799805
    7. '(
' → logprob: -15.500349044799805
    8. ')' → logprob: -15.625349044799805
    9. '(old' → logprob: -16.375349044799805
    10. 'od' → logprob: -16.500349044799805

Token 325: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.006119571626186371
    2. '(' → logprob: -5.131119728088379
    3. '   ' → logprob: -9.506119728088379
    4. 'od' → logprob: -9.506119728088379
    5. ' odd' → logprob: -10.256119728088379
    6. ')' → logprob: -13.131119728088379
    7. 'bin' → logprob: -13.256119728088379
    8. '  ' → logprob: -14.131119728088379
    9. '1' → logprob: -14.506119728088379
    10. ' ' → logprob: -14.631119728088379

Token 326: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -15.875
    3. '   ' → logprob: -16.875
    4. 'b' → logprob: -17.0
    5. '(' → logprob: -18.125
    6. '_' → logprob: -18.625
    7. '[' → logprob: -18.875
    8. '	b' → logprob: -19.125
    9. '_a' → logprob: -19.25
    10. ' ' → logprob: -19.25

Token 327: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005996813531965017
    2. ')+' → logprob: -5.2559967041015625
    3. ' )' → logprob: -7.8809967041015625
    4. '))' → logprob: -8.130996704101562
    5. '())' → logprob: -9.630996704101562
    6. '))+' → logprob: -11.380996704101562
    7. ' ' → logprob: -11.880996704101562
    8. '()' → logprob: -12.505996704101562
    9. '+' → logprob: -14.005996704101562
    10. '   ' → logprob: -14.505996704101562

Token 328: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7185937166213989
    2. ' +' → logprob: -0.7185937166213989
    3. '   ' → logprob: -4.218593597412109
    4. '()+' → logprob: -5.218593597412109
    5. '()' → logprob: -5.468593597412109
    6. ')' → logprob: -8.46859359741211
    7. ')+' → logprob: -8.59359359741211
    8. '
' → logprob: -8.96859359741211
    9. 'for' → logprob: -9.34359359741211
    10. ' ' → logprob: -10.71859359741211

Token 329: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012928384239785373
    2. ' ' → logprob: -9.250129699707031
    3. '2' → logprob: -10.375129699707031
    4. '   ' → logprob: -14.437629699707031
    5. '
' → logprob: -14.937629699707031
    6. '(' → logprob: -15.500129699707031
    7. '  ' → logprob: -16.50012969970703
    8. '0' → logprob: -16.81262969970703
    9. ',' → logprob: -17.00012969970703
    10. ' (' → logprob: -17.18762969970703

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.137130498653278e-05
    2. ' ' → logprob: -9.500081062316895
    3. '2' → logprob: -12.125081062316895
    4. '   ' → logprob: -14.250081062316895
    5. '
' → logprob: -16.18758201599121
    6. '  ' → logprob: -16.25008201599121
    7. '0' → logprob: -16.93758201599121
    8. '    ' → logprob: -17.43758201599121
    9. '...' → logprob: -18.12508201599121
    10. '3' → logprob: -18.25008201599121

Token 331: '

' (ID: 279)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4494025409221649
    2. 'for' → logprob: -1.4494025707244873
    3. '   ' → logprob: -2.0744025707244873
    4. '
' → logprob: -7.324402332305908
    5. '<|end|>' → logprob: -7.949402332305908
    6. '    
' → logprob: -8.449402809143066
    7. ')' → logprob: -8.949402809143066
    8. '  
' → logprob: -9.199402809143066
    9. ' 
' → logprob: -9.574402809143066
    10. ' ' → logprob: -9.699402809143066

Token 332: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00283281528390944
    2. ' for' → logprob: -5.877832889556885
    3. '   ' → logprob: -11.252832412719727
    4. ')' → logprob: -12.627832412719727
    5. '
' → logprob: -12.627832412719727
    6. 'def' → logprob: -13.627832412719727
    7. ' ' → logprob: -13.627832412719727
    8. '```' → logprob: -13.752832412719727
    9. ' 
' → logprob: -13.877832412719727
    10. 'from' → logprob: -14.127832412719727

Token 333: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00041125001735053957
    2. ' for' → logprob: -7.875411033630371
    3. '   ' → logprob: -10.500411033630371
    4. 'def' → logprob: -13.750411033630371
    5. ' ' → logprob: -14.125411033630371
    6. 'i' → logprob: -14.625411033630371
    7. 'mask' → logprob: -15.375411033630371
    8. '    
' → logprob: -15.500411033630371
    9. 'from' → logprob: -15.875411033630371
    10. 'f' → logprob: -16.000411987304688

Token 334: ' b' (ID: 287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2771011590957642
    2. 's' → logprob: -1.2771011590957642
    3. 'mask' → logprob: -1.7771011590957642
    4. 'b' → logprob: -2.4021010398864746
    5. 'm' → logprob: -3.4021010398864746
    6. 'bm' → logprob: -3.7771010398864746
    7. ' mask' → logprob: -4.027101039886475
    8. ' s' → logprob: -4.027101039886475
    9. 'x' → logprob: -4.152101039886475
    10. 'S' → logprob: -4.527101039886475

Token 335: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020841872319579124
    2. 'in' → logprob: -3.8958418369293213
    3. '   ' → logprob: -9.395841598510742
    4. '1' → logprob: -10.270841598510742
    5. 'b' → logprob: -10.270841598510742
    6. ' ' → logprob: -10.395841598510742
    7. '_' → logprob: -10.520841598510742
    8. 'd' → logprob: -11.520841598510742
    9. '[' → logprob: -11.520841598510742
    10. '  ' → logprob: -11.645841598510742

Token 336: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011049000546336174
    2. ' range' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.761049270629883
    4. '[' → logprob: -15.136049270629883
    5. '   ' → logprob: -15.511049270629883
    6. 'odd' → logprob: -15.636049270629883
    7. '(range' → logprob: -15.886049270629883
    8. '  ' → logprob: -17.011049270629883
    9. '	range' → logprob: -17.636049270629883
    10. 'r' → logprob: -17.886049270629883

Token 337: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006899608764797449
    2. '1' → logprob: -5.131899833679199
    3. 'odd' → logprob: -7.256899833679199
    4. '(m' → logprob: -8.2568998336792
    5. '   ' → logprob: -13.2568998336792
    6. ' ' → logprob: -14.0068998336792
    7. '(no' → logprob: -14.5068998336792
    8. '(o' → logprob: -14.7568998336792
    9. '((' → logprob: -14.8818998336792
    10. '2' → logprob: -15.3818998336792

Token 338: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.3873882591724396
    2. '1' → logprob: -1.1373882293701172
    3. '(' → logprob: -8.012388229370117
    4. 'mw' → logprob: -8.887388229370117
    5. '0' → logprob: -11.262388229370117
    6. ' odd' → logprob: -11.262388229370117
    7. '   ' → logprob: -11.887388229370117
    8. ' ' → logprob: -12.137388229370117
    9. 'od' → logprob: -13.012388229370117
    10. '2' → logprob: -13.137388229370117

Token 339: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -4.596781946020201e-05
    2. '+' → logprob: -10.375045776367188
    3. ')' → logprob: -12.375045776367188
    4. '   ' → logprob: -12.500045776367188
    5. 'b' → logprob: -13.875045776367188
    6. ')+' → logprob: -13.875045776367188
    7. '_' → logprob: -14.250045776367188
    8. '+b' → logprob: -14.625045776367188
    9. ' ' → logprob: -14.875045776367188
    10. '_B' → logprob: -15.000045776367188

Token 340: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12757018208503723
    2. ' +' → logprob: -2.127570152282715
    3. '):' → logprob: -7.502570152282715
    4. '):
' → logprob: -9.377570152282715
    5. '   ' → logprob: -12.627570152282715
    6. ')' → logprob: -14.252570152282715
    7. '1' → logprob: -15.002570152282715
    8. '+
' → logprob: -15.002570152282715
    9. '()+' → logprob: -15.627570152282715
    10. ',' → logprob: -15.877570152282715

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038287051022052765
    2. ' if' → logprob: -3.5382871627807617
    3. '<|end|>' → logprob: -5.538287162780762
    4. '   ' → logprob: -5.788287162780762
    5. ' ' → logprob: -7.038287162780762
    6. '    ' → logprob: -8.288287162780762
    7. 'if' → logprob: -9.413287162780762
    8. '	   ' → logprob: -9.663287162780762
    9. ',' → logprob: -10.413287162780762
    10. '<|end|>' → logprob: -10.663287162780762

Token 342: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.035093650221824646
    2. ' if' → logprob: -4.160093784332275
    3. '       ' → logprob: -4.285093784332275
    4. '   ' → logprob: -5.285093784332275
    5. '	if' → logprob: -10.285093307495117
    6. ' ' → logprob: -13.285093307495117
    7. '           ' → logprob: -13.660093307495117
    8. '  ' → logprob: -13.660093307495117
    9. '    ' → logprob: -14.160093307495117
    10. '     ' → logprob: -15.160093307495117

Token 343: ' odd' (ID: 14210)
  Prédit: 'mw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mw' → logprob: -0.12781421840190887
    2. '(m' → logprob: -2.627814292907715
    3. ' mw' → logprob: -4.377814292907715
    4. 'not' → logprob: -4.502814292907715
    5. 'bin' → logprob: -4.627814292907715
    6. '(b' → logprob: -5.377814292907715
    7. '(bin' → logprob: -5.877814292907715
    8. '(not' → logprob: -6.002814292907715
    9. ' not' → logprob: -6.752814292907715
    10. '((' → logprob: -6.752814292907715

Token 344: '_one' (ID: 26979)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.3488456904888153
    2. '_one' → logprob: -1.2238457202911377
    3. 'one' → logprob: -8.598845481872559
    4. 'One' → logprob: -9.598845481872559
    5. 'b' → logprob: -9.848845481872559
    6. '_' → logprob: -10.723845481872559
    7. '_a' → logprob: -11.598845481872559
    8. ' one' → logprob: -11.598845481872559
    9. '[b' → logprob: -12.098845481872559
    10. '_ONE' → logprob: -12.348845481872559

Token 345: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00022487416572403163
    2. '(' → logprob: -8.750225067138672
    3. '((' → logprob: -9.750225067138672
    4. ' (' → logprob: -11.875225067138672
    5. '(
' → logprob: -14.500225067138672
    6. 'b' → logprob: -15.625225067138672
    7. '(m' → logprob: -15.750225067138672
    8. '(bit' → logprob: -16.250225067138672
    9. '   ' → logprob: -16.875225067138672
    10. '(B' → logprob: -17.000225067138672

Token 346: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49018731713294983
    2. '):' → logprob: -1.1151872873306274
    3. '):
' → logprob: -3.490187406539917
    4. ')==' → logprob: -3.865187406539917
    5. ' )' → logprob: -5.615187168121338
    6. '==' → logprob: -6.240187168121338
    7. ' ):' → logprob: -6.865187168121338
    8. ' ==' → logprob: -6.865187168121338
    9. ' and' → logprob: -8.865187644958496
    10. '       ' → logprob: -9.740187644958496

Token 347: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0722571313381195
    2. ' continue' → logprob: -2.9472570419311523
    3. 'continue' → logprob: -5.197257041931152
    4. '	continue' → logprob: -5.322257041931152
    5. '	' → logprob: -6.197257041931152
    6. ':' → logprob: -6.322257041931152
    7. '           ' → logprob: -6.697257041931152
    8. '   ' → logprob: -7.322257041931152
    9. '	   ' → logprob: -7.447257041931152
    10. '	       ' → logprob: -8.572257041931152

Token 348: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3095075786113739
    2. ' continue' → logprob: -1.6845076084136963
    3. '       ' → logprob: -2.5595076084136963
    4. '	continue' → logprob: -6.059507369995117
    5. '   ' → logprob: -7.059507369995117
    6. ' ' → logprob: -10.184507369995117
    7. '           ' → logprob: -10.434507369995117
    8. '_continue' → logprob: -11.059507369995117
    9. 'contin' → logprob: -11.684507369995117
    10. ' ' → logprob: -11.809507369995117

Token 349: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10221189260482788
    2. ' for' → logprob: -2.7272119522094727
    3. '       ' → logprob: -3.7272119522094727
    4. 'for' → logprob: -4.977211952209473
    5. '    
' → logprob: -7.852211952209473
    6. '    ' → logprob: -8.977211952209473
    7. '        
' → logprob: -9.477211952209473
    8. '
' → logprob: -9.977211952209473
    9. '  ' → logprob: -9.977211952209473
    10. ' ' → logprob: -10.727211952209473

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.701056718826294
    2. ' for' → logprob: -1.076056718826294
    3. '   ' → logprob: -2.076056718826294
    4. 'for' → logprob: -3.326056718826294
    5. '    ' → logprob: -7.826056480407715
    6. '        
' → logprob: -7.826056480407715
    7. '    
' → logprob: -8.701056480407715
    8. ' ' → logprob: -9.201056480407715
    9. '  ' → logprob: -9.451056480407715
    10. '      ' → logprob: -9.576056480407715

Token 351: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.143249973654747
    2. 'for' (adapté à ' for') → logprob: -2.518249988555908
    3. '       ' → logprob: -3.143249988555908
    4. '   ' → logprob: -4.768249988555908
    5. ' i' → logprob: -8.01824951171875
    6. '    ' → logprob: -8.51824951171875
    7. ' next' → logprob: -8.89324951171875
    8. '        
' → logprob: -9.51824951171875
    9. ' ' → logprob: -9.64324951171875
    10. 'i' → logprob: -9.76824951171875

Token 352: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16167820990085602
    2. 'j' → logprob: -2.1616783142089844
    3. 'v' → logprob: -4.411678314208984
    4. 'x' → logprob: -4.911678314208984
    5. 'u' → logprob: -5.161678314208984
    6. ' i' → logprob: -6.036678314208984
    7. 'k' → logprob: -6.536678314208984
    8. 's' → logprob: -6.536678314208984
    9. ' j' → logprob: -7.286678314208984
    10. 'c' → logprob: -7.661678314208984

Token 353: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00010306637705070898
    2. 'in' → logprob: -9.375102996826172
    3. ' ' → logprob: -12.375102996826172
    4. 'range' → logprob: -12.375102996826172
    5. '   ' → logprob: -12.875102996826172
    6. '  ' → logprob: -13.625102996826172
    7. 's' → logprob: -13.875102996826172
    8. '1' → logprob: -13.875102996826172
    9. 'd' → logprob: -14.250102996826172
    10. '_' → logprob: -14.625102996826172

Token 354: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00046332005877047777
    2. ' range' → logprob: -7.750463485717773
    3. '   ' → logprob: -10.750463485717773
    4. ' ' → logprob: -11.625463485717773
    5. '  ' → logprob: -13.875463485717773
    6. 'digits' → logprob: -14.125463485717773
    7. '    ' → logprob: -16.000463485717773
    8. '     ' → logprob: -16.000463485717773
    9. '	range' → logprob: -16.125463485717773
    10. '       ' → logprob: -16.250463485717773

Token 355: '(' (ID: 7)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.1592879295349121
    2. 'range' → logprob: -2.159287929534912
    3. ' range' → logprob: -3.659287929534912
    4. ' digits' → logprob: -5.659287929534912
    5. 'd' → logprob: -6.784287929534912
    6. '   ' → logprob: -7.284287929534912
    7. '(d' → logprob: -7.409287929534912
    8. 'digit' → logprob: -9.65928840637207
    9. '(range' → logprob: -10.28428840637207
    10. 'V' → logprob: -11.15928840637207

Token 356: '0' (ID: 15)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.009858437813818455
    2. 'V' → logprob: -4.63485860824585
    3. ' digits' → logprob: -9.634858131408691
    4. 'odd' → logprob: -11.634858131408691
    5. ' V' → logprob: -11.759858131408691
    6. '   ' → logprob: -11.884858131408691
    7. 'dig' → logprob: -13.009858131408691
    8. 'digit' → logprob: -13.009858131408691
    9. '0' → logprob: -13.134858131408691
    10. 'v' → logprob: -13.884858131408691

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19216464459896088
    2. '   ' → logprob: -2.817164659500122
    3. '       ' → logprob: -3.567164659500122
    4. ' ' → logprob: -4.442164421081543
    5. ' range' → logprob: -4.442164421081543
    6. 'digits' → logprob: -4.442164421081543
    7. ',d' → logprob: -4.442164421081543
    8. ' V' → logprob: -4.567164421081543
    9. ' ,' → logprob: -4.817164421081543
    10. 'V' → logprob: -4.942164421081543

Token 358: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.004902600776404142
    2. 'V' → logprob: -5.379902362823486
    3. ' digits' → logprob: -8.254902839660645
    4. ' V' → logprob: -11.379902839660645
    5. '   ' → logprob: -12.879902839660645
    6. 'digit' → logprob: -12.879902839660645
    7. ' ' → logprob: -13.504902839660645
    8. 'd' → logprob: -14.254902839660645
    9. 'dig' → logprob: -14.379902839660645
    10. '       ' → logprob: -14.629902839660645

Token 359: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004957173950970173
    2. '):' → logprob: -5.50495719909668
    3. '       ' → logprob: -7.62995719909668
    4. ' ):
' → logprob: -8.75495719909668
    5. '   ' → logprob: -9.12995719909668
    6. ',' → logprob: -9.75495719909668
    7. '+' → logprob: -10.75495719909668
    8. '           ' → logprob: -11.12995719909668
    9. ')' → logprob: -12.00495719909668
    10. '):
' → logprob: -12.37995719909668

Token 360: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07271292060613632
    2. '           ' → logprob: -2.8227128982543945
    3. ' if' → logprob: -5.0727128982543945
    4. '   ' → logprob: -6.0727128982543945
    5. '<|end|>' → logprob: -7.5727128982543945
    6. ' ' → logprob: -7.6977128982543945
    7. '               ' → logprob: -8.572712898254395
    8. '     ' → logprob: -8.697712898254395
    9. '    ' → logprob: -9.447712898254395
    10. ',' → logprob: -9.447712898254395

Token 361: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09540107846260071
    2. 'if' (adapté à ' if') → logprob: -2.5954010486602783
    3. '           ' → logprob: -4.220401287078857
    4. '               ' → logprob: -6.595401287078857
    5. '   ' → logprob: -9.0954008102417
    6. '1' → logprob: -9.8454008102417
    7. ' mask' → logprob: -9.8454008102417
    8. '       ' → logprob: -10.9704008102417
    9. 'mask' → logprob: -10.9704008102417
    10. ' bit' → logprob: -11.4704008102417

Token 362: ' not' (ID: 625)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13383033871650696
    2. 'odd' → logprob: -3.1338303089141846
    3. '((' → logprob: -3.2588303089141846
    4. ' (' → logprob: -4.008830547332764
    5. '(not' → logprob: -4.883830547332764
    6. '(b' → logprob: -5.133830547332764
    7. 'not' → logprob: -5.383830547332764
    8. ' not' → logprob: -6.008830547332764
    9. ' odd' → logprob: -6.258830547332764
    10. '(((' → logprob: -6.758830547332764

Token 363: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.43694695830345154
    2. '((' → logprob: -1.936946988105774
    3. '(' → logprob: -2.0619468688964844
    4. ' (' → logprob: -2.6869468688964844
    5. 'odd' → logprob: -5.436946868896484
    6. ' ((' → logprob: -5.936946868896484
    7. 'b' → logprob: -6.061946868896484
    8. ' odd' → logprob: -6.186946868896484
    9. '(i' → logprob: -6.686946868896484
    10. '(not' → logprob: -7.436946868896484

Token 364: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.29268312454223633
    2. '(b' → logprob: -1.7926831245422363
    3. '(' → logprob: -2.6676831245422363
    4. 'odd' → logprob: -4.542683124542236
    5. '((' → logprob: -5.417683124542236
    6. ' (' → logprob: -6.417683124542236
    7. ' b' → logprob: -7.667683124542236
    8. '(i' → logprob: -7.917683124542236
    9. ' odd' → logprob: -9.292682647705078
    10. '(((' → logprob: -10.417682647705078

Token 365: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.08128514140844345
    2. '&' → logprob: -2.581285238265991
    3. '>>' → logprob: -6.081284999847412
    4. ' >>' → logprob: -10.08128547668457
    5. '|' → logprob: -10.33128547668457
    6. ' ' → logprob: -11.45628547668457
    7. '&(' → logprob: -12.33128547668457
    8. ' |' → logprob: -12.58128547668457
    9. '&
' → logprob: -12.58128547668457
    10. ' &
' → logprob: -12.83128547668457

Token 366: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0034084629733115435
    2. ' (' → logprob: -5.878408432006836
    3. '1' → logprob: -7.503408432006836
    4. ' ' → logprob: -10.628408432006836
    5. '   ' → logprob: -11.003408432006836
    6. '  ' → logprob: -12.378408432006836
    7. ')' → logprob: -12.753408432006836
    8. '           ' → logprob: -13.378408432006836
    9. '    ' → logprob: -14.753408432006836
    10. '       ' → logprob: -14.878408432006836

Token 367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003913356922566891
    2. '(' → logprob: -5.628913402557373
    3. ' ' → logprob: -8.253912925720215
    4. ' (' → logprob: -10.628912925720215
    5. '               ' → logprob: -11.378912925720215
    6. '   ' → logprob: -11.878912925720215
    7. '           ' → logprob: -12.003912925720215
    8. '                   ' → logprob: -13.128912925720215
    9. '  ' → logprob: -14.503912925720215
    10. '                           ' → logprob: -15.503912925720215

Token 368: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.5759484171867371
    2. ' <<' → logprob: -0.8259484171867371
    3. ' ' → logprob: -12.575948715209961
    4. '   ' → logprob: -12.950948715209961
    5. '           ' → logprob: -14.200948715209961
    6. '  ' → logprob: -14.200948715209961
    7. '    ' → logprob: -14.950948715209961
    8. '<' → logprob: -15.075948715209961
    9. '1' → logprob: -15.325948715209961
    10. ')' → logprob: -16.07594871520996

Token 369: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.6550729419104755e-05
    2. ' i' → logprob: -10.250036239624023
    3. '           ' → logprob: -14.625036239624023
    4. '   ' → logprob: -15.250036239624023
    5. ')i' → logprob: -15.500036239624023
    6. '	i' → logprob: -16.125036239624023
    7. '[i' → logprob: -18.250036239624023
    8. '       ' → logprob: -18.500036239624023
    9. ' ' → logprob: -18.625036239624023
    10. '  ' → logprob: -18.750036239624023

Token 370: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.32862186431884766
    2. ')):
' → logprob: -1.4536218643188477
    3. '))' → logprob: -3.0786218643188477
    4. ')):
' → logprob: -8.828621864318848
    5. ')' → logprob: -9.203621864318848
    6. ' ))' → logprob: -9.703621864318848
    7. ' ' → logprob: -12.078621864318848
    8. ':' → logprob: -12.203621864318848
    9. '):' → logprob: -12.578621864318848
    10. '       ' → logprob: -12.953621864318848

Token 371: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011278649792075157
    2. ' for' → logprob: -4.5112786293029785
    3. ' and' → logprob: -9.636279106140137
    4. ' if' → logprob: -9.761279106140137
    5. ' continue' → logprob: -10.261279106140137
    6. '<|end|>' → logprob: -11.261279106140137
    7. '                
' → logprob: -11.511279106140137
    8. 'for' → logprob: -11.511279106140137
    9. ',' → logprob: -11.886279106140137
    10. ' ' → logprob: -11.886279106140137

Token 372: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.9724337458610535
    2. '               ' → logprob: -1.0974338054656982
    3. ' for' → logprob: -1.3474338054656982
    4. '                   ' → logprob: -5.097433567047119
    5. 'break' → logprob: -5.347433567047119
    6. 'continue' → logprob: -5.347433567047119
    7. '   ' → logprob: -5.722433567047119
    8. ' break' → logprob: -5.722433567047119
    9. 'if' → logprob: -6.222433567047119
    10. ' continue' → logprob: -6.222433567047119

Token 373: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.22594740986824036
    2. ' j' → logprob: -1.600947380065918
    3. ' range' → logprob: -8.475947380065918
    4. 'range' → logprob: -8.725947380065918
    5. '   ' → logprob: -10.225947380065918
    6. '               ' → logprob: -10.350947380065918
    7. ' ' → logprob: -10.600947380065918
    8. '                   ' → logprob: -10.725947380065918
    9. '           ' → logprob: -11.350947380065918
    10. '  ' → logprob: -11.725947380065918

Token 374: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004626291338354349
    2. 'in' → logprob: -5.379626274108887
    3. ' ' → logprob: -13.754626274108887
    4. '=' → logprob: -13.879626274108887
    5. ' =' → logprob: -14.379626274108887
    6. '               ' → logprob: -14.629626274108887
    7. '<|end|>' → logprob: -14.754626274108887
    8. 'range' → logprob: -14.879626274108887
    9. '```' → logprob: -15.379626274108887
    10. '   ' → logprob: -15.629626274108887

Token 375: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519342005252838
    2. ' range' → logprob: -1.5019341707229614
    3. '(range' → logprob: -12.751934051513672
    4. ' ' → logprob: -14.376934051513672
    5. '	range' → logprob: -14.501934051513672
    6. '   ' → logprob: -14.626934051513672
    7. 'i' → logprob: -15.376934051513672
    8. '  ' → logprob: -16.126934051513672
    9. '    ' → logprob: -16.251934051513672
    10. '               ' → logprob: -17.001934051513672

Token 376: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -12.12501335144043
    3. 'range' → logprob: -13.00001335144043
    4. '           ' → logprob: -13.50001335144043
    5. 'i' → logprob: -13.62501335144043
    6. '   ' → logprob: -14.00001335144043
    7. ' (' → logprob: -14.37501335144043
    8. '               ' → logprob: -14.62501335144043
    9. '(j' → logprob: -14.62501335144043
    10. '(range' → logprob: -14.87501335144043

Token 377: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07000234723091125
    2. ' +' → logprob: -2.695002317428589
    3. ',' → logprob: -10.195002555847168
    4. '               ' → logprob: -11.445002555847168
    5. '                   ' → logprob: -12.820002555847168
    6. '           ' → logprob: -13.195002555847168
    7. '+i' → logprob: -13.195002555847168
    8. '+j' → logprob: -13.320002555847168
    9. ')+' → logprob: -13.945002555847168
    10. '1' → logprob: -14.070002555847168

Token 378: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.184812031686306e-05
    2. ' ' → logprob: -9.500082015991211
    3. '0' → logprob: -12.750082015991211
    4. 'digits' → logprob: -12.750082015991211
    5. '   ' → logprob: -14.500082015991211
    6. ',' → logprob: -15.500082015991211
    7. '           ' → logprob: -15.750082015991211
    8. ' digits' → logprob: -16.87508201599121
    9. '```' → logprob: -17.00008201599121
    10. '_digits' → logprob: -17.12508201599121

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7014437364414334e-05
    2. ' ' → logprob: -10.87502670288086
    3. '0' → logprob: -12.62502670288086
    4. 'digits' → logprob: -13.75002670288086
    5. '   ' → logprob: -13.87502670288086
    6. 'i' → logprob: -14.50002670288086
    7. ',' → logprob: -15.00002670288086
    8. '2' → logprob: -15.00002670288086
    9. '           ' → logprob: -15.37502670288086
    10. '
' → logprob: -15.62502670288086

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0055170198902487755
    2. ',d' → logprob: -5.25551700592041
    3. ' ,' → logprob: -8.63051700592041
    4. '               ' → logprob: -9.63051700592041
    5. '           ' → logprob: -11.00551700592041
    6. '                   ' → logprob: -11.50551700592041
    7. 'digits' → logprob: -13.38051700592041
    8. '   ' → logprob: -13.63051700592041
    9. 'to' → logprob: -13.63051700592041
    10. '       ' → logprob: -13.88051700592041

Token 381: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.0488145686686039
    2. ' digits' → logprob: -3.048814535140991
    3. '   ' → logprob: -8.67381477355957
    4. 'digit' → logprob: -11.29881477355957
    5. '       ' → logprob: -11.42381477355957
    6. ' ' → logprob: -11.67381477355957
    7. '           ' → logprob: -11.67381477355957
    8. '    ' → logprob: -13.04881477355957
    9. '               ' → logprob: -13.04881477355957
    10. '  ' → logprob: -13.04881477355957

Token 382: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4750330150127411
    2. '):
' → logprob: -0.9750330448150635
    3. '               ' → logprob: -7.725032806396484
    4. '           ' → logprob: -7.975032806396484
    5. '                   ' → logprob: -9.725032806396484
    6. '):
' → logprob: -9.975032806396484
    7. '):

' → logprob: -11.225032806396484
    8. ':' → logprob: -11.350032806396484
    9. '       ' → logprob: -11.850032806396484
    10. '                       ' → logprob: -12.225032806396484

Token 383: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008552758023142815
    2. '                   ' → logprob: -4.883552551269531
    3. '           ' → logprob: -7.258552551269531
    4. '                       ' → logprob: -9.758552551269531
    5. '<|end|>' → logprob: -9.758552551269531
    6. ' if' → logprob: -10.383552551269531
    7. '   ' → logprob: -10.383552551269531
    8. '       ' → logprob: -10.758552551269531
    9. ' ' → logprob: -11.258552551269531
    10. '```' → logprob: -11.758552551269531

Token 384: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9552545547485352
    2. ' if' → logprob: -1.3302545547485352
    3. '               ' → logprob: -2.080254554748535
    4. '                   ' → logprob: -2.080254554748535
    5. '                       ' → logprob: -2.330254554748535
    6. '           ' → logprob: -6.330254554748535
    7. '       ' → logprob: -6.580254554748535
    8. '```' → logprob: -8.330254554748535
    9. '   ' → logprob: -9.080254554748535
    10. ' ' → logprob: -9.705254554748535

Token 385: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3927057683467865
    2. 'not' → logprob: -1.1427057981491089
    3. '(not' → logprob: -5.267705917358398
    4. ' (' → logprob: -8.017705917358398
    5. '(' → logprob: -9.142705917358398
    6. '   ' → logprob: -10.017705917358398
    7. '               ' → logprob: -10.017705917358398
    8. ' ' → logprob: -10.517705917358398
    9. ' odd' → logprob: -11.392705917358398
    10. '	not' → logprob: -11.517705917358398

Token 386: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.07903938740491867
    2. ' (' → logprob: -2.5790393352508545
    3. 'b' → logprob: -9.204039573669434
    4. ' b' → logprob: -10.454039573669434
    5. '(' → logprob: -11.079039573669434
    6. ' ' → logprob: -12.704039573669434
    7. '   ' → logprob: -14.329039573669434
    8. '  ' → logprob: -14.829039573669434
    9. '(j' → logprob: -16.204038619995117
    10. '	b' → logprob: -16.329038619995117

Token 387: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002941095153801143
    2. '(b' → logprob: -8.250293731689453
    3. ' b' → logprob: -10.375293731689453
    4. ' (' → logprob: -15.000293731689453
    5. '	b' → logprob: -15.000293731689453
    6. '   ' → logprob: -15.125293731689453
    7. ')b' → logprob: -15.125293731689453
    8. '(' → logprob: -15.250293731689453
    9. ' ' → logprob: -17.125293731689453
    10. '  ' → logprob: -17.250293731689453

Token 388: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.386879563331604
    2. '&' → logprob: -1.136879563331604
    3. '&amp' → logprob: -12.011879920959473
    4. ' ' → logprob: -14.136879920959473
    5. '&
' → logprob: -14.636879920959473
    6. ' &
' → logprob: -15.011879920959473
    7. '&(' → logprob: -15.011879920959473
    8. '＆' → logprob: -15.386879920959473
    9. ' ' → logprob: -15.636879920959473
    10. '&nbsp' → logprob: -16.011878967285156

Token 389: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20141801238059998
    2. ' (' → logprob: -1.7014180421829224
    3. ' ' → logprob: -13.326417922973633
    4. '   ' → logprob: -14.326417922973633
    5. '  ' → logprob: -14.326417922973633
    6. '                   ' → logprob: -14.451417922973633
    7. '                       ' → logprob: -14.951417922973633
    8. '                           ' → logprob: -15.576417922973633
    9. ')' → logprob: -15.701417922973633
    10. '                               ' → logprob: -16.076417922973633

Token 390: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014696593396365643
    2. ' (' → logprob: -4.3896965980529785
    3. '1' → logprob: -6.1396965980529785
    4. 'j' → logprob: -11.76469612121582
    5. ')' → logprob: -12.13969612121582
    6. ' ' → logprob: -12.51469612121582
    7. '(j' → logprob: -12.51469612121582
    8. '                   ' → logprob: -13.26469612121582
    9. '                           ' → logprob: -13.88969612121582
    10. '[' → logprob: -13.88969612121582

Token 391: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0023040547966957092
    2. ' <<' → logprob: -6.5023040771484375
    3. 'j' → logprob: -7.7523040771484375
    4. '1' → logprob: -8.877304077148438
    5. '<' → logprob: -9.502304077148438
    6. ' j' → logprob: -10.377304077148438
    7. '[j' → logprob: -10.877304077148438
    8. '```' → logprob: -11.127304077148438
    9. '>>' → logprob: -11.377304077148438
    10. '                               ' → logprob: -11.752304077148438

Token 392: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009158630855381489
    2. ' j' → logprob: -7.000916004180908
    3. '   ' → logprob: -13.25091552734375
    4. ' ' → logprob: -14.25091552734375
    5. '  ' → logprob: -14.75091552734375
    6. ')' → logprob: -14.75091552734375
    7. '                   ' → logprob: -14.87591552734375
    8. '	j' → logprob: -14.87591552734375
    9. '    ' → logprob: -16.00091552734375
    10. '```' → logprob: -16.25091552734375

Token 393: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.8182854056358337
    2. '))' → logprob: -1.0682854652404785
    3. ')):' → logprob: -1.8182854652404785
    4. ')' → logprob: -3.1932854652404785
    5. '):
' → logprob: -4.8182854652404785
    6. '):' → logprob: -5.9432854652404785
    7. ')):
' → logprob: -7.0682854652404785
    8. '                   ' → logprob: -8.94328498840332
    9. '                       ' → logprob: -9.56828498840332
    10. '):

' → logprob: -10.44328498840332

Token 394: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04033361002802849
    2. ':' → logprob: -3.2903335094451904
    3. ':
' → logprob: -7.0403337478637695
    4. '                   ' → logprob: -7.9153337478637695
    5. ' :' → logprob: -8.79033374786377
    6. ',' → logprob: -8.91533374786377
    7. '       ' → logprob: -9.04033374786377
    8. '               ' → logprob: -9.04033374786377
    9. '                        
' → logprob: -9.54033374786377
    10. '                        ' → logprob: -9.79033374786377

Token 395: ' t' (ID: 260)
  Prédit: 'nb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nb' → logprob: -0.5126867294311523
    2. 'new' → logprob: -1.8876867294311523
    3. 'nw' → logprob: -2.8876867294311523
    4. 'b' → logprob: -3.0126867294311523
    5. 'mw' → logprob: -3.3876867294311523
    6. '                       ' → logprob: -3.3876867294311523
    7. ' nb' → logprob: -3.8876867294311523
    8. '                   ' → logprob: -4.387686729431152
    9. 'next' → logprob: -4.762686729431152
    10. 'm' → logprob: -5.012686729431152

Token 396: '_b' (ID: 1535)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03226400539278984
    2. '=' → logprob: -3.782263994216919
    3. '_b' → logprob: -5.157264232635498
    4. 'b' → logprob: -6.032264232635498
    5. 'mp' → logprob: -8.90726375579834
    6. '=b' → logprob: -9.15726375579834
    7. 'd' → logprob: -9.28226375579834
    8. 'w' → logprob: -9.40726375579834
    9. 'emp' → logprob: -9.40726375579834
    10. '   ' → logprob: -10.03226375579834

Token 397: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760393142700195
    2. '=' → logprob: -0.8260393142700195
    3. '=b' → logprob: -9.32603931427002
    4. ' ' → logprob: -12.57603931427002
    5. ')' → logprob: -13.70103931427002
    6. '   ' → logprob: -14.07603931427002
    7. ',' → logprob: -14.07603931427002
    8. '  ' → logprob: -14.07603931427002
    9. 'b' → logprob: -14.45103931427002
    10. '=
' → logprob: -14.57603931427002

Token 398: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.016137240454554558
    2. ' b' → logprob: -4.14113712310791
    3. '   ' → logprob: -9.51613712310791
    4. ' ' → logprob: -11.39113712310791
    5. '(b' → logprob: -12.01613712310791
    6. '	b' → logprob: -13.01613712310791
    7. ' (' → logprob: -13.26613712310791
    8. '  ' → logprob: -13.89113712310791
    9. '                   ' → logprob: -13.89113712310791
    10. '           ' → logprob: -13.89113712310791

Token 399: ' +' (ID: 659)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.003481516381725669
    2. ' |' → logprob: -5.753481388092041
    3. '|(' → logprob: -8.1284818649292
    4. '                               ' → logprob: -13.2534818649292
    5. '                           ' → logprob: -13.2534818649292
    6. '(' → logprob: -13.3784818649292
    7. '+' → logprob: -14.1284818649292
    8. '   ' → logprob: -14.3784818649292
    9. '^' → logprob: -14.6284818649292
    10. ' ' → logprob: -15.0034818649292

Token 400: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00409419322386384
    2. ' (' → logprob: -5.504094123840332
    3. '   ' → logprob: -11.629094123840332
    4. ' ' → logprob: -12.379094123840332
    5. '  ' → logprob: -13.879094123840332
    6. '1' → logprob: -13.879094123840332
    7. '((' → logprob: -14.504094123840332
    8. '2' → logprob: -15.879094123840332
    9. '    ' → logprob: -16.00409507751465
    10. '       ' → logprob: -17.00409507751465

Token 401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38756003975868225
    2. '(' → logprob: -1.1375600099563599
    3. ' (' → logprob: -7.38755989074707
    4. ' ' → logprob: -9.76255989074707
    5. '   ' → logprob: -12.01255989074707
    6. '  ' → logprob: -12.88755989074707
    7. ')' → logprob: -13.26255989074707
    8. '    ' → logprob: -14.88755989074707
    9. '           ' → logprob: -14.88755989074707
    10. '```' → logprob: -15.26255989074707

Token 402: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.14318405091762543
    2. ' <<' → logprob: -2.018183946609497
    3. '<' → logprob: -8.268183708190918
    4. ' ' → logprob: -9.893183708190918
    5. '1' → logprob: -10.268183708190918
    6. '   ' → logprob: -10.518183708190918
    7. '           ' → logprob: -10.768183708190918
    8. '    ' → logprob: -11.018183708190918
    9. ' ' → logprob: -11.518183708190918
    10. '>>' → logprob: -11.518183708190918

Token 403: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.195421494543552e-05
    2. ' i' → logprob: -9.62507152557373
    3. 'j' → logprob: -12.12507152557373
    4. '(i' → logprob: -16.250072479248047
    5. '	i' → logprob: -16.375072479248047
    6. '   ' → logprob: -16.500072479248047
    7. '                   ' → logprob: -17.000072479248047
    8. ')i' → logprob: -17.625072479248047
    9. '                           ' → logprob: -17.875072479248047
    10. '                       ' → logprob: -18.000072479248047

Token 404: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005962816649116576
    2. ')+(' → logprob: -8.375596046447754
    3. '+' → logprob: -8.500596046447754
    4. ')+' → logprob: -9.250596046447754
    5. ' )' → logprob: -9.750596046447754
    6. ' +' → logprob: -12.625596046447754
    7. '|' → logprob: -12.750596046447754
    8. '+)' → logprob: -14.875596046447754
    9. '(' → logprob: -15.000596046447754
    10. '                           ' → logprob: -15.125596046447754

Token 405: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31326615810394287
    2. '+' → logprob: -1.3132661581039429
    3. ' ' → logprob: -13.688265800476074
    4. '<|end|>' → logprob: -13.938265800476074
    5. '+(' → logprob: -14.438265800476074
    6. ' +
' → logprob: -14.688265800476074
    7. ' +(' → logprob: -15.063265800476074
    8. '                       ' → logprob: -15.313265800476074
    9. '+
' → logprob: -15.563265800476074
    10. ')' → logprob: -15.813265800476074

Token 406: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28466033935546875
    2. ' (' → logprob: -1.4096603393554688
    3. '(j' → logprob: -5.659660339355469
    4. 'j' → logprob: -11.284660339355469
    5. '(js' → logprob: -12.784660339355469
    6. ' ' → logprob: -14.034660339355469
    7. '(s' → logprob: -14.409660339355469
    8. ' j' → logprob: -14.659660339355469
    9. '```' → logprob: -15.034660339355469
    10. '<|end|>' → logprob: -15.159660339355469

Token 407: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003606005571782589
    2. ' j' → logprob: -5.628605842590332
    3. ' (' → logprob: -13.128605842590332
    4. '(' → logprob: -14.003605842590332
    5. '(j' → logprob: -14.253605842590332
    6. '```' → logprob: -14.628605842590332
    7. '[j' → logprob: -14.753605842590332
    8. '	j' → logprob: -15.128605842590332
    9. ' ' → logprob: -15.128605842590332
    10. '1' → logprob: -15.253605842590332

Token 408: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.47463783621788025
    2. ' <<' → logprob: -0.9746378660202026
    3. '                       ' → logprob: -9.099637985229492
    4. 'j' → logprob: -9.974637985229492
    5. ' ' → logprob: -10.099637985229492
    6. '1' → logprob: -10.349637985229492
    7. '```' → logprob: -10.349637985229492
    8. ')' → logprob: -10.474637985229492
    9. ')<<' → logprob: -10.599637985229492
    10. '                           ' → logprob: -10.599637985229492

Token 409: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00033713103039190173
    2. ' j' → logprob: -8.000337600708008
    3. '	j' → logprob: -14.625337600708008
    4. '[j' → logprob: -14.875337600708008
    5. '<|end|>' → logprob: -15.125337600708008
    6. '   ' → logprob: -15.875337600708008
    7. '$j' → logprob: -16.375337600708008
    8. '```' → logprob: -16.625337600708008
    9. '_j' → logprob: -16.875337600708008
    10. ' ' → logprob: -17.250337600708008

Token 410: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020759915933012962
    2. ')
' → logprob: -3.8957598209381104
    3. ']' → logprob: -9.270759582519531
    4. '<|end|>' → logprob: -9.645759582519531
    5. '                       ' → logprob: -11.020759582519531
    6. ')
' → logprob: -11.145759582519531
    7. ' )' → logprob: -11.770759582519531
    8. ')

' → logprob: -11.895759582519531
    9. ')]' → logprob: -12.645759582519531
    10. '）' → logprob: -12.895759582519531

Token 411: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.008796324953436852
    2. '                        
' → logprob: -5.633796215057373
    3. '<|end|>' → logprob: -6.258796215057373
    4. ' if' → logprob: -7.508796215057373
    5. ':' → logprob: -7.883796215057373
    6. ')' → logprob: -8.008796691894531
    7. '                        ' → logprob: -8.383796691894531
    8. ' and' → logprob: -8.758796691894531
    9. '```' → logprob: -8.758796691894531
    10. 'mw' → logprob: -8.883796691894531

Token 412: ' if' (ID: 538)
  Prédit: 'mw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mw' → logprob: -0.03549101576209068
    2. 'if' (adapté à ' if') → logprob: -3.4104909896850586
    3. ' mw' → logprob: -7.035490989685059
    4. '                       ' → logprob: -7.285490989685059
    5. ' if' → logprob: -8.410490989685059
    6. 'import' → logprob: -11.285490989685059
    7. '                        
' → logprob: -11.785490989685059
    8. 'm' → logprob: -12.160490989685059
    9. '=' → logprob: -12.410490989685059
    10. '                           ' → logprob: -12.535490989685059

Token 413: ' t' (ID: 260)
  Prédit: 'mw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mw' → logprob: -0.05243157967925072
    2. 't' → logprob: -3.052431583404541
    3. 'adj' → logprob: -6.552431583404541
    4. ' mw' → logprob: -6.552431583404541
    5. '   ' → logprob: -8.052431106567383
    6. 'm' → logprob: -8.552431106567383
    7. ' t' → logprob: -9.177431106567383
    8. '(t' → logprob: -9.989931106567383
    9. 'mh' → logprob: -10.114931106567383
    10. '(m' → logprob: -10.177431106567383

Token 414: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00014740281039848924
    2. 'b' → logprob: -9.875147819519043
    3. 'mw' → logprob: -10.250147819519043
    4. 'w' → logprob: -10.375147819519043
    5. '_w' → logprob: -12.625147819519043
    6. 't' → logprob: -12.750147819519043
    7. '=' → logprob: -12.750147819519043
    8. '[' → logprob: -12.875147819519043
    9. '<' → logprob: -13.000147819519043
    10. '_m' → logprob: -13.625147819519043

Token 415: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.378581166267395
    2. ' <' → logprob: -1.628581166267395
    3. '<=' → logprob: -2.2535810470581055
    4. ' <=' → logprob: -4.8785810470581055
    5. '<len' → logprob: -5.5035810470581055
    6. '<m' → logprob: -7.2535810470581055
    7. '<n' → logprob: -7.6285810470581055
    8. '>=' → logprob: -8.128581047058105
    9. '<V' → logprob: -8.878581047058105
    10. '<t' → logprob: -9.128581047058105

Token 416: ' t' (ID: 260)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3859943151473999
    2. '(' → logprob: -2.0109944343566895
    3. 'odd' → logprob: -2.2609944343566895
    4. '0' → logprob: -3.1359944343566895
    5. 'no' → logprob: -4.7609944343566895
    6. 'mw' → logprob: -5.2609944343566895
    7. ' ' → logprob: -5.6359944343566895
    8. ' (' → logprob: -5.8859944343566895
    9. ' b' → logprob: -5.8859944343566895
    10. ' odd' → logprob: -6.0109944343566895

Token 417: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.011280774138867855
    2. 'w' → logprob: -5.261280536651611
    3. 'b' → logprob: -6.011280536651611
    4. 'r' → logprob: -7.511280536651611
    5. '_w' → logprob: -7.761280536651611
    6. 't' → logprob: -7.886280536651611
    7. 'okens' → logprob: -8.26128101348877
    8. 'mw' → logprob: -8.63628101348877
    9. '[' → logprob: -8.88628101348877
    10. '_m' → logprob: -9.01128101348877

Token 418: ' &' (ID: 827)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.286160945892334
    2. ' or' → logprob: -1.786160945892334
    3. 'and' → logprob: -2.911160945892334
    4. ':' → logprob: -4.161160945892334
    5. ' and' → logprob: -5.411160945892334
    6. ':
' → logprob: -6.411160945892334
    7. '                       ' → logprob: -7.036160945892334
    8. '|' → logprob: -7.411160945892334
    9. ' ' → logprob: -7.411160945892334
    10. '%' → logprob: -7.536160945892334

Token 419: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.030587194487452507
    2. ' odd' → logprob: -3.5305871963500977
    3. '(' → logprob: -8.030587196350098
    4. 't' → logprob: -8.530587196350098
    5. 'mw' → logprob: -9.405587196350098
    6. 'adj' → logprob: -9.655587196350098
    7. ' ' → logprob: -10.405587196350098
    8. ' mw' → logprob: -10.530587196350098
    9. 'od' → logprob: -10.780587196350098
    10. ' t' → logprob: -11.030587196350098

Token 420: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -9.088346359931165e-07
    2. 'b' → logprob: -14.875000953674316
    3. ')' → logprob: -16.125
    4. '_' → logprob: -16.875
    5. '```' → logprob: -17.0
    6. '\' → logprob: -17.25
    7. '_B' → logprob: -17.5
    8. ' _' → logprob: -18.125
    9. '‌' → logprob: -18.125
    10. '_j' → logprob: -18.5

Token 421: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3337041735649109
    2. ':
' → logprob: -1.3337042331695557
    3. ' and' → logprob: -3.9587042331695557
    4. '                           ' → logprob: -7.208703994750977
    5. '                       ' → logprob: -8.833703994750977
    6. 'and' → logprob: -9.583703994750977
    7. '):
' → logprob: -10.083703994750977
    8. ':

' → logprob: -10.083703994750977
    9. ' :' → logprob: -10.583703994750977
    10. ' :
' → logprob: -11.083703994750977

Token 422: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.002103155944496393
    2. ':' → logprob: -6.627103328704834
    3. ':
' → logprob: -8.127102851867676
    4. '                       ' → logprob: -8.627102851867676
    5. ' and' → logprob: -9.002102851867676
    6. '                               ' → logprob: -9.502102851867676
    7. '           ' → logprob: -10.377102851867676
    8. '                            ' → logprob: -11.002102851867676
    9. ',' → logprob: -11.877102851867676
    10. '                            
' → logprob: -11.877102851867676

Token 423: ' t' (ID: 260)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.5787407159805298
    2. 'mw' → logprob: -1.5787407159805298
    3. '                           ' → logprob: -1.7037407159805298
    4. ' mw' → logprob: -3.0787405967712402
    5. ',' → logprob: -7.07874059677124
    6. ':
' → logprob: -7.57874059677124
    7. '                                   ' → logprob: -7.70374059677124
    8. '   ' → logprob: -8.078741073608398
    9. '                            
' → logprob: -8.078741073608398
    10. '                                
' → logprob: -8.203741073608398

Token 424: '_w' (ID: 3567)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7195502519607544
    2. '_b' → logprob: -0.8445502519607544
    3. '_w' → logprob: -2.844550132751465
    4. 'mw' → logprob: -4.594550132751465
    5. '_m' → logprob: -4.719550132751465
    6. 'b' → logprob: -6.719550132751465
    7. '_' → logprob: -6.844550132751465
    8. '_d' → logprob: -6.844550132751465
    9. '=' → logprob: -7.469550132751465
    10. 'd' → logprob: -8.594550132751465

Token 425: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0722924992442131
    2. ' =' → logprob: -2.9472925662994385
    3. 'eight' → logprob: -4.072292327880859
    4. 'ight' → logprob: -9.82229232788086
    5. 'e' → logprob: -9.82229232788086
    6. '   ' → logprob: -10.19729232788086
    7. 't' → logprob: -10.82229232788086
    8. 'w' → logprob: -12.19729232788086
    9. '       ' → logprob: -12.44729232788086
    10. 's' → logprob: -12.57229232788086

Token 426: ' mw' (ID: 18407)
  Prédit: 'mw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mw' → logprob: -0.00515441969037056
    2. 'adj' → logprob: -5.505154609680176
    3. ' mw' → logprob: -7.130154609680176
    4. '   ' → logprob: -9.005154609680176
    5. '           ' → logprob: -9.505154609680176
    6. '               ' → logprob: -10.505154609680176
    7. '                   ' → logprob: -11.255154609680176
    8. '       ' → logprob: -11.505154609680176
    9. ' adj' → logprob: -12.505154609680176
    10. ' ' → logprob: -13.005154609680176

Token 427: '[t' (ID: 32184)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0009025269537232816
    2. 'b' → logprob: -7.1259026527404785
    3. '[t' → logprob: -9.25090217590332
    4. '[' → logprob: -14.62590217590332
    5. 't' → logprob: -14.75090217590332
    6. '(b' → logprob: -15.12590217590332
    7. '[m' → logprob: -15.50090217590332
    8. '	b' → logprob: -16.00090217590332
    9. ' b' → logprob: -16.00090217590332
    10. '   ' → logprob: -16.12590217590332

Token 428: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.02079785242676735
    2. 'b' → logprob: -3.8957979679107666
    3. 'w' → logprob: -9.020797729492188
    4. 't' → logprob: -10.270797729492188
    5. '[b' → logprob: -10.395797729492188
    6. ']' → logprob: -10.895797729492188
    7. 'k' → logprob: -12.395797729492188
    8. '])' → logprob: -12.395797729492188
    9. '][' → logprob: -12.770797729492188
    10. ' b' → logprob: -12.958297729492188

Token 429: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030072925612330437
    2. 'if' → logprob: -3.7800729274749756
    3. ']
' → logprob: -5.7800726890563965
    4. '                           ' → logprob: -6.1550726890563965
    5. ' if' → logprob: -7.2800726890563965
    6. ']+' → logprob: -7.6550726890563965
    7. '                       ' → logprob: -8.905073165893555
    8. ']

' → logprob: -9.905073165893555
    9. 't' → logprob: -9.905073165893555
    10. '                               ' → logprob: -10.405073165893555

Token 430: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.052619680762290955
    2. '                       ' → logprob: -3.802619695663452
    3. '=' → logprob: -4.927619457244873
    4. '<|end|>' → logprob: -4.927619457244873
    5. 'if' → logprob: -5.302619457244873
    6. '...' → logprob: -6.427619457244873
    7. '                            ' → logprob: -6.427619457244873
    8. '                            
' → logprob: -6.552619457244873
    9. 'w' → logprob: -7.302619457244873
    10. ' if' → logprob: -7.427619457244873

Token 431: ' mw' (ID: 18407)
  Prédit: 'mw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mw' (adapté à ' mw') → logprob: -0.2418382614850998
    2. 'if' → logprob: -1.6168382167816162
    3. '                           ' → logprob: -5.116838455200195
    4. 't' → logprob: -5.491838455200195
    5. ' mw' → logprob: -5.491838455200195
    6. ' if' → logprob: -7.241838455200195
    7. '=' → logprob: -7.866838455200195
    8. 'min' → logprob: -8.366838455200195
    9. 'w' → logprob: -8.366838455200195
    10. '                            
' → logprob: -9.116838455200195

Token 432: '[t' (ID: 32184)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.1526356339454651
    2. '[t' → logprob: -2.1526355743408203
    3. 'b' → logprob: -4.40263557434082
    4. 't' → logprob: -4.90263557434082
    5. '=' → logprob: -6.77763557434082
    6. '[' → logprob: -6.77763557434082
    7. ' =' → logprob: -7.02763557434082
    8. '=b' → logprob: -7.77763557434082
    9. '[m' → logprob: -8.15263557434082
    10. '_t' → logprob: -8.40263557434082

Token 433: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.841187059879303
    2. ']' → logprob: -1.0911870002746582
    3. 'b' → logprob: -1.4661870002746582
    4. 'w' → logprob: -6.841187000274658
    5. '])' → logprob: -7.841187000274658
    6. ']+' → logprob: -9.091187477111816
    7. ']=' → logprob: -9.216187477111816
    8. ']==' → logprob: -9.466187477111816
    9. ']+=' → logprob: -9.466187477111816
    10. ']>' → logprob: -9.841187477111816

Token 434: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8061074614524841
    2. ']' → logprob: -1.056107521057129
    3. ' =' → logprob: -1.806107521057129
    4. ']=' → logprob: -3.556107521057129
    5. ')' → logprob: -5.431107521057129
    6. 'if' → logprob: -5.556107521057129
    7. ' if' → logprob: -6.306107521057129
    8. '   ' → logprob: -7.056107521057129
    9. '])' → logprob: -8.056107521057129
    10. ' ' → logprob: -8.181107521057129

Token 435: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02066158875823021
    2. ' =' → logprob: -3.8956615924835205
    3. '=min' → logprob: -9.270661354064941
    4. '                           ' → logprob: -11.270661354064941
    5. '=max' → logprob: -12.645661354064941
    6. '   ' → logprob: -13.020661354064941
    7. 'min' → logprob: -13.520661354064941
    8. '>' → logprob: -14.645661354064941
    9. '                               ' → logprob: -14.770661354064941
    10. ']=' → logprob: -14.770661354064941

Token 436: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -5.919942486798391e-05
    2. ' min' → logprob: -9.750059127807617
    3. 'mw' → logprob: -15.125059127807617
    4. '   ' → logprob: -15.250059127807617
    5. '	min' → logprob: -15.625059127807617
    6. 'max' → logprob: -16.875059127807617
    7. '(min' → logprob: -17.000059127807617
    8. '  ' → logprob: -18.500059127807617
    9. '[min' → logprob: -18.500059127807617
    10. '
' → logprob: -18.750059127807617

Token 437: '(t' (ID: 2025)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00016945181414484978
    2. '(' → logprob: -9.12516975402832
    3. '(
' → logprob: -9.75016975402832
    4. '                           ' → logprob: -13.87516975402832
    5. '(t' → logprob: -14.12516975402832
    6. '                               ' → logprob: -15.25016975402832
    7. 'm' → logprob: -16.37516975402832
    8. ' (' → logprob: -17.00016975402832
    9. '[m' → logprob: -17.12516975402832
    10. '(

' → logprob: -17.37516975402832

Token 438: '_w' (ID: 3567)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.28007814288139343
    2. '_b' → logprob: -2.405078172683716
    3. '_w' → logprob: -2.530078172683716
    4. '[m' → logprob: -3.905078172683716
    5. '[t' → logprob: -4.405077934265137
    6. 'mw' → logprob: -4.405077934265137
    7. '_m' → logprob: -4.655077934265137
    8. 'b' → logprob: -5.530077934265137
    9. '[w' → logprob: -5.655077934265137
    10. '[b' → logprob: -5.780077934265137

Token 439: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02573639340698719
    2. '(m' → logprob: -3.7757363319396973
    3. ',m' → logprob: -6.900736331939697
    4. '(' → logprob: -7.775736331939697
    5. 'mw' → logprob: -8.150736808776855
    6. ' ,' → logprob: -8.400736808776855
    7. 'm' → logprob: -8.525736808776855
    8. 't' → logprob: -9.275736808776855
    9. ',
' → logprob: -9.525736808776855
    10. '   ' → logprob: -10.525736808776855

Token 440: ' mw' (ID: 18407)
  Prédit: 'mw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mw' → logprob: -0.0037089812103658915
    2. ' mw' → logprob: -6.003708839416504
    3. '                   ' → logprob: -8.253708839416504
    4. '               ' → logprob: -8.378708839416504
    5. '   ' → logprob: -8.628708839416504
    6. '                           ' → logprob: -8.753708839416504
    7. '                       ' → logprob: -9.378708839416504
    8. '           ' → logprob: -9.503708839416504
    9. '                               ' → logprob: -9.628708839416504
    10. 'm' → logprob: -10.253708839416504

Token 441: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.07892867922782898
    2. 'b' → logprob: -2.5789287090301514
    3. '(b' → logprob: -10.70392894744873
    4. '	b' → logprob: -12.70392894744873
    5. '[t' → logprob: -12.70392894744873
    6. ' b' → logprob: -12.82892894744873
    7. '   ' → logprob: -13.70392894744873
    8. '[' → logprob: -13.95392894744873
    9. '```' → logprob: -13.95392894744873
    10. '[m' → logprob: -14.07892894744873

Token 442: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04403526335954666
    2. ']+' → logprob: -3.5440351963043213
    3. '+' → logprob: -4.4190354347229
    4. ' +' → logprob: -6.1690354347229
    5. ' ]' → logprob: -10.419034957885742
    6. '[' → logprob: -11.919034957885742
    7. ' ' → logprob: -13.794034957885742
    8. '+]' → logprob: -13.794034957885742
    9. ')' → logprob: -14.044034957885742
    10. ']+=' → logprob: -14.294034957885742

Token 443: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25194382667541504
    2. '+' → logprob: -1.501943826675415
    3. '+m' → logprob: -12.001943588256836
    4. ' ' → logprob: -13.126943588256836
    5. '+t' → logprob: -13.876943588256836
    6. ' plus' → logprob: -14.501943588256836
    7. '                           ' → logprob: -14.501943588256836
    8. ')' → logprob: -14.501943588256836
    9. ']+' → logprob: -14.751943588256836
    10. '[' → logprob: -14.751943588256836

Token 444: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0009494528640061617
    2. ' adj' → logprob: -7.000949382781982
    3. '   ' → logprob: -11.00094985961914
    4. '           ' → logprob: -12.37594985961914
    5. '               ' → logprob: -12.87594985961914
    6. '  ' → logprob: -12.87594985961914
    7. '    ' → logprob: -13.00094985961914
    8. '       ' → logprob: -13.37594985961914
    9. '                   ' → logprob: -13.37594985961914
    10. ' ' → logprob: -13.75094985961914

Token 445: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00010676169040380046
    2. '[i' → logprob: -9.250106811523438
    3. ' i' → logprob: -13.000106811523438
    4. '   ' → logprob: -13.500106811523438
    5. '[' → logprob: -13.875106811523438
    6. '                   ' → logprob: -14.000106811523438
    7. 'digits' → logprob: -14.000106811523438
    8. 'math' → logprob: -14.625106811523438
    9. '(i' → logprob: -14.750106811523438
    10. '                           ' → logprob: -15.000106811523438

Token 446: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00031294001382775605
    2. ']' → logprob: -8.125312805175781
    3. ' ][' → logprob: -11.500312805175781
    4. '[j' → logprob: -12.500312805175781
    5. '[' → logprob: -13.250312805175781
    6. '[i' → logprob: -14.500312805175781
    7. ']
' → logprob: -15.500312805175781
    8. '"][' → logprob: -16.00031280517578
    9. '   ' → logprob: -16.25031280517578
    10. ''][' → logprob: -16.50031280517578

Token 447: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.5941604690160602e-05
    2. ' j' → logprob: -10.625025749206543
    3. '   ' → logprob: -14.125025749206543
    4. '	j' → logprob: -14.875025749206543
    5. '[j' → logprob: -16.00002670288086
    6. ' ' → logprob: -16.37502670288086
    7. '
' → logprob: -16.62502670288086
    8. '  ' → logprob: -16.87502670288086
    9. ',j' → logprob: -16.87502670288086
    10. '    ' → logprob: -18.12502670288086

Token 448: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0034372040536254644
    2. ')' → logprob: -5.878437042236328
    3. '])
' → logprob: -7.628437042236328
    4. ']' → logprob: -9.253437042236328
    5. '))' → logprob: -11.503437042236328
    6. ')
' → logprob: -11.628437042236328
    7. '                       ' → logprob: -12.128437042236328
    8. ' ])' → logprob: -12.128437042236328
    9. ' )' → logprob: -12.378437042236328
    10. '   ' → logprob: -12.878437042236328

Token 449: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31355205178260803
    2. '<|end|>' → logprob: -1.8135520219802856
    3. '   ' → logprob: -3.563552141189575
    4. ' ' → logprob: -4.063551902770996
    5. ']' → logprob: -4.063551902770996
    6. '#' → logprob: -4.313551902770996
    7. '```' → logprob: -5.438551902770996
    8. '
' → logprob: -6.063551902770996
    9. '}' → logprob: -6.063551902770996
    10. '.' → logprob: -6.063551902770996

Token 450: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006054567056708038
    2. 'ans' → logprob: -8.125605583190918
    3. '   ' → logprob: -8.875605583190918
    4. ' print' → logprob: -8.875605583190918
    5. 'for' → logprob: -11.250605583190918
    6. ')' → logprob: -12.750605583190918
    7. '    
' → logprob: -12.875605583190918
    8. 'else' → logprob: -13.000605583190918
    9. 'answer' → logprob: -13.375605583190918
    10. ' ans' → logprob: -14.125605583190918

Token 451: ' Output' (ID: 18315)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.002330574905499816
    2. 'print' → logprob: -6.377330780029297
    3. '   ' → logprob: -8.127330780029297
    4. ' ans' → logprob: -8.127330780029297
    5. 'answer' → logprob: -11.627330780029297
    6. 'for' → logprob: -12.127330780029297
    7. '    
' → logprob: -12.502330780029297
    8. 'if' → logprob: -12.877330780029297
    9. 'import' → logprob: -13.002330780029297
    10. '	ans' → logprob: -13.002330780029297

Token 452: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4259644558478612e-05
    2. 'ans' → logprob: -12.000014305114746
    3. ' print' → logprob: -12.000014305114746
    4. '   ' → logprob: -13.500014305114746
    5. '```' → logprob: -14.750014305114746
    6. ' ans' → logprob: -18.12501335144043
    7. '(ans' → logprob: -19.50001335144043
    8. '``' → logprob: -19.62501335144043
    9. '#print' → logprob: -20.00001335144043
    10. '
' → logprob: -20.12501335144043

Token 453: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.491498531133402e-06
    2. 'ans' → logprob: -11.750009536743164
    3. '   ' → logprob: -13.750009536743164
    4. ' print' → logprob: -14.500009536743164
    5. '```' → logprob: -19.125009536743164
    6. ' ans' → logprob: -20.250009536743164
    7. 'answer' → logprob: -21.125009536743164
    8. '
' → logprob: -21.750009536743164
    9. 'printf' → logprob: -21.750009536743164
    10. '#print' → logprob: -22.125009536743164

Token 454: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001322639436693862
    2. 'ans' (adapté à ' ans') → logprob: -9.00013256072998
    3. ' print' → logprob: -11.75013256072998
    4. '   ' → logprob: -14.87513256072998
    5. ' ans' → logprob: -15.25013256072998
    6. '
' → logprob: -15.50013256072998
    7. '
' → logprob: -16.500131607055664
    8. '```' → logprob: -17.375131607055664
    9. '    
' → logprob: -18.250131607055664
    10. 'answer' → logprob: -18.625131607055664

Token 455: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6984960436820984
    2. '+=' → logprob: -0.6984960436820984
    3. '+' → logprob: -5.323495864868164
    4. ' +' → logprob: -8.823495864868164
    5. '<|end|>' → logprob: -8.948495864868164
    6. '=' → logprob: -10.198495864868164
    7. 'print' → logprob: -10.448495864868164
    8. ']+=' → logprob: -10.448495864868164
    9. ' ' → logprob: -10.698495864868164
    10. ')' → logprob: -11.448495864868164

Token 456: ' mw' (ID: 18407)
  Prédit: 'mw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mw' → logprob: -0.0018079837318509817
    2. ' mw' → logprob: -6.376808166503906
    3. 'min' → logprob: -9.376808166503906
    4. '   ' → logprob: -11.126808166503906
    5. ' ' → logprob: -13.626808166503906
    6. '  ' → logprob: -13.751808166503906
    7. 'm' → logprob: -14.126808166503906
    8. '[m' → logprob: -14.501808166503906
    9. ' min' → logprob: -14.626808166503906
    10. 'mx' → logprob: -14.876808166503906

Token 457: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01816117763519287
    2. '[-' → logprob: -4.018161296844482
    3. '   ' → logprob: -12.143160820007324
    4. '[(' → logprob: -12.268160820007324
    5. ' [' → logprob: -15.393160820007324
    6. '```' → logprob: -16.01816177368164
    7. 'odd' → logprob: -16.14316177368164
    8. '.pop' → logprob: -16.39316177368164
    9. '[top' → logprob: -16.64316177368164
    10. '  ' → logprob: -16.64316177368164

Token 458: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -9.472211968386546e-05
    2. '-' → logprob: -10.250094413757324
    3. '   ' → logprob: -10.375094413757324
    4. ' odd' → logprob: -11.625094413757324
    5. '(' → logprob: -12.000094413757324
    6. 'od' → logprob: -12.500094413757324
    7. '[' → logprob: -12.625094413757324
    8. 'old' → logprob: -13.250094413757324
    9. ' ' → logprob: -13.625094413757324
    10. '[-' → logprob: -14.125094413757324

Token 459: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.1008713702030946e-06
    2. 'b' → logprob: -13.125001907348633
    3. ']' → logprob: -17.625001907348633
    4. '[' → logprob: -19.750001907348633
    5. 's' → logprob: -19.875001907348633
    6. 'B' → logprob: -19.875001907348633
    7. '   ' → logprob: -20.125001907348633
    8. '```' → logprob: -20.125001907348633
    9. '_bits' → logprob: -20.125001907348633
    10. '+' → logprob: -20.375001907348633

Token 460: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030319862067699432
    2. ']
' → logprob: -3.530319929122925
    3. ']

' → logprob: -7.530319690704346
    4. ')' → logprob: -11.655320167541504
    5. '])' → logprob: -12.280320167541504
    6. '[' → logprob: -12.655320167541504
    7. ']
' → logprob: -12.780320167541504
    8. 'print' → logprob: -12.905320167541504
    9. ' ]' → logprob: -13.030320167541504
    10. '   ' → logprob: -13.530320167541504

Token 461: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.2994620242971e-06
    2. ' print' → logprob: -11.750008583068848
    3. '
' → logprob: -15.250008583068848
    4. '```' → logprob: -16.25000762939453
    5. '    
' → logprob: -18.87500762939453
    6. '  
' → logprob: -19.37500762939453
    7. '#print' → logprob: -19.50000762939453
    8. ')' → logprob: -19.75000762939453
    9. '#' → logprob: -20.37500762939453
    10. '(print' → logprob: -20.50000762939453

Token 462: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.000000953674316
    3. '
' → logprob: -17.0
    4. '```' → logprob: -20.5
    5. '    
' → logprob: -20.625
    6. ' 
' → logprob: -22.5
    7. '#print' → logprob: -22.5
    8. '  
' → logprob: -22.625
    9. '   ' → logprob: -23.375
    10. '	print' → logprob: -23.75

Token 463: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.128163257315464e-07
    2. 'ans' → logprob: -15.875
    3. '(' → logprob: -16.625
    4. '(answer' → logprob: -18.5
    5. ' (' → logprob: -19.625
    6. '(
' → logprob: -19.875
    7. '	ans' → logprob: -20.5
    8. '(abs' → logprob: -21.5
    9. '(int' → logprob: -21.625
    10. '((' → logprob: -21.875

Token 464: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.500001907348633
    3. ')
' → logprob: -14.750001907348633
    4. '())' → logprob: -15.875001907348633
    5. '()' → logprob: -17.000001907348633
    6. '))' → logprob: -17.625001907348633
    7. '）' → logprob: -18.375001907348633
    8. ')`' → logprob: -18.500001907348633
    9. '),' → logprob: -19.000001907348633
    10. ')}' → logprob: -19.250001907348633

Token 465: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3137471675872803
    2. ':' → logprob: -1.3137471675872803
    3. '   ' → logprob: -7.688747406005859
    4. 'print' → logprob: -11.18874740600586
    5. ' :
' → logprob: -11.81374740600586
    6. ':
' → logprob: -13.06374740600586
    7. ':

' → logprob: -13.31374740600586
    8. ' :' → logprob: -13.81374740600586
    9. ' print' → logprob: -14.18874740600586
    10. '    
' → logprob: -15.81374740600586

Token 467: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0041111730970442295
    2. '   ' → logprob: -5.504111289978027
    3. '0' → logprob: -10.754111289978027
    4. ' print' → logprob: -11.504111289978027
    5. '```' → logprob: -13.629111289978027
    6. '	print' → logprob: -16.50411033630371
    7. '``' → logprob: -18.00411033630371
    8. '1' → logprob: -19.75411033630371
    9. ' ' → logprob: -20.25411033630371
    10. 'printf' → logprob: -20.62911033630371

Token 468: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.2729995988775045e-06
    2. ' print' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.7500057220459
    4. '	print' → logprob: -22.3750057220459
    5. 'pass' → logprob: -22.6250057220459
    6. '```' → logprob: -22.6250057220459
    7. '#print' → logprob: -24.5000057220459
    8. '0' → logprob: -24.8750057220459
    9. ' ' → logprob: -25.1250057220459
    10. 'printf' → logprob: -26.2500057220459

Token 469: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.747814349073451e-05
    2. '(' → logprob: -11.000017166137695
    3. 'ans' → logprob: -14.250017166137695
    4. '0' → logprob: -18.250017166137695
    5. '(answer' → logprob: -19.250017166137695
    6. '()' → logprob: -19.750017166137695
    7. '	ans' → logprob: -20.875017166137695
    8. '(
' → logprob: -21.000017166137695
    9. '(adj' → logprob: -21.000017166137695
    10. '(ord' → logprob: -21.250017166137695

Token 470: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ')
' → logprob: -13.25000286102295
    3. ' )' → logprob: -14.00000286102295
    4. '))' → logprob: -15.25000286102295
    5. '())' → logprob: -16.500003814697266
    6. ')`' → logprob: -18.125003814697266
    7. '()' → logprob: -18.625003814697266
    8. ')}' → logprob: -19.125003814697266
    9. '),' → logprob: -19.250003814697266
    10. '）' → logprob: -19.750003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 468
Tokens correctement prédits (1ère position, stricte): 166
Tokens correctement prédits (1ère position, avec adaptation): 185
Tokens correctement prédits (top 10): 380
Précision stricte (1ère position): 35.47%
Précision adaptée (1ère position): 39.53%
Précision (top 10): 81.20%
================================================================================
