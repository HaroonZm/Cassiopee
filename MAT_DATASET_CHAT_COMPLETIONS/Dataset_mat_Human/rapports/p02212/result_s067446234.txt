================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b, c, d = map(int,input().split())
print(min(abs((a+b)-(c+d)),abs((a+c)-(b+d)),abs((a+d)-(c+b))))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2113417536020279
    2. '+' → logprob: -1.7113417387008667
    3. ',' → logprob: -5.336341857910156
    4. ' =' → logprob: -5.586341857910156
    5. ' ' → logprob: -8.086341857910156
    6. ' +' → logprob: -8.586341857910156
    7. '*' → logprob: -8.711341857910156
    8. '+=' → logprob: -8.961341857910156
    9. '.' → logprob: -9.086341857910156
    10. '[' → logprob: -9.586341857910156

Token 4: ' c' (ID: 274)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23932603001594543
    2. ',' → logprob: -2.114326000213623
    3. ' =' → logprob: -2.989326000213623
    4. 'c' → logprob: -3.739326000213623
    5. ' ' → logprob: -4.739326000213623
    6. ',c' → logprob: -5.614326000213623
    7. '<|end|>' → logprob: -6.614326000213623
    8. ')' → logprob: -6.864326000213623
    9. '.' → logprob: -7.114326000213623
    10. '_' → logprob: -7.364326000213623

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14467333257198334
    2. '+' → logprob: -2.1446733474731445
    3. ',' → logprob: -4.7696733474731445
    4. ' =' → logprob: -5.0196733474731445
    5. ')' → logprob: -7.0196733474731445
    6. '```' → logprob: -8.519673347473145
    7. '[' → logprob: -8.644673347473145
    8. ' +' → logprob: -8.769673347473145
    9. '+=' → logprob: -8.769673347473145
    10. '<|end|>' → logprob: -8.769673347473145

Token 6: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23719529807567596
    2. ' =' → logprob: -2.2371952533721924
    3. 'd' → logprob: -2.7371952533721924
    4. ',' → logprob: -3.7371952533721924
    5. '<|end|>' → logprob: -4.9871954917907715
    6. ',d' → logprob: -5.6121954917907715
    7. ')' → logprob: -6.6121954917907715
    8. ' ' → logprob: -6.6121954917907715
    9. ' d' → logprob: -7.6121954917907715
    10. '.' → logprob: -7.7371954917907715

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02208918333053589
    2. ' =' → logprob: -4.397089004516602
    3. ',' → logprob: -5.022089004516602
    4. '+' → logprob: -6.522089004516602
    5. ')' → logprob: -7.772089004516602
    6. '```' → logprob: -8.647089004516602
    7. '<|end|>' → logprob: -8.772089004516602
    8. ';' → logprob: -8.897089004516602
    9. '[' → logprob: -9.147089004516602
    10. '.' → logprob: -9.147089004516602

Token 8: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.383043110370636
    2. '0' → logprob: -1.5080430507659912
    3. '1' → logprob: -2.383043050765991
    4. ' [' → logprob: -6.00804328918457
    5. '[' → logprob: -6.75804328918457
    6. '10' → logprob: -8.50804328918457
    7. ' (' → logprob: -8.63304328918457
    8. 'map' → logprob: -9.13304328918457
    9. ' map' → logprob: -9.13304328918457
    10. '5' → logprob: -9.63304328918457

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022362343966960907
    2. '(lambda' → logprob: -3.897362232208252
    3. '```' → logprob: -7.397362232208252
    4. '<|end|>' → logprob: -7.397362232208252
    5. '(int' → logprob: -8.52236270904541
    6. ')' → logprob: -9.39736270904541
    7. '(user' → logprob: -10.02236270904541
    8. '(
' → logprob: -10.89736270904541
    9. '(str' → logprob: -10.89736270904541
    10. '<|end|>' → logprob: -10.89736270904541

Token 10: ',input' (ID: 123014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4236876368522644
    2. '(input' → logprob: -1.1736876964569092
    3. '(' → logprob: -4.29868745803833
    4. '<|end|>' → logprob: -5.04868745803833
    5. '```' → logprob: -5.79868745803833
    6. '(user' → logprob: -5.92368745803833
    7. 'input' → logprob: -6.29868745803833
    8. '`)' → logprob: -6.79868745803833
    9. '(token' → logprob: -7.04868745803833
    10. ',' → logprob: -7.17368745803833

Token 11: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0535961389541626
    2. '()' → logprob: -1.1785961389541626
    3. '())' → logprob: -1.4285961389541626
    4. '(()' → logprob: -3.803596019744873
    5. '('' → logprob: -4.303596019744873
    6. ')' → logprob: -4.553596019744873
    7. '<|end|>' → logprob: -4.928596019744873
    8. '(token' → logprob: -5.053596019744873
    9. '().' → logprob: -5.303596019744873
    10. '()>' → logprob: -5.553596019744873

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.255023956531659e-05
    2. 'strip' → logprob: -9.750072479248047
    3. ' split' → logprob: -11.750072479248047
    4. '(split' → logprob: -12.375072479248047
    5. 'spl' → logprob: -14.000072479248047
    6. 'rstrip' → logprob: -14.375072479248047
    7. ')' → logprob: -14.750072479248047
    8. '_split' → logprob: -16.125072479248047
    9. 's' → logprob: -17.625072479248047
    10. 'startswith' → logprob: -17.750072479248047

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.18578943610191345
    2. ')' → logprob: -1.8107894659042358
    3. '))' → logprob: -5.935789585113525
    4. '()' → logprob: -6.185789585113525
    5. '()))' → logprob: -6.935789585113525
    6. '`)' → logprob: -8.435789108276367
    7. ' ())' → logprob: -10.310789108276367
    8. '(' → logprob: -10.810789108276367
    9. '`()' → logprob: -11.685789108276367
    10. '')' → logprob: -11.935789108276367

Token 14: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34322866797447205
    2. 'e' → logprob: -2.218228578567505
    3. 'if' → logprob: -2.343228578567505
    4. 'x' → logprob: -3.968228578567505
    5. '*' → logprob: -4.093228816986084
    6. '#' → logprob: -4.593228816986084
    7. '>' → logprob: -4.718228816986084
    8. '\n' → logprob: -4.843228816986084
    9. '<|end|>' → logprob: -5.468228816986084
    10. 'a' → logprob: -6.218228816986084

Token 15: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007798461592756212
    2. '("("' → logprob: -7.750779628753662
    3. '('' → logprob: -8.12578010559082
    4. '(a' → logprob: -10.62578010559082
    5. '((' → logprob: -11.87578010559082
    6. '("""' → logprob: -12.25078010559082
    7. '(`' → logprob: -13.00078010559082
    8. '()' → logprob: -13.25078010559082
    9. '(**' → logprob: -13.87578010559082
    10. '```' → logprob: -13.87578010559082

Token 16: '(abs' (ID: 71957)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13223733007907867
    2. '(a' → logprob: -2.257237434387207
    3. '()' → logprob: -4.007237434387207
    4. '((' → logprob: -7.632237434387207
    5. '(()' → logprob: -8.132237434387207
    6. '())' → logprob: -9.882237434387207
    7. ')' → logprob: -10.257237434387207
    8. '(A' → logprob: -10.632237434387207
    9. 'a' → logprob: -10.882237434387207
    10. '(
' → logprob: -11.007237434387207

Token 17: '((' (ID: 2054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0013776143314316869
    2. '(' → logprob: -6.751377582550049
    3. '(b' → logprob: -9.126378059387207
    4. '((' → logprob: -9.501378059387207
    5. 'a' → logprob: -11.751378059387207
    6. '(c' → logprob: -11.876378059387207
    7. '(d' → logprob: -12.501378059387207
    8. '(-' → logprob: -12.751378059387207
    9. '(s' → logprob: -13.876378059387207
    10. '(x' → logprob: -15.126378059387207

Token 18: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0084003871306777
    2. 'b' → logprob: -5.7584004402160645
    3. 'c' → logprob: -6.0084004402160645
    4. '(a' → logprob: -6.7584004402160645
    5. ' a' → logprob: -7.5084004402160645
    6. '180' → logprob: -8.008399963378906
    7. 'd' → logprob: -8.133399963378906
    8. '((' → logprob: -9.133399963378906
    9. '100' → logprob: -9.508399963378906
    10. 'int' → logprob: -10.508399963378906

Token 19: '+b' (ID: 76609)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.37792184948921204
    2. '-' → logprob: -1.5029218196868896
    3. '-b' → logprob: -2.5029218196868896
    4. '-d' → logprob: -5.377922058105469
    5. '-c' → logprob: -6.252922058105469
    6. '+b' → logprob: -6.627922058105469
    7. '+' → logprob: -7.127922058105469
    8. ' +' → logprob: -7.502922058105469
    9. '-(' → logprob: -7.627922058105469
    10. ' -(' → logprob: -8.502922058105469

Token 20: ')-(' (ID: 111485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6163918375968933
    2. ')-(' → logprob: -0.8663918375968933
    3. ')-' → logprob: -3.366391897201538
    4. '-' → logprob: -6.491391658782959
    5. ' )' → logprob: -6.741391658782959
    6. '+c' → logprob: -7.491391658782959
    7. ')+(' → logprob: -7.616391658782959
    8. ')+' → logprob: -8.241392135620117
    9. '-c' → logprob: -8.241392135620117
    10. ' -' → logprob: -8.366392135620117

Token 21: 'c' (ID: 66)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.1865287721157074
    2. 'c' → logprob: -1.8115288019180298
    3. ' (' → logprob: -5.43652868270874
    4. ' c' → logprob: -6.31152868270874
    5. '(a' → logprob: -8.811529159545898
    6. '(d' → logprob: -9.061529159545898
    7. '(' → logprob: -9.186529159545898
    8. '(abs' → logprob: -10.061529159545898
    9. 'abs' → logprob: -10.311529159545898
    10. '((' → logprob: -10.686529159545898

Token 22: '+d' (ID: 127807)
  Prédit: '+d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+d' → logprob: -0.06848933547735214
    2. '+' → logprob: -2.8184893131256104
    3. ' +' → logprob: -5.0684895515441895
    4. '+b' → logprob: -9.568489074707031
    5. ')))' → logprob: -10.193489074707031
    6. '))' → logprob: -10.693489074707031
    7. ')+' → logprob: -11.193489074707031
    8. '+)' → logprob: -11.443489074707031
    9. '+D' → logprob: -11.568489074707031
    10. ')' → logprob: -11.943489074707031

Token 23: ')),' (ID: 12098)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.21305438876152039
    2. ')' → logprob: -1.7130544185638428
    3. '))' → logprob: -4.588054180145264
    4. '))))' → logprob: -6.713054180145264
    5. '),' → logprob: -8.963054656982422
    6. '')))' → logprob: -10.838054656982422
    7. ' ' → logprob: -11.713054656982422
    8. ')));' → logprob: -12.088054656982422
    9. '())))' → logprob: -12.088054656982422
    10. ')))
' → logprob: -12.338054656982422

Token 24: 'abs' (ID: 6071)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.12708128988742828
    2. 'abs' → logprob: -2.1270813941955566
    3. '(abs' → logprob: -8.877080917358398
    4. ' (' → logprob: -12.502080917358398
    5. ' ' → logprob: -12.877080917358398
    6. ')' → logprob: -13.377080917358398
    7. ' ' → logprob: -13.627080917358398
    8. 'a' → logprob: -14.002080917358398
    9. ' a' → logprob: -14.127080917358398
    10. '0' → logprob: -14.502080917358398

Token 25: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0149758979678154
    2. '(((' → logprob: -4.6399760246276855
    3. '(' → logprob: -5.3899760246276855
    4. '(a' → logprob: -7.3899760246276855
    5. '(c' → logprob: -11.389975547790527
    6. '((((' → logprob: -11.389975547790527
    7. '(-' → logprob: -13.889975547790527
    8. ' ((' → logprob: -14.264975547790527
    9. '(d' → logprob: -14.764975547790527
    10. '(b' → logprob: -14.889975547790527

Token 26: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1429058164358139
    2. 'a' → logprob: -2.0179057121276855
    3. '(' → logprob: -9.642906188964844
    4. '(c' → logprob: -9.767906188964844
    5. ' (' → logprob: -10.142906188964844
    6. ' a' → logprob: -10.392906188964844
    7. '((' → logprob: -11.267906188964844
    8. 'c' → logprob: -11.392906188964844
    9. '(b' → logprob: -12.267906188964844
    10. 'b' → logprob: -13.267906188964844

Token 27: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.33428823947906494
    2. '-c' → logprob: -1.334288239479065
    3. '-b' → logprob: -4.959288120269775
    4. '+b' → logprob: -5.709288120269775
    5. '+d' → logprob: -5.834288120269775
    6. '-' → logprob: -5.834288120269775
    7. '+' → logprob: -6.084288120269775
    8. '-d' → logprob: -6.834288120269775
    9. ' -' → logprob: -7.959288120269775
    10. '+(' → logprob: -8.209288597106934

Token 28: ')-(' (ID: 111485)
  Prédit: ')-('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-(' → logprob: -9.615255839889869e-05
    2. ' )' → logprob: -10.125096321105957
    3. ')-' → logprob: -10.500096321105957
    4. ')' → logprob: -10.625096321105957
    5. '-' → logprob: -13.000096321105957
    6. ' ' → logprob: -14.250096321105957
    7. '-(' → logprob: -14.375096321105957
    8. '")' → logprob: -14.875096321105957
    9. '')' → logprob: -15.625096321105957
    10. '   ' → logprob: -17.37509536743164

Token 29: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09518671035766602
    2. '(b' → logprob: -2.845186710357666
    3. 'd' → logprob: -3.470186710357666
    4. '(d' → logprob: -7.345186710357666
    5. ' b' → logprob: -7.470186710357666
    6. ' (' → logprob: -8.220186233520508
    7. ' d' → logprob: -9.845186233520508
    8. ')b' → logprob: -12.220186233520508
    9. '-b' → logprob: -12.470186233520508
    10. '(a' → logprob: -12.845186233520508

Token 30: '+d' (ID: 127807)
  Prédit: '+d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+d' → logprob: -9.93710636976175e-05
    2. '+' → logprob: -9.375099182128906
    3. ' +' → logprob: -11.375099182128906
    4. '-d' → logprob: -13.875099182128906
    5. '+s' → logprob: -14.375099182128906
    6. 'd' → logprob: -15.000099182128906
    7. '+c' → logprob: -15.250099182128906
    8. '+)' → logprob: -15.250099182128906
    9. '+-' → logprob: -15.625099182128906
    10. '+b' → logprob: -16.250099182128906

Token 31: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.33552706241607666
    2. ')))' → logprob: -1.7105270624160767
    3. '),' → logprob: -2.710526943206787
    4. ')' → logprob: -3.585526943206787
    5. '))' → logprob: -4.710526943206787
    6. '))),' → logprob: -7.835526943206787
    7. ' ' → logprob: -8.335527420043945
    8. '))))' → logprob: -8.960527420043945
    9. '()' → logprob: -9.710527420043945
    10. ')))
' → logprob: -10.085527420043945

Token 32: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -4.632542913896032e-05
    2. ' abs' → logprob: -10.000046730041504
    3. '(abs' → logprob: -14.000046730041504
    4. '.abs' → logprob: -20.250045776367188
    5. 'min' → logprob: -21.000045776367188
    6. '```' → logprob: -21.500045776367188
    7. '_abs' → logprob: -22.250045776367188
    8. 'ab' → logprob: -23.250045776367188
    9. 'Abs' → logprob: -23.250045776367188
    10. 'fabs' → logprob: -23.875045776367188

Token 33: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0005332559230737388
    2. '(' → logprob: -8.250533103942871
    3. '(((' → logprob: -8.250533103942871
    4. ' ((' → logprob: -12.750533103942871
    5. '```' → logprob: -13.125533103942871
    6. '(abs' → logprob: -13.500533103942871
    7. '(a' → logprob: -14.500533103942871
    8. '>((' → logprob: -14.500533103942871
    9. '(([' → logprob: -14.625533103942871
    10. '((((' → logprob: -14.750533103942871

Token 34: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.12177364528179169
    2. '(d' → logprob: -2.2467737197875977
    3. '(b' → logprob: -4.746773719787598
    4. '(' → logprob: -9.246773719787598
    5. ' (' → logprob: -9.246773719787598
    6. 'd' → logprob: -11.246773719787598
    7. 'a' → logprob: -11.746773719787598
    8. '((' → logprob: -12.121773719787598
    9. '(ad' → logprob: -12.121773719787598
    10. '(abs' → logprob: -12.871773719787598

Token 35: '+d' (ID: 127807)
  Prédit: '+d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+d' → logprob: -3.011373155459296e-05
    2. '+' → logprob: -11.250030517578125
    3. '+b' → logprob: -11.250030517578125
    4. ' +' → logprob: -12.875030517578125
    5. 'd' → logprob: -13.625030517578125
    6. '+(' → logprob: -16.125030517578125
    7. '-d' → logprob: -17.625030517578125
    8. '+
' → logprob: -18.000030517578125
    9. '	d' → logprob: -18.125030517578125
    10. '```' → logprob: -18.250030517578125

Token 36: ')-(' (ID: 111485)
  Prédit: ')-('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-(' → logprob: -0.0001637300301808864
    2. ')-' → logprob: -9.625164031982422
    3. ')' → logprob: -9.875164031982422
    4. ' )' → logprob: -10.125164031982422
    5. '-' → logprob: -12.500164031982422
    6. '-(' → logprob: -13.750164031982422
    7. ' ' → logprob: -15.250164031982422
    8. '-)' → logprob: -15.250164031982422
    9. '")' → logprob: -15.500164031982422
    10. '')' → logprob: -15.750164031982422

Token 37: 'c' (ID: 66)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5761982798576355
    2. '(b' → logprob: -0.8261982798576355
    3. ')b' → logprob: -8.95119857788086
    4. ' b' → logprob: -10.20119857788086
    5. ' (' → logprob: -10.20119857788086
    6. ')(' → logprob: -10.70119857788086
    7. '(c' → logprob: -11.45119857788086
    8. '	b' → logprob: -11.82619857788086
    9. 'c' → logprob: -12.20119857788086
    10. ')' → logprob: -12.70119857788086

Token 38: '+b' (ID: 76609)
  Prédit: '+b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -8.537868779967539e-06
    2. '+' → logprob: -11.875008583068848
    3. 'b' → logprob: -13.875008583068848
    4. '-b' → logprob: -15.000008583068848
    5. '+B' → logprob: -15.750008583068848
    6. ' +' → logprob: -15.875008583068848
    7. '+a' → logprob: -17.00000762939453
    8. '+)' → logprob: -18.75000762939453
    9. '+d' → logprob: -18.87500762939453
    10. '>b' → logprob: -19.00000762939453

Token 39: '))))' (ID: 57459)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0636204406619072
    2. ')' → logprob: -2.8136203289031982
    3. '))' → logprob: -7.063620567321777
    4. '))))' → logprob: -7.188620567321777
    5. '')))' → logprob: -10.813620567321777
    6. ')));' → logprob: -11.438620567321777
    7. ')))
' → logprob: -13.063620567321777
    8. '),' → logprob: -13.313620567321777
    9. ' ' → logprob: -13.438620567321777
    10. ')))

' → logprob: -13.813620567321777


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 37
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 30
Précision stricte (1ère position): 37.84%
Précision adaptée (1ère position): 37.84%
Précision (top 10): 81.08%
================================================================================
