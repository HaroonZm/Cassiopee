================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A = list(map(int,input().split(" ")))
A = sorted(A)
print(abs(A[3]+A[0]-A[1]-A[2]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' list' (ID: 1562)
  → Token d'amorce (pas de prédiction)

Token 3: '(map' (ID: 16946)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.577508270740509
    2. '(' → logprob: -0.827508270740509
    3. '.' → logprob: -7.077508449554443
    4. 'A' → logprob: -8.577507972717285
    5. '```' → logprob: -9.202507972717285
    6. ')' → logprob: -9.702507972717285
    7. '\[' → logprob: -9.702507972717285
    8. '[
' → logprob: -9.952507972717285
    9. '(
' → logprob: -9.952507972717285
    10. '[(' → logprob: -10.327507972717285

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12360144406557083
    2. '(lambda' → logprob: -2.4986014366149902
    3. '<|end|>' → logprob: -3.4986014366149902
    4. ')' → logprob: -6.62360143661499
    5. '<|end|>' → logprob: -7.62360143661499
    6. '```' → logprob: -7.87360143661499
    7. ' (' → logprob: -7.87360143661499
    8. '(str' → logprob: -8.373601913452148
    9. '(eval' → logprob: -8.998601913452148
    10. '(token' → logprob: -9.123601913452148

Token 5: ',input' (ID: 123014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07945115119218826
    2. '(input' → logprob: -3.079451084136963
    3. '(A' → logprob: -4.579451084136963
    4. ')' → logprob: -4.829451084136963
    5. '))' → logprob: -6.079451084136963
    6. '<|end|>' → logprob: -6.204451084136963
    7. '```' → logprob: -6.329451084136963
    8. '(
' → logprob: -7.454451084136963
    9. '(range' → logprob: -7.579451084136963
    10. '((' → logprob: -7.954451084136963

Token 6: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8259316086769104
    2. '()))' → logprob: -0.8259316086769104
    3. '(()' → logprob: -3.3259315490722656
    4. '()' → logprob: -3.8259315490722656
    5. '()));' → logprob: -3.9509315490722656
    6. '())' → logprob: -4.200931549072266
    7. '(""))' → logprob: -4.950931549072266
    8. '())))' → logprob: -5.075931549072266
    9. '()>' → logprob: -5.825931549072266
    10. '))' → logprob: -5.950931549072266

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003981376066803932
    2. 'strip' → logprob: -8.000397682189941
    3. ' split' → logprob: -10.125397682189941
    4. ')' → logprob: -11.375397682189941
    5. 'rstrip' → logprob: -11.875397682189941
    6. '(split' → logprob: -13.000397682189941
    7. 's' → logprob: -13.875397682189941
    8. 'spl' → logprob: -14.500397682189941
    9. 'replace' → logprob: -15.500397682189941
    10. 'startswith' → logprob: -15.750397682189941

Token 8: '("' (ID: 568)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.734836220741272
    2. '()))' → logprob: -0.734836220741272
    3. '())' → logprob: -4.359836101531982
    4. ')' → logprob: -4.359836101531982
    5. '(' → logprob: -4.734836101531982
    6. '()' → logprob: -5.734836101531982
    7. ')))' → logprob: -6.109836101531982
    8. '())))' → logprob: -7.859836101531982
    9. '```' → logprob: -8.73483657836914
    10. '()));' → logprob: -9.10983657836914

Token 9: ' "' (ID: 392)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5216699242591858
    2. ')))' → logprob: -1.396669864654541
    3. '")))' → logprob: -1.896669864654541
    4. ' "' → logprob: -5.396669864654541
    5. '')))' → logprob: -6.146669864654541
    6. '"' → logprob: -7.521669864654541
    7. '"))' → logprob: -7.521669864654541
    8. '")));' → logprob: -7.896669864654541
    9. '">' → logprob: -8.1466703414917
    10. '")' → logprob: -8.8966703414917

Token 10: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.47418275475502014
    2. ')' → logprob: -0.9741827249526978
    3. '))' → logprob: -9.849183082580566
    4. '))))' → logprob: -10.724183082580566
    5. '')))' → logprob: -10.974183082580566
    6. ')));' → logprob: -12.099183082580566
    7. '")))' → logprob: -13.099183082580566
    8. '),' → logprob: -13.724183082580566
    9. '())))' → logprob: -13.724183082580566
    10. ')`' → logprob: -14.724183082580566

Token 11: 'A' (ID: 32)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0977774858474731
    2. '[' → logprob: -1.7227774858474731
    3. 'A' → logprob: -2.0977773666381836
    4. '#' → logprob: -2.2227773666381836
    5. '.' → logprob: -2.5977773666381836
    6. 'for' → logprob: -2.9727773666381836
    7. '+' → logprob: -3.5977773666381836
    8. '```' → logprob: -3.9727773666381836
    9. '\n' → logprob: -4.472777366638184
    10. '`' → logprob: -4.597777366638184

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06782064586877823
    2. '<|end|>' → logprob: -3.0678205490112305
    3. '```' → logprob: -4.9428205490112305
    4. '\[' → logprob: -6.0678205490112305
    5. ')' → logprob: -6.1928205490112305
    6. '[
' → logprob: -6.4428205490112305
    7. '
' → logprob: -6.6928205490112305
    8. '\n' → logprob: -7.0678205490112305
    9. '.' → logprob: -7.0678205490112305
    10. '<|end|>' → logprob: -7.1928205490112305

Token 13: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.669278621673584
    2. 'list' → logprob: -1.669278621673584
    3. ' sorted' → logprob: -2.544278621673584
    4. ' list' → logprob: -2.544278621673584
    5. ' []' → logprob: -2.919278621673584
    6. '[]' → logprob: -3.044278621673584
    7. '[' → logprob: -4.294278621673584
    8. 'A' → logprob: -4.544278621673584
    9. ' A' → logprob: -5.044278621673584
    10. ' [' → logprob: -5.169278621673584

Token 14: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3870925307273865
    2. '(A' → logprob: -1.1370925903320312
    3. '((' → logprob: -9.887092590332031
    4. '([' → logprob: -10.262092590332031
    5. '(
' → logprob: -10.637092590332031
    6. '```' → logprob: -11.012092590332031
    7. '(`' → logprob: -11.637092590332031
    8. '(open' → logprob: -11.637092590332031
    9. ')' → logprob: -11.762092590332031
    10. '(a' → logprob: -12.012092590332031

Token 15: ')
' (ID: 446)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5759925842285156
    2. ')' → logprob: -0.8259925842285156
    3. '),' → logprob: -11.075992584228516
    4. ')))' → logprob: -11.325992584228516
    5. ',' → logprob: -11.700992584228516
    6. '[' → logprob: -11.950992584228516
    7. '])' → logprob: -13.450992584228516
    8. ' ))' → logprob: -13.700992584228516
    9. ' )' → logprob: -13.825992584228516
    10. '))
' → logprob: -14.075992584228516

Token 16: 'print' (ID: 1598)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3469522297382355
    2. 'for' → logprob: -2.096952199935913
    3. 'print' → logprob: -2.346952199935913
    4. '
' → logprob: -3.596952199935913
    5. 'if' → logprob: -4.471952438354492
    6. '#' → logprob: -4.471952438354492
    7. '```' → logprob: -5.221952438354492
    8. '[
' → logprob: -5.346952438354492
    9. ')' → logprob: -5.721952438354492
    10. '(' → logprob: -5.846952438354492

Token 17: '(abs' (ID: 71957)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006825486198067665
    2. '(A' → logprob: -5.0068254470825195
    3. '("("' → logprob: -9.88182544708252
    4. '((' → logprob: -11.00682544708252
    5. '('' → logprob: -11.38182544708252
    6. '()' → logprob: -11.63182544708252
    7. '(**' → logprob: -12.25682544708252
    8. '(len' → logprob: -12.63182544708252
    9. '(`' → logprob: -12.63182544708252
    10. '(a' → logprob: -14.00682544708252

Token 18: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.10025055706501007
    2. '(' → logprob: -2.350250482559204
    3. '((' → logprob: -10.850250244140625
    4. '(-' → logprob: -11.600250244140625
    5. '(a' → logprob: -11.850250244140625
    6. 'A' → logprob: -12.850250244140625
    7. '(B' → logprob: -13.350250244140625
    8. '(`' → logprob: -13.975250244140625
    9. '(min' → logprob: -14.850250244140625
    10. '(
' → logprob: -15.100250244140625

Token 19: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.227250610711053e-05
    2. '[-' → logprob: -10.125041961669922
    3. '[len' → logprob: -14.000041961669922
    4. '-' → logprob: -14.625041961669922
    5. '0' → logprob: -15.000041961669922
    6. ')' → logprob: -15.375041961669922
    7. ' [' → logprob: -15.750041961669922
    8. '[
' → logprob: -16.875041961669922
    9. '1' → logprob: -17.375041961669922
    10. '2' → logprob: -17.750041961669922

Token 20: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1939263492822647
    2. '-' → logprob: -2.0689263343811035
    3. '1' → logprob: -3.3189263343811035
    4. '2' → logprob: -4.3189263343811035
    5. ' ' → logprob: -8.443926811218262
    6. '3' → logprob: -8.693926811218262
    7. ' -' → logprob: -9.818926811218262
    8. 'len' → logprob: -11.443926811218262
    9. '4' → logprob: -13.506426811218262
    10. '−' → logprob: -13.881426811218262

Token 21: ']+' (ID: 15344)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2614467442035675
    2. ']' → logprob: -2.136446714401245
    3. ' -' → logprob: -2.511446714401245
    4. ']-' → logprob: -4.011446952819824
    5. '-A' → logprob: -4.386446952819824
    6. ' ]' → logprob: -8.261446952819824
    7. ' ' → logprob: -11.761446952819824
    8. ']+' → logprob: -11.761446952819824
    9. '   ' → logprob: -12.886446952819824
    10. '  ' → logprob: -13.011446952819824

Token 22: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18371768295764923
    2. ' A' → logprob: -1.8087177276611328
    3. '-A' → logprob: -5.808717727661133
    4. ' -' → logprob: -7.808717727661133
    5. '-' → logprob: -7.808717727661133
    6. ' ' → logprob: -9.558717727661133
    7. '(A' → logprob: -11.183717727661133
    8. '  ' → logprob: -11.308717727661133
    9. '(-' → logprob: -11.433717727661133
    10. ' (-' → logprob: -11.933717727661133

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000104616025055293
    2. '-' → logprob: -10.000104904174805
    3. '[-' → logprob: -10.750104904174805
    4. '3' → logprob: -11.750104904174805
    5. '2' → logprob: -11.750104904174805
    6. '1' → logprob: -12.000104904174805
    7. ')' → logprob: -12.125104904174805
    8. '))' → logprob: -12.625104904174805
    9. '"' → logprob: -13.625104904174805
    10. '-[' → logprob: -13.750104904174805

Token 24: '0' (ID: 15)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.27495065331459045
    2. '0' → logprob: -2.1499507427215576
    3. '2' → logprob: -2.5249507427215576
    4. '1' → logprob: -4.1499505043029785
    5. '7' → logprob: -4.2749505043029785
    6. '5' → logprob: -5.0249505043029785
    7. '6' → logprob: -5.0249505043029785
    8. '-' → logprob: -7.7749505043029785
    9. '3' → logprob: -8.149950981140137
    10. ' ' → logprob: -8.274950981140137

Token 25: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9252753257751465
    2. ')' → logprob: -1.1752753257751465
    3. '))' → logprob: -1.8002753257751465
    4. ')))' → logprob: -2.1752753257751465
    5. ']))' → logprob: -5.0502753257751465
    6. ' -' → logprob: -5.0502753257751465
    7. '-A' → logprob: -6.6752753257751465
    8. ')-' → logprob: -7.4252753257751465
    9. '-)' → logprob: -8.300275802612305
    10. '']))' → logprob: -8.425275802612305

Token 26: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.23721852898597717
    2. ' A' → logprob: -1.7372184991836548
    3. '(A' → logprob: -3.6122186183929443
    4. ' (' → logprob: -4.862218379974365
    5. '(' → logprob: -8.237218856811523
    6. 'abs' → logprob: -9.862218856811523
    7. ' ' → logprob: -10.237218856811523
    8. '2' → logprob: -10.612218856811523
    9. '	A' → logprob: -10.737218856811523
    10. ' abs' → logprob: -11.612218856811523

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.865583706414327e-05
    2. '3' → logprob: -9.62509822845459
    3. '1' → logprob: -10.87509822845459
    4. '2' → logprob: -11.62509822845459
    5. '4' → logprob: -12.50009822845459
    6. ' [' → logprob: -15.00009822845459
    7. '{' → logprob: -16.125099182128906
    8. '[-' → logprob: -16.500099182128906
    9. '-' → logprob: -16.750099182128906
    10. '(' → logprob: -16.750099182128906

Token 28: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008459140546619892
    2. '1' → logprob: -5.008459091186523
    3. '4' → logprob: -6.633459091186523
    4. '3' → logprob: -8.383459091186523
    5. ' ' → logprob: -8.633459091186523
    6. ']' → logprob: -11.383459091186523
    7. ')' → logprob: -12.883459091186523
    8. '])' → logprob: -13.133459091186523
    9. '5' → logprob: -14.008459091186523
    10. '[' → logprob: -14.508459091186523

Token 29: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16744719445705414
    2. '-A' → logprob: -1.9174472093582153
    3. ' -' → logprob: -5.542447090148926
    4. '))' → logprob: -5.917447090148926
    5. ')' → logprob: -8.167447090148926
    6. ')))' → logprob: -8.667447090148926
    7. ')-' → logprob: -9.792447090148926
    8. '+' → logprob: -11.167447090148926
    9. '-)' → logprob: -11.542447090148926
    10. '-А' → logprob: -11.542447090148926

Token 30: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0007142199319787323
    2. ' A' → logprob: -7.250714302062988
    3. '<|end|>' → logprob: -12.750714302062988
    4. '	A' → logprob: -14.625714302062988
    5. '>A' → logprob: -14.875714302062988
    6. ')' → logprob: -15.375714302062988
    7. ' ' → logprob: -16.000713348388672
    8. '<|end|>' → logprob: -16.500713348388672
    9. '4' → logprob: -17.125713348388672
    10. 'А' → logprob: -17.125713348388672

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.107425062713446e-06
    2. '2' → logprob: -12.125006675720215
    3. '3' → logprob: -13.500006675720215
    4. '\[' → logprob: -16.62500762939453
    5. '```' → logprob: -17.50000762939453
    6. '[
' → logprob: -17.62500762939453
    7. '{' → logprob: -18.25000762939453
    8. '(' → logprob: -18.25000762939453
    9. ' [' → logprob: -18.62500762939453
    10. 'A' → logprob: -18.87500762939453

Token 32: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.250006675720215
    3. '3' → logprob: -14.375006675720215
    4. '۲' → logprob: -15.625006675720215
    5. '२' → logprob: -15.625006675720215
    6. '２' → logprob: -15.875006675720215
    7. '২' → logprob: -16.6250057220459
    8. ']' → logprob: -17.0000057220459
    9. ')' → logprob: -17.3125057220459
    10. '<|end|>' → logprob: -17.7500057220459

Token 33: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.017060546204447746
    2. ')' → logprob: -4.14206075668335
    3. ')))' → logprob: -6.89206075668335
    4. ']))' → logprob: -12.642060279846191
    5. ' ))' → logprob: -12.892060279846191
    6. '()))' → logprob: -14.267060279846191
    7. '])' → logprob: -14.392060279846191
    8. '1' → logprob: -14.767060279846191
    9. '))))' → logprob: -15.142060279846191
    10. '}))' → logprob: -15.142060279846191


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 31
Tokens correctement prédits (1ère position, stricte): 10
Tokens correctement prédits (1ère position, avec adaptation): 10
Tokens correctement prédits (top 10): 20
Précision stricte (1ère position): 32.26%
Précision adaptée (1ère position): 32.26%
Précision (top 10): 64.52%
================================================================================
