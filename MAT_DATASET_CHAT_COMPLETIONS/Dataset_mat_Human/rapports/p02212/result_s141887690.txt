================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools
a = list(map(int, input().split()))
b = sum(a)
comb = itertools.combinations(a, 2)
sa = []
for i in comb:
    sa.append(abs(b - 2 *sum(i)))
print(min(sa))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.9504606825648807e-05
    2. '```' → logprob: -12.625019073486328
    3. 'import' → logprob: -13.250019073486328
    4. '\' → logprob: -13.625019073486328
    5. '."""' → logprob: -13.625019073486328
    6. ' .' → logprob: -13.750019073486328
    7. '.

' → logprob: -13.750019073486328
    8. '\.' → logprob: -13.875019073486328
    9. '​.' → logprob: -14.125019073486328
    10. '.`' → logprob: -14.125019073486328

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003258161712437868
    2. ',' → logprob: -6.753258228302002
    3. 'r' → logprob: -7.378258228302002
    4. '[' → logprob: -7.753258228302002
    5. '=' → logprob: -7.878258228302002
    6. 'b' → logprob: -8.128257751464844
    7. 's' → logprob: -9.503257751464844
    8. 'd' → logprob: -10.003257751464844
    9. 'm' → logprob: -10.253257751464844
    10. '_' → logprob: -10.253257751464844

Token 5: ' list' (ID: 1562)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.00342651573009789
    2. 'it' → logprob: -5.753426551818848
    3. ' iter' → logprob: -9.503426551818848
    4. ' list' → logprob: -9.503426551818848
    5. ' ' → logprob: -10.128426551818848
    6. ' it' → logprob: -10.503426551818848
    7. 'list' → logprob: -11.503426551818848
    8. 'iter' → logprob: -11.628426551818848
    9. ' []' → logprob: -12.378426551818848
    10. ' a' → logprob: -13.378426551818848

Token 6: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0627865120768547
    2. '(it' → logprob: -2.81278657913208
    3. '(iter' → logprob: -7.93778657913208
    4. ' itertools' → logprob: -8.562786102294922
    5. '(a' → logprob: -10.062786102294922
    6. '```' → logprob: -10.312786102294922
    7. '(range' → logprob: -10.437786102294922
    8. '(chain' → logprob: -10.687786102294922
    9. '((' → logprob: -10.812786102294922
    10. '(import' → logprob: -11.187786102294922

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05572644993662834
    2. '(lambda' → logprob: -2.9307265281677246
    3. '(it' → logprob: -8.055726051330566
    4. '(str' → logprob: -8.305726051330566
    5. '(int' → logprob: -8.930726051330566
    6. '(
' → logprob: -9.930726051330566
    7. ')' → logprob: -11.180726051330566
    8. 'lambda' → logprob: -11.305726051330566
    9. '(iter' → logprob: -11.555726051330566
    10. ' itertools' → logprob: -11.555726051330566

Token 8: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03422980755567551
    2. '(a' → logprob: -4.534229755401611
    3. '))' → logprob: -5.034229755401611
    4. ')' → logprob: -5.534229755401611
    5. '('' → logprob: -5.909229755401611
    6. '(input' → logprob: -6.159229755401611
    7. '(
' → logprob: -6.909229755401611
    8. 'a' → logprob: -7.159229755401611
    9. '(it' → logprob: -7.159229755401611
    10. '()))' → logprob: -7.534229755401611

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08069951087236404
    2. ' input' → logprob: -2.7056994438171387
    3. '(input' → logprob: -4.705699443817139
    4. ''' → logprob: -7.455699443817139
    5. 'it' → logprob: -8.580699920654297
    6. '"' → logprob: -8.955699920654297
    7. ' itertools' → logprob: -8.955699920654297
    8. ')' → logprob: -9.080699920654297
    9. ',input' → logprob: -9.580699920654297
    10. '('' → logprob: -9.705699920654297

Token 10: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -1.0117440223693848
    2. '(' → logprob: -1.3867440223693848
    3. '()' → logprob: -1.3867440223693848
    4. '())' → logprob: -3.0117440223693848
    5. '()));' → logprob: -3.3867440223693848
    6. '())))' → logprob: -3.8867440223693848
    7. '('' → logprob: -4.636744022369385
    8. '(()' → logprob: -4.761744022369385
    9. '()),' → logprob: -5.886744022369385
    10. '()>' → logprob: -6.011744022369385

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007177923689596355
    2. 'strip' → logprob: -7.250717639923096
    3. ' split' → logprob: -12.500718116760254
    4. 'rstrip' → logprob: -12.500718116760254
    5. '(split' → logprob: -15.375718116760254
    6. 'spl' → logprob: -15.875718116760254
    7. 'replace' → logprob: -16.875717163085938
    8. ')' → logprob: -17.125717163085938
    9. 'read' → logprob: -17.750717163085938
    10. ' strip' → logprob: -18.875717163085938

Token 12: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.7285224199295044
    2. '())' → logprob: -1.1035224199295044
    3. '))' → logprob: -2.603522300720215
    4. ')' → logprob: -2.853522300720215
    5. '())))' → logprob: -3.728522300720215
    6. ')))' → logprob: -3.853522300720215
    7. '()' → logprob: -5.478522300720215
    8. '(' → logprob: -5.478522300720215
    9. '()));' → logprob: -8.728522300720215
    10. '()),' → logprob: -9.853522300720215

Token 13: 'b' (ID: 65)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10707046091556549
    2. 'for' → logprob: -3.6070704460144043
    3. '[' → logprob: -3.9820704460144043
    4. '.' → logprob: -4.607070446014404
    5. '(' → logprob: -4.857070446014404
    6. 'if' → logprob: -5.482070446014404
    7. '.)' → logprob: -5.482070446014404
    8. 'a' → logprob: -5.607070446014404
    9. '#' → logprob: -5.857070446014404
    10. 'per' → logprob: -5.857070446014404

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13005822896957397
    2. '=' → logprob: -2.5050582885742188
    3. '.' → logprob: -3.3800582885742188
    4. '[' → logprob: -5.255058288574219
    5. ')' → logprob: -8.380058288574219
    6. ' ' → logprob: -9.005058288574219
    7. ',' → logprob: -9.130058288574219
    8. 's' → logprob: -9.255058288574219
    9. '_' → logprob: -9.505058288574219
    10. '.extend' → logprob: -9.630058288574219

Token 15: ' sum' (ID: 4215)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3891097605228424
    2. ' list' → logprob: -1.13910973072052
    3. 'sorted' → logprob: -7.3891096115112305
    4. ' itertools' → logprob: -8.01410961151123
    5. 'it' → logprob: -8.38910961151123
    6. 'a' → logprob: -8.38910961151123
    7. ' [' → logprob: -8.51410961151123
    8. ' a' → logprob: -9.13910961151123
    9. '[list' → logprob: -9.13910961151123
    10. ' sorted' → logprob: -9.26410961151123

Token 16: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.63930743932724
    2. '(' → logprob: -0.76430743932724
    3. '(it' → logprob: -5.139307498931885
    4. '(b' → logprob: -8.264307022094727
    5. '((' → logprob: -8.639307022094727
    6. '([' → logprob: -9.764307022094727
    7. 'a' → logprob: -10.264307022094727
    8. '(+' → logprob: -10.514307022094727
    9. '(len' → logprob: -10.764307022094727
    10. '(list' → logprob: -10.764307022094727

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1274416297674179
    2. '))' → logprob: -2.127441644668579
    3. '[' → logprob: -8.12744140625
    4. ')))' → logprob: -8.75244140625
    5. ')+' → logprob: -11.00244140625
    6. '+' → logprob: -11.62744140625
    7. '),' → logprob: -12.12744140625
    8. ' )' → logprob: -12.50244140625
    9. ')>' → logprob: -12.75244140625
    10. '[a' → logprob: -13.00244140625

Token 18: 'comb' (ID: 43606)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.06257601082324982
    2. ')' → logprob: -3.6875760555267334
    3. '+' → logprob: -4.687575817108154
    4. 'if' → logprob: -4.687575817108154
    5. ' if' → logprob: -5.812575817108154
    6. '.' → logprob: -5.812575817108154
    7. ' %' → logprob: -5.937575817108154
    8. '>' → logprob: -6.312575817108154
    9. '*' → logprob: -6.812575817108154
    10. '(' → logprob: -6.812575817108154

Token 19: ' =' (ID: 314)
  Prédit: 'inations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inations' → logprob: -1.3274846076965332
    2. 'ertools' → logprob: -1.4524846076965332
    3. '(it' → logprob: -1.7024846076965332
    4. '.' → logprob: -2.327484607696533
    5. ' itertools' → logprob: -2.577484607696533
    6. '```' → logprob: -3.077484607696533
    7. '(' → logprob: -3.577484607696533
    8. '.it' → logprob: -3.952484607696533
    9. 'it' → logprob: -4.077484607696533
    10. 'in' → logprob: -4.452484607696533

Token 20: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.13340595364570618
    2. 'list' → logprob: -2.508405923843384
    3. ' itertools' → logprob: -3.258405923843384
    4. ' list' → logprob: -5.383406162261963
    5. '[it' → logprob: -8.633405685424805
    6. '(it' → logprob: -9.633405685424805
    7. 'iter' → logprob: -9.633405685424805
    8. '[' → logprob: -10.508405685424805
    9. '[]' → logprob: -10.633405685424805
    10. '[list' → logprob: -10.633405685424805

Token 21: '.com' (ID: 1136)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19849693775177002
    2. '.groupby' → logprob: -2.0734968185424805
    3. '.com' → logprob: -3.6984968185424805
    4. '.chain' → logprob: -4.5734968185424805
    5. '.product' → logprob: -4.8234968185424805
    6. '.per' → logprob: -5.1984968185424805
    7. '.c' → logprob: -6.3234968185424805
    8. ' .' → logprob: -6.8234968185424805
    9. '.count' → logprob: -7.4484968185424805
    10. '.p' → logprob: -8.57349681854248

Token 22: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -7.588793960167095e-05
    2. 'b' → logprob: -9.500076293945312
    3. 'bin' → logprob: -14.750076293945312
    4. 'r' → logprob: -15.375076293945312
    5. 'positions' → logprob: -15.625076293945312
    6. '```' → logprob: -16.750076293945312
    7. 'bos' → logprob: -17.500076293945312
    8. 'inations' → logprob: -18.125076293945312
    9. 'bination' → logprob: -18.125076293945312
    10. ' combinations' → logprob: -18.375076293945312

Token 23: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.922563963802531e-05
    2. '(' → logprob: -10.125079154968262
    3. '(b' → logprob: -11.000079154968262
    4. '(range' → logprob: -11.250079154968262
    5. 'a' → logprob: -13.375079154968262
    6. ' (' → logprob: -13.625079154968262
    7. '(s' → logprob: -13.750079154968262
    8. '(len' → logprob: -13.875079154968262
    9. '(com' → logprob: -13.875079154968262
    10. '((' → logprob: -14.250079154968262

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.8126592193730175e-05
    2. ',len' → logprob: -10.6250581741333
    3. ' ,' → logprob: -11.0000581741333
    4. ',b' → logprob: -11.6250581741333
    5. ')' → logprob: -12.7500581741333
    6. '`,' → logprob: -13.3750581741333
    7. 'a' → logprob: -14.7500581741333
    8. ',a' → logprob: -14.7500581741333
    9. ',)' → logprob: -14.8750581741333
    10. ' ' → logprob: -14.8750581741333

Token 25: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04906158521771431
    2. ' ' → logprob: -3.1740615367889404
    3. '3' → logprob: -5.2990617752075195
    4. '1' → logprob: -7.9240617752075195
    5. 'len' → logprob: -8.42406177520752
    6. ' len' → logprob: -8.54906177520752
    7. ')' → logprob: -9.17406177520752
    8. ' b' → logprob: -9.54906177520752
    9. '4' → logprob: -10.54906177520752
    10. 'b' → logprob: -10.67406177520752

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023417256772518158
    2. '3' → logprob: -3.8984172344207764
    3. '1' → logprob: -6.8984174728393555
    4. 'len' → logprob: -7.1484174728393555
    5. ' ' → logprob: -7.2734174728393555
    6. 'b' → logprob: -8.898417472839355
    7. '4' → logprob: -9.523417472839355
    8. ')' → logprob: -9.898417472839355
    9. 'i' → logprob: -9.898417472839355
    10. '5' → logprob: -10.773417472839355

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01416750717908144
    2. '))' → logprob: -4.264167308807373
    3. ')
' → logprob: -12.764167785644531
    4. ')))' → logprob: -14.389167785644531
    5. '),' → logprob: -15.389167785644531
    6. ' )' → logprob: -16.01416778564453
    7. ')

' → logprob: -16.63916778564453
    8. ')`' → logprob: -16.76416778564453
    9. '))
' → logprob: -17.13916778564453
    10. ')")' → logprob: -17.51416778564453

Token 28: 'sa' (ID: 4578)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05485069006681442
    2. '
' → logprob: -3.4298505783081055
    3. ' for' → logprob: -4.8048505783081055
    4. ')' → logprob: -5.3048505783081055
    5. 'c' → logprob: -6.0548505783081055
    6. 'print' → logprob: -6.8048505783081055
    7. 'result' → logprob: -6.9298505783081055
    8. 'if' → logprob: -7.4298505783081055
    9. 's' → logprob: -7.9298505783081055
    10. 'sum' → logprob: -7.9298505783081055

Token 29: ' =' (ID: 314)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5612956285476685
    2. 'l' → logprob: -0.9362956285476685
    3. '=' → logprob: -4.061295509338379
    4. 'um' → logprob: -4.936295509338379
    5. ' =' → logprob: -5.311295509338379
    6. 'sum' → logprob: -5.936295509338379
    7. 'ls' → logprob: -6.561295509338379
    8. '=sum' → logprob: -7.061295509338379
    9. '_sum' → logprob: -7.561295509338379
    10. 'ums' → logprob: -7.936295509338379

Token 30: ' []
' (ID: 8911)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.43348413705825806
    2. ' sum' → logprob: -1.0584840774536133
    3. ' [' → logprob: -6.558484077453613
    4. '0' → logprob: -7.683484077453613
    5. '(sum' → logprob: -7.808484077453613
    6. '[' → logprob: -7.933484077453613
    7. '[]' → logprob: -8.308484077453613
    8. 'max' → logprob: -8.558484077453613
    9. ' min' → logprob: -8.558484077453613
    10. 'b' → logprob: -8.558484077453613

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015504523180425167
    2. ' for' → logprob: -6.501550674438477
    3. '
' → logprob: -10.751550674438477
    4. ' 
' → logprob: -11.126550674438477
    5. 's' → logprob: -12.626550674438477
    6. '\n' → logprob: -12.751550674438477
    7. '  
' → logprob: -13.376550674438477
    8. '```' → logprob: -13.626550674438477
    9. '[' → logprob: -14.001550674438477
    10. ')' → logprob: -14.501550674438477

Token 32: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9701423645019531
    2. ' i' → logprob: -1.7201423645019531
    3. 'x' → logprob: -1.8451423645019531
    4. ' pair' → logprob: -2.095142364501953
    5. 'i' → logprob: -2.720142364501953
    6. ' c' → logprob: -3.595142364501953
    7. 'pair' → logprob: -3.595142364501953
    8. 'c' → logprob: -4.470142364501953
    9. '_' → logprob: -4.595142364501953
    10. ' _' → logprob: -4.720142364501953

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.30925971269607544
    2. 'in' → logprob: -1.6842596530914307
    3. 'n' → logprob: -2.5592596530914307
    4. ' ' → logprob: -6.30925989151001
    5. ',' → logprob: -7.18425989151001
    6. ' n' → logprob: -7.93425989151001
    7. '	in' → logprob: -10.684259414672852
    8. '  ' → logprob: -10.809259414672852
    9. ',n' → logprob: -10.809259414672852
    10. 's' → logprob: -10.934259414672852

Token 34: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.002058427082374692
    2. ' comb' → logprob: -6.252058506011963
    3. 'range' → logprob: -9.502058029174805
    4. 'com' → logprob: -10.877058029174805
    5. 'list' → logprob: -11.127058029174805
    6. 'b' → logprob: -11.377058029174805
    7. 'a' → logprob: -13.252058029174805
    8. ' range' → logprob: -13.252058029174805
    9. 'comm' → logprob: -13.502058029174805
    10. '```' → logprob: -13.502058029174805

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.534558552724775e-05
    2. ':
' → logprob: -10.875025749206543
    3. '):' → logprob: -13.000025749206543
    4. ',' → logprob: -13.500025749206543
    5. ':**' → logprob: -13.625025749206543
    6. ' :' → logprob: -14.000025749206543
    7. ':list' → logprob: -16.375024795532227
    8. ':i' → logprob: -16.500024795532227
    9. '=' → logprob: -16.750024795532227
    10. '   ' → logprob: -16.875024795532227

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1274556815624237
    2. ' sa' → logprob: -2.127455711364746
    3. '	s' → logprob: -8.877455711364746
    4. ' s' → logprob: -9.002455711364746
    5. 'sa' → logprob: -9.627455711364746
    6. '    
' → logprob: -9.752455711364746
    7. '(sa' → logprob: -10.752455711364746
    8. ' ' → logprob: -10.877455711364746
    9. ' if' → logprob: -11.252455711364746
    10. 's' → logprob: -11.252455711364746

Token 37: ' sa' (ID: 880)
  Prédit: ' sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.016661781817674637
    2. '   ' → logprob: -4.641661643981934
    3. 'sa' (adapté à ' sa') → logprob: -5.016661643981934
    4. ' if' → logprob: -8.766661643981934
    5. ' ' → logprob: -10.766661643981934
    6. ' s' → logprob: -10.891661643981934
    7. 's' → logprob: -11.266661643981934
    8. '(sa' → logprob: -11.266661643981934
    9. '    ' → logprob: -12.016661643981934
    10. 'if' → logprob: -12.266661643981934

Token 38: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10022996366024017
    2. '.' → logprob: -2.3502299785614014
    3. '.ap' → logprob: -12.22523021697998
    4. '.app' → logprob: -12.22523021697998
    5. 'append' → logprob: -12.72523021697998
    6. ' .' → logprob: -12.85023021697998
    7. '.extend' → logprob: -12.97523021697998
    8. '.add' → logprob: -13.85023021697998
    9. '.p' → logprob: -14.10023021697998
    10. '.=' → logprob: -14.22523021697998

Token 39: '(abs' (ID: 71957)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.13825637102127075
    2. '(i' → logprob: -2.138256311416626
    3. '(' → logprob: -4.513256549835205
    4. 'sum' → logprob: -9.263256072998047
    5. '(a' → logprob: -9.263256072998047
    6. '((' → logprob: -10.638256072998047
    7. '(max' → logprob: -10.763256072998047
    8. '(s' → logprob: -11.138256072998047
    9. '(b' → logprob: -11.138256072998047
    10. '(abs' → logprob: -11.263256072998047

Token 40: '(b' (ID: 3229)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.008982308208942413
    2. '(b' → logprob: -4.883982181549072
    3. '(' → logprob: -6.758982181549072
    4. '(a' → logprob: -9.00898265838623
    5. '(sum' → logprob: -9.50898265838623
    6. '((' → logprob: -11.38398265838623
    7. '(s' → logprob: -13.00898265838623
    8. '(int' → logprob: -14.13398265838623
    9. '(
' → logprob: -14.25898265838623
    10. 'b' → logprob: -14.63398265838623

Token 41: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16024523973464966
    2. ' -' → logprob: -1.9102451801300049
    3. '-s' → logprob: -11.910244941711426
    4. ' ' → logprob: -12.410244941711426
    5. '-i' → logprob: -13.035244941711426
    6. ' ' → logprob: -13.285244941711426
    7. '2' → logprob: -13.785244941711426
    8. ')' → logprob: -14.285244941711426
    9. '-n' → logprob: -14.285244941711426
    10. '-
' → logprob: -14.410244941711426

Token 42: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1328943520784378
    2. ' ' → logprob: -2.257894277572632
    3. ' sum' → logprob: -5.007894515991211
    4. 'sum' → logprob: -5.132894515991211
    5. 'i' → logprob: -5.632894515991211
    6. ' i' → logprob: -6.007894515991211
    7. ' (' → logprob: -8.007894515991211
    8. '(' → logprob: -8.132894515991211
    9. '  ' → logprob: -8.632894515991211
    10. '(i' → logprob: -8.882894515991211

Token 43: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01591951958835125
    2. ' ' → logprob: -5.1409196853637695
    3. 'i' → logprob: -5.1409196853637695
    4. 'sum' → logprob: -5.7659196853637695
    5. ' i' → logprob: -8.26591968536377
    6. '(' → logprob: -8.51591968536377
    7. ' sum' → logprob: -8.64091968536377
    8. '(i' → logprob: -8.89091968536377
    9. '  ' → logprob: -9.76591968536377
    10. ' (' → logprob: -10.39091968536377

Token 44: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.44072195887565613
    2. '*i' → logprob: -1.0657219886779785
    3. ' *' → logprob: -4.4407219886779785
    4. 'sum' → logprob: -9.69072151184082
    5. 'i' → logprob: -10.06572151184082
    6. '*(' → logprob: -10.81572151184082
    7. ' i' → logprob: -11.44072151184082
    8. '*a' → logprob: -12.44072151184082
    9. ' ' → logprob: -12.69072151184082
    10. '*object' → logprob: -13.06572151184082

Token 45: 'sum' (ID: 12298)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16807104647159576
    2. 'sum' → logprob: -2.1680710315704346
    3. ' i' → logprob: -3.7930710315704346
    4. '(i' → logprob: -4.668071269989014
    5. ' sum' → logprob: -5.043071269989014
    6. '(sum' → logprob: -6.543071269989014
    7. ' (' → logprob: -7.918071269989014
    8. '(' → logprob: -9.918070793151855
    9. 'a' → logprob: -11.043070793151855
    10. ' ' → logprob: -11.293070793151855

Token 46: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.554343366995454e-05
    2. '(' → logprob: -9.375085830688477
    3. '(list' → logprob: -14.500085830688477
    4. '((' → logprob: -16.750085830688477
    5. ' (' → logprob: -17.250085830688477
    6. '(a' → logprob: -17.750085830688477
    7. 'i' → logprob: -18.375085830688477
    8. ')' → logprob: -18.750085830688477
    9. '(
' → logprob: -18.750085830688477
    10. '([' → logprob: -19.125085830688477

Token 47: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.5458724498748779
    2. '))' → logprob: -1.045872449874878
    3. ')' → logprob: -2.670872449874878
    4. '))))' → logprob: -9.920872688293457
    5. ')))
' → logprob: -11.170872688293457
    6. '))
' → logprob: -12.795872688293457
    7. ' ' → logprob: -12.795872688293457
    8. ' ))' → logprob: -12.795872688293457
    9. ')));' → logprob: -13.170872688293457
    10. '),' → logprob: -13.545872688293457

Token 48: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3374505043029785
    2. '[' → logprob: -2.3374505043029785
    3. '<|end|>' → logprob: -2.7124505043029785
    4. '
' → logprob: -3.7124505043029785
    5. 'print' → logprob: -3.8374505043029785
    6. '.' → logprob: -4.0874505043029785
    7. '\n' → logprob: -4.3374505043029785
    8. '\' → logprob: -4.8374505043029785
    9. ')
' → logprob: -5.8374505043029785
    10. '  
' → logprob: -5.8374505043029785

Token 49: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06206672638654709
    2. '(sa' → logprob: -2.9370667934417725
    3. '(min' → logprob: -5.812066555023193
    4. '(max' → logprob: -6.312066555023193
    5. '(sum' → logprob: -6.562066555023193
    6. '(len' → logprob: -7.687066555023193
    7. '(abs' → logprob: -8.437067031860352
    8. '()' → logprob: -8.687067031860352
    9. '(s' → logprob: -10.187067031860352
    10. '(sorted' → logprob: -10.812067031860352

Token 50: '(sa' (ID: 183535)
  Prédit: '(sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. 'sa' → logprob: -16.875001907348633
    4. '(si' → logprob: -17.125001907348633
    5. '(s' → logprob: -17.750001907348633
    6. ')' → logprob: -18.500001907348633
    7. ' (' → logprob: -19.500001907348633
    8. ' sa' → logprob: -19.500001907348633
    9. '(ss' → logprob: -19.750001907348633
    10. '(sr' → logprob: -19.750001907348633

Token 51: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03806065768003464
    2. ')' → logprob: -3.2880606651306152
    3. ')))' → logprob: -10.913060188293457
    4. '))
' → logprob: -15.413060188293457
    5. '),' → logprob: -15.788060188293457
    6. '()))' → logprob: -16.038061141967773
    7. ''))' → logprob: -16.163061141967773
    8. ' ))' → logprob: -16.163061141967773
    9. ')}' → logprob: -16.413061141967773
    10. '()' → logprob: -17.163061141967773


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 49
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 32.65%
Précision adaptée (1ère position): 32.65%
Précision (top 10): 73.47%
================================================================================
