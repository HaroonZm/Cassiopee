================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x=range(int(input()))
P=[]
s=0
for _ in x:P+=[[int(i) for i in input().split()]]
P+=[P[0]]
for j in x:s+=P[j][0]*P[j+1][1]-P[j][1]*P[j+1][0]
print(s*0.5)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 2: 'range' (ID: 20967)
  → Token d'amorce (pas de prédiction)

Token 3: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010473522706888616
    2. ' (' → logprob: -9.875104904174805
    3. '```' → logprob: -11.000104904174805
    4. '(x' → logprob: -11.250104904174805
    5. '`' → logprob: -12.000104904174805
    6. '_' → logprob: -12.750104904174805
    7. '(
' → logprob: -12.875104904174805
    8. '((' → logprob: -13.125104904174805
    9. '\(' → logprob: -13.375104904174805
    10. '(.' → logprob: -13.500104904174805

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003477478167042136
    2. ')' → logprob: -6.753477573394775
    3. '('' → logprob: -7.003477573394775
    4. '(x' → logprob: -7.003477573394775
    5. '(`' → logprob: -9.378477096557617
    6. '("' → logprob: -9.878477096557617
    7. '((' → logprob: -10.003477096557617
    8. '(user' → logprob: -10.378477096557617
    9. ' ' → logprob: -10.628477096557617
    10. '(s' → logprob: -10.628477096557617

Token 5: '()))
' (ID: 24521)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008050411939620972
    2. '(x' → logprob: -6.508050441741943
    3. ')' → logprob: -6.633050441741943
    4. '()))' → logprob: -6.758050441741943
    5. '))' → logprob: -7.008050441741943
    6. '(
' → logprob: -7.008050441741943
    7. '(()' → logprob: -7.258050441741943
    8. '(`' → logprob: -8.383049964904785
    9. '((' → logprob: -8.508049964904785
    10. '('' → logprob: -8.633049964904785

Token 6: 'P' (ID: 47)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01026170514523983
    2. '.' → logprob: -5.010261535644531
    3. 'for' → logprob: -6.885261535644531
    4. '[:]' → logprob: -6.885261535644531
    5. ':
' → logprob: -7.510261535644531
    6. '(' → logprob: -8.385261535644531
    7. ')' → logprob: -8.635261535644531
    8. ' for' → logprob: -8.760261535644531
    9. ',' → logprob: -9.510261535644531
    10. '[' → logprob: -10.010261535644531

Token 7: '=[]
' (ID: 63466)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2471589798224159e-05
    2. '.' → logprob: -12.750012397766113
    3. 'print' → logprob: -13.375012397766113
    4. '(r' → logprob: -13.500012397766113
    5. 'a' → logprob: -13.625012397766113
    6. 'P' → logprob: -13.750012397766113
    7. 'e' → logprob: -14.000012397766113
    8. 'R' → logprob: -14.125012397766113
    9. 'o' → logprob: -14.625012397766113
    10. 'u' → logprob: -14.875012397766113

Token 8: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006619225605390966
    2. ' for' → logprob: -7.375661849975586
    3. 'f' → logprob: -10.875661849975586
    4. '.for' → logprob: -12.250661849975586
    5. '.' → logprob: -12.375661849975586
    6. 'x' → logprob: -12.625661849975586
    7. ' ' → logprob: -13.625661849975586
    8. '(' → logprob: -14.250661849975586
    9. '[' → logprob: -14.750661849975586
    10. '
' → logprob: -14.875661849975586

Token 9: '=' (ID: 28)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8479049801826477
    2. '=' → logprob: -0.9729049801826477
    3. 'um' → logprob: -1.847904920578003
    4. '.' → logprob: -3.597904920578003
    5. ' =' → logprob: -5.972905158996582
    6. '+=' → logprob: -6.597905158996582
    7. '.append' → logprob: -6.597905158996582
    8. '.=' → logprob: -7.222905158996582
    9. 't' → logprob: -7.347905158996582
    10. '=u' → logprob: -7.597905158996582

Token 10: '0' (ID: 15)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.41632455587387085
    2. '0' → logprob: -1.2913246154785156
    3. '""' → logprob: -2.7913246154785156
    4. '"' → logprob: -6.416324615478516
    5. ''' → logprob: -6.416324615478516
    6. 'x' → logprob: -7.666324615478516
    7. '[]' → logprob: -8.166324615478516
    8. 'input' → logprob: -9.791324615478516
    9. ' ' → logprob: -10.166324615478516
    10. ''x' → logprob: -10.291324615478516

Token 11: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014485836029052734
    2. ' for' → logprob: -4.639485836029053
    3. '
' → logprob: -5.389485836029053
    4. ' 
' → logprob: -10.014486312866211
    5. ' ' → logprob: -10.139486312866211
    6. '' → logprob: -10.514486312866211
    7. '\n' → logprob: -11.639486312866211
    8. '	for' → logprob: -12.014486312866211
    9. '  
' → logprob: -12.014486312866211
    10. '<|end|>' → logprob: -12.264486312866211

Token 12: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014916500076651573
    2. ' for' → logprob: -6.626491546630859
    3. '
' → logprob: -8.75149154663086
    4. '\n' → logprob: -13.00149154663086
    5. '' → logprob: -13.12649154663086
    6. '	for' → logprob: -13.87649154663086
    7. 'i' → logprob: -14.37649154663086
    8. 'n' → logprob: -15.12649154663086
    9. '```' → logprob: -15.25149154663086
    10. 'For' → logprob: -15.37649154663086

Token 13: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4338665008544922
    2. ' i' → logprob: -1.0588665008544922
    3. 'i' → logprob: -6.183866500854492
    4. ' _' → logprob: -6.808866500854492
    5. '_' → logprob: -6.933866500854492
    6. ' x' → logprob: -7.433866500854492
    7. '  ' → logprob: -7.933866500854492
    8. ' ' → logprob: -10.808866500854492
    9. 'x' → logprob: -11.058866500854492
    10. ' ‌' → logprob: -11.183866500854492

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12708412110805511
    2. 'in' → logprob: -2.1270840167999268
    3. ' ' → logprob: -9.127083778381348
    4. ',' → logprob: -11.627083778381348
    5. 'import' → logprob: -12.002083778381348
    6. 's' → logprob: -12.377083778381348
    7. 'n' → logprob: -12.377083778381348
    8. ' ,' → logprob: -12.502083778381348
    9. '	in' → logprob: -12.502083778381348
    10. '  ' → logprob: -12.877083778381348

Token 15: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005000224802643061
    2. ' x' → logprob: -5.380000114440918
    3. 'range' → logprob: -8.005000114440918
    4. ' range' → logprob: -10.005000114440918
    5. ' xrange' → logprob: -14.255000114440918
    6. '(x' → logprob: -16.005001068115234
    7. ' ' → logprob: -16.255001068115234
    8. '<x' → logprob: -17.130001068115234
    9. '	x' → logprob: -17.255001068115234
    10. 's' → logprob: -18.005001068115234

Token 16: ':P' (ID: 125019)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -2.9040898880339228e-05
    2. ' :' → logprob: -10.625028610229492
    3. ':**' → logprob: -13.125028610229492
    4. ':
' → logprob: -14.125028610229492
    5. ':s' → logprob: -14.875028610229492
    6. ',:' → logprob: -15.000028610229492
    7. '+:' → logprob: -16.125028610229492
    8. ',' → logprob: -16.250028610229492
    9. '[:]' → logprob: -16.250028610229492
    10. ':int' → logprob: -16.500028610229492

Token 17: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.012027090415358543
    2. 'append' → logprob: -4.512027263641357
    3. '.' → logprob: -7.137027263641357
    4. '_append' → logprob: -9.1370267868042
    5. '.extend' → logprob: -10.8870267868042
    6. 'Append' → logprob: -10.8870267868042
    7. ' append' → logprob: -11.6370267868042
    8. '.app' → logprob: -12.1370267868042
    9. '.Append' → logprob: -12.7620267868042
    10. '​.' → logprob: -13.0120267868042

Token 18: '=[[' (ID: 112637)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.07182829827070236
    2. '=' → logprob: -2.9468283653259277
    3. '[' → logprob: -4.821828365325928
    4. '=[]' → logprob: -4.946828365325928
    5. '=list' → logprob: -7.446828365325928
    6. '=['' → logprob: -7.696828365325928
    7. '[int' → logprob: -9.44682788848877
    8. '=["' → logprob: -9.57182788848877
    9. '=int' → logprob: -9.82182788848877
    10. '=input' → logprob: -9.82182788848877

Token 19: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006487276870757341
    2. 'list' → logprob: -5.8814873695373535
    3. 'sum' → logprob: -6.5064873695373535
    4. 'input' → logprob: -7.2564873695373535
    5. '*' → logprob: -8.006486892700195
    6. '0' → logprob: -8.131486892700195
    7. '(int' → logprob: -8.506486892700195
    8. '1' → logprob: -9.131486892700195
    9. '_' → logprob: -9.381486892700195
    10. 'len' → logprob: -9.381486892700195

Token 20: '(i' (ID: 3649)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.011068690568208694
    2. '(' → logprob: -4.511068820953369
    3. 'input' → logprob: -11.136068344116211
    4. ' input' → logprob: -14.011068344116211
    5. ',input' → logprob: -14.136068344116211
    6. ' (' → logprob: -14.261068344116211
    7. '()' → logprob: -14.261068344116211
    8. '(
' → logprob: -14.636068344116211
    9. ' ' → logprob: -14.636068344116211
    10. '('' → logprob: -14.761068344116211

Token 21: ')' (ID: 8)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4821457266807556
    2. ')' → logprob: -1.4821457862854004
    3. ')]' → logprob: -2.6071457862854004
    4. '(input' → logprob: -3.4821457862854004
    5. ')])' → logprob: -3.7321457862854004
    6. 'input' → logprob: -3.8571457862854004
    7. '()]' → logprob: -6.4821457862854
    8. '),' → logprob: -7.1071457862854
    9. '()),' → logprob: -7.1071457862854
    10. '()' → logprob: -7.2321457862854

Token 22: ' for' (ID: 395)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -1.2702686786651611
    2. 'for' → logprob: -1.5202686786651611
    3. 'input' → logprob: -1.6452686786651611
    4. ')' → logprob: -2.895268678665161
    5. ']' → logprob: -2.895268678665161
    6. ')]' → logprob: -3.395268678665161
    7. ')])' → logprob: -3.395268678665161
    8. '()' → logprob: -3.520268678665161
    9. '())' → logprob: -3.770268678665161
    10. '(input' → logprob: -3.895268678665161

Token 23: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.008859194815158844
    2. 'input' → logprob: -4.758859157562256
    3. ' ' → logprob: -9.258859634399414
    4. ' in' → logprob: -10.383859634399414
    5. '_input' → logprob: -10.508859634399414
    6. ' i' → logprob: -10.633859634399414
    7. '_' → logprob: -10.883859634399414
    8. '<|end|>' → logprob: -11.008859634399414
    9. '=input' → logprob: -11.883859634399414
    10. ' range' → logprob: -12.008859634399414

Token 24: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.034170135855674744
    2. 'input' → logprob: -3.409170150756836
    3. '(input' → logprob: -8.534170150756836
    4. '=input' → logprob: -8.659170150756836
    5. ' in' → logprob: -9.284170150756836
    6. ',input' → logprob: -10.659170150756836
    7. ' ' → logprob: -11.159170150756836
    8. '(' → logprob: -11.784170150756836
    9. '	input' → logprob: -12.534170150756836
    10. ')' → logprob: -13.284170150756836

Token 25: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08895822614431381
    2. ' input' → logprob: -2.463958263397217
    3. '(input' → logprob: -11.588957786560059
    4. ' ' → logprob: -12.713957786560059
    5. '=input' → logprob: -12.963957786560059
    6. '	input' → logprob: -14.588957786560059
    7. ',input' → logprob: -14.588957786560059
    8. '<input' → logprob: -14.838957786560059
    9. '.input' → logprob: -14.963957786560059
    10. '[input' → logprob: -15.088957786560059

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008223761687986553
    2. '()' → logprob: -7.1258225440979
    3. '()]' → logprob: -11.125822067260742
    4. '(' → logprob: -13.125822067260742
    5. '('' → logprob: -14.875822067260742
    6. '()].' → logprob: -15.375822067260742
    7. ' ().' → logprob: -15.500822067260742
    8. '('').' → logprob: -15.625822067260742
    9. '())' → logprob: -15.875822067260742
    10. '()

' → logprob: -16.875822067260742

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001540569355711341
    2. 'strip' → logprob: -6.501540660858154
    3. 'rstrip' → logprob: -10.251540184020996
    4. ' split' → logprob: -13.001540184020996
    5. 'spl' → logprob: -14.626540184020996
    6. '(split' → logprob: -16.251541137695312
    7. 's' → logprob: -16.376541137695312
    8. 'sp' → logprob: -17.126541137695312
    9. 'plit' → logprob: -17.251541137695312
    10. '.split' → logprob: -18.251541137695312

Token 28: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.25433290004730225
    2. '()' → logprob: -1.5043329000473022
    3. '(' → logprob: -6.629333019256592
    4. '('' → logprob: -6.879333019256592
    5. '())' → logprob: -11.004332542419434
    6. '()],' → logprob: -11.754332542419434
    7. '()>' → logprob: -12.754332542419434
    8. '("' → logprob: -12.879332542419434
    9. ']' → logprob: -13.004332542419434
    10. '()].' → logprob: -13.129332542419434

Token 29: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.17524492740631104
    2. '()]' → logprob: -2.4252448081970215
    3. ']' → logprob: -3.1752448081970215
    4. '()' → logprob: -3.6752448081970215
    5. ']]]' → logprob: -6.8002448081970215
    6. ' ]]' → logprob: -6.9252448081970215
    7. ']])' → logprob: -7.1752448081970215
    8. '']]' → logprob: -7.1752448081970215
    9. '])]' → logprob: -7.8002448081970215
    10. ')]' → logprob: -7.8002448081970215

Token 30: 'P' (ID: 47)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3459185361862183
    2. ' 
' → logprob: -1.3459185361862183
    3. 's' → logprob: -1.7209185361862183
    4. ' ' → logprob: -2.095918655395508
    5. ' for' → logprob: -3.220918655395508
    6. 'n' → logprob: -3.720918655395508
    7. '\n' → logprob: -3.720918655395508
    8. 'for' → logprob: -3.970918655395508
    9. ' s' → logprob: -4.595918655395508
    10. '[' → logprob: -5.220918655395508

Token 31: '+' (ID: 10)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7510753870010376
    2. '[-' → logprob: -0.8760753870010376
    3. '[]' → logprob: -3.626075267791748
    4. '.' → logprob: -4.001075267791748
    5. '=' → logprob: -4.001075267791748
    6. '.append' → logprob: -4.126075267791748
    7. '=[]' → logprob: -4.251075267791748
    8. '[:]' → logprob: -5.001075267791748
    9. '[len' → logprob: -5.876075267791748
    10. '=[' → logprob: -6.626075267791748

Token 33: 'P' (ID: 47)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02441650815308094
    2. '0' → logprob: -4.149416446685791
    3. '[int' → logprob: -6.024416446685791
    4. '[]' → logprob: -6.274416446685791
    5. '[s' → logprob: -7.024416446685791
    6. 's' → logprob: -7.274416446685791
    7. ']' → logprob: -7.524416446685791
    8. 'list' → logprob: -7.524416446685791
    9. '[i' → logprob: -8.14941692352295
    10. '[-' → logprob: -8.52441692352295

Token 34: '[' (ID: 58)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2950301766395569
    2. '[-' → logprob: -2.045030117034912
    3. '[' → logprob: -2.170030117034912
    4. '[P' → logprob: -5.795030117034912
    5. '[]' → logprob: -6.170030117034912
    6. 's' → logprob: -6.670030117034912
    7. '.copy' → logprob: -6.920030117034912
    8. '[::-' → logprob: -7.295030117034912
    9. 'P' → logprob: -7.420030117034912
    10. '[len' → logprob: -7.545030117034912

Token 35: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02368704229593277
    2. '0' → logprob: -3.7736871242523193
    3. ' -' → logprob: -8.648687362670898
    4. '-s' → logprob: -9.273687362670898
    5. '-l' → logprob: -9.648687362670898
    6. '-i' → logprob: -10.148687362670898
    7. ' ' → logprob: -10.773687362670898
    8. '-x' → logprob: -11.773687362670898
    9. '[-' → logprob: -12.273687362670898
    10. '-n' → logprob: -12.898687362670898

Token 36: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12785984575748444
    2. ']]' → logprob: -2.1278598308563232
    3. '[' → logprob: -7.877860069274902
    4. '']]' → logprob: -8.752860069274902
    5. '[:' → logprob: -9.752860069274902
    6. ']
' → logprob: -10.127860069274902
    7. ']

' → logprob: -10.252860069274902
    8. ']]]' → logprob: -10.502860069274902
    9. '>]' → logprob: -10.627860069274902
    10. '][:' → logprob: -10.627860069274902

Token 37: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11756612360477448
    2. ' for' → logprob: -2.2425661087036133
    3. 's' → logprob: -5.617566108703613
    4. '
' → logprob: -7.742566108703613
    5. 'n' → logprob: -8.867566108703613
    6. 'print' → logprob: -9.367566108703613
    7. 'f' → logprob: -9.742566108703613
    8. ' 
' → logprob: -9.742566108703613
    9. 'i' → logprob: -10.117566108703613
    10. 'r' → logprob: -10.242566108703613

Token 38: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008585374802350998
    2. 'i' → logprob: -5.758585453033447
    3. ' ' → logprob: -5.758585453033447
    4. ' _' → logprob: -6.758585453033447
    5. '_' → logprob: -6.883585453033447
    6. ' range' → logprob: -10.758584976196289
    7. ' ' → logprob: -12.008584976196289
    8. ' j' → logprob: -12.133584976196289
    9. '_i' → logprob: -12.758584976196289
    10. ' x' → logprob: -13.133584976196289

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47423580288887024
    2. 'in' → logprob: -0.9742357730865479
    3. ' ' → logprob: -9.224235534667969
    4. '	in' → logprob: -11.224235534667969
    5. 'range' → logprob: -11.349235534667969
    6. ',' → logprob: -11.349235534667969
    7. '_' → logprob: -12.349235534667969
    8. ' ' → logprob: -13.224235534667969
    9. 'n' → logprob: -13.349235534667969
    10. ')' → logprob: -13.349235534667969

Token 40: ' x' (ID: 1215)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931980848312378
    2. 'range' → logprob: -0.6931980848312378
    3. 'x' → logprob: -10.318198204040527
    4. ' x' → logprob: -11.693198204040527
    5. 'P' → logprob: -12.818198204040527
    6. ' ' → logprob: -12.943198204040527
    7. ' P' → logprob: -13.318198204040527
    8. ' xrange' → logprob: -14.068198204040527
    9. '  ' → logprob: -14.693198204040527
    10. 'r' → logprob: -14.818198204040527

Token 41: ':s' (ID: 31023)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018793739145621657
    2. '[' → logprob: -6.6268792152404785
    3. '+' → logprob: -8.126879692077637
    4. ':
' → logprob: -9.751879692077637
    5. '<|end|>' → logprob: -10.376879692077637
    6. '>' → logprob: -10.501879692077637
    7. '.' → logprob: -10.501879692077637
    8. ' in' → logprob: -10.876879692077637
    9. ',' → logprob: -10.876879692077637
    10. ' :' → logprob: -11.626879692077637

Token 42: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.027791742235422134
    2. ' +=' → logprob: -3.777791738510132
    3. '=s' → logprob: -5.777791976928711
    4. '+=(' → logprob: -7.527791976928711
    5. '+' → logprob: -7.777791976928711
    6. '=' → logprob: -8.402791976928711
    7. 's' → logprob: -9.902791976928711
    8. ']+=' → logprob: -10.027791976928711
    9. '+s' → logprob: -10.027791976928711
    10. '-=' → logprob: -10.277791976928711

Token 43: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.2457905113697052
    2. 'max' → logprob: -2.120790481567383
    3. 'abs' → logprob: -2.620790481567383
    4. '(P' → logprob: -4.120790481567383
    5. '1' → logprob: -6.245790481567383
    6. '(max' → logprob: -6.620790481567383
    7. 'min' → logprob: -6.745790481567383
    8. ' P' → logprob: -6.995790481567383
    9. 'int' → logprob: -7.245790481567383
    10. ' max' → logprob: -7.370790481567383

Token 44: '[j' (ID: 7895)
  Prédit: '[_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[_' → logprob: -0.46673911809921265
    2. '[j' → logprob: -1.0917391777038574
    3. '[' → logprob: -3.5917391777038574
    4. '[-' → logprob: -4.966739177703857
    5. '[s' → logprob: -6.841739177703857
    6. '[i' → logprob: -6.966739177703857
    7. '[len' → logprob: -8.5917387008667
    8. '[x' → logprob: -9.5917387008667
    9. '[*' → logprob: -9.8417387008667
    10. '```' → logprob: -10.3417387008667

Token 45: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07786725461483002
    2. '[' → logprob: -2.952867269515991
    3. '+' → logprob: -4.202867031097412
    4. '-' → logprob: -5.077867031097412
    5. '][-' → logprob: -7.702867031097412
    6. ']' → logprob: -8.20286750793457
    7. '1' → logprob: -8.95286750793457
    8. ' ][' → logprob: -9.07786750793457
    9. '+[' → logprob: -9.39036750793457
    10. '[-' → logprob: -9.76536750793457

Token 46: '0' (ID: 15)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1727248877286911
    2. '1' → logprob: -2.047724962234497
    3. '0' → logprob: -3.672724962234497
    4. '-' → logprob: -6.047724723815918
    5. '2' → logprob: -6.547724723815918
    6. ' j' → logprob: -8.922724723815918
    7. ']' → logprob: -9.422724723815918
    8. '3' → logprob: -9.922724723815918
    9. ' ' → logprob: -10.922724723815918
    10. '-j' → logprob: -11.047724723815918

Token 47: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25387781858444214
    2. ']*' → logprob: -1.753877878189087
    3. ']-' → logprob: -3.253877878189087
    4. ']+' → logprob: -4.753877639770508
    5. ']*(' → logprob: -7.128877639770508
    6. '+' → logprob: -7.503877639770508
    7. ']>' → logprob: -7.628877639770508
    8. ']==' → logprob: -8.003877639770508
    9. '-' → logprob: -8.253877639770508
    10. '[' → logprob: -8.503877639770508

Token 48: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00024096666311379522
    2. ' P' → logprob: -9.00024127960205
    3. '-P' → logprob: -10.00024127960205
    4. '(P' → logprob: -10.12524127960205
    5. '	P' → logprob: -11.75024127960205
    6. '  ' → logprob: -12.25024127960205
    7. ' ' → logprob: -12.37524127960205
    8. '(' → logprob: -12.37524127960205
    9. '   ' → logprob: -13.00024127960205
    10. '-' → logprob: -13.12524127960205

Token 49: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.007758172694593668
    2. '[' → logprob: -4.882758140563965
    3. 'j' → logprob: -9.757758140563965
    4. '[js' → logprob: -11.632758140563965
    5. '[++' → logprob: -11.757758140563965
    6. '[
' → logprob: -11.882758140563965
    7. '[s' → logprob: -12.007758140563965
    8. ''[' → logprob: -12.007758140563965
    9. '```' → logprob: -12.007758140563965
    10. '[[' → logprob: -12.132758140563965

Token 50: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0059853242710232735
    2. '-' → logprob: -5.255985260009766
    3. '1' → logprob: -8.130985260009766
    4. '[' → logprob: -8.255985260009766
    5. ' +' → logprob: -9.255985260009766
    6. '][' → logprob: -10.380985260009766
    7. ' ' → logprob: -10.755985260009766
    8. ']+' → logprob: -11.380985260009766
    9. '+]' → logprob: -11.380985260009766
    10. '```' → logprob: -12.005985260009766

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009027653140947223
    2. ' ' → logprob: -7.5009026527404785
    3. '][' → logprob: -8.625903129577637
    4. '+' → logprob: -9.375903129577637
    5. '[' → logprob: -9.875903129577637
    6. '-' → logprob: -11.250903129577637
    7. '```' → logprob: -11.625903129577637
    8. '2' → logprob: -12.250903129577637
    9. ' [' → logprob: -13.875903129577637
    10. '   ' → logprob: -14.000903129577637

Token 52: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6367939710617065
    2. '[' → logprob: -0.7617939710617065
    3. '1' → logprob: -5.886794090270996
    4. ']' → logprob: -7.636794090270996
    5. '-' → logprob: -8.136794090270996
    6. '}[' → logprob: -8.636794090270996
    7. ' [' → logprob: -9.136794090270996
    8. '>[' → logprob: -9.511794090270996
    9. ''[' → logprob: -9.636794090270996
    10. '```' → logprob: -9.886794090270996

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. '0' → logprob: -11.500015258789062
    3. ' ' → logprob: -12.875015258789062
    4. '-' → logprob: -13.937515258789062
    5. '2' → logprob: -14.750015258789062
    6. '```' → logprob: -15.125015258789062
    7. ']' → logprob: -15.625015258789062
    8. '   ' → logprob: -15.937515258789062
    9. '[' → logprob: -16.375015258789062
    10. '  ' → logprob: -16.687515258789062

Token 54: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005290561355650425
    2. ' -' → logprob: -5.255290508270264
    3. '-P' → logprob: -10.755290985107422
    4. '-python' → logprob: -11.630290985107422
    5. '-p' → logprob: -12.005290985107422
    6. '<|end|>' → logprob: -12.380290985107422
    7. '-step' → logprob: -13.130290985107422
    8. '-)' → logprob: -13.130290985107422
    9. '-s' → logprob: -13.255290985107422
    10. '-user' → logprob: -14.005290985107422

Token 55: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -7.541112427134067e-05
    2. ' P' → logprob: -9.500075340270996
    3. '	P' → logprob: -15.250075340270996
    4. '<|end|>' → logprob: -15.375075340270996
    5. '>P' → logprob: -17.250076293945312
    6. 'p' → logprob: -17.500076293945312
    7. '(P' → logprob: -17.500076293945312
    8. '1' → logprob: -18.375076293945312
    9. '...' → logprob: -18.625076293945312
    10. 's' → logprob: -18.625076293945312

Token 56: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00023607931507285684
    2. '[' → logprob: -8.375236511230469
    3. ' [' → logprob: -13.375236511230469
    4. '[js' → logprob: -13.375236511230469
    5. 'j' → logprob: -14.375236511230469
    6. '<|end|>' → logprob: -15.375236511230469
    7. '[s' → logprob: -15.625236511230469
    8. '[i' → logprob: -15.625236511230469
    9. '```' → logprob: -15.875236511230469
    10. '[next' → logprob: -15.875236511230469

Token 57: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1824241578578949
    2. '+' → logprob: -1.8074241876602173
    3. '[' → logprob: -6.932424068450928
    4. ']' → logprob: -7.307424068450928
    5. '1' → logprob: -8.057424545288086
    6. ''][' → logprob: -8.307424545288086
    7. '"][' → logprob: -9.057424545288086
    8. '   ' → logprob: -9.682424545288086
    9. '+[' → logprob: -9.682424545288086
    10. '```' → logprob: -9.807424545288086

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25268712639808655
    2. '0' → logprob: -1.5026870965957642
    3. '+' → logprob: -7.877686977386475
    4. '-' → logprob: -8.502687454223633
    5. ']' → logprob: -9.752687454223633
    6. ' ' → logprob: -10.127687454223633
    7. '[' → logprob: -10.377687454223633
    8. 'j' → logprob: -10.752687454223633
    9. '```' → logprob: -12.252687454223633
    10. ']+' → logprob: -12.752687454223633

Token 59: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3527606129646301
    2. ']*' → logprob: -1.2277605533599854
    3. ']' → logprob: -5.8527607917785645
    4. '<|end|>' → logprob: -6.7277607917785645
    5. ')*' → logprob: -9.977760314941406
    6. '*j' → logprob: -9.977760314941406
    7. '*[' → logprob: -10.477760314941406
    8. ' *' → logprob: -10.727760314941406
    9. ']*(' → logprob: -11.102760314941406
    10. '']' → logprob: -11.477760314941406

Token 60: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0029943399131298065
    2. '<|end|>' → logprob: -5.877994537353516
    3. ' P' → logprob: -8.627994537353516
    4. '[P' → logprob: -12.877994537353516
    5. 'x' → logprob: -13.252994537353516
    6. '[' → logprob: -13.752994537353516
    7. 'j' → logprob: -14.002994537353516
    8. 's' → logprob: -14.252994537353516
    9. '<|end|>' → logprob: -14.377994537353516
    10. ' ' → logprob: -14.877994537353516

Token 61: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004152993205934763
    2. '[' → logprob: -7.875415325164795
    3. 'j' → logprob: -10.875414848327637
    4. '[
' → logprob: -12.125414848327637
    5. '+' → logprob: -13.250414848327637
    6. '[P' → logprob: -13.375414848327637
    7. '[next' → logprob: -13.500414848327637
    8. '[js' → logprob: -13.500414848327637
    9. '```' → logprob: -14.125414848327637
    10. '[++' → logprob: -14.375414848327637

Token 62: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.392202976712724e-06
    2. ' +' → logprob: -12.750006675720215
    3. '+j' → logprob: -13.375006675720215
    4. '1' → logprob: -14.250006675720215
    5. '+]' → logprob: -15.125006675720215
    6. '][' → logprob: -15.375006675720215
    7. ']+' → logprob: -15.500006675720215
    8. '＋' → logprob: -16.0000057220459
    9. '+[' → logprob: -16.0000057220459
    10. '```' → logprob: -16.6250057220459

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. '<|end|>' → logprob: -12.625005722045898
    3. ' ' → logprob: -13.125005722045898
    4. '+' → logprob: -15.250005722045898
    5. '<|end|>' → logprob: -16.1250057220459
    6. '```' → logprob: -16.5625057220459
    7. '>' → logprob: -16.6875057220459
    8. '[' → logprob: -17.3750057220459
    9. '0' → logprob: -17.7500057220459
    10. '`' → logprob: -17.8125057220459

Token 64: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0544479638338089
    2. ']' → logprob: -3.179447889328003
    3. '[' → logprob: -4.679448127746582
    4. '0' → logprob: -6.929448127746582
    5. ''][' → logprob: -8.179448127746582
    6. '+' → logprob: -8.304448127746582
    7. '"][' → logprob: -8.679448127746582
    8. '   ' → logprob: -9.054448127746582
    9. ' ][' → logprob: -9.929448127746582
    10. '}[' → logprob: -9.929448127746582

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019507692195475101
    2. 'j' → logprob: -8.625195503234863
    3. ']' → logprob: -11.375195503234863
    4. ' ' → logprob: -13.625195503234863
    5. '+' → logprob: -14.250195503234863
    6. '1' → logprob: -14.375195503234863
    7. '```' → logprob: -15.000195503234863
    8. '   ' → logprob: -15.125195503234863
    9. '2' → logprob: -15.125195503234863
    10. ')' → logprob: -15.875195503234863

Token 66: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09098151326179504
    2. ']' → logprob: -2.4659814834594727
    3. '}' → logprob: -6.715981483459473
    4. ')]' → logprob: -7.465981483459473
    5. ')}' → logprob: -9.340981483459473
    6. '']' → logprob: -9.715981483459473
    7. '+' → logprob: -9.965981483459473
    8. '<|end|>' → logprob: -11.090981483459473
    9. '])' → logprob: -11.590981483459473
    10. '))' → logprob: -12.215981483459473

Token 67: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3465460240840912
    2. 's' → logprob: -1.4715460538864136
    3. '/' → logprob: -3.971545934677124
    4. 'p' → logprob: -4.096546173095703
    5. '
' → logprob: -5.221546173095703
    6. 'a' → logprob: -5.596546173095703
    7. ' 
' → logprob: -5.971546173095703
    8. '\' → logprob: -6.221546173095703
    9. '```' → logprob: -6.221546173095703
    10. '#' → logprob: -6.471546173095703

Token 68: '(s' (ID: 1858)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.010709740221500397
    2. '(' → logprob: -5.010709762573242
    3. '(s' → logprob: -6.135709762573242
    4. 'abs' → logprob: -6.510709762573242
    5. '(round' → logprob: -8.260709762573242
    6. '(int' → logprob: -10.510709762573242
    7. '((' → logprob: -10.760709762573242
    8. ' abs' → logprob: -11.885709762573242
    9. '()' → logprob: -12.135709762573242
    10. 's' → logprob: -12.135709762573242

Token 69: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018002085387706757
    2. '//' → logprob: -4.393002033233643
    3. ')//' → logprob: -5.268002033233643
    4. '/' → logprob: -9.5180025100708
    5. '))' → logprob: -9.6430025100708
    6. ' )' → logprob: -9.7680025100708
    7. '`)' → logprob: -10.0180025100708
    8. ')#' → logprob: -11.1430025100708
    9. ' //' → logprob: -11.8930025100708
    10. '%' → logprob: -11.8930025100708

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023479098454117775
    2. '.' → logprob: -3.7734789848327637
    3. ' ' → logprob: -8.398479461669922
    4. ' .' → logprob: -11.898479461669922
    5. '
' → logprob: -15.398479461669922
    6. '-' → logprob: -15.648479461669922
    7. '۰' → logprob: -16.023479461669922
    8. '```' → logprob: -16.023479461669922
    9. '(' → logprob: -16.148479461669922
    10. '.
' → logprob: -16.273479461669922

Token 71: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.292095299111679e-05
    2. '```' → logprob: -10.125082969665527
    3. '`.' → logprob: -10.750082969665527
    4. '``' → logprob: -11.875082969665527
    5. '..' → logprob: -12.500082969665527
    6. '".' → logprob: -13.125082969665527
    7. '0' → logprob: -13.375082969665527
    8. '​.' → logprob: -13.625082969665527
    9. '>.' → logprob: -14.125082969665527
    10. '5' → logprob: -14.125082969665527

Token 72: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.250000953674316
    3. '0' → logprob: -16.625
    4. '５' → logprob: -17.125
    5. '٥' → logprob: -18.0625
    6. ''' → logprob: -18.125
    7. '`' → logprob: -18.4375
    8. '``' → logprob: -18.9375
    9. '05' → logprob: -18.9375
    10. '۵' → logprob: -18.9375

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4259644558478612e-05
    2. ' )' → logprob: -12.000014305114746
    3. '))' → logprob: -12.250014305114746
    4. ')
' → logprob: -14.375014305114746
    5. ')`' → logprob: -14.375014305114746
    6. '*)' → logprob: -14.500014305114746
    7. '`)' → logprob: -15.250014305114746
    8. '*' → logprob: -15.375014305114746
    9. '),' → logprob: -15.500014305114746
    10. ')#' → logprob: -15.625014305114746


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 71
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 31
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 43.66%
Précision adaptée (1ère position): 43.66%
Précision (top 10): 71.83%
================================================================================
