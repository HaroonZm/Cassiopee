================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
import cmath

def area(b,c):
    theta = cmath.phase(b)
    C = (c)*complex(math.cos(-theta),math.sin(-theta))
    return abs(b)*C.imag/2

n = int(input())
P = []
for i in range(n):
    x,y = map(float,input().split())
    P.append(complex(x,y))
P.append(P[0])
N = len(P)
total = 0.0
for i in range(0,N-1):
    b,c = P[i],P[i+1]
    total += area(b,c)

print(round(total,1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0027101305313408375
    2. '<|end|>' → logprob: -6.627710342407227
    3. '```' → logprob: -7.877710342407227
    4. '\n' → logprob: -8.252710342407227
    5. '\' → logprob: -8.252710342407227
    6. 'import' → logprob: -8.752710342407227
    7. '<|end|>' → logprob: -9.752710342407227
    8. '.e' → logprob: -10.502710342407227
    9. '.pi' → logprob: -10.627710342407227
    10. '
' → logprob: -10.877710342407227

Token 4: ' cm' (ID: 9256)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.35312536358833313
    2. ' os' → logprob: -1.2281253337860107
    3. ' numpy' → logprob: -6.47812557220459
    4. ' random' → logprob: -6.85312557220459
    5. 'sys' → logprob: -6.85312557220459
    6. 'os' → logprob: -7.47812557220459
    7. ' cm' → logprob: -8.85312557220459
    8. ' ' → logprob: -9.35312557220459
    9. ' statistics' → logprob: -9.47812557220459
    10. ' re' → logprob: -9.47812557220459

Token 5: 'ath' (ID: 725)
  Prédit: 'ath'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ath' → logprob: -1.735893965815194e-05
    2. 'at' → logprob: -11.125017166137695
    3. 'aths' → logprob: -13.500017166137695
    4. 'ap' → logprob: -14.250017166137695
    5. 'a' → logprob: -15.750017166137695
    6. 'as' → logprob: -16.125017166137695
    7. 'th' → logprob: -16.500017166137695
    8. 'atch' → logprob: -17.125017166137695
    9. 'pl' → logprob: -18.125017166137695
    10. 'path' → logprob: -18.375017166137695

Token 6: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2715906500816345
    2. '
' → logprob: -2.3965907096862793
    3. '\' → logprob: -3.0215907096862793
    4. 'import' → logprob: -3.3965907096862793
    5. '.' → logprob: -4.021590709686279
    6. '```' → logprob: -4.271590709686279
    7. '<|end|>' → logprob: -4.396590709686279
    8. '#' → logprob: -5.021590709686279
    9. '

' → logprob: -5.771590709686279
    10. ',' → logprob: -6.146590709686279

Token 7: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1675323247909546
    2. '\' → logprob: -1.9175323247909546
    3. '```' → logprob: -2.292532444000244
    4. 'd' → logprob: -2.292532444000244
    5. 'def' → logprob: -2.667532444000244
    6. '`' → logprob: -2.792532444000244
    7. 'a' → logprob: -3.042532444000244
    8. '.' → logprob: -3.667532444000244
    9. '(' → logprob: -4.042532444000244
    10. 'x' → logprob: -4.167532444000244

Token 8: ' area' (ID: 3624)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0018398716347292066
    2. ' space' → logprob: -7.251839637756348
    3. ' sqrt' → logprob: -7.501839637756348
    4. '_' → logprob: -9.001839637756348
    5. ' f' → logprob: -9.376839637756348
    6. ' complex' → logprob: -9.501839637756348
    7. ' calculate' → logprob: -9.751839637756348
    8. ' ' → logprob: -10.126839637756348
    9. ' pow' → logprob: -10.376839637756348
    10. ' factorial' → logprob: -10.626839637756348

Token 9: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22890323400497437
    2. '_' → logprob: -1.7289032936096191
    3. '_area' → logprob: -3.853903293609619
    4. ')' → logprob: -6.478903293609619
    5. '(area' → logprob: -6.853903293609619
    6. '_of' → logprob: -7.603903293609619
    7. '_radius' → logprob: -8.228902816772461
    8. '<|end|>' → logprob: -8.228902816772461
    9. '_parent' → logprob: -8.603902816772461
    10. '<|end|>' → logprob: -8.853902816772461

Token 10: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6027694940567017
    2. ')' → logprob: -1.3527694940567017
    3. 'ase' → logprob: -1.7277694940567017
    4. 'a' → logprob: -4.477769374847412
    5. '):' → logprob: -6.102769374847412
    6. ',a' → logprob: -6.852769374847412
    7. ',)' → logprob: -7.227769374847412
    8. 'e' → logprob: -8.10276985168457
    9. ' ase' → logprob: -8.60276985168457
    10. ' ,' → logprob: -8.97776985168457

Token 11: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5461126565933228
    2. '):' → logprob: -1.0461126565933228
    3. ',' → logprob: -2.671112537384033
    4. ',)' → logprob: -10.046113014221191
    5. '_' → logprob: -10.171113014221191
    6. ',b' → logprob: -10.921113014221191
    7. '=' → logprob: -10.921113014221191
    8. '):
' → logprob: -10.921113014221191
    9. ' )' → logprob: -11.046113014221191
    10. ':' → logprob: -11.046113014221191

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18026837706565857
    2. '):' → logprob: -2.0552682876586914
    3. ',' → logprob: -4.680268287658691
    4. '**' → logprob: -5.180268287658691
    5. ' :' → logprob: -5.305268287658691
    6. '*:' → logprob: -5.430268287658691
    7. ':**' → logprob: -5.930268287658691
    8. '():' → logprob: -6.055268287658691
    9. '*' → logprob: -6.055268287658691
    10. '   ' → logprob: -6.430268287658691

Token 13: ' theta' (ID: 43101)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7650494575500488
    2. '   ' → logprob: -1.5150494575500488
    3. ' ' → logprob: -1.6400494575500488
    4. ' return' → logprob: -2.390049457550049
    5. 'return' → logprob: -4.390049457550049
    6. ':' → logprob: -5.265049457550049
    7. ' 
' → logprob: -5.390049457550049
    8. '       ' → logprob: -7.015049457550049
    9. '  ' → logprob: -7.015049457550049
    10. 'r' → logprob: -7.140049457550049

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27192965149879456
    2. '=' → logprob: -2.1469297409057617
    3. ',' → logprob: -3.2719297409057617
    4. ')' → logprob: -3.2719297409057617
    5. ' ' → logprob: -3.5219297409057617
    6. ' )' → logprob: -5.521929740905762
    7. ' ,' → logprob: -5.521929740905762
    8. '<|end|>' → logprob: -5.771929740905762
    9. '_' → logprob: -6.896929740905762
    10. '  ' → logprob: -6.896929740905762

Token 15: ' cm' (ID: 9256)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.3262104392051697
    2. ' math' → logprob: -1.3262104988098145
    3. 'cmath' → logprob: -4.4512104988098145
    4. 'c' → logprob: -7.5762104988098145
    5. 'b' → logprob: -8.576210021972656
    6. '(math' → logprob: -8.701210021972656
    7. 'cm' → logprob: -8.951210021972656
    8. ' c' → logprob: -9.826210021972656
    9. ' b' → logprob: -9.826210021972656
    10. ' cm' → logprob: -10.326210021972656

Token 16: 'ath' (ID: 725)
  Prédit: 'ath'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ath' → logprob: -6.511406809295295e-06
    2. 'aths' → logprob: -12.250006675720215
    3. 'a' → logprob: -13.625006675720215
    4. 'math' → logprob: -14.625006675720215
    5. ' ath' → logprob: -17.5000057220459
    6. 'cmath' → logprob: -18.0000057220459
    7. 'path' → logprob: -18.3750057220459
    8. 'th' → logprob: -18.6250057220459
    9. 'athi' → logprob: -18.7500057220459
    10. 'atham' → logprob: -18.8750057220459

Token 17: '.phase' (ID: 146627)
  Prédit: '.ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ac' → logprob: -0.046275123953819275
    2. '.' → logprob: -3.6712751388549805
    3. '.phase' → logprob: -4.7962751388549805
    4. '.cos' → logprob: -5.0462751388549805
    5. '.pi' → logprob: -6.4212751388549805
    6. '.atan' → logprob: -6.5462751388549805
    7. '.as' → logprob: -7.6712751388549805
    8. '.ar' → logprob: -7.6712751388549805
    9. '.sqrt' → logprob: -8.29627513885498
    10. '.angle' → logprob: -8.54627513885498

Token 18: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08075855672359467
    2. '(b' → logprob: -2.705758571624756
    3. '(c' → logprob: -4.580758571624756
    4. '(com' → logprob: -8.205758094787598
    5. '((' → logprob: -8.705758094787598
    6. '(a' → logprob: -10.955758094787598
    7. ' (' → logprob: -11.080758094787598
    8. '(s' → logprob: -12.455758094787598
    9. '('' → logprob: -12.705758094787598
    10. '("("' → logprob: -12.830758094787598

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05111975595355034
    2. '-' → logprob: -3.426119804382324
    3. ' -' → logprob: -4.551119804382324
    4. ',' → logprob: -5.301119804382324
    5. '-c' → logprob: -7.301119804382324
    6. ' )' → logprob: -7.676119804382324
    7. '-)' → logprob: -8.926119804382324
    8. '+' → logprob: -9.301119804382324
    9. '*' → logprob: -9.426119804382324
    10. '),' → logprob: -9.801119804382324

Token 20: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10327775776386261
    2. '*' → logprob: -2.6032776832580566
    3. '+' → logprob: -4.728277683258057
    4. '<|end|>' → logprob: -5.228277683258057
    5. '.' → logprob: -6.228277683258057
    6. '(' → logprob: -6.353277683258057
    7. '**' → logprob: -6.478277683258057
    8. ',' → logprob: -6.478277683258057
    9. '   ' → logprob: -7.353277683258057
    10. ' ' → logprob: -7.603277683258057

Token 21: ' C' (ID: 363)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08763948827981949
    2. '*' → logprob: -2.962639570236206
    3. '**' → logprob: -4.712639331817627
    4. '<|end|>' → logprob: -5.462639331817627
    5. '(' → logprob: -5.837639331817627
    6. '+' → logprob: -5.837639331817627
    7. ' *' → logprob: -5.962639331817627
    8. '.' → logprob: -6.087639331817627
    9. '[' → logprob: -6.087639331817627
    10. ',' → logprob: -6.212639331817627

Token 22: ' =' (ID: 314)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6747384667396545
    2. '*' → logprob: -1.6747384071350098
    3. 'math' → logprob: -1.9247384071350098
    4. '/math' → logprob: -2.5497384071350098
    5. '(math' → logprob: -3.7997384071350098
    6. '**' → logprob: -4.29973840713501
    7. ' =' → logprob: -4.92473840713501
    8. 'os' → logprob: -4.92473840713501
    9. '=' → logprob: -4.92473840713501
    10. ')' → logprob: -5.42473840713501

Token 23: ' (' (ID: 350)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.36307987570762634
    2. ' abs' → logprob: -1.9880799055099487
    3. ' math' → logprob: -2.863079786300659
    4. 'abs' → logprob: -2.988079786300659
    5. 'c' → logprob: -3.238079786300659
    6. 'math' → logprob: -4.238080024719238
    7. 'cmath' → logprob: -5.613080024719238
    8. ' b' → logprob: -6.988080024719238
    9. ' (' → logprob: -7.363080024719238
    10. '(abs' → logprob: -8.113080024719238

Token 24: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.686099112033844
    2. 'b' → logprob: -1.6860990524291992
    3. 'abs' → logprob: -1.9360990524291992
    4. ' c' → logprob: -3.061099052429199
    5. 'cmath' → logprob: -3.186099052429199
    6. ' abs' → logprob: -3.436099052429199
    7. ' b' → logprob: -3.811099052429199
    8. 'math' → logprob: -4.311099052429199
    9. ')' → logprob: -6.311099052429199
    10. '2' → logprob: -6.436099052429199

Token 25: ')*' (ID: 11043)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6361570358276367
    2. '*' → logprob: -1.8861570358276367
    3. ' /' → logprob: -2.3861570358276367
    4. ' *' → logprob: -2.7611570358276367
    5. ')' → logprob: -3.0111570358276367
    6. '/' → logprob: -3.2611570358276367
    7. ' -' → logprob: -3.6361570358276367
    8. ' **' → logprob: -3.8861570358276367
    9. ')**' → logprob: -4.636157035827637
    10. '-' → logprob: -4.761157035827637

Token 26: 'complex' (ID: 42544)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.6916477680206299
    2. 'cmath' → logprob: -0.8166477680206299
    3. ' math' → logprob: -3.56664776802063
    4. '2' → logprob: -4.691647529602051
    5. 'b' → logprob: -4.816647529602051
    6. 'c' → logprob: -5.566647529602051
    7. '(' → logprob: -5.941647529602051
    8. '(math' → logprob: -6.191647529602051
    9. 'abs' → logprob: -6.691647529602051
    10. ' c' → logprob: -7.941647529602051

Token 27: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.4661236107349396
    2. '(' → logprob: -1.0911235809326172
    3. '(b' → logprob: -3.716123580932617
    4. '(c' → logprob: -5.341123580932617
    5. '('' → logprob: -5.841123580932617
    6. 'cmath' → logprob: -6.341123580932617
    7. '(abs' → logprob: -7.091123580932617
    8. '((' → logprob: -7.591123580932617
    9. '(Math' → logprob: -8.091123580932617
    10. '<|end|>' → logprob: -8.091123580932617

Token 28: '.cos' (ID: 44221)
  Prédit: '.cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cos' → logprob: -0.0014566626632586122
    2. '.' → logprob: -6.7514567375183105
    3. '.sin' → logprob: -8.251456260681152
    4. '.sqrt' → logprob: -11.876456260681152
    5. '.pi' → logprob: -12.251456260681152
    6. '.Cos' → logprob: -12.251456260681152
    7. '.ac' → logprob: -12.376456260681152
    8. 'cos' → logprob: -12.626456260681152
    9. '.c' → logprob: -14.876456260681152
    10. '_cos' → logprob: -15.501456260681152

Token 29: '(-' (ID: 8087)
  Prédit: '(theta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(theta' → logprob: -0.0015187880489975214
    2. '(' → logprob: -7.126518726348877
    3. 'theta' → logprob: -7.501518726348877
    4. ' theta' → logprob: -9.501519203186035
    5. '(math' → logprob: -10.751519203186035
    6. ' (' → logprob: -10.751519203186035
    7. ')' → logprob: -10.876519203186035
    8. 'θ' → logprob: -12.251519203186035
    9. 'heta' → logprob: -13.001519203186035
    10. '(-' → logprob: -13.126519203186035

Token 30: 'theta' (ID: 57853)
  Prédit: 'theta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'theta' → logprob: -0.0458034947514534
    2. ' theta' → logprob: -3.5458035469055176
    3. '(theta' → logprob: -4.170803546905518
    4. '1' → logprob: -9.29580307006836
    5. 'math' → logprob: -9.29580307006836
    6. 'θ' → logprob: -9.79580307006836
    7. '2' → logprob: -10.42080307006836
    8. '.theta' → logprob: -10.42080307006836
    9. ')' → logprob: -10.54580307006836
    10. ' ' → logprob: -10.92080307006836

Token 31: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.01876656524837017
    2. ')' → logprob: -4.018766403198242
    3. ' ),' → logprob: -7.643766403198242
    4. ',' → logprob: -9.768766403198242
    5. '),
' → logprob: -10.893766403198242
    6. '+' → logprob: -11.268766403198242
    7. '),

' → logprob: -11.768766403198242
    8. '),(' → logprob: -11.768766403198242
    9. ' )' → logprob: -11.893766403198242
    10. '   ' → logprob: -11.893766403198242

Token 32: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.08897250890731812
    2. ' math' → logprob: -2.463972568511963
    3. '(math' → logprob: -11.463972091674805
    4. 'sin' → logprob: -11.588972091674805
    5. '-m' → logprob: -12.963972091674805
    6. '-' → logprob: -13.088972091674805
    7. '   ' → logprob: -13.338972091674805
    8. ' ' → logprob: -13.463972091674805
    9. '    ' → logprob: -13.588972091674805
    10. '1' → logprob: -13.713972091674805

Token 33: '.sin' (ID: 35734)
  Prédit: '.sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sin' → logprob: -0.0007964044925756752
    2. '.' → logprob: -7.250796318054199
    3. 'sin' → logprob: -10.0007963180542
    4. '.s' → logprob: -10.3757963180542
    5. '.cos' → logprob: -12.5007963180542
    6. '.Sin' → logprob: -13.2507963180542
    7. '*sin' → logprob: -13.3757963180542
    8. '.sqrt' → logprob: -13.5007963180542
    9. ' sin' → logprob: -14.7507963180542
    10. '<|end|>' → logprob: -15.1257963180542

Token 34: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.009205929934978485
    2. '(' → logprob: -4.8842058181762695
    3. ')' → logprob: -7.0092058181762695
    4. ' (' → logprob: -8.38420581817627
    5. ' (-' → logprob: -8.50920581817627
    6. '(theta' → logprob: -9.13420581817627
    7. '-' → logprob: -9.25920581817627
    8. ' -' → logprob: -11.13420581817627
    9. '<|end|>' → logprob: -11.63420581817627
    10. ')-' → logprob: -12.13420581817627

Token 35: 'theta' (ID: 57853)
  Prédit: 'theta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'theta' → logprob: -0.0005785312969237566
    2. ' theta' → logprob: -7.7505784034729
    3. '(theta' → logprob: -9.250578880310059
    4. '_theta' → logprob: -10.750578880310059
    5. ')' → logprob: -10.875578880310059
    6. '.theta' → logprob: -12.250578880310059
    7. 'θ' → logprob: -13.250578880310059
    8. 'heta' → logprob: -13.500578880310059
    9. '-' → logprob: -14.000578880310059
    10. '<|end|>' → logprob: -14.250578880310059

Token 36: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.22583900392055511
    2. ')' → logprob: -1.6008390188217163
    3. ')))' → logprob: -7.850839138031006
    4. '))
' → logprob: -11.475838661193848
    5. ' ))' → logprob: -11.850838661193848
    6. '),' → logprob: -11.975838661193848
    7. ')**' → logprob: -12.850838661193848
    8. ' )' → logprob: -13.100838661193848
    9. ' ' → logprob: -13.225838661193848
    10. ')
' → logprob: -13.975838661193848

Token 37: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18850745260715485
    2. '   ' → logprob: -2.438507556915283
    3. '\n' → logprob: -3.938507556915283
    4. '
' → logprob: -4.063507556915283
    5. ' ' → logprob: -4.188507556915283
    6. '    
' → logprob: -4.938507556915283
    7. '\' → logprob: -5.063507556915283
    8. '<|end|>' → logprob: -5.063507556915283
    9. ' 
' → logprob: -5.938507556915283
    10. ')
' → logprob: -6.438507556915283

Token 38: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.097083568572998
    2. '   ' → logprob: -1.097083568572998
    3. ')' → logprob: -2.347083568572998
    4. ' 
' → logprob: -2.472083568572998
    5. '
' → logprob: -3.347083568572998
    6. '    
' → logprob: -3.722083568572998
    7. ' return' → logprob: -3.972083568572998
    8. 'r' → logprob: -4.472083568572998
    9. 'return' (adapté à ' return') → logprob: -4.472083568572998
    10. '  
' → logprob: -4.597083568572998

Token 39: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.5780853629112244
    2. 'abs' → logprob: -1.2030854225158691
    3. ' C' → logprob: -2.203085422515869
    4. 'C' → logprob: -3.703085422515869
    5. '(abs' → logprob: -6.453085422515869
    6. ' math' → logprob: -7.328085422515869
    7. 'math' → logprob: -7.578085422515869
    8. ' (' → logprob: -7.578085422515869
    9. '(C' → logprob: -9.703084945678711
    10. ' complex' → logprob: -9.828084945678711

Token 40: '(b' (ID: 3229)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.010190204717218876
    2. '(' → logprob: -4.635190010070801
    3. '(b' → logprob: -8.3851900100708
    4. '(c' → logprob: -9.0101900100708
    5. '((' → logprob: -10.3851900100708
    6. 'C' → logprob: -11.1351900100708
    7. '(B' → logprob: -11.2601900100708
    8. ' (' → logprob: -11.8851900100708
    9. '(a' → logprob: -12.2601900100708
    10. ')' → logprob: -13.0101900100708

Token 41: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20816390216350555
    2. '*' → logprob: -2.2081639766693115
    3. '+' → logprob: -3.4581639766693115
    4. ')*' → logprob: -3.9581639766693115
    5. '-' → logprob: -4.458163738250732
    6. '-C' → logprob: -5.333163738250732
    7. ' -' → logprob: -5.708163738250732
    8. '*C' → logprob: -5.958163738250732
    9. '+C' → logprob: -6.333163738250732
    10. ' *' → logprob: -6.708163738250732

Token 42: 'C' (ID: 34)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0901254415512085
    2. 'C' → logprob: -2.465125560760498
    3. ' abs' → logprob: -7.715125560760498
    4. 'cmath' → logprob: -8.34012508392334
    5. 'c' → logprob: -8.59012508392334
    6. '(abs' → logprob: -8.84012508392334
    7. 'math' → logprob: -8.84012508392334
    8. '   ' → logprob: -12.09012508392334
    9. '<|end|>' → logprob: -12.34012508392334
    10. ' C' → logprob: -12.71512508392334

Token 43: '.imag' (ID: 171484)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '/' (ID: 14)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05530547350645065
    2. 'abs' → logprob: -3.0553054809570312
    3. 'b' → logprob: -5.430305480957031
    4. 'c' → logprob: -6.430305480957031
    5. 'math' → logprob: -8.305305480957031
    6. '1' → logprob: -8.430305480957031
    7. ' abs' → logprob: -9.555305480957031
    8. 'cmath' → logprob: -10.180305480957031
    9. ' ' → logprob: -10.305305480957031
    10. '(abs' → logprob: -10.430305480957031

Token 46: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31310316920280457
    2. '<|end|>' → logprob: -1.813103199005127
    3. '\n' → logprob: -2.438103199005127
    4. ')' → logprob: -4.563103199005127
    5. '(' → logprob: -6.813103199005127
    6. '```' → logprob: -6.938103199005127
    7. '\' → logprob: -7.063103199005127
    8. ' ' → logprob: -7.063103199005127
    9. '<|end|>' → logprob: -7.313103199005127
    10. '

' → logprob: -7.563103199005127

Token 47: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3522725999355316
    2. '<|end|>' → logprob: -1.727272629737854
    3. '(' → logprob: -3.3522725105285645
    4. ':' → logprob: -4.2272725105285645
    5. 'b' → logprob: -4.2272725105285645
    6. '
' → logprob: -4.2272725105285645
    7. ' ' → logprob: -4.4772725105285645
    8. '#' → logprob: -4.9772725105285645
    9. '\n' → logprob: -4.9772725105285645
    10. '```' → logprob: -5.3522725105285645

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4699912369251251
    2. '=' → logprob: -1.5949912071228027
    3. ' ' → logprob: -1.8449912071228027
    4. 'u' → logprob: -4.594991207122803
    5. 'um' → logprob: -7.719991207122803
    6. 'e' → logprob: -7.719991207122803
    7. '_' → logprob: -7.719991207122803
    8. 'a' → logprob: -7.969991207122803
    9. 'umber' → logprob: -7.969991207122803
    10. '  ' → logprob: -8.094991683959961

Token 49: ' int' (ID: 677)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7495152950286865
    2. 'int' → logprob: -0.7495152950286865
    3. '5' → logprob: -3.6245152950286865
    4. '4' → logprob: -3.8745152950286865
    5. '6' → logprob: -5.999515533447266
    6. ' int' → logprob: -6.124515533447266
    7. '10' → logprob: -6.874515533447266
    8. ' ' → logprob: -7.374515533447266
    9. '1' → logprob: -8.124515533447266
    10. '0' → logprob: -8.124515533447266

Token 50: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005280109471641481
    2. '(input' → logprob: -7.875527858734131
    3. '(n' → logprob: -9.625528335571289
    4. '('' → logprob: -10.625528335571289
    5. ' (' → logprob: -10.875528335571289
    6. '()' → logprob: -11.000528335571289
    7. '<|end|>' → logprob: -12.125528335571289
    8. 'input' → logprob: -12.500528335571289
    9. '```' → logprob: -13.375528335571289
    10. '(
' → logprob: -13.375528335571289

Token 51: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4441356062889099
    2. '())' → logprob: -1.6941356658935547
    3. '()' → logprob: -2.0691356658935547
    4. ')' → logprob: -3.6941356658935547
    5. '('' → logprob: -3.8191356658935547
    6. '(()' → logprob: -7.819135665893555
    7. '("("' → logprob: -7.944135665893555
    8. '("' → logprob: -8.694135665893555
    9. '(`' → logprob: -8.819135665893555
    10. '(""))' → logprob: -8.819135665893555

Token 52: 'P' (ID: 47)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' =' (ID: 314)
  Prédit: 'oints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.5979986190795898
    2. ' =' → logprob: -1.0979986190795898
    3. 'ol' → logprob: -2.59799861907959
    4. 'oly' → logprob: -4.59799861907959
    5. '=[]' → logprob: -4.72299861907959
    6. 'olygon' → logprob: -4.97299861907959
    7. 's' → logprob: -5.09799861907959
    8. '=' → logprob: -5.59799861907959
    9. 'ts' → logprob: -6.09799861907959
    10. '_points' → logprob: -7.22299861907959

Token 54: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.039798762649297714
    2. '[' → logprob: -3.2897987365722656
    3. '[int' → logprob: -6.664798736572266
    4. '[list' → logprob: -8.289798736572266
    5. ' []' → logprob: -9.164798736572266
    6. '[input' → logprob: -10.289798736572266
    7. '[n' → logprob: -10.664798736572266
    8. '[]}' → logprob: -11.039798736572266
    9. '[]>' → logprob: -12.039798736572266
    10. 'list' → logprob: -12.164798736572266

Token 55: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024144237861037254
    2. ' for' → logprob: -3.774144172668457
    3. '<|end|>' → logprob: -7.024144172668457
    4. '<|end|>' → logprob: -12.899144172668457
    5. '	for' → logprob: -13.274144172668457
    6. '[' → logprob: -13.899144172668457
    7. ' ' → logprob: -14.274144172668457
    8. ')' → logprob: -14.899144172668457
    9. '[]' → logprob: -14.899144172668457
    10. 'n' → logprob: -15.149144172668457

Token 56: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.04104209691286087
    2. '_' → logprob: -3.7910420894622803
    3. ' i' → logprob: -4.041042327880859
    4. ' ' → logprob: -10.29104232788086
    5. '_i' → logprob: -11.04104232788086
    6. 'i' → logprob: -11.66604232788086
    7. ' ' → logprob: -14.29104232788086
    8. ' ‌' → logprob: -14.54104232788086
    9. ' ▁' → logprob: -16.54104232788086
    10. ' ​' → logprob: -17.16604232788086

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018905190750956535
    2. 'in' → logprob: -4.018905162811279
    3. ' ' → logprob: -7.268905162811279
    4. '_' → logprob: -10.518905639648438
    5. 'n' → logprob: -11.268905639648438
    6. '  ' → logprob: -12.143905639648438
    7. ' _' → logprob: -12.268905639648438
    8. 'range' → logprob: -13.143905639648438
    9. '	in' → logprob: -13.518905639648438
    10. '```' → logprob: -14.143905639648438

Token 58: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759514570236206
    2. 'range' → logprob: -0.8259514570236206
    3. '	range' → logprob: -12.45095157623291
    4. ' ' → logprob: -12.70095157623291
    5. 'r' → logprob: -14.20095157623291
    6. 'n' → logprob: -14.32595157623291
    7. '(range' → logprob: -14.32595157623291
    8. '0' → logprob: -14.70095157623291
    9. 'ran' → logprob: -14.82595157623291
    10. '```' → logprob: -14.95095157623291

Token 59: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014165391214191914
    2. '(' → logprob: -4.26416540145874
    3. ' (' → logprob: -13.389164924621582
    4. ' n' → logprob: -15.639164924621582
    5. '(
' → logprob: -16.1391658782959
    6. 'n' → logprob: -16.8891658782959
    7. '(len' → logprob: -18.5141658782959
    8. '(

' → logprob: -18.5141658782959
    9. ' ' → logprob: -18.8891658782959
    10. '()' → logprob: -19.0141658782959

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00226040231063962
    2. '+' → logprob: -6.752260208129883
    3. ')' → logprob: -7.752260208129883
    4. '):
' → logprob: -8.127260208129883
    5. ' ):' → logprob: -8.127260208129883
    6. ':' → logprob: -9.877260208129883
    7. '-' → logprob: -12.627260208129883
    8. '():' → logprob: -13.002260208129883
    9. ' ' → logprob: -13.127260208129883
    10. '):
' → logprob: -13.502260208129883

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40552687644958496
    2. ' P' → logprob: -1.405526876449585
    3. ' ' → logprob: -2.905526876449585
    4. '    ' → logprob: -4.405527114868164
    5. ' 
' → logprob: -5.280527114868164
    6. ' b' → logprob: -5.405527114868164
    7. ' s' → logprob: -5.780527114868164
    8. '    
' → logprob: -6.030527114868164
    9. ' x' → logprob: -6.030527114868164
    10. '<|end|>' → logprob: -7.280527114868164

Token 62: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.3878887891769409
    2. ' x' → logprob: -1.137888789176941
    3. ' P' → logprob: -7.8878889083862305
    4. 'P' → logprob: -8.51288890838623
    5. 'xy' → logprob: -9.13788890838623
    6. '   ' → logprob: -10.01288890838623
    7. ' parts' → logprob: -10.26288890838623
    8. 'b' → logprob: -10.26288890838623
    9. ' points' → logprob: -10.63788890838623
    10. 'a' → logprob: -11.13788890838623

Token 63: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03625812008976936
    2. ',y' → logprob: -3.4112582206726074
    3. ' ,' → logprob: -6.161258220672607
    4. ',x' → logprob: -8.53625774383545
    5. ' =' → logprob: -10.03625774383545
    6. ',i' → logprob: -10.16125774383545
    7. ',input' → logprob: -10.16125774383545
    8. '=' → logprob: -10.53625774383545
    9. ',v' → logprob: -10.53625774383545
    10. ',float' → logprob: -10.78625774383545

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3485235273838043
    2. '=' → logprob: -1.223523497581482
    3. '=input' → logprob: -9.973523139953613
    4. '=int' → logprob: -10.973523139953613
    5. ',' → logprob: -11.598523139953613
    6. ' ' → logprob: -12.973523139953613
    7. '=float' → logprob: -13.723523139953613
    8. ')' → logprob: -14.598523139953613
    9. '＝' → logprob: -15.598523139953613
    10. '=line' → logprob: -15.848523139953613

Token 65: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07891413569450378
    2. 'map' → logprob: -2.578914165496826
    3. ' input' → logprob: -11.703913688659668
    4. ' list' → logprob: -12.078913688659668
    5. '	map' → logprob: -12.578913688659668
    6. ' ' → logprob: -12.953913688659668
    7. 'input' → logprob: -13.203913688659668
    8. 'list' → logprob: -13.453913688659668
    9. '[' → logprob: -14.828913688659668
    10. ' [' → logprob: -14.828913688659668

Token 66: '(float' (ID: 17830)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002866092836484313
    2. '(' → logprob: -6.377866268157959
    3. '(float' → logprob: -6.877866268157959
    4. '(input' → logprob: -9.3778657913208
    5. '<|end|>' → logprob: -10.5028657913208
    6. '<int' → logprob: -11.7528657913208
    7. 'int' → logprob: -12.2528657913208
    8. '[int' → logprob: -13.5028657913208
    9. '(eval' → logprob: -13.5028657913208
    10. '(
' → logprob: -13.8778657913208

Token 67: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.024521905928850174
    2. ',' → logprob: -3.774521827697754
    3. '(input' → logprob: -7.024521827697754
    4. 'input' → logprob: -7.899521827697754
    5. ',user' → logprob: -12.524521827697754
    6. ')' → logprob: -12.649521827697754
    7. ' input' → logprob: -12.899521827697754
    8. '(' → logprob: -13.774521827697754
    9. ',x' → logprob: -14.524521827697754
    10. ' ,' → logprob: -14.524521827697754

Token 68: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.153795766294934e-06
    2. '()' → logprob: -12.750005722045898
    3. ')' → logprob: -13.000005722045898
    4. '.' → logprob: -14.875005722045898
    5. '(' → logprob: -15.500005722045898
    6. ' ().' → logprob: -16.0000057220459
    7. ').' → logprob: -16.3750057220459
    8. '.split' → logprob: -16.6250057220459
    9. '('').' → logprob: -17.2500057220459
    10. 'split' → logprob: -17.3750057220459

Token 69: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5213274309644476e-05
    2. 'strip' → logprob: -11.250015258789062
    3. ' split' → logprob: -13.500015258789062
    4. '(split' → logprob: -14.875015258789062
    5. 'rstrip' → logprob: -15.500015258789062
    6. 'spl' → logprob: -16.375015258789062
    7. 's' → logprob: -17.375015258789062
    8. ')' → logprob: -18.000015258789062
    9. '.split' → logprob: -18.375015258789062
    10. ' ' → logprob: -18.875015258789062

Token 70: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3987696170806885
    2. ')' → logprob: -1.1487696170806885
    3. '))' → logprob: -5.148769378662109
    4. '()' → logprob: -5.523769378662109
    5. '()))' → logprob: -6.273769378662109
    6. '())
' → logprob: -9.77376937866211
    7. '(' → logprob: -9.89876937866211
    8. '('' → logprob: -11.14876937866211
    9. '()))
' → logprob: -12.64876937866211
    10. '')' → logprob: -12.77376937866211

Token 71: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28642433881759644
    2. '<|end|>' → logprob: -1.5364243984222412
    3. '    
' → logprob: -5.036424160003662
    4. '  
' → logprob: -5.411424160003662
    5. ' P' → logprob: -5.411424160003662
    6. '<|end|>' → logprob: -5.536424160003662
    7. '   ' → logprob: -5.661424160003662
    8. ')' → logprob: -5.661424160003662
    9. 'P' → logprob: -5.786424160003662
    10. ')
' → logprob: -7.036424160003662

Token 72: ' P' (ID: 398)
  Prédit: ' P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.06877561658620834
    2. 'P' (adapté à ' P') → logprob: -2.9437756538391113
    3. '   ' → logprob: -4.318775653839111
    4. '    
' → logprob: -8.693775177001953
    5. '
' → logprob: -9.568775177001953
    6. 'b' → logprob: -9.568775177001953
    7. ' 
' → logprob: -9.818775177001953
    8. ' ' → logprob: -10.568775177001953
    9. '	P' → logprob: -10.818775177001953
    10. '<|end|>' → logprob: -10.818775177001953

Token 73: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12717567384243011
    2. '.' → logprob: -2.1271755695343018
    3. '.ap' → logprob: -9.252175331115723
    4. '.app' → logprob: -9.627175331115723
    5. ' .' → logprob: -9.877175331115723
    6. '​.' → logprob: -11.502175331115723
    7. '.Append' → logprob: -12.502175331115723
    8. '.py' → logprob: -12.752175331115723
    9. '.extend' → logprob: -12.877175331115723
    10. '+.' → logprob: -12.877175331115723

Token 74: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.0008631035452708602
    2. '((' → logprob: -7.500863075256348
    3. '(' → logprob: -8.125863075256348
    4. 'complex' → logprob: -11.500863075256348
    5. '```' → logprob: -13.500863075256348
    6. '(x' → logprob: -13.625863075256348
    7. '(math' → logprob: -14.500863075256348
    8. ' (' → logprob: -15.500863075256348
    9. ' complex' → logprob: -15.625863075256348
    10. '(c' → logprob: -15.875863075256348

Token 75: 'plex' (ID: 12081)
  Prédit: 'plex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plex' → logprob: -1.676292231422849e-05
    2. 'lex' → logprob: -11.750017166137695
    3. 'ple' → logprob: -12.375017166137695
    4. 'pl' → logprob: -13.125017166137695
    5. 'p' → logprob: -13.500017166137695
    6. 'ples' → logprob: -14.500017166137695
    7. 'pex' → logprob: -16.000017166137695
    8. 'pat' → logprob: -16.250017166137695
    9. 'ath' → logprob: -16.375017166137695
    10. '```' → logprob: -16.375017166137695

Token 76: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -3.023293538717553e-05
    2. '(' → logprob: -10.500030517578125
    3. ')(' → logprob: -13.625030517578125
    4. ')' → logprob: -14.125030517578125
    5. 'x' → logprob: -14.750030517578125
    6. ' (' → logprob: -15.375030517578125
    7. ')x' → logprob: -16.500030517578125
    8. '(
' → logprob: -17.375030517578125
    9. '((' → logprob: -18.250030517578125
    10. ',x' → logprob: -19.750030517578125

Token 77: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5759703516960144
    2. ',y' → logprob: -0.8259703516960144
    3. ' ,' → logprob: -10.450970649719238
    4. ',
' → logprob: -14.200970649719238
    5. ',Y' → logprob: -15.200970649719238
    6. ',

' → logprob: -15.325970649719238
    7. 'y' → logprob: -15.450970649719238
    8. ')' → logprob: -15.575970649719238
    9. ',float' → logprob: -16.575969696044922
    10. '`,`' → logprob: -16.825969696044922

Token 78: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02975245751440525
    2. '))' → logprob: -3.529752492904663
    3. ')
' → logprob: -13.529752731323242
    4. ')))' → logprob: -14.654752731323242
    5. '))
' → logprob: -15.904752731323242
    6. ' )' → logprob: -16.529752731323242
    7. ')**' → logprob: -17.904752731323242
    8. '),' → logprob: -18.154752731323242
    9. ' ))' → logprob: -18.779752731323242
    10. ')}' → logprob: -18.779752731323242

Token 79: 'P' (ID: 47)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1507749557495117
    2. 'A' → logprob: -1.7757749557495117
    3. 'area' → logprob: -1.9007749557495117
    4. 'a' → logprob: -1.9007749557495117
    5. 'for' → logprob: -2.6507749557495117
    6. '
' → logprob: -3.1507749557495117
    7. 'p' → logprob: -4.025774955749512
    8. 'r' → logprob: -4.400774955749512
    9. 'result' → logprob: -4.650774955749512
    10. 'm' → logprob: -4.775774955749512

Token 80: '.append' (ID: 3709)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -2.7729658540920354e-05
    2. '(' → logprob: -10.500027656555176
    3. '(Q' → logprob: -16.875028610229492
    4. '((' → logprob: -17.000028610229492
    5. '(Py' → logprob: -17.875028610229492
    6. ' (' → logprob: -18.250028610229492
    7. '(p' → logprob: -18.500028610229492
    8. 'P' → logprob: -18.625028610229492
    9. '(
' → logprob: -19.375028610229492
    10. '\(' → logprob: -19.500028610229492

Token 82: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -15.875
    3. ' [' → logprob: -18.125
    4. '(' → logprob: -18.875
    5. 'First' → logprob: -19.25
    6. ')' → logprob: -19.625
    7. '```' → logprob: -19.75
    8. '\[' → logprob: -19.875
    9. ')[' → logprob: -20.25
    10. '[
' → logprob: -20.75

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '۰' → logprob: -17.125
    4. '０' → logprob: -18.75
    5. '[' → logprob: -19.0
    6. '٠' → logprob: -19.25
    7. '-' → logprob: -20.125
    8. '०' → logprob: -20.5625
    9. '০' → logprob: -20.625
    10. '```' → logprob: -20.625

Token 84: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. '))' → logprob: -12.625004768371582
    3. ' )' → logprob: -14.125004768371582
    4. '])' → logprob: -14.750004768371582
    5. ')
' → logprob: -15.250004768371582
    6. '`)' → logprob: -16.1250057220459
    7. ')`' → logprob: -17.0000057220459
    8. '})' → logprob: -17.3750057220459
    9. ')#' → logprob: -17.3750057220459
    10. '())' → logprob: -17.6250057220459

Token 85: 'N' (ID: 45)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.36994680762290955
    2. 's' → logprob: -1.369946837425232
    3. 'a' → logprob: -3.1199467182159424
    4. 'A' → logprob: -5.7449469566345215
    5. 'S' → logprob: -6.1199469566345215
    6. 'for' → logprob: -6.2449469566345215
    7. 'total' → logprob: -6.4949469566345215
    8. 'result' → logprob: -6.9949469566345215
    9. 'ans' → logprob: -8.244946479797363
    10. 'sum' → logprob: -8.619946479797363

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47521519660949707
    2. '=' → logprob: -0.9752151966094971
    3. '=len' → logprob: -7.600214958190918
    4. '-' → logprob: -8.725214958190918
    5. '-=' → logprob: -9.225214958190918
    6. '=int' → logprob: -9.225214958190918
    7. ' -=' → logprob: -10.100214958190918
    8. '=n' → logprob: -10.600214958190918
    9. '<|end|>' → logprob: -10.600214958190918
    10. '_' → logprob: -10.975214958190918

Token 87: ' len' (ID: 4631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5896437764167786
    2. 'len' → logprob: -0.8396437764167786
    3. '0' → logprob: -4.339643955230713
    4. 'sum' → logprob: -8.589643478393555
    5. ' len' → logprob: -9.214643478393555
    6. ' n' → logprob: -9.589643478393555
    7. '(len' → logprob: -9.714643478393555
    8. 'int' → logprob: -9.714643478393555
    9. 'float' → logprob: -10.214643478393555
    10. '2' → logprob: -11.089643478393555

Token 88: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.00023107275774236768
    2. '(' → logprob: -8.37523078918457
    3. ' (' → logprob: -15.75023078918457
    4. 'P' → logprob: -16.00023078918457
    5. '(
' → logprob: -16.00023078918457
    6. '(N' → logprob: -16.75023078918457
    7. '(p' → logprob: -17.00023078918457
    8. '(

' → logprob: -18.25023078918457
    9. '(Py' → logprob: -18.50023078918457
    10. '(n' → logprob: -18.50023078918457

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01453649066388607
    2. ')-' → logprob: -4.264536380767822
    3. ' )' → logprob: -8.01453685760498
    4. '-)' → logprob: -11.01453685760498
    5. '-' → logprob: -11.13953685760498
    6. ' -' → logprob: -11.76453685760498
    7. ')
' → logprob: -14.51453685760498
    8. ')-(' → logprob: -14.88953685760498
    9. '`)' → logprob: -15.01453685760498
    10. '[:-' → logprob: -15.13953685760498

Token 90: 'total' (ID: 9577)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.3927538990974426
    2. 's' → logprob: -1.6427538394927979
    3. 'a' → logprob: -3.142753839492798
    4. 'A' → logprob: -3.142753839492798
    5. 'S' → logprob: -3.517753839492798
    6. 'ans' → logprob: -5.642754077911377
    7. 'res' → logprob: -5.767754077911377
    8. 'result' → logprob: -6.017754077911377
    9. 'total' → logprob: -6.267754077911377
    10. 'sum' → logprob: -6.392754077911377

Token 91: ' =' (ID: 314)
  Prédit: '_area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.009889245964586735
    2. '_' → logprob: -5.009889125823975
    3. ' =' → logprob: -6.509889125823975
    4. '=' → logprob: -6.509889125823975
    5. 'area' → logprob: -9.384889602661133
    6. 'Area' → logprob: -9.634889602661133
    7. '_=' → logprob: -11.509889602661133
    8. '_angle' → logprob: -12.009889602661133
    9. ' area' → logprob: -12.259889602661133
    10. ' _' → logprob: -12.384889602661133

Token 92: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. 'complex' → logprob: -16.00010871887207
    4. '   ' → logprob: -17.25010871887207
    5. 'abs' → logprob: -18.12510871887207
    6. '۰' → logprob: -18.50010871887207
    7. ' complex' → logprob: -19.00010871887207
    8. '.' → logprob: -19.12510871887207
    9. '```' → logprob: -19.25010871887207
    10. '  ' → logprob: -19.62510871887207

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9981420336989686e-05
    2. 'complex' → logprob: -11.000020027160645
    3. ' ' → logprob: -13.250020027160645
    4. 'sum' → logprob: -14.375020027160645
    5. 'area' → logprob: -14.625020027160645
    6. 'abs' → logprob: -15.125020027160645
    7. '.' → logprob: -16.875019073486328
    8. ' complex' → logprob: -16.875019073486328
    9. '```' → logprob: -16.875019073486328
    10. '(' → logprob: -17.000019073486328

Token 94: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42156291007995605
    2. 'for' → logprob: -1.171562910079956
    3. '<|end|>' → logprob: -3.796562910079956
    4. ' for' → logprob: -4.796563148498535
    5. '\n' → logprob: -6.546563148498535
    6. '
' → logprob: -7.296563148498535
    7. '<|end|>' → logprob: -7.546563148498535
    8. '+' → logprob: -7.921563148498535
    9. ' 
' → logprob: -10.046563148498535
    10. '*' → logprob: -10.046563148498535

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33557119965553284
    2. 'for' → logprob: -1.3355711698532104
    3. '<|end|>' → logprob: -3.9605712890625
    4. ' for' → logprob: -6.8355712890625
    5. ' ' → logprob: -6.9605712890625
    6. 'n' → logprob: -8.9605712890625
    7. 'r' → logprob: -9.3355712890625
    8. '5' → logprob: -9.4605712890625
    9. '```' → logprob: -9.4605712890625
    10. '.' → logprob: -9.5855712890625

Token 96: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007647183374501765
    2. ' for' → logprob: -7.250764846801758
    3. '
' → logprob: -10.125764846801758
    4. '<|end|>' → logprob: -11.250764846801758
    5. '```' → logprob: -14.375764846801758
    6. 'i' → logprob: -14.750764846801758
    7. '+' → logprob: -15.125764846801758
    8. 'n' → logprob: -16.125764846801758
    9. '\n' → logprob: -16.375764846801758
    10. '<|end|>' → logprob: -16.625764846801758

Token 97: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9385402993066236e-05
    2. ' for' → logprob: -11.125019073486328
    3. 'i' → logprob: -12.375019073486328
    4. '<|end|>' → logprob: -15.750019073486328
    5. '```' → logprob: -16.250019073486328
    6. 'f' → logprob: -17.250019073486328
    7. '	for' → logprob: -18.500019073486328
    8. '0' → logprob: -19.125019073486328
    9. '
' → logprob: -19.875019073486328
    10. '>' → logprob: -19.875019073486328

Token 98: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25194382667541504
    2. ' i' → logprob: -1.501943826675415
    3. ' ' → logprob: -11.501943588256836
    4. '	i' → logprob: -13.376943588256836
    5. '_i' → logprob: -14.251943588256836
    6. 'I' → logprob: -14.751943588256836
    7. 'j' → logprob: -14.876943588256836
    8. '   ' → logprob: -15.126943588256836
    9. ' in' → logprob: -15.251943588256836
    10. 'k' → logprob: -15.376943588256836

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006077514495700598
    2. 'in' → logprob: -5.131077289581299
    3. ' ' → logprob: -8.881077766418457
    4. 'range' → logprob: -12.131077766418457
    5. ' range' → logprob: -13.381077766418457
    6. '  ' → logprob: -13.881077766418457
    7. '	in' → logprob: -15.006077766418457
    8. '+' → logprob: -15.256077766418457
    9. 'n' → logprob: -15.631077766418457
    10. ',' → logprob: -15.631077766418457

Token 100: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0619712732732296
    2. ' range' → logprob: -2.8119711875915527
    3. '(range' → logprob: -12.811971664428711
    4. '	range' → logprob: -14.686971664428711
    5. ' ' → logprob: -15.311971664428711
    6. ' xrange' → logprob: -16.68697166442871
    7. '   ' → logprob: -17.31197166442871
    8. '  ' → logprob: -17.56197166442871
    9. '```' → logprob: -18.56197166442871
    10. 'in' → logprob: -19.06197166442871

Token 101: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.25208771228790283
    2. '(' → logprob: -1.5020877122879028
    3. '(n' → logprob: -9.627087593078613
    4. '(len' → logprob: -10.002087593078613
    5. ' (' → logprob: -10.502087593078613
    6. '(range' → logprob: -11.002087593078613
    7. ' ' → logprob: -14.127087593078613
    8. '((' → logprob: -14.127087593078613
    9. ' range' → logprob: -14.502087593078613
    10. 'range' → logprob: -15.002087593078613

Token 102: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0018653334118425846
    2. 'range' → logprob: -6.876865386962891
    3. '1' → logprob: -7.376865386962891
    4. ' N' → logprob: -9.00186538696289
    5. ' range' → logprob: -9.50186538696289
    6. '(N' → logprob: -12.50186538696289
    7. 'len' → logprob: -13.00186538696289
    8. ' ' → logprob: -13.37686538696289
    9. '   ' → logprob: -14.75186538696289
    10. '(' → logprob: -14.75186538696289

Token 103: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.058004386723041534
    2. ' ,' → logprob: -3.183004379272461
    3. ',N' → logprob: -4.433004379272461
    4. ',n' → logprob: -7.183004379272461
    5. ' ' → logprob: -7.308004379272461
    6. '-' → logprob: -7.308004379272461
    7. ',len' → logprob: -7.933004379272461
    8. '1' → logprob: -8.308004379272461
    9. ' -' → logprob: -8.808004379272461
    10. ' N' → logprob: -10.183004379272461

Token 104: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031802060548216105
    2. ' -' → logprob: -5.753180027008057
    3. ')' → logprob: -14.003180503845215
    4. ' ' → logprob: -14.503180503845215
    5. '):
' → logprob: -14.878180503845215
    6. '):' → logprob: -15.128180503845215
    7. '-
' → logprob: -15.128180503845215
    8. '1' → logprob: -16.2531795501709
    9. ')-' → logprob: -17.1281795501709
    10. '   ' → logprob: -17.1281795501709

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.75001049041748
    3. '2' → logprob: -13.37501049041748
    4. '   ' → logprob: -15.00001049041748
    5. ')' → logprob: -15.87501049041748
    6. '```' → logprob: -16.125009536743164
    7. '-' → logprob: -16.750009536743164
    8. '  ' → logprob: -17.250009536743164
    9. '１' → logprob: -18.500009536743164
    10. ' -' → logprob: -18.812509536743164

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014247537590563297
    2. '):
' → logprob: -5.014247417449951
    3. ')' → logprob: -5.639247417449951
    4. ':' → logprob: -5.639247417449951
    5. ' ):' → logprob: -8.63924789428711
    6. '):
' → logprob: -9.38924789428711
    7. '   ' → logprob: -9.88924789428711
    8. '+' → logprob: -10.63924789428711
    9. ',' → logprob: -11.26424789428711
    10. ' )' → logprob: -11.63924789428711

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046633683145046234
    2. 'total' → logprob: -3.671633720397949
    3. ' total' → logprob: -3.921633720397949
    4. '	total' → logprob: -8.42163372039795
    5. '(total' → logprob: -10.29663372039795
    6. '  ' → logprob: -11.17163372039795
    7. '    
' → logprob: -11.17163372039795
    8. '<|end|>' → logprob: -11.29663372039795
    9. ',total' → logprob: -12.04663372039795
    10. ' ' → logprob: -12.17163372039795

Token 108: ' b' (ID: 287)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.39377856254577637
    2. ' total' → logprob: -1.1437785625457764
    3. '   ' → logprob: -5.0187788009643555
    4. '	total' → logprob: -8.643778800964355
    5. ' ' → logprob: -10.143778800964355
    6. 'b' (adapté à ' b') → logprob: -11.518778800964355
    7. '(total' → logprob: -11.518778800964355
    8. '  ' → logprob: -11.893778800964355
    9. ',total' → logprob: -12.268778800964355
    10. '    
' → logprob: -12.643778800964355

Token 109: ',c' (ID: 22261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5233514308929443
    2. '=' → logprob: -0.8983514308929443
    3. ',' → logprob: -8.898351669311523
    4. '=P' → logprob: -9.523351669311523
    5. '=b' → logprob: -11.773351669311523
    6. '<|end|>' → logprob: -13.398351669311523
    7. ')' → logprob: -13.648351669311523
    8. '=C' → logprob: -13.773351669311523
    9. '=A' → logprob: -13.898351669311523
    10. '=B' → logprob: -14.523351669311523

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10035331547260284
    2. '=' → logprob: -2.350353240966797
    3. ',' → logprob: -8.850353240966797
    4. '=P' → logprob: -13.225353240966797
    5. ' ,' → logprob: -14.725353240966797
    6. ' =)' → logprob: -15.475353240966797
    7. ' ' → logprob: -15.600353240966797
    8. ' =
' → logprob: -15.975353240966797
    9. ',P' → logprob: -16.225353240966797
    10. ')' → logprob: -16.350353240966797

Token 111: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.05282719433307648
    2. ' P' → logprob: -3.1778271198272705
    3. '(P' → logprob: -5.05282735824585
    4. '   ' → logprob: -5.92782735824585
    5. ' (' → logprob: -7.67782735824585
    6. ' ' → logprob: -8.552826881408691
    7. '  ' → logprob: -11.177826881408691
    8. '    ' → logprob: -11.427826881408691
    9. '	P' → logprob: -11.427826881408691
    10. ',P' → logprob: -11.552826881408691

Token 112: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.570319702499546e-05
    2. 'i' → logprob: -10.750025749206543
    3. '[' → logprob: -13.000025749206543
    4. '[
' → logprob: -14.375025749206543
    5. '[I' → logprob: -14.375025749206543
    6. '[j' → logprob: -15.625025749206543
    7. '```' → logprob: -15.875025749206543
    8. '(i' → logprob: -16.125024795532227
    9. ',i' → logprob: -16.375024795532227
    10. ' i' → logprob: -17.125024795532227

Token 113: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00025919382460415363
    2. '+' → logprob: -8.500259399414062
    3. ']' → logprob: -9.875259399414062
    4. 'i' → logprob: -14.375259399414062
    5. ']+' → logprob: -14.375259399414062
    6. ',' → logprob: -14.750259399414062
    7. ' ],' → logprob: -14.750259399414062
    8. ':],' → logprob: -14.750259399414062
    9. '),' → logprob: -15.125259399414062
    10. '"],' → logprob: -15.250259399414062

Token 114: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.001981687266379595
    2. ' P' → logprob: -6.251981735229492
    3. '   ' → logprob: -9.876981735229492
    4. ' ' → logprob: -13.751981735229492
    5. '	P' → logprob: -15.126981735229492
    6. '  ' → logprob: -15.501981735229492
    7. '       ' → logprob: -16.001981735229492
    8. 'b' → logprob: -17.251981735229492
    9. '    ' → logprob: -17.626981735229492
    10. '-P' → logprob: -18.126981735229492

Token 115: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001434690784662962
    2. 'i' → logprob: -9.000143051147461
    3. '[' → logprob: -11.000143051147461
    4. '(i' → logprob: -13.875143051147461
    5. '[
' → logprob: -14.000143051147461
    6. '[I' → logprob: -14.500143051147461
    7. '{i' → logprob: -15.000143051147461
    8. '```' → logprob: -15.375143051147461
    9. '   ' → logprob: -16.50014305114746
    10. ' [' → logprob: -16.75014305114746

Token 116: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004429435357451439
    2. ' +' → logprob: -7.750442981719971
    3. '+i' → logprob: -12.125442504882812
    4. '1' → logprob: -12.875442504882812
    5. '+
' → logprob: -13.625442504882812
    6. ']+' → logprob: -14.375442504882812
    7. 'i' → logprob: -14.375442504882812
    8. '   ' → logprob: -14.750442504882812
    9. '+]' → logprob: -14.750442504882812
    10. '＋' → logprob: -15.625442504882812

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. ']' → logprob: -15.875006675720215
    4. '+' → logprob: -16.1250057220459
    5. '2' → logprob: -16.8750057220459
    6. '   ' → logprob: -17.5000057220459
    7. '  ' → logprob: -18.1250057220459
    8. '-' → logprob: -18.6250057220459
    9. '0' → logprob: -18.8750057220459
    10. 'i' → logprob: -19.0000057220459

Token 118: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01004941388964653
    2. ')
' → logprob: -4.635049343109131
    3. '   ' → logprob: -9.010049819946289
    4. ' )' → logprob: -9.635049819946289
    5. '<|end|>' → logprob: -10.510049819946289
    6. ')
' → logprob: -10.635049819946289
    7. ']' → logprob: -10.885049819946289
    8. ' ' → logprob: -12.135049819946289
    9. '-' → logprob: -12.260049819946289
    10. ')

' → logprob: -12.385049819946289

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1016518771648407
    2. 'total' → logprob: -3.351651906967163
    3. ' total' → logprob: -3.976651906967163
    4. '
' → logprob: -3.976651906967163
    5. '(total' → logprob: -5.351651668548584
    6. '	total' → logprob: -5.476651668548584
    7. '<|end|>' → logprob: -5.601651668548584
    8. ' ' → logprob: -5.976651668548584
    9. '    
' → logprob: -5.976651668548584
    10. '  ' → logprob: -6.101651668548584

Token 120: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0064394306391477585
    2. '   ' → logprob: -5.631439208984375
    3. ' total' → logprob: -5.881439208984375
    4. ' ' → logprob: -11.131439208984375
    5. '	total' → logprob: -11.256439208984375
    6. '  ' → logprob: -12.006439208984375
    7. '
' → logprob: -12.506439208984375
    8. 'area' → logprob: -13.381439208984375
    9. '    
' → logprob: -13.381439208984375
    10. '```' → logprob: -14.381439208984375

Token 121: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.016179708763957024
    2. '+=' → logprob: -4.14117956161499
    3. '+' → logprob: -9.266180038452148
    4. ' -=' → logprob: -11.141180038452148
    5. ' =' → logprob: -11.266180038452148
    6. '=' → logprob: -12.016180038452148
    7. ' +' → logprob: -12.141180038452148
    8. ' ' → logprob: -12.266180038452148
    9. ']+=' → logprob: -13.266180038452148
    10. '+=(' → logprob: -13.391180038452148

Token 122: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.011073173955082893
    2. ' area' → logprob: -4.511073112487793
    3. 'abs' → logprob: -11.011073112487793
    4. '   ' → logprob: -13.136073112487793
    5. ' ' → logprob: -13.261073112487793
    6. 'b' → logprob: -13.386073112487793
    7. '(area' → logprob: -13.761073112487793
    8. '2' → logprob: -14.386073112487793
    9. ' abs' → logprob: -14.511073112487793
    10. '0' → logprob: -14.636073112487793

Token 123: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -7.576873758807778e-05
    2. '(' → logprob: -9.500075340270996
    3. ' (' → logprob: -14.375075340270996
    4. '(
' → logprob: -16.000076293945312
    5. '(c' → logprob: -16.750076293945312
    6. '((' → logprob: -17.125076293945312
    7. '(i' → logprob: -18.000076293945312
    8. '(f' → logprob: -18.500076293945312
    9. '(B' → logprob: -18.500076293945312
    10. '(a' → logprob: -18.625076293945312

Token 124: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.18120814859867096
    2. ',' → logprob: -1.8062081336975098
    3. ' ,' → logprob: -6.80620813369751
    4. ',b' → logprob: -8.431208610534668
    5. '(' → logprob: -9.681208610534668
    6. '(c' → logprob: -10.806208610534668
    7. 'c' → logprob: -10.931208610534668
    8. ',C' → logprob: -12.306208610534668
    9. ' ' → logprob: -12.681208610534668
    10. ')' → logprob: -13.056208610534668

Token 125: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -12.500004768371582
    3. '))' → logprob: -15.000004768371582
    4. ' )' → logprob: -15.125004768371582
    5. ')}' → logprob: -17.375003814697266
    6. ')

' → logprob: -17.500003814697266
    7. ')
' → logprob: -17.875003814697266
    8. ')**' → logprob: -18.375003814697266
    9. ')`' → logprob: -18.375003814697266
    10. '+' → logprob: -18.500003814697266

Token 126: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.6789137084269896e-05
    2. ' print' → logprob: -10.25003719329834
    3. '```' → logprob: -14.12503719329834
    4. '
' → logprob: -14.75003719329834
    5. ')' → logprob: -16.375036239624023
    6. '#print' → logprob: -17.250036239624023
    7. ')
' → logprob: -17.500036239624023
    8. '\' → logprob: -17.500036239624023
    9. '``' → logprob: -17.750036239624023
    10. '-print' → logprob: -18.250036239624023

Token 127: '(round' (ID: 75171)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.03852520138025284
    2. '(' → logprob: -3.288525104522705
    3. '(round' → logprob: -8.038525581359863
    4. '(abs' → logprob: -9.288525581359863
    5. '(f' → logprob: -10.663525581359863
    6. '('' → logprob: -10.663525581359863
    7. 'total' → logprob: -12.288525581359863
    8. '(int' → logprob: -12.663525581359863
    9. '("("' → logprob: -12.788525581359863
    10. '(float' → logprob: -12.788525581359863

Token 128: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -4.692145012086257e-05
    2. '(abs' → logprob: -10.375046730041504
    3. '(' → logprob: -11.250046730041504
    4. ' (' → logprob: -13.000046730041504
    5. ',total' → logprob: -15.625046730041504
    6. 'total' → logprob: -15.625046730041504
    7. ')' → logprob: -16.12504768371582
    8. ')(' → logprob: -17.00004768371582
    9. ' total' → logprob: -18.50004768371582
    10. '(float' → logprob: -19.75004768371582

Token 129: ',' (ID: 11)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.21449489891529083
    2. '(),' → logprob: -1.7144949436187744
    3. ')' → logprob: -5.464494705200195
    4. '()))' → logprob: -5.589494705200195
    5. '(' → logprob: -6.089494705200195
    6. ',' → logprob: -6.464494705200195
    7. '))' → logprob: -7.339494705200195
    8. '()' → logprob: -7.714494705200195
    9. ' ())' → logprob: -9.589494705200195
    10. '())
' → logprob: -11.714494705200195

Token 130: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21524512767791748
    2. '6' → logprob: -2.090245246887207
    3. '3' → logprob: -3.590245246887207
    4. '1' → logprob: -3.590245246887207
    5. '5' → logprob: -4.715245246887207
    6. '4' → logprob: -5.465245246887207
    7. '0' → logprob: -7.340245246887207
    8. '8' → logprob: -7.715245246887207
    9. '7' → logprob: -8.340245246887207
    10. '10' → logprob: -8.590245246887207

Token 131: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12692947685718536
    2. ')' → logprob: -2.126929521560669
    3. ')))' → logprob: -14.12692928314209
    4. '))
' → logprob: -14.50192928314209
    5. ')
' → logprob: -16.501930236816406
    6. '())' → logprob: -16.876930236816406
    7. '),' → logprob: -18.251930236816406
    8. '()))' → logprob: -18.251930236816406
    9. ' ))' → logprob: -18.501930236816406
    10. '()' → logprob: -18.626930236816406


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 129
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 107
Précision stricte (1ère position): 43.41%
Précision adaptée (1ère position): 44.96%
Précision (top 10): 82.95%
================================================================================
