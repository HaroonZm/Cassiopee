================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x=range(int(input()))
P=[]
for _ in x:P+=[[int(i) for i in input().split()]]
_=0
P+=[P[0]]
for j in x:
    k = j+1
    _+=P[j][0]*P[k][1]-P[j][1]*P[k][0]
print(_*0.5)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 2: 'range' (ID: 20967)
  → Token d'amorce (pas de prédiction)

Token 3: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010413920972496271
    2. ' (' → logprob: -9.875103950500488
    3. '```' → logprob: -11.000103950500488
    4. '(x' → logprob: -11.250103950500488
    5. '`' → logprob: -12.125103950500488
    6. '_' → logprob: -12.625103950500488
    7. '(
' → logprob: -12.875103950500488
    8. '((' → logprob: -13.250103950500488
    9. '\(' → logprob: -13.375103950500488
    10. '(.' → logprob: -13.500103950500488

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003481755033135414
    2. ')' → logprob: -6.753481864929199
    3. '('' → logprob: -7.003481864929199
    4. '(x' → logprob: -7.003481864929199
    5. '(`' → logprob: -9.3784818649292
    6. '("' → logprob: -9.8784818649292
    7. '((' → logprob: -10.0034818649292
    8. '(user' → logprob: -10.3784818649292
    9. ' ' → logprob: -10.6284818649292
    10. '(s' → logprob: -10.6284818649292

Token 5: '()))
' (ID: 24521)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008050411939620972
    2. '(x' → logprob: -6.508050441741943
    3. ')' → logprob: -6.633050441741943
    4. '()))' → logprob: -6.758050441741943
    5. '))' → logprob: -7.008050441741943
    6. '(
' → logprob: -7.008050441741943
    7. '(()' → logprob: -7.258050441741943
    8. '(`' → logprob: -8.383049964904785
    9. '((' → logprob: -8.508049964904785
    10. '('' → logprob: -8.633049964904785

Token 6: 'P' (ID: 47)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01026170514523983
    2. '.' → logprob: -5.010261535644531
    3. 'for' → logprob: -6.885261535644531
    4. '[:]' → logprob: -6.885261535644531
    5. ':
' → logprob: -7.510261535644531
    6. '(' → logprob: -8.385261535644531
    7. ')' → logprob: -8.635261535644531
    8. ' for' → logprob: -8.760261535644531
    9. ',' → logprob: -9.510261535644531
    10. '[' → logprob: -10.010261535644531

Token 7: '=[]
' (ID: 63466)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2471589798224159e-05
    2. '.' → logprob: -12.750012397766113
    3. 'print' → logprob: -13.375012397766113
    4. '(r' → logprob: -13.500012397766113
    5. 'a' → logprob: -13.625012397766113
    6. 'P' → logprob: -13.750012397766113
    7. 'e' → logprob: -14.000012397766113
    8. 'R' → logprob: -14.125012397766113
    9. 'o' → logprob: -14.625012397766113
    10. 'u' → logprob: -14.875012397766113

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002772785723209381
    2. '.' → logprob: -7.377772808074951
    3. ' for' → logprob: -7.377772808074951
    4. '[:]' → logprob: -7.752772808074951
    5. '.for' → logprob: -8.002772331237793
    6. '(' → logprob: -8.252772331237793
    7. '[' → logprob: -8.627772331237793
    8. ':' → logprob: -9.002772331237793
    9. 'x' → logprob: -9.127772331237793
    10. 'f' → logprob: -10.252772331237793

Token 9: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005658690817654133
    2. ' ' → logprob: -5.8806586265563965
    3. 'i' → logprob: -6.0056586265563965
    4. ' x' → logprob: -8.755659103393555
    5. '_' → logprob: -9.130659103393555
    6. ' _' → logprob: -9.130659103393555
    7. '  ' → logprob: -12.380659103393555
    8. 'x' → logprob: -12.505659103393555
    9. ' ' → logprob: -13.755659103393555
    10. '	i' → logprob: -14.630659103393555

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009938588365912437
    2. 'in' → logprob: -4.634938716888428
    3. ' ' → logprob: -8.63493824005127
    4. '	in' → logprob: -14.00993824005127
    5. 'import' → logprob: -14.13493824005127
    6. 'n' → logprob: -14.63493824005127
    7. ',' → logprob: -15.13493824005127
    8. '  ' → logprob: -15.13493824005127
    9. 'range' → logprob: -15.38493824005127
    10. 'x' → logprob: -15.50993824005127

Token 11: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002448661718517542
    2. ' x' → logprob: -6.252448558807373
    3. 'range' → logprob: -7.627448558807373
    4. ' range' → logprob: -10.377449035644531
    5. ' xrange' → logprob: -14.002449035644531
    6. '(x' → logprob: -14.127449035644531
    7. ' ' → logprob: -15.627449035644531
    8. '	x' → logprob: -16.12744903564453
    9. '<x' → logprob: -17.62744903564453
    10. '{x' → logprob: -17.75244903564453

Token 12: ':P' (ID: 125019)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016945181414484978
    2. ' :' → logprob: -8.75016975402832
    3. ':**' → logprob: -13.00016975402832
    4. '[:]' → logprob: -13.12516975402832
    5. ',:' → logprob: -14.00016975402832
    6. ':s' → logprob: -14.25016975402832
    7. ':
' → logprob: -14.37516975402832
    8. ':n' → logprob: -14.75016975402832
    9. ':list' → logprob: -14.75016975402832
    10. ':]' → logprob: -14.87516975402832

Token 13: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07254830002784729
    2. 'append' → logprob: -2.6975483894348145
    3. '.' → logprob: -6.8225483894348145
    4. '_append' → logprob: -7.5725483894348145
    5. 'ush' → logprob: -7.9475483894348145
    6. 'Append' → logprob: -8.697547912597656
    7. ' append' → logprob: -8.947547912597656
    8. '.extend' → logprob: -9.072547912597656
    9. 'P' → logprob: -10.072547912597656
    10. '```' → logprob: -10.072547912597656

Token 14: '=[[' (ID: 112637)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39013537764549255
    2. '=[' → logprob: -1.140135407447815
    3. '=[]' → logprob: -6.640135288238525
    4. '[' → logprob: -7.140135288238525
    5. '=['' → logprob: -7.140135288238525
    6. '=list' → logprob: -9.390135765075684
    7. '=x' → logprob: -9.640135765075684
    8. '=p' → logprob: -9.640135765075684
    9. '=["' → logprob: -10.765135765075684
    10. '=P' → logprob: -10.890135765075684

Token 15: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6626647710800171
    2. '_' → logprob: -1.037664771080017
    3. '_]' → logprob: -2.2876648902893066
    4. '0' → logprob: -3.7876648902893066
    5. '_[' → logprob: -6.287664890289307
    6. 'input' → logprob: -6.662664890289307
    7. '_input' → logprob: -7.037664890289307
    8. '_int' → logprob: -7.537664890289307
    9. '(int' → logprob: -7.912664890289307
    10. ' int' → logprob: -8.787664413452148

Token 16: '(i' (ID: 3649)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023291943594813347
    2. '(' → logprob: -3.773291826248169
    3. 'input' → logprob: -10.52329158782959
    4. ' (' → logprob: -11.64829158782959
    5. ' input' → logprob: -12.89829158782959
    6. ',input' → logprob: -13.27329158782959
    7. ' ' → logprob: -13.77329158782959
    8. '(x' → logprob: -13.77329158782959
    9. '(
' → logprob: -13.89829158782959
    10. '(in' → logprob: -14.02329158782959

Token 17: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10384615510702133
    2. ')]' → logprob: -3.2288460731506348
    3. '())' → logprob: -3.7288460731506348
    4. ')])' → logprob: -4.103846073150635
    5. '(input' → logprob: -4.728846073150635
    6. 'input' → logprob: -4.728846073150635
    7. '(x' → logprob: -8.353846549987793
    8. '),' → logprob: -8.978846549987793
    9. '()' → logprob: -9.603846549987793
    10. '()]' → logprob: -9.853846549987793

Token 18: ' for' (ID: 395)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.34727784991264343
    2. 'input' → logprob: -2.347277879714966
    3. '()' → logprob: -2.972277879714966
    4. ']' → logprob: -3.097277879714966
    5. '(input' → logprob: -3.347277879714966
    6. 'for' → logprob: -3.597277879714966
    7. ')]' → logprob: -4.597277641296387
    8. '())' → logprob: -5.347277641296387
    9. ')])' → logprob: -5.347277641296387
    10. '])' → logprob: -5.597277641296387

Token 19: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.02427898533642292
    2. 'input' → logprob: -3.7742788791656494
    3. '_' → logprob: -7.8992791175842285
    4. ' range' → logprob: -8.27427864074707
    5. ' in' → logprob: -8.89927864074707
    6. '_input' → logprob: -9.27427864074707
    7. ' ' → logprob: -9.77427864074707
    8. '<|end|>' → logprob: -10.27427864074707
    9. 'range' → logprob: -11.14927864074707
    10. '=input' → logprob: -11.27427864074707

Token 20: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.22298865020275116
    2. 'input' → logprob: -1.7229886054992676
    3. ' in' → logprob: -4.472988605499268
    4. '(input' → logprob: -4.847988605499268
    5. '=input' → logprob: -6.722988605499268
    6. '(' → logprob: -8.597989082336426
    7. ',input' → logprob: -8.597989082336426
    8. ' ' → logprob: -8.847989082336426
    9. '<|end|>' → logprob: -9.472989082336426
    10. '	input' → logprob: -9.472989082336426

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07891127467155457
    2. ' input' → logprob: -2.578911304473877
    3. '(input' → logprob: -11.578910827636719
    4. 'range' → logprob: -12.578910827636719
    5. ' ' → logprob: -12.828910827636719
    6. ',input' → logprob: -14.203910827636719
    7. '=input' → logprob: -14.203910827636719
    8. 'list' → logprob: -14.703910827636719
    9. '	input' → logprob: -14.703910827636719
    10. '.input' → logprob: -14.828910827636719

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007642415002919734
    2. '()' → logprob: -7.2507643699646
    3. '()]' → logprob: -9.875763893127441
    4. '()].' → logprob: -13.875763893127441
    5. ' ().' → logprob: -14.125763893127441
    6. '(' → logprob: -14.250763893127441
    7. '())' → logprob: -15.625763893127441
    8. '('' → logprob: -16.250764846801758
    9. '()[' → logprob: -16.625764846801758
    10. '()][' → logprob: -16.875764846801758

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007691288483329117
    2. 'strip' → logprob: -7.250769138336182
    3. 'rstrip' → logprob: -9.875768661499023
    4. ' split' → logprob: -12.000768661499023
    5. 'spl' → logprob: -13.875768661499023
    6. 's' → logprob: -15.500768661499023
    7. '(split' → logprob: -15.625768661499023
    8. 'sp' → logprob: -15.875768661499023
    9. 'replace' → logprob: -17.000768661499023
    10. '.split' → logprob: -17.625768661499023

Token 24: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.07917706668376923
    2. '()' → logprob: -2.579177141189575
    3. '(' → logprob: -8.329176902770996
    4. '())' → logprob: -10.954176902770996
    5. '('' → logprob: -11.579176902770996
    6. '()],' → logprob: -12.204176902770996
    7. '()][' → logprob: -12.954176902770996
    8. '()))' → logprob: -13.329176902770996
    9. '()>' → logprob: -13.329176902770996
    10. '()].' → logprob: -13.579176902770996

Token 25: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.5779628157615662
    2. '()]' → logprob: -1.327962875366211
    3. '()' → logprob: -1.952962875366211
    4. ']' → logprob: -3.577962875366211
    5. ']]]' → logprob: -6.452962875366211
    6. '']]' → logprob: -7.452962875366211
    7. ']])' → logprob: -7.702962875366211
    8. ')]' → logprob: -7.827962875366211
    9. '])]' → logprob: -7.952962875366211
    10. '(' → logprob: -7.952962875366211

Token 26: '_=' (ID: 115480)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13398538529872894
    2. '\n' → logprob: -2.7589852809906006
    3. '[' → logprob: -3.6339852809906006
    4. '<|end|>' → logprob: -4.75898551940918
    5. '[
' → logprob: -5.63398551940918
    6. '
' → logprob: -5.75898551940918
    7. '```' → logprob: -6.13398551940918
    8. ')' → logprob: -6.50898551940918
    9. '[n' → logprob: -6.50898551940918
    10. ' ' → logprob: -6.50898551940918

Token 27: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.5295436382293701
    2. 'sum' → logprob: -1.5295436382293701
    3. '0' → logprob: -1.9045436382293701
    4. 'sorted' → logprob: -2.52954363822937
    5. 'x' → logprob: -2.65454363822937
    6. 'len' → logprob: -2.77954363822937
    7. 'P' → logprob: -3.27954363822937
    8. '[' → logprob: -3.40454363822937
    9. 'min' → logprob: -3.40454363822937
    10. 'range' → logprob: -3.77954363822937

Token 28: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01956753432750702
    2. ' for' → logprob: -4.519567489624023
    3. '
' → logprob: -5.269567489624023
    4. '<|end|>' → logprob: -6.019567489624023
    5. 'n' → logprob: -7.269567489624023
    6. 'x' → logprob: -9.519567489624023
    7. ' 
' → logprob: -10.519567489624023
    8. ' ' → logprob: -11.019567489624023
    9. '\n' → logprob: -11.144567489624023
    10. 't' → logprob: -11.269567489624023

Token 29: 'P' (ID: 47)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0026401029899716377
    2. 'f' → logprob: -6.377640247344971
    3. 'n' → logprob: -8.127639770507812
    4. ' for' → logprob: -8.502639770507812
    5. 'x' → logprob: -8.752639770507812
    6. 'r' → logprob: -9.377639770507812
    7. 'd' → logprob: -9.877639770507812
    8. 't' → logprob: -10.377639770507812
    9. 'm' → logprob: -10.377639770507812
    10. 'i' → logprob: -10.627639770507812

Token 30: '+' (ID: 10)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: '=[' (ID: 13370)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33476683497428894
    2. '[' → logprob: -2.0847668647766113
    3. '.append' → logprob: -2.5847668647766113
    4. '<|end|>' → logprob: -3.4597668647766113
    5. '.pop' → logprob: -3.8347668647766113
    6. 'append' → logprob: -4.959766864776611
    7. '[len' → logprob: -5.209766864776611
    8. '[-' → logprob: -5.959766864776611
    9. '[end' → logprob: -5.959766864776611
    10. '+' → logprob: -6.209766864776611

Token 32: 'P' (ID: 47)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.032370299100875854
    2. '0' → logprob: -5.407370090484619
    3. '[P' → logprob: -5.407370090484619
    4. '[max' → logprob: -5.532370090484619
    5. 'P' → logprob: -5.657370090484619
    6. '[-' → logprob: -6.032370090484619
    7. '_' → logprob: -6.407370090484619
    8. '_[' → logprob: -6.657370090484619
    9. '[x' → logprob: -6.657370090484619
    10. ' [' → logprob: -6.907370090484619

Token 33: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.9596108794212341
    2. '[_' → logprob: -0.9596108794212341
    3. '[' → logprob: -1.459610939025879
    4. '[:' → logprob: -7.959610939025879
    5. ']' → logprob: -8.209610939025879
    6. '_' → logprob: -8.334610939025879
    7. '[:-' → logprob: -9.209610939025879
    8. '_[' → logprob: -9.334610939025879
    9. '_]' → logprob: -9.459610939025879
    10. '[::-' → logprob: -9.584610939025879

Token 34: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5890360474586487
    2. '0' → logprob: -1.339035987854004
    3. '_' → logprob: -2.214035987854004
    4. '-_' → logprob: -3.464035987854004
    5. '[-' → logprob: -4.464035987854004
    6. '_-' → logprob: -4.714035987854004
    7. '_]' → logprob: -4.964035987854004
    8. '[' → logprob: -5.089035987854004
    9. '[_' → logprob: -5.214035987854004
    10. '])' → logprob: -6.839035987854004

Token 35: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.3557918667793274
    2. ']' → logprob: -1.2307918071746826
    3. '][:' → logprob: -5.605792045593262
    4. '][' → logprob: -6.480792045593262
    5. ']]

' → logprob: -7.730792045593262
    6. '[' → logprob: -7.980792045593262
    7. ']+' → logprob: -8.480792045593262
    8. ']]
' → logprob: -8.605792045593262
    9. '[:' → logprob: -8.980792045593262
    10. '']]' → logprob: -9.230792045593262

Token 36: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017925269901752472
    2. ' for' → logprob: -5.017925262451172
    3. '<|end|>' → logprob: -5.267925262451172
    4. 'while' → logprob: -5.517925262451172
    5. '
' → logprob: -7.017925262451172
    6. 'n' → logprob: -7.392925262451172
    7. '\n' → logprob: -8.517925262451172
    8. ' while' → logprob: -9.267925262451172
    9. 'r' → logprob: -10.642925262451172
    10. 's' → logprob: -10.642925262451172

Token 37: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09791844338178635
    2. ' _' → logprob: -3.0979185104370117
    3. '_' → logprob: -3.7229185104370117
    4. ' ' → logprob: -4.347918510437012
    5. ' range' → logprob: -4.722918510437012
    6. 'i' → logprob: -6.347918510437012
    7. 'range' → logprob: -8.472918510437012
    8. ' in' → logprob: -9.847918510437012
    9. '_i' → logprob: -10.597918510437012
    10. ' j' → logprob: -10.972918510437012

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2523941397666931
    2. 'in' → logprob: -1.502394199371338
    3. ' ' → logprob: -8.00239372253418
    4. '	in' → logprob: -10.62739372253418
    5. '_' → logprob: -10.75239372253418
    6. 'range' → logprob: -11.00239372253418
    7. ',' → logprob: -11.12739372253418
    8. '_in' → logprob: -11.37739372253418
    9. 'In' → logprob: -12.37739372253418
    10. 'n' → logprob: -12.50239372253418

Token 39: ' x' (ID: 1215)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.28279969096183777
    2. 'range' → logprob: -1.4077997207641602
    3. 'x' → logprob: -7.03279972076416
    4. ' x' → logprob: -7.28279972076416
    5. ' ' → logprob: -10.15779972076416
    6. ' xrange' → logprob: -11.15779972076416
    7. ' P' → logprob: -11.53279972076416
    8. 'P' → logprob: -12.53279972076416
    9. '  ' → logprob: -12.65779972076416
    10. 'r' → logprob: -13.03279972076416

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034774013329297304
    2. '+' → logprob: -8.625348091125488
    3. '[:-' → logprob: -10.000348091125488
    4. ':
' → logprob: -10.125348091125488
    5. '[' → logprob: -10.625348091125488
    6. '+:' → logprob: -11.000348091125488
    7. ' :' → logprob: -11.375348091125488
    8. '[:]' → logprob: -12.000348091125488
    9. '[::-' → logprob: -13.125348091125488
    10. ',' → logprob: -13.250348091125488

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45845529437065125
    2. '_' → logprob: -2.0834553241729736
    3. ' for' → logprob: -2.0834553241729736
    4. ' _' → logprob: -2.7084553241729736
    5. ' ' → logprob: -4.0834550857543945
    6. ' if' → logprob: -4.4584550857543945
    7. 'for' → logprob: -4.4584550857543945
    8. '	for' → logprob: -5.4584550857543945
    9. '_=' → logprob: -5.9584550857543945
    10. '	' → logprob: -6.4584550857543945

Token 42: ' k' (ID: 372)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11501149833202362
    2. 'for' → logprob: -2.86501145362854
    3. '   ' → logprob: -4.365011692047119
    4. '_' → logprob: -4.615011692047119
    5. ' _' → logprob: -4.615011692047119
    6. ' if' → logprob: -4.865011692047119
    7. ' ' → logprob: -4.990011692047119
    8. ' range' → logprob: -6.615011692047119
    9. ' j' → logprob: -7.365011692047119
    10. ' P' → logprob: -7.615011692047119

Token 43: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38706275820732117
    2. '+=' → logprob: -1.5120627880096436
    3. '=k' → logprob: -3.3870627880096436
    4. '=j' → logprob: -4.1370625495910645
    5. ' =' → logprob: -4.1370625495910645
    6. '+' → logprob: -4.2620625495910645
    7. '=P' → logprob: -5.2620625495910645
    8. ' +=' → logprob: -5.5120625495910645
    9. ' in' → logprob: -5.7620625495910645
    10. ',j' → logprob: -6.3870625495910645

Token 44: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5004687309265137
    2. '0' → logprob: -1.2504687309265137
    3. 'P' → logprob: -3.0004687309265137
    4. ' j' → logprob: -3.3754687309265137
    5. 'len' → logprob: -5.000468730926514
    6. ' ' → logprob: -5.125468730926514
    7. ' P' → logprob: -5.625468730926514
    8. '1' → logprob: -6.000468730926514
    9. 'x' → logprob: -6.625468730926514
    10. ' len' → logprob: -7.875468730926514

Token 45: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023181064054369926
    2. '-' → logprob: -3.8981809616088867
    3. ' +' → logprob: -6.023180961608887
    4. ' -' → logprob: -9.273180961608887
    5. '   ' → logprob: -10.398180961608887
    6. '+k' → logprob: -10.648180961608887
    7. '[' → logprob: -11.273180961608887
    8. ' ' → logprob: -11.648180961608887
    9. '+
' → logprob: -12.148180961608887
    10. '1' → logprob: -12.523180961608887

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.27099974633893e-05
    2. ' ' → logprob: -12.000012397766113
    3. '+' → logprob: -12.125012397766113
    4. '   ' → logprob: -14.500012397766113
    5. '2' → logprob: -15.000012397766113
    6. '  ' → logprob: -16.50001335144043
    7. '[' → logprob: -17.00001335144043
    8. '```' → logprob: -17.37501335144043
    9. '-' → logprob: -17.50001335144043
    10. '3' → logprob: -18.31251335144043

Token 47: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' _' (ID: 1175)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1360373497009277
    2. ' if' → logprob: -1.7610373497009277
    3. '<|end|>' → logprob: -1.7610373497009277
    4. 'if' → logprob: -2.3860373497009277
    5. '+' → logprob: -3.0110373497009277
    6. '   ' → logprob: -3.2610373497009277
    7. 'while' → logprob: -3.2610373497009277
    8. ' while' → logprob: -3.5110373497009277
    9. 'for' → logprob: -3.6360373497009277
    10. ' for' → logprob: -4.136037349700928

Token 50: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14894527196884155
    2. ' +=' → logprob: -2.0239453315734863
    3. '+=(' → logprob: -5.398945331573486
    4. '+' → logprob: -7.273945331573486
    5. '=' → logprob: -7.523945331573486
    6. ' =' → logprob: -8.773944854736328
    7. ']+=' → logprob: -9.898944854736328
    8. '-=' → logprob: -9.898944854736328
    9. '+='' → logprob: -10.023944854736328
    10. '-' → logprob: -10.148944854736328

Token 51: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.057649530470371246
    2. '(P' → logprob: -3.932649612426758
    3. 'abs' → logprob: -4.557649612426758
    4. 'max' → logprob: -4.557649612426758
    5. ' P' → logprob: -4.682649612426758
    6. 'k' → logprob: -6.182649612426758
    7. '   ' → logprob: -6.807649612426758
    8. 'min' → logprob: -7.057649612426758
    9. ' max' → logprob: -7.807649612426758
    10. ' abs' → logprob: -7.932649612426758

Token 52: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.011975498870015144
    2. '[k' → logprob: -5.011975288391113
    3. '[' → logprob: -5.261975288391113
    4. ' [' → logprob: -11.386975288391113
    5. '[js' → logprob: -12.011975288391113
    6. '[J' → logprob: -12.136975288391113
    7. '][' → logprob: -12.386975288391113
    8. '[i' → logprob: -12.386975288391113
    9. '[m' → logprob: -12.511975288391113
    10. 'j' → logprob: -12.636975288391113

Token 53: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001306787133216858
    2. ']' → logprob: -7.876307010650635
    3. ' ][' → logprob: -8.001306533813477
    4. '[' → logprob: -8.251306533813477
    5. '][-' → logprob: -9.126306533813477
    6. '-' → logprob: -9.251306533813477
    7. '0' → logprob: -11.001306533813477
    8. ' ' → logprob: -11.188806533813477
    9. '1' → logprob: -11.313806533813477
    10. '][_' → logprob: -11.313806533813477

Token 54: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0008597695268690586
    2. '0' → logprob: -7.25085973739624
    3. '1' → logprob: -9.625860214233398
    4. ']' → logprob: -10.500860214233398
    5. '-' → logprob: -10.750860214233398
    6. ' k' → logprob: -11.125860214233398
    7. '][' → logprob: -11.750860214233398
    8. '   ' → logprob: -12.875860214233398
    9. ' ' → logprob: -13.375860214233398
    10. 'j' → logprob: -13.500860214233398

Token 55: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.25885626673698425
    2. ']' → logprob: -1.5088562965393066
    3. ']-' → logprob: -5.633856296539307
    4. ']+' → logprob: -6.508856296539307
    5. ']*(' → logprob: -6.633856296539307
    6. '*' → logprob: -8.133855819702148
    7. ' ]' → logprob: -8.883855819702148
    8. '-' → logprob: -10.633855819702148
    9. '*k' → logprob: -10.758855819702148
    10. '+' → logprob: -11.883855819702148

Token 56: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0009220616775564849
    2. ' P' → logprob: -7.000922203063965
    3. '   ' → logprob: -12.625922203063965
    4. 'k' → logprob: -13.250922203063965
    5. '	P' → logprob: -13.625922203063965
    6. '(P' → logprob: -14.000922203063965
    7. ' ' → logprob: -14.125922203063965
    8. '```' → logprob: -14.500922203063965
    9. '>P' → logprob: -14.750922203063965
    10. '-P' → logprob: -15.000922203063965

Token 57: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.000500966387335211
    2. '[j' → logprob: -8.125500679016113
    3. '[' → logprob: -8.750500679016113
    4. 'k' → logprob: -10.500500679016113
    5. '[s' → logprob: -12.125500679016113
    6. '```' → logprob: -12.750500679016113
    7. '][' → logprob: -12.875500679016113
    8. ' [' → logprob: -13.875500679016113
    9. '[q' → logprob: -14.000500679016113
    10. '[i' → logprob: -14.125500679016113

Token 58: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.28522711992263794
    2. '[' → logprob: -1.5352270603179932
    3. '1' → logprob: -3.535227060317993
    4. ']' → logprob: -7.160227298736572
    5. '<|end|>' → logprob: -7.160227298736572
    6. '0' → logprob: -8.035226821899414
    7. ' ][' → logprob: -8.160226821899414
    8. '>[' → logprob: -8.410226821899414
    9. ' [' → logprob: -8.535226821899414
    10. ',' → logprob: -8.660226821899414

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.755678961984813e-05
    2. ' ' → logprob: -9.750077247619629
    3. '0' → logprob: -11.000077247619629
    4. '-' → logprob: -13.750077247619629
    5. '```' → logprob: -15.375077247619629
    6. '<|end|>' → logprob: -15.500077247619629
    7. '   ' → logprob: -15.937577247619629
    8. '<|end|>' → logprob: -16.000078201293945
    9. ']' → logprob: -16.187578201293945
    10. '2' → logprob: -16.312578201293945

Token 60: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1312078833580017
    2. ' -' → logprob: -2.1312079429626465
    3. '-P' → logprob: -5.5062079429626465
    4. '<|end|>' → logprob: -9.256207466125488
    5. '   ' → logprob: -11.006207466125488
    6. ' ' → logprob: -11.256207466125488
    7. '-python' → logprob: -11.381207466125488
    8. ')-(' → logprob: -11.506207466125488
    9. '-p' → logprob: -11.756207466125488
    10. '-)' → logprob: -11.756207466125488

Token 61: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.01255039032548666
    2. ' P' → logprob: -4.387550354003906
    3. '<|end|>' → logprob: -11.262550354003906
    4. '	P' → logprob: -11.387550354003906
    5. ' ' → logprob: -12.262550354003906
    6. '   ' → logprob: -12.262550354003906
    7. '```' → logprob: -13.762550354003906
    8. '>P' → logprob: -13.887550354003906
    9. '  ' → logprob: -14.137550354003906
    10. '1' → logprob: -14.387550354003906

Token 62: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0829693153500557
    2. '[k' → logprob: -2.5829694271087646
    3. '[' → logprob: -5.5829691886901855
    4. '<|end|>' → logprob: -9.082969665527344
    5. '[js' → logprob: -9.707969665527344
    6. ' [' → logprob: -9.957969665527344
    7. '[next' → logprob: -10.707969665527344
    8. '[q' → logprob: -10.957969665527344
    9. '```' → logprob: -11.707969665527344
    10. '[user' → logprob: -12.207969665527344

Token 63: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0011678413720801473
    2. ']' → logprob: -7.5011677742004395
    3. '[' → logprob: -8.501168251037598
    4. '+' → logprob: -8.626168251037598
    5. ' ][' → logprob: -9.501168251037598
    6. '1' → logprob: -10.126168251037598
    7. ''][' → logprob: -10.376168251037598
    8. '"][' → logprob: -10.501168251037598
    9. '-' → logprob: -11.376168251037598
    10. '   ' → logprob: -11.501168251037598

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09807936102151871
    2. '0' → logprob: -2.5980794429779053
    3. 'k' → logprob: -3.9730794429779053
    4. '-' → logprob: -8.973079681396484
    5. '```' → logprob: -11.473079681396484
    6. ' ' → logprob: -11.598079681396484
    7. ' k' → logprob: -11.723079681396484
    8. ']' → logprob: -11.973079681396484
    9. '+' → logprob: -12.098079681396484
    10. '   ' → logprob: -12.098079681396484

Token 65: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11980758607387543
    2. ']*' → logprob: -2.244807481765747
    3. '<|end|>' → logprob: -5.494807720184326
    4. ']' → logprob: -6.119807720184326
    5. '*k' → logprob: -8.494807243347168
    6. ')*' → logprob: -8.869807243347168
    7. ' *' → logprob: -9.369807243347168
    8. '<|end|>' → logprob: -9.994807243347168
    9. '*>' → logprob: -10.869807243347168
    10. '*)' → logprob: -11.369807243347168

Token 66: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0021017256658524275
    2. '<|end|>' → logprob: -6.252101898193359
    3. ' P' → logprob: -9.12710189819336
    4. 'k' → logprob: -9.75210189819336
    5. '[P' → logprob: -13.25210189819336
    6. '[' → logprob: -14.37710189819336
    7. '<|end|>' → logprob: -14.50210189819336
    8. '>P' → logprob: -14.75210189819336
    9. '```' → logprob: -14.87710189819336
    10. '(P' → logprob: -15.00210189819336

Token 67: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0005141906440258026
    2. 'k' → logprob: -7.625514030456543
    3. '[' → logprob: -11.125514030456543
    4. '[j' → logprob: -11.500514030456543
    5. '```' → logprob: -15.000514030456543
    6. '{k' → logprob: -15.250514030456543
    7. '[x' → logprob: -15.625514030456543
    8. '+k' → logprob: -15.625514030456543
    9. '	k' → logprob: -16.12551498413086
    10. '[key' → logprob: -17.37551498413086

Token 68: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6384955644607544
    2. '][' → logprob: -0.7634955644607544
    3. '[' → logprob: -5.513495445251465
    4. '0' → logprob: -6.513495445251465
    5. ']]' → logprob: -9.138495445251465
    6. ']}' → logprob: -9.513495445251465
    7. ']][' → logprob: -10.013495445251465
    8. '`]' → logprob: -11.263495445251465
    9. ''][' → logprob: -11.388495445251465
    10. '"][' → logprob: -11.388495445251465

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.750000953674316
    3. 'j' → logprob: -16.0
    4. '1' → logprob: -16.0
    5. '۰' → logprob: -16.625
    6. 'k' → logprob: -17.5
    7. '```' → logprob: -17.875
    8. ']' → logprob: -18.25
    9. '０' → logprob: -18.8125
    10. '   ' → logprob: -18.9375

Token 70: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000774846994318068
    2. ']' → logprob: -7.37577486038208
    3. '}' → logprob: -9.000774383544922
    4. '<|end|>' → logprob: -11.500774383544922
    5. '']' → logprob: -12.875774383544922
    6. '```' → logprob: -13.000774383544922
    7. ')]' → logprob: -13.125774383544922
    8. ' )' → logprob: -13.625774383544922
    9. '）' → logprob: -13.750774383544922
    10. ')}' → logprob: -13.875774383544922

Token 71: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12701316177845
    2. '_' → logprob: -2.3770132064819336
    3. '_
' → logprob: -4.502013206481934
    4. '*' → logprob: -6.002013206481934
    5. '```' → logprob: -6.252013206481934
    6. 'r' → logprob: -6.252013206481934
    7. 'p' → logprob: -6.627013206481934
    8. '
' → logprob: -6.877013206481934
    9. 'area' → logprob: -7.252013206481934
    10. '\' → logprob: -7.502013206481934

Token 72: '(_' (ID: 4963)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.21146883070468903
    2. '(' → logprob: -1.7114688158035278
    3. '(_' → logprob: -5.211468696594238
    4. '(round' → logprob: -6.211468696594238
    5. 'abs' → logprob: -6.336468696594238
    6. '(_)' → logprob: -7.836468696594238
    7. '(int' → logprob: -8.711468696594238
    8. '((' → logprob: -9.586468696594238
    9. '('' → logprob: -10.461468696594238
    10. '('_' → logprob: -10.711468696594238

Token 73: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024086179211735725
    2. '//' → logprob: -3.7740862369537354
    3. ')//' → logprob: -7.649085998535156
    4. '`)' → logprob: -8.774085998535156
    5. '/' → logprob: -9.024085998535156
    6. '')' → logprob: -10.649085998535156
    7. '*' → logprob: -11.149085998535156
    8. ')`' → logprob: -11.274085998535156
    9. '))' → logprob: -11.774085998535156
    10. '")' → logprob: -12.399085998535156

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08910250663757324
    2. '.' → logprob: -2.4641025066375732
    3. ' ' → logprob: -8.964102745056152
    4. '1' → logprob: -10.839102745056152
    5. ' .' → logprob: -11.964102745056152
    6. '5' → logprob: -12.714102745056152
    7. '-' → logprob: -13.714102745056152
    8. '   ' → logprob: -14.089102745056152
    9. '```' → logprob: -14.464102745056152
    10. '.
' → logprob: -14.589102745056152

Token 75: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003348698082845658
    2. '5' → logprob: -8.125334739685059
    3. '0' → logprob: -10.625334739685059
    4. '```' → logprob: -12.125334739685059
    5. '1' → logprob: -12.750334739685059
    6. '`.' → logprob: -13.875334739685059
    7. '..' → logprob: -14.125334739685059
    8. '2' → logprob: -14.250334739685059
    9. '``' → logprob: -14.750334739685059
    10. ' .' → logprob: -15.375334739685059

Token 76: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.60414821645827e-06
    2. '```' → logprob: -13.750004768371582
    3. '6' → logprob: -13.875004768371582
    4. ''' → logprob: -14.625004768371582
    5. '0' → logprob: -15.000004768371582
    6. '')' → logprob: -15.375004768371582
    7. '2' → logprob: -15.375004768371582
    8. '`' → logprob: -15.687504768371582
    9. ' ' → logprob: -15.937504768371582
    10. '4' → logprob: -15.937504768371582

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.875000953674316
    3. ')`' → logprob: -14.875000953674316
    4. '))' → logprob: -15.250000953674316
    5. '`)' → logprob: -16.125001907348633
    6. '')' → logprob: -16.250001907348633
    7. ')
' → logprob: -17.125001907348633
    8. '*)' → logprob: -17.375001907348633
    9. '*' → logprob: -17.625001907348633
    10. '```' → logprob: -18.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 75
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 53
Précision stricte (1ère position): 42.67%
Précision adaptée (1ère position): 42.67%
Précision (top 10): 70.67%
================================================================================
