================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x=range(int(input()))
P=[]
for _ in x:P+=[[int(i) for i in input().split()]]
_=0
P+=[P[0]]
for j in x:_+=P[j][0]*P[j+1][1]-P[j][1]*P[j+1][0]
print(_*0.5)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 2: 'range' (ID: 20967)
  → Token d'amorce (pas de prédiction)

Token 3: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010473522706888616
    2. ' (' → logprob: -9.875104904174805
    3. '```' → logprob: -11.000104904174805
    4. '(x' → logprob: -11.250104904174805
    5. '`' → logprob: -12.000104904174805
    6. '_' → logprob: -12.750104904174805
    7. '(
' → logprob: -12.875104904174805
    8. '((' → logprob: -13.125104904174805
    9. '\(' → logprob: -13.375104904174805
    10. '(.' → logprob: -13.500104904174805

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003477478167042136
    2. ')' → logprob: -6.753477573394775
    3. '('' → logprob: -7.003477573394775
    4. '(x' → logprob: -7.003477573394775
    5. '(`' → logprob: -9.378477096557617
    6. '("' → logprob: -9.878477096557617
    7. '((' → logprob: -10.003477096557617
    8. '(user' → logprob: -10.378477096557617
    9. ' ' → logprob: -10.628477096557617
    10. '(s' → logprob: -10.628477096557617

Token 5: '()))
' (ID: 24521)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008050411939620972
    2. '(x' → logprob: -6.508050441741943
    3. ')' → logprob: -6.633050441741943
    4. '()))' → logprob: -6.758050441741943
    5. '))' → logprob: -7.008050441741943
    6. '(
' → logprob: -7.008050441741943
    7. '(()' → logprob: -7.258050441741943
    8. '(`' → logprob: -8.383049964904785
    9. '((' → logprob: -8.508049964904785
    10. '('' → logprob: -8.633049964904785

Token 6: 'P' (ID: 47)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01026170514523983
    2. '.' → logprob: -5.010261535644531
    3. 'for' → logprob: -6.885261535644531
    4. '[:]' → logprob: -6.885261535644531
    5. ':
' → logprob: -7.510261535644531
    6. '(' → logprob: -8.385261535644531
    7. ')' → logprob: -8.635261535644531
    8. ' for' → logprob: -8.760261535644531
    9. ',' → logprob: -9.510261535644531
    10. '[' → logprob: -10.010261535644531

Token 7: '=[]
' (ID: 63466)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2471589798224159e-05
    2. '.' → logprob: -12.750012397766113
    3. 'print' → logprob: -13.375012397766113
    4. '(r' → logprob: -13.500012397766113
    5. 'a' → logprob: -13.625012397766113
    6. 'P' → logprob: -13.750012397766113
    7. 'e' → logprob: -14.000012397766113
    8. 'R' → logprob: -14.125012397766113
    9. 'o' → logprob: -14.625012397766113
    10. 'u' → logprob: -14.875012397766113

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001414426224073395
    2. ' for' → logprob: -9.125141143798828
    3. 'f' → logprob: -11.000141143798828
    4. 'x' → logprob: -11.750141143798828
    5. '[' → logprob: -13.125141143798828
    6. '.' → logprob: -13.375141143798828
    7. '.for' → logprob: -13.875141143798828
    8. '(' → logprob: -14.000141143798828
    9. 'i' → logprob: -14.625141143798828
    10. '_' → logprob: -15.000141143798828

Token 9: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005658690817654133
    2. ' ' → logprob: -5.8806586265563965
    3. 'i' → logprob: -6.0056586265563965
    4. ' x' → logprob: -8.755659103393555
    5. '_' → logprob: -9.130659103393555
    6. ' _' → logprob: -9.130659103393555
    7. '  ' → logprob: -12.380659103393555
    8. 'x' → logprob: -12.505659103393555
    9. ' ' → logprob: -13.755659103393555
    10. '	i' → logprob: -14.630659103393555

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009938588365912437
    2. 'in' → logprob: -4.634938716888428
    3. ' ' → logprob: -8.63493824005127
    4. '	in' → logprob: -14.00993824005127
    5. 'import' → logprob: -14.13493824005127
    6. 'n' → logprob: -14.75993824005127
    7. ',' → logprob: -15.13493824005127
    8. '  ' → logprob: -15.13493824005127
    9. 'range' → logprob: -15.38493824005127
    10. 'space' → logprob: -15.50993824005127

Token 11: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002448661718517542
    2. ' x' → logprob: -6.252448558807373
    3. 'range' → logprob: -7.627448558807373
    4. ' range' → logprob: -10.377449035644531
    5. ' xrange' → logprob: -14.002449035644531
    6. '(x' → logprob: -14.127449035644531
    7. ' ' → logprob: -15.627449035644531
    8. '	x' → logprob: -16.12744903564453
    9. '<x' → logprob: -17.62744903564453
    10. '{x' → logprob: -17.75244903564453

Token 12: ':P' (ID: 125019)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001698094274615869
    2. ' :' → logprob: -8.75016975402832
    3. ':**' → logprob: -12.87516975402832
    4. '[:]' → logprob: -13.12516975402832
    5. ',:' → logprob: -14.00016975402832
    6. ':s' → logprob: -14.25016975402832
    7. ':
' → logprob: -14.37516975402832
    8. ':n' → logprob: -14.75016975402832
    9. ':list' → logprob: -14.75016975402832
    10. ':]' → logprob: -14.87516975402832

Token 13: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00688101164996624
    2. 'append' → logprob: -5.131881237030029
    3. '.extend' → logprob: -7.881881237030029
    4. '.' → logprob: -8.256880760192871
    5. '_append' → logprob: -9.756880760192871
    6. 'ush' → logprob: -9.756880760192871
    7. 'P' → logprob: -9.881880760192871
    8. 'Append' → logprob: -10.381880760192871
    9. '	append' → logprob: -11.006880760192871
    10. 'USH' → logprob: -11.256880760192871

Token 14: '=[[' (ID: 112637)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39032766222953796
    2. '=[' → logprob: -1.1403276920318604
    3. '=[]' → logprob: -6.515327453613281
    4. '[' → logprob: -7.140327453613281
    5. '=['' → logprob: -7.140327453613281
    6. '=list' → logprob: -9.265327453613281
    7. '=x' → logprob: -9.640327453613281
    8. '=p' → logprob: -9.640327453613281
    9. '=["' → logprob: -10.765327453613281
    10. '=P' → logprob: -10.765327453613281

Token 15: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016947325319051743
    2. '_' → logprob: -4.891947269439697
    3. '_]' → logprob: -4.891947269439697
    4. '0' → logprob: -6.891947269439697
    5. '(int' → logprob: -8.516947746276855
    6. 'input' → logprob: -8.641947746276855
    7. '_int' → logprob: -9.641947746276855
    8. ' int' → logprob: -9.891947746276855
    9. 'list' → logprob: -10.141947746276855
    10. '[int' → logprob: -10.266947746276855

Token 16: '(i' (ID: 3649)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023291943594813347
    2. '(' → logprob: -3.773291826248169
    3. 'input' → logprob: -10.52329158782959
    4. ' (' → logprob: -11.64829158782959
    5. ' input' → logprob: -12.89829158782959
    6. ',input' → logprob: -13.27329158782959
    7. ' ' → logprob: -13.77329158782959
    8. '(x' → logprob: -13.77329158782959
    9. '(
' → logprob: -13.89829158782959
    10. '(in' → logprob: -14.02329158782959

Token 17: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10384615510702133
    2. ')]' → logprob: -3.2288460731506348
    3. '())' → logprob: -3.7288460731506348
    4. ')])' → logprob: -4.103846073150635
    5. '(input' → logprob: -4.728846073150635
    6. 'input' → logprob: -4.728846073150635
    7. '(x' → logprob: -8.353846549987793
    8. '),' → logprob: -8.978846549987793
    9. '()' → logprob: -9.603846549987793
    10. '()]' → logprob: -9.853846549987793

Token 18: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8877370953559875
    2. '()' → logprob: -1.5127370357513428
    3. '()]' → logprob: -2.0127370357513428
    4. '(input' → logprob: -2.3877370357513428
    5. 'input' → logprob: -2.7627370357513428
    6. ' for' → logprob: -3.6377370357513428
    7. ']' → logprob: -3.7627370357513428
    8. ')' → logprob: -5.262737274169922
    9. ',input' → logprob: -5.512737274169922
    10. '(' → logprob: -5.512737274169922

Token 19: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.05580795928835869
    2. 'input' → logprob: -2.9308080673217773
    3. ' range' → logprob: -8.180808067321777
    4. '_' → logprob: -8.805808067321777
    5. '<|end|>' → logprob: -8.805808067321777
    6. ' ' → logprob: -9.180808067321777
    7. ' in' → logprob: -9.555808067321777
    8. '_input' → logprob: -9.805808067321777
    9. 'range' → logprob: -10.430808067321777
    10. '<|end|>' → logprob: -10.555808067321777

Token 20: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2229882776737213
    2. 'input' → logprob: -1.722988247871399
    3. ' in' → logprob: -4.472988128662109
    4. '(input' → logprob: -4.847988128662109
    5. '=input' → logprob: -6.722988128662109
    6. '(' → logprob: -8.59798812866211
    7. ',input' → logprob: -8.59798812866211
    8. ' ' → logprob: -8.84798812866211
    9. '<|end|>' → logprob: -9.47298812866211
    10. '	input' → logprob: -9.47298812866211

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07891127467155457
    2. ' input' → logprob: -2.578911304473877
    3. '(input' → logprob: -11.578910827636719
    4. 'range' → logprob: -12.578910827636719
    5. ' ' → logprob: -12.828910827636719
    6. ',input' → logprob: -14.203910827636719
    7. '=input' → logprob: -14.203910827636719
    8. 'list' → logprob: -14.703910827636719
    9. '	input' → logprob: -14.703910827636719
    10. '.input' → logprob: -14.828910827636719

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007642415002919734
    2. '()' → logprob: -7.2507643699646
    3. '()]' → logprob: -9.875763893127441
    4. '()].' → logprob: -13.875763893127441
    5. ' ().' → logprob: -14.125763893127441
    6. '(' → logprob: -14.250763893127441
    7. '())' → logprob: -15.625763893127441
    8. '('' → logprob: -16.250764846801758
    9. '()[' → logprob: -16.625764846801758
    10. '()][' → logprob: -16.875764846801758

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009443380986340344
    2. 'strip' → logprob: -7.000944137573242
    3. 'rstrip' → logprob: -10.625944137573242
    4. ' split' → logprob: -11.750944137573242
    5. 'spl' → logprob: -14.625944137573242
    6. 's' → logprob: -16.125944137573242
    7. 'sp' → logprob: -16.125944137573242
    8. '(split' → logprob: -16.750944137573242
    9. 'plit' → logprob: -17.875944137573242
    10. 'replace' → logprob: -17.875944137573242

Token 24: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.07917706668376923
    2. '()' → logprob: -2.579177141189575
    3. '(' → logprob: -8.329176902770996
    4. '())' → logprob: -10.954176902770996
    5. '('' → logprob: -11.579176902770996
    6. '()],' → logprob: -12.204176902770996
    7. '()][' → logprob: -12.954176902770996
    8. '()))' → logprob: -13.329176902770996
    9. '()>' → logprob: -13.329176902770996
    10. '()].' → logprob: -13.579176902770996

Token 25: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.5779786705970764
    2. '()]' → logprob: -1.3279786109924316
    3. '()' → logprob: -1.9529786109924316
    4. ']' → logprob: -3.5779786109924316
    5. ']]]' → logprob: -6.452978610992432
    6. '']]' → logprob: -7.452978610992432
    7. ']])' → logprob: -7.702978610992432
    8. ')]' → logprob: -7.827978610992432
    9. '])]' → logprob: -7.952978610992432
    10. '(' → logprob: -7.952978610992432

Token 26: '_=' (ID: 115480)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13401123881340027
    2. '\n' → logprob: -2.7590112686157227
    3. '[' → logprob: -3.6340112686157227
    4. '<|end|>' → logprob: -4.759011268615723
    5. '[
' → logprob: -5.634011268615723
    6. '
' → logprob: -5.759011268615723
    7. '```' → logprob: -6.134011268615723
    8. ')' → logprob: -6.509011268615723
    9. '[n' → logprob: -6.509011268615723
    10. ' ' → logprob: -6.509011268615723

Token 27: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.5295436382293701
    2. 'sum' → logprob: -1.5295436382293701
    3. '0' → logprob: -1.9045436382293701
    4. 'sorted' → logprob: -2.52954363822937
    5. 'x' → logprob: -2.65454363822937
    6. 'len' → logprob: -2.77954363822937
    7. 'P' → logprob: -3.27954363822937
    8. '[' → logprob: -3.40454363822937
    9. 'min' → logprob: -3.40454363822937
    10. 'range' → logprob: -3.77954363822937

Token 28: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01956753432750702
    2. ' for' → logprob: -4.519567489624023
    3. '
' → logprob: -5.269567489624023
    4. '<|end|>' → logprob: -6.019567489624023
    5. 'n' → logprob: -7.269567489624023
    6. 'x' → logprob: -9.519567489624023
    7. ' 
' → logprob: -10.519567489624023
    8. ' ' → logprob: -11.019567489624023
    9. '\n' → logprob: -11.144567489624023
    10. 't' → logprob: -11.269567489624023

Token 29: 'P' (ID: 47)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0026401029899716377
    2. 'f' → logprob: -6.377640247344971
    3. 'n' → logprob: -8.127639770507812
    4. ' for' → logprob: -8.502639770507812
    5. 'x' → logprob: -8.752639770507812
    6. 'r' → logprob: -9.377639770507812
    7. 'd' → logprob: -9.877639770507812
    8. 't' → logprob: -10.377639770507812
    9. 'm' → logprob: -10.377639770507812
    10. 'i' → logprob: -10.627639770507812

Token 30: '+' (ID: 10)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: '=[' (ID: 13370)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33476683497428894
    2. '[' → logprob: -2.0847668647766113
    3. '.append' → logprob: -2.5847668647766113
    4. '<|end|>' → logprob: -3.4597668647766113
    5. '.pop' → logprob: -3.8347668647766113
    6. 'append' → logprob: -4.959766864776611
    7. '[len' → logprob: -5.209766864776611
    8. '[-' → logprob: -5.959766864776611
    9. '[end' → logprob: -5.959766864776611
    10. '+' → logprob: -6.209766864776611

Token 32: 'P' (ID: 47)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.032209403812885284
    2. '0' → logprob: -5.407209396362305
    3. '[P' → logprob: -5.407209396362305
    4. '[max' → logprob: -5.532209396362305
    5. 'P' → logprob: -5.657209396362305
    6. '[-' → logprob: -6.032209396362305
    7. '_' → logprob: -6.407209396362305
    8. '_[' → logprob: -6.657209396362305
    9. '[x' → logprob: -6.657209396362305
    10. ' [' → logprob: -6.907209396362305

Token 33: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.9596108794212341
    2. '[_' → logprob: -0.9596108794212341
    3. '[' → logprob: -1.459610939025879
    4. '[:' → logprob: -7.959610939025879
    5. ']' → logprob: -8.209610939025879
    6. '_' → logprob: -8.334610939025879
    7. '[:-' → logprob: -9.209610939025879
    8. '_[' → logprob: -9.334610939025879
    9. '_]' → logprob: -9.459610939025879
    10. '[::-' → logprob: -9.584610939025879

Token 34: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5890360474586487
    2. '0' → logprob: -1.339035987854004
    3. '_' → logprob: -2.214035987854004
    4. '-_' → logprob: -3.464035987854004
    5. '[-' → logprob: -4.464035987854004
    6. '_-' → logprob: -4.714035987854004
    7. '_]' → logprob: -4.964035987854004
    8. '[' → logprob: -5.089035987854004
    9. '[_' → logprob: -5.214035987854004
    10. '])' → logprob: -6.839035987854004

Token 35: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.3557918667793274
    2. ']' → logprob: -1.2307918071746826
    3. '][:' → logprob: -5.605792045593262
    4. '][' → logprob: -6.480792045593262
    5. ']]

' → logprob: -7.730792045593262
    6. '[' → logprob: -7.980792045593262
    7. ']+' → logprob: -8.480792045593262
    8. ']]
' → logprob: -8.605792045593262
    9. '[:' → logprob: -8.980792045593262
    10. '']]' → logprob: -9.230792045593262

Token 36: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017925269901752472
    2. ' for' → logprob: -5.017925262451172
    3. '<|end|>' → logprob: -5.267925262451172
    4. 'while' → logprob: -5.517925262451172
    5. '
' → logprob: -7.017925262451172
    6. 'n' → logprob: -7.392925262451172
    7. '\n' → logprob: -8.517925262451172
    8. ' while' → logprob: -9.267925262451172
    9. 'r' → logprob: -10.642925262451172
    10. 's' → logprob: -10.642925262451172

Token 37: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09791844338178635
    2. ' _' → logprob: -3.0979185104370117
    3. '_' → logprob: -3.7229185104370117
    4. ' ' → logprob: -4.347918510437012
    5. ' range' → logprob: -4.722918510437012
    6. 'i' → logprob: -6.347918510437012
    7. 'range' → logprob: -8.472918510437012
    8. ' in' → logprob: -9.847918510437012
    9. '_i' → logprob: -10.597918510437012
    10. ' j' → logprob: -10.972918510437012

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2523941397666931
    2. 'in' → logprob: -1.502394199371338
    3. ' ' → logprob: -8.00239372253418
    4. '	in' → logprob: -10.62739372253418
    5. '_' → logprob: -10.75239372253418
    6. 'range' → logprob: -11.00239372253418
    7. ',' → logprob: -11.12739372253418
    8. '_in' → logprob: -11.37739372253418
    9. 'In' → logprob: -12.37739372253418
    10. 'n' → logprob: -12.50239372253418

Token 39: ' x' (ID: 1215)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2536214292049408
    2. 'range' → logprob: -1.5036214590072632
    3. 'x' → logprob: -7.003621578216553
    4. ' x' → logprob: -7.253621578216553
    5. ' ' → logprob: -10.253621101379395
    6. ' xrange' → logprob: -11.128621101379395
    7. ' P' → logprob: -11.628621101379395
    8. 'P' → logprob: -12.503621101379395
    9. '  ' → logprob: -12.628621101379395
    10. 'r' → logprob: -13.003621101379395

Token 40: ':_' (ID: 54242)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034774013329297304
    2. '+' → logprob: -8.625348091125488
    3. '[:-' → logprob: -10.000348091125488
    4. ':
' → logprob: -10.125348091125488
    5. '[' → logprob: -10.625348091125488
    6. '+:' → logprob: -11.000348091125488
    7. ' :' → logprob: -11.375348091125488
    8. '[:]' → logprob: -12.000348091125488
    9. '[::-' → logprob: -13.125348091125488
    10. ',' → logprob: -13.250348091125488

Token 41: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05477134883403778
    2. ' +=' → logprob: -3.1797714233398438
    3. '+=(' → logprob: -5.179771423339844
    4. '=' → logprob: -5.679771423339844
    5. '-=' → logprob: -7.304771423339844
    6. '+' → logprob: -7.429771423339844
    7. ']+=' → logprob: -8.554771423339844
    8. '-' → logprob: -8.804771423339844
    9. ' ' → logprob: -8.804771423339844
    10. 'P' → logprob: -8.929771423339844

Token 42: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.20503784716129303
    2. 'abs' → logprob: -2.455037832260132
    3. 'max' → logprob: -2.580037832260132
    4. '(P' → logprob: -4.080038070678711
    5. ' P' → logprob: -6.455038070678711
    6. 'min' → logprob: -6.955038070678711
    7. '(max' → logprob: -7.080038070678711
    8. '(abs' → logprob: -7.080038070678711
    9. ' abs' → logprob: -7.455038070678711
    10. ' max' → logprob: -7.580038070678711

Token 43: '[j' (ID: 7895)
  Prédit: '[_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[_' → logprob: -0.1802307367324829
    2. '[j' → logprob: -2.0552306175231934
    3. '[' → logprob: -3.4302306175231934
    4. '[-' → logprob: -5.680230617523193
    5. '[i' → logprob: -7.930230617523193
    6. '[len' → logprob: -9.055231094360352
    7. '[x' → logprob: -9.180231094360352
    8. ' [_' → logprob: -9.555231094360352
    9. '[[' → logprob: -10.430231094360352
    10. '```' → logprob: -10.555231094360352

Token 44: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004424301441758871
    2. '[' → logprob: -5.879424095153809
    3. '+' → logprob: -7.379424095153809
    4. ']' → logprob: -8.379424095153809
    5. '-' → logprob: -8.504424095153809
    6. '][-' → logprob: -8.629424095153809
    7. ' ][' → logprob: -9.254424095153809
    8. '0' → logprob: -9.754424095153809
    9. '1' → logprob: -10.129424095153809
    10. '"][' → logprob: -10.254424095153809

Token 45: '0' (ID: 15)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4559805989265442
    2. '1' → logprob: -1.5809805393218994
    3. '0' → logprob: -1.9559805393218994
    4. '-' → logprob: -4.0809807777404785
    5. '2' → logprob: -7.4559807777404785
    6. ']' → logprob: -7.8309807777404785
    7. 'x' → logprob: -8.20598030090332
    8. ' j' → logprob: -8.95598030090332
    9. ' ' → logprob: -9.08098030090332
    10. '-j' → logprob: -9.08098030090332

Token 46: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.08908253908157349
    2. ']' → logprob: -2.5890824794769287
    3. ']*(' → logprob: -5.089082717895508
    4. '*' → logprob: -5.839082717895508
    5. ']-' → logprob: -7.589082717895508
    6. ']+' → logprob: -8.589082717895508
    7. '-' → logprob: -9.714082717895508
    8. '+' → logprob: -9.714082717895508
    9. '<|end|>' → logprob: -9.839082717895508
    10. '[' → logprob: -10.214082717895508

Token 47: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00027468299958854914
    2. ' P' → logprob: -8.250274658203125
    3. '(P' → logprob: -12.875274658203125
    4. '	P' → logprob: -13.375274658203125
    5. '>P' → logprob: -13.375274658203125
    6. '-P' → logprob: -13.500274658203125
    7. ' ' → logprob: -13.500274658203125
    8. '  ' → logprob: -14.250274658203125
    9. '<|end|>' → logprob: -14.375274658203125
    10. '[P' → logprob: -14.625274658203125

Token 48: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.004799988120794296
    2. '[' → logprob: -5.504799842834473
    3. '```' → logprob: -7.754799842834473
    4. ''[' → logprob: -9.504799842834473
    5. '[i' → logprob: -10.004799842834473
    6. 'j' → logprob: -10.379799842834473
    7. '`' → logprob: -10.629799842834473
    8. '\[' → logprob: -10.629799842834473
    9. '[s' → logprob: -11.379799842834473
    10. '[js' → logprob: -11.754799842834473

Token 49: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008828802965581417
    2. '1' → logprob: -7.625883102416992
    3. '-' → logprob: -8.875883102416992
    4. '][' → logprob: -9.375883102416992
    5. '[' → logprob: -9.625883102416992
    6. ' +' → logprob: -10.125883102416992
    7. ' ' → logprob: -11.000883102416992
    8. '```' → logprob: -11.375883102416992
    9. '+]' → logprob: -12.250883102416992
    10. '`' → logprob: -12.250883102416992

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001389400800690055
    2. '[' → logprob: -7.251389503479004
    3. '][' → logprob: -7.876389503479004
    4. '+' → logprob: -8.376389503479004
    5. ' ' → logprob: -10.126389503479004
    6. '```' → logprob: -11.876389503479004
    7. '`' → logprob: -12.251389503479004
    8. ']' → logprob: -12.376389503479004
    9. '2' → logprob: -13.376389503479004
    10. '-' → logprob: -13.438889503479004

Token 51: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5826617479324341
    2. '[' → logprob: -0.8326617479324341
    3. '1' → logprob: -5.4576616287231445
    4. '>[' → logprob: -7.8326616287231445
    5. ''][' → logprob: -7.8326616287231445
    6. ''[' → logprob: -7.8326616287231445
    7. '}[' → logprob: -7.9576616287231445
    8. ']' → logprob: -8.207661628723145
    9. '`' → logprob: -9.082661628723145
    10. '"][' → logprob: -9.332661628723145

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3438327843905427e-05
    2. '0' → logprob: -11.12502384185791
    3. ' ' → logprob: -12.93752384185791
    4. '2' → logprob: -13.87502384185791
    5. ']' → logprob: -14.06252384185791
    6. '```' → logprob: -14.37502384185791
    7. '-' → logprob: -15.00002384185791
    8. '
' → logprob: -15.25002384185791
    9. '

' → logprob: -15.37502384185791
    10. '<|end|>' → logprob: -15.50002384185791

Token 53: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004691068548709154
    2. ' -' → logprob: -5.379691123962402
    3. '<|end|>' → logprob: -10.379691123962402
    4. '-P' → logprob: -10.629691123962402
    5. '-)' → logprob: -13.004691123962402
    6. '-
' → logprob: -13.504691123962402
    7. '-python' → logprob: -13.754691123962402
    8. ')' → logprob: -14.129691123962402
    9. '-p' → logprob: -14.129691123962402
    10. '<|end|>' → logprob: -14.379691123962402

Token 54: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0015152193373069167
    2. ' P' → logprob: -6.5015153884887695
    3. '<|end|>' → logprob: -11.37651538848877
    4. '	P' → logprob: -14.62651538848877
    5. ' ' → logprob: -15.00151538848877
    6. '1' → logprob: -15.12651538848877
    7. '(P' → logprob: -16.001514434814453
    8. '>P' → logprob: -16.376514434814453
    9. '_P' → logprob: -16.876514434814453
    10. '```' → logprob: -17.251514434814453

Token 55: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0011961825657635927
    2. '[' → logprob: -6.751196384429932
    3. '<|end|>' → logprob: -11.251195907592773
    4. '[js' → logprob: -12.001195907592773
    5. ' [' → logprob: -13.376195907592773
    6. '[
' → logprob: -13.501195907592773
    7. '[s' → logprob: -14.251195907592773
    8. '[next' → logprob: -14.876195907592773
    9. 'j' → logprob: -15.126195907592773
    10. '[x' → logprob: -15.251195907592773

Token 56: '][' (ID: 2696)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20679926872253418
    2. '][' → logprob: -1.7067992687225342
    3. '[' → logprob: -5.706799507141113
    4. '1' → logprob: -7.706799507141113
    5. ' +' → logprob: -7.831799507141113
    6. '+[' → logprob: -7.831799507141113
    7. ''][' → logprob: -8.331799507141113
    8. ']' → logprob: -8.956799507141113
    9. '"][' → logprob: -9.081799507141113
    10. ' ][' → logprob: -9.456799507141113

Token 57: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16075189411640167
    2. '1' → logprob: -1.9107519388198853
    3. '+' → logprob: -7.785751819610596
    4. ' ' → logprob: -9.410752296447754
    5. ']' → logprob: -11.785752296447754
    6. '-' → logprob: -11.910752296447754
    7. '2' → logprob: -11.910752296447754
    8. '```' → logprob: -13.223252296447754
    9. '   ' → logprob: -13.598252296447754
    10. 'j' → logprob: -13.973252296447754

Token 58: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3810751140117645
    2. ']*' → logprob: -1.256075143814087
    3. ']' → logprob: -3.881075143814087
    4. '<|end|>' → logprob: -4.506074905395508
    5. ' *' → logprob: -9.506074905395508
    6. ')*' → logprob: -9.881074905395508
    7. '<|end|>' → logprob: -10.131074905395508
    8. '*j' → logprob: -10.131074905395508
    9. '*[' → logprob: -10.256074905395508
    10. ' ]' → logprob: -10.256074905395508

Token 59: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0005037044174969196
    2. '<|end|>' → logprob: -7.6255035400390625
    3. ' P' → logprob: -11.500503540039062
    4. '[' → logprob: -13.250503540039062
    5. '[P' → logprob: -14.375503540039062
    6. 'x' → logprob: -14.625503540039062
    7. '<|end|>' → logprob: -14.875503540039062
    8. '+' → logprob: -14.875503540039062
    9. 'j' → logprob: -15.500503540039062
    10. '...' → logprob: -15.875503540039062

Token 60: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.004257307853549719
    2. '+' → logprob: -5.8792572021484375
    3. '[' → logprob: -6.6292572021484375
    4. 'j' → logprob: -10.254257202148438
    5. '+j' → logprob: -10.379257202148438
    6. '[next' → logprob: -10.754257202148438
    7. '[++' → logprob: -11.379257202148438
    8. '][' → logprob: -12.129257202148438
    9. '[js' → logprob: -12.379257202148438
    10. '+[' → logprob: -12.379257202148438

Token 61: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.4868770196917467e-05
    2. ' +' → logprob: -11.000024795532227
    3. '1' → logprob: -13.000024795532227
    4. '+]' → logprob: -13.500024795532227
    5. ']' → logprob: -14.000024795532227
    6. ']+' → logprob: -14.125024795532227
    7. '][' → logprob: -14.500024795532227
    8. '[' → logprob: -14.875024795532227
    9. '+j' → logprob: -15.000024795532227
    10. '+
' → logprob: -15.000024795532227

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.750004768371582
    3. '<|end|>' → logprob: -14.000004768371582
    4. '+' → logprob: -15.125004768371582
    5. '```' → logprob: -16.500003814697266
    6. '<|end|>' → logprob: -17.000003814697266
    7. '0' → logprob: -17.187503814697266
    8. '[' → logprob: -17.312503814697266
    9. '>' → logprob: -17.625003814697266
    10. '   ' → logprob: -17.750003814697266

Token 63: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6861175894737244
    2. '][' → logprob: -0.8111175894737244
    3. '[' → logprob: -3.061117649078369
    4. '+' → logprob: -6.686117649078369
    5. '0' → logprob: -7.061117649078369
    6. '`]' → logprob: -7.061117649078369
    7. '1' → logprob: -7.811117649078369
    8. ''][' → logprob: -8.061117172241211
    9. '   ' → logprob: -8.186117172241211
    10. '[j' → logprob: -8.311117172241211

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6405310816480778e-05
    2. 'j' → logprob: -11.625016212463379
    3. ']' → logprob: -12.000016212463379
    4. ' ' → logprob: -14.375016212463379
    5. '1' → logprob: -15.250016212463379
    6. '+' → logprob: -15.750016212463379
    7. '```' → logprob: -16.625017166137695
    8. '2' → logprob: -17.125017166137695
    9. '   ' → logprob: -17.250017166137695
    10. '۰' → logprob: -17.375017166137695

Token 65: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002512071805540472
    2. ')]' → logprob: -8.750250816345215
    3. '']' → logprob: -10.625250816345215
    4. ' ]' → logprob: -11.000250816345215
    5. '}' → logprob: -11.375250816345215
    6. ')' → logprob: -11.625250816345215
    7. '+' → logprob: -11.625250816345215
    8. ']
' → logprob: -11.750250816345215
    9. ']}' → logprob: -12.625250816345215
    10. '+]' → logprob: -12.875250816345215

Token 66: 'print' (ID: 1598)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.14719508588314056
    2. ' ' → logprob: -2.5221951007843018
    3. 'print' → logprob: -3.5221951007843018
    4. ' /' → logprob: -4.772194862365723
    5. '*' → logprob: -5.022194862365723
    6. ' 
' → logprob: -6.397194862365723
    7. '  
' → logprob: -6.522194862365723
    8. ')' → logprob: -6.772194862365723
    9. '#' → logprob: -6.897194862365723
    10. '\' → logprob: -7.272194862365723

Token 67: '(_' (ID: 4963)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.02878428064286709
    2. '(' → logprob: -3.9037842750549316
    3. '(round' → logprob: -5.153784275054932
    4. '(_' → logprob: -6.528784275054932
    5. 'abs' → logprob: -8.02878475189209
    6. '(f' → logprob: -8.27878475189209
    7. '(_)' → logprob: -8.77878475189209
    8. '((' → logprob: -9.40378475189209
    9. '()' → logprob: -9.90378475189209
    10. '(int' → logprob: -10.02878475189209

Token 68: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005003194324672222
    2. ')//' → logprob: -5.880002975463867
    3. '//' → logprob: -6.255002975463867
    4. '/' → logprob: -9.755002975463867
    5. '*' → logprob: -9.755002975463867
    6. '))' → logprob: -10.130002975463867
    7. ')#' → logprob: -10.130002975463867
    8. '')' → logprob: -11.505002975463867
    9. '")' → logprob: -12.005002975463867
    10. ' )' → logprob: -12.005002975463867

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2015530914068222
    2. '.' → logprob: -1.7015531063079834
    3. ' ' → logprob: -8.951553344726562
    4. ' .' → logprob: -12.451553344726562
    5. '1' → logprob: -13.201553344726562
    6. ''.' → logprob: -13.951553344726562
    7. '.
' → logprob: -14.951553344726562
    8. '
' → logprob: -15.076553344726562
    9. '5' → logprob: -15.076553344726562
    10. '\.' → logprob: -15.639053344726562

Token 70: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00030042731668800116
    2. '5' → logprob: -9.500300407409668
    3. '2' → logprob: -9.625300407409668
    4. '1' → logprob: -10.125300407409668
    5. '```' → logprob: -10.250300407409668
    6. ' .' → logprob: -10.750300407409668
    7. '0' → logprob: -10.875300407409668
    8. ''.' → logprob: -11.375300407409668
    9. '`.' → logprob: -12.250300407409668
    10. '.
' → logprob: -12.250300407409668

Token 71: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.6240566083070007e-06
    2. '```' → logprob: -13.625001907348633
    3. '05' → logprob: -16.500001907348633
    4. '0' → logprob: -17.000001907348633
    5. 'five' → logprob: -17.125001907348633
    6. '``' → logprob: -17.750001907348633
    7. '٥' → logprob: -17.812501907348633
    8. '`' → logprob: -17.875001907348633
    9. '.' → logprob: -18.250001907348633
    10. '-' → logprob: -18.375001907348633

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1279553291387856e-05
    2. '))' → logprob: -12.250011444091797
    3. '*)' → logprob: -13.625011444091797
    4. '')' → logprob: -14.125011444091797
    5. '*' → logprob: -14.375011444091797
    6. ')
' → logprob: -14.625011444091797
    7. '```' → logprob: -14.625011444091797
    8. '`)' → logprob: -14.750011444091797
    9. ')`' → logprob: -15.250011444091797
    10. ')")' → logprob: -15.375011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 70
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 53
Précision stricte (1ère position): 41.43%
Précision adaptée (1ère position): 41.43%
Précision (top 10): 75.71%
================================================================================
