================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def merge(a):
    if len(a) == 1:
        return a, 0
    mid = len(a) // 2
    al, cnt_l, ar, cnt_r = *merge(a[:mid]), *merge(a[mid:])
    res_cnt, res_arr = 0, []
    while 0 < len(al) and 0 < len(ar):
        if al[-1] <= ar[-1]:
            res_arr.append(al.pop())
        else:
            res_arr.append(ar.pop())
            res_cnt += len(al)
    res_arr.reverse()
    return ar + al + res_arr, res_cnt + cnt_l + cnt_r

def inversion_count(a):
    return merge(a)[1]

def main():
    input()
    a = list(map(int, input().split()))
    print(inversion_count(a))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' merge' (ID: 20345)
  → Token d'amorce (pas de prédiction)

Token 2: '(a' (ID: 6271)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41126471757888794
    2. ')' → logprob: -1.1612646579742432
    3. '[' → logprob: -4.161264896392822
    4. ',)' → logprob: -5.536264896392822
    5. '.' → logprob: -6.536264896392822
    6. ',b' → logprob: -6.911264896392822
    7. 's' → logprob: -7.536264896392822
    8. ',a' → logprob: -9.036264419555664
    9. '`)' → logprob: -9.161264419555664
    10. ' ,' → logprob: -9.161264419555664

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7941268086433411
    2. ':' → logprob: -1.5441267490386963
    3. '   ' → logprob: -2.1691267490386963
    4. '(' → logprob: -2.2941267490386963
    5. '[' → logprob: -3.4191267490386963
    6. ''' → logprob: -4.169126987457275
    7. '[:]' → logprob: -4.544126987457275
    8. '_' → logprob: -4.544126987457275
    9. '\' → logprob: -5.294126987457275
    10. '(
' → logprob: -5.294126987457275

Token 5: ' if' (ID: 538)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9540326595306396
    2. '   ' → logprob: -1.3290326595306396
    3. '[' → logprob: -1.5790326595306396
    4. ' ' → logprob: -2.9540326595306396
    5. ''' → logprob: -3.5790326595306396
    6. 'a' → logprob: -3.7040326595306396
    7. '\' → logprob: -4.829032897949219
    8. '[]' → logprob: -5.454032897949219
    9. '```' → logprob: -5.579032897949219
    10. 'return' → logprob: -5.704032897949219

Token 6: ' len' (ID: 4631)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38450193405151367
    2. ' not' → logprob: -1.5095019340515137
    3. ' a' → logprob: -2.3845019340515137
    4. 'a' → logprob: -6.009501934051514
    5. '  ' → logprob: -6.384501934051514
    6. 'not' → logprob: -7.134501934051514
    7. ''' → logprob: -7.634501934051514
    8. ' len' → logprob: -8.509502410888672
    9. '"' → logprob: -9.009502410888672
    10. '<|end|>' → logprob: -10.259502410888672

Token 7: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2521129250526428
    2. '(' → logprob: -1.502112865447998
    3. ' (' → logprob: -8.752113342285156
    4. '(s' → logprob: -11.377113342285156
    5. ' ' → logprob: -13.127113342285156
    6. '```' → logprob: -13.377113342285156
    7. ')' → logprob: -13.502113342285156
    8. 'a' → logprob: -13.627113342285156
    9. '(
' → logprob: -14.002113342285156
    10. '()' → logprob: -14.127113342285156

Token 8: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013136898633092642
    2. ' )' → logprob: -6.87631368637085
    3. ')==' → logprob: -8.751314163208008
    4. '[' → logprob: -10.126314163208008
    5. ')>' → logprob: -10.376314163208008
    6. '[a' → logprob: -10.376314163208008
    7. ')>=' → logprob: -12.251314163208008
    8. ' ' → logprob: -12.626314163208008
    9. ')<=' → logprob: -12.876314163208008
    10. '>' → logprob: -13.001314163208008

Token 9: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6645302176475525
    2. ' ==' → logprob: -1.6645302772521973
    3. '>' → logprob: -2.2895302772521973
    4. ' <' → logprob: -2.4145302772521973
    5. ' <=' → logprob: -3.2895302772521973
    6. '[' → logprob: -3.9145302772521973
    7. ' ' → logprob: -4.039530277252197
    8. '==' → logprob: -4.664530277252197
    9. '<' → logprob: -5.164530277252197
    10. ')' → logprob: -5.289530277252197

Token 10: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5773062705993652
    2. '1' → logprob: -0.9523062705993652
    3. '0' → logprob: -2.9523062705993652
    4. '2' → logprob: -7.577306270599365
    5. '   ' → logprob: -11.952306747436523
    6. '  ' → logprob: -13.452306747436523
    7. '    ' → logprob: -14.577306747436523
    8. '>' → logprob: -14.577306747436523
    9. '4' → logprob: -14.952306747436523
    10. ' ' → logprob: -15.577306747436523

Token 11: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7051111459732056
    2. '1' → logprob: -0.7051111459732056
    3. '2' → logprob: -4.955111026763916
    4. ' ' → logprob: -5.330111026763916
    5. ')' → logprob: -14.955111503601074
    6. '   ' → logprob: -15.080111503601074
    7. '>' → logprob: -15.080111503601074
    8. '  ' → logprob: -15.830111503601074
    9. '```' → logprob: -16.455110549926758
    10. '3' → logprob: -16.705110549926758

Token 12: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000399925687815994
    2. ':
' → logprob: -8.750399589538574
    3. ':return' → logprob: -8.875399589538574
    4. ' :' → logprob: -9.500399589538574
    5. '):' → logprob: -11.375399589538574
    6. '':' → logprob: -12.375399589538574
    7. ':**' → logprob: -13.250399589538574
    8. '():' → logprob: -13.625399589538574
    9. '   ' → logprob: -13.625399589538574
    10. '':'' → logprob: -13.750399589538574

Token 13: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.298007071018219
    2. ':
' → logprob: -1.5480070114135742
    3. '       ' → logprob: -3.798007011413574
    4. ':return' → logprob: -4.173007011413574
    5. ' return' → logprob: -5.923007011413574
    6. 'return' → logprob: -7.173007011413574
    7. ' :
' → logprob: -7.423007011413574
    8. '    ' → logprob: -7.423007011413574
    9. ' :' → logprob: -7.673007011413574
    10. '\' → logprob: -7.673007011413574

Token 14: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4686248302459717
    2. 'return' (adapté à ' return') → logprob: -1.2186248302459717
    3. '       ' → logprob: -2.5936248302459717
    4. ':return' → logprob: -6.218625068664551
    5. '   ' → logprob: -7.468625068664551
    6. '           ' → logprob: -7.968625068664551
    7. '```' → logprob: -8.34362506866455
    8. ' ' → logprob: -8.59362506866455
    9. ' ' → logprob: -9.59362506866455
    10. '    ' → logprob: -9.96862506866455

Token 15: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2852628827095032
    2. 'a' → logprob: -1.5352628231048584
    3. ' ' → logprob: -4.0352630615234375
    4. ' None' → logprob: -4.7852630615234375
    5. 'None' → logprob: -5.9102630615234375
    6. '[a' → logprob: -6.7852630615234375
    7. '[' → logprob: -7.2852630615234375
    8. ' []' → logprob: -7.9102630615234375
    9. '_a' → logprob: -8.035263061523438
    10. ' 
' → logprob: -8.410263061523438

Token 16: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7682235836982727
    2. ':' → logprob: -1.768223524093628
    3. '
' → logprob: -2.268223524093628
    4. '\' → logprob: -2.643223524093628
    5. '\n' → logprob: -2.768223524093628
    6. ':
' → logprob: -2.893223524093628
    7. '[
' → logprob: -4.143223762512207
    8. ',' → logprob: -4.893223762512207
    9. '```' → logprob: -5.018223762512207
    10. '[:]' → logprob: -5.143223762512207

Token 17: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.247455358505249
    2. '[:]' → logprob: -1.622455358505249
    3. ' ' → logprob: -2.122455358505249
    4. '
' → logprob: -2.497455358505249
    5. '[]' → logprob: -2.497455358505249
    6. '<|end|>' → logprob: -2.997455358505249
    7. ' []' → logprob: -3.622455358505249
    8. '\n' → logprob: -3.747455358505249
    9. ' 
' → logprob: -4.247455596923828
    10. '[]
' → logprob: -4.497455596923828

Token 18: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.009417339228093624
    2. ' []' → logprob: -4.884417533874512
    3. '0' → logprob: -7.634417533874512
    4. '[' → logprob: -7.884417533874512
    5. 'a' → logprob: -7.884417533874512
    6. 'None' → logprob: -8.634417533874512
    7. 'True' → logprob: -9.134417533874512
    8. '[a' → logprob: -10.009417533874512
    9. '[]}' → logprob: -10.134417533874512
    10. '[:]' → logprob: -10.134417533874512

Token 19: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33792921900749207
    2. '\n' → logprob: -1.8379292488098145
    3. ',' → logprob: -3.0879292488098145
    4. ',
' → logprob: -4.2129292488098145
    5. '<|end|>' → logprob: -4.2129292488098145
    6. '    
' → logprob: -4.4629292488098145
    7. '   ' → logprob: -4.5879292488098145
    8. '  
' → logprob: -4.5879292488098145
    9. '\' → logprob: -4.8379292488098145
    10. ' 
' → logprob: -5.7129292488098145

Token 20: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3603961169719696
    2. '    
' → logprob: -1.735396146774292
    3. '  
' → logprob: -2.610396146774292
    4. '\n' → logprob: -3.860396146774292
    5. '   
' → logprob: -4.610395908355713
    6. '   ' → logprob: -5.235395908355713
    7. ',
' → logprob: -5.610395908355713
    8. ' 
' → logprob: -5.735395908355713
    9. '
' → logprob: -6.360395908355713
    10. '

' → logprob: -6.610395908355713

Token 21: ' mid' (ID: 6959)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.16848713159561157
    2. '
' → logprob: -2.793487071990967
    3. '  
' → logprob: -3.918487071990967
    4. '\' → logprob: -4.543487071990967
    5. '_' → logprob: -4.668487071990967
    6. '    
' → logprob: -4.918487071990967
    7. ' 
' → logprob: -4.918487071990967
    8. ' ' → logprob: -5.168487071990967
    9. '' → logprob: -5.293487071990967
    10. '```' → logprob: -5.293487071990967

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1136477068066597
    2. '=' → logprob: -2.238647699356079
    3. ' ' → logprob: -7.863647937774658
    4. ',' → logprob: -8.6136474609375
    5. ')' → logprob: -8.8636474609375
    6. '_' → logprob: -9.9886474609375
    7. '```' → logprob: -11.3636474609375
    8. '=len' → logprob: -11.4886474609375
    9. '.' → logprob: -11.8636474609375
    10. '<|end|>' → logprob: -11.8636474609375

Token 23: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.02975199744105339
    2. 'len' → logprob: -3.529752016067505
    3. '(len' → logprob: -13.779751777648926
    4. '[len' → logprob: -14.779751777648926
    5. '=len' → logprob: -17.029752731323242
    6. ' ' → logprob: -17.279752731323242
    7. '	len' → logprob: -18.279752731323242
    8. ' ' → logprob: -18.654752731323242
    9. '<len' → logprob: -18.904752731323242
    10. '```' → logprob: -18.904752731323242

Token 24: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.001930420519784093
    2. '(' → logprob: -6.251930236816406
    3. 'a' → logprob: -14.001930236816406
    4. '(s' → logprob: -15.501930236816406
    5. '/' → logprob: -15.751930236816406
    6. ')' → logprob: -16.126930236816406
    7. ' (' → logprob: -16.501930236816406
    8. '(
' → logprob: -16.626930236816406
    9. '(e' → logprob: -16.626930236816406
    10. ' ' → logprob: -17.126930236816406

Token 25: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022493419237434864
    2. ')//' → logprob: -6.627249240875244
    3. ' )' → logprob: -7.252249240875244
    4. '//' → logprob: -8.877249717712402
    5. ' //' → logprob: -9.752249717712402
    6. 'a' → logprob: -11.252249717712402
    7. '()' → logprob: -13.752249717712402
    8. '(a' → logprob: -14.627249717712402
    9. '   ' → logprob: -14.752249717712402
    10. ' ' → logprob: -14.877249717712402

Token 26: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.07938463985919952
    2. '//' → logprob: -2.5793845653533936
    3. ' ' → logprob: -8.079384803771973
    4. '```' → logprob: -9.329384803771973
    5. ')' → logprob: -10.204384803771973
    6. '`' → logprob: -10.704384803771973
    7. '   ' → logprob: -11.204384803771973
    8. ')//' → logprob: -11.954384803771973
    9. '``' → logprob: -12.704384803771973
    10. '#' → logprob: -13.204384803771973

Token 27: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '```' → logprob: -18.125030517578125
    4. '   ' → logprob: -18.500030517578125
    5. '1' → logprob: -19.875030517578125
    6. '  ' → logprob: -20.000030517578125
    7. '۲' → logprob: -20.875030517578125
    8. '    ' → logprob: -21.500030517578125
    9. '２' → logprob: -21.875030517578125
    10. '=' → logprob: -22.000030517578125

Token 28: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.125028610229492
    4. '```' → logprob: -17.375028610229492
    5. '  ' → logprob: -17.875028610229492
    6. '۲' → logprob: -19.750028610229492
    7. '    ' → logprob: -20.062528610229492
    8. '1' → logprob: -20.312528610229492
    9. '２' → logprob: -20.562528610229492
    10. '=' → logprob: -20.750028610229492

Token 29: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010391606949269772
    2. '    
' → logprob: -5.260391712188721
    3. '```' → logprob: -6.510391712188721
    4. 'newline' → logprob: -7.010391712188721
    5. '<|end|>' → logprob: -7.510391712188721
    6. '
' → logprob: -7.635391712188721
    7. '   ' → logprob: -7.885391712188721
    8. ' 
' → logprob: -8.010391235351562
    9. '  
' → logprob: -8.510391235351562
    10. 'a' → logprob: -8.510391235351562

Token 30: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0821882486343384
    2. ' ' → logprob: -1.3321882486343384
    3. ' 
' → logprob: -2.457188129425049
    4. '<|end|>' → logprob: -2.457188129425049
    5. '_' → logprob: -3.082188129425049
    6. ' a' → logprob: -3.207188129425049
    7. ' left' → logprob: -3.832188129425049
    8. 'left' → logprob: -4.082188129425049
    9. '    
' → logprob: -4.082188129425049
    10. ')' → logprob: -4.332188129425049

Token 31: ' al' (ID: 434)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.03197747841477394
    2. 'left' → logprob: -3.531977415084839
    3. ' lef' → logprob: -6.656977653503418
    4. ' l' → logprob: -8.281977653503418
    5. ' L' → logprob: -8.531977653503418
    6. 'L' → logprob: -8.531977653503418
    7. 'l' → logprob: -9.281977653503418
    8. '   ' → logprob: -10.031977653503418
    9. '	left' → logprob: -10.406977653503418
    10. ' lhs' → logprob: -10.406977653503418

Token 32: ',' (ID: 11)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.0724763497710228
    2. ' =' → logprob: -2.697476387023926
    3. ',' → logprob: -6.947476387023926
    4. '[:' → logprob: -7.822476387023926
    5. '=' → logprob: -7.947476387023926
    6. 'e' → logprob: -8.197476387023926
    7. 'l' → logprob: -8.447476387023926
    8. '_' → logprob: -8.947476387023926
    9. 'f' → logprob: -9.322476387023926
    10. '1' → logprob: -9.947476387023926

Token 33: ' cnt' (ID: 27340)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.7089182138442993
    2. ' ar' → logprob: -0.7089182138442993
    3. ' a' → logprob: -5.08391809463501
    4. '	ar' → logprob: -5.95891809463501
    5. 'a' → logprob: -6.45891809463501
    6. '   ' → logprob: -6.70891809463501
    7. 'arl' → logprob: -6.83391809463501
    8. ' ' → logprob: -6.95891809463501
    9. '_ar' → logprob: -7.45891809463501
    10. '    ' → logprob: -7.45891809463501

Token 34: '_l' (ID: 1478)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09050913900136948
    2. '=' → logprob: -3.0905091762542725
    3. ' =' → logprob: -3.2155091762542725
    4. 'l' → logprob: -8.090509414672852
    5. ' ,' → logprob: -8.215509414672852
    6. ',l' → logprob: -9.215509414672852
    7. '_left' → logprob: -9.965509414672852
    8. '_l' → logprob: -10.215509414672852
    9. ',left' → logprob: -10.465509414672852
    10. '_' → logprob: -10.840509414672852

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9905391335487366
    2. '=' → logprob: -0.9905391335487366
    3. ' =' → logprob: -1.3655390739440918
    4. 'ist' → logprob: -7.615539073944092
    5. ' ' → logprob: -7.615539073944092
    6. '_' → logprob: -8.24053955078125
    7. ' ,' → logprob: -8.61553955078125
    8. '   ' → logprob: -8.86553955078125
    9. 'eft' → logprob: -9.11553955078125
    10. ')' → logprob: -9.24053955078125

Token 36: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.30956006050109863
    2. ' =' → logprob: -1.6845600605010986
    3. 'ar' → logprob: -3.1845600605010986
    4. '=' → logprob: -4.5595598220825195
    5. ' ' → logprob: -5.3095598220825195
    6. '	ar' → logprob: -5.8095598220825195
    7. '   ' → logprob: -5.9345598220825195
    8. ' al' → logprob: -5.9345598220825195
    9. ' a' → logprob: -6.1845598220825195
    10. ' _' → logprob: -6.3095598220825195

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12523017823696136
    2. ' =' → logprob: -2.625230073928833
    3. '=' → logprob: -3.125230073928833
    4. ' ,' → logprob: -6.625230312347412
    5. ' ' → logprob: -12.125229835510254
    6. '   ' → logprob: -12.500229835510254
    7. 'l' → logprob: -13.000229835510254
    8. '  ' → logprob: -13.000229835510254
    9. '```' → logprob: -13.000229835510254
    10. 's' → logprob: -13.375229835510254

Token 38: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.3955136835575104
    2. 'cnt' → logprob: -1.395513653755188
    3. ' =' → logprob: -3.3955137729644775
    4. ' ' → logprob: -4.020513534545898
    5. ',' → logprob: -4.395513534545898
    6. ' ,' → logprob: -5.145513534545898
    7. '=' → logprob: -5.395513534545898
    8. 'count' → logprob: -6.770513534545898
    9. ' _' → logprob: -7.020513534545898
    10. '_' → logprob: -7.645513534545898

Token 39: '_r' (ID: 3442)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005617315880954266
    2. '_r' → logprob: -5.380617141723633
    3. '_l' → logprob: -7.505617141723633
    4. '_,' → logprob: -8.255617141723633
    5. '_=' → logprob: -9.505617141723633
    6. '_a' → logprob: -11.005617141723633
    7. '=' → logprob: -11.255617141723633
    8. ' _' → logprob: -11.255617141723633
    9. '_s' → logprob: -11.505617141723633
    10. '_i' → logprob: -11.630617141723633

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18002843856811523
    2. '=' → logprob: -1.8050284385681152
    3. ',' → logprob: -8.180028915405273
    4. ')' → logprob: -13.680028915405273
    5. ' ,' → logprob: -14.055028915405273
    6. ' ' → logprob: -14.180028915405273
    7. '   ' → logprob: -15.555028915405273
    8. '[' → logprob: -16.305028915405273
    9. ' ' → logprob: -16.305028915405273
    10. ')=' → logprob: -16.555028915405273

Token 41: ' *' (ID: 425)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6796518564224243
    2. 'a' → logprob: -1.3046518564224243
    3. ' *' → logprob: -2.3046517372131348
    4. '*a' → logprob: -2.3046517372131348
    5. '*' → logprob: -4.054651737213135
    6. 'merge' → logprob: -6.054651737213135
    7. ' merge' → logprob: -6.429651737213135
    8. ' ' → logprob: -7.554651737213135
    9. '(*' → logprob: -8.679652214050293
    10. '(a' → logprob: -9.679652214050293

Token 42: 'merge' (ID: 25492)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.26686742901802063
    2. ' a' → logprob: -1.7668673992156982
    3. 'merge' → logprob: -3.1418673992156982
    4. ' merge' → logprob: -4.266867637634277
    5. '*a' → logprob: -5.766867637634277
    6. '   ' → logprob: -7.516867637634277
    7. '(a' → logprob: -7.516867637634277
    8. ' ' → logprob: -7.641867637634277
    9. ' *' → logprob: -7.766867637634277
    10. '*' → logprob: -7.891867637634277

Token 43: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.3306015716807451e-05
    2. '((' → logprob: -12.50001335144043
    3. ' (' → logprob: -12.62501335144043
    4. 'merge' → logprob: -12.75001335144043
    5. '(' → logprob: -13.37501335144043
    6. 'a' → logprob: -14.25001335144043
    7. '(*' → logprob: -15.25001335144043
    8. '(
' → logprob: -15.62501335144043
    9. '   ' → logprob: -16.00001335144043
    10. '(arr' → logprob: -16.50001335144043

Token 44: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.018218543380498886
    2. '(a' → logprob: -4.518218517303467
    3. '(:' → logprob: -5.143218517303467
    4. '(mid' → logprob: -7.268218517303467
    5. '(' → logprob: -7.643218517303467
    6. '[mid' → logprob: -10.518218994140625
    7. '[' → logprob: -10.643218994140625
    8. '(al' → logprob: -10.768218994140625
    9. 'a' → logprob: -11.268218994140625
    10. '([' → logprob: -11.643218994140625

Token 45: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -4.096126576769166e-05
    2. ' mid' → logprob: -10.125041007995605
    3. '(mid' → logprob: -14.375041007995605
    4. '[mid' → logprob: -15.375041007995605
    5. ' ' → logprob: -16.50004005432129
    6. '   ' → logprob: -17.00004005432129
    7. '  ' → logprob: -19.75004005432129
    8. 'm' → logprob: -19.87504005432129
    9. '    ' → logprob: -20.50004005432129
    10. '_mid' → logprob: -20.50004005432129

Token 46: ']),' (ID: 19560)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6329619288444519
    2. '),' → logprob: -0.7579619288444519
    3. ')[' → logprob: -8.757962226867676
    4. ' ' → logprob: -9.507962226867676
    5. ' )' → logprob: -10.257962226867676
    6. ' ),' → logprob: -10.257962226867676
    7. ')*' → logprob: -11.257962226867676
    8. '*' → logprob: -12.132962226867676
    9. '()),' → logprob: -12.132962226867676
    10. '()' → logprob: -12.632962226867676

Token 47: ' *' (ID: 425)
  Prédit: ' merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' merge' → logprob: -0.6457762718200684
    2. 'merge' → logprob: -1.2707762718200684
    3. ' *' → logprob: -1.8957762718200684
    4. '*' → logprob: -3.1457762718200684
    5. ' ' → logprob: -6.895776271820068
    6. ',' → logprob: -9.020776748657227
    7. '  ' → logprob: -9.520776748657227
    8. ')' → logprob: -9.520776748657227
    9. '    ' → logprob: -9.645776748657227
    10. '.merge' → logprob: -10.020776748657227

Token 48: 'merge' (ID: 25492)
  Prédit: 'merge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.0003517894074320793
    2. ' merge' → logprob: -8.000351905822754
    3. ' ' → logprob: -11.625351905822754
    4. '   ' → logprob: -13.375351905822754
    5. '  ' → logprob: -13.375351905822754
    6. '.merge' → logprob: -13.625351905822754
    7. '*' → logprob: -13.875351905822754
    8. '```' → logprob: -14.750351905822754
    9. 'def' → logprob: -15.000351905822754
    10. 'mer' → logprob: -15.250351905822754

Token 49: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.2471589798224159e-05
    2. '(' → logprob: -11.375012397766113
    3. 'a' → logprob: -14.875012397766113
    4. '<|end|>' → logprob: -15.625012397766113
    5. '(ai' → logprob: -15.750012397766113
    6. '(
' → logprob: -15.875012397766113
    7. '```' → logprob: -16.75001335144043
    8. '((' → logprob: -17.50001335144043
    9. '(A' → logprob: -17.75001335144043
    10. '<|end|>' → logprob: -18.37501335144043

Token 50: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -4.961759259458631e-06
    2. '(mid' → logprob: -12.250004768371582
    3. '[' → logprob: -15.875004768371582
    4. ')' → logprob: -17.7500057220459
    5. '[mem' → logprob: -18.1250057220459
    6. '[:' → logprob: -18.3750057220459
    7. ')[' → logprob: -18.5000057220459
    8. '[]' → logprob: -19.5000057220459
    9. '[len' → logprob: -19.7500057220459
    10. '[:]' → logprob: -20.1250057220459

Token 51: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1189064309000969
    2. ':)' → logprob: -2.4939064979553223
    3. ':]' → logprob: -4.618906497955322
    4. ':],' → logprob: -4.993906497955322
    5. ':])
' → logprob: -5.118906497955322
    6. '):' → logprob: -5.493906497955322
    7. ')' → logprob: -6.368906497955322
    8. '])' → logprob: -7.493906497955322
    9. ':)
' → logprob: -8.743906021118164
    10. '),' → logprob: -9.868906021118164

Token 52: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5050027370452881
    2. ',' → logprob: -1.880002737045288
    3. '[' → logprob: -2.005002737045288
    4. '(a' → logprob: -3.130002737045288
    5. ' (' → logprob: -3.505002737045288
    6. ')' → logprob: -4.630002975463867
    7. '(
' → logprob: -4.880002975463867
    8. 'def' → logprob: -5.255002975463867
    9. 'a' → logprob: -5.755002975463867
    10. '=' → logprob: -6.630002975463867

Token 53: ' res' (ID: 694)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6098282337188721
    2. '[' → logprob: -1.984828233718872
    3. '(' → logprob: -2.359828233718872
    4. ' ' → logprob: -2.484828233718872
    5. ')' → logprob: -2.609828233718872
    6. ' (' → logprob: -3.859828233718872
    7. '<|end|>' → logprob: -3.984828233718872
    8. '=' → logprob: -5.359827995300293
    9. ' ,' → logprob: -5.484827995300293
    10. ' =' → logprob: -5.484827995300293

Token 54: '_cnt' (ID: 35412)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.538718044757843
    2. ',' → logprob: -0.913718044757843
    3. '=' → logprob: -4.413718223571777
    4. ' ,' → logprob: -5.788718223571777
    5. ' +=' → logprob: -9.538718223571777
    6. 's' → logprob: -9.788718223571777
    7. '[' → logprob: -10.663718223571777
    8. '_' → logprob: -10.788718223571777
    9. '   ' → logprob: -10.788718223571777
    10. ')' → logprob: -10.913718223571777

Token 55: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06385230273008347
    2. ',' → logprob: -3.313852310180664
    3. '=' → logprob: -3.688852310180664
    4. ' ,' → logprob: -7.813852310180664
    5. ' +=' → logprob: -9.938852310180664
    6. '  ' → logprob: -12.438852310180664
    7. '...' → logprob: -12.688852310180664
    8. '_' → logprob: -12.813852310180664
    9. ')' → logprob: -12.938852310180664
    10. 's' → logprob: -13.063852310180664

Token 56: ' res' (ID: 694)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5609930157661438
    2. ' =' → logprob: -1.560992956161499
    3. ' []' → logprob: -2.435992956161499
    4. 'res' → logprob: -3.810992956161499
    5. '[' → logprob: -3.810992956161499
    6. ' [' → logprob: -4.060993194580078
    7. '=' → logprob: -4.185993194580078
    8. ' res' → logprob: -4.185993194580078
    9. '0' → logprob: -4.560993194580078
    10. '[]' → logprob: -4.685993194580078

Token 57: '_arr' (ID: 25121)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.053094252943992615
    2. ',' → logprob: -3.0530941486358643
    3. '=' → logprob: -5.553094387054443
    4. 's' → logprob: -8.178093910217285
    5. '<|end|>' → logprob: -9.303093910217285
    6. '_cnt' → logprob: -10.178093910217285
    7. '  ' → logprob: -10.178093910217285
    8. '   ' → logprob: -10.303093910217285
    9. ' ,' → logprob: -10.553093910217285
    10. '_' → logprob: -11.053093910217285

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0556824766099453
    2. '=' → logprob: -2.930682420730591
    3. ',' → logprob: -7.18068265914917
    4. ' ' → logprob: -11.305682182312012
    5. ' ,' → logprob: -11.930682182312012
    6. ')' → logprob: -12.305682182312012
    7. '   ' → logprob: -12.305682182312012
    8. ' =
' → logprob: -12.430682182312012
    9. '  ' → logprob: -13.055682182312012
    10. '<|end|>' → logprob: -13.430682182312012

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25302743911743164
    2. ' ' → logprob: -1.5030274391174316
    3. ' [' → logprob: -8.253026962280273
    4. '[' → logprob: -8.378026962280273
    5. ',' → logprob: -8.878026962280273
    6. '(' → logprob: -9.253026962280273
    7. 'merge' → logprob: -9.253026962280273
    8. ' merge' → logprob: -9.628026962280273
    9. '<|end|>' → logprob: -9.628026962280273
    10. ' (' → logprob: -9.878026962280273

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008027185685932636
    2. ' ' → logprob: -7.750802516937256
    3. '[' → logprob: -8.750802993774414
    4. '(' → logprob: -9.875802993774414
    5. ',' → logprob: -10.000802993774414
    6. 'merge' → logprob: -10.125802993774414
    7. 'cnt' → logprob: -10.500802993774414
    8. '<|end|>' → logprob: -11.625802993774414
    9. '[],' → logprob: -11.875802993774414
    10. '[]' → logprob: -12.500802993774414

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18645891547203064
    2. '=' → logprob: -2.8114588260650635
    3. ' =' → logprob: -2.8114588260650635
    4. '<|end|>' → logprob: -3.4364588260650635
    5. '   ' → logprob: -4.936459064483643
    6. ' ' → logprob: -5.686459064483643
    7. ' ,' → logprob: -5.936459064483643
    8. '[' → logprob: -6.186459064483643
    9. ')' → logprob: -7.436459064483643
    10. '<|end|>' → logprob: -7.561459064483643

Token 62: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.16368518769741058
    2. ' []' → logprob: -1.9136852025985718
    3. '[' → logprob: -5.913685321807861
    4. ' [' → logprob: -7.538685321807861
    5. '[]}' → logprob: -9.663684844970703
    6. '[],' → logprob: -10.538684844970703
    7. '[]
' → logprob: -10.538684844970703
    8. '<|end|>' → logprob: -10.913684844970703
    9. '[a' → logprob: -11.038684844970703
    10. '[]>' → logprob: -11.163684844970703

Token 63: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31330302357673645
    2. '(' → logprob: -2.313302993774414
    3. '[' → logprob: -2.813302993774414
    4. '=' → logprob: -3.188302993774414
    5. ' =' → logprob: -3.688302993774414
    6. '   ' → logprob: -4.438302993774414
    7. 'a' → logprob: -4.813302993774414
    8. ')' → logprob: -4.938302993774414
    9. ' (' → logprob: -4.938302993774414
    10. 'al' → logprob: -5.688302993774414

Token 64: ' while' (ID: 2049)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18554894626140594
    2. ' ' → logprob: -2.935549020767212
    3. '=' → logprob: -3.560549020767212
    4. ' ,' → logprob: -3.685549020767212
    5. '   ' → logprob: -3.810549020767212
    6. '<|end|>' → logprob: -4.060548782348633
    7. ' =' → logprob: -4.685548782348633
    8. '[' → logprob: -5.060548782348633
    9. '  ' → logprob: -5.810548782348633
    10. ')' → logprob: -6.310548782348633

Token 65: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4672096371650696
    2. ' len' → logprob: -1.0922095775604248
    3. ' al' → logprob: -4.342209815979004
    4. 'a' → logprob: -4.842209815979004
    5. ' a' → logprob: -4.842209815979004
    6. '(len' → logprob: -5.967209815979004
    7. 'cnt' → logprob: -5.967209815979004
    8. 'al' → logprob: -6.342209815979004
    9. '<|end|>' → logprob: -7.592209815979004
    10. ' not' → logprob: -8.467209815979004

Token 66: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5344983339309692
    2. 'al' → logprob: -0.9094983339309692
    3. 'cnt' → logprob: -5.03449821472168
    4. 'ar' → logprob: -6.40949821472168
    5. ' al' → logprob: -7.28449821472168
    6. '(len' → logprob: -7.65949821472168
    7. 'res' → logprob: -7.90949821472168
    8. 'l' → logprob: -8.65949821472168
    9. ' len' → logprob: -9.15949821472168
    10. 'alit' → logprob: -9.15949821472168

Token 67: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.057444144040346146
    2. '<len' → logprob: -3.3074440956115723
    3. '<' → logprob: -4.307444095611572
    4. '   ' → logprob: -6.682444095611572
    5. '[' → logprob: -7.182444095611572
    6. 'len' → logprob: -7.432444095611572
    7. 'a' → logprob: -8.18244457244873
    8. ' <
' → logprob: -8.30744457244873
    9. 'in' → logprob: -8.43244457244873
    10. ' in' → logprob: -8.55744457244873

Token 68: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.06616552174091339
    2. 'al' → logprob: -3.4411654472351074
    3. ' len' → logprob: -3.5661654472351074
    4. ' al' → logprob: -6.316165447235107
    5. 'cnt' → logprob: -6.941165447235107
    6. 'mid' → logprob: -7.441165447235107
    7. '(len' → logprob: -9.691165924072266
    8. 'a' → logprob: -9.941165924072266
    9. 'l' → logprob: -10.066165924072266
    10. ' mid' → logprob: -10.441165924072266

Token 69: '(al' (ID: 34063)
  Prédit: '(al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(al' → logprob: -0.27441760897636414
    2. '(a' → logprob: -1.5244176387786865
    3. 'al' → logprob: -4.649417400360107
    4. '(ar' → logprob: -5.274417400360107
    5. '(res' → logprob: -5.899417400360107
    6. 'a' → logprob: -6.024417400360107
    7. ' al' → logprob: -6.649417400360107
    8. 'ar' → logprob: -7.649417400360107
    9. 'res' → logprob: -8.149417877197266
    10. '(' → logprob: -8.774417877197266

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.404775470495224
    2. ' and' → logprob: -1.1547755002975464
    3. 'and' → logprob: -4.529775619506836
    4. ' )' → logprob: -5.279775619506836
    5. '>' → logprob: -6.529775619506836
    6. ')>' → logprob: -8.279775619506836
    7. ' >' → logprob: -9.904775619506836
    8. '),' → logprob: -11.029775619506836
    9. '[' → logprob: -11.654775619506836
    10. ' ' → logprob: -11.779775619506836

Token 71: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01151448953896761
    2. 'and' → logprob: -4.511514663696289
    3. '>' → logprob: -8.136514663696289
    4. ' or' → logprob: -9.511514663696289
    5. ' >' → logprob: -10.261514663696289
    6. ' ' → logprob: -10.636514663696289
    7. '    ' → logprob: -10.761514663696289
    8. '        ' → logprob: -12.136514663696289
    9. '   ' → logprob: -12.386514663696289
    10. '[' → logprob: -13.636514663696289

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03987231105566025
    2. '0' → logprob: -3.289872407913208
    3. ' ar' → logprob: -7.164872169494629
    4. ' len' → logprob: -8.039872169494629
    5. ' al' → logprob: -8.039872169494629
    6. 'len' → logprob: -8.539872169494629
    7. ' a' → logprob: -9.789872169494629
    8. 'ar' → logprob: -10.414872169494629
    9. '  ' → logprob: -10.539872169494629
    10. '    ' → logprob: -11.289872169494629

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004131711088120937
    2. ' ' → logprob: -5.50413179397583
    3. 'ar' → logprob: -10.254131317138672
    4. 'len' → logprob: -11.504131317138672
    5. 'al' → logprob: -13.129131317138672
    6. '  ' → logprob: -14.004131317138672
    7. '>' → logprob: -14.504131317138672
    8. 'a' → logprob: -14.754131317138672
    9. '   ' → logprob: -14.754131317138672
    10. '```' → logprob: -14.941631317138672

Token 74: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6191225051879883
    2. ' >' → logprob: -1.2441225051879883
    3. '>' → logprob: -2.3691225051879883
    4. ' and' → logprob: -2.8691225051879883
    5. '<' → logprob: -4.994122505187988
    6. 'and' → logprob: -5.244122505187988
    7. '<|end|>' → logprob: -5.244122505187988
    8. ' ' → logprob: -6.494122505187988
    9. '<len' → logprob: -6.869122505187988
    10. ')' → logprob: -7.369122505187988

Token 75: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03609681501984596
    2. ' len' → logprob: -3.4110968112945557
    3. 'ar' → logprob: -6.161097049713135
    4. '(len' → logprob: -8.161096572875977
    5. ' ' → logprob: -10.911096572875977
    6. ' ar' → logprob: -11.411096572875977
    7. '=len' → logprob: -12.161096572875977
    8. '	len' → logprob: -12.536096572875977
    9. '[len' → logprob: -12.536096572875977
    10. '<len' → logprob: -12.786096572875977

Token 76: '(ar' (ID: 77717)
  Prédit: '(ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ar' → logprob: -0.001422495348379016
    2. 'ar' → logprob: -6.62642240524292
    3. '(' → logprob: -9.751422882080078
    4. ' ar' → logprob: -10.876422882080078
    5. '$ar' → logprob: -11.626422882080078
    6. '	ar' → logprob: -12.376422882080078
    7. '<|end|>' → logprob: -12.751422882080078
    8. '(arr' → logprob: -14.251422882080078
    9. '/ar' → logprob: -14.376422882080078
    10. ' (' → logprob: -14.626422882080078

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35038521885871887
    2. ')' → logprob: -1.2253851890563965
    3. ' and' → logprob: -7.1003851890563965
    4. '):
' → logprob: -8.100385665893555
    5. ' ):' → logprob: -8.600385665893555
    6. 'and' → logprob: -8.600385665893555
    7. ':' → logprob: -8.725385665893555
    8. ' )' → logprob: -9.225385665893555
    9. ')>' → logprob: -9.975385665893555
    10. '):

' → logprob: -10.350385665893555

Token 78: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6501244902610779
    2. '<|end|>' → logprob: -1.4001245498657227
    3. ' if' → logprob: -2.9001245498657227
    4. '       ' → logprob: -3.0251245498657227
    5. '   ' → logprob: -3.4001245498657227
    6. ' al' → logprob: -3.5251245498657227
    7. '    ' → logprob: -3.7751245498657227
    8. 'if' (adapté à ' if') → logprob: -4.525124549865723
    9. 'a' → logprob: -4.900124549865723
    10. '[' → logprob: -5.275124549865723

Token 80: ' al' (ID: 434)
  Prédit: ' al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' al' → logprob: -0.05528923124074936
    2. 'al' → logprob: -2.9302892684936523
    3. '	al' → logprob: -8.555289268493652
    4. ' a' → logprob: -9.305289268493652
    5. ' ' → logprob: -10.305289268493652
    6. 'a' → logprob: -10.430289268493652
    7. '<|end|>' → logprob: -10.430289268493652
    8. '    ' → logprob: -11.930289268493652
    9. ' ar' → logprob: -12.680289268493652
    10. '  ' → logprob: -12.680289268493652

Token 81: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.723973582556937e-05
    2. '[-' → logprob: -11.250017166137695
    3. ' [' → logprob: -14.375017166137695
    4. ' and' → logprob: -14.375017166137695
    5. '[
' → logprob: -14.750017166137695
    6. '```' → logprob: -14.750017166137695
    7. '0' → logprob: -15.000017166137695
    8. '<=' → logprob: -15.000017166137695
    9. '[]' → logprob: -15.000017166137695
    10. '   ' → logprob: -15.250017166137695

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012415809032972902
    2. ' ' → logprob: -10.000123977661133
    3. ']' → logprob: -10.500123977661133
    4. '-' → logprob: -10.500123977661133
    5. '```' → logprob: -11.937623977661133
    6. '   ' → logprob: -13.312623977661133
    7. '  ' → logprob: -13.437623977661133
    8. ')' → logprob: -13.500123977661133
    9. ' -' → logprob: -13.625123977661133
    10. '(' → logprob: -13.625123977661133

Token 83: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0336158461868763
    2. ' ]' → logprob: -3.783615827560425
    3. ']<=' → logprob: -5.533616065979004
    4. ']>' → logprob: -6.158616065979004
    5. '>' → logprob: -6.533616065979004
    6. ' <=' → logprob: -7.158616065979004
    7. '<=' → logprob: -7.283616065979004
    8. '[' → logprob: -8.033616065979004
    9. ']<' → logprob: -8.158616065979004
    10. '<' → logprob: -8.533616065979004

Token 84: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.36451631784439087
    2. ' >' → logprob: -1.364516258239746
    3. '<=' → logprob: -3.864516258239746
    4. ' <=' → logprob: -3.864516258239746
    5. '<' → logprob: -5.239516258239746
    6. '[' → logprob: -6.864516258239746
    7. ' <' → logprob: -7.364516258239746
    8. ' ' → logprob: -7.989516258239746
    9. ']' → logprob: -8.739516258239746
    10. ']>' → logprob: -9.864516258239746

Token 85: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.2524489760398865
    2. ' ar' → logprob: -1.5024490356445312
    3. '<|end|>' → logprob: -8.252449035644531
    4. '	ar' → logprob: -9.252449035644531
    5. '$ar' → logprob: -9.377449035644531
    6. ' ' → logprob: -9.877449035644531
    7. '(ar' → logprob: -11.752449035644531
    8. 'al' → logprob: -12.002449035644531
    9. '<|end|>' → logprob: -12.502449035644531
    10. ' al' → logprob: -13.127449035644531

Token 86: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.07898882031440735
    2. '[' → logprob: -2.578988790512085
    3. '-' → logprob: -9.828989028930664
    4. '0' → logprob: -11.203989028930664
    5. '[len' → logprob: -11.453989028930664
    6. '[]' → logprob: -12.078989028930664
    7. '   ' → logprob: -12.828989028930664
    8. '][-' → logprob: -13.453989028930664
    9. '-[' → logprob: -13.641489028930664
    10. '[
' → logprob: -13.828989028930664

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006202511489391327
    2. '-' → logprob: -5.131202697753906
    3. ']' → logprob: -9.131202697753906
    4. ' ' → logprob: -9.756202697753906
    5. '0' → logprob: -10.131202697753906
    6. ' -' → logprob: -10.631202697753906
    7. '[' → logprob: -11.256202697753906
    8. '   ' → logprob: -11.631202697753906
    9. '])' → logprob: -12.381202697753906
    10. '[-' → logprob: -13.006202697753906

Token 88: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14454172551631927
    2. ':' → logprob: -2.1445417404174805
    3. '):
' → logprob: -4.5195417404174805
    4. ' ):' → logprob: -5.6445417404174805
    5. '       ' → logprob: -6.7695417404174805
    6. ')' → logprob: -7.1445417404174805
    7. ' :' → logprob: -8.26954174041748
    8. ':
' → logprob: -8.89454174041748
    9. ' ):
' → logprob: -9.14454174041748
    10. '<|end|>' → logprob: -9.14454174041748

Token 89: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18238849937915802
    2. '       ' → logprob: -2.9323885440826416
    3. '):' → logprob: -3.0573885440826416
    4. '<|end|>' → logprob: -3.3073885440826416
    5. ':
' → logprob: -4.8073883056640625
    6. ')' → logprob: -5.1823883056640625
    7. '           ' → logprob: -5.6823883056640625
    8. '<|end|>' → logprob: -5.8073883056640625
    9. ',' → logprob: -6.3073883056640625
    10. '):
' → logprob: -6.5573883056640625

Token 90: ' res' (ID: 694)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.2062617689371109
    2. 'res' (adapté à ' res') → logprob: -2.0812618732452393
    3. ' res' → logprob: -3.2062618732452393
    4. ' ar' → logprob: -4.83126163482666
    5. '           ' → logprob: -5.70626163482666
    6. 'al' → logprob: -5.83126163482666
    7. ' al' → logprob: -6.08126163482666
    8. ')' → logprob: -6.83126163482666
    9. '```' → logprob: -7.20626163482666
    10. '       ' → logprob: -7.45626163482666

Token 91: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.00871692318469286
    2. '_cnt' → logprob: -4.883717060089111
    3. '.append' → logprob: -7.133717060089111
    4. '_ar' → logprob: -9.383716583251953
    5. '_count' → logprob: -9.883716583251953
    6. '_' → logprob: -10.508716583251953
    7. 'arr' → logprob: -11.008716583251953
    8. '_res' → logprob: -11.133716583251953
    9. '_r' → logprob: -11.383716583251953
    10. '   ' → logprob: -11.508716583251953

Token 92: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03818768262863159
    2. '.' → logprob: -3.2881877422332764
    3. '.extend' → logprob: -9.788187980651855
    4. ' .' → logprob: -9.913187980651855
    5. '.insert' → logprob: -10.288187980651855
    6. ' +=' → logprob: -13.663187980651855
    7. ' ' → logprob: -14.038187980651855
    8. ',' → logprob: -14.288187980651855
    9. '+' → logprob: -14.413187980651855
    10. '   ' → logprob: -14.538187980651855

Token 93: '(al' (ID: 34063)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.31569620966911316
    2. '(ar' → logprob: -1.5656962394714355
    3. 'al' → logprob: -3.1906962394714355
    4. '(al' → logprob: -3.9406962394714355
    5. '(' → logprob: -7.9406962394714355
    6. ' al' → logprob: -8.190695762634277
    7. ' ar' → logprob: -8.315695762634277
    8. '	ar' → logprob: -8.940695762634277
    9. '$ar' → logprob: -9.690695762634277
    10. '   ' → logprob: -9.940695762634277

Token 94: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00014895245840307325
    2. '.' → logprob: -9.00014877319336
    3. '[-' → logprob: -10.75014877319336
    4. 'pop' → logprob: -13.25014877319336
    5. ' .' → logprob: -13.62514877319336
    6. '-' → logprob: -15.25014877319336
    7. '.Pop' → logprob: -15.25014877319336
    8. ')' → logprob: -16.25014877319336
    9. ' pop' → logprob: -16.37514877319336
    10. ').' → logprob: -16.37514877319336

Token 95: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0074327001348137856
    2. '()' → logprob: -5.00743293762207
    3. ')' → logprob: -7.88243293762207
    4. '())
' → logprob: -8.88243293762207
    5. '())

' → logprob: -8.88243293762207
    6. '()-' → logprob: -10.13243293762207
    7. '())
' → logprob: -11.75743293762207
    8. '()))' → logprob: -12.75743293762207
    9. ' ())' → logprob: -12.88243293762207
    10. '()]' → logprob: -13.13243293762207

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4979645013809204
    2. ' else' → logprob: -1.4979645013809204
    3. '
' → logprob: -1.7479645013809204
    4. 'else' → logprob: -1.8729645013809204
    5. '-' → logprob: -2.622964382171631
    6. ' 
' → logprob: -2.747964382171631
    7. '           ' → logprob: -4.497964382171631
    8. ')' → logprob: -4.497964382171631
    9. '   ' → logprob: -4.622964382171631
    10. '    
' → logprob: -4.872964382171631

Token 97: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.02566436305642128
    2. 'else' (adapté à ' else') → logprob: -4.025664329528809
    3. '       ' → logprob: -5.400664329528809
    4. ' ' → logprob: -6.025664329528809
    5. ' ar' → logprob: -8.025664329528809
    6. ':
' → logprob: -10.025664329528809
    7. ' 
' → logprob: -10.275664329528809
    8. '   ' → logprob: -10.650664329528809
    9. ':' → logprob: -10.775664329528809
    10. '	else' → logprob: -11.025664329528809

Token 98: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5175811052322388
    2. '       ' → logprob: -1.3925811052322388
    3. ':
' → logprob: -2.142580986022949
    4. '   ' → logprob: -4.892580986022949
    5. ':' → logprob: -5.267580986022949
    6. ' ' → logprob: -5.642580986022949
    7. '):
' → logprob: -5.767580986022949
    8. ' res' → logprob: -5.767580986022949
    9. ' 
' → logprob: -6.267580986022949
    10. '
' → logprob: -6.267580986022949

Token 99: '           ' (ID: 352)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.07939884811639786
    2. '           ' → logprob: -2.7043988704681396
    3. ' res' → logprob: -5.0793986320495605
    4. '       ' → logprob: -5.9543986320495605
    5. 'cnt' → logprob: -8.204399108886719
    6. ' ' → logprob: -9.204399108886719
    7. '   ' → logprob: -9.829399108886719
    8. '          ' → logprob: -10.329399108886719
    9. '```' → logprob: -10.329399108886719
    10. '               ' → logprob: -10.829399108886719

Token 100: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.01325128972530365
    2. '           ' → logprob: -5.138251304626465
    3. ' res' → logprob: -5.263251304626465
    4. 'ar' → logprob: -6.513251304626465
    5. '       ' → logprob: -8.388251304626465
    6. 'cnt' → logprob: -8.513251304626465
    7. '               ' → logprob: -9.388251304626465
    8. '   ' → logprob: -10.013251304626465
    9. ' ar' → logprob: -11.388251304626465
    10. ' ' → logprob: -11.513251304626465

Token 101: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.08907360583543777
    2. '_cnt' → logprob: -2.464073657989502
    3. '_count' → logprob: -9.714073181152344
    4. 'arr' → logprob: -10.214073181152344
    5. 'cnt' → logprob: -11.214073181152344
    6. 'Arr' → logprob: -11.964073181152344
    7. '_array' → logprob: -12.214073181152344
    8. 'r' → logprob: -13.214073181152344
    9. 'Cnt' → logprob: -13.339073181152344
    10. '	arr' → logprob: -13.714073181152344

Token 102: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00798986665904522
    2. '.extend' → logprob: -4.882989883422852
    3. '.' → logprob: -7.882989883422852
    4. '+=' → logprob: -13.007989883422852
    5. ' .' → logprob: -13.257989883422852
    6. '<|end|>' → logprob: -14.382989883422852
    7. ' +=' → logprob: -14.757989883422852
    8. 'append' → logprob: -14.757989883422852
    9. '.setdefault' → logprob: -15.757989883422852
    10. ').' → logprob: -16.13298988342285

Token 103: '(ar' (ID: 77717)
  Prédit: '(ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ar' → logprob: -0.02977699227631092
    2. 'ar' → logprob: -3.5297770500183105
    3. ' ar' → logprob: -11.279776573181152
    4. '$ar' → logprob: -11.529776573181152
    5. '	ar' → logprob: -13.029776573181152
    6. '(' → logprob: -14.029776573181152
    7. '(al' → logprob: -14.404776573181152
    8. ' (' → logprob: -15.779776573181152
    9. '   ' → logprob: -16.40477752685547
    10. ''ar' → logprob: -16.65477752685547

Token 104: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00010223194840364158
    2. '.' → logprob: -9.375102043151855
    3. ' .' → logprob: -11.000102043151855
    4. 'pop' → logprob: -14.500102043151855
    5. '.append' → logprob: -16.500102996826172
    6. '[-' → logprob: -17.125102996826172
    7. '.p' → logprob: -17.375102996826172
    8. ').' → logprob: -17.625102996826172
    9. '	pop' → logprob: -17.625102996826172
    10. '(pop' → logprob: -18.500102996826172

Token 105: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.032660868018865585
    2. '())
' → logprob: -3.532660961151123
    3. '()' → logprob: -5.907660961151123
    4. ')' → logprob: -9.282660484313965
    5. '())

' → logprob: -9.657660484313965
    6. '())
' → logprob: -11.657660484313965
    7. '()),' → logprob: -12.157660484313965
    8. ' ())' → logprob: -12.282660484313965
    9. '(),' → logprob: -12.407660484313965
    10. '()
' → logprob: -12.407660484313965

Token 106: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7198112607002258
    2. '
' → logprob: -1.594811201095581
    3. ',' → logprob: -1.844811201095581
    4. '       ' → logprob: -3.219811201095581
    5. '<|end|>' → logprob: -3.844811201095581
    6. '          ' → logprob: -4.34481143951416
    7. ' 
' → logprob: -4.46981143951416
    8. ' ,' → logprob: -4.59481143951416
    9. '```' → logprob: -4.59481143951416
    10. 'cnt' → logprob: -4.59481143951416

Token 107: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.31484630703926086
    2. 'cnt' → logprob: -1.3148462772369385
    3. ' res' → logprob: -6.814846515655518
    4. ' cnt' → logprob: -7.689846515655518
    5. '
' → logprob: -11.43984603881836
    6. '_cnt' → logprob: -11.56484603881836
    7. '[cnt' → logprob: -12.68984603881836
    8. ' ' → logprob: -13.43984603881836
    9. 'count' → logprob: -14.18984603881836
    10. '       ' → logprob: -14.56484603881836

Token 108: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -3.833878508885391e-05
    2. '_count' → logprob: -11.625038146972656
    3. 'cnt' → logprob: -11.625038146972656
    4. '_' → logprob: -11.750038146972656
    5. '_arr' → logprob: -12.125038146972656
    6. ' _' → logprob: -13.375038146972656
    7. '_ct' → logprob: -14.125038146972656
    8. '+=' → logprob: -14.500038146972656
    9. '_ctr' → logprob: -14.625038146972656
    10. ' +=' → logprob: -14.750038146972656

Token 109: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.13549643754959106
    2. '+' → logprob: -2.7604963779449463
    3. '+=' → logprob: -2.8854963779449463
    4. ' +' → logprob: -4.885496616363525
    5. '<|end|>' → logprob: -11.010496139526367
    6. ']+=' → logprob: -11.510496139526367
    7. ' ' → logprob: -11.635496139526367
    8. '            ' → logprob: -12.260496139526367
    9. ' plus' → logprob: -12.385496139526367
    10. ' =' → logprob: -12.510496139526367

Token 110: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00016361083544325083
    2. ' len' → logprob: -9.375164031982422
    3. 'cnt' → logprob: -10.000164031982422
    4. '1' → logprob: -10.500164031982422
    5. '(len' → logprob: -12.625164031982422
    6. '[len' → logprob: -13.250164031982422
    7. '	len' → logprob: -15.750164031982422
    8. '<len' → logprob: -15.750164031982422
    9. ' ' → logprob: -16.125164031982422
    10. 'int' → logprob: -16.625164031982422

Token 111: '(al' (ID: 34063)
  Prédit: '(al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(al' → logprob: -7.088138227118179e-05
    2. 'al' → logprob: -9.625070571899414
    3. '(' → logprob: -13.125070571899414
    4. '	al' → logprob: -13.250070571899414
    5. ' al' → logprob: -14.250070571899414
    6. '(ar' → logprob: -16.125070571899414
    7. '(AL' → logprob: -16.875070571899414
    8. ' (' → logprob: -16.875070571899414
    9. '(a' → logprob: -17.500070571899414
    10. 'a' → logprob: -17.750070571899414

Token 112: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001454955490771681
    2. ')
' → logprob: -9.50014591217041
    3. ' )' → logprob: -9.87514591217041
    4. '())' → logprob: -11.50014591217041
    5. '<|end|>' → logprob: -12.50014591217041
    6. ')

' → logprob: -14.00014591217041
    7. '))' → logprob: -14.25014591217041
    8. '')' → logprob: -14.37514591217041
    9. '<|end|>' → logprob: -14.37514591217041
    10. '   ' → logprob: -14.87514591217041

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019866982474923134
    2. '       ' → logprob: -4.644866943359375
    3. ' 
' → logprob: -6.019866943359375
    4. '    ' → logprob: -6.394866943359375
    5. '    
' → logprob: -6.394866943359375
    6. ' ' → logprob: -6.769866943359375
    7. ' while' → logprob: -7.269866943359375
    8. '+' → logprob: -7.394866943359375
    9. ' +' → logprob: -7.894866943359375
    10. '  ' → logprob: -8.394866943359375

Token 114: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2061675786972046
    2. ' ' → logprob: -2.331167697906494
    3. '       ' → logprob: -3.706167697906494
    4. '    ' → logprob: -3.706167697906494
    5. '  ' → logprob: -4.831167697906494
    6. ' 
' → logprob: -4.831167697906494
    7. ' +' → logprob: -5.331167697906494
    8. ')' → logprob: -5.581167697906494
    9. '+' → logprob: -5.706167697906494
    10. '    
' → logprob: -6.456167697906494

Token 115: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.04336099326610565
    2. '_cnt' → logprob: -3.168360948562622
    3. 'arr' → logprob: -8.668360710144043
    4. 'cnt' → logprob: -9.793360710144043
    5. '_array' → logprob: -10.293360710144043
    6. 'ult' → logprob: -10.293360710144043
    7. '_' → logprob: -10.793360710144043
    8. '_count' → logprob: -10.918360710144043
    9. 'Arr' → logprob: -12.793360710144043
    10. '_ar' → logprob: -12.793360710144043

Token 116: '.reverse' (ID: 65426)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.24712926149368286
    2. '.reverse' → logprob: -1.997129201889038
    3. '.' → logprob: -2.497129201889038
    4. '.append' → logprob: -7.747129440307617
    5. '[::-' → logprob: -8.497129440307617
    6. '=' → logprob: -9.122129440307617
    7. '+=' → logprob: -9.372129440307617
    8. ' +=' → logprob: -9.872129440307617
    9. '+' → logprob: -11.747129440307617
    10. '.=' → logprob: -11.747129440307617

Token 117: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002669384120963514
    2. '()
' → logprob: -8.250267028808594
    3. '()
' → logprob: -12.750267028808594
    4. '()

' → logprob: -14.125267028808594
    5. ' ()' → logprob: -14.375267028808594
    6. '()`' → logprob: -14.375267028808594
    7. '(' → logprob: -15.250267028808594
    8. '())' → logprob: -16.125267028808594
    9. '()\' → logprob: -16.500267028808594
    10. '()]' → logprob: -16.625267028808594

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024932673200964928
    2. ' return' → logprob: -3.899932622909546
    3. 'return' → logprob: -5.524932861328125
    4. '    ' → logprob: -8.524932861328125
    5. ' while' → logprob: -9.524932861328125
    6. ',' → logprob: -10.649932861328125
    7. ' for' → logprob: -11.024932861328125
    8. '    
' → logprob: -11.149932861328125
    9. '<|end|>' → logprob: -11.149932861328125
    10. '  ' → logprob: -11.524932861328125

Token 119: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7149810791015625
    2. 'return' (adapté à ' return') → logprob: -0.7149810791015625
    3. ' return' → logprob: -3.8399810791015625
    4. '	return' → logprob: -10.089981079101562
    5. '    ' → logprob: -11.339981079101562
    6. ' ' → logprob: -11.464981079101562
    7. '  ' → logprob: -11.464981079101562
    8. '       ' → logprob: -12.089981079101562
    9. ')' → logprob: -12.464981079101562
    10. ':return' → logprob: -12.714981079101562

Token 120: ' ar' (ID: 646)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03804585337638855
    2. ' res' → logprob: -3.288045883178711
    3. '(res' → logprob: -13.038045883178711
    4. '   ' → logprob: -13.288045883178711
    5. ' ' → logprob: -14.913045883178711
    6. '	res' → logprob: -16.28804588317871
    7. 're' → logprob: -17.91304588317871
    8. '  ' → logprob: -18.16304588317871
    9. ',res' → logprob: -18.28804588317871
    10. '```' → logprob: -18.41304588317871

Token 121: ' +' (ID: 659)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6375777721405029
    2. ',' → logprob: -0.7625777721405029
    3. ',res' → logprob: -5.512578010559082
    4. ' res' → logprob: -8.137578010559082
    5. 'ar' → logprob: -8.512578010559082
    6. '[::-' → logprob: -9.637578010559082
    7. '[],' → logprob: -9.762578010559082
    8. 'arr' → logprob: -9.887578010559082
    9. '+' → logprob: -10.012578010559082
    10. '```' → logprob: -10.387578010559082

Token 122: ' al' (ID: 434)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005566940177232027
    2. 'al' → logprob: -5.3805670738220215
    3. ' res' → logprob: -7.0055670738220215
    4. ' al' → logprob: -10.755566596984863
    5. 'ar' → logprob: -12.130566596984863
    6. '[' → logprob: -12.630566596984863
    7. '   ' → logprob: -13.005566596984863
    8. 're' → logprob: -13.630566596984863
    9. ' ' → logprob: -13.630566596984863
    10. '[]' → logprob: -14.630566596984863

Token 123: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032366468803957105
    2. ',res' → logprob: -8.125323295593262
    3. 'res' → logprob: -10.750323295593262
    4. ' ,' → logprob: -12.250323295593262
    5. '[::-' → logprob: -14.750323295593262
    6. ',
' → logprob: -15.000323295593262
    7. ',len' → logprob: -15.250323295593262
    8. '[],' → logprob: -16.250324249267578
    9. ',count' → logprob: -16.750324249267578
    10. ' res' → logprob: -16.750324249267578

Token 124: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0001931696751853451
    2. ' res' → logprob: -8.62519359588623
    3. '[' → logprob: -11.25019359588623
    4. '(res' → logprob: -15.62519359588623
    5. 'list' → logprob: -16.125192642211914
    6. '   ' → logprob: -16.500192642211914
    7. 're' → logprob: -16.625192642211914
    8. '	res' → logprob: -17.375192642211914
    9. ' [' → logprob: -17.500192642211914
    10. ' ' → logprob: -18.125192642211914

Token 125: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.25679004192352295
    2. '_cnt' → logprob: -1.506790041923523
    3. '_' → logprob: -5.6317901611328125
    4. 'arr' → logprob: -7.6317901611328125
    5. '_count' → logprob: -8.881790161132812
    6. '_res' → logprob: -9.256790161132812
    7. '_val' → logprob: -9.631790161132812
    8. ''_' → logprob: -9.881790161132812
    9. '_ar' → logprob: -10.006790161132812
    10. '```' → logprob: -10.381790161132812

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.048449158668518
    2. '[' → logprob: -1.173449158668518
    3. '<|end|>' → logprob: -1.923449158668518
    4. ')' → logprob: -2.0484490394592285
    5. ':' → logprob: -3.4234490394592285
    6. '(' → logprob: -4.6734490394592285
    7. 'def' → logprob: -5.2984490394592285
    8. '<|end|>' → logprob: -5.6734490394592285
    9. '(
' → logprob: -6.1734490394592285
    10. '   ' → logprob: -6.4234490394592285

Token 127: ' res' (ID: 694)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.6226139664649963
    2. 'cnt' → logprob: -0.8726139664649963
    3. 'res' → logprob: -3.6226139068603516
    4. ' res' → logprob: -3.9976139068603516
    5. '(cnt' → logprob: -8.747613906860352
    6. '   ' → logprob: -9.372613906860352
    7. ' ' → logprob: -9.497613906860352
    8. '    ' → logprob: -10.122613906860352
    9. '0' → logprob: -10.247613906860352
    10. '  ' → logprob: -10.497613906860352

Token 128: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -0.0010317382402718067
    2. '_arr' → logprob: -7.251031875610352
    3. 'cnt' → logprob: -8.501031875610352
    4. '_r' → logprob: -10.376031875610352
    5. '_l' → logprob: -10.501031875610352
    6. '_c' → logprob: -11.001031875610352
    7. 'r' → logprob: -11.376031875610352
    8. 'arr' → logprob: -11.751031875610352
    9. '_' → logprob: -12.751031875610352
    10. 'Cnt' → logprob: -12.876031875610352

Token 129: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.018164223060011864
    2. ' cnt' → logprob: -4.018164157867432
    3. '(cnt' → logprob: -11.76816463470459
    4. 'res' → logprob: -12.26816463470459
    5. 'count' → logprob: -14.39316463470459
    6. '	cnt' → logprob: -14.89316463470459
    7. ' res' → logprob: -15.26816463470459
    8. ' ' → logprob: -15.51816463470459
    9. '   ' → logprob: -15.51816463470459
    10. '[cnt' → logprob: -15.89316463470459

Token 131: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -9.73446003627032e-05
    2. '_r' → logprob: -9.250097274780273
    3. '_' → logprob: -13.625097274780273
    4. 'l' → logprob: -18.000097274780273
    5. '```' → logprob: -19.250097274780273
    6. '_lr' → logprob: -19.375097274780273
    7. ' _' → logprob: -19.750097274780273
    8. '_ll' → logprob: -19.875097274780273
    9. '_
' → logprob: -20.875097274780273
    10. 'r' → logprob: -21.125097274780273

Token 132: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31544196605682373
    2. ' +' → logprob: -1.8154419660568237
    3. '+' → logprob: -2.3154420852661133
    4. ' ,' → logprob: -4.815442085266113
    5. '+r' → logprob: -8.315442085266113
    6. ' ' → logprob: -8.690442085266113
    7. '```' → logprob: -8.815442085266113
    8. ',r' → logprob: -9.815442085266113
    9. ')' → logprob: -9.940442085266113
    10. 'r' → logprob: -10.190442085266113

Token 133: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3132915794849396
    2. ' cnt' → logprob: -1.3132915496826172
    3. '	cnt' → logprob: -11.313291549682617
    4. '(cnt' → logprob: -11.563291549682617
    5. ' ' → logprob: -12.438291549682617
    6. '[cnt' → logprob: -13.563291549682617
    7. '_cnt' → logprob: -13.813291549682617
    8. '   ' → logprob: -14.188291549682617
    9. '  ' → logprob: -15.188291549682617
    10. 'counter' → logprob: -15.313291549682617

Token 134: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -2.236549335066229e-05
    2. 'r' → logprob: -10.750021934509277
    3. ' _' → logprob: -14.750021934509277
    4. '_' → logprob: -14.750021934509277
    5. '<|end|>' → logprob: -17.375022888183594
    6. '	r' → logprob: -17.500022888183594
    7. '_rhs' → logprob: -17.875022888183594
    8. '   ' → logprob: -18.000022888183594
    9. '_c' → logprob: -18.500022888183594
    10. '\' → logprob: -18.625022888183594

Token 135: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: 'def' (ID: 1314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9519045352935791
    2. ')' → logprob: -1.451904535293579
    3. '[' → logprob: -1.451904535293579
    4. '(' → logprob: -2.451904535293579
    5. ':' → logprob: -3.826904535293579
    6. ' ' → logprob: -4.076904296875
    7. '<|end|>' → logprob: -4.576904296875
    8. '_' → logprob: -5.951904296875
    9. 'Correct' → logprob: -6.826904296875
    10. '```' → logprob: -6.951904296875

Token 137: ' inversion' (ID: 70924)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5368333458900452
    2. ' main' → logprob: -1.1618332862854004
    3. ' merge' → logprob: -2.6618332862854004
    4. ' reverse' → logprob: -4.5368332862854
    5. '_count' → logprob: -5.9118332862854
    6. ' merges' → logprob: -5.9118332862854
    7. ' inversion' → logprob: -6.0368332862854
    8. ' solve' → logprob: -6.0368332862854
    9. ' ' → logprob: -6.4118332862854
    10. 'count' → logprob: -6.4118332862854

Token 138: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0005623269826173782
    2. '_counter' → logprob: -8.37556266784668
    3. 's' → logprob: -8.75056266784668
    4. '(arr' → logprob: -9.75056266784668
    5. '_array' → logprob: -10.00056266784668
    6. '(a' → logprob: -11.00056266784668
    7. 'Count' → logprob: -11.12556266784668
    8. '_arr' → logprob: -12.25056266784668
    9. 'a' → logprob: -12.50056266784668
    10. '_sum' → logprob: -12.50056266784668

Token 139: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.008517293259501457
    2. '(' → logprob: -5.008517265319824
    3. '(arr' → logprob: -6.383517265319824
    4. '(array' → logprob: -9.383517265319824
    5. '(lst' → logprob: -11.008517265319824
    6. '(n' → logprob: -12.883517265319824
    7. '(x' → logprob: -13.508517265319824
    8. '(A' → logprob: -13.758517265319824
    9. '(nums' → logprob: -13.758517265319824
    10. ' (' → logprob: -13.883517265319824

Token 140: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013338132994249463
    2. '):
' → logprob: -7.126333713531494
    3. ')' → logprob: -7.876333713531494
    4. '(a' → logprob: -9.376334190368652
    5. ':' → logprob: -9.876334190368652
    6. '[]):' → logprob: -13.001334190368652
    7. 'a' → logprob: -13.251334190368652
    8. '):

' → logprob: -13.376334190368652
    9. '):
' → logprob: -13.501334190368652
    10. '(' → logprob: -13.501334190368652

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000344640837283805
    2. ' return' → logprob: -8.625344276428223
    3. ',' → logprob: -9.750344276428223
    4. ' a' → logprob: -10.750344276428223
    5. 'return' → logprob: -11.125344276428223
    6. ' arr' → logprob: -11.250344276428223
    7. '    
' → logprob: -11.750344276428223
    8. ' array' → logprob: -11.875344276428223
    9. 'a' → logprob: -12.000344276428223
    10. ' result' → logprob: -12.000344276428223

Token 142: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6128761172294617
    2. ' sorted' → logprob: -1.8628761768341064
    3. ' res' → logprob: -2.4878761768341064
    4. ' return' → logprob: -2.6128761768341064
    5. ' merged' → logprob: -2.8628761768341064
    6. 'sorted' → logprob: -3.8628761768341064
    7. '_,' → logprob: -4.362875938415527
    8. 'return' (adapté à ' return') → logprob: -4.487875938415527
    9. ' result' → logprob: -4.612875938415527
    10. 'res' → logprob: -4.737875938415527

Token 143: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.5231571793556213
    2. ' merge' → logprob: -0.8981571793556213
    3. 'len' → logprob: -11.773157119750977
    4. '   ' → logprob: -11.773157119750977
    5. ' ' → logprob: -12.148157119750977
    6. '*' → logprob: -12.898157119750977
    7. '0' → logprob: -12.898157119750977
    8. ' len' → logprob: -13.148157119750977
    9. 'a' → logprob: -13.773157119750977
    10. 'mer' → logprob: -14.273157119750977

Token 144: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00020473242329899222
    2. '(' → logprob: -8.625205039978027
    3. '<|end|>' → logprob: -11.125205039978027
    4. '(len' → logprob: -12.750205039978027
    5. ' (' → logprob: -13.625205039978027
    6. ')(' → logprob: -13.875205039978027
    7. '(def' → logprob: -14.250205039978027
    8. '()(' → logprob: -14.625205039978027
    9. '(arr' → logprob: -15.000205039978027
    10. '(
' → logprob: -15.000205039978027

Token 145: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007893478497862816
    2. '(a' → logprob: -5.3828935623168945
    3. ')[' → logprob: -6.1328935623168945
    4. '(' → logprob: -7.6328935623168945
    5. ')a' → logprob: -7.8828935623168945
    6. ')(' → logprob: -10.007893562316895
    7. '())' → logprob: -10.132893562316895
    8. '))' → logprob: -10.382893562316895
    9. '(len' → logprob: -10.882893562316895
    10. '(
' → logprob: -10.882893562316895

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. '-' → logprob: -12.250005722045898
    3. '0' → logprob: -15.500005722045898
    4. '
' → logprob: -16.0000057220459
    5. ' ' → logprob: -16.2500057220459
    6. '   ' → logprob: -16.5000057220459
    7. '```' → logprob: -16.8750057220459
    8. ' -' → logprob: -17.5000057220459
    9. ']' → logprob: -18.1250057220459
    10. '

' → logprob: -18.6250057220459

Token 147: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.930552313453518e-05
    2. ']' → logprob: -10.000049591064453
    3. ' )' → logprob: -13.250049591064453
    4. ')]' → logprob: -14.250049591064453
    5. '])' → logprob: -14.375049591064453
    6. '）' → logprob: -15.250049591064453
    7. ')
' → logprob: -15.750049591064453
    8. '))' → logprob: -15.875049591064453
    9. '}' → logprob: -16.250049591064453
    10. '()' → logprob: -17.250049591064453

Token 148: 'def' (ID: 1314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1473943591117859
    2. '(' → logprob: -2.5223944187164307
    3. '<|end|>' → logprob: -3.5223944187164307
    4. '[' → logprob: -4.397394180297852
    5. ' ' → logprob: -5.772394180297852
    6. ' (' → logprob: -6.272394180297852
    7. '(a' → logprob: -6.272394180297852
    8. ')' → logprob: -6.522394180297852
    9. '*' → logprob: -6.647394180297852
    10. 'a' → logprob: -7.022394180297852

Token 149: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.010965758934617043
    2. 'main' → logprob: -5.010965824127197
    3. ' count' → logprob: -6.510965824127197
    4. ' example' → logprob: -7.260965824127197
    5. ' test' → logprob: -7.635965824127197
    6. ' reverse' → logprob: -8.385965347290039
    7. ' factorial' → logprob: -8.510965347290039
    8. ' merge' → logprob: -8.760965347290039
    9. 'count' → logprob: -8.885965347290039
    10. ' __' → logprob: -9.135965347290039

Token 150: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009654151508584619
    2. '():
' → logprob: -7.375965595245361
    3. '(' → logprob: -8.125965118408203
    4. '()' → logprob: -10.750965118408203
    5. ' ():' → logprob: -11.625965118408203
    6. '():
' → logprob: -12.625965118408203
    7. 'def' → logprob: -13.000965118408203
    8. ':' → logprob: -13.125965118408203
    9. '(a' → logprob: -13.375965118408203
    10. '(:' → logprob: -13.750965118408203

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4827801585197449
    2. 'n' → logprob: -1.7327802181243896
    3. ' n' → logprob: -1.7327802181243896
    4. ' input' → logprob: -3.8577802181243896
    5. ' a' → logprob: -6.1077799797058105
    6. 'a' → logprob: -6.4827799797058105
    7. 'input' → logprob: -6.6077799797058105
    8. '    ' → logprob: -7.4827799797058105
    9. ' ' → logprob: -7.6077799797058105
    10. ' user' → logprob: -7.8577799797058105

Token 152: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5506970286369324
    2. ' n' → logprob: -1.5506970882415771
    3. ' a' → logprob: -2.175697088241577
    4. 'a' → logprob: -3.175697088241577
    5. 'import' → logprob: -4.175696849822998
    6. ' import' → logprob: -4.175696849822998
    7. '   ' → logprob: -4.425696849822998
    8. ' arr' → logprob: -4.800696849822998
    9. 'arr' → logprob: -6.300696849822998
    10. ' input' → logprob: -6.675696849822998

Token 153: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02383803389966488
    2. '_data' → logprob: -4.273838043212891
    3. '_line' → logprob: -5.148838043212891
    4. '_str' → logprob: -6.648838043212891
    5. '_' → logprob: -6.773838043212891
    6. '().' → logprob: -7.773838043212891
    7. 'data' → logprob: -8.77383804321289
    8. '_text' → logprob: -8.77383804321289
    9. '_lines' → logprob: -8.89883804321289
    10. '(' → logprob: -9.39883804321289

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034583743661642075
    2. 'a' → logprob: -3.534583806991577
    3. ' a' → logprob: -5.784583568572998
    4. 'data' → logprob: -7.534583568572998
    5. '<|end|>' → logprob: -7.784583568572998
    6. '    
' → logprob: -8.284584045410156
    7. ' data' → logprob: -8.909584045410156
    8. ',a' → logprob: -9.159584045410156
    9. 'n' → logprob: -9.659584045410156
    10. 's' → logprob: -9.909584045410156

Token 155: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.12741592526435852
    2. 'arr' → logprob: -2.127415895462036
    3. 'data' → logprob: -8.502415657043457
    4. 'print' → logprob: -8.627415657043457
    5. '   ' → logprob: -9.502415657043457
    6. 'array' → logprob: -11.127415657043457
    7. 'lst' → logprob: -11.877415657043457
    8. ' arr' → logprob: -13.002415657043457
    9. 'nums' → logprob: -13.252415657043457
    10. 'numbers' → logprob: -13.877415657043457

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033648815006017685
    2. '=' → logprob: -3.408648729324341
    3. ',' → logprob: -13.658648490905762
    4. '.' → logprob: -14.783648490905762
    5. '=input' → logprob: -15.158648490905762
    6. ' ' → logprob: -15.533648490905762
    7. '[:]' → logprob: -15.533648490905762
    8. 's' → logprob: -15.783648490905762
    9. '.=' → logprob: -16.158649444580078
    10. '  ' → logprob: -16.283649444580078

Token 157: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011050889268517494
    2. ' list' → logprob: -4.511050701141357
    3. '[list' → logprob: -13.136051177978516
    4. '[' → logprob: -13.761051177978516
    5. ' [' → logprob: -16.761051177978516
    6. '	list' → logprob: -17.011051177978516
    7. '=list' → logprob: -18.511051177978516
    8. '   ' → logprob: -18.636051177978516
    9. 'map' → logprob: -18.886051177978516
    10. '(list' → logprob: -19.136051177978516

Token 158: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -7.588793960167095e-05
    2. '(' → logprob: -9.500076293945312
    3. '(input' → logprob: -15.000076293945312
    4. '(int' → logprob: -15.500076293945312
    5. 'map' → logprob: -15.750076293945312
    6. '()' → logprob: -15.875076293945312
    7. '(
' → logprob: -16.500076293945312
    8. '(range' → logprob: -17.625076293945312
    9. ' map' → logprob: -18.375076293945312
    10. '(

' → logprob: -19.500076293945312

Token 159: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006141475751064718
    2. 'int' → logprob: -8.000614166259766
    3. '(' → logprob: -8.250614166259766
    4. '(input' → logprob: -12.250614166259766
    5. '(
' → logprob: -12.375614166259766
    6. '(str' → logprob: -12.625614166259766
    7. '<int' → logprob: -13.375614166259766
    8. ' int' → logprob: -13.750614166259766
    9. ',int' → logprob: -14.125614166259766
    10. '=int' → logprob: -14.375614166259766

Token 160: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01264137588441372
    2. 'input' → logprob: -4.887641429901123
    3. ',input' → logprob: -5.387641429901123
    4. '(' → logprob: -7.887641429901123
    5. ',' → logprob: -10.012640953063965
    6. ' input' → logprob: -11.387640953063965
    7. '   ' → logprob: -12.012640953063965
    8. '(
' → logprob: -12.762640953063965
    9. '=input' → logprob: -12.762640953063965
    10. ' (' → logprob: -13.137640953063965

Token 161: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024819616228342056
    2. ' input' → logprob: -6.002481937408447
    3. '   ' → logprob: -12.002482414245605
    4. '(input' → logprob: -16.62748146057129
    5. '	input' → logprob: -17.00248146057129
    6. '<input' → logprob: -18.00248146057129
    7. ' ' → logprob: -18.25248146057129
    8. ',input' → logprob: -18.75248146057129
    9. '=input' → logprob: -19.12748146057129
    10. '    ' → logprob: -19.37748146057129

Token 162: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.173704271830502e-06
    2. '()' → logprob: -12.75000286102295
    3. '()))' → logprob: -16.000003814697266
    4. '.split' → logprob: -17.000003814697266
    5. ' ().' → logprob: -17.000003814697266
    6. 'split' → logprob: -17.125003814697266
    7. '()
' → logprob: -17.500003814697266
    8. '(' → logprob: -17.750003814697266
    9. '())))' → logprob: -18.000003814697266
    10. '   ' → logprob: -18.625003814697266

Token 163: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.73446003627032e-05
    2. 'strip' → logprob: -9.250097274780273
    3. ' split' → logprob: -13.750097274780273
    4. '(split' → logprob: -16.250097274780273
    5. 'rstrip' → logprob: -16.375097274780273
    6. 'spl' → logprob: -19.250097274780273
    7. '.split' → logprob: -19.500097274780273
    8. ' strip' → logprob: -20.750097274780273
    9. 's' → logprob: -21.750097274780273
    10. '().' → logprob: -21.875097274780273

Token 164: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.012606660835444927
    2. '))' → logprob: -4.762606620788574
    3. '()' → logprob: -5.637606620788574
    4. '()))
' → logprob: -8.012606620788574
    5. '())' → logprob: -9.637606620788574
    6. '(' → logprob: -10.762606620788574
    7. '()));' → logprob: -13.012606620788574
    8. '()))

' → logprob: -13.887606620788574
    9. '()
' → logprob: -14.512606620788574
    10. '()))
' → logprob: -15.137606620788574

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16123554110527039
    2. 'result' → logprob: -2.9112355709075928
    3. 'res' → logprob: -3.0362355709075928
    4. 'merged' → logprob: -4.161235332489014
    5. 'r' → logprob: -5.036235332489014
    6. ' res' → logprob: -5.161235332489014
    7. 'b' → logprob: -5.536235332489014
    8. 'sorted' → logprob: -5.661235332489014
    9. ' result' → logprob: -6.036235332489014
    10. 'print' → logprob: -6.036235332489014

Token 166: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007958999834954739
    2. 'res' → logprob: -5.257958889007568
    3. 'result' → logprob: -6.382958889007568
    4. 'arr' → logprob: -7.882958889007568
    5. 'sorted' → logprob: -8.257959365844727
    6. 'ans' → logprob: -9.007959365844727
    7. 'merged' → logprob: -9.257959365844727
    8. '   ' → logprob: -9.507959365844727
    9. ' print' → logprob: -10.132959365844727
    10. 'count' → logprob: -11.257959365844727

Token 167: '(in' (ID: 9573)
  Prédit: '(in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.001070323633030057
    2. '(' → logprob: -6.876070499420166
    3. 'in' → logprob: -10.251070022583008
    4. ' (' → logprob: -14.376070022583008
    5. '()' → logprob: -14.626070022583008
    6. '('' → logprob: -15.126070022583008
    7. 'merge' → logprob: -15.501070022583008
    8. '(f' → logprob: -15.751070022583008
    9. '(inv' → logprob: -15.751070022583008
    10. '(int' → logprob: -16.126070022583008

Token 168: 'version' (ID: 8924)
  Prédit: 'ersion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ersion' → logprob: -0.285918265581131
    2. 'version' → logprob: -1.4109182357788086
    3. 'r' → logprob: -6.785918235778809
    4. 'a' → logprob: -6.910918235778809
    5. 'rs' → logprob: -7.160918235778809
    6. 'tion' → logprob: -8.035918235778809
    7. 'v' → logprob: -8.410918235778809
    8. '   ' → logprob: -8.410918235778809
    9. 'ision' → logprob: -8.410918235778809
    10. 't' → logprob: -9.160918235778809

Token 169: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.575563020305708e-05
    2. ')_' → logprob: -10.000065803527832
    3. '_' → logprob: -12.125065803527832
    4. ')' → logprob: -12.250065803527832
    5. '_counts' → logprob: -12.500065803527832
    6. '_cnt' → logprob: -13.125065803527832
    7. ' _' → logprob: -13.250065803527832
    8. '_counter' → logprob: -14.500065803527832
    9. '```' → logprob: -15.500065803527832
    10. '   ' → logprob: -15.625065803527832

Token 170: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.5094070477061905e-05
    2. '(' → logprob: -11.125015258789062
    3. '(
' → logprob: -15.375015258789062
    4. ')' → logprob: -17.000015258789062
    5. ' (' → logprob: -17.875015258789062
    6. 'a' → logprob: -18.625015258789062
    7. '(ai' → logprob: -19.250015258789062
    8. ')(' → logprob: -19.625015258789062
    9. '((' → logprob: -20.125015258789062
    10. '(an' → logprob: -20.125015258789062

Token 171: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018152514472603798
    2. ')' → logprob: -4.018152713775635
    3. '))
' → logprob: -13.268152236938477
    4. ')))' → logprob: -14.518152236938477
    5. '()))' → logprob: -15.643152236938477
    6. ')
' → logprob: -15.893152236938477
    7. '())' → logprob: -16.768152236938477
    8. ''))' → logprob: -17.643152236938477
    9. '"))' → logprob: -17.893152236938477
    10. ' ))' → logprob: -18.143152236938477

Token 172: 'if' (ID: 366)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10875969380140305
    2. ')' → logprob: -2.858759641647339
    3. '[' → logprob: -3.733759641647339
    4. '(' → logprob: -3.983759641647339
    5. ':' → logprob: -6.483759880065918
    6. '=' → logprob: -8.233759880065918
    7. '#' → logprob: -8.358759880065918
    8. ',)' → logprob: -8.733759880065918
    9. 'a' → logprob: -8.983759880065918
    10. ' ' → logprob: -9.358759880065918

Token 173: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.206774041056633
    2. '__' → logprob: -1.7067739963531494
    3. '_' → logprob: -5.3317742347717285
    4. '_name' → logprob: -8.33177375793457
    5. ' ' → logprob: -9.20677375793457
    6. ' _' → logprob: -9.45677375793457
    7. '___' → logprob: -10.08177375793457
    8. 'name' → logprob: -10.58177375793457
    9. ' ' → logprob: -11.58177375793457
    10. ' ___' → logprob: -12.58177375793457

Token 174: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3377383053302765
    2. ' ==' → logprob: -1.462738275527954
    3. '==' → logprob: -3.337738275527954
    4. ' __' → logprob: -4.337738513946533
    5. '.__' → logprob: -5.337738513946533
    6. '__.__' → logprob: -7.587738513946533
    7. ' .' → logprob: -8.087738037109375
    8. '__.' → logprob: -8.212738037109375
    9. '.' → logprob: -8.962738037109375
    10. '=="' → logprob: -9.587738037109375

Token 175: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.747814349073451e-05
    2. '__.__' → logprob: -11.625017166137695
    3. '==' → logprob: -12.125017166137695
    4. '_' → logprob: -13.625017166137695
    5. '___' → logprob: -13.875017166137695
    6. '____' → logprob: -14.875017166137695
    7. '__.' → logprob: -15.625017166137695
    8. '=="' → logprob: -15.750017166137695
    9. ' ==' → logprob: -16.750017166137695
    10. '__["' → logprob: -16.875017166137695

Token 176: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.054082240909338
    2. '==' → logprob: -3.054082155227661
    3. '__' → logprob: -5.55408239364624
    4. '=="' → logprob: -6.55408239364624
    5. '=='' → logprob: -9.179081916809082
    6. ' =="' → logprob: -10.054081916809082
    7. '"' → logprob: -10.929081916809082
    8. '["' → logprob: -12.804081916809082
    9. ' ===' → logprob: -13.179081916809082
    10. '=' → logprob: -13.304081916809082

Token 177: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023318035528063774
    2. ''' → logprob: -3.77331805229187
    3. ' "__' → logprob: -9.64831829071045
    4. '__' → logprob: -12.02331829071045
    5. ' '__' → logprob: -14.02331829071045
    6. '"user' → logprob: -15.02331829071045
    7. ' "' → logprob: -15.39831829071045
    8. '("__' → logprob: -16.023317337036133
    9. '"name' → logprob: -16.273317337036133
    10. ''"' → logprob: -16.648317337036133

Token 178: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.011231496930122375
    2. 'name' → logprob: -4.511231422424316
    3. '__' → logprob: -8.886231422424316
    4. '_main' → logprob: -10.136231422424316
    5. '_name' → logprob: -12.761231422424316
    6. 'm' → logprob: -14.261231422424316
    7. 'ma' → logprob: -14.511231422424316
    8. ' main' → logprob: -14.761231422424316
    9. '__':
' → logprob: -14.761231422424316
    10. '_MAIN' → logprob: -14.761231422424316

Token 179: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3868964612483978
    2. '__':
' → logprob: -1.1368964910507202
    3. '__":
' → logprob: -11.261896133422852
    4. '__.' → logprob: -11.511896133422852
    5. '__('' → logprob: -13.761896133422852
    6. '__:' → logprob: -14.261896133422852
    7. '__.__' → logprob: -14.636896133422852
    8. '_' → logprob: -15.886896133422852
    9. '___' → logprob: -15.886896133422852
    10. '__.'/' → logprob: -16.63689613342285

Token 180: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.25769129395484924
    2. ' main' → logprob: -1.6326912641525269
    3. '   ' → logprob: -4.132691383361816
    4. '__' → logprob: -4.382691383361816
    5. ''' → logprob: -6.632691383361816
    6. ' ' → logprob: -7.257691383361816
    7. '	main' → logprob: -8.007691383361816
    8. '```' → logprob: -8.757691383361816
    9. '    
' → logprob: -9.257691383361816
    10. '<|end|>' → logprob: -9.382691383361816

Token 181: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.000462366413557902
    2. ' main' → logprob: -7.750462532043457
    3. '   ' → logprob: -10.625462532043457
    4. '	main' → logprob: -11.875462532043457
    5. 'import' → logprob: -15.000462532043457
    6. '    
' → logprob: -16.62546157836914
    7. '  ' → logprob: -17.75046157836914
    8. ' ' → logprob: -18.00046157836914
    9. '(main' → logprob: -18.75046157836914
    10. '_main' → logprob: -19.00046157836914

Token 182: '()' (ID: 416)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.94309002161026
    2. '(' → logprob: -1.3180899620056152
    3. '<|end|>' → logprob: -1.4430899620056152
    4. '[' → logprob: -2.5680899620056152
    5. ':' → logprob: -4.693089962005615
    6. ')' → logprob: -4.818089962005615
    7. '<|end|>' → logprob: -5.068089962005615
    8. '.' → logprob: -6.693089962005615
    9. '   ' → logprob: -6.943089962005615
    10. ' (' → logprob: -6.943089962005615


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 180
Tokens correctement prédits (1ère position, stricte): 82
Tokens correctement prédits (1ère position, avec adaptation): 87
Tokens correctement prédits (top 10): 149
Précision stricte (1ère position): 45.56%
Précision adaptée (1ère position): 48.33%
Précision (top 10): 82.78%
================================================================================
