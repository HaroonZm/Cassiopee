================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
global cnt
cnt=0

def merge(A,left,mid,right):
    L=A[left:mid]
    R=A[mid:right]
    L.append(float("inf"))
    R.append(float("inf"))
    
    i=0
    j=0
    for k in range(left,right):
        global cnt
        if L[i]<=R[j]:
            A[k]=L[i]
            i=i+1
        else:
            A[k]=R[j]
            j=j+1
            cnt+=mid-left-i

def mergeSort(A,left,right):
    if left+1<right:
        mid=(int)((left+right)/2)
        mergeSort(A,left,mid)
        mergeSort(A,mid,right)
        merge(A,left,mid,right)

n=int(input())
S=list(map(int,input().split()))

mergeSort(S,0,n)
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'global' (ID: 11849)
  → Token d'amorce (pas de prédiction)

Token 1: ' cnt' (ID: 27340)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'cnt' (ID: 33160)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29056546092033386
    2. ' =' → logprob: -1.5405654907226562
    3. '_' → logprob: -4.415565490722656
    4. '[' → logprob: -4.540565490722656
    5. '.' → logprob: -4.915565490722656
    6. '```' → logprob: -6.165565490722656
    7. ',' → logprob: -6.290565490722656
    8. '(' → logprob: -7.040565490722656
    9. ' ' → logprob: -7.415565490722656
    10. '+' → logprob: -7.790565490722656

Token 4: '=' (ID: 28)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6125184893608093
    2. '+' → logprob: -1.362518548965454
    3. '+=' → logprob: -2.362518548965454
    4. '=' → logprob: -2.987518548965454
    5. ' =' → logprob: -3.862518548965454
    6. '[' → logprob: -3.987518548965454
    7. ' ' → logprob: -4.362518310546875
    8. ' +' → logprob: -5.612518310546875
    9. '_' → logprob: -7.612518310546875
    10. ')' → logprob: -8.487518310546875

Token 5: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18470284342765808
    2. ' ' → logprob: -1.8097028732299805
    3. '1' → logprob: -5.3097028732299805
    4. '10' → logprob: -13.93470287322998
    5. ' ' → logprob: -14.55970287322998
    6. '5' → logprob: -15.80970287322998
    7. '2' → logprob: -15.93470287322998
    8. '{}' → logprob: -16.434701919555664
    9. '42' → logprob: -16.434701919555664
    10. 'cnt' → logprob: -16.559701919555664

Token 6: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0746903195977211
    2. '<|end|>' → logprob: -3.699690341949463
    3. '
' → logprob: -3.824690341949463
    4. '=' → logprob: -4.949690341949463
    5. '\n' → logprob: -5.199690341949463
    6. '\' → logprob: -5.449690341949463
    7. '```' → logprob: -5.574690341949463
    8. '+=' → logprob: -6.449690341949463
    9. '++' → logprob: -7.199690341949463
    10. '+
' → logprob: -7.449690341949463

Token 7: 'def' (ID: 1314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7293777465820312
    2. '
' → logprob: -0.9793777465820312
    3. '\n' → logprob: -3.1043777465820312
    4. '=' → logprob: -3.3543777465820312
    5. '\' → logprob: -3.7293777465820312
    6. '<|end|>' → logprob: -4.229377746582031
    7. '+
' → logprob: -5.229377746582031
    8. '```' → logprob: -5.479377746582031
    9. ' ' → logprob: -5.979377746582031
    10. '

' → logprob: -6.104377746582031

Token 8: ' merge' (ID: 20345)
  Prédit: ' increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' increment' → logprob: -0.8411267399787903
    2. ' ' → logprob: -2.0911266803741455
    3. ' add' → logprob: -2.3411266803741455
    4. ' count' → logprob: -2.7161266803741455
    5. ' space' → logprob: -2.7161266803741455
    6. ' counter' → logprob: -2.7161266803741455
    7. ' my' → logprob: -2.8411266803741455
    8. ' foo' → logprob: -4.466126918792725
    9. ' func' → logprob: -4.591126918792725
    10. ' test' → logprob: -4.841126918792725

Token 9: '(A' (ID: 10706)
  Prédit: '_sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.05806142836809158
    2. '_' → logprob: -3.808061361312866
    3. '(_' → logprob: -4.558061599731445
    4. '(' → logprob: -4.808061599731445
    5. '_lists' → logprob: -5.308061599731445
    6. '_arrays' → logprob: -5.308061599731445
    7. '_sorted' → logprob: -5.933061599731445
    8. '(arr' → logprob: -7.183061599731445
    9. ' (' → logprob: -8.183061599731445
    10. ' _' → logprob: -8.308061599731445

Token 10: ',left' (ID: 192836)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033332528546452522
    2. '):' → logprob: -6.62833309173584
    3. ' ,' → logprob: -7.00333309173584
    4. ')' → logprob: -8.00333309173584
    5. '[' → logprob: -8.12833309173584
    6. ',n' → logprob: -8.87833309173584
    7. '_,' → logprob: -9.87833309173584
    8. ',list' → logprob: -10.37833309173584
    9. ',a' → logprob: -10.62833309173584
    10. '_list' → logprob: -10.87833309173584

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011246586218476295
    2. ' ,' → logprob: -4.636246681213379
    3. ',right' → logprob: -6.761246681213379
    4. ',n' → logprob: -9.261246681213379
    5. ',int' → logprob: -9.511246681213379
    6. ',left' → logprob: -9.761246681213379
    7. ',m' → logprob: -10.136246681213379
    8. ',end' → logprob: -11.511246681213379
    9. ',b' → logprob: -12.011246681213379
    10. ',index' → logprob: -12.261246681213379

Token 12: 'mid' (ID: 23430)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6073912382125854
    2. ' right' → logprob: -0.8573912382125854
    3. ' mid' → logprob: -4.607391357421875
    4. 'mid' → logprob: -4.857391357421875
    5. 'middle' → logprob: -4.982391357421875
    6. ' middle' → logprob: -5.107391357421875
    7. ',right' → logprob: -8.482391357421875
    8. '	right' → logprob: -10.107391357421875
    9. ',' → logprob: -10.607391357421875
    10. ' ' → logprob: -11.357391357421875

Token 13: ',right' (ID: 164487)
  Prédit: ',right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',right' → logprob: -0.007938416674733162
    2. ',' → logprob: -4.882938385009766
    3. ' ,' → logprob: -8.757938385009766
    4. ',m' → logprob: -9.757938385009766
    5. ',left' → logprob: -9.757938385009766
    6. ',end' → logprob: -10.132938385009766
    7. '+' → logprob: -13.007938385009766
    8. ',b' → logprob: -13.007938385009766
    9. ',n' → logprob: -13.257938385009766
    10. ',r' → logprob: -13.507938385009766

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017403149977326393
    2. ':' → logprob: -4.1424031257629395
    3. ')' → logprob: -7.1424031257629395
    4. ',' → logprob: -7.6424031257629395
    5. ':)' → logprob: -9.892403602600098
    6. ' ):' → logprob: -11.392403602600098
    7. ':**' → logprob: -11.517403602600098
    8. '):
' → logprob: -11.892403602600098
    9. ']:' → logprob: -13.142403602600098
    10. ' :' → logprob: -13.267403602600098

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7292484641075134
    2. ':' → logprob: -0.8542484641075134
    3. ' :' → logprob: -3.479248523712158
    4. ' ' → logprob: -3.979248523712158
    5. ',' → logprob: -3.979248523712158
    6. '```' → logprob: -4.729248523712158
    7. '    ' → logprob: -5.354248523712158
    8. '  ' → logprob: -5.854248523712158
    9. ' ,' → logprob: -5.979248523712158
    10. ':
' → logprob: -7.604248523712158

Token 16: ' L' (ID: 451)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.024305051192641258
    2. ' for' → logprob: -4.5243048667907715
    3. 'i' → logprob: -5.0243048667907715
    4. ' ' → logprob: -6.1493048667907715
    5. '   ' → logprob: -6.1493048667907715
    6. ' j' → logprob: -6.8993048667907715
    7. '    ' → logprob: -7.8993048667907715
    8. 'for' → logprob: -8.02430534362793
    9. ' if' → logprob: -8.14930534362793
    10. '  ' → logprob: -9.77430534362793

Token 17: '=A' (ID: 112591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4871333837509155
    2. ' =' → logprob: -0.9871333837509155
    3. 'eft' → logprob: -5.362133502960205
    4. '=[]' → logprob: -5.487133502960205
    5. ',' → logprob: -5.862133502960205
    6. 'ist' → logprob: -8.487133026123047
    7. '[:]' → logprob: -8.612133026123047
    8. '[' → logprob: -8.612133026123047
    9. '   ' → logprob: -9.237133026123047
    10. '[]' → logprob: -9.237133026123047

Token 18: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.0020069109741598368
    2. '[' → logprob: -6.377007007598877
    3. '[:' → logprob: -8.877006530761719
    4. 'eft' → logprob: -9.377006530761719
    5. 'left' → logprob: -9.752006530761719
    6. 'ft' → logprob: -11.877006530761719
    7. '[right' → logprob: -12.752006530761719
    8. '[:]' → logprob: -12.877006530761719
    9. '[
' → logprob: -13.127006530761719
    10. ' [' → logprob: -13.752006530761719

Token 19: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021610872354358435
    2. ':left' → logprob: -6.377161026000977
    3. ' :' → logprob: -8.377161026000977
    4. ':right' → logprob: -8.502161026000977
    5. '[mid' → logprob: -11.377161026000977
    6. ':m' → logprob: -11.877161026000977
    7. ':center' → logprob: -12.752161026000977
    8. '(mid' → logprob: -14.252161026000977
    9. '+' → logprob: -14.627161026000977
    10. 'mid' → logprob: -14.752161026000977

Token 20: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -9.65101717156358e-05
    2. ' mid' → logprob: -9.250096321105957
    3. '[mid' → logprob: -15.500096321105957
    4. '(mid' → logprob: -15.500096321105957
    5. ' ' → logprob: -17.125097274780273
    6. '   ' → logprob: -17.500097274780273
    7. ':' → logprob: -19.250097274780273
    8. '-mid' → logprob: -19.750097274780273
    9. 'right' → logprob: -20.125097274780273
    10. '  ' → logprob: -20.125097274780273

Token 21: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025057552382349968
    2. ']+' → logprob: -3.900057554244995
    3. '+' → logprob: -5.525057315826416
    4. ' ]' → logprob: -7.775057315826416
    5. ']
' → logprob: -9.525057792663574
    6. '],' → logprob: -11.275057792663574
    7. ']
' → logprob: -12.150057792663574
    8. ' +' → logprob: -13.025057792663574
    9. ']-' → logprob: -14.025057792663574
    10. '+]' → logprob: -14.150057792663574

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19072209298610687
    2. '+' → logprob: -2.3157219886779785
    3. 'R' → logprob: -2.9407219886779785
    4. ' +' → logprob: -5.0657219886779785
    5. ' R' → logprob: -5.1907219886779785
    6. '    ' → logprob: -6.4407219886779785
    7. ' ' → logprob: -6.4407219886779785
    8. '    
' → logprob: -6.6907219886779785
    9. ')' → logprob: -6.8157219886779785
    10. ',' → logprob: -7.3157219886779785

Token 23: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.25561317801475525
    2. ' R' → logprob: -1.5056132078170776
    3. ' 
' → logprob: -6.505613327026367
    4. ' ' → logprob: -7.755613327026367
    5. ' L' → logprob: -7.880613327026367
    6. 'L' → logprob: -8.130613327026367
    7. '[' → logprob: -8.505613327026367
    8. '<|end|>' → logprob: -9.005613327026367
    9. '+' → logprob: -9.630613327026367
    10. ',' → logprob: -10.005613327026367

Token 24: '=A' (ID: 112591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03395341336727142
    2. '=A' → logprob: -3.5339534282684326
    3. ' =' → logprob: -5.5339531898498535
    4. '[right' → logprob: -8.783953666687012
    5. 'A' → logprob: -10.658953666687012
    6. '[mid' → logprob: -11.033953666687012
    7. '=a' → logprob: -11.283953666687012
    8. '=[' → logprob: -11.658953666687012
    9. '   ' → logprob: -12.283953666687012
    10. '[' → logprob: -12.658953666687012

Token 25: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -4.008129963040119e-06
    2. '[right' → logprob: -13.125003814697266
    3. 'mid' → logprob: -14.000003814697266
    4. ' [' → logprob: -14.375003814697266
    5. '[' → logprob: -15.375003814697266
    6. ' ' → logprob: -16.125003814697266
    7. '[m' → logprob: -16.125003814697266
    8. '   ' → logprob: -16.375003814697266
    9. '(mid' → logprob: -17.625003814697266
    10. ' mid' → logprob: -18.000003814697266

Token 26: ':right' (ID: 107608)
  Prédit: ':right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':right' → logprob: -1.1756367712223437e-05
    2. ' :' → logprob: -11.750011444091797
    3. ':' → logprob: -13.250011444091797
    4. 'right' → logprob: -14.000011444091797
    5. '[right' → logprob: -14.625011444091797
    6. ' right' → logprob: -15.375011444091797
    7. ':r' → logprob: -15.500011444091797
    8. ',right' → logprob: -15.500011444091797
    9. '	right' → logprob: -16.500011444091797
    10. ' ' → logprob: -17.125011444091797

Token 27: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00033796546631492674
    2. ' ]' → logprob: -8.375337600708008
    3. ']
' → logprob: -9.750337600708008
    4. '+' → logprob: -10.625337600708008
    5. '   ' → logprob: -11.875337600708008
    6. ')' → logprob: -11.875337600708008
    7. '+]' → logprob: -13.125337600708008
    8. '<|end|>' → logprob: -13.250337600708008
    9. '']' → logprob: -13.375337600708008
    10. ']
' → logprob: -14.000337600708008

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0805058404803276
    2. ' i' → logprob: -3.580505847930908
    3. 'n' → logprob: -4.455505847930908
    4. '
' → logprob: -4.580505847930908
    5. 'i' → logprob: -4.705505847930908
    6. '    
' → logprob: -5.080505847930908
    7. ' n' → logprob: -6.080505847930908
    8. '```' → logprob: -6.080505847930908
    9. '    ' → logprob: -6.830505847930908
    10. ' for' → logprob: -7.205505847930908

Token 29: ' L' (ID: 451)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09381923824548721
    2. ' i' → logprob: -2.4688191413879395
    3. '   ' → logprob: -5.3438191413879395
    4. ' ' → logprob: -10.718819618225098
    5. 'n' → logprob: -11.218819618225098
    6. 'l' → logprob: -11.343819618225098
    7. '```' → logprob: -11.843819618225098
    8. '    ' → logprob: -11.968819618225098
    9. '	i' → logprob: -12.093819618225098
    10. '  ' → logprob: -12.343819618225098

Token 30: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5699886083602905
    2. '.extend' → logprob: -1.0699886083602905
    3. '=' → logprob: -3.69498872756958
    4. '+' → logprob: -3.94498872756958
    5. ' +=' → logprob: -4.06998872756958
    6. '.' → logprob: -4.94498872756958
    7. '+=' → logprob: -5.31998872756958
    8. '_len' → logprob: -5.44498872756958
    9. '_cnt' → logprob: -5.94498872756958
    10. '_idx' → logprob: -6.19498872756958

Token 31: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.00416482612490654
    2. '(' → logprob: -5.504164695739746
    3. '(None' → logprob: -9.754164695739746
    4. '(in' → logprob: -11.504164695739746
    5. '(int' → logprob: -12.379164695739746
    6. '(math' → logprob: -12.879164695739746
    7. '(max' → logprob: -13.004164695739746
    8. 'float' → logprob: -13.129164695739746
    9. '(len' → logprob: -13.629164695739746
    10. '('' → logprob: -13.629164695739746

Token 32: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.007918667048215866
    2. ''in' → logprob: -5.257918834686279
    3. ''' → logprob: -6.007918834686279
    4. '("' → logprob: -9.882918357849121
    5. ''s' → logprob: -10.507918357849121
    6. ''t' → logprob: -10.507918357849121
    7. '('-' → logprob: -10.882918357849121
    8. '(' → logprob: -11.132918357849121
    9. ''a' → logprob: -11.382918357849121
    10. ''i' → logprob: -11.632918357849121

Token 33: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.3108712136745453
    2. 'inf' → logprob: -1.5608712434768677
    3. '"' → logprob: -3.185871124267578
    4. ''' → logprob: -4.435871124267578
    5. '"in' → logprob: -6.060871124267578
    6. 'in' → logprob: -6.560871124267578
    7. '('' → logprob: -10.060871124267578
    8. ''i' → logprob: -10.560871124267578
    9. ''ins' → logprob: -10.810871124267578
    10. ''im' → logprob: -10.935871124267578

Token 34: '"))
' (ID: 10990)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.029186459258198738
    2. ')' → logprob: -4.029186248779297
    3. '))' → logprob: -4.654186248779297
    4. '")' → logprob: -6.654186248779297
    5. '"))
' → logprob: -9.779186248779297
    6. ')")' → logprob: -9.904186248779297
    7. ' "))' → logprob: -10.404186248779297
    8. '"))
' → logprob: -11.904186248779297
    9. '"))

' → logprob: -12.154186248779297
    10. '"' → logprob: -12.279186248779297

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016766231507062912
    2. 'R' → logprob: -4.76676607131958
    3. '<|end|>' → logprob: -5.01676607131958
    4. '	R' → logprob: -8.016766548156738
    5. ' ' → logprob: -8.016766548156738
    6. '<|end|>' → logprob: -8.266766548156738
    7. '  ' → logprob: -8.641766548156738
    8. ' R' → logprob: -8.891766548156738
    9. '    
' → logprob: -9.141766548156738
    10. '    ' → logprob: -10.266766548156738

Token 36: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.018839804455637932
    2. '   ' → logprob: -4.0188398361206055
    3. ' R' → logprob: -7.3938398361206055
    4. '	R' → logprob: -9.768839836120605
    5. ' ' → logprob: -12.268839836120605
    6. '  ' → logprob: -12.393839836120605
    7. '    ' → logprob: -12.393839836120605
    8. '<|end|>' → logprob: -13.768839836120605
    9. ')' → logprob: -14.393839836120605
    10. '       ' → logprob: -14.518839836120605

Token 37: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00041065402911044657
    2. '.' → logprob: -7.875410556793213
    3. ' .' → logprob: -10.500411033630371
    4. 'append' → logprob: -13.375411033630371
    5. '.extend' → logprob: -14.750411033630371
    6. '   ' → logprob: -15.000411033630371
    7. '=float' → logprob: -15.250411033630371
    8. '(float' → logprob: -15.625411033630371
    9. '```' → logprob: -16.625410079956055
    10. '	append' → logprob: -16.625410079956055

Token 38: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -9.610702363715973e-06
    2. 'float' → logprob: -12.250009536743164
    3. '(' → logprob: -12.500009536743164
    4. '=float' → logprob: -14.375009536743164
    5. '<float' → logprob: -14.875009536743164
    6. '	float' → logprob: -15.875009536743164
    7. ',float' → logprob: -16.875009536743164
    8. ' float' → logprob: -17.375009536743164
    9. ' (' → logprob: -17.625009536743164
    10. '   ' → logprob: -20.500009536743164

Token 39: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00013154871703591198
    2. '('' → logprob: -9.000131607055664
    3. '(' → logprob: -11.875131607055664
    4. '"' → logprob: -14.000131607055664
    5. ' ("' → logprob: -16.000131607055664
    6. '(in' → logprob: -16.250131607055664
    7. 'inf' → logprob: -16.750131607055664
    8. '"in' → logprob: -17.750131607055664
    9. ')("' → logprob: -17.875131607055664
    10. ')' → logprob: -18.125131607055664

Token 40: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.001503790495917201
    2. '"' → logprob: -6.501503944396973
    3. ')' → logprob: -15.126503944396973
    4. ' inf' → logprob: -15.251503944396973
    5. '"in' → logprob: -15.501503944396973
    6. 'in' → logprob: -15.876503944396973
    7. '("' → logprob: -15.876503944396973
    8. '")' → logprob: -16.126502990722656
    9. ''' → logprob: -16.376502990722656
    10. '+' → logprob: -16.751502990722656

Token 41: '"))
' (ID: 10990)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.015346677973866463
    2. ')' → logprob: -4.515346527099609
    3. '))' → logprob: -5.515346527099609
    4. '")' → logprob: -9.01534652709961
    5. '"))
' → logprob: -9.51534652709961
    6. ')")' → logprob: -9.89034652709961
    7. ' "))' → logprob: -11.76534652709961
    8. '"))
' → logprob: -12.26534652709961
    9. '"' → logprob: -13.14034652709961
    10. '")))' → logprob: -13.26534652709961

Token 42: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0681462287902832
    2. '<|end|>' → logprob: -1.0681462287902832
    3. '   ' → logprob: -1.1931462287902832
    4. '    
' → logprob: -5.443146228790283
    5. '<|end|>' → logprob: -6.693146228790283
    6. 'n' → logprob: -7.193146228790283
    7. '  
' → logprob: -7.443146228790283
    8. '\n' → logprob: -8.068145751953125
    9. '  ' → logprob: -8.068145751953125
    10. '    ' → logprob: -8.193145751953125

Token 43: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07086538523435593
    2. '   ' → logprob: -2.6958653926849365
    3. ' i' → logprob: -7.195865154266357
    4. 'for' → logprob: -9.320865631103516
    5. '  ' → logprob: -10.320865631103516
    6. '	i' → logprob: -11.320865631103516
    7. ' ' → logprob: -11.570865631103516
    8. ' for' → logprob: -11.945865631103516
    9. '```' → logprob: -11.945865631103516
    10. '    ' → logprob: -11.945865631103516

Token 44: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0005599428550340235
    2. '   ' → logprob: -8.12555980682373
    3. 'global' → logprob: -8.62555980682373
    4. 'for' → logprob: -10.25055980682373
    5. '```' → logprob: -11.00055980682373
    6. ' i' → logprob: -11.00055980682373
    7. 'j' → logprob: -12.37555980682373
    8. 'l' → logprob: -12.37555980682373
    9. ' ' → logprob: -13.00055980682373
    10. 'def' → logprob: -13.25055980682373

Token 45: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5734241604804993
    2. '=' → logprob: -0.9484241604804993
    3. '<|end|>' → logprob: -3.4484241008758545
    4. ' ' → logprob: -4.698424339294434
    5. ',' → logprob: -5.073424339294434
    6. '<|end|>' → logprob: -7.448424339294434
    7. '  ' → logprob: -8.073424339294434
    8. ')' → logprob: -8.323424339294434
    9. '   ' → logprob: -8.448424339294434
    10. ' ,' → logprob: -9.073424339294434

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.000007629394531
    3. 'j' → logprob: -13.750007629394531
    4. ' j' → logprob: -17.50000762939453
    5. '   ' → logprob: -18.00000762939453
    6. '<|end|>' → logprob: -18.50000762939453
    7. '  ' → logprob: -19.00000762939453
    8. '۰' → logprob: -20.12500762939453
    9. '	j' → logprob: -20.50000762939453
    10. '=' → logprob: -21.25000762939453

Token 47: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: '   ' (ID: 271)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3490363359451294
    2. ',j' → logprob: -1.7240363359451294
    3. ' j' → logprob: -2.47403621673584
    4. '	j' → logprob: -4.59903621673584
    5. '   ' → logprob: -5.09903621673584
    6. '    
' → logprob: -5.22403621673584
    7. ';j' → logprob: -5.97403621673584
    8. '  
' → logprob: -6.47403621673584
    9. '  ' → logprob: -6.72403621673584
    10. '   
' → logprob: -6.84903621673584

Token 49: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.0008509631152264774
    2. ' j' → logprob: -7.125851154327393
    3. '	j' → logprob: -10.500850677490234
    4. '   ' → logprob: -11.250850677490234
    5. '0' → logprob: -12.875850677490234
    6. ',j' → logprob: -13.750850677490234
    7. '  ' → logprob: -14.250850677490234
    8. '    ' → logprob: -14.625850677490234
    9. ' ' → logprob: -15.125850677490234
    10. 'i' → logprob: -15.500850677490234

Token 50: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000737442634999752
    2. ' =' → logprob: -7.25073766708374
    3. '0' → logprob: -10.750737190246582
    4. '   ' → logprob: -13.125737190246582
    5. '<|end|>' → logprob: -13.125737190246582
    6. ' ' → logprob: -14.000737190246582
    7. '=i' → logprob: -15.000737190246582
    8. '1' → logprob: -15.125737190246582
    9. '<|end|>' → logprob: -15.500737190246582
    10. '=int' → logprob: -16.0007381439209

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -18.500003814697266
    4. '   ' → logprob: -19.000003814697266
    5. '<|end|>' → logprob: -19.125003814697266
    6. '```' → logprob: -20.250003814697266
    7. '  ' → logprob: -20.500003814697266
    8. '０' → logprob: -20.500003814697266
    9. 'i' → logprob: -20.875003814697266
    10. '=' → logprob: -21.125003814697266

Token 52: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.712149977684021
    2. '<|end|>' → logprob: -1.212149977684021
    3. '
' → logprob: -2.5871500968933105
    4. '\n' → logprob: -3.4621500968933105
    5. ' ' → logprob: -3.5871500968933105
    6. '    
' → logprob: -3.8371500968933105
    7. ' 
' → logprob: -4.4621500968933105
    8. '  
' → logprob: -4.4621500968933105
    9. '```' → logprob: -4.8371500968933105
    10. '  ' → logprob: -4.8371500968933105

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38787707686424255
    2. '<|end|>' → logprob: -1.262877106666565
    3. '```' → logprob: -4.887876987457275
    4. '  ' → logprob: -5.137876987457275
    5. '    
' → logprob: -5.387876987457275
    6. '    ' → logprob: -5.512876987457275
    7. ' ' → logprob: -5.512876987457275
    8. ' for' → logprob: -6.137876987457275
    9. '\n' → logprob: -6.262876987457275
    10. '<|end|>' → logprob: -6.262876987457275

Token 54: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2530749440193176
    2. '   ' → logprob: -1.7530748844146729
    3. ' for' → logprob: -3.253074884414673
    4. 'global' → logprob: -5.253075122833252
    5. 'cnt' → logprob: -6.128075122833252
    6. 'k' → logprob: -6.253075122833252
    7. '```' → logprob: -7.253075122833252
    8. ' ' → logprob: -7.378075122833252
    9. '  ' → logprob: -7.503075122833252
    10. '    ' → logprob: -8.878074645996094

Token 55: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.22560441493988037
    2. 'k' → logprob: -1.6006044149398804
    3. ' ' → logprob: -9.100604057312012
    4. ' x' → logprob: -10.725604057312012
    5. 'x' → logprob: -11.100604057312012
    6. '   ' → logprob: -11.225604057312012
    7. '	k' → logprob: -12.100604057312012
    8. '  ' → logprob: -12.975604057312012
    9. 'index' → logprob: -13.100604057312012
    10. ' index' → logprob: -13.225604057312012

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009816180914640427
    2. 'in' → logprob: -4.6348161697387695
    3. ' ' → logprob: -9.88481616973877
    4. '	in' → logprob: -12.75981616973877
    5. 'range' → logprob: -13.88481616973877
    6. '<|end|>' → logprob: -13.88481616973877
    7. '    ' → logprob: -13.88481616973877
    8. '  ' → logprob: -14.00981616973877
    9. '   ' → logprob: -14.38481616973877
    10. ' range' → logprob: -14.75981616973877

Token 57: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002477081725373864
    2. ' range' → logprob: -6.002477169036865
    3. '(range' → logprob: -14.752476692199707
    4. '	range' → logprob: -14.877476692199707
    5. '   ' → logprob: -15.002476692199707
    6. ' ' → logprob: -15.377476692199707
    7. 'rang' → logprob: -16.252477645874023
    8. '  ' → logprob: -16.877477645874023
    9. 'ran' → logprob: -18.752477645874023
    10. '    ' → logprob: -19.252477645874023

Token 58: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0001097417771234177
    2. '(' → logprob: -9.125109672546387
    3. 'left' → logprob: -15.500109672546387
    4. '[left' → logprob: -15.750109672546387
    5. '	left' → logprob: -16.500110626220703
    6. '(len' → logprob: -16.625110626220703
    7. ' (' → logprob: -17.000110626220703
    8. ',left' → logprob: -17.000110626220703
    9. ' left' → logprob: -17.125110626220703
    10. ':left' → logprob: -17.250110626220703

Token 59: ',right' (ID: 164487)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11464834958314896
    2. ' ,' → logprob: -2.6146483421325684
    3. ',right' → logprob: -3.4896483421325684
    4. ',left' → logprob: -5.489648342132568
    5. ',len' → logprob: -7.864648342132568
    6. '   ' → logprob: -9.989648818969727
    7. ' ' → logprob: -11.364648818969727
    8. ',length' → logprob: -11.614648818969727
    9. ',k' → logprob: -12.364648818969727
    10. '    ' → logprob: -12.489648818969727

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009764790302142501
    2. ')' → logprob: -7.3759765625
    3. ':' → logprob: -8.3759765625
    4. ' ):' → logprob: -9.8759765625
    5. '):
' → logprob: -9.8759765625
    6. '   ' → logprob: -11.3759765625
    7. ' ' → logprob: -13.1259765625
    8. '+' → logprob: -14.0009765625
    9. ',' → logprob: -14.3759765625
    10. ' )' → logprob: -15.2509765625

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48744848370552063
    2. '<|end|>' → logprob: -1.2374484539031982
    3. ' ' → logprob: -2.4874484539031982
    4. '    ' → logprob: -4.862448692321777
    5. '   ' → logprob: -6.487448692321777
    6. '        ' → logprob: -6.862448692321777
    7. '<|end|>' → logprob: -7.362448692321777
    8. '  ' → logprob: -7.862448692321777
    9. ':' → logprob: -8.487448692321777
    10. ',' → logprob: -8.987448692321777

Token 62: ' global' (ID: 5466)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24319763481616974
    2. 'if' → logprob: -1.9931976795196533
    3. '       ' → logprob: -2.8681976795196533
    4. 'global' (adapté à ' global') → logprob: -4.493197441101074
    5. ' global' → logprob: -4.743197441101074
    6. '        ' → logprob: -6.868197441101074
    7. '   ' → logprob: -7.118197441101074
    8. '    ' → logprob: -7.618197441101074
    9. ' ' → logprob: -8.493197441101074
    10. '           ' → logprob: -8.743197441101074

Token 63: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.0003408263437449932
    2. 'cnt' → logprob: -8.000340461730957
    3. '	cnt' → logprob: -12.750340461730957
    4. ' ' → logprob: -13.875340461730957
    5. ' ' → logprob: -14.250340461730957
    6. '(cnt' → logprob: -15.000340461730957
    7. '[cnt' → logprob: -15.625340461730957
    8. ' cn' → logprob: -16.125341415405273
    9. ' count' → logprob: -16.500341415405273
    10. '_cnt' → logprob: -16.625341415405273

Token 64: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0263527799397707
    2. '<|end|>' → logprob: -3.776352882385254
    3. '        
' → logprob: -6.901352882385254
    4. '        ' → logprob: -7.401352882385254
    5. '   ' → logprob: -7.526352882385254
    6. ' ' → logprob: -7.776352882385254
    7. '<|end|>' → logprob: -8.651352882385254
    8. '    ' → logprob: -9.276352882385254
    9. '           ' → logprob: -10.151352882385254
    10. ' 
' → logprob: -10.151352882385254

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058958396315574646
    2. '<|end|>' → logprob: -2.9339582920074463
    3. '        ' → logprob: -6.683958530426025
    4. ' if' → logprob: -6.933958530426025
    5. ' ' → logprob: -7.433958530426025
    6. 'if' → logprob: -7.558958530426025
    7. '<|end|>' → logprob: -8.558958053588867
    8. '   ' → logprob: -8.683958053588867
    9. '        
' → logprob: -9.058958053588867
    10. '    ' → logprob: -9.558958053588867

Token 66: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22009015083312988
    2. 'cnt' → logprob: -1.9700901508331299
    3. '       ' → logprob: -3.34509015083313
    4. ' if' → logprob: -3.84509015083313
    5. ' cnt' → logprob: -7.095089912414551
    6. '        ' → logprob: -8.22008991241455
    7. '   ' → logprob: -9.09508991241455
    8. '	cnt' → logprob: -9.72008991241455
    9. '    ' → logprob: -9.97008991241455
    10. '[cnt' → logprob: -10.22008991241455

Token 67: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.12984763085842133
    2. 'L' → logprob: -2.129847526550293
    3. ' ' → logprob: -6.629847526550293
    4. ' A' → logprob: -6.879847526550293
    5. 'A' → logprob: -8.129847526550293
    6. '   ' → logprob: -9.379847526550293
    7. '  ' → logprob: -9.504847526550293
    8. '(L' → logprob: -10.754847526550293
    9. ' (' → logprob: -10.754847526550293
    10. '    ' → logprob: -11.129847526550293

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.35837464465294e-05
    2. '[' → logprob: -10.125043869018555
    3. '[k' → logprob: -12.875043869018555
    4. 'i' → logprob: -15.250043869018555
    5. '[I' → logprob: -15.375043869018555
    6. '[j' → logprob: -16.375043869018555
    7. ' [' → logprob: -16.500043869018555
    8. ' ' → logprob: -17.500043869018555
    9. '```' → logprob: -18.000043869018555
    10. '[t' → logprob: -18.000043869018555

Token 69: ']<=' (ID: 175609)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.013745008036494255
    2. '>' → logprob: -5.013744831085205
    3. ']<=' → logprob: -5.763744831085205
    4. ' <=' → logprob: -6.138744831085205
    5. '[' → logprob: -7.013744831085205
    6. '<' → logprob: -7.763744831085205
    7. ')<=' → logprob: -8.763745307922363
    8. '>=' → logprob: -10.263745307922363
    9. ''s' → logprob: -10.388745307922363
    10. '">' → logprob: -10.388745307922363

Token 70: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00014120421838015318
    2. ' R' → logprob: -8.875141143798828
    3. ' ' → logprob: -14.250141143798828
    4. 'L' → logprob: -15.125141143798828
    5. '   ' → logprob: -16.125141143798828
    6. '	R' → logprob: -16.500141143798828
    7. '  ' → logprob: -17.000141143798828
    8. '<|end|>' → logprob: -17.125141143798828
    9. '<R' → logprob: -18.375141143798828
    10. 'r' → logprob: -18.375141143798828

Token 71: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.2603901015827432e-05
    2. '[i' → logprob: -11.000022888183594
    3. '   ' → logprob: -13.125022888183594
    4. '[' → logprob: -13.625022888183594
    5. 'j' → logprob: -14.000022888183594
    6. '```' → logprob: -14.500022888183594
    7. ' [' → logprob: -14.875022888183594
    8. '	j' → logprob: -15.375022888183594
    9. ' ' → logprob: -16.125022888183594
    10. ' j' → logprob: -16.375022888183594

Token 72: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005838268902152777
    2. ':
' → logprob: -5.880838394165039
    3. '):' → logprob: -5.880838394165039
    4. ']:' → logprob: -9.005838394165039
    5. '):
' → logprob: -10.380838394165039
    6. '>:' → logprob: -10.755838394165039
    7. ' :' → logprob: -10.755838394165039
    8. '       ' → logprob: -11.130838394165039
    9. '   ' → logprob: -12.755838394165039
    10. '<|end|>' → logprob: -12.880838394165039

Token 73: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04175190627574921
    2. '       ' → logprob: -4.291751861572266
    3. '<|end|>' → logprob: -4.291751861572266
    4. ' ' → logprob: -5.166751861572266
    5. '        ' → logprob: -6.541751861572266
    6. '            
' → logprob: -6.666751861572266
    7. ' 
' → logprob: -7.291751861572266
    8. ' i' → logprob: -7.791751861572266
    9. '<|end|>' → logprob: -7.791751861572266
    10. 'i' → logprob: -7.916751861572266

Token 74: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.31448739767074585
    2. ' A' → logprob: -1.3144874572753906
    3. '           ' → logprob: -6.814487457275391
    4. 'cnt' → logprob: -10.31448745727539
    5. ' cnt' → logprob: -10.43948745727539
    6. '            ' → logprob: -10.81448745727539
    7. ' ' → logprob: -11.56448745727539
    8. '       ' → logprob: -11.81448745727539
    9. '        ' → logprob: -11.81448745727539
    10. '    ' → logprob: -12.18948745727539

Token 75: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.512236498361744e-07
    2. '[i' → logprob: -15.375000953674316
    3. 'k' → logprob: -15.750000953674316
    4. '[' → logprob: -15.750000953674316
    5. ' [' → logprob: -18.125
    6. '[j' → logprob: -19.125
    7. '	k' → logprob: -19.75
    8. ' k' → logprob: -19.875
    9. '{k' → logprob: -19.875
    10. '[m' → logprob: -21.125

Token 76: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5786142349243164
    2. ']=' → logprob: -0.8286142349243164
    3. '=' → logprob: -5.953614234924316
    4. ' ]' → logprob: -9.703614234924316
    5. ' =' → logprob: -12.203614234924316
    6. '=i' → logprob: -12.453614234924316
    7. ')=' → logprob: -14.328614234924316
    8. '"]=' → logprob: -14.453614234924316
    9. ']+=' → logprob: -14.453614234924316
    10. '[' → logprob: -14.578614234924316

Token 77: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -6.623244553338736e-05
    2. ' L' → logprob: -9.625065803527832
    3. '	L' → logprob: -16.75006675720215
    4. '>L' → logprob: -17.75006675720215
    5. '   ' → logprob: -18.12506675720215
    6. ')L' → logprob: -19.37506675720215
    7. ' ' → logprob: -19.50006675720215
    8. '(L' → logprob: -20.00006675720215
    9. ' ' → logprob: -20.12506675720215
    10. ':L' → logprob: -20.37506675720215

Token 78: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.375
    3. '[' → logprob: -16.125
    4. ' [' → logprob: -17.75
    5. '```' → logprob: -18.75
    6. '[
' → logprob: -18.875
    7. '[I' → logprob: -18.875
    8. '[k' → logprob: -19.0
    9. '[j' → logprob: -19.0
    10. '   ' → logprob: -19.875

Token 79: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3311383128166199
    2. ']
' → logprob: -1.4561383724212646
    3. ')' → logprob: -3.9561383724212646
    4. '           ' → logprob: -4.3311381340026855
    5. ')
' → logprob: -4.8311381340026855
    6. '
' → logprob: -6.4561381340026855
    7. ']
' → logprob: -6.7061381340026855
    8. 'i' → logprob: -6.8311381340026855
    9. '<|end|>' → logprob: -6.9561381340026855
    10. '       ' → logprob: -7.0811381340026855

Token 80: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5251457691192627
    2. 'i' → logprob: -0.9001457691192627
    3. ' i' → logprob: -6.650145530700684
    4. '
' → logprob: -7.650145530700684
    5. '            
' → logprob: -9.900145530700684
    6. ' 
' → logprob: -10.150145530700684
    7. '[i' → logprob: -10.150145530700684
    8. '       ' → logprob: -10.900145530700684
    9. '<|end|>' → logprob: -11.025145530700684
    10. '   ' → logprob: -11.275145530700684

Token 81: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -2.7848862373502925e-05
    2. ' i' → logprob: -10.500027656555176
    3. 'cnt' → logprob: -15.750027656555176
    4. '
' → logprob: -17.250028610229492
    5. '           ' → logprob: -17.375028610229492
    6. '   ' → logprob: -18.375028610229492
    7. '       ' → logprob: -18.500028610229492
    8. '[i' → logprob: -20.125028610229492
    9. '```' → logprob: -20.375028610229492
    10. ' ' → logprob: -20.375028610229492

Token 82: '=i' (ID: 48141)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13396725058555603
    2. '+=' → logprob: -2.133967161178589
    3. ' +=' → logprob: -5.008967399597168
    4. '=' → logprob: -8.383967399597168
    5. ' +' → logprob: -9.508967399597168
    6. '++' → logprob: -11.258967399597168
    7. '<|end|>' → logprob: -11.258967399597168
    8. '1' → logprob: -13.133967399597168
    9. ']+=' → logprob: -13.383967399597168
    10. '+='' → logprob: -14.258967399597168

Token 83: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001173917087726295
    2. ' +' → logprob: -6.751173973083496
    3. '1' → logprob: -12.751173973083496
    4. '+i' → logprob: -14.626173973083496
    5. ' ' → logprob: -16.00117301940918
    6. '+k' → logprob: -16.75117301940918
    7. ' plus' → logprob: -16.87617301940918
    8. '＋' → logprob: -17.00117301940918
    9. '+
' → logprob: -17.75117301940918
    10. '+n' → logprob: -18.25117301940918

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -15.875000953674316
    4. '```' → logprob: -19.250001907348633
    5. '  ' → logprob: -20.000001907348633
    6. '+' → logprob: -20.125001907348633
    7. '   ' → logprob: -20.500001907348633
    8. '<|end|>' → logprob: -21.875001907348633
    9. '0' → logprob: -22.000001907348633
    10. '-' → logprob: -22.125001907348633

Token 85: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5604693293571472
    2. '       ' → logprob: -1.435469388961792
    3. ' else' → logprob: -1.810469388961792
    4. '<|end|>' → logprob: -3.685469388961792
    5. '
' → logprob: -6.310469150543213
    6. '	else' → logprob: -8.685469627380371
    7. '        
' → logprob: -9.310469627380371
    8. '<|end|>' → logprob: -9.560469627380371
    9. '  
' → logprob: -10.310469627380371
    10. ' 
' → logprob: -10.435469627380371

Token 86: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.41458818316459656
    2. '       ' → logprob: -1.289588212966919
    3. ' else' → logprob: -2.789588212966919
    4. '
' → logprob: -6.41458797454834
    5. '<|end|>' → logprob: -7.16458797454834
    6. '```' → logprob: -9.78958797454834
    7. '	else' → logprob: -10.78958797454834
    8. '}else' → logprob: -11.41458797454834
    9. '   ' → logprob: -11.66458797454834
    10. '_else' → logprob: -11.66458797454834

Token 87: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04368250072002411
    2. ' else' → logprob: -3.54368257522583
    3. '       ' → logprob: -4.29368257522583
    4. '   ' → logprob: -9.293682098388672
    5. '	else' → logprob: -10.168682098388672
    6. 'cnt' → logprob: -10.418682098388672
    7. '}else' → logprob: -12.418682098388672
    8. '
' → logprob: -12.668682098388672
    9. 'elif' → logprob: -12.793682098388672
    10. '```' → logprob: -12.793682098388672

Token 88: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2637830972671509
    2. '           ' → logprob: -2.1387829780578613
    3. ':' → logprob: -3.0137829780578613
    4. '       ' → logprob: -3.2637829780578613
    5. 'cnt' → logprob: -4.513782978057861
    6. '```' → logprob: -5.263782978057861
    7. '{
' → logprob: -5.513782978057861
    8. '   ' → logprob: -6.138782978057861
    9. ' cnt' → logprob: -6.513782978057861
    10. 'A' → logprob: -7.013782978057861

Token 89: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19155368208885193
    2. 'cnt' → logprob: -2.0665535926818848
    3. 'A' → logprob: -3.5665535926818848
    4. ' cnt' → logprob: -4.441553592681885
    5. '       ' → logprob: -5.441553592681885
    6. '```' → logprob: -6.566553592681885
    7. ' A' → logprob: -6.941553592681885
    8. '   ' → logprob: -8.316554069519043
    9. '	cnt' → logprob: -8.816554069519043
    10. '               ' → logprob: -9.066554069519043

Token 90: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.003240816527977586
    2. 'cnt' → logprob: -5.753240585327148
    3. '           ' → logprob: -9.753240585327148
    4. ' A' → logprob: -13.003240585327148
    5. '   ' → logprob: -13.878240585327148
    6. ' cnt' → logprob: -14.378240585327148
    7. 'count' → logprob: -14.878240585327148
    8. '       ' → logprob: -15.003240585327148
    9. 'global' → logprob: -15.503240585327148
    10. '```' → logprob: -16.00324058532715

Token 91: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00024882311117835343
    2. '[' → logprob: -9.000248908996582
    3. '[j' → logprob: -9.250248908996582
    4. 'k' → logprob: -11.375248908996582
    5. '=k' → logprob: -12.375248908996582
    6. '[i' → logprob: -12.625248908996582
    7. ',k' → logprob: -12.875248908996582
    8. '=' → logprob: -13.750248908996582
    9. '```' → logprob: -13.750248908996582
    10. '][' → logprob: -14.000248908996582

Token 92: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2375592440366745
    2. ']=' → logprob: -1.612559199333191
    3. ')=' → logprob: -4.6125593185424805
    4. '=k' → logprob: -7.1125593185424805
    5. '=j' → logprob: -7.1125593185424805
    6. '=A' → logprob: -8.48755931854248
    7. '=i' → logprob: -9.73755931854248
    8. '=
' → logprob: -10.11255931854248
    9. ']' → logprob: -10.36255931854248
    10. '=count' → logprob: -10.61255931854248

Token 93: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -4.127333340875339e-06
    2. ' R' → logprob: -12.500003814697266
    3. '<|end|>' → logprob: -16.000003814697266
    4. '   ' → logprob: -16.125003814697266
    5. ' ' → logprob: -17.875003814697266
    6. '           ' → logprob: -18.375003814697266
    7. '  ' → logprob: -18.375003814697266
    8. '	R' → logprob: -18.375003814697266
    9. '`' → logprob: -18.500003814697266
    10. '       ' → logprob: -18.625003814697266

Token 94: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.9027791495318525e-05
    2. 'j' → logprob: -11.250019073486328
    3. '```' → logprob: -12.875019073486328
    4. '[' → logprob: -13.125019073486328
    5. ' [' → logprob: -15.000019073486328
    6. '   ' → logprob: -15.000019073486328
    7. '[
' → logprob: -15.750019073486328
    8. ' j' → logprob: -16.375019073486328
    9. ',j' → logprob: -16.500019073486328
    10. '	j' → logprob: -16.625019073486328

Token 95: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10228174179792404
    2. ')
' → logprob: -2.6022818088531494
    3. 'j' → logprob: -4.60228157043457
    4. ')' → logprob: -4.72728157043457
    5. '       ' → logprob: -6.72728157043457
    6. ']
' → logprob: -7.10228157043457
    7. ')
' → logprob: -8.22728157043457
    8. ',j' → logprob: -8.35228157043457
    9. '               ' → logprob: -8.35228157043457
    10. '[j' → logprob: -8.35228157043457

Token 96: '           ' (ID: 352)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007752368692308664
    2. '           ' → logprob: -5.007752418518066
    3. 'cnt' → logprob: -7.882752418518066
    4. '       ' → logprob: -8.007752418518066
    5. ' j' → logprob: -8.632752418518066
    6. '
' → logprob: -10.007752418518066
    7. '```' → logprob: -10.382752418518066
    8. '   ' → logprob: -10.382752418518066
    9. '	j' → logprob: -11.132752418518066
    10. ',j' → logprob: -12.007752418518066

Token 97: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.0014338012551888824
    2. 'cnt' → logprob: -6.751433849334717
    3. ' j' → logprob: -8.376433372497559
    4. '   ' → logprob: -10.876433372497559
    5. ' cnt' → logprob: -13.001433372497559
    6. '	j' → logprob: -13.001433372497559
    7. 'global' → logprob: -13.126433372497559
    8. '```' → logprob: -13.501433372497559
    9. 'count' → logprob: -13.626433372497559
    10. '    ' → logprob: -14.001433372497559

Token 98: '=j' (ID: 104163)
  Prédit: '=j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=j' → logprob: -0.05010548606514931
    2. '=' → logprob: -3.050105571746826
    3. '+=' → logprob: -6.550105571746826
    4. '+' → logprob: -9.425105094909668
    5. 'j' → logprob: -12.675105094909668
    6. '+j' → logprob: -13.800105094909668
    7. ' =' → logprob: -13.925105094909668
    8. '   ' → logprob: -14.925105094909668
    9. ' +=' → logprob: -15.300105094909668
    10. '	j' → logprob: -15.425105094909668

Token 99: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010808025253936648
    2. '1' → logprob: -7.0010809898376465
    3. ' +' → logprob: -9.001080513000488
    4. '+j' → logprob: -10.251080513000488
    5. 'j' → logprob: -12.251080513000488
    6. ' ' → logprob: -12.626080513000488
    7. '+
' → logprob: -13.626080513000488
    8. '0' → logprob: -14.251080513000488
    9. 'plus' → logprob: -15.126080513000488
    10. ' plus' → logprob: -15.376080513000488

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '+' → logprob: -16.750001907348633
    4. '<|end|>' → logprob: -18.500001907348633
    5. '   ' → logprob: -18.875001907348633
    6. '```' → logprob: -19.000001907348633
    7. '-' → logprob: -19.500001907348633
    8. '0' → logprob: -20.250001907348633
    9. '  ' → logprob: -21.000001907348633
    10. '2' → logprob: -21.250001907348633

Token 101: '
' (ID: 198)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.21245849132537842
    2. '           ' → logprob: -2.212458610534668
    3. '
' → logprob: -2.837458610534668
    4. '       ' → logprob: -4.587458610534668
    5. ' cnt' → logprob: -5.337458610534668
    6. '	cnt' → logprob: -5.337458610534668
    7. '   ' → logprob: -6.087458610534668
    8. '[cnt' → logprob: -7.462458610534668
    9. '(cnt' → logprob: -8.212458610534668
    10. '
' → logprob: -8.587458610534668

Token 102: '           ' (ID: 352)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.479206383228302
    2. '           ' → logprob: -0.979206383228302
    3. '       ' → logprob: -5.854206562042236
    4. ' cnt' → logprob: -6.354206562042236
    5. '	cnt' → logprob: -8.229206085205078
    6. '   ' → logprob: -8.729206085205078
    7. '```' → logprob: -10.479206085205078
    8. 'count' → logprob: -11.229206085205078
    9. '(cnt' → logprob: -11.354206085205078
    10. '[cnt' → logprob: -11.479206085205078

Token 103: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -3.531315314830863e-06
    2. ' cnt' → logprob: -12.750003814697266
    3. '           ' → logprob: -15.375003814697266
    4. '	cnt' → logprob: -15.500003814697266
    5. '(cnt' → logprob: -17.000003814697266
    6. '[cnt' → logprob: -17.875003814697266
    7. 'global' → logprob: -18.625003814697266
    8. '       ' → logprob: -18.750003814697266
    9. 'cn' → logprob: -19.000003814697266
    10. '   ' → logprob: -19.125003814697266

Token 104: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04906294122338295
    2. '=' → logprob: -3.049062967300415
    3. ' +=' → logprob: -7.799062728881836
    4. '+' → logprob: -9.924062728881836
    5. 'cnt' → logprob: -12.174062728881836
    6. '+=(' → logprob: -12.924062728881836
    7. ']+=' → logprob: -13.299062728881836
    8. '(cnt' → logprob: -13.424062728881836
    9. '[cnt' → logprob: -13.549062728881836
    10. '=count' → logprob: -13.549062728881836

Token 105: 'mid' (ID: 23430)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '(' → logprob: -18.125011444091797
    4. 'len' → logprob: -18.375011444091797
    5. '   ' → logprob: -19.750011444091797
    6. '  ' → logprob: -19.750011444091797
    7. '１' → logprob: -20.875011444091797
    8. 'cnt' → logprob: -21.000011444091797
    9. '100' → logprob: -21.125011444091797
    10. '0' → logprob: -21.375011444091797

Token 106: '-left' (ID: 17007)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.4574025571346283
    2. '-' → logprob: -1.7074025869369507
    3. '-left' → logprob: -1.7074025869369507
    4. ' -' → logprob: -5.45740270614624
    5. '-right' → logprob: -10.082402229309082
    6. '-j' → logprob: -10.332402229309082
    7. '-(' → logprob: -10.582402229309082
    8. '-middle' → logprob: -11.707402229309082
    9. '-mid' → logprob: -11.957402229309082
    10. '-minus' → logprob: -11.957402229309082

Token 107: '-i' (ID: 18499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.5430808067321777
    2. ' merge' → logprob: -0.9180808067321777
    3. ' merges' → logprob: -4.418080806732178
    4. 'mer' → logprob: -5.043080806732178
    5. '_merge' → logprob: -7.168080806732178
    6. 'count' → logprob: -9.168081283569336
    7. 'in' → logprob: -9.418081283569336
    8. ' ' → logprob: -9.668081283569336
    9. ' insertion' → logprob: -10.293081283569336
    10. 'ms' → logprob: -10.293081283569336

Token 111: 'Sort' (ID: 11602)
  Prédit: '_sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -1.3544423381972592e-05
    2. 'sort' → logprob: -11.62501335144043
    3. 'Sort' → logprob: -12.75001335144043
    4. '(A' → logprob: -14.62501335144043
    5. '_' → logprob: -14.75001335144043
    6. '_sorted' → logprob: -15.12501335144043
    7. '(arr' → logprob: -15.75001335144043
    8. ' sort' → logprob: -16.50001335144043
    9. '_so' → logprob: -16.75001335144043
    10. '_S' → logprob: -17.37501335144043

Token 112: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.001954087056219578
    2. '(' → logprob: -6.251954078674316
    3. ' (' → logprob: -11.126954078674316
    4. '(arr' → logprob: -11.876954078674316
    5. '(a' → logprob: -13.126954078674316
    6. '(array' → logprob: -13.751954078674316
    7. '(
' → logprob: -14.626954078674316
    8. '(

' → logprob: -16.626955032348633
    9. '(lst' → logprob: -17.001955032348633
    10. 'def' → logprob: -17.251955032348633

Token 113: ',left' (ID: 192836)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038134098052978516
    2. ',A' → logprob: -3.2881340980529785
    3. ',left' → logprob: -9.53813362121582
    4. ' ,' → logprob: -11.78813362121582
    5. ',a' → logprob: -12.41313362121582
    6. ',L' → logprob: -12.91313362121582
    7. ',l' → logprob: -13.16313362121582
    8. ',n' → logprob: -14.28813362121582
    9. ',right' → logprob: -14.53813362121582
    10. ',i' → logprob: -14.66313362121582

Token 114: ',right' (ID: 164487)
  Prédit: ',right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',right' → logprob: -0.0486837700009346
    2. ',' → logprob: -3.0486838817596436
    3. ',left' → logprob: -9.673684120178223
    4. ' ,' → logprob: -10.548684120178223
    5. ',end' → logprob: -13.173684120178223
    6. ',m' → logprob: -13.423684120178223
    7. ',int' → logprob: -13.923684120178223
    8. ',to' → logprob: -14.423684120178223
    9. ',r' → logprob: -14.673684120178223
    10. ',(' → logprob: -15.423684120178223

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -4.513339445111342e-05
    2. ')' → logprob: -10.750044822692871
    3. '):
' → logprob: -11.500044822692871
    4. ':' → logprob: -11.500044822692871
    5. ' ):' → logprob: -13.125044822692871
    6. '   ' → logprob: -14.375044822692871
    7. ',' → logprob: -15.750044822692871
    8. '):
' → logprob: -16.125045776367188
    9. '():' → logprob: -16.125045776367188
    10. '}:' → logprob: -16.750045776367188

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3222963213920593
    2. 'if' → logprob: -1.572296380996704
    3. ' if' → logprob: -2.697296380996704
    4. '	if' → logprob: -7.572296142578125
    5. '  ' → logprob: -11.072296142578125
    6. '    ' → logprob: -11.322296142578125
    7. '   ' → logprob: -12.572296142578125
    8. ' ' → logprob: -12.947296142578125
    9. '<|end|>' → logprob: -12.947296142578125
    10. ':' → logprob: -12.947296142578125

Token 117: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00040910433745011687
    2. '   ' → logprob: -8.500409126281738
    3. ' if' → logprob: -8.500409126281738
    4. 'global' → logprob: -13.125409126281738
    5. '	if' → logprob: -16.000408172607422
    6. ' ' → logprob: -17.500408172607422
    7. '    ' → logprob: -17.750408172607422
    8. '```' → logprob: -18.000408172607422
    9. '  ' → logprob: -18.375408172607422
    10. 'i' → logprob: -19.125408172607422

Token 118: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6475297808647156
    2. ' left' → logprob: -0.8975297808647156
    3. 'right' → logprob: -3.1475298404693604
    4. ' right' → logprob: -3.6475298404693604
    5. '	left' → logprob: -9.897529602050781
    6. '	right' → logprob: -11.772529602050781
    7. ' ' → logprob: -11.897529602050781
    8. ' lef' → logprob: -12.022529602050781
    9. '(left' → logprob: -13.397529602050781
    10. '   ' → logprob: -13.897529602050781

Token 119: '+' (ID: 10)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.003732618410140276
    2. ' <' → logprob: -5.628732681274414
    3. '+' → logprob: -9.878732681274414
    4. ' ' → logprob: -10.503732681274414
    5. '<len' → logprob: -10.628732681274414
    6. '<int' → logprob: -11.253732681274414
    7. '<th' → logprob: -12.503732681274414
    8. '<n' → logprob: -12.753732681274414
    9. '<data' → logprob: -13.503732681274414
    10. '>=' → logprob: -13.628732681274414

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000111768240458332
    2. ' ' → logprob: -9.50011157989502
    3. '<' → logprob: -10.37511157989502
    4. ' <' → logprob: -13.37511157989502
    5. '   ' → logprob: -13.37511157989502
    6. '<|end|>' → logprob: -13.75011157989502
    7. 'right' → logprob: -14.50011157989502
    8. '```' → logprob: -15.37511157989502
    9. '  ' → logprob: -15.50011157989502
    10. '+' → logprob: -16.000112533569336

Token 121: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0030969043727964163
    2. ' <' → logprob: -6.378097057342529
    3. '>=' → logprob: -6.628097057342529
    4. ' >=' → logprob: -10.003096580505371
    5. '<int' → logprob: -11.628096580505371
    6. '<len' → logprob: -12.128096580505371
    7. '<th' → logprob: -12.253096580505371
    8. '<count' → logprob: -13.503096580505371
    9. ' ' → logprob: -13.753096580505371
    10. '<n' → logprob: -14.253096580505371

Token 122: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -3.547789674485102e-05
    2. ' right' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.125036239624023
    4. '	right' → logprob: -18.250036239624023
    5. ' ' → logprob: -18.750036239624023
    6. 'rig' → logprob: -19.875036239624023
    7. '
' → logprob: -21.375036239624023
    8. 'r' → logprob: -21.375036239624023
    9. '  ' → logprob: -21.500036239624023
    10. '(right' → logprob: -22.250036239624023

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015050210640765727
    2. ':
' → logprob: -8.875150680541992
    3. '       ' → logprob: -12.750150680541992
    4. '   ' → logprob: -12.875150680541992
    5. '):' → logprob: -12.875150680541992
    6. '<|end|>' → logprob: -13.625150680541992
    7. ' :' → logprob: -15.125150680541992
    8. ':def' → logprob: -15.250150680541992
    9. ':**' → logprob: -15.625150680541992
    10. ' and' → logprob: -15.875150680541992

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003453952958807349
    2. 'mid' → logprob: -5.878453731536865
    3. ' mid' → logprob: -7.878453731536865
    4. '   ' → logprob: -8.878454208374023
    5. '    ' → logprob: -9.628454208374023
    6. '        
' → logprob: -11.378454208374023
    7. 'm' → logprob: -11.378454208374023
    8. '        ' → logprob: -12.003454208374023
    9. '     ' → logprob: -12.253454208374023
    10. '      ' → logprob: -12.253454208374023

Token 125: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.004355821758508682
    2. ' mid' → logprob: -5.5043559074401855
    3. '       ' → logprob: -8.504355430603027
    4. '   ' → logprob: -9.629355430603027
    5. 'middle' → logprob: -12.629355430603027
    6. '```' → logprob: -13.129355430603027
    7. 'm' → logprob: -13.629355430603027
    8. '           ' → logprob: -14.129355430603027
    9. '[mid' → logprob: -14.754355430603027
    10. '    ' → logprob: -14.879355430603027

Token 126: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08948494493961334
    2. ' =' → logprob: -2.589484930038452
    3. '=(' → logprob: -4.589485168457031
    4. '=int' → logprob: -8.339485168457031
    5. ' =(' → logprob: -9.339485168457031
    6. '=center' → logprob: -10.339485168457031
    7. '=len' → logprob: -11.964485168457031
    8. '＝' → logprob: -12.964485168457031
    9. '=

' → logprob: -13.089485168457031
    10. '=
' → logprob: -13.089485168457031

Token 127: 'int' (ID: 491)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -4.596781946020201e-05
    2. ' left' → logprob: -10.000045776367188
    3. 'right' → logprob: -14.625045776367188
    4. '	left' → logprob: -18.250045776367188
    5. '(left' → logprob: -18.625045776367188
    6. 'lef' → logprob: -19.375045776367188
    7. ' ' → logprob: -20.500045776367188
    8. '[left' → logprob: -20.500045776367188
    9. ',left' → logprob: -20.750045776367188
    10. ')' → logprob: -21.000045776367188

Token 128: ')((' (ID: 31986)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.06858952343463898
    2. ')' → logprob: -3.193589448928833
    3. ')(' → logprob: -4.068589687347412
    4. '((' → logprob: -5.943589687347412
    5. ')((' → logprob: -6.068589687347412
    6. ' (' → logprob: -6.318589687347412
    7. '(' → logprob: -6.943589687347412
    8. ' ' → logprob: -8.693589210510254
    9. '(right' → logprob: -8.943589210510254
    10. 'left' → logprob: -10.193589210510254

Token 129: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00021105022460687906
    2. ' left' → logprob: -8.750210762023926
    3. 'right' → logprob: -9.875210762023926
    4. '(left' → logprob: -14.625210762023926
    5. '	left' → logprob: -14.750210762023926
    6. '[left' → logprob: -16.250211715698242
    7. 'lef' → logprob: -16.375211715698242
    8. ' lef' → logprob: -16.625211715698242
    9. ')' → logprob: -17.500211715698242
    10. '_left' → logprob: -17.750211715698242

Token 130: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889209687709808
    2. ' +' → logprob: -2.5788919925689697
    3. 'right' → logprob: -14.32889175415039
    4. ' +
' → logprob: -14.45389175415039
    5. '+
' → logprob: -15.07889175415039
    6. ' ' → logprob: -15.32889175415039
    7. ' plus' → logprob: -15.45389175415039
    8. '＋' → logprob: -15.82889175415039
    9. ' ' → logprob: -16.95389175415039
    10. ' right' → logprob: -17.07889175415039

Token 131: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.004018445499241352
    2. ' right' → logprob: -5.879018306732178
    3. '+' → logprob: -6.754018306732178
    4. '(right' → logprob: -10.879018783569336
    5. ' +' → logprob: -11.129018783569336
    6. '	right' → logprob: -12.254018783569336
    7. ' ' → logprob: -12.379018783569336
    8. ',right' → logprob: -13.754018783569336
    9. '[right' → logprob: -13.754018783569336
    10. '   ' → logprob: -14.004018783569336

Token 132: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30811774730682373
    2. ')/' → logprob: -1.4331177473068237
    3. ')//' → logprob: -3.8081178665161133
    4. ' )' → logprob: -5.433117866516113
    5. ')>>' → logprob: -10.308117866516113
    6. '/' → logprob: -11.933117866516113
    7. '//' → logprob: -13.183117866516113
    8. ' /' → logprob: -13.308117866516113
    9. ')/(' → logprob: -13.433117866516113
    10. ' //' → logprob: -14.058117866516113

Token 133: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026205103495158255
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -15.000262260437012
    4. '۲' → logprob: -15.500262260437012
    5. ')' → logprob: -16.750261306762695
    6. '  ' → logprob: -16.875261306762695
    7. '２' → logprob: -16.875261306762695
    8. '```' → logprob: -16.875261306762695
    9. '२' → logprob: -17.125261306762695
    10. '
' → logprob: -17.125261306762695

Token 134: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041243841405957937
    2. ')
' → logprob: -7.875412464141846
    3. ' )' → logprob: -10.750411987304688
    4. '<|end|>' → logprob: -11.875411987304688
    5. '   ' → logprob: -13.875411987304688
    6. ')
' → logprob: -14.250411987304688
    7. ')

' → logprob: -14.875411987304688
    8. ')return' → logprob: -15.250411987304688
    9. ' ' → logprob: -15.250411987304688
    10. '<|end|>' → logprob: -15.500411987304688

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2781131863594055
    2. '
' → logprob: -1.6531131267547607
    3. '        
' → logprob: -3.2781131267547607
    4. 'merge' → logprob: -4.52811336517334
    5. '	' → logprob: -7.65311336517334
    6. ' merge' → logprob: -7.77811336517334
    7. '   ' → logprob: -7.77811336517334
    8. '    
' → logprob: -7.90311336517334
    9. '
' → logprob: -8.40311336517334
    10. '		
' → logprob: -8.65311336517334

Token 136: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' (adapté à ' merge') → logprob: -0.031737763434648514
    2. ' merge' → logprob: -3.656737804412842
    3. '       ' → logprob: -5.281737804412842
    4. '   ' → logprob: -8.281737327575684
    5. '
' → logprob: -9.781737327575684
    6. ' ' → logprob: -11.156737327575684
    7. '    ' → logprob: -12.531737327575684
    8. '.merge' → logprob: -13.031737327575684
    9. '_merge' → logprob: -13.281737327575684
    10. '```' → logprob: -13.281737327575684

Token 137: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -7.896309739408025e-07
    2. 'sort' → logprob: -14.625000953674316
    3. '(A' → logprob: -15.625000953674316
    4. '(' → logprob: -17.125
    5. '_sort' → logprob: -17.75
    6. 'Sorted' → logprob: -17.875
    7. 'S' → logprob: -18.0
    8. 'Sor' → logprob: -18.875
    9. 'So' → logprob: -19.0
    10. 'Sorter' → logprob: -19.875

Token 138: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00026217024424113333
    2. '(' → logprob: -8.250262260437012
    3. '(
' → logprob: -14.000262260437012
    4. ' (' → logprob: -17.500261306762695
    5. '(B' → logprob: -17.750261306762695
    6. '```' → logprob: -18.375261306762695
    7. '(

' → logprob: -18.750261306762695
    8. '(E' → logprob: -19.250261306762695
    9. '((' → logprob: -19.250261306762695
    10. '(AST' → logprob: -19.375261306762695

Token 139: ',left' (ID: 192836)
  Prédit: ',A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',A' → logprob: -0.0630066990852356
    2. ',' → logprob: -2.813006639480591
    3. '(A' → logprob: -6.93800687789917
    4. ' ,' → logprob: -10.188006401062012
    5. ',left' → logprob: -11.188006401062012
    6. '(' → logprob: -11.563006401062012
    7. ',L' → logprob: -13.063006401062012
    8. ',(' → logprob: -13.313006401062012
    9. 'A' → logprob: -13.688006401062012
    10. ')' → logprob: -14.938006401062012

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011880877427756786
    2. ',m' → logprob: -6.751188278198242
    3. 'mid' → logprob: -11.126188278198242
    4. ' ,' → logprob: -13.001188278198242
    5. '[mid' → logprob: -14.751188278198242
    6. ',
' → logprob: -15.376188278198242
    7. '(mid' → logprob: -15.876188278198242
    8. ' mid' → logprob: -16.751188278198242
    9. '   ' → logprob: -17.001188278198242
    10. ' ' → logprob: -17.251188278198242

Token 141: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.0325924449716695e-05
    2. ' mid' → logprob: -11.50001049041748
    3. '[mid' → logprob: -17.125009536743164
    4. '(mid' → logprob: -17.500009536743164
    5. '   ' → logprob: -18.000009536743164
    6. ' ' → logprob: -19.125009536743164
    7. '    ' → logprob: -20.750009536743164
    8. '  ' → logprob: -20.875009536743164
    9. 'm' → logprob: -21.250009536743164
    10. '       ' → logprob: -21.625009536743164

Token 142: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04903910681605339
    2. ')' → logprob: -3.049039125442505
    3. '       ' → logprob: -7.799038887023926
    4. ')
' → logprob: -10.174038887023926
    5. '   ' → logprob: -12.924038887023926
    6. ')

' → logprob: -14.924038887023926
    7. ',' → logprob: -15.174038887023926
    8. ' )
' → logprob: -15.674038887023926
    9. ');
' → logprob: -16.799039840698242
    10. '),' → logprob: -17.049039840698242

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009823163272812963
    2. 'merge' → logprob: -7.000982284545898
    3. ' merge' → logprob: -10.500982284545898
    4. '   ' → logprob: -11.125982284545898
    5. '```' → logprob: -11.625982284545898
    6. '	' → logprob: -11.875982284545898
    7. '        
' → logprob: -12.000982284545898
    8. '
' → logprob: -12.750982284545898
    9. '     ' → logprob: -14.625982284545898
    10. '      ' → logprob: -15.000982284545898

Token 144: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' (adapté à ' merge') → logprob: -0.0005890139145776629
    2. ' merge' → logprob: -7.500588893890381
    3. '       ' → logprob: -10.250589370727539
    4. '.merge' → logprob: -15.375589370727539
    5. '   ' → logprob: -15.500589370727539
    6. ' ' → logprob: -16.25058937072754
    7. '
' → logprob: -17.12558937072754
    8. '_merge' → logprob: -17.37558937072754
    9. '```' → logprob: -18.12558937072754
    10. '        
' → logprob: -19.37558937072754

Token 145: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -4.320199877838604e-07
    2. 'sort' → logprob: -15.375
    3. '_sort' → logprob: -16.375
    4. ' Sort' → logprob: -16.75
    5. 'Split' → logprob: -18.0
    6. '(' → logprob: -19.75
    7. 'Sor' → logprob: -19.875
    8. 'S' → logprob: -20.0
    9. '_SORT' → logprob: -20.125
    10. 'SORT' → logprob: -20.125

Token 146: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.625003814697266
    3. 'A' → logprob: -17.250003814697266
    4. ')' → logprob: -17.250003814697266
    5. '(
' → logprob: -17.500003814697266
    6. '```' → logprob: -18.375003814697266
    7. ' (' → logprob: -18.625003814697266
    8. ',A' → logprob: -20.625003814697266
    9. '   ' → logprob: -20.625003814697266
    10. '`' → logprob: -21.500003814697266

Token 147: ',' (ID: 11)
  Prédit: ',A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',A' → logprob: -0.5860394239425659
    2. ',m' → logprob: -1.711039423942566
    3. 'A' → logprob: -2.0860395431518555
    4. ',' → logprob: -2.0860395431518555
    5. ',right' → logprob: -4.4610395431518555
    6. '(mid' → logprob: -6.8360395431518555
    7. ',M' → logprob: -6.9610395431518555
    8. '(A' → logprob: -8.336039543151855
    9. ',R' → logprob: -8.711039543151855
    10. 'mid' → logprob: -9.336039543151855

Token 148: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0001261845463886857
    2. 'right' → logprob: -9.000125885009766
    3. ' mid' → logprob: -13.375125885009766
    4. '[mid' → logprob: -14.375125885009766
    5. '(mid' → logprob: -14.625125885009766
    6. '   ' → logprob: -16.500125885009766
    7. ' right' → logprob: -18.625125885009766
    8. 'middle' → logprob: -20.000125885009766
    9. ' ' → logprob: -20.250125885009766
    10. 'midt' → logprob: -20.625125885009766

Token 149: ',right' (ID: 164487)
  Prédit: ',right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',right' → logprob: -6.034592388459714e-06
    2. ',' → logprob: -12.500005722045898
    3. ',r' → logprob: -13.625005722045898
    4. ' ,' → logprob: -14.125005722045898
    5. 'right' → logprob: -15.250005722045898
    6. ' right' → logprob: -17.7500057220459
    7. '	right' → logprob: -17.8750057220459
    8. '[right' → logprob: -18.1250057220459
    9. ':right' → logprob: -19.6250057220459
    10. ',y' → logprob: -19.7500057220459

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6935800909996033
    2. ')
' → logprob: -0.6935800909996033
    3. '   ' → logprob: -7.943580150604248
    4. '       ' → logprob: -9.56857967376709
    5. ' )
' → logprob: -12.56857967376709
    6. ' )' → logprob: -13.19357967376709
    7. ')
' → logprob: -13.19357967376709
    8. ')

' → logprob: -15.69357967376709
    9. '	' → logprob: -15.94357967376709
    10. ' ' → logprob: -16.318580627441406

Token 151: '       ' (ID: 309)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.2407863587141037
    2. '   ' → logprob: -1.6157863140106201
    3. ' merge' → logprob: -4.615786552429199
    4. '       ' → logprob: -5.240786552429199
    5. '```' → logprob: -10.3657865524292
    6. ' ' → logprob: -11.4907865524292
    7. '    ' → logprob: -12.2407865524292
    8. '.merge' → logprob: -12.3657865524292
    9. '  ' → logprob: -12.9907865524292
    10. '_merge' → logprob: -13.2407865524292

Token 152: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' (adapté à ' merge') → logprob: -0.00020401719666551799
    2. ' merge' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.750204086303711
    4. '       ' → logprob: -16.87520408630371
    5. '.merge' → logprob: -18.50020408630371
    6. ' ' → logprob: -19.25020408630371
    7. '```' → logprob: -19.37520408630371
    8. 'mer' → logprob: -19.37520408630371
    9. '
' → logprob: -20.25020408630371
    10. '_merge' → logprob: -20.25020408630371

Token 153: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.011117382906377316
    2. '(' → logprob: -4.511117458343506
    3. ' (' → logprob: -9.636116981506348
    4. '(E' → logprob: -13.761116981506348
    5. '(S' → logprob: -13.886116981506348
    6. '((' → logprob: -14.761116981506348
    7. '(
' → logprob: -14.886116981506348
    8. '(a' → logprob: -15.011116981506348
    9. '(B' → logprob: -15.761116981506348
    10. '(

' → logprob: -15.761116981506348

Token 154: ',left' (ID: 192836)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6952356696128845
    2. ',left' → logprob: -0.6952356696128845
    3. ',right' → logprob: -6.820235729217529
    4. ',A' → logprob: -6.945235729217529
    5. 'A' → logprob: -12.070235252380371
    6. ' ,' → logprob: -12.570235252380371
    7. ',
' → logprob: -12.695235252380371
    8. ',a' → logprob: -12.945235252380371
    9. ',int' → logprob: -13.195235252380371
    10. ',k' → logprob: -13.195235252380371

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018881915137171745
    2. ',right' → logprob: -4.018881797790527
    3. ',m' → logprob: -7.268881797790527
    4. 'mid' → logprob: -10.893881797790527
    5. 'right' → logprob: -11.143881797790527
    6. '[mid' → logprob: -14.518881797790527
    7. ' ,' → logprob: -14.768881797790527
    8. ',end' → logprob: -16.143882751464844
    9. '(mid' → logprob: -16.268882751464844
    10. ' mid' → logprob: -16.643882751464844

Token 156: 'mid' (ID: 23430)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00026383911608718336
    2. 'mid' → logprob: -8.250264167785645
    3. ' right' → logprob: -13.000264167785645
    4. ',right' → logprob: -15.500264167785645
    5. '	right' → logprob: -18.250263214111328
    6. '
' → logprob: -19.750263214111328
    7. ' mid' → logprob: -19.875263214111328
    8. '[right' → logprob: -20.000263214111328
    9. '   ' → logprob: -20.375263214111328
    10. '(right' → logprob: -20.500263214111328

Token 157: ',right' (ID: 164487)
  Prédit: ',right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',right' → logprob: -0.00015550498210359365
    2. ',' → logprob: -8.875155448913574
    3. 'right' → logprob: -11.125155448913574
    4. ' ,' → logprob: -14.875155448913574
    5. ')' → logprob: -15.625155448913574
    6. ',r' → logprob: -15.875155448913574
    7. '	right' → logprob: -16.25015640258789
    8. ' right' → logprob: -16.75015640258789
    9. '[right' → logprob: -16.87515640258789
    10. ':right' → logprob: -18.37515640258789

Token 158: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -12.250004768371582
    3. ' )' → logprob: -15.625004768371582
    4. ')#' → logprob: -17.7500057220459
    5. ')return' → logprob: -18.1250057220459
    6. ')

' → logprob: -18.5000057220459
    7. ')`' → logprob: -18.5000057220459
    8. ')
' → logprob: -18.6250057220459
    9. '   ' → logprob: -18.8750057220459
    10. ')**' → logprob: -19.3750057220459

Token 159: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39545655250549316
    2. ' =' → logprob: -1.1454565525054932
    3. '=int' → logprob: -4.770456314086914
    4. ',' → logprob: -10.520456314086914
    5. '=input' → logprob: -11.270456314086914
    6. ' ' → logprob: -11.395456314086914
    7. '=n' → logprob: -12.770456314086914
    8. '=len' → logprob: -13.020456314086914
    9. '=
' → logprob: -13.145456314086914
    10. '=[]' → logprob: -13.145456314086914

Token 161: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4741681218147278
    2. '(' → logprob: -0.9741681218147278
    3. 'input' → logprob: -9.724167823791504
    4. '()' → logprob: -10.849167823791504
    5. '(
' → logprob: -12.599167823791504
    6. '('' → logprob: -12.974167823791504
    7. ' (' → logprob: -13.349167823791504
    8. '(raw' → logprob: -13.849167823791504
    9. '=input' → logprob: -14.224167823791504
    10. '("' → logprob: -14.474167823791504

Token 162: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.31374841928482056
    2. '()' → logprob: -1.3137483596801758
    3. '(' → logprob: -7.813748359680176
    4. ')' → logprob: -11.438748359680176
    5. '());' → logprob: -11.688748359680176
    6. '()>' → logprob: -11.688748359680176
    7. '().' → logprob: -11.938748359680176
    8. '("' → logprob: -11.938748359680176
    9. '();)' → logprob: -11.938748359680176
    10. '()
' → logprob: -12.188748359680176

Token 163: 'S' (ID: 50)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.44312788406387e-05
    2. 'arr' → logprob: -10.250054359436035
    3. 'data' → logprob: -11.875054359436035
    4. 'a' → logprob: -11.875054359436035
    5. ' A' → logprob: -12.500054359436035
    6. 'lst' → logprob: -14.125054359436035
    7. 'array' → logprob: -15.875054359436035
    8. '```' → logprob: -15.875054359436035
    9. 'numbers' → logprob: -16.00005531311035
    10. 'nums' → logprob: -16.25005531311035

Token 164: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08032995462417603
    2. '=[]' → logprob: -3.3303298950195312
    3. '=list' → logprob: -3.9553298950195312
    4. '=A' → logprob: -4.830329895019531
    5. '=input' → logprob: -5.330329895019531
    6. ' =' → logprob: -5.580329895019531
    7. '=S' → logprob: -6.080329895019531
    8. '=[' → logprob: -6.080329895019531
    9. '=array' → logprob: -8.205329895019531
    10. '=int' → logprob: -8.330329895019531

Token 165: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.05275312811136246
    2. '(input' → logprob: -3.552753210067749
    3. '(' → logprob: -3.802753210067749
    4. '()' → logprob: -8.677753448486328
    5. '(range' → logprob: -9.052753448486328
    6. '(int' → logprob: -9.552753448486328
    7. '(eval' → logprob: -10.177753448486328
    8. '(str' → logprob: -11.802753448486328
    9. 'map' → logprob: -12.177753448486328
    10. '((' → logprob: -12.302753448486328

Token 166: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00012368128227535635
    2. '(' → logprob: -9.250123977661133
    3. '(str' → logprob: -11.125123977661133
    4. 'int' → logprob: -11.625123977661133
    5. '(input' → logprob: -12.750123977661133
    6. ',int' → logprob: -15.375123977661133
    7. '<int' → logprob: -15.375123977661133
    8. ' (' → logprob: -16.250123977661133
    9. '[int' → logprob: -16.250123977661133
    10. ' int' → logprob: -16.625123977661133

Token 167: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.039012011140584946
    2. '(input' → logprob: -3.2890119552612305
    3. 'input' → logprob: -7.4140119552612305
    4. ',' → logprob: -8.03901195526123
    5. ' input' → logprob: -10.78901195526123
    6. ' (' → logprob: -11.91401195526123
    7. '(' → logprob: -12.16401195526123
    8. '=input' → logprob: -12.41401195526123
    9. ' ,' → logprob: -12.78901195526123
    10. '<input' → logprob: -13.41401195526123

Token 168: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.013994814362377e-05
    2. '()' → logprob: -10.00005054473877
    3. ' ().' → logprob: -12.62505054473877
    4. '(' → logprob: -13.75005054473877
    5. '.split' → logprob: -16.750049591064453
    6. 'input' → logprob: -16.875049591064453
    7. '.' → logprob: -17.000049591064453
    8. 'split' → logprob: -17.125049591064453
    9. '()
' → logprob: -17.250049591064453
    10. '   ' → logprob: -17.375049591064453

Token 169: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019299437990412116
    2. 'strip' → logprob: -6.251929759979248
    3. 'rstrip' → logprob: -13.876930236816406
    4. ' split' → logprob: -15.126930236816406
    5. '(split' → logprob: -16.751930236816406
    6. 'spl' → logprob: -18.251930236816406
    7. 's' → logprob: -18.626930236816406
    8. '.split' → logprob: -19.876930236816406
    9. ' strip' → logprob: -20.376930236816406
    10. '_split' → logprob: -20.876930236816406

Token 170: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.01004563644528389
    2. '()' → logprob: -4.885045528411865
    3. '())' → logprob: -6.635045528411865
    4. '(' → logprob: -7.135045528411865
    5. '))' → logprob: -8.635046005249023
    6. '()))
' → logprob: -9.885046005249023
    7. '()));' → logprob: -10.135046005249023
    8. '().' → logprob: -10.510046005249023
    9. '())))' → logprob: -11.385046005249023
    10. '('' → logprob: -12.135046005249023

Token 171: 'merge' (ID: 25492)
  Prédit: 'merge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.005597053095698357
    2. 'print' → logprob: -5.255597114562988
    3. 'cnt' → logprob: -8.130597114562988
    4. 'reverse' → logprob: -11.130597114562988
    5. 'A' → logprob: -11.755597114562988
    6. 'ans' → logprob: -12.130597114562988
    7. 'for' → logprob: -12.130597114562988
    8. 'count' → logprob: -12.380597114562988
    9. '
' → logprob: -12.505597114562988
    10. 's' → logprob: -13.130597114562988

Token 172: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -5.512236498361744e-07
    2. 'Sor' → logprob: -15.750000953674316
    3. '(S' → logprob: -16.0
    4. 'S' → logprob: -16.0
    5. 'sort' → logprob: -16.25
    6. '_sort' → logprob: -19.125
    7. 'SORT' → logprob: -19.25
    8. 'So' → logprob: -19.5
    9. ' Sort' → logprob: -19.75
    10. 'SOR' → logprob: -20.5

Token 173: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0002314303710591048
    2. '(' → logprob: -8.375231742858887
    3. ' (' → logprob: -14.375231742858887
    4. '(
' → logprob: -15.750231742858887
    5. '(s' → logprob: -16.00023078918457
    6. '<|end|>' → logprob: -18.00023078918457
    7. '(A' → logprob: -18.12523078918457
    8. '((' → logprob: -18.12523078918457
    9. '(

' → logprob: -18.25023078918457
    10. ')' → logprob: -19.50023078918457

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3188464045524597
    2. '(' → logprob: -1.3188464641571045
    3. ',S' → logprob: -5.318846225738525
    4. ',(' → logprob: -7.693846225738525
    5. '(S' → logprob: -9.193846702575684
    6. ')' → logprob: -10.193846702575684
    7. '0' → logprob: -10.443846702575684
    8. ' ,' → logprob: -10.693846702575684
    9. ',n' → logprob: -11.568846702575684
    10. ' (' → logprob: -12.193846702575684

Token 175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '
' → logprob: -20.250001907348633
    4. '۰' → logprob: -20.500001907348633
    5. '```' → logprob: -20.625001907348633
    6. '   ' → logprob: -20.625001907348633
    7. '０' → logprob: -20.875001907348633
    8. ')' → logprob: -21.000001907348633
    9. '  ' → logprob: -21.875001907348633
    10. '00' → logprob: -22.625001907348633

Token 176: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.04023582115769386
    2. ',' → logprob: -3.290235757827759
    3. 'n' → logprob: -6.290235996246338
    4. ',len' → logprob: -8.04023551940918
    5. ' ,' → logprob: -11.29023551940918
    6. 'len' → logprob: -13.54023551940918
    7. ' n' → logprob: -14.41523551940918
    8. ',length' → logprob: -14.66523551940918
    9. ',num' → logprob: -15.54023551940918
    10. ',
' → logprob: -15.66523551940918

Token 177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2617008400848135e-05
    2. '))' → logprob: -10.500032424926758
    3. ')n' → logprob: -12.875032424926758
    4. ')
' → logprob: -14.125032424926758
    5. ' )' → logprob: -14.750032424926758
    6. ')`' → logprob: -15.125032424926758
    7. ')

' → logprob: -15.875032424926758
    8. ',)' → logprob: -15.875032424926758
    9. ')**' → logprob: -16.000032424926758
    10. '),' → logprob: -16.250032424926758

Token 178: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. '```' → logprob: -13.625001907348633
    3. 'for' → logprob: -16.000001907348633
    4. '
' → logprob: -16.625001907348633
    5. '``' → logprob: -17.000001907348633
    6. '#print' → logprob: -17.125001907348633
    7. ' print' → logprob: -17.250001907348633
    8. '  
' → logprob: -19.875001907348633
    9. '   ' → logprob: -19.875001907348633
    10. '    
' → logprob: -20.250001907348633

Token 179: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.1269393414258957
    2. '(' → logprob: -2.126939296722412
    3. '(len' → logprob: -12.37693977355957
    4. '(c' → logprob: -13.62693977355957
    5. '(sum' → logprob: -13.87693977355957
    6. '((' → logprob: -14.00193977355957
    7. '(
' → logprob: -14.12693977355957
    8. '(count' → logprob: -14.25193977355957
    9. '(C' → logprob: -14.50193977355957
    10. 'cnt' → logprob: -14.62693977355957

Token 180: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -15.125000953674316
    4. ')`' → logprob: -16.375001907348633
    5. '))' → logprob: -16.500001907348633
    6. '`)' → logprob: -17.375001907348633
    7. ')}' → logprob: -18.375001907348633
    8. ')#' → logprob: -18.375001907348633
    9. ')**' → logprob: -19.000001907348633
    10. '())' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 178
Tokens correctement prédits (1ère position, stricte): 88
Tokens correctement prédits (1ère position, avec adaptation): 105
Tokens correctement prédits (top 10): 156
Précision stricte (1ère position): 49.44%
Précision adaptée (1ère position): 58.99%
Précision (top 10): 87.64%
================================================================================
