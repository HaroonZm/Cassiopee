================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n,w = map(int,input().split(" "))
pack = []

for _ in range(n):
    x,y = map(int,input().split(" "))
    pack.append([x/y,x,y])

pack.sort()
pp = pack[::-1]

sum = 0
for ele in pp:
    if w-ele[2] > 0:
        sum += ele[1]
        w = w - ele[2]
    else:
        sum += ele[0]*w
        break

print(sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',w' (ID: 49598)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8658331036567688
    2. 'input' → logprob: -2.115833044052124
    3. 'map' → logprob: -2.115833044052124
    4. ' input' → logprob: -2.365833044052124
    5. '10' → logprob: -2.490833044052124
    6. ' map' → logprob: -2.490833044052124
    7. ' n' → logprob: -3.615833044052124
    8. '0' → logprob: -3.865833044052124
    9. 'n' → logprob: -5.240833282470703
    10. '100' → logprob: -5.490833282470703

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0039062306750565767
    2. '(lambda' → logprob: -5.75390625
    3. '(int' → logprob: -8.12890625
    4. '(n' → logprob: -8.75390625
    5. '(str' → logprob: -9.00390625
    6. '```' → logprob: -10.87890625
    7. '(user' → logprob: -11.00390625
    8. ')' → logprob: -11.12890625
    9. '<|end|>' → logprob: -12.12890625
    10. '(input' → logprob: -12.25390625

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.17516988515853882
    2. '(n' → logprob: -2.4251699447631836
    3. '(' → logprob: -3.0501699447631836
    4. ')' → logprob: -3.9251699447631836
    5. '(user' → logprob: -7.175169944763184
    6. '(range' → logprob: -7.300169944763184
    7. '(raw' → logprob: -7.800169944763184
    8. '(str' → logprob: -7.800169944763184
    9. 'input' → logprob: -8.050169944763184
    10. '(data' → logprob: -8.175169944763184

Token 6: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5303421020507812
    2. '())' → logprob: -1.0303421020507812
    3. '().' → logprob: -4.030342102050781
    4. '(' → logprob: -4.405342102050781
    5. ')' → logprob: -4.530342102050781
    6. '`()' → logprob: -6.030342102050781
    7. '()>' → logprob: -6.280342102050781
    8. '()">' → logprob: -6.280342102050781
    9. '();)' → logprob: -6.530342102050781
    10. '('' → logprob: -6.780342102050781

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004388942907098681
    2. 'strip' → logprob: -7.750438690185547
    3. 'rstrip' → logprob: -12.500438690185547
    4. ')' → logprob: -13.125438690185547
    5. ' split' → logprob: -13.375438690185547
    6. '(split' → logprob: -14.375438690185547
    7. 'spl' → logprob: -16.375438690185547
    8. 'replace' → logprob: -16.500438690185547
    9. 'read' → logprob: -16.500438690185547
    10. 'startswith' → logprob: -17.375438690185547

Token 8: '("' (ID: 568)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09245947003364563
    2. '())' → logprob: -2.4674594402313232
    3. '()' → logprob: -6.217459678649902
    4. '))' → logprob: -7.092459678649902
    5. '`)' → logprob: -7.967459678649902
    6. '(' → logprob: -8.217459678649902
    7. '()))' → logprob: -10.842459678649902
    8. ')`' → logprob: -11.967459678649902
    9. '```' → logprob: -12.217459678649902
    10. ' ())' → logprob: -12.342459678649902

Token 9: ' "))
' (ID: 94820)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.21386605501174927
    2. '))' → logprob: -2.3388659954071045
    3. ' "))' → logprob: -2.9638659954071045
    4. ')' → logprob: -3.2138659954071045
    5. '"' → logprob: -5.588866233825684
    6. ' "' → logprob: -8.963866233825684
    7. ',"' → logprob: -9.213866233825684
    8. ''))' → logprob: -9.588866233825684
    9. '")' → logprob: -9.588866233825684
    10. ',' → logprob: -9.838866233825684

Token 10: 'pack' (ID: 7786)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.552495539188385
    2. 'for' → logprob: -0.927495539188385
    3. 'd' → logprob: -4.92749547958374
    4. 'x' → logprob: -5.30249547958374
    5. '#' → logprob: -5.80249547958374
    6. 'r' → logprob: -6.17749547958374
    7. 'if' → logprob: -6.42749547958374
    8. 'n' → logprob: -6.55249547958374
    9. ' for' → logprob: -7.05249547958374
    10. '[' → logprob: -7.17749547958374

Token 11: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5731684565544128
    2. '_s' → logprob: -1.4481685161590576
    3. '_' → logprob: -1.6981685161590576
    4. 'ets' → logprob: -4.6981682777404785
    5. 'ages' → logprob: -5.1981682777404785
    6. '_age' → logprob: -7.0731682777404785
    7. 'e' → logprob: -7.6981682777404785
    8. '_e' → logprob: -8.198168754577637
    9. 'age' → logprob: -8.198168754577637
    10. '_size' → logprob: -8.323168754577637

Token 12: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5050063729286194
    2. '[' → logprob: -1.0050063133239746
    3. '[n' → logprob: -4.505006313323975
    4. '[int' → logprob: -4.630006313323975
    5. ' [' → logprob: -5.755006313323975
    6. ' []' → logprob: -6.380006313323975
    7. 'list' → logprob: -6.380006313323975
    8. '[p' → logprob: -7.630006313323975
    9. '[list' → logprob: -7.880006313323975
    10. '[min' → logprob: -8.005006790161133

Token 13: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032377210445702076
    2. 'f' → logprob: -5.753237724304199
    3. ' for' → logprob: -10.5032377243042
    4. '[' → logprob: -11.1282377243042
    5. 'n' → logprob: -11.2532377243042
    6. 'p' → logprob: -13.8782377243042
    7. 'fo' → logprob: -14.1282377243042
    8. '(' → logprob: -14.2532377243042
    9. '```' → logprob: -14.5032377243042
    10. '   ' → logprob: -14.8782377243042

Token 14: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05692368000745773
    2. ' _' → logprob: -3.5569236278533936
    3. '_' → logprob: -4.306923866271973
    4. ' ' → logprob: -4.806923866271973
    5. 'i' → logprob: -5.306923866271973
    6. ' ‌' → logprob: -8.931923866271973
    7. '  ' → logprob: -10.431923866271973
    8. ' ▁' → logprob: -11.431923866271973
    9. '	i' → logprob: -11.931923866271973
    10. ' I' → logprob: -12.056923866271973

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03462865576148033
    2. 'in' → logprob: -3.4096286296844482
    3. 'n' → logprob: -7.659628868103027
    4. ' ' → logprob: -7.784628868103027
    5. ' n' → logprob: -10.034628868103027
    6. '_' → logprob: -10.659628868103027
    7. '  ' → logprob: -12.034628868103027
    8. '	in' → logprob: -12.534628868103027
    9. ' _' → logprob: -12.659628868103027
    10. 'i' → logprob: -12.909628868103027

Token 16: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931570768356323
    2. 'range' → logprob: -0.6931570768356323
    3. '(range' → logprob: -13.068157196044922
    4. '	range' → logprob: -13.193157196044922
    5. 'n' → logprob: -13.443157196044922
    6. '_range' → logprob: -14.193157196044922
    7. 'ran' → logprob: -14.568157196044922
    8. 'Range' → logprob: -14.568157196044922
    9. ' xrange' → logprob: -14.568157196044922
    10. 'rang' → logprob: -14.818157196044922

Token 17: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31819266080856323
    2. '(n' → logprob: -1.443192720413208
    3. ' (' → logprob: -3.318192720413208
    4. '(range' → logprob: -10.068192481994629
    5. '(int' → logprob: -10.193192481994629
    6. ' n' → logprob: -10.193192481994629
    7. '(
' → logprob: -11.568192481994629
    8. 'n' → logprob: -12.568192481994629
    9. ' ' → logprob: -12.568192481994629
    10. ' range' → logprob: -12.693192481994629

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012891010381281376
    2. ')' → logprob: -4.387890815734863
    3. '):
' → logprob: -8.637890815734863
    4. ' ):' → logprob: -8.762890815734863
    5. ':' → logprob: -10.512890815734863
    6. ' )' → logprob: -11.762890815734863
    7. '):
' → logprob: -13.012890815734863
    8. '+' → logprob: -13.387890815734863
    9. ',' → logprob: -13.387890815734863
    10. ')：' → logprob: -13.637890815734863

Token 19: '   ' (ID: 271)
  Prédit: ' pack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pack' → logprob: -0.012154522351920605
    2. 'pack' → logprob: -4.637154579162598
    3. '   ' → logprob: -7.137154579162598
    4. ' packs' → logprob: -7.262154579162598
    5. '<|end|>' → logprob: -8.637154579162598
    6. '```' → logprob: -9.012154579162598
    7. '(pack' → logprob: -9.262154579162598
    8. ' 
' → logprob: -9.762154579162598
    9. ' p' → logprob: -9.762154579162598
    10. ' line' → logprob: -9.762154579162598

Token 20: ' x' (ID: 1215)
  Prédit: 'pack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pack' → logprob: -0.05044183507561684
    2. ' pack' → logprob: -4.175441741943359
    3. 'weight' → logprob: -4.175441741943359
    4. 'p' → logprob: -4.675441741943359
    5. 'packs' → logprob: -6.050441741943359
    6. 'size' → logprob: -6.425441741943359
    7. 'w' → logprob: -6.800441741943359
    8. 'price' → logprob: -7.175441741943359
    9. 'data' → logprob: -7.550441741943359
    10. 'a' → logprob: -7.925441741943359

Token 21: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33183717727661133
    2. ',w' → logprob: -1.7068371772766113
    3. ',p' → logprob: -3.0818371772766113
    4. ',y' → logprob: -3.0818371772766113
    5. ',a' → logprob: -5.456837177276611
    6. ' ,' → logprob: -6.206837177276611
    7. ',t' → logprob: -7.581837177276611
    8. ',i' → logprob: -7.706837177276611
    9. ',s' → logprob: -8.081836700439453
    10. ',n' → logprob: -8.581836700439453

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22546438872814178
    2. '=' → logprob: -1.6004643440246582
    3. ',' → logprob: -11.100464820861816
    4. '=int' → logprob: -11.225464820861816
    5. ')' → logprob: -11.600464820861816
    6. '=input' → logprob: -12.225464820861816
    7. ' ' → logprob: -12.475464820861816
    8. '<|end|>' → logprob: -13.725464820861816
    9. '=line' → logprob: -14.725464820861816
    10. 's' → logprob: -14.975464820861816

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07889264822006226
    2. 'map' → logprob: -2.578892707824707
    3. '	map' → logprob: -13.703892707824707
    4. ' ' → logprob: -13.953892707824707
    5. '   ' → logprob: -15.203892707824707
    6. 'int' → logprob: -15.828892707824707
    7. ' list' → logprob: -15.953892707824707
    8. '  ' → logprob: -16.07889175415039
    9. 'm' → logprob: -16.45389175415039
    10. 'list' → logprob: -16.57889175415039

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004195906512904912
    2. '(' → logprob: -8.250419616699219
    3. '<int' → logprob: -9.000419616699219
    4. '[int' → logprob: -11.375419616699219
    5. 'int' → logprob: -11.500419616699219
    6. '=int' → logprob: -12.375419616699219
    7. '(input' → logprob: -13.000419616699219
    8. '<|end|>' → logprob: -13.000419616699219
    9. '(str' → logprob: -13.375419616699219
    10. '(eval' → logprob: -14.250419616699219

Token 25: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3887578547000885
    2. ',input' → logprob: -1.1387578248977661
    3. ',' → logprob: -6.638757705688477
    4. '(' → logprob: -8.388757705688477
    5. '=input' → logprob: -8.888757705688477
    6. 'input' → logprob: -9.263757705688477
    7. ')' → logprob: -9.388757705688477
    8. ' input' → logprob: -11.388757705688477
    9. '<input' → logprob: -11.763757705688477
    10. '),' → logprob: -12.263757705688477

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.2729995988775045e-06
    2. '()' → logprob: -12.250006675720215
    3. ' ().' → logprob: -14.750006675720215
    4. '.' → logprob: -14.875006675720215
    5. '(' → logprob: -15.500006675720215
    6. '.readline' → logprob: -15.875006675720215
    7. '()).' → logprob: -16.0000057220459
    8. '.split' → logprob: -16.6250057220459
    9. '())' → logprob: -16.7500057220459
    10. ')' → logprob: -16.7500057220459

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. ' split' → logprob: -13.500001907348633
    3. '(split' → logprob: -16.750001907348633
    4. 'spl' → logprob: -18.000001907348633
    5. 'rstrip' → logprob: -18.625001907348633
    6. 'strip' → logprob: -19.250001907348633
    7. 'plit' → logprob: -19.875001907348633
    8. '.split' → logprob: -20.000001907348633
    9. 's' → logprob: -20.125001907348633
    10. '_split' → logprob: -20.625001907348633

Token 28: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.01047442201524973
    2. '())' → logprob: -5.13547420501709
    3. '("("' → logprob: -6.13547420501709
    4. '('' → logprob: -6.76047420501709
    5. '(""))' → logprob: -7.38547420501709
    6. '()' → logprob: -8.51047420501709
    7. '(' → logprob: -8.51047420501709
    8. ')' → logprob: -9.26047420501709
    9. '(",' → logprob: -10.88547420501709
    10. '")' → logprob: -10.88547420501709

Token 29: ' "))
' (ID: 94820)
  Prédit: ' "))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "))' → logprob: -0.8861977458000183
    2. '"))' → logprob: -1.261197805404663
    3. '))' → logprob: -1.511197805404663
    4. ')' → logprob: -2.511197805404663
    5. ' ))' → logprob: -6.886197566986084
    6. '"' → logprob: -7.386197566986084
    7. '")' → logprob: -7.761197566986084
    8. ' "' → logprob: -8.261198043823242
    9. ' ' → logprob: -9.136198043823242
    10. ' ")' → logprob: -9.761198043823242

Token 30: '   ' (ID: 271)
  Prédit: 'pack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pack' → logprob: -0.2794466018676758
    2. '   ' → logprob: -2.654446601867676
    3. ' pack' → logprob: -2.779446601867676
    4. '
' → logprob: -3.154446601867676
    5. '<|end|>' → logprob: -3.404446601867676
    6. '\n' → logprob: -4.029446601867676
    7. '(pack' → logprob: -5.404446601867676
    8. '_pack' → logprob: -6.154446601867676
    9. '.pack' → logprob: -6.279446601867676
    10. ')' → logprob: -6.279446601867676

Token 31: ' pack' (ID: 5356)
  Prédit: 'pack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pack' (adapté à ' pack') → logprob: -0.5760456919670105
    2. ' pack' → logprob: -0.8260456919670105
    3. '.pack' → logprob: -10.076045989990234
    4. '_pack' → logprob: -10.326045989990234
    5. '(pack' → logprob: -11.326045989990234
    6. '   ' → logprob: -12.076045989990234
    7. '<|end|>' → logprob: -12.826045989990234
    8. '-pack' → logprob: -12.826045989990234
    9. '```' → logprob: -13.201045989990234
    10. ' packs' → logprob: -13.451045989990234

Token 32: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07890928536653519
    2. '.' → logprob: -2.578909397125244
    3. '.extend' → logprob: -11.703908920288086
    4. '.app' → logprob: -12.578908920288086
    5. '.push' → logprob: -12.953908920288086
    6. '.ap' → logprob: -13.578908920288086
    7. ' .' → logprob: -13.578908920288086
    8. '.add' → logprob: -14.453908920288086
    9. '.setdefault' → logprob: -14.578908920288086
    10. '​.' → logprob: -14.578908920288086

Token 33: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004732249304652214
    2. '(' → logprob: -5.379732131958008
    3. '([' → logprob: -9.879732131958008
    4. '(x' → logprob: -10.254732131958008
    5. '(y' → logprob: -10.879732131958008
    6. '(
' → logprob: -13.504732131958008
    7. '(([' → logprob: -13.629732131958008
    8. '(tuple' → logprob: -13.754732131958008
    9. '(('' → logprob: -14.379732131958008
    10. '(list' → logprob: -14.379732131958008

Token 34: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002622894535306841
    2. ' x' → logprob: -8.250262260437012
    3. 'y' → logprob: -14.500262260437012
    4. ' ' → logprob: -15.875262260437012
    5. '   ' → logprob: -16.000263214111328
    6. '0' → logprob: -16.750263214111328
    7. 'n' → logprob: -17.375263214111328
    8. '(x' → logprob: -17.500263214111328
    9. ')x' → logprob: -17.500263214111328
    10. '	x' → logprob: -17.625263214111328

Token 35: '/y' (ID: 52534)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.314364492893219
    2. ',' → logprob: -1.3143644332885742
    3. ' ,' → logprob: -6.814364433288574
    4. ',n' → logprob: -13.564364433288574
    5. ',w' → logprob: -14.064364433288574
    6. 'y' → logprob: -14.939364433288574
    7. ',Y' → logprob: -15.064364433288574
    8. ',x' → logprob: -15.314364433288574
    9. ' ' → logprob: -15.314364433288574
    10. ',
' → logprob: -15.814364433288574

Token 36: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007081787567585707
    2. '])' → logprob: -5.757081985473633
    3. ')' → logprob: -6.007081985473633
    4. ' ,' → logprob: -7.257081985473633
    5. ')])' → logprob: -7.632081985473633
    6. ',
' → logprob: -9.507081985473633
    7. ' ])' → logprob: -9.882081985473633
    8. '<|end|>' → logprob: -10.882081985473633
    9. ' )' → logprob: -11.007081985473633
    10. ',

' → logprob: -11.132081985473633

Token 37: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9716755747795105
    2. '])' → logprob: -1.0966756343841553
    3. ',y' → logprob: -1.3466756343841553
    4. ')])' → logprob: -4.096675395965576
    5. ')' → logprob: -5.096675395965576
    6. 'y' → logprob: -6.721675395965576
    7. ']])' → logprob: -7.096675395965576
    8. ' ,' → logprob: -7.721675395965576
    9. ']' → logprob: -7.846675395965576
    10. ',n' → logprob: -8.221675872802734

Token 38: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.023629073053598404
    2. ')' → logprob: -3.7736291885375977
    3. ')])' → logprob: -8.148629188537598
    4. ')]' → logprob: -10.148629188537598
    5. '))' → logprob: -10.898629188537598
    6. '])
' → logprob: -10.898629188537598
    7. ' ])' → logprob: -11.773629188537598
    8. ')
' → logprob: -12.773629188537598
    9. ']' → logprob: -12.898629188537598
    10. ''])' → logprob: -13.898629188537598

Token 39: 'pack' (ID: 7786)
  Prédit: 'pack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pack' → logprob: -1.2352385965641588e-05
    2. '```' → logprob: -12.250012397766113
    3. '
' → logprob: -12.500012397766113
    4. 'sort' → logprob: -13.500012397766113
    5. '.pack' → logprob: -14.750012397766113
    6. '(pack' → logprob: -15.000012397766113
    7. 'for' → logprob: -15.125012397766113
    8. 'import' → logprob: -15.125012397766113
    9. 'packs' → logprob: -15.375012397766113
    10. 'package' → logprob: -15.875012397766113

Token 40: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04705820977687836
    2. '(reverse' → logprob: -3.29705810546875
    3. '(key' → logprob: -4.79705810546875
    4. '(' → logprob: -7.29705810546875
    5. 'reverse' → logprob: -10.42205810546875
    6. '()
' → logprob: -11.79705810546875
    7. 'key' → logprob: -13.92205810546875
    8. ' ()' → logprob: -14.04705810546875
    9. '();' → logprob: -14.42205810546875
    10. '(),' → logprob: -14.54705810546875

Token 42: 'pp' (ID: 654)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02752758376300335
    2. 'result' → logprob: -4.277527809143066
    3. 'print' → logprob: -4.902527809143066
    4. 'total' → logprob: -6.277527809143066
    5. 'pack' → logprob: -6.277527809143066
    6. 'reverse' → logprob: -7.402527809143066
    7. 'n' → logprob: -8.277527809143066
    8. '```' → logprob: -8.527527809143066
    9. '\n' → logprob: -8.777527809143066
    10. '
' → logprob: -9.027527809143066

Token 43: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9547696113586426
    2. 'ack' → logprob: -1.0797696113586426
    3. '=' → logprob: -2.5797696113586426
    4. 'pack' → logprob: -3.0797696113586426
    5. 'op' → logprob: -3.0797696113586426
    6. '=[]
' → logprob: -3.3297696113586426
    7. 'r' → logprob: -4.329769611358643
    8. '=[]' → logprob: -4.579769611358643
    9. 'o' → logprob: -5.329769611358643
    10. '[::-' → logprob: -5.329769611358643

Token 44: ' pack' (ID: 5356)
  Prédit: 'pack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pack' → logprob: -0.029111552983522415
    2. '[]' → logprob: -3.779111623764038
    3. '0' → logprob: -6.154111385345459
    4. ' pack' → logprob: -6.654111385345459
    5. 'len' → logprob: -7.029111385345459
    6. '[' → logprob: -7.529111385345459
    7. ' []' → logprob: -8.279111862182617
    8. 'float' → logprob: -8.654111862182617
    9. '1' → logprob: -9.029111862182617
    10. ' ' → logprob: -9.279111862182617

Token 45: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.32492950558662415
    2. '[-' → logprob: -1.5749294757843018
    3. '[:]' → logprob: -3.1999294757843018
    4. '[' → logprob: -3.6999294757843018
    5. '.copy' → logprob: -6.574929714202881
    6. '.pop' → logprob: -6.824929714202881
    7. '.reverse' → logprob: -7.074929714202881
    8. '[:' → logprob: -7.199929714202881
    9. '.' → logprob: -8.449929237365723
    10. '[len' → logprob: -8.824929237365723

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. 'er' → logprob: -13.250017166137695
    3. 'idx' → logprob: -13.250017166137695
    4. '[' → logprob: -13.625017166137695
    5. 'ed' → logprob: -13.625017166137695
    6. 's' → logprob: -13.750017166137695
    7. 'sort' → logprob: -14.000017166137695
    8. ']' → logprob: -14.375017166137695
    9. 'range' → logprob: -14.375017166137695
    10. 'index' → logprob: -14.625017166137695

Token 47: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.05499910004437e-05
    2. ']
' → logprob: -9.875090599060059
    3. ')' → logprob: -11.125090599060059
    4. '<|end|>' → logprob: -11.250090599060059
    5. ' ]' → logprob: -11.875090599060059
    6. ']

' → logprob: -13.500090599060059
    7. '[' → logprob: -14.250090599060059
    8. '']' → logprob: -14.875090599060059
    9. '])' → logprob: -15.000090599060059
    10. '#' → logprob: -15.375090599060059

Token 48: 'sum' (ID: 12298)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1689215749502182
    2. 'total' → logprob: -3.16892147064209
    3. 'res' → logprob: -3.79392147064209
    4. 'for' → logprob: -4.29392147064209
    5. 'w' → logprob: -4.54392147064209
    6. 'value' → logprob: -4.66892147064209
    7. 'ans' → logprob: -4.66892147064209
    8. 'max' → logprob: -4.79392147064209
    9. 'count' → logprob: -5.16892147064209
    10. 'answer' → logprob: -5.16892147064209

Token 49: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04358310624957085
    2. '=' → logprob: -4.168582916259766
    3. '(' → logprob: -5.043582916259766
    4. '_p' → logprob: -5.668582916259766
    5. ' =' → logprob: -5.668582916259766
    6. '_=' → logprob: -5.668582916259766
    7. '_val' → logprob: -5.793582916259766
    8. '_weight' → logprob: -6.168582916259766
    9. '_w' → logprob: -7.043582916259766
    10. '_pack' → logprob: -7.543582916259766

Token 50: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2520064413547516
    2. ' ' → logprob: -1.5020064115524292
    3. 'pp' → logprob: -10.377006530761719
    4. ' pp' → logprob: -10.377006530761719
    5. ' ' → logprob: -11.502006530761719
    6. '1' → logprob: -14.252006530761719
    7. '100' → logprob: -14.314506530761719
    8. ' 
' → logprob: -15.127006530761719
    9. '(pp' → logprob: -15.189506530761719
    10. '​' → logprob: -15.314506530761719

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002680112374946475
    2. ' ' → logprob: -8.37526798248291
    3. 'pp' → logprob: -11.00026798248291
    4. 'w' → logprob: -11.25026798248291
    5. 'n' → logprob: -12.37526798248291
    6. '1' → logprob: -14.87526798248291
    7. 'pack' → logprob: -15.00026798248291
    8. '100' → logprob: -15.06276798248291
    9. 'int' → logprob: -15.18776798248291
    10. '   ' → logprob: -15.50026798248291

Token 52: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5844306349754333
    2. ' for' → logprob: -1.2094306945800781
    3. 'i' → logprob: -3.209430694580078
    4. '
' → logprob: -3.584430694580078
    5. '0' → logprob: -3.959430694580078
    6. 'w' → logprob: -4.084430694580078
    7. ' 
' → logprob: -4.584430694580078
    8. 'j' → logprob: -5.459430694580078
    9. '```' → logprob: -5.709430694580078
    10. ' i' → logprob: -5.834430694580078

Token 54: ' ele' (ID: 4888)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22682775557041168
    2. ' p' → logprob: -2.35182785987854
    3. ' x' → logprob: -3.35182785987854
    4. ' pp' → logprob: -3.85182785987854
    5. 'i' → logprob: -3.97682785987854
    6. ' pack' → logprob: -5.101827621459961
    7. ' _' → logprob: -5.351827621459961
    8. ' w' → logprob: -5.476827621459961
    9. ' ' → logprob: -5.726827621459961
    10. 'p' → logprob: -6.351827621459961

Token 55: ' in' (ID: 306)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7301254272460938
    2. ' in' → logprob: -1.1051254272460938
    3. 'ment' → logprob: -1.7301254272460938
    4. 'nt' → logprob: -5.105125427246094
    5. 'in' → logprob: -6.605125427246094
    6. 'men' → logprob: -6.980125427246094
    7. 'ments' → logprob: -7.730125427246094
    8. 'mnt' → logprob: -8.105125427246094
    9. 'mt' → logprob: -9.105125427246094
    10. '   ' → logprob: -9.605125427246094

Token 56: ' pp' (ID: 25476)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.0004898841143585742
    2. ' pp' → logprob: -7.625489711761475
    3. '	pp' → logprob: -13.625490188598633
    4. 'ppy' → logprob: -15.125490188598633
    5. '(pp' → logprob: -15.625490188598633
    6. '_pp' → logprob: -16.250490188598633
    7. 'range' → logprob: -17.375490188598633
    8. ' range' → logprob: -17.750490188598633
    9. 'p' → logprob: -17.875490188598633
    10. 'ppen' → logprob: -17.875490188598633

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037319031544029713
    2. ':
' → logprob: -6.003731727600098
    3. '[' → logprob: -6.753731727600098
    4. '<|end|>' → logprob: -10.253731727600098
    5. ':

' → logprob: -11.503731727600098
    6. '[:-' → logprob: -12.003731727600098
    7. '[:]' → logprob: -12.128731727600098
    8. ' :' → logprob: -12.253731727600098
    9. '[:' → logprob: -12.628731727600098
    10. '```' → logprob: -12.628731727600098

Token 58: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5233985185623169
    2. '   ' → logprob: -1.273398518562317
    3. ' ' → logprob: -2.6483983993530273
    4. ' 
' → logprob: -4.398398399353027
    5. 'if' → logprob: -4.898398399353027
    6. '[' → logprob: -5.148398399353027
    7. ' x' → logprob: -5.273398399353027
    8. '<|end|>' → logprob: -5.273398399353027
    9. '    ' → logprob: -5.398398399353027
    10. '  ' → logprob: -5.773398399353027

Token 59: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25884541869163513
    2. 'if' (adapté à ' if') → logprob: -1.6338454484939575
    3. 'sum' → logprob: -4.758845329284668
    4. ' sum' → logprob: -5.258845329284668
    5. ' x' → logprob: -5.508845329284668
    6. ' n' → logprob: -5.508845329284668
    7. 'x' → logprob: -5.633845329284668
    8. 'n' → logprob: -6.258845329284668
    9. '   ' → logprob: -6.758845329284668
    10. ' amount' → logprob: -7.008845329284668

Token 60: ' w' (ID: 286)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.24105796217918396
    2. ' n' → logprob: -2.241057872772217
    3. ' ele' → logprob: -2.991057872772217
    4. 'sum' → logprob: -3.241057872772217
    5. 'n' → logprob: -4.616057872772217
    6. 'ele' → logprob: -5.491057872772217
    7. ' pack' → logprob: -6.491057872772217
    8. ' w' → logprob: -7.241057872772217
    9. '(sum' → logprob: -7.241057872772217
    10. ' ' → logprob: -7.866057872772217

Token 61: '-ele' (ID: 132975)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.9461584687232971
    2. '>=' → logprob: -1.4461584091186523
    3. '==' → logprob: -1.9461584091186523
    4. ' ==' → logprob: -2.1961584091186523
    5. '>' → logprob: -2.8211584091186523
    6. ' >' → logprob: -2.9461584091186523
    7. ' <=' → logprob: -5.446158409118652
    8. '<=' → logprob: -5.946158409118652
    9. ' -' → logprob: -6.821158409118652
    10. '-' → logprob: -7.071158409118652

Token 62: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13796564936637878
    2. '['' → logprob: -2.762965679168701
    3. '>' → logprob: -3.512965679168701
    4. '>=' → logprob: -4.637965679168701
    5. ' >=' → logprob: -4.762965679168701
    6. '["' → logprob: -5.387965679168701
    7. '.' → logprob: -5.512965679168701
    8. 'w' → logprob: -6.512965679168701
    9. 's' → logprob: -7.012965679168701
    10. ''s' → logprob: -7.137965679168701

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.507972572464496e-05
    2. ' ' → logprob: -10.12509536743164
    3. '1' → logprob: -10.25009536743164
    4. '```' → logprob: -11.50009536743164
    5. ']' → logprob: -13.25009536743164
    6. '
' → logprob: -13.37509536743164
    7. '-' → logprob: -13.37509536743164
    8. '   ' → logprob: -13.50009536743164
    9. '₂' → logprob: -14.75009536743164
    10. '``' → logprob: -15.00009536743164

Token 64: ']' (ID: 60)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.7709929943084717
    2. '>' → logprob: -0.8959929943084717
    3. ' >=' → logprob: -2.3959929943084717
    4. ']>=' → logprob: -4.395993232727051
    5. ' >' → logprob: -4.520993232727051
    6. '<' → logprob: -4.770993232727051
    7. ')>=' → logprob: -6.770993232727051
    8. '">' → logprob: -6.770993232727051
    9. '<=' → logprob: -6.895993232727051
    10. ' <' → logprob: -7.020993232727051

Token 65: ' >' (ID: 1424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.39901065826416016
    2. ' >=' → logprob: -1.1490106582641602
    3. '>' → logprob: -4.77401065826416
    4. ' >' → logprob: -5.77401065826416
    5. '<' → logprob: -8.77401065826416
    6. '<=' → logprob: -9.52401065826416
    7. ')>=' → logprob: -9.52401065826416
    8. ']>=' → logprob: -9.64901065826416
    9. ' <' → logprob: -10.27401065826416
    10. ' ' → logprob: -10.27401065826416

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05251675844192505
    2. '=' → logprob: -3.0525166988372803
    3. ' ' → logprob: -5.552516937255859
    4. '>' → logprob: -10.42751693725586
    5. 'w' → logprob: -12.17751693725586
    6. ' =' → logprob: -12.42751693725586
    7. '>=' → logprob: -13.30251693725586
    8. '   ' → logprob: -13.92751693725586
    9. '  ' → logprob: -14.30251693725586
    10. '==' → logprob: -14.92751693725586

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035572313936427236
    2. ' ' → logprob: -8.12535572052002
    3. '=' → logprob: -9.75035572052002
    4. '>' → logprob: -14.50035572052002
    5. '-' → logprob: -15.50035572052002
    6. '   ' → logprob: -15.62535572052002
    7. '  ' → logprob: -16.000356674194336
    8. 'w' → logprob: -16.250356674194336
    9. '<|end|>' → logprob: -16.500356674194336
    10. ' =' → logprob: -17.000356674194336

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005974736995995045
    2. ' :' → logprob: -8.00059700012207
    3. ':
' → logprob: -8.37559700012207
    4. '<|end|>' → logprob: -12.12559700012207
    5. 'w' → logprob: -12.25059700012207
    6. '):' → logprob: -12.25059700012207
    7. '   ' → logprob: -12.25059700012207
    8. ':

' → logprob: -13.37559700012207
    9. ',' → logprob: -13.62559700012207
    10. '0' → logprob: -13.87559700012207

Token 69: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26924794912338257
    2. '       ' → logprob: -2.0192480087280273
    3. 'w' → logprob: -3.2692480087280273
    4. ' w' → logprob: -3.7692480087280273
    5. '    ' → logprob: -4.269248008728027
    6. 'sum' → logprob: -5.019248008728027
    7. ' sum' → logprob: -5.019248008728027
    8. ' ' → logprob: -5.394248008728027
    9. '0' → logprob: -6.144248008728027
    10. '<|end|>' → logprob: -6.394248008728027

Token 70: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.34729817509651184
    2. 'w' → logprob: -1.3472981452941895
    3. ' sum' → logprob: -3.5972981452941895
    4. ' w' → logprob: -5.7222981452941895
    5. '   ' → logprob: -5.9722981452941895
    6. '       ' → logprob: -9.347298622131348
    7. '  ' → logprob: -9.972298622131348
    8. '	sum' → logprob: -9.972298622131348
    9. ' ' → logprob: -11.347298622131348
    10. '    ' → logprob: -11.472298622131348

Token 71: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1862957626581192
    2. '+=' → logprob: -1.811295747756958
    3. '+' → logprob: -5.061295986175537
    4. ' +' → logprob: -9.061295509338379
    5. ' =' → logprob: -9.936295509338379
    6. '=' → logprob: -11.936295509338379
    7. '+=(' → logprob: -11.936295509338379
    8. ']+=' → logprob: -12.186295509338379
    9. '+='' → logprob: -12.686295509338379
    10. '<|end|>' → logprob: -13.186295509338379

Token 72: ' ele' (ID: 4888)
  Prédit: 'ele'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ele' → logprob: -0.007612305693328381
    2. ' ele' → logprob: -4.882612228393555
    3. '   ' → logprob: -12.632612228393555
    4. '(ele' → logprob: -14.132612228393555
    5. '  ' → logprob: -14.257612228393555
    6. ' ' → logprob: -14.507612228393555
    7. '       ' → logprob: -15.757612228393555
    8. '    ' → logprob: -15.882612228393555
    9. '_ele' → logprob: -16.132612228393555
    10. 'w' → logprob: -16.257612228393555

Token 73: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00022475497098639607
    2. '2' → logprob: -8.500225067138672
    3. '1' → logprob: -12.250225067138672
    4. '```' → logprob: -12.375225067138672
    5. '<|end|>' → logprob: -13.250225067138672
    6. '3' → logprob: -13.250225067138672
    7. 's' → logprob: -13.500225067138672
    8. '[
' → logprob: -14.250225067138672
    9. ' ' → logprob: -14.250225067138672
    10. ' [' → logprob: -14.500225067138672

Token 74: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005849646404385567
    2. '1' → logprob: -7.500585079193115
    3. '[' → logprob: -10.625584602355957
    4. '```' → logprob: -12.375584602355957
    5. '0' → logprob: -13.625584602355957
    6. ' ' → logprob: -13.750584602355957
    7. '   ' → logprob: -15.438084602355957
    8. '-' → logprob: -15.563084602355957
    9. '``' → logprob: -15.750584602355957
    10. '][' → logprob: -16.500585556030273

Token 75: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6755195260047913
    2. '<|end|>' → logprob: -0.8005195260047913
    3. '*' → logprob: -4.0505194664001465
    4. '<|end|>' → logprob: -4.4255194664001465
    5. '
' → logprob: -5.6755194664001465
    6. ')*' → logprob: -6.3005194664001465
    7. '       ' → logprob: -6.6755194664001465
    8. ' *' → logprob: -6.6755194664001465
    9. '   ' → logprob: -6.9255194664001465
    10. '*w' → logprob: -7.1755194664001465

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03580310195684433
    2. 'w' → logprob: -4.035803318023682
    3. '   ' → logprob: -4.910803318023682
    4. 'else' → logprob: -5.035803318023682
    5. ' else' → logprob: -6.285803318023682
    6. ' w' → logprob: -7.285803318023682
    7. '<|end|>' → logprob: -7.410803318023682
    8. '	else' → logprob: -9.535802841186523
    9. '	w' → logprob: -9.785802841186523
    10. ' ' → logprob: -9.785802841186523

Token 77: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.0005038236267864704
    2. ' w' → logprob: -7.625504016876221
    3. '       ' → logprob: -11.750503540039062
    4. '   ' → logprob: -12.000503540039062
    5. '
' → logprob: -14.375503540039062
    6. '	w' → logprob: -14.625503540039062
    7. '_w' → logprob: -15.625503540039062
    8. '```' → logprob: -16.250503540039062
    9. '  ' → logprob: -16.375503540039062
    10. '-' → logprob: -16.500503540039062

Token 78: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.4843064546585083
    2. '-' → logprob: -0.9843064546585083
    3. ' -=' → logprob: -4.609306335449219
    4. '=' → logprob: -8.484306335449219
    5. ' -' → logprob: -11.984306335449219
    6. '   ' → logprob: -13.609306335449219
    7. '```' → logprob: -13.859306335449219
    8. '<|end|>' → logprob: -14.484306335449219
    9. '+=' → logprob: -14.609306335449219
    10. ' =' → logprob: -14.984306335449219

Token 79: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.04860304668545723
    2. ' w' → logprob: -3.048603057861328
    3. 'ele' → logprob: -11.298603057861328
    4. '-w' → logprob: -14.048603057861328
    5. '   ' → logprob: -14.423603057861328
    6. '	w' → logprob: -14.423603057861328
    7. ' ele' → logprob: -15.298603057861328
    8. ' ' → logprob: -15.298603057861328
    9. '-' → logprob: -15.673603057861328
    10. '    ' → logprob: -15.923603057861328

Token 80: ' -' (ID: 533)
  Prédit: '-ele'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ele' → logprob: -0.0012503541074693203
    2. ' -' → logprob: -7.001250267028809
    3. '-' → logprob: -8.001250267028809
    4. 'ele' → logprob: -12.876250267028809
    5. '-e' → logprob: -15.001250267028809
    6. '-E' → logprob: -15.626250267028809
    7. ' ele' → logprob: -16.001251220703125
    8. '-ed' → logprob: -16.126251220703125
    9. '-elect' → logprob: -16.126251220703125
    10. '  ' → logprob: -16.626251220703125

Token 81: ' ele' (ID: 4888)
  Prédit: 'ele'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ele' → logprob: -0.0007100477814674377
    2. ' ele' → logprob: -7.2507100105285645
    3. 'int' → logprob: -16.875709533691406
    4. '(ele' → logprob: -17.250709533691406
    5. '   ' → logprob: -17.750709533691406
    6. ' ' → logprob: -18.750709533691406
    7. '  ' → logprob: -19.250709533691406
    8. 'elect' → logprob: -19.625709533691406
    9. 'e' → logprob: -19.875709533691406
    10. '_ele' → logprob: -20.000709533691406

Token 82: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5094070477061905e-05
    2. '2' → logprob: -11.125015258789062
    3. ' [' → logprob: -16.625015258789062
    4. '```' → logprob: -16.875015258789062
    5. '[
' → logprob: -18.125015258789062
    6. '\[' → logprob: -18.250015258789062
    7. ' ' → logprob: -18.500015258789062
    8. '][' → logprob: -18.750015258789062
    9. '...' → logprob: -19.125015258789062
    10. '`' → logprob: -19.125015258789062

Token 83: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -12.750004768371582
    3. ' ' → logprob: -13.375004768371582
    4. '   ' → logprob: -14.500004768371582
    5. '```' → logprob: -16.0000057220459
    6. '۲' → logprob: -17.5625057220459
    7. '  ' → logprob: -17.6875057220459
    8. '２' → logprob: -18.1250057220459
    9. '    ' → logprob: -18.7500057220459
    10. '(' → logprob: -19.1250057220459

Token 84: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7804005742073059
    2. ' else' → logprob: -1.2804005146026611
    3. '   ' → logprob: -2.030400514602661
    4. ']' → logprob: -2.780400514602661
    5. '<|end|>' → logprob: -3.405400514602661
    6. 'else' → logprob: -3.655400514602661
    7. '	else' → logprob: -4.90540075302124
    8. '<|end|>' → logprob: -6.65540075302124
    9. ')
' → logprob: -6.90540075302124
    10. ' )' → logprob: -8.030400276184082

Token 85: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5884680151939392
    2. ' else' → logprob: -0.8384680151939392
    3. '   ' → logprob: -4.463468074798584
    4. 'elif' → logprob: -7.213468074798584
    5. ' elif' → logprob: -8.963467597961426
    6. '<|end|>' → logprob: -10.213467597961426
    7. '	else' → logprob: -11.713467597961426
    8. '  ' → logprob: -11.963467597961426
    9. ' ' → logprob: -12.713467597961426
    10. '    ' → logprob: -13.213467597961426

Token 86: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4753924608230591
    2. ' else' → logprob: -0.9753924608230591
    3. 'elif' → logprob: -6.8503923416137695
    4. ' elif' → logprob: -8.47539234161377
    5. '   ' → logprob: -10.60039234161377
    6. '	else' → logprob: -12.10039234161377
    7. '<|end|>' → logprob: -12.10039234161377
    8. 'e' → logprob: -12.72539234161377
    9. ' ' → logprob: -13.47539234161377
    10. ')' → logprob: -13.47539234161377

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008816531859338284
    2. '   ' → logprob: -6.258816719055176
    3. '<|end|>' → logprob: -6.258816719055176
    4. ':
' → logprob: -6.633816719055176
    5. '       ' → logprob: -6.633816719055176
    6. '    ' → logprob: -7.133816719055176
    7. ' ' → logprob: -7.508816719055176
    8. ' :' → logprob: -8.258816719055176
    9. ' w' → logprob: -9.383816719055176
    10. '        ' → logprob: -9.633816719055176

Token 88: '       ' (ID: 309)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.954472005367279
    2. 'sum' → logprob: -1.4544720649719238
    3. ' sum' → logprob: -1.7044720649719238
    4. 'w' → logprob: -1.7044720649719238
    5. '    ' → logprob: -4.579472064971924
    6. '(sum' → logprob: -6.079472064971924
    7. '   ' → logprob: -6.079472064971924
    8. 'int' → logprob: -6.829472064971924
    9. ' int' → logprob: -8.079471588134766
    10. '"' → logprob: -8.454471588134766

Token 89: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.02462390810251236
    2. ' sum' → logprob: -4.399623870849609
    3. 'w' → logprob: -4.524623870849609
    4. ' w' → logprob: -7.399623870849609
    5. '(sum' → logprob: -7.524623870849609
    6. 'ele' → logprob: -12.02462387084961
    7. ' (' → logprob: -12.02462387084961
    8. '    ' → logprob: -12.27462387084961
    9. ' ' → logprob: -12.39962387084961
    10. ' ele' → logprob: -12.39962387084961

Token 90: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03324439004063606
    2. '+=' → logprob: -3.7832443714141846
    3. '+' → logprob: -4.908244609832764
    4. ' +' → logprob: -6.158244609832764
    5. '<|end|>' → logprob: -8.033244132995605
    6. '+='' → logprob: -9.783244132995605
    7. ')' → logprob: -11.033244132995605
    8. '+="' → logprob: -11.033244132995605
    9. ']+=' → logprob: -12.283244132995605
    10. '<|end|>' → logprob: -12.408244132995605

Token 91: ' ele' (ID: 4888)
  Prédit: 'ele'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ele' → logprob: -0.28736886382102966
    2. 'w' → logprob: -1.537368893623352
    3. ' ele' → logprob: -3.7873687744140625
    4. ' w' → logprob: -4.5373687744140625
    5. '(ele' → logprob: -6.7873687744140625
    6. '(' → logprob: -8.912368774414062
    7. '(w' → logprob: -9.162368774414062
    8. ' (' → logprob: -10.787368774414062
    9. 'pp' → logprob: -11.037368774414062
    10. '_ele' → logprob: -11.662368774414062

Token 92: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.2994620242971e-06
    2. '0' → logprob: -12.125008583068848
    3. '```' → logprob: -14.375008583068848
    4. 's' → logprob: -14.875008583068848
    5. '`' → logprob: -15.375008583068848
    6. '1' → logprob: -15.812508583068848
    7. 'w' → logprob: -15.937508583068848
    8. '[
' → logprob: -16.37500762939453
    9. ' [' → logprob: -16.56250762939453
    10. '2' → logprob: -16.56250762939453

Token 93: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37351951003074646
    2. '0' → logprob: -1.7485195398330688
    3. '1' → logprob: -2.1235194206237793
    4. 'w' → logprob: -4.123519420623779
    5. '2' → logprob: -6.623519420623779
    6. '(' → logprob: -7.748519420623779
    7. '```' → logprob: -10.248519897460938
    8. '[w' → logprob: -10.998519897460938
    9. ' w' → logprob: -11.373519897460938
    10. '`' → logprob: -11.498519897460938

Token 94: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2290489822626114
    2. '*w' → logprob: -1.7290489673614502
    3. ' *' → logprob: -3.60404896736145
    4. '*(' → logprob: -10.729048728942871
    5. '*n' → logprob: -12.854048728942871
    6. ' ' → logprob: -12.854048728942871
    7. '*object' → logprob: -12.979048728942871
    8. '**' → logprob: -13.479048728942871
    9. '*g' → logprob: -13.479048728942871
    10. '*y' → logprob: -13.729048728942871

Token 95: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00033546582562848926
    2. ' w' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.750335693359375
    4. '	w' → logprob: -18.125335693359375
    5. '(w' → logprob: -18.375335693359375
    6. ' ' → logprob: -18.750335693359375
    7. '  ' → logprob: -19.500335693359375
    8. '*w' → logprob: -19.500335693359375
    9. '    ' → logprob: -19.875335693359375
    10. '`' → logprob: -20.000335693359375

Token 96: '
' (ID: 198)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3626358211040497
    2. '       ' → logprob: -1.487635850906372
    3. ' break' → logprob: -3.362635850906372
    4. '   ' → logprob: -4.112635612487793
    5. '\n' → logprob: -5.362635612487793
    6. '
' → logprob: -5.362635612487793
    7. '	break' → logprob: -5.362635612487793
    8. 'print' → logprob: -5.487635612487793
    9. '           ' → logprob: -6.237635612487793
    10. '    
' → logprob: -6.612635612487793

Token 97: '       ' (ID: 309)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.0386528968811035
    2. '   ' → logprob: -1.2886528968811035
    3. 'w' → logprob: -1.9136528968811035
    4. '       ' → logprob: -2.5386528968811035
    5. 'print' → logprob: -2.6636528968811035
    6. ' break' → logprob: -3.1636528968811035
    7. '	break' → logprob: -4.7886528968811035
    8. '    ' → logprob: -5.2886528968811035
    9. ' w' → logprob: -5.4136528968811035
    10. '```' → logprob: -6.2886528968811035

Token 98: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0012639251071959734
    2. 'w' → logprob: -6.7512640953063965
    3. ' break' → logprob: -9.501263618469238
    4. 'print' → logprob: -11.126263618469238
    5. 'b' → logprob: -13.251263618469238
    6. '0' → logprob: -13.626263618469238
    7. '   ' → logprob: -14.626263618469238
    8. '	break' → logprob: -14.751263618469238
    9. '       ' → logprob: -15.876263618469238
    10. '```' → logprob: -16.376264572143555

Token 99: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000344044849043712
    2. ' print' → logprob: -8.500344276428223
    3. '
' → logprob: -9.000344276428223
    4. ')' → logprob: -12.375344276428223
    5. ' 
' → logprob: -12.500344276428223
    6. 'p' → logprob: -13.000344276428223
    7. '#print' → logprob: -13.375344276428223
    8. '(print' → logprob: -13.625344276428223
    9. '#' → logprob: -14.250344276428223
    10. '<|end|>' → logprob: -14.375344276428223

Token 100: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.696889623621246e-06
    2. ' print' → logprob: -13.00000286102295
    3. ')' → logprob: -15.37500286102295
    4. 'pr' → logprob: -17.125001907348633
    5. 'prin' → logprob: -17.250001907348633
    6. 'p' → logprob: -17.375001907348633
    7. '(print' → logprob: -17.375001907348633
    8. '#print' → logprob: -17.500001907348633
    9. '
' → logprob: -17.625001907348633
    10. '.print' → logprob: -18.625001907348633

Token 101: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16027957201004028
    2. '(sum' → logprob: -1.9102795124053955
    3. '("("' → logprob: -10.285279273986816
    4. '(s' → logprob: -12.160279273986816
    5. '(`' → logprob: -12.410279273986816
    6. '('' → logprob: -13.160279273986816
    7. '()' → logprob: -13.410279273986816
    8. '((' → logprob: -13.410279273986816
    9. ' (' → logprob: -13.410279273986816
    10. '(
' → logprob: -13.535279273986816

Token 102: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.375000953674316
    3. ')`' → logprob: -17.375
    4. '))' → logprob: -18.0
    5. ')
' → logprob: -18.25
    6. '）' → logprob: -20.0
    7. ')#' → logprob: -20.25
    8. '()' → logprob: -20.5
    9. '),' → logprob: -20.75
    10. ')**' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 100
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 76
Précision stricte (1ère position): 31.00%
Précision adaptée (1ère position): 37.00%
Précision (top 10): 76.00%
================================================================================
