================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import heapq

def Main():
    N, capacity = map(int, input().split())
    w_list = list()

    for _ in range(N):
        v, w = map(int, input().split())
        heapq.heappush(w_list, [-1*float(v/w), v, w] )

    total_value = 0

    while len(w_list) != 0:
        item = heapq.heappop(w_list)
        value_per_weight = -1*item[0]
        value = item[1]
        weight = item[2]
        
        if capacity >= weight:
            capacity -= weight
            total_value += value
        else:
            total_value += capacity * value_per_weight
            break
        
    print(total_value)

Main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.6100132496794686e-05
    2. '.\' → logprob: -11.125056266784668
    3. '(' → logprob: -11.625056266784668
    4. '.
' → logprob: -11.750056266784668
    5. '.​' → logprob: -12.000056266784668
    6. '."""' → logprob: -12.750056266784668
    7. '```' → logprob: -12.875056266784668
    8. '\' → logprob: -13.125056266784668
    9. '.

' → logprob: -13.250056266784668
    10. ' .' → logprob: -13.250056266784668

Token 4: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005786505062133074
    2. '\' → logprob: -8.125578880310059
    3. 'def' → logprob: -10.125578880310059
    4. 'import' → logprob: -10.375578880310059
    5. '```' → logprob: -10.500578880310059
    6. '.
' → logprob: -10.625578880310059
    7. '<|end|>' → logprob: -11.000578880310059
    8. '\n' → logprob: -11.250578880310059
    9. 'a' → logprob: -11.250578880310059
    10. '.heap' → logprob: -11.250578880310059

Token 5: ' Main' (ID: 7956)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002142408862709999
    2. ' heap' → logprob: -7.127142429351807
    3. ' a' → logprob: -8.377141952514648
    4. ' find' → logprob: -8.502141952514648
    5. ' he' → logprob: -8.627141952514648
    6. ' ' → logprob: -9.127141952514648
    7. '_' → logprob: -9.502141952514648
    8. '_heap' → logprob: -9.502141952514648
    9. ' f' → logprob: -9.627141952514648
    10. ' space' → logprob: -10.252141952514648

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017527721356600523
    2. ':' → logprob: -7.751752853393555
    3. ' (' → logprob: -8.001752853393555
    4. '(
' → logprob: -8.001752853393555
    5. '(:' → logprob: -8.501752853393555
    6. '```' → logprob: -9.126752853393555
    7. '():' → logprob: -9.376752853393555
    8. '(`' → logprob: -10.126752853393555
    9. '('' → logprob: -10.251752853393555
    10. '[' → logprob: -10.751752853393555

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6871466040611267
    2. '(' → logprob: -1.0621466636657715
    3. '(heap' → logprob: -2.1871466636657715
    4. ' ' → logprob: -4.5621466636657715
    5. '[' → logprob: -4.9371466636657715
    6. '    ' → logprob: -5.1871466636657715
    7. ' (' → logprob: -5.6871466636657715
    8. '(
' → logprob: -6.0621466636657715
    9. 'heap' → logprob: -6.0621466636657715
    10. '    
' → logprob: -6.4371466636657715

Token 8: ' N' (ID: 478)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5764366388320923
    2. '   ' → logprob: -2.2014365196228027
    3. ' ' → logprob: -2.4514365196228027
    4. 'n' → logprob: -2.4514365196228027
    5. 'h' → logprob: -3.0764365196228027
    6. ' heap' → logprob: -3.5764365196228027
    7. 'max' → logprob: -4.076436519622803
    8. 'data' → logprob: -4.701436519622803
    9. 'p' → logprob: -4.701436519622803
    10. 'q' → logprob: -5.201436519622803

Token 9: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22666649520397186
    2. ' ' → logprob: -1.9766664505004883
    3. '=' → logprob: -3.1016664505004883
    4. ',' → logprob: -4.226666450500488
    5. ' ,' → logprob: -5.976666450500488
    6. '   ' → logprob: -7.351666450500488
    7. '  ' → logprob: -8.101666450500488
    8. ')' → logprob: -8.226666450500488
    9. '    ' → logprob: -8.601666450500488
    10. '_' → logprob: -8.851666450500488

Token 10: ' capacity' (ID: 12241)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.4489927589893341
    2. ' M' → logprob: -1.4489927291870117
    3. 'K' → logprob: -2.5739927291870117
    4. 'M' → logprob: -3.0739927291870117
    5. ' ' → logprob: -6.448992729187012
    6. 'input' → logprob: -7.698992729187012
    7. ' k' → logprob: -7.823992729187012
    8. ' input' → logprob: -8.323992729187012
    9. 'k' → logprob: -8.698992729187012
    10. 'Q' → logprob: -8.948992729187012

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12696947157382965
    2. '=' → logprob: -2.126969575881958
    3. ' ' → logprob: -10.751969337463379
    4. ',' → logprob: -11.251969337463379
    5. '   ' → logprob: -13.501969337463379
    6. ')' → logprob: -13.626969337463379
    7. ' =
' → logprob: -13.626969337463379
    8. '  ' → logprob: -13.876969337463379
    9. ' ,' → logprob: -14.376969337463379
    10. '    ' → logprob: -15.001969337463379

Token 12: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.006305104121565819
    2. 'map' → logprob: -5.13130521774292
    3. ' input' → logprob: -8.006304740905762
    4. ' ' → logprob: -11.256304740905762
    5. ' list' → logprob: -11.256304740905762
    6. 'input' → logprob: -11.381304740905762
    7. '	map' → logprob: -13.506304740905762
    8. ' int' → logprob: -13.756304740905762
    9. ' [' → logprob: -14.006304740905762
    10. '0' → logprob: -14.256304740905762

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20798498392105103
    2. '(' → logprob: -2.2079849243164062
    3. '(str' → logprob: -2.8329849243164062
    4. '(lambda' → logprob: -4.082984924316406
    5. '<|end|>' → logprob: -7.082984924316406
    6. '(input' → logprob: -8.207984924316406
    7. 'int' → logprob: -8.707984924316406
    8. ')' → logprob: -8.957984924316406
    9. '```' → logprob: -9.082984924316406
    10. '[int' → logprob: -9.207984924316406

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004757869057357311
    2. ',int' → logprob: -5.379757881164551
    3. ',input' → logprob: -10.62975788116455
    4. ' ,' → logprob: -10.62975788116455
    5. '<|end|>' → logprob: -10.62975788116455
    6. ')' → logprob: -11.00475788116455
    7. ',float' → logprob: -11.37975788116455
    8. 'int' → logprob: -11.75475788116455
    9. ',line' → logprob: -12.50475788116455
    10. '(),' → logprob: -12.75475788116455

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31327128410339355
    2. ' input' → logprob: -1.3132712841033936
    3. ')' → logprob: -11.813271522521973
    4. 'int' → logprob: -14.563271522521973
    5. ' )' → logprob: -14.688271522521973
    6. '(input' → logprob: -14.938271522521973
    7. 'str' → logprob: -15.063271522521973
    8. ',input' → logprob: -15.938271522521973
    9. '=input' → logprob: -15.938271522521973
    10. '	input' → logprob: -16.563270568847656

Token 16: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.11633617430925369
    2. '()' → logprob: -2.6163361072540283
    3. '())' → logprob: -3.6163361072540283
    4. '(' → logprob: -4.991336345672607
    5. ')' → logprob: -7.241336345672607
    6. '('' → logprob: -7.241336345672607
    7. '());' → logprob: -7.491336345672607
    8. '()>' → logprob: -8.24133586883545
    9. '(),' → logprob: -8.36633586883545
    10. '()))' → logprob: -8.61633586883545

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.3358446166384965e-05
    2. 'strip' → logprob: -9.875053405761719
    3. ' split' → logprob: -14.125053405761719
    4. 'rstrip' → logprob: -14.625053405761719
    5. '(split' → logprob: -14.875053405761719
    6. ')' → logprob: -15.250053405761719
    7. 'spl' → logprob: -17.00005340576172
    8. '_split' → logprob: -18.75005340576172
    9. 'plit' → logprob: -19.00005340576172
    10. '```' → logprob: -19.50005340576172

Token 18: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009583894861862063
    2. '))' → logprob: -7.000958442687988
    3. '())' → logprob: -11.250958442687988
    4. '),' → logprob: -11.375958442687988
    5. '')' → logprob: -12.375958442687988
    6. '`)' → logprob: -13.000958442687988
    7. '()' → logprob: -13.000958442687988
    8. ')`' → logprob: -13.375958442687988
    9. ')))' → logprob: -13.625958442687988
    10. ')
' → logprob: -13.750958442687988

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21546149253845215
    2. '```' → logprob: -1.9654614925384521
    3. '
' → logprob: -3.465461492538452
    4. '    
' → logprob: -4.465461730957031
    5. ')' → logprob: -5.715461730957031
    6. '``' → logprob: -6.215461730957031
    7. '<|end|>' → logprob: -6.590461730957031
    8. ',' → logprob: -7.090461730957031
    9. '\n' → logprob: -7.090461730957031
    10. '`' → logprob: -7.965461730957031

Token 20: ' w' (ID: 286)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.3373548090457916
    2. 'items' → logprob: -1.3373547792434692
    3. '   ' → logprob: -4.33735466003418
    4. ' bags' → logprob: -6.83735466003418
    5. 'weights' → logprob: -7.21235466003418
    6. ' trucks' → logprob: -7.46235466003418
    7. ' goods' → logprob: -7.58735466003418
    8. ' weights' → logprob: -7.96235466003418
    9. '_items' → logprob: -7.96235466003418
    10. '`' → logprob: -8.08735466003418

Token 21: '_list' (ID: 4162)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.381334900856018
    2. 's' → logprob: -1.381334900856018
    3. ',' → logprob: -1.881334900856018
    4. '[' → logprob: -2.0063347816467285
    5. ' =' → logprob: -2.1313347816467285
    6. '=' → logprob: -4.0063347816467285
    7. ' ' → logprob: -4.1313347816467285
    8. '   ' → logprob: -4.3813347816467285
    9. 'a' → logprob: -4.7563347816467285
    10. '_' → logprob: -4.8813347816467285

Token 22: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44529280066490173
    2. ' =' → logprob: -1.5702928304672241
    3. '=' → logprob: -1.9452928304672241
    4. '.append' → logprob: -5.445292949676514
    5. ',' → logprob: -6.570292949676514
    6. '.' → logprob: -7.445292949676514
    7. ')' → logprob: -7.445292949676514
    8. '[:]' → logprob: -7.445292949676514
    9. '=[]' → logprob: -8.320292472839355
    10. '[]' → logprob: -9.320292472839355

Token 23: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5759629607200623
    2. ' list' → logprob: -0.8259629607200623
    3. '[]' → logprob: -11.950963020324707
    4. '[' → logprob: -12.075963020324707
    5. '[list' → logprob: -12.575963020324707
    6. ' [' → logprob: -12.700963020324707
    7. ' []' → logprob: -12.825963020324707
    8. 'map' → logprob: -13.950963020324707
    9. ' ' → logprob: -14.325963020324707
    10. ' map' → logprob: -15.575963020324707

Token 24: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2088201344013214
    2. '(map' → logprob: -1.833820104598999
    3. '(int' → logprob: -3.958820104598999
    4. '(input' → logprob: -4.833820343017578
    5. '()' → logprob: -7.083820343017578
    6. '(range' → logprob: -8.708820343017578
    7. '(eval' → logprob: -8.833820343017578
    8. '(filter' → logprob: -9.333820343017578
    9. '(

' → logprob: -9.833820343017578
    10. '(heap' → logprob: -10.583820343017578

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6437965631484985
    2. 'for' → logprob: -1.0187965631484985
    3. ' for' → logprob: -2.768796443939209
    4. '[' → logprob: -4.268796443939209
    5. ')' → logprob: -4.643796443939209
    6. '<|end|>' → logprob: -5.268796443939209
    7. '(' → logprob: -5.518796443939209
    8. ' ' → logprob: -5.643796443939209
    9. '	for' → logprob: -6.393796443939209
    10. '.' → logprob: -6.393796443939209

Token 26: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002116477582603693
    2. ' for' → logprob: -6.377116680145264
    3. 'w' → logprob: -8.002116203308105
    4. '   ' → logprob: -10.002116203308105
    5. '[' → logprob: -10.752116203308105
    6. '	for' → logprob: -12.627116203308105
    7. '[]' → logprob: -13.252116203308105
    8. ')' → logprob: -13.627116203308105
    9. '```' → logprob: -14.252116203308105
    10. 'f' → logprob: -14.627116203308105

Token 27: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8394796848297119
    2. ' ' → logprob: -0.9644796848297119
    3. ' i' → logprob: -1.714479684829712
    4. '_' → logprob: -5.089479446411133
    5. ' range' → logprob: -7.964479446411133
    6. '  ' → logprob: -8.464479446411133
    7. ' ‌' → logprob: -9.714479446411133
    8. ' ' → logprob: -11.214479446411133
    9. ' I' → logprob: -11.714479446411133
    10. 'i' → logprob: -12.089479446411133

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.031110508367419243
    2. 'in' → logprob: -3.5311105251312256
    3. ' ' → logprob: -7.0311102867126465
    4. 'import' → logprob: -9.281110763549805
    5. 'i' → logprob: -9.406110763549805
    6. 'range' → logprob: -9.531110763549805
    7. '  ' → logprob: -9.656110763549805
    8. 's' → logprob: -10.281110763549805
    9. 'n' → logprob: -10.656110763549805
    10. '```' → logprob: -11.156110763549805

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014168326742947102
    2. ' range' → logprob: -4.2641682624816895
    3. '(range' → logprob: -13.264168739318848
    4. 'put' → logprob: -13.889168739318848
    5. 'input' → logprob: -14.014168739318848
    6. '	range' → logprob: -14.514168739318848
    7. '```' → logprob: -15.264168739318848
    8. ' ' → logprob: -15.389168739318848
    9. '_range' → logprob: -16.13916778564453
    10. 'read' → logprob: -17.13916778564453

Token 30: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10183878988027573
    2. ' (' → logprob: -2.3518388271331787
    3. ' )' → logprob: -6.9768385887146
    4. ')' → logprob: -8.601839065551758
    5. ' ' → logprob: -8.726839065551758
    6. ' ()' → logprob: -9.476839065551758
    7. '   ' → logprob: -9.976839065551758
    8. '(int' → logprob: -9.976839065551758
    9. ' ,' → logprob: -10.476839065551758
    10. '  ' → logprob: -10.476839065551758

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029313452541828156
    2. '):
' → logprob: -6.252931118011475
    3. ')' → logprob: -7.377931118011475
    4. '   ' → logprob: -8.377931594848633
    5. ':' → logprob: -9.627931594848633
    6. ',' → logprob: -10.127931594848633
    7. ' ):' → logprob: -10.752931594848633
    8. '):
' → logprob: -12.252931594848633
    9. 'w' → logprob: -13.002931594848633
    10. '+' → logprob: -13.002931594848633

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09735069423913956
    2. '   ' → logprob: -2.847350597381592
    3. '    ' → logprob: -4.222350597381592
    4. ' w' → logprob: -4.472350597381592
    5. '<|end|>' → logprob: -5.222350597381592
    6. ' ' → logprob: -6.347350597381592
    7. ' 
' → logprob: -8.34735107421875
    8. '    
' → logprob: -8.84735107421875
    9. '<|end|>' → logprob: -8.97235107421875
    10. 'w' → logprob: -8.97235107421875

Token 33: ' v' (ID: 323)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.07690318673849106
    2. ' weight' → logprob: -2.9519031047821045
    3. 'w' → logprob: -3.9519031047821045
    4. 'weight' → logprob: -6.201903343200684
    5. '   ' → logprob: -8.576903343200684
    6. ' weights' → logprob: -8.701903343200684
    7. ' capacity' → logprob: -10.076903343200684
    8. 'weights' → logprob: -11.076903343200684
    9. ' wt' → logprob: -11.201903343200684
    10. ' line' → logprob: -11.451903343200684

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013721965253353119
    2. 'alue' → logprob: -5.138721942901611
    3. ',w' → logprob: -5.388721942901611
    4. ' ,' → logprob: -6.263721942901611
    5. ',v' → logprob: -7.513721942901611
    6. 'ALUE' → logprob: -8.51372241973877
    7. 'al' → logprob: -8.88872241973877
    8. 'w' → logprob: -9.63872241973877
    9. '_,' → logprob: -9.76372241973877
    10. ',a' → logprob: -10.13872241973877

Token 35: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5232439637184143
    2. ' w' → logprob: -0.8982439637184143
    3. ' ' → logprob: -10.14824390411377
    4. 'c' → logprob: -10.77324390411377
    5. ' c' → logprob: -11.77324390411377
    6. 'weight' → logprob: -11.89824390411377
    7. '_' → logprob: -12.27324390411377
    8. '_w' → logprob: -12.39824390411377
    9. '  ' → logprob: -12.52324390411377
    10. '   ' → logprob: -12.77324390411377

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39180296659469604
    2. '=' → logprob: -1.1418030261993408
    3. ',' → logprob: -5.391802787780762
    4. ')' → logprob: -8.516802787780762
    5. '<|end|>' → logprob: -9.641802787780762
    6. '<|end|>' → logprob: -10.766802787780762
    7. ' ' → logprob: -10.891802787780762
    8. '   ' → logprob: -11.016802787780762
    9. ' ,' → logprob: -11.766802787780762
    10. ')=' → logprob: -11.891802787780762

Token 37: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07003724575042725
    2. 'map' → logprob: -2.695037364959717
    3. ' ' → logprob: -9.820036888122559
    4. '   ' → logprob: -10.820036888122559
    5. '	map' → logprob: -10.945036888122559
    6. '  ' → logprob: -12.195036888122559
    7. ' ' → logprob: -13.320036888122559
    8. '　' → logprob: -14.945036888122559
    9. ' input' → logprob: -15.070036888122559
    10. 'm' → logprob: -15.195036888122559

Token 38: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00015872348740231246
    2. '(' → logprob: -8.875158309936523
    3. 'int' → logprob: -12.250158309936523
    4. '<int' → logprob: -12.250158309936523
    5. '(lambda' → logprob: -12.375158309936523
    6. '(input' → logprob: -13.375158309936523
    7. '[int' → logprob: -13.625158309936523
    8. ' (' → logprob: -14.500158309936523
    9. '(str' → logprob: -14.500158309936523
    10. '```' → logprob: -14.750158309936523

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018233880400657654
    2. ',input' → logprob: -4.643233776092529
    3. ')' → logprob: -5.143233776092529
    4. '(input' → logprob: -6.893233776092529
    5. '(),' → logprob: -7.018233776092529
    6. '),' → logprob: -8.268234252929688
    7. '<|end|>' → logprob: -9.393234252929688
    8. ',)' → logprob: -9.768234252929688
    9. '(' → logprob: -10.018234252929688
    10. ' ,' → logprob: -10.143234252929688

Token 40: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740801155567169
    2. ' input' → logprob: -0.9740800857543945
    3. ')' → logprob: -13.599080085754395
    4. '	input' → logprob: -14.349080085754395
    5. 'Input' → logprob: -15.224080085754395
    6. '_input' → logprob: -15.474080085754395
    7. '<input' → logprob: -15.599080085754395
    8. '=input' → logprob: -15.974080085754395
    9. ' ' → logprob: -16.09908103942871
    10. '(input' → logprob: -16.34908103942871

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.011373155459296e-05
    2. '()' → logprob: -10.625030517578125
    3. ')' → logprob: -12.250030517578125
    4. ' ().' → logprob: -14.875030517578125
    5. '())' → logprob: -15.375030517578125
    6. '().__' → logprob: -16.625030517578125
    7. '>().' → logprob: -16.625030517578125
    8. '.' → logprob: -17.000030517578125
    9. '(' → logprob: -17.125030517578125
    10. ').' → logprob: -17.250030517578125

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.054500666621607e-06
    2. 'strip' → logprob: -13.25000286102295
    3. 'rstrip' → logprob: -14.62500286102295
    4. ' split' → logprob: -15.00000286102295
    5. '(split' → logprob: -15.62500286102295
    6. ')' → logprob: -15.75000286102295
    7. 'plit' → logprob: -17.625003814697266
    8. 'spl' → logprob: -18.000003814697266
    9. '_split' → logprob: -18.125003814697266
    10. 'replace' → logprob: -18.750003814697266

Token 43: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4013994634151459
    2. '())' → logprob: -1.1513994932174683
    3. '()' → logprob: -4.276399612426758
    4. '())
' → logprob: -8.026399612426758
    5. '))' → logprob: -9.026399612426758
    6. ')
' → logprob: -9.651399612426758
    7. '()
' → logprob: -12.151399612426758
    8. '()))' → logprob: -12.776399612426758
    9. '`)' → logprob: -13.026399612426758
    10. '   ' → logprob: -13.776399612426758

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13259057700634003
    2. '   ' → logprob: -2.6325905323028564
    3. ')' → logprob: -4.3825907707214355
    4. '
' → logprob: -4.5075907707214355
    5. '        
' → logprob: -4.7575907707214355
    6. 'w' → logprob: -5.1325907707214355
    7. '    
' → logprob: -5.2575907707214355
    8. '<|end|>' → logprob: -6.0075907707214355
    9. '```' → logprob: -6.5075907707214355
    10. ' 
' → logprob: -7.0075907707214355

Token 45: ' heap' (ID: 37237)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.0813789963722229
    2. 'w' → logprob: -2.831378936767578
    3. '   ' → logprob: -4.081378936767578
    4. '       ' → logprob: -7.206378936767578
    5. '<|end|>' → logprob: -7.956378936767578
    6. ')' → logprob: -8.331378936767578
    7. 'v' → logprob: -8.331378936767578
    8. ' v' → logprob: -8.581378936767578
    9. ' heap' → logprob: -9.081378936767578
    10. '```' → logprob: -9.581378936767578

Token 46: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.941161776310764e-05
    2. '.he' → logprob: -10.250039100646973
    3. '.q' → logprob: -13.375039100646973
    4. '.push' → logprob: -13.750039100646973
    5. 'p' → logprob: -14.875039100646973
    6. '.append' → logprob: -15.500039100646973
    7. '.' → logprob: -15.625039100646973
    8. ' .' → logprob: -15.750039100646973
    9. ').' → logprob: -15.875039100646973
    10. '```' → logprob: -16.25004005432129

Token 47: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0014727222733199596
    2. '.' → logprob: -7.0014729499816895
    3. '.heap' → logprob: -7.5014729499816895
    4. '.push' → logprob: -12.376472473144531
    5. '.q' → logprob: -13.751472473144531
    6. ').' → logprob: -14.251472473144531
    7. '.append' → logprob: -14.376472473144531
    8. 'he' → logprob: -14.876472473144531
    9. '.h' → logprob: -15.376472473144531
    10. '​.' → logprob: -15.501472473144531

Token 48: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0004329341172706336
    2. 'ap' → logprob: -7.750432968139648
    3. 'a' → logprob: -13.625432968139648
    4. 'pp' → logprob: -14.500432968139648
    5. 'q' → logprob: -15.250432968139648
    6. 'qp' → logprob: -16.37543296813965
    7. 'push' → logprob: -16.62543296813965
    8. 'p' → logprob: -16.87543296813965
    9. '```' → logprob: -17.00043296813965
    10. 'ап' → logprob: -17.62543296813965

Token 49: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -7.703443770878948e-06
    2. 'push' → logprob: -12.000007629394531
    3. '```' → logprob: -15.125007629394531
    4. 'ly' → logprob: -15.375007629394531
    5. 'u' → logprob: -15.500007629394531
    6. 'l' → logprob: -15.625007629394531
    7. 'end' → logprob: -16.00000762939453
    8. 'op' → logprob: -16.12500762939453
    9. 'q' → logprob: -16.12500762939453
    10. 'le' → logprob: -16.37500762939453

Token 50: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.045052479952573776
    2. '(' → logprob: -3.1700525283813477
    3. '(heap' → logprob: -7.045052528381348
    4. '(q' → logprob: -7.545052528381348
    5. '(h' → logprob: -8.170052528381348
    6. '(v' → logprob: -9.295052528381348
    7. '(s' → logprob: -9.795052528381348
    8. '((' → logprob: -10.420052528381348
    9. '<|end|>' → logprob: -10.795052528381348
    10. '(k' → logprob: -11.045052528381348

Token 51: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.13388703338569e-06
    2. ')_' → logprob: -13.000009536743164
    3. '_w' → logprob: -13.125009536743164
    4. '_' → logprob: -14.000009536743164
    5. '_queue' → logprob: -14.250009536743164
    6. ',_' → logprob: -14.375009536743164
    7. 's' → logprob: -14.625009536743164
    8. ',' → logprob: -15.000009536743164
    9. 'list' → logprob: -15.125009536743164
    10. 'ist' → logprob: -15.125009536743164

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19311630725860596
    2. '(' → logprob: -1.818116307258606
    3. '((' → logprob: -5.068116188049316
    4. ',(' → logprob: -5.693116188049316
    5. '(w' → logprob: -6.693116188049316
    6. '),' → logprob: -7.068116188049316
    7. ' (' → logprob: -7.818116188049316
    8. ')' → logprob: -8.068116188049316
    9. ' ,' → logprob: -8.068116188049316
    10. ',w' → logprob: -8.818116188049316

Token 53: ' [-' (ID: 20191)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.22861571609973907
    2. '(-' → logprob: -2.3536157608032227
    3. ' (-' → logprob: -2.4786157608032227
    4. '(' → logprob: -3.9786157608032227
    5. '(w' → logprob: -5.228615760803223
    6. '(v' → logprob: -6.978615760803223
    7. ' -' → logprob: -8.728615760803223
    8. ' w' → logprob: -9.478615760803223
    9. '   ' → logprob: -9.728615760803223
    10. ')' → logprob: -10.228615760803223

Token 54: '1' (ID: 16)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.062377117574214935
    2. 'w' → logprob: -2.8123772144317627
    3. ' v' → logprob: -8.562376976013184
    4. '(v' → logprob: -9.687376976013184
    5. '   ' → logprob: -9.937376976013184
    6. ' w' → logprob: -10.312376976013184
    7. '-v' → logprob: -10.812376976013184
    8. '(w' → logprob: -11.812376976013184
    9. ')v' → logprob: -11.999876976013184
    10. 'vw' → logprob: -12.187376976013184

Token 55: '*' (ID: 9)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.8023099303245544
    2. ' w' → logprob: -0.9273099303245544
    3. 'v' → logprob: -2.427309989929199
    4. 'w' → logprob: -2.802309989929199
    5. ',' → logprob: -5.802309989929199
    6. ' *' → logprob: -6.927309989929199
    7. '*v' → logprob: -7.427309989929199
    8. '*w' → logprob: -7.427309989929199
    9. ' ,' → logprob: -8.0523099899292
    10. ' /' → logprob: -8.4273099899292

Token 56: 'float' (ID: 7829)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11345072835683823
    2. 'w' → logprob: -2.238450765609741
    3. ' v' → logprob: -7.738450527191162
    4. ' w' → logprob: -8.73845100402832
    5. '   ' → logprob: -11.36345100402832
    6. 'vw' → logprob: -12.36345100402832
    7. '(v' → logprob: -12.73845100402832
    8. ')v' → logprob: -12.86345100402832
    9. '	v' → logprob: -13.42595100402832
    10. '-v' → logprob: -13.67595100402832

Token 57: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.043574314564466476
    2. '(w' → logprob: -3.168574333190918
    3. '(' → logprob: -7.668574333190918
    4. 'v' → logprob: -10.793574333190918
    5. ']' → logprob: -11.043574333190918
    6. 'w' → logprob: -11.168574333190918
    7. '](' → logprob: -11.293574333190918
    8. '('' → logprob: -11.918574333190918
    9. '(value' → logprob: -12.043574333190918
    10. ')(' → logprob: -12.418574333190918

Token 58: '/w' (ID: 10407)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.9423432350158691
    2. ')' → logprob: -1.3173432350158691
    3. '/' → logprob: -1.3173432350158691
    4. '/w' → logprob: -2.817343235015869
    5. ' /' → logprob: -4.692343235015869
    6. '),' → logprob: -5.442343235015869
    7. '/v' → logprob: -7.817343235015869
    8. '/k' → logprob: -8.567342758178711
    9. '/)' → logprob: -9.192342758178711
    10. ' )' → logprob: -9.567342758178711

Token 59: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00464657275006175
    2. ')' → logprob: -5.5046467781066895
    3. ' ),' → logprob: -8.504646301269531
    4. ')]' → logprob: -8.504646301269531
    5. ',' → logprob: -9.754646301269531
    6. ')],' → logprob: -10.004646301269531
    7. '),(' → logprob: -10.254646301269531
    8. ')])' → logprob: -12.004646301269531
    9. '),
' → logprob: -13.379646301269531
    10. '))' → logprob: -13.754646301269531

Token 60: ' v' (ID: 323)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.08069434762001038
    2. ' w' → logprob: -2.9556944370269775
    3. 'v' → logprob: -4.080694198608398
    4. '-' → logprob: -5.455694198608398
    5. ' v' → logprob: -6.830694198608398
    6. '_' → logprob: -6.955694198608398
    7. '_w' → logprob: -7.705694198608398
    8. '-w' → logprob: -7.955694198608398
    9. ' -' → logprob: -8.080694198608398
    10. '   ' → logprob: -8.455694198608398

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002760176081210375
    2. '])' → logprob: -6.377760410308838
    3. ' ,' → logprob: -7.377760410308838
    4. ')])' → logprob: -8.62775993347168
    5. ')' → logprob: -8.87775993347168
    6. '   ' → logprob: -10.12775993347168
    7. ',w' → logprob: -11.25275993347168
    8. ']' → logprob: -11.75275993347168
    9. ')]' → logprob: -11.75275993347168
    10. ' ])' → logprob: -11.75275993347168

Token 62: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.20145505666732788
    2. ' w' → logprob: -1.7014551162719727
    3. ' ' → logprob: -11.326455116271973
    4. '   ' → logprob: -11.701455116271973
    5. 'v' → logprob: -12.326455116271973
    6. '1' → logprob: -12.576455116271973
    7. '  ' → logprob: -13.326455116271973
    8. '    ' → logprob: -13.388955116271973
    9. ' ' → logprob: -13.826455116271973
    10. ',' → logprob: -14.076455116271973

Token 63: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0033818420488387346
    2. ')])' → logprob: -6.253381729125977
    3. ')' → logprob: -6.628381729125977
    4. ')]' → logprob: -10.003381729125977
    5. ' ])' → logprob: -10.378381729125977
    6. '])
' → logprob: -11.378381729125977
    7. ']))' → logprob: -11.378381729125977
    8. ']' → logprob: -11.628381729125977
    9. '])]' → logprob: -12.128381729125977
    10. ']])' → logprob: -12.253381729125977

Token 64: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002201644005253911
    2. '))' → logprob: -6.127201557159424
    3. '])' → logprob: -12.377202033996582
    4. '   ' → logprob: -12.627202033996582
    5. ')))' → logprob: -12.752202033996582
    6. ')
' → logprob: -12.752202033996582
    7. ')])' → logprob: -13.752202033996582
    8. ' )' → logprob: -14.377202033996582
    9. '       ' → logprob: -14.502202033996582
    10. '）' → logprob: -15.002202033996582

Token 65: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20973257720470428
    2. '   ' → logprob: -1.9597325325012207
    3. ' ' → logprob: -4.459732532501221
    4. '
' → logprob: -4.834732532501221
    5. '<|end|>' → logprob: -4.834732532501221
    6. ' 
' → logprob: -5.084732532501221
    7. '  
' → logprob: -5.334732532501221
    8. '    
' → logprob: -5.834732532501221
    9. ' )' → logprob: -6.334732532501221
    10. '    ' → logprob: -7.084732532501221

Token 66: ' total' (ID: 3609)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08790416270494461
    2. '   ' → logprob: -3.087904214859009
    3. ' ' → logprob: -4.58790397644043
    4. '
' → logprob: -4.83790397644043
    5. '\n' → logprob: -5.71290397644043
    6. '<|end|>' → logprob: -5.71290397644043
    7. ' 
' → logprob: -5.96290397644043
    8. '#' → logprob: -6.08790397644043
    9. '    
' → logprob: -6.58790397644043
    10. ' )' → logprob: -6.58790397644043

Token 67: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4944188594818115
    2. '_value' → logprob: -0.9944188594818115
    3. '_val' → logprob: -5.119419097900391
    4. '_weight' → logprob: -5.119419097900391
    5. '_capacity' → logprob: -5.619419097900391
    6. '_v' → logprob: -6.619419097900391
    7. '_w' → logprob: -6.869419097900391
    8. '=' → logprob: -6.994419097900391
    9. '_cap' → logprob: -7.244419097900391
    10. 'Value' → logprob: -9.49441909790039

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14598456025123596
    2. '=' → logprob: -2.020984649658203
    3. ' +=' → logprob: -5.770984649658203
    4. '+=' → logprob: -9.270984649658203
    5. ',' → logprob: -10.145984649658203
    6. '_' → logprob: -10.520984649658203
    7. ' ' → logprob: -12.145984649658203
    8. '  ' → logprob: -12.645984649658203
    9. ')' → logprob: -12.770984649658203
    10. ' ,' → logprob: -12.770984649658203

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.348460853099823
    2. ' ' → logprob: -1.2234609127044678
    3. ' ' → logprob: -12.223461151123047
    4. '```' → logprob: -13.598461151123047
    5. 'capacity' → logprob: -13.660961151123047
    6. '   ' → logprob: -13.660961151123047
    7. '  ' → logprob: -14.410961151123047
    8. '<|end|>' → logprob: -14.410961151123047
    9. 'total' → logprob: -14.660961151123047
    10. '1' → logprob: -14.723461151123047

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005114490049891174
    2. ' ' → logprob: -7.625511646270752
    3. 'capacity' → logprob: -10.750511169433594
    4. '   ' → logprob: -14.375511169433594
    5. 'float' → logprob: -14.875511169433594
    6. ' capacity' → logprob: -15.250511169433594
    7. '  ' → logprob: -15.625511169433594
    8. 'cap' → logprob: -15.875511169433594
    9. 'capac' → logprob: -16.625511169433594
    10. '-cap' → logprob: -16.750511169433594

Token 71: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5636695027351379
    2. '
' → logprob: -1.1886694431304932
    3. '<|end|>' → logprob: -2.688669443130493
    4. '    
' → logprob: -4.063669681549072
    5. '\n' → logprob: -4.313669681549072
    6. ',' → logprob: -4.813669681549072
    7. ' while' → logprob: -5.688669681549072
    8. ':' → logprob: -5.938669681549072
    9. '```' → logprob: -6.313669681549072
    10. ' ' → logprob: -6.563669681549072

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38093188405036926
    2. '
' → logprob: -1.7559318542480469
    3. '<|end|>' → logprob: -3.130931854248047
    4. '    
' → logprob: -3.505931854248047
    5. ' while' → logprob: -4.005931854248047
    6. ' ' → logprob: -4.755931854248047
    7. ' 
' → logprob: -4.755931854248047
    8. '   
' → logprob: -5.005931854248047
    9. ',' → logprob: -5.005931854248047
    10. '\n' → logprob: -5.380931854248047

Token 73: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.012218939140439034
    2. ' while' → logprob: -4.512218952178955
    3. 'for' → logprob: -7.387218952178955
    4. '   ' → logprob: -8.137218475341797
    5. 'capacity' → logprob: -8.387218475341797
    6. ' for' → logprob: -12.387218475341797
    7. 'current' → logprob: -12.512218475341797
    8. ' ' → logprob: -12.762218475341797
    9. '```' → logprob: -12.887218475341797
    10. '    ' → logprob: -13.137218475341797

Token 74: ' len' (ID: 4631)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.17670795321464539
    2. ' capacity' → logprob: -1.9267079830169678
    3. 'capacity' → logprob: -4.801707744598389
    4. 'w' → logprob: -5.676707744598389
    5. ' len' → logprob: -5.801707744598389
    6. '(cap' → logprob: -6.926707744598389
    7. ' N' → logprob: -9.051708221435547
    8. '(w' → logprob: -9.614208221435547
    9. ' (' → logprob: -9.614208221435547
    10. '(len' → logprob: -9.739208221435547

Token 75: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.004639219027012587
    2. '(' → logprob: -5.379639148712158
    3. '(s' → logprob: -11.879639625549316
    4. '(cap' → logprob: -12.504639625549316
    5. ' (' → logprob: -13.004639625549316
    6. 'w' → logprob: -13.379639625549316
    7. '(heap' → logprob: -13.379639625549316
    8. '(
' → logprob: -14.004639625549316
    9. '(v' → logprob: -15.129639625549316
    10. '(queue' → logprob: -15.129639625549316

Token 76: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.968312951968983e-06
    2. '_' → logprob: -12.000009536743164
    3. 'list' → logprob: -13.500009536743164
    4. '_l' → logprob: -14.125009536743164
    5. ')_' → logprob: -14.750009536743164
    6. ')' → logprob: -15.125009536743164
    7. '_lists' → logprob: -15.250009536743164
    8. '_lst' → logprob: -16.125009536743164
    9. ' _' → logprob: -16.250009536743164
    10. 'ist' → logprob: -16.375009536743164

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0852232426404953
    2. ')>' → logprob: -3.0852231979370117
    3. '>' → logprob: -3.4602231979370117
    4. ' and' → logprob: -5.835223197937012
    5. 'and' → logprob: -6.710223197937012
    6. ' >' → logprob: -7.960223197937012
    7. '):' → logprob: -10.210223197937012
    8. ' )' → logprob: -11.835223197937012
    9. '&gt' → logprob: -12.710223197937012
    10. ')!=' → logprob: -12.960223197937012

Token 78: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6404227614402771
    2. '>' → logprob: -0.7654227614402771
    3. ' and' → logprob: -4.890422821044922
    4. 'and' → logprob: -8.390422821044922
    5. ')>' → logprob: -11.140422821044922
    6. ':' → logprob: -11.265422821044922
    7. ')' → logprob: -12.890422821044922
    8. '>:' → logprob: -12.890422821044922
    9. '()>' → logprob: -12.890422821044922
    10. '{' → logprob: -13.265422821044922

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993676722049713
    2. ' ' → logprob: -2.694936752319336
    3. ' ' → logprob: -15.569936752319336
    4. '   ' → logprob: -15.819936752319336
    5. '  ' → logprob: -16.319936752319336
    6. ')' → logprob: -18.069936752319336
    7. '```' → logprob: -18.444936752319336
    8. '    ' → logprob: -18.569936752319336
    9. '=' → logprob: -18.819936752319336
    10. '00' → logprob: -19.132436752319336

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001242772996192798
    2. ' ' → logprob: -9.000123977661133
    3. ')' → logprob: -14.625123977661133
    4. '   ' → logprob: -16.000123977661133
    5. '```' → logprob: -16.125123977661133
    6. '  ' → logprob: -17.125123977661133
    7. '    ' → logprob: -18.437623977661133
    8. '>' → logprob: -18.625123977661133
    9. '`' → logprob: -18.687623977661133
    10. ' and' → logprob: -18.750123977661133

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.9424725148128346e-05
    2. '):' → logprob: -10.750049591064453
    3. ',' → logprob: -11.250049591064453
    4. ':
' → logprob: -12.125049591064453
    5. ' :' → logprob: -12.875049591064453
    6. '   ' → logprob: -13.000049591064453
    7. ':**' → logprob: -13.375049591064453
    8. ')' → logprob: -14.375049591064453
    9. '<|end|>' → logprob: -14.750049591064453
    10. ' and' → logprob: -14.750049591064453

Token 82: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7457418441772461
    2. '   ' → logprob: -1.745741844177246
    3. '       ' → logprob: -1.870741844177246
    4. ',' → logprob: -2.495741844177246
    5. '<|end|>' → logprob: -3.370741844177246
    6. ')' → logprob: -3.495741844177246
    7. ' ' → logprob: -4.370741844177246
    8. '):' → logprob: -4.495741844177246
    9. '[' → logprob: -4.995741844177246
    10. ' :' → logprob: -5.370741844177246

Token 83: ' item' (ID: 2169)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0902667045593262
    2. ',' → logprob: -1.2152667045593262
    3. ' ,' → logprob: -1.9652667045593262
    4. '   ' → logprob: -2.465266704559326
    5. ' ' → logprob: -3.340266704559326
    6. ' item' → logprob: -3.965266704559326
    7. '-' → logprob: -4.215266704559326
    8. ' current' → logprob: -4.590266704559326
    9. 'item' (adapté à ' item') → logprob: -4.715266704559326
    10. '    ' → logprob: -5.215266704559326

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005948117468506098
    2. '=' → logprob: -5.130948066711426
    3. 's' → logprob: -11.255948066711426
    4. ' =
' → logprob: -13.255948066711426
    5. '[' → logprob: -14.005948066711426
    6. ')' → logprob: -14.130948066711426
    7. ',' → logprob: -14.255948066711426
    8. ' ' → logprob: -14.755948066711426
    9. '   ' → logprob: -14.880948066711426
    10. ']' → logprob: -15.255948066711426

Token 85: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.6933709979057312
    2. 'heap' → logprob: -0.6933709979057312
    3. ' he' → logprob: -9.193370819091797
    4. 'he' → logprob: -9.568370819091797
    5. ' w' → logprob: -11.568370819091797
    6. '(heap' → logprob: -11.568370819091797
    7. 'w' → logprob: -11.818370819091797
    8. '.heap' → logprob: -11.880870819091797
    9. '   ' → logprob: -12.818370819091797
    10. ' ' → logprob: -13.193370819091797

Token 86: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'p' → logprob: -17.875
    3. '[' → logprob: -18.25
    4. '.q' → logprob: -19.375
    5. '```' → logprob: -19.75
    6. '	q' → logprob: -20.125
    7. 'qh' → logprob: -20.5
    8. 'ql' → logprob: -20.5
    9. '.pop' → logprob: -20.875
    10. '[q' → logprob: -20.875

Token 87: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -2.975612187583465e-05
    2. '.heap' → logprob: -10.875029563903809
    3. '.' → logprob: -11.875029563903809
    4. 'he' → logprob: -12.750029563903809
    5. '.pop' → logprob: -14.750029563903809
    6. ' .' → logprob: -15.500029563903809
    7. '.p' → logprob: -16.500030517578125
    8. ' he' → logprob: -16.625030517578125
    9. '.h' → logprob: -16.750030517578125
    10. 'q' → logprob: -17.250030517578125

Token 88: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.135819760151207e-05
    2. 'pp' → logprob: -10.00007152557373
    3. 'ap' → logprob: -10.87507152557373
    4. 'q' → logprob: -12.25007152557373
    5. 'appe' → logprob: -14.62507152557373
    6. 'a' → logprob: -14.62507152557373
    7. 'p' → logprob: -14.87507152557373
    8. '[' → logprob: -15.75007152557373
    9. 'qp' → logprob: -15.87507152557373
    10. 'e' → logprob: -16.000070571899414

Token 89: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.10026911646127701
    2. 'ush' → logprob: -2.350269079208374
    3. 'app' → logprob: -10.600269317626953
    4. 'pop' → logprob: -11.100269317626953
    5. 'e' → logprob: -12.100269317626953
    6. 'o' → logprob: -12.350269317626953
    7. 'opp' → logprob: -12.600269317626953
    8. '```' → logprob: -13.225269317626953
    9. '   ' → logprob: -13.350269317626953
    10. 'he' → logprob: -13.725269317626953

Token 90: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.4288005530834198
    2. '(' → logprob: -1.0538005828857422
    3. '(s' → logprob: -10.678800582885742
    4. '(
' → logprob: -11.553800582885742
    5. '(h' → logprob: -11.803800582885742
    6. '(

' → logprob: -11.928800582885742
    7. '(q' → logprob: -11.928800582885742
    8. '(n' → logprob: -12.053800582885742
    9. '<|end|>' → logprob: -12.053800582885742
    10. '(heap' → logprob: -12.178800582885742

Token 91: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.001088066608645022
    2. '_' → logprob: -6.8760881423950195
    3. '_l' → logprob: -10.25108814239502
    4. 'list' → logprob: -12.25108814239502
    5. '_)' → logprob: -12.50108814239502
    6. '_lst' → logprob: -12.87608814239502
    7. '_lists' → logprob: -13.25108814239502
    8. 'l' → logprob: -13.37608814239502
    9. 'ist' → logprob: -13.50108814239502
    10. ')' → logprob: -13.50108814239502

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.77022064034827e-05
    2. ')
' → logprob: -9.250097274780273
    3. ']' → logprob: -15.000097274780273
    4. ' )' → logprob: -15.250097274780273
    5. ')

' → logprob: -15.375097274780273
    6. ')`' → logprob: -15.500097274780273
    7. '[' → logprob: -15.875097274780273
    8. '   ' → logprob: -16.125097274780273
    9. ')
' → logprob: -16.625097274780273
    10. ')#' → logprob: -17.375097274780273

Token 93: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.806994616985321
    2. '<|end|>' → logprob: -1.3069946765899658
    3. '   ' → logprob: -2.431994676589966
    4. '
' → logprob: -2.681994676589966
    5. '       ' → logprob: -3.056994676589966
    6. '    
' → logprob: -3.681994676589966
    7. '  
' → logprob: -4.556994438171387
    8. ' ' → logprob: -4.681994438171387
    9. '   
' → logprob: -5.181994438171387
    10. '        
' → logprob: -5.306994438171387

Token 94: ' value' (ID: 1432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1029907688498497
    2. ' if' → logprob: -3.8529908657073975
    3. ',' → logprob: -3.9779908657073975
    4. '   ' → logprob: -4.227990627288818
    5. ' w' → logprob: -5.227990627288818
    6. '       ' → logprob: -5.352990627288818
    7. '    ' → logprob: -5.602990627288818
    8. 'w' → logprob: -5.727990627288818
    9. ' 
' → logprob: -5.727990627288818
    10. '[' → logprob: -6.102990627288818

Token 95: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.39583343267440796
    2. ',' → logprob: -2.0208334922790527
    3. ' =' → logprob: -2.0208334922790527
    4. '=' → logprob: -3.5208334922790527
    5. '_' → logprob: -4.645833492279053
    6. '_ratio' → logprob: -5.020833492279053
    7. '[' → logprob: -5.520833492279053
    8. 'per' → logprob: -6.020833492279053
    9. '_density' → logprob: -6.520833492279053
    10. 'Per' → logprob: -6.770833492279053

Token 96: '_weight' (ID: 34711)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015750790014863014
    2. '_ratio' → logprob: -5.015750885009766
    3. '_per' → logprob: -5.890750885009766
    4. '_item' → logprob: -6.515750885009766
    5. '_unit' → logprob: -7.390750885009766
    6. '_weight' → logprob: -7.515750885009766
    7. '_value' → logprob: -7.515750885009766
    8. '_p' → logprob: -7.640750885009766
    9. '_piece' → logprob: -8.015750885009766
    10. '_val' → logprob: -8.265750885009766

Token 97: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5664427876472473
    2. ' =' → logprob: -0.9414427876472473
    3. '=' → logprob: -4.066442966461182
    4. ' ' → logprob: -4.316442966461182
    5. ' *' → logprob: -5.691442966461182
    6. ')' → logprob: -5.941442966461182
    7. ' [' → logprob: -6.191442966461182
    8. ',' → logprob: -6.691442966461182
    9. '   ' → logprob: -7.691442966461182
    10. '*' → logprob: -7.691442966461182

Token 98: ' -' (ID: 533)
  Prédit: '-item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-item' → logprob: -0.26875394582748413
    2. ' -' → logprob: -1.643754005432129
    3. '-' → logprob: -3.518754005432129
    4. ' item' → logprob: -4.518754005432129
    5. 'item' → logprob: -6.393754005432129
    6. '-items' → logprob: -9.768754005432129
    7. ' float' → logprob: -10.143754005432129
    8. 'float' → logprob: -11.268754005432129
    9. 'abs' → logprob: -11.893754005432129
    10. '=item' → logprob: -12.018754005432129

Token 99: '1' (ID: 16)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.0011021106038242579
    2. '1' → logprob: -7.126101970672607
    3. ' item' → logprob: -8.126102447509766
    4. '(item' → logprob: -14.251102447509766
    5. '	item' → logprob: -14.751102447509766
    6. ')item' → logprob: -15.251102447509766
    7. '=item' → logprob: -15.751102447509766
    8. 'float' → logprob: -16.376102447509766
    9. '[item' → logprob: -16.501102447509766
    10. 'int' → logprob: -16.501102447509766

Token 100: '*' (ID: 9)
  Prédit: '[item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[item' → logprob: -0.6082876920700073
    2. 'item' → logprob: -1.6082876920700073
    3. ' item' → logprob: -1.9832876920700073
    4. '*' → logprob: -2.358287811279297
    5. '<|end|>' → logprob: -4.608287811279297
    6. '[' → logprob: -5.358287811279297
    7. ' *' → logprob: -5.733287811279297
    8. ')item' → logprob: -6.483287811279297
    9. '=item' → logprob: -6.983287811279297
    10. '	item' → logprob: -7.358287811279297

Token 101: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -1.1875571544806007e-05
    2. ' item' → logprob: -11.375011444091797
    3. 'float' → logprob: -15.250011444091797
    4. '(item' → logprob: -16.625011444091797
    5. 'int' → logprob: -17.250011444091797
    6. ')item' → logprob: -17.625011444091797
    7. '=item' → logprob: -17.750011444091797
    8. '	item' → logprob: -17.875011444091797
    9. '[item' → logprob: -18.500011444091797
    10. '<|end|>' → logprob: -18.750011444091797

Token 102: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -13.75000286102295
    3. '```' → logprob: -14.50000286102295
    4. ' [' → logprob: -15.00000286102295
    5. '\[' → logprob: -15.50000286102295
    6. '][' → logprob: -15.50000286102295
    7. '[
' → logprob: -16.125001907348633
    8. '1' → logprob: -16.750001907348633
    9. 's' → logprob: -16.750001907348633
    10. '   ' → logprob: -17.625001907348633

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. '[' → logprob: -16.000001907348633
    4. '۰' → logprob: -16.625001907348633
    5. '```' → logprob: -17.312501907348633
    6. '   ' → logprob: -17.375001907348633
    7. '０' → logprob: -17.875001907348633
    8. '০' → logprob: -18.312501907348633
    9. '٠' → logprob: -18.812501907348633
    10. '`' → logprob: -19.062501907348633

Token 104: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040435850620269775
    2. '<|end|>' → logprob: -3.290435791015625
    3. ' )' → logprob: -7.165435791015625
    4. ']' → logprob: -7.290435791015625
    5. '<|end|>' → logprob: -8.165435791015625
    6. ')
' → logprob: -8.540435791015625
    7. '   ' → logprob: -8.790435791015625
    8. '       ' → logprob: -9.040435791015625
    9. ' ' → logprob: -9.665435791015625
    10. ',' → logprob: -10.290435791015625

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24501369893550873
    2. '<|end|>' → logprob: -1.87001371383667
    3. ',' → logprob: -3.49501371383667
    4. '
' → logprob: -4.37001371383667
    5. '   ' → logprob: -5.62001371383667
    6. ')' → logprob: -5.74501371383667
    7. '        
' → logprob: -5.87001371383667
    8. ' if' → logprob: -6.24501371383667
    9. ' 
' → logprob: -6.37001371383667
    10. ' ' → logprob: -6.37001371383667

Token 106: ' value' (ID: 1432)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3194358348846436
    2. ' if' → logprob: -1.5694358348846436
    3. ',' → logprob: -1.6944358348846436
    4. ' ' → logprob: -2.6944358348846436
    5. ' weight' → logprob: -2.8194358348846436
    6. '        ' → logprob: -3.0694358348846436
    7. '<|end|>' → logprob: -3.4444358348846436
    8. ' 
' → logprob: -3.6944358348846436
    9. ' amount' → logprob: -4.194436073303223
    10. '        
' → logprob: -4.194436073303223

Token 107: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7120493054389954
    2. ' =' → logprob: -1.0870492458343506
    3. '_per' → logprob: -2.2120492458343506
    4. '=' → logprob: -2.9620492458343506
    5. '<|end|>' → logprob: -5.21204948425293
    6. '_' → logprob: -6.58704948425293
    7. ' ' → logprob: -7.33704948425293
    8. '_remaining' → logprob: -7.58704948425293
    9. '.' → logprob: -7.71204948425293
    10. ' ,' → logprob: -8.21204948425293

Token 108: ' item' (ID: 2169)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.239205241203308
    2. ' value' → logprob: -1.364205241203308
    3. ' item' → logprob: -1.614205241203308
    4. 'value' → logprob: -2.3642053604125977
    5. 'item' → logprob: -2.4892053604125977
    6. 'min' → logprob: -2.6142053604125977
    7. 'capacity' → logprob: -6.364205360412598
    8. ' total' → logprob: -6.739205360412598
    9. ' capacity' → logprob: -6.739205360412598
    10. 'total' → logprob: -6.989205360412598

Token 109: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5822400857578032e-05
    2. '1' → logprob: -11.500025749206543
    3. '```' → logprob: -11.875025749206543
    4. '2' → logprob: -12.250025749206543
    5. '[
' → logprob: -13.625025749206543
    6. ' [' → logprob: -13.625025749206543
    7. '][' → logprob: -14.750025749206543
    8. '\[' → logprob: -14.875025749206543
    9. '`' → logprob: -15.375025749206543
    10. '>[' → logprob: -16.75002670288086

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019042797794099897
    2. '2' → logprob: -8.625190734863281
    3. ' ' → logprob: -12.375190734863281
    4. '   ' → logprob: -13.125190734863281
    5. ']' → logprob: -13.500190734863281
    6. '[' → logprob: -13.812690734863281
    7. '```' → logprob: -14.250190734863281
    8. '][' → logprob: -14.812690734863281
    9. '-' → logprob: -16.00019073486328
    10. '...' → logprob: -16.00019073486328

Token 111: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10577826201915741
    2. ',' → logprob: -2.605778217315674
    3. '<|end|>' → logprob: -3.730778217315674
    4. ',
' → logprob: -6.980778217315674
    5. '        
' → logprob: -6.980778217315674
    6. '<|end|>' → logprob: -8.855778694152832
    7. '
' → logprob: -8.980778694152832
    8. ' ,' → logprob: -9.230778694152832
    9. ' weight' → logprob: -9.855778694152832
    10. '        ' → logprob: -9.980778694152832

Token 113: ' weight' (ID: 6049)
  Prédit: ' weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.27518290281295776
    2. '       ' → logprob: -2.1501829624176025
    3. 'weight' (adapté à ' weight') → logprob: -2.1501829624176025
    4. ',' → logprob: -5.650182723999023
    5. ' capacity' → logprob: -6.025182723999023
    6. 'capacity' → logprob: -8.025182723999023
    7. ' amount' → logprob: -8.275182723999023
    8. '
' → logprob: -8.400182723999023
    9. ',
' → logprob: -8.650182723999023
    10. ' w' → logprob: -9.150182723999023

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02977154776453972
    2. '=' → logprob: -3.529771566390991
    3. ' -=' → logprob: -12.15477180480957
    4. '<|end|>' → logprob: -12.27977180480957
    5. ' ' → logprob: -12.52977180480957
    6. ' -' → logprob: -12.90477180480957
    7. '<|end|>' → logprob: -13.65477180480957
    8. '-' → logprob: -13.65477180480957
    9. '   ' → logprob: -14.52977180480957
    10. '	' → logprob: -14.90477180480957

Token 115: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.054891765117645264
    2. 'item' → logprob: -2.92989182472229
    3. '	item' → logprob: -12.554891586303711
    4. ')item' → logprob: -13.179891586303711
    5. ' ' → logprob: -13.554891586303711
    6. '=item' → logprob: -13.679891586303711
    7. ' user' → logprob: -14.554891586303711
    8. '$item' → logprob: -15.429891586303711
    9. 'user' → logprob: -16.05489158630371
    10. '[item' → logprob: -16.30489158630371

Token 116: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009132515988312662
    2. '2' → logprob: -7.000913143157959
    3. '```' → logprob: -14.250913619995117
    4. '[
' → logprob: -14.625913619995117
    5. '][' → logprob: -14.875913619995117
    6. ' [' → logprob: -16.250913619995117
    7. '
' → logprob: -17.250913619995117
    8. '>[' → logprob: -17.625913619995117
    9. '\[' → logprob: -17.875913619995117
    10. ' ' → logprob: -18.125913619995117

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.875003814697266
    3. '```' → logprob: -14.250003814697266
    4. '[' → logprob: -14.625003814697266
    5. ']' → logprob: -14.750003814697266
    6. '-' → logprob: -14.875003814697266
    7. '   ' → logprob: -15.750003814697266
    8. '1' → logprob: -16.250003814697266
    9. '])' → logprob: -17.062503814697266
    10. '۲' → logprob: -17.250003814697266

Token 118: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006769603583961725
    2. '<|end|>' → logprob: -5.75676965713501
    3. ')
' → logprob: -6.00676965713501
    4. '       ' → logprob: -7.88176965713501
    5. '<|end|>' → logprob: -8.381769180297852
    6. ']' → logprob: -9.131769180297852
    7. '
' → logprob: -9.256769180297852
    8. ')

' → logprob: -9.381769180297852
    9. '   ' → logprob: -9.506769180297852
    10. ' ' → logprob: -10.256769180297852

Token 119: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26119428873062134
    2. '<|end|>' → logprob: -2.2611942291259766
    3. '
' → logprob: -2.3861942291259766
    4. '   ' → logprob: -4.761194229125977
    5. '        
' → logprob: -5.011194229125977
    6. '  
' → logprob: -5.011194229125977
    7. '    
' → logprob: -5.636194229125977
    8. ' 
' → logprob: -5.636194229125977
    9. ' if' → logprob: -6.386194229125977
    10. ',' → logprob: -7.136194229125977

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03949730843305588
    2. ' if' → logprob: -3.9144973754882812
    3. '   ' → logprob: -5.164497375488281
    4. 'if' → logprob: -5.539497375488281
    5. '        
' → logprob: -5.664497375488281
    6. ' ' → logprob: -6.539497375488281
    7. ' 
' → logprob: -7.164497375488281
    8. '    ' → logprob: -7.289497375488281
    9. '        ' → logprob: -7.414497375488281
    10. '<|end|>' → logprob: -7.539497375488281

Token 121: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0027751552406698465
    2. ' if' → logprob: -6.002775192260742
    3. 'take' → logprob: -9.502775192260742
    4. '       ' → logprob: -9.627775192260742
    5. 'can' → logprob: -9.627775192260742
    6. '```' → logprob: -10.627775192260742
    7. '   ' → logprob: -10.752775192260742
    8. '        
' → logprob: -11.502775192260742
    9. 'use' → logprob: -11.752775192260742
    10. 'taken' → logprob: -11.877775192260742

Token 122: ' capacity' (ID: 12241)
  Prédit: ' weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.7337111234664917
    2. ' capacity' → logprob: -0.7337111234664917
    3. 'weight' → logprob: -3.8587112426757812
    4. 'capacity' → logprob: -3.9837112426757812
    5. ' cap' → logprob: -11.858711242675781
    6. ' ' → logprob: -12.233711242675781
    7. ' ' → logprob: -12.608711242675781
    8. ' w' → logprob: -12.608711242675781
    9. 'cap' → logprob: -12.608711242675781
    10. '   ' → logprob: -12.733711242675781

Token 123: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.03251294046640396
    2. '>=' → logprob: -3.532512903213501
    3. ' >' → logprob: -6.53251314163208
    4. '>' → logprob: -8.032512664794922
    5. ' ==' → logprob: -8.157512664794922
    6. ' <' → logprob: -8.282512664794922
    7. ' <=' → logprob: -8.657512664794922
    8. '==' → logprob: -9.032512664794922
    9. ' ' → logprob: -9.282512664794922
    10. '<' → logprob: -11.157512664794922

Token 124: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.06197037547826767
    2. ' weight' → logprob: -2.8119704723358154
    3. '       ' → logprob: -13.436970710754395
    4. '   ' → logprob: -14.436970710754395
    5. ' ' → logprob: -15.811970710754395
    6. 'weig' → logprob: -15.811970710754395
    7. '.weight' → logprob: -16.686969757080078
    8. 'w' → logprob: -16.686969757080078
    9. '    ' → logprob: -17.061969757080078
    10. ' ' → logprob: -17.186969757080078

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002865854650735855
    2. ':
' → logprob: -5.877865791320801
    3. '):' → logprob: -10.1278657913208
    4. '       ' → logprob: -11.8778657913208
    5. '<|end|>' → logprob: -12.5028657913208
    6. ',' → logprob: -12.8778657913208
    7. ':

' → logprob: -12.8778657913208
    8. '):
' → logprob: -13.7528657913208
    9. ' :' → logprob: -13.8778657913208
    10. ' and' → logprob: -14.5028657913208

Token 126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024570059031248093
    2. '       ' → logprob: -3.7745699882507324
    3. '        
' → logprob: -8.27457046508789
    4. '```' → logprob: -8.39957046508789
    5. '            
' → logprob: -8.52457046508789
    6. '<|end|>' → logprob: -8.77457046508789
    7. '               ' → logprob: -9.14957046508789
    8. 'capacity' → logprob: -9.39957046508789
    9. ' capacity' → logprob: -9.52457046508789
    10. '
' → logprob: -9.77457046508789

Token 127: ' capacity' (ID: 12241)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07325880229473114
    2. 'total' → logprob: -3.448258876800537
    3. ' total' → logprob: -4.073258876800537
    4. ' capacity' → logprob: -5.073258876800537
    5. 'capacity' (adapté à ' capacity') → logprob: -5.073258876800537
    6. '       ' → logprob: -5.573258876800537
    7. '
' → logprob: -5.948258876800537
    8. '               ' → logprob: -6.448258876800537
    9. '   ' → logprob: -7.698258876800537
    10. '            
' → logprob: -8.448258399963379

Token 128: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.026501620188355446
    2. '-=' → logprob: -3.6515016555786133
    3. '-' → logprob: -9.276501655578613
    4. '           ' → logprob: -10.651501655578613
    5. '        ' → logprob: -10.901501655578613
    6. '       ' → logprob: -11.276501655578613
    7. '   ' → logprob: -11.401501655578613
    8. '=' → logprob: -11.401501655578613
    9. '    ' → logprob: -11.651501655578613
    10. ' -' → logprob: -12.026501655578613

Token 129: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.048587486147880554
    2. ' weight' → logprob: -3.0485875606536865
    3. '(weight' → logprob: -17.423587799072266
    4. 'weig' → logprob: -17.423587799072266
    5. 'w' → logprob: -17.923587799072266
    6. '.weight' → logprob: -17.923587799072266
    7. '       ' → logprob: -18.173587799072266
    8. '           ' → logprob: -18.798587799072266
    9. 'weights' → logprob: -19.423587799072266
    10. ' ' → logprob: -19.423587799072266

Token 130: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39866217970848083
    2. '
' → logprob: -1.1486622095108032
    3. 'total' → logprob: -5.148662090301514
    4. '<|end|>' → logprob: -6.023662090301514
    5. '       ' → logprob: -6.273662090301514
    6. ',' → logprob: -7.898662090301514
    7. '```' → logprob: -8.648662567138672
    8. ' total' → logprob: -8.773662567138672
    9. '            
' → logprob: -8.898662567138672
    10. ',total' → logprob: -9.148662567138672

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011881384998559952
    2. 'total' → logprob: -5.011881351470947
    3. '
' → logprob: -5.511881351470947
    4. '       ' → logprob: -7.636881351470947
    5. ' total' → logprob: -8.136881828308105
    6. '<|end|>' → logprob: -8.886881828308105
    7. '            
' → logprob: -10.386881828308105
    8. '               ' → logprob: -10.511881828308105
    9. '```' → logprob: -10.761881828308105
    10. ',total' → logprob: -10.761881828308105

Token 132: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.014268693514168262
    2. ' total' → logprob: -4.26426887512207
    3. 'value' → logprob: -9.76426887512207
    4. '           ' → logprob: -10.01426887512207
    5. '       ' → logprob: -13.63926887512207
    6. ' value' → logprob: -14.38926887512207
    7. '   ' → logprob: -15.13926887512207
    8. '	total' → logprob: -15.26426887512207
    9. 'Total' → logprob: -15.38926887512207
    10. ' ' → logprob: -16.13926887512207

Token 133: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -13.375001907348633
    3. 'value' → logprob: -16.125001907348633
    4. '_val' → logprob: -16.125001907348633
    5. ' _' → logprob: -16.250001907348633
    6. '_Value' → logprob: -18.500001907348633
    7. '_total' → logprob: -18.750001907348633
    8. '_values' → logprob: -18.875001907348633
    9. '_amount' → logprob: -19.125001907348633
    10. '_code' → logprob: -20.000001907348633

Token 134: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16299854218959808
    2. '+=' → logprob: -1.9129985570907593
    3. '+' → logprob: -5.912998676300049
    4. ' +' → logprob: -10.28799819946289
    5. ']+=' → logprob: -11.28799819946289
    6. '<|end|>' → logprob: -11.28799819946289
    7. '+='' → logprob: -12.91299819946289
    8. '+="' → logprob: -13.66299819946289
    9. ' ' → logprob: -14.16299819946289
    10. '+=(' → logprob: -14.16299819946289

Token 135: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.048591118305921555
    2. ' value' → logprob: -3.048591136932373
    3. ' ' → logprob: -14.173590660095215
    4. 'v' → logprob: -14.298590660095215
    5. 'weight' → logprob: -14.673590660095215
    6. '```' → logprob: -15.048590660095215
    7. '(value' → logprob: -15.423590660095215
    8. '	value' → logprob: -15.548590660095215
    9. '"value' → logprob: -15.673590660095215
    10. '$value' → logprob: -15.923590660095215

Token 136: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11960294097661972
    2. '
' → logprob: -2.869602918624878
    3. '<|end|>' → logprob: -3.619602918624878
    4. 'else' → logprob: -4.244603157043457
    5. ' else' → logprob: -4.494603157043457
    6. '\n' → logprob: -6.369603157043457
    7. 'elif' → logprob: -6.994603157043457
    8. ' elif' → logprob: -8.494603157043457
    9. '        
' → logprob: -8.744603157043457
    10. '    
' → logprob: -8.869603157043457

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03500364348292351
    2. 'else' → logprob: -4.285003662109375
    3. ' else' → logprob: -4.660003662109375
    4. 'elif' → logprob: -5.660003662109375
    5. '<|end|>' → logprob: -5.910003662109375
    6. '
' → logprob: -6.035003662109375
    7. '\n' → logprob: -6.535003662109375
    8. ' elif' → logprob: -7.660003662109375
    9. '   ' → logprob: -8.410003662109375
    10. '\' → logprob: -8.910003662109375

Token 138: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.29514971375465393
    2. '       ' → logprob: -1.7951496839523315
    3. ' else' → logprob: -2.420149803161621
    4. '   ' → logprob: -7.795149803161621
    5. 'elif' → logprob: -9.045149803161621
    6. '```' → logprob: -11.170149803161621
    7. '	else' → logprob: -11.420149803161621
    8. ' elif' → logprob: -12.045149803161621
    9. '
' → logprob: -13.420149803161621
    10. '_else' → logprob: -13.545149803161621

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15243585407733917
    2. '           ' → logprob: -2.277435779571533
    3. ':
' → logprob: -3.277435779571533
    4. '       ' → logprob: -7.527435779571533
    5. ',' → logprob: -8.402436256408691
    6. '               ' → logprob: -9.777436256408691
    7. ' :' → logprob: -10.027436256408691
    8. ' if' → logprob: -10.277436256408691
    9. ' :
' → logprob: -10.402436256408691
    10. '   ' → logprob: -10.777436256408691

Token 140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13097397983074188
    2. ' total' → logprob: -2.505974054336548
    3. '       ' → logprob: -3.755974054336548
    4. 'total' → logprob: -4.130973815917969
    5. ' capacity' → logprob: -7.380973815917969
    6. ' value' → logprob: -8.755973815917969
    7. '```' → logprob: -8.755973815917969
    8. '(total' → logprob: -9.005973815917969
    9. 'capacity' → logprob: -9.005973815917969
    10. '   ' → logprob: -9.380973815917969

Token 141: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.26065075397491455
    2. 'total' (adapté à ' total') → logprob: -1.5106507539749146
    3. '           ' → logprob: -5.010650634765625
    4. 'fraction' → logprob: -6.885650634765625
    5. ' fraction' → logprob: -7.510650634765625
    6. 'value' → logprob: -9.510650634765625
    7. '       ' → logprob: -9.635650634765625
    8. ' value' → logprob: -9.635650634765625
    9. '   ' → logprob: -9.885650634765625
    10. '	total' → logprob: -10.385650634765625

Token 142: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0005848454311490059
    2. '_weight' → logprob: -7.750585079193115
    3. 'value' → logprob: -8.875584602355957
    4. '<|end|>' → logprob: -12.000584602355957
    5. '_' → logprob: -12.125584602355957
    6. 'Value' → logprob: -14.250584602355957
    7. 'weight' → logprob: -14.375584602355957
    8. '_capacity' → logprob: -15.250584602355957
    9. '_VALUE' → logprob: -15.500584602355957
    10. '_val' → logprob: -15.750584602355957

Token 143: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7151081562042236
    2. '+=' → logprob: -0.7151081562042236
    3. '+' → logprob: -3.8401081562042236
    4. '+=(' → logprob: -9.215107917785645
    5. ' +' → logprob: -10.215107917785645
    6. ']+=' → logprob: -10.965107917785645
    7. '+='' → logprob: -11.465107917785645
    8. ' ' → logprob: -11.465107917785645
    9. '<|end|>' → logprob: -11.715107917785645
    10. '=' → logprob: -11.840107917785645

Token 144: ' capacity' (ID: 12241)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5077944397926331
    2. ' value' → logprob: -1.1327943801879883
    3. 'capacity' → logprob: -3.0077943801879883
    4. ' capacity' → logprob: -3.6327943801879883
    5. 'weight' → logprob: -9.257794380187988
    6. ' weight' → logprob: -10.007794380187988
    7. 'cap' → logprob: -11.007794380187988
    8. '(value' → logprob: -11.382794380187988
    9. '(cap' → logprob: -12.257794380187988
    10. ' ' → logprob: -12.507794380187988

Token 145: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.005237548612058163
    2. ' *' → logprob: -5.255237579345703
    3. '*object' → logprob: -12.630237579345703
    4. 'value' → logprob: -16.630237579345703
    5. '＊' → logprob: -16.630237579345703
    6. '```' → logprob: -16.630237579345703
    7. '*(' → logprob: -16.755237579345703
    8. ' ' → logprob: -17.005237579345703
    9. '**' → logprob: -17.005237579345703
    10. ' ' → logprob: -17.380237579345703

Token 146: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.004081247374415398
    2. ' value' → logprob: -5.5040812492370605
    3. '(value' → logprob: -13.254080772399902
    4. 'float' → logprob: -15.504080772399902
    5. '.value' → logprob: -16.00408172607422
    6. ' ' → logprob: -16.12908172607422
    7. ''value' → logprob: -16.25408172607422
    8. 'alue' → logprob: -16.37908172607422
    9. '	value' → logprob: -16.62908172607422
    10. '"value' → logprob: -16.62908172607422

Token 147: '_per' (ID: 10938)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1667754352092743
    2. '_per' → logprob: -2.1667754650115967
    3. 'per' → logprob: -3.7917754650115967
    4. ' /' → logprob: -4.166775226593018
    5. '/value' → logprob: -7.666775226593018
    6. 'weight' → logprob: -8.416775703430176
    7. ' per' → logprob: -9.416775703430176
    8. '/per' → logprob: -9.666775703430176
    9. '*' → logprob: -10.291775703430176
    10. '/view' → logprob: -10.916775703430176

Token 148: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.004238666035234928
    2. 'weight' → logprob: -5.879238605499268
    3. '_' → logprob: -6.629238605499268
    4. '_w' → logprob: -9.754239082336426
    5. '_we' → logprob: -11.004239082336426
    6. '_per' → logprob: -11.379239082336426
    7. '_unit' → logprob: -12.004239082336426
    8. 'w' → logprob: -12.754239082336426
    9. '_value' → logprob: -12.754239082336426
    10. 'weig' → logprob: -12.754239082336426

Token 149: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004420862998813391
    2. '       ' → logprob: -6.129420757293701
    3. 'break' → logprob: -6.754420757293701
    4. 'return' → logprob: -8.12942123413086
    5. ' break' → logprob: -8.25442123413086
    6. '
' → logprob: -8.25442123413086
    7. '               ' → logprob: -9.62942123413086
    8. '   ' → logprob: -9.87942123413086
    9. ' return' → logprob: -11.00442123413086
    10. '.' → logprob: -11.12942123413086

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004428101237863302
    2. '       ' → logprob: -6.004427909851074
    3. 'break' → logprob: -6.629427909851074
    4. ' break' → logprob: -7.629427909851074
    5. '   ' → logprob: -10.004427909851074
    6. 'return' → logprob: -10.254427909851074
    7. '               ' → logprob: -10.754427909851074
    8. '\' → logprob: -12.004427909851074
    9. '\n' → logprob: -12.379427909851074
    10. '```' → logprob: -12.504427909851074

Token 151: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.030577601864933968
    2. ' break' → logprob: -3.6555776596069336
    3. 'capacity' → logprob: -6.030577659606934
    4. '           ' → logprob: -6.405577659606934
    5. ' capacity' → logprob: -9.030577659606934
    6. 'return' → logprob: -10.030577659606934
    7. '       ' → logprob: -11.155577659606934
    8. '   ' → logprob: -11.655577659606934
    9. '	break' → logprob: -11.780577659606934
    10. 'cap' → logprob: -11.905577659606934

Token 152: '
        
' (ID: 20417)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08137229084968567
    2. '
' → logprob: -2.7063722610473633
    3. '<|end|>' → logprob: -5.331372261047363
    4. 'print' → logprob: -5.706372261047363
    5. '    
' → logprob: -6.331372261047363
    6. '\n' → logprob: -7.206372261047363
    7. 'return' → logprob: -8.706372261047363
    8. '```' → logprob: -9.081372261047363
    9. 'if' → logprob: -9.206372261047363
    10. '  
' → logprob: -9.706372261047363

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10045100748538971
    2. 'print' → logprob: -2.3504509925842285
    3. '    
' → logprob: -9.100451469421387
    4. '
' → logprob: -10.100451469421387
    5. ' print' → logprob: -10.225451469421387
    6. 'return' → logprob: -10.225451469421387
    7. 'if' → logprob: -11.600451469421387
    8. '```' → logprob: -12.725451469421387
    9. '  
' → logprob: -13.100451469421387
    10. '	print' → logprob: -13.600451469421387

Token 154: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.018746089190244675
    2. '   ' → logprob: -4.0187458992004395
    3. ' print' → logprob: -8.143746376037598
    4. 'return' → logprob: -8.143746376037598
    5. '    
' → logprob: -11.643746376037598
    6. ' return' → logprob: -13.768746376037598
    7. ' ' → logprob: -13.893746376037598
    8. '
' → logprob: -14.143746376037598
    9. 'if' → logprob: -14.143746376037598
    10. '	print' → logprob: -14.143746376037598

Token 155: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1269553005695343
    2. '(total' → logprob: -2.126955270767212
    3. '()' → logprob: -11.751955032348633
    4. 'total' → logprob: -12.376955032348633
    5. '(round' → logprob: -12.376955032348633
    6. ' (' → logprob: -12.751955032348633
    7. '("("' → logprob: -13.126955032348633
    8. '('' → logprob: -13.376955032348633
    9. '(
' → logprob: -13.501955032348633
    10. '(int' → logprob: -14.251955032348633

Token 156: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.133198283147067e-05
    2. '_val' → logprob: -10.250051498413086
    3. '_' → logprob: -11.625051498413086
    4. '_total' → logprob: -12.500051498413086
    5. ')_' → logprob: -13.375051498413086
    6. ')' → logprob: -13.875051498413086
    7. '_values' → logprob: -15.250051498413086
    8. 'value' → logprob: -15.750051498413086
    9. '_Value' → logprob: -16.500051498413086
    10. '_)' → logprob: -16.625051498413086

Token 157: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -12.87500286102295
    3. ')
' → logprob: -14.87500286102295
    4. '   ' → logprob: -17.125003814697266
    5. ')}' → logprob: -17.250003814697266
    6. ')`' → logprob: -17.625003814697266
    7. '()' → logprob: -17.875003814697266
    8. ')#' → logprob: -18.000003814697266
    9. '())' → logprob: -18.250003814697266
    10. ' ' → logprob: -18.750003814697266

Token 158: 'Main' (ID: 8447)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2307436466217041
    2. '
' → logprob: -2.105743646621704
    3. '<|end|>' → logprob: -3.355743646621704
    4. '\n' → logprob: -3.480743646621704
    5. '#' → logprob: -5.480743408203125
    6. '(' → logprob: -6.105743408203125
    7. '(Main' → logprob: -6.105743408203125
    8. '```' → logprob: -6.105743408203125
    9. ' if' → logprob: -6.605743408203125
    10. ')' → logprob: -6.855743408203125

Token 159: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016080355271697044
    2. '(' → logprob: -4.141080379486084
    3. '();' → logprob: -10.891079902648926
    4. '()
' → logprob: -11.016079902648926
    5. '()`' → logprob: -12.766079902648926
    6. '(
' → logprob: -12.891079902648926
    7. '()

' → logprob: -13.891079902648926
    8. '()">' → logprob: -14.141079902648926
    9. '()<' → logprob: -14.516079902648926
    10. ' ()' → logprob: -14.516079902648926


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 157
Tokens correctement prédits (1ère position, stricte): 75
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 130
Précision stricte (1ère position): 47.77%
Précision adaptée (1ère position): 52.23%
Précision (top 10): 82.80%
================================================================================
