================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/env python

#
# FileName: 	fractional_knapsack
# CreatedDate:  2020-06-08 21:46:16 +0900
# LastModified: 2020-06-08 21:53:14 +0900
#

import os
import sys
#import numpy as np
#import pandas as pd

def main():
    N,W = map(int,input().split())
    p = []
    for _ in range(N):
        v,w = map(int,input().split())
        p.append([v/w,v,w])
#    print(p)
    p.sort(reverse=True)
    index=0
    profit=0
    while W>0 and index<N:
        if W>=p[index][2]:
            profit+=p[index][1]
            W-=p[index][2]
        else:
            profit+=p[index][1]*W/p[index][2]
            W-=W
        index+=1
    print(profit)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4815027713775635
    2. '/env' → logprob: -1.2315027713775635
    3. '/python' → logprob: -2.4815027713775635
    4. '/bash' → logprob: -5.231502532958984
    5. '/bin' → logprob: -6.731502532958984
    6. 'python' → logprob: -9.481502532958984
    7. '#!/' → logprob: -11.106502532958984
    8. 'env' → logprob: -11.481502532958984
    9. '/b' → logprob: -11.481502532958984
    10. '/per' → logprob: -12.481502532958984

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.38691186904907227
    2. ' python' → logprob: -1.1369118690490723
    3. 'bash' → logprob: -10.636911392211914
    4. ' bash' → logprob: -11.261911392211914
    5. '/python' → logprob: -13.886911392211914
    6. 'perl' → logprob: -14.136911392211914
    7. 'node' → logprob: -14.511911392211914
    8. 'py' → logprob: -15.011911392211914
    9. 'ruby' → logprob: -15.136911392211914
    10. ' node' → logprob: -15.386911392211914

Token 5: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.16474248468875885
    2. '\' → logprob: -2.2897424697875977
    3. '```' → logprob: -3.6647424697875977
    4. 'import' → logprob: -4.164742469787598
    5. '  
' → logprob: -5.914742469787598
    6. '3' → logprob: -5.914742469787598
    7. ' 
' → logprob: -7.164742469787598
    8. '#' → logprob: -7.539742469787598
    9. '\r' → logprob: -7.539742469787598
    10. '' → logprob: -7.789742469787598

Token 6: '#
' (ID: 11240)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.011567160487174988
    2. '```' → logprob: -5.261567115783691
    3. '-' → logprob: -6.136567115783691
    4. '#' → logprob: -6.386567115783691
    5. '-import' → logprob: -7.261567115783691
    6. '\n' → logprob: -7.386567115783691
    7. 'python' → logprob: -8.261567115783691
    8. 'im' → logprob: -8.386567115783691
    9. ' import' → logprob: -9.011567115783691
    10. 'print' → logprob: -9.136567115783691

Token 7: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07142272591590881
    2. 'import' → logprob: -2.821422815322876
    3. '#!/' → logprob: -5.321422576904297
    4. '#!' → logprob: -6.196422576904297
    5. '\n' → logprob: -6.821422576904297
    6. '#
' → logprob: -7.696422576904297
    7. '```' → logprob: -7.946422576904297
    8. '\' → logprob: -8.821422576904297
    9. ' ' → logprob: -9.321422576904297
    10. 'from' → logprob: -9.571422576904297

Token 8: ' File' (ID: 5262)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14304015040397644
    2. '#' → logprob: -2.768040180206299
    3. ' #' → logprob: -3.393040180206299
    4. '#!/' → logprob: -4.518040180206299
    5. 'import' → logprob: -4.893040180206299
    6. ' 
' → logprob: -5.143040180206299
    7. ' -*-' → logprob: -5.768040180206299
    8. ' ```' → logprob: -6.518040180206299
    9. '```' → logprob: -6.643040180206299
    10. '#!' → logprob: -6.768040180206299

Token 9: 'Name' (ID: 864)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26685693860054016
    2. '_' → logprob: -1.8918569087982178
    3. ' _' → logprob: -3.2668569087982178
    4. '<|end|>' → logprob: -5.016857147216797
    5. '  ' → logprob: -5.141857147216797
    6. ':' → logprob: -5.266857147216797
    7. '_name' → logprob: -5.516857147216797
    8. '```' → logprob: -5.516857147216797
    9. 'space' → logprob: -6.516857147216797
    10. ' name' → logprob: -6.641857147216797

Token 10: ':' (ID: 25)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.32681703567504883
    2. ':' → logprob: -1.4518170356750488
    3. ' ' → logprob: -3.576817035675049
    4. ' =' → logprob: -4.701817035675049
    5. '_' → logprob: -5.326817035675049
    6. '=' → logprob: -6.326817035675049
    7. ' _' → logprob: -7.826817035675049
    8. '  ' → logprob: -9.20181655883789
    9. '```' → logprob: -9.57681655883789
    10. '#' → logprob: -9.70181655883789

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8829242587089539
    2. ' script' → logprob: -0.8829242587089539
    3. ' main' → logprob: -2.2579243183135986
    4. ' test' → logprob: -4.2579240798950195
    5. 'script' → logprob: -4.6329240798950195
    6. ' example' → logprob: -4.7579240798950195
    7. 'example' → logprob: -5.1329240798950195
    8. ' setup' → logprob: -5.1329240798950195
    9. ' README' → logprob: -5.1329240798950195
    10. ' app' → logprob: -5.8829240798950195

Token 12: '	f' (ID: 4222)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.8868959546089172
    2. 'script' → logprob: -1.0118958950042725
    3. 'example' → logprob: -2.0118958950042725
    4. 'app' → logprob: -2.7618958950042725
    5. 'my' → logprob: -5.011896133422852
    6. 'test' → logprob: -5.136896133422852
    7. 'setup' → logprob: -5.386896133422852
    8. 'mys' → logprob: -5.636896133422852
    9. 'server' → logprob: -6.261896133422852
    10. 'sample' → logprob: -6.886896133422852

Token 13: 'raction' (ID: 33644)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2584402859210968
    2. 'u' → logprob: -2.6334402561187744
    3. 'e' → logprob: -3.0084402561187744
    4. 'r' → logprob: -3.1334402561187744
    5. 'o' → logprob: -3.3834402561187744
    6. 'ile' → logprob: -4.5084404945373535
    7. 'a' → logprob: -5.6334404945373535
    8. 'l' → logprob: -6.0084404945373535
    9. 'ormat' → logprob: -6.5084404945373535
    10. 't' → logprob: -6.6334404945373535

Token 14: 'al' (ID: 280)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31318002939224243
    2. 'al' → logprob: -1.9381799697875977
    3. '_' → logprob: -2.6881799697875977
    4. '.' → logprob: -3.8131799697875977
    5. '_s' → logprob: -3.9381799697875977
    6. '.py' → logprob: -4.688179969787598
    7. 'a' → logprob: -6.063179969787598
    8. '.s' → logprob: -6.563179969787598
    9. '._' → logprob: -7.063179969787598
    10. '_.' → logprob: -7.813179969787598

Token 15: '_kn' (ID: 155966)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014030921272933483
    2. ' _' → logprob: -4.764030933380127
    3. '.py' → logprob: -6.889030933380127
    4. '_p' → logprob: -7.389030933380127
    5. '_space' → logprob: -7.514030933380127
    6. '_python' → logprob: -7.639030933380127
    7. '_py' → logprob: -7.639030933380127
    8. '_s' → logprob: -8.264030456542969
    9. '.' → logprob: -8.264030456542969
    10. '_linear' → logprob: -8.639030456542969

Token 16: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.06232874095439911
    2. 'ap' → logprob: -2.812328815460205
    3. 'aps' → logprob: -8.187328338623047
    4. 'a' → logprob: -10.687328338623047
    5. 'ап' → logprob: -11.187328338623047
    6. '_ap' → logprob: -11.312328338623047
    7. '_' → logprob: -11.437328338623047
    8. '.py' → logprob: -12.187328338623047
    9. '```' → logprob: -12.187328338623047
    10. '\' → logprob: -12.937328338623047

Token 17: '
' (ID: 198)
  Prédit: '.py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.py' → logprob: -0.2539214491844177
    2. '_' → logprob: -1.6289215087890625
    3. '.' → logprob: -3.6289215087890625
    4. '_
' → logprob: -7.8789215087890625
    5. '_.' → logprob: -8.003921508789062
    6. '```' → logprob: -8.128921508789062
    7. '#' → logprob: -9.003921508789062
    8. ' .' → logprob: -9.628921508789062
    9. '.p' → logprob: -9.753921508789062
    10. '._' → logprob: -10.253921508789062

Token 18: '#' (ID: 2)
  Prédit: '.py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.py' → logprob: -0.3471022844314575
    2. '.' → logprob: -1.4721022844314575
    3. '_' → logprob: -2.847102165222168
    4. '_.' → logprob: -6.097102165222168
    5. '```' → logprob: -6.222102165222168
    6. '_
' → logprob: -7.972102165222168
    7. 'def' → logprob: -8.347102165222168
    8. '#' → logprob: -8.472102165222168
    9. '._' → logprob: -8.972102165222168
    10. '[' → logprob: -9.972102165222168

Token 19: ' Created' (ID: 8912)
  Prédit: '.py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.py' → logprob: -0.035492975264787674
    2. '_' → logprob: -4.160492897033691
    3. '.' → logprob: -4.410492897033691
    4. '
' → logprob: -5.660492897033691
    5. '_
' → logprob: -6.910492897033691
    6. '_.' → logprob: -7.660492897033691
    7. '```' → logprob: -7.660492897033691
    8. ' .' → logprob: -8.410492897033691
    9. '#' → logprob: -8.535492897033691
    10. '_py' → logprob: -8.910492897033691

Token 20: 'Date' (ID: 2507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18540050089359283
    2. ':' → logprob: -2.5604004859924316
    3. ' ' → logprob: -3.0604004859924316
    4. ' =' → logprob: -4.310400485992432
    5. '<|end|>' → logprob: -5.185400485992432
    6. '=' → logprob: -5.310400485992432
    7. '.py' → logprob: -5.310400485992432
    8. ' _' → logprob: -5.685400485992432
    9. ' by' → logprob: -6.310400485992432
    10. '  ' → logprob: -6.435400485992432

Token 21: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7911194562911987
    2. ':' → logprob: -1.0411194562911987
    3. ' =' → logprob: -1.9161194562911987
    4. ' :' → logprob: -3.1661195755004883
    5. ' ' → logprob: -5.916119575500488
    6. '```' → logprob: -7.666119575500488
    7. '.py' → logprob: -7.916119575500488
    8. '_' → logprob: -8.291119575500488
    9. '#' → logprob: -10.041119575500488
    10. '[:]' → logprob: -10.291119575500488

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003464413806796074
    2. ' #' → logprob: -6.628464221954346
    3. '<|end|>' → logprob: -7.003464221954346
    4. '  ' → logprob: -8.003464698791504
    5. '#' → logprob: -8.003464698791504
    6. '202' → logprob: -8.128464698791504
    7. ' ' → logprob: -10.128464698791504
    8. '<|end|>' → logprob: -10.378464698791504
    9. '  
' → logprob: -10.503464698791504
    10. ' 
' → logprob: -10.628464698791504

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013255634345114231
    2. '<|end|>' → logprob: -4.888255596160889
    3. ' 
' → logprob: -6.513255596160889
    4. '202' → logprob: -6.513255596160889
    5. ' #' → logprob: -6.763255596160889
    6. '#' → logprob: -7.013255596160889
    7. '  ' → logprob: -8.513256072998047
    8. ' 

' → logprob: -9.513256072998047
    9. '<|end|>' → logprob: -9.888256072998047
    10. '  
' → logprob: -9.888256072998047

Token 24: '202' (ID: 1323)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04827595129609108
    2. '202' → logprob: -3.173275947570801
    3. '<|end|>' → logprob: -5.548275947570801
    4. '  ' → logprob: -7.673275947570801
    5. '<|end|>' → logprob: -7.923275947570801
    6. ' #' → logprob: -9.0482759475708
    7. '#' → logprob: -9.2982759475708
    8. ' 
' → logprob: -9.6732759475708
    9. '```' → logprob: -9.6732759475708
    10. '2' → logprob: -11.1732759475708

Token 25: '0' (ID: 15)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.22926416993141174
    2. '4' → logprob: -1.6042641401290894
    3. '2' → logprob: -5.979264259338379
    4. '1' → logprob: -7.604264259338379
    5. ' ' → logprob: -7.854264259338379
    6. '0' → logprob: -8.479264259338379
    7. '5' → logprob: -8.979264259338379
    8. '6' → logprob: -10.541764259338379
    9. '34' → logprob: -11.479264259338379
    10. '-' → logprob: -11.791764259338379

Token 26: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8370804786682129
    2. '_' → logprob: -0.8370804786682129
    3. '#' → logprob: -3.087080478668213
    4. '<|end|>' → logprob: -3.087080478668213
    5. '
' → logprob: -4.087080478668213
    6. ' ' → logprob: -5.087080478668213
    7. '_
' → logprob: -5.212080478668213
    8. '0' → logprob: -5.837080478668213
    9. '

' → logprob: -5.837080478668213
    10. '_

' → logprob: -6.337080478668213

Token 27: '06' (ID: 3218)
  Prédit: '23'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '23' → logprob: -0.15262919664382935
    2. '01' → logprob: -3.0276291370391846
    3. '22' → logprob: -3.9026291370391846
    4. '02' → logprob: -3.9026291370391846
    5. '03' → logprob: -4.152629375457764
    6. '05' → logprob: -4.402629375457764
    7. '04' → logprob: -5.402629375457764
    8. '12' → logprob: -5.777629375457764
    9. '09' → logprob: -5.902629375457764
    10. '20' → logprob: -6.027629375457764

Token 28: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06671958416700363
    2. '2' → logprob: -3.9417195320129395
    3. '_
' → logprob: -4.1917195320129395
    4. '#' → logprob: -4.6917195320129395
    5. '0' → logprob: -5.1917195320129395
    6. '_

' → logprob: -5.1917195320129395
    7. '3' → logprob: -5.6917195320129395
    8. '-' → logprob: -6.0667195320129395
    9. '.py' → logprob: -6.4417195320129395
    10. '1' → logprob: -7.1917195320129395

Token 29: '08' (ID: 3062)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -1.8158032894134521
    2. '1' → logprob: -2.190803289413452
    3. '2' → logprob: -2.315803289413452
    4. '10' → logprob: -2.690803289413452
    5. '12' → logprob: -2.940803289413452
    6. '23' → logprob: -2.940803289413452
    7. '25' → logprob: -3.065803289413452
    8. '22' → logprob: -3.315803289413452
    9. '18' → logprob: -3.315803289413452
    10. '17' → logprob: -3.440803289413452

Token 30: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.39137861132621765
    2. 'import' → logprob: -2.01637864112854
    3. '```' → logprob: -2.89137864112854
    4. '<|end|>' → logprob: -3.14137864112854
    5. '#!/' → logprob: -3.51637864112854
    6. '
' → logprob: -3.64137864112854
    7. '

' → logprob: -4.641378402709961
    8. ' 

' → logprob: -5.016378402709961
    9. '\n' → logprob: -5.141378402709961
    10. ' 
' → logprob: -5.891378402709961

Token 31: '21' (ID: 2040)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2328232228755951
    2. '#!/' → logprob: -2.107823133468628
    3. 'import' → logprob: -2.982823133468628
    4. '```' → logprob: -4.357823371887207
    5. 'def' → logprob: -5.232823371887207
    6. '
' → logprob: -5.357823371887207
    7. '<|end|>' → logprob: -5.607823371887207
    8. '#
' → logprob: -5.982823371887207
    9. '

' → logprob: -6.607823371887207
    10. '\n' → logprob: -7.107823371887207

Token 32: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000629279064014554
    2. '<|end|>' → logprob: -8.375629425048828
    3. '#' → logprob: -9.125629425048828
    4. '-' → logprob: -9.875629425048828
    5. '3' → logprob: -10.375629425048828
    6. '0' → logprob: -10.625629425048828
    7. '#!/' → logprob: -10.750629425048828
    8. '```' → logprob: -10.750629425048828
    9. '59' → logprob: -10.875629425048828
    10. '4' → logprob: -10.875629425048828

Token 33: '46' (ID: 4217)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '30' → logprob: -3.414975643157959
    2. '19' → logprob: -3.789975643157959
    3. '32' → logprob: -3.789975643157959
    4. '40' → logprob: -3.789975643157959
    5. '26' → logprob: -3.789975643157959
    6. '35' → logprob: -3.789975643157959
    7. '31' → logprob: -3.789975643157959
    8. '34' → logprob: -3.789975643157959
    9. '39' → logprob: -3.789975643157959
    10. '44' → logprob: -3.789975643157959

Token 34: ':' (ID: 25)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7109304070472717
    2. '
' → logprob: -1.460930347442627
    3. '#!/' → logprob: -2.085930347442627
    4. '

' → logprob: -2.585930347442627
    5. 'import' → logprob: -3.585930347442627
    6. '#
' → logprob: -4.710930347442627
    7. '<|end|>' → logprob: -4.710930347442627
    8. '\n' → logprob: -4.835930347442627
    9. '```' → logprob: -5.335930347442627
    10. ' 
' → logprob: -5.710930347442627

Token 35: '16' (ID: 1125)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3077753484249115
    2. '<|end|>' → logprob: -2.3077752590179443
    3. ' ' → logprob: -2.9327752590179443
    4. '0' → logprob: -3.3077752590179443
    5. '00' → logprob: -3.8077752590179443
    6. '#!/' → logprob: -3.9327752590179443
    7. '2' → logprob: -5.432775497436523
    8. '  
' → logprob: -5.432775497436523
    9. '```' → logprob: -5.682775497436523
    10. ' 
' → logprob: -6.057775497436523

Token 36: ' +' (ID: 659)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4431452751159668
    2. '
' → logprob: -1.6931452751159668
    3. '

' → logprob: -3.193145275115967
    4. '```' → logprob: -3.443145275115967
    5. '\n' → logprob: -3.818145275115967
    6. '#!/' → logprob: -4.068145275115967
    7. 'import' → logprob: -4.318145275115967
    8. '<|end|>' → logprob: -4.568145275115967
    9. ' 

' → logprob: -4.818145275115967
    10. '' → logprob: -5.443145275115967

Token 37: '090' (ID: 31445)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24887412786483765
    2. '#!/' → logprob: -1.6238741874694824
    3. '0' → logprob: -4.498874187469482
    4. '#!' → logprob: -5.748874187469482
    5. '+' → logprob: -5.998874187469482
    6. '```' → logprob: -7.248874187469482
    7. '-' → logprob: -7.373874187469482
    8. '00' → logprob: -7.373874187469482
    9. '1' → logprob: -7.623874187469482
    10. 'def' → logprob: -7.998874187469482

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009802485816180706
    2. '#' → logprob: -5.884802341461182
    3. ':' → logprob: -5.884802341461182
    4. '```' → logprob: -6.634802341461182
    5. '\n' → logprob: -7.884802341461182
    6. ' ' → logprob: -8.00980281829834
    7. '  
' → logprob: -8.13480281829834
    8. ' ' → logprob: -8.25980281829834
    9. '<|end|>' → logprob: -8.25980281829834
    10. ' 
' → logprob: -8.25980281829834

Token 39: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.972649097442627
    2. '
' → logprob: -1.722649097442627
    3. '

' → logprob: -1.972649097442627
    4. 'import' → logprob: -2.472649097442627
    5. '\n' → logprob: -2.597649097442627
    6. '```' → logprob: -3.097649097442627
    7. '#!/' → logprob: -3.722649097442627
    8. '' → logprob: -4.097649097442627
    9. '<|end|>' → logprob: -4.347649097442627
    10. 'def' → logprob: -4.472649097442627

Token 40: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0165632963180542
    2. '#' → logprob: -1.1415632963180542
    3. '\n' → logprob: -1.5165632963180542
    4. '#!/' → logprob: -2.8915634155273438
    5. '
' → logprob: -4.766563415527344
    6. '\' → logprob: -4.891563415527344
    7. '#
' → logprob: -5.016563415527344
    8. '"""' → logprob: -5.266563415527344
    9. '```' → logprob: -5.891563415527344
    10. '' → logprob: -6.266563415527344

Token 41: ' Last' (ID: 12246)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7015160918235779
    2. 'd' → logprob: -0.8265160918235779
    3. '#' → logprob: -3.3265161514282227
    4. '```' → logprob: -4.451516151428223
    5. ' 
' → logprob: -5.951516151428223
    6. 'def' → logprob: -6.076516151428223
    7. '-' → logprob: -6.076516151428223
    8. ' ' → logprob: -6.076516151428223
    9. 'import' → logprob: -6.451516151428223
    10. ' 

' → logprob: -6.576516151428223

Token 42: 'Modified' (ID: 29882)
  Prédit: 'Modified'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Modified' → logprob: -0.35370177030563354
    2. 'Updated' → logprob: -2.1037018299102783
    3. 'Edit' → logprob: -2.4787018299102783
    4. '_' → logprob: -3.3537018299102783
    5. 'Edited' → logprob: -4.103701591491699
    6. 'Update' → logprob: -5.228701591491699
    7. 'Mod' → logprob: -5.353701591491699
    8. 'Modify' → logprob: -5.603701591491699
    9. 'Editor' → logprob: -5.978701591491699
    10. ' Modified' → logprob: -5.978701591491699

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026206938549876213
    2. '=' → logprob: -4.651206970214844
    3. '_' → logprob: -5.651206970214844
    4. '_date' → logprob: -5.901206970214844
    5. '_:' → logprob: -6.151206970214844
    6. '_Date' → logprob: -6.151206970214844
    7. '_timestamp' → logprob: -6.401206970214844
    8. 'Date' → logprob: -6.526206970214844
    9. '_time' → logprob: -7.151206970214844
    10. ' :' → logprob: -7.776206970214844

Token 44: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012743431143462658
    2. '202' → logprob: -4.3877434730529785
    3. '#' → logprob: -9.01274299621582
    4. ' #' → logprob: -9.88774299621582
    5. ' ' → logprob: -11.38774299621582
    6. '  ' → logprob: -11.63774299621582
    7. '_' → logprob: -12.38774299621582
    8. '201' → logprob: -12.38774299621582
    9. '#!/' → logprob: -12.51274299621582
    10. '2' → logprob: -12.76274299621582

Token 45: '202' (ID: 1323)
  Prédit: '202'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '202' → logprob: -0.6469535827636719
    2. ' ' → logprob: -0.7719535827636719
    3. '#' → logprob: -5.146953582763672
    4. '2' → logprob: -5.396953582763672
    5. '0' → logprob: -6.146953582763672
    6. '20' → logprob: -8.021953582763672
    7. '1' → logprob: -8.271953582763672
    8. ' #' → logprob: -8.396953582763672
    9. '#!/' → logprob: -9.021953582763672
    10. '201' → logprob: -9.521953582763672

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10814125835895538
    2. '4' → logprob: -2.3581411838531494
    3. '3' → logprob: -5.9831414222717285
    4. '-' → logprob: -6.1081414222717285
    5. '2' → logprob: -6.2331414222717285
    6. '1' → logprob: -6.7331414222717285
    7. ' ' → logprob: -13.60814094543457
    8. '```' → logprob: -14.10814094543457
    9. '04' → logprob: -14.85814094543457
    10. '０' → logprob: -15.48314094543457

Token 47: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.874882430769503e-05
    2. '_' → logprob: -9.750079154968262
    3. '0' → logprob: -11.250079154968262
    4. '-
' → logprob: -13.250079154968262
    5. '-_' → logprob: -13.500079154968262
    6. '<|end|>' → logprob: -13.750079154968262
    7. '-)' → logprob: -14.625079154968262
    8. '```' → logprob: -14.750079154968262
    9. '#' → logprob: -14.875079154968262
    10. ' ' → logprob: -15.250079154968262

Token 48: '06' (ID: 3218)
  Prédit: '06'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '06' → logprob: -1.2233183042553719e-05
    2. '07' → logprob: -12.250012397766113
    3. '0' → logprob: -12.500012397766113
    4. '08' → logprob: -13.625012397766113
    5. '12' → logprob: -13.625012397766113
    6. '09' → logprob: -14.000012397766113
    7. '10' → logprob: -16.500011444091797
    8. '```' → logprob: -16.625011444091797
    9. '05' → logprob: -17.062511444091797
    10. '-' → logprob: -17.687511444091797

Token 49: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002908910100813955
    2. '_' → logprob: -8.375290870666504
    3. '0' → logprob: -11.250290870666504
    4. '09' → logprob: -12.000290870666504
    5. '10' → logprob: -12.250290870666504
    6. '1' → logprob: -12.375290870666504
    7. '08' → logprob: -12.500290870666504
    8. '12' → logprob: -12.875290870666504
    9. '11' → logprob: -12.875290870666504
    10. '15' → logprob: -13.000290870666504

Token 50: '08' (ID: 3062)
  Prédit: '08'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: -0.10025282949209213
    2. '10' → logprob: -3.850252866744995
    3. '09' → logprob: -3.850252866744995
    4. '18' → logprob: -4.350252628326416
    5. '11' → logprob: -4.600252628326416
    6. '12' → logprob: -4.725252628326416
    7. '15' → logprob: -4.850252628326416
    8. '14' → logprob: -5.975252628326416
    9. '13' → logprob: -6.100252628326416
    10. '19' → logprob: -6.600252628326416

Token 51: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4404469430446625
    2. '-' → logprob: -1.0654469728469849
    3. '_' → logprob: -5.440446853637695
    4. '20' → logprob: -6.440446853637695
    5. '.py' → logprob: -6.940446853637695
    6. '21' → logprob: -7.065446853637695
    7. ' #' → logprob: -7.690446853637695
    8. ' -' → logprob: -7.690446853637695
    9. '0' → logprob: -7.815446853637695
    10. '#' → logprob: -7.940446853637695

Token 52: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.07195410132408142
    2. '2' → logprob: -3.0719540119171143
    3. '22' → logprob: -4.696954250335693
    4. ' ' → logprob: -4.946954250335693
    5. '23' → logprob: -5.821954250335693
    6. '20' → logprob: -6.696954250335693
    7. '1' → logprob: -7.821954250335693
    8. '17' → logprob: -8.446953773498535
    9. '14' → logprob: -8.696953773498535
    10. '18' → logprob: -8.696953773498535

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00656901067122817
    2. '-' → logprob: -5.131568908691406
    3. '4' → logprob: -8.131568908691406
    4. '46' → logprob: -8.256568908691406
    5. '45' → logprob: -11.381568908691406
    6. '47' → logprob: -11.631568908691406
    7. '%' → logprob: -11.881568908691406
    8. '```' → logprob: -12.006568908691406
    9. '0' → logprob: -12.131568908691406
    10. '#' → logprob: -12.131568908691406

Token 54: '53' (ID: 6798)
  Prédit: '46'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '46' → logprob: -0.45343512296676636
    2. '47' → logprob: -1.3284351825714111
    3. '48' → logprob: -3.453435182571411
    4. '49' → logprob: -3.828435182571411
    5. '50' → logprob: -3.953435182571411
    6. '52' → logprob: -5.578434944152832
    7. '54' → logprob: -5.703434944152832
    8. '56' → logprob: -5.828434944152832
    9. '55' → logprob: -5.828434944152832
    10. '51' → logprob: -5.953434944152832

Token 55: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014635635539889336
    2. '_' → logprob: -5.0146355628967285
    3. '-' → logprob: -6.0146355628967285
    4. '00' → logprob: -6.6396355628967285
    5. '20' → logprob: -7.8896355628967285
    6. '```' → logprob: -7.8896355628967285
    7. ' ' → logprob: -8.014636039733887
    8. '0' → logprob: -8.264636039733887
    9. '30' → logprob: -8.264636039733887
    10. '16' → logprob: -8.514636039733887

Token 56: '14' (ID: 1265)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -3.318958282470703
    2. '30' → logprob: -3.318958282470703
    3. '17' → logprob: -3.318958282470703
    4. '22' → logprob: -3.318958282470703
    5. '24' → logprob: -3.443958282470703
    6. '26' → logprob: -3.443958282470703
    7. '18' → logprob: -3.568958282470703
    8. '23' → logprob: -3.568958282470703
    9. '19' → logprob: -3.693958282470703
    10. '16' → logprob: -3.693958282470703

Token 57: ' +' (ID: 659)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9235213398933411
    2. '
' → logprob: -1.2985212802886963
    3. 'import' → logprob: -1.5485212802886963
    4. ' 

' → logprob: -2.7985212802886963
    5. ' 
' → logprob: -4.048521518707275
    6. '<|end|>' → logprob: -4.298521518707275
    7. '\n' → logprob: -5.298521518707275
    8. '```' → logprob: -5.548521518707275
    9. '#' → logprob: -5.673521518707275
    10. ' 
 
' → logprob: -6.048521518707275

Token 58: '090' (ID: 31445)
  Prédit: '090'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '090' → logprob: -0.05691591277718544
    2. '09' → logprob: -3.6819159984588623
    3. '000' → logprob: -4.556915760040283
    4. '+' → logprob: -4.681915760040283
    5. '00' → logprob: -5.931915760040283
    6. '202' → logprob: -6.181915760040283
    7. 'J' → logprob: -6.806915760040283
    8. '90' → logprob: -7.181915760040283
    9. 'UTC' → logprob: -7.181915760040283
    10. '900' → logprob: -7.306915760040283

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011063856072723866
    2. '00' → logprob: -4.636064052581787
    3. ':' → logprob: -6.761064052581787
    4. '```' → logprob: -9.761063575744629
    5. '#' → logprob: -10.136063575744629
    6. '-' → logprob: -10.261063575744629
    7. '#!/' → logprob: -12.636063575744629
    8. ' ' → logprob: -13.823563575744629
    9. ')' → logprob: -13.886063575744629
    10. 'import' → logprob: -14.198563575744629

Token 60: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.11732541769742966
    2. '
' → logprob: -3.1173253059387207
    3. '

' → logprob: -3.4923253059387207
    4. '\n' → logprob: -3.9923253059387207
    5. '\' → logprob: -5.617325305938721
    6. ' 
' → logprob: -5.867325305938721
    7. ' 

' → logprob: -5.992325305938721
    8. '' → logprob: -6.117325305938721
    9. ' 
 
' → logprob: -6.617325305938721
    10. '```' → logprob: -6.992325305938721

Token 61: '#

' (ID: 61846)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.07544021308422089
    2. 'i' → logprob: -3.7004401683807373
    3. '\n' → logprob: -4.450440406799316
    4. 'd' → logprob: -4.700440406799316
    5. '
' → logprob: -4.950440406799316
    6. '\' → logprob: -5.200440406799316
    7. ' 
' → logprob: -5.575440406799316
    8. '```' → logprob: -5.950440406799316
    9. '

' → logprob: -6.325440406799316
    10. '' → logprob: -6.325440406799316

Token 62: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.40669533610343933
    2. 'import' → logprob: -1.5316953659057617
    3. 'i' → logprob: -2.1566953659057617
    4. 'im' → logprob: -7.906695365905762
    5. ' 
' → logprob: -8.031695365905762
    6. '\' → logprob: -8.156695365905762
    7. '#' → logprob: -8.281695365905762
    8. '```' → logprob: -8.281695365905762
    9. 'def' → logprob: -8.781695365905762
    10. '
' → logprob: -8.906695365905762

Token 63: ' os' (ID: 1994)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5408744812011719
    2. ' math' → logprob: -1.0408744812011719
    3. ' ' → logprob: -3.790874481201172
    4. ' collections' → logprob: -4.415874481201172
    5. ' heap' → logprob: -4.790874481201172
    6. ' functools' → logprob: -5.040874481201172
    7. ' os' → logprob: -5.165874481201172
    8. ' itertools' → logprob: -5.415874481201172
    9. ' space' → logprob: -5.915874481201172
    10. ' ' → logprob: -7.540874481201172

Token 64: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08059009164571762
    2. '
' → logprob: -2.580590009689331
    3. '

' → logprob: -7.20559024810791
    4. ' import' → logprob: -7.58059024810791
    5. '<|end|>' → logprob: -9.33059024810791
    6. ',' → logprob: -9.70559024810791
    7. '```' → logprob: -9.83059024810791
    8. '\n' → logprob: -9.83059024810791
    9. ' 
' → logprob: -10.33059024810791
    10. '' → logprob: -10.70559024810791

Token 65: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.006141734309494495
    2. '
' → logprob: -5.381141662597656
    3. '

' → logprob: -7.881141662597656
    4. ' import' → logprob: -7.881141662597656
    5. '<|end|>' → logprob: -8.756141662597656
    6. 'from' → logprob: -8.881141662597656
    7. '\n' → logprob: -9.131141662597656
    8. ' 

' → logprob: -10.256141662597656
    9. ' 
' → logprob: -10.381141662597656
    10. '' → logprob: -10.506141662597656

Token 66: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12712590396404266
    2. 'sys' → logprob: -2.1271259784698486
    3. ' math' → logprob: -9.00212574005127
    4. 'math' → logprob: -9.87712574005127
    5. ' heap' → logprob: -11.75212574005127
    6. '	sys' → logprob: -12.25212574005127
    7. 'heap' → logprob: -12.37712574005127
    8. 'operator' → logprob: -13.37712574005127
    9. ' ' → logprob: -13.75212574005127
    10. ' operator' → logprob: -14.25212574005127

Token 67: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.26549088954925537
    2. '
' → logprob: -1.5154908895492554
    3. '


' → logprob: -4.640491008758545
    4. 'import' → logprob: -5.765491008758545
    5. '\n' → logprob: -8.515490531921387
    6. '



' → logprob: -8.640490531921387
    7. 'def' → logprob: -9.515490531921387
    8. '' → logprob: -10.140490531921387
    9. '
 
' → logprob: -10.265490531921387
    10. '```' → logprob: -10.765490531921387

Token 68: '#import' (ID: 14855)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5194732546806335
    2. '
' → logprob: -1.0194733142852783
    3. 'import' → logprob: -3.3944733142852783
    4. '


' → logprob: -4.894473075866699
    5. 'def' → logprob: -6.769473075866699
    6. '\n' → logprob: -7.519473075866699
    7. '



' → logprob: -8.0194730758667
    8. '' → logprob: -8.1444730758667
    9. 'd' → logprob: -8.5194730758667
    10. '
 
' → logprob: -8.5194730758667

Token 69: ' numpy' (ID: 19529)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.03728159889578819
    2. ' collections' → logprob: -3.5372815132141113
    3. ' itertools' → logprob: -6.037281513214111
    4. ' heap' → logprob: -6.412281513214111
    5. ' functools' → logprob: -7.037281513214111
    6. ' argparse' → logprob: -7.037281513214111
    7. 'collections' → logprob: -8.03728199005127
    8. ' ' → logprob: -8.28728199005127
    9. 'math' → logprob: -8.28728199005127
    10. ' random' → logprob: -8.66228199005127

Token 70: ' as' (ID: 472)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6489769220352173
    2. '
' → logprob: -0.8989769220352173
    3. '<|end|>' → logprob: -3.7739768028259277
    4. ' 

' → logprob: -4.523976802825928
    5. '


' → logprob: -4.523976802825928
    6. 'import' → logprob: -4.773976802825928
    7. '<|end|>' → logprob: -4.898976802825928
    8. '\n' → logprob: -5.648976802825928
    9. '\' → logprob: -6.523976802825928
    10. '```' → logprob: -7.023976802825928

Token 71: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0028514713048934937
    2. 'np' → logprob: -5.877851486206055
    3. ' ' → logprob: -10.002851486206055
    4. ' ' → logprob: -14.752851486206055
    5. '_np' → logprob: -15.252851486206055
    6. ' numpy' → logprob: -15.377851486206055
    7. '=np' → logprob: -15.752851486206055
    8. '  ' → logprob: -16.877851486206055
    9. '	n' → logprob: -17.127851486206055
    10. ' n' → logprob: -17.127851486206055

Token 72: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24053719639778137
    2. '

' → logprob: -1.615537166595459
    3. '


' → logprob: -4.490537166595459
    4. ' 

' → logprob: -6.990537166595459
    5. 'import' → logprob: -7.115537166595459
    6. '' → logprob: -7.740537166595459
    7. '
' → logprob: -7.740537166595459
    8. '



' → logprob: -7.865537166595459
    9. '\n' → logprob: -8.365537643432617
    10. '```' → logprob: -8.740537643432617

Token 73: '#import' (ID: 14855)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.31237873435020447
    2. '
' → logprob: -1.6873787641525269
    3. '


' → logprob: -3.4373786449432373
    4. 'def' → logprob: -3.8123786449432373
    5. 'import' → logprob: -4.937378883361816
    6. '



' → logprob: -5.312378883361816
    7. 'd' → logprob: -5.312378883361816
    8. ' 

' → logprob: -5.562378883361816
    9. '' → logprob: -6.312378883361816
    10. '#' → logprob: -7.062378883361816

Token 74: ' pandas' (ID: 41942)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0449317991733551
    2. 'math' → logprob: -4.044931888580322
    3. ' heap' → logprob: -4.419931888580322
    4. ' collections' → logprob: -5.669931888580322
    5. ' pandas' → logprob: -5.669931888580322
    6. ' fractions' → logprob: -5.919931888580322
    7. ' itertools' → logprob: -6.294931888580322
    8. ' functools' → logprob: -7.044931888580322
    9. 'collections' → logprob: -7.669931888580322
    10. 'fra' → logprob: -8.044931411743164

Token 75: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.007990812882781029
    2. '<|end|>' → logprob: -5.007990837097168
    3. ' ' → logprob: -7.257990837097168
    4. 'as' → logprob: -7.507990837097168
    5. '<|end|>' → logprob: -11.007990837097168
    6. '	as' → logprob: -13.382990837097168
    7. 'import' → logprob: -14.132990837097168
    8. '.' → logprob: -14.632990837097168
    9. ' 
' → logprob: -15.132990837097168
    10. ' import' → logprob: -15.132990837097168

Token 76: ' pd' (ID: 15934)
  Prédit: ' pd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pd' → logprob: -0.04960895702242851
    2. ' ' → logprob: -3.0496089458465576
    3. ' p' → logprob: -7.174609184265137
    4. ' ' → logprob: -9.299609184265137
    5. '_' → logprob: -9.549609184265137
    6. 'pd' → logprob: -10.174609184265137
    7. ' _' → logprob: -11.299609184265137
    8. ' space' → logprob: -12.174609184265137
    9. 'p' → logprob: -12.299609184265137
    10. ' 
' → logprob: -12.299609184265137

Token 77: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5766172409057617
    2. '

' → logprob: -0.9516172409057617
    3. '


' → logprob: -3.0766172409057617
    4. 'import' → logprob: -5.826617240905762
    5. '



' → logprob: -6.326617240905762
    6. 'def' → logprob: -7.826617240905762
    7. '




' → logprob: -8.701617240905762
    8. '\n' → logprob: -8.826617240905762
    9. 'class' → logprob: -8.951617240905762
    10. '' → logprob: -9.701617240905762

Token 78: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11355575919151306
    2. 'def' → logprob: -2.363555669784546
    3. '
' → logprob: -4.863555908203125
    4. '\' → logprob: -5.738555908203125
    5. '

' → logprob: -6.988555908203125
    6. 'de' → logprob: -7.238555908203125
    7. '' → logprob: -8.988555908203125
    8. '


' → logprob: -9.113555908203125
    9. 'class' → logprob: -9.238555908203125
    10. '\n' → logprob: -9.238555908203125

Token 79: ' main' (ID: 2758)
  Prédit: ' fractional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fractional' → logprob: -0.28426674008369446
    2. ' ' → logprob: -1.409266710281372
    3. ' fraction' → logprob: -6.659266948699951
    4. '_' → logprob: -7.659266948699951
    5. '_fraction' → logprob: -7.659266948699951
    6. ' space' → logprob: -8.284266471862793
    7. ' ' → logprob: -8.409266471862793
    8. 'fraction' → logprob: -8.909266471862793
    9. ' _' → logprob: -9.159266471862793
    10. ' frac' → logprob: -10.034266471862793

Token 80: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04903478920459747
    2. '():' → logprob: -3.049034833908081
    3. ' (' → logprob: -8.54903507232666
    4. '(:' → logprob: -9.04903507232666
    5. '()' → logprob: -10.42403507232666
    6. ' ():' → logprob: -10.42403507232666
    7. ':' → logprob: -10.67403507232666
    8. '(
' → logprob: -10.79903507232666
    9. '_' → logprob: -11.42403507232666
    10. '(":' → logprob: -12.17403507232666

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6351115703582764
    2. ' ' → logprob: -1.3851115703582764
    3. '    ' → logprob: -1.6351115703582764
    4. '    
' → logprob: -4.3851118087768555
    5. ' 
' → logprob: -5.3851118087768555
    6. 'n' → logprob: -6.5101118087768555
    7. '  ' → logprob: -6.6351118087768555
    8. '(' → logprob: -7.0101118087768555
    9. '
' → logprob: -7.1351118087768555
    10. '     
' → logprob: -7.3851118087768555

Token 82: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21365581452846527
    2. ' #' → logprob: -2.588655710220337
    3. 'capacity' → logprob: -3.588655710220337
    4. '   ' → logprob: -3.838655710220337
    5. ' capacity' → logprob: -4.338655948638916
    6. 'n' → logprob: -4.463655948638916
    7. ' items' → logprob: -4.588655948638916
    8. '#' → logprob: -4.588655948638916
    9. ' n' → logprob: -4.838655948638916
    10. 'items' → logprob: -4.963655948638916

Token 83: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5371502041816711
    2. ' =' → logprob: -1.0371501445770264
    3. ' ,' → logprob: -3.0371501445770264
    4. '=' → logprob: -4.6621503829956055
    5. ' ' → logprob: -5.7871503829956055
    6. '  ' → logprob: -8.537150382995605
    7. '    ' → logprob: -9.162150382995605
    8. 'space' → logprob: -9.537150382995605
    9. '   ' → logprob: -9.787150382995605
    10. ')' → logprob: -10.537150382995605

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03947967290878296
    2. '=' → logprob: -3.4144797325134277
    3. ',' → logprob: -5.164479732513428
    4. ' ,' → logprob: -9.53947925567627
    5. ' ' → logprob: -11.41447925567627
    6. ' =
' → logprob: -11.66447925567627
    7. '=int' → logprob: -13.03947925567627
    8. '=input' → logprob: -13.66447925567627
    9. ' =",' → logprob: -13.91447925567627
    10. ')' → logprob: -14.66447925567627

Token 85: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.022464577108621597
    2. 'map' → logprob: -4.522464752197266
    3. ' ' → logprob: -4.772464752197266
    4. ' input' → logprob: -6.647464752197266
    5. ' list' → logprob: -6.772464752197266
    6. 'input' → logprob: -9.022464752197266
    7. ' [' → logprob: -9.897464752197266
    8. '0' → logprob: -10.147464752197266
    9. '5' → logprob: -10.522464752197266
    10. '10' → logprob: -10.522464752197266

Token 86: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6357648968696594
    2. '(' → logprob: -0.7607648968696594
    3. '(lambda' → logprob: -6.385765075683594
    4. '(str' → logprob: -6.885765075683594
    5. '<|end|>' → logprob: -8.510765075683594
    6. '(input' → logprob: -9.135765075683594
    7. '(list' → logprob: -9.635765075683594
    8. '(
' → logprob: -10.510765075683594
    9. '(i' → logprob: -12.010765075683594
    10. '[int' → logprob: -12.135765075683594

Token 87: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5257731080055237
    2. 'input' → logprob: -1.650773048400879
    3. ',input' → logprob: -2.025773048400879
    4. ',' → logprob: -3.150773048400879
    5. ')' → logprob: -3.525773048400879
    6. '(' → logprob: -4.525773048400879
    7. '(sys' → logprob: -7.025773048400879
    8. ' input' → logprob: -7.275773048400879
    9. '=input' → logprob: -9.400773048400879
    10. '```' → logprob: -9.400773048400879

Token 88: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0010410251561552286
    2. '()' → logprob: -7.001040935516357
    3. '())' → logprob: -9.001041412353516
    4. ')' → logprob: -12.751041412353516
    5. '()
' → logprob: -13.626041412353516
    6. '(' → logprob: -14.501041412353516
    7. ' ().' → logprob: -14.626041412353516
    8. '());' → logprob: -14.751041412353516
    9. '()[' → logprob: -15.251041412353516
    10. '()

' → logprob: -16.376041412353516

Token 89: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016480287013109773
    2. 'strip' → logprob: -8.750164985656738
    3. ' split' → logprob: -12.750164985656738
    4. 'rstrip' → logprob: -13.375164985656738
    5. 'spl' → logprob: -13.750164985656738
    6. '(split' → logprob: -14.375164985656738
    7. 'sp' → logprob: -16.625164031982422
    8. 'rs' → logprob: -16.750164031982422
    9. 's' → logprob: -16.750164031982422
    10. ')' → logprob: -16.875164031982422

Token 90: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.316485732793808
    2. ')' → logprob: -1.4414857625961304
    3. '()' → logprob: -3.566485643386841
    4. '(' → logprob: -5.94148588180542
    5. '('' → logprob: -6.31648588180542
    6. '))' → logprob: -6.56648588180542
    7. '()))' → logprob: -7.69148588180542
    8. '())
' → logprob: -10.191485404968262
    9. '(
' → logprob: -10.441485404968262
    10. '("' → logprob: -10.566485404968262

Token 91: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030658992007374763
    2. '<|end|>' → logprob: -4.405659198760986
    3. '\n' → logprob: -4.655659198760986
    4. ')' → logprob: -6.530659198760986
    5. '' → logprob: -6.655659198760986
    6. '   ' → logprob: -7.030659198760986
    7. ' 
' → logprob: -7.030659198760986
    8. '    
' → logprob: -7.155659198760986
    9. '<|end|>' → logprob: -7.405659198760986
    10. '  
' → logprob: -7.405659198760986

Token 92: ' p' (ID: 275)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.1622563898563385
    2. 'items' → logprob: -1.9122563600540161
    3. ' ' → logprob: -7.162256240844727
    4. ' data' → logprob: -8.287256240844727
    5. 'data' → logprob: -8.537256240844727
    6. ' lst' → logprob: -8.912256240844727
    7. '	items' → logprob: -9.287256240844727
    8. 'item' → logprob: -9.287256240844727
    9. ' item' → logprob: -10.037256240844727
    10. 'I' → logprob: -10.412256240844727

Token 93: ' =' (ID: 314)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.2344461679458618
    2. 'rices' → logprob: -1.9844461679458618
    3. '=[]' → logprob: -2.7344460487365723
    4. ' ' → logprob: -2.7344460487365723
    5. 's' → logprob: -2.8594460487365723
    6. 'ro' → logprob: -2.9844460487365723
    7. 'weights' → logprob: -2.9844460487365723
    8. '_items' → logprob: -3.2344460487365723
    9. 'items' → logprob: -3.4844460487365723
    10. 'ieces' → logprob: -3.6094460487365723

Token 94: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0605299174785614
    2. ' [' → logprob: -3.060529947280884
    3. '[]' → logprob: -4.685529708862305
    4. ' list' → logprob: -6.560529708862305
    5. 'list' → logprob: -7.060529708862305
    6. '[' → logprob: -9.060529708862305
    7. ' ' → logprob: -9.685529708862305
    8. ' []*' → logprob: -9.685529708862305
    9. ' []
' → logprob: -9.935529708862305
    10. ' [[]' → logprob: -10.435529708862305

Token 95: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6141449809074402
    2. '<|end|>' → logprob: -1.364145040512085
    3. '
' → logprob: -2.739145040512085
    4. '   ' → logprob: -2.864145040512085
    5. ' for' → logprob: -3.114145040512085
    6. '	for' → logprob: -4.864144802093506
    7. ' ' → logprob: -4.864144802093506
    8. '[' → logprob: -4.989144802093506
    9. '<|end|>' → logprob: -4.989144802093506
    10. '    
' → logprob: -6.114144802093506

Token 96: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05575655773282051
    2. ' for' → logprob: -2.9307565689086914
    3. ' ' → logprob: -7.805756568908691
    4. 'w' → logprob: -8.430756568908691
    5. '	for' → logprob: -9.555756568908691
    6. '[' → logprob: -9.805756568908691
    7. '   ' → logprob: -10.930756568908691
    8. '[]' → logprob: -11.305756568908691
    9. '<|end|>' → logprob: -11.305756568908691
    10. 't' → logprob: -11.930756568908691

Token 97: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.16606204211711884
    2. ' i' → logprob: -1.9160619974136353
    3. '_' → logprob: -5.791061878204346
    4. ' ' → logprob: -5.916061878204346
    5. 'i' → logprob: -9.916062355041504
    6. ' ‌' → logprob: -11.166062355041504
    7. '  ' → logprob: -13.416062355041504
    8. '_i' → logprob: -13.416062355041504
    9. ' ▁' → logprob: -13.916062355041504
    10. '	i' → logprob: -14.041062355041504

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009365965612232685
    2. 'in' → logprob: -4.759366035461426
    3. ' i' → logprob: -7.759366035461426
    4. ' ' → logprob: -8.509366035461426
    5. 'i' → logprob: -10.134366035461426
    6. '  ' → logprob: -10.384366035461426
    7. 'p' → logprob: -10.884366035461426
    8. ' p' → logprob: -11.259366035461426
    9. 'n' → logprob: -12.134366035461426
    10. 'range' → logprob: -12.259366035461426

Token 99: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020627493038773537
    2. ' range' → logprob: -3.895627498626709
    3. ' ' → logprob: -9.89562702178955
    4. 'p' → logprob: -11.52062702178955
    5. '  ' → logprob: -12.27062702178955
    6. '(range' → logprob: -12.39562702178955
    7. '	range' → logprob: -12.77062702178955
    8. '```' → logprob: -12.89562702178955
    9. '   ' → logprob: -13.39562702178955
    10. 'ange' → logprob: -13.39562702178955

Token 100: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.008662670850753784
    2. '(' → logprob: -4.758662700653076
    3. ' (' → logprob: -10.133662223815918
    4. '(n' → logprob: -12.383662223815918
    5. '(int' → logprob: -13.758662223815918
    6. '(
' → logprob: -13.758662223815918
    7. 'N' → logprob: -13.758662223815918
    8. ' N' → logprob: -14.758662223815918
    9. '(

' → logprob: -15.758662223815918
    10. ' ' → logprob: -16.008663177490234

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019853383128065616
    2. ')' → logprob: -9.750198364257812
    3. '):
' → logprob: -9.750198364257812
    4. ':' → logprob: -10.125198364257812
    5. ' ):' → logprob: -10.125198364257812
    6. '():' → logprob: -14.750198364257812
    7. ' ' → logprob: -15.250198364257812
    8. ']:' → logprob: -15.375198364257812
    9. '}:' → logprob: -15.375198364257812
    10. '   ' → logprob: -16.000198364257812

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038385823369026184
    2. '<|end|>' → logprob: -4.28838586807251
    3. ' ' → logprob: -4.53838586807251
    4. '   ' → logprob: -5.03838586807251
    5. ',' → logprob: -6.53838586807251
    6. ' p' → logprob: -6.66338586807251
    7. '    ' → logprob: -6.78838586807251
    8. '        
' → logprob: -7.78838586807251
    9. '    
' → logprob: -8.288385391235352
    10. '<|end|>' → logprob: -8.413385391235352

Token 103: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.5712300539016724
    2. ' v' → logprob: -1.5712300539016724
    3. 'w' → logprob: -2.071229934692383
    4. ' w' → logprob: -2.321229934692383
    5. 'value' → logprob: -6.696229934692383
    6. ' value' → logprob: -7.946229934692383
    7. '   ' → logprob: -7.946229934692383
    8. 'x' → logprob: -8.321229934692383
    9. ' ' → logprob: -8.446229934692383
    10. 'a' → logprob: -8.446229934692383

Token 104: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.5837182402610779
    2. ',' → logprob: -0.8337182402610779
    3. ' ,' → logprob: -5.708718299865723
    4. ',W' → logprob: -6.833718299865723
    5. 'w' → logprob: -6.958718299865723
    6. ',v' → logprob: -7.458718299865723
    7. 'alue' → logprob: -7.583718299865723
    8. ',a' → logprob: -8.708718299865723
    9. ',c' → logprob: -8.833718299865723
    10. ',value' → logprob: -8.958718299865723

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759530663490295
    2. '=' → logprob: -0.8259530663490295
    3. '=input' → logprob: -12.075953483581543
    4. ',' → logprob: -13.200953483581543
    5. ' ' → logprob: -13.825953483581543
    6. ')' → logprob: -13.950953483581543
    7. '=int' → logprob: -14.575953483581543
    8. '    ' → logprob: -14.825953483581543
    9. '=line' → logprob: -14.825953483581543
    10. '   ' → logprob: -15.325953483581543

Token 106: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.011192589066922665
    2. 'map' → logprob: -4.511192798614502
    3. ' ' → logprob: -9.136192321777344
    4. '	map' → logprob: -10.636192321777344
    5. ' list' → logprob: -12.511192321777344
    6. ' ' → logprob: -12.761192321777344
    7. '(map' → logprob: -13.386192321777344
    8. '   ' → logprob: -13.761192321777344
    9. '  ' → logprob: -14.011192321777344
    10. '[' → logprob: -14.136192321777344

Token 107: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.016194256022572517
    2. '(' → logprob: -4.1411943435668945
    3. '(lambda' → logprob: -9.141194343566895
    4. '<|end|>' → logprob: -10.641194343566895
    5. '(str' → logprob: -12.016194343566895
    6. ' (' → logprob: -12.141194343566895
    7. '(
' → logprob: -12.391194343566895
    8. '(input' → logprob: -12.516194343566895
    9. '(float' → logprob: -13.266194343566895
    10. '<int' → logprob: -13.266194343566895

Token 108: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.10039084404706955
    2. '(input' → logprob: -2.350390911102295
    3. ',' → logprob: -8.725390434265137
    4. 'input' → logprob: -11.600390434265137
    5. '=input' → logprob: -11.850390434265137
    6. ')' → logprob: -13.350390434265137
    7. '(' → logprob: -13.350390434265137
    8. '<input' → logprob: -14.350390434265137
    9. '	input' → logprob: -14.850390434265137
    10. ' ,' → logprob: -14.850390434265137

Token 109: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.438573680294212e-06
    2. '()' → logprob: -12.250005722045898
    3. ')' → logprob: -14.875005722045898
    4. ' ().' → logprob: -16.1250057220459
    5. '(' → logprob: -16.7500057220459
    6. '())' → logprob: -17.3750057220459
    7. '.' → logprob: -17.6250057220459
    8. '()
' → logprob: -17.8750057220459
    9. '()-' → logprob: -18.6250057220459
    10. '.split' → logprob: -19.0000057220459

Token 110: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -14.500000953674316
    3. 'spl' → logprob: -17.375
    4. '(split' → logprob: -17.5
    5. ')' → logprob: -18.625
    6. 'strip' → logprob: -19.125
    7. 'rstrip' → logprob: -19.5
    8. '.split' → logprob: -19.75
    9. 'plit' → logprob: -21.5
    10. 's' → logprob: -21.625

Token 111: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09558137506246567
    2. ')' → logprob: -2.595581293106079
    3. '()' → logprob: -4.220581531524658
    4. '())
' → logprob: -6.345581531524658
    5. ')
' → logprob: -10.0955810546875
    6. '()
' → logprob: -10.7205810546875
    7. '(' → logprob: -11.2205810546875
    8. '))' → logprob: -11.9705810546875
    9. '()))' → logprob: -12.0955810546875
    10. ' ())' → logprob: -12.2205810546875

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00405987910926342
    2. '   ' → logprob: -6.254059791564941
    3. ',' → logprob: -6.379059791564941
    4. '<|end|>' → logprob: -8.629059791564941
    5. '
' → logprob: -9.754059791564941
    6. '	' → logprob: -10.004059791564941
    7. ' ' → logprob: -10.754059791564941
    8. '        
' → logprob: -10.879059791564941
    9. '	   ' → logprob: -11.004059791564941
    10. ',
' → logprob: -11.254059791564941

Token 113: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.1568659245967865
    2. 'p' (adapté à ' p') → logprob: -2.0318658351898193
    3. '   ' → logprob: -4.281866073608398
    4. ' if' → logprob: -9.031866073608398
    5. ' ' → logprob: -10.281866073608398
    6. '       ' → logprob: -10.656866073608398
    7. '    ' → logprob: -10.781866073608398
    8. 'v' → logprob: -11.531866073608398
    9. '	p' → logprob: -11.656866073608398
    10. '
' → logprob: -11.781866073608398

Token 114: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20155571401119232
    2. '.' → logprob: -1.7015557289123535
    3. '.ap' → logprob: -9.701555252075195
    4. '.app' → logprob: -9.951555252075195
    5. '.push' → logprob: -11.201555252075195
    6. ' .' → logprob: -12.076555252075195
    7. '.p' → logprob: -12.826555252075195
    8. '​.' → logprob: -12.826555252075195
    9. '.a' → logprob: -12.951555252075195
    10. '.Append' → logprob: -13.576555252075195

Token 115: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0003408263437449932
    2. '(' → logprob: -8.000340461730957
    3. '(((' → logprob: -12.750340461730957
    4. '([' → logprob: -13.250340461730957
    5. '(v' → logprob: -15.500340461730957
    6. '(
' → logprob: -15.750340461730957
    7. '({'' → logprob: -17.000341415405273
    8. '(([' → logprob: -17.125341415405273
    9. '((-' → logprob: -17.125341415405273
    10. '((((' → logprob: -17.375341415405273

Token 116: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0006060526939108968
    2. 'w' → logprob: -7.500606060028076
    3. ' v' → logprob: -10.750605583190918
    4. ')v' → logprob: -12.250605583190918
    5. 'float' → logprob: -12.375605583190918
    6. '   ' → logprob: -12.750605583190918
    7. '
' → logprob: -12.750605583190918
    8. '	v' → logprob: -12.875605583190918
    9. '-v' → logprob: -12.875605583190918
    10. ')' → logprob: -13.000605583190918

Token 117: '/w' (ID: 10407)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29537713527679443
    2. ',w' → logprob: -1.6703771352767944
    3. '/w' → logprob: -3.420377254486084
    4. '/' → logprob: -3.795377254486084
    5. ' ,' → logprob: -4.920377254486084
    6. ' /' → logprob: -5.420377254486084
    7. ',/' → logprob: -8.545376777648926
    8. '/,' → logprob: -8.670376777648926
    9. 'w' → logprob: -8.920376777648926
    10. ',
' → logprob: -10.670376777648926

Token 118: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028650204185396433
    2. ' ,' → logprob: -6.752864837646484
    3. ',v' → logprob: -6.877864837646484
    4. ',p' → logprob: -8.502864837646484
    5. ',
' → logprob: -8.752864837646484
    6. '])' → logprob: -9.877864837646484
    7. ',

' → logprob: -10.002864837646484
    8. ')' → logprob: -10.002864837646484
    9. ',n' → logprob: -10.752864837646484
    10. ',float' → logprob: -10.877864837646484

Token 119: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5429269075393677
    2. ',w' → logprob: -1.1679269075393677
    3. '])' → logprob: -2.667926788330078
    4. ' ,' → logprob: -3.667926788330078
    5. ' ])' → logprob: -5.917926788330078
    6. ',p' → logprob: -6.292926788330078
    7. ')' → logprob: -6.542926788330078
    8. ',
' → logprob: -6.917926788330078
    9. ')])' → logprob: -7.042926788330078
    10. '/w' → logprob: -7.042926788330078

Token 120: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0008171311928890646
    2. ')' → logprob: -7.37581729888916
    3. ' ])' → logprob: -9.37581729888916
    4. '])
' → logprob: -9.75081729888916
    5. ')])' → logprob: -10.75081729888916
    6. '   ' → logprob: -11.25081729888916
    7. ']' → logprob: -12.37581729888916
    8. ')]' → logprob: -13.25081729888916
    9. '       ' → logprob: -13.62581729888916
    10. '))' → logprob: -13.87581729888916

Token 121: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03448471426963806
    2. '
' → logprob: -3.659484624862671
    3. '    
' → logprob: -4.90948486328125
    4. ' p' → logprob: -8.65948486328125
    5. '  
' → logprob: -9.03448486328125
    6. 'p' → logprob: -9.28448486328125
    7. '    ' → logprob: -9.78448486328125
    8. ' 
' → logprob: -9.90948486328125
    9. 'sorted' → logprob: -10.03448486328125
    10. '        
' → logprob: -10.15948486328125

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25233030319213867
    2. ' p' → logprob: -2.7523303031921387
    3. '    
' → logprob: -2.7523303031921387
    4. 'p' → logprob: -3.0023303031921387
    5. '
' → logprob: -3.2523303031921387
    6. ' 
' → logprob: -5.502330303192139
    7. '    ' → logprob: -7.502330303192139
    8. ' ' → logprob: -7.752330303192139
    9. '

' → logprob: -8.127330780029297
    10. '  
' → logprob: -8.252330780029297

Token 123: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7877246737480164
    2. ' p' → logprob: -0.7877246737480164
    3. 'p' → logprob: -2.787724733352661
    4. '    
' → logprob: -3.912724733352661
    5. '
' → logprob: -4.912724494934082
    6. ' 
' → logprob: -7.787724494934082
    7. '    ' → logprob: -8.412724494934082
    8. ' ' → logprob: -8.662724494934082
    9. '   
' → logprob: -9.662724494934082
    10. '  ' → logprob: -9.787724494934082

Token 124: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.2043294757604599
    2. '(' → logprob: -2.329329490661621
    3. '(sorted' → logprob: -2.454329490661621
    4. '()' → logprob: -7.579329490661621
    5. 'sorted' → logprob: -7.829329490661621
    6. '(len' → logprob: -8.204329490661621
    7. '(max' → logprob: -9.329329490661621
    8. 'p' → logprob: -9.454329490661621
    9. '(
' → logprob: -10.204329490661621
    10. '(sum' → logprob: -10.204329490661621

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038682357408106327
    2. '   ' → logprob: -5.753868103027344
    3. ')
' → logprob: -7.878868103027344
    4. ']' → logprob: -8.628868103027344
    5. ' )' → logprob: -10.128868103027344
    6. '.sort' → logprob: -10.253868103027344
    7. '])' → logprob: -10.503868103027344
    8. ',' → logprob: -12.003868103027344
    9. ')]' → logprob: -12.503868103027344
    10. ' ' → logprob: -12.503868103027344

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02970593236386776
    2. '    
' → logprob: -4.154706001281738
    3. '
' → logprob: -4.779706001281738
    4. ' p' → logprob: -5.904706001281738
    5. 'p' → logprob: -6.279706001281738
    6. '  
' → logprob: -9.029706001281738
    7. ')' → logprob: -9.529706001281738
    8. ' 
' → logprob: -9.654706001281738
    9. '<|end|>' → logprob: -9.779706001281738
    10. '    ' → logprob: -10.279706001281738

Token 127: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12452630698680878
    2. ' p' → logprob: -2.749526262283325
    3. 'p' (adapté à ' p') → logprob: -2.999526262283325
    4. '    
' → logprob: -6.124526500701904
    5. '
' → logprob: -6.999526500701904
    6. ' 
' → logprob: -10.249526023864746
    7. ' sorted' → logprob: -10.374526023864746
    8. '    ' → logprob: -10.749526023864746
    9. 'sorted' → logprob: -10.749526023864746
    10. 's' → logprob: -10.999526023864746

Token 128: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.002522745868191123
    2. '.' → logprob: -6.002522945404053
    3. '=' → logprob: -10.252522468566895
    4. 'sort' → logprob: -11.877522468566895
    5. ' =' → logprob: -13.877522468566895
    6. '.p' → logprob: -14.502522468566895
    7. '.sorted' → logprob: -14.502522468566895
    8. '.reverse' → logprob: -14.627522468566895
    9. ' .' → logprob: -14.627522468566895
    10. '.s' → logprob: -14.752522468566895

Token 129: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.47416168451309204
    2. '(key' → logprob: -0.974161684513092
    3. 'reverse' → logprob: -9.599162101745605
    4. '(' → logprob: -11.224162101745605
    5. '()' → logprob: -12.849162101745605
    6. 'key' → logprob: -15.349162101745605
    7. ' reverse' → logprob: -15.599162101745605
    8. '(p' → logprob: -16.09916114807129
    9. '(
' → logprob: -16.09916114807129
    10. '.reverse' → logprob: -16.47416114807129

Token 130: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0026072871405631304
    2. '=' → logprob: -6.002607345581055
    3. ')' → logprob: -9.002607345581055
    4. ')=' → logprob: -12.877607345581055
    5. ',' → logprob: -13.252607345581055
    6. '(True' → logprob: -13.252607345581055
    7. ' =' → logprob: -13.752607345581055
    8. 'True' → logprob: -15.377607345581055
    9. '())' → logprob: -15.502607345581055
    10. '<|end|>' → logprob: -15.627607345581055

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.778209353797138e-05
    2. ')
' → logprob: -9.875067710876465
    3. ' )' → logprob: -11.750067710876465
    4. ')p' → logprob: -12.250067710876465
    5. '   ' → logprob: -13.500067710876465
    6. ')

' → logprob: -14.375067710876465
    7. ',' → logprob: -14.750067710876465
    8. ')#' → logprob: -15.125067710876465
    9. ' ' → logprob: -15.250067710876465
    10. ')return' → logprob: -16.62506866455078

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005286884494125843
    2. '
' → logprob: -5.630286693572998
    3. '    
' → logprob: -6.755286693572998
    4. 'total' → logprob: -8.130287170410156
    5. ' total' → logprob: -9.130287170410156
    6. 'value' → logprob: -10.380287170410156
    7. '   
' → logprob: -11.505287170410156
    8. '  
' → logprob: -11.630287170410156
    9. 'result' → logprob: -12.005287170410156
    10. ' 
' → logprob: -12.005287170410156

Token 133: ' index' (ID: 3472)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6893584728240967
    2. 'res' → logprob: -0.9393584728240967
    3. 'ret' → logprob: -3.3143584728240967
    4. 'total' → logprob: -4.189358711242676
    5. 'answer' → logprob: -4.564358711242676
    6. 'rem' → logprob: -4.814358711242676
    7. 'result' → logprob: -5.064358711242676
    8. 'weight' → logprob: -5.314358711242676
    9. 'capacity' → logprob: -5.564358711242676
    10. ' ans' → logprob: -5.939358711242676

Token 134: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22547388076782227
    2. '=' → logprob: -1.6004738807678223
    3. 's' → logprob: -10.725473403930664
    4. ',' → logprob: -11.225473403930664
    5. ' ' → logprob: -11.850473403930664
    6. '_' → logprob: -12.600473403930664
    7. ')' → logprob: -12.850473403930664
    8. '(' → logprob: -12.975473403930664
    9. 'p' → logprob: -13.475473403930664
    10. '  ' → logprob: -13.850473403930664

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029744720086455345
    2. ' ' → logprob: -8.125297546386719
    3. 's' → logprob: -15.250297546386719
    4. '=' → logprob: -15.625297546386719
    5. '<|end|>' → logprob: -16.06279754638672
    6. '  ' → logprob: -16.12529754638672
    7. '-' → logprob: -16.12529754638672
    8. '```' → logprob: -16.25029754638672
    9. 'i' → logprob: -16.56279754638672
    10. 'p' → logprob: -17.00029754638672

Token 136: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3575552701950073
    2. '   ' → logprob: -1.6075552701950073
    3. ',' → logprob: -3.357555389404297
    4. 'total' → logprob: -4.232555389404297
    5. '    
' → logprob: -4.232555389404297
    6. ' total' → logprob: -4.482555389404297
    7. ',total' → logprob: -4.982555389404297
    8. ',
' → logprob: -5.982555389404297
    9. ' 
' → logprob: -5.982555389404297
    10. '   
' → logprob: -6.482555389404297

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3825624883174896
    2. '
' → logprob: -2.1325623989105225
    3. 'total' → logprob: -2.7575623989105225
    4. 'result' → logprob: -2.8825623989105225
    5. ' total' → logprob: -3.2575623989105225
    6. ' result' → logprob: -4.757562637329102
    7. '    
' → logprob: -5.132562637329102
    8. 'res' → logprob: -5.257562637329102
    9. ' ans' → logprob: -5.257562637329102
    10. ',' → logprob: -5.757562637329102

Token 138: ' profit' (ID: 15971)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.37413129210472107
    2. 'res' → logprob: -1.9991313219070435
    3. 'ret' → logprob: -2.999131202697754
    4. 'value' → logprob: -3.374131202697754
    5. 'answer' → logprob: -3.499131202697754
    6. 'total' → logprob: -4.124131202697754
    7. 'result' → logprob: -4.124131202697754
    8. 'weight' → logprob: -4.624131202697754
    9. 'val' → logprob: -5.499131202697754
    10. ' ans' → logprob: -5.624131202697754

Token 139: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11318984627723694
    2. ' =' → logprob: -2.238189935684204
    3. ',' → logprob: -8.113189697265625
    4. ' ' → logprob: -10.613189697265625
    5. ',total' → logprob: -10.613189697265625
    6. ' ,' → logprob: -13.113189697265625
    7. '_total' → logprob: -13.113189697265625
    8. '=sum' → logprob: -13.488189697265625
    9. '```' → logprob: -13.613189697265625
    10. '=int' → logprob: -13.863189697265625

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. 'float' → logprob: -17.62507438659668
    4. '   ' → logprob: -17.75007438659668
    5. '.' → logprob: -18.87507438659668
    6. '  ' → logprob: -18.87507438659668
    7. '۰' → logprob: -19.25007438659668
    8. '```' → logprob: -19.37507438659668
    9. '00' → logprob: -20.06257438659668
    10. '<|end|>' → logprob: -20.12507438659668

Token 141: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1191364973783493
    2. '   ' → logprob: -2.8691365718841553
    3. '	while' → logprob: -4.244136333465576
    4. '    
' → logprob: -4.494136333465576
    5. '	
' → logprob: -4.869136333465576
    6. ' while' → logprob: -5.494136333465576
    7. '<|end|>' → logprob: -5.494136333465576
    8. '   
' → logprob: -5.619136333465576
    9. ',' → logprob: -5.744136333465576
    10. 'while' → logprob: -6.369136333465576

Token 142: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09848510473966599
    2. '   ' → logprob: -3.473484992980957
    3. '    
' → logprob: -4.223484992980957
    4. '<|end|>' → logprob: -4.348484992980957
    5. ' 
' → logprob: -4.598484992980957
    6. ',' → logprob: -4.848484992980957
    7. '   
' → logprob: -5.473484992980957
    8. '	
' → logprob: -5.723484992980957
    9. ' while' → logprob: -5.973484992980957
    10. ' ' → logprob: -6.473484992980957

Token 143: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0178638007491827
    2. ' while' → logprob: -4.267863750457764
    3. '   ' → logprob: -5.767863750457764
    4. 'W' → logprob: -8.892864227294922
    5. 'capacity' → logprob: -9.267864227294922
    6. 'weight' → logprob: -9.642864227294922
    7. '    
' → logprob: -9.767864227294922
    8. '
' → logprob: -10.142864227294922
    9. 'remaining' → logprob: -10.142864227294922
    10. 'w' → logprob: -10.392864227294922

Token 144: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.5067188739776611
    2. ' index' → logprob: -1.0067188739776611
    3. 'W' → logprob: -4.006718635559082
    4. 'index' → logprob: -4.381718635559082
    5. ' ' → logprob: -7.131718635559082
    6. '(index' → logprob: -8.756718635559082
    7. '	W' → logprob: -9.131718635559082
    8. '(W' → logprob: -9.944218635559082
    9. ' (' → logprob: -10.319218635559082
    10. '	index' → logprob: -10.569218635559082

Token 145: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.21091610193252563
    2. ' >' → logprob: -1.8359160423278809
    3. ' and' → logprob: -3.710916042327881
    4. 'and' → logprob: -5.085916042327881
    5. '&gt' → logprob: -10.335916519165039
    6. ' ' → logprob: -12.335916519165039
    7. '0' → logprob: -12.460916519165039
    8. ' >
' → logprob: -12.960916519165039
    9. '&' → logprob: -13.335916519165039
    10. '>
' → logprob: -13.335916519165039

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00091217877343297
    2. ' ' → logprob: -7.000912189483643
    3. 'and' → logprob: -15.250911712646484
    4. ' and' → logprob: -16.125911712646484
    5. '>' → logprob: -16.375911712646484
    6. '=' → logprob: -16.750911712646484
    7. '```' → logprob: -16.813411712646484
    8. '  ' → logprob: -17.438411712646484
    9. '   ' → logprob: -17.813411712646484
    10. ' ' → logprob: -17.875911712646484

Token 147: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01733110100030899
    2. 'and' → logprob: -4.267331123352051
    3. ':' → logprob: -5.767331123352051
    4. '   ' → logprob: -10.89233112335205
    5. ':
' → logprob: -11.89233112335205
    6. '	and' → logprob: -12.64233112335205
    7. ' ' → logprob: -13.01733112335205
    8. ',' → logprob: -13.39233112335205
    9. ' :' → logprob: -14.51733112335205
    10. '  ' → logprob: -14.64233112335205

Token 148: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.005233882926404476
    2. ' index' → logprob: -5.2552337646484375
    3. '	index' → logprob: -16.755233764648438
    4. '#index' → logprob: -17.255233764648438
    5. '=index' → logprob: -17.505233764648438
    6. ' ' → logprob: -17.505233764648438
    7. '   ' → logprob: -18.255233764648438
    8. '(index' → logprob: -18.255233764648438
    9. 'nd' → logprob: -18.380233764648438
    10. '_index' → logprob: -18.505233764648438

Token 149: '<N' (ID: 60262)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10370682924985886
    2. '<' → logprob: -2.3537068367004395
    3. '<len' → logprob: -5.7287068367004395
    4. '<|end|>' → logprob: -9.228706359863281
    5. ' ' → logprob: -9.353706359863281
    6. '<size' → logprob: -10.978706359863281
    7. '<p' → logprob: -10.978706359863281
    8. '<n' → logprob: -12.603706359863281
    9. '<num' → logprob: -12.728706359863281
    10. ' <",' → logprob: -12.853706359863281

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019734179659280926
    2. ':
' → logprob: -8.625197410583496
    3. '):' → logprob: -12.250197410583496
    4. ' :' → logprob: -12.375197410583496
    5. ' and' → logprob: -13.125197410583496
    6. ':**' → logprob: -13.875197410583496
    7. ',' → logprob: -14.125197410583496
    8. '<|end|>' → logprob: -14.125197410583496
    9. '   ' → logprob: -14.250197410583496
    10. ':return' → logprob: -14.375197410583496

Token 151: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0358520969748497
    2. '       ' → logprob: -4.035851955413818
    3. ',' → logprob: -4.660851955413818
    4. '   ' → logprob: -5.910851955413818
    5. '<|end|>' → logprob: -6.035851955413818
    6. '):' → logprob: -6.785851955413818
    7. ':
' → logprob: -6.910851955413818
    8. ' :' → logprob: -8.535852432250977
    9. ' and' → logprob: -9.285852432250977
    10. '    ' → logprob: -9.410852432250977

Token 152: ' if' (ID: 538)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12196813523769379
    2. 'if' (adapté à ' if') → logprob: -2.7469680309295654
    3. 'value' → logprob: -3.8719680309295654
    4. ' v' → logprob: -4.4969682693481445
    5. ' if' → logprob: -5.3719682693481445
    6. '   ' → logprob: -5.7469682693481445
    7. 'val' → logprob: -5.8719682693481445
    8. 'vw' → logprob: -6.2469682693481445
    9. 'w' → logprob: -6.4969682693481445
    10. 'profit' → logprob: -6.9969682693481445

Token 153: ' W' (ID: 486)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.24645186960697174
    2. 'p' → logprob: -1.8714518547058105
    3. ' W' → logprob: -2.9964518547058105
    4. 'W' → logprob: -4.2464518547058105
    5. '   ' → logprob: -8.746452331542969
    6. ' ' → logprob: -9.996452331542969
    7. '    ' → logprob: -11.621452331542969
    8. 'w' → logprob: -11.871452331542969
    9. '  ' → logprob: -12.121452331542969
    10. '	p' → logprob: -12.121452331542969

Token 154: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.1813029944896698
    2. ' >=' → logprob: -1.8063030242919922
    3. '>' → logprob: -7.056303024291992
    4. ' >' → logprob: -9.056303024291992
    5. '<' → logprob: -9.181303024291992
    6. '/' → logprob: -9.306303024291992
    7. '-' → logprob: -9.306303024291992
    8. ' ' → logprob: -9.556303024291992
    9. ' <' → logprob: -10.181303024291992
    10. ' /' → logprob: -10.681303024291992

Token 155: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00014001218369230628
    2. ' p' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.000139236450195
    4. 'int' → logprob: -17.500139236450195
    5. ')p' → logprob: -17.875139236450195
    6. '<p' → logprob: -18.875139236450195
    7. ' ' → logprob: -19.000139236450195
    8. '_p' → logprob: -19.125139236450195
    9. '(p' → logprob: -19.125139236450195
    10. '[p' → logprob: -19.250139236450195

Token 156: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.00011594036914175376
    2. '[' → logprob: -9.125116348266602
    3. '[ind' → logprob: -12.875116348266602
    4. '```' → logprob: -13.000116348266602
    5. '[Index' → logprob: -14.250116348266602
    6. '[in' → logprob: -15.375116348266602
    7. '[
' → logprob: -15.500116348266602
    8. '\[' → logprob: -15.750116348266602
    9. '[token' → logprob: -16.0001163482666
    10. '[idx' → logprob: -16.0001163482666

Token 157: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.576711893081665
    2. '[' → logprob: -0.826711893081665
    3. ']' → logprob: -8.201711654663086
    4. ')[' → logprob: -8.451711654663086
    5. ' ][' → logprob: -9.201711654663086
    6. ' [' → logprob: -9.951711654663086
    7. '```' → logprob: -10.701711654663086
    8. '>[' → logprob: -10.951711654663086
    9. '"][' → logprob: -11.076711654663086
    10. ''][' → logprob: -11.201711654663086

Token 158: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. '1' → logprob: -13.250001907348633
    3. '```' → logprob: -16.625001907348633
    4. '
' → logprob: -17.875001907348633
    5. '２' → logprob: -17.875001907348633
    6. '₂' → logprob: -18.500001907348633
    7. ' ' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.250001907348633
    9. '[' → logprob: -19.250001907348633
    10. '۲' → logprob: -19.250001907348633

Token 159: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08023259043693542
    2. '):' → logprob: -2.955232620239258
    3. ']:' → logprob: -3.830232620239258
    4. ':
' → logprob: -6.830232620239258
    5. '):
' → logprob: -6.955232620239258
    6. '       ' → logprob: -7.705232620239258
    7. ']:
' → logprob: -8.455232620239258
    8. ']' → logprob: -8.955232620239258
    9. '}:' → logprob: -9.080232620239258
    10. '<|end|>' → logprob: -9.080232620239258

Token 160: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7441596388816833
    2. 'profit' → logprob: -1.3691596984863281
    3. '           ' → logprob: -1.6191596984863281
    4. ' profit' → logprob: -2.869159698486328
    5. '<|end|>' → logprob: -4.744159698486328
    6. '_profit' → logprob: -6.619159698486328
    7. '            
' → logprob: -7.119159698486328
    8. '	       ' → logprob: -7.369159698486328
    9. '	pro' → logprob: -7.744159698486328
    10. '<|end|>' → logprob: -7.744159698486328

Token 161: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' (adapté à ' profit') → logprob: -0.039086755365133286
    2. ' profit' → logprob: -3.2890868186950684
    3. '           ' → logprob: -6.914086818695068
    4. '_profit' → logprob: -11.16408634185791
    5. 'prof' → logprob: -12.03908634185791
    6. '       ' → logprob: -12.03908634185791
    7. '            
' → logprob: -12.28908634185791
    8. '	pro' → logprob: -12.41408634185791
    9. 'pro' → logprob: -12.53908634185791
    10. 'profits' → logprob: -12.91408634185791

Token 162: '+=' (ID: 18287)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4762081801891327
    2. '+=' → logprob: -0.9762082099914551
    3. '+' → logprob: -6.226208209991455
    4. '+=(' → logprob: -9.226207733154297
    5. ']+=' → logprob: -10.226207733154297
    6. '+="' → logprob: -11.851207733154297
    7. '+='' → logprob: -11.976207733154297
    8. ' +' → logprob: -13.101207733154297
    9. ' ' → logprob: -14.601207733154297
    10. '+p' → logprob: -15.101207733154297

Token 163: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009122979827225208
    2. ' p' → logprob: -7.000912189483643
    3. '   ' → logprob: -15.0009126663208
    4. '	p' → logprob: -15.3759126663208
    5. ' ' → logprob: -16.125911712646484
    6. '
' → logprob: -17.125911712646484
    7. '*p' → logprob: -17.250911712646484
    8. '           ' → logprob: -17.500911712646484
    9. '  ' → logprob: -17.625911712646484
    10. 'int' → logprob: -17.813411712646484

Token 164: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.62500286102295
    3. '[ind' → logprob: -14.87500286102295
    4. 'index' → logprob: -15.12500286102295
    5. '```' → logprob: -15.12500286102295
    6. '[in' → logprob: -15.37500286102295
    7. '[
' → logprob: -15.75000286102295
    8. '[user' → logprob: -15.75000286102295
    9. '[Index' → logprob: -16.125001907348633
    10. ' [' → logprob: -17.250001907348633

Token 165: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0037513866554945707
    2. '[' → logprob: -5.628751277923584
    3. ']' → logprob: -9.503751754760742
    4. ' ][' → logprob: -10.378751754760742
    5. '"][' → logprob: -11.753751754760742
    6. ')[' → logprob: -11.878751754760742
    7. '   ' → logprob: -12.253751754760742
    8. '```' → logprob: -12.378751754760742
    9. ']][' → logprob: -12.628751754760742
    10. ''][' → logprob: -13.003751754760742

Token 166: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013332172529771924
    2. '1' → logprob: -6.626333236694336
    3. '```' → logprob: -12.501333236694336
    4. '[' → logprob: -14.126333236694336
    5. ' ' → logprob: -14.188833236694336
    6. ']' → logprob: -15.063833236694336
    7. '۲' → logprob: -15.563833236694336
    8. '
' → logprob: -15.688833236694336
    9. '
' → logprob: -15.688833236694336
    10. '``' → logprob: -15.751333236694336

Token 167: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.367352157831192
    2. ')
' → logprob: -1.4923521280288696
    3. '
' → logprob: -2.617352247238159
    4. '<|end|>' → logprob: -5.86735200881958
    5. '           ' → logprob: -5.99235200881958
    6. ']' → logprob: -6.11735200881958
    7. '       ' → logprob: -6.86735200881958
    8. ']
' → logprob: -7.49235200881958
    9. '*' → logprob: -9.492352485656738
    10. '               ' → logprob: -9.867352485656738

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002863246714696288
    2. '
' → logprob: -5.87786340713501
    3. ' W' → logprob: -10.627862930297852
    4. '            
' → logprob: -11.377862930297852
    5. '       ' → logprob: -11.627862930297852
    6. '               ' → logprob: -12.377862930297852
    7. 'W' → logprob: -13.377862930297852
    8. '		' → logprob: -13.502862930297852
    9. '	       ' → logprob: -14.002862930297852
    10. ',' → logprob: -14.127862930297852

Token 169: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' (adapté à ' W') → logprob: -8.44706009957008e-05
    2. '           ' → logprob: -10.00008487701416
    3. ' W' → logprob: -10.50008487701416
    4. '       ' → logprob: -11.87508487701416
    5. '   ' → logprob: -12.50008487701416
    6. '  ' → logprob: -15.87508487701416
    7. '	W' → logprob: -16.000083923339844
    8. '               ' → logprob: -16.125083923339844
    9. '     ' → logprob: -16.625083923339844
    10. 'w' → logprob: -16.625083923339844

Token 170: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.05234141647815704
    2. ' -=' → logprob: -3.5523414611816406
    3. '-' → logprob: -3.8023414611816406
    4. ' -' → logprob: -11.30234146118164
    5. '=' → logprob: -12.05234146118164
    6. '	' → logprob: -14.42734146118164
    7. '+=' → logprob: -15.30234146118164
    8. '   ' → logprob: -15.92734146118164
    9. ')-' → logprob: -16.92734146118164
    10. '
' → logprob: -17.55234146118164

Token 171: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9027791495318525e-05
    2. ' p' → logprob: -10.875019073486328
    3. 'int' → logprob: -17.500019073486328
    4. '	p' → logprob: -18.500019073486328
    5. ')p' → logprob: -19.000019073486328
    6. '   ' → logprob: -19.125019073486328
    7. '<p' → logprob: -19.375019073486328
    8. ' ' → logprob: -19.375019073486328
    9. '<|end|>' → logprob: -19.625019073486328
    10. '```' → logprob: -19.750019073486328

Token 172: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.37500286102295
    3. '```' → logprob: -14.75000286102295
    4. '[ind' → logprob: -15.00000286102295
    5. 'index' → logprob: -15.25000286102295
    6. '[in' → logprob: -15.62500286102295
    7. '[
' → logprob: -15.75000286102295
    8. ' [' → logprob: -17.500003814697266
    9. '[Index' → logprob: -17.750003814697266
    10. '[idx' → logprob: -17.875003814697266

Token 173: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013741609873250127
    2. '[' → logprob: -6.626374244689941
    3. ' ][' → logprob: -10.626374244689941
    4. ']' → logprob: -11.876374244689941
    5. '"][' → logprob: -12.376374244689941
    6. '2' → logprob: -12.626374244689941
    7. ''][' → logprob: -13.126374244689941
    8. ']][' → logprob: -13.376374244689941
    9. '```' → logprob: -13.376374244689941
    10. '   ' → logprob: -14.376374244689941

Token 174: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015617619501426816
    2. 'index' → logprob: -6.501561641693115
    3. '[' → logprob: -10.251562118530273
    4. ' ' → logprob: -11.501562118530273
    5. '```' → logprob: -11.626562118530273
    6. '[index' → logprob: -12.876562118530273
    7. '   ' → logprob: -14.626562118530273
    8. ' index' → logprob: -14.751562118530273
    9. '][' → logprob: -14.876562118530273
    10. '1' → logprob: -15.376562118530273

Token 175: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33481648564338684
    2. ')' → logprob: -1.8348164558410645
    3. ')
' → logprob: -2.4598164558410645
    4. ']' → logprob: -3.9598164558410645
    5. '
' → logprob: -4.7098164558410645
    6. ']
' → logprob: -5.0848164558410645
    7. 'else' → logprob: -6.4598164558410645
    8. '<|end|>' → logprob: -6.7098164558410645
    9. '   ' → logprob: -7.0848164558410645
    10. '           ' → logprob: -7.2098164558410645

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047106825513765216
    2. 'else' → logprob: -7.750471115112305
    3. ' else' → logprob: -10.250471115112305
    4. '   ' → logprob: -13.625471115112305
    5. '
' → logprob: -14.125471115112305
    6. 'index' → logprob: -14.125471115112305
    7. '           ' → logprob: -14.625471115112305
    8. 'elif' → logprob: -15.000471115112305
    9. '      ' → logprob: -15.375471115112305
    10. ')' → logprob: -15.375471115112305

Token 177: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7114763259887695
    2. 'else' (adapté à ' else') → logprob: -0.7114763259887695
    3. ' else' → logprob: -4.5864763259887695
    4. '   ' → logprob: -4.8364763259887695
    5. '	else' → logprob: -10.33647632598877
    6. 'elif' → logprob: -13.08647632598877
    7. '      ' → logprob: -13.58647632598877
    8. '	' → logprob: -14.46147632598877
    9. '     ' → logprob: -14.46147632598877
    10. '    ' → logprob: -14.96147632598877

Token 178: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8613304495811462
    2. ':
' → logprob: -0.9863304495811462
    3. '           ' → logprob: -1.611330509185791
    4. '       ' → logprob: -6.236330509185791
    5. 'profit' → logprob: -6.361330509185791
    6. '[' → logprob: -8.111330032348633
    7. '          ' → logprob: -8.611330032348633
    8. '   ' → logprob: -8.861330032348633
    9. ' profit' → logprob: -8.861330032348633
    10. '               ' → logprob: -9.736330032348633

Token 179: '           ' (ID: 352)
  Prédit: ' profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' profit' → logprob: -0.6813393235206604
    2. 'profit' → logprob: -1.3063392639160156
    3. '           ' → logprob: -1.5563392639160156
    4. '       ' → logprob: -4.431339263916016
    5. '   ' → logprob: -8.931339263916016
    6. '	pro' → logprob: -9.806339263916016
    7. '_profit' → logprob: -9.931339263916016
    8. 'pro' → logprob: -10.181339263916016
    9. 'profits' → logprob: -10.681339263916016
    10. 'prof' → logprob: -10.806339263916016

Token 180: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' (adapté à ' profit') → logprob: -0.0004212594940327108
    2. ' profit' → logprob: -7.875421047210693
    3. 'fraction' → logprob: -10.625421524047852
    4. '           ' → logprob: -11.125421524047852
    5. 'prof' → logprob: -15.000421524047852
    6. '            
' → logprob: -15.125421524047852
    7. '   ' → logprob: -15.125421524047852
    8. 'profits' → logprob: -15.250421524047852
    9. 'pro' → logprob: -15.375421524047852
    10. '       ' → logprob: -16.37542152404785

Token 181: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0030114573892205954
    2. '+=(' → logprob: -5.878011226654053
    3. ' +=' → logprob: -8.628011703491211
    4. ']+=' → logprob: -10.878011703491211
    5. '+='' → logprob: -12.378011703491211
    6. '+="' → logprob: -12.878011703491211
    7. '+' → logprob: -13.253011703491211
    8. '   ' → logprob: -17.00301170349121
    9. '=' → logprob: -17.37801170349121
    10. '```' → logprob: -18.12801170349121

Token 182: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005376627668738365
    2. ' p' → logprob: -8.250537872314453
    3. 'W' → logprob: -8.375537872314453
    4. '(p' → logprob: -10.500537872314453
    5. '(W' → logprob: -11.750537872314453
    6. '(' → logprob: -12.625537872314453
    7. ' W' → logprob: -13.125537872314453
    8. ' (' → logprob: -13.250537872314453
    9. 'profit' → logprob: -13.750537872314453
    10. '   ' → logprob: -13.875537872314453

Token 183: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -7.107425062713446e-06
    2. 'index' → logprob: -12.250006675720215
    3. '```' → logprob: -13.625006675720215
    4. '[in' → logprob: -14.875006675720215
    5. '[' → logprob: -15.250006675720215
    6. '[ind' → logprob: -16.12500762939453
    7. '[p' → logprob: -16.12500762939453
    8. '=index' → logprob: -16.37500762939453
    9. '[
' → logprob: -17.50000762939453
    10. '
' → logprob: -17.62500762939453

Token 184: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00676344521343708
    2. '[' → logprob: -5.006763458251953
    3. ')[' → logprob: -11.256763458251953
    4. '>[' → logprob: -11.631763458251953
    5. ']' → logprob: -11.881763458251953
    6. '"][' → logprob: -11.881763458251953
    7. '}[' → logprob: -12.756763458251953
    8. ' ][' → logprob: -13.256763458251953
    9. '```' → logprob: -13.381763458251953
    10. ''][' → logprob: -13.381763458251953

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012718952260911465
    2. '0' → logprob: -4.38771915435791
    3. '[' → logprob: -8.51271915435791
    4. 'p' → logprob: -12.88771915435791
    5. 'index' → logprob: -12.88771915435791
    6. '```' → logprob: -14.20021915435791
    7. ' ' → logprob: -14.32521915435791
    8. '[index' → logprob: -15.20021915435791
    9. '(' → logprob: -15.38771915435791
    10. '１' → logprob: -15.51271915435791

Token 186: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.011552656069397926
    2. ' *' → logprob: -4.511552810668945
    3. '*(' → logprob: -7.886552810668945
    4. '*p' → logprob: -9.136552810668945
    5. '/' → logprob: -11.886552810668945
    6. ')*' → logprob: -12.636552810668945
    7. '/W' → logprob: -12.636552810668945
    8. ')' → logprob: -13.136552810668945
    9. '*w' → logprob: -13.886552810668945
    10. '*((' → logprob: -14.261552810668945

Token 187: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.25403648614883423
    2. '(W' → logprob: -1.5040364265441895
    3. ' W' → logprob: -6.5040364265441895
    4. ' (' → logprob: -8.254036903381348
    5. '(' → logprob: -8.629036903381348
    6. 'float' → logprob: -9.379036903381348
    7. '(float' → logprob: -9.754036903381348
    8. '   ' → logprob: -11.754036903381348
    9. '	W' → logprob: -12.254036903381348
    10. ' ' → logprob: -12.879036903381348

Token 188: '/p' (ID: 8138)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.8332905769348145
    2. '/W' → logprob: -1.0832905769348145
    3. '           ' → logprob: -1.8332905769348145
    4. '/p' → logprob: -2.9582905769348145
    5. ' /' → logprob: -4.3332905769348145
    6. '/w' → logprob: -6.8332905769348145
    7. '          ' → logprob: -8.208290100097656
    8. '       ' → logprob: -8.833290100097656
    9. '/
' → logprob: -8.958290100097656
    10. 'p' → logprob: -9.958290100097656

Token 189: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -1.0921942703134846e-05
    2. 'index' → logprob: -11.62501049041748
    3. '[in' → logprob: -14.12501049041748
    4. '[' → logprob: -14.75001049041748
    5. '[ind' → logprob: -15.00001049041748
    6. '```' → logprob: -15.12501049041748
    7. '[
' → logprob: -16.625011444091797
    8. '
' → logprob: -17.875011444091797
    9. 'p' → logprob: -18.250011444091797
    10. '(index' → logprob: -18.500011444091797

Token 190: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6446030735969543
    2. '[' → logprob: -1.2696030139923096
    3. '[index' → logprob: -1.6446030139923096
    4. '```' → logprob: -7.894603252410889
    5. '[][' → logprob: -8.01960277557373
    6. '[
' → logprob: -9.39460277557373
    7. ']' → logprob: -10.14460277557373
    8. '[Index' → logprob: -10.26960277557373
    9. '>[' → logprob: -10.51960277557373
    10. ')[' → logprob: -10.51960277557373

Token 191: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9743012671824545e-05
    2. '[' → logprob: -11.625020027160645
    3. '```' → logprob: -12.375020027160645
    4. ' ' → logprob: -12.500020027160645
    5. '   ' → logprob: -13.750020027160645
    6. '
' → logprob: -15.375020027160645
    7. '۲' → logprob: -15.562520027160645
    8. '  ' → logprob: -16.125019073486328
    9. '       ' → logprob: -16.187519073486328
    10. '-' → logprob: -16.312519073486328

Token 192: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5876412987709045
    2. ')
' → logprob: -1.4626412391662598
    3. ')' → logprob: -1.5876412391662598
    4. '           ' → logprob: -4.96264123916626
    5. '
' → logprob: -6.96264123916626
    6. ')
' → logprob: -8.837641716003418
    7. ']' → logprob: -9.462641716003418
    8. ']
' → logprob: -9.712641716003418
    9. '<|end|>' → logprob: -10.837641716003418
    10. '               ' → logprob: -11.087641716003418

Token 193: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022213248303160071
    2. ' W' → logprob: -8.750222206115723
    3. '       ' → logprob: -10.375222206115723
    4. 'W' → logprob: -10.875222206115723
    5. '          ' → logprob: -12.000222206115723
    6. '   ' → logprob: -12.750222206115723
    7. '
' → logprob: -13.250222206115723
    8. ' break' → logprob: -14.000222206115723
    9. 'break' → logprob: -14.375222206115723
    10. ',' → logprob: -15.125222206115723

Token 194: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' (adapté à ' W') → logprob: -0.3137204349040985
    2. 'break' → logprob: -1.313720464706421
    3. ' break' → logprob: -7.938720226287842
    4. ' W' → logprob: -9.563720703125
    5. '           ' → logprob: -11.063720703125
    6. '       ' → logprob: -11.563720703125
    7. '   ' → logprob: -12.688720703125
    8. 'Break' → logprob: -13.563720703125
    9. '0' → logprob: -14.188720703125
    10. '	break' → logprob: -15.063720703125

Token 195: '-=' (ID: 77519)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.723352049040841e-06
    2. '0' → logprob: -13.000004768371582
    3. ' =' → logprob: -13.000004768371582
    4. '-=' → logprob: -15.625004768371582
    5. '＝' → logprob: -19.125003814697266
    6. '=
' → logprob: -19.250003814697266
    7. '.=' → logprob: -19.500003814697266
    8. '*=' → logprob: -19.875003814697266
    9. '=int' → logprob: -20.875003814697266
    10. '=

' → logprob: -21.500003814697266

Token 196: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -6.456358823925257e-05
    2. 'p' → logprob: -9.875064849853516
    3. ' W' → logprob: -11.250064849853516
    4. '<|end|>' → logprob: -17.500064849853516
    5. 'w' → logprob: -18.000064849853516
    6. '	W' → logprob: -18.250064849853516
    7. ' p' → logprob: -18.875064849853516
    8. '<p' → logprob: -19.750064849853516
    9. '0' → logprob: -19.750064849853516
    10. '<W' → logprob: -19.875064849853516

Token 197: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005052778869867325
    2. '
' → logprob: -6.25505256652832
    3. '   ' → logprob: -6.50505256652832
    4. 'index' → logprob: -7.25505256652832
    5. '0' → logprob: -7.75505256652832
    6. 'break' → logprob: -9.38005256652832
    7. '<|end|>' → logprob: -9.50505256652832
    8. '           ' → logprob: -9.75505256652832
    9. ' ' → logprob: -10.00505256652832
    10. 'W' → logprob: -10.25505256652832

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017450349405407906
    2. '
' → logprob: -7.001745223999023
    3. '           ' → logprob: -7.126745223999023
    4. '        
' → logprob: -11.126745223999023
    5. '   ' → logprob: -11.751745223999023
    6. '    
' → logprob: -13.251745223999023
    7. '            
' → logprob: -13.751745223999023
    8. '      ' → logprob: -14.126745223999023
    9. ',' → logprob: -14.251745223999023
    10. ' index' → logprob: -14.501745223999023

Token 199: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.08625052869319916
    2. ' index' → logprob: -3.3362505435943604
    3. '       ' → logprob: -3.5862505435943604
    4. '   ' → logprob: -3.9612505435943604
    5. '
' → logprob: -8.211250305175781
    6. '	index' → logprob: -11.211250305175781
    7. ',index' → logprob: -11.336250305175781
    8. '#index' → logprob: -11.711250305175781
    9. '[index' → logprob: -12.461250305175781
    10. '=index' → logprob: -12.461250305175781

Token 200: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3141658902168274
    2. '+' → logprob: -1.3141658306121826
    3. ' +=' → logprob: -7.064166069030762
    4. '=' → logprob: -10.939166069030762
    5. '++' → logprob: -11.564166069030762
    6. '+="' → logprob: -11.939166069030762
    7. '+='' → logprob: -12.064166069030762
    8. '+++' → logprob: -12.564166069030762
    9. '<|end|>' → logprob: -12.814166069030762
    10. ']+=' → logprob: -13.689166069030762

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -20.0
    4. '１' → logprob: -20.125
    5. '   ' → logprob: -20.5
    6. '
' → logprob: -22.5625
    7. '+' → logprob: -22.8125
    8. '۱' → logprob: -22.875
    9. '  ' → logprob: -23.25
    10. '[' → logprob: -23.75

Token 202: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004937358666211367
    2. '
' → logprob: -5.379937171936035
    3. 'print' → logprob: -8.504937171936035
    4. '    
' → logprob: -9.129937171936035
    5. 'return' → logprob: -13.254937171936035
    6. '```' → logprob: -13.754937171936035
    7. '  
' → logprob: -14.004937171936035
    8. ' print' → logprob: -14.379937171936035
    9. '        
' → logprob: -15.129937171936035
    10. '#print' → logprob: -15.504937171936035

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003868134692311287
    2. '
' → logprob: -5.628868103027344
    3. '    
' → logprob: -8.753868103027344
    4. 'print' → logprob: -9.253868103027344
    5. '```' → logprob: -11.878868103027344
    6. '  
' → logprob: -12.628868103027344
    7. ' print' → logprob: -13.378868103027344
    8. '

' → logprob: -14.003868103027344
    9. '        
' → logprob: -14.878868103027344
    10. 'return' → logprob: -15.503868103027344

Token 204: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038414161652326584
    2. 'print' (adapté à ' print') → logprob: -3.288414239883423
    3. '
' → logprob: -8.163414001464844
    4. '    
' → logprob: -9.663414001464844
    5. ' print' → logprob: -10.788414001464844
    6. '#print' → logprob: -14.163414001464844
    7. '	print' → logprob: -14.288414001464844
    8. '```' → logprob: -14.288414001464844
    9. '  
' → logprob: -14.413414001464844
    10. '

' → logprob: -15.288414001464844

Token 205: '(pro' (ID: 7092)
  Prédit: '(pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.001504982472397387
    2. '(' → logprob: -6.501504898071289
    3. '(round' → logprob: -14.126504898071289
    4. ' (' → logprob: -14.126504898071289
    5. '(int' → logprob: -14.251504898071289
    6. '()' → logprob: -15.001504898071289
    7. '(
' → logprob: -15.876504898071289
    8. '(prob' → logprob: -16.87650489807129
    9. '(pr' → logprob: -18.00150489807129
    10. '(f' → logprob: -18.12650489807129

Token 206: 'fit' (ID: 8487)
  Prédit: 'fit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fit' → logprob: -7.226628895296017e-06
    2. 'f' → logprob: -12.375007629394531
    3. 'ft' → logprob: -14.000007629394531
    4. 'fi' → logprob: -14.625007629394531
    5. ' fit' → logprob: -14.750007629394531
    6. 'it' → logprob: -14.875007629394531
    7. 'fits' → logprob: -15.375007629394531
    8. 'profit' → logprob: -15.500007629394531
    9. '.fit' → logprob: -16.37500762939453
    10. 't' → logprob: -16.62500762939453

Token 207: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.500000953674316
    3. ')
' → logprob: -15.625000953674316
    4. ')`' → logprob: -18.875
    5. ')#' → logprob: -19.625
    6. '）' → logprob: -19.625
    7. '')' → logprob: -20.125
    8. '()' → logprob: -20.25
    9. '),' → logprob: -20.5
    10. ')}' → logprob: -20.625

Token 208: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5663190484046936
    2. '
' → logprob: -0.9413190484046936
    3. '<|end|>' → logprob: -3.191318988800049
    4. '\n' → logprob: -8.066319465637207
    5. '```' → logprob: -8.191319465637207
    6. ' if' → logprob: -8.316319465637207
    7. '

' → logprob: -8.941319465637207
    8. '  
' → logprob: -9.566319465637207
    9. '<|end|>' → logprob: -10.441319465637207
    10. '    
' → logprob: -10.816319465637207

Token 209: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01718885637819767
    2. '__' → logprob: -4.142189025878906
    3. '_' → logprob: -7.392189025878906
    4. ' ' → logprob: -7.892189025878906
    5. '_name' → logprob: -9.267189025878906
    6. ' ' → logprob: -10.767189025878906
    7. ' _' → logprob: -11.267189025878906
    8. '  ' → logprob: -11.267189025878906
    9. 'name' → logprob: -12.267189025878906
    10. 'space' → logprob: -12.267189025878906

Token 210: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2585817575454712
    2. ' ==' → logprob: -1.6335817575454712
    3. '==' → logprob: -4.258581638336182
    4. ' __' → logprob: -4.633581638336182
    5. '=="' → logprob: -5.633581638336182
    6. 'name' → logprob: -6.133581638336182
    7. '.__' → logprob: -6.633581638336182
    8. '_' → logprob: -7.883581638336182
    9. '.name' → logprob: -8.25858211517334
    10. ' =="' → logprob: -8.25858211517334

Token 211: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -14.000001907348633
    3. '==' → logprob: -14.375001907348633
    4. '__.__' → logprob: -15.000001907348633
    5. '____' → logprob: -16.625001907348633
    6. '___' → logprob: -16.750001907348633
    7. '=="' → logprob: -16.750001907348633
    8. '__
' → logprob: -16.750001907348633
    9. '__

' → logprob: -18.750001907348633
    10. '__.' → logprob: -18.750001907348633

Token 212: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.617676854133606
    2. '__' → logprob: -0.867676854133606
    3. '==' → logprob: -3.3676767349243164
    4. '=="' → logprob: -5.117676734924316
    5. '=='' → logprob: -8.617676734924316
    6. '_' → logprob: -9.617676734924316
    7. ' =="' → logprob: -9.617676734924316
    8. '=' → logprob: -10.367676734924316
    9. ' __' → logprob: -10.992676734924316
    10. ' =' → logprob: -10.992676734924316

Token 213: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16034457087516785
    2. ''' → logprob: -1.9103446006774902
    3. ' "__' → logprob: -9.160344123840332
    4. ' '__' → logprob: -11.535344123840332
    5. '__' → logprob: -12.160344123840332
    6. ''"' → logprob: -17.03534507751465
    7. ' ' → logprob: -17.16034507751465
    8. '('__' → logprob: -17.41034507751465
    9. '   ' → logprob: -17.53534507751465
    10. '"_' → logprob: -17.66034507751465

Token 214: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3177787661552429
    2. 'main' → logprob: -1.3177788257598877
    3. '"' → logprob: -5.817778587341309
    4. ''' → logprob: -6.942778587341309
    5. 'name' → logprob: -7.817778587341309
    6. '```' → logprob: -9.942778587341309
    7. '_main' → logprob: -10.442778587341309
    8. '__":
' → logprob: -10.692778587341309
    9. '   ' → logprob: -11.067778587341309
    10. '__
' → logprob: -11.442778587341309

Token 215: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1602400690317154
    2. '__' → logprob: -1.9102400541305542
    3. '__':
' → logprob: -11.660240173339844
    4. '_' → logprob: -12.035240173339844
    5. '__:' → logprob: -14.285240173339844
    6. '__["' → logprob: -15.160240173339844
    7. '_"' → logprob: -15.285240173339844
    8. '"' → logprob: -16.160240173339844
    9. '__",' → logprob: -16.660240173339844
    10. '__
' → logprob: -17.535240173339844

Token 216: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.016338275745511055
    2. '   ' → logprob: -4.516338348388672
    3. '	main' → logprob: -5.391338348388672
    4. 'main' → logprob: -7.266338348388672
    5. '_main' → logprob: -11.391338348388672
    6. '   ' → logprob: -11.891338348388672
    7. '(main' → logprob: -13.641338348388672
    8. ' ' → logprob: -13.766338348388672
    9. '   ' → logprob: -14.766338348388672
    10. '_MAIN' → logprob: -15.391338348388672

Token 217: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.339278580620885e-06
    2. ' main' → logprob: -13.000001907348633
    3. '	main' → logprob: -18.750001907348633
    4. '   ' → logprob: -21.375001907348633
    5. '_main' → logprob: -22.000001907348633
    6. '.main' → logprob: -23.125001907348633
    7. 'mai' → logprob: -24.000001907348633
    8. '(main' → logprob: -24.500001907348633
    9. '  ' → logprob: -24.750001907348633
    10. 'ma' → logprob: -25.125001907348633

Token 218: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 216
Tokens correctement prédits (1ère position, stricte): 104
Tokens correctement prédits (1ère position, avec adaptation): 113
Tokens correctement prédits (top 10): 174
Précision stricte (1ère position): 48.15%
Précision adaptée (1ère position): 52.31%
Précision (top 10): 80.56%
================================================================================
