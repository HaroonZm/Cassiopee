================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, W = map(int, input().split())
R = []
for i in range(N):
    v, w = map(int, input().split())
    R.append((v/w, v, w))
R.sort(reverse=1)
ans = 0
for _, v, w in R:
    c = min(w, W)
    W -= c
    ans += c * v / w
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' W' (ID: 486)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019255947321653366
    2. ',' → logprob: -4.269256114959717
    3. ' =' → logprob: -5.644256114959717
    4. '[' → logprob: -7.644256114959717
    5. '*' → logprob: -8.519255638122559
    6. ':' → logprob: -8.644255638122559
    7. '+' → logprob: -9.019255638122559
    8. '.' → logprob: -9.019255638122559
    9. '_' → logprob: -9.144255638122559
    10. ')' → logprob: -9.269255638122559

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.14626576006412506
    2. 'map' → logprob: -2.271265745162964
    3. ' ' → logprob: -4.021265983581543
    4. '10' → logprob: -4.896265983581543
    5. ' input' → logprob: -6.271265983581543
    6. 'input' → logprob: -6.646265983581543
    7. ' [' → logprob: -7.396265983581543
    8. '20' → logprob: -7.521265983581543
    9. 'int' → logprob: -7.771265983581543
    10. '0' → logprob: -7.896265983581543

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024616697803139687
    2. '(lambda' → logprob: -4.274616718292236
    3. '(int' → logprob: -5.149616718292236
    4. '<|end|>' → logprob: -6.399616718292236
    5. '```' → logprob: -6.774616718292236
    6. '(str' → logprob: -8.274616241455078
    7. ')' → logprob: -8.399616241455078
    8. '[int' → logprob: -8.399616241455078
    9. '<|end|>' → logprob: -9.024616241455078
    10. '<int' → logprob: -9.774616241455078

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0003074407577515
    2. '(input' → logprob: -1.0003074407577515
    3. ')' → logprob: -1.3753074407577515
    4. '(user' → logprob: -6.000307559967041
    5. '(int' → logprob: -6.750307559967041
    6. '```' → logprob: -7.125307559967041
    7. '(data' → logprob: -7.250307559967041
    8. '())' → logprob: -7.375307559967041
    9. '`)' → logprob: -7.375307559967041
    10. '(token' → logprob: -7.500307559967041

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25193408131599426
    2. ' input' → logprob: -1.5019340515136719
    3. '(input' → logprob: -13.001934051513672
    4. ',input' → logprob: -13.626934051513672
    5. ' ' → logprob: -14.376934051513672
    6. ')' → logprob: -14.376934051513672
    7. '	input' → logprob: -15.751934051513672
    8. '=input' → logprob: -16.126934051513672
    9. '<input' → logprob: -16.876934051513672
    10. '[input' → logprob: -17.501934051513672

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8407900333404541
    2. '())' → logprob: -0.8407900333404541
    3. '(' → logprob: -2.465790033340454
    4. '().' → logprob: -4.340789794921875
    5. '('' → logprob: -4.465789794921875
    6. ')' → logprob: -5.215789794921875
    7. '`()' → logprob: -5.340789794921875
    8. '());' → logprob: -5.465789794921875
    9. '(()' → logprob: -5.965789794921875
    10. '(""))' → logprob: -6.090789794921875

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00261133280582726
    2. 'strip' → logprob: -6.00261116027832
    3. 'rstrip' → logprob: -9.50261116027832
    4. 'read' → logprob: -9.75261116027832
    5. ')' → logprob: -13.50261116027832
    6. ' split' → logprob: -13.87761116027832
    7. '(split' → logprob: -16.00261116027832
    8. 'startswith' → logprob: -16.50261116027832
    9. ' readline' → logprob: -16.62761116027832
    10. 'replace' → logprob: -16.75261116027832

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027709413319826126
    2. '())' → logprob: -4.027709484100342
    3. '))' → logprob: -4.902709484100342
    4. '`)' → logprob: -6.902709484100342
    5. '()' → logprob: -7.527709484100342
    6. '(' → logprob: -8.277709007263184
    7. '('' → logprob: -9.277709007263184
    8. '')' → logprob: -10.152709007263184
    9. '()))' → logprob: -10.152709007263184
    10. '>)' → logprob: -11.027709007263184

Token 11: 'R' (ID: 49)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10146094113588333
    2. 'for' → logprob: -3.8514609336853027
    3. 'x' → logprob: -4.101460933685303
    4. 'A' → logprob: -4.226460933685303
    5. 'arr' → logprob: -4.851460933685303
    6. 'data' → logprob: -4.851460933685303
    7. 'd' → logprob: -5.226460933685303
    8. 's' → logprob: -5.851460933685303
    9. 'dp' → logprob: -5.976460933685303
    10. 'array' → logprob: -6.101460933685303

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3956320583820343
    2. '=' → logprob: -2.270632028579712
    3. '_' → logprob: -2.645632028579712
    4. 'a' → logprob: -2.895632028579712
    5. ',' → logprob: -3.270632028579712
    6. 'e' → logprob: -4.020632266998291
    7. ' ' → logprob: -4.770632266998291
    8. '[' → logprob: -4.895632266998291
    9. '.' → logprob: -5.020632266998291
    10. 'E' → logprob: -5.270632266998291

Token 13: ' []
' (ID: 8911)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' W' → logprob: -1.4136110544204712
    2. '[]' → logprob: -1.6636110544204712
    3. ' [' → logprob: -2.0386109352111816
    4. ' []' → logprob: -2.1636109352111816
    5. '0' → logprob: -2.5386109352111816
    6. ' ' → logprob: -2.9136109352111816
    7. '[' → logprob: -2.9136109352111816
    8. 'W' → logprob: -3.4136109352111816
    9. 'int' → logprob: -3.5386109352111816
    10. ' int' → logprob: -4.163610935211182

Token 14: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00026872646412812173
    2. ' for' → logprob: -9.125268936157227
    3. 'r' → logprob: -9.125268936157227
    4. '_' → logprob: -10.250268936157227
    5. '```' → logprob: -12.125268936157227
    6. 'R' → logprob: -12.500268936157227
    7. '_for' → logprob: -14.375268936157227
    8. '`' → logprob: -14.375268936157227
    9. 'range' → logprob: -14.375268936157227
    10. 'For' → logprob: -14.500268936157227

Token 15: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3529699444770813
    2. ' ' → logprob: -1.3529698848724365
    3. ' _' → logprob: -3.6029698848724365
    4. '_' → logprob: -4.477970123291016
    5. 'i' → logprob: -9.102970123291016
    6. ' ‌' → logprob: -9.602970123291016
    7. ' ' → logprob: -9.727970123291016
    8. '  ' → logprob: -9.852970123291016
    9. ' ▁' → logprob: -11.977970123291016
    10. ' I' → logprob: -11.977970123291016

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05631481856107712
    2. 'in' → logprob: -2.931314706802368
    3. 'n' → logprob: -7.056314945220947
    4. ' ' → logprob: -7.556314945220947
    5. ' n' → logprob: -10.931314468383789
    6. '  ' → logprob: -11.931314468383789
    7. ' i' → logprob: -12.181314468383789
    8. 'range' → logprob: -12.806314468383789
    9. 'i' → logprob: -13.056314468383789
    10. '_' → logprob: -13.056314468383789

Token 17: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868715465068817
    2. 'range' → logprob: -1.136871576309204
    3. '	range' → logprob: -15.636871337890625
    4. ' ' → logprob: -15.886871337890625
    5. '(range' → logprob: -17.261871337890625
    6. 'rang' → logprob: -17.386871337890625
    7. 'in' → logprob: -17.761871337890625
    8. '_range' → logprob: -17.761871337890625
    9. 'ran' → logprob: -18.136871337890625
    10. 'Range' → logprob: -18.136871337890625

Token 18: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07897064834833145
    2. '(N' → logprob: -2.5789706707000732
    3. '(n' → logprob: -9.703970909118652
    4. ' (' → logprob: -12.703970909118652
    5. '(W' → logprob: -12.828970909118652
    6. '(int' → logprob: -13.078970909118652
    7. '(len' → logprob: -13.328970909118652
    8. '(i' → logprob: -13.453970909118652
    9. '(range' → logprob: -13.453970909118652
    10. '(`' → logprob: -13.453970909118652

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010565068805590272
    2. ')' → logprob: -7.126056671142578
    3. ' ):' → logprob: -8.876056671142578
    4. '+' → logprob: -9.876056671142578
    5. '):
' → logprob: -10.251056671142578
    6. ':' → logprob: -11.001056671142578
    7. '   ' → logprob: -13.501056671142578
    8. ',' → logprob: -13.751056671142578
    9. ' range' → logprob: -13.751056671142578
    10. ' ' → logprob: -14.376056671142578

Token 20: '   ' (ID: 271)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.7135156989097595
    2. '   ' → logprob: -1.4635157585144043
    3. ' ' → logprob: -2.0885157585144043
    4. '    ' → logprob: -2.2135157585144043
    5. ' input' → logprob: -3.8385157585144043
    6. ' r' → logprob: -5.213515758514404
    7. 'input' → logprob: -5.213515758514404
    8. ' 
' → logprob: -6.213515758514404
    9. ' W' → logprob: -6.463515758514404
    10. 'r' → logprob: -6.588515758514404

Token 21: ' v' (ID: 323)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.2853955924510956
    2. 'R' → logprob: -2.035395622253418
    3. '   ' → logprob: -2.535395622253418
    4. '    ' → logprob: -4.785395622253418
    5. '```' → logprob: -5.035395622253418
    6. ' line' → logprob: -5.535395622253418
    7. 'r' → logprob: -5.535395622253418
    8. ' r' → logprob: -6.035395622253418
    9. ' W' → logprob: -6.035395622253418
    10. ' ' → logprob: -6.410395622253418

Token 22: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8209598660469055
    2. '=' → logprob: -1.1959598064422607
    3. 'al' → logprob: -2.1959598064422607
    4. 'alue' → logprob: -2.4459598064422607
    5. ',' → logprob: -3.0709598064422607
    6. ',v' → logprob: -5.69596004486084
    7. '=int' → logprob: -5.82096004486084
    8. 'ALUE' → logprob: -6.07096004486084
    9. 'als' → logprob: -7.69596004486084
    10. ',a' → logprob: -7.69596004486084

Token 23: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.576076090335846
    2. ' w' → logprob: -0.826076090335846
    3. 'wt' → logprob: -10.20107650756836
    4. 'c' → logprob: -10.70107650756836
    5. 'weight' → logprob: -10.95107650756836
    6. ' c' → logprob: -11.82607650756836
    7. ' ' → logprob: -12.32607650756836
    8. 'W' → logprob: -12.45107650756836
    9. 's' → logprob: -12.57607650756836
    10. '```' → logprob: -12.70107650756836

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2813025116920471
    2. '=' → logprob: -1.4063024520874023
    3. ',' → logprob: -9.281302452087402
    4. ')' → logprob: -10.031302452087402
    5. ' ' → logprob: -11.656302452087402
    6. '=input' → logprob: -13.656302452087402
    7. '<|end|>' → logprob: -14.031302452087402
    8. '  ' → logprob: -14.281302452087402
    9. '   ' → logprob: -14.531302452087402
    10. ' ,' → logprob: -14.656302452087402

Token 25: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5759475827217102
    2. ' map' → logprob: -0.8259475827217102
    3. '	map' → logprob: -12.325947761535645
    4. '   ' → logprob: -13.700947761535645
    5. ' ' → logprob: -13.825947761535645
    6. 'm' → logprob: -14.575947761535645
    7. ' ' → logprob: -14.575947761535645
    8. '(map' → logprob: -15.700947761535645
    9. '```' → logprob: -15.950947761535645
    10. '.map' → logprob: -16.575946807861328

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001498791272751987
    2. '(' → logprob: -7.876498699188232
    3. 'int' → logprob: -8.12649917602539
    4. '<int' → logprob: -8.25149917602539
    5. '[int' → logprob: -8.37649917602539
    6. '(input' → logprob: -8.75149917602539
    7. '<|end|>' → logprob: -9.37649917602539
    8. '(str' → logprob: -10.50149917602539
    9. '(lambda' → logprob: -11.12649917602539
    10. '=int' → logprob: -11.12649917602539

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017356324242427945
    2. ',input' → logprob: -6.376735687255859
    3. '(' → logprob: -10.62673568725586
    4. ' ,' → logprob: -12.62673568725586
    5. '(),' → logprob: -13.00173568725586
    6. '(input' → logprob: -13.87673568725586
    7. 'input' → logprob: -14.62673568725586
    8. '`,' → logprob: -14.75173568725586
    9. ')' → logprob: -14.87673568725586
    10. '，' → logprob: -15.12673568725586

Token 28: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16027681529521942
    2. ' input' → logprob: -1.9102767705917358
    3. ')' → logprob: -10.035276412963867
    4. ' ' → logprob: -13.160276412963867
    5. '	input' → logprob: -13.660276412963867
    6. '<input' → logprob: -13.910276412963867
    7. ',input' → logprob: -13.910276412963867
    8. '=input' → logprob: -14.285276412963867
    9. '_input' → logprob: -14.410276412963867
    10. '(input' → logprob: -14.535276412963867

Token 29: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4021237802808173e-05
    2. '()' → logprob: -11.750014305114746
    3. '.' → logprob: -12.875014305114746
    4. ' ().' → logprob: -13.500014305114746
    5. '.readline' → logprob: -14.000014305114746
    6. ')' → logprob: -15.125014305114746
    7. '(' → logprob: -15.375014305114746
    8. ' .' → logprob: -15.500014305114746
    9. '().__' → logprob: -15.625014305114746
    10. '('').' → logprob: -16.12501335144043

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. 'strip' → logprob: -14.250000953674316
    3. 'rstrip' → logprob: -14.625000953674316
    4. '(split' → logprob: -16.500001907348633
    5. ' split' → logprob: -16.875001907348633
    6. 'spl' → logprob: -18.375001907348633
    7. '_split' → logprob: -19.250001907348633
    8. 'plit' → logprob: -19.750001907348633
    9. ')' → logprob: -19.750001907348633
    10. '.split' → logprob: -20.875001907348633

Token 31: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5378248691558838
    2. '())' → logprob: -1.0378248691558838
    3. '()' → logprob: -2.787824869155884
    4. '))' → logprob: -8.662824630737305
    5. '()))' → logprob: -11.037824630737305
    6. '(' → logprob: -12.287824630737305
    7. '`)' → logprob: -13.287824630737305
    8. '())
' → logprob: -13.412824630737305
    9. ')")' → logprob: -14.037824630737305
    10. '().' → logprob: -14.287824630737305

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08291862159967422
    2. '    
' → logprob: -3.332918643951416
    3. ')' → logprob: -4.457918643951416
    4. '<|end|>' → logprob: -4.832918643951416
    5. 'R' → logprob: -4.957918643951416
    6. '    ' → logprob: -5.832918643951416
    7. '       ' → logprob: -6.332918643951416
    8. ' ' → logprob: -6.582918643951416
    9. '\n' → logprob: -6.582918643951416
    10. '\' → logprob: -6.707918643951416

Token 33: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.08612684160470963
    2. '   ' → logprob: -3.0861268043518066
    3. ' R' → logprob: -3.3361268043518066
    4. '<|end|>' → logprob: -8.086127281188965
    5. '\t' → logprob: -8.211127281188965
    6. 'v' → logprob: -8.961127281188965
    7. '	R' → logprob: -9.211127281188965
    8. '    ' → logprob: -9.336127281188965
    9. ' ' → logprob: -9.586127281188965
    10. '\' → logprob: -9.961127281188965

Token 34: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10144014656543732
    2. '.' → logprob: -2.351440191268921
    3. '.app' → logprob: -7.101439952850342
    4. '.ap' → logprob: -8.1014404296875
    5. '​.' → logprob: -9.8514404296875
    6. '.p' → logprob: -11.2264404296875
    7. ' .' → logprob: -11.6014404296875
    8. '.Append' → logprob: -11.9764404296875
    9. '.push' → logprob: -12.1014404296875
    10. '.a' → logprob: -12.2264404296875

Token 35: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.023371728137135506
    2. '(' → logprob: -3.773371696472168
    3. '(v' → logprob: -9.023371696472168
    4. '([' → logprob: -12.648371696472168
    5. '(
' → logprob: -13.898371696472168
    6. '(value' → logprob: -15.273371696472168
    7. '(None' → logprob: -15.898371696472168
    8. '(('' → logprob: -16.023372650146484
    9. ' (' → logprob: -16.398372650146484
    10. '()' → logprob: -16.773372650146484

Token 36: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.512236498361744e-07
    2. ' v' → logprob: -15.250000953674316
    3. 'w' → logprob: -15.500000953674316
    4. ')v' → logprob: -18.5
    5. '   ' → logprob: -19.5
    6. '	v' → logprob: -20.0
    7. ',v' → logprob: -21.5
    8. '?v' → logprob: -21.875
    9. '(v' → logprob: -21.875
    10. 'vi' → logprob: -22.0

Token 37: '/w' (ID: 10407)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -6.396757089532912e-05
    2. ',w' → logprob: -10.2500638961792
    3. ' ,' → logprob: -10.5000638961792
    4. ')' → logprob: -15.1250638961792
    5. ',
' → logprob: -15.3750638961792
    6. ',v' → logprob: -16.375064849853516
    7. ',)' → logprob: -16.375064849853516
    8. 'w' → logprob: -16.500064849853516
    9. ',

' → logprob: -17.000064849853516
    10. '‌,' → logprob: -17.000064849853516

Token 38: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.43057167530059814
    2. ')' → logprob: -1.0555716753005981
    3. ',' → logprob: -6.555571556091309
    4. '),' → logprob: -8.555571556091309
    5. ')))' → logprob: -8.680571556091309
    6. ' ))' → logprob: -10.430571556091309
    7. ''))' → logprob: -11.305571556091309
    8. ')**' → logprob: -11.805571556091309
    9. ' )' → logprob: -12.680571556091309
    10. ')*' → logprob: -12.805571556091309

Token 39: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.370859295129776
    2. 'w' → logprob: -1.6208592653274536
    3. ' v' → logprob: -2.620859384536743
    4. ' w' → logprob: -3.245859384536743
    5. 'i' → logprob: -8.370859146118164
    6. ' i' → logprob: -9.245859146118164
    7. ')' → logprob: -9.745859146118164
    8. ')v' → logprob: -10.870859146118164
    9. '))' → logprob: -11.370859146118164
    10. ' ' → logprob: -11.870859146118164

Token 40: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.15775279700756073
    2. ',' → logprob: -2.407752752304077
    3. ')' → logprob: -2.907752752304077
    4. ' ))' → logprob: -7.032752990722656
    5. ' ,' → logprob: -8.907752990722656
    6. '),' → logprob: -9.782752990722656
    7. ' ' → logprob: -9.907752990722656
    8. ')))' → logprob: -9.907752990722656
    9. ' )' → logprob: -10.032752990722656
    10. '))
' → logprob: -11.282752990722656

Token 41: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.16023336350917816
    2. ' w' → logprob: -1.9102333784103394
    3. ')' → logprob: -12.410233497619629
    4. '   ' → logprob: -13.660233497619629
    5. ' ' → logprob: -13.785233497619629
    6. ' ' → logprob: -14.410233497619629
    7. 'W' → logprob: -14.785233497619629
    8. 'v' → logprob: -15.347733497619629
    9. ' )' → logprob: -15.535233497619629
    10. '    ' → logprob: -15.847733497619629

Token 42: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12693335115909576
    2. '))' → logprob: -2.1269333362579346
    3. ')
' → logprob: -13.001933097839355
    4. ')))' → logprob: -13.376933097839355
    5. '),' → logprob: -14.126933097839355
    6. '))
' → logprob: -15.126933097839355
    7. ' )' → logprob: -16.001934051513672
    8. ')`' → logprob: -17.001934051513672
    9. ')}' → logprob: -17.126934051513672
    10. ' ))' → logprob: -17.376934051513672

Token 43: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.06769944727420807
    2. '\n' → logprob: -3.817699432373047
    3. '.sort' → logprob: -4.317699432373047
    4. '```' → logprob: -4.942699432373047
    5. ')' → logprob: -5.067699432373047
    6. '.' → logprob: -5.567699432373047
    7. '
' → logprob: -5.692699432373047
    8. '*' → logprob: -6.317699432373047
    9. ')
' → logprob: -6.692699432373047
    10. ' R' → logprob: -7.067699432373047

Token 44: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1351061761379242
    2. '[' → logprob: -2.260106086730957
    3. '.sort' → logprob: -3.885106086730957
    4. '<|end|>' → logprob: -7.760106086730957
    5. '```' → logprob: -8.010106086730957
    6. ')' → logprob: -8.635106086730957
    7. '[
' → logprob: -9.760106086730957
    8. 'sort' → logprob: -10.135106086730957
    9. '
' → logprob: -10.510106086730957
    10. '#' → logprob: -10.635106086730957

Token 45: '(reverse' (ID: 110806)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6783878803253174
    2. '()' → logprob: -1.3033878803253174
    3. '(reverse' → logprob: -1.5533878803253174
    4. '(key' → logprob: -4.803387641906738
    5. 'reverse' → logprob: -7.303387641906738
    6. '((' → logprob: -9.053387641906738
    7. '(()' → logprob: -9.178387641906738
    8. '(re' → logprob: -10.053387641906738
    9. '```' → logprob: -10.178387641906738
    10. 'key' → logprob: -10.303387641906738

Token 46: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04535133019089699
    2. '=True' → logprob: -3.170351266860962
    3. '))' → logprob: -7.420351505279541
    4. ',' → logprob: -7.670351505279541
    5. '(True' → logprob: -8.045351028442383
    6. '(' → logprob: -8.295351028442383
    7. '=' → logprob: -8.795351028442383
    8. '())' → logprob: -9.045351028442383
    9. ',)' → logprob: -9.045351028442383
    10. '`)' → logprob: -9.170351028442383

Token 47: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -5.621933451038785e-05
    2. ' True' → logprob: -10.000056266784668
    3. ')' → logprob: -11.875056266784668
    4. '(True' → logprob: -12.750056266784668
    5. '=True' → logprob: -14.375056266784668
    6. '1' → logprob: -15.250056266784668
    7. 'Tr' → logprob: -18.37505531311035
    8. 'true' → logprob: -18.37505531311035
    9. 'TRUE' → logprob: -18.37505531311035
    10. 'T' → logprob: -19.00005531311035

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. '))' → logprob: -12.500004768371582
    3. ' )' → logprob: -14.250004768371582
    4. ',' → logprob: -15.625004768371582
    5. ')
' → logprob: -16.3750057220459
    6. '),' → logprob: -16.6250057220459
    7. '[' → logprob: -17.2500057220459
    8. '`)' → logprob: -17.5000057220459
    9. '）' → logprob: -17.6250057220459
    10. ')`' → logprob: -17.7500057220459

Token 49: 'ans' (ID: 616)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7780721187591553
    2. 'total' → logprob: -1.7780721187591553
    3. 'ans' → logprob: -1.9030721187591553
    4. 'result' → logprob: -2.1530721187591553
    5. 'value' → logprob: -3.9030721187591553
    6. 'answer' → logprob: -3.9030721187591553
    7. 'ret' → logprob: -4.153072357177734
    8. 'v' → logprob: -4.778072357177734
    9. 'amount' → logprob: -5.028072357177734
    10. 'weight' → logprob: -5.028072357177734

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03730950504541397
    2. ' +=' → logprob: -3.787309408187866
    3. '=' → logprob: -4.287309646606445
    4. '+=' → logprob: -9.662309646606445
    5. '_' → logprob: -9.912309646606445
    6. 'space' → logprob: -10.162309646606445
    7. '_space' → logprob: -11.412309646606445
    8. ' .=' → logprob: -11.787309646606445
    9. ' |=' → logprob: -11.912309646606445
    10. ' =)' → logprob: -12.287309646606445

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -16.627185821533203
    4. '.' → logprob: -17.314685821533203
    5. '  ' → logprob: -17.377185821533203
    6. 'float' → logprob: -17.752185821533203
    7. ' ' → logprob: -17.814685821533203
    8. '`' → logprob: -18.689685821533203
    9. 'int' → logprob: -18.877185821533203
    10. '1' → logprob: -19.127185821533203

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. 'float' → logprob: -15.250021934509277
    4. '.' → logprob: -16.37502098083496
    5. '   ' → logprob: -17.75002098083496
    6. '1' → logprob: -18.56252098083496
    7. 'int' → logprob: -18.75002098083496
    8. 'sum' → logprob: -18.81252098083496
    9. '  ' → logprob: -18.87502098083496
    10. '[' → logprob: -19.50002098083496

Token 53: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03795919939875603
    2. ' for' → logprob: -3.537959098815918
    3. '
' → logprob: -5.412959098815918
    4. '\n' → logprob: -6.037959098815918
    5. '<|end|>' → logprob: -7.162959098815918
    6. ',' → logprob: -8.912959098815918
    7. '\' → logprob: -9.037959098815918
    8. '```' → logprob: -9.412959098815918
    9. '.' → logprob: -10.162959098815918
    10. '' → logprob: -10.287959098815918

Token 54: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019327638670802116
    2. 'W' → logprob: -4.644327640533447
    3. '```' → logprob: -5.894327640533447
    4. ' for' → logprob: -6.019327640533447
    5. 'capacity' → logprob: -6.644327640533447
    6. 'remaining' → logprob: -7.644327640533447
    7. 'w' → logprob: -8.019327163696289
    8. '`' → logprob: -8.144327163696289
    9. '\n' → logprob: -8.394327163696289
    10. 'weight' → logprob: -8.644327163696289

Token 55: ' _,' (ID: 18042)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.46955257654190063
    2. ' i' → logprob: -1.3445525169372559
    3. 'v' → logprob: -2.594552516937256
    4. 'i' → logprob: -3.844552516937256
    5. ' w' → logprob: -4.844552516937256
    6. ' value' → logprob: -5.969552516937256
    7. 'w' → logprob: -6.594552516937256
    8. 'value' → logprob: -6.594552516937256
    9. ' _' → logprob: -6.969552516937256
    10. ' ' → logprob: -6.969552516937256

Token 56: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0012026121839880943
    2. ' v' → logprob: -6.751202583312988
    3. 'value' → logprob: -11.126202583312988
    4. 'vi' → logprob: -11.751202583312988
    5. ' ' → logprob: -13.376202583312988
    6. 'val' → logprob: -13.501202583312988
    7. 'V' → logprob: -13.626202583312988
    8. '_v' → logprob: -13.876202583312988
    9. 'vj' → logprob: -13.876202583312988
    10. '   ' → logprob: -14.001202583312988

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007905708043836057
    2. 'w' → logprob: -7.500790596008301
    3. ',w' → logprob: -9.1257905960083
    4. ' ,' → logprob: -9.2507905960083
    5. '_,' → logprob: -10.6257905960083
    6. '```' → logprob: -13.2507905960083
    7. ' w' → logprob: -13.3757905960083
    8. 's' → logprob: -14.0007905960083
    9. '_w' → logprob: -14.5007905960083
    10. '<|end|>' → logprob: -14.7507905960083

Token 58: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5232804417610168
    2. ' w' → logprob: -0.8982804417610168
    3. ' ' → logprob: -9.523280143737793
    4. 'W' → logprob: -10.148280143737793
    5. ' W' → logprob: -11.148280143737793
    6. '   ' → logprob: -11.773280143737793
    7. '	w' → logprob: -11.773280143737793
    8. '  ' → logprob: -12.148280143737793
    9. '```' → logprob: -13.148280143737793
    10. '_w' → logprob: -13.773280143737793

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22557370364665985
    2. 'in' → logprob: -1.6005736589431763
    3. 'w' → logprob: -9.725573539733887
    4. ',' → logprob: -9.975573539733887
    5. 's' → logprob: -11.100573539733887
    6. ' ' → logprob: -12.225573539733887
    7. '  ' → logprob: -12.600573539733887
    8. 'In' → logprob: -12.725573539733887
    9. '.' → logprob: -12.850573539733887
    10. '	in' → logprob: -12.850573539733887

Token 60: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.011051236651837826
    2. ' R' → logprob: -4.511051177978516
    3. ' ' → logprob: -13.011051177978516
    4. '   ' → logprob: -14.886051177978516
    5. '(R' → logprob: -16.011051177978516
    6. '	R' → logprob: -16.261051177978516
    7. '  ' → logprob: -16.261051177978516
    8. 'for' → logprob: -16.636051177978516
    9. '_R' → logprob: -16.636051177978516
    10. ' ' → logprob: -16.698551177978516

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.7954958821064793e-05
    2. ':
' → logprob: -11.125018119812012
    3. ',' → logprob: -14.125018119812012
    4. ':**' → logprob: -14.625018119812012
    5. '<|end|>' → logprob: -15.000018119812012
    6. '):' → logprob: -15.125018119812012
    7. ' :' → logprob: -15.250018119812012
    8. 'if' → logprob: -15.375018119812012
    9. ':

' → logprob: -15.875018119812012
    10. '   ' → logprob: -15.875018119812012

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07112222164869308
    2. ' if' → logprob: -2.821122169494629
    3. '<|end|>' → logprob: -4.946122169494629
    4. 'if' → logprob: -7.696122169494629
    5. '```' → logprob: -7.946122169494629
    6. ' ' → logprob: -8.196122169494629
    7. ' w' → logprob: -8.571122169494629
    8. '    ' → logprob: -9.071122169494629
    9. ' W' → logprob: -9.321122169494629
    10. '<|end|>' → logprob: -9.321122169494629

Token 63: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19818800687789917
    2. 'if' → logprob: -1.823188066482544
    3. '   ' → logprob: -4.198187828063965
    4. ' t' → logprob: -7.198187828063965
    5. '    ' → logprob: -7.823187828063965
    6. 'w' → logprob: -8.073187828063965
    7. ' w' → logprob: -8.323187828063965
    8. ' ' → logprob: -8.823187828063965
    9. '```' → logprob: -9.073187828063965
    10. ' c' → logprob: -9.198187828063965

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3927425444126129
    2. 'ap' → logprob: -2.01774263381958
    3. '=' → logprob: -2.26774263381958
    4. 'ont' → logprob: -3.26774263381958
    5. 'ount' → logprob: -4.14274263381958
    6. ' ' → logprob: -4.39274263381958
    7. ',' → logprob: -5.51774263381958
    8. 'urrent' → logprob: -5.89274263381958
    9. ' +=' → logprob: -6.14274263381958
    10. 'ounter' → logprob: -6.76774263381958

Token 65: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2434602826833725
    2. 'W' → logprob: -1.8684602975845337
    3. ' min' → logprob: -2.993460178375244
    4. ' W' → logprob: -4.493460178375244
    5. '   ' → logprob: -8.368460655212402
    6. 'w' → logprob: -9.243460655212402
    7. 'max' → logprob: -10.868460655212402
    8. '0' → logprob: -11.243460655212402
    9. ' ' → logprob: -11.743460655212402
    10. '(min' → logprob: -11.868460655212402

Token 66: '(w' (ID: 7420)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0025506927631795406
    2. '(w' → logprob: -6.6275506019592285
    3. '(' → logprob: -6.7525506019592285
    4. 'W' → logprob: -10.502551078796387
    5. '(N' → logprob: -11.502551078796387
    6. '(K' → logprob: -12.377551078796387
    7. '(c' → logprob: -12.752551078796387
    8. '()' → logprob: -13.627551078796387
    9. '(C' → logprob: -13.752551078796387
    10. '(Q' → logprob: -13.877551078796387

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0064261602237820625
    2. ' ,' → logprob: -5.7564263343811035
    3. ',W' → logprob: -5.7564263343811035
    4. ' W' → logprob: -9.756425857543945
    5. 'W' → logprob: -10.881425857543945
    6. ')' → logprob: -14.131425857543945
    7. ' ' → logprob: -14.256425857543945
    8. ',w' → logprob: -14.256425857543945
    9. ',N' → logprob: -14.506425857543945
    10. '   ' → logprob: -14.881425857543945

Token 68: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.020599577575922012
    2. ' W' → logprob: -3.895599603652954
    3. '   ' → logprob: -10.270599365234375
    4. '	W' → logprob: -11.770599365234375
    5. ')' → logprob: -11.895599365234375
    6. '  ' → logprob: -12.645599365234375
    7. ' ' → logprob: -12.770599365234375
    8. '    ' → logprob: -14.895599365234375
    9. '<W' → logprob: -15.333099365234375
    10. '_W' → logprob: -15.520599365234375

Token 69: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01429008785635233
    2. ')
' → logprob: -4.264289855957031
    3. ' )' → logprob: -9.139289855957031
    4. ')
' → logprob: -11.639289855957031
    5. ' )
' → logprob: -12.014289855957031
    6. ')

' → logprob: -12.639289855957031
    7. '   ' → logprob: -15.389289855957031
    8. ')`' → logprob: -15.389289855957031
    9. '))' → logprob: -16.13928985595703
    10. '),' → logprob: -16.13928985595703

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026255134493112564
    2. ' ans' → logprob: -4.651255130767822
    3. '<|end|>' → logprob: -4.776255130767822
    4. '
' → logprob: -6.026255130767822
    5. ' W' → logprob: -6.651255130767822
    6. '	ans' → logprob: -7.151255130767822
    7. ')' → logprob: -7.276255130767822
    8. '    
' → logprob: -7.401255130767822
    9. '  ' → logprob: -7.401255130767822
    10. 'W' → logprob: -8.15125560760498

Token 71: ' W' (ID: 486)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.07242102175951004
    2. ' W' → logprob: -3.072421073913574
    3. 'W' (adapté à ' W') → logprob: -4.447421073913574
    4. '   ' → logprob: -4.947421073913574
    5. 'ans' → logprob: -5.447421073913574
    6. '	ans' → logprob: -7.947421073913574
    7. '(ans' → logprob: -10.572421073913574
    8. '```' → logprob: -10.822421073913574
    9. '_ans' → logprob: -12.072421073913574
    10. ' ' → logprob: -12.572421073913574

Token 72: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5531638860702515
    2. '-' → logprob: -1.1781638860702515
    3. '-=' → logprob: -2.178164005279541
    4. ' -' → logprob: -5.803164005279541
    5. '=' → logprob: -7.678164005279541
    6. ' ' → logprob: -9.303163528442383
    7. '<|end|>' → logprob: -9.428163528442383
    8. '   ' → logprob: -10.303163528442383
    9. '    ' → logprob: -10.553163528442383
    10. ' =' → logprob: -10.553163528442383

Token 73: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003183420980349183
    2. ' c' → logprob: -5.753183364868164
    3. '   ' → logprob: -12.878183364868164
    4. '	c' → logprob: -13.003183364868164
    5. '<|end|>' → logprob: -14.128183364868164
    6. ')c' → logprob: -16.503183364868164
    7. '```' → logprob: -18.003183364868164
    8. '<|end|>' → logprob: -18.128183364868164
    9. ' ' → logprob: -18.253183364868164
    10. '  ' → logprob: -18.378183364868164

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08216332644224167
    2. '*' → logprob: -3.7071633338928223
    3. '   ' → logprob: -3.7071633338928223
    4. '<|end|>' → logprob: -4.457163333892822
    5. '*v' → logprob: -4.957163333892822
    6. ' *' → logprob: -5.082163333892822
    7. 'ans' → logprob: -6.332163333892822
    8. '*c' → logprob: -7.707163333892822
    9. '    
' → logprob: -7.832163333892822
    10. 'v' → logprob: -7.957163333892822

Token 75: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.32773879170417786
    2. '   ' → logprob: -1.8277387619018555
    3. ' ans' → logprob: -3.0777387619018555
    4. '<|end|>' → logprob: -3.2027387619018555
    5. '
' → logprob: -3.8277387619018555
    6. '	ans' → logprob: -5.2027387619018555
    7. '(ans' → logprob: -6.2027387619018555
    8. '<|end|>' → logprob: -7.8277387619018555
    9. '```' → logprob: -7.9527387619018555
    10. ',' → logprob: -8.202738761901855

Token 76: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00017112065688706934
    2. ' ans' → logprob: -8.750170707702637
    3. '	ans' → logprob: -12.250170707702637
    4. '   ' → logprob: -12.500170707702637
    5. '(ans' → logprob: -12.750170707702637
    6. '_ans' → logprob: -14.625170707702637
    7. 'c' → logprob: -15.250170707702637
    8. 'answer' → logprob: -16.000171661376953
    9. 'Ans' → logprob: -16.625171661376953
    10. '    
' → logprob: -16.875171661376953

Token 77: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.48560869693756104
    2. '+=' → logprob: -0.985608696937561
    3. '+' → logprob: -4.4856085777282715
    4. ' +' → logprob: -9.61060905456543
    5. '+=(' → logprob: -9.98560905456543
    6. '<|end|>' → logprob: -10.98560905456543
    7. '+='' → logprob: -10.98560905456543
    8. ']+=' → logprob: -11.48560905456543
    9. '+="' → logprob: -11.48560905456543
    10. '=' → logprob: -12.23560905456543

Token 78: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5174840688705444
    2. '_' → logprob: -1.0174840688705444
    3. ' c' → logprob: -4.017484188079834
    4. 'v' → logprob: -4.767484188079834
    5. ' _' → logprob: -4.767484188079834
    6. '_c' → logprob: -5.142484188079834
    7. ' v' → logprob: -7.017484188079834
    8. '_v' → logprob: -8.267483711242676
    9. '_)' → logprob: -9.142483711242676
    10. ' ' → logprob: -9.267483711242676

Token 79: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14530599117279053
    2. ' *' → logprob: -2.02030611038208
    3. '*v' → logprob: -6.02030611038208
    4. '<|end|>' → logprob: -9.145305633544922
    5. '/' → logprob: -10.895305633544922
    6. '**' → logprob: -11.020305633544922
    7. '*object' → logprob: -11.145305633544922
    8. '*w' → logprob: -11.520305633544922
    9. '*(' → logprob: -12.020305633544922
    10. '*)' → logprob: -12.395305633544922

Token 80: ' v' (ID: 323)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48272228240966797
    2. '/v' → logprob: -1.732722282409668
    3. '_/' → logprob: -2.107722282409668
    4. 'v' → logprob: -2.732722282409668
    5. '/' → logprob: -4.482722282409668
    6. ' _' → logprob: -5.857722282409668
    7. '_v' → logprob: -6.732722282409668
    8. '/_' → logprob: -7.107722282409668
    9. '_*' → logprob: -7.482722282409668
    10. '_)' → logprob: -7.482722282409668

Token 81: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.13862837851047516
    2. '/w' → logprob: -2.1386284828186035
    3. ' /' → logprob: -4.8886284828186035
    4. '/
' → logprob: -6.0136284828186035
    5. '/W' → logprob: -6.8886284828186035
    6. '<|end|>' → logprob: -8.138628005981445
    7. ' /
' → logprob: -9.263628005981445
    8. '/
/' → logprob: -9.763628005981445
    9. 'w' → logprob: -9.888628005981445
    10. '/...' → logprob: -11.013628005981445

Token 82: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -8.518582762917504e-05
    2. ' w' → logprob: -9.37508487701416
    3. '_w' → logprob: -14.87508487701416
    4. ' ' → logprob: -17.250085830688477
    5. '_' → logprob: -18.250085830688477
    6. '	w' → logprob: -18.250085830688477
    7. 'W' → logprob: -18.375085830688477
    8. '  ' → logprob: -19.750085830688477
    9. '   ' → logprob: -20.000085830688477
    10. 'c' → logprob: -20.500085830688477

Token 83: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3186423182487488
    2. '
' → logprob: -1.3186423778533936
    3. '\n' → logprob: -6.6936421394348145
    4. 'if' → logprob: -6.8186421394348145
    5. ')' → logprob: -7.4436421394348145
    6. ' print' → logprob: -7.6936421394348145
    7. '    
' → logprob: -7.8186421394348145
    8. '  
' → logprob: -8.068642616271973
    9. '
' → logprob: -8.443642616271973
    10. '<|end|>' → logprob: -8.568642616271973

Token 84: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005351595464162529
    2. '
' → logprob: -8.750535011291504
    3. ' print' → logprob: -9.125535011291504
    4. 'p' → logprob: -9.500535011291504
    5. ')' → logprob: -9.875535011291504
    6. '\n' → logprob: -9.875535011291504
    7. 'if' → logprob: -10.000535011291504
    8. '```' → logprob: -11.875535011291504
    9. 'pr' → logprob: -12.625535011291504
    10. '\' → logprob: -12.625535011291504

Token 85: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16027145087718964
    2. '(ans' → logprob: -1.910271406173706
    3. '("("' → logprob: -11.535271644592285
    4. '(`' → logprob: -11.785271644592285
    5. ' (' → logprob: -11.785271644592285
    6. '('' → logprob: -12.160271644592285
    7. '()' → logprob: -12.910271644592285
    8. '(abs' → logprob: -13.410271644592285
    9. '(

' → logprob: -13.535271644592285
    10. '(answer' → logprob: -13.535271644592285

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -12.625003814697266
    3. '))' → logprob: -17.125003814697266
    4. ')
' → logprob: -17.625003814697266
    5. ')`' → logprob: -17.750003814697266
    6. '(' → logprob: -18.375003814697266
    7. ')**' → logprob: -19.125003814697266
    8. '),' → logprob: -19.250003814697266
    9. ')#' → logprob: -19.250003814697266
    10. '+' → logprob: -19.375003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 84
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 76
Précision stricte (1ère position): 36.90%
Précision adaptée (1ère position): 39.29%
Précision (top 10): 90.48%
================================================================================
