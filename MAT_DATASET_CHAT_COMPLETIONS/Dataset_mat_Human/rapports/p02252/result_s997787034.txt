================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline
p=[]
n,w=map(int,input().split())
for i in range(n):
	a,b=map(int,input().split())
	p.append([a/b,a,b])
p.sort(key=lambda x:-x[0])
ans=0
i=0
while w>0 and i<n:
	if w>=p[i][2]:
		ans+=p[i][1]
	else:
		ans+=p[i][1]*(w/p[i][2])
		break
	w-=p[i][2]
	i+=1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0056168390437960625
    2. '.' → logprob: -5.255616664886475
    3. ' (' → logprob: -9.255617141723633
    4. '(
' → logprob: -9.380617141723633
    5. ')' → logprob: -9.755617141723633
    6. '()' → logprob: -10.005617141723633
    7. '[' → logprob: -11.005617141723633
    8. '('' → logprob: -11.130617141723633
    9. ' ' → logprob: -11.630617141723633
    10. '=' → logprob: -11.755617141723633

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0010767532512545586
    2. '[' → logprob: -7.626076698303223
    3. ' .' → logprob: -8.251076698303223
    4. '.readline' → logprob: -8.501076698303223
    5. '.
' → logprob: -10.876076698303223
    6. '.get' → logprob: -11.251076698303223
    7. '.[' → logprob: -11.251076698303223
    8. '.setdefault' → logprob: -11.501076698303223
    9. ''.' → logprob: -12.126076698303223
    10. '"."' → logprob: -12.251076698303223

Token 6: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5263932943344116
    2. '.readline' → logprob: -0.9013932943344116
    3. '.read' → logprob: -5.776393413543701
    4. 'read' → logprob: -10.276392936706543
    5. '.Read' → logprob: -10.526392936706543
    6. ' readline' → logprob: -10.776392936706543
    7. '```' → logprob: -10.901392936706543
    8. '<|end|>' → logprob: -11.401392936706543
    9. '.

' → logprob: -11.526392936706543
    10. '.readlines' → logprob: -11.651392936706543

Token 7: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2264707088470459
    2. '(' → logprob: -1.601470708847046
    3. '().' → logprob: -7.976470947265625
    4. '(
' → logprob: -8.101470947265625
    5. '()
' → logprob: -8.476470947265625
    6. ')' → logprob: -9.976470947265625
    7. ' ()' → logprob: -10.351470947265625
    8. '()\' → logprob: -10.726470947265625
    9. '(

' → logprob: -11.101470947265625
    10. '\(' → logprob: -11.476470947265625

Token 8: 'p' (ID: 79)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.062420688569545746
    2. '(' → logprob: -2.812420606613159
    3. '()
' → logprob: -8.562420845031738
    4. '().' → logprob: -9.187420845031738
    5. '(
' → logprob: -9.562420845031738
    6. '()

' → logprob: -10.687420845031738
    7. '()\' → logprob: -10.812420845031738
    8. ')' → logprob: -11.312420845031738
    9. '())' → logprob: -12.187420845031738
    10. ' ()' → logprob: -12.437420845031738

Token 9: '=[]
' (ID: 63466)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0012973772827535868
    2. 'op' → logprob: -8.501296997070312
    3. 'ut' → logprob: -9.001296997070312
    4. 'ush' → logprob: -9.376296997070312
    5. 'ass' → logprob: -9.501296997070312
    6. '=' → logprob: -9.626296997070312
    7. ' =' → logprob: -9.751296997070312
    8. 'assword' → logprob: -9.876296997070312
    9. 'print' → logprob: -9.876296997070312
    10. 'u' → logprob: -10.001296997070312

Token 10: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10340728610754013
    2. 'for' → logprob: -2.728407382965088
    3. '(' → logprob: -3.853407382965088
    4. 'a' → logprob: -6.103407382965088
    5. 't' → logprob: -6.228407382965088
    6. 'd' → logprob: -6.353407382965088
    7. '(n' → logprob: -6.478407382965088
    8. 'm' → logprob: -6.978407382965088
    9. 's' → logprob: -7.603407382965088
    10. '.' → logprob: -7.728407382965088

Token 11: ',w' (ID: 49598)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0451478585600853
    2. ' =' → logprob: -3.1701478958129883
    3. '=int' → logprob: -6.670147895812988
    4. ',' → logprob: -7.170147895812988
    5. '=input' → logprob: -10.545147895812988
    6. ' ' → logprob: -10.795147895812988
    7. '>' → logprob: -11.545147895812988
    8. '=

' → logprob: -11.545147895812988
    9. ')' → logprob: -11.670147895812988
    10. ' ,' → logprob: -12.670147895812988

Token 12: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00927573349326849
    2. ' =' → logprob: -5.134275913238525
    3. ',' → logprob: -5.759275913238525
    4. '=input' → logprob: -9.634275436401367
    5. '=int' → logprob: -9.634275436401367
    6. '=

' → logprob: -10.634275436401367
    7. '=
' → logprob: -11.509275436401367
    8. ' ' → logprob: -11.884275436401367
    9. ' ,' → logprob: -13.134275436401367
    10. ',p' → logprob: -13.259275436401367

Token 13: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10031028836965561
    2. ' map' → logprob: -2.3503103256225586
    3. 'int' → logprob: -9.850310325622559
    4. 'list' → logprob: -10.475310325622559
    5. 'input' → logprob: -11.475310325622559
    6. '0' → logprob: -11.850310325622559
    7. ' list' → logprob: -13.475310325622559
    8. '	map' → logprob: -13.600310325622559
    9. ' input' → logprob: -14.475310325622559
    10. ' ' → logprob: -14.600310325622559

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01510953065007925
    2. '(' → logprob: -4.390109539031982
    3. '(str' → logprob: -6.640109539031982
    4. '(lambda' → logprob: -6.890109539031982
    5. '(input' → logprob: -9.140109062194824
    6. 'int' → logprob: -9.265109062194824
    7. '[int' → logprob: -10.265109062194824
    8. '(len' → logprob: -12.015109062194824
    9. '(list' → logprob: -12.140109062194824
    10. '<int' → logprob: -12.140109062194824

Token 15: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43059027194976807
    2. ',input' → logprob: -1.055590271949768
    3. ',int' → logprob: -7.5555901527404785
    4. '(' → logprob: -7.6805901527404785
    5. 'input' → logprob: -8.680590629577637
    6. ',p' → logprob: -8.930590629577637
    7. ',line' → logprob: -9.180590629577637
    8. '(input' → logprob: -9.305590629577637
    9. ',user' → logprob: -9.430590629577637
    10. '(sys' → logprob: -9.930590629577637

Token 16: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006882481975480914
    2. '())' → logprob: -7.375688076019287
    3. '()' → logprob: -9.750688552856445
    4. ')' → logprob: -13.250688552856445
    5. '()))' → logprob: -13.875688552856445
    6. '());' → logprob: -15.375688552856445
    7. '()),' → logprob: -15.875688552856445
    8. ' ().' → logprob: -16.250688552856445
    9. '()));' → logprob: -16.250688552856445
    10. '();)' → logprob: -16.500688552856445

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006976671516895294
    2. 'strip' → logprob: -5.00697660446167
    3. 'rstrip' → logprob: -8.381977081298828
    4. ' split' → logprob: -10.506977081298828
    5. ')' → logprob: -12.631977081298828
    6. '(split' → logprob: -14.006977081298828
    7. ' strip' → logprob: -15.006977081298828
    8. 'spl' → logprob: -15.756977081298828
    9. 'rs' → logprob: -15.881977081298828
    10. '.split' → logprob: -16.381977081298828

Token 18: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04029089957475662
    2. '())' → logprob: -3.2902908325195312
    3. '()' → logprob: -6.165290832519531
    4. '))' → logprob: -9.165290832519531
    5. '`)' → logprob: -11.665290832519531
    6. '),' → logprob: -11.915290832519531
    7. '(' → logprob: -12.040290832519531
    8. ' )' → logprob: -12.415290832519531
    9. ')`' → logprob: -12.665290832519531
    10. '()))' → logprob: -13.665290832519531

Token 19: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5402650237083435
    2. '
' → logprob: -2.4152650833129883
    3. '\n' → logprob: -2.5402650833129883
    4. '(' → logprob: -3.2902650833129883
    5. 'for' → logprob: -3.4152650833129883
    6. '  
' → logprob: -3.5402650833129883
    7. ' 
' → logprob: -3.6652650833129883
    8. '()' → logprob: -3.9152650833129883
    9. '\' → logprob: -4.165265083312988
    10. '```' → logprob: -4.290265083312988

Token 20: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13425934314727783
    2. ' ' → logprob: -2.7592592239379883
    3. ' _' → logprob: -3.1342592239379883
    4. '_' → logprob: -4.259259223937988
    5. ' range' → logprob: -5.634259223937988
    6. 'i' → logprob: -7.259259223937988
    7. 'range' → logprob: -9.009259223937988
    8. ' p' → logprob: -9.884259223937988
    9. ' ‌' → logprob: -10.134259223937988
    10. ' in' → logprob: -10.509259223937988

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07057304680347443
    2. 'in' → logprob: -2.695573091506958
    3. ' ' → logprob: -7.570572853088379
    4. 'n' → logprob: -10.320572853088379
    5. 'range' → logprob: -10.320572853088379
    6. ' n' → logprob: -10.945572853088379
    7. '  ' → logprob: -11.320572853088379
    8. ' range' → logprob: -11.445572853088379
    9. '	in' → logprob: -12.445572853088379
    10. '_' → logprob: -12.945572853088379

Token 22: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061978891491889954
    2. ' range' → logprob: -2.811978816986084
    3. 'p' → logprob: -11.686979293823242
    4. ' ' → logprob: -13.561979293823242
    5. ' p' → logprob: -14.561979293823242
    6. '	range' → logprob: -15.311979293823242
    7. 'r' → logprob: -15.686979293823242
    8. '  ' → logprob: -15.936979293823242
    9. '(range' → logprob: -16.186979293823242
    10. 'rang' → logprob: -16.436979293823242

Token 23: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038150619715452194
    2. '(n' → logprob: -3.2881505489349365
    3. ' (' → logprob: -9.163150787353516
    4. '(
' → logprob: -13.038150787353516
    5. '(w' → logprob: -14.538150787353516
    6. '(range' → logprob: -14.788150787353516
    7. '(

' → logprob: -15.163150787353516
    8. ' ' → logprob: -15.163150787353516
    9. '(len' → logprob: -15.538150787353516
    10. '（' → logprob: -16.538150787353516

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0049194470047950745
    2. ')' → logprob: -5.379919528961182
    3. ' ):' → logprob: -8.379919052124023
    4. '+' → logprob: -10.129919052124023
    5. '):
' → logprob: -11.004919052124023
    6. ':' → logprob: -12.004919052124023
    7. ',' → logprob: -13.254919052124023
    8. ' ' → logprob: -13.879919052124023
    9. '),' → logprob: -14.754919052124023
    10. ' )' → logprob: -14.754919052124023

Token 25: '	a' (ID: 24292)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.012224121019244194
    2. 'p' → logprob: -4.762224197387695
    3. ' ' → logprob: -6.137224197387695
    4. ' s' → logprob: -8.137224197387695
    5. ' 
' → logprob: -8.387224197387695
    6. '   ' → logprob: -8.512224197387695
    7. ' a' → logprob: -9.012224197387695
    8. ' data' → logprob: -9.137224197387695
    9. 'a' → logprob: -9.637224197387695
    10. '    
' → logprob: -10.012224197387695

Token 26: ',b' (ID: 17568)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.3887878954410553
    2. '.append' → logprob: -2.2637879848480225
    3. ',b' → logprob: -2.7637879848480225
    4. 'p' → logprob: -3.0137879848480225
    5. 'pp' → logprob: -3.2637879848480225
    6. '=' → logprob: -3.5137879848480225
    7. ',' → logprob: -4.388787746429443
    8. ' =' → logprob: -4.513787746429443
    9. '.' → logprob: -6.263787746429443
    10. ',a' → logprob: -6.263787746429443

Token 27: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00047809764510020614
    2. ' =' → logprob: -8.00047779083252
    3. '=input' → logprob: -9.00047779083252
    4. '=list' → logprob: -11.62547779083252
    5. '=int' → logprob: -12.00047779083252
    6. '=line' → logprob: -13.75047779083252
    7. '=value' → logprob: -14.25047779083252
    8. '=data' → logprob: -15.00047779083252
    9. '=sys' → logprob: -15.12547779083252
    10. '＝' → logprob: -15.50047779083252

Token 28: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.029802095144987106
    2. ' map' → logprob: -3.529802083969116
    3. '	map' → logprob: -9.904802322387695
    4. 'm' → logprob: -14.779802322387695
    5. '(map' → logprob: -14.904802322387695
    6. 'list' → logprob: -14.904802322387695
    7. '.map' → logprob: -16.154802322387695
    8. ' ' → logprob: -16.154802322387695
    9. 'ma' → logprob: -16.654802322387695
    10. ' ' → logprob: -16.654802322387695

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00013619766104966402
    2. '(' → logprob: -9.000136375427246
    3. '[int' → logprob: -12.500136375427246
    4. '(str' → logprob: -12.875136375427246
    5. '<int' → logprob: -13.125136375427246
    6. '(lambda' → logprob: -13.250136375427246
    7. ' (' → logprob: -14.000136375427246
    8. '(input' → logprob: -14.500136375427246
    9. '=int' → logprob: -14.875136375427246
    10. 'int' → logprob: -15.750136375427246

Token 30: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.01425988133996725
    2. ',int' → logprob: -4.6392598152160645
    3. ',' → logprob: -5.5142598152160645
    4. '(input' → logprob: -7.7642598152160645
    5. '(' → logprob: -11.514260292053223
    6. ',float' → logprob: -11.889260292053223
    7. '(int' → logprob: -12.264260292053223
    8. '(),' → logprob: -12.389260292053223
    9. ' ,' → logprob: -13.139260292053223
    10. ',list' → logprob: -13.139260292053223

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -16.125
    3. '()' → logprob: -16.375
    4. ')' → logprob: -17.25
    5. '.split' → logprob: -17.25
    6. ').' → logprob: -17.375
    7. ' ().' → logprob: -17.375
    8. '()).' → logprob: -17.625
    9. '.readline' → logprob: -17.75
    10. '('').' → logprob: -17.875

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -16.25
    3. 'strip' → logprob: -16.5
    4. 'spl' → logprob: -17.125
    5. '.split' → logprob: -18.0
    6. '(split' → logprob: -18.5
    7. 'rstrip' → logprob: -18.5
    8. '_split' → logprob: -20.0
    9. 'plit' → logprob: -20.125
    10. 's' → logprob: -20.125

Token 33: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07804810255765915
    2. '())' → logprob: -2.70304799079895
    3. '()' → logprob: -4.828048229217529
    4. ')
' → logprob: -10.953047752380371
    5. ' )' → logprob: -11.328047752380371
    6. '))' → logprob: -11.328047752380371
    7. '())
' → logprob: -11.578047752380371
    8. '(' → logprob: -12.203047752380371
    9. '`)' → logprob: -12.328047752380371
    10. ')`' → logprob: -13.203047752380371

Token 34: '	p' (ID: 6061)
  Prédit: '	p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	p' → logprob: -0.7151970267295837
    2. 'p' → logprob: -0.8401970267295837
    3. '<|end|>' → logprob: -2.8401970863342285
    4. '
' → logprob: -4.4651970863342285
    5. ' p' → logprob: -6.0901970863342285
    6. ' ' → logprob: -6.4651970863342285
    7. '	if' → logprob: -6.7151970863342285
    8. '	
' → logprob: -6.8401970863342285
    9. ' 
' → logprob: -7.2151970863342285
    10. '   ' → logprob: -7.2151970863342285

Token 35: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.31627145409584045
    2. '.' → logprob: -1.316271424293518
    3. '.ap' → logprob: -6.4412713050842285
    4. '.app' → logprob: -7.4412713050842285
    5. '.p' → logprob: -7.6912713050842285
    6. '​.' → logprob: -9.316271781921387
    7. '.a' → logprob: -9.816271781921387
    8. ' .' → logprob: -10.066271781921387
    9. '.Append' → logprob: -10.441271781921387
    10. '+.' → logprob: -10.566271781921387

Token 36: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0011761783389374614
    2. '(' → logprob: -6.751176357269287
    3. '([' → logprob: -12.751175880432129
    4. '(a' → logprob: -13.251175880432129
    5. '(p' → logprob: -14.876175880432129
    6. '(([' → logprob: -15.751175880432129
    7. '(('' → logprob: -15.876175880432129
    8. '(
' → logprob: -16.001176834106445
    9. ' ((' → logprob: -16.501176834106445
    10. '(tuple' → logprob: -16.501176834106445

Token 37: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000263481488218531
    2. ' a' → logprob: -8.375263214111328
    3. 'b' → logprob: -10.875263214111328
    4. '	a' → logprob: -11.250263214111328
    5. ' ' → logprob: -15.250263214111328
    6. '   ' → logprob: -15.750263214111328
    7. 'i' → logprob: -16.000263214111328
    8. '-a' → logprob: -16.500263214111328
    9. '0' → logprob: -16.625263214111328
    10. '(a' → logprob: -17.000263214111328

Token 38: '/b' (ID: 7611)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.07019173353910446
    2. ',' → logprob: -2.6951916217803955
    3. ' ,' → logprob: -8.320191383361816
    4. ',w' → logprob: -12.945191383361816
    5. ',p' → logprob: -13.195191383361816
    6. '*b' → logprob: -13.445191383361816
    7. '	b' → logprob: -13.570191383361816
    8. 'b' → logprob: -13.820191383361816
    9. '	' → logprob: -14.195191383361816
    10. ',
' → logprob: -14.320191383361816

Token 39: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020684130489826202
    2. ' ,' → logprob: -4.645684242248535
    3. ',i' → logprob: -4.770684242248535
    4. ',a' → logprob: -6.520684242248535
    5. ',n' → logprob: -8.520684242248535
    6. ',p' → logprob: -8.770684242248535
    7. '	' → logprob: -8.895684242248535
    8. '])' → logprob: -9.270684242248535
    9. ',b' → logprob: -9.645684242248535
    10. ',int' → logprob: -9.895684242248535

Token 40: ',b' (ID: 17568)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.10185139626264572
    2. ',' → logprob: -2.726851463317871
    3. ']' → logprob: -4.601851463317871
    4. ',b' → logprob: -4.976851463317871
    5. ')])' → logprob: -5.726851463317871
    6. '[i' → logprob: -5.976851463317871
    7. ',i' → logprob: -6.101851463317871
    8. ']])' → logprob: -6.101851463317871
    9. ')' → logprob: -6.851851463317871
    10. '[' → logprob: -6.851851463317871

Token 41: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0012503541074693203
    2. ')' → logprob: -6.751250267028809
    3. ' ])' → logprob: -10.251250267028809
    4. '])
' → logprob: -10.501250267028809
    5. ')])' → logprob: -11.751250267028809
    6. ']' → logprob: -12.876250267028809
    7. ')]' → logprob: -13.251250267028809
    8. '))' → logprob: -13.626250267028809
    9. '])
' → logprob: -14.251250267028809
    10. ''])' → logprob: -14.751250267028809

Token 42: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.014401241205632687
    2. ' p' → logprob: -5.264401435852051
    3. '.sort' → logprob: -5.514401435852051
    4. '```' → logprob: -5.639401435852051
    5. '\n' → logprob: -7.889401435852051
    6. '
' → logprob: -8.38940143585205
    7. '.p' → logprob: -8.63940143585205
    8. ',p' → logprob: -9.13940143585205
    9. '\' → logprob: -9.26440143585205
    10. '``' → logprob: -9.63940143585205

Token 43: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021177830174565315
    2. '(reverse' → logprob: -4.021177768707275
    3. '(' → logprob: -5.896177768707275
    4. '(key' → logprob: -8.896178245544434
    5. 'reverse' → logprob: -10.146178245544434
    6. '()
' → logprob: -10.146178245544434
    7. '(()' → logprob: -11.771178245544434
    8. '((' → logprob: -12.021178245544434
    9. '(p' → logprob: -12.146178245544434
    10. '())' → logprob: -12.271178245544434

Token 45: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.048590321093797684
    2. '=' → logprob: -3.0485904216766357
    3. '=len' → logprob: -13.798590660095215
    4. '=p' → logprob: -14.173590660095215
    5. '=
' → logprob: -14.798590660095215
    6. '=

' → logprob: -15.423590660095215
    7. '=str' → logprob: -16.2985897064209
    8. 'lambda' → logprob: -16.4235897064209
    9. '=item' → logprob: -16.4235897064209
    10. '=l' → logprob: -16.5485897064209

Token 46: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07904434204101562
    2. ' x' → logprob: -2.5790443420410156
    3. 'p' → logprob: -9.079044342041016
    4. ' p' → logprob: -10.204044342041016
    5. 'a' → logprob: -13.454044342041016
    6. 'e' → logprob: -14.579044342041016
    7. ' a' → logprob: -14.829044342041016
    8. ':x' → logprob: -15.454044342041016
    9. '	x' → logprob: -15.829044342041016
    10. 's' → logprob: -15.829044342041016

Token 47: ':-' (ID: 20118)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021336661651730537
    2. ':x' → logprob: -4.021336555480957
    3. ' :' → logprob: -5.771336555480957
    4. '[' → logprob: -10.521336555480957
    5. ':
' → logprob: -11.021336555480957
    6. 'x' → logprob: -11.396336555480957
    7. ':[' → logprob: -12.646336555480957
    8. ':`' → logprob: -13.771336555480957
    9. ' x' → logprob: -14.146336555480957
    10. ':int' → logprob: -14.271336555480957

Token 48: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006716436706483364
    2. ' x' → logprob: -5.006716251373291
    3. '	x' → logprob: -14.75671672821045
    4. '0' → logprob: -15.38171672821045
    5. '1' → logprob: -15.50671672821045
    6. '(x' → logprob: -15.63171672821045
    7. ')x' → logprob: -17.131715774536133
    8. ' ' → logprob: -18.256715774536133
    9. '[' → logprob: -18.881715774536133
    10. '{x' → logprob: -19.506715774536133

Token 49: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3902033970225602e-05
    2. '0' → logprob: -11.250014305114746
    3. ' [' → logprob: -15.000014305114746
    4. '\[' → logprob: -15.625014305114746
    5. ''[' → logprob: -16.00001335144043
    6. '1' → logprob: -16.37501335144043
    7. ' ' → logprob: -16.37501335144043
    8. '[
' → logprob: -17.50001335144043
    9. '][' → logprob: -17.50001335144043
    10. ')[' → logprob: -17.75001335144043

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.232493564719334e-05
    2. '1' → logprob: -9.875082015991211
    3. '2' → logprob: -10.562582015991211
    4. ' ' → logprob: -13.500082015991211
    5. '[' → logprob: -14.312582015991211
    6. '
' → logprob: -14.687582015991211
    7. '-' → logprob: -15.750082015991211
    8. '۰' → logprob: -15.750082015991211
    9. '

' → logprob: -15.812582015991211
    10. '3' → logprob: -16.25008201599121

Token 51: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009995000436902046
    2. '])' → logprob: -4.634994983673096
    3. '))' → logprob: -8.884995460510254
    4. ')
' → logprob: -10.384995460510254
    5. ' )' → logprob: -10.884995460510254
    6. ')])' → logprob: -11.259995460510254
    7. '})' → logprob: -11.384995460510254
    8. '),' → logprob: -11.634995460510254
    9. ',' → logprob: -12.634995460510254
    10. ']' → logprob: -12.759995460510254

Token 52: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.581517219543457
    2. 'res' → logprob: -1.206517219543457
    3. 'r' → logprob: -2.706517219543457
    4. 't' → logprob: -4.331517219543457
    5. 'w' → logprob: -4.706517219543457
    6. 'total' → logprob: -4.831517219543457
    7. 'f' → logprob: -4.831517219543457
    8. 's' → logprob: -4.956517219543457
    9. 'm' → logprob: -5.331517219543457
    10. 'j' → logprob: -5.456517219543457

Token 53: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0032254871912300587
    2. ' =' → logprob: -5.753225326538086
    3. '=[]' → logprob: -10.503225326538086
    4. '+=' → logprob: -11.628225326538086
    5. '={}' → logprob: -12.503225326538086
    6. '=sum' → logprob: -13.628225326538086
    7. '=w' → logprob: -13.878225326538086
    8. '=float' → logprob: -14.253225326538086
    9. '=int' → logprob: -14.253225326538086
    10. '=

' → logprob: -14.503225326538086

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'float' → logprob: -18.625
    4. '   ' → logprob: -20.625
    5. '"' → logprob: -20.75
    6. 'w' → logprob: -20.875
    7. '`' → logprob: -21.0
    8. '```' → logprob: -21.25
    9. 'int' → logprob: -21.75
    10. '[' → logprob: -21.875

Token 55: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7561530470848083
    2. ' for' → logprob: -1.3811531066894531
    3. '\n' → logprob: -1.7561531066894531
    4. '
' → logprob: -3.381153106689453
    5. '<|end|>' → logprob: -3.506153106689453
    6. '	for' → logprob: -4.131153106689453
    7. '	
' → logprob: -4.631153106689453
    8. '```' → logprob: -6.131153106689453
    9. '' → logprob: -6.256153106689453
    10. '\' → logprob: -6.256153106689453

Token 56: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008962165447883308
    2. 'w' → logprob: -7.375896453857422
    3. ' for' → logprob: -8.375896453857422
    4. '```' → logprob: -10.625896453857422
    5. 'print' → logprob: -12.375896453857422
    6. 'i' → logprob: -12.875896453857422
    7. '	for' → logprob: -13.250896453857422
    8. 't' → logprob: -13.500896453857422
    9. 'W' → logprob: -14.250896453857422
    10. 'while' → logprob: -14.375896453857422

Token 57: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04864925146102905
    2. ' =' → logprob: -3.048649311065674
    3. ' ' → logprob: -11.173648834228516
    4. '+=' → logprob: -11.173648834228516
    5. ' +=' → logprob: -11.298648834228516
    6. '+' → logprob: -11.673648834228516
    7. '<|end|>' → logprob: -12.298648834228516
    8. 'n' → logprob: -13.298648834228516
    9. '0' → logprob: -13.423648834228516
    10. '=
' → logprob: -13.798648834228516

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۰' → logprob: -21.625001907348633
    4. '０' → logprob: -22.375001907348633
    5. '<|end|>' → logprob: -22.625001907348633
    6. '1' → logprob: -22.875001907348633
    7. '```' → logprob: -23.000001907348633
    8. '=' → logprob: -23.250001907348633
    9. 'i' → logprob: -23.500001907348633
    10. '[' → logprob: -23.750001907348633

Token 59: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.040154751390218735
    2. ' while' → logprob: -3.2901546955108643
    3. '
' → logprob: -7.040154933929443
    4. '<|end|>' → logprob: -7.790154933929443
    5. 'w' → logprob: -7.915154933929443
    6. '\n' → logprob: -9.040154457092285
    7. ' ' → logprob: -9.665154457092285
    8. '	while' → logprob: -9.790154457092285
    9. ' 
' → logprob: -10.290154457092285
    10. 'While' → logprob: -10.290154457092285

Token 60: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04245869815349579
    2. ' while' → logprob: -3.2924587726593018
    3. '
' → logprob: -6.167458534240723
    4. '\n' → logprob: -7.667458534240723
    5. '<|end|>' → logprob: -7.667458534240723
    6. 'w' → logprob: -7.792458534240723
    7. '```' → logprob: -7.917458534240723
    8. '	while' → logprob: -8.792458534240723
    9. ' ' → logprob: -9.417458534240723
    10. 'While' → logprob: -9.917458534240723

Token 61: ' w' (ID: 286)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2608780860900879
    2. ' w' → logprob: -2.135878086090088
    3. 'i' → logprob: -2.510878086090088
    4. 'w' → logprob: -3.510878086090088
    5. ' ans' → logprob: -8.76087760925293
    6. '	i' → logprob: -9.51087760925293
    7. '(i' → logprob: -9.76087760925293
    8. ' True' → logprob: -10.01087760925293
    9. 'True' → logprob: -11.13587760925293
    10. 'ans' → logprob: -11.38587760925293

Token 62: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0009496912243776023
    2. 'and' → logprob: -7.500949859619141
    3. ' and' → logprob: -8.00094985961914
    4. ' >' → logprob: -9.87594985961914
    5. '&gt' → logprob: -11.87594985961914
    6. '>w' → logprob: -13.37594985961914
    7. '>a' → logprob: -14.87594985961914
    8. '0' → logprob: -15.00094985961914
    9. '＞' → logprob: -15.50094985961914
    10. '>`' → logprob: -16.00094985961914

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '>' → logprob: -17.500085830688477
    4. '```' → logprob: -17.875085830688477
    5. '=' → logprob: -18.250085830688477
    6. 'p' → logprob: -18.500085830688477
    7. ' ' → logprob: -18.625085830688477
    8. '   ' → logprob: -19.125085830688477
    9. 'i' → logprob: -19.250085830688477
    10. '  ' → logprob: -19.500085830688477

Token 64: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07780793309211731
    2. ':' → logprob: -2.702807903289795
    3. 'and' → logprob: -4.952807903289795
    4. ':
' → logprob: -7.327807903289795
    5. '	and' → logprob: -9.327808380126953
    6. ',' → logprob: -11.577808380126953
    7. ' :' → logprob: -11.827808380126953
    8. ' ' → logprob: -12.452808380126953
    9. '>' → logprob: -13.327808380126953
    10. ':

' → logprob: -13.827808380126953

Token 65: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07891303300857544
    2. ' i' → logprob: -2.5789129734039307
    3. '	i' → logprob: -10.703912734985352
    4. '(i' → logprob: -15.453912734985352
    5. ' ' → logprob: -16.45391273498535
    6. ' ' → logprob: -16.57891273498535
    7. '>' → logprob: -16.82891273498535
    8. '<i' → logprob: -16.82891273498535
    9. ',i' → logprob: -16.95391273498535
    10. '`' → logprob: -17.07891273498535

Token 66: '<n' (ID: 33872)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5378667116165161
    2. '<len' → logprob: -1.1628667116165161
    3. '<n' → logprob: -2.4128665924072266
    4. ' <' → logprob: -4.287866592407227
    5. 'len' → logprob: -10.412866592407227
    6. '<w' → logprob: -10.787866592407227
    7. '<p' → logprob: -10.912866592407227
    8. '<size' → logprob: -11.037866592407227
    9. '<num' → logprob: -11.787866592407227
    10. 'n' → logprob: -12.037866592407227

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01818869262933731
    2. ':
' → logprob: -4.0181884765625
    3. ':w' → logprob: -11.6431884765625
    4. ':

' → logprob: -11.7681884765625
    5. ' and' → logprob: -12.2681884765625
    6. ' :' → logprob: -12.6431884765625
    7. ':
' → logprob: -12.6431884765625
    8. ':p' → logprob: -13.1431884765625
    9. ' :
' → logprob: -13.8931884765625
    10. 'and' → logprob: -14.0181884765625

Token 68: '	if' (ID: 1224)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1479438543319702
    2. 'if' → logprob: -1.2729438543319702
    3. 't' → logprob: -1.7729438543319702
    4. 'c' → logprob: -3.1479439735412598
    5. ' t' → logprob: -3.2729439735412598
    6. '	if' → logprob: -3.7729439735412598
    7. 'x' → logprob: -3.8979439735412598
    8. 'd' → logprob: -4.64794397354126
    9. ' ' → logprob: -4.64794397354126
    10. 'v' → logprob: -4.89794397354126

Token 69: ' w' (ID: 286)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.028338946402072906
    2. 'w' → logprob: -3.90333890914917
    3. ' p' → logprob: -4.90333890914917
    4. ' w' → logprob: -8.028339385986328
    5. '	p' → logprob: -11.028339385986328
    6. '	w' → logprob: -13.653339385986328
    7. ' ' → logprob: -14.653339385986328
    8. ' ' → logprob: -15.153339385986328
    9. '	' → logprob: -15.778339385986328
    10. '   ' → logprob: -16.153339385986328

Token 70: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.004677422810345888
    2. '<' → logprob: -6.2546772956848145
    3. '>' → logprob: -6.2546772956848145
    4. '<p' → logprob: -7.8796772956848145
    5. ' >=' → logprob: -8.004677772521973
    6. '-' → logprob: -10.629677772521973
    7. '<=' → logprob: -10.879677772521973
    8. '```' → logprob: -11.129677772521973
    9. ')>=' → logprob: -11.504677772521973
    10. ']>=' → logprob: -11.754677772521973

Token 71: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4259644558478612e-05
    2. ' p' → logprob: -11.250014305114746
    3. '	p' → logprob: -13.625014305114746
    4. 'b' → logprob: -19.00001335144043
    5. '<p' → logprob: -19.37501335144043
    6. ')p' → logprob: -19.50001335144043
    7. '*p' → logprob: -20.00001335144043
    8. 'python' → logprob: -20.00001335144043
    9. ' ' → logprob: -20.00001335144043
    10. '   ' → logprob: -20.62501335144043

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.00000286102295
    3. '```' → logprob: -15.75000286102295
    4. '[][' → logprob: -16.750001907348633
    5. '[I' → logprob: -16.875001907348633
    6. '[s' → logprob: -17.000001907348633
    7. '[j' → logprob: -17.625001907348633
    8. '[u' → logprob: -18.500001907348633
    9. '\[' → logprob: -18.750001907348633
    10. ''s' → logprob: -19.000001907348633

Token 73: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28121379017829895
    2. '][' → logprob: -1.4062137603759766
    3. '>[' → logprob: -11.531213760375977
    4. ']' → logprob: -11.531213760375977
    5. '2' → logprob: -11.656213760375977
    6. ' [' → logprob: -12.656213760375977
    7. '3' → logprob: -12.656213760375977
    8. '```' → logprob: -12.781213760375977
    9. ' ][' → logprob: -12.781213760375977
    10. ''][' → logprob: -13.031213760375977

Token 74: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012451570364646614
    2. '[' → logprob: -10.12512493133545
    3. '1' → logprob: -10.62512493133545
    4. '```' → logprob: -10.87512493133545
    5. '₂' → logprob: -11.75012493133545
    6. '۲' → logprob: -12.25012493133545
    7. '２' → logprob: -12.43762493133545
    8. '

' → logprob: -12.50012493133545
    9. ' ' → logprob: -12.50012493133545
    10. '``' → logprob: -13.00012493133545

Token 75: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2861037254333496
    2. '):' → logprob: -1.4111037254333496
    3. '):
' → logprob: -6.03610372543335
    4. ')' → logprob: -7.03610372543335
    5. ']:' → logprob: -7.66110372543335
    6. ':
' → logprob: -7.91110372543335
    7. ' ):' → logprob: -8.036104202270508
    8. '<|end|>' → logprob: -9.161104202270508
    9. '	' → logprob: -9.411104202270508
    10. '):
' → logprob: -9.661104202270508

Token 76: '	' (ID: 197)
  Prédit: '	ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	ans' → logprob: -0.3839522898197174
    2. ' ans' → logprob: -1.258952260017395
    3. 'ans' → logprob: -3.3839523792266846
    4. '   ' → logprob: -7.7589521408081055
    5. '
' → logprob: -8.258952140808105
    6. '<|end|>' → logprob: -9.383952140808105
    7. ' ' → logprob: -10.258952140808105
    8. '(ans' → logprob: -10.758952140808105
    9. '```' → logprob: -10.883952140808105
    10. '_ans' → logprob: -11.008952140808105

Token 77: '	ans' (ID: 102831)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03089519776403904
    2. '	ans' → logprob: -3.530895233154297
    3. ' ans' → logprob: -7.030895233154297
    4. 'w' → logprob: -8.280895233154297
    5. '(ans' → logprob: -13.280895233154297
    6. 'a' → logprob: -13.405895233154297
    7. '_ans' → logprob: -13.530895233154297
    8. '   ' → logprob: -15.155895233154297
    9. '```' → logprob: -15.155895233154297
    10. '	w' → logprob: -15.280895233154297

Token 78: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0020654452964663506
    2. '+=(' → logprob: -6.377065658569336
    3. '+' → logprob: -8.502065658569336
    4. ']+=' → logprob: -9.127065658569336
    5. ' +=' → logprob: -10.127065658569336
    6. '+='' → logprob: -12.377065658569336
    7. '+="' → logprob: -12.502065658569336
    8. '+p' → logprob: -12.877065658569336
    9. '	' → logprob: -14.252065658569336
    10. '```' → logprob: -15.627065658569336

Token 79: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00021188464597798884
    2. ' p' → logprob: -8.500211715698242
    3. '	p' → logprob: -11.750211715698242
    4. '   ' → logprob: -15.500211715698242
    5. ' ' → logprob: -15.875211715698242
    6. '  ' → logprob: -17.000211715698242
    7. '(p' → logprob: -17.625211715698242
    8. '```' → logprob: -17.875211715698242
    9. '*p' → logprob: -18.000211715698242
    10. '+p' → logprob: -19.125211715698242

Token 80: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.750003814697266
    3. '```' → logprob: -15.375003814697266
    4. 'i' → logprob: -15.750003814697266
    5. '[][' → logprob: -16.000003814697266
    6. '[I' → logprob: -16.000003814697266
    7. '\[' → logprob: -17.000003814697266
    8. '[s' → logprob: -17.500003814697266
    9. '][' → logprob: -18.000003814697266
    10. '[idx' → logprob: -18.000003814697266

Token 81: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.057614877820014954
    2. '[' → logprob: -2.932614803314209
    3. '1' → logprob: -6.182614803314209
    4. ']' → logprob: -8.932615280151367
    5. '>[' → logprob: -8.932615280151367
    6. '```' → logprob: -9.557615280151367
    7. ' ][' → logprob: -9.557615280151367
    8. '-' → logprob: -10.307615280151367
    9. '2' → logprob: -10.432615280151367
    10. '"][' → logprob: -10.682615280151367

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2811715006828308
    2. '2' → logprob: -1.4061715602874756
    3. '```' → logprob: -12.218671798706055
    4. '[' → logprob: -12.781171798706055
    5. '   ' → logprob: -13.218671798706055
    6. '

' → logprob: -13.593671798706055
    7. '``' → logprob: -13.843671798706055
    8. '][' → logprob: -13.906171798706055
    9. ']' → logprob: -14.093671798706055
    10. '	' → logprob: -14.093671798706055

Token 83: ']
' (ID: 1592)
  Prédit: '*p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*p' → logprob: -0.5850827693939209
    2. '*w' → logprob: -1.335082769393921
    3. '*' → logprob: -2.085082769393921
    4. '
' → logprob: -3.210082769393921
    5. '*i' → logprob: -4.5850830078125
    6. '<|end|>' → logprob: -6.9600830078125
    7. ' *' → logprob: -7.7100830078125
    8. '
' → logprob: -7.9600830078125
    9. '*q' → logprob: -8.0850830078125
    10. 'p' → logprob: -8.2100830078125

Token 84: '	else' (ID: 5107)
  Prédit: '*w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*w' → logprob: -0.009062286466360092
    2. 'w' → logprob: -5.75906229019165
    3. '	' → logprob: -5.88406229019165
    4. '	w' → logprob: -7.00906229019165
    5. 'else' → logprob: -7.13406229019165
    6. '*' → logprob: -7.25906229019165
    7. '*p' → logprob: -8.384061813354492
    8. '
' → logprob: -8.759061813354492
    9. '*i' → logprob: -9.634061813354492
    10. '		
' → logprob: -10.134061813354492

Token 85: ':
' (ID: 734)
  Prédit: '	ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	ans' → logprob: -0.5825678706169128
    2. ' ans' → logprob: -0.8325678706169128
    3. 'ans' → logprob: -6.2075676918029785
    4. '(ans' → logprob: -6.9575676918029785
    5. '	' → logprob: -6.9575676918029785
    6. ':' → logprob: -7.4575676918029785
    7. '
' → logprob: -7.9575676918029785
    8. '		' → logprob: -8.457568168640137
    9. '<|end|>' → logprob: -8.707568168640137
    10. ':
' → logprob: -8.707568168640137

Token 86: '	' (ID: 197)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7272082567214966
    2. '	ans' → logprob: -0.7272082567214966
    3. 'ans' → logprob: -3.727208137512207
    4. '	' → logprob: -5.102208137512207
    5. '(ans' → logprob: -6.727208137512207
    6. '		' → logprob: -7.852208137512207
    7. '```' → logprob: -8.477208137512207
    8. ' ' → logprob: -8.602208137512207
    9. '	       ' → logprob: -8.852208137512207
    10. 'w' → logprob: -8.977208137512207

Token 87: '	ans' (ID: 102831)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6547544002532959
    2. ' ans' → logprob: -0.7797544002532959
    3. '	ans' → logprob: -3.904754400253296
    4. '(ans' → logprob: -6.404754638671875
    5. 'w' → logprob: -9.779754638671875
    6. '_ans' → logprob: -10.654754638671875
    7. ' w' → logprob: -12.154754638671875
    8. ' ' → logprob: -12.654754638671875
    9. ' (' → logprob: -12.654754638671875
    10. 'print' → logprob: -12.904754638671875

Token 88: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011073758825659752
    2. '+=(' → logprob: -4.511073589324951
    3. ']+=' → logprob: -10.88607406616211
    4. '+' → logprob: -13.01107406616211
    5. ' +=' → logprob: -13.01107406616211
    6. '```' → logprob: -13.88607406616211
    7. '+='' → logprob: -14.01107406616211
    8. '+="' → logprob: -14.13607406616211
    9. '	' → logprob: -15.51107406616211
    10. 'plus' → logprob: -17.01107406616211

Token 89: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.015590842813253403
    2. 'w' → logprob: -4.765590667724609
    3. ' p' → logprob: -5.015590667724609
    4. '(p' → logprob: -8.76559066772461
    5. ' w' → logprob: -9.14059066772461
    6. '(w' → logprob: -11.01559066772461
    7. '(' → logprob: -11.39059066772461
    8. ' (' → logprob: -11.51559066772461
    9. '	p' → logprob: -12.01559066772461
    10. 'x' → logprob: -13.45309066772461

Token 90: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.348545640707016
    2. '[' → logprob: -1.2235456705093384
    3. '0' → logprob: -9.473546028137207
    4. '```' → logprob: -11.473546028137207
    5. '[][' → logprob: -12.723546028137207
    6. 'i' → logprob: -13.348546028137207
    7. '	' → logprob: -13.348546028137207
    8. '[]' → logprob: -13.598546028137207
    9. '	i' → logprob: -13.973546028137207
    10. '`' → logprob: -14.223546028137207

Token 91: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6338748931884766
    2. '[' → logprob: -0.7588748931884766
    3. '>[' → logprob: -7.633874893188477
    4. '0' → logprob: -8.383874893188477
    5. '}[' → logprob: -8.883874893188477
    6. ')[' → logprob: -9.133874893188477
    7. '```' → logprob: -9.633874893188477
    8. '"][' → logprob: -9.883874893188477
    9. ']' → logprob: -10.383874893188477
    10. ''][' → logprob: -10.821374893188477

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5548104643821716
    2. '0' → logprob: -1.4298105239868164
    3. '2' → logprob: -1.6798105239868164
    4. '```' → logprob: -10.679810523986816
    5. '[' → logprob: -12.179810523986816
    6. '``' → logprob: -12.304810523986816
    7. ' ' → logprob: -12.429810523986816
    8. '   ' → logprob: -12.492310523986816
    9. '-' → logprob: -12.554810523986816
    10. '
' → logprob: -13.617310523986816

Token 93: ']*(' (ID: 92627)
  Prédit: '*w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*w' → logprob: -0.6121151447296143
    2. '*' → logprob: -0.9871151447296143
    3. '/w' → logprob: -2.8621151447296143
    4. '*p' → logprob: -3.7371151447296143
    5. '*(' → logprob: -6.112114906311035
    6. '/' → logprob: -6.362114906311035
    7. ' *' → logprob: -9.237114906311035
    8. '/p' → logprob: -10.737114906311035
    9. '*i' → logprob: -11.112114906311035
    10. 'w' → logprob: -11.362114906311035

Token 94: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.248469718324486e-05
    2. ' w' → logprob: -10.750022888183594
    3. '(w' → logprob: -14.625022888183594
    4. '	w' → logprob: -14.625022888183594
    5. '   ' → logprob: -18.125022888183594
    6. '+w' → logprob: -19.000022888183594
    7. '>w' → logprob: -19.500022888183594
    8. '<w' → logprob: -19.625022888183594
    9. 'float' → logprob: -19.625022888183594
    10. ''w' → logprob: -19.875022888183594

Token 95: '/p' (ID: 8138)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3420640826225281
    2. '/p' → logprob: -1.5920641422271729
    3. ')/' → logprob: -2.467064142227173
    4. '/)' → logprob: -7.842063903808594
    5. ')' → logprob: -8.092063903808594
    6. ' /' → logprob: -8.092063903808594
    7. ')/(' → logprob: -8.467063903808594
    8. '	' → logprob: -10.092063903808594
    9. '/n' → logprob: -10.717063903808594
    10. '/
' → logprob: -10.967063903808594

Token 96: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -12.00001049041748
    3. 'i' → logprob: -12.37501049041748
    4. '(i' → logprob: -18.375009536743164
    5. ' [' → logprob: -18.500009536743164
    6. '	i' → logprob: -18.750009536743164
    7. 'p' → logprob: -19.000009536743164
    8. '[
' → logprob: -19.000009536743164
    9. '	' → logprob: -19.375009536743164
    10. ' i' → logprob: -19.750009536743164

Token 97: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005241225939244032
    2. '[' → logprob: -5.255241394042969
    3. '2' → logprob: -12.755241394042969
    4. ']' → logprob: -13.505241394042969
    5. '>[' → logprob: -14.380241394042969
    6. ')[' → logprob: -14.380241394042969
    7. ''][' → logprob: -14.505241394042969
    8. ' ][' → logprob: -15.005241394042969
    9. '"][' → logprob: -15.130241394042969
    10. ']][' → logprob: -15.130241394042969

Token 98: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -14.00000286102295
    3. ' ' → logprob: -14.12500286102295
    4. '1' → logprob: -15.00000286102295
    5. '```' → logprob: -15.00000286102295
    6. '   ' → logprob: -15.37500286102295
    7. '
' → logprob: -16.250003814697266
    8. '

' → logprob: -16.375003814697266
    9. '	' → logprob: -16.750003814697266
    10. '２' → logprob: -16.937503814697266

Token 99: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11093774437904358
    2. ')
' → logprob: -2.3609378337860107
    3. '])' → logprob: -4.735937595367432
    4. '])
' → logprob: -6.610937595367432
    5. '）' → logprob: -8.11093807220459
    6. ')
' → logprob: -9.11093807220459
    7. '	' → logprob: -9.98593807220459
    8. '))' → logprob: -10.36093807220459
    9. ' )' → logprob: -11.23593807220459
    10. '))
' → logprob: -11.36093807220459

Token 100: '	' (ID: 197)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.8766950964927673
    2. '	w' → logprob: -1.126695156097412
    3. '	' → logprob: -1.376695156097412
    4. ' w' → logprob: -5.001695156097412
    5. '	break' → logprob: -8.751694679260254
    6. '		
' → logprob: -9.126694679260254
    7. '		' → logprob: -9.126694679260254
    8. '```' → logprob: -9.626694679260254
    9. '       ' → logprob: -9.876694679260254
    10. '
' → logprob: -10.751694679260254

Token 101: '	break' (ID: 7126)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4540199637413025
    2. '	break' → logprob: -1.7040200233459473
    3. '	w' → logprob: -2.4540200233459473
    4. 'break' → logprob: -2.5790200233459473
    5. ' break' → logprob: -4.454020023345947
    6. ' w' → logprob: -4.704020023345947
    7. '	' → logprob: -7.704020023345947
    8. '   ' → logprob: -10.704019546508789
    9. '	b' → logprob: -12.454019546508789
    10. '       ' → logprob: -12.829019546508789

Token 102: '
' (ID: 198)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.334554523229599
    2. '	w' → logprob: -1.3345545530319214
    3. 'i' → logprob: -4.334554672241211
    4. '	i' → logprob: -5.084554672241211
    5. ' w' → logprob: -6.584554672241211
    6. ' i' → logprob: -7.959554672241211
    7. '	
' → logprob: -11.459554672241211
    8. '```' → logprob: -11.459554672241211
    9. '   ' → logprob: -12.209554672241211
    10. '
' → logprob: -12.334554672241211

Token 103: '	w' (ID: 12910)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4035175144672394
    2. '	w' → logprob: -1.153517484664917
    3. '	i' → logprob: -4.653517723083496
    4. 'i' → logprob: -5.028517723083496
    5. ' w' → logprob: -8.028517723083496
    6. ' i' → logprob: -9.778517723083496
    7. '```' → logprob: -10.153517723083496
    8. '   ' → logprob: -12.403517723083496
    9. '``' → logprob: -12.653517723083496
    10. 'print' → logprob: -14.528517723083496

Token 104: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.010774021036922932
    2. ' -=' → logprob: -5.0107741355896
    3. '-' → logprob: -5.5107741355896
    4. '=' → logprob: -12.135773658752441
    5. '	' → logprob: -13.885773658752441
    6. '+=' → logprob: -14.635773658752441
    7. '```' → logprob: -15.635773658752441
    8. ' -' → logprob: -15.760773658752441
    9. ')-' → logprob: -16.135774612426758
    10. '   ' → logprob: -17.260774612426758

Token 105: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: 0.0
    2. ' p' → logprob: -17.25
    3. '	p' → logprob: -19.625
    4. '[p' → logprob: -22.5
    5. '[' → logprob: -22.875
    6. '```' → logprob: -22.875
    7. '*p' → logprob: -23.0
    8. '<p' → logprob: -23.125
    9. '$p' → logprob: -24.25
    10. '(p' → logprob: -24.375

Token 106: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.25
    3. '[I' → logprob: -17.0
    4. '```' → logprob: -17.375
    5. 'i' → logprob: -18.75
    6. '[user' → logprob: -19.375
    7. '[][' → logprob: -19.875
    8. '\[' → logprob: -20.625
    9. '[ii' → logprob: -20.875
    10. '[int' → logprob: -21.125

Token 107: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0019343505846336484
    2. '[' → logprob: -6.25193452835083
    3. '"][' → logprob: -13.126934051513672
    4. '2' → logprob: -13.626934051513672
    5. ''][' → logprob: -13.876934051513672
    6. '}[' → logprob: -14.751934051513672
    7. ']' → logprob: -15.001934051513672
    8. ' ][' → logprob: -15.251934051513672
    9. ']][' → logprob: -15.751934051513672
    10. '```' → logprob: -16.001934051513672

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -16.125001907348633
    4. '1' → logprob: -17.125001907348633
    5. '۲' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '[' → logprob: -17.625001907348633
    8. '２' → logprob: -17.625001907348633
    9. '	' → logprob: -18.437501907348633
    10. '२' → logprob: -18.687501907348633

Token 109: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.17805251479148865
    2. ')' → logprob: -2.1780524253845215
    3. ')i' → logprob: -3.1780524253845215
    4. '	i' → logprob: -5.0530524253845215
    5. '[i' → logprob: -7.4280524253845215
    6. 'i' → logprob: -7.9280524253845215
    7. ',i' → logprob: -7.9280524253845215
    8. ')
' → logprob: -8.80305290222168
    9. '   ' → logprob: -9.80305290222168
    10. ']' → logprob: -9.80305290222168

Token 110: '	i' (ID: 16156)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06347960233688354
    2. '	i' → logprob: -2.8134796619415283
    3. ' i' → logprob: -6.563479423522949
    4. '   ' → logprob: -9.81347942352295
    5. '```' → logprob: -10.68847942352295
    6. '[i' → logprob: -11.81347942352295
    7. ',i' → logprob: -12.56347942352295
    8. '_i' → logprob: -13.06347942352295
    9. '+i' → logprob: -13.18847942352295
    10. '*i' → logprob: -13.31347942352295

Token 111: '+=' (ID: 18287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.252041757106781
    2. '+=' → logprob: -1.5020418167114258
    3. ' +=' → logprob: -10.002041816711426
    4. '++' → logprob: -10.127041816711426
    5. '+="' → logprob: -11.627041816711426
    6. '+++' → logprob: -11.752041816711426
    7. '+='' → logprob: -12.127041816711426
    8. '=' → logprob: -13.502041816711426
    9. '+i' → logprob: -14.502041816711426
    10. '+)' → logprob: -14.502041816711426

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '１' → logprob: -21.375001907348633
    4. '   ' → logprob: -21.750001907348633
    5. '```' → logprob: -22.375001907348633
    6. '+' → logprob: -22.625001907348633
    7. '  ' → logprob: -23.500001907348633
    8. '۱' → logprob: -23.750001907348633
    9. '`' → logprob: -24.500001907348633
    10. '	' → logprob: -24.750001907348633

Token 113: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.4285862057004124e-05
    2. ' print' → logprob: -11.12503433227539
    3. '
' → logprob: -11.25003433227539
    4. '```' → logprob: -12.25003433227539
    5. ')
' → logprob: -14.00003433227539
    6. '``' → logprob: -15.62503433227539
    7. ')' → logprob: -15.62503433227539
    8. '(print' → logprob: -16.25003433227539
    9. '-print' → logprob: -16.37503433227539
    10. '#print' → logprob: -16.50003433227539

Token 114: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.127333340875339e-06
    2. ' print' → logprob: -12.500003814697266
    3. '
' → logprob: -15.375003814697266
    4. '```' → logprob: -16.625003814697266
    5. ')
' → logprob: -19.000003814697266
    6. '-print' → logprob: -19.625003814697266
    7. '``' → logprob: -20.125003814697266
    8. '.print' → logprob: -20.125003814697266
    9. '(print' → logprob: -20.125003814697266
    10. ')' → logprob: -20.375003814697266

Token 115: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0003697781648952514
    2. '(round' → logprob: -8.500370025634766
    3. '(' → logprob: -9.375370025634766
    4. '("%.' → logprob: -10.250370025634766
    5. '(f' → logprob: -10.750370025634766
    6. '(int' → logprob: -11.375370025634766
    7. '("{' → logprob: -12.125370025634766
    8. '(float' → logprob: -13.125370025634766
    9. 'ans' → logprob: -13.250370025634766
    10. '(format' → logprob: -13.750370025634766

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -12.87500286102295
    3. ')
' → logprob: -16.375003814697266
    4. ')`' → logprob: -16.500003814697266
    5. '))' → logprob: -18.125003814697266
    6. ')}' → logprob: -18.625003814697266
    7. '),' → logprob: -18.750003814697266
    8. '）' → logprob: -18.875003814697266
    9. '`)' → logprob: -18.875003814697266
    10. ')#' → logprob: -19.375003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 114
Tokens correctement prédits (1ère position, stricte): 58
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 95
Précision stricte (1ère position): 50.88%
Précision adaptée (1ère position): 50.88%
Précision (top 10): 83.33%
================================================================================
