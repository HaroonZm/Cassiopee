================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
pp = list(map(int, input().split()))
n = int(input())

def project(bb, p=pp):
    ans = []
    a = (p[2]-p[0], p[3]-p[1])
    b = (bb[0]-p[0], bb[1]-p[1])
    if dot(a,b)<0:
        a = (-a[0], -a[1])
    c = dot(a,b)/length(a)**2
    ans += [c*v+p[i] for i, v in enumerate(a)] 
    return ans
    
def length(vector):
    ans = 0
    for i in vector:
        ans += i**2
    return ans**(1/2)
    
def dot(a, b):
    n = len(a)
    if n != len(b):
        return None
    ans = 0
    for i, j in zip(a, b):
        ans += i*j
    return ans
    
def reflection(b, p = pp):
    a = project(b)
    ans = (b[0]+2*(a[0]-b[0]), b[1]+2*(a[1]-b[1]))
    print(f'{ans[0]:.8f} {ans[1]:.8f}')
    
for i in range(n):
    b = list(map(int, input().split()))
    reflection(b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'pp' (ID: 654)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' list' (ID: 1562)
  → Token d'amorce (pas de prédiction)

Token 3: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028912981506437063
    2. '[' → logprob: -6.3778910636901855
    3. '(pp' → logprob: -7.2528910636901855
    4. '.' → logprob: -8.627891540527344
    5. '(
' → logprob: -9.377891540527344
    6. '```' → logprob: -9.627891540527344
    7. 's' → logprob: -10.752891540527344
    8. '[(' → logprob: -11.002891540527344
    9. ' (' → logprob: -11.377891540527344
    10. ')' → logprob: -11.377891540527344

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35027745366096497
    2. '(lambda' → logprob: -1.2252774238586426
    3. '(int' → logprob: -7.350277423858643
    4. '(str' → logprob: -7.475277423858643
    5. '(pp' → logprob: -8.1002779006958
    6. '(eval' → logprob: -9.4752779006958
    7. ')' → logprob: -10.3502779006958
    8. '```' → logprob: -10.7252779006958
    9. '(list' → logprob: -10.8502779006958
    10. '(open' → logprob: -10.8502779006958

Token 5: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46521154046058655
    2. '(pp' → logprob: -1.3402115106582642
    3. '))' → logprob: -2.7152116298675537
    4. ')' → logprob: -3.8402116298675537
    5. '()))' → logprob: -5.715211391448975
    6. '(user' → logprob: -6.090211391448975
    7. '((' → logprob: -6.465211391448975
    8. '(input' → logprob: -6.465211391448975
    9. '(range' → logprob: -6.590211391448975
    10. '<|end|>' → logprob: -6.715211391448975

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06915224343538284
    2. ' input' → logprob: -2.944152355194092
    3. '(input' → logprob: -4.569152355194092
    4. 'pp' → logprob: -5.694152355194092
    5. ' pp' → logprob: -8.819151878356934
    6. ')' → logprob: -9.319151878356934
    7. '(pp' → logprob: -9.569151878356934
    8. ',input' → logprob: -10.569151878356934
    9. 'user' → logprob: -11.194151878356934
    10. '=input' → logprob: -11.819151878356934

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22540253400802612
    2. '()))' → logprob: -2.475402593612671
    3. '(pp' → logprob: -2.975402593612671
    4. '))' → logprob: -3.850402593612671
    5. '()' → logprob: -4.725402355194092
    6. '(()' → logprob: -5.475402355194092
    7. '('' → logprob: -5.725402355194092
    8. '()));' → logprob: -5.725402355194092
    9. '())' → logprob: -5.850402355194092
    10. ')' → logprob: -6.100402355194092

Token 8: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0016303133452311158
    2. 'strip' → logprob: -6.5016303062438965
    3. ' split' → logprob: -9.251630783081055
    4. 'rstrip' → logprob: -10.501630783081055
    5. 'spl' → logprob: -13.126630783081055
    6. ')' → logprob: -13.251630783081055
    7. '(split' → logprob: -14.876630783081055
    8. ' strip' → logprob: -15.876630783081055
    9. 'startswith' → logprob: -16.626630783081055
    10. 'replace' → logprob: -16.751630783081055

Token 9: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08470650762319565
    2. '())' → logprob: -2.9597065448760986
    3. '))' → logprob: -3.8347065448760986
    4. '()' → logprob: -5.3347063064575195
    5. '())))' → logprob: -6.7097063064575195
    6. ')' → logprob: -6.8347063064575195
    7. ')))' → logprob: -8.08470630645752
    8. '(' → logprob: -8.95970630645752
    9. '()));' → logprob: -8.95970630645752
    10. '()))
' → logprob: -11.08470630645752

Token 10: 'n' (ID: 77)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46164944767951965
    2. '[' → logprob: -1.4616494178771973
    3. '#' → logprob: -2.9616494178771973
    4. 'for' → logprob: -3.9616494178771973
    5. 'print' → logprob: -3.9616494178771973
    6. '.' → logprob: -4.211649417877197
    7. ' if' → logprob: -4.836649417877197
    8. '```' → logprob: -4.961649417877197
    9. 'pp' → logprob: -5.586649417877197
    10. '\n' → logprob: -6.336649417877197

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01856098882853985
    2. ')' → logprob: -5.518560886383057
    3. '+' → logprob: -5.518560886383057
    4. '_' → logprob: -6.268560886383057
    5. 'pp' → logprob: -6.393560886383057
    6. '[p' → logprob: -6.518560886383057
    7. '>' → logprob: -7.268560886383057
    8. ' ' → logprob: -7.268560886383057
    9. '%' → logprob: -7.268560886383057
    10. '=' → logprob: -7.893560886383057

Token 12: ' int' (ID: 677)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.4191693365573883
    2. ' pp' → logprob: -1.544169306755066
    3. 'len' → logprob: -2.5441694259643555
    4. ' len' → logprob: -3.1691694259643555
    5. ' ' → logprob: -5.6691694259643555
    6. ' int' → logprob: -6.1691694259643555
    7. 'int' → logprob: -6.4191694259643555
    8. '0' → logprob: -7.2941694259643555
    9. '  ' → logprob: -8.544169425964355
    10. '2' → logprob: -9.669169425964355

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0524292029440403
    2. '(input' → logprob: -3.05242919921875
    3. '(pp' → logprob: -6.17742919921875
    4. '()' → logprob: -6.92742919921875
    5. '('' → logprob: -8.05242919921875
    6. 'input' → logprob: -9.05242919921875
    7. ')' → logprob: -9.55242919921875
    8. ' (' → logprob: -10.05242919921875
    9. '())' → logprob: -10.17742919921875
    10. '(`' → logprob: -10.42742919921875

Token 14: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3411164879798889
    2. '())' → logprob: -1.4661164283752441
    3. '))' → logprob: -3.091116428375244
    4. '()))' → logprob: -4.841116428375244
    5. '()' → logprob: -5.341116428375244
    6. '`)' → logprob: -10.841116905212402
    7. '(' → logprob: -11.841116905212402
    8. ' ())' → logprob: -12.091116905212402
    9. ''))' → logprob: -12.341116905212402
    10. '')' → logprob: -12.716116905212402

Token 15: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14208923280239105
    2. 'p' → logprob: -3.3920891284942627
    3. 'result' → logprob: -3.3920891284942627
    4. 'pp' → logprob: -4.142089366912842
    5. 'if' → logprob: -4.142089366912842
    6. 'r' → logprob: -5.017089366912842
    7. 'count' → logprob: -5.017089366912842
    8. 'res' → logprob: -5.517089366912842
    9. 's' → logprob: -5.642089366912842
    10. 'dp' → logprob: -5.892089366912842

Token 16: ' project' (ID: 2993)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.8579740524291992
    2. ' factorial' → logprob: -1.9829740524291992
    3. ' ' → logprob: -2.482974052429199
    4. ' count' → logprob: -2.482974052429199
    5. ' process' → logprob: -3.232974052429199
    6. ' f' → logprob: -3.357974052429199
    7. ' solution' → logprob: -3.357974052429199
    8. ' main' → logprob: -3.607974052429199
    9. ' factor' → logprob: -3.982974052429199
    10. ' calculate' → logprob: -4.107974052429199

Token 17: '(bb' (ID: 154315)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3064929246902466
    2. '(' → logprob: -1.4314929246902466
    3. 'ed' → logprob: -4.556492805480957
    4. '_name' → logprob: -4.931492805480957
    5. '(_' → logprob: -6.181492805480957
    6. '_(' → logprob: -7.306492805480957
    7. '_project' → logprob: -7.681492805480957
    8. '_ed' → logprob: -8.181492805480957
    9. ')' → logprob: -8.306492805480957
    10. '(_)' → logprob: -8.306492805480957

Token 18: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08734612166881561
    2. ')' → logprob: -2.712346076965332
    3. ',' → logprob: -4.837346076965332
    4. '[]):' → logprob: -5.587346076965332
    5. '[' → logprob: -6.587346076965332
    6. '_' → logprob: -7.712346076965332
    7. ')):' → logprob: -7.837346076965332
    8. 'ect' → logprob: -7.962346076965332
    9. ']):' → logprob: -8.087346076965332
    10. 'a' → logprob: -8.212346076965332

Token 19: ' p' (ID: 275)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.4715655446052551
    2. 'cc' → logprob: -2.8465654850006104
    3. 'nn' → logprob: -2.9715654850006104
    4. 'n' → logprob: -3.3465654850006104
    5. ' pp' → logprob: -3.5965654850006104
    6. ' n' → logprob: -3.7215654850006104
    7. 'aa' → logprob: -3.9715654850006104
    8. ' nn' → logprob: -3.9715654850006104
    9. 'kk' → logprob: -4.3465657234191895
    10. 'mm' → logprob: -4.4715657234191895

Token 20: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.405962198972702
    2. 'ro' → logprob: -2.2809622287750244
    3. ')' → logprob: -2.4059622287750244
    4. 'r' → logprob: -2.5309622287750244
    5. 'p' → logprob: -3.2809622287750244
    6. 'os' → logprob: -4.280961990356445
    7. 'i' → logprob: -6.905961990356445
    8. 's' → logprob: -7.155961990356445
    9. 'ar' → logprob: -7.155961990356445
    10. ',' → logprob: -7.280961990356445

Token 21: 'pp' (ID: 654)
  Prédit: 'pp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.5807861089706421
    2. '0' → logprob: -1.080786108970642
    3. '[' → logprob: -3.5807862281799316
    4. 'p' → logprob: -3.9557862281799316
    5. ')' → logprob: -3.9557862281799316
    6. '[])' → logprob: -4.330786228179932
    7. '1' → logprob: -4.705786228179932
    8. '[]' → logprob: -5.580786228179932
    9. '[n' → logprob: -5.955786228179932
    10. 'None' → logprob: -6.080786228179932

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20545156300067902
    2. ')' → logprob: -1.8304516077041626
    3. ',' → logprob: -4.080451488494873
    4. '[' → logprob: -4.830451488494873
    5. '):
' → logprob: -8.580451965332031
    6. '[]):' → logprob: -9.705451965332031
    7. ''):' → logprob: -10.205451965332031
    8. '),' → logprob: -10.830451965332031
    9. ')>' → logprob: -10.830451965332031
    10. 's' → logprob: -10.830451965332031

Token 23: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5850957632064819
    2. '   ' → logprob: -1.335095763206482
    3. '):' → logprob: -2.8350958824157715
    4. '[' → logprob: -3.3350958824157715
    5. ')' → logprob: -3.4600958824157715
    6. ' ' → logprob: -3.5850958824157715
    7. '[:]' → logprob: -5.2100958824157715
    8. '.' → logprob: -5.3350958824157715
    9. ' :' → logprob: -5.8350958824157715
    10. '    ' → logprob: -6.2100958824157715

Token 24: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7179413437843323
    2. ' ' → logprob: -1.2179412841796875
    3. ' if' → logprob: -2.3429412841796875
    4. ' for' → logprob: -3.5929412841796875
    5. '[' → logprob: -4.2179412841796875
    6. 'r' → logprob: -4.4679412841796875
    7. 'if' → logprob: -4.5929412841796875
    8. 'i' → logprob: -4.5929412841796875
    9. ' return' → logprob: -4.8429412841796875
    10. '    ' → logprob: -5.0929412841796875

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02154400385916233
    2. '=' → logprob: -3.8965439796447754
    3. ' +=' → logprob: -7.521543979644775
    4. ' ' → logprob: -9.146544456481934
    5. '[' → logprob: -9.771544456481934
    6. '=[]' → logprob: -9.896544456481934
    7. '[:]' → logprob: -10.021544456481934
    8. '   ' → logprob: -10.396544456481934
    9. '_' → logprob: -10.396544456481934
    10. ')' → logprob: -10.521544456481934

Token 26: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18153269588947296
    2. '[]' → logprob: -2.056532621383667
    3. ' []' → logprob: -4.306532859802246
    4. ' ' → logprob: -4.306532859802246
    5. '1' → logprob: -6.181532859802246
    6. 'sum' → logprob: -6.181532859802246
    7. '[' → logprob: -6.306532859802246
    8. 'bb' → logprob: -6.806532859802246
    9. 'len' → logprob: -6.806532859802246
    10. 'max' → logprob: -7.556532859802246

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8247429728507996
    2. ' for' → logprob: -0.8247429728507996
    3. 'for' → logprob: -3.0747430324554443
    4. ' ' → logprob: -3.4497430324554443
    5. '	for' → logprob: -4.574742794036865
    6. '
' → logprob: -5.074742794036865
    7. '    ' → logprob: -5.074742794036865
    8. '    
' → logprob: -5.074742794036865
    9. '\n' → logprob: -5.699742794036865
    10. '<|end|>' → logprob: -6.199742794036865

Token 28: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22899702191352844
    2. ' for' → logprob: -1.603996992111206
    3. '   ' → logprob: -5.728997230529785
    4. ' ' → logprob: -8.353997230529785
    5. 'i' → logprob: -10.353997230529785
    6. 'f' → logprob: -11.603997230529785
    7. '    ' → logprob: -12.103997230529785
    8. 'n' → logprob: -12.353997230529785
    9. 'ind' → logprob: -12.353997230529785
    10. 'r' → logprob: -12.478997230529785

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26917484402656555
    2. '=' → logprob: -1.7691748142242432
    3. ' ' → logprob: -4.144175052642822
    4. 'ns' → logprob: -4.644175052642822
    5. 'pp' → logprob: -4.894175052642822
    6. 'for' → logprob: -4.894175052642822
    7. ',' → logprob: -5.269175052642822
    8. 'n' → logprob: -6.144175052642822
    9. 'r' → logprob: -6.269175052642822
    10. '   ' → logprob: -6.394175052642822

Token 30: ' (' (ID: 350)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bb' → logprob: -1.1194552183151245
    2. ' bb' → logprob: -1.2444552183151245
    3. ' p' → logprob: -2.619455337524414
    4. 'len' → logprob: -3.244455337524414
    5. '0' → logprob: -3.244455337524414
    6. ' len' → logprob: -3.369455337524414
    7. '[' → logprob: -3.369455337524414
    8. ' []' → logprob: -3.369455337524414
    9. '[]' → logprob: -3.369455337524414
    10. ' [' → logprob: -3.494455337524414

Token 31: 'p' (ID: 79)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.8587329983711243
    2. 'len' → logprob: -1.9837329387664795
    3. 'p' → logprob: -2.3587329387664795
    4. ' p' → logprob: -2.6087329387664795
    5. ' bb' → logprob: -2.7337329387664795
    6. 'n' → logprob: -2.9837329387664795
    7. 'b' → logprob: -3.2337329387664795
    8. ' len' → logprob: -3.4837329387664795
    9. ' n' → logprob: -4.108733177185059
    10. 'sum' → logprob: -4.733733177185059

Token 32: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19292642176151276
    2. '[n' → logprob: -2.0679264068603516
    3. '[b' → logprob: -4.317926406860352
    4. '.index' → logprob: -4.692926406860352
    5. '[len' → logprob: -5.067926406860352
    6. '[-' → logprob: -5.442926406860352
    7. '[:' → logprob: -5.817926406860352
    8. 'bb' → logprob: -6.692926406860352
    9. '[p' → logprob: -6.817926406860352
    10. '*' → logprob: -7.067926406860352

Token 33: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15350490808486938
    2. 'bb' → logprob: -2.4035048484802246
    3. 'n' → logprob: -3.1535048484802246
    4. '1' → logprob: -6.028504848480225
    5. 'pp' → logprob: -6.403504848480225
    6. 'len' → logprob: -6.903504848480225
    7. '-' → logprob: -7.403504848480225
    8. 'b' → logprob: -7.528504848480225
    9. 'p' → logprob: -8.028505325317383
    10. ':' → logprob: -8.153505325317383

Token 34: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04576864466071129
    2. ']-' → logprob: -3.2957687377929688
    3. '])' → logprob: -6.045768737792969
    4. '-' → logprob: -6.045768737792969
    5. ':]' → logprob: -7.170768737792969
    6. ']+' → logprob: -7.295768737792969
    7. ']*' → logprob: -7.545768737792969
    8. ':' → logprob: -9.045768737792969
    9. ' ]' → logprob: -9.045768737792969
    10. '+' → logprob: -9.420768737792969

Token 35: 'p' (ID: 79)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3490840792655945
    2. 'p' → logprob: -1.2240841388702393
    3. ' ' → logprob: -8.59908390045166
    4. 'pp' → logprob: -8.84908390045166
    5. ' pp' → logprob: -9.47408390045166
    6. 'b' → logprob: -9.91158390045166
    7. '	p' → logprob: -10.22408390045166
    8. ' b' → logprob: -10.47408390045166
    9. 'bb' → logprob: -10.59908390045166
    10. ' bb' → logprob: -10.72408390045166

Token 36: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.261985719203949
    2. '0' → logprob: -1.7619857788085938
    3. '1' → logprob: -3.1369857788085938
    4. '][' → logprob: -4.761985778808594
    5. ' ' → logprob: -6.511985778808594
    6. '])' → logprob: -6.761985778808594
    7. '2' → logprob: -6.761985778808594
    8. ']' → logprob: -6.761985778808594
    9. ' [' → logprob: -8.011985778808594
    10. '-' → logprob: -8.011985778808594

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01612410694360733
    2. '1' → logprob: -4.391124248504639
    3. ' ' → logprob: -5.641124248504639
    4. '   ' → logprob: -10.76612377166748
    5. '3' → logprob: -11.26612377166748
    6. '4' → logprob: -12.14112377166748
    7. '  ' → logprob: -12.51612377166748
    8. '2' → logprob: -12.51612377166748
    9. '6' → logprob: -12.70362377166748
    10. '    ' → logprob: -13.76612377166748

Token 38: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06218580901622772
    2. ')/(' → logprob: -2.937185764312744
    3. ' )' → logprob: -5.812185764312744
    4. ')*(' → logprob: -6.312185764312744
    5. '])' → logprob: -7.187185764312744
    6. ')**' → logprob: -7.562185764312744
    7. ')*' → logprob: -7.812185764312744
    8. ',' → logprob: -8.312186241149902
    9. ')/' → logprob: -8.812186241149902
    10. ')-(' → logprob: -9.687186241149902

Token 39: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.026346050202846527
    2. 'p' → logprob: -3.65134596824646
    3. ' ' → logprob: -10.401346206665039
    4. ' ' → logprob: -11.151346206665039
    5. '	p' → logprob: -14.401346206665039
    6. ' ' → logprob: -15.776346206665039
    7. 'pp' → logprob: -16.65134620666504
    8. ' ​' → logprob: -17.40134620666504
    9. ' pp' → logprob: -17.71384620666504
    10. ' п' → logprob: -17.71384620666504

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.465036105713807e-06
    2. '1' → logprob: -12.125007629394531
    3. '(' → logprob: -15.000007629394531
    4. '][' → logprob: -15.375007629394531
    5. '
' → logprob: -15.375007629394531
    6. ']' → logprob: -15.375007629394531
    7. '2' → logprob: -15.500007629394531
    8. '[
' → logprob: -15.500007629394531
    9. '-' → logprob: -15.625007629394531
    10. '#' → logprob: -16.00000762939453

Token 41: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005873094312846661
    2. '2' → logprob: -5.255873203277588
    3. '1' → logprob: -7.380873203277588
    4. '```' → logprob: -12.63087272644043
    5. ' ' → logprob: -12.81837272644043
    6. '
' → logprob: -13.13087272644043
    7. '

' → logprob: -13.44337272644043
    8. '   ' → logprob: -13.50587272644043
    9. '0' → logprob: -13.88087272644043
    10. '``' → logprob: -14.44337272644043

Token 42: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.12343654036521912
    2. '-' → logprob: -2.748436450958252
    3. ']' → logprob: -2.998436450958252
    4. ' -' → logprob: -6.623436450958252
    5. '-p' → logprob: -7.623436450958252
    6. '<|end|>' → logprob: -8.87343692779541
    7. ')-' → logprob: -8.99843692779541
    8. ' ]' → logprob: -10.37343692779541
    9. ')' → logprob: -10.74843692779541
    10. '])-' → logprob: -10.87343692779541

Token 43: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.000916935910936445
    2. ' p' → logprob: -7.000916957855225
    3. '<|end|>' → logprob: -12.500916481018066
    4. ' ' → logprob: -13.875916481018066
    5. ')' → logprob: -15.625916481018066
    6. 'pp' → logprob: -15.875916481018066
    7. '  ' → logprob: -16.125917434692383
    8. '	p' → logprob: -16.125917434692383
    9. '<|end|>' → logprob: -16.625917434692383
    10. ')p' → logprob: -16.750917434692383

Token 44: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.013861055485904217
    2. '1' → logprob: -4.888861179351807
    3. '[' → logprob: -5.138861179351807
    4. ' ' → logprob: -8.013860702514648
    5. ']' → logprob: -11.513860702514648
    6. '0' → logprob: -11.888860702514648
    7. ')' → logprob: -12.013860702514648
    8. '```' → logprob: -12.263860702514648
    9. '<|end|>' → logprob: -12.513860702514648
    10. '#' → logprob: -13.888860702514648

Token 45: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05652596428990364
    2. '1' → logprob: -2.931525945663452
    3. '0' → logprob: -6.431526184082031
    4. ' ' → logprob: -11.181526184082031
    5. '```' → logprob: -11.681526184082031
    6. '   ' → logprob: -13.306526184082031
    7. ']' → logprob: -13.369026184082031
    8. '])' → logprob: -13.744026184082031
    9. '``' → logprob: -14.431526184082031
    10. ')' → logprob: -14.619026184082031

Token 46: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008637851104140282
    2. ')
' → logprob: -4.75863790512085
    3. ' )' → logprob: -11.133637428283691
    4. ')
' → logprob: -12.633637428283691
    5. '   ' → logprob: -12.883637428283691
    6. ')

' → logprob: -14.008637428283691
    7. ' )
' → logprob: -14.133637428283691
    8. '))' → logprob: -15.633637428283691
    9. ')**' → logprob: -15.758637428283691
    10. '),' → logprob: -16.008638381958008

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1522637903690338
    2. ' for' → logprob: -2.777263879776001
    3. ')' → logprob: -3.277263879776001
    4. '
' → logprob: -4.277263641357422
    5. 'for' → logprob: -4.527263641357422
    6. ',' → logprob: -5.902263641357422
    7. ' ' → logprob: -6.027263641357422
    8. '    
' → logprob: -6.152263641357422
    9. ' if' → logprob: -6.652263641357422
    10. ' 
' → logprob: -6.652263641357422

Token 48: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5367507934570312
    2. 'for' → logprob: -1.9117507934570312
    3. ' for' → logprob: -2.2867507934570312
    4. ')' → logprob: -3.2867507934570312
    5. ',' → logprob: -3.4117507934570312
    6. 'x' → logprob: -3.5367507934570312
    7. ' ' → logprob: -4.161750793457031
    8. ' x' → logprob: -4.411750793457031
    9. 'n' → logprob: -4.911750793457031
    10. ' 
' → logprob: -5.536750793457031

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007668267469853163
    2. '=' → logprob: -4.882668495178223
    3. ',' → logprob: -9.757668495178223
    4. ')' → logprob: -13.132668495178223
    5. ' ' → logprob: -14.382668495178223
    6. ' ,' → logprob: -14.882668495178223
    7. 's' → logprob: -15.632668495178223
    8. '[' → logprob: -15.757668495178223
    9. ' =)' → logprob: -15.757668495178223
    10. ' )' → logprob: -16.257667541503906

Token 50: ' (' (ID: 350)
  Prédit: '(bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bb' → logprob: -0.5837892293930054
    2. ' (' → logprob: -0.8337892293930054
    3. '(b' → logprob: -5.083789348602295
    4. '(' → logprob: -7.083789348602295
    5. '(p' → logprob: -8.458788871765137
    6. '(pp' → logprob: -8.833788871765137
    7. '((' → logprob: -9.083788871765137
    8. ' ' → logprob: -9.958788871765137
    9. '(pb' → logprob: -10.208788871765137
    10. ' bb' → logprob: -10.333788871765137

Token 51: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.013071521185338497
    2. ' bb' → logprob: -5.388071537017822
    3. 'p' → logprob: -5.888071537017822
    4. 'b' → logprob: -5.888071537017822
    5. '(bb' → logprob: -6.138071537017822
    6. 'pp' → logprob: -7.763071537017822
    7. '   ' → logprob: -10.013071060180664
    8. ' ' → logprob: -10.138071060180664
    9. 'n' → logprob: -10.263071060180664
    10. '-b' → logprob: -10.388071060180664

Token 52: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.5577775128767826e-06
    2. ')' → logprob: -12.875005722045898
    3. ' [' → logprob: -13.250005722045898
    4. '2' → logprob: -15.125005722045898
    5. '   ' → logprob: -15.375005722045898
    6. '[]' → logprob: -15.875005722045898
    7. '0' → logprob: -16.5000057220459
    8. ' ' → logprob: -16.5000057220459
    9. ' )' → logprob: -16.7500057220459
    10. ')[' → logprob: -17.0000057220459

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004138599149882793
    2. '2' → logprob: -5.504138469696045
    3. ' ' → logprob: -10.004138946533203
    4. '1' → logprob: -11.504138946533203
    5. '[' → logprob: -14.066638946533203
    6. '   ' → logprob: -14.504138946533203
    7. '    
' → logprob: -14.691638946533203
    8. '
' → logprob: -14.816638946533203
    9. '```' → logprob: -14.941638946533203
    10. '  ' → logprob: -15.004138946533203

Token 54: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5407295823097229
    2. '[' → logprob: -1.4157295227050781
    3. ']-' → logprob: -2.290729522705078
    4. '-' → logprob: -3.290729522705078
    5. '],' → logprob: -4.290729522705078
    6. ' -' → logprob: -4.415729522705078
    7. ',' → logprob: -5.540729522705078
    8. '][' → logprob: -5.915729522705078
    9. ')' → logprob: -6.040729522705078
    10. ' ]' → logprob: -7.665729522705078

Token 55: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.010335094295442104
    2. ' p' → logprob: -4.7603349685668945
    3. 'pp' → logprob: -6.5103349685668945
    4. '<|end|>' → logprob: -9.385334968566895
    5. '0' → logprob: -9.885334968566895
    6. 'b' → logprob: -10.885334968566895
    7. ' ' → logprob: -11.510334968566895
    8. ' pp' → logprob: -11.510334968566895
    9. '<|end|>' → logprob: -11.885334968566895
    10. ')' → logprob: -11.885334968566895

Token 56: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020568605395965278
    2. '0' → logprob: -8.500205993652344
    3. '2' → logprob: -13.875205993652344
    4. '[
' → logprob: -14.250205993652344
    5. ' ' → logprob: -15.125205993652344
    6. ' [' → logprob: -15.750205993652344
    7. '   ' → logprob: -16.625205993652344
    8. '```' → logprob: -16.750205993652344
    9. '
' → logprob: -17.625205993652344
    10. '][' → logprob: -18.062705993652344

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.17420256882906e-05
    2. '2' → logprob: -9.750091552734375
    3. ' ' → logprob: -10.375091552734375
    4. '   ' → logprob: -14.500091552734375
    5. '[' → logprob: -14.562591552734375
    6. '  ' → logprob: -15.750091552734375
    7. '۰' → logprob: -15.750091552734375
    8. '```' → logprob: -16.250091552734375
    9. '4' → logprob: -16.687591552734375
    10. '٠' → logprob: -16.937591552734375

Token 58: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10363461077213287
    2. '),' → logprob: -2.3536345958709717
    3. ')' → logprob: -6.603634834289551
    4. '],' → logprob: -7.103634834289551
    5. '),(' → logprob: -7.353634834289551
    6. ',b' → logprob: -8.47863483428955
    7. ' ,' → logprob: -8.47863483428955
    8. '<|end|>' → logprob: -10.35363483428955
    9. ',),' → logprob: -10.47863483428955
    10. ',)' → logprob: -10.60363483428955

Token 59: ' bb' (ID: 32433)
  Prédit: ' bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bb' → logprob: -0.38689494132995605
    2. 'bb' → logprob: -1.136894941329956
    3. 'b' → logprob: -10.886895179748535
    4. ' b' → logprob: -13.511895179748535
    5. ' ' → logprob: -14.261895179748535
    6. '(bb' → logprob: -14.261895179748535
    7. ' ' → logprob: -14.386895179748535
    8. '_bb' → logprob: -14.511895179748535
    9. '.bb' → logprob: -15.136895179748535
    10. '  ' → logprob: -15.761895179748535

Token 60: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.988221684878226e-06
    2. '0' → logprob: -12.000006675720215
    3. '[
' → logprob: -15.250006675720215
    4. '(' → logprob: -15.625006675720215
    5. '<|end|>' → logprob: -15.625006675720215
    6. '1' → logprob: -16.12500762939453
    7. '][' → logprob: -17.50000762939453
    8. '<|end|>' → logprob: -18.00000762939453
    9. 'def' → logprob: -18.50000762939453
    10. '2' → logprob: -18.62500762939453

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1797814816236496
    2. '0' → logprob: -1.804781436920166
    3. '[' → logprob: -10.679781913757324
    4. '   ' → logprob: -11.929781913757324
    5. ' ' → logprob: -12.054781913757324
    6. ']' → logprob: -15.554781913757324
    7. '  ' → logprob: -15.679781913757324
    8. '
' → logprob: -15.992281913757324
    9. '2' → logprob: -16.304780960083008
    10. '(' → logprob: -16.554780960083008

Token 62: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0075480579398572445
    2. ')' → logprob: -6.132547855377197
    3. '-p' → logprob: -6.257547855377197
    4. ' -' → logprob: -6.507547855377197
    5. '])' → logprob: -6.882547855377197
    6. '-)' → logprob: -8.007548332214355
    7. '[' → logprob: -8.632548332214355
    8. ')-' → logprob: -9.132548332214355
    9. '<|end|>' → logprob: -9.132548332214355
    10. ']-' → logprob: -10.257548332214355

Token 63: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.7848862373502925e-05
    2. ' p' → logprob: -10.500027656555176
    3. 'pp' → logprob: -15.625027656555176
    4. '<|end|>' → logprob: -16.125028610229492
    5. ' ' → logprob: -17.000028610229492
    6. '	p' → logprob: -17.750028610229492
    7. '[' → logprob: -18.125028610229492
    8. '<p' → logprob: -18.375028610229492
    9. ')' → logprob: -18.625028610229492
    10. '  ' → logprob: -18.750028610229492

Token 64: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5303905606269836
    2. '[' → logprob: -0.9053905606269836
    3. ')' → logprob: -5.530390739440918
    4. '])' → logprob: -6.030390739440918
    5. '0' → logprob: -7.280390739440918
    6. '-' → logprob: -9.530390739440918
    7. '<|end|>' → logprob: -10.030390739440918
    8. ' ' → logprob: -10.780390739440918
    9. ']' → logprob: -11.780390739440918
    10. '```' → logprob: -11.905390739440918

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004038593906443566
    2. '0' → logprob: -7.875403881072998
    3. ' ' → logprob: -10.87540340423584
    4. '])' → logprob: -13.50040340423584
    5. '3' → logprob: -14.00040340423584
    6. '[' → logprob: -14.37540340423584
    7. '   ' → logprob: -14.75040340423584
    8. ')' → logprob: -15.00040340423584
    9. ']' → logprob: -15.37540340423584
    10. '```' → logprob: -15.75040340423584

Token 66: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ')
' → logprob: -12.500007629394531
    3. ' )' → logprob: -12.500007629394531
    4. '))' → logprob: -15.250007629394531
    5. '   ' → logprob: -15.875007629394531
    6. '})' → logprob: -17.75000762939453
    7. '`)' → logprob: -18.25000762939453
    8. ')

' → logprob: -18.50000762939453
    9. ')`' → logprob: -18.50000762939453
    10. ')}' → logprob: -18.62500762939453

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008106585592031479
    2. ')' → logprob: -5.008106708526611
    3. ',' → logprob: -8.258106231689453
    4. '    ' → logprob: -8.508106231689453
    5. '    
' → logprob: -8.758106231689453
    6. '.' → logprob: -9.633106231689453
    7. ' x' → logprob: -9.758106231689453
    8. 'x' → logprob: -9.758106231689453
    9. 'n' → logprob: -9.883106231689453
    10. 'd' → logprob: -10.133106231689453

Token 68: ' if' (ID: 538)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -1.067220687866211
    2. 'dp' → logprob: -1.567220687866211
    3. '   ' → logprob: -1.942220687866211
    4. 'd' → logprob: -2.317220687866211
    5. ' dot' → logprob: -3.317220687866211
    6. 'c' → logprob: -3.317220687866211
    7. 's' → logprob: -3.442220687866211
    8. 'x' → logprob: -3.692220687866211
    9. ' dp' → logprob: -4.192220687866211
    10. 'ab' → logprob: -4.317220687866211

Token 69: ' dot' (ID: 16579)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.36956697702407837
    2. ' a' → logprob: -1.6195669174194336
    3. '(a' → logprob: -2.3695669174194336
    4. ' (' → logprob: -4.244566917419434
    5. 'b' → logprob: -6.994566917419434
    6. ' b' → logprob: -7.619566917419434
    7. ' ' → logprob: -7.744566917419434
    8. '(b' → logprob: -8.119566917419434
    9. '(p' → logprob: -8.244566917419434
    10. '(' → logprob: -8.369566917419434

Token 70: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.693708062171936
    2. '(a' → logprob: -0.693708062171936
    3. ')' → logprob: -8.193708419799805
    4. '(b' → logprob: -8.318708419799805
    5. '(
' → logprob: -11.068708419799805
    6. ' (' → logprob: -12.068708419799805
    7. '((' → logprob: -12.193708419799805
    8. '('' → logprob: -12.943708419799805
    9. '(A' → logprob: -13.318708419799805
    10. '(

' → logprob: -13.443708419799805

Token 71: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032414051238447428
    2. ',b' → logprob: -5.878241539001465
    3. ' ,' → logprob: -7.878241539001465
    4. ',a' → logprob: -9.878241539001465
    5. ',p' → logprob: -13.378241539001465
    6. ' b' → logprob: -13.378241539001465
    7. ')' → logprob: -13.878241539001465
    8. ',n' → logprob: -14.128241539001465
    9. ',c' → logprob: -15.628241539001465
    10. '   ' → logprob: -15.878241539001465

Token 72: ')<' (ID: 62287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038998194504529238
    2. ' )' → logprob: -5.753900051116943
    3. ')<' → logprob: -8.253899574279785
    4. ')>=' → logprob: -8.378899574279785
    5. ')>' → logprob: -9.253899574279785
    6. ')<=' → logprob: -9.503899574279785
    7. ')==' → logprob: -11.378899574279785
    8. ' <=' → logprob: -11.503899574279785
    9. ' <' → logprob: -11.503899574279785
    10. ' >=' → logprob: -11.753899574279785

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0061300029046833515
    2. ' ' → logprob: -5.131130218505859
    3. '=' → logprob: -9.00613021850586
    4. '1' → logprob: -9.50613021850586
    5. 'a' → logprob: -13.00613021850586
    6. 'n' → logprob: -14.88113021850586
    7. '  ' → logprob: -15.38113021850586
    8. '(' → logprob: -15.63113021850586
    9. '-' → logprob: -15.63113021850586
    10. ' =' → logprob: -15.75613021850586

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10872569680213928
    2. ' or' → logprob: -2.3587257862091064
    3. ':return' → logprob: -5.358725547790527
    4. '):' → logprob: -6.858725547790527
    5. ')' → logprob: -7.108725547790527
    6. ' :' → logprob: -7.608725547790527
    7. ' and' → logprob: -8.108725547790527
    8. '   ' → logprob: -8.108725547790527
    9. ':
' → logprob: -8.233725547790527
    10. ' ' → logprob: -8.608725547790527

Token 75: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09272995591163635
    2. ' return' → logprob: -3.4677300453186035
    3. ' or' → logprob: -3.8427300453186035
    4. '=' → logprob: -4.9677300453186035
    5. '    ' → logprob: -5.2177300453186035
    6. '0' → logprob: -5.3427300453186035
    7. ' 
' → logprob: -5.7177300453186035
    8. 'return' → logprob: -5.7177300453186035
    9. '<|end|>' → logprob: -6.2177300453186035
    10. '1' → logprob: -6.8427300453186035

Token 76: ' a' (ID: 261)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.25439751148223877
    2. 'return' → logprob: -1.8793975114822388
    3. ' ans' → logprob: -3.629397392272949
    4. '       ' → logprob: -3.879397392272949
    5. '    ' → logprob: -5.004397392272949
    6. ' ' → logprob: -5.254397392272949
    7. '        ' → logprob: -5.504397392272949
    8. 'ans' → logprob: -5.754397392272949
    9. ' 
' → logprob: -6.629397392272949
    10. '   ' → logprob: -7.004397392272949

Token 77: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8041151762008667
    2. '[' → logprob: -1.8041151762008667
    3. 'return' → logprob: -1.8041151762008667
    4. '<|end|>' → logprob: -2.6791152954101562
    5. ' return' → logprob: -3.0541152954101562
    6. '=' → logprob: -3.9291152954101562
    7. '.' → logprob: -4.054115295410156
    8. ' =' → logprob: -4.429115295410156
    9. ']' → logprob: -4.679115295410156
    10. '<|end|>' → logprob: -5.054115295410156

Token 78: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0070461672730743885
    2. '(' → logprob: -5.507046222686768
    3. ' (-' → logprob: -6.257046222686768
    4. '-b' → logprob: -7.507046222686768
    5. 'b' → logprob: -8.25704574584961
    6. ' (' → logprob: -10.00704574584961
    7. 'a' → logprob: -10.13204574584961
    8. '(b' → logprob: -10.25704574584961
    9. ' -' → logprob: -10.50704574584961
    10. '-p' → logprob: -10.63204574584961

Token 79: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004307884373702109
    2. ' a' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.250431060791016
    4. '	a' → logprob: -17.375431060791016
    5. ')a' → logprob: -17.625431060791016
    6. 'а' → logprob: -18.000431060791016
    7. ')' → logprob: -18.000431060791016
    8. ' ' → logprob: -18.125431060791016
    9. '>a' → logprob: -18.875431060791016
    10. ' а' → logprob: -19.625431060791016

Token 80: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.392202976712724e-06
    2. '0' → logprob: -12.125006675720215
    3. 'x' → logprob: -14.125006675720215
    4. ')' → logprob: -15.875006675720215
    5. 'a' → logprob: -17.8750057220459
    6. ' [' → logprob: -18.3750057220459
    7. ' ' → logprob: -18.3750057220459
    8. '[
' → logprob: -18.3750057220459
    9. ',' → logprob: -19.0000057220459
    10. '1' → logprob: -19.2500057220459

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -17.375
    4. '1' → logprob: -17.5
    5. '۰' → logprob: -18.125
    6. '０' → logprob: -18.8125
    7. 'x' → logprob: -18.875
    8. '०' → logprob: -19.4375
    9. '০' → logprob: -19.5625
    10. '٠' → logprob: -19.5625

Token 82: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002661981387063861
    2. ',-' → logprob: -6.252662181854248
    3. ',a' → logprob: -7.377662181854248
    4. ' ,' → logprob: -10.00266170501709
    5. '),' → logprob: -10.62766170501709
    6. ',
' → logprob: -11.00266170501709
    7. ',#' → logprob: -12.25266170501709
    8. '<|end|>' → logprob: -12.37766170501709
    9. '],' → logprob: -13.12766170501709
    10. ',),' → logprob: -13.50266170501709

Token 83: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25201377272605896
    2. '-a' → logprob: -1.5020138025283813
    3. '-' → logprob: -9.62701416015625
    4. '-A' → logprob: -11.62701416015625
    5. '-ai' → logprob: -13.00201416015625
    6. '-а' → logprob: -13.12701416015625
    7. '-au' → logprob: -13.37701416015625
    8. '   ' → logprob: -13.75201416015625
    9. '-aa' → logprob: -14.25201416015625
    10. ' ' → logprob: -14.50201416015625

Token 84: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.896309739408025e-07
    2. ' a' → logprob: -14.250000953674316
    3. '<|end|>' → logprob: -17.0
    4. '-a' → logprob: -17.5
    5. '   ' → logprob: -18.75
    6. '_a' → logprob: -18.875
    7. '	a' → logprob: -19.5
    8. '<|end|>' → logprob: -20.625
    9. 'а' → logprob: -20.75
    10. '>a' → logprob: -20.75

Token 85: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9862216504407115e-05
    2. '1' → logprob: -10.875020027160645
    3. '0' → logprob: -15.000020027160645
    4. '[
' → logprob: -15.125020027160645
    5. ' [' → logprob: -16.875019073486328
    6. '<|end|>' → logprob: -16.875019073486328
    7. '-' → logprob: -17.875019073486328
    8. ',' → logprob: -18.000019073486328
    9. '```' → logprob: -18.000019073486328
    10. '   ' → logprob: -18.000019073486328

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6312321753939614e-05
    2. '[' → logprob: -11.000036239624023
    3. '0' → logprob: -11.250036239624023
    4. ' ' → logprob: -12.125036239624023
    5. '   ' → logprob: -14.500036239624023
    6. '-' → logprob: -15.625036239624023
    7. ']' → logprob: -15.625036239624023
    8. '```' → logprob: -15.875036239624023
    9. '  ' → logprob: -16.875036239624023
    10. '{' → logprob: -18.000036239624023

Token 87: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.735893965815194e-05
    2. ')
' → logprob: -11.125017166137695
    3. '<|end|>' → logprob: -14.000017166137695
    4. ')

' → logprob: -14.375017166137695
    5. ' )' → logprob: -14.625017166137695
    6. '),' → logprob: -15.375017166137695
    7. ')#' → logprob: -16.250017166137695
    8. '))' → logprob: -16.750017166137695
    9. '   ' → logprob: -16.875017166137695
    10. '}' → logprob: -17.000017166137695

Token 88: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4108911454677582
    2. '   ' → logprob: -1.6608911752700806
    3. ')' → logprob: -2.535891056060791
    4. ',' → logprob: -3.910891056060791
    5. ' )' → logprob: -4.660891056060791
    6. 'n' → logprob: -4.910891056060791
    7. ' 
' → logprob: -5.160891056060791
    8. '    ' → logprob: -5.535891056060791
    9. '.' → logprob: -5.785891056060791
    10. '  ' → logprob: -5.910891056060791

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13619263470172882
    2. '=' → logprob: -2.136192560195923
    3. '_' → logprob: -5.261192798614502
    4. 'o' → logprob: -6.261192798614502
    5. ',' → logprob: -8.011192321777344
    6. 'c' → logprob: -8.261192321777344
    7. ' ' → logprob: -8.511192321777344
    8. '   ' → logprob: -8.511192321777344
    9. '=[]' → logprob: -9.136192321777344
    10. '1' → logprob: -9.511192321777344

Token 91: ' dot' (ID: 16579)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.005568602122366428
    2. '(a' → logprob: -6.880568504333496
    3. '(b' → logprob: -7.005568504333496
    4. '(' → logprob: -7.130568504333496
    5. ' b' → logprob: -7.380568504333496
    6. '(p' → logprob: -7.505568504333496
    7. ' (
' → logprob: -8.255568504333496
    8. ' ((' → logprob: -8.630568504333496
    9. ' a' → logprob: -8.755568504333496
    10. ' p' → logprob: -8.880568504333496

Token 92: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.07068102806806564
    2. '(b' → logprob: -2.695681095123291
    3. '(' → logprob: -7.945681095123291
    4. '(c' → logprob: -8.320680618286133
    5. '<|end|>' → logprob: -9.445680618286133
    6. ' (' → logprob: -9.945680618286133
    7. 'a' → logprob: -11.445680618286133
    8. ' a' → logprob: -13.320680618286133
    9. 'b' → logprob: -13.945680618286133
    10. ' b' → logprob: -14.195680618286133

Token 93: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6424990296363831
    2. ',b' → logprob: -0.7674990296363831
    3. ' ,' → logprob: -4.642498970031738
    4. ' b' → logprob: -9.392498970031738
    5. 'b' → logprob: -9.892498970031738
    6. ',c' → logprob: -10.642498970031738
    7. '(b' → logprob: -10.767498970031738
    8. ')' → logprob: -11.767498970031738
    9. '(' → logprob: -12.017498970031738
    10. ',a' → logprob: -12.517498970031738

Token 94: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000919796759262681
    2. ' )' → logprob: -7.375919818878174
    3. ')>' → logprob: -8.750919342041016
    4. ')/' → logprob: -9.750919342041016
    5. ')>=' → logprob: -10.625919342041016
    6. ')<' → logprob: -11.625919342041016
    7. ')
' → logprob: -11.875919342041016
    8. ')==' → logprob: -12.375919342041016
    9. ')<=' → logprob: -12.500919342041016
    10. '<|end|>' → logprob: -12.625919342041016

Token 95: 'length' (ID: 7914)
  Prédit: '(dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dot' → logprob: -0.06977657228708267
    2. ' (' → logprob: -3.5697765350341797
    3. 'dot' → logprob: -3.8197765350341797
    4. ' dot' → logprob: -5.31977653503418
    5. '((' → logprob: -5.56977653503418
    6. '(a' → logprob: -5.69477653503418
    7. '(max' → logprob: -5.81977653503418
    8. '(' → logprob: -7.44477653503418
    9. '(abs' → logprob: -7.69477653503418
    10. '(sum' → logprob: -7.69477653503418

Token 96: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0005756704485975206
    2. '(' → logprob: -7.500575542449951
    3. ' (' → logprob: -10.75057601928711
    4. 'a' → logprob: -15.12557601928711
    5. '<|end|>' → logprob: -15.37557601928711
    6. '(x' → logprob: -15.87557601928711
    7. '(
' → logprob: -16.25057601928711
    8. 's' → logprob: -16.75057601928711
    9. ' ' → logprob: -16.75057601928711
    10. '(A' → logprob: -16.87557601928711

Token 97: ')**' (ID: 80066)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02495906688272953
    2. ')**' → logprob: -3.899959087371826
    3. '())' → logprob: -6.024959087371826
    4. '**' → logprob: -6.774959087371826
    5. '()' → logprob: -7.399959087371826
    6. ' )' → logprob: -9.399958610534668
    7. ' ' → logprob: -10.024958610534668
    8. '(' → logprob: -10.524958610534668
    9. '2' → logprob: -10.649958610534668
    10. '**)' → logprob: -11.149958610534668

Token 98: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029685118352063
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.250296592712402
    4. '  ' → logprob: -15.750296592712402
    5. '²' → logprob: -16.37529754638672
    6. '1' → logprob: -16.50029754638672
    7. '```' → logprob: -17.12529754638672
    8. '    ' → logprob: -17.56279754638672
    9. '۲' → logprob: -17.75029754638672
    10. '(' → logprob: -17.87529754638672

Token 99: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5335795283317566
    2. ')' → logprob: -0.9085795283317566
    3. ',' → logprob: -5.783579349517822
    4. ')
' → logprob: -6.658579349517822
    5. '    
' → logprob: -6.908579349517822
    6. '<|end|>' → logprob: -6.908579349517822
    7. '
' → logprob: -7.533579349517822
    8. '*' → logprob: -7.533579349517822
    9. ' ' → logprob: -7.658579349517822
    10. ']' → logprob: -7.783579349517822

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08485053479671478
    2. ')' → logprob: -2.834850549697876
    3. '<|end|>' → logprob: -5.209850311279297
    4. ' ' → logprob: -5.334850311279297
    5. ' )' → logprob: -5.584850311279297
    6. '       ' → logprob: -6.209850311279297
    7. ' ]' → logprob: -6.209850311279297
    8. '    ' → logprob: -6.709850311279297
    9. ']' → logprob: -7.084850311279297
    10. '    
' → logprob: -7.459850311279297

Token 101: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05324358493089676
    2. ')' → logprob: -4.053243637084961
    3. ' ]' → logprob: -4.303243637084961
    4. ' ' → logprob: -5.178243637084961
    5. ']' → logprob: -5.678243637084961
    6. ' )' → logprob: -5.803243637084961
    7. ' if' → logprob: -6.303243637084961
    8. '    ' → logprob: -7.053243637084961
    9. '[' → logprob: -7.428243637084961
    10. ' c' → logprob: -7.553243637084961

Token 102: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2527170479297638
    2. '.' → logprob: -1.5027170181274414
    3. ' .' → logprob: -7.752717018127441
    4. ' +=' → logprob: -8.752717018127441
    5. '.extend' → logprob: -9.752717018127441
    6. '.app' → logprob: -9.877717018127441
    7. '+' → logprob: -11.002717018127441
    8. '.=' → logprob: -11.252717018127441
    9. ' =' → logprob: -11.377717018127441
    10. '=' → logprob: -11.627717018127441

Token 103: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.009992003440857
    2. ' [' → logprob: -1.259992003440857
    3. '[b' → logprob: -1.259992003440857
    4. '[c' → logprob: -3.5099921226501465
    5. '[p' → logprob: -4.0099921226501465
    6. '[a' → logprob: -4.5099921226501465
    7. '[int' → logprob: -5.1349921226501465
    8. '[(' → logprob: -6.2599921226501465
    9. '[f' → logprob: -7.5099921226501465
    10. ' [(' → logprob: -8.509991645812988

Token 104: 'c' (ID: 66)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6591051816940308
    2. 'c' → logprob: -1.4091051816940308
    3. 'bb' → logprob: -2.9091053009033203
    4. ' p' → logprob: -3.1591053009033203
    5. 'int' → logprob: -3.2841053009033203
    6. 'a' → logprob: -3.4091053009033203
    7. 'round' → logprob: -3.5341053009033203
    8. ' c' → logprob: -4.40910530090332
    9. 'b' → logprob: -5.40910530090332
    10. 'pp' → logprob: -5.53410530090332

Token 105: '*v' (ID: 130438)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17362987995147705
    2. ',' → logprob: -2.1736297607421875
    3. ' *' → logprob: -3.9236297607421875
    4. '*' → logprob: -4.6736297607421875
    5. ' ]' → logprob: -4.6736297607421875
    6. '*p' → logprob: -6.2986297607421875
    7. '*a' → logprob: -6.5486297607421875
    8. ')' → logprob: -6.6736297607421875
    9. ' ,' → logprob: -6.9236297607421875
    10. '*b' → logprob: -7.7986297607421875

Token 106: '+p' (ID: 150971)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02745532989501953
    2. 'for' → logprob: -3.7774553298950195
    3. '[' → logprob: -6.6524553298950195
    4. '(' → logprob: -7.9024553298950195
    5. ']' → logprob: -8.02745532989502
    6. 'ectors' → logprob: -8.27745532989502
    7. 'al' → logprob: -8.40245532989502
    8. '*' → logprob: -8.40245532989502
    9. 'ector' → logprob: -8.65245532989502
    10. ' ' → logprob: -9.02745532989502

Token 107: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01693795621395111
    2. 'p' → logprob: -4.266937732696533
    3. '[i' → logprob: -7.016937732696533
    4. '0' → logprob: -7.141937732696533
    5. '[p' → logprob: -7.266937732696533
    6. 'v' → logprob: -10.016938209533691
    7. ']' → logprob: -10.266938209533691
    8. '[v' → logprob: -10.266938209533691
    9. '(' → logprob: -10.391938209533691
    10. '```' → logprob: -10.516938209533691

Token 108: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.058478303253650665
    2. 'nt' → logprob: -3.183478355407715
    3. 't' → logprob: -4.808478355407715
    4. 'nd' → logprob: -5.683478355407715
    5. 'dx' → logprob: -6.183478355407715
    6. ']]' → logprob: -7.683478355407715
    7. 'd' → logprob: -7.808478355407715
    8. 'x' → logprob: -8.308478355407715
    9. '*' → logprob: -8.933478355407715
    10. ' ' → logprob: -9.558478355407715

Token 109: ' for' (ID: 395)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2210017293691635
    2. '[i' → logprob: -2.221001625061035
    3. ' i' → logprob: -3.346001625061035
    4. '*i' → logprob: -3.846001625061035
    5. ' for' → logprob: -4.221001625061035
    6. ']' → logprob: -4.846001625061035
    7. '(i' → logprob: -5.471001625061035
    8. 'for' → logprob: -5.846001625061035
    9. ' ' → logprob: -6.596001625061035
    10. '
' → logprob: -7.596001625061035

Token 110: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22543831169605255
    2. ' i' → logprob: -1.6004383563995361
    3. ' ' → logprob: -11.600438117980957
    4. 'v' → logprob: -12.350438117980957
    5. '	i' → logprob: -12.600438117980957
    6. ' ' → logprob: -12.850438117980957
    7. '  ' → logprob: -13.100438117980957
    8. ' v' → logprob: -13.725438117980957
    9. '(i' → logprob: -13.725438117980957
    10. '   ' → logprob: -13.975438117980957

Token 111: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007132216356694698
    2. 'in' → logprob: -5.132132053375244
    3. ',' → logprob: -7.007132053375244
    4. ',v' → logprob: -8.382132530212402
    5. ',i' → logprob: -10.132132530212402
    6. ' ' → logprob: -11.007132530212402
    7. ' ,' → logprob: -12.257132530212402
    8. 'i' → logprob: -13.382132530212402
    9. ' i' → logprob: -13.507132530212402
    10. '  ' → logprob: -13.882132530212402

Token 112: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12693965435028076
    2. ' v' → logprob: -2.1269397735595703
    3. '	v' → logprob: -12.00193977355957
    4. '(v' → logprob: -12.62693977355957
    5. ' ' → logprob: -13.75193977355957
    6. ' ' → logprob: -14.75193977355957
    7. ' (' → logprob: -15.25193977355957
    8. '  ' → logprob: -16.12693977355957
    9. '(' → logprob: -16.25193977355957
    10. ',v' → logprob: -16.37693977355957

Token 113: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07889914512634277
    2. ' in' → logprob: -2.5788991451263428
    3. ',' → logprob: -12.078899383544922
    4. ' ' → logprob: -13.078899383544922
    5. '	in' → logprob: -14.953899383544922
    6. '<|end|>' → logprob: -15.078899383544922
    7. 'In' → logprob: -15.578899383544922
    8. ',in' → logprob: -15.703899383544922
    9. 'n' → logprob: -16.078899383544922
    10. '_in' → logprob: -16.203899383544922

Token 114: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.07889573276042938
    2. ' enumerate' → logprob: -2.5788958072662354
    3. 'zip' → logprob: -12.703895568847656
    4. 'enum' → logprob: -13.828895568847656
    5. '(' → logprob: -14.203895568847656
    6. '```' → logprob: -14.203895568847656
    7. ' zip' → logprob: -15.828895568847656
    8. 'en' → logprob: -16.203895568847656
    9. '[(' → logprob: -16.703895568847656
    10. '
' → logprob: -17.203895568847656

Token 115: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06806544959545135
    2. ' a' → logprob: -2.8180654048919678
    3. '(a' → logprob: -5.318065643310547
    4. 'b' → logprob: -7.068065643310547
    5. ' b' → logprob: -9.068065643310547
    6. ' (' → logprob: -9.318065643310547
    7. '(' → logprob: -9.818065643310547
    8. '(b' → logprob: -11.568065643310547
    9. 'p' → logprob: -11.693065643310547
    10. '[a' → logprob: -11.818065643310547

Token 116: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25249138474464417
    2. ')]' → logprob: -1.5024913549423218
    3. ']]' → logprob: -7.877491474151611
    4. ' ]' → logprob: -10.127490997314453
    5. ')' → logprob: -10.252490997314453
    6. '}]' → logprob: -10.502490997314453
    7. ']}' → logprob: -10.877490997314453
    8. '>]' → logprob: -11.127490997314453
    9. '])' → logprob: -11.627490997314453
    10. '])]' → logprob: -11.877490997314453

Token 117: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8332345485687256
    2. '
' → logprob: -1.2082345485687256
    3. '	return' → logprob: -2.4582345485687256
    4. ')' → logprob: -3.0832345485687256
    5. 'return' → logprob: -3.0832345485687256
    6. ' return' → logprob: -3.3332345485687256
    7. '<|end|>' → logprob: -3.9582345485687256
    8. '[' → logprob: -4.458234786987305
    9. '    
' → logprob: -4.958234786987305
    10. ' ' → logprob: -5.583234786987305

Token 118: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.143317312002182
    2. 'return' → logprob: -2.768317222595215
    3. '   ' → logprob: -3.143317222595215
    4. ' return' → logprob: -4.143317222595215
    5. '	return' → logprob: -5.518317222595215
    6. ')' → logprob: -5.643317222595215
    7. ')
' → logprob: -6.393317222595215
    8. '
' → logprob: -7.768317222595215
    9. '\n' → logprob: -7.893317222595215
    10. '    
' → logprob: -8.018317222595215

Token 119: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2276657372713089
    2. ')' → logprob: -1.8526657819747925
    3. '   ' → logprob: -4.102665901184082
    4. '<|end|>' → logprob: -4.602665901184082
    5. 'return' (adapté à ' return') → logprob: -4.727665901184082
    6. '\n' → logprob: -6.227665901184082
    7. ']' → logprob: -6.227665901184082
    8. ' return' → logprob: -6.477665901184082
    9. ':return' → logprob: -6.727665901184082
    10. ')
' → logprob: -6.852665901184082

Token 120: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00135499844327569
    2. ' ans' → logprob: -6.626355171203613
    3. '(ans' → logprob: -11.126355171203613
    4. 'tuple' → logprob: -11.251355171203613
    5. '[' → logprob: -14.251355171203613
    6. '	ans' → logprob: -14.751355171203613
    7. ' tuple' → logprob: -16.126354217529297
    8. ' ' → logprob: -16.251354217529297
    9. 'list' → logprob: -17.001354217529297
    10. 'a' → logprob: -17.126354217529297

Token 121: '
    
' (ID: 15698)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.859469473361969
    2. '[' → logprob: -1.7344694137573242
    3. ' ' → logprob: -1.8594694137573242
    4. '(' → logprob: -2.484469413757324
    5. '.' → logprob: -2.984469413757324
    6. '<|end|>' → logprob: -3.609469413757324
    7. ':' → logprob: -3.859469413757324
    8. 'def' → logprob: -3.859469413757324
    9. ',' → logprob: -4.234469413757324
    10. '
' → logprob: -4.984469413757324

Token 122: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8047860264778137
    2. '[' → logprob: -0.8047860264778137
    3. ')' → logprob: -3.054785966873169
    4. ' ' → logprob: -3.554785966873169
    5. '.' → logprob: -3.804785966873169
    6. ']' → logprob: -6.054786205291748
    7. ',' → logprob: -6.679786205291748
    8. ':' → logprob: -6.804786205291748
    9. '0' → logprob: -7.179786205291748
    10. '#' → logprob: -8.30478572845459

Token 123: ' length' (ID: 5517)
  Prédit: ' dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dot' → logprob: -0.01688310317695141
    2. ' length' → logprob: -4.39188289642334
    3. 'dot' → logprob: -5.51688289642334
    4. ' project' → logprob: -9.01688289642334
    5. 'length' → logprob: -9.39188289642334
    6. ' ' → logprob: -9.64188289642334
    7. ' vector' → logprob: -11.14188289642334
    8. ' cross' → logprob: -11.95438289642334
    9. '_dot' → logprob: -12.39188289642334
    10. ' main' → logprob: -12.57938289642334

Token 124: '(vector' (ID: 43296)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.025971639901399612
    2. '(x' → logprob: -4.525971412658691
    3. '(v' → logprob: -4.650971412658691
    4. '(' → logprob: -5.525971412658691
    5. '(s' → logprob: -7.900971412658691
    6. '(t' → logprob: -8.400971412658691
    7. ' (' → logprob: -8.400971412658691
    8. '(vec' → logprob: -9.025971412658691
    9. '(vector' → logprob: -9.400971412658691
    10. '(p' → logprob: -9.525971412658691

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022755831480026245
    2. '):
' → logprob: -4.3977556228637695
    3. ' ):' → logprob: -5.5227556228637695
    4. '(vector' → logprob: -5.6477556228637695
    5. ')' → logprob: -6.1477556228637695
    6. '(' → logprob: -8.77275562286377
    7. '):

' → logprob: -9.27275562286377
    8. 'vector' → logprob: -9.52275562286377
    9. ' vector' → logprob: -9.89775562286377
    10. '(v' → logprob: -10.27275562286377

Token 126: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9130680561065674
    2. 'import' → logprob: -1.5380680561065674
    3. '(vector' → logprob: -1.7880680561065674
    4. '   ' → logprob: -2.6630680561065674
    5. ' return' → logprob: -2.9130680561065674
    6. ' (' → logprob: -3.0380680561065674
    7. ' vector' → logprob: -3.7880680561065674
    8. 'vector' → logprob: -4.163067817687988
    9. 'sum' → logprob: -6.163067817687988
    10. '(sum' → logprob: -6.288067817687988

Token 127: ' ans' (ID: 3345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23451057076454163
    2. 'import' → logprob: -1.8595105409622192
    3. ' return' → logprob: -3.609510660171509
    4. 'vector' → logprob: -4.73451042175293
    5. '(vector' → logprob: -4.85951042175293
    6. '   ' → logprob: -5.48451042175293
    7. 'sum' → logprob: -5.98451042175293
    8. ' vector' → logprob: -6.48451042175293
    9. '(sum' → logprob: -7.85951042175293
    10. ' (' → logprob: -7.85951042175293

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3487476110458374
    2. '=' → logprob: -1.2237476110458374
    3. '=sum' → logprob: -8.223747253417969
    4. '=lambda' → logprob: -11.223747253417969
    5. ' ' → logprob: -12.348747253417969
    6. '(' → logprob: -13.098747253417969
    7. '=(' → logprob: -13.348747253417969
    8. ' =(' → logprob: -13.348747253417969
    9. '=s' → logprob: -13.473747253417969
    10. ')' → logprob: -13.473747253417969

Token 129: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.618920624256134
    2. 'sum' → logprob: -1.3689205646514893
    3. '(sum' → logprob: -2.6189205646514893
    4. '(vector' → logprob: -2.9939205646514893
    5. '(' → logprob: -3.4939205646514893
    6. ' sum' → logprob: -3.9939205646514893
    7. ' (' → logprob: -4.493920803070068
    8. ' ' → logprob: -4.493920803070068
    9. 'vector' → logprob: -4.868920803070068
    10. ' vector' → logprob: -5.368920803070068

Token 130: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5707262754440308
    2. '(vector' → logprob: -1.3207262754440308
    3. '(sum' → logprob: -2.6957263946533203
    4. '0' → logprob: -3.0707263946533203
    5. 'vector' → logprob: -3.3207263946533203
    6. '(' → logprob: -4.32072639465332
    7. ' sum' → logprob: -6.07072639465332
    8. ' vector' → logprob: -6.69572639465332
    9. ' (' → logprob: -7.44572639465332
    10. ' ' → logprob: -8.44572639465332

Token 131: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001930301426909864
    2. ' for' → logprob: -6.251930236816406
    3. 'import' → logprob: -14.001930236816406
    4. '
' → logprob: -14.251930236816406
    5. '	for' → logprob: -15.876930236816406
    6. '0' → logprob: -17.376930236816406
    7. ' ' → logprob: -18.126930236816406
    8. '   ' → logprob: -18.376930236816406
    9. 'from' → logprob: -18.751930236816406
    10. '**' → logprob: -19.001930236816406

Token 134: ' i' (ID: 575)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5160561800003052
    2. 'i' → logprob: -1.7660561800003052
    3. ' v' → logprob: -2.0160560607910156
    4. ' i' → logprob: -3.0160560607910156
    5. 'x' → logprob: -3.3910560607910156
    6. ' x' → logprob: -5.266056060791016
    7. 'value' → logprob: -6.016056060791016
    8. 'component' → logprob: -6.141056060791016
    9. 'element' → logprob: -7.141056060791016
    10. 'el' → logprob: -7.141056060791016

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012539439834654331
    2. 'in' → logprob: -4.387539386749268
    3. ' ' → logprob: -10.887539863586426
    4. '  ' → logprob: -12.512539863586426
    5. 'v' → logprob: -13.262539863586426
    6. ' v' → logprob: -13.762539863586426
    7. ',' → logprob: -13.762539863586426
    8. '   ' → logprob: -14.012539863586426
    9. 'vector' → logprob: -14.387539863586426
    10. ',v' → logprob: -14.762539863586426

Token 136: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.1628074049949646
    2. ' vector' → logprob: -1.9128074645996094
    3. 'range' → logprob: -6.537807464599609
    4. ' range' → logprob: -6.787807464599609
    5. '	vector' → logprob: -13.16280746459961
    6. ' ' → logprob: -13.66280746459961
    7. '   ' → logprob: -14.41280746459961
    8. '  ' → logprob: -14.78780746459961
    9. '(vector' → logprob: -15.03780746459961
    10. '<vector' → logprob: -16.28780746459961

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036409306339919567
    2. ':
' → logprob: -5.628641128540039
    3. '**' → logprob: -11.003641128540039
    4. '<|end|>' → logprob: -12.003641128540039
    5. ':**' → logprob: -12.628641128540039
    6. ' :' → logprob: -12.628641128540039
    7. '   ' → logprob: -13.128641128540039
    8. '):' → logprob: -13.253641128540039
    9. '<|end|>' → logprob: -13.378641128540039
    10. ':

' → logprob: -13.378641128540039

Token 138: '       ' (ID: 309)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4098348021507263
    2. 'ans' → logprob: -1.409834861755371
    3. '   ' → logprob: -2.534834861755371
    4. '	ans' → logprob: -4.409834861755371
    5. '
' → logprob: -8.034834861755371
    6. '       ' → logprob: -9.284834861755371
    7. '(ans' → logprob: -9.659834861755371
    8. '    
' → logprob: -10.659834861755371
    9. '  ' → logprob: -10.784834861755371
    10. ' ' → logprob: -11.159834861755371

Token 139: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.4743587076663971
    2. ' ans' → logprob: -0.9743586778640747
    3. '	ans' → logprob: -8.349358558654785
    4. '   ' → logprob: -10.599358558654785
    5. '_ans' → logprob: -11.849358558654785
    6. '(ans' → logprob: -12.474358558654785
    7. '
' → logprob: -12.724358558654785
    8. 'i' → logprob: -13.224358558654785
    9. ' i' → logprob: -13.724358558654785
    10. '       ' → logprob: -14.224358558654785

Token 140: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0206901952624321
    2. ' +=' → logprob: -3.8956902027130127
    3. '+=(' → logprob: -9.270689964294434
    4. '+' → logprob: -10.770689964294434
    5. ']+=' → logprob: -11.020689964294434
    6. '=' → logprob: -12.020689964294434
    7. '+='' → logprob: -12.395689964294434
    8. '+="' → logprob: -12.645689964294434
    9. '   ' → logprob: -13.895689964294434
    10. '**' → logprob: -14.270689964294434

Token 141: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10021605342626572
    2. ' i' → logprob: -2.3502161502838135
    3. '   ' → logprob: -11.725215911865234
    4. ' ' → logprob: -13.850215911865234
    5. '  ' → logprob: -15.475215911865234
    6. '	i' → logprob: -15.725215911865234
    7. '(i' → logprob: -17.350215911865234
    8. ' ' → logprob: -18.600215911865234
    9. '    ' → logprob: -19.100215911865234
    10. '*i' → logprob: -19.725215911865234

Token 142: '**' (ID: 410)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.5760679841041565
    2. '**' → logprob: -0.8260679841041565
    3. '*' → logprob: -9.076067924499512
    4. ' **' → logprob: -11.701067924499512
    5. ' *' → logprob: -12.076067924499512
    6. 'i' → logprob: -17.576068878173828
    7. '2' → logprob: -17.701068878173828
    8. '***' → logprob: -17.701068878173828
    9. '[i' → logprob: -17.826068878173828
    10. ' ' → logprob: -17.951068878173828

Token 143: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -18.375085830688477
    4. '۲' → logprob: -18.500085830688477
    5. '  ' → logprob: -18.625085830688477
    6. '²' → logprob: -18.875085830688477
    7. '```' → logprob: -19.250085830688477
    8. ' ' → logprob: -19.250085830688477
    9. '
' → logprob: -19.875085830688477
    10. '=' → logprob: -20.312585830688477

Token 144: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025901712477207184
    2. '
' → logprob: -4.150901794433594
    3. ' return' → logprob: -4.775901794433594
    4. ' ' → logprob: -7.775901794433594
    5. 'return' → logprob: -7.775901794433594
    6. '	return' → logprob: -8.400901794433594
    7. ',' → logprob: -9.025901794433594
    8. '    
' → logprob: -9.900901794433594
    9. ' 
' → logprob: -10.150901794433594
    10. '<|end|>' → logprob: -10.525901794433594

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03375070169568062
    2. 'return' → logprob: -4.033750534057617
    3. ' return' → logprob: -4.783750534057617
    4. '	return' → logprob: -5.783750534057617
    5. 'import' → logprob: -6.158750534057617
    6. ' ' → logprob: -6.408750534057617
    7. '
' → logprob: -8.908750534057617
    8. '    
' → logprob: -10.033750534057617
    9. '  
' → logprob: -10.783750534057617
    10. '   ' → logprob: -11.408750534057617

Token 146: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5993980765342712
    2. 'return' (adapté à ' return') → logprob: -1.349398136138916
    3. '   ' → logprob: -1.724398136138916
    4. 'import' → logprob: -4.474398136138916
    5. '	return' → logprob: -7.224398136138916
    6. ' ' → logprob: -7.849398136138916
    7. ' import' → logprob: -8.099397659301758
    8. '
' → logprob: -8.724397659301758
    9. ' ans' → logprob: -9.224397659301758
    10. 'ans' → logprob: -9.849397659301758

Token 147: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.003651622449979186
    2. ' ans' → logprob: -6.0036516189575195
    3. '(ans' → logprob: -6.7536516189575195
    4. '	ans' → logprob: -12.25365161895752
    5. 'int' → logprob: -12.62865161895752
    6. '_ans' → logprob: -14.87865161895752
    7. 'len' → logprob: -16.753652572631836
    8. 'abs' → logprob: -17.003652572631836
    9. 'sqrt' → logprob: -17.253652572631836
    10. 'import' → logprob: -18.253652572631836

Token 148: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5257167220115662
    2. '0' → logprob: -0.9007167220115662
    3. '*' → logprob: -6.525716781616211
    4. '1' → logprob: -7.650716781616211
    5. '.' → logprob: -7.900716781616211
    6. '(' → logprob: -9.400716781616211
    7. ' ' → logprob: -10.275716781616211
    8. '½' → logprob: -10.275716781616211
    9. '^' → logprob: -10.400716781616211
    10. ' **' → logprob: -11.025716781616211

Token 149: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019293125660624355
    2. '.' → logprob: -9.000192642211914
    3. '(' → logprob: -9.625192642211914
    4. ' ' → logprob: -12.625192642211914
    5. '05' → logprob: -16.000192642211914
    6. '{' → logprob: -18.000192642211914
    7. ' ' → logprob: -18.250192642211914
    8. '۰' → logprob: -18.375192642211914
    9. '5' → logprob: -18.500192642211914
    10. '```' → logprob: -18.750192642211914

Token 150: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.75
    3. '1' → logprob: -15.875
    4. ' ' → logprob: -16.125
    5. '   ' → logprob: -20.625
    6. '(' → logprob: -20.875
    7. '4' → logprob: -21.375
    8. '2' → logprob: -21.5
    9. '```' → logprob: -21.75
    10. ')' → logprob: -22.0

Token 151: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -5.512236498361744e-07
    2. '2' → logprob: -15.250000953674316
    3. './' → logprob: -15.875000953674316
    4. ' /' → logprob: -16.375
    5. '0' → logprob: -16.875
    6. '/
' → logprob: -17.625
    7. '/ex' → logprob: -18.375
    8. '/div' → logprob: -18.625
    9. '/root' → logprob: -18.75
    10. '.' → logprob: -18.875

Token 152: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. ')' → logprob: -16.875051498413086
    4. '.' → logprob: -17.375051498413086
    5. '
' → logprob: -17.625051498413086
    6. '   ' → logprob: -17.750051498413086
    7. '  ' → logprob: -18.125051498413086
    8. '  
' → logprob: -19.000051498413086
    9. ',' → logprob: -19.375051498413086
    10. ' ' → logprob: -19.500051498413086

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -15.250001907348633
    4. ')

' → logprob: -18.500001907348633
    5. ')`' → logprob: -19.125001907348633
    6. '),' → logprob: -19.500001907348633
    7. ')return' → logprob: -19.625001907348633
    8. '))' → logprob: -19.750001907348633
    9. ')}' → logprob: -19.750001907348633
    10. ')#' → logprob: -19.875001907348633

Token 154: '    
' (ID: 1944)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006823236122727394
    2. '
' → logprob: -5.5068230628967285
    3. ' def' → logprob: -7.1318230628967285
    4. ')' → logprob: -7.2568230628967285
    5. ' 
' → logprob: -7.6318230628967285
    6. '<|end|>' → logprob: -7.7568230628967285
    7. '  
' → logprob: -9.131823539733887
    8. '    
' → logprob: -9.881823539733887
    9. ',' → logprob: -11.006823539733887
    10. '

' → logprob: -11.256823539733887

Token 155: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.320199877838604e-07
    2. '    
' → logprob: -15.5
    3. ' def' → logprob: -16.125
    4. '  
' → logprob: -16.875
    5. 'dot' → logprob: -18.125
    6. '   
' → logprob: -18.625
    7. ' 
' → logprob: -18.625
    8. 'import' → logprob: -18.875
    9. '
' → logprob: -19.375
    10. 'from' → logprob: -19.375

Token 156: ' dot' (ID: 16579)
  Prédit: ' dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dot' → logprob: -0.033665064722299576
    2. 'dot' → logprob: -3.408665180206299
    3. ' ' → logprob: -12.15866470336914
    4. '_dot' → logprob: -12.15866470336914
    5. '
' → logprob: -12.65866470336914
    6. 'def' → logprob: -13.65866470336914
    7. '(dot' → logprob: -13.90866470336914
    8. '.dot' → logprob: -14.34616470336914
    9. '-dot' → logprob: -14.40866470336914
    10. ' def' → logprob: -14.65866470336914

Token 157: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00633719889447093
    2. '(vector' → logprob: -5.2563371658325195
    3. '(' → logprob: -7.3813371658325195
    4. '(v' → logprob: -7.8813371658325195
    5. '(vec' → logprob: -10.25633716583252
    6. '(u' → logprob: -10.63133716583252
    7. '(x' → logprob: -10.75633716583252
    8. ' (' → logprob: -11.50633716583252
    9. '(A' → logprob: -13.00633716583252
    10. '(Vector' → logprob: -13.13133716583252

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07274262607097626
    2. ',a' → logprob: -2.6977427005767822
    3. '(a' → logprob: -6.197742462158203
    4. ',b' → logprob: -8.322742462158203
    5. ' ,' → logprob: -8.447742462158203
    6. '):' → logprob: -8.572742462158203
    7. '(' → logprob: -10.197742462158203
    8. 'a' → logprob: -10.697742462158203
    9. ',A' → logprob: -11.572742462158203
    10. ')' → logprob: -12.322742462158203

Token 159: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011048642918467522
    2. ' b' → logprob: -4.511048793792725
    3. ' ' → logprob: -15.261048316955566
    4. '  ' → logprob: -16.011049270629883
    5. '   ' → logprob: -16.261049270629883
    6. ')b' → logprob: -16.261049270629883
    7. 'B' → logprob: -16.636049270629883
    8. ')' → logprob: -16.636049270629883
    9. 'a' → logprob: -16.886049270629883
    10. '    ' → logprob: -17.386049270629883

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00028016636497341096
    2. '):
' → logprob: -8.250280380249023
    3. ' ):' → logprob: -11.500280380249023
    4. ')' → logprob: -11.875280380249023
    5. '):
' → logprob: -13.375280380249023
    6. '):

' → logprob: -17.000280380249023
    7. ')：' → logprob: -17.500280380249023
    8. '[]):' → logprob: -17.625280380249023
    9. '）：' → logprob: -18.000280380249023
    10. '   ' → logprob: -18.500280380249023

Token 161: '   ' (ID: 271)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.22169868648052216
    2. 'return' → logprob: -1.7216986417770386
    3. '   ' → logprob: -4.596698760986328
    4. ' sum' → logprob: -5.096698760986328
    5. 'ans' → logprob: -6.346698760986328
    6. ' return' → logprob: -6.721698760986328
    7. '0' → logprob: -7.846698760986328
    8. 'result' → logprob: -8.721698760986328
    9. 'a' → logprob: -8.971698760986328
    10. 'dot' → logprob: -9.596698760986328

Token 162: ' n' (ID: 297)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.01967063546180725
    2. 'return' → logprob: -4.269670486450195
    3. 'a' → logprob: -5.519670486450195
    4. ' sum' → logprob: -6.644670486450195
    5. 'ans' → logprob: -8.894670486450195
    6. ' return' → logprob: -10.769670486450195
    7. '   ' → logprob: -11.019670486450195
    8. '
' → logprob: -13.019670486450195
    9. '0' → logprob: -13.394670486450195
    10. ' ' → logprob: -13.519670486450195

Token 163: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05006091669201851
    2. ' =' → logprob: -3.175060987472534
    3. '=len' → logprob: -5.550060749053955
    4. '=sum' → logprob: -5.925060749053955
    5. 'sum' → logprob: -8.175061225891113
    6. ' sum' → logprob: -9.300061225891113
    7. '+=' → logprob: -10.175061225891113
    8. 'len' → logprob: -11.550061225891113
    9. ' ' → logprob: -12.300061225891113
    10. ' range' → logprob: -12.300061225891113

Token 164: ' len' (ID: 4631)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012300425209105015
    2. 'sum' → logprob: -5.387300491333008
    3. 'len' → logprob: -5.512300491333008
    4. ' ' → logprob: -5.762300491333008
    5. ' sum' → logprob: -8.012300491333008
    6. ' len' → logprob: -8.887300491333008
    7. '  ' → logprob: -14.762300491333008
    8. 'a' → logprob: -16.137300491333008
    9. '   ' → logprob: -16.637300491333008
    10. 'min' → logprob: -16.887300491333008

Token 165: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.011049000546336174
    2. 'a' → logprob: -4.511048793792725
    3. ' a' → logprob: -14.136049270629883
    4. '(' → logprob: -15.386049270629883
    5. 'b' → logprob: -15.636049270629883
    6. '(b' → logprob: -16.011049270629883
    7. '	a' → logprob: -19.261049270629883
    8. ')a' → logprob: -19.511049270629883
    9. '[a' → logprob: -20.136049270629883
    10. '#a' → logprob: -20.636049270629883

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0789058730006218
    2. ')
' → logprob: -2.5789058208465576
    3. ')
' → logprob: -11.703906059265137
    4. ' )' → logprob: -12.578906059265137
    5. '<|end|>' → logprob: -13.453906059265137
    6. ')

' → logprob: -13.828906059265137
    7. ' )
' → logprob: -13.953906059265137
    8. '[' → logprob: -15.953906059265137
    9. ')return' → logprob: -16.20390510559082
    10. ' ' → logprob: -16.20390510559082

Token 167: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008273652754724026
    2. '   ' → logprob: -5.633273601531982
    3. '    
' → logprob: -6.008273601531982
    4. '  
' → logprob: -7.383273601531982
    5. '<|end|>' → logprob: -7.508273601531982
    6. ')' → logprob: -8.50827407836914
    7. ' 
' → logprob: -8.63327407836914
    8. 'result' → logprob: -9.13327407836914
    9. '
' → logprob: -9.25827407836914
    10. ' ' → logprob: -9.50827407836914

Token 168: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03429673984646797
    2. 's' → logprob: -4.15929651260376
    3. 'res' → logprob: -4.28429651260376
    4. 'result' → logprob: -5.78429651260376
    5. 'answer' → logprob: -7.90929651260376
    6. 'sum' → logprob: -8.034296989440918
    7. 'ret' → logprob: -8.409296989440918
    8. ' ans' → logprob: -8.784296989440918
    9. 'total' → logprob: -9.784296989440918
    10. 'return' → logprob: -10.034296989440918

Token 169: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2519339919090271
    2. ' n' → logprob: -1.5019340515136719
    3. ' ' → logprob: -12.876934051513672
    4. '	n' → logprob: -13.751934051513672
    5. '
' → logprob: -14.751934051513672
    6. '  ' → logprob: -15.126934051513672
    7. '   ' → logprob: -15.251934051513672
    8. ' not' → logprob: -15.876934051513672
    9. ' ' → logprob: -16.376934051513672
    10. ')' → logprob: -17.251934051513672

Token 170: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09736334532499313
    2. ' ==' → logprob: -2.472363233566284
    3. '!=' → logprob: -4.972363471984863
    4. ' !=' → logprob: -6.722363471984863
    5. '=' → logprob: -9.097363471984863
    6. '0' → logprob: -9.347363471984863
    7. ' ' → logprob: -10.222363471984863
    8. ':' → logprob: -11.597363471984863
    9. '>' → logprob: -12.472363471984863
    10. '()==' → logprob: -13.597363471984863

Token 171: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005241583567112684
    2. ' len' → logprob: -5.255241394042969
    3. '0' → logprob: -11.880241394042969
    4. ' ' → logprob: -15.005241394042969
    5. '	len' → logprob: -15.505241394042969
    6. '(len' → logprob: -15.630241394042969
    7. '  ' → logprob: -17.00524139404297
    8. '1' → logprob: -17.25524139404297
    9. '=len' → logprob: -17.25524139404297
    10. '   ' → logprob: -18.50524139404297

Token 172: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.2729995988775045e-06
    2. 'b' → logprob: -12.000006675720215
    3. ' b' → logprob: -18.0000057220459
    4. '(' → logprob: -18.3750057220459
    5. ' (' → logprob: -19.1250057220459
    6. '	b' → logprob: -19.7500057220459
    7. ')b' → logprob: -20.7500057220459
    8. '(B' → logprob: -21.7500057220459
    9. '[b' → logprob: -22.2500057220459
    10. '=b' → logprob: -22.5000057220459

Token 173: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6934276223182678
    2. '):' → logprob: -0.6934276223182678
    3. ')' → logprob: -8.443428039550781
    4. '):
' → logprob: -10.568428039550781
    5. ':' → logprob: -10.818428039550781
    6. '   ' → logprob: -12.318428039550781
    7. ':
' → logprob: -12.443428039550781
    8. ' ):' → logprob: -12.693428039550781
    9. ' ):
' → logprob: -12.818428039550781
    10. '):

' → logprob: -13.318428039550781

Token 174: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6163903474807739
    2. ':' → logprob: -1.616390347480774
    3. '       ' → logprob: -1.616390347480774
    4. '   ' → logprob: -3.4913902282714844
    5. ':return' → logprob: -4.366390228271484
    6. '):
' → logprob: -4.616390228271484
    7. ' return' → logprob: -5.616390228271484
    8. '):' → logprob: -6.491390228271484
    9. ' :
' → logprob: -6.741390228271484
    10. ')' → logprob: -6.741390228271484

Token 175: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05213367938995361
    2. 'raise' → logprob: -3.052133560180664
    3. ' return' → logprob: -5.927133560180664
    4. '   ' → logprob: -7.927133560180664
    5. ' raise' → logprob: -8.177133560180664
    6. '
' → logprob: -9.177133560180664
    7. '       ' → logprob: -9.427133560180664
    8. '0' → logprob: -10.927133560180664
    9. '	return' → logprob: -11.552133560180664
    10. ':return' → logprob: -11.552133560180664

Token 176: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5481705069541931
    2. 'None' → logprob: -0.9231705069541931
    3. ' None' → logprob: -3.923170566558838
    4. ' ' → logprob: -5.423170566558838
    5. 'False' → logprob: -7.673170566558838
    6. '
' → logprob: -9.92317008972168
    7. '  ' → logprob: -11.79817008972168
    8. '   ' → logprob: -12.04817008972168
    9. ' False' → logprob: -12.04817008972168
    10. 'float' → logprob: -12.67317008972168

Token 177: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01750764064490795
    2. '   ' → logprob: -4.517507553100586
    3. '    
' → logprob: -5.517507553100586
    4. '  
' → logprob: -6.767507553100586
    5. ' 
' → logprob: -7.767507553100586
    6. '0' → logprob: -8.267507553100586
    7. '   
' → logprob: -9.017507553100586
    8. ' for' → logprob: -9.142507553100586
    9. 'n' → logprob: -9.267507553100586
    10. 'for' → logprob: -9.642507553100586

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4633030891418457
    2. '
' → logprob: -1.0883030891418457
    3. '    
' → logprob: -3.4633030891418457
    4. '  
' → logprob: -6.338303089141846
    5. ' 
' → logprob: -8.213302612304688
    6. '   
' → logprob: -8.713302612304688
    7. ' for' → logprob: -9.213302612304688
    8. '	
' → logprob: -9.588302612304688
    9. '        
' → logprob: -10.213302612304688
    10. '<|end|>' → logprob: -10.338302612304688

Token 179: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.13029663264751434
    2. 's' → logprob: -2.6302967071533203
    3. 'res' → logprob: -3.5052967071533203
    4. 'sum' → logprob: -4.63029670715332
    5. 'result' → logprob: -4.88029670715332
    6. ' ans' → logprob: -7.13029670715332
    7. 'r' → logprob: -7.63029670715332
    8. 'total' → logprob: -7.88029670715332
    9. 'return' → logprob: -8.25529670715332
    10. 'answer' → logprob: -8.50529670715332

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693671882152557
    2. '=' → logprob: -2.126936674118042
    3. ' ' → logprob: -11.751936912536621
    4. ',' → logprob: -15.376936912536621
    5. ':' → logprob: -15.501936912536621
    6. '   ' → logprob: -16.626935958862305
    7. '  ' → logprob: -16.876935958862305
    8. '<|end|>' → logprob: -16.876935958862305
    9. ')' → logprob: -17.126935958862305
    10. 's' → logprob: -17.251935958862305

Token 181: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006413076189346611
    2. ' ' → logprob: -7.500641345977783
    3. 'sum' → logprob: -9.375640869140625
    4. ' sum' → logprob: -12.625640869140625
    5. '   ' → logprob: -15.875640869140625
    6. '  ' → logprob: -17.313140869140625
    7. 'a' → logprob: -17.375640869140625
    8. '۰' → logprob: -17.813140869140625
    9. '
' → logprob: -17.875640869140625
    10. ' ' → logprob: -18.188140869140625

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.975612187583465e-05
    2. 'sum' → logprob: -10.625029563903809
    3. ' ' → logprob: -12.125029563903809
    4. ' sum' → logprob: -17.500030517578125
    5. '   ' → logprob: -19.375030517578125
    6. '۰' → logprob: -19.875030517578125
    7. '０' → logprob: -19.875030517578125
    8. '000' → logprob: -20.000030517578125
    9. '00' → logprob: -20.375030517578125
    10. 'float' → logprob: -20.812530517578125

Token 183: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39739733934402466
    2. '<|end|>' → logprob: -1.2723972797393799
    3. ' for' → logprob: -3.27239727973938
    4. '   ' → logprob: -5.022397518157959
    5. '<|end|>' → logprob: -6.647397518157959
    6. 'for' → logprob: -6.647397518157959
    7. '	for' → logprob: -8.1473970413208
    8. ' 
' → logprob: -9.0223970413208
    9. '    
' → logprob: -9.1473970413208
    10. '  
' → logprob: -9.8973970413208

Token 184: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001174747827462852
    2. ' for' → logprob: -6.7511749267578125
    3. '	for' → logprob: -12.501174926757812
    4. 'i' → logprob: -14.376174926757812
    5. '   ' → logprob: -15.626174926757812
    6. '
' → logprob: -16.751174926757812
    7. ' ' → logprob: -18.501174926757812
    8. '<|end|>' → logprob: -18.626174926757812
    9. ' i' → logprob: -19.751174926757812
    10. '    ' → logprob: -20.501174926757812

Token 186: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10023050010204315
    2. ' i' → logprob: -2.3502304553985596
    3. ' ' → logprob: -10.85023021697998
    4. '	i' → logprob: -12.97523021697998
    5. 'range' → logprob: -14.47523021697998
    6. 'ii' → logprob: -14.85023021697998
    7. '0' → logprob: -15.10023021697998
    8. 'k' → logprob: -15.35023021697998
    9. '  ' → logprob: -15.47523021697998
    10. ' range' → logprob: -15.85023021697998

Token 187: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04324272647500038
    2. 'in' → logprob: -3.1682426929473877
    3. 'range' → logprob: -8.418242454528809
    4. ' range' → logprob: -11.043242454528809
    5. ' ' → logprob: -12.293242454528809
    6. ',' → logprob: -14.168242454528809
    7. '  ' → logprob: -14.793242454528809
    8. '0' → logprob: -15.168242454528809
    9. '   ' → logprob: -15.168242454528809
    10. 'n' → logprob: -15.293242454528809

Token 188: ' j' (ID: 441)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.4527221620082855
    2. 'v' → logprob: -2.0777220726013184
    3. ' x' → logprob: -2.5777220726013184
    4. ' (' → logprob: -3.3277220726013184
    5. ' ai' → logprob: -3.5777220726013184
    6. ' j' → logprob: -3.8277220726013184
    7. 'x' → logprob: -3.9527220726013184
    8. ' val' → logprob: -4.202722072601318
    9. ' ' → logprob: -5.577722072601318
    10. 'val' → logprob: -5.702722072601318

Token 189: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08899781107902527
    2. 'in' → logprob: -2.4639978408813477
    3. ' ' → logprob: -10.088997840881348
    4. '	in' → logprob: -12.338997840881348
    5. '   ' → logprob: -12.838997840881348
    6. '  ' → logprob: -13.213997840881348
    7. 'n' → logprob: -13.588997840881348
    8. ',' → logprob: -13.713997840881348
    9. '
' → logprob: -13.838997840881348
    10. '_in' → logprob: -13.963997840881348

Token 190: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.5759761333465576
    2. ' zip' → logprob: -0.8259761333465576
    3. '(zip' → logprob: -10.325976371765137
    4. 'enumer' → logprob: -12.575976371765137
    5. 'range' → logprob: -15.450976371765137
    6. ' enumerate' → logprob: -16.20097541809082
    7. '.zip' → logprob: -16.70097541809082
    8. ' ' → logprob: -16.82597541809082
    9. '_zip' → logprob: -17.70097541809082
    10. 'pair' → logprob: -19.45097541809082

Token 191: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.2127087504486553e-05
    2. 'a' → logprob: -10.750021934509277
    3. '(' → logprob: -14.500021934509277
    4. '(zip' → logprob: -17.000022888183594
    5. ' (' → logprob: -17.250022888183594
    6. 'zip' → logprob: -17.625022888183594
    7. ' a' → logprob: -18.625022888183594
    8. '(b' → logprob: -19.000022888183594
    9. '((' → logprob: -19.125022888183594
    10. '   ' → logprob: -19.375022888183594

Token 192: ',' (ID: 11)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.20221729576587677
    2. ',' → logprob: -1.7022173404693604
    3. ' ,' → logprob: -7.202217102050781
    4. 'b' → logprob: -9.952217102050781
    5. ' b' → logprob: -11.577217102050781
    6. '(b' → logprob: -13.702217102050781
    7. ',a' → logprob: -15.077217102050781
    8. ',j' → logprob: -16.70221710205078
    9. '   ' → logprob: -16.82721710205078
    10. '  ' → logprob: -17.45221710205078

Token 193: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. ')b' → logprob: -18.751502990722656
    4. ' ' → logprob: -19.126502990722656
    5. '	b' → logprob: -19.501502990722656
    6. '   ' → logprob: -20.251502990722656
    7. ',b' → logprob: -21.126502990722656
    8. '  ' → logprob: -21.501502990722656
    9. '    ' → logprob: -21.751502990722656
    10. ')' → logprob: -21.876502990722656

Token 194: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47423774003982544
    2. '):
' → logprob: -0.9742377400398254
    3. ' ):' → logprob: -9.474237442016602
    4. ' ):
' → logprob: -10.224237442016602
    5. '):
' → logprob: -10.599237442016602
    6. ':' → logprob: -11.224237442016602
    7. '   ' → logprob: -12.599237442016602
    8. '):

' → logprob: -12.974237442016602
    9. ')' → logprob: -13.224237442016602
    10. '():
' → logprob: -14.849237442016602

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0500357411801815
    2. ':' → logprob: -3.6750357151031494
    3. ':
' → logprob: -3.9250357151031494
    4. '):
' → logprob: -6.6750359535217285
    5. ' ans' → logprob: -6.8000359535217285
    6. '   ' → logprob: -7.6750359535217285
    7. 'ans' → logprob: -7.9250359535217285
    8. '	ans' → logprob: -8.80003547668457
    9. '
' → logprob: -9.05003547668457
    10. '(ans' → logprob: -9.80003547668457

Token 196: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.1272614300251007
    2. ' ans' → logprob: -2.1272614002227783
    3. '	ans' → logprob: -8.5022611618042
    4. '       ' → logprob: -10.2522611618042
    5. '
' → logprob: -10.6272611618042
    6. '   ' → logprob: -10.8772611618042
    7. '(ans' → logprob: -11.1272611618042
    8. '           ' → logprob: -11.1272611618042
    9. '_ans' → logprob: -11.5022611618042
    10. 'answer' → logprob: -11.6272611618042

Token 197: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2519467771053314
    2. '+=' → logprob: -1.5019468069076538
    3. '+' → logprob: -11.751946449279785
    4. '+=(' → logprob: -11.876946449279785
    5. '    ' → logprob: -14.001946449279785
    6. '+='' → logprob: -14.376946449279785
    7. ']+=' → logprob: -14.626946449279785
    8. '   ' → logprob: -15.001946449279785
    9. '+="' → logprob: -15.251946449279785
    10. ' ' → logprob: -15.626946449279785

Token 198: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519320547580719
    2. ' i' → logprob: -1.5019320249557495
    3. '   ' → logprob: -13.126932144165039
    4. ' ' → logprob: -14.376932144165039
    5. '	i' → logprob: -15.751932144165039
    6. '  ' → logprob: -16.00193214416504
    7. '(i' → logprob: -16.62693214416504
    8. ' ' → logprob: -17.50193214416504
    9. '_i' → logprob: -18.00193214416504
    10. '    ' → logprob: -18.12693214416504

Token 199: '*j' (ID: 138193)
  Prédit: '*j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*j' → logprob: -0.02566680684685707
    2. '*' → logprob: -3.7756667137145996
    3. ' *' → logprob: -6.0256667137146
    4. '*b' → logprob: -13.525667190551758
    5. '*q' → logprob: -14.275667190551758
    6. '*i' → logprob: -15.900667190551758
    7. '*x' → logprob: -16.650667190551758
    8. '*y' → logprob: -16.900667190551758
    9. '*z' → logprob: -17.150667190551758
    10. '*d' → logprob: -17.400667190551758

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032385535538196564
    2. '
' → logprob: -3.7823855876922607
    3. 'return' → logprob: -5.032385349273682
    4. ' return' → logprob: -6.032385349273682
    5. '    
' → logprob: -9.28238582611084
    6. '	return' → logprob: -10.03238582611084
    7. '<|end|>' → logprob: -11.53238582611084
    8. ' 
' → logprob: -11.78238582611084
    9. '  
' → logprob: -12.28238582611084
    10. ' ' → logprob: -12.53238582611084

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005039013922214508
    2. '
' → logprob: -5.505039215087891
    3. 'return' → logprob: -7.130039215087891
    4. ' return' → logprob: -8.88003921508789
    5. '    
' → logprob: -11.13003921508789
    6. '	return' → logprob: -12.75503921508789
    7. ' ' → logprob: -14.13003921508789
    8. '       ' → logprob: -14.63003921508789
    9. '
' → logprob: -14.75503921508789
    10. ' 
' → logprob: -15.25503921508789

Token 202: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02815398760139942
    2. '   ' → logprob: -4.278153896331787
    3. ' return' → logprob: -4.278153896331787
    4. '
' → logprob: -10.903154373168945
    5. '	return' → logprob: -12.778154373168945
    6. '    
' → logprob: -13.153154373168945
    7. ' ' → logprob: -13.903154373168945
    8. ':return' → logprob: -15.403154373168945
    9. 'eturn' → logprob: -15.903154373168945
    10. ' 
' → logprob: -16.028154373168945

Token 203: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011048408225178719
    2. ' ans' → logprob: -4.511048316955566
    3. '(ans' → logprob: -14.886048316955566
    4. '	ans' → logprob: -15.136048316955566
    5. '_ans' → logprob: -18.386049270629883
    6. 'ann' → logprob: -19.511049270629883
    7. 'anst' → logprob: -20.011049270629883
    8. 'Ans' → logprob: -20.136049270629883
    9. 'answer' → logprob: -20.261049270629883
    10. ' ' → logprob: -20.261049270629883

Token 204: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014172564260661602
    2. 'res' → logprob: -5.639172554016113
    3. 'pp' → logprob: -6.139172554016113
    4. 'def' → logprob: -6.389172554016113
    5. 'result' → logprob: -6.514172554016113
    6. 'print' → logprob: -7.014172554016113
    7. 'bb' → logprob: -7.389172554016113
    8. 'points' → logprob: -7.389172554016113
    9. 'while' → logprob: -7.764172554016113
    10. 'ans' → logprob: -8.139172554016113

Token 206: ' reflection' (ID: 39755)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5171676278114319
    2. 'main' → logprob: -1.267167568206787
    3. ' solve' → logprob: -3.892167568206787
    4. 'solve' → logprob: -4.142167568206787
    5. 'project' → logprob: -4.767167568206787
    6. 'distance' → logprob: -4.892167568206787
    7. ' distance' → logprob: -5.392167568206787
    8. ' is' → logprob: -5.517167568206787
    9. ' project' → logprob: -5.642167568206787
    10. 'is' → logprob: -5.892167568206787

Token 207: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9745543003082275
    2. '(point' → logprob: -1.2245543003082275
    3. '(bb' → logprob: -1.5995543003082275
    4. '(pp' → logprob: -2.9745543003082275
    5. '(p' → logprob: -3.0995543003082275
    6. '(line' → logprob: -4.849554061889648
    7. '(b' → logprob: -5.099554061889648
    8. '(a' → logprob: -5.349554061889648
    9. '(vector' → logprob: -5.599554061889648
    10. '(points' → logprob: -6.599554061889648

Token 208: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.027535350993275642
    2. '):' → logprob: -3.7775354385375977
    3. '):
' → logprob: -5.527535438537598
    4. ',' → logprob: -8.527535438537598
    5. ')' → logprob: -9.902535438537598
    6. 'B' → logprob: -10.402535438537598
    7. '):

' → logprob: -11.527535438537598
    8. 'r' → logprob: -12.402535438537598
    9. 'a' → logprob: -12.652535438537598
    10. '):
' → logprob: -13.152535438537598

Token 209: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3433767557144165
    2. 'a' → logprob: -1.8433767557144165
    3. 'bb' → logprob: -2.593376636505127
    4. ' p' → logprob: -3.968376636505127
    5. 'pp' → logprob: -3.968376636505127
    6. ' bb' → logprob: -5.093376636505127
    7. 'b' → logprob: -5.218376636505127
    8. ' a' → logprob: -5.968376636505127
    9. 'aa' → logprob: -7.093376636505127
    10. 'c' → logprob: -7.468376636505127

Token 210: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24946284294128418
    2. '):
' → logprob: -2.124462842941284
    3. '=' → logprob: -2.374462842941284
    4. ',' → logprob: -5.249463081359863
    5. ')' → logprob: -6.749463081359863
    6. 'p' → logprob: -6.874463081359863
    7. '):

' → logprob: -9.374463081359863
    8. ',p' → logprob: -9.499463081359863
    9. ' ):' → logprob: -9.499463081359863
    10. '):
' → logprob: -9.624463081359863

Token 211: ' pp' (ID: 25476)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.004694276489317417
    2. '[' → logprob: -6.12969446182251
    3. 'p' → logprob: -6.87969446182251
    4. '[n' → logprob: -7.25469446182251
    5. '(pp' → logprob: -8.379693984985352
    6. '[p' → logprob: -8.504693984985352
    7. 'bb' → logprob: -9.004693984985352
    8. ' pp' → logprob: -9.754693984985352
    9. ')' → logprob: -9.879693984985352
    10. 'n' → logprob: -10.129693984985352

Token 212: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048861339688301086
    2. '):
' → logprob: -3.048861265182495
    3. ')' → logprob: -9.173861503601074
    4. '):
' → logprob: -9.548861503601074
    5. ',' → logprob: -10.048861503601074
    6. '):

' → logprob: -10.298861503601074
    7. 'b' → logprob: -11.173861503601074
    8. ' ):' → logprob: -12.923861503601074
    9. '   ' → logprob: -13.673861503601074
    10. 's' → logprob: -14.298861503601074

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3558001220226288
    2. ' a' → logprob: -1.8558001518249512
    3. ' r' → logprob: -2.980800151824951
    4. ' ans' → logprob: -3.105800151824951
    5. 'a' → logprob: -4.230800151824951
    6. ' c' → logprob: -4.730800151824951
    7. ' ab' → logprob: -5.480800151824951
    8. ' v' → logprob: -5.730800151824951
    9. ' proj' → logprob: -5.855800151824951
    10. ' b' → logprob: -6.105800151824951

Token 214: ' a' (ID: 261)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.681386411190033
    2. 'a' (adapté à ' a') → logprob: -2.4313864707946777
    3. 'p' → logprob: -2.4313864707946777
    4. 'b' → logprob: -2.8063864707946777
    5. 'c' → logprob: -3.0563864707946777
    6. 'ans' → logprob: -3.5563864707946777
    7. 'pr' → logprob: -3.6813864707946777
    8. 'r' → logprob: -3.6813864707946777
    9. 'bb' → logprob: -4.056386470794678
    10. 'project' → logprob: -4.056386470794678

Token 215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25200146436691284
    2. '=' → logprob: -1.5020015239715576
    3. ',' → logprob: -10.252001762390137
    4. ' ' → logprob: -11.752001762390137
    5. '=[]' → logprob: -12.002001762390137
    6. 'a' → logprob: -12.752001762390137
    7. '=[' → logprob: -13.002001762390137
    8. '   ' → logprob: -13.002001762390137
    9. ')' → logprob: -13.002001762390137
    10. '=(' → logprob: -13.127001762390137

Token 216: ' project' (ID: 2993)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.42117080092430115
    2. '[p' → logprob: -2.546170711517334
    3. '[' → logprob: -3.046170711517334
    4. '(' → logprob: -3.046170711517334
    5. ' (' → logprob: -3.171170711517334
    6. '(project' → logprob: -3.296170711517334
    7. 'p' → logprob: -4.046170711517334
    8. 'project' → logprob: -4.046170711517334
    9. '(b' → logprob: -4.421170711517334
    10. 'list' → logprob: -4.796170711517334

Token 217: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00014919086243025959
    2. '((' → logprob: -10.00014877319336
    3. '(' → logprob: -10.12514877319336
    4. '(p' → logprob: -10.62514877319336
    5. '([' → logprob: -11.00014877319336
    6. 'b' → logprob: -11.12514877319336
    7. '(a' → logprob: -12.25014877319336
    8. ' (' → logprob: -13.87514877319336
    9. '(list' → logprob: -14.12514877319336
    10. '(bb' → logprob: -15.62514877319336

Token 218: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15469731390476227
    2. '(p' → logprob: -2.5296974182128906
    3. ',' → logprob: -3.2796974182128906
    4. '(b' → logprob: -4.654697418212891
    5. ')
' → logprob: -4.779697418212891
    6. 'b' → logprob: -5.779697418212891
    7. ',p' → logprob: -6.279697418212891
    8. 'p' → logprob: -6.529697418212891
    9. ',b' → logprob: -8.02969741821289
    10. '(' → logprob: -8.27969741821289

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02507302351295948
    2. 'a' → logprob: -5.150073051452637
    3. 'r' → logprob: -5.400073051452637
    4. 'return' → logprob: -5.650073051452637
    5. ' return' → logprob: -6.150073051452637
    6. '    
' → logprob: -6.650073051452637
    7. 'v' → logprob: -6.775073051452637
    8. ' ' → logprob: -6.775073051452637
    9. ' a' → logprob: -7.275073051452637
    10. ' r' → logprob: -7.650073051452637

Token 220: ' ans' (ID: 3345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5842576622962952
    2. 'ans' (adapté à ' ans') → logprob: -1.5842576026916504
    3. 'v' → logprob: -2.5842576026916504
    4. 'c' → logprob: -2.8342576026916504
    5. 'b' → logprob: -3.8342576026916504
    6. 'r' → logprob: -3.9592576026916504
    7. 'd' → logprob: -4.33425760269165
    8. 'a' → logprob: -4.33425760269165
    9. 'vec' → logprob: -4.45925760269165
    10. 'diff' → logprob: -5.45925760269165

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16026099026203156
    2. '=' → logprob: -1.9102610349655151
    3. '   ' → logprob: -11.660261154174805
    4. '[' → logprob: -12.035261154174805
    5. ' ' → logprob: -12.035261154174805
    6. '[:]' → logprob: -12.035261154174805
    7. '  ' → logprob: -13.160261154174805
    8. '=[]' → logprob: -13.285261154174805
    9. '_' → logprob: -13.535261154174805
    10. ',' → logprob: -14.035261154174805

Token 222: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09915799647569656
    2. '[]' → logprob: -3.2241580486297607
    3. '[a' → logprob: -3.4741580486297607
    4. '[]
' → logprob: -4.724157810211182
    5. '(' → logprob: -4.974157810211182
    6. '[(' → logprob: -5.474157810211182
    7. '[p' → logprob: -6.724157810211182
    8. '[b' → logprob: -6.849157810211182
    9. ' [' → logprob: -7.474157810211182
    10. '(a' → logprob: -8.09915828704834

Token 223: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5318694710731506
    2. '2' → logprob: -0.9068694710731506
    3. '[' → logprob: -6.156869411468506
    4. '[a' → logprob: -6.281869411468506
    5. ' a' → logprob: -7.156869411468506
    6. 'b' → logprob: -7.406869411468506
    7. ' ' → logprob: -7.406869411468506
    8. '(' → logprob: -7.531869411468506
    9. '(a' → logprob: -7.781869411468506
    10. ')' → logprob: -7.906869411468506

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.650518920039758e-06
    2. '0' → logprob: -13.625003814697266
    3. ' [' → logprob: -14.250003814697266
    4. '   ' → logprob: -14.750003814697266
    5. ')' → logprob: -14.875003814697266
    6. ' ' → logprob: -15.500003814697266
    7. ',' → logprob: -15.750003814697266
    8. 'def' → logprob: -15.875003814697266
    9. '2' → logprob: -16.500003814697266
    10. '1' → logprob: -16.625003814697266

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.250000953674316
    3. '1' → logprob: -14.875000953674316
    4. '[' → logprob: -15.250000953674316
    5. '   ' → logprob: -17.750001907348633
    6. '
' → logprob: -18.000001907348633
    7. ']' → logprob: -18.625001907348633
    8. '(' → logprob: -18.875001907348633
    9. '۰' → logprob: -19.125001907348633
    10. '-' → logprob: -19.625001907348633

Token 226: ']+' (ID: 15344)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7917780876159668
    2. '*' → logprob: -1.2917780876159668
    3. '-' → logprob: -2.416778087615967
    4. ' +' → logprob: -2.791778087615967
    5. '+' → logprob: -3.166778087615967
    6. '-a' → logprob: -3.291778087615967
    7. '+a' → logprob: -3.416778087615967
    8. '+b' → logprob: -5.416778087615967
    9. '-b' → logprob: -6.041778087615967
    10. ' *' → logprob: -7.041778087615967

Token 227: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0029910129960626364
    2. '(a' → logprob: -6.252991199493408
    3. ' ' → logprob: -7.002991199493408
    4. '(b' → logprob: -9.50299072265625
    5. '(' → logprob: -10.25299072265625
    6. '(p' → logprob: -11.62799072265625
    7. '-' → logprob: -12.00299072265625
    8. '   ' → logprob: -12.12799072265625
    9. ' (' → logprob: -12.12799072265625
    10. 'a' → logprob: -12.12799072265625

Token 228: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.00010819212911883369
    2. '*' → logprob: -9.875107765197754
    3. '(a' → logprob: -10.125107765197754
    4. '*a' → logprob: -11.625107765197754
    5. ' *(' → logprob: -12.375107765197754
    6. ' *' → logprob: -12.750107765197754
    7. '*(-' → logprob: -15.500107765197754
    8. 'a' → logprob: -16.00010871887207
    9. '(' → logprob: -16.62510871887207
    10. '*((' → logprob: -16.75010871887207

Token 229: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.48739537596702576
    2. 'a' → logprob: -0.9873954057693481
    3. '(ans' → logprob: -4.987395286560059
    4. 'ans' → logprob: -5.237395286560059
    5. '(p' → logprob: -7.362395286560059
    6. 'p' → logprob: -8.737395286560059
    7. ' (' → logprob: -9.112395286560059
    8. '*(' → logprob: -9.362395286560059
    9. '(pp' → logprob: -10.862395286560059
    10. ' a' → logprob: -10.987395286560059

Token 230: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '[i' → logprob: -15.000000953674316
    3. '0' → logprob: -15.375000953674316
    4. ' [' → logprob: -15.750000953674316
    5. '[
' → logprob: -16.000001907348633
    6. 'a' → logprob: -16.375001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '
' → logprob: -17.875001907348633
    9. '(' → logprob: -18.000001907348633
    10. '[a' → logprob: -18.500001907348633

Token 231: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.179848313331604
    2. '0' → logprob: -1.804848313331604
    3. '[i' → logprob: -9.554848670959473
    4. '1' → logprob: -11.929848670959473
    5. 'a' → logprob: -12.304848670959473
    6. '(' → logprob: -12.304848670959473
    7. ' ' → logprob: -12.304848670959473
    8. '
' → logprob: -12.804848670959473
    9. 'i' → logprob: -13.179848670959473
    10. '[
' → logprob: -13.429848670959473

Token 232: ']-' (ID: 27107)
  Prédit: '-p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.3960382640361786
    2. ' -' → logprob: -1.396038293838501
    3. '-' → logprob: -2.896038293838501
    4. '-a' → logprob: -3.771038293838501
    5. '-b' → logprob: -6.771038055419922
    6. ']-' → logprob: -12.021038055419922
    7. ')-' → logprob: -12.271038055419922
    8. '-n' → logprob: -12.896038055419922
    9. '-ai' → logprob: -12.896038055419922
    10. ' ' → logprob: -13.146038055419922

Token 233: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001358400477329269
    2. 'p' → logprob: -9.00013542175293
    3. ' b' → logprob: -11.50013542175293
    4. 'pp' → logprob: -13.25013542175293
    5. 'a' → logprob: -14.75013542175293
    6. '	b' → logprob: -16.75013542175293
    7. ')b' → logprob: -17.00013542175293
    8. '   ' → logprob: -17.37513542175293
    9. ' p' → logprob: -18.00013542175293
    10. ' ' → logprob: -18.12513542175293

Token 234: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017029138980433345
    2. '0' → logprob: -6.376702785491943
    3. '[
' → logprob: -15.001703262329102
    4. '   ' → logprob: -16.1267032623291
    5. ' [' → logprob: -16.2517032623291
    6. 'def' → logprob: -17.1267032623291
    7. 'x' → logprob: -17.2517032623291
    8. ' ' → logprob: -17.2517032623291
    9. '```' → logprob: -17.7517032623291
    10. 'import' → logprob: -17.7517032623291

Token 235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.375001907348633
    3. ' ' → logprob: -14.375001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '۰' → logprob: -17.750001907348633
    6. '
' → logprob: -18.125001907348633
    7. '```' → logprob: -18.375001907348633
    8. '  ' → logprob: -18.937501907348633
    9. '1' → logprob: -19.000001907348633
    10. 'x' → logprob: -19.062501907348633

Token 236: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0015812820056453347
    2. '),
' → logprob: -6.751581192016602
    3. ')' → logprob: -7.876581192016602
    4. '))' → logprob: -11.626581192016602
    5. '),

' → logprob: -12.126581192016602
    6. ',' → logprob: -12.251581192016602
    7. '),(' → logprob: -12.626581192016602
    8. ')),' → logprob: -12.626581192016602
    9. ' ),' → logprob: -12.876581192016602
    10. ' ' → logprob: -14.501581192016602

Token 237: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31335923075675964
    2. ' b' → logprob: -1.313359260559082
    3. '    ' → logprob: -10.313359260559082
    4. '   ' → logprob: -10.563359260559082
    5. '          ' → logprob: -12.188359260559082
    6. '           ' → logprob: -12.313359260559082
    7. '       ' → logprob: -12.688359260559082
    8. '      ' → logprob: -12.688359260559082
    9. '	b' → logprob: -12.688359260559082
    10. 'a' → logprob: -12.688359260559082

Token 238: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.3458322731312364e-06
    2. '1' → logprob: -11.875007629394531
    3. '
' → logprob: -15.500007629394531
    4. '   ' → logprob: -17.25000762939453
    5. '(' → logprob: -17.37500762939453
    6. '[
' → logprob: -17.50000762939453
    7. ',' → logprob: -18.12500762939453
    8. '0' → logprob: -18.25000762939453
    9. ' ' → logprob: -18.50000762939453
    10. 'def' → logprob: -19.25000762939453

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -15.125000953674316
    3. '0' → logprob: -16.0
    4. '[' → logprob: -16.5
    5. ' ' → logprob: -17.75
    6. '

' → logprob: -18.375
    7. '```' → logprob: -18.75
    8. '１' → logprob: -19.75
    9. '   ' → logprob: -19.75
    10. '۱' → logprob: -20.0625

Token 240: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09345949441194534
    2. '[' → logprob: -3.2184596061706543
    3. ']+' → logprob: -3.2184596061706543
    4. ')+' → logprob: -4.718459606170654
    5. ')+(' → logprob: -9.968459129333496
    6. '+
' → logprob: -10.343459129333496
    7. ')' → logprob: -10.343459129333496
    8. ' +' → logprob: -10.468459129333496
    9. ']' → logprob: -10.468459129333496
    10. '+a' → logprob: -10.593459129333496

Token 241: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -19.375011444091797
    4. '  ' → logprob: -20.000011444091797
    5. '<|end|>' → logprob: -20.500011444091797
    6. '-' → logprob: -20.750011444091797
    7. '۲' → logprob: -20.875011444091797
    8. '
' → logprob: -21.375011444091797
    9. ')' → logprob: -21.375011444091797
    10. '２' → logprob: -21.875011444091797

Token 242: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -4.320199877838604e-07
    2. '*' → logprob: -15.25
    3. '(a' → logprob: -16.125
    4. '*((' → logprob: -17.75
    5. ' *(' → logprob: -18.125
    6. '(' → logprob: -18.75
    7. ' *' → logprob: -20.375
    8. ')*(' → logprob: -21.0
    9. '(*(' → logprob: -21.125
    10. ']*(' → logprob: -21.5

Token 243: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931904554367065
    2. '(a' → logprob: -0.6931904554367065
    3. ' a' → logprob: -10.568190574645996
    4. ' (' → logprob: -11.068190574645996
    5. '(' → logprob: -13.943190574645996
    6. '   ' → logprob: -15.068190574645996
    7. '
' → logprob: -15.318190574645996
    8. '	a' → logprob: -15.443190574645996
    9. '[a' → logprob: -16.19318962097168
    10. '  ' → logprob: -16.44318962097168

Token 244: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. '1' → logprob: -13.12500286102295
    3. '[
' → logprob: -13.87500286102295
    4. '<|end|>' → logprob: -15.75000286102295
    5. ')[' → logprob: -16.375003814697266
    6. '
' → logprob: -16.875003814697266
    7. ',' → logprob: -17.250003814697266
    8. ' [' → logprob: -17.375003814697266
    9. ')' → logprob: -17.500003814697266
    10. '-' → logprob: -18.187503814697266

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. '[' → logprob: -10.750021934509277
    3. '-' → logprob: -16.62502098083496
    4. '
' → logprob: -16.87502098083496
    5. ' ' → logprob: -17.12502098083496
    6. '```' → logprob: -17.37502098083496
    7. '0' → logprob: -17.50002098083496
    8. '   ' → logprob: -18.12502098083496
    9. '{' → logprob: -19.43752098083496
    10. '

' → logprob: -19.68752098083496

Token 246: ']-' (ID: 27107)
  Prédit: '-b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.46275296807289124
    2. '[' → logprob: -1.4627529382705688
    3. '-' → logprob: -2.4627530574798584
    4. ']-' → logprob: -3.5877530574798584
    5. ' -' → logprob: -3.7127530574798584
    6. ']' → logprob: -7.462752819061279
    7. '0' → logprob: -7.712752819061279
    8. ')-' → logprob: -8.712753295898438
    9. '1' → logprob: -8.962753295898438
    10. ' ' → logprob: -9.712753295898438

Token 247: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.029847231227905e-05
    2. ' b' → logprob: -9.875080108642578
    3. '-b' → logprob: -10.500080108642578
    4. '   ' → logprob: -15.500080108642578
    5. '(' → logprob: -15.625080108642578
    6. ' -' → logprob: -15.625080108642578
    7. '	b' → logprob: -15.625080108642578
    8. '(b' → logprob: -15.750080108642578
    9. '  ' → logprob: -15.875080108642578
    10. '-' → logprob: -16.375080108642578

Token 248: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026336411014199257
    2. '[' → logprob: -3.651336431503296
    3. '])' → logprob: -11.401336669921875
    4. '0' → logprob: -11.651336669921875
    5. '-' → logprob: -12.526336669921875
    6. ')' → logprob: -12.526336669921875
    7. '```' → logprob: -12.526336669921875
    8. ' ' → logprob: -13.151336669921875
    9. '   ' → logprob: -13.526336669921875
    10. ']' → logprob: -14.026336669921875

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. '0' → logprob: -11.25001335144043
    3. ' ' → logprob: -15.00001335144043
    4. '   ' → logprob: -16.25001335144043
    5. '```' → logprob: -16.75001335144043
    6. '[' → logprob: -17.50001335144043
    7. 'b' → logprob: -17.87501335144043
    8. '
' → logprob: -17.87501335144043
    9. '  ' → logprob: -18.81251335144043
    10. '])' → logprob: -18.87501335144043

Token 250: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.061976756900548935
    2. ')' → logprob: -2.811976671218872
    3. '))
' → logprob: -12.811976432800293
    4. ')}' → logprob: -13.561976432800293
    5. ' )' → logprob: -13.811976432800293
    6. ')))' → logprob: -13.811976432800293
    7. ' ))' → logprob: -13.936976432800293
    8. '})' → logprob: -14.311976432800293
    9. '))

' → logprob: -14.686976432800293
    10. '0' → logprob: -15.436976432800293

Token 251: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4363787770271301
    2. '   ' → logprob: -1.4363787174224854
    3. ' return' → logprob: -2.1863787174224854
    4. '	return' → logprob: -5.8113789558410645
    5. '
' → logprob: -8.436378479003906
    6. ':return' → logprob: -9.061378479003906
    7. '    
' → logprob: -9.436378479003906
    8. ')' → logprob: -10.061378479003906
    9. '<|end|>' → logprob: -10.311378479003906
    10. ' ' → logprob: -11.561378479003906

Token 252: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.012230015359818935
    2. ' return' → logprob: -4.512229919433594
    3. '   ' → logprob: -6.762229919433594
    4. '	return' → logprob: -10.887229919433594
    5. ')' → logprob: -12.887229919433594
    6. ' ' → logprob: -13.887229919433594
    7. '    
' → logprob: -14.012229919433594
    8. ':return' → logprob: -14.262229919433594
    9. '<|end|>' → logprob: -15.262229919433594
    10. ')return' → logprob: -15.262229919433594

Token 253: '(f' (ID: 1526)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.04452497139573097
    2. '(*' → logprob: -3.294524908065796
    3. '(' → logprob: -5.044525146484375
    4. 'ans' → logprob: -11.419525146484375
    5. '(tuple' → logprob: -13.044525146484375
    6. '(
' → logprob: -13.669525146484375
    7. '()' → logprob: -13.794525146484375
    8. '*' → logprob: -14.544525146484375
    9. '(a' → logprob: -14.544525146484375
    10. '('' → logprob: -14.919525146484375

Token 254: ''{' (ID: 47735)
  Prédit: '"{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.31555718183517456
    2. ''{' → logprob: -2.5655572414398193
    3. '{' → logprob: -2.6905572414398193
    4. '(b' → logprob: -3.3155572414398193
    5. '"' → logprob: -3.3155572414398193
    6. '(a' → logprob: -3.4405572414398193
    7. 'loat' → logprob: -4.81555700302124
    8. '")' → logprob: -5.19055700302124
    9. '(ans' → logprob: -6.31555700302124
    10. ''' → logprob: -6.56555700302124

Token 255: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00017874970217235386
    2. 'round' → logprob: -9.000178337097168
    3. 'a' → logprob: -10.625178337097168
    4. 'int' → logprob: -10.625178337097168
    5. ' ans' → logprob: -13.000178337097168
    6. '"' → logprob: -13.750178337097168
    7. '"{' → logprob: -14.125178337097168
    8. 'float' → logprob: -14.375178337097168
    9. '(ans' → logprob: -14.375178337097168
    10. '   ' → logprob: -15.250178337097168

Token 256: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.375
    3. '0' → logprob: -17.125
    4. '   ' → logprob: -17.375
    5. ' ' → logprob: -17.375
    6. '}' → logprob: -17.625
    7. '.' → logprob: -17.875
    8. ')' → logprob: -18.125
    9. '
' → logprob: -18.125
    10. '(' → logprob: -19.0

Token 257: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. '
' → logprob: -14.375000953674316
    3. '[' → logprob: -17.0
    4. ' ' → logprob: -17.0
    5. '

' → logprob: -17.25
    6. '   ' → logprob: -17.25
    7. ':' → logprob: -17.375
    8. '.' → logprob: -17.625
    9. ':.' → logprob: -17.875
    10. '1' → logprob: -18.0

Token 258: ']:' (ID: 12433)
  Prédit: ':.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.06023511663079262
    2. ':' → logprob: -3.310235023498535
    3. '}' → logprob: -4.060235023498535
    4. '}:' → logprob: -5.685235023498535
    5. ']:' → logprob: -7.685235023498535
    6. ' :.' → logprob: -8.060235023498535
    7. '}:{' → logprob: -8.935235023498535
    8. ']}' → logprob: -9.685235023498535
    9. ' :' → logprob: -9.810235023498535
    10. '}')' → logprob: -9.810235023498535

Token 259: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.8889261304575484e-06
    2. '0' → logprob: -12.750003814697266
    3. ' .' → logprob: -14.125003814697266
    4. '}.' → logprob: -16.250003814697266
    5. ''.' → logprob: -16.750003814697266
    6. ',.' → logprob: -17.750003814697266
    7. '}' → logprob: -18.125003814697266
    8. ':.' → logprob: -18.375003814697266
    9. ' ' → logprob: -19.000003814697266
    10. '​.' → logprob: -19.375003814697266

Token 260: '8' (ID: 23)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.035707633942365646
    2. '2' → logprob: -3.660707712173462
    3. '3' → logprob: -5.410707473754883
    4. '4' → logprob: -6.910707473754883
    5. '5' → logprob: -6.910707473754883
    6. '8' → logprob: -7.035707473754883
    7. '7' → logprob: -7.285707473754883
    8. '10' → logprob: -7.410707473754883
    9. '0' → logprob: -8.410707473754883
    10. '9' → logprob: -8.660707473754883

Token 261: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.896309739408025e-07
    2. 'g' → logprob: -14.125000953674316
    3. '}' → logprob: -18.875
    4. ' f' → logprob: -19.25
    5. '
' → logprob: -19.625
    6. 'lf' → logprob: -20.25
    7. '```' → logprob: -20.5
    8. '	f' → logprob: -21.0
    9. '

' → logprob: -21.375
    10. '%' → logprob: -21.625

Token 262: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.17201925814151764
    2. 'f' → logprob: -2.4220192432403564
    3. '}')' → logprob: -2.6720192432403564
    4. ' }' → logprob: -9.047019004821777
    5. ' f' → logprob: -10.922019004821777
    6. '{' → logprob: -11.047019004821777
    7. '}')
' → logprob: -11.422019004821777
    8. 'd' → logprob: -12.172019004821777
    9. '}{' → logprob: -12.422019004821777
    10. '}")' → logprob: -12.922019004821777

Token 263: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.004211243707686663
    2. ' f' → logprob: -6.12921142578125
    3. ' ' → logprob: -7.00421142578125
    4. '{' → logprob: -7.12921142578125
    5. ' ,' → logprob: -9.00421142578125
    6. ' {'' → logprob: -10.00421142578125
    7. '}' → logprob: -10.00421142578125
    8. ',' → logprob: -10.25421142578125
    9. ' {(' → logprob: -10.75421142578125
    10. ',{' → logprob: -11.62921142578125

Token 264: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.9361264946837764e-07
    2. ' ans' → logprob: -16.5
    3. '	ans' → logprob: -18.875
    4. '(ans' → logprob: -19.375
    5. '           ' → logprob: -19.875
    6. 'a' → logprob: -20.625
    7. '{' → logprob: -21.25
    8. '   ' → logprob: -21.375
    9. '
' → logprob: -22.125
    10. ' ' → logprob: -22.5

Token 265: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '1' → logprob: -16.75
    3. '[
' → logprob: -17.25
    4. '
' → logprob: -19.625
    5. '```' → logprob: -19.75
    6. 's' → logprob: -19.75
    7. ']' → logprob: -20.375
    8. '   ' → logprob: -20.625
    9. '2' → logprob: -21.25
    10. '0' → logprob: -21.375

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -17.0
    3. '
' → logprob: -17.0
    4. ' ' → logprob: -17.125
    5. '[' → logprob: -18.625
    6. '```' → logprob: -19.5
    7. '   ' → logprob: -20.625
    8. '

' → logprob: -20.75
    9. ']' → logprob: -21.625
    10. '
' → logprob: -21.875

Token 267: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.036836571991443634
    2. ':.' → logprob: -3.661836624145508
    3. '[' → logprob: -5.161836624145508
    4. '}:' → logprob: -5.411836624145508
    5. '.:' → logprob: -9.161836624145508
    6. ']' → logprob: -9.536836624145508
    7. ':' → logprob: -10.161836624145508
    8. '.' → logprob: -11.286836624145508
    9. '].' → logprob: -11.661836624145508
    10. '}' → logprob: -11.911836624145508

Token 268: '.' (ID: 13)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.023315824568271637
    2. '.' → logprob: -3.773315906524658
    3. 'f' → logprob: -9.7733154296875
    4. '0' → logprob: -11.7733154296875
    5. ' ' → logprob: -12.5233154296875
    6. ' .' → logprob: -13.6483154296875
    7. '}' → logprob: -15.0233154296875
    8. '   ' → logprob: -15.6483154296875
    9. '08' → logprob: -15.8983154296875
    10. '
' → logprob: -16.0233154296875

Token 269: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -6.704273118884885e-07
    2. '6' → logprob: -14.750000953674316
    3. 'f' → logprob: -15.625000953674316
    4. '0' → logprob: -18.375
    5. '08' → logprob: -18.625
    6. '4' → logprob: -19.375
    7. '```' → logprob: -19.75
    8. '2' → logprob: -19.875
    9. '7' → logprob: -20.25
    10. '-' → logprob: -20.375

Token 270: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9361264946837764e-07
    2. ' f' → logprob: -16.625
    3. '}' → logprob: -17.25
    4. '```' → logprob: -17.375
    5. 'ф' → logprob: -18.75
    6. ' ' → logprob: -19.0
    7. '{' → logprob: -19.0
    8. '	f' → logprob: -19.0
    9. '[f' → logprob: -19.5
    10. '6' → logprob: -20.0

Token 271: '}')
' (ID: 70168)
  Prédit: '}')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}')' → logprob: -4.7994282795116305e-05
    2. '}' → logprob: -10.50004768371582
    3. '}')
' → logprob: -11.12504768371582
    4. '')' → logprob: -12.87504768371582
    5. '}'' → logprob: -13.62504768371582
    6. '}")' → logprob: -13.87504768371582
    7. '}')

' → logprob: -14.37504768371582
    8. ' }' → logprob: -15.25004768371582
    9. ''}' → logprob: -16.62504768371582
    10. '})' → logprob: -16.87504768371582

Token 272: '    
' (ID: 1944)
  Prédit: 'reflection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reflection' → logprob: -0.4332946240901947
    2. 'for' → logprob: -1.308294653892517
    3. 'b' → logprob: -2.6832945346832275
    4. '#' → logprob: -5.308294773101807
    5. ' reflection' → logprob: -5.808294773101807
    6. 'n' → logprob: -6.683294773101807
    7. 'Reflection' → logprob: -7.433294773101807
    8. 'ref' → logprob: -7.558294773101807
    9. 'if' → logprob: -7.558294773101807
    10. 'reflect' → logprob: -7.683294773101807

Token 273: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0712866336107254
    2. 'b' → logprob: -2.696286678314209
    3. 'while' → logprob: -7.696286678314209
    4. 'x' → logprob: -7.946286678314209
    5. 'bb' → logprob: -8.32128620147705
    6. '#' → logprob: -9.69628620147705
    7. ' for' → logprob: -9.94628620147705
    8. 'q' → logprob: -10.19628620147705
    9. 'reflection' → logprob: -10.82128620147705
    10. 'a' → logprob: -10.94628620147705

Token 274: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.014241080731153488
    2. '_' → logprob: -4.2642412185668945
    3. ' i' → logprob: -9.514241218566895
    4. ' ' → logprob: -12.639241218566895
    5. '_i' → logprob: -14.764241218566895
    6. ' ' → logprob: -16.014240264892578
    7. 'i' → logprob: -17.389240264892578
    8. ' in' → logprob: -18.514240264892578
    9. '  ' → logprob: -18.764240264892578
    10. ' range' → logprob: -20.014240264892578

Token 275: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12868329882621765
    2. 'in' → logprob: -2.12868332862854
    3. '_' → logprob: -6.628683090209961
    4. ' ' → logprob: -8.003683090209961
    5. ' _' → logprob: -9.878683090209961
    6. '_in' → logprob: -10.878683090209961
    7. '	in' → logprob: -12.003683090209961
    8. 'range' → logprob: -12.378683090209961
    9. 'n' → logprob: -12.503683090209961
    10. '  ' → logprob: -13.128683090209961

Token 276: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0232466422021389
    2. ' range' → logprob: -3.7732465267181396
    3. ' ' → logprob: -15.023246765136719
    4. '_' → logprob: -15.273246765136719
    5. '[' → logprob: -16.14824676513672
    6. 'in' → logprob: -16.27324676513672
    7. '(range' → logprob: -16.27324676513672
    8. '	range' → logprob: -16.39824676513672
    9. '  ' → logprob: -16.64824676513672
    10. '   ' → logprob: -17.14824676513672

Token 277: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.828512363834307e-05
    2. '(' → logprob: -9.625088691711426
    3. 'n' → logprob: -11.250088691711426
    4. ' n' → logprob: -12.000088691711426
    5. ' (' → logprob: -12.750088691711426
    6. '(
' → logprob: -18.00008773803711
    7. '	n' → logprob: -18.62508773803711
    8. '(len' → logprob: -18.87508773803711
    9. '(int' → logprob: -19.25008773803711
    10. ' ' → logprob: -19.75008773803711

Token 278: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05563804507255554
    2. '):
' → logprob: -2.930638074874878
    3. ' ):' → logprob: -7.305637836456299
    4. '):
' → logprob: -10.555638313293457
    5. ' ):
' → logprob: -10.680638313293457
    6. ')' → logprob: -10.930638313293457
    7. ':' → logprob: -11.305638313293457
    8. '):

' → logprob: -13.680638313293457
    9. '+' → logprob: -13.930638313293457
    10. '   ' → logprob: -14.805638313293457

Token 279: '   ' (ID: 271)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03758016228675842
    2. '   ' → logprob: -4.0375800132751465
    3. 'b' → logprob: -4.1625800132751465
    4. ' bb' → logprob: -5.9125800132751465
    5. ' reflection' → logprob: -7.7875800132751465
    6. '	b' → logprob: -8.912580490112305
    7. ' p' → logprob: -9.037580490112305
    8. ' points' → logprob: -10.162580490112305
    9. 'bb' → logprob: -10.412580490112305
    10. '    
' → logprob: -10.537580490112305

Token 280: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.09811989217996597
    2. 'bb' → logprob: -3.0981199741363525
    3. ' b' → logprob: -3.8481199741363525
    4. 'reflection' → logprob: -4.723119735717773
    5. ' reflection' → logprob: -4.973119735717773
    6. ' bb' → logprob: -5.348119735717773
    7. 'x' → logprob: -6.223119735717773
    8. '   ' → logprob: -6.223119735717773
    9. 'a' → logprob: -7.473119735717773
    10. 'p' → logprob: -7.723119735717773

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12700948119163513
    2. '=' → logprob: -2.127009391784668
    3. ',' → logprob: -9.502009391784668
    4. '=input' → logprob: -12.877009391784668
    5. ' ' → logprob: -13.502009391784668
    6. 'b' → logprob: -13.502009391784668
    7. '=list' → logprob: -14.877009391784668
    8. ')' → logprob: -15.627009391784668
    9. ' ,' → logprob: -15.627009391784668
    10. 's' → logprob: -15.877009391784668

Token 282: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.012397211976349354
    2. ' list' → logprob: -5.012397289276123
    3. 'tuple' → logprob: -5.262397289276123
    4. ' tuple' → logprob: -7.637397289276123
    5. '[' → logprob: -15.012396812438965
    6. ' [' → logprob: -16.38739776611328
    7. '[list' → logprob: -16.38739776611328
    8. ' ' → logprob: -16.63739776611328
    9. '(tuple' → logprob: -16.88739776611328
    10. '	list' → logprob: -16.88739776611328

Token 283: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.750001907348633
    3. 'map' → logprob: -14.000001907348633
    4. ' map' → logprob: -18.875001907348633
    5. '(tuple' → logprob: -20.250001907348633
    6. '.map' → logprob: -20.875001907348633
    7. ' (' → logprob: -21.125001907348633
    8. '(float' → logprob: -21.125001907348633
    9. '	map' → logprob: -21.125001907348633
    10. '(int' → logprob: -21.250001907348633

Token 284: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000252160825766623
    2. '(float' → logprob: -8.875251770019531
    3. 'int' → logprob: -9.125251770019531
    4. '[int' → logprob: -13.125251770019531
    5. ' int' → logprob: -14.750251770019531
    6. '=int' → logprob: -15.125251770019531
    7. '(' → logprob: -15.125251770019531
    8. ',int' → logprob: -15.750251770019531
    9. 'float' → logprob: -15.750251770019531
    10. '<int' → logprob: -15.875251770019531

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1603778600692749
    2. ',input' → logprob: -1.910377860069275
    3. '(input' → logprob: -9.035377502441406
    4. 'input' → logprob: -10.785377502441406
    5. ' ,' → logprob: -11.785377502441406
    6. '(' → logprob: -12.285377502441406
    7. '(),' → logprob: -14.160377502441406
    8. ',int' → logprob: -14.910377502441406
    9. '```' → logprob: -15.785377502441406
    10. '   ' → logprob: -16.035377502441406

Token 286: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0031777136027812958
    2. ' input' → logprob: -5.753177642822266
    3. '(input' → logprob: -17.878177642822266
    4. ',input' → logprob: -18.128177642822266
    5. '   ' → logprob: -19.378177642822266
    6. '<input' → logprob: -19.628177642822266
    7. '	input' → logprob: -19.878177642822266
    8. ' ' → logprob: -20.003177642822266
    9. '=input' → logprob: -20.628177642822266
    10. '_input' → logprob: -21.253177642822266

Token 287: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -15.5
    3. ' ().' → logprob: -17.25
    4. '()))' → logprob: -17.875
    5. '.split' → logprob: -19.625
    6. '))' → logprob: -21.125
    7. '.' → logprob: -21.125
    8. ' .' → logprob: -21.5
    9. '()));' → logprob: -21.625
    10. '().__' → logprob: -21.875

Token 288: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -14.875
    3. 'strip' → logprob: -17.125
    4. '.split' → logprob: -18.0
    5. '().' → logprob: -19.375
    6. '(split' → logprob: -19.5
    7. ')' → logprob: -20.625
    8. 'spl' → logprob: -20.75
    9. '   ' → logprob: -21.125
    10. '.' → logprob: -21.125

Token 289: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.004126488231122494
    2. '()' → logprob: -5.87912654876709
    3. '()))
' → logprob: -7.37912654876709
    4. '))' → logprob: -7.37912654876709
    5. '())' → logprob: -9.87912654876709
    6. '(' → logprob: -11.12912654876709
    7. '()));' → logprob: -13.00412654876709
    8. '()))

' → logprob: -13.50412654876709
    9. '()))
' → logprob: -13.75412654876709
    10. '())))' → logprob: -14.37912654876709

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009193053469061852
    2. 'reflection' → logprob: -5.009192943572998
    3. ' reflection' → logprob: -6.009192943572998
    4. 'ref' → logprob: -11.759193420410156
    5. '    
' → logprob: -12.259193420410156
    6. '
' → logprob: -13.134193420410156
    7. '  ' → logprob: -13.259193420410156
    8. 'reflect' → logprob: -14.384193420410156
    9. ' ' → logprob: -14.759193420410156
    10. '	ref' → logprob: -15.509193420410156

Token 291: ' reflection' (ID: 39755)
  Prédit: 'reflection'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reflection' (adapté à ' reflection') → logprob: -0.00020354038861114532
    2. ' reflection' → logprob: -8.500203132629395
    3. '   ' → logprob: -16.87520408630371
    4. 'ref' → logprob: -19.25020408630371
    5. '
' → logprob: -19.25020408630371
    6. 'Reflection' → logprob: -19.50020408630371
    7. ' ' → logprob: -20.87520408630371
    8. '    
' → logprob: -21.25020408630371
    9. 'reflect' → logprob: -21.25020408630371
    10. 'projection' → logprob: -21.75020408630371

Token 292: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.37500286102295
    3. ' (' → logprob: -13.75000286102295
    4. 'b' → logprob: -17.375001907348633
    5. '(
' → logprob: -18.875001907348633
    6. '(B' → logprob: -21.125001907348633
    7. ')b' → logprob: -21.375001907348633
    8. '(s' → logprob: -21.750001907348633
    9. '(a' → logprob: -21.750001907348633
    10. '	b' → logprob: -21.750001907348633

Token 293: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ' )' → logprob: -12.250004768371582
    3. ')
' → logprob: -15.625004768371582
    4. '))' → logprob: -16.6250057220459
    5. ',)' → logprob: -17.5000057220459
    6. ')b' → logprob: -18.1250057220459
    7. ')p' → logprob: -18.2500057220459
    8. ')#' → logprob: -18.7500057220459
    9. ')`' → logprob: -18.8750057220459
    10. ')}' → logprob: -19.1250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 291
Tokens correctement prédits (1ère position, stricte): 114
Tokens correctement prédits (1ère position, avec adaptation): 123
Tokens correctement prédits (top 10): 239
Précision stricte (1ère position): 39.18%
Précision adaptée (1ère position): 42.27%
Précision (top 10): 82.13%
================================================================================
