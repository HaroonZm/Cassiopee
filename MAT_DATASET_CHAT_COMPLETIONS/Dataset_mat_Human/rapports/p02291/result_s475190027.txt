================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#! /usr/bin/env python3

from typing import List
from math import sqrt

EPS = 1e-10

def float_equal(x: float, y: float) -> bool:
    return abs(x - y) < EPS

class Point:

    def __init__(self, x: float=0.0, y: float=0.0) -> None:
        self.x = x
        self.y = y

    def __repr__(self) -> str:
        return "Point({}, {})".format(self.x, self.y)

    def __eq__(self, other: object) -> bool:
        if not isinstance(other, Point):
            # print("NotImplemented in Point")
            return NotImplemented
        return float_equal(self.x, other.x) and \
            float_equal(self.y, other.y)

    def __add__(self, other: 'Point') -> 'Point':
        return Point(self.x + other.x, self.y + other.y)

    def __sub__(self, other: 'Point') -> 'Point':
        return Point(self.x - other.x, self.y - other.y)

    def __mul__(self, k: float) -> 'Point':
        return Point(self.x * k, self.y * k)

    def __rmul__(self, k: float) -> 'Point':
        return self * k

    def __truediv__(self, k: float) -> 'Point':
        return Point(self.x / k, self.y / k)

    def __lt__(self, other: 'Point') -> bool:
        return self.y < other.y \
            if abs(self.x - other.x) < EPS \
            else self.x < other.x

    def norm(self):
        return self.x * self.x + self.y * self.y

    def abs(self):
        return sqrt(self.norm())

    def dot(self, other: 'Point') -> float:
        return self.x * other.x + self.y * other.y

    def cross(self, other: 'Point') -> float:
        return self.x * other.y - self.y * other.x

    def is_orthogonal(self, other: 'Point') -> bool:
        return float_equal(self.dot(other), 0.0)

    def is_parallel(self, other: 'Point') -> bool:
        return float_equal(self.cross(other), 0.0)

Vector = Point

class Segment:

    def __init__(self, p1: Point = None, p2: Point = None) -> None:
        self.p1: Point = Point() if p1 is None else p1
        self.p2: Point = Point() if p2 is None else p2

    def __repr__(self) -> str:
        return "Segment({}, {})".format(self.p1, self.p2)

    def __eq__(self, other: object) -> bool:
        if not isinstance(other, Segment):
            # print("NotImplemented in Segment")
            return NotImplemented
        return self.p1 == other.p1 and self.p2 == other.p2

    def vector(self) -> Vector:
        return self.p2 - self.p1

    def is_orthogonal(self, other: 'Segment') -> bool:
        return self.vector().is_orthogonal(other.vector())

    def is_parallel(self, other: 'Segment') -> bool:
        return self.vector().is_parallel(other.vector())

    def projection(self, p: Point) -> Point:
        v = self.vector()
        vp = p - self.p1
        return v.dot(vp) / v.norm() * v + self.p1

    def reflection(self, p: Point) -> Point:
        x = self.projection(p)
        return p + 2 * (x - p)

Line = Segment

class Circle:

    def __init__(self, c: Point=None, r: float=0.0) -> None:
        self.c: Point = Point() if c is None else c
        self.r: float = r

    def __eq__(self, other: object) -> bool:
        if not isinstance(other, Circle):
            return NotImplemented
        return self.c == other.c and self.r == other.r

    def __repr__(self) -> str:
        return "Circle({}, {})".format(self.c, self.r)

def main() -> None:
    x1, y1, x2, y2 = [int(x) for x in input().split()]
    p1 = Point(x1, y1)
    p2 = Point(x2, y2)
    l = Line(p1, p2)

    q = int(input())

    for _ in range(q):
        x, y = [int(x) for x in input().split()]
        p = Point(x, y)
        a = l.reflection(p)
        print(a.x, a.y)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!' (ID: 18666)
  → Token d'amorce (pas de prédiction)

Token 1: ' /' (ID: 820)
  → Token d'amorce (pas de prédiction)

Token 2: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 3: '/bin' (ID: 20950)
  Prédit: '/bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/bin' → logprob: -0.3133919835090637
    2. '/' → logprob: -1.313391923904419
    3. '/b' → logprob: -9.06339168548584
    4. 'b' → logprob: -11.81339168548584
    5. 'bin' → logprob: -12.81339168548584
    6. '/env' → logprob: -13.31339168548584
    7. '/
' → logprob: -13.56339168548584
    8. '/bash' → logprob: -14.31339168548584
    9. '/local' → logprob: -14.68839168548584
    10. '/python' → logprob: -16.188392639160156

Token 4: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0120017658919096
    2. '/python' → logprob: -5.012001991271973
    3. '/env' → logprob: -5.262001991271973
    4. '/bash' → logprob: -10.137001991271973
    5. 'python' → logprob: -10.387001991271973
    6. '/bin' → logprob: -11.512001991271973
    7. '/b' → logprob: -13.387001991271973
    8. ' /' → logprob: -13.512001991271973
    9. 'env' → logprob: -13.637001991271973
    10. '/usr' → logprob: -13.762001991271973

Token 5: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.38690099120140076
    2. ' python' → logprob: -1.1369010210037231
    3. 'p' → logprob: -11.511900901794434
    4. 'py' → logprob: -12.011900901794434
    5. 'bash' → logprob: -12.511900901794434
    6. ' Python' → logprob: -12.886900901794434
    7. ' bash' → logprob: -13.136900901794434
    8. '/python' → logprob: -13.636900901794434
    9. ' ' → logprob: -14.011900901794434
    10. ' p' → logprob: -14.011900901794434

Token 6: '3' (ID: 18)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5377206206321716
    2. '3' → logprob: -1.6627206802368164
    3. '```' → logprob: -2.5377206802368164
    4. '\' → logprob: -3.2877206802368164
    5. ' 
' → logprob: -3.5377206802368164
    6. 'import' → logprob: -4.037720680236816
    7. '' → logprob: -4.162720680236816
    8. '  
' → logprob: -4.162720680236816
    9. '#' → logprob: -4.787720680236816
    10. '-' → logprob: -5.162720680236816

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.07389682531356812
    2. 'import' → logprob: -3.073896884918213
    3. '\' → logprob: -4.948896884918213
    4. '' → logprob: -5.448896884918213
    5. ' 
' → logprob: -5.698896884918213
    6. '
' → logprob: -5.948896884918213
    7. '```' → logprob: -6.323896884918213
    8. '  
' → logprob: -6.448896884918213
    9. '\r' → logprob: -6.948896884918213
    10. '#!/' → logprob: -7.073896884918213

Token 8: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3345230519771576
    2. '\n' → logprob: -1.33452308177948
    3. '
' → logprob: -5.2095232009887695
    4. '' → logprob: -5.5845232009887695
    5. ' 
' → logprob: -5.5845232009887695
    6. '#' → logprob: -6.2095232009887695
    7. 'print' → logprob: -6.5845232009887695
    8. '#!/' → logprob: -6.9595232009887695
    9. '  
' → logprob: -7.3345232009887695
    10. '```' → logprob: -7.3345232009887695

Token 9: ' typing' (ID: 34152)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.07707172632217407
    2. ' ' → logprob: -3.0770716667175293
    3. ' collections' → logprob: -4.577071666717529
    4. ' sys' → logprob: -5.327071666717529
    5. ' math' → logprob: -5.327071666717529
    6. ' flask' → logprob: -6.577071666717529
    7. ' pathlib' → logprob: -7.077071666717529
    8. ' import' → logprob: -7.202071666717529
    9. 'os' → logprob: -7.202071666717529
    10. ' functools' → logprob: -7.327071666717529

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.20159831643104553
    2. 'import' → logprob: -1.7015982866287231
    3. '.' → logprob: -9.451598167419434
    4. '_import' → logprob: -10.451598167419434
    5. '.import' → logprob: -10.576598167419434
    6. ' ' → logprob: -10.576598167419434
    7. '```' → logprob: -11.826598167419434
    8. 'from' → logprob: -12.576598167419434
    9. '	import' → logprob: -12.826598167419434
    10. ' imports' → logprob: -13.076598167419434

Token 11: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.7253528833389282
    2. ' Any' → logprob: -0.7253528833389282
    3. 'Any' → logprob: -3.9753527641296387
    4. ' Generator' → logprob: -4.975352764129639
    5. 'List' → logprob: -5.475352764129639
    6. ' Callable' → logprob: -7.350352764129639
    7. ' Optional' → logprob: -7.600352764129639
    8. ' Union' → logprob: -8.600353240966797
    9. ' Iterator' → logprob: -8.725353240966797
    10. 'Generator' → logprob: -8.975353240966797

Token 12: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00496250856667757
    2. '
' → logprob: -6.00496244430542
    3. '```' → logprob: -7.37996244430542
    4. '\' → logprob: -7.62996244430542
    5. '\n' → logprob: -7.87996244430542
    6. '<|end|>' → logprob: -8.004962921142578
    7. 'import' → logprob: -8.754962921142578
    8. '

' → logprob: -8.754962921142578
    9. ' def' → logprob: -9.754962921142578
    10. 'de' → logprob: -9.879962921142578

Token 13: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24606561660766602
    2. '
' → logprob: -1.996065616607666
    3. '

' → logprob: -2.621065616607666
    4. 'import' → logprob: -5.246065616607666
    5. '


' → logprob: -6.996065616607666
    6. '```' → logprob: -6.996065616607666
    7. 'class' → logprob: -7.496065616607666
    8. '<|end|>' → logprob: -7.621065616607666
    9. '\n' → logprob: -8.121065139770508
    10. '\' → logprob: -8.496065139770508

Token 14: ' math' (ID: 13324)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.29972273111343384
    2. ' dat' → logprob: -1.799722671508789
    3. ' fast' → logprob: -2.924722671508789
    4. 'typing' → logprob: -3.924722671508789
    5. ' collections' → logprob: -4.549722671508789
    6. 'fast' → logprob: -5.674722671508789
    7. 'collections' → logprob: -6.174722671508789
    8. 'dat' → logprob: -6.424722671508789
    9. ' p' → logprob: -7.799722671508789
    10. ' ' → logprob: -7.799722671508789

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06200096756219864
    2. 'import' → logprob: -2.8120009899139404
    3. '_import' → logprob: -11.56200122833252
    4. '	import' → logprob: -11.93700122833252
    5. ' importar' → logprob: -12.18700122833252
    6. ' ' → logprob: -12.93700122833252
    7. 'Import' → logprob: -13.31200122833252
    8. ' Import' → logprob: -13.56200122833252
    9. ' impor' → logprob: -14.31200122833252
    10. ' imports' → logprob: -14.31200122833252

Token 16: ' sqrt' (ID: 44237)
  Prédit: ' sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.6730903387069702
    2. 'sqrt' → logprob: -0.7980903387069702
    3. ' ceil' → logprob: -3.7980904579162598
    4. ' factorial' → logprob: -5.04809045791626
    5. 'ceil' → logprob: -5.29809045791626
    6. 'sin' → logprob: -6.79809045791626
    7. ' gcd' → logprob: -6.92309045791626
    8. ' sin' → logprob: -7.42309045791626
    9. ' inf' → logprob: -7.54809045791626
    10. ' pi' → logprob: -8.048089981079102

Token 17: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4290663003921509
    2. '
' → logprob: -1.1790663003921509
    3. 'def' → logprob: -3.3040661811828613
    4. '```' → logprob: -6.554066181182861
    5. '


' → logprob: -7.054066181182861
    6. '
' → logprob: -7.554066181182861
    7. '<|end|>' → logprob: -7.679066181182861
    8. 'import' → logprob: -8.42906665802002
    9. ' 

' → logprob: -8.42906665802002
    10. '\' → logprob: -8.42906665802002

Token 18: 'EPS' (ID: 82793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011093381908722222
    2. '```' → logprob: -9.750110626220703
    3. 'de' → logprob: -10.125110626220703
    4. 'd' → logprob: -12.000110626220703
    5. 'class' → logprob: -13.000110626220703
    6. '
' → logprob: -13.750110626220703
    7. '``' → logprob: -13.875110626220703
    8. '\' → logprob: -14.000110626220703
    9. ' def' → logprob: -14.125110626220703
    10. 'import' → logprob: -16.500110626220703

Token 19: ' =' (ID: 314)
  Prédit: 'ILON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ILON' → logprob: -0.18554972112178802
    2. '_' → logprob: -2.435549736022949
    3. ' =' → logprob: -3.060549736022949
    4. '=' → logprob: -3.435549736022949
    5. ' _' → logprob: -7.435549736022949
    6. ' ' → logprob: -7.685549736022949
    7. '_=' → logprob: -7.810549736022949
    8. 'ilon' → logprob: -8.31054973602295
    9. '   ' → logprob: -8.43554973602295
    10. 'I' → logprob: -8.81054973602295

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1602603793144226
    2. '1' → logprob: -1.9102604389190674
    3. '0' → logprob: -10.910260200500488
    4. '10' → logprob: -11.285260200500488
    5. ' ' → logprob: -12.410260200500488
    6. '2' → logprob: -15.035260200500488
    7. '9' → logprob: -15.160260200500488
    8. '  ' → logprob: -15.535260200500488
    9. '   ' → logprob: -16.035261154174805
    10. '5' → logprob: -16.285261154174805

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013269031187519431
    2. ' ' → logprob: -6.626327037811279
    3. '0' → logprob: -14.626326560974121
    4. '   ' → logprob: -14.751326560974121
    5. '10' → logprob: -17.376327514648438
    6. '2' → logprob: -17.751327514648438
    7. '  ' → logprob: -17.751327514648438
    8. '```' → logprob: -18.001327514648438
    9. ' ' → logprob: -18.376327514648438
    10. '=' → logprob: -18.751327514648438

Token 22: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09797733277082443
    2. '-' → logprob: -2.59797739982605
    3. '0' → logprob: -3.97297739982605
    4. '```' → logprob: -9.597977638244629
    5. '-e' → logprob: -12.597977638244629
    6. 'E' → logprob: -12.597977638244629
    7. '1' → logprob: -12.597977638244629
    8. '3' → logprob: -12.722977638244629
    9. 'o' → logprob: -13.472977638244629
    10. '``' → logprob: -13.722977638244629

Token 23: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. '9' → logprob: -16.0
    3. '7' → logprob: -16.875
    4. '```' → logprob: -17.0
    5. '−' → logprob: -17.375
    6. '6' → logprob: -17.375
    7. '8' → logprob: -17.75
    8. '0' → logprob: -18.125
    9. ' -' → logprob: -18.375
    10. '-
' → logprob: -18.375

Token 24: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.35839807987213135
    2. '7' → logprob: -1.4833980798721313
    3. '09' → logprob: -3.358397960662842
    4. '8' → logprob: -4.108397960662842
    5. '07' → logprob: -4.858397960662842
    6. '10' → logprob: -5.108397960662842
    7. '6' → logprob: -5.858397960662842
    8. '08' → logprob: -5.983397960662842
    9. '12' → logprob: -5.983397960662842
    10. '06' → logprob: -7.233397960662842

Token 25: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.19334514439105988
    2. '
' → logprob: -1.9433451890945435
    3. 'def' → logprob: -3.443345069885254
    4. '


' → logprob: -8.068345069885254
    5. '
' → logprob: -8.693345069885254
    6. 'class' → logprob: -10.068345069885254
    7. '' → logprob: -10.568345069885254
    8. ' def' → logprob: -11.568345069885254
    9. 'd' → logprob: -11.568345069885254
    10. '
 
' → logprob: -11.568345069885254

Token 26: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5146816372871399
    2. '
' → logprob: -1.0146815776824951
    3. 'd' → logprob: -3.264681577682495
    4. '

' → logprob: -6.889681816101074
    5. 'de' → logprob: -8.389681816101074
    6. 'class' → logprob: -8.514681816101074
    7. '
' → logprob: -9.139681816101074
    8. '' → logprob: -11.639681816101074
    9. '\' → logprob: -11.889681816101074
    10. '```' → logprob: -12.514681816101074

Token 27: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.057739559561014175
    2. ' calculate' → logprob: -3.182739496231079
    3. ' compute' → logprob: -5.432739734649658
    4. ' find' → logprob: -5.932739734649658
    5. ' space' → logprob: -6.057739734649658
    6. '_' → logprob: -6.807739734649658
    7. ' is' → logprob: -7.057739734649658
    8. ' distance' → logprob: -7.307739734649658
    9. ' f' → logprob: -7.807739734649658
    10. ' calc' → logprob: -8.0577392578125

Token 28: '_equal' (ID: 27882)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.518627405166626
    2. ' _' → logprob: -1.768627405166626
    3. '_equal' → logprob: -2.268627405166626
    4. '_s' → logprob: -3.268627405166626
    5. '_equals' → logprob: -3.393627405166626
    6. '_compare' → logprob: -3.893627405166626
    7. '_eq' → logprob: -4.143627166748047
    8. '_div' → logprob: -5.893627166748047
    9. 's' → logprob: -5.893627166748047
    10. ' ' → logprob: -6.268627166748047

Token 29: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.25257444381713867
    2. '(' → logprob: -1.5025744438171387
    3. ' (' → logprob: -7.627574443817139
    4. '(x' → logprob: -8.877574920654297
    5. '(lhs' → logprob: -11.627574920654297
    6. '(value' → logprob: -12.877574920654297
    7. '(s' → logprob: -13.627574920654297
    8. '(A' → logprob: -14.127574920654297
    9. '(

' → logprob: -14.377574920654297
    10. '(f' → logprob: -14.502574920654297

Token 30: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004172065819147974
    2. ':' → logprob: -8.37541675567627
    3. ',y' → logprob: -9.12541675567627
    4. ' ,' → logprob: -9.50041675567627
    5. ')' → logprob: -14.37541675567627
    6. '):' → logprob: -14.62541675567627
    7. 'y' → logprob: -14.62541675567627
    8. ' y' → logprob: -15.12541675567627
    9. ',x' → logprob: -15.50041675567627
    10. ':int' → logprob: -15.62541675567627

Token 31: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.12852469086647034
    2. ' float' → logprob: -2.1285247802734375
    3. ')' → logprob: -7.1285247802734375
    4. ' ' → logprob: -7.8785247802734375
    5. 'y' → logprob: -9.003524780273438
    6. ',' → logprob: -9.503524780273438
    7. ' y' → logprob: -9.753524780273438
    8. ',float' → logprob: -10.128524780273438
    9. '  ' → logprob: -10.503524780273438
    10. 'x' → logprob: -10.503524780273438

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.735893965815194e-05
    2. ' ,' → logprob: -11.125017166137695
    3. ')' → logprob: -13.250017166137695
    4. ',)' → logprob: -15.125017166137695
    5. ',x' → logprob: -15.500017166137695
    6. ',float' → logprob: -16.375017166137695
    7. ',
' → logprob: -16.500017166137695
    8. '<|end|>' → logprob: -16.750017166137695
    9. ',

' → logprob: -16.875017166137695
    10. '‌,' → logprob: -17.125017166137695

Token 33: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.25193464756011963
    2. 'y' → logprob: -1.5019346475601196
    3. '	y' → logprob: -12.376935005187988
    4. ' ' → logprob: -14.001935005187988
    5. ')' → logprob: -15.251935005187988
    6. ')y' → logprob: -16.626934051513672
    7. '   ' → logprob: -16.751934051513672
    8. ' ' → logprob: -17.126934051513672
    9. '<|end|>' → logprob: -17.501934051513672
    10. '  ' → logprob: -17.626934051513672

Token 34: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31981411576271057
    2. ')' → logprob: -1.8198140859603882
    3. '):' → logprob: -2.1948142051696777
    4. ' ):' → logprob: -9.44481372833252
    5. ',' → logprob: -9.56981372833252
    6. ' )' → logprob: -9.56981372833252
    7. ')->' → logprob: -10.81981372833252
    8. '):
' → logprob: -11.19481372833252
    9. ':)' → logprob: -12.44481372833252
    10. '   ' → logprob: -12.69481372833252

Token 35: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.252085417509079
    2. 'float' → logprob: -1.5020854473114014
    3. ')' → logprob: -9.12708568572998
    4. ' ' → logprob: -10.62708568572998
    5. ' )' → logprob: -12.12708568572998
    6. '	float' → logprob: -12.12708568572998
    7. '<float' → logprob: -13.37708568572998
    8. '=float' → logprob: -13.37708568572998
    9. ',float' → logprob: -13.50208568572998
    10. 'flo' → logprob: -13.62708568572998

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015431294741574675
    2. '):' → logprob: -9.000154495239258
    3. ' )' → logprob: -10.500154495239258
    4. ')->' → logprob: -13.250154495239258
    5. ',' → logprob: -14.500154495239258
    6. '')' → logprob: -15.000154495239258
    7. '   ' → logprob: -15.500154495239258
    8. '`)' → logprob: -15.500154495239258
    9. ',)' → logprob: -16.625154495239258
    10. ' ):' → logprob: -16.750154495239258

Token 37: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.4943253993988037
    2. '->' → logprob: -1.3693253993988037
    3. ')' → logprob: -2.1193253993988037
    4. ')->' → logprob: -4.244325637817383
    5. ':' → logprob: -7.119325637817383
    6. ' )->' → logprob: -8.619325637817383
    7. '   ' → logprob: -8.744325637817383
    8. ' ' → logprob: -9.494325637817383
    9. ' )' → logprob: -10.369325637817383
    10. '  ' → logprob: -11.869325637817383

Token 38: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.03804459050297737
    2. ' bool' → logprob: -3.2880446910858154
    3. ' ' → logprob: -13.163044929504395
    4. '	bool' → logprob: -14.913044929504395
    5. ' ' → logprob: -15.163044929504395
    6. 'int' → logprob: -15.663044929504395
    7. '  ' → logprob: -15.788044929504395
    8. '<bool' → logprob: -16.038043975830078
    9. 'float' → logprob: -16.163043975830078
    10. '   ' → logprob: -16.413043975830078

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1875571544806007e-05
    2. ' :' → logprob: -12.250011444091797
    3. ':return' → logprob: -12.750011444091797
    4. '):' → logprob: -13.125011444091797
    5. ':
' → logprob: -14.250011444091797
    6. ':**' → logprob: -14.500011444091797
    7. '->' → logprob: -15.250011444091797
    8. '   ' → logprob: -16.000011444091797
    9. ':def' → logprob: -16.000011444091797
    10. '():' → logprob: -16.250011444091797

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001632570754736662
    2. ':' → logprob: -6.6266326904296875
    3. ' return' → logprob: -8.376632690429688
    4. '    ' → logprob: -10.751632690429688
    5. ' ' → logprob: -11.626632690429688
    6. ' :' → logprob: -11.626632690429688
    7. ':return' → logprob: -11.751632690429688
    8. ')' → logprob: -12.001632690429688
    9. '   ' → logprob: -12.501632690429688
    10. '  ' → logprob: -12.626632690429688

Token 41: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7065727710723877
    2. '   ' → logprob: -1.2065727710723877
    3. ' return' → logprob: -2.2065727710723877
    4. 'abs' → logprob: -2.4565727710723877
    5. ' abs' → logprob: -4.456572532653809
    6. '	return' → logprob: -11.206572532653809
    7. '    ' → logprob: -11.831572532653809
    8. '(abs' → logprob: -12.206572532653809
    9. ' ' → logprob: -12.456572532653809
    10. '  ' → logprob: -12.956572532653809

Token 42: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.2519320547580719
    2. 'abs' → logprob: -1.5019320249557495
    3. '(abs' → logprob: -13.126932144165039
    4. ' ' → logprob: -14.251932144165039
    5. '   ' → logprob: -15.501932144165039
    6. 'fabs' → logprob: -17.00193214416504
    7. ' fabs' → logprob: -17.75193214416504
    8. '.abs' → logprob: -17.87693214416504
    9. ' ' → logprob: -18.50193214416504
    10. '_abs' → logprob: -18.62693214416504

Token 43: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.061967913061380386
    2. '(' → logprob: -2.8119678497314453
    3. '(
' → logprob: -16.061967849731445
    4. 'x' → logprob: -16.436967849731445
    5. ' (' → logprob: -17.936967849731445
    6. ')' → logprob: -18.311967849731445
    7. '((' → logprob: -18.811967849731445
    8. ' ' → logprob: -18.811967849731445
    9. '(

' → logprob: -19.186967849731445
    10. '(s' → logprob: -20.186967849731445

Token 44: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3133006691932678
    2. ' -' → logprob: -1.313300609588623
    3. ' ' → logprob: -10.688301086425781
    4. '-x' → logprob: -11.813301086425781
    5. '   ' → logprob: -12.063301086425781
    6. '  ' → logprob: -14.188301086425781
    7. '-y' → logprob: -14.438301086425781
    8. '(x' → logprob: -15.063301086425781
    9. ' ' → logprob: -15.438301086425781
    10. ')' → logprob: -15.688301086425781

Token 45: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011048882268369198
    2. ' y' → logprob: -4.511048793792725
    3. ' ' → logprob: -15.011049270629883
    4. '   ' → logprob: -15.386049270629883
    5. '	y' → logprob: -15.511049270629883
    6. ')' → logprob: -16.511049270629883
    7. ')y' → logprob: -16.636049270629883
    8. '    ' → logprob: -17.636049270629883
    9. '  ' → logprob: -17.761049270629883
    10. '<|end|>' → logprob: -18.261049270629883

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. ')<' → logprob: -11.250017166137695
    3. ')<=' → logprob: -12.750017166137695
    4. ' )' → logprob: -13.875017166137695
    5. '）' → logprob: -17.250017166137695
    6. '<' → logprob: -18.000017166137695
    7. '   ' → logprob: -19.875017166137695
    8. '))' → logprob: -20.125017166137695
    9. '")' → logprob: -20.250017166137695
    10. '0' → logprob: -20.250017166137695

Token 47: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10811462253332138
    2. ' <' → logprob: -2.358114719390869
    3. '<=' → logprob: -5.108114719390869
    4. ' <=' → logprob: -6.858114719390869
    5. ')' → logprob: -7.983114719390869
    6. 'EPS' → logprob: -8.483114242553711
    7. '<E' → logprob: -8.858114242553711
    8. ' ' → logprob: -10.483114242553711
    9. ')<' → logprob: -10.983114242553711
    10. '0' → logprob: -11.983114242553711

Token 48: ' EPS' (ID: 66979)
  Prédit: ' EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EPS' → logprob: -0.20141372084617615
    2. 'EPS' → logprob: -1.7014137506484985
    3. 'EP' → logprob: -15.451414108276367
    4. ' ' → logprob: -16.701414108276367
    5. ' ' → logprob: -16.826414108276367
    6. ' EP' → logprob: -16.951414108276367
    7. 'ES' → logprob: -16.951414108276367
    8. 'EOS' → logprob: -17.826414108276367
    9. 'ESP' → logprob: -18.576414108276367
    10. '   ' → logprob: -18.576414108276367

Token 49: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47814691066741943
    2. '\n' → logprob: -1.4781469106674194
    3. '<|end|>' → logprob: -1.9781469106674194
    4. '

' → logprob: -5.478147029876709
    5. 'newline' → logprob: -5.728147029876709
    6. '```' → logprob: -6.353147029876709
    7. '<|end|>' → logprob: -6.728147029876709
    8. '\' → logprob: -6.853147029876709
    9. '' → logprob: -7.478147029876709
    10. ' ' → logprob: -8.35314655303955

Token 50: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33695724606513977
    2. 'def' → logprob: -1.4619572162628174
    3. '

' → logprob: -2.9619572162628174
    4. '\n' → logprob: -6.8369574546813965
    5. '```' → logprob: -7.2119574546813965
    6. '<|end|>' → logprob: -9.086956977844238
    7. '\' → logprob: -9.211956977844238
    8. 'class' → logprob: -9.336956977844238
    9. '
' → logprob: -9.461956977844238
    10. 'x' → logprob: -9.586956977844238

Token 51: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.038647010922431946
    2. ' Vector' → logprob: -3.413646936416626
    3. ' Circle' → logprob: -5.663647174835205
    4. ' Vec' → logprob: -6.788647174835205
    5. ' Space' → logprob: -9.163646697998047
    6. ' ' → logprob: -9.663646697998047
    7. ' Geometry' → logprob: -9.788646697998047
    8. 'Point' → logprob: -10.038646697998047
    9. ' Rectangle' → logprob: -10.413646697998047
    10. ' Triangle' → logprob: -10.413646697998047

Token 52: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010402000043541193
    2. '<|end|>' → logprob: -10.000103950500488
    3. '():' → logprob: -10.500103950500488
    4. ':
' → logprob: -11.375103950500488
    5. '):' → logprob: -11.875103950500488
    6. ':**' → logprob: -12.500103950500488
    7. '(' → logprob: -12.750103950500488
    8. ' :' → logprob: -13.000103950500488
    9. '(object' → logprob: -13.750103950500488
    10. '>:' → logprob: -14.375103950500488

Token 53: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2746347486972809
    2. '<|end|>' → logprob: -1.6496347188949585
    3. '   ' → logprob: -3.774634838104248
    4. ' ' → logprob: -4.774634838104248
    5. '(' → logprob: -5.649634838104248
    6. ':
' → logprob: -5.899634838104248
    7. '```' → logprob: -5.899634838104248
    8. '  
' → logprob: -6.649634838104248
    9. '    
' → logprob: -6.649634838104248
    10. ' :' → logprob: -6.774634838104248

Token 54: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.25386977195739746
    2. ' def' → logprob: -1.5038697719573975
    3. '   ' → logprob: -6.253870010375977
    4. '__' → logprob: -12.003870010375977
    5. ' __' → logprob: -12.003870010375977
    6. '	def' → logprob: -13.628870010375977
    7. ' ' → logprob: -14.128870010375977
    8. '    
' → logprob: -14.253870010375977
    9. '    ' → logprob: -14.878870010375977
    10. '```' → logprob: -15.503870010375977

Token 55: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6336072683334351
    2. ' init' → logprob: -0.8836072683334351
    3. 'init' → logprob: -3.3836073875427246
    4. '_init' → logprob: -4.258607387542725
    5. ' ' → logprob: -5.133607387542725
    6. '__' → logprob: -6.758607387542725
    7. ' def' → logprob: -7.758607387542725
    8. ' ' → logprob: -7.758607387542725
    9. ' _' → logprob: -11.258606910705566
    10. '_' → logprob: -11.633606910705566

Token 56: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.625
    3. '_init' → logprob: -19.25
    4. 'inite' → logprob: -20.25
    5. 'eq' → logprob: -20.25
    6. 'ini' → logprob: -21.0
    7. '	init' → logprob: -22.875
    8. 'int' → logprob: -23.0
    9. '__' → logprob: -23.25
    10. '```' → logprob: -23.375

Token 57: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01542004756629467
    2. '(self' → logprob: -4.265419960021973
    3. '__' → logprob: -7.140419960021973
    4. '__(
' → logprob: -8.390419960021973
    5. '(' → logprob: -9.640419960021973
    6. '__((' → logprob: -9.765419960021973
    7. '<|end|>' → logprob: -9.765419960021973
    8. 'self' → logprob: -11.015419960021973
    9. '__('' → logprob: -11.265419960021973
    10. '__(*' → logprob: -11.515419960021973

Token 58: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.2524021157296374e-05
    2. ' self' → logprob: -9.875052452087402
    3. '(self' → logprob: -14.875052452087402
    4. '	self' → logprob: -15.750052452087402
    5. ')' → logprob: -16.12505340576172
    6. '   ' → logprob: -16.25005340576172
    7. '0' → logprob: -16.50005340576172
    8. ',self' → logprob: -17.00005340576172
    9. '       ' → logprob: -18.00005340576172
    10. ' ' → logprob: -18.12505340576172

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01915748231112957
    2. ' ,' → logprob: -4.019157409667969
    3. '<|end|>' → logprob: -7.269157409667969
    4. 'self' → logprob: -9.019157409667969
    5. ')' → logprob: -9.144157409667969
    6. ',self' → logprob: -10.894157409667969
    7. '<|end|>' → logprob: -11.144157409667969
    8. ' self' → logprob: -11.144157409667969
    9. '(self' → logprob: -11.644157409667969
    10. ' (' → logprob: -12.019157409667969

Token 60: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.40876543521881104
    2. 'self' → logprob: -1.158765435218811
    3. ' self' → logprob: -4.4087653160095215
    4. ' x' → logprob: -4.6587653160095215
    5. '   ' → logprob: -12.65876579284668
    6. '	x' → logprob: -13.65876579284668
    7. '	self' → logprob: -13.78376579284668
    8. ')x' → logprob: -14.03376579284668
    9. ' ' → logprob: -14.28376579284668
    10. ')' → logprob: -14.53376579284668

Token 61: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014035627245903015
    2. ':' → logprob: -4.514035701751709
    3. ' ,' → logprob: -6.764035701751709
    4. '=' → logprob: -7.139035701751709
    5. ')' → logprob: -7.389035701751709
    6. '<|end|>' → logprob: -8.38903522491455
    7. '<|end|>' → logprob: -9.38903522491455
    8. ',x' → logprob: -10.26403522491455
    9. ':int' → logprob: -11.01403522491455
    10. ' )' → logprob: -11.38903522491455

Token 62: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.47418609261512756
    2. 'float' → logprob: -0.9741860628128052
    3. '=float' → logprob: -9.974185943603516
    4. 'int' → logprob: -11.349185943603516
    5. ')' → logprob: -11.599185943603516
    6. ' )' → logprob: -11.724185943603516
    7. '0' → logprob: -11.849185943603516
    8. '(float' → logprob: -12.224185943603516
    9. ' ' → logprob: -12.349185943603516
    10. ' int' → logprob: -12.349185943603516

Token 63: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006819340633228421
    2. ' ,' → logprob: -7.6256818771362305
    3. '<|end|>' → logprob: -9.00068187713623
    4. ',x' → logprob: -10.62568187713623
    5. ')' → logprob: -10.75068187713623
    6. '<|end|>' → logprob: -11.37568187713623
    7. '   ' → logprob: -12.37568187713623
    8. ',int' → logprob: -13.75068187713623
    9. ',p' → logprob: -13.75068187713623
    10. ':' → logprob: -14.00068187713623

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. ')' → logprob: -17.750911712646484
    4. '   ' → logprob: -18.250911712646484
    5. '=' → logprob: -18.625911712646484
    6. ' )' → logprob: -19.750911712646484
    7. 'None' → logprob: -20.000911712646484
    8. ' ' → logprob: -20.125911712646484
    9. '  ' → logprob: -20.250911712646484
    10. '۰' → logprob: -20.500911712646484

Token 65: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0028487443923950195
    2. ',' → logprob: -6.2528486251831055
    3. '.,' → logprob: -7.0028486251831055
    4. ')' → logprob: -12.252848625183105
    5. '.)' → logprob: -13.002848625183105
    6. '.
' → logprob: -13.877848625183105
    7. '.

' → logprob: -14.002848625183105
    8. ' ,' → logprob: -14.252848625183105
    9. '.:' → logprob: -15.502848625183105
    10. '.):' → logprob: -15.877848625183105

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '5' → logprob: -19.125
    4. ')' → logprob: -19.625
    5. '```' → logprob: -19.875
    6. ',' → logprob: -20.25
    7. '   ' → logprob: -21.0
    8. 'float' → logprob: -21.0
    9. '  ' → logprob: -21.5
    10. 'x' → logprob: -21.5

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006772888009436429
    2. ' ,' → logprob: -7.375677108764648
    3. ',x' → logprob: -10.375677108764648
    4. ')' → logprob: -11.875677108764648
    5. '<|end|>' → logprob: -12.250677108764648
    6. ',y' → logprob: -13.625677108764648
    7. '):' → logprob: -13.625677108764648
    8. ' ' → logprob: -13.750677108764648
    9. ',p' → logprob: -14.125677108764648
    10. ',float' → logprob: -14.375677108764648

Token 68: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.575954020023346
    2. 'y' → logprob: -0.825954020023346
    3. ' ' → logprob: -11.82595443725586
    4. '<|end|>' → logprob: -12.45095443725586
    5. '	y' → logprob: -12.70095443725586
    6. '<|end|>' → logprob: -16.32595443725586
    7. ',y' → logprob: -16.57595443725586
    8. ' ' → logprob: -16.82595443725586
    9. 'x' → logprob: -16.82595443725586
    10. ')y' → logprob: -17.20095443725586

Token 69: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08282031118869781
    2. ':' → logprob: -2.707820415496826
    3. ')' → logprob: -4.582820415496826
    4. '<|end|>' → logprob: -6.582820415496826
    5. '):' → logprob: -7.332820415496826
    6. ')=' → logprob: -8.582819938659668
    7. '<|end|>' → logprob: -8.957819938659668
    8. '=None' → logprob: -9.332819938659668
    9. '=}' → logprob: -10.082819938659668
    10. '=float' → logprob: -10.457819938659668

Token 70: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.8251953125
    2. ' float' → logprob: -1.2001953125
    3. '0' → logprob: -1.5751953125
    4. ' ' → logprob: -3.0751953125
    5. '=float' → logprob: -5.3251953125
    6. ')' → logprob: -7.0751953125
    7. '<|end|>' → logprob: -7.4501953125
    8. '<float' → logprob: -8.0751953125
    9. ',float' → logprob: -8.0751953125
    10. ' )' → logprob: -8.4501953125

Token 71: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03930683806538582
    2. ':' → logprob: -3.289306879043579
    3. '=float' → logprob: -6.914306640625
    4. ')' → logprob: -8.414306640625
    5. ' =' → logprob: -10.789306640625
    6. '):' → logprob: -11.039306640625
    7. ')=' → logprob: -12.539306640625
    8. '=None' → logprob: -12.664306640625
    9. ' :' → logprob: -13.914306640625
    10. '<|end|>' → logprob: -13.914306640625

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. ')' → logprob: -16.500015258789062
    4. '<|end|>' → logprob: -18.500015258789062
    5. '```' → logprob: -19.625015258789062
    6. '۰' → logprob: -19.625015258789062
    7. '   ' → logprob: -19.750015258789062
    8. 'float' → logprob: -19.875015258789062
    9. '  ' → logprob: -20.250015258789062
    10. '<|end|>' → logprob: -20.250015258789062

Token 73: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.008129963040119e-06
    2. '.)' → logprob: -12.625003814697266
    3. ')' → logprob: -14.375003814697266
    4. ' .' → logprob: -17.500003814697266
    5. '.Point' → logprob: -17.875003814697266
    6. '.​' → logprob: -18.250003814697266
    7. '0' → logprob: -18.750003814697266
    8. '.

' → logprob: -20.125003814697266
    9. '.\' → logprob: -20.125003814697266
    10. '.py' → logprob: -20.375003814697266

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -13.250003814697266
    3. ')' → logprob: -14.000003814697266
    4. '5' → logprob: -14.250003814697266
    5. '1' → logprob: -15.375003814697266
    6. '6' → logprob: -16.500003814697266
    7. '   ' → logprob: -17.500003814697266
    8. '```' → logprob: -18.000003814697266
    9. '3' → logprob: -18.500003814697266
    10. '  ' → logprob: -19.250003814697266

Token 75: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005941952113062143
    2. ')' → logprob: -5.130941867828369
    3. '):
' → logprob: -12.380942344665527
    4. ' ):' → logprob: -12.505942344665527
    5. ':' → logprob: -12.630942344665527
    6. '   ' → logprob: -13.630942344665527
    7. ',' → logprob: -14.630942344665527
    8. ''):' → logprob: -16.25594139099121
    9. ' ' → logprob: -16.38094139099121
    10. '),' → logprob: -16.50594139099121

Token 76: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005271111149340868
    2. '):' → logprob: -5.255270957946777
    3. ' :' → logprob: -10.755270957946777
    4. ':**' → logprob: -12.630270957946777
    5. ':return' → logprob: -13.130270957946777
    6. ',' → logprob: -13.130270957946777
    7. ')' → logprob: -13.255270957946777
    8. '>:' → logprob: -14.005270957946777
    9. '<|end|>' → logprob: -14.005270957946777
    10. ':def' → logprob: -14.255270957946777

Token 77: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6931549310684204
    2. 'None' → logprob: -0.6931549310684204
    3. ' ' → logprob: -12.068155288696289
    4. ' Point' → logprob: -14.693155288696289
    5. 'Point' → logprob: -14.818155288696289
    6. ')' → logprob: -15.193155288696289
    7. '_None' → logprob: -15.193155288696289
    8. '  ' → logprob: -15.693155288696289
    9. 'none' → logprob: -15.943155288696289
    10. ' none' → logprob: -16.19315528869629

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005664954078383744
    2. '):' → logprob: -7.500566482543945
    3. ' :' → logprob: -12.250566482543945
    4. ':**' → logprob: -12.500566482543945
    5. ',' → logprob: -13.375566482543945
    6. '<|end|>' → logprob: -14.000566482543945
    7. '():' → logprob: -14.625566482543945
    8. ':
' → logprob: -14.625566482543945
    9. ':return' → logprob: -15.000566482543945
    10. '.' → logprob: -15.125566482543945

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002248507458716631
    2. '   ' → logprob: -6.502248287200928
    3. ' ' → logprob: -8.502248764038086
    4. '<|end|>' → logprob: -8.752248764038086
    5. 'x' → logprob: -9.002248764038086
    6. '    ' → logprob: -9.127248764038086
    7. 'self' → logprob: -9.752248764038086
    8. '      ' → logprob: -10.877248764038086
    9. '     ' → logprob: -11.377248764038086
    10. ')' → logprob: -11.752248764038086

Token 80: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.11027603596448898
    2. '       ' → logprob: -2.610275983810425
    3. ' self' → logprob: -3.485275983810425
    4. '   ' → logprob: -9.360276222229004
    5. ' ' → logprob: -9.485276222229004
    6. '	self' → logprob: -10.360276222229004
    7. ' ' → logprob: -10.485276222229004
    8. 's' → logprob: -11.485276222229004
    9. '        ' → logprob: -12.235276222229004
    10. 'x' → logprob: -12.735276222229004

Token 81: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002504793694242835
    2. '.x' → logprob: -6.002504825592041
    3. ' .' → logprob: -10.502504348754883
    4. ' ' → logprob: -15.627504348754883
    5. '‌.' → logprob: -15.752504348754883
    6. '.user' → logprob: -15.877504348754883
    7. '.py' → logprob: -16.002504348754883
    8. '._' → logprob: -16.627504348754883
    9. '.point' → logprob: -16.627504348754883
    10. '.)' → logprob: -16.752504348754883

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39464157819747925
    2. '=' → logprob: -1.519641637802124
    3. '<|end|>' → logprob: -3.019641637802124
    4. ',' → logprob: -3.394641637802124
    5. ' ,' → logprob: -4.769641399383545
    6. ' ' → logprob: -4.769641399383545
    7. '<|end|>' → logprob: -5.644641399383545
    8. ')' → logprob: -6.894641399383545
    9. '    ' → logprob: -6.894641399383545
    10. ' +=' → logprob: -7.894641399383545

Token 83: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31326213479042053
    2. ' x' → logprob: -1.3132621049880981
    3. '0' → logprob: -14.813261985778809
    4. '	x' → logprob: -16.688262939453125
    5. ' ' → logprob: -18.188262939453125
    6. 'float' → logprob: -18.938262939453125
    7. ' float' → logprob: -19.313262939453125
    8. ')x' → logprob: -19.313262939453125
    9. '$x' → logprob: -20.313262939453125
    10. '(x' → logprob: -20.563262939453125

Token 84: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08507752418518066
    2. ' self' → logprob: -3.0850775241851807
    3. '       ' → logprob: -3.3350775241851807
    4. '   ' → logprob: -9.085077285766602
    5. '	self' → logprob: -9.460077285766602
    6. '
' → logprob: -11.335077285766602
    7. ' ' → logprob: -11.585077285766602
    8. ' ' → logprob: -13.710077285766602
    9. '        ' → logprob: -13.835077285766602
    10. '  ' → logprob: -14.210077285766602

Token 87: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013424931094050407
    2. '<|end|>' → logprob: -6.751342296600342
    3. '<|end|>' → logprob: -9.6263427734375
    4. '.y' → logprob: -9.8763427734375
    5. '.x' → logprob: -10.3763427734375
    6. ' .' → logprob: -11.8763427734375
    7. ' ' → logprob: -12.3763427734375
    8. '.py' → logprob: -13.5013427734375
    9. '.space' → logprob: -13.7513427734375
    10. ')' → logprob: -14.2513427734375

Token 88: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20141352713108063
    2. ' y' → logprob: -1.7014135122299194
    3. ' ' → logprob: -15.45141315460205
    4. '	y' → logprob: -16.826414108276367
    5. '0' → logprob: -17.701414108276367
    6. ' ' → logprob: -18.576414108276367
    7. '<|end|>' → logprob: -19.076414108276367
    8. ')y' → logprob: -19.201414108276367
    9. 'x' → logprob: -19.576414108276367
    10. ''y' → logprob: -20.451414108276367

Token 90: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0558611154556274
    2. '<|end|>' → logprob: -1.3058611154556274
    3. '    
' → logprob: -1.5558611154556274
    4. '   ' → logprob: -2.055860996246338
    5. ' 
' → logprob: -4.305860996246338
    6. '  
' → logprob: -4.430860996246338
    7. ' ' → logprob: -5.180860996246338
    8. '\n' → logprob: -6.305860996246338
    9. '<|end|>' → logprob: -6.305860996246338
    10. '   
' → logprob: -6.430860996246338

Token 91: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9642730951309204
    2. '<|end|>' → logprob: -1.0892730951309204
    3. '   ' → logprob: -1.7142730951309204
    4. '    
' → logprob: -2.589272975921631
    5. ' 
' → logprob: -4.339272975921631
    6. '  
' → logprob: -5.339272975921631
    7. ' ' → logprob: -5.714272975921631
    8. '   
' → logprob: -6.839272975921631
    9. '<|end|>' → logprob: -6.839272975921631
    10. '\n' → logprob: -7.089272975921631

Token 92: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01552546862512827
    2. '   ' → logprob: -4.7655253410339355
    3. ' def' → logprob: -5.5155253410339355
    4. '    
' → logprob: -6.1405253410339355
    5. '
' → logprob: -7.6405253410339355
    6. '@property' → logprob: -9.890525817871094
    7. ' 
' → logprob: -9.890525817871094
    8. '  
' → logprob: -10.515525817871094
    9. '        
' → logprob: -10.640525817871094
    10. '   
' → logprob: -10.890525817871094

Token 93: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010159874334931374
    2. '  ' → logprob: -6.260159969329834
    3. '<|end|>' → logprob: -6.260159969329834
    4. '.' → logprob: -6.385159969329834
    5. ' .' → logprob: -6.635159969329834
    6. '_' → logprob: -7.135159969329834
    7. ')' → logprob: -7.385159969329834
    8. ' ' → logprob: -7.885159969329834
    9. '_distance' → logprob: -8.385159492492676
    10. '_space' → logprob: -8.385159492492676

Token 94: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -5.6696149840718135e-05
    2. 'e' → logprob: -10.375056266784668
    3. 'add' → logprob: -10.875056266784668
    4. 'init' → logprob: -13.250056266784668
    5. 'repr' → logprob: -13.750056266784668
    6. 'str' → logprob: -14.250056266784668
    7. '==' → logprob: -14.250056266784668
    8. 'a' → logprob: -14.500056266784668
    9. ' eq' → logprob: -14.625056266784668
    10. '_eq' → logprob: -14.875056266784668

Token 95: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5294996500015259
    2. '__(' → logprob: -0.9044996500015259
    3. '__('' → logprob: -5.654499530792236
    4. '__(
' → logprob: -6.404499530792236
    5. '(' → logprob: -7.404499530792236
    6. '_' → logprob: -8.279500007629395
    7. '__("' → logprob: -8.779500007629395
    8. '__((' → logprob: -9.404500007629395
    9. '___' → logprob: -9.904500007629395
    10. '__(*' → logprob: -11.279500007629395

Token 96: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000566137779969722
    2. ')' → logprob: -7.500566005706787
    3. ' self' → logprob: -12.000566482543945
    4. ' ' → logprob: -12.875566482543945
    5. '
' → logprob: -13.625566482543945
    6. '<|end|>' → logprob: -13.750566482543945
    7. '   ' → logprob: -14.750566482543945
    8. '  ' → logprob: -14.875566482543945
    9. '(self' → logprob: -15.125566482543945
    10. 's' → logprob: -15.125566482543945

Token 97: ')' (ID: 8)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14951567351818085
    2. '__)' → logprob: -3.0245156288146973
    3. '__(' → logprob: -4.024515628814697
    4. ')' → logprob: -4.149515628814697
    5. '__('' → logprob: -4.149515628814697
    6. '__:' → logprob: -4.274515628814697
    7. '__,' → logprob: -5.149515628814697
    8. '):' → logprob: -5.274515628814697
    9. 'self' → logprob: -5.649515628814697
    10. '__(
' → logprob: -6.149515628814697

Token 98: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4863787293434143
    2. '(' → logprob: -0.9863787293434143
    3. ':' → logprob: -5.4863786697387695
    4. 'self' → logprob: -6.2363786697387695
    5. 's' → logprob: -6.3613786697387695
    6. '(s' → logprob: -6.7363786697387695
    7. '(
' → logprob: -6.9863786697387695
    8. ')' → logprob: -7.1113786697387695
    9. '<|end|>' → logprob: -7.7363786697387695
    10. '```' → logprob: -8.98637866973877

Token 99: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.4740903675556183
    2. 'str' → logprob: -0.9740903377532959
    3. ' ' → logprob: -11.474090576171875
    4. '  ' → logprob: -14.099090576171875
    5. '	str' → logprob: -14.474090576171875
    6. 'stri' → logprob: -15.099090576171875
    7. '   ' → logprob: -15.224090576171875
    8. '[str' → logprob: -15.349090576171875
    9. ':str' → logprob: -15.724090576171875
    10. ' '' → logprob: -15.849090576171875

Token 100: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10247929394245148
    2. '(' → logprob: -2.3524792194366455
    3. ':' → logprob: -6.227479457855225
    4. '(
' → logprob: -8.477478981018066
    5. '(s' → logprob: -10.102478981018066
    6. 'self' → logprob: -10.477478981018066
    7. '       ' → logprob: -11.977478981018066
    8. ':self' → logprob: -12.852478981018066
    9. ':
' → logprob: -13.352478981018066
    10. '   ' → logprob: -13.977478981018066

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10824461281299591
    2. ' f' → logprob: -2.4832446575164795
    3. 'f' → logprob: -3.9832446575164795
    4. '   ' → logprob: -8.358244895935059
    5. 'return' → logprob: -9.858244895935059
    6. '    ' → logprob: -9.858244895935059
    7. ' return' → logprob: -10.233244895935059
    8. ''' → logprob: -10.358244895935059
    9. '     ' → logprob: -10.483244895935059
    10. '      ' → logprob: -10.858244895935059

Token 102: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6702485084533691
    2. '       ' → logprob: -1.4202485084533691
    3. 'return' (adapté à ' return') → logprob: -1.4202485084533691
    4. ' f' → logprob: -5.670248508453369
    5. ' return' → logprob: -6.420248508453369
    6. '   ' → logprob: -10.420248031616211
    7. '	return' → logprob: -13.295248031616211
    8. '           ' → logprob: -14.045248031616211
    9. '     ' → logprob: -14.795248031616211
    10. '```' → logprob: -14.920248031616211

Token 103: ' "' (ID: 392)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03804447129368782
    2. ' f' → logprob: -3.2880444526672363
    3. '	f' → logprob: -13.913044929504395
    4. '   ' → logprob: -14.163044929504395
    5. ''f' → logprob: -14.288044929504395
    6. ' ' → logprob: -15.163044929504395
    7. '(f' → logprob: -15.163044929504395
    8. '"' → logprob: -16.038043975830078
    9. 'F' → logprob: -16.538043975830078
    10. ''' → logprob: -17.913043975830078

Token 104: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.06287103146314621
    2. 'f' → logprob: -2.812870979309082
    3. '(Point' → logprob: -7.187870979309082
    4. '"' → logprob: -9.562870979309082
    5. '<Point' → logprob: -10.562870979309082
    6. '(f' → logprob: -10.687870979309082
    7. '{"' → logprob: -11.812870979309082
    8. '("' → logprob: -11.937870979309082
    9. ' Point' → logprob: -12.687870979309082
    10. '	Point' → logprob: -13.312870979309082

Token 105: '({},' (ID: 45594)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33272355794906616
    2. '(f' → logprob: -1.332723617553711
    3. '(x' → logprob: -4.207723617553711
    4. '("' → logprob: -5.457723617553711
    5. 'f' → logprob: -10.332723617553711
    6. '("("' → logprob: -10.457723617553711
    7. '(`' → logprob: -10.957723617553711
    8. '(Point' → logprob: -10.957723617553711
    9. '({' → logprob: -12.207723617553711
    10. '(self' → logprob: -12.207723617553711

Token 106: ' {})' (ID: 75167)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1058024913072586
    2. '{})' → logprob: -2.980802536010742
    3. '{}' → logprob: -3.605802536010742
    4. '{' → logprob: -4.730802536010742
    5. '{},' → logprob: -4.980802536010742
    6. ' self' → logprob: -5.855802536010742
    7. '{}.' → logprob: -6.355802536010742
    8. ')' → logprob: -7.355802536010742
    9. ' {})' → logprob: -7.605802536010742
    10. '{}".' → logprob: -7.730802536010742

Token 107: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.02752108871936798
    2. '.format' → logprob: -3.6525211334228516
    3. '.' → logprob: -7.152521133422852
    4. '(".' → logprob: -9.027521133422852
    5. 'format' → logprob: -9.402521133422852
    6. '"' → logprob: -9.902521133422852
    7. '.f' → logprob: -10.152521133422852
    8. '(format' → logprob: -10.277521133422852
    9. '{}".' → logprob: -10.652521133422852
    10. '(self' → logprob: -10.902521133422852

Token 108: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -4.60414821645827e-06
    2. ' format' → logprob: -12.375004768371582
    3. '	format' → logprob: -15.375004768371582
    4. 'form' → logprob: -16.750003814697266
    5. '(format' → logprob: -16.750003814697266
    6. '__' → logprob: -19.000003814697266
    7. 'join' → logprob: -19.250003814697266
    8. ' ' → logprob: -19.375003814697266
    9. '=format' → logprob: -19.750003814697266
    10. 'forma' → logprob: -19.875003814697266

Token 109: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.837811088189483e-05
    2. '(' → logprob: -9.625068664550781
    3. 'self' → logprob: -13.125068664550781
    4. '(
' → logprob: -15.875068664550781
    5. '(s' → logprob: -16.00006866455078
    6. ' self' → logprob: -17.87506866455078
    7. ',self' → logprob: -18.12506866455078
    8. '(round' → logprob: -18.12506866455078
    9. ' (' → logprob: -18.75006866455078
    10. '(Self' → logprob: -18.87506866455078

Token 110: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0005543439765460789
    2. '.' → logprob: -7.50055456161499
    3. 'x' → logprob: -14.000554084777832
    4. ' .' → logprob: -15.000554084777832
    5. ',' → logprob: -16.75055503845215
    6. ',x' → logprob: -17.37555503845215
    7. ' ' → logprob: -17.50055503845215
    8. '<|end|>' → logprob: -17.62555503845215
    9. ').' → logprob: -17.75055503845215
    10. 'self' → logprob: -18.25055503845215

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ' ,' → logprob: -12.000007629394531
    3. ',
' → logprob: -13.750007629394531
    4. ',self' → logprob: -14.500007629394531
    5. ',y' → logprob: -16.12500762939453
    6. ',

' → logprob: -17.25000762939453
    7. '<|end|>' → logprob: -17.75000762939453
    8. ',x' → logprob: -18.00000762939453
    9. ',p' → logprob: -18.25000762939453
    10. ',",' → logprob: -18.50000762939453

Token 112: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759525299072266
    2. 'self' → logprob: -0.8259525299072266
    3. '	self' → logprob: -12.575952529907227
    4. ' ' → logprob: -12.825952529907227
    5. '<|end|>' → logprob: -12.950952529907227
    6. '    ' → logprob: -13.200952529907227
    7. ' ' → logprob: -13.700952529907227
    8. ' 
' → logprob: -15.450952529907227
    9. '_self' → logprob: -15.575952529907227
    10. '(self' → logprob: -15.575952529907227

Token 113: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.576046884059906
    2. '.y' → logprob: -0.826046884059906
    3. '.x' → logprob: -9.32604694366455
    4. ')' → logprob: -12.20104694366455
    5. ').' → logprob: -12.32604694366455
    6. '.user' → logprob: -12.82604694366455
    7. ' .' → logprob: -13.07604694366455
    8. '.s' → logprob: -14.45104694366455
    9. '.point' → logprob: -14.57604694366455
    10. '<|end|>' → logprob: -14.70104694366455

Token 114: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -16.125001907348633
    4. '))' → logprob: -16.375001907348633
    5. ')return' → logprob: -16.875001907348633
    6. '<|end|>' → logprob: -17.250001907348633
    7. ')`' → logprob: -17.625001907348633
    8. '   ' → logprob: -17.625001907348633
    9. '),' → logprob: -18.125001907348633
    10. ',' → logprob: -18.125001907348633

Token 115: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6758002042770386
    2. 'def' (adapté à ' def') → logprob: -0.8008002042770386
    3. '
' → logprob: -3.925800323486328
    4. '    
' → logprob: -4.675800323486328
    5. ' def' → logprob: -4.800800323486328
    6. '<|end|>' → logprob: -6.925800323486328
    7. '  
' → logprob: -7.175800323486328
    8. ' ' → logprob: -7.300800323486328
    9. '	def' → logprob: -7.300800323486328
    10. ' 
' → logprob: -7.425800323486328

Token 117: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.108245350420475
    2. ' distance' → logprob: -3.483245372772217
    3. ' def' → logprob: -3.608245372772217
    4. ' x' → logprob: -4.358245372772217
    5. ' __' → logprob: -4.608245372772217
    6. ' ' → logprob: -4.733245372772217
    7. 'distance' → logprob: -5.483245372772217
    8. '_distance' → logprob: -5.983245372772217
    9. ' _' → logprob: -6.358245372772217
    10. ' vector' → logprob: -7.233245372772217

Token 118: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0014872431056573987
    2. 'add' → logprob: -7.0014872550964355
    3. 'sub' → logprob: -7.6264872550964355
    4. 'lt' → logprob: -9.376486778259277
    5. ' eq' → logprob: -13.876486778259277
    6. 'mul' → logprob: -14.376486778259277
    7. 'e' → logprob: -15.251486778259277
    8. 'le' → logprob: -15.376486778259277
    9. 'init' → logprob: -15.376486778259277
    10. ' ' → logprob: -15.376486778259277

Token 119: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1603219211101532
    2. '__(' → logprob: -1.9103219509124756
    3. '__('' → logprob: -10.035322189331055
    4. '__((' → logprob: -11.035322189331055
    5. '__(
' → logprob: -11.285322189331055
    6. '___' → logprob: -11.535322189331055
    7. '_' → logprob: -12.035322189331055
    8. '__("' → logprob: -12.660322189331055
    9. '__(*' → logprob: -13.035322189331055
    10. '__.__' → logprob: -13.535322189331055

Token 120: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000721487682312727
    2. 'other' → logprob: -7.250721454620361
    3. ' self' → logprob: -11.75072193145752
    4. '<|end|>' → logprob: -13.12572193145752
    5. '
' → logprob: -14.50072193145752
    6. ')' → logprob: -14.50072193145752
    7. '(self' → logprob: -15.12572193145752
    8. ' other' → logprob: -15.62572193145752
    9. ' ' → logprob: -16.625720977783203
    10. '0' → logprob: -17.250720977783203

Token 121: ',' (ID: 11)
  Prédit: '__,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__,' → logprob: -0.5365664958953857
    2. ',' → logprob: -1.4115664958953857
    3. '__' → logprob: -1.7865664958953857
    4. '__(' → logprob: -6.411566734313965
    5. '__)' → logprob: -6.536566734313965
    6. ')' → logprob: -8.161566734313965
    7. 'self' → logprob: -8.661566734313965
    8. '__,
' → logprob: -9.161566734313965
    9. ',__' → logprob: -9.911566734313965
    10. '__(*' → logprob: -9.911566734313965

Token 122: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.1602400690317154
    2. 'other' → logprob: -1.9102400541305542
    3. ' o' → logprob: -11.285240173339844
    4. 'o' → logprob: -13.910240173339844
    5. ' oth' → logprob: -14.035240173339844
    6. 'Other' → logprob: -15.160240173339844
    7. 'oth' → logprob: -15.285240173339844
    8. ' ' → logprob: -15.285240173339844
    9. 'othe' → logprob: -15.410240173339844
    10. '(other' → logprob: -15.535240173339844

Token 123: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22512997686862946
    2. '):' → logprob: -1.7251299619674683
    3. ':' → logprob: -3.850130081176758
    4. ' )' → logprob: -6.600130081176758
    5. ' ):' → logprob: -7.225130081176758
    6. ' :' → logprob: -9.975130081176758
    7. ' ' → logprob: -11.475130081176758
    8. '):
' → logprob: -12.350130081176758
    9. '   ' → logprob: -12.600130081176758
    10. ',' → logprob: -12.850130081176758

Token 124: ' object' (ID: 2817)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6474220156669617
    2. ' )' → logprob: -0.8974220156669617
    3. ' ' → logprob: -3.0224220752716064
    4. ' Point' → logprob: -4.772421836853027
    5. 'Point' → logprob: -4.897421836853027
    6. ' ):' → logprob: -6.647421836853027
    7. '):' → logprob: -7.147421836853027
    8. '  ' → logprob: -7.272421836853027
    9. ' object' → logprob: -8.397421836853027
    10. '):
' → logprob: -8.647421836853027

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002124806633219123
    2. '):' → logprob: -8.625212669372559
    3. ' )' → logprob: -10.500212669372559
    4. ')->' → logprob: -12.625212669372559
    5. ':' → logprob: -13.250212669372559
    6. '):
' → logprob: -16.000211715698242
    7. ' ):' → logprob: -16.375211715698242
    8. ' )->' → logprob: -17.250211715698242
    9. '   ' → logprob: -17.500211715698242
    10. ' ' → logprob: -17.750211715698242

Token 126: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13996738195419312
    2. ')' → logprob: -2.764967441558838
    3. ' ->' → logprob: -3.139967441558838
    4. ')->' → logprob: -4.139967441558838
    5. '->' → logprob: -5.139967441558838
    6. '):' → logprob: -6.264967441558838
    7. ' :' → logprob: -7.764967441558838
    8. '   ' → logprob: -9.13996696472168
    9. ' )->' → logprob: -10.01496696472168
    10. '       ' → logprob: -10.13996696472168

Token 127: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.20143486559391022
    2. ' bool' → logprob: -1.701434850692749
    3. '	bool' → logprob: -11.326435089111328
    4. ' ' → logprob: -12.326435089111328
    5. '<bool' → logprob: -13.451435089111328
    6. '  ' → logprob: -13.576435089111328
    7. '   ' → logprob: -13.576435089111328
    8. ' ' → logprob: -14.451435089111328
    9. '```' → logprob: -15.701435089111328
    10. '    ' → logprob: -16.076435089111328

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.4060561776859686e-05
    2. '):' → logprob: -10.375043869018555
    3. ':
' → logprob: -12.125043869018555
    4. ' :' → logprob: -12.250043869018555
    5. ':return' → logprob: -13.250043869018555
    6. ':**' → logprob: -15.750043869018555
    7. ':def' → logprob: -16.125043869018555
    8. ')' → logprob: -16.125043869018555
    9. '):
' → logprob: -16.750043869018555
    10. '>:' → logprob: -16.875043869018555

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08763020485639572
    2. ':' → logprob: -3.587630271911621
    3. '<|end|>' → logprob: -3.587630271911621
    4. '    ' → logprob: -4.712630271911621
    5. '):' → logprob: -4.837630271911621
    6. ')' → logprob: -5.962630271911621
    7. '):
' → logprob: -5.962630271911621
    8. '   ' → logprob: -6.087630271911621
    9. ' ' → logprob: -7.212630271911621
    10. '        ' → logprob: -7.712630271911621

Token 130: ' if' (ID: 538)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.07037407159805298
    2. ' isinstance' → logprob: -2.945374011993408
    3. 'if' (adapté à ' if') → logprob: -4.570374011993408
    4. 'return' → logprob: -6.195374011993408
    5. '       ' → logprob: -6.570374011993408
    6. 'not' → logprob: -7.195374011993408
    7. '   ' → logprob: -8.445374488830566
    8. 'True' → logprob: -9.070374488830566
    9. '           ' → logprob: -9.195374488830566
    10. 'abs' → logprob: -9.320374488830566

Token 131: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1345302015542984
    2. 'not' → logprob: -2.1345303058624268
    3. ' isinstance' → logprob: -4.884530067443848
    4. 'is' → logprob: -12.134530067443848
    5. '   ' → logprob: -12.509530067443848
    6. '	not' → logprob: -13.884530067443848
    7. '    ' → logprob: -15.384530067443848
    8. ' ' → logprob: -16.384531021118164
    9. '(not' → logprob: -16.634531021118164
    10. '_not' → logprob: -16.759531021118164

Token 132: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.001502598519437015
    2. 'is' → logprob: -6.501502513885498
    3. ' hasattr' → logprob: -15.501502990722656
    4. '(is' → logprob: -17.626502990722656
    5. '
' → logprob: -17.751502990722656
    6. ' is' → logprob: -18.501502990722656
    7. '   ' → logprob: -19.251502990722656
    8. 'Is' → logprob: -19.501502990722656
    9. '    ' → logprob: -19.751502990722656
    10. '

' → logprob: -20.001502990722656

Token 133: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -9.889424836728722e-05
    2. 'other' → logprob: -9.250099182128906
    3. ' other' → logprob: -12.875099182128906
    4. 'Other' → logprob: -15.875099182128906
    5. '(' → logprob: -17.625099182128906
    6. '_other' → logprob: -18.000099182128906
    7. '.other' → logprob: -19.500099182128906
    8. 'OTHER' → logprob: -20.375099182128906
    9. '-other' → logprob: -21.750099182128906
    10. ' (' → logprob: -22.375099182128906

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4274766743183136
    2. '(self' → logprob: -1.5524766445159912
    3. '(Point' → logprob: -2.677476644515991
    4. '(' → logprob: -3.052476644515991
    5. ')' → logprob: -4.05247688293457
    6. '(other' → logprob: -6.55247688293457
    7. ' (' → logprob: -7.80247688293457
    8. 'self' → logprob: -8.30247688293457
    9. ' ,' → logprob: -8.92747688293457
    10. '<|end|>' → logprob: -9.30247688293457

Token 135: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.3868733048439026
    2. 'Point' → logprob: -1.1368732452392578
    3. '	Point' → logprob: -13.136873245239258
    4. '_Point' → logprob: -15.636873245239258
    5. '(Point' → logprob: -15.886873245239258
    6. '<Point' → logprob: -17.261873245239258
    7. ' ' → logprob: -17.261873245239258
    8. '  ' → logprob: -18.011873245239258
    9. '   ' → logprob: -18.386873245239258
    10. '.Point' → logprob: -19.261873245239258

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038578420877456665
    2. '):
' → logprob: -3.288578510284424
    3. ')' → logprob: -7.663578510284424
    4. ' ):' → logprob: -9.788578033447266
    5. '):
' → logprob: -12.163578033447266
    6. '):

' → logprob: -13.038578033447266
    7. ' ):
' → logprob: -13.413578033447266
    8. '   ' → logprob: -13.538578033447266
    9. ':' → logprob: -14.788578033447266
    10. '       ' → logprob: -15.663578033447266

Token 137: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015705463010817766
    2. 'return' → logprob: -9.000157356262207
    3. ' return' → logprob: -10.625157356262207
    4. '               ' → logprob: -13.000157356262207
    5. ':return' → logprob: -13.125157356262207
    6. '
' → logprob: -13.500157356262207
    7. ':' → logprob: -14.125157356262207
    8. '       ' → logprob: -14.125157356262207
    9. ':
' → logprob: -15.000157356262207
    10. '          ' → logprob: -15.125157356262207

Token 138: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.032520439475774765
    2. ' return' → logprob: -3.5325205326080322
    3. '           ' → logprob: -6.032520294189453
    4. '       ' → logprob: -8.157520294189453
    5. '
' → logprob: -10.282520294189453
    6. '   ' → logprob: -10.657520294189453
    7. ':return' → logprob: -11.032520294189453
    8. '    ' → logprob: -13.407520294189453
    9. '               ' → logprob: -13.782520294189453
    10. 'Return' → logprob: -14.032520294189453

Token 139: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.014256938360631466
    2. ' return' → logprob: -4.264256954193115
    3. '           ' → logprob: -9.514256477355957
    4. '       ' → logprob: -11.639256477355957
    5. 'Return' → logprob: -11.764256477355957
    6. ':return' → logprob: -14.139256477355957
    7. '   ' → logprob: -14.764256477355957
    8. '	return' → logprob: -15.014256477355957
    9. '```' → logprob: -15.014256477355957
    10. 'import' → logprob: -15.139256477355957

Token 140: '("' (ID: 568)
  Prédit: '(False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(False' → logprob: -0.00038134094211272895
    2. 'False' → logprob: -8.125381469726562
    3. '(' → logprob: -10.125381469726562
    4. ' False' → logprob: -10.500381469726562
    5. '(True' → logprob: -11.875381469726562
    6. '(false' → logprob: -12.875381469726562
    7. '=False' → logprob: -13.125381469726562
    8. '(return' → logprob: -13.500381469726562
    9. '(
' → logprob: -13.625381469726562
    10. '("' → logprob: -14.125381469726562

Token 141: 'Not' (ID: 2874)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.11294274032115936
    2. '(False' → logprob: -2.362942695617676
    3. 'return' → logprob: -5.237942695617676
    4. 'Not' → logprob: -5.987942695617676
    5. ' False' → logprob: -5.987942695617676
    6. '")' → logprob: -7.487942695617676
    7. '("' → logprob: -7.612942695617676
    8. '(' → logprob: -8.487942695617676
    9. '(True' → logprob: -8.862942695617676
    10. ')' → logprob: -8.862942695617676

Token 142: 'Implemented' (ID: 42030)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.9399069547653198
    2. 'True' → logprob: -1.9399069547653198
    3. '(True' → logprob: -2.4399070739746094
    4. ' isinstance' → logprob: -2.5649070739746094
    5. 'False' → logprob: -2.9399070739746094
    6. ' (' → logprob: -3.0649070739746094
    7. '(False' → logprob: -3.1899070739746094
    8. ' False' → logprob: -3.3149070739746094
    9. '(' → logprob: -3.8149070739746094
    10. '")' → logprob: -4.439907073974609

Token 143: ' in' (ID: 306)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5769543051719666
    2. '")
' → logprob: -1.3269543647766113
    3. ')' → logprob: -2.4519543647766113
    4. ')
' → logprob: -2.9519543647766113
    5. 'return' → logprob: -3.8269543647766113
    6. '
' → logprob: -4.701954364776611
    7. ')return' → logprob: -6.826954364776611
    8. '       ' → logprob: -7.201954364776611
    9. '   ' → logprob: -7.451954364776611
    10. ' return' → logprob: -7.826954364776611

Token 144: ' Point' (ID: 9971)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8105382919311523
    2. ' return' → logprob: -1.8105382919311523
    3. '")' → logprob: -2.0605382919311523
    4. 'self' → logprob: -2.4355382919311523
    5. '__' → logprob: -3.0605382919311523
    6. ' __' → logprob: -3.4355382919311523
    7. ' def' → logprob: -3.8105382919311523
    8. '   ' → logprob: -4.060538291931152
    9. 'return' → logprob: -4.310538291931152
    10. '")
' → logprob: -4.810538291931152

Token 145: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.4350149631500244
    2. '")
' → logprob: -1.0600149631500244
    3. ')' → logprob: -6.060014724731445
    4. 'return' → logprob: -6.435014724731445
    5. ')
' → logprob: -6.935014724731445
    6. '       ' → logprob: -7.935014724731445
    7. ' return' → logprob: -8.310014724731445
    8. '   ' → logprob: -8.560014724731445
    9. '")
' → logprob: -8.935014724731445
    10. ')")
' → logprob: -9.185014724731445

Token 146: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00439284835010767
    2. 'return' → logprob: -5.879392623901367
    3. ' return' → logprob: -7.254392623901367
    4. '
' → logprob: -7.879392623901367
    5. '       ' → logprob: -8.629392623901367
    6. '               ' → logprob: -9.254392623901367
    7. '\n' → logprob: -9.879392623901367
    8. '   ' → logprob: -10.379392623901367
    9. '            
' → logprob: -10.504392623901367
    10. '<|end|>' → logprob: -11.004392623901367

Token 147: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010338988155126572
    2. '           ' → logprob: -4.63533878326416
    3. ' return' → logprob: -7.51033878326416
    4. '
' → logprob: -11.13533878326416
    5. '       ' → logprob: -11.51033878326416
    6. ':return' → logprob: -12.51033878326416
    7. '   ' → logprob: -12.76033878326416
    8. '	return' → logprob: -13.38533878326416
    9. '               ' → logprob: -14.38533878326416
    10. '```' → logprob: -14.88533878326416

Token 148: ' Not' (ID: 4037)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -0.02394406683743
    2. 'False' → logprob: -3.773944139480591
    3. ' Not' → logprob: -7.273943901062012
    4. '   ' → logprob: -12.773943901062012
    5. ' False' → logprob: -13.773943901062012
    6. '_Not' → logprob: -15.148943901062012
    7. '       ' → logprob: -15.648943901062012
    8. '  ' → logprob: -16.398944854736328
    9. '    ' → logprob: -16.523944854736328
    10. ' ' → logprob: -16.648944854736328

Token 149: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -2.4391956685576588e-05
    2. 'implemented' → logprob: -11.000024795532227
    3. 'Implement' → logprob: -12.500024795532227
    4. 'Implementation' → logprob: -13.125024795532227
    5. 'Impl' → logprob: -14.250024795532227
    6. '   ' → logprob: -15.000024795532227
    7. 'Im' → logprob: -15.125024795532227
    8. ' implemented' → logprob: -15.500024795532227
    9. '_IMPLEMENT' → logprob: -15.750024795532227
    10. '```' → logprob: -16.375024795532227

Token 150: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06327686458826065
    2. '
' → logprob: -2.813276767730713
    3. '        
' → logprob: -7.063276767730713
    4. '  
' → logprob: -8.688277244567871
    5. '<|end|>' → logprob: -8.938277244567871
    6. '    
' → logprob: -10.188277244567871
    7. ' 
' → logprob: -10.688277244567871
    8. ')' → logprob: -11.063277244567871
    9. '       
' → logprob: -11.438277244567871
    10. '   ' → logprob: -11.813277244567871

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07577067613601685
    2. '
' → logprob: -2.700770616531372
    3. '        
' → logprob: -5.700770854949951
    4. '<|end|>' → logprob: -6.575770854949951
    5. '  
' → logprob: -7.575770854949951
    6. '    
' → logprob: -8.700770378112793
    7. ' 
' → logprob: -8.700770378112793
    8. '   ' → logprob: -10.075770378112793
    9. '       
' → logprob: -10.450770378112793
    10. '   
' → logprob: -10.700770378112793

Token 152: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3652370572090149
    2. 'return' (adapté à ' return') → logprob: -1.2402369976043701
    3. ' return' → logprob: -4.240237236022949
    4. '
' → logprob: -6.740237236022949
    5. '   ' → logprob: -7.240237236022949
    6. '        
' → logprob: -8.24023723602295
    7. '	return' → logprob: -10.61523723602295
    8. '    
' → logprob: -11.61523723602295
    9. '<|end|>' → logprob: -11.86523723602295
    10. ')return' → logprob: -12.11523723602295

Token 153: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0015096203424036503
    2. ' float' → logprob: -6.501509666442871
    3. 'self' → logprob: -12.126509666442871
    4. '   ' → logprob: -13.876509666442871
    5. '(float' → logprob: -14.376509666442871
    6. 'flo' → logprob: -15.376509666442871
    7. ' ' → logprob: -16.626508712768555
    8. '	float' → logprob: -17.376508712768555
    9. '
' → logprob: -17.626508712768555
    10. 'fl' → logprob: -18.001508712768555

Token 154: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -9.088346359931165e-07
    2. 'equal' → logprob: -15.250000953674316
    3. '_equals' → logprob: -15.375000953674316
    4. '_' → logprob: -15.625000953674316
    5. '_EQUAL' → logprob: -15.750000953674316
    6. '_equ' → logprob: -16.5
    7. '_eq' → logprob: -18.25
    8. 'Equal' → logprob: -18.875
    9. ' equal' → logprob: -19.25
    10. '_e' → logprob: -19.5

Token 155: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.901345038088039e-05
    2. '(' → logprob: -9.250099182128906
    3. 'self' → logprob: -13.125099182128906
    4. '(
' → logprob: -15.000099182128906
    5. '(this' → logprob: -15.000099182128906
    6. '<|end|>' → logprob: -16.125099182128906
    7. '
' → logprob: -17.500099182128906
    8. '	self' → logprob: -18.000099182128906
    9. '(s' → logprob: -18.500099182128906
    10. '=self' → logprob: -18.750099182128906

Token 156: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.20339806377887726
    2. '.' → logprob: -1.7033981084823608
    3. '(self' → logprob: -7.32839822769165
    4. '(' → logprob: -7.45339822769165
    5. '(x' → logprob: -8.078397750854492
    6. ' .' → logprob: -8.578397750854492
    7. ')' → logprob: -9.578397750854492
    8. ' ' → logprob: -10.328397750854492
    9. ').' → logprob: -10.453397750854492
    10. '.self' → logprob: -10.578397750854492

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037800322752445936
    2. 'other' → logprob: -8.000377655029297
    3. ' ,' → logprob: -10.500377655029297
    4. '(other' → logprob: -11.625377655029297
    5. ')' → logprob: -13.375377655029297
    6. '<|end|>' → logprob: -13.375377655029297
    7. ',
' → logprob: -14.375377655029297
    8. ' other' → logprob: -14.500377655029297
    9. 'Other' → logprob: -15.375377655029297
    10. ' ' → logprob: -15.375377655029297

Token 158: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.04858794063329697
    2. ' other' → logprob: -3.0485880374908447
    3. '(other' → logprob: -15.048587799072266
    4. 'self' → logprob: -16.298587799072266
    5. 'Other' → logprob: -16.673587799072266
    6. '.other' → logprob: -17.548587799072266
    7. '_other' → logprob: -17.548587799072266
    8. ' ' → logprob: -19.173587799072266
    9. 'othe' → logprob: -19.673587799072266
    10. 'oth' → logprob: -20.923587799072266

Token 159: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.14279720187187195
    2. '.' → logprob: -2.0177972316741943
    3. ').' → logprob: -9.642797470092773
    4. ' .' → logprob: -11.017797470092773
    5. ')' → logprob: -11.392797470092773
    6. '<|end|>' → logprob: -11.517797470092773
    7. 'x' → logprob: -12.267797470092773
    8. '.y' → logprob: -12.517797470092773
    9. ' ' → logprob: -13.017797470092773
    10. '‌.' → logprob: -13.767797470092773

Token 160: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025927771348506212
    2. ' )' → logprob: -6.25259256362915
    3. ' and' → logprob: -7.50259256362915
    4. 'and' → logprob: -9.127593040466309
    5. '       ' → logprob: -13.377593040466309
    6. '        ' → logprob: -14.127593040466309
    7. ')&&' → logprob: -14.502593040466309
    8. '   ' → logprob: -15.252593040466309
    9. '    ' → logprob: -15.502593040466309
    10. ')
' → logprob: -16.377592086791992

Token 161: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5759537816047668
    2. ' and' → logprob: -0.8259537816047668
    3. '    ' → logprob: -11.450953483581543
    4. ' ' → logprob: -14.200953483581543
    5. '        ' → logprob: -14.200953483581543
    6. '   ' → logprob: -14.450953483581543
    7. '	and' → logprob: -15.075953483581543
    8. '       ' → logprob: -15.200953483581543
    9. ' ' → logprob: -15.325953483581543
    10. '  ' → logprob: -15.575953483581543

Token 162: ' \
' (ID: 6814)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.014175384305417538
    2. 'float' → logprob: -4.2641754150390625
    3. ' ' → logprob: -12.139175415039062
    4. '(float' → logprob: -13.014175415039062
    5. ' ' → logprob: -13.264175415039062
    6. ',float' → logprob: -14.139175415039062
    7. '<float' → logprob: -15.139175415039062
    8. '_float' → logprob: -15.139175415039062
    9. '.float' → logprob: -15.514175415039062
    10. ' self' → logprob: -15.764175415039062

Token 163: '           ' (ID: 352)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.08896858245134354
    2. 'float' → logprob: -2.463968515396118
    3. '       ' → logprob: -11.338968276977539
    4. '(float' → logprob: -12.338968276977539
    5. '        ' → logprob: -12.463968276977539
    6. '              ' → logprob: -13.588968276977539
    7. '.float' → logprob: -13.713968276977539
    8. '               ' → logprob: -14.088968276977539
    9. ' ' → logprob: -14.338968276977539
    10. '           ' → logprob: -14.463968276977539

Token 164: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' (adapté à ' float') → logprob: -0.12693388760089874
    2. ' float' → logprob: -2.1269338130950928
    3. '        ' → logprob: -13.751934051513672
    4. '           ' → logprob: -14.126934051513672
    5. '(float' → logprob: -14.126934051513672
    6. ' ' → logprob: -14.251934051513672
    7. '.float' → logprob: -14.501934051513672
    8. '       ' → logprob: -15.126934051513672
    9. '         ' → logprob: -15.376934051513672
    10. ' ' → logprob: -15.751934051513672

Token 165: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.00016992862219922245
    2. 'equal' → logprob: -8.75016975402832
    3. 'Equal' → logprob: -12.25016975402832
    4. ' equal' → logprob: -12.37516975402832
    5. '_EQUAL' → logprob: -13.62516975402832
    6. '_' → logprob: -14.75016975402832
    7. '.equal' → logprob: -15.00016975402832
    8. '_equals' → logprob: -15.75016975402832
    9. '(equal' → logprob: -15.87516975402832
    10. ' _' → logprob: -16.50016975402832

Token 166: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032032581511884928
    2. '(' → logprob: -5.753203392028809
    3. '(s' → logprob: -11.003203392028809
    4. '<|end|>' → logprob: -12.503203392028809
    5. 'self' → logprob: -12.753203392028809
    6. '(
' → logprob: -13.628203392028809
    7. ' (' → logprob: -14.003203392028809
    8. '(user' → logprob: -17.253202438354492
    9. '(the' → logprob: -17.628202438354492
    10. ' self' → logprob: -17.753202438354492

Token 167: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.016048680990934372
    2. '.' → logprob: -4.141048908233643
    3. 'y' → logprob: -11.766048431396484
    4. ' .' → logprob: -12.516048431396484
    5. ')' → logprob: -14.141048431396484
    6. ' ' → logprob: -14.766048431396484
    7. ').' → logprob: -14.891048431396484
    8. '.x' → logprob: -15.141048431396484
    9. '.py' → logprob: -15.266048431396484
    10. ',' → logprob: -15.641048431396484

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4894986785948277e-05
    2. ' ,' → logprob: -10.375044822692871
    3. '           ' → logprob: -12.500044822692871
    4. ',
' → logprob: -12.875044822692871
    5. 'self' → logprob: -13.500044822692871
    6. '<|end|>' → logprob: -13.625044822692871
    7. ')' → logprob: -13.750044822692871
    8. '(' → logprob: -14.000044822692871
    9. '(other' → logprob: -14.750044822692871
    10. ',self' → logprob: -14.750044822692871

Token 169: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.38688984513282776
    2. ' other' → logprob: -1.1368898153305054
    3. '(other' → logprob: -11.511889457702637
    4. 'self' → logprob: -12.511889457702637
    5. '<|end|>' → logprob: -13.136889457702637
    6. 'Other' → logprob: -13.761889457702637
    7. '.other' → logprob: -13.886889457702637
    8. '_other' → logprob: -14.011889457702637
    9. ' self' → logprob: -16.011890411376953
    10. ' ' → logprob: -16.761890411376953

Token 170: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.010130485519766808
    2. '.' → logprob: -4.760130405426025
    3. 'y' → logprob: -6.635130405426025
    4. ',' → logprob: -9.135130882263184
    5. ')' → logprob: -9.510130882263184
    6. ',y' → logprob: -11.635130882263184
    7. ' .' → logprob: -12.885130882263184
    8. ').' → logprob: -13.135130882263184
    9. ' y' → logprob: -13.260130882263184
    10. '.x' → logprob: -13.385130882263184

Token 171: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.451116051815916e-05
    2. ')
' → logprob: -11.000024795532227
    3. '       ' → logprob: -12.000024795532227
    4. ')return' → logprob: -14.625024795532227
    5. ' )' → logprob: -14.875024795532227
    6. '   ' → logprob: -15.000024795532227
    7. '<|end|>' → logprob: -15.375024795532227
    8. ')

' → logprob: -16.375024795532227
    9. ')#' → logprob: -17.000024795532227
    10. '))' → logprob: -17.125024795532227

Token 172: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4895739257335663
    2. '
' → logprob: -1.1145739555358887
    3. '    
' → logprob: -3.4895739555358887
    4. '<|end|>' → logprob: -4.739573955535889
    5. 'def' (adapté à ' def') → logprob: -4.989573955535889
    6. '

' → logprob: -5.364573955535889
    7. ' 
' → logprob: -5.614573955535889
    8. ' ' → logprob: -6.614573955535889
    9. '  
' → logprob: -6.989573955535889
    10. ' def' → logprob: -7.239573955535889

Token 174: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8203495740890503
    2. ' ' → logprob: -0.9453495740890503
    3. ' __' → logprob: -2.69534969329834
    4. ' distance' → logprob: -2.69534969329834
    5. 'distance' → logprob: -4.69534969329834
    6. ' ' → logprob: -4.94534969329834
    7. 'def' → logprob: -5.19534969329834
    8. ' x' → logprob: -5.69534969329834
    9. ' _' → logprob: -6.07034969329834
    10. ' vector' → logprob: -6.19534969329834

Token 175: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.15161104500293732
    2. 'lt' → logprob: -2.151611089706421
    3. 'sub' → logprob: -3.776611089706421
    4. 'hash' → logprob: -6.776610851287842
    5. 'ne' → logprob: -8.651611328125
    6. 'neg' → logprob: -9.401611328125
    7. 'mul' → logprob: -10.401611328125
    8. 'le' → logprob: -11.026611328125
    9. 'abs' → logprob: -11.401611328125
    10. 'gt' → logprob: -11.776611328125

Token 176: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.020820140838623
    2. '__(' → logprob: -1.270820140838623
    3. '<|end|>' → logprob: -1.770820140838623
    4. '__' → logprob: -2.270820140838623
    5. '_' → logprob: -3.270820140838623
    6. ' (' → logprob: -3.270820140838623
    7. '(self' → logprob: -5.520820140838623
    8. ' ' → logprob: -6.145820140838623
    9. '<|end|>' → logprob: -7.145820140838623
    10. '__(
' → logprob: -7.145820140838623

Token 177: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.513339445111342e-05
    2. ' self' → logprob: -10.125044822692871
    3. 'other' → logprob: -12.500044822692871
    4. '(self' → logprob: -13.875044822692871
    5. '
' → logprob: -15.125044822692871
    6. ' ' → logprob: -17.125045776367188
    7. ')' → logprob: -17.625045776367188
    8. '   ' → logprob: -17.750045776367188
    9. '<|end|>' → logprob: -17.875045776367188
    10. '	self' → logprob: -18.125045776367188

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2083272933959961
    2. '<|end|>' → logprob: -1.833327293395996
    3. ')' → logprob: -4.083327293395996
    4. 'self' → logprob: -5.208327293395996
    5. '<|end|>' → logprob: -6.208327293395996
    6. ' ' → logprob: -6.458327293395996
    7. '__' → logprob: -7.458327293395996
    8. ' ,' → logprob: -7.583327293395996
    9. '__(' → logprob: -8.333327293395996
    10. '(self' → logprob: -8.333327293395996

Token 179: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.2620961666107178
    2. ' other' → logprob: -1.5120961666107178
    3. 'self' → logprob: -4.637096405029297
    4. ' self' → logprob: -7.762096405029297
    5. ' ' → logprob: -13.262096405029297
    6. 'Other' → logprob: -13.637096405029297
    7. '_other' → logprob: -14.137096405029297
    8. '(other' → logprob: -15.512096405029297
    9. '.other' → logprob: -16.637096405029297
    10. ')' → logprob: -16.887096405029297

Token 180: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023098954930901527
    2. ':' → logprob: -4.398098945617676
    3. ')' → logprob: -4.648098945617676
    4. '):
' → logprob: -7.898098945617676
    5. '<|end|>' → logprob: -8.273098945617676
    6. ' ):' → logprob: -8.398098945617676
    7. ' ' → logprob: -10.273098945617676
    8. ' :' → logprob: -11.023098945617676
    9. '<|end|>' → logprob: -11.023098945617676
    10. '):

' → logprob: -12.273098945617676

Token 181: ' '' (ID: 461)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.38908278942108154
    2. 'Point' → logprob: -1.1390827894210815
    3. ')' → logprob: -7.514082908630371
    4. ' ' → logprob: -8.264082908630371
    5. ' object' → logprob: -8.264082908630371
    6. 'object' → logprob: -8.389082908630371
    7. '<|end|>' → logprob: -8.639082908630371
    8. '	Point' → logprob: -9.139082908630371
    9. '_Point' → logprob: -9.264082908630371
    10. '<Point' → logprob: -9.264082908630371

Token 182: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.000712670327629894
    2. ' Point' → logprob: -7.250712871551514
    3. '	Point' → logprob: -13.500712394714355
    4. '_Point' → logprob: -14.500712394714355
    5. ' ' → logprob: -15.500712394714355
    6. '_point' → logprob: -15.625712394714355
    7. 'Po' → logprob: -16.000713348388672
    8. '.Point' → logprob: -16.500713348388672
    9. '<Point' → logprob: -16.500713348388672
    10. 'Points' → logprob: -16.875713348388672

Token 183: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.050204798579216
    2. ')' → logprob: -3.0502047538757324
    3. ''):' → logprob: -6.550204753875732
    4. '):' → logprob: -9.17520523071289
    5. ':' → logprob: -9.80020523071289
    6. ''):
' → logprob: -11.30020523071289
    7. '")' → logprob: -12.30020523071289
    8. ''' → logprob: -12.67520523071289
    9. '')->' → logprob: -12.67520523071289
    10. ' ')' → logprob: -13.67520523071289

Token 184: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017199406400322914
    2. ' ->' → logprob: -4.392199516296387
    3. '->' → logprob: -5.767199516296387
    4. ')' → logprob: -6.642199516296387
    5. ')->' → logprob: -9.142199516296387
    6. ' :' → logprob: -10.142199516296387
    7. '   ' → logprob: -10.267199516296387
    8. '):' → logprob: -10.517199516296387
    9. '       ' → logprob: -11.142199516296387
    10. ':return' → logprob: -11.392199516296387

Token 185: ' '' (ID: 461)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.9149607419967651
    2. ' '' → logprob: -1.4149607419967651
    3. 'Point' → logprob: -1.6649607419967651
    4. ''' → logprob: -1.7899607419967651
    5. ' ' → logprob: -8.789960861206055
    6. ''s' → logprob: -9.539960861206055
    7. '	Point' → logprob: -9.789960861206055
    8. '_Point' → logprob: -10.414960861206055
    9. '  ' → logprob: -10.914960861206055
    10. '<Point' → logprob: -11.914960861206055

Token 186: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0015047440538182855
    2. ' Point' → logprob: -6.501504898071289
    3. '	Point' → logprob: -13.501504898071289
    4. '_Point' → logprob: -14.501504898071289
    5. '_point' → logprob: -15.626504898071289
    6. '<Point' → logprob: -15.626504898071289
    7. 'Points' → logprob: -16.00150489807129
    8. '.Point' → logprob: -16.25150489807129
    9. '(Point' → logprob: -17.00150489807129
    10. ' ' → logprob: -17.75150489807129

Token 187: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4721977710723877
    2. '':' → logprob: -1.5971977710723877
    3. '):' → logprob: -1.8471977710723877
    4. '):
' → logprob: -5.097197532653809
    5. ':
' → logprob: -5.097197532653809
    6. '':
' → logprob: -6.097197532653809
    7. ''):' → logprob: -6.847197532653809
    8. ')' → logprob: -8.597197532653809
    9. ''):
' → logprob: -8.722197532653809
    10. ''' → logprob: -8.972197532653809

Token 188: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5412238240242004
    2. '       ' → logprob: -0.9162238240242004
    3. '):' → logprob: -5.041224002838135
    4. ':
' → logprob: -5.291224002838135
    5. '   ' → logprob: -6.166224002838135
    6. ')' → logprob: -6.916224002838135
    7. '<|end|>' → logprob: -7.041224002838135
    8. '):
' → logprob: -7.041224002838135
    9. ':return' → logprob: -7.416224002838135
    10. ' :' → logprob: -8.666223526000977

Token 189: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28258052468299866
    2. 'return' (adapté à ' return') → logprob: -1.5325804948806763
    3. '
' → logprob: -4.532580375671387
    4. 'Point' → logprob: -4.532580375671387
    5. ' return' → logprob: -4.782580375671387
    6. '   ' → logprob: -8.907580375671387
    7. ' Point' → logprob: -9.157580375671387
    8. '	return' → logprob: -11.282580375671387
    9. '        
' → logprob: -11.407580375671387
    10. 'Return' → logprob: -11.532580375671387

Token 190: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.38687729835510254
    2. 'Point' → logprob: -1.1368772983551025
    3. '	Point' → logprob: -12.261877059936523
    4. ' ' → logprob: -14.386877059936523
    5. '(Point' → logprob: -15.011877059936523
    6. '_Point' → logprob: -15.386877059936523
    7. ' ' → logprob: -16.011877059936523
    8. '<Point' → logprob: -16.386877059936523
    9. '   ' → logprob: -16.886877059936523
    10. '  ' → logprob: -17.136877059936523

Token 191: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020568605395965278
    2. '(' → logprob: -8.500205993652344
    3. 'self' → logprob: -13.250205993652344
    4. '(
' → logprob: -14.750205993652344
    5. '((' → logprob: -18.250205993652344
    6. '(s' → logprob: -18.500205993652344
    7. '(this' → logprob: -18.875205993652344
    8. ' (' → logprob: -19.750205993652344
    9. '   ' → logprob: -20.125205993652344
    10. '(

' → logprob: -21.000205993652344

Token 192: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0019355426775291562
    2. '.' → logprob: -6.2519354820251465
    3. ' .' → logprob: -12.001935958862305
    4. 'x' → logprob: -14.251935958862305
    5. ' ' → logprob: -17.376935958862305
    6. ').' → logprob: -17.376935958862305
    7. '._' → logprob: -19.376935958862305
    8. '.s' → logprob: -19.501935958862305
    9. '.
' → logprob: -19.626935958862305
    10. '0' → logprob: -19.876935958862305

Token 193: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023256542161107063
    2. '+' → logprob: -3.773256540298462
    3. ' ' → logprob: -11.773256301879883
    4. '<|end|>' → logprob: -13.398256301879883
    5. ' plus' → logprob: -14.148256301879883
    6. ' +
' → logprob: -14.273256301879883
    7. ' ' → logprob: -16.398256301879883
    8. ' +=' → logprob: -16.773256301879883
    9. ' +
' → logprob: -16.898256301879883
    10. 'other' → logprob: -16.898256301879883

Token 194: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.6931538581848145
    2. 'other' → logprob: -0.6931538581848145
    3. '(other' → logprob: -12.693153381347656
    4. '_other' → logprob: -13.068153381347656
    5. 'Other' → logprob: -14.318153381347656
    6. '.other' → logprob: -14.568153381347656
    7. ' ' → logprob: -15.693153381347656
    8. 'othe' → logprob: -16.568153381347656
    9. '<|end|>' → logprob: -17.193153381347656
    10. 'OTHER' → logprob: -17.318153381347656

Token 195: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.011079886928200722
    2. '.' → logprob: -4.511079788208008
    3. ' .' → logprob: -10.636079788208008
    4. 'x' → logprob: -11.886079788208008
    5. ' ' → logprob: -14.636079788208008
    6. ').' → logprob: -15.261079788208008
    7. '.
' → logprob: -15.886079788208008
    8. ' x' → logprob: -16.011079788208008
    9. '	x' → logprob: -16.511079788208008
    10. '<|end|>' → logprob: -17.136079788208008

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.939851037808694e-05
    2. ' ,' → logprob: -10.750029563903809
    3. ',
' → logprob: -11.875029563903809
    4. ')' → logprob: -14.500029563903809
    5. '<|end|>' → logprob: -15.500029563903809
    6. ',

' → logprob: -15.875029563903809
    7. ',self' → logprob: -16.875028610229492
    8. '   ' → logprob: -17.625028610229492
    9. '       ' → logprob: -18.250028610229492
    10. '‌,' → logprob: -18.750028610229492

Token 197: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20143906772136688
    2. 'self' → logprob: -1.7014390230178833
    3. '<|end|>' → logprob: -11.451438903808594
    4. ' ' → logprob: -11.826438903808594
    5. ')' → logprob: -12.951438903808594
    6. ' other' → logprob: -13.451438903808594
    7. '	self' → logprob: -14.076438903808594
    8. ' ' → logprob: -14.201438903808594
    9. '(self' → logprob: -14.326438903808594
    10. ' 
' → logprob: -14.701438903808594

Token 198: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.038073163479566574
    2. '.' → logprob: -3.2880730628967285
    3. 'y' → logprob: -11.163073539733887
    4. ' .' → logprob: -11.663073539733887
    5. '.x' → logprob: -12.663073539733887
    6. ')' → logprob: -12.913073539733887
    7. ' ' → logprob: -14.163073539733887
    8. ').' → logprob: -14.538073539733887
    9. ' y' → logprob: -14.663073539733887
    10. '.py' → logprob: -14.913073539733887

Token 199: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01604410633444786
    2. '+' → logprob: -4.1410441398620605
    3. ')' → logprob: -12.266043663024902
    4. '<|end|>' → logprob: -12.766043663024902
    5. '+)' → logprob: -14.016043663024902
    6. ' +
' → logprob: -14.266043663024902
    7. '<|end|>' → logprob: -15.641043663024902
    8. ')+' → logprob: -15.641043663024902
    9. ' ' → logprob: -15.891043663024902
    10. ' +

' → logprob: -16.39104461669922

Token 200: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.4740828275680542
    2. ' other' → logprob: -0.9740828275680542
    3. '(other' → logprob: -12.724082946777344
    4. 'Other' → logprob: -13.599082946777344
    5. '_other' → logprob: -14.099082946777344
    6. '.other' → logprob: -14.599082946777344
    7. '<|end|>' → logprob: -15.474082946777344
    8. ' ' → logprob: -16.599082946777344
    9. 'self' → logprob: -17.224082946777344
    10. ')' → logprob: -17.974082946777344

Token 201: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.008215250447392464
    2. '.' → logprob: -4.883215427398682
    3. ')' → logprob: -7.633215427398682
    4. '+' → logprob: -9.383214950561523
    5. 'y' → logprob: -11.133214950561523
    6. '.x' → logprob: -11.258214950561523
    7. '+y' → logprob: -12.758214950561523
    8. ' +' → logprob: -13.133214950561523
    9. '<|end|>' → logprob: -13.133214950561523
    10. '.)' → logprob: -13.883214950561523

Token 202: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -15.250000953674316
    4. '<|end|>' → logprob: -15.250000953674316
    5. '   ' → logprob: -17.250001907348633
    6. ')return' → logprob: -17.500001907348633
    7. '<|end|>' → logprob: -17.500001907348633
    8. '),' → logprob: -17.750001907348633
    9. ')}' → logprob: -18.750001907348633
    10. '}' → logprob: -18.875001907348633

Token 203: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03131420165300369
    2. 'def' (adapté à ' def') → logprob: -3.5313141345977783
    3. ' ' → logprob: -7.656314373016357
    4. ')' → logprob: -7.781314373016357
    5. ' def' → logprob: -8.9063138961792
    6. '  ' → logprob: -9.2813138961792
    7. '<|end|>' → logprob: -9.4063138961792
    8. '_' → logprob: -9.5313138961792
    9. '.' → logprob: -9.6563138961792
    10. '    
' → logprob: -10.2813138961792

Token 205: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.14079274237155914
    2. ' ' → logprob: -2.8907928466796875
    3. ' def' → logprob: -4.0157928466796875
    4. ' '' → logprob: -4.3907928466796875
    5. ''' → logprob: -4.6407928466796875
    6. ',' → logprob: -5.3907928466796875
    7. '__' → logprob: -5.3907928466796875
    8. ' -' → logprob: -5.7657928466796875
    9. '"' → logprob: -5.7657928466796875
    10. ' _' → logprob: -5.8907928466796875

Token 206: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.00017886889690998942
    2. '-' → logprob: -8.750179290771484
    3. 'mul' → logprob: -10.875179290771484
    4. '-sub' → logprob: -14.375179290771484
    5. ' sub' → logprob: -14.875179290771484
    6. 'neg' → logprob: -15.125179290771484
    7. '-
' → logprob: -16.625179290771484
    8. '_sub' → logprob: -16.875179290771484
    9. ' -' → logprob: -17.125179290771484
    10. ' ' → logprob: -17.250179290771484

Token 207: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06294938176870346
    2. '__' → logprob: -2.8129494190216064
    3. '__('' → logprob: -7.062949180603027
    4. '__(
' → logprob: -9.687949180603027
    5. '__((' → logprob: -9.937949180603027
    6. '__("' → logprob: -12.187949180603027
    7. '__(*' → logprob: -12.312949180603027
    8. '__[' → logprob: -13.062949180603027
    9. '(' → logprob: -13.437949180603027
    10. '__.__' → logprob: -13.937949180603027

Token 208: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07892889529466629
    2. 'other' → logprob: -2.5789289474487305
    3. '(self' → logprob: -10.57892894744873
    4. ' self' → logprob: -12.45392894744873
    5. '(other' → logprob: -12.45392894744873
    6. ' other' → logprob: -13.07892894744873
    7. 'Other' → logprob: -13.45392894744873
    8. ''s' → logprob: -13.57892894744873
    9. ''' → logprob: -14.45392894744873
    10. ')' → logprob: -15.57892894744873

Token 209: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.17409493029117584
    2. '__' → logprob: -2.2990949153900146
    3. '__('' → logprob: -2.9240949153900146
    4. '(' → logprob: -5.424095153808594
    5. '__((' → logprob: -7.674095153808594
    6. '__(
' → logprob: -8.049095153808594
    7. '__(*' → logprob: -8.799095153808594
    8. '(self' → logprob: -9.424095153808594
    9. '__[' → logprob: -9.924095153808594
    10. '_' → logprob: -9.924095153808594

Token 210: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.1004951000213623
    2. ' other' → logprob: -2.3504951000213623
    3. 'self' → logprob: -8.225495338439941
    4. 'Other' → logprob: -10.975495338439941
    5. ' self' → logprob: -13.100495338439941
    6. '_other' → logprob: -14.475495338439941
    7. '(other' → logprob: -14.475495338439941
    8. '<|end|>' → logprob: -14.725495338439941
    9. '.other' → logprob: -16.475494384765625
    10. ' ' → logprob: -16.975494384765625

Token 211: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3794372081756592
    2. ':' → logprob: -1.2544372081756592
    3. '<|end|>' → logprob: -4.254437446594238
    4. '):' → logprob: -5.254437446594238
    5. '<|end|>' → logprob: -5.379437446594238
    6. ',' → logprob: -6.379437446594238
    7. '.' → logprob: -6.754437446594238
    8. '[' → logprob: -7.504437446594238
    9. '):
' → logprob: -7.754437446594238
    10. '.Point' → logprob: -7.754437446594238

Token 212: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.42958930134773254
    2. ' '' → logprob: -1.0545892715454102
    3. 'Point' → logprob: -7.80458927154541
    4. ' Point' → logprob: -8.17958927154541
    5. ''s' → logprob: -9.30458927154541
    6. '<Point' → logprob: -10.42958927154541
    7. ')' → logprob: -10.80458927154541
    8. '')' → logprob: -11.92958927154541
    9. '<|end|>' → logprob: -11.92958927154541
    10. '(Point' → logprob: -12.05458927154541

Token 213: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -9.372294698550832e-06
    2. ' Point' → logprob: -11.750009536743164
    3. '	Point' → logprob: -14.375009536743164
    4. '.Point' → logprob: -15.250009536743164
    5. '<Point' → logprob: -15.375009536743164
    6. ''' → logprob: -16.250009536743164
    7. '_point' → logprob: -16.250009536743164
    8. '_Point' → logprob: -16.625009536743164
    9. '(Point' → logprob: -17.125009536743164
    10. '-point' → logprob: -18.000009536743164

Token 214: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -4.7159857786027715e-05
    2. ')' → logprob: -10.000046730041504
    3. ''):
' → logprob: -14.625046730041504
    4. ''):' → logprob: -14.625046730041504
    5. '")' → logprob: -14.750046730041504
    6. ''' → logprob: -15.625046730041504
    7. ' ')' → logprob: -16.62504768371582
    8. '')
' → logprob: -16.75004768371582
    9. ')'' → logprob: -18.12504768371582
    10. '')"' → logprob: -18.37504768371582

Token 215: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.640775740146637
    2. ':' → logprob: -0.765775740146637
    3. ' ->' → logprob: -5.265775680541992
    4. ' :' → logprob: -6.390775680541992
    5. '->' → logprob: -6.890775680541992
    6. ' )' → logprob: -9.765775680541992
    7. '):' → logprob: -9.890775680541992
    8. '   ' → logprob: -10.140775680541992
    9. ' ' → logprob: -10.265775680541992
    10. ',' → logprob: -10.515775680541992

Token 216: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6044086217880249
    2. ' '' → logprob: -0.8544086217880249
    3. ' Point' → logprob: -3.6044087409973145
    4. 'Point' → logprob: -7.1044087409973145
    5. '<Point' → logprob: -11.229408264160156
    6. '(Point' → logprob: -11.979408264160156
    7. '('' → logprob: -12.479408264160156
    8. '.Point' → logprob: -12.604408264160156
    9. '	Point' → logprob: -12.729408264160156
    10. ''s' → logprob: -12.979408264160156

Token 217: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -9.610702363715973e-06
    2. ' Point' → logprob: -11.625009536743164
    3. '	Point' → logprob: -14.625009536743164
    4. '<Point' → logprob: -16.875009536743164
    5. '_Point' → logprob: -17.250009536743164
    6. '.Point' → logprob: -17.375009536743164
    7. '(Point' → logprob: -17.875009536743164
    8. '_point' → logprob: -18.250009536743164
    9. ''' → logprob: -18.625009536743164
    10. 'Points' → logprob: -19.000009536743164

Token 218: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.019769631326198578
    2. '):' → logprob: -4.644769668579102
    3. ''):' → logprob: -5.519769668579102
    4. ''' → logprob: -5.894769668579102
    5. '':
' → logprob: -6.144769668579102
    6. ':' → logprob: -7.394769668579102
    7. ')' → logprob: -9.269769668579102
    8. ''):
' → logprob: -9.394769668579102
    9. '')' → logprob: -9.394769668579102
    10. '):
' → logprob: -9.519769668579102

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1759537011384964
    2. ' return' → logprob: -2.1759536266326904
    3. ' Point' → logprob: -4.0509538650512695
    4. 'Point' → logprob: -4.1759538650512695
    5. '   ' → logprob: -4.6759538650512695
    6. 'return' → logprob: -5.1759538650512695
    7. ' ' → logprob: -10.30095386505127
    8. '(Point' → logprob: -10.92595386505127
    9. '    ' → logprob: -11.30095386505127
    10. '	Point' → logprob: -11.67595386505127

Token 220: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.17500250041484833
    2. 'return' (adapté à ' return') → logprob: -1.9250024557113647
    3. ' return' → logprob: -4.425002574920654
    4. ' Point' → logprob: -5.925002574920654
    5. '       ' → logprob: -10.925002098083496
    6. 'Return' → logprob: -12.550002098083496
    7. '   ' → logprob: -13.425002098083496
    8. ' ' → logprob: -15.550002098083496
    9. '(Point' → logprob: -15.550002098083496
    10. '	Point' → logprob: -15.550002098083496

Token 221: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.5759457945823669
    2. ' Point' → logprob: -0.8259457945823669
    3. '	Point' → logprob: -12.200945854187012
    4. '(Point' → logprob: -13.825945854187012
    5. ' ' → logprob: -16.200944900512695
    6. '_Point' → logprob: -16.325944900512695
    7. '.Point' → logprob: -16.700944900512695
    8. '<Point' → logprob: -17.075944900512695
    9. ' ' → logprob: -17.450944900512695
    10. '   ' → logprob: -17.575944900512695

Token 222: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.25001335144043
    3. '(
' → logprob: -16.12501335144043
    4. 'self' → logprob: -18.12501335144043
    5. ' (' → logprob: -18.37501335144043
    6. '(s' → logprob: -20.25001335144043
    7. '(this' → logprob: -21.50001335144043
    8. ' self' → logprob: -21.50001335144043
    9. '(Self' → logprob: -22.00001335144043
    10. '((' → logprob: -22.12501335144043

Token 223: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0009371895575895905
    2. '.' → logprob: -7.000936985015869
    3. 'x' → logprob: -10.750937461853027
    4. ' .' → logprob: -12.625937461853027
    5. '<|end|>' → logprob: -14.250937461853027
    6. ').' → logprob: -16.87593650817871
    7. '<|end|>' → logprob: -17.12593650817871
    8. ')' → logprob: -17.37593650817871
    9. '.s' → logprob: -17.50093650817871
    10. ' ' → logprob: -17.75093650817871

Token 224: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04863812401890755
    2. '-' → logprob: -3.298638105392456
    3. '(' → logprob: -5.048638343811035
    4. '(self' → logprob: -5.673638343811035
    5. '-self' → logprob: -8.423638343811035
    6. ')' → logprob: -9.048638343811035
    7. '(x' → logprob: -9.423638343811035
    8. ' (' → logprob: -9.798638343811035
    9. 'self' → logprob: -9.923638343811035
    10. ',' → logprob: -9.923638343811035

Token 225: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.25193464756011963
    2. ' other' → logprob: -1.5019346475601196
    3. 'Other' → logprob: -13.001935005187988
    4. '(other' → logprob: -13.251935005187988
    5. '_other' → logprob: -14.251935005187988
    6. '<|end|>' → logprob: -14.376935005187988
    7. '.other' → logprob: -15.251935005187988
    8. 'self' → logprob: -16.126934051513672
    9. ' Other' → logprob: -19.001934051513672
    10. 'OTHER' → logprob: -19.001934051513672

Token 226: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.003603871213272214
    2. '.' → logprob: -5.628603935241699
    3. ' .' → logprob: -13.3786039352417
    4. 'x' → logprob: -13.5036039352417
    5. '<|end|>' → logprob: -14.8786039352417
    6. '.y' → logprob: -15.2536039352417
    7. '<|end|>' → logprob: -17.003602981567383
    8. ',' → logprob: -17.128602981567383
    9. '[' → logprob: -17.253602981567383
    10. 'Point' → logprob: -17.378602981567383

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3120038501219824e-05
    2. ' ,' → logprob: -10.125053405761719
    3. '.' → logprob: -12.000053405761719
    4. ')' → logprob: -12.250053405761719
    5. '),' → logprob: -14.250053405761719
    6. ',y' → logprob: -14.375053405761719
    7. '       ' → logprob: -15.125053405761719
    8. '<|end|>' → logprob: -15.250053405761719
    9. ',
' → logprob: -16.25005340576172
    10. ' ' → logprob: -16.62505340576172

Token 228: ' self' (ID: 1051)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.5839484930038452
    2. 'other' → logprob: -0.8339484930038452
    3. 'self' → logprob: -4.958948612213135
    4. ' self' → logprob: -6.958948612213135
    5. 'Other' → logprob: -12.333948135375977
    6. '_other' → logprob: -13.708948135375977
    7. '.other' → logprob: -14.583948135375977
    8. '(other' → logprob: -14.833948135375977
    9. '<|end|>' → logprob: -16.333948135375977
    10. ' ' → logprob: -16.958948135375977

Token 229: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.002491706982254982
    2. '.' → logprob: -6.002491474151611
    3. 'y' → logprob: -11.37749195098877
    4. '.x' → logprob: -12.50249195098877
    5. ' .' → logprob: -14.50249195098877
    6. '.py' → logprob: -16.877490997314453
    7. '1' → logprob: -17.252490997314453
    8. '[' → logprob: -17.377490997314453
    9. ',y' → logprob: -17.377490997314453
    10. ',' → logprob: -17.377490997314453

Token 230: ' -' (ID: 533)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.004594011232256889
    2. '.' → logprob: -5.504593849182129
    3. '.x' → logprob: -7.629593849182129
    4. ')' → logprob: -11.504593849182129
    5. 'y' → logprob: -11.879593849182129
    6. ' .' → logprob: -12.129593849182129
    7. '<|end|>' → logprob: -13.254593849182129
    8. '.point' → logprob: -13.629593849182129
    9. '[' → logprob: -14.379593849182129
    10. ' y' → logprob: -14.629593849182129

Token 231: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.002186307217925787
    2. ' other' → logprob: -6.127186298370361
    3. '(other' → logprob: -13.87718677520752
    4. '.other' → logprob: -16.002185821533203
    5. 'self' → logprob: -16.252185821533203
    6. 'Other' → logprob: -17.502185821533203
    7. 'othe' → logprob: -17.752185821533203
    8. '0' → logprob: -18.002185821533203
    9. '_other' → logprob: -18.127185821533203
    10. ' ' → logprob: -19.002185821533203

Token 232: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.22643163800239563
    2. '.y' → logprob: -1.6014316082000732
    3. '.' → logprob: -6.976431846618652
    4. ')' → logprob: -10.226431846618652
    5. '-' → logprob: -10.851431846618652
    6. ' .' → logprob: -11.601431846618652
    7. ').' → logprob: -12.226431846618652
    8. '[' → logprob: -13.101431846618652
    9. 'y' → logprob: -13.226431846618652
    10. 'x' → logprob: -13.601431846618652

Token 233: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '<|end|>' → logprob: -14.125001907348633
    3. ')
' → logprob: -14.250001907348633
    4. '       ' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.250001907348633
    6. ' )' → logprob: -16.875001907348633
    7. ')return' → logprob: -17.750001907348633
    8. ')

' → logprob: -18.500001907348633
    9. ' ' → logprob: -18.625001907348633
    10. '')' → logprob: -18.750001907348633

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007357738213613629
    2. '    
' → logprob: -8.625736236572266
    3. ')' → logprob: -8.875736236572266
    4. 'def' → logprob: -9.000736236572266
    5. '<|end|>' → logprob: -9.875736236572266
    6. '(' → logprob: -10.000736236572266
    7. ' ' → logprob: -10.125736236572266
    8. ':' → logprob: -10.250736236572266
    9. '  ' → logprob: -10.500736236572266
    10. '*' → logprob: -10.500736236572266

Token 235: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09007042646408081
    2. 'def' (adapté à ' def') → logprob: -2.4650704860687256
    3. ' def' → logprob: -7.8400702476501465
    4. '(' → logprob: -8.465070724487305
    5. ')' → logprob: -8.465070724487305
    6. '    
' → logprob: -8.715070724487305
    7. ':' → logprob: -10.465070724487305
    8. '```' → logprob: -10.715070724487305
    9. '*' → logprob: -10.840070724487305
    10. ' ' → logprob: -11.215070724487305

Token 236: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6061646938323975
    2. ' __' → logprob: -1.1061646938323975
    3. 'def' → logprob: -2.6061646938323975
    4. ' def' → logprob: -3.6061646938323975
    5. 'abs' → logprob: -5.231164932250977
    6. 'dot' → logprob: -5.356164932250977
    7. '   ' → logprob: -5.981164932250977
    8. 'mul' → logprob: -6.231164932250977
    9. 'distance' → logprob: -6.356164932250977
    10. '(__' → logprob: -7.106164932250977

Token 237: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -1.1279553291387856e-05
    2. 'rm' → logprob: -12.750011444091797
    3. 'neg' → logprob: -12.875011444091797
    4. 'lt' → logprob: -13.250011444091797
    5. 'abs' → logprob: -13.250011444091797
    6. 'tr' → logprob: -13.500011444091797
    7. 'mult' → logprob: -14.500011444091797
    8. 'eq' → logprob: -15.875011444091797
    9. 'repr' → logprob: -16.625011444091797
    10. 'imul' → logprob: -16.750011444091797

Token 238: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0015062900492921472
    2. '(self' → logprob: -6.751506328582764
    3. '__' → logprob: -8.251505851745605
    4. '__('' → logprob: -10.126505851745605
    5. '__(
' → logprob: -11.126505851745605
    6. '(' → logprob: -11.751505851745605
    7. '__(*' → logprob: -11.876505851745605
    8. '__((' → logprob: -12.501505851745605
    9. '_(' → logprob: -14.501505851745605
    10. 'self' → logprob: -14.501505851745605

Token 239: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.7159857786027715e-05
    2. ' self' → logprob: -10.625046730041504
    3. '(self' → logprob: -11.375046730041504
    4. '   ' → logprob: -12.250046730041504
    5. '
' → logprob: -12.750046730041504
    6. '       ' → logprob: -13.375046730041504
    7. ' ' → logprob: -13.500046730041504
    8. '<|end|>' → logprob: -16.00004768371582
    9. '0' → logprob: -16.25004768371582
    10. 'other' → logprob: -16.37504768371582

Token 240: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5334664583206177
    2. '(self' → logprob: -1.5334664583206177
    3. ' (' → logprob: -3.158466339111328
    4. '__' → logprob: -3.283466339111328
    5. '__('' → logprob: -3.283466339111328
    6. 'self' → logprob: -3.783466339111328
    7. '__(*' → logprob: -3.783466339111328
    8. '__((' → logprob: -4.033466339111328
    9. '(' → logprob: -5.158466339111328
    10. '<|end|>' → logprob: -5.283466339111328

Token 241: ' k' (ID: 372)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1559629738330841
    2. 'other' → logprob: -2.1559629440307617
    3. ' self' → logprob: -3.7809629440307617
    4. ' other' → logprob: -5.155962944030762
    5. ' ' → logprob: -10.280962944030762
    6. 'Other' → logprob: -11.530962944030762
    7. '   ' → logprob: -13.280962944030762
    8. 'scalar' → logprob: -13.280962944030762
    9. '(self' → logprob: -13.780962944030762
    10. '_other' → logprob: -14.280962944030762

Token 242: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013240695931017399
    2. '<|end|>' → logprob: -4.888240814208984
    3. ')' → logprob: -5.513240814208984
    4. '<|end|>' → logprob: -7.263240814208984
    5. ' :' → logprob: -7.513240814208984
    6. '):' → logprob: -9.138240814208984
    7. ' ' → logprob: -9.763240814208984
    8. 'self' → logprob: -9.888240814208984
    9. '(' → logprob: -10.763240814208984
    10. ',' → logprob: -10.888240814208984

Token 243: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.1602698415517807
    2. ' float' → logprob: -1.910269856452942
    3. '(float' → logprob: -10.285269737243652
    4. 'int' → logprob: -12.660269737243652
    5. '	float' → logprob: -12.785269737243652
    6. '=float' → logprob: -13.160269737243652
    7. '<float' → logprob: -13.535269737243652
    8. ' ' → logprob: -14.160269737243652
    9. ')' → logprob: -15.410269737243652
    10. '.float' → logprob: -15.535269737243652

Token 244: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22595654428005219
    2. '):' → logprob: -1.6009565591812134
    3. '):
' → logprob: -8.475956916809082
    4. ':' → logprob: -8.725956916809082
    5. '<|end|>' → logprob: -9.725956916809082
    6. ',' → logprob: -9.975956916809082
    7. '<|end|>' → logprob: -10.850956916809082
    8. ')->' → logprob: -11.475956916809082
    9. 'self' → logprob: -11.725956916809082
    10. '   ' → logprob: -12.225956916809082

Token 245: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002639582962729037
    2. ')' → logprob: -9.125264167785645
    3. '):' → logprob: -9.375264167785645
    4. ' :' → logprob: -9.875264167785645
    5. '<|end|>' → logprob: -11.875264167785645
    6. ':return' → logprob: -12.250264167785645
    7. '   ' → logprob: -13.375264167785645
    8. ':
' → logprob: -13.500264167785645
    9. ' ->' → logprob: -14.125264167785645
    10. '<|end|>' → logprob: -14.625264167785645

Token 246: ' '' (ID: 461)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.4505165219306946
    2. ' Point' → logprob: -1.2005164623260498
    3. ''' → logprob: -3.07551646232605
    4. ' '' → logprob: -4.200516700744629
    5. 'float' → logprob: -7.825516700744629
    6. ' float' → logprob: -10.075516700744629
    7. '	Point' → logprob: -10.950516700744629
    8. '_Point' → logprob: -11.200516700744629
    9. '(Point' → logprob: -11.700516700744629
    10. ' ' → logprob: -12.075516700744629

Token 247: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.8624639324116288e-06
    2. ' Point' → logprob: -13.250001907348633
    3. '	Point' → logprob: -16.375001907348633
    4. '_Point' → logprob: -18.000001907348633
    5. '_point' → logprob: -19.000001907348633
    6. '.Point' → logprob: -19.000001907348633
    7. '<Point' → logprob: -19.000001907348633
    8. 'Points' → logprob: -19.625001907348633
    9. '(Point' → logprob: -20.125001907348633
    10. '-point' → logprob: -22.000001907348633

Token 248: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7025068998336792
    2. '':' → logprob: -0.7025068998336792
    3. '):' → logprob: -5.702507019042969
    4. '':
' → logprob: -6.077507019042969
    5. ''' → logprob: -6.327507019042969
    6. ':'' → logprob: -6.952507019042969
    7. ':
' → logprob: -7.327507019042969
    8. '':'' → logprob: -8.702507019042969
    9. '):
' → logprob: -10.202507019042969
    10. '':
' → logprob: -10.827507019042969

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019677700474858284
    2. 'Point' → logprob: -7.001967906951904
    3. ' Point' → logprob: -7.126967906951904
    4. '   ' → logprob: -9.001967430114746
    5. ' return' → logprob: -9.251967430114746
    6. 'return' → logprob: -11.001967430114746
    7. '    ' → logprob: -12.501967430114746
    8. '      ' → logprob: -12.501967430114746
    9. '(Point' → logprob: -12.876967430114746
    10. '	Point' → logprob: -13.251967430114746

Token 250: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.513339445111342e-05
    2. ' Point' → logprob: -10.750044822692871
    3. 'return' (adapté à ' return') → logprob: -11.250044822692871
    4. '       ' → logprob: -11.500044822692871
    5. '	Point' → logprob: -15.375044822692871
    6. '   ' → logprob: -16.000045776367188
    7. '(Point' → logprob: -16.375045776367188
    8. ' return' → logprob: -16.375045776367188
    9. 'Return' → logprob: -17.000045776367188
    10. '_Point' → logprob: -17.625045776367188

Token 251: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.03804171830415726
    2. ' Point' → logprob: -3.288041830062866
    3. '	Point' → logprob: -15.663042068481445
    4. '(Point' → logprob: -16.913042068481445
    5. '_Point' → logprob: -18.538042068481445
    6. ' ' → logprob: -18.663042068481445
    7. '.Point' → logprob: -19.163042068481445
    8. '   ' → logprob: -19.538042068481445
    9. 'Points' → logprob: -20.163042068481445
    10. '<Point' → logprob: -20.538042068481445

Token 252: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.125001907348633
    3. 'self' → logprob: -15.750001907348633
    4. '(s' → logprob: -18.250001907348633
    5. '(
' → logprob: -18.500001907348633
    6. ' (' → logprob: -21.125001907348633
    7. '(this' → logprob: -21.125001907348633
    8. '[self' → logprob: -21.250001907348633
    9. '((' → logprob: -21.375001907348633
    10. ' self' → logprob: -21.625001907348633

Token 253: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0017270608805119991
    2. '.' → logprob: -6.376727104187012
    3. 'x' → logprob: -10.876727104187012
    4. ' .' → logprob: -12.626727104187012
    5. '<|end|>' → logprob: -13.251727104187012
    6. '<|end|>' → logprob: -15.126727104187012
    7. ' ' → logprob: -15.626727104187012
    8. '0' → logprob: -16.876726150512695
    9. '.xtext' → logprob: -17.126726150512695
    10. ')' → logprob: -17.126726150512695

Token 254: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00011164903844473884
    2. '*' → logprob: -9.62511157989502
    3. '*k' → logprob: -10.00011157989502
    4. ' ' → logprob: -16.000112533569336
    5. '*self' → logprob: -17.375112533569336
    6. '*object' → logprob: -18.000112533569336
    7. ' k' → logprob: -18.375112533569336
    8. '*K' → logprob: -18.750112533569336
    9. ' **' → logprob: -19.000112533569336
    10. '*x' → logprob: -19.250112533569336

Token 255: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4740770161151886
    2. ' k' → logprob: -0.9740769863128662
    3. '	k' → logprob: -17.224077224731445
    4. ' к' → logprob: -18.724077224731445
    5. 'kx' → logprob: -19.349077224731445
    6. '_k' → logprob: -19.974077224731445
    7. ' ' → logprob: -20.099077224731445
    8. ',k' → logprob: -20.099077224731445
    9. '{k' → logprob: -20.224077224731445
    10. ' ' → logprob: -20.349077224731445

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007734165410511196
    2. ')' → logprob: -7.5007734298706055
    3. '<|end|>' → logprob: -8.875773429870605
    4. ' ,' → logprob: -9.500773429870605
    5. ',
' → logprob: -12.750773429870605
    6. '<|end|>' → logprob: -14.000773429870605
    7. ',k' → logprob: -14.250773429870605
    8. '),' → logprob: -15.250773429870605
    9. ',

' → logprob: -15.375773429870605
    10. ' ' → logprob: -15.875773429870605

Token 257: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2519303858280182
    2. 'self' → logprob: -1.5019303560256958
    3. '	self' → logprob: -14.376930236816406
    4. ' ' → logprob: -15.501930236816406
    5. '       ' → logprob: -15.751930236816406
    6. ' ' → logprob: -16.501930236816406
    7. '(self' → logprob: -16.501930236816406
    8. '0' → logprob: -17.251930236816406
    9. ' k' → logprob: -17.376930236816406
    10. '<|end|>' → logprob: -18.001930236816406

Token 258: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0127488411962986
    2. 'y' → logprob: -4.387748718261719
    3. '.' → logprob: -8.637748718261719
    4. '.x' → logprob: -10.262748718261719
    5. ' y' → logprob: -11.262748718261719
    6. '<|end|>' → logprob: -12.387748718261719
    7. '.py' → logprob: -12.887748718261719
    8. '*y' → logprob: -13.137748718261719
    9. '	y' → logprob: -13.637748718261719
    10. ')' → logprob: -13.762748718261719

Token 259: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -7.517272024415433e-05
    2. '*' → logprob: -9.500075340270996
    3. ' ' → logprob: -16.37507438659668
    4. '<|end|>' → logprob: -16.50007438659668
    5. '*k' → logprob: -16.87507438659668
    6. ')' → logprob: -17.37507438659668
    7. ' ' → logprob: -18.25007438659668
    8. '*object' → logprob: -19.37507438659668
    9. '<|end|>' → logprob: -20.62507438659668
    10. 'import' → logprob: -20.62507438659668

Token 260: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.029750484973192215
    2. ' k' → logprob: -3.5297505855560303
    3. ')' → logprob: -18.65475082397461
    4. 'x' → logprob: -19.15475082397461
    5. '	k' → logprob: -19.15475082397461
    6. ' ' → logprob: -19.15475082397461
    7. '_k' → logprob: -19.65475082397461
    8. 'kx' → logprob: -19.65475082397461
    9. ' к' → logprob: -20.27975082397461
    10. '```' → logprob: -20.40475082397461

Token 261: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -14.875001907348633
    4. '<|end|>' → logprob: -15.750001907348633
    5. '),' → logprob: -17.000001907348633
    6. ',' → logprob: -17.125001907348633
    7. ')

' → logprob: -18.000001907348633
    8. '}' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '<|end|>' → logprob: -19.125001907348633

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43685322999954224
    2. '<|end|>' → logprob: -1.6868531703948975
    3. ' ' → logprob: -2.0618531703948975
    4. ')' → logprob: -4.061853408813477
    5. 'def' → logprob: -5.186853408813477
    6. '*' → logprob: -5.311853408813477
    7. '_' → logprob: -6.061853408813477
    8. ' def' → logprob: -6.561853408813477
    9. '  ' → logprob: -6.811853408813477
    10. ' 
' → logprob: -6.811853408813477

Token 263: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2688031792640686
    2. 'def' (adapté à ' def') → logprob: -1.6438031196594238
    3. ' ' → logprob: -3.268803119659424
    4. ' def' → logprob: -6.268803119659424
    5. '_' → logprob: -6.893803119659424
    6. '  ' → logprob: -7.518803119659424
    7. '__' → logprob: -7.893803119659424
    8. ')' → logprob: -8.393803596496582
    9. '    ' → logprob: -9.143803596496582
    10. '*' → logprob: -10.018803596496582

Token 264: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.039159320294857025
    2. ' def' → logprob: -3.9141592979431152
    3. '__' → logprob: -4.289159297943115
    4. ' /' → logprob: -5.664159297943115
    5. ' _' → logprob: -8.164159774780273
    6. 'def' → logprob: -8.289159774780273
    7. ' ' → logprob: -8.414159774780273
    8. '```' → logprob: -8.914159774780273
    9. '/__' → logprob: -9.164159774780273
    10. '/' → logprob: -9.914159774780273

Token 265: 'rm' (ID: 21373)
  Prédit: 'rm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -0.06197138875722885
    2. 'tr' → logprob: -2.811971426010132
    3. 'mul' → logprob: -12.811971664428711
    4. 'imul' → logprob: -14.436971664428711
    5. 'tru' → logprob: -16.18697166442871
    6. 'eq' → logprob: -16.43697166442871
    7. ' rm' → logprob: -16.93697166442871
    8. 'repr' → logprob: -17.06197166442871
    9. 'RM' → logprob: -17.43697166442871
    10. 'flo' → logprob: -17.43697166442871

Token 266: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -6.749814019713085e-06
    2. 'ult' → logprob: -12.250006675720215
    3. '__' → logprob: -13.500006675720215
    4. 'ultiply' → logprob: -15.375006675720215
    5. 'uls' → logprob: -15.625006675720215
    6. '_ul' → logprob: -16.87500762939453
    7. 'ulit' → logprob: -17.00000762939453
    8. 'ull' → logprob: -17.37500762939453
    9. 'u' → logprob: -17.87500762939453
    10. '*' → logprob: -18.00000762939453

Token 267: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3869113028049469
    2. '__' → logprob: -1.1369112730026245
    3. '__('' → logprob: -10.761911392211914
    4. '__((' → logprob: -11.511911392211914
    5. '__(*' → logprob: -12.386911392211914
    6. '__(
' → logprob: -12.511911392211914
    7. '__("' → logprob: -14.636911392211914
    8. '___' → logprob: -15.511911392211914
    9. '__.__' → logprob: -15.636911392211914
    10. '__[' → logprob: -15.761911392211914

Token 268: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.098748053773306e-05
    2. ' self' → logprob: -9.75006103515625
    3. 'k' → logprob: -13.37506103515625
    4. '(self' → logprob: -14.62506103515625
    5. 's' → logprob: -15.00006103515625
    6. ')' → logprob: -16.00006103515625
    7. '	self' → logprob: -16.75006103515625
    8. '
' → logprob: -17.12506103515625
    9. ' ' → logprob: -17.62506103515625
    10. '   ' → logprob: -18.00006103515625

Token 269: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.35963431000709534
    2. '__' → logprob: -1.359634280204773
    3. '(self' → logprob: -3.2346343994140625
    4. 'self' → logprob: -5.6096343994140625
    5. '(' → logprob: -6.9846343994140625
    6. '__(*' → logprob: -7.3596343994140625
    7. '__((' → logprob: -8.734634399414062
    8. ' (' → logprob: -9.359634399414062
    9. '__(
' → logprob: -9.359634399414062
    10. '__,' → logprob: -9.609634399414062

Token 270: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00014180023572407663
    2. ' k' → logprob: -8.875142097473145
    3. 'self' → logprob: -13.250142097473145
    4. '<|end|>' → logprob: -16.125141143798828
    5. ' self' → logprob: -17.375141143798828
    6. '	k' → logprob: -18.375141143798828
    7. 'kx' → logprob: -18.625141143798828
    8. 'x' → logprob: -18.875141143798828
    9. ' ' → logprob: -19.500141143798828
    10. ')' → logprob: -19.750141143798828

Token 271: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01902485080063343
    2. '<|end|>' → logprob: -4.269024848937988
    3. ')' → logprob: -5.644024848937988
    4. '):' → logprob: -7.769024848937988
    5. '<|end|>' → logprob: -7.769024848937988
    6. ' :' → logprob: -7.894024848937988
    7. '):
' → logprob: -9.894024848937988
    8. '=' → logprob: -11.269024848937988
    9. ' )' → logprob: -12.956524848937988
    10. ' ' → logprob: -13.519024848937988

Token 272: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.02980441227555275
    2. ' float' → logprob: -3.5298044681549072
    3. '<float' → logprob: -10.779804229736328
    4. '=float' → logprob: -11.029804229736328
    5. '(float' → logprob: -11.529804229736328
    6. ',float' → logprob: -13.029804229736328
    7. '_float' → logprob: -13.654804229736328
    8. '.float' → logprob: -13.779804229736328
    9. 'Float' → logprob: -14.154804229736328
    10. '	float' → logprob: -14.154804229736328

Token 273: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.963691804325208e-05
    2. ' )' → logprob: -10.500029563903809
    3. '):' → logprob: -13.500029563903809
    4. '')' → logprob: -15.000029563903809
    5. '   ' → logprob: -16.000030517578125
    6. '):
' → logprob: -16.875030517578125
    7. ')->' → logprob: -17.625030517578125
    8. '),' → logprob: -19.000030517578125
    9. ')
' → logprob: -19.250030517578125
    10. ':' → logprob: -19.250030517578125

Token 274: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015637783333659172
    2. ':' → logprob: -5.0156378746032715
    3. ' ->' → logprob: -5.1406378746032715
    4. '->' → logprob: -6.6406378746032715
    5. '   ' → logprob: -7.2656378746032715
    6. '):' → logprob: -7.8906378746032715
    7. ' :' → logprob: -8.140637397766113
    8. ' )' → logprob: -9.015637397766113
    9. ')->' → logprob: -9.390637397766113
    10. '):
' → logprob: -10.265637397766113

Token 275: ' '' (ID: 461)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.4454747438430786
    2. 'Point' → logprob: -1.4454747438430786
    3. ''' → logprob: -2.695474624633789
    4. ' '' → logprob: -2.945474624633789
    5. 'self' → logprob: -6.445474624633789
    6. ' self' → logprob: -7.070474624633789
    7. '(Point' → logprob: -7.570474624633789
    8. ' return' → logprob: -8.445474624633789
    9. 'return' → logprob: -8.820474624633789
    10. ' def' → logprob: -9.695474624633789

Token 276: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.7697225252486533e-06
    2. ' Point' → logprob: -12.625003814697266
    3. '	Point' → logprob: -15.250003814697266
    4. '<Point' → logprob: -16.125003814697266
    5. '.Point' → logprob: -16.500003814697266
    6. '_point' → logprob: -17.125003814697266
    7. '(Point' → logprob: -17.875003814697266
    8. '_Point' → logprob: -18.125003814697266
    9. 'Points' → logprob: -18.500003814697266
    10. 'float' → logprob: -19.500003814697266

Token 277: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.00727803772315383
    2. ''' → logprob: -5.132277965545654
    3. '':
' → logprob: -6.882277965545654
    4. '):' → logprob: -8.882278442382812
    5. ''):' → logprob: -9.007278442382812
    6. '':
' → logprob: -11.132278442382812
    7. '')' → logprob: -11.132278442382812
    8. '':

' → logprob: -11.632278442382812
    9. ')' → logprob: -12.132278442382812
    10. ''):
' → logprob: -12.757278442382812

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002989968634210527
    2. ' return' → logprob: -8.750299453735352
    3. 'return' → logprob: -8.875299453735352
    4. '   ' → logprob: -16.00029945373535
    5. '	' → logprob: -16.12529945373535
    6. '      ' → logprob: -16.12529945373535
    7. '	return' → logprob: -16.62529945373535
    8. ' Point' → logprob: -16.75029945373535
    9. '    ' → logprob: -17.12529945373535
    10. '	   ' → logprob: -17.37529945373535

Token 279: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006022418383508921
    2. ' return' → logprob: -7.5006022453308105
    3. '       ' → logprob: -10.625601768493652
    4. 'self' → logprob: -10.750601768493652
    5. 'Point' → logprob: -12.750601768493652
    6. '   ' → logprob: -14.750601768493652
    7. '	return' → logprob: -17.00060272216797
    8. '
' → logprob: -17.25060272216797
    9. 'Return' → logprob: -17.75060272216797
    10. '```' → logprob: -18.00060272216797

Token 280: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1390664428472519
    2. ' self' → logprob: -2.639066457748413
    3. 'Point' → logprob: -2.889066457748413
    4. ' Point' → logprob: -5.889066219329834
    5. '(self' → logprob: -14.014066696166992
    6. 'point' → logprob: -14.389066696166992
    7. ' ' → logprob: -14.639066696166992
    8. '_Point' → logprob: -14.889066696166992
    9. '	Point' → logprob: -15.014066696166992
    10. '   ' → logprob: -15.014066696166992

Token 281: ' *' (ID: 425)
  Prédit: '.__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.016768107190728188
    2. '*' → logprob: -4.266767978668213
    3. '__' → logprob: -6.141767978668213
    4. ' *' → logprob: -7.766767978668213
    5. ' __' → logprob: -11.016768455505371
    6. '.*' → logprob: -11.891768455505371
    7. '*self' → logprob: -13.516768455505371
    8. '*k' → logprob: -14.266768455505371
    9. '.' → logprob: -14.766768455505371
    10. '._' → logprob: -15.266768455505371

Token 282: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.7697225252486533e-06
    2. ' k' → logprob: -12.500003814697266
    3. '	k' → logprob: -22.500003814697266
    4. 'kx' → logprob: -23.000003814697266
    5. '{k' → logprob: -24.125003814697266
    6. '_k' → logprob: -24.625003814697266
    7. '(k' → logprob: -26.125003814697266
    8. '*k' → logprob: -26.250003814697266
    9. '```' → logprob: -26.625003814697266
    10. ' ' → logprob: -27.250003814697266

Token 283: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7013961672782898
    2. '<|end|>' → logprob: -0.8263961672782898
    3. '
' → logprob: -3.2013962268829346
    4. '\n' → logprob: -4.4513959884643555
    5. ')' → logprob: -5.8263959884643555
    6. '    
' → logprob: -6.2013959884643555
    7. ':' → logprob: -6.8263959884643555
    8. 'def' → logprob: -6.9513959884643555
    9. '<|end|>' → logprob: -6.9513959884643555
    10. '\' → logprob: -6.9513959884643555

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17308901250362396
    2. ':' → logprob: -2.173089027404785
    3. ')' → logprob: -3.798089027404785
    4. '.' → logprob: -4.548089027404785
    5. 'def' → logprob: -4.923089027404785
    6. '<|end|>' → logprob: -6.798089027404785
    7. ' ' → logprob: -7.548089027404785
    8. '\n' → logprob: -7.673089027404785
    9. '*' → logprob: -7.798089027404785
    10. ' def' → logprob: -8.048089027404785

Token 285: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.026051431894302368
    2. '   ' → logprob: -4.2760515213012695
    3. ')' → logprob: -4.9010515213012695
    4. '@property' → logprob: -5.6510515213012695
    5. ' def' → logprob: -7.4010515213012695
    6. '.' → logprob: -9.15105152130127
    7. '(' → logprob: -10.15105152130127
    8. ' ' → logprob: -11.15105152130127
    9. '@' → logprob: -11.27605152130127
    10. '0' → logprob: -11.40105152130127

Token 286: ' __' (ID: 2516)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.30454519391059875
    2. 'length' → logprob: -2.0545451641082764
    3. 'dot' → logprob: -2.6795451641082764
    4. '__' → logprob: -4.3045454025268555
    5. 'dist' → logprob: -4.3045454025268555
    6. 'abs' → logprob: -4.3045454025268555
    7. 'distance' → logprob: -4.5545454025268555
    8. 'def' → logprob: -5.0545454025268555
    9. 'len' → logprob: -5.1795454025268555
    10. ' norm' → logprob: -6.4295454025268555

Token 287: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.00020187153131701052
    2. 'neg' → logprob: -9.250202178955078
    3. 'abs' → logprob: -9.500202178955078
    4. 'lt' → logprob: -11.125202178955078
    5. 'flo' → logprob: -11.750202178955078
    6. 'tru' → logprob: -13.250202178955078
    7. '```' → logprob: -13.625202178955078
    8. 'str' → logprob: -13.875202178955078
    9. ' tr' → logprob: -14.250202178955078
    10. 'bool' → logprob: -14.375202178955078

Token 288: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.008678154088556767
    2. '__' → logprob: -5.383677959442139
    3. 'ue' → logprob: -5.883677959442139
    4. 'u' → logprob: -7.633677959442139
    5. '/' → logprob: -8.383678436279297
    6. '```' → logprob: -8.383678436279297
    7. 'f' → logprob: -9.258678436279297
    8. 'div' → logprob: -9.758678436279297
    9. 'r' → logprob: -10.008678436279297
    10. 'ues' → logprob: -10.508678436279297

Token 289: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -1.3856492842023727e-06
    2. 'div' → logprob: -15.000000953674316
    3. '__' → logprob: -15.125000953674316
    4. 'ivs' → logprob: -15.125000953674316
    5. 'ivi' → logprob: -15.750000953674316
    6. 'IV' → logprob: -16.375001907348633
    7. 'vis' → logprob: -16.625001907348633
    8. 'ivr' → logprob: -17.000001907348633
    9. 'ef' → logprob: -17.125001907348633
    10. 'v' → logprob: -17.500001907348633

Token 290: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0008302362984977663
    2. '__' → logprob: -7.750830173492432
    3. '(self' → logprob: -8.12583065032959
    4. '(' → logprob: -9.50083065032959
    5. '__(
' → logprob: -11.00083065032959
    6. '__('' → logprob: -12.12583065032959
    7. '__((' → logprob: -12.62583065032959
    8. '__(*' → logprob: -13.25083065032959
    9. '_(' → logprob: -13.87583065032959
    10. '__("' → logprob: -15.12583065032959

Token 291: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.17420256882906e-05
    2. ' self' → logprob: -9.375091552734375
    3. '(self' → logprob: -12.000091552734375
    4. '   ' → logprob: -15.125091552734375
    5. '	self' → logprob: -16.125091552734375
    6. 's' → logprob: -16.500091552734375
    7. ')' → logprob: -16.875091552734375
    8. ' ' → logprob: -17.000091552734375
    9. '
' → logprob: -17.375091552734375
    10. 'def' → logprob: -17.500091552734375

Token 292: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.33251696825027466
    2. '__(' → logprob: -1.4575169086456299
    3. '(' → logprob: -3.70751690864563
    4. ' (' → logprob: -3.83251690864563
    5. 'self' → logprob: -6.457517147064209
    6. '__' → logprob: -7.082517147064209
    7. ' self' → logprob: -7.957517147064209
    8. '<|end|>' → logprob: -8.20751667022705
    9. ')' → logprob: -8.70751667022705
    10. ')(' → logprob: -8.83251667022705

Token 293: ' k' (ID: 372)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4933314025402069
    2. ' self' → logprob: -0.9933314323425293
    3. 'k' → logprob: -4.118331432342529
    4. ' k' → logprob: -5.993331432342529
    5. '(self' → logprob: -9.118330955505371
    6. ' ' → logprob: -9.618330955505371
    7. '   ' → logprob: -10.493330955505371
    8. '       ' → logprob: -10.868330955505371
    9. '```' → logprob: -11.118330955505371
    10. 'float' → logprob: -11.243330955505371

Token 294: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0047571538016200066
    2. ' :' → logprob: -5.754756927490234
    3. '<|end|>' → logprob: -7.254756927490234
    4. ')' → logprob: -7.379756927490234
    5. '):' → logprob: -8.379756927490234
    6. '<|end|>' → logprob: -11.754756927490234
    7. ',' → logprob: -13.129756927490234
    8. ' ' → logprob: -13.504756927490234
    9. ':return' → logprob: -13.629756927490234
    10. ':int' → logprob: -14.254756927490234

Token 295: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.011049824766814709
    2. ' float' → logprob: -4.511049747467041
    3. '(float' → logprob: -13.6360502243042
    4. '=float' → logprob: -14.7610502243042
    5. '	float' → logprob: -16.261049270629883
    6. '<float' → logprob: -16.261049270629883
    7. ',float' → logprob: -16.761049270629883
    8. ' ' → logprob: -17.136049270629883
    9. 'f' → logprob: -17.511049270629883
    10. 'flo' → logprob: -17.761049270629883

Token 296: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011093381908722222
    2. '):' → logprob: -9.125110626220703
    3. ':' → logprob: -13.750110626220703
    4. ')->' → logprob: -14.625110626220703
    5. ' )' → logprob: -14.750110626220703
    6. '):
' → logprob: -17.500110626220703
    7. '')' → logprob: -18.250110626220703
    8. '   ' → logprob: -18.625110626220703
    9. '),' → logprob: -19.250110626220703
    10. ' ' → logprob: -19.375110626220703

Token 297: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008833431638777256
    2. ')' → logprob: -5.508833408355713
    3. ' ->' → logprob: -6.008833408355713
    4. '->' → logprob: -6.258833408355713
    5. ' :' → logprob: -8.133833885192871
    6. ')->' → logprob: -10.383833885192871
    7. '):' → logprob: -10.633833885192871
    8. '   ' → logprob: -11.133833885192871
    9. ':
' → logprob: -13.133833885192871
    10. ':return' → logprob: -13.258833885192871

Token 298: ' '' (ID: 461)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.3708018660545349
    2. ' Point' → logprob: -1.6208019256591797
    3. 'float' → logprob: -2.9958019256591797
    4. 'k' → logprob: -3.3708019256591797
    5. ' float' → logprob: -4.37080192565918
    6. ' k' → logprob: -4.49580192565918
    7. ' ' → logprob: -6.87080192565918
    8. '(Point' → logprob: -6.99580192565918
    9. ''' → logprob: -7.37080192565918
    10. ' '' → logprob: -7.99580192565918

Token 299: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.00020544764993246645
    2. 'float' → logprob: -8.500205039978027
    3. ' Point' → logprob: -13.250205039978027
    4. '	Point' → logprob: -16.750205993652344
    5. '(Point' → logprob: -17.375205993652344
    6. ' float' → logprob: -18.500205993652344
    7. '_point' → logprob: -18.875205993652344
    8. 'Points' → logprob: -18.875205993652344
    9. '_Point' → logprob: -18.875205993652344
    10. '<Point' → logprob: -19.000205993652344

Token 300: '':
' (ID: 7669)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5389984846115112
    2. '':' → logprob: -1.2889984846115112
    3. ':' → logprob: -2.038998603820801
    4. ''' → logprob: -5.163998603820801
    5. ')' → logprob: -5.913998603820801
    6. '):
' → logprob: -7.038998603820801
    7. 'self' → logprob: -8.2889986038208
    8. '':
' → logprob: -8.2889986038208
    9. ':'' → logprob: -8.5389986038208
    10. ':
' → logprob: -8.5389986038208

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024861192796379328
    2. ' return' → logprob: -6.627486228942871
    3. 'return' → logprob: -6.877486228942871
    4. 'Point' → logprob: -9.502486228942871
    5. ' Point' → logprob: -9.877486228942871
    6. '   ' → logprob: -13.002486228942871
    7. ' ' → logprob: -15.627486228942871
    8. '      ' → logprob: -16.377485275268555
    9. ' point' → logprob: -16.502485275268555
    10. '	return' → logprob: -16.502485275268555

Token 302: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001733848126605153
    2. 'Point' → logprob: -6.751733779907227
    3. '       ' → logprob: -7.501733779907227
    4. ' return' → logprob: -11.501733779907227
    5. '   ' → logprob: -13.626733779907227
    6. '	return' → logprob: -17.126733779907227
    7. ' Point' → logprob: -17.626733779907227
    8. '```' → logprob: -17.876733779907227
    9. 'if' → logprob: -18.251733779907227
    10. 'assert' → logprob: -18.626733779907227

Token 303: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.38719233870506287
    2. 'Point' → logprob: -1.1371923685073853
    3. 'self' → logprob: -8.512192726135254
    4. ' self' → logprob: -9.137192726135254
    5. '	Point' → logprob: -11.512192726135254
    6. ' ' → logprob: -13.887192726135254
    7. '(Point' → logprob: -14.512192726135254
    8. '_Point' → logprob: -14.637192726135254
    9. ' ' → logprob: -15.262192726135254
    10. '.Point' → logprob: -15.762192726135254

Token 304: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.981667537620524e-06
    2. 'self' → logprob: -13.375001907348633
    3. '(' → logprob: -14.750001907348633
    4. '(
' → logprob: -18.500001907348633
    5. '(this' → logprob: -20.750001907348633
    6. ' (' → logprob: -21.625001907348633
    7. '	self' → logprob: -22.500001907348633
    8. ' self' → logprob: -22.500001907348633
    9. '((' → logprob: -22.500001907348633
    10. '(x' → logprob: -23.000001907348633

Token 305: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0008246336947195232
    2. '.' → logprob: -7.125824451446533
    3. 'x' → logprob: -10.875824928283691
    4. ' .' → logprob: -14.875824928283691
    5. '._' → logprob: -15.250824928283691
    6. '<|end|>' → logprob: -15.750824928283691
    7. ').' → logprob: -16.000823974609375
    8. '```' → logprob: -16.500823974609375
    9. ')' → logprob: -16.875823974609375
    10. ' ' → logprob: -16.875823974609375

Token 306: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.10020947456359863
    2. '/' → logprob: -2.3502094745635986
    3. '/k' → logprob: -13.60020923614502
    4. '<|end|>' → logprob: -14.47520923614502
    5. ')' → logprob: -14.72520923614502
    6. ' ' → logprob: -15.72520923614502
    7. ' ' → logprob: -16.350210189819336
    8. ',' → logprob: -16.350210189819336
    9. '   ' → logprob: -16.475210189819336
    10. ' /
' → logprob: -16.975210189819336

Token 307: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.029750484973192215
    2. ' k' → logprob: -3.5297505855560303
    3. '	k' → logprob: -17.77975082397461
    4. '_k' → logprob: -19.27975082397461
    5. ' к' → logprob: -19.90475082397461
    6. '{k' → logprob: -20.27975082397461
    7. ' ' → logprob: -20.40475082397461
    8. ',k' → logprob: -20.90475082397461
    9. '   ' → logprob: -21.15475082397461
    10. 'kx' → logprob: -21.27975082397461

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.259079363080673e-05
    2. ')' → logprob: -11.375012397766113
    3. ' ,' → logprob: -14.125012397766113
    4. ',
' → logprob: -15.875012397766113
    5. ',self' → logprob: -16.37501335144043
    6. 'self' → logprob: -16.62501335144043
    7. '<|end|>' → logprob: -17.37501335144043
    8. ' ' → logprob: -17.87501335144043
    9. ',k' → logprob: -18.12501335144043
    10. '```' → logprob: -19.00001335144043

Token 309: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00317783304490149
    2. ' self' → logprob: -5.753177642822266
    3. 'k' → logprob: -16.878177642822266
    4. '       ' → logprob: -17.378177642822266
    5. '   ' → logprob: -17.378177642822266
    6. '	self' → logprob: -17.628177642822266
    7. ' ' → logprob: -18.378177642822266
    8. '(self' → logprob: -19.753177642822266
    9. ' k' → logprob: -20.003177642822266
    10. '    ' → logprob: -20.378177642822266

Token 310: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -7.517272024415433e-05
    2. 'y' → logprob: -9.625075340270996
    3. '.' → logprob: -11.625075340270996
    4. ' y' → logprob: -16.75007438659668
    5. ' .' → logprob: -17.25007438659668
    6. '```' → logprob: -17.62507438659668
    7. '	y' → logprob: -17.62507438659668
    8. 'self' → logprob: -17.75007438659668
    9. '.x' → logprob: -18.00007438659668
    10. ',y' → logprob: -18.12507438659668

Token 311: ' /' (ID: 820)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.564977765083313
    2. 'y' → logprob: -1.939977765083313
    3. ',' → logprob: -2.1899776458740234
    4. ')' → logprob: -2.1899776458740234
    5. ' /' → logprob: -3.3149776458740234
    6. '.y' → logprob: -3.8149776458740234
    7. '/' → logprob: -6.564977645874023
    8. '.py' → logprob: -6.814977645874023
    9. ',y' → logprob: -7.314977645874023
    10. ' self' → logprob: -8.189977645874023

Token 312: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.2729995988775045e-06
    2. ' k' → logprob: -12.000006675720215
    3. 'kx' → logprob: -21.7500057220459
    4. '	k' → logprob: -22.6250057220459
    5. '   ' → logprob: -23.2500057220459
    6. ' ' → logprob: -23.5000057220459
    7. 'float' → logprob: -24.2500057220459
    8. 'x' → logprob: -24.2500057220459
    9. '{k' → logprob: -24.3750057220459
    10. '_k' → logprob: -24.3750057220459

Token 313: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -15.625
    3. ' )' → logprob: -18.375
    4. ')

' → logprob: -18.875
    5. '   ' → logprob: -20.0
    6. '}' → logprob: -21.25
    7. '),' → logprob: -21.625
    8. ')#' → logprob: -21.625
    9. ')return' → logprob: -22.0
    10. ')\' → logprob: -22.25

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016038941219449043
    2. 'def' → logprob: -4.26603889465332
    3. '@property' → logprob: -7.01603889465332
    4. '    
' → logprob: -7.89103889465332
    5. '
' → logprob: -8.14103889465332
    6. ' def' → logprob: -9.51603889465332
    7. '(' → logprob: -9.89103889465332
    8. ')' → logprob: -10.39103889465332
    9. ':' → logprob: -10.51603889465332
    10. '

' → logprob: -10.89103889465332

Token 315: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.010221821255981922
    2. '   ' → logprob: -4.8852219581604
    3. ')' → logprob: -6.5102219581604
    4. '@property' → logprob: -6.8852219581604
    5. ' def' → logprob: -9.635221481323242
    6. '.' → logprob: -11.385221481323242
    7. ':' → logprob: -11.635221481323242
    8. '```' → logprob: -13.010221481323242
    9. '	def' → logprob: -13.260221481323242
    10. '<|end|>' → logprob: -13.260221481323242

Token 316: ' __' (ID: 2516)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.25265419483184814
    2. 'norm' → logprob: -2.0026540756225586
    3. 'abs' → logprob: -3.2526540756225586
    4. 'distance' → logprob: -3.6276540756225586
    5. 'dist' → logprob: -4.502654075622559
    6. 'length' → logprob: -4.627654075622559
    7. '__' → logprob: -6.752654075622559
    8. 'len' → logprob: -7.877654075622559
    9. 'def' → logprob: -8.002654075622559
    10. ' dot' → logprob: -9.877654075622559

Token 317: 'lt' (ID: 3199)
  Prédit: 'lt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -1.0256061553955078
    2. 'neg' → logprob: -1.0256061553955078
    3. 'abs' → logprob: -1.2756061553955078
    4. 'pow' → logprob: -6.400606155395508
    5. 'flo' → logprob: -6.775606155395508
    6. 'hash' → logprob: -8.150606155395508
    7. 'mul' → logprob: -9.400606155395508
    8. 'le' → logprob: -9.400606155395508
    9. 'xor' → logprob: -9.775606155395508
    10. 'str' → logprob: -9.900606155395508

Token 318: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.004092408809810877
    2. '__' → logprob: -5.504092216491699
    3. '(' → logprob: -12.1290922164917
    4. '(self' → logprob: -12.7540922164917
    5. '_(' → logprob: -13.2540922164917
    6. '__(
' → logprob: -13.2540922164917
    7. '__('' → logprob: -13.6290922164917
    8. '_' → logprob: -14.7540922164917
    9. '__((' → logprob: -15.1290922164917
    10. '__(*' → logprob: -16.629093170166016

Token 319: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.53050296427682e-05
    2. ' self' → logprob: -9.37508487701416
    3. '(self' → logprob: -16.500085830688477
    4. '       ' → logprob: -16.750085830688477
    5. '   ' → logprob: -17.000085830688477
    6. ' ' → logprob: -17.125085830688477
    7. 'other' → logprob: -17.250085830688477
    8. '0' → logprob: -17.500085830688477
    9. ',' → logprob: -18.125085830688477
    10. '	self' → logprob: -18.125085830688477

Token 320: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009203928522765636
    2. '(self' → logprob: -5.134203910827637
    3. '__' → logprob: -6.134203910827637
    4. 'self' → logprob: -7.384203910827637
    5. ',' → logprob: -8.259203910827637
    6. '(' → logprob: -8.759203910827637
    7. ' (' → logprob: -11.009203910827637
    8. '__,' → logprob: -11.259203910827637
    9. '__(
' → logprob: -11.384203910827637
    10. '_(' → logprob: -11.509203910827637

Token 321: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13614167273044586
    2. 'other' → logprob: -2.136141777038574
    3. ' other' → logprob: -5.386141777038574
    4. ' self' → logprob: -5.386141777038574
    5. 'Other' → logprob: -12.261141777038574
    6. ' ' → logprob: -12.886141777038574
    7. '(self' → logprob: -13.511141777038574
    8. '0' → logprob: -14.011141777038574
    9. ')' → logprob: -14.136141777038574
    10. '   ' → logprob: -14.511141777038574

Token 322: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001645644661039114
    2. ' :' → logprob: -8.875164985656738
    3. ')' → logprob: -12.000164985656738
    4. 'self' → logprob: -12.125164985656738
    5. '(' → logprob: -13.125164985656738
    6. '(self' → logprob: -13.250164985656738
    7. '   ' → logprob: -13.375164985656738
    8. '):' → logprob: -13.375164985656738
    9. ' (' → logprob: -14.125164985656738
    10. '[' → logprob: -14.250164985656738

Token 323: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.2877271771430969
    2. ''' → logprob: -1.4127271175384521
    3. ''s' → logprob: -5.162727355957031
    4. ')' → logprob: -8.537727355957031
    5. 'object' → logprob: -8.912727355957031
    6. 'Point' → logprob: -9.037727355957031
    7. ' ' → logprob: -9.287727355957031
    8. ''value' → logprob: -10.037727355957031
    9. ' Point' → logprob: -10.287727355957031
    10. '<|end|>' → logprob: -10.537727355957031

Token 324: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.6240566083070007e-06
    2. ' Point' → logprob: -13.625001907348633
    3. ''' → logprob: -15.625001907348633
    4. '_Point' → logprob: -16.750001907348633
    5. '	Point' → logprob: -16.750001907348633
    6. '<Point' → logprob: -17.875001907348633
    7. '.Point' → logprob: -17.875001907348633
    8. '_point' → logprob: -18.125001907348633
    9. ')' → logprob: -18.250001907348633
    10. '(Point' → logprob: -18.750001907348633

Token 325: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00132976402528584
    2. ')' → logprob: -6.6263298988342285
    3. ''' → logprob: -12.75132942199707
    4. ':' → logprob: -15.00132942199707
    5. '")' → logprob: -15.00132942199707
    6. ' ')' → logprob: -15.87632942199707
    7. '`)' → logprob: -16.75132942199707
    8. ''):
' → logprob: -17.00132942199707
    9. '}')' → logprob: -17.75132942199707
    10. '’)' → logprob: -18.00132942199707

Token 326: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44258809089660645
    2. ')' → logprob: -1.6925880908966064
    3. '->' → logprob: -2.1925880908966064
    4. ' ->' → logprob: -2.9425880908966064
    5. ')->' → logprob: -6.192587852478027
    6. ' :' → logprob: -6.192587852478027
    7. '<|end|>' → logprob: -6.442587852478027
    8. ',' → logprob: -7.067587852478027
    9. 'self' → logprob: -7.317587852478027
    10. '       ' → logprob: -7.442587852478027

Token 327: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0024762547109276056
    2. ' bool' → logprob: -6.002476215362549
    3. '<bool' → logprob: -15.752476692199707
    4. '	bool' → logprob: -16.12747573852539
    5. 'True' → logprob: -16.75247573852539
    6. ')' → logprob: -17.00247573852539
    7. ' ' → logprob: -17.12747573852539
    8. ':' → logprob: -17.50247573852539
    9. '   ' → logprob: -17.75247573852539
    10. '(bool' → logprob: -18.12747573852539

Token 328: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010148260043933988
    2. ':
' → logprob: -7.751014709472656
    3. '):' → logprob: -8.501014709472656
    4. '       ' → logprob: -8.751014709472656
    5. ' :' → logprob: -9.126014709472656
    6. '<|end|>' → logprob: -9.876014709472656
    7. ':return' → logprob: -11.001014709472656
    8. '   ' → logprob: -11.251014709472656
    9. '():' → logprob: -11.251014709472656
    10. '):
' → logprob: -12.126014709472656

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005199366714805365
    2. 'return' → logprob: -5.505199432373047
    3. 'if' → logprob: -7.255199432373047
    4. ' if' → logprob: -8.755199432373047
    5. ' return' → logprob: -8.880199432373047
    6. 'self' → logprob: -9.880199432373047
    7. '<|end|>' → logprob: -10.505199432373047
    8. '   ' → logprob: -11.380199432373047
    9. '	return' → logprob: -11.755199432373047
    10. '0' → logprob: -12.630199432373047

Token 330: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06309579312801361
    2. 'return' (adapté à ' return') → logprob: -2.813095808029175
    3. ' if' → logprob: -7.313095569610596
    4. '       ' → logprob: -7.813095569610596
    5. ' return' → logprob: -10.188096046447754
    6. 'self' → logprob: -11.563096046447754
    7. '(self' → logprob: -12.313096046447754
    8. '	if' → logprob: -13.938096046447754
    9. '	return' → logprob: -14.313096046447754
    10. '   ' → logprob: -14.313096046447754

Token 331: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03029373474419117
    2. 'self' → logprob: -3.5302937030792236
    3. ' (' → logprob: -7.655293941497803
    4. ' self' → logprob: -10.405293464660645
    5. '(s' → logprob: -11.155293464660645
    6. '(x' → logprob: -12.155293464660645
    7. '(' → logprob: -12.155293464660645
    8. '   ' → logprob: -12.280293464660645
    9. '	self' → logprob: -13.030293464660645
    10. '(this' → logprob: -13.530293464660645

Token 332: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0011714138090610504
    2. '.y' → logprob: -6.751171588897705
    3. '.' → logprob: -14.376171112060547
    4. 'x' → logprob: -15.376171112060547
    5. '.s' → logprob: -15.626171112060547
    6. '.t' → logprob: -16.626171112060547
    7. '.to' → logprob: -16.751171112060547
    8. 'y' → logprob: -17.376171112060547
    9. '.m' → logprob: -17.376171112060547
    10. '.norm' → logprob: -18.001171112060547

Token 333: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07911692559719086
    2. ' <' → logprob: -2.5791168212890625
    3. ',' → logprob: -8.704116821289062
    4. ' ' → logprob: -11.954116821289062
    5. '>' → logprob: -12.079116821289062
    6. '<com' → logprob: -12.204116821289062
    7. '==' → logprob: -12.454116821289062
    8. '<int' → logprob: -12.829116821289062
    9. '!=' → logprob: -13.204116821289062
    10. '<len' → logprob: -13.204116821289062

Token 334: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00012356207298580557
    2. ' other' → logprob: -9.000123977661133
    3. '(other' → logprob: -16.875123977661133
    4. ' ' → logprob: -17.500123977661133
    5. '   ' → logprob: -18.375123977661133
    6. '.other' → logprob: -18.750123977661133
    7. 'othe' → logprob: -19.000123977661133
    8. 'self' → logprob: -19.000123977661133
    9. '0' → logprob: -19.125123977661133
    10. '
' → logprob: -19.625123977661133

Token 335: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.002636653371155262
    2. '.' → logprob: -6.002636432647705
    3. 'y' → logprob: -8.752636909484863
    4. '.x' → logprob: -13.002636909484863
    5. ' .' → logprob: -14.627636909484863
    6. '.
' → logprob: -17.252635955810547
    7. '.point' → logprob: -17.627635955810547
    8. '.other' → logprob: -17.627635955810547
    9. ').' → logprob: -18.127635955810547
    10. ' y' → logprob: -18.127635955810547

Token 336: ' \
' (ID: 6814)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.31653279066085815
    2. 'or' → logprob: -1.316532850265503
    3. 'if' → logprob: -6.316532611846924
    4. ' if' → logprob: -6.566532611846924
    5. '<|end|>' → logprob: -10.691533088684082
    6. '	or' → logprob: -11.566533088684082
    7. 'and' → logprob: -11.816533088684082
    8. ' ' → logprob: -12.816533088684082
    9. '   ' → logprob: -13.066533088684082
    10. ' and' → logprob: -13.316533088684082

Token 337: '           ' (ID: 352)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.5015622973442078
    2. ' or' → logprob: -1.0015623569488525
    3. 'if' → logprob: -3.7515623569488525
    4. ' if' → logprob: -5.626562118530273
    5. '	or' → logprob: -11.001562118530273
    6. 'and' → logprob: -12.376562118530273
    7. '   ' → logprob: -12.376562118530273
    8. ' ' → logprob: -13.751562118530273
    9. '()' → logprob: -14.626562118530273
    10. '       ' → logprob: -14.876562118530273

Token 338: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5580496788024902
    2. 'or' → logprob: -1.0580496788024902
    3. ' or' → logprob: -2.6830496788024902
    4. ' if' → logprob: -4.43304967880249
    5. '           ' → logprob: -8.683050155639648
    6. 'and' → logprob: -9.683050155639648
    7. '	or' → logprob: -11.058050155639648
    8. ' ' → logprob: -11.308050155639648
    9. '       ' → logprob: -11.308050155639648
    10. '   ' → logprob: -11.308050155639648

Token 339: ' abs' (ID: 8443)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.06862614303827286
    2. ' not' → logprob: -3.8186261653900146
    3. 'float' → logprob: -3.8186261653900146
    4. 'self' → logprob: -3.8186261653900146
    5. ' float' → logprob: -8.693626403808594
    6. ' self' → logprob: -9.318626403808594
    7. '!' → logprob: -9.443626403808594
    8. '   ' → logprob: -10.318626403808594
    9. '(not' → logprob: -10.943626403808594
    10. '(float' → logprob: -11.193626403808594

Token 340: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.547789674485102e-05
    2. '(' → logprob: -10.250035285949707
    3. 'self' → logprob: -16.875036239624023
    4. '((' → logprob: -17.500036239624023
    5. '(other' → logprob: -17.750036239624023
    6. '(s' → logprob: -18.375036239624023
    7. '<|end|>' → logprob: -18.875036239624023
    8. '	self' → logprob: -19.125036239624023
    9. '(
' → logprob: -19.125036239624023
    10. ' (' → logprob: -19.250036239624023

Token 341: '.x' (ID: 3700)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00017064384883269668
    2. '(' → logprob: -9.375170707702637
    3. '(y' → logprob: -10.375170707702637
    4. 'self' → logprob: -10.500170707702637
    5. '(other' → logprob: -10.750170707702637
    6. '(s' → logprob: -13.875170707702637
    7. '[self' → logprob: -14.125170707702637
    8. '.y' → logprob: -14.250170707702637
    9. ' self' → logprob: -14.500170707702637
    10. '-self' → logprob: -14.625170707702637

Token 342: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04769441857933998
    2. ' -' → logprob: -3.297694444656372
    3. '-other' → logprob: -5.297694206237793
    4. '(other' → logprob: -5.547694206237793
    5. '(' → logprob: -7.422694206237793
    6. 'other' → logprob: -9.797694206237793
    7. ' ' → logprob: -10.547694206237793
    8. '-self' → logprob: -11.797694206237793
    9. '   ' → logprob: -12.422694206237793
    10. '(self' → logprob: -12.547694206237793

Token 343: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0005533903022296727
    2. ' other' → logprob: -7.500553607940674
    3. '0' → logprob: -15.375553131103516
    4. 'self' → logprob: -16.250553131103516
    5. '(other' → logprob: -16.625553131103516
    6. '   ' → logprob: -16.875553131103516
    7. ' ' → logprob: -17.125553131103516
    8. 'Other' → logprob: -17.625553131103516
    9. '  ' → logprob: -18.375553131103516
    10. '.other' → logprob: -18.500553131103516

Token 344: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -4.537180211627856e-05
    2. '.' → logprob: -10.125045776367188
    3. ')' → logprob: -13.000045776367188
    4. 'x' → logprob: -13.625045776367188
    5. ' ' → logprob: -14.875045776367188
    6. '(' → logprob: -15.125045776367188
    7. '[' → logprob: -15.125045776367188
    8. '.y' → logprob: -15.625045776367188
    9. ').' → logprob: -15.875045776367188
    10. '(x' → logprob: -15.875045776367188

Token 345: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009910020045936108
    2. ')>' → logprob: -4.8849101066589355
    3. ')<' → logprob: -6.3849101066589355
    4. ' )' → logprob: -8.009909629821777
    5. ')>=' → logprob: -8.259909629821777
    6. '>' → logprob: -11.009909629821777
    7. ' >' → logprob: -13.259909629821777
    8. ')<=' → logprob: -13.384909629821777
    9. '>)' → logprob: -13.884909629821777
    10. '<' → logprob: -14.509909629821777

Token 346: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.15135695040225983
    2. ' >' → logprob: -2.7763569355010986
    3. '>=' → logprob: -2.9013569355010986
    4. ' >=' → logprob: -4.151357173919678
    5. '<' → logprob: -5.026357173919678
    6. ' <' → logprob: -7.026357173919678
    7. '<=' → logprob: -11.77635669708252
    8. ')' → logprob: -12.02635669708252
    9. ' ' → logprob: -12.65135669708252
    10. ')>=' → logprob: -12.77635669708252

Token 347: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -1.6047699318733066e-05
    2. '1' → logprob: -11.250016212463379
    3. ' EPS' → logprob: -12.875016212463379
    4. 'EP' → logprob: -15.750016212463379
    5. 'eps' → logprob: -16.375015258789062
    6. '   ' → logprob: -16.875015258789062
    7. ' ' → logprob: -17.125015258789062
    8. 'ESP' → logprob: -18.125015258789062
    9. '0' → logprob: -18.500015258789062
    10. 'EPT' → logprob: -18.625015258789062

Token 348: ' \
' (ID: 6814)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.474086195230484
    2. ' else' → logprob: -0.9740861654281616
    3. 'and' → logprob: -12.724085807800293
    4. '       ' → logprob: -13.724085807800293
    5. '\
' → logprob: -13.849085807800293
    6. '	else' → logprob: -14.349085807800293
    7. '        ' → logprob: -14.474085807800293
    8. ' ' → logprob: -14.474085807800293
    9. ' and' → logprob: -14.599085807800293
    10. ',' → logprob: -15.099085807800293

Token 349: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03804665803909302
    2. ' else' → logprob: -3.2880465984344482
    3. '       ' → logprob: -12.538046836853027
    4. '	else' → logprob: -14.538046836853027
    5. '           ' → logprob: -14.663046836853027
    6. '        ' → logprob: -15.538046836853027
    7. 'and' → logprob: -15.788046836853027
    8. 'or' → logprob: -16.03804588317871
    9. '   ' → logprob: -16.53804588317871
    10. ' or' → logprob: -16.66304588317871

Token 350: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0019298245897516608
    2. ' else' → logprob: -6.251929759979248
    3. '           ' → logprob: -14.126930236816406
    4. '       ' → logprob: -15.376930236816406
    5. '	else' → logprob: -16.251930236816406
    6. 'els' → logprob: -16.751930236816406
    7. 'and' → logprob: -17.126930236816406
    8. 'or' → logprob: -17.501930236816406
    9. '   ' → logprob: -17.501930236816406
    10. '        ' → logprob: -18.376930236816406

Token 351: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.65101717156358e-05
    2. ' self' → logprob: -9.250096321105957
    3. '(self' → logprob: -15.625096321105957
    4. '   ' → logprob: -16.250097274780273
    5. ' ' → logprob: -16.875097274780273
    6. '  ' → logprob: -17.375097274780273
    7. '	self' → logprob: -17.875097274780273
    8. 'abs' → logprob: -18.000097274780273
    9. '
' → logprob: -19.750097274780273
    10. '    ' → logprob: -20.125097274780273

Token 352: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00033999193692579865
    2. 'x' → logprob: -8.000340461730957
    3. '.' → logprob: -12.625340461730957
    4. '<x' → logprob: -13.750340461730957
    5. '<|end|>' → logprob: -16.25033950805664
    6. ' x' → logprob: -17.62533950805664
    7. '	x' → logprob: -18.50033950805664
    8. 'self' → logprob: -18.75033950805664
    9. ' .' → logprob: -19.12533950805664
    10. '<' → logprob: -19.25033950805664

Token 353: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.033679816871881485
    2. '<' → logprob: -3.408679723739624
    3. '<|end|>' → logprob: -10.908679962158203
    4. ' >' → logprob: -11.408679962158203
    5. '>' → logprob: -13.658679962158203
    6. ' ' → logprob: -14.033679962158203
    7. '<x' → logprob: -14.408679962158203
    8. '<class' → logprob: -14.658679962158203
    9. '[' → logprob: -15.533679962158203
    10. ' <=' → logprob: -15.783679962158203

Token 354: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.004078758880496025
    2. ' other' → logprob: -5.5040788650512695
    3. '(other' → logprob: -15.50407886505127
    4. ' ' → logprob: -17.379077911376953
    5. '   ' → logprob: -17.379077911376953
    6. '.other' → logprob: -17.629077911376953
    7. 'othe' → logprob: -17.754077911376953
    8. 'self' → logprob: -18.629077911376953
    9. 'Other' → logprob: -18.629077911376953
    10. 'oth' → logprob: -18.754077911376953

Token 355: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -9.949026571121067e-05
    2. '.' → logprob: -9.250099182128906
    3. 'x' → logprob: -12.750099182128906
    4. ' .' → logprob: -14.750099182128906
    5. '<x' → logprob: -18.375099182128906
    6. '.<' → logprob: -18.875099182128906
    7. '[' → logprob: -20.125099182128906
    8. '..' → logprob: -20.250099182128906
    9. '.point' → logprob: -20.500099182128906
    10. '._' → logprob: -20.500099182128906

Token 356: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 358: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 359: ' norm' (ID: 7882)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.730002760887146
    2. 'dist' → logprob: -1.105002760887146
    3. 'hash' → logprob: -1.980002760887146
    4. 'repr' → logprob: -4.8550028800964355
    5. 'abs' → logprob: -4.9800028800964355
    6. 'angle' → logprob: -5.1050028800964355
    7. 'eq' → logprob: -5.2300028800964355
    8. 'len' → logprob: -5.4800028800964355
    9. '__' → logprob: -5.6050028800964355
    10. 'def' → logprob: -5.7300028800964355

Token 360: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08479085564613342
    2. '()' → logprob: -2.8347909450531006
    3. '(' → logprob: -3.8347909450531006
    4. '()(' → logprob: -7.5847907066345215
    5. '(s' → logprob: -8.83479118347168
    6. 'self' → logprob: -9.33479118347168
    7. 's' → logprob: -10.20979118347168
    8. ' (' → logprob: -10.20979118347168
    9. '(
' → logprob: -10.83479118347168
    10. ' ' → logprob: -11.08479118347168

Token 361: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004551884718239307
    2. '()' → logprob: -5.504551887512207
    3. '(' → logprob: -8.254551887512207
    4. ')' → logprob: -10.004551887512207
    5. '()(' → logprob: -10.004551887512207
    6. 's' → logprob: -10.129551887512207
    7. 'self' → logprob: -10.504551887512207
    8. '(s' → logprob: -10.879551887512207
    9. '())' → logprob: -11.004551887512207
    10. '(
' → logprob: -12.379551887512207

Token 362: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7014040350914001
    2. '       ' → logprob: -0.9514040350914001
    3. 'return' → logprob: -2.201404094696045
    4. ' return' → logprob: -5.451404094696045
    5. '	' → logprob: -6.451404094696045
    6. '	return' → logprob: -6.951404094696045
    7. ' ' → logprob: -9.076403617858887
    8. '()' → logprob: -9.451403617858887
    9. 'self' → logprob: -9.701403617858887
    10. '0' → logprob: -10.201403617858887

Token 363: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.038522109389305115
    2. ' return' → logprob: -3.2885220050811768
    3. '   ' → logprob: -7.913522243499756
    4. 'sqrt' → logprob: -10.038521766662598
    5. '       ' → logprob: -10.163521766662598
    6. 'self' → logprob: -11.288521766662598
    7. '	return' → logprob: -11.413521766662598
    8. ' sqrt' → logprob: -12.288521766662598
    9. ' ' → logprob: -13.038521766662598
    10. 's' → logprob: -14.288521766662598

Token 364: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10566221922636032
    2. 'sqrt' → logprob: -2.3556621074676514
    3. ' self' → logprob: -5.6056623458862305
    4. ' sqrt' → logprob: -6.3556623458862305
    5. 's' → logprob: -11.35566234588623
    6. '(self' → logprob: -11.48066234588623
    7. '.sqrt' → logprob: -13.85566234588623
    8. '   ' → logprob: -13.98066234588623
    9. '	self' → logprob: -14.10566234588623
    10. '```' → logprob: -14.60566234588623

Token 365: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.009303370490670204
    2. 'self' → logprob: -4.884303569793701
    3. 'x' → logprob: -7.134303569793701
    4. '.sqrt' → logprob: -8.134303092956543
    5. 'sqrt' → logprob: -8.509303092956543
    6. 'Point' → logprob: -8.759303092956543
    7. 's' → logprob: -9.509303092956543
    8. '.s' → logprob: -9.759303092956543
    9. ' Point' → logprob: -10.134303092956543
    10. ' self' → logprob: -10.509303092956543

Token 366: ' *' (ID: 425)
  Prédit: '*self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*self' → logprob: -0.40418383479118347
    2. '**' → logprob: -1.1541838645935059
    3. ' *' → logprob: -4.404183864593506
    4. '*' → logprob: -5.404183864593506
    5. ' **' → logprob: -7.779183864593506
    6. '*x' → logprob: -11.029183387756348
    7. '*p' → logprob: -13.154183387756348
    8. ' ' → logprob: -13.529183387756348
    9. '*s' → logprob: -15.154183387756348
    10. 'self' → logprob: -15.154183387756348

Token 367: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00032271104282699525
    2. ' self' → logprob: -8.125322341918945
    3. '2' → logprob: -10.750322341918945
    4. '<|end|>' → logprob: -13.000322341918945
    5. '*self' → logprob: -13.875322341918945
    6. '	self' → logprob: -14.500322341918945
    7. '
' → logprob: -15.125322341918945
    8. '=self' → logprob: -15.250322341918945
    9. ' ' → logprob: -15.375322341918945
    10. '(self' → logprob: -16.000322341918945

Token 368: '.x' (ID: 3700)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06452599167823792
    2. 'x' → logprob: -2.939526081085205
    3. '<|end|>' → logprob: -5.939526081085205
    4. '+' → logprob: -6.189526081085205
    5. ' self' → logprob: -6.314526081085205
    6. '2' → logprob: -6.939526081085205
    7. '+self' → logprob: -7.439526081085205
    8. '	self' → logprob: -7.939526081085205
    9. '*self' → logprob: -8.314525604248047
    10. '<|end|>' → logprob: -8.564525604248047

Token 369: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16023722290992737
    2. '+' → logprob: -1.910237193107605
    3. '+self' → logprob: -11.285237312316895
    4. '   ' → logprob: -16.035236358642578
    5. ' +
' → logprob: -16.285236358642578
    6. ' ' → logprob: -16.410236358642578
    7. ' ' → logprob: -16.910236358642578
    8. ' plus' → logprob: -17.285236358642578
    9. '+y' → logprob: -17.535236358642578
    10. '    ' → logprob: -17.785236358642578

Token 370: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007104054093360901
    2. ' self' → logprob: -7.250710487365723
    3. '(self' → logprob: -15.375710487365723
    4. '	self' → logprob: -15.625710487365723
    5. '       ' → logprob: -16.375709533691406
    6. '[self' → logprob: -17.750709533691406
    7. '<|end|>' → logprob: -17.750709533691406
    8. '   ' → logprob: -18.000709533691406
    9. '```' → logprob: -18.375709533691406
    10. ' ' → logprob: -18.625709533691406

Token 371: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.17394717037677765
    2. '.y' → logprob: -1.9239472150802612
    3. 'self' → logprob: -4.298947334289551
    4. '.' → logprob: -10.29894733428955
    5. ' self' → logprob: -12.92394733428955
    6. ' y' → logprob: -12.92394733428955
    7. '   ' → logprob: -13.17394733428955
    8. ' ' → logprob: -13.79894733428955
    9. '.self' → logprob: -13.92394733428955
    10. '<|end|>' → logprob: -14.29894733428955

Token 372: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25266900658607483
    2. ' *' → logprob: -1.5026689767837524
    3. '*self' → logprob: -7.252668857574463
    4. '**' → logprob: -10.752669334411621
    5. ' ' → logprob: -12.377669334411621
    6. '*object' → logprob: -13.252669334411621
    7. '*y' → logprob: -13.377669334411621
    8. '   ' → logprob: -14.502669334411621
    9. ' ' → logprob: -14.502669334411621
    10. '*this' → logprob: -14.627669334411621

Token 373: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006389308837242424
    2. ' self' → logprob: -7.375638961791992
    3. '*self' → logprob: -12.875638961791992
    4. '(self' → logprob: -13.125638961791992
    5. '	self' → logprob: -13.125638961791992
    6. '<|end|>' → logprob: -13.375638961791992
    7. 'y' → logprob: -13.750638961791992
    8. '[self' → logprob: -14.000638961791992
    9. '0' → logprob: -14.250638961791992
    10. ' ' → logprob: -14.875638961791992

Token 374: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.009868117049336433
    2. '.y' → logprob: -4.634868144989014
    3. ' y' → logprob: -9.884867668151855
    4. '	y' → logprob: -10.884867668151855
    5. 'self' → logprob: -11.134867668151855
    6. '*y' → logprob: -11.509867668151855
    7. '   ' → logprob: -12.384867668151855
    8. '_y' → logprob: -12.759867668151855
    9. '2' → logprob: -13.134867668151855
    10. '.' → logprob: -13.259867668151855

Token 375: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07463634014129639
    2. 'def' → logprob: -2.824636459350586
    3. ' def' → logprob: -4.824636459350586
    4. '<|end|>' → logprob: -5.949636459350586
    5. ' ' → logprob: -7.449636459350586
    6. '	def' → logprob: -7.699636459350586
    7. ')' → logprob: -7.699636459350586
    8. '    
' → logprob: -9.199636459350586
    9. '```' → logprob: -9.699636459350586
    10. '  ' → logprob: -9.699636459350586

Token 377: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.017832530662417412
    2. '   ' → logprob: -4.1428327560424805
    3. ' def' → logprob: -6.3928327560424805
    4. ')' → logprob: -9.64283275604248
    5. '	def' → logprob: -10.01783275604248
    6. '@property' → logprob: -11.89283275604248
    7. ' ' → logprob: -13.64283275604248
    8. '@' → logprob: -13.76783275604248
    9. '    
' → logprob: -14.39283275604248
    10. '  ' → logprob: -14.51783275604248

Token 378: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.03565160930156708
    2. 'norm' → logprob: -4.160651683807373
    3. 'dist' → logprob: -4.910651683807373
    4. 'length' → logprob: -5.160651683807373
    5. 'len' → logprob: -5.660651683807373
    6. 'distance' → logprob: -6.285651683807373
    7. ' abs' → logprob: -7.410651683807373
    8. 'm' → logprob: -9.160651206970215
    9. ' norm' → logprob: -9.910651206970215
    10. 'mod' → logprob: -9.910651206970215

Token 379: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007358930306509137
    2. '(' → logprob: -7.500735759735107
    3. '()(' → logprob: -10.000736236572266
    4. '()>' → logprob: -10.500736236572266
    5. '()}' → logprob: -11.250736236572266
    6. '()*' → logprob: -11.375736236572266
    7. '();' → logprob: -11.500736236572266
    8. '<|end|>' → logprob: -11.625736236572266
    9. '(self' → logprob: -11.750736236572266
    10. '()?>' → logprob: -12.000736236572266

Token 380: '):
' (ID: 1883)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03267896920442581
    2. '())' → logprob: -3.6576790809631348
    3. ')' → logprob: -5.407679080963135
    4. '():' → logprob: -7.532679080963135
    5. '(' → logprob: -8.032678604125977
    6. '(self' → logprob: -8.157678604125977
    7. '());' → logprob: -8.407678604125977
    8. ' ()' → logprob: -9.032678604125977
    9. '()>' → logprob: -9.532678604125977
    10. '()*' → logprob: -10.407678604125977

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3270889222621918
    2. 'return' → logprob: -1.7020889520645142
    3. 'sqrt' → logprob: -2.7020888328552246
    4. '   ' → logprob: -4.327088832855225
    5. ' return' → logprob: -4.952088832855225
    6. '()' → logprob: -5.327088832855225
    7. ' sqrt' → logprob: -5.452088832855225
    8. 's' → logprob: -9.327089309692383
    9. '	return' → logprob: -10.202089309692383
    10. '    ' → logprob: -11.577089309692383

Token 382: ' return' (ID: 622)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.31843674182891846
    2. 'return' (adapté à ' return') → logprob: -1.3184367418289185
    3. ' sqrt' → logprob: -5.318436622619629
    4. ' return' → logprob: -8.318436622619629
    5. 's' → logprob: -11.443436622619629
    6. '   ' → logprob: -12.193436622619629
    7. '.sqrt' → logprob: -14.193436622619629
    8. '       ' → logprob: -15.318436622619629
    9. 'import' → logprob: -16.068437576293945
    10. ' ' → logprob: -16.193437576293945

Token 383: ' sqrt' (ID: 44237)
  Prédit: ' sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.6931551694869995
    2. 'sqrt' → logprob: -0.6931551694869995
    3. 's' → logprob: -12.193155288696289
    4. '.sqrt' → logprob: -13.818155288696289
    5. ' ' → logprob: -14.193155288696289
    6. '(s' → logprob: -14.568155288696289
    7. ' ' → logprob: -15.318155288696289
    8. '	s' → logprob: -16.19315528869629
    9. 'self' → logprob: -16.31815528869629
    10. '   ' → logprob: -16.56815528869629

Token 384: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005561320576816797
    2. '(' → logprob: -7.500555992126465
    3. '(s' → logprob: -13.000555992126465
    4. '((' → logprob: -14.375555992126465
    5. 'self' → logprob: -15.750555992126465
    6. '(
' → logprob: -15.875555992126465
    7. ' (' → logprob: -16.87555694580078
    8. '(abs' → logprob: -17.12555694580078
    9. '(this' → logprob: -18.00055694580078
    10. '(sel' → logprob: -18.25055694580078

Token 385: '.norm' (ID: 73834)
  Prédit: '.norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.norm' → logprob: -0.08868937194347382
    2. '.x' → logprob: -3.0886893272399902
    3. '.' → logprob: -3.7136893272399902
    4. '(self' → logprob: -4.58868932723999
    5. 'self' → logprob: -6.08868932723999
    6. '(norm' → logprob: -7.21368932723999
    7. '.self' → logprob: -7.58868932723999
    8. ' .' → logprob: -7.83868932723999
    9. 'norm' → logprob: -7.83868932723999
    10. ')' → logprob: -8.338689804077148

Token 386: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0003625177196227014
    2. '()' → logprob: -8.000362396240234
    3. ' ())' → logprob: -10.875362396240234
    4. '())
' → logprob: -12.125362396240234
    5. ')' → logprob: -13.000362396240234
    6. '())

' → logprob: -15.500362396240234
    7. '()
' → logprob: -16.375362396240234
    8. '(' → logprob: -16.500362396240234
    9. '();)' → logprob: -16.500362396240234
    10. '());' → logprob: -17.500362396240234

Token 387: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0513039827346802
    2. 'def' → logprob: -1.4263039827346802
    3. '   ' → logprob: -1.8013039827346802
    4. '
' → logprob: -3.0513038635253906
    5. '```' → logprob: -3.0513038635253906
    6. '<|end|>' → logprob: -3.3013038635253906
    7. '.' → logprob: -3.4263038635253906
    8. 'class' → logprob: -3.9263038635253906
    9. '(' → logprob: -3.9263038635253906
    10. '[' → logprob: -4.801303863525391

Token 388: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07500356435775757
    2. '   ' → logprob: -3.3250036239624023
    3. ')' → logprob: -3.4500036239624023
    4. '<|end|>' → logprob: -5.700003623962402
    5. ' def' → logprob: -7.700003623962402
    6. '#' → logprob: -7.950003623962402
    7. '```' → logprob: -9.200003623962402
    8. '@property' → logprob: -9.825003623962402
    9. '(' → logprob: -10.325003623962402
    10. '	def' → logprob: -10.450003623962402

Token 389: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.15239644050598145
    2. 'angle' → logprob: -2.9023964405059814
    3. 'arg' → logprob: -3.7773964405059814
    4. 'unit' → logprob: -4.027396202087402
    5. 'distance' → logprob: -4.402396202087402
    6. 'normalize' → logprob: -4.777396202087402
    7. 'polar' → logprob: -5.027396202087402
    8. 'dist' → logprob: -5.277396202087402
    9. 'rotate' → logprob: -5.652396202087402
    10. 'to' → logprob: -5.652396202087402

Token 390: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012368950992822647
    2. '(' → logprob: -6.751236915588379
    3. '<|end|>' → logprob: -10.626236915588379
    4. '(other' → logprob: -11.126236915588379
    5. ' (' → logprob: -11.376236915588379
    6. '<|end|>' → logprob: -11.751236915588379
    7. '(
' → logprob: -12.376236915588379
    8. ')(' → logprob: -14.001236915588379
    9. '}(' → logprob: -14.251236915588379
    10. '(this' → logprob: -15.001236915588379

Token 391: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006671638693660498
    2. '(' → logprob: -7.750667095184326
    3. '(other' → logprob: -8.500667572021484
    4. ')(' → logprob: -11.250667572021484
    5. ' (' → logprob: -11.500667572021484
    6. ')' → logprob: -13.000667572021484
    7. '(
' → logprob: -13.250667572021484
    8. '<|end|>' → logprob: -13.250667572021484
    9. '<|end|>' → logprob: -14.125667572021484
    10. ''(' → logprob: -14.500667572021484

Token 392: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.24802035093307495
    2. 'self' → logprob: -1.7480204105377197
    3. ' other' → logprob: -3.1230204105377197
    4. ' self' → logprob: -6.498020172119141
    5. '(other' → logprob: -13.49802017211914
    6. ' ' → logprob: -13.74802017211914
    7. 'Other' → logprob: -13.87302017211914
    8. '(self' → logprob: -13.99802017211914
    9. '_other' → logprob: -13.99802017211914
    10. '   ' → logprob: -14.24802017211914

Token 393: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.771558940410614
    2. ')' → logprob: -1.1465590000152588
    3. '):' → logprob: -2.396559000015259
    4. '(self' → logprob: -2.521559000015259
    5. 'self' → logprob: -4.27155876159668
    6. '('' → logprob: -4.64655876159668
    7. ',' → logprob: -5.02155876159668
    8. '')' → logprob: -5.02155876159668
    9. '(' → logprob: -5.89655876159668
    10. '',' → logprob: -6.77155876159668

Token 394: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.43374085426330566
    2. ' other' → logprob: -1.8087408542633057
    3. ' '' → logprob: -2.3087408542633057
    4. 'Point' → logprob: -2.9337408542633057
    5. 'other' → logprob: -4.183740615844727
    6. ' Point' → logprob: -4.558740615844727
    7. ')' → logprob: -4.933740615844727
    8. ' ' → logprob: -7.308740615844727
    9. 'Other' → logprob: -7.808740615844727
    10. '(Point' → logprob: -7.808740615844727

Token 395: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -9.253090865968261e-06
    2. ' Point' → logprob: -11.625009536743164
    3. '	Point' → logprob: -15.750009536743164
    4. '<Point' → logprob: -17.375009536743164
    5. '_point' → logprob: -17.500009536743164
    6. '.Point' → logprob: -17.625009536743164
    7. ' ' → logprob: -18.000009536743164
    8. '   ' → logprob: -18.125009536743164
    9. ''' → logprob: -18.250009536743164
    10. '_Point' → logprob: -18.375009536743164

Token 396: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0007113590254448354
    2. ')' → logprob: -7.250711441040039
    3. '")' → logprob: -13.750711441040039
    4. ''):
' → logprob: -16.00071144104004
    5. ''' → logprob: -16.75071144104004
    6. ''):' → logprob: -16.87571144104004
    7. ' ')' → logprob: -16.87571144104004
    8. '`)' → logprob: -17.62571144104004
    9. ':' → logprob: -18.62571144104004
    10. '’)' → logprob: -18.62571144104004

Token 397: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1253202259540558
    2. ')' → logprob: -2.7503201961517334
    3. ' ->' → logprob: -3.3753201961517334
    4. '->' → logprob: -4.0003204345703125
    5. ',' → logprob: -8.000320434570312
    6. '(' → logprob: -8.375320434570312
    7. '   ' → logprob: -8.625320434570312
    8. ':' → logprob: -8.625320434570312
    9. ')->' → logprob: -8.750320434570312
    10. 'self' → logprob: -8.875320434570312

Token 398: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.20167431235313416
    2. ' float' → logprob: -1.7016743421554565
    3. ''' → logprob: -8.326674461364746
    4. ' '' → logprob: -11.201674461364746
    5. 'Point' → logprob: -12.951674461364746
    6. ' ' → logprob: -14.076674461364746
    7. '<float' → logprob: -14.576674461364746
    8. '	float' → logprob: -14.951674461364746
    9. ''s' → logprob: -15.076674461364746
    10. '(float' → logprob: -15.201674461364746

Token 399: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023486497811973095
    2. '):' → logprob: -6.75234842300415
    3. ':
' → logprob: -7.00234842300415
    4. '():' → logprob: -8.877348899841309
    5. '   ' → logprob: -10.127348899841309
    6. '       ' → logprob: -10.377348899841309
    7. '):
' → logprob: -10.877348899841309
    8. ':return' → logprob: -11.127348899841309
    9. ')' → logprob: -11.627348899841309
    10. '():
' → logprob: -11.877348899841309

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002025708556175232
    2. 'return' → logprob: -6.252025604248047
    3. ' return' → logprob: -9.877025604248047
    4. '   ' → logprob: -10.002025604248047
    5. 'self' → logprob: -15.502025604248047
    6. '	' → logprob: -16.002025604248047
    7. '	return' → logprob: -16.627025604248047
    8. '      ' → logprob: -17.252025604248047
    9. '           ' → logprob: -18.127025604248047
    10. '```' → logprob: -19.252025604248047

Token 401: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.038386281579732895
    2. 'self' → logprob: -3.288386344909668
    3. '       ' → logprob: -8.288386344909668
    4. ' return' → logprob: -9.288386344909668
    5. ' self' → logprob: -14.288386344909668
    6. '(self' → logprob: -15.538386344909668
    7. '	return' → logprob: -17.28838539123535
    8. '
' → logprob: -18.28838539123535
    9. '   ' → logprob: -18.41338539123535
    10. '```' → logprob: -18.78838539123535

Token 402: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009118211455643177
    2. ' self' → logprob: -7.000911712646484
    3. '(self' → logprob: -15.375911712646484
    4. '   ' → logprob: -16.375911712646484
    5. '
' → logprob: -17.500911712646484
    6. '       ' → logprob: -17.875911712646484
    7. '	self' → logprob: -18.125911712646484
    8. ' ' → logprob: -18.375911712646484
    9. '[self' → logprob: -20.250911712646484
    10. 'Self' → logprob: -20.750911712646484

Token 403: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -4.966313281329349e-05
    2. 'x' → logprob: -10.000049591064453
    3. '.' → logprob: -12.375049591064453
    4. ' .' → logprob: -18.875049591064453
    5. 'self' → logprob: -20.750049591064453
    6. '1' → logprob: -21.000049591064453
    7. '0' → logprob: -21.125049591064453
    8. ' x' → logprob: -23.000049591064453
    9. '   ' → logprob: -23.250049591064453
    10. '10' → logprob: -24.000049591064453

Token 404: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759400725364685
    2. ' *' → logprob: -0.8259400725364685
    3. '*object' → logprob: -14.575940132141113
    4. '**' → logprob: -16.575939178466797
    5. ' ' → logprob: -16.950939178466797
    6. '*out' → logprob: -17.450939178466797
    7. '*self' → logprob: -19.575939178466797
    8. ' ' → logprob: -19.950939178466797
    9. '*x' → logprob: -20.075939178466797
    10. ' **' → logprob: -20.950939178466797

Token 405: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0004306692280806601
    2. ' other' → logprob: -7.750430583953857
    3. '(other' → logprob: -18.125431060791016
    4. '.other' → logprob: -20.750431060791016
    5. 'Other' → logprob: -21.000431060791016
    6. '_other' → logprob: -22.000431060791016
    7. ' ' → logprob: -23.625431060791016
    8. 'others' → logprob: -23.625431060791016
    9. 'OTHER' → logprob: -23.750431060791016
    10. '
' → logprob: -24.375431060791016

Token 406: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.003230233211070299
    2. 'x' → logprob: -5.753230094909668
    3. '.' → logprob: -9.878230094909668
    4. ' .' → logprob: -14.378230094909668
    5. 'other' → logprob: -14.878230094909668
    6. ' x' → logprob: -15.753230094909668
    7. '.
' → logprob: -17.003231048583984
    8. '	x' → logprob: -17.253231048583984
    9. '.other' → logprob: -17.253231048583984
    10. '   ' → logprob: -17.503231048583984

Token 407: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868725895881653
    2. '+' → logprob: -1.1368725299835205
    3. '+self' → logprob: -13.761872291564941
    4. '       ' → logprob: -16.011873245239258
    5. ' ' → logprob: -16.261873245239258
    6. '+
' → logprob: -16.511873245239258
    7. '        ' → logprob: -16.761873245239258
    8. ' ' → logprob: -16.886873245239258
    9. ' +
' → logprob: -17.136873245239258
    10. '    ' → logprob: -17.761873245239258

Token 408: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003995884675532579
    2. 'other' → logprob: -6.003995895385742
    3. ' self' → logprob: -6.503995895385742
    4. ' other' → logprob: -10.753995895385742
    5. '       ' → logprob: -15.878995895385742
    6. '	self' → logprob: -16.753995895385742
    7. ' ' → logprob: -18.003995895385742
    8. 'Other' → logprob: -18.128995895385742
    9. '(self' → logprob: -18.128995895385742
    10. '   ' → logprob: -18.503995895385742

Token 409: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6465601921081543
    2. '.y' → logprob: -1.1465601921081543
    3. 'other' → logprob: -1.8965601921081543
    4. ' y' → logprob: -5.396560192108154
    5. '.other' → logprob: -5.896560192108154
    6. ' other' → logprob: -7.271560192108154
    7. '.' → logprob: -8.021560668945312
    8. 'self' → logprob: -11.521560668945312
    9. ' ' → logprob: -11.646560668945312
    10. '	y' → logprob: -12.896560668945312

Token 410: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07890532165765762
    2. '*' → logprob: -2.5789053440093994
    3. ' ' → logprob: -12.20390510559082
    4. '.' → logprob: -12.70390510559082
    5. '   ' → logprob: -12.95390510559082
    6. '<|end|>' → logprob: -12.95390510559082
    7. '*object' → logprob: -13.82890510559082
    8. '[' → logprob: -14.57890510559082
    9. ' ' → logprob: -14.70390510559082
    10. ')' → logprob: -15.70390510559082

Token 411: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0005533903022296727
    2. ' other' → logprob: -7.500553607940674
    3. 'y' → logprob: -15.375553131103516
    4. '(other' → logprob: -16.875553131103516
    5. '.other' → logprob: -17.500553131103516
    6. ' ' → logprob: -17.750553131103516
    7. ' y' → logprob: -18.500553131103516
    8. 'Other' → logprob: -18.750553131103516
    9. '_other' → logprob: -19.000553131103516
    10. 'othe' → logprob: -19.000553131103516

Token 412: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00729543948546052
    2. 'y' → logprob: -5.007295608520508
    3. '<|end|>' → logprob: -8.007295608520508
    4. '.' → logprob: -8.507295608520508
    5. '*y' → logprob: -10.882295608520508
    6. ' y' → logprob: -12.132295608520508
    7. '*' → logprob: -12.257295608520508
    8. '<|end|>' → logprob: -12.382295608520508
    9. '	y' → logprob: -12.632295608520508
    10. ')' → logprob: -13.132295608520508

Token 413: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 414: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1276206523180008
    2. 'def' → logprob: -2.1276206970214844
    3. '```' → logprob: -7.502620697021484
    4. ' def' → logprob: -9.002620697021484
    5. '	def' → logprob: -12.002620697021484
    6. '    
' → logprob: -12.252620697021484
    7. ' ' → logprob: -13.252620697021484
    8. '       ' → logprob: -13.877620697021484
    9. '`' → logprob: -14.502620697021484
    10. '  ' → logprob: -14.627620697021484

Token 415: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.7053759519476444e-05
    2. '   ' → logprob: -9.875057220458984
    3. ' def' → logprob: -12.125057220458984
    4. '	def' → logprob: -16.250057220458984
    5. '```' → logprob: -18.500057220458984
    6. '@property' → logprob: -19.250057220458984
    7. '    
' → logprob: -19.875057220458984
    8. '  ' → logprob: -20.375057220458984
    9. '@' → logprob: -20.500057220458984
    10. ')' → logprob: -20.500057220458984

Token 416: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0022280486300587654
    2. 'det' → logprob: -6.127228260040283
    3. ' cross' → logprob: -10.377227783203125
    4. 'cc' → logprob: -13.127227783203125
    5. 'distance' → logprob: -13.502227783203125
    6. 'norm' → logprob: -13.502227783203125
    7. 'dist' → logprob: -13.502227783203125
    8. 'Cross' → logprob: -13.752227783203125
    9. '.cross' → logprob: -14.127227783203125
    10. 'def' → logprob: -14.377227783203125

Token 417: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005265804938971996
    2. '(' → logprob: -7.625526428222656
    3. '<|end|>' → logprob: -11.000526428222656
    4. '<|end|>' → logprob: -11.500526428222656
    5. ' (' → logprob: -12.250526428222656
    6. 'self' → logprob: -13.125526428222656
    7. '(other' → logprob: -13.250526428222656
    8. '(
' → logprob: -14.375526428222656
    9. ')' → logprob: -14.500526428222656
    10. ')(' → logprob: -15.125526428222656

Token 418: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002717022318392992
    2. '(' → logprob: -6.627717018127441
    3. '(other' → logprob: -6.877717018127441
    4. ',' → logprob: -8.502717018127441
    5. ')' → logprob: -9.127717018127441
    6. ' (' → logprob: -11.002717018127441
    7. 'self' → logprob: -11.502717018127441
    8. ')(' → logprob: -12.127717018127441
    9. '<|end|>' → logprob: -12.752717018127441
    10. 'other' → logprob: -13.252717018127441

Token 419: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.5760912895202637
    2. ' other' → logprob: -0.8260912895202637
    3. 'self' → logprob: -8.951091766357422
    4. ' self' → logprob: -11.326091766357422
    5. 'Other' → logprob: -11.951091766357422
    6. '(other' → logprob: -12.826091766357422
    7. '.other' → logprob: -14.326091766357422
    8. '_other' → logprob: -14.576091766357422
    9. ' ' → logprob: -17.451091766357422
    10. 'OTHER' → logprob: -18.201091766357422

Token 420: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028535569086670876
    2. ')' → logprob: -3.7785356044769287
    3. '('' → logprob: -5.52853536605835
    4. '):' → logprob: -7.27853536605835
    5. ''' → logprob: -9.028535842895508
    6. '(' → logprob: -9.528535842895508
    7. ',' → logprob: -9.653535842895508
    8. '')' → logprob: -9.903535842895508
    9. '(self' → logprob: -9.903535842895508
    10. ')'' → logprob: -10.028535842895508

Token 421: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10024506598711014
    2. ' '' → logprob: -2.3502449989318848
    3. 'Point' → logprob: -10.850245475769043
    4. ' Point' → logprob: -11.725245475769043
    5. ')' → logprob: -12.350245475769043
    6. ' ' → logprob: -12.850245475769043
    7. '('' → logprob: -14.225245475769043
    8. '['' → logprob: -14.600245475769043
    9. '')' → logprob: -14.600245475769043
    10. '<Point' → logprob: -14.975245475769043

Token 422: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.774276774493046e-05
    2. ''' → logprob: -10.375038146972656
    3. ' Point' → logprob: -12.000038146972656
    4. '	Point' → logprob: -16.125038146972656
    5. '.Point' → logprob: -16.625038146972656
    6. '_point' → logprob: -17.000038146972656
    7. '<Point' → logprob: -17.125038146972656
    8. '(Point' → logprob: -17.125038146972656
    9. ''s' → logprob: -17.250038146972656
    10. '-point' → logprob: -18.000038146972656

Token 423: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.002193563850596547
    2. ')' → logprob: -6.127193450927734
    3. ''' → logprob: -12.627193450927734
    4. '")' → logprob: -13.252193450927734
    5. ':' → logprob: -13.502193450927734
    6. ''):
' → logprob: -13.877193450927734
    7. ' ')' → logprob: -14.627193450927734
    8. '   ' → logprob: -15.502193450927734
    9. ')'' → logprob: -15.752193450927734
    10. ''):' → logprob: -15.877193450927734

Token 424: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07353993505239487
    2. '->' → logprob: -2.948539972305298
    3. ' ->' → logprob: -4.073539733886719
    4. '(' → logprob: -7.323539733886719
    5. ':' → logprob: -7.573539733886719
    6. ')' → logprob: -9.573539733886719
    7. '   ' → logprob: -9.823539733886719
    8. '       ' → logprob: -10.198539733886719
    9. ' (' → logprob: -10.323539733886719
    10. '>' → logprob: -10.448539733886719

Token 425: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.31409692764282227
    2. ' float' → logprob: -1.3140969276428223
    3. ''' → logprob: -7.314096927642822
    4. 'Point' → logprob: -9.189096450805664
    5. ' '' → logprob: -10.439096450805664
    6. ' Point' → logprob: -10.689096450805664
    7. ' ' → logprob: -12.189096450805664
    8. 'Float' → logprob: -12.939096450805664
    9. '(float' → logprob: -12.939096450805664
    10. 'self' → logprob: -14.064096450805664

Token 426: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11018932610750198
    2. '       ' → logprob: -2.735189437866211
    3. 'self' → logprob: -4.110189437866211
    4. ':' → logprob: -4.860189437866211
    5. '   ' → logprob: -4.860189437866211
    6. '(' → logprob: -5.235189437866211
    7. ' self' → logprob: -6.735189437866211
    8. '->' → logprob: -7.360189437866211
    9. ':
' → logprob: -8.985189437866211
    10. ')' → logprob: -10.360189437866211

Token 427: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.581235945224762
    2. '       ' → logprob: -0.831235945224762
    3. 'self' → logprob: -5.831235885620117
    4. ' return' → logprob: -6.081235885620117
    5. '   ' → logprob: -9.956235885620117
    6. ' self' → logprob: -11.831235885620117
    7. '	return' → logprob: -12.081235885620117
    8. '```' → logprob: -14.206235885620117
    9. '	' → logprob: -14.456235885620117
    10. ' ' → logprob: -14.956235885620117

Token 428: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1602855622768402
    2. 'self' → logprob: -1.9102855920791626
    3. ' return' → logprob: -9.910285949707031
    4. '   ' → logprob: -11.785285949707031
    5. ' self' → logprob: -13.035285949707031
    6. '(self' → logprob: -13.660285949707031
    7. '       ' → logprob: -14.410285949707031
    8. '```' → logprob: -16.28528594970703
    9. '	return' → logprob: -17.16028594970703
    10. '
' → logprob: -17.53528594970703

Token 429: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017052943585440516
    2. ' self' → logprob: -6.376705169677734
    3. '(self' → logprob: -13.001705169677734
    4. '   ' → logprob: -14.876705169677734
    5. '
' → logprob: -15.626705169677734
    6. ' ' → logprob: -16.126705169677734
    7. '	self' → logprob: -16.876705169677734
    8. '       ' → logprob: -17.126705169677734
    9. '```' → logprob: -17.126705169677734
    10. 'Self' → logprob: -17.751705169677734

Token 430: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -2.2200749754119897e-06
    2. 'x' → logprob: -13.375001907348633
    3. '.' → logprob: -14.250001907348633
    4. ' .' → logprob: -17.375001907348633
    5. '.y' → logprob: -20.250001907348633
    6. '```' → logprob: -20.500001907348633
    7. '0' → logprob: -20.750001907348633
    8. '1' → logprob: -21.375001907348633
    9. 'self' → logprob: -21.500001907348633
    10. '	x' → logprob: -21.625001907348633

Token 431: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10020720958709717
    2. '*' → logprob: -2.3502073287963867
    3. '*object' → logprob: -14.725207328796387
    4. '*out' → logprob: -17.10020637512207
    5. '**' → logprob: -17.35020637512207
    6. '*self' → logprob: -17.60020637512207
    7. ' ' → logprob: -17.72520637512207
    8. '*y' → logprob: -19.60020637512207
    9. '*this' → logprob: -20.60020637512207
    10. ' ' → logprob: -20.85020637512207

Token 432: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -2.339278580620885e-06
    2. ' other' → logprob: -13.000001907348633
    3. '(other' → logprob: -22.250001907348633
    4. '.other' → logprob: -22.750001907348633
    5. '
' → logprob: -24.250001907348633
    6. ' ' → logprob: -24.625001907348633
    7. '-other' → logprob: -24.875001907348633
    8. 'Other' → logprob: -24.875001907348633
    9. 'oth' → logprob: -25.250001907348633
    10. '   ' → logprob: -25.750001907348633

Token 433: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759868621826172
    2. '.y' → logprob: -0.8259868621826172
    3. ' y' → logprob: -10.700986862182617
    4. '.' → logprob: -11.200986862182617
    5. '	y' → logprob: -12.575986862182617
    6. '*y' → logprob: -12.950986862182617
    7. '.x' → logprob: -13.950986862182617
    8. ',y' → logprob: -14.075986862182617
    9. '```' → logprob: -14.200986862182617
    10. 'Y' → logprob: -14.450986862182617

Token 434: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0021882106084376574
    2. '-' → logprob: -6.127188205718994
    3. ' ' → logprob: -13.002188682556152
    4. ' ' → logprob: -14.752188682556152
    5. ' –' → logprob: -15.752188682556152
    6. ' -
' → logprob: -16.627187728881836
    7. '        ' → logprob: -17.127187728881836
    8. ' −' → logprob: -17.127187728881836
    9. '   ' → logprob: -17.252187728881836
    10. '       ' → logprob: -17.252187728881836

Token 435: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00489381980150938
    2. ' self' → logprob: -5.754893779754639
    3. 'other' → logprob: -6.379893779754639
    4. ' other' → logprob: -11.004894256591797
    5. '<|end|>' → logprob: -13.629894256591797
    6. '(self' → logprob: -14.629894256591797
    7. '	self' → logprob: -14.629894256591797
    8. '       ' → logprob: -14.754894256591797
    9. ' ' → logprob: -16.629894256591797
    10. '[self' → logprob: -16.754894256591797

Token 436: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4957720935344696
    2. '.y' → logprob: -0.995772123336792
    3. 'x' → logprob: -4.245771884918213
    4. 'other' → logprob: -5.495771884918213
    5. '.x' → logprob: -6.370771884918213
    6. '.' → logprob: -7.370771884918213
    7. '.other' → logprob: -7.745771884918213
    8. 'self' → logprob: -8.745772361755371
    9. ' y' → logprob: -10.245772361755371
    10. '1' → logprob: -11.245772361755371

Token 437: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.038074083626270294
    2. '*' → logprob: -3.288074016571045
    3. '<|end|>' → logprob: -10.663074493408203
    4. '*object' → logprob: -12.163074493408203
    5. '*out' → logprob: -12.788074493408203
    6. '.' → logprob: -15.163074493408203
    7. '*self' → logprob: -15.413074493408203
    8. ' ' → logprob: -15.913074493408203
    9. '<|end|>' → logprob: -15.913074493408203
    10. '[' → logprob: -16.163074493408203

Token 438: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -7.493430894101039e-05
    2. ' other' → logprob: -9.500075340270996
    3. '(other' → logprob: -17.37507438659668
    4. '.other' → logprob: -18.87507438659668
    5. 'Other' → logprob: -20.25007438659668
    6. '_other' → logprob: -21.25007438659668
    7. 'OTHER' → logprob: -23.12507438659668
    8. '-other' → logprob: -23.25007438659668
    9. 'othe' → logprob: -23.75007438659668
    10. ' ' → logprob: -24.12507438659668

Token 439: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.20143429934978485
    2. 'x' → logprob: -1.7014342546463013
    3. '.' → logprob: -11.076434135437012
    4. 'cross' → logprob: -13.201434135437012
    5. '	x' → logprob: -14.451434135437012
    6. ' x' → logprob: -14.451434135437012
    7. '.cross' → logprob: -14.701434135437012
    8. '{x' → logprob: -14.951434135437012
    9. '<x' → logprob: -15.201434135437012
    10. '<|end|>' → logprob: -15.201434135437012

Token 440: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28928864002227783
    2. 'def' → logprob: -1.4142886400222778
    3. '```' → logprob: -5.914288520812988
    4. '<|end|>' → logprob: -6.039288520812988
    5. ' def' → logprob: -7.164288520812988
    6. 'class' → logprob: -7.539288520812988
    7. ':' → logprob: -7.789288520812988
    8. '	def' → logprob: -8.289288520812988
    9. ')' → logprob: -8.539288520812988
    10. '    
' → logprob: -9.039288520812988

Token 442: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.017828432843089104
    2. '   ' → logprob: -4.392828464508057
    3. 'class' → logprob: -5.517828464508057
    4. ')' → logprob: -7.517828464508057
    5. ' def' → logprob: -8.392827987670898
    6. '<|end|>' → logprob: -8.767827987670898
    7. '#' → logprob: -9.392827987670898
    8. '```' → logprob: -9.517827987670898
    9. '@dat' → logprob: -10.517827987670898
    10. '	def' → logprob: -10.517827987670898

Token 443: ' is' (ID: 382)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.9918804168701172
    2. 'angle' → logprob: -1.4918804168701172
    3. 'distance' → logprob: -1.6168804168701172
    4. 'rot' → logprob: -2.866880416870117
    5. 'unit' → logprob: -3.741880416870117
    6. 'dist' → logprob: -3.741880416870117
    7. 'cc' → logprob: -3.741880416870117
    8. 'ort' → logprob: -3.866880416870117
    9. 'normalize' → logprob: -4.616880416870117
    10. 'polar' → logprob: -4.866880416870117

Token 444: '_' (ID: 62)
  Prédit: '_zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.30289819836616516
    2. '_on' → logprob: -1.9278981685638428
    3. '_parallel' → logprob: -3.1778981685638428
    4. '_' → logprob: -3.5528981685638428
    5. '_point' → logprob: -4.677898406982422
    6. '_vertical' → logprob: -4.927898406982422
    7. '0' → logprob: -4.927898406982422
    8. '_origin' → logprob: -4.927898406982422
    9. '_col' → logprob: -5.927898406982422
    10. 'zero' → logprob: -6.052898406982422

Token 445: 'orth' (ID: 2909)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -1.0677695274353027
    2. 'orth' → logprob: -1.1927695274353027
    3. 'zero' → logprob: -1.1927695274353027
    4. 'col' → logprob: -3.8177695274353027
    5. 'on' → logprob: -4.567769527435303
    6. 'vertical' → logprob: -5.317769527435303
    7. 'counter' → logprob: -5.567769527435303
    8. 'origin' → logprob: -6.692769527435303
    9. '0' → logprob: -6.942769527435303
    10. 'close' → logprob: -7.192769527435303

Token 446: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -0.0189542043954134
    2. '(Point' → logprob: -4.018954277038574
    3. 'og' → logprob: -7.643954277038574
    4. '(self' → logprob: -8.518954277038574
    5. '   ' → logprob: -10.893954277038574
    6. '```' → logprob: -11.018954277038574
    7. 'o' → logprob: -11.268954277038574
    8. '(' → logprob: -11.393954277038574
    9. 'Point' → logprob: -11.643954277038574
    10. 'agonal' → logprob: -11.768954277038574

Token 447: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0062586660496890545
    2. '(' → logprob: -5.131258487701416
    3. ' (' → logprob: -8.256258964538574
    4. 'to' → logprob: -10.381258964538574
    5. '_to' → logprob: -10.881258964538574
    6. '('' → logprob: -12.131258964538574
    7. 'To' → logprob: -12.381258964538574
    8. '(to' → logprob: -12.506258964538574
    9. '   ' → logprob: -13.256258964538574
    10. '(
' → logprob: -13.506258964538574

Token 448: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.047249022871255875
    2. '(' → logprob: -3.9222490787506104
    3. ',' → logprob: -4.172248840332031
    4. '(other' → logprob: -5.172248840332031
    5. ')' → logprob: -5.672248840332031
    6. ')(' → logprob: -7.297248840332031
    7. ' (' → logprob: -7.547248840332031
    8. '('' → logprob: -8.172248840332031
    9. '(
' → logprob: -10.047248840332031
    10. '   ' → logprob: -10.297248840332031

Token 449: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.5764245390892029
    2. ' other' → logprob: -0.8264245390892029
    3. 'self' → logprob: -7.826424598693848
    4. ' self' → logprob: -9.576424598693848
    5. 'Other' → logprob: -11.701424598693848
    6. '(other' → logprob: -11.951424598693848
    7. '_other' → logprob: -14.201424598693848
    8. ' ' → logprob: -14.701424598693848
    9. '.other' → logprob: -14.951424598693848
    10. '   ' → logprob: -15.826424598693848

Token 450: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8362381458282471
    2. ')' → logprob: -1.086238145828247
    3. ':' → logprob: -1.961238145828247
    4. '(self' → logprob: -2.586238145828247
    5. 'self' → logprob: -4.961237907409668
    6. '       ' → logprob: -5.711237907409668
    7. '   ' → logprob: -6.336237907409668
    8. '):' → logprob: -7.961237907409668
    9. ' self' → logprob: -8.836237907409668
    10. ' (' → logprob: -8.836237907409668

Token 451: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3135603368282318
    2. ' '' → logprob: -1.3135603666305542
    3. ')' → logprob: -8.438560485839844
    4. '   ' → logprob: -10.813560485839844
    5. '')' → logprob: -10.813560485839844
    6. ' ' → logprob: -11.063560485839844
    7. ' Point' → logprob: -12.188560485839844
    8. 'Point' → logprob: -12.563560485839844
    9. '  ' → logprob: -12.688560485839844
    10. '<Point' → logprob: -12.938560485839844

Token 452: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0001596771035110578
    2. ''' → logprob: -9.00015926361084
    3. ' Point' → logprob: -10.37515926361084
    4. '	Point' → logprob: -13.25015926361084
    5. '.Point' → logprob: -14.50015926361084
    6. ' ' → logprob: -14.50015926361084
    7. '(Point' → logprob: -14.75015926361084
    8. '<Point' → logprob: -14.75015926361084
    9. ')' → logprob: -15.37515926361084
    10. '_point' → logprob: -15.37515926361084

Token 453: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0024794621858745813
    2. ')' → logprob: -6.002479553222656
    3. ''' → logprob: -13.252479553222656
    4. '")' → logprob: -14.002479553222656
    5. ''):
' → logprob: -14.252479553222656
    6. ' ')' → logprob: -15.252479553222656
    7. '   ' → logprob: -16.252479553222656
    8. '`)' → logprob: -16.627479553222656
    9. '',' → logprob: -16.877479553222656
    10. '')
' → logprob: -17.252479553222656

Token 454: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.5531021952629089
    2. ')' → logprob: -1.5531022548675537
    3. ' ->' → logprob: -1.5531022548675537
    4. '   ' → logprob: -6.803102016448975
    5. ':' → logprob: -8.303102493286133
    6. ')->' → logprob: -8.553102493286133
    7. '       ' → logprob: -10.178102493286133
    8. '(' → logprob: -11.303102493286133
    9. '()' → logprob: -11.553102493286133
    10. 'self' → logprob: -12.053102493286133

Token 455: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0097690774127841
    2. ' bool' → logprob: -4.634768962860107
    3. 'float' → logprob: -11.759769439697266
    4. 'abs' → logprob: -13.009769439697266
    5. 'True' → logprob: -13.759769439697266
    6. '<bool' → logprob: -14.384769439697266
    7. '(bool' → logprob: -15.009769439697266
    8. ' ' → logprob: -15.009769439697266
    9. '	bool' → logprob: -15.634769439697266
    10. ''' → logprob: -15.884769439697266

Token 456: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03468254208564758
    2. '       ' → logprob: -4.159682750701904
    3. ':
' → logprob: -4.284682750701904
    4. '   ' → logprob: -5.659682750701904
    5. ')' → logprob: -8.034682273864746
    6. '):' → logprob: -8.284682273864746
    7. '():
' → logprob: -9.159682273864746
    8. '<|end|>' → logprob: -9.409682273864746
    9. '():' → logprob: -9.409682273864746
    10. ':return' → logprob: -9.534682273864746

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.097861148416996
    2. 'return' → logprob: -2.8478610515594482
    3. '   ' → logprob: -3.3478610515594482
    4. ' return' → logprob: -9.597861289978027
    5. '	return' → logprob: -11.347861289978027
    6. 'abs' → logprob: -11.597861289978027
    7. '	' → logprob: -12.472861289978027
    8. '```' → logprob: -13.222861289978027
    9. '	   ' → logprob: -14.347861289978027
    10. '           ' → logprob: -14.472861289978027

Token 458: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0033315911423414946
    2. '   ' → logprob: -6.503331661224365
    3. 'abs' → logprob: -6.503331661224365
    4. '       ' → logprob: -8.503331184387207
    5. ' return' → logprob: -9.253331184387207
    6. 'float' → logprob: -10.503331184387207
    7. '	return' → logprob: -13.503331184387207
    8. '           ' → logprob: -14.378331184387207
    9. '
' → logprob: -15.128331184387207
    10. '  ' → logprob: -15.503331184387207

Token 459: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.3878341317176819
    2. 'abs' → logprob: -1.137834072113037
    3. ' float' → logprob: -7.262834072113037
    4. ' abs' → logprob: -8.387834548950195
    5. 'self' → logprob: -10.637834548950195
    6. '   ' → logprob: -12.262834548950195
    7. 'fabs' → logprob: -13.262834548950195
    8. ' ' → logprob: -13.387834548950195
    9. '  ' → logprob: -14.137834548950195
    10. 'bool' → logprob: -15.137834548950195

Token 460: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -3.292907877039397e-06
    2. 'equal' → logprob: -13.00000286102295
    3. '_abs' → logprob: -14.00000286102295
    4. 'abs' → logprob: -16.625003814697266
    5. '_absolute' → logprob: -18.125003814697266
    6. 'Equal' → logprob: -18.500003814697266
    7. '_exact' → logprob: -18.500003814697266
    8. '(abs' → logprob: -19.125003814697266
    9. '_EQUAL' → logprob: -19.375003814697266
    10. '_' → logprob: -19.500003814697266

Token 461: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2200749754119897e-06
    2. 'self' → logprob: -13.375001907348633
    3. '(' → logprob: -14.750001907348633
    4. '(this' → logprob: -16.000001907348633
    5. '(
' → logprob: -17.250001907348633
    6. '=self' → logprob: -19.250001907348633
    7. '	self' → logprob: -19.500001907348633
    8. ' (' → logprob: -19.625001907348633
    9. '0' → logprob: -20.250001907348633
    10. '[self' → logprob: -20.500001907348633

Token 462: '.dot' (ID: 52692)
  Prédit: '.dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dot' → logprob: -0.6445826888084412
    2. '(self' → logprob: -1.394582748413086
    3. '.' → logprob: -1.644582748413086
    4. 'self' → logprob: -3.519582748413086
    5. 'dot' → logprob: -6.269582748413086
    6. '.self' → logprob: -7.019582748413086
    7. '().' → logprob: -8.019582748413086
    8. '(' → logprob: -8.644582748413086
    9. '0' → logprob: -8.769582748413086
    10. '_dot' → logprob: -9.144582748413086

Token 463: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -7.088138227118179e-05
    2. 'other' → logprob: -9.625070571899414
    3. '(' → logprob: -12.875070571899414
    4. ' other' → logprob: -13.250070571899414
    5. ' (' → logprob: -15.375070571899414
    6. '(
' → logprob: -15.875070571899414
    7. '(self' → logprob: -17.625070571899414
    8. '(next' → logprob: -18.875070571899414
    9. 'Other' → logprob: -19.000070571899414
    10. ')' → logprob: -19.000070571899414

Token 464: '),' (ID: 936)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.18044157326221466
    2. '(' → logprob: -1.9304416179656982
    3. ',' → logprob: -4.305441379547119
    4. '()),' → logprob: -6.180441379547119
    5. '(other' → logprob: -6.805441379547119
    6. ' (' → logprob: -6.930441379547119
    7. '()' → logprob: -6.930441379547119
    8. '),' → logprob: -7.680441379547119
    9. '())' → logprob: -8.555441856384277
    10. ' ,' → logprob: -8.680441856384277

Token 465: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -21.250001907348633
    4. '۰' → logprob: -22.875001907348633
    5. '０' → logprob: -23.875001907348633
    6. ')' → logprob: -24.000001907348633
    7. '00' → logprob: -24.375001907348633
    8. '  ' → logprob: -24.625001907348633
    9. ' ' → logprob: -25.625001907348633
    10. '000' → logprob: -26.000001907348633

Token 466: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -21.625
    4. '00' → logprob: -22.75
    5. ')' → logprob: -23.0
    6. '۰' → logprob: -23.25
    7. '０' → logprob: -24.125
    8. '  ' → logprob: -25.125
    9. '```' → logprob: -25.5
    10. '000' → logprob: -25.625

Token 467: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004633757285773754
    2. '.' → logprob: -5.379633903503418
    3. '0' → logprob: -12.129633903503418
    4. ' )' → logprob: -12.379633903503418
    5. '.)' → logprob: -13.379633903503418
    6. ')
' → logprob: -14.379633903503418
    7. '))' → logprob: -14.629633903503418
    8. '   ' → logprob: -15.129633903503418
    9. '())' → logprob: -15.379633903503418
    10. '}' → logprob: -15.754633903503418

Token 468: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ')' → logprob: -12.87500286102295
    3. '```' → logprob: -16.875001907348633
    4. ' ' → logprob: -17.250001907348633
    5. '   ' → logprob: -18.875001907348633
    6. '00' → logprob: -19.000001907348633
    7. 'zero' → logprob: -19.000001907348633
    8. '1' → logprob: -19.500001907348633
    9. '000' → logprob: -19.750001907348633
    10. '5' → logprob: -20.750001907348633

Token 469: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -13.125003814697266
    3. ' )' → logprob: -13.500003814697266
    4. '())' → logprob: -16.875003814697266
    5. ')return' → logprob: -17.000003814697266
    6. ')

' → logprob: -17.000003814697266
    7. '   ' → logprob: -17.000003814697266
    8. '<|end|>' → logprob: -17.125003814697266
    9. '),' → logprob: -17.750003814697266
    10. '))' → logprob: -18.000003814697266

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002417511073872447
    2. 'def' → logprob: -6.12741756439209
    3. ' def' → logprob: -8.87741756439209
    4. '```' → logprob: -9.87741756439209
    5. '<|end|>' → logprob: -11.00241756439209
    6. '       ' → logprob: -11.50241756439209
    7. ')' → logprob: -12.37741756439209
    8. ' ' → logprob: -12.37741756439209
    9. '  ' → logprob: -13.25241756439209
    10. '    ' → logprob: -13.62741756439209

Token 471: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005587508203461766
    2. '   ' → logprob: -8.125558853149414
    3. ' def' → logprob: -8.250558853149414
    4. '	def' → logprob: -13.625558853149414
    5. '       ' → logprob: -16.250558853149414
    6. '```' → logprob: -16.500558853149414
    7. '    
' → logprob: -16.750558853149414
    8. '
' → logprob: -17.000558853149414
    9. ' ' → logprob: -17.125558853149414
    10. ')' → logprob: -17.625558853149414

Token 472: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.652451464906335e-05
    2. ' is' → logprob: -11.500016212463379
    3. 'cross' → logprob: -13.875016212463379
    4. '__' → logprob: -14.125016212463379
    5. 'angle' → logprob: -14.250016212463379
    6. 'abs' → logprob: -14.500016212463379
    7. 'unit' → logprob: -14.625016212463379
    8. 'norm' → logprob: -14.750016212463379
    9. 'proj' → logprob: -14.875016212463379
    10. 'project' → logprob: -14.875016212463379

Token 473: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.0006211769068613648
    2. '_' → logprob: -7.875621318817139
    3. 'parallel' → logprob: -9.00062084197998
    4. '_par' → logprob: -9.87562084197998
    5. '_unit' → logprob: -10.62562084197998
    6. '   ' → logprob: -12.00062084197998
    7. '_ant' → logprob: -12.00062084197998
    8. '_op' → logprob: -12.37562084197998
    9. '_col' → logprob: -12.37562084197998
    10. ' parallel' → logprob: -12.50062084197998

Token 474: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.896309739408025e-07
    2. ' (' → logprob: -14.500000953674316
    3. '(' → logprob: -15.375000953674316
    4. 'self' → logprob: -17.125
    5. '(s' → logprob: -18.5
    6. '   ' → logprob: -18.875
    7. '(this' → logprob: -19.375
    8. ' ' → logprob: -19.5
    9. '       ' → logprob: -19.875
    10. ' self' → logprob: -20.5

Token 475: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.980854959692806e-05
    2. ')' → logprob: -10.250069618225098
    3. '(' → logprob: -11.000069618225098
    4. ',' → logprob: -12.000069618225098
    5. ' (' → logprob: -12.625069618225098
    6. 'self' → logprob: -13.125069618225098
    7. ')(' → logprob: -13.125069618225098
    8. '(other' → logprob: -13.625069618225098
    9. '       ' → logprob: -13.750069618225098
    10. '   ' → logprob: -14.250069618225098

Token 476: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.07900766283273697
    2. ' other' → logprob: -2.579007625579834
    3. 'self' → logprob: -9.079008102416992
    4. ' self' → logprob: -13.329008102416992
    5. 'Other' → logprob: -13.579008102416992
    6. '(other' → logprob: -14.079008102416992
    7. '.other' → logprob: -16.204008102416992
    8. '_other' → logprob: -16.704008102416992
    9. '其他' → logprob: -20.204008102416992
    10. '-other' → logprob: -20.579008102416992

Token 477: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3738405704498291
    2. ':' → logprob: -1.623840570449829
    3. ',' → logprob: -2.748840570449829
    4. '(self' → logprob: -3.498840570449829
    5. ''' → logprob: -4.99884033203125
    6. '(' → logprob: -5.87384033203125
    7. '):' → logprob: -5.87384033203125
    8. '   ' → logprob: -6.12384033203125
    9. '('' → logprob: -6.24884033203125
    10. 'self' → logprob: -7.24884033203125

Token 478: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0013327404158189893
    2. ' '' → logprob: -6.626332759857178
    3. ' ' → logprob: -12.62633228302002
    4. ')' → logprob: -13.87633228302002
    5. '   ' → logprob: -14.62633228302002
    6. '(Point' → logprob: -14.75133228302002
    7. 'Point' → logprob: -15.25133228302002
    8. '<Point' → logprob: -15.37633228302002
    9. '  ' → logprob: -15.62633228302002
    10. '"' → logprob: -15.87633228302002

Token 479: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0001029471677611582
    2. ''' → logprob: -9.250102996826172
    3. ' Point' → logprob: -12.000102996826172
    4. '(Point' → logprob: -15.375102996826172
    5. '	Point' → logprob: -15.500102996826172
    6. '.Point' → logprob: -15.875102996826172
    7. '<Point' → logprob: -16.625102996826172
    8. '_point' → logprob: -17.125102996826172
    9. '_Point' → logprob: -17.375102996826172
    10. ''s' → logprob: -17.625102996826172

Token 480: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07889430224895477
    2. '')' → logprob: -2.5788943767547607
    3. '")' → logprob: -13.45389461517334
    4. ')'' → logprob: -13.70389461517334
    5. '   ' → logprob: -14.57889461517334
    6. ''' → logprob: -14.82889461517334
    7. '`)' → logprob: -14.95389461517334
    8. '(self' → logprob: -15.45389461517334
    9. 'self' → logprob: -15.57889461517334
    10. ' ')' → logprob: -15.95389461517334

Token 481: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1439054012298584
    2. ' ->' → logprob: -2.6439054012298584
    3. '->' → logprob: -2.7689054012298584
    4. '   ' → logprob: -9.643905639648438
    5. ':' → logprob: -9.893905639648438
    6. ')->' → logprob: -10.018905639648438
    7. '>' → logprob: -11.268905639648438
    8. ' ' → logprob: -11.393905639648438
    9. ' )' → logprob: -11.768905639648438
    10. '(self' → logprob: -11.768905639648438

Token 482: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0028829758521169424
    2. ' bool' → logprob: -5.877882957458496
    3. 'float' → logprob: -9.502882957458496
    4. 'return' → logprob: -13.752882957458496
    5. '(bool' → logprob: -14.377882957458496
    6. 'True' → logprob: -15.002882957458496
    7. '<bool' → logprob: -15.127882957458496
    8. 'def' → logprob: -15.252882957458496
    9. ' ' → logprob: -15.627882957458496
    10. 'lambda' → logprob: -15.877882957458496

Token 483: ':
' (ID: 734)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12174788117408752
    2. '       ' → logprob: -2.8717479705810547
    3. '->' → logprob: -3.9967479705810547
    4. '   ' → logprob: -4.246747970581055
    5. ':' → logprob: -4.371747970581055
    6. ' ->' → logprob: -4.996747970581055
    7. '(self' → logprob: -5.246747970581055
    8. '(' → logprob: -8.246747970581055
    9. ')->' → logprob: -8.746747970581055
    10. '        ' → logprob: -9.496747970581055

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11204300820827484
    2. 'return' → logprob: -2.3620429039001465
    3. '   ' → logprob: -4.4870429039001465
    4. ' return' → logprob: -7.6120429039001465
    5. '	return' → logprob: -11.362043380737305
    6. '```' → logprob: -12.612043380737305
    7. '	' → logprob: -13.987043380737305
    8. '{return' → logprob: -14.612043380737305
    9. '   ' → logprob: -14.862043380737305
    10. 'abs' → logprob: -15.112043380737305

Token 485: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -4.4894986785948277e-05
    2. ' return' → logprob: -10.500044822692871
    3. '   ' → logprob: -11.500044822692871
    4. '       ' → logprob: -11.875044822692871
    5. 'abs' → logprob: -16.125045776367188
    6. '	return' → logprob: -16.500045776367188
    7. '```' → logprob: -17.000045776367188
    8. '           ' → logprob: -17.750045776367188
    9. ' ' → logprob: -18.500045776367188
    10. 'def' → logprob: -19.125045776367188

Token 486: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00013083349040243775
    2. 'abs' → logprob: -9.125130653381348
    3. ' float' → logprob: -10.750130653381348
    4. 'flo' → logprob: -15.375130653381348
    5. 'fabs' → logprob: -16.125131607055664
    6. 'self' → logprob: -18.125131607055664
    7. '   ' → logprob: -18.750131607055664
    8. '(float' → logprob: -19.000131607055664
    9. ' abs' → logprob: -19.000131607055664
    10. '	float' → logprob: -19.000131607055664

Token 487: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.0007130279554985464
    2. 'equal' → logprob: -7.250712871551514
    3. 'abs' → logprob: -13.000713348388672
    4. 'Equal' → logprob: -14.250713348388672
    5. '_EQUAL' → logprob: -16.250713348388672
    6. ' equal' → logprob: -17.125713348388672
    7. '_abs' → logprob: -17.750713348388672
    8. 'self' → logprob: -18.875713348388672
    9. '_absolute' → logprob: -19.000713348388672
    10. '_exact' → logprob: -19.125713348388672

Token 488: '(self' (ID: 2402)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.10392727702856064
    2. '(self' → logprob: -2.3539273738861084
    3. 'abs' → logprob: -5.603927135467529
    4. 'self' → logprob: -10.478927612304688
    5. ' abs' → logprob: -13.228927612304688
    6. '(' → logprob: -15.103927612304688
    7. '_abs' → logprob: -16.978927612304688
    8. 'Abs' → logprob: -17.228927612304688
    9. '(
' → logprob: -17.478927612304688
    10. '.abs' → logprob: -17.728927612304688

Token 489: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -5.0020742492051795e-05
    2. '.abs' → logprob: -10.000049591064453
    3. 'cross' → logprob: -13.250049591064453
    4. '.dot' → logprob: -13.375049591064453
    5. '.' → logprob: -14.500049591064453
    6. '.Cross' → logprob: -15.375049591064453
    7. ' .' → logprob: -15.750049591064453
    8. 'abs' → logprob: -16.500049591064453
    9. ' cross' → logprob: -16.625049591064453
    10. '.x' → logprob: -16.625049591064453

Token 490: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -6.2729995988775045e-06
    2. 'other' → logprob: -12.000006675720215
    3. ' other' → logprob: -16.5000057220459
    4. '(' → logprob: -17.3750057220459
    5. ')' → logprob: -19.2500057220459
    6. 'Other' → logprob: -20.2500057220459
    7. '(object' → logprob: -20.6250057220459
    8. '.other' → logprob: -20.6250057220459
    9. '(ob' → logprob: -20.7500057220459
    10. '(self' → logprob: -21.6250057220459

Token 491: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0643283799290657
    2. '),' → logprob: -2.81432843208313
    3. '(),' → logprob: -6.064328193664551
    4. ' ,' → logprob: -11.06432819366455
    5. '(other' → logprob: -11.68932819366455
    6. '   ' → logprob: -12.68932819366455
    7. ')' → logprob: -12.81432819366455
    8. '()),' → logprob: -14.06432819366455
    9. 'other' → logprob: -14.43932819366455
    10. ' ' → logprob: -14.93932819366455

Token 492: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015040287980809808
    2. ' ' → logprob: -6.501503944396973
    3. '   ' → logprob: -13.376503944396973
    4. '  ' → logprob: -16.37650489807129
    5. '```' → logprob: -18.00150489807129
    6. '       ' → logprob: -18.56400489807129
    7. ' ' → logprob: -18.56400489807129
    8. '    ' → logprob: -18.68900489807129
    9. ')' → logprob: -18.93900489807129
    10. '     ' → logprob: -19.18900489807129

Token 493: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.375036239624023
    4. '  ' → logprob: -19.000036239624023
    5. '```' → logprob: -19.750036239624023
    6. '00' → logprob: -19.875036239624023
    7. '۰' → logprob: -20.250036239624023
    8. '000' → logprob: -20.750036239624023
    9. '０' → logprob: -21.187536239624023
    10. '.' → logprob: -21.375036239624023

Token 494: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00010103991371579468
    2. ')' → logprob: -9.375101089477539
    3. '0' → logprob: -11.125101089477539
    4. '.)' → logprob: -13.750101089477539
    5. ' ' → logprob: -16.00010108947754
    6. '   ' → logprob: -17.25010108947754
    7. '‌.' → logprob: -17.75010108947754
    8. '7' → logprob: -17.87510108947754
    9. ' .' → logprob: -18.00010108947754
    10. '000' → logprob: -18.00010108947754

Token 495: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ')' → logprob: -17.25
    3. ' ' → logprob: -19.5
    4. '   ' → logprob: -19.5
    5. '```' → logprob: -19.625
    6. '       ' → logprob: -20.5
    7. '00' → logprob: -20.625
    8. '000' → logprob: -21.0
    9. '۰' → logprob: -23.0
    10. '.' → logprob: -23.0

Token 496: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3544423381972592e-05
    2. ')
' → logprob: -11.25001335144043
    3. '       ' → logprob: -15.50001335144043
    4. ' )' → logprob: -16.12501335144043
    5. ')return' → logprob: -16.62501335144043
    6. '   ' → logprob: -16.87501335144043
    7. ')

' → logprob: -17.75001335144043
    8. '<|end|>' → logprob: -17.75001335144043
    9. '())' → logprob: -17.87501335144043
    10. '))' → logprob: -17.87501335144043

Token 497: 'Vector' (ID: 7580)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.91899174451828
    2. '   ' → logprob: -1.1689918041229248
    3. '<|end|>' → logprob: -1.5439918041229248
    4. ')' → logprob: -3.668991804122925
    5. '#' → logprob: -3.793991804122925
    6. '```' → logprob: -4.293991565704346
    7. 'class' → logprob: -5.168991565704346
    8. '(' → logprob: -5.918991565704346
    9. '
' → logprob: -7.043991565704346
    10. ':' → logprob: -7.543991565704346

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08915103226900101
    2. '=' → logprob: -2.46415114402771
    3. '(Point' → logprob: -9.214151382446289
    4. ':' → logprob: -9.839151382446289
    5. ')' → logprob: -11.089151382446289
    6. '(' → logprob: -11.339151382446289
    7. '(Vector' → logprob: -11.964151382446289
    8. '<|end|>' → logprob: -12.089151382446289
    9. ' ' → logprob: -12.464151382446289
    10. '.' → logprob: -12.589151382446289

Token 499: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.00016146517009474337
    2. 'List' → logprob: -8.750161170959473
    3. 'Vector' → logprob: -13.125161170959473
    4. ' Point' → logprob: -13.875161170959473
    5. '	Point' → logprob: -17.50016212463379
    6. '   ' → logprob: -19.00016212463379
    7. 'Points' → logprob: -19.25016212463379
    8. '(Point' → logprob: -19.37516212463379
    9. ' ' → logprob: -21.25016212463379
    10. '<Point' → logprob: -21.37516212463379

Token 500: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4764561057090759
    2. 'def' → logprob: -0.9764561057090759
    3. '<|end|>' → logprob: -6.726456165313721
    4. 'from' → logprob: -7.476456165313721
    5. '#' → logprob: -7.601456165313721
    6. '```' → logprob: -10.726455688476562
    7. '<|end|>' → logprob: -10.726455688476562
    8. '
' → logprob: -11.101455688476562
    9. '@dat' → logprob: -11.101455688476562
    10. ' class' → logprob: -11.726455688476562

Token 502: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.3717236816883087
    2. 'Line' → logprob: -1.9967236518859863
    3. ' Segment' → logprob: -2.7467236518859863
    4. 'Polygon' → logprob: -2.9967236518859863
    5. ' Line' → logprob: -3.7467236518859863
    6. ' Polygon' → logprob: -4.496723651885986
    7. 'Conv' → logprob: -4.746723651885986
    8. 'Geometry' → logprob: -4.996723651885986
    9. 'Circle' → logprob: -5.121723651885986
    10. 'Vector' → logprob: -6.871723651885986

Token 503: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.27099974633893e-05
    2. '():' → logprob: -12.125012397766113
    3. ':

' → logprob: -13.125012397766113
    4. ':
' → logprob: -13.250012397766113
    5. '):' → logprob: -13.625012397766113
    6. ' :' → logprob: -14.250012397766113
    7. ':def' → logprob: -14.875012397766113
    8. '(object' → logprob: -15.000012397766113
    9. '>:' → logprob: -15.125012397766113
    10. ':**' → logprob: -15.625012397766113

Token 504: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35748490691185
    2. 'class' → logprob: -1.6074849367141724
    3. 'def' → logprob: -2.482484817504883
    4. '
' → logprob: -4.232484817504883
    5. '    
' → logprob: -6.232484817504883
    6. ' def' → logprob: -9.857484817504883
    7. '  
' → logprob: -10.107484817504883
    8. ' 
' → logprob: -10.857484817504883
    9. '	def' → logprob: -11.107484817504883
    10. '

' → logprob: -11.982484817504883

Token 505: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000111768240458332
    2. ' def' → logprob: -9.12511157989502
    3. '__' → logprob: -13.50011157989502
    4. 'class' → logprob: -14.37511157989502
    5. '   ' → logprob: -14.50011157989502
    6. '	def' → logprob: -16.250112533569336
    7. ':def' → logprob: -16.750112533569336
    8. 'de' → logprob: -17.125112533569336
    9. '```' → logprob: -17.500112533569336
    10. 'from' → logprob: -17.875112533569336

Token 506: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06635373830795288
    2. 'init' → logprob: -2.8163537979125977
    3. '_init' → logprob: -5.566353797912598
    4. ' __' → logprob: -7.566353797912598
    5. 'def' → logprob: -10.566353797912598
    6. '```' → logprob: -12.066353797912598
    7. '___' → logprob: -13.316353797912598
    8. ' init' → logprob: -14.941353797912598
    9. '.__' → logprob: -15.191353797912598
    10. '**' → logprob: -15.941353797912598

Token 507: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. '_init' → logprob: -16.375
    3. 'def' → logprob: -16.875
    4. '__' → logprob: -17.875
    5. ' init' → logprob: -20.25
    6. '```' → logprob: -20.25
    7. '(init' → logprob: -20.375
    8. 'ini' → logprob: -21.625
    9. '.init' → logprob: -22.0
    10. 'inite' → logprob: -22.25

Token 508: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005723405163735151
    2. '__(' → logprob: -5.255723476409912
    3. '(' → logprob: -7.755723476409912
    4. 'self' → logprob: -10.380722999572754
    5. ' (' → logprob: -11.130722999572754
    6. '```' → logprob: -12.505722999572754
    7. '_(' → logprob: -12.755722999572754
    8. 'def' → logprob: -13.005722999572754
    9. '   ' → logprob: -13.880722999572754
    10. ')(' → logprob: -14.005722999572754

Token 509: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.226628895296017e-06
    2. ' self' → logprob: -11.875007629394531
    3. ',' → logprob: -15.875007629394531
    4. '   ' → logprob: -17.00000762939453
    5. 'def' → logprob: -17.62500762939453
    6. '0' → logprob: -18.00000762939453
    7. 'elf' → logprob: -18.37500762939453
    8. '
' → logprob: -18.50000762939453
    9. '(self' → logprob: -18.87500762939453
    10. ')' → logprob: -20.00000762939453

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027060916647315025
    2. 'self' → logprob: -3.6520609855651855
    3. '(self' → logprob: -7.4020609855651855
    4. ' self' → logprob: -9.652060508728027
    5. ' ,' → logprob: -10.527060508728027
    6. ',self' → logprob: -10.902060508728027
    7. '   ' → logprob: -11.277060508728027
    8. '       ' → logprob: -11.402060508728027
    9. ' (' → logprob: -11.777060508728027
    10. ',
' → logprob: -12.402060508728027

Token 511: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0012671363074332476
    2. 'self' → logprob: -7.376266956329346
    3. 'start' → logprob: -8.251267433166504
    4. ' p' → logprob: -8.376267433166504
    5. 'a' → logprob: -9.376267433166504
    6. 'pos' → logprob: -10.376267433166504
    7. 's' → logprob: -11.001267433166504
    8. 'left' → logprob: -12.126267433166504
    9. '   ' → logprob: -12.626267433166504
    10. 'from' → logprob: -12.751267433166504

Token 512: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013883042149245739
    2. '1' → logprob: -4.388883113861084
    3. ',' → logprob: -7.513883113861084
    4. ')' → logprob: -8.013882637023926
    5. '=None' → logprob: -9.138882637023926
    6. '0' → logprob: -9.388882637023926
    7. 'A' → logprob: -10.013882637023926
    8. 'oints' → logprob: -10.138882637023926
    9. 'a' → logprob: -10.263882637023926
    10. 'oint' → logprob: -10.388882637023926

Token 513: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02631865069270134
    2. ',' → logprob: -3.6513185501098633
    3. '=' → logprob: -11.276318550109863
    4. ':,' → logprob: -13.276318550109863
    5. ' :' → logprob: -13.401318550109863
    6. ' ,' → logprob: -13.776318550109863
    7. '   ' → logprob: -14.651318550109863
    8. '=None' → logprob: -15.026318550109863
    9. ' =' → logprob: -16.40131950378418
    10. '  ' → logprob: -16.40131950378418

Token 514: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -2.2127087504486553e-05
    2. 'Vector' → logprob: -11.000021934509277
    3. ' Point' → logprob: -12.250021934509277
    4. '	Point' → logprob: -14.625021934509277
    5. ''' → logprob: -16.500022888183594
    6. '<Point' → logprob: -18.625022888183594
    7. '_Point' → logprob: -19.375022888183594
    8. '   ' → logprob: -19.500022888183594
    9. '(Point' → logprob: -19.500022888183594
    10. '_point' → logprob: -20.125022888183594

Token 515: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -6.153795766294934e-06
    2. ',p' → logprob: -12.375005722045898
    3. ' ,' → logprob: -13.375005722045898
    4. 'p' → logprob: -16.3750057220459
    5. '   ' → logprob: -16.8750057220459
    6. ' ' → logprob: -17.1250057220459
    7. ')' → logprob: -17.7500057220459
    8. '‌,' → logprob: -18.0000057220459
    9. ',
' → logprob: -18.2500057220459
    10. ' p' → logprob: -18.5000057220459

Token 516: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.25195586681365967
    2. 'Point' → logprob: -1.5019558668136597
    3. ' Point' → logprob: -11.25195598602295
    4. ' None' → logprob: -11.37695598602295
    5. '0' → logprob: -13.12695598602295
    6. '(Point' → logprob: -15.75195598602295
    7. '   ' → logprob: -16.876955032348633
    8. 'Points' → logprob: -18.001955032348633
    9. '	Point' → logprob: -18.251955032348633
    10. '(None' → logprob: -18.751955032348633

Token 517: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010187433508690447
    2. ',p' → logprob: -9.375102043151855
    3. ' ,' → logprob: -11.000102043151855
    4. 'p' → logprob: -16.25010108947754
    5. '   ' → logprob: -16.50010108947754
    6. ' p' → logprob: -17.12510108947754
    7. ',
' → logprob: -17.75010108947754
    8. '‌,' → logprob: -18.00010108947754
    9. ' ' → logprob: -18.87510108947754
    10. ')' → logprob: -20.00010108947754

Token 518: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.38690319657325745
    2. 'p' → logprob: -1.136903166770935
    3. 'None' → logprob: -11.136902809143066
    4. '   ' → logprob: -12.011902809143066
    5. '	p' → logprob: -12.386902809143066
    6. ' None' → logprob: -12.761902809143066
    7. '    ' → logprob: -13.386902809143066
    8. ' ' → logprob: -13.636902809143066
    9. ' ' → logprob: -14.511902809143066
    10. '<p' → logprob: -15.011902809143066

Token 519: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003141474211588502
    2. '1' → logprob: -6.128141403198242
    3. 'oint' → logprob: -7.003141403198242
    4. 'oints' → logprob: -10.253141403198242
    5. '```' → logprob: -12.628141403198242
    6. 'oin' → logprob: -13.503141403198242
    7. '0' → logprob: -13.628141403198242
    8. 'Point' → logprob: -14.128141403198242
    9. 'ointe' → logprob: -14.253141403198242
    10. 'ont' → logprob: -14.253141403198242

Token 520: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.165027217415627e-05
    2. '=None' → logprob: -11.875021934509277
    3. '=' → logprob: -12.000021934509277
    4. ' :' → logprob: -12.250021934509277
    5. ')' → logprob: -12.750021934509277
    6. ' =' → logprob: -15.625021934509277
    7. '):' → logprob: -15.625021934509277
    8. ',' → logprob: -15.875021934509277
    9. '<|end|>' → logprob: -16.00002098083496
    10. '   ' → logprob: -16.25002098083496

Token 521: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.005537419579923153
    2. ' Point' → logprob: -5.255537509918213
    3. 'None' → logprob: -8.130537033081055
    4. ' None' → logprob: -12.130537033081055
    5. '	Point' → logprob: -13.380537033081055
    6. '.Point' → logprob: -14.380537033081055
    7. '<Point' → logprob: -14.380537033081055
    8. '_Point' → logprob: -14.755537033081055
    9. '_point' → logprob: -15.505537033081055
    10. '(Point' → logprob: -16.005537033081055

Token 522: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0000568628311157
    2. '=None' → logprob: -1.1250568628311157
    3. '=' → logprob: -1.6250568628311157
    4. ' =' → logprob: -2.250056743621826
    5. 'None' → logprob: -5.625056743621826
    6. '(None' → logprob: -7.250056743621826
    7. '):' → logprob: -7.875056743621826
    8. ' None' → logprob: -8.125057220458984
    9. ':' → logprob: -9.375057220458984
    10. ' ' → logprob: -10.625057220458984

Token 523: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004307884373702109
    2. ' None' → logprob: -7.750430583953857
    3. '(None' → logprob: -17.000431060791016
    4. '   ' → logprob: -17.250431060791016
    5. '=None' → logprob: -17.625431060791016
    6. 'none' → logprob: -17.750431060791016
    7. '0' → logprob: -18.250431060791016
    8. 'Point' → logprob: -18.750431060791016
    9. ',None' → logprob: -19.000431060791016
    10. '_None' → logprob: -19.250431060791016

Token 524: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0621732659637928
    2. '):' → logprob: -2.812173366546631
    3. '):
' → logprob: -8.562172889709473
    4. ' )' → logprob: -12.312172889709473
    5. '   ' → logprob: -12.437172889709473
    6. ':' → logprob: -12.812172889709473
    7. ',' → logprob: -13.437172889709473
    8. ' ' → logprob: -14.562172889709473
    9. '):
' → logprob: -14.937172889709473
    10. ' ):' → logprob: -15.312172889709473

Token 525: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012448744382709265
    2. ':
' → logprob: -6.751245021820068
    3. '):' → logprob: -11.00124454498291
    4. ')' → logprob: -11.12624454498291
    5. '->' → logprob: -11.37624454498291
    6. ',' → logprob: -11.50124454498291
    7. ' ->' → logprob: -11.87624454498291
    8. '   ' → logprob: -12.37624454498291
    9. '):
' → logprob: -12.62624454498291
    10. '       ' → logprob: -12.75124454498291

Token 526: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01814994215965271
    2. ' None' → logprob: -4.0181498527526855
    3. '_None' → logprob: -19.518150329589844
    4. 'No' → logprob: -19.643150329589844
    5. 'none' → logprob: -20.143150329589844
    6. '(None' → logprob: -21.393150329589844
    7. '=None' → logprob: -21.518150329589844
    8. 'Non' → logprob: -21.893150329589844
    9. ' ' → logprob: -21.893150329589844
    10. 'void' → logprob: -22.018150329589844

Token 527: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015554478159174323
    2. ':
' → logprob: -6.501555442810059
    3. '       ' → logprob: -10.876555442810059
    4. '):' → logprob: -11.001555442810059
    5. ',' → logprob: -12.251555442810059
    6. '   ' → logprob: -12.626555442810059
    7. '):
' → logprob: -12.626555442810059
    8. '<|end|>' → logprob: -13.126555442810059
    9. ':p' → logprob: -14.251555442810059
    10. '():' → logprob: -14.501555442810059

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.4285862057004124e-05
    2. '   ' → logprob: -10.37503433227539
    3. ' if' → logprob: -13.50003433227539
    4. 'if' → logprob: -13.87503433227539
    5. '	' → logprob: -14.87503433227539
    6. '	   ' → logprob: -16.25003433227539
    7. 'self' → logprob: -16.75003433227539
    8. ' ' → logprob: -17.62503433227539
    9. '        
' → logprob: -17.75003433227539
    10. '	if' → logprob: -17.75003433227539

Token 529: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04949948936700821
    2. 'if' → logprob: -3.04949951171875
    3. '       ' → logprob: -7.04949951171875
    4. ' self' → logprob: -10.29949951171875
    5. ' if' → logprob: -11.54949951171875
    6. 'super' → logprob: -15.54949951171875
    7. '   ' → logprob: -15.79949951171875
    8. '	self' → logprob: -16.04949951171875
    9. '(self' → logprob: -18.42449951171875
    10. 'If' → logprob: -18.67449951171875

Token 530: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.038658592849969864
    2. '.' → logprob: -3.288658618927002
    3. 'p' → logprob: -7.788658618927002
    4. '   ' → logprob: -10.038658142089844
    5. ':' → logprob: -10.163658142089844
    6. '       ' → logprob: -10.788658142089844
    7. 'def' → logprob: -10.913658142089844
    8. '=' → logprob: -11.163658142089844
    9. ' .' → logprob: -11.163658142089844
    10. ' =' → logprob: -11.788658142089844

Token 531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. 'oints' → logprob: -12.000009536743164
    3. '_' → logprob: -13.750009536743164
    4. 'oint' → logprob: -14.000009536743164
    5. 'r' → logprob: -14.375009536743164
    6. '   ' → logprob: -15.125009536743164
    7. 's' → logprob: -16.375009536743164
    8. 'def' → logprob: -16.375009536743164
    9. 'p' → logprob: -16.500009536743164
    10. 'a' → logprob: -16.625009536743164

Token 532: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2525515854358673
    2. ' =' → logprob: -1.502551555633545
    3. ',' → logprob: -7.502551555633545
    4. '=p' → logprob: -10.002552032470703
    5. ' ' → logprob: -12.377552032470703
    6. ':' → logprob: -12.377552032470703
    7. ' p' → logprob: -13.127552032470703
    8. ' if' → logprob: -13.252552032470703
    9. '=None' → logprob: -13.377552032470703
    10. 'p' → logprob: -13.377552032470703

Token 533: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.048605188727378845
    2. ' Point' → logprob: -3.04860520362854
    3. 'p' → logprob: -11.423604965209961
    4. ' p' → logprob: -12.423604965209961
    5. '	Point' → logprob: -13.798604965209961
    6. 'Optional' → logprob: -14.298604965209961
    7. '   ' → logprob: -15.423604965209961
    8. 'Points' → logprob: -15.548604965209961
    9. '(Point' → logprob: -15.798604965209961
    10. 'point' → logprob: -15.923604965209961

Token 534: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16034851968288422
    2. ' =' → logprob: -1.9103485345840454
    3. '=p' → logprob: -9.160348892211914
    4. '=None' → logprob: -11.660348892211914
    5. ' ' → logprob: -12.910348892211914
    6. ',' → logprob: -12.910348892211914
    7. '<|end|>' → logprob: -12.910348892211914
    8. '   ' → logprob: -14.035348892211914
    9. ')' → logprob: -14.910348892211914
    10. '=
' → logprob: -14.910348892211914

Token 535: ' Point' (ID: 9971)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01905784383416176
    2. ' p' → logprob: -4.019057750701904
    3. 'Point' → logprob: -7.144057750701904
    4. ' Point' → logprob: -9.144058227539062
    5. '   ' → logprob: -12.644058227539062
    6. '	p' → logprob: -13.144058227539062
    7. ' ' → logprob: -13.144058227539062
    8. '(p' → logprob: -13.519058227539062
    9. 'point' → logprob: -14.644058227539062
    10. 'Segment' → logprob: -14.644058227539062

Token 536: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004794999957084656
    2. '()
' → logprob: -5.379795074462891
    3. '(' → logprob: -9.50479507446289
    4. '0' → logprob: -9.62979507446289
    5. '()

' → logprob: -10.62979507446289
    6. 'if' → logprob: -11.62979507446289
    7. '1' → logprob: -15.00479507446289
    8. 'p' → logprob: -15.25479507446289
    9. '(),' → logprob: -15.87979507446289
    10. '(p' → logprob: -16.12979507446289

Token 537: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05904492735862732
    2. 'if' → logprob: -3.05904483795166
    3. '       ' → logprob: -4.80904483795166
    4. '<|end|>' → logprob: -6.55904483795166
    5. '	if' → logprob: -7.68404483795166
    6. '   ' → logprob: -8.55904483795166
    7. '	' → logprob: -10.18404483795166
    8. '
' → logprob: -10.43404483795166
    9. '<|end|>' → logprob: -10.43404483795166
    10. ' ' → logprob: -10.68404483795166

Token 538: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007100477814674377
    2. ' p' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.000709533691406
    4. '	p' → logprob: -18.500709533691406
    5. '<p' → logprob: -19.875709533691406
    6. '(p' → logprob: -20.500709533691406
    7. ' ' → logprob: -21.625709533691406
    8. '  ' → logprob: -22.000709533691406
    9. '    ' → logprob: -23.125709533691406
    10. '$p' → logprob: -24.125709533691406

Token 539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. '2' → logprob: -11.625014305114746
    3. '(p' → logprob: -13.125014305114746
    4. 'p' → logprob: -14.500014305114746
    5. ' p' → logprob: -14.500014305114746
    6. '=p' → logprob: -14.625014305114746
    7. 'oints' → logprob: -14.750014305114746
    8. '<p' → logprob: -16.00001335144043
    9. 'None' → logprob: -16.00001335144043
    10. '```' → logprob: -16.87501335144043

Token 540: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20142485201358795
    2. 'is' → logprob: -1.7014248371124268
    3. ' ' → logprob: -12.826424598693848
    4. 'else' → logprob: -13.451424598693848
    5. '==' → logprob: -13.451424598693848
    6. 'if' → logprob: -13.576424598693848
    7. ')' → logprob: -13.576424598693848
    8. 'p' → logprob: -13.826424598693848
    9. '	is' → logprob: -13.951424598693848
    10. ' p' → logprob: -14.826424598693848

Token 541: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001170225441455841
    2. ' None' → logprob: -6.7511701583862305
    3. '(None' → logprob: -17.626171112060547
    4. '   ' → logprob: -17.751171112060547
    5. '_None' → logprob: -18.126171112060547
    6. '=None' → logprob: -18.751171112060547
    7. 'none' → logprob: -19.876171112060547
    8. '...' → logprob: -20.376171112060547
    9. '.None' → logprob: -21.501171112060547
    10. ' ' → logprob: -22.001171112060547

Token 542: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5759704113006592
    2. ' else' → logprob: -0.8259704113006592
    3. '       ' → logprob: -11.075970649719238
    4. '	else' → logprob: -12.075970649719238
    5. '        ' → logprob: -12.200970649719238
    6. ' ' → logprob: -13.825970649719238
    7. 'p' → logprob: -14.200970649719238
    8. '<|end|>' → logprob: -14.450970649719238
    9. '   ' → logprob: -14.950970649719238
    10. ')' → logprob: -14.950970649719238

Token 543: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00012368128227535635
    2. ' p' → logprob: -9.000123977661133
    3. 'Point' → logprob: -16.375123977661133
    4. 'point' → logprob: -16.875123977661133
    5. '	p' → logprob: -17.375123977661133
    6. '   ' → logprob: -18.375123977661133
    7. '<p' → logprob: -19.125123977661133
    8. '(p' → logprob: -19.375123977661133
    9. 'points' → logprob: -19.500123977661133
    10. ' ' → logprob: -19.500123977661133

Token 544: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. 'oint' → logprob: -12.250005722045898
    3. 'p' → logprob: -14.125005722045898
    4. 'oints' → logprob: -15.375005722045898
    5. '(p' → logprob: -16.7500057220459
    6. '```' → logprob: -16.8750057220459
    7. 'oin' → logprob: -18.0000057220459
    8. '.p' → logprob: -18.3750057220459
    9. ' p' → logprob: -18.5000057220459
    10. 't' → logprob: -18.8750057220459

Token 545: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011428380385041237
    2. 'self' → logprob: -7.626142978668213
    3. '   ' → logprob: -8.376142501831055
    4. '<|end|>' → logprob: -8.376142501831055
    5. '
' → logprob: -9.251142501831055
    6. '	' → logprob: -10.251142501831055
    7. ' ' → logprob: -11.501142501831055
    8. ' self' → logprob: -11.501142501831055
    9. 'p' → logprob: -11.751142501831055
    10. 's' → logprob: -12.251142501831055

Token 546: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0073967259377241135
    2. 'self' → logprob: -5.007396697998047
    3. ' self' → logprob: -7.632396697998047
    4. '   ' → logprob: -9.257396697998047
    5. '<|end|>' → logprob: -10.507396697998047
    6. '	' → logprob: -11.257396697998047
    7. 'p' → logprob: -11.507396697998047
    8. '        
' → logprob: -11.632396697998047
    9. '	self' → logprob: -11.632396697998047
    10. ' ' → logprob: -11.632396697998047

Token 547: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0019325626781210303
    2. '       ' → logprob: -6.501932621002197
    3. ' self' → logprob: -7.751932621002197
    4. '	self' → logprob: -15.501932144165039
    5. '   ' → logprob: -18.00193214416504
    6. '(self' → logprob: -19.12693214416504
    7. '	' → logprob: -19.25193214416504
    8. ' ' → logprob: -19.37693214416504
    9. 's' → logprob: -19.37693214416504
    10. '
' → logprob: -20.50193214416504

Token 548: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.4060561776859686e-05
    2. 'p' → logprob: -10.125043869018555
    3. '.' → logprob: -13.000043869018555
    4. ' .' → logprob: -14.125043869018555
    5. '```' → logprob: -15.000043869018555
    6. '2' → logprob: -16.125043869018555
    7. '   ' → logprob: -16.125043869018555
    8. '<p' → logprob: -16.500043869018555
    9. 'def' → logprob: -16.875043869018555
    10. ' ' → logprob: -17.000043869018555

Token 549: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. 'oints' → logprob: -14.500000953674316
    3. 'oint' → logprob: -14.875000953674316
    4. 'p' → logprob: -16.250001907348633
    5. '۲' → logprob: -16.375001907348633
    6. '₂' → logprob: -16.375001907348633
    7. '1' → logprob: -16.875001907348633
    8. '```' → logprob: -16.937501907348633
    9. '   ' → logprob: -17.062501907348633
    10. ' ' → logprob: -17.125001907348633

Token 550: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3493855595588684
    2. '=' → logprob: -1.5993854999542236
    3. ' =' → logprob: -2.4743854999542236
    4. ' if' → logprob: -4.849385738372803
    5. 'if' → logprob: -7.349385738372803
    6. ' :' → logprob: -8.849385261535645
    7. ' or' → logprob: -11.224385261535645
    8. ' ' → logprob: -12.849385261535645
    9. '	if' → logprob: -13.849385261535645
    10. ' is' → logprob: -14.099385261535645

Token 551: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.03791133686900139
    2. 'p' → logprob: -3.7879114151000977
    3. ' Point' → logprob: -4.287911415100098
    4. ' p' → logprob: -7.162911415100098
    5. 'None' → logprob: -10.662911415100098
    6. 'Segment' → logprob: -10.912911415100098
    7. 'point' → logprob: -12.912911415100098
    8. '(Point' → logprob: -13.162911415100098
    9. ' None' → logprob: -13.787911415100098
    10. '_point' → logprob: -13.912911415100098

Token 552: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020599234849214554
    2. ' =' → logprob: -4.020599365234375
    3. ' if' → logprob: -6.145599365234375
    4. 'if' → logprob: -8.145599365234375
    5. '=p' → logprob: -12.520599365234375
    6. '<|end|>' → logprob: -12.895599365234375
    7. ' is' → logprob: -13.270599365234375
    8. ':' → logprob: -13.770599365234375
    9. '<|end|>' → logprob: -13.770599365234375
    10. 'p' → logprob: -14.395599365234375

Token 553: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.03192321956157684
    2. 'p' → logprob: -3.781923294067383
    3. ' Point' → logprob: -4.781923294067383
    4. ' p' → logprob: -8.281923294067383
    5. 'Segment' → logprob: -12.156923294067383
    6. '	Point' → logprob: -14.031923294067383
    7. 'point' → logprob: -14.656923294067383
    8. '_point' → logprob: -15.156923294067383
    9. '(Point' → logprob: -15.906923294067383
    10. '_Point' → logprob: -16.406923294067383

Token 554: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.9361264946837764e-07
    2. ' ()' → logprob: -16.75
    3. '()
' → logprob: -16.75
    4. ')' → logprob: -18.25
    5. 'if' → logprob: -18.5
    6. '0' → logprob: -19.125
    7. '```' → logprob: -19.625
    8. '(' → logprob: -19.75
    9. '()

' → logprob: -20.5
    10. '()]' → logprob: -20.75

Token 555: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23955844342708588
    2. ' if' → logprob: -2.239558458328247
    3. '()' → logprob: -2.239558458328247
    4. 'p' → logprob: -12.239558219909668
    5. 'If' → logprob: -12.489558219909668
    6. '(p' → logprob: -13.114558219909668
    7. '	if' → logprob: -13.989558219909668
    8. ' ' → logprob: -14.739558219909668
    9. '(' → logprob: -15.239558219909668
    10. '0' → logprob: -15.614558219909668

Token 556: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004882152716163546
    2. ' p' → logprob: -7.62548828125
    3. 'None' → logprob: -16.75048828125
    4. '(p' → logprob: -17.00048828125
    5. '   ' → logprob: -17.12548828125
    6. '	p' → logprob: -17.87548828125
    7. ' ' → logprob: -19.50048828125
    8. 's' → logprob: -19.75048828125
    9. '<p' → logprob: -19.87548828125
    10. '_p' → logprob: -20.12548828125

Token 557: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008055794751271605
    2. 'p' → logprob: -7.125805377960205
    3. 'None' → logprob: -15.250805854797363
    4. ' p' → logprob: -15.500805854797363
    5. '(p' → logprob: -15.750805854797363
    6. '_' → logprob: -16.125804901123047
    7. '1' → logprob: -16.500804901123047
    8. '```' → logprob: -16.750804901123047
    9. '₂' → logprob: -16.875804901123047
    10. '_p' → logprob: -16.875804901123047

Token 558: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.47407740354537964
    2. 'is' → logprob: -0.9740774035453796
    3. '	is' → logprob: -15.474077224731445
    4. ')is' → logprob: -16.349077224731445
    5. 'None' → logprob: -17.099077224731445
    6. 'if' → logprob: -17.224077224731445
    7. '==' → logprob: -17.474077224731445
    8. ')' → logprob: -17.724077224731445
    9. 'Is' → logprob: -17.849077224731445
    10. '=None' → logprob: -17.849077224731445

Token 559: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.15310683415737e-05
    2. ' None' → logprob: -10.750021934509277
    3. 'none' → logprob: -18.75002098083496
    4. '(None' → logprob: -18.75002098083496
    5. '   ' → logprob: -19.37502098083496
    6. '=None' → logprob: -19.87502098083496
    7. '_None' → logprob: -20.00002098083496
    8. ' ' → logprob: -22.12502098083496
    9. '_none' → logprob: -22.50002098083496
    10. '.None' → logprob: -22.62502098083496

Token 560: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.038045283406972885
    2. ' else' → logprob: -3.2880451679229736
    3. ':' → logprob: -13.663044929504395
    4. '        ' → logprob: -14.038044929504395
    5. '	else' → logprob: -14.413044929504395
    6. ' is' → logprob: -14.663044929504395
    7. 'is' → logprob: -15.288044929504395
    8. 'elses' → logprob: -16.16304588317871
    9. '       ' → logprob: -16.28804588317871
    10. ' ' → logprob: -16.53804588317871

Token 561: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.5577775128767826e-06
    2. ' p' → logprob: -12.125005722045898
    3. '	p' → logprob: -18.6250057220459
    4. '   ' → logprob: -19.6250057220459
    5. '<p' → logprob: -19.8750057220459
    6. '(p' → logprob: -19.8750057220459
    7. '_p' → logprob: -21.6250057220459
    8. ')p' → logprob: -22.0000057220459
    9. '[p' → logprob: -22.1250057220459
    10. '       ' → logprob: -22.1250057220459

Token 562: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004633164964616299
    2. 'p' → logprob: -5.379632949829102
    3. '.p' → logprob: -11.754632949829102
    4. '(p' → logprob: -13.879632949829102
    5. '₂' → logprob: -14.129632949829102
    6. ' p' → logprob: -14.254632949829102
    7. '```' → logprob: -14.754632949829102
    8. '<p' → logprob: -14.879632949829102
    9. 's' → logprob: -15.004632949829102
    10. '۲' → logprob: -15.254632949829102

Token 563: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 564: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 565: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007051641005091369
    2. '   ' → logprob: -7.500705242156982
    3. '@property' → logprob: -9.125704765319824
    4. ' def' → logprob: -10.375704765319824
    5. '<|end|>' → logprob: -11.875704765319824
    6. '	def' → logprob: -13.250704765319824
    7. ' ' → logprob: -13.750704765319824
    8. '#' → logprob: -14.625704765319824
    9. '```' → logprob: -14.750704765319824
    10. ')' → logprob: -15.250704765319824

Token 566: ' __' (ID: 2516)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.14303487539291382
    2. '__' → logprob: -2.1430349349975586
    3. ' __' → logprob: -4.518034934997559
    4. ' length' → logprob: -5.393034934997559
    5. 'len' → logprob: -7.893034934997559
    6. 'repr' → logprob: -9.393034934997559
    7. '_length' → logprob: -10.393034934997559
    8. 'leng' → logprob: -11.143034934997559
    9. 'vector' → logprob: -11.643034934997559
    10. 'vec' → logprob: -13.893034934997559

Token 567: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.00019734179659280926
    2. 'eq' → logprob: -9.000197410583496
    3. 'init' → logprob: -9.625197410583496
    4. 'lt' → logprob: -12.000197410583496
    5. 'str' → logprob: -13.625197410583496
    6. 'rep' → logprob: -15.250197410583496
    7. 'len' → logprob: -15.250197410583496
    8. 'bool' → logprob: -18.50019645690918
    9. ' repr' → logprob: -18.62519645690918
    10. 'contains' → logprob: -19.12519645690918

Token 568: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0005436192732304335
    2. '(self' → logprob: -7.625543594360352
    3. '__' → logprob: -10.375543594360352
    4. '__(
' → logprob: -10.750543594360352
    5. '__('' → logprob: -13.500543594360352
    6. '__("' → logprob: -14.875543594360352
    7. '(' → logprob: -14.875543594360352
    8. 'self' → logprob: -15.500543594360352
    9. '_(' → logprob: -15.875543594360352
    10. '__((' → logprob: -16.00054359436035

Token 569: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.896309739408025e-07
    2. ')' → logprob: -14.625000953674316
    3. ' self' → logprob: -15.750000953674316
    4. '(self' → logprob: -16.75
    5. 's' → logprob: -18.0
    6. '	self' → logprob: -19.25
    7. '   ' → logprob: -19.875
    8. '
' → logprob: -19.875
    9. 'str' → logprob: -20.75
    10. '):
' → logprob: -20.875

Token 570: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011160303838551044
    2. ')(' → logprob: -5.386160373687744
    3. 'self' → logprob: -5.761160373687744
    4. '__(' → logprob: -5.886160373687744
    5. ')' → logprob: -8.136159896850586
    6. ',' → logprob: -8.386159896850586
    7. '(' → logprob: -10.636159896850586
    8. ',self' → logprob: -11.386159896850586
    9. ' (' → logprob: -11.636159896850586
    10. ')(
' → logprob: -11.886159896850586

Token 571: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013653546338900924
    2. 'self' → logprob: -6.8763651847839355
    3. '(' → logprob: -8.876365661621094
    4. '   ' → logprob: -9.501365661621094
    5. 'return' → logprob: -9.876365661621094
    6. '       ' → logprob: -10.001365661621094
    7. '[self' → logprob: -12.251365661621094
    8. 'def' → logprob: -12.626365661621094
    9. '[' → logprob: -12.626365661621094
    10. ' self' → logprob: -13.251365661621094

Token 572: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.011047814972698689
    2. ' str' → logprob: -4.511047840118408
    3. 'string' → logprob: -18.13604736328125
    4. 's' → logprob: -18.88604736328125
    5. '[str' → logprob: -19.13604736328125
    6. ' ' → logprob: -19.26104736328125
    7. '	str' → logprob: -20.01104736328125
    8. 'stri' → logprob: -20.01104736328125
    9. '=str' → logprob: -20.63604736328125
    10. '_str' → logprob: -20.76104736328125

Token 573: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.052695680409669876
    2. '       ' → logprob: -3.0526957511901855
    3. '(' → logprob: -5.6776957511901855
    4. '   ' → logprob: -8.427695274353027
    5. '(
' → logprob: -8.552695274353027
    6. 'self' → logprob: -8.802695274353027
    7. '(s' → logprob: -9.552695274353027
    8. ':
' → logprob: -11.552695274353027
    9. '           ' → logprob: -11.802695274353027
    10. ' (' → logprob: -12.427695274353027

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004055282333865762
    2. 'return' → logprob: -7.875405311584473
    3. ' return' → logprob: -10.625405311584473
    4. 'f' → logprob: -14.000405311584473
    5. '   ' → logprob: -16.00040626525879
    6. ' f' → logprob: -16.50040626525879
    7. '           ' → logprob: -16.87540626525879
    8. '	' → logprob: -17.00040626525879
    9. '	return' → logprob: -17.25040626525879
    10. '      ' → logprob: -17.75040626525879

Token 575: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.47945529222488403
    2. '       ' → logprob: -0.979455292224884
    3. ' return' → logprob: -5.229455471038818
    4. '	return' → logprob: -12.47945499420166
    5. 'f' → logprob: -13.10445499420166
    6. '   ' → logprob: -13.85445499420166
    7. '	' → logprob: -15.47945499420166
    8. '           ' → logprob: -16.479455947875977
    9. '
' → logprob: -16.604455947875977
    10. '```' → logprob: -16.604455947875977

Token 576: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4563298523426056
    2. 'f' → logprob: -1.2063298225402832
    3. ' f' → logprob: -2.706329822540283
    4. ' "' → logprob: -8.081330299377441
    5. ''' → logprob: -12.206330299377441
    6. ' ' → logprob: -12.956330299377441
    7. '"S' → logprob: -13.581330299377441
    8. '(f' → logprob: -14.331330299377441
    9. '   ' → logprob: -14.706330299377441
    10. ''f' → logprob: -15.081330299377441

Token 577: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -7.941850526549388e-06
    2. 'f' → logprob: -12.250007629394531
    3. '"' → logprob: -13.125007629394531
    4. ''' → logprob: -15.000007629394531
    5. '\"' → logprob: -15.625007629394531
    6. 'segment' → logprob: -15.750007629394531
    7. '{}' → logprob: -15.875007629394531
    8. ' Segment' → logprob: -16.12500762939453
    9. 'Line' → logprob: -16.37500762939453
    10. ''S' → logprob: -16.37500762939453

Token 578: '({},' (ID: 45594)
  Prédit: '({},'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({},' → logprob: -0.00012356207298580557
    2. '({' → logprob: -9.000123977661133
    3. '{},' → logprob: -16.500123977661133
    4. '(' → logprob: -17.625123977661133
    5. '{}' → logprob: -18.875123977661133
    6. '("' → logprob: -18.875123977661133
    7. '(self' → logprob: -19.500123977661133
    8. '({})
' → logprob: -19.750123977661133
    9. '('{}' → logprob: -20.000123977661133
    10. '({"' → logprob: -20.375123977661133

Token 579: ' {})' (ID: 75167)
  Prédit: '{})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{})' → logprob: -0.07935909926891327
    2. ' {})' → logprob: -2.5793590545654297
    3. '{}' → logprob: -8.20435905456543
    4. ')' → logprob: -9.20435905456543
    5. '{' → logprob: -10.07935905456543
    6. '{},' → logprob: -10.57935905456543
    7. ' ' → logprob: -11.45435905456543
    8. ' ' → logprob: -12.20435905456543
    9. '   ' → logprob: -12.57935905456543
    10. ')"' → logprob: -12.82935905456543

Token 580: '".' (ID: 4050)
  Prédit: '.format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.2543758749961853
    2. '".' → logprob: -1.87937593460083
    3. ')' → logprob: -2.87937593460083
    4. 'format' → logprob: -4.37937593460083
    5. '(self' → logprob: -6.50437593460083
    6. 'self' → logprob: -7.00437593460083
    7. '}".' → logprob: -8.504375457763672
    8. '(format' → logprob: -8.879375457763672
    9. ',' → logprob: -9.254375457763672
    10. '{}".' → logprob: -9.504375457763672

Token 581: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -1.3782830137643032e-05
    2. '(format' → logprob: -11.37501335144043
    3. ' format' → logprob: -13.75001335144043
    4. 'repr' → logprob: -14.12501335144043
    5. 'self' → logprob: -15.50001335144043
    6. '.format' → logprob: -16.75001335144043
    7. 'def' → logprob: -16.87501335144043
    8. '(p' → logprob: -17.37501335144043
    9. 'p' → logprob: -17.50001335144043
    10. '{' → logprob: -17.87501335144043

Token 582: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016194197814911604
    2. 'self' → logprob: -9.000162124633789
    3. '(re' → logprob: -10.375162124633789
    4. 'repr' → logprob: -11.875162124633789
    5. '(' → logprob: -14.875162124633789
    6. '(str' → logprob: -18.12516212463379
    7. 're' → logprob: -18.25016212463379
    8. '(
' → logprob: -19.12516212463379
    9. ',self' → logprob: -19.87516212463379
    10. ' self' → logprob: -19.87516212463379

Token 583: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.173704271830502e-06
    2. '.' → logprob: -13.62500286102295
    3. 'p' → logprob: -13.75000286102295
    4. 'self' → logprob: -14.12500286102295
    5. '.s' → logprob: -16.250003814697266
    6. ').' → logprob: -18.000003814697266
    7. ')' → logprob: -19.000003814697266
    8. '(p' → logprob: -19.000003814697266
    9. ' .' → logprob: -19.500003814697266
    10. 's' → logprob: -20.000003814697266

Token 584: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. 'self' → logprob: -12.625003814697266
    3. 'p' → logprob: -16.625003814697266
    4. '.p' → logprob: -17.125003814697266
    5. '```' → logprob: -17.125003814697266
    6. '(self' → logprob: -17.750003814697266
    7. '   ' → logprob: -18.187503814697266
    8. ' ' → logprob: -18.312503814697266
    9. 'repr' → logprob: -18.375003814697266
    10. 's' → logprob: -18.812503814697266

Token 585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.8889261304575484e-06
    2. ' ,' → logprob: -12.750003814697266
    3. ',self' → logprob: -14.250003814697266
    4. ',
' → logprob: -15.875003814697266
    5. ',p' → logprob: -15.875003814697266
    6. 'self' → logprob: -17.125003814697266
    7. ',

' → logprob: -18.125003814697266
    8. ')' → logprob: -18.375003814697266
    9. ',s' → logprob: -19.375003814697266
    10. '),' → logprob: -20.000003814697266

Token 586: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16023072600364685
    2. ' self' → logprob: -1.9102307558059692
    3. '(self' → logprob: -13.16023063659668
    4. '<|end|>' → logprob: -13.41023063659668
    5. '	self' → logprob: -13.78523063659668
    6. '       ' → logprob: -14.16023063659668
    7. '[self' → logprob: -15.03523063659668
    8. 's' → logprob: -15.66023063659668
    9. ')' → logprob: -15.78523063659668
    10. '        ' → logprob: -15.91023063659668

Token 587: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.03661112114787102
    2. ',' → logprob: -3.6616110801696777
    3. '.' → logprob: -4.911611080169678
    4. ')' → logprob: -5.911611080169678
    5. '.s' → logprob: -8.911611557006836
    6. ',p' → logprob: -10.536611557006836
    7. 'p' → logprob: -11.911611557006836
    8. '   ' → logprob: -12.786611557006836
    9. '),' → logprob: -12.786611557006836
    10. ').' → logprob: -12.786611557006836

Token 588: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.375000953674316
    3. 'oints' → logprob: -16.000001907348633
    4. 'oint' → logprob: -16.250001907348633
    5. '```' → logprob: -17.000001907348633
    6. 'p' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.125001907348633
    8. 't' → logprob: -17.250001907348633
    9. 'self' → logprob: -17.875001907348633
    10. 'r' → logprob: -18.125001907348633

Token 589: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.375
    3. '))' → logprob: -16.5
    4. ')
' → logprob: -17.125
    5. ')`' → logprob: -17.25
    6. '}' → logprob: -17.625
    7. ')}' → logprob: -17.75
    8. '),' → logprob: -18.0
    9. ')#' → logprob: -18.875
    10. '   ' → logprob: -19.0

Token 590: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007281114812940359
    2. '<|end|>' → logprob: -5.007281303405762
    3. 'def' → logprob: -8.007281303405762
    4. '<|end|>' → logprob: -9.507281303405762
    5. ')' → logprob: -10.007281303405762
    6. '    
' → logprob: -10.007281303405762
    7. '```' → logprob: -10.257281303405762
    8. '
' → logprob: -11.882281303405762
    9. '#' → logprob: -12.132281303405762
    10. ' def' → logprob: -12.757281303405762

Token 591: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00311877578496933
    2. '   ' → logprob: -6.128118991851807
    3. '@property' → logprob: -7.003118991851807
    4. ' def' → logprob: -10.753118515014648
    5. '@' → logprob: -13.628118515014648
    6. '	def' → logprob: -14.878118515014648
    7. '#' → logprob: -15.128118515014648
    8. '    
' → logprob: -15.628118515014648
    9. ')' → logprob: -16.00311851501465
    10. ' ' → logprob: -16.37811851501465

Token 592: ' __' (ID: 2516)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0012870213249698281
    2. 'vector' → logprob: -7.00128698348999
    3. 'len' → logprob: -8.876287460327148
    4. 'vec' → logprob: -9.626287460327148
    5. 'def' → logprob: -9.876287460327148
    6. '__' → logprob: -10.001287460327148
    7. ' length' → logprob: -11.001287460327148
    8. 'direction' → logprob: -11.001287460327148
    9. 'is' → logprob: -11.876287460327148
    10. 'get' → logprob: -12.001287460327148

Token 593: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.00015467056073248386
    2. 'lt' → logprob: -9.000154495239258
    3. 'init' → logprob: -11.250154495239258
    4. 'repr' → logprob: -11.750154495239258
    5. 'contains' → logprob: -12.625154495239258
    6. 'hash' → logprob: -12.750154495239258
    7. 'len' → logprob: -13.625154495239258
    8. 'bool' → logprob: -13.625154495239258
    9. 'iter' → logprob: -14.500154495239258
    10. 'add' → logprob: -14.750154495239258

Token 594: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.000930163892917335
    2. '__' → logprob: -7.000930309295654
    3. '__((' → logprob: -11.375929832458496
    4. '__(
' → logprob: -12.375929832458496
    5. '__(*' → logprob: -14.000929832458496
    6. '__('' → logprob: -14.125929832458496
    7. '__[' → logprob: -14.250929832458496
    8. '__("' → logprob: -15.000929832458496
    9. '(self' → logprob: -15.000929832458496
    10. '==(' → logprob: -17.375930786132812

Token 595: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9361264946837764e-07
    2. ' self' → logprob: -16.0
    3. '
' → logprob: -19.875
    4. 'object' → logprob: -20.125
    5. 'other' → logprob: -20.375
    6. '(self' → logprob: -20.625
    7. 's' → logprob: -21.5
    8. ')' → logprob: -21.5
    9. '	self' → logprob: -21.75
    10. '```' → logprob: -21.75

Token 596: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5022191405296326
    2. '__(' → logprob: -1.0022192001342773
    3. 'self' → logprob: -3.8772192001342773
    4. ',' → logprob: -5.252219200134277
    5. '(' → logprob: -7.502219200134277
    6. '__' → logprob: -7.627219200134277
    7. ')(' → logprob: -8.377219200134277
    8. ',self' → logprob: -8.877219200134277
    9. ' (' → logprob: -9.252219200134277
    10. ')' → logprob: -9.252219200134277

Token 597: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.579207181930542
    2. 'self' → logprob: -0.829207181930542
    3. ' other' → logprob: -5.829207420349121
    4. ' self' → logprob: -8.579207420349121
    5. 'object' → logprob: -8.954207420349121
    6. 'Other' → logprob: -12.954207420349121
    7. 'obj' → logprob: -13.579207420349121
    8. '(other' → logprob: -15.454207420349121
    9. 'Object' → logprob: -15.704207420349121
    10. '(self' → logprob: -15.704207420349121

Token 598: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.6312321753939614e-05
    2. ')' → logprob: -11.125036239624023
    3. '__:' → logprob: -11.750036239624023
    4. ' :' → logprob: -12.250036239624023
    5. '):' → logprob: -12.375036239624023
    6. '__' → logprob: -13.125036239624023
    7. '[' → logprob: -14.500036239624023
    8. 'import' → logprob: -14.625036239624023
    9. '```' → logprob: -15.250036239624023
    10. ',' → logprob: -15.250036239624023

Token 599: ' object' (ID: 2817)
  Prédit: 'object'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'object' → logprob: -0.0005686411168426275
    2. ' object' → logprob: -7.500568866729736
    3. ''' → logprob: -11.250568389892578
    4. '(object' → logprob: -13.500568389892578
    5. ''s' → logprob: -14.375568389892578
    6. ''S' → logprob: -15.125568389892578
    7. ' '' → logprob: -15.625568389892578
    8. '	object' → logprob: -15.875568389892578
    9. ''objet' → logprob: -16.000568389892578
    10. ')object' → logprob: -17.125568389892578

Token 600: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ':' → logprob: -12.625003814697266
    3. '')' → logprob: -15.250003814697266
    4. ' )' → logprob: -15.625003814697266
    5. ')->' → logprob: -15.875003814697266
    6. '   ' → logprob: -17.875003814697266
    7. '`)' → logprob: -17.875003814697266
    8. '->' → logprob: -18.875003814697266
    9. '")' → logprob: -19.000003814697266
    10. '):' → logprob: -19.875003814697266

Token 601: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7648754715919495
    2. ':' → logprob: -0.7648754715919495
    3. '->' → logprob: -3.1398754119873047
    4. ' ->' → logprob: -3.7648754119873047
    5. ')->' → logprob: -6.264875411987305
    6. '       ' → logprob: -8.014875411987305
    7. '   ' → logprob: -8.264875411987305
    8. '<|end|>' → logprob: -9.514875411987305
    9. '->____' → logprob: -10.514875411987305
    10. '>' → logprob: -10.889875411987305

Token 602: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0009115827269852161
    2. ' bool' → logprob: -7.000911712646484
    3. '	bool' → logprob: -17.500911712646484
    4. 'object' → logprob: -17.750911712646484
    5. '<bool' → logprob: -19.125911712646484
    6. ' ' → logprob: -19.250911712646484
    7. '```' → logprob: -19.750911712646484
    8. '   ' → logprob: -20.625911712646484
    9. '(bool' → logprob: -20.750911712646484
    10. '
' → logprob: -22.000911712646484

Token 603: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001590438769198954
    2. ':
' → logprob: -6.501590251922607
    3. '       ' → logprob: -10.001590728759766
    4. '):' → logprob: -10.501590728759766
    5. '   ' → logprob: -12.376590728759766
    6. '):
' → logprob: -12.376590728759766
    7. ' :' → logprob: -13.501590728759766
    8. '=' → logprob: -13.751590728759766
    9. '<|end|>' → logprob: -13.876590728759766
    10. '():' → logprob: -14.126590728759766

Token 604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.20603168499656e-05
    2. ' if' → logprob: -9.750061988830566
    3. 'if' → logprob: -12.875061988830566
    4. '   ' → logprob: -13.875061988830566
    5. '      ' → logprob: -16.125062942504883
    6. '	' → logprob: -17.375062942504883
    7. '           ' → logprob: -17.500062942504883
    8. '	if' → logprob: -17.625062942504883
    9. '    ' → logprob: -17.750062942504883
    10. ' ' → logprob: -17.750062942504883

Token 605: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03872614726424217
    2. '       ' → logprob: -3.2887260913848877
    3. ' if' → logprob: -7.288726329803467
    4. '   ' → logprob: -14.038725852966309
    5. '           ' → logprob: -15.913725852966309
    6. 'return' → logprob: -16.038726806640625
    7. '
' → logprob: -16.038726806640625
    8. '	if' → logprob: -16.288726806640625
    9. 'If' → logprob: -17.538726806640625
    10. '      ' → logprob: -17.788726806640625

Token 606: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07889000326395035
    2. 'not' → logprob: -2.578890085220337
    3. '(not' → logprob: -16.328889846801758
    4. '	not' → logprob: -16.953889846801758
    5. ' other' → logprob: -19.078889846801758
    6. 'other' → logprob: -19.328889846801758
    7. '_not' → logprob: -19.578889846801758
    8. '   ' → logprob: -20.203889846801758
    9. 'Not' → logprob: -20.328889846801758
    10. ' ' → logprob: -21.328889846801758

Token 607: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0015029559144750237
    2. ' isinstance' → logprob: -6.501502990722656
    3. '(is' → logprob: -14.251502990722656
    4. 'Is' → logprob: -19.251502990722656
    5. '   ' → logprob: -19.501502990722656
    6. 'self' → logprob: -19.751502990722656
    7. 'type' → logprob: -21.376502990722656
    8. '_is' → logprob: -21.626502990722656
    9. 'instance' → logprob: -21.626502990722656
    10. '  ' → logprob: -22.001502990722656

Token 608: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -7.493430894101039e-05
    2. 'other' → logprob: -9.500075340270996
    3. ' other' → logprob: -17.12507438659668
    4. '(self' → logprob: -18.87507438659668
    5. 'Other' → logprob: -18.87507438659668
    6. '_other' → logprob: -22.00007438659668
    7. '.other' → logprob: -23.12507438659668
    8. '(' → logprob: -23.12507438659668
    9. '-other' → logprob: -23.62507438659668
    10. 'OTHER' → logprob: -23.87507438659668

Token 609: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.23267199099063873
    2. ',' → logprob: -1.7326719760894775
    3. 'other' → logprob: -3.4826719760894775
    4. 'Other' → logprob: -10.982671737670898
    5. ' other' → logprob: -11.232671737670898
    6. 'self' → logprob: -11.357671737670898
    7. 'Segment' → logprob: -13.482671737670898
    8. '(self' → logprob: -13.482671737670898
    9. 'Seg' → logprob: -13.982671737670898
    10. '.other' → logprob: -14.107671737670898

Token 610: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -3.6312321753939614e-05
    2. ' Segment' → logprob: -10.250036239624023
    3. 'Point' → logprob: -14.500036239624023
    4. 'self' → logprob: -15.125036239624023
    5. 'Seg' → logprob: -17.125036239624023
    6. ')' → logprob: -18.000036239624023
    7. '
' → logprob: -19.000036239624023
    8. ' ' → logprob: -19.000036239624023
    9. 'Segments' → logprob: -19.125036239624023
    10. '   ' → logprob: -19.250036239624023

Token 611: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.029788563027977943
    2. '):' → logprob: -3.5297884941101074
    3. '):
' → logprob: -10.779788970947266
    4. ')' → logprob: -11.529788970947266
    5. '       ' → logprob: -12.154788970947266
    6. '):

' → logprob: -14.154788970947266
    7. '           ' → logprob: -14.279788970947266
    8. ':
' → logprob: -15.029788970947266
    9. '   ' → logprob: -15.404788970947266
    10. ':' → logprob: -15.404788970947266

Token 612: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.749814019713085e-06
    2. '       ' → logprob: -13.000006675720215
    3. '	       ' → logprob: -14.000006675720215
    4. '{
' → logprob: -14.250006675720215
    5. 'return' → logprob: -14.375006675720215
    6. '<|end|>' → logprob: -14.625006675720215
    7. '          ' → logprob: -14.750006675720215
    8. ':' → logprob: -15.000006675720215
    9. '{return' → logprob: -15.375006675720215
    10. '		' → logprob: -15.500006675720215

Token 613: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06605975329875946
    2. '#' (adapté à ' #') → logprob: -3.0660598278045654
    3. 'return' → logprob: -4.066059589385986
    4. ' return' → logprob: -9.316060066223145
    5. '       ' → logprob: -9.566060066223145
    6. ' #' → logprob: -11.816060066223145
    7. '   ' → logprob: -12.691060066223145
    8. ' ' → logprob: -13.191060066223145
    9. '          ' → logprob: -13.691060066223145
    10. '
' → logprob: -14.316060066223145

Token 614: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004710056819021702
    2. '           ' → logprob: -5.7547101974487305
    3. ' return' → logprob: -6.5047101974487305
    4. '       ' → logprob: -10.37971019744873
    5. 'print' → logprob: -13.37971019744873
    6. '         ' → logprob: -14.37971019744873
    7. ' ' → logprob: -15.00471019744873
    8. '   ' → logprob: -15.00471019744873
    9. '          ' → logprob: -15.25471019744873
    10. ':return' → logprob: -15.25471019744873

Token 615: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0005059692775830626
    2. 'Not' → logprob: -7.8755059242248535
    3. '(Not' → logprob: -9.500506401062012
    4. '"' → logprob: -10.000506401062012
    5. '(' → logprob: -13.375506401062012
    6. ' Not' → logprob: -13.875506401062012
    7. ' ("' → logprob: -14.250506401062012
    8. '('' → logprob: -14.375506401062012
    9. ')' → logprob: -14.875506401062012
    10. '.Not' → logprob: -15.250506401062012

Token 616: 'Not' (ID: 2874)
  Prédit: 'Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -0.5764060020446777
    2. 'Implemented' → logprob: -0.8264060020446777
    3. 'Other' → logprob: -7.951406002044678
    4. 'Implement' → logprob: -9.951406478881836
    5. 'other' → logprob: -10.326406478881836
    6. 'self' → logprob: -11.826406478881836
    7. 'implemented' → logprob: -12.201406478881836
    8. 'return' → logprob: -12.576406478881836
    9. 'Implementation' → logprob: -12.701406478881836
    10. ')' → logprob: -13.451406478881836

Token 617: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -1.1472419600977446e-06
    2. 'Implement' → logprob: -14.125000953674316
    3. 'implemented' → logprob: -15.000000953674316
    4. ' implemented' → logprob: -17.625001907348633
    5. 'Impl' → logprob: -19.625001907348633
    6. 'Im' → logprob: -19.625001907348633
    7. '_IMPLEMENT' → logprob: -19.875001907348633
    8. '
' → logprob: -20.250001907348633
    9. 'Implementation' → logprob: -20.250001907348633
    10. 'Supported' → logprob: -20.875001907348633

Token 618: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17027902603149414
    2. ' in' → logprob: -2.670279026031494
    3. '")' → logprob: -3.545279026031494
    4. '       ' → logprob: -3.670279026031494
    5. ')' → logprob: -3.920279026031494
    6. '<|end|>' → logprob: -5.545279026031494
    7. '   ' → logprob: -6.170279026031494
    8. 'In' → logprob: -6.420279026031494
    9. 'in' → logprob: -6.670279026031494
    10. '               ' → logprob: -7.295279026031494

Token 619: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.0046293651685118675
    2. ' Segment' → logprob: -5.379629135131836
    3. 'Point' → logprob: -12.379629135131836
    4. 'Seg' → logprob: -12.504629135131836
    5. 'Segments' → logprob: -14.754629135131836
    6. 'self' → logprob: -15.379629135131836
    7. 'segment' → logprob: -16.504629135131836
    8. 'Section' → logprob: -16.504629135131836
    9. ' ' → logprob: -16.504629135131836
    10. ')' → logprob: -16.629629135131836

Token 620: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.31557345390319824
    2. '")' → logprob: -1.6905734539031982
    3. '       ' → logprob: -3.4405734539031982
    4. '           ' → logprob: -3.4405734539031982
    5. ')
' → logprob: -4.315573692321777
    6. ')' → logprob: -4.815573692321777
    7. ')return' → logprob: -8.315573692321777
    8. 'return' → logprob: -8.940573692321777
    9. '<|end|>' → logprob: -9.565573692321777
    10. '")
' → logprob: -9.690573692321777

Token 621: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033986021298915148
    2. '       ' → logprob: -5.753398418426514
    3. 'return' → logprob: -8.503398895263672
    4. ' return' → logprob: -11.503398895263672
    5. '   ' → logprob: -12.003398895263672
    6. '               ' → logprob: -14.253398895263672
    7. ' ' → logprob: -15.378398895263672
    8. '	       ' → logprob: -15.378398895263672
    9. '          ' → logprob: -15.378398895263672
    10. '{return' → logprob: -15.753398895263672

Token 622: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0013047605752944946
    2. '       ' → logprob: -6.751304626464844
    3. ' return' → logprob: -9.501304626464844
    4. '           ' → logprob: -9.751304626464844
    5. '   ' → logprob: -13.501304626464844
    6. ':return' → logprob: -16.126304626464844
    7. '	return' → logprob: -16.626304626464844
    8. '{return' → logprob: -17.751304626464844
    9. ' ' → logprob: -18.751304626464844
    10. 'eturn' → logprob: -19.126304626464844

Token 623: ' Not' (ID: 4037)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -3.666993507067673e-05
    2. ' Not' → logprob: -10.250036239624023
    3. 'False' → logprob: -13.750036239624023
    4. 'not' → logprob: -15.750036239624023
    5. '_Not' → logprob: -16.875036239624023
    6. '_not' → logprob: -17.375036239624023
    7. '@Not' → logprob: -19.000036239624023
    8. '   ' → logprob: -19.000036239624023
    9. '       ' → logprob: -19.125036239624023
    10. '	' → logprob: -19.750036239624023

Token 624: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.049521613866090775
    2. 'Not' → logprob: -3.0495216846466064
    3. 'Implement' → logprob: -7.924521446228027
    4. 'ot' → logprob: -8.799521446228027
    5. '```' → logprob: -9.049521446228027
    6. 'oted' → logprob: -9.299521446228027
    7. 'implemented' → logprob: -10.424521446228027
    8. 'Implementation' → logprob: -11.049521446228027
    9. 'Initialized' → logprob: -11.299521446228027
    10. '(Not' → logprob: -11.674521446228027

Token 625: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5570885807392187e-05
    2. '<|end|>' → logprob: -11.500015258789062
    3. 'return' → logprob: -13.250015258789062
    4. '   ' → logprob: -14.000015258789062
    5. '           ' → logprob: -14.250015258789062
    6. ')' → logprob: -14.875015258789062
    7. '      ' → logprob: -14.875015258789062
    8. '	' → logprob: -15.250015258789062
    9. ',' → logprob: -15.375015258789062
    10. '```' → logprob: -15.625015258789062

Token 626: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.610702363715973e-06
    2. 'return' → logprob: -12.375009536743164
    3. '<|end|>' → logprob: -13.125009536743164
    4. '   ' → logprob: -13.625009536743164
    5. ' return' → logprob: -14.375009536743164
    6. '           ' → logprob: -15.000009536743164
    7. ',' → logprob: -15.125009536743164
    8. '      ' → logprob: -15.875009536743164
    9. '        
' → logprob: -16.000009536743164
    10. ')' → logprob: -16.125009536743164

Token 627: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005292457528412342
    2. '       ' → logprob: -5.2552924156188965
    3. ' return' → logprob: -9.755292892456055
    4. '   ' → logprob: -14.380292892456055
    5. '	return' → logprob: -16.130292892456055
    6. '```' → logprob: -18.505292892456055
    7. '           ' → logprob: -19.630292892456055
    8. 'def' → logprob: -19.880292892456055
    9. 'eturn' → logprob: -20.005292892456055
    10. ' ' → logprob: -20.255292892456055

Token 628: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.38705167174339294
    2. 'self' → logprob: -1.1370517015457153
    3. '((' → logprob: -9.262051582336426
    4. ' self' → logprob: -10.012051582336426
    5. ' (' → logprob: -10.262051582336426
    6. '   ' → logprob: -12.637051582336426
    7. '(' → logprob: -13.262051582336426
    8. '	self' → logprob: -14.762051582336426
    9. '(
' → logprob: -15.512051582336426
    10. '[self' → logprob: -16.012052536010742

Token 629: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.0206720617134124e-05
    2. '.s' → logprob: -12.25001049041748
    3. '.' → logprob: -12.87501049041748
    4. 'p' → logprob: -13.62501049041748
    5. ' .' → logprob: -14.25001049041748
    6. '==' → logprob: -14.25001049041748
    7. '   ' → logprob: -16.750009536743164
    8. ' ==' → logprob: -16.875009536743164
    9. 'self' → logprob: -17.250009536743164
    10. '
' → logprob: -17.625009536743164

Token 630: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '==' → logprob: -19.125
    3. 'self' → logprob: -20.5
    4. ' ' → logprob: -20.75
    5. 'oints' → logprob: -20.875
    6. 'equal' → logprob: -21.625
    7. '   ' → logprob: -21.75
    8. 'p' → logprob: -22.0
    9. 'r' → logprob: -22.0
    10. '```' → logprob: -22.125

Token 631: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47408682107925415
    2. '==' → logprob: -0.9740868210792542
    3. '==
' → logprob: -12.47408676147461
    4. ')' → logprob: -13.22408676147461
    5. ')==' → logprob: -13.22408676147461
    6. '=' → logprob: -13.59908676147461
    7. '===' → logprob: -15.72408676147461
    8. 'p' → logprob: -15.97408676147461
    9. ',' → logprob: -16.09908676147461
    10. ']==' → logprob: -16.09908676147461

Token 632: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0005530327325686812
    2. ' other' → logprob: -7.500553131103516
    3. '(other' → logprob: -17.875553131103516
    4. 'Other' → logprob: -19.625553131103516
    5. '.other' → logprob: -20.375553131103516
    6. '_other' → logprob: -20.875553131103516
    7. 'self' → logprob: -23.500553131103516
    8. '       ' → logprob: -24.250553131103516
    9. 'OTHER' → logprob: -24.750553131103516
    10. '
' → logprob: -25.000553131103516

Token 633: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.007208671886473894
    2. 'p' → logprob: -5.007208824157715
    3. '.' → logprob: -7.632208824157715
    4. ' .' → logprob: -13.007208824157715
    5. '.s' → logprob: -13.257208824157715
    6. '.
' → logprob: -14.007208824157715
    7. '<p' → logprob: -14.007208824157715
    8. ').' → logprob: -14.382208824157715
    9. ' p' → logprob: -14.632208824157715
    10. '   ' → logprob: -14.882208824157715

Token 634: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. 'p' → logprob: -12.375005722045898
    3. ' ' → logprob: -14.625005722045898
    4. 'oints' → logprob: -16.0000057220459
    5. '   ' → logprob: -16.3750057220459
    6. '2' → logprob: -16.7500057220459
    7. 'point' → logprob: -17.1250057220459
    8. 'oint' → logprob: -17.2500057220459
    9. 'points' → logprob: -17.5000057220459
    10. 's' → logprob: -17.8750057220459

Token 635: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04858839511871338
    2. 'and' → logprob: -3.048588275909424
    3. '       ' → logprob: -15.048588752746582
    4. ' or' → logprob: -15.048588752746582
    5. '           ' → logprob: -16.048587799072266
    6. ' ' → logprob: -16.423587799072266
    7. '	and' → logprob: -16.423587799072266
    8. '        ' → logprob: -17.048587799072266
    9. '    ' → logprob: -17.673587799072266
    10. '   ' → logprob: -17.673587799072266

Token 636: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38690343499183655
    2. 'self' → logprob: -1.1369034051895142
    3. '       ' → logprob: -10.386903762817383
    4. '(self' → logprob: -14.136903762817383
    5. '           ' → logprob: -14.761903762817383
    6. '	self' → logprob: -15.261903762817383
    7. 'Self' → logprob: -16.011903762817383
    8. '```' → logprob: -17.136903762817383
    9. '        ' → logprob: -17.511903762817383
    10. '               ' → logprob: -17.761903762817383

Token 637: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00010962257510982454
    2. '.' → logprob: -9.375109672546387
    3. 'p' → logprob: -10.750109672546387
    4. ' .' → logprob: -13.250109672546387
    5. '```' → logprob: -14.375109672546387
    6. 'self' → logprob: -15.000109672546387
    7. '.s' → logprob: -15.375109672546387
    8. ' p' → logprob: -15.875109672546387
    9. ' ' → logprob: -16.25010871887207
    10. '`.' → logprob: -16.62510871887207

Token 638: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.6656825866666622e-05
    2. 'p' → logprob: -10.62502670288086
    3. ' ' → logprob: -14.12502670288086
    4. '   ' → logprob: -15.37502670288086
    5. '<|end|>' → logprob: -15.37502670288086
    6. '.' → logprob: -15.50002670288086
    7. '<|end|>' → logprob: -15.87502670288086
    8. ' p' → logprob: -16.43752670288086
    9. '```' → logprob: -16.62502670288086
    10. '<p' → logprob: -16.68752670288086

Token 639: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3132791221141815
    2. ' ==' → logprob: -1.313279151916504
    3. '==
' → logprob: -11.063279151916504
    4. '=' → logprob: -14.188279151916504
    5. ')==' → logprob: -14.813279151916504
    6. ' ==
' → logprob: -15.688279151916504
    7. ']==' → logprob: -15.688279151916504
    8. '==(' → logprob: -16.313278198242188
    9. ')' → logprob: -16.438278198242188
    10. '===' → logprob: -16.938278198242188

Token 640: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.47407716512680054
    2. ' other' → logprob: -0.9740771651268005
    3. '(other' → logprob: -16.099077224731445
    4. '.other' → logprob: -17.224077224731445
    5. 'Other' → logprob: -17.724077224731445
    6. '_other' → logprob: -19.224077224731445
    7. 'self' → logprob: -21.724077224731445
    8. '其他' → logprob: -22.349077224731445
    9. ' oth' → logprob: -22.349077224731445
    10. ' ' → logprob: -22.724077224731445

Token 641: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0028828566428273916
    2. '.' → logprob: -5.877882957458496
    3. 'p' → logprob: -9.502882957458496
    4. '2' → logprob: -13.877882957458496
    5. '```' → logprob: -14.377882957458496
    6. ' .' → logprob: -14.877882957458496
    7. '<p' → logprob: -15.002882957458496
    8. 'self' → logprob: -15.002882957458496
    9. '.п' → logprob: -15.627882957458496
    10. '.s' → logprob: -16.50288200378418

Token 642: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.822646693966817e-06
    2. 'oint' → logprob: -12.375007629394531
    3. 'p' → logprob: -13.125007629394531
    4. 'oints' → logprob: -14.500007629394531
    5. '1' → logprob: -15.500007629394531
    6. 'nt' → logprob: -16.00000762939453
    7. 't' → logprob: -16.00000762939453
    8. '```' → logprob: -16.12500762939453
    9. 's' → logprob: -16.25000762939453
    10. '۲' → logprob: -16.87500762939453

Token 643: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23035533726215363
    2. '<|end|>' → logprob: -1.6053553819656372
    3. '<|end|>' → logprob: -5.855355262756348
    4. '
' → logprob: -7.105355262756348
    5. 'def' → logprob: -7.605355262756348
    6. '    
' → logprob: -8.605355262756348
    7. ')' → logprob: -8.980355262756348
    8. ' ' → logprob: -9.230355262756348
    9. '```' → logprob: -9.355355262756348
    10. '  ' → logprob: -9.730355262756348

Token 645: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5775623917579651
    2. '   ' → logprob: -0.8275623917579651
    3. '<|end|>' → logprob: -6.95256233215332
    4. ' def' → logprob: -8.32756233215332
    5. '@property' → logprob: -9.07756233215332
    6. '<|end|>' → logprob: -9.45256233215332
    7. '    
' → logprob: -9.57756233215332
    8. '#' → logprob: -10.07756233215332
    9. '	def' → logprob: -10.07756233215332
    10. ')' → logprob: -10.07756233215332

Token 646: ' vector' (ID: 9727)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0008248721715062857
    2. 'len' → logprob: -8.125824928283691
    3. '__' → logprob: -8.375824928283691
    4. ' length' → logprob: -8.625824928283691
    5. 'vector' → logprob: -10.000824928283691
    6. 'contains' → logprob: -11.125824928283691
    7. 'is' → logprob: -11.250824928283691
    8. '_length' → logprob: -11.375824928283691
    9. 'leng' → logprob: -11.625824928283691
    10. 'def' → logprob: -13.000824928283691

Token 647: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.375006675720215
    3. '(s' → logprob: -13.750006675720215
    4. ' (' → logprob: -14.625006675720215
    5. 'self' → logprob: -15.375006675720215
    6. '   ' → logprob: -15.500006675720215
    7. 'def' → logprob: -16.5000057220459
    8. '       ' → logprob: -17.0000057220459
    9. '(sel' → logprob: -17.7500057220459
    10. 's' → logprob: -18.5000057220459

Token 648: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001305950863752514
    2. ')' → logprob: -9.000130653381348
    3. 'self' → logprob: -12.500130653381348
    4. '(s' → logprob: -13.250130653381348
    5. ')(' → logprob: -14.750130653381348
    6. '(' → logprob: -15.000130653381348
    7. 's' → logprob: -15.500130653381348
    8. 'def' → logprob: -15.750130653381348
    9. '   ' → logprob: -15.875130653381348
    10. ' (' → logprob: -16.50012969970703

Token 649: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.12500286102295
    3. 'self' → logprob: -15.50000286102295
    4. '(s' → logprob: -15.87500286102295
    5. ' (' → logprob: -16.625001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '       ' → logprob: -18.375001907348633
    8. 'def' → logprob: -18.750001907348633
    9. ' self' → logprob: -19.000001907348633
    10. '(Self' → logprob: -19.000001907348633

Token 650: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.5759817957878113
    2. 'Point' → logprob: -0.8259817957878113
    3. ''' → logprob: -10.450982093811035
    4. ' Point' → logprob: -11.575982093811035
    5. ' Vector' → logprob: -12.575982093811035
    6. 'vector' → logprob: -16.07598114013672
    7. '(Point' → logprob: -16.20098114013672
    8. '	Point' → logprob: -16.57598114013672
    9. ''s' → logprob: -16.82598114013672
    10. 'Segment' → logprob: -17.07598114013672

Token 651: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.2166411478538066e-05
    2. '(' → logprob: -10.625052452087402
    3. '():' → logprob: -11.625052452087402
    4. ' (' → logprob: -12.125052452087402
    5. '()' → logprob: -12.125052452087402
    6. '():
' → logprob: -13.000052452087402
    7. ':' → logprob: -13.250052452087402
    8. '   ' → logprob: -13.375052452087402
    9. 'self' → logprob: -13.375052452087402
    10. '       ' → logprob: -15.000052452087402

Token 652: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4638068377971649
    2. ' return' → logprob: -1.8388068675994873
    3. '       ' → logprob: -1.8388068675994873
    4. '   ' → logprob: -2.9638068675994873
    5. '	return' → logprob: -6.838806629180908
    6. '<|end|>' → logprob: -8.588807106018066
    7. ':return' → logprob: -9.838807106018066
    8. '{return' → logprob: -10.213807106018066
    9. '        
' → logprob: -10.713807106018066
    10. ' ' → logprob: -11.213807106018066

Token 653: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007597190560773015
    2. '       ' → logprob: -7.250759601593018
    3. '   ' → logprob: -10.500760078430176
    4. ' return' → logprob: -10.750760078430176
    5. '	return' → logprob: -14.250760078430176
    6. '{return' → logprob: -16.50075912475586
    7. ':return' → logprob: -18.37575912475586
    8. '
' → logprob: -18.37575912475586
    9. '{
' → logprob: -19.50075912475586
    10. 'def' → logprob: -19.62575912475586

Token 654: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.674858301877975e-05
    2. ' self' → logprob: -9.250096321105957
    3. '(self' → logprob: -14.375096321105957
    4. 'Point' → logprob: -17.875097274780273
    5. '	self' → logprob: -18.000097274780273
    6. '[self' → logprob: -19.000097274780273
    7. '   ' → logprob: -19.375097274780273
    8. '=self' → logprob: -20.875097274780273
    9. 'Vector' → logprob: -21.000097274780273
    10. 'Self' → logprob: -21.000097274780273

Token 655: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -5.7888184528565034e-05
    2. 'p' → logprob: -10.5000581741333
    3. 'self' → logprob: -10.6250581741333
    4. '.' → logprob: -12.1250581741333
    5. '   ' → logprob: -16.125057220458984
    6. '<p' → logprob: -16.375057220458984
    7. ' .' → logprob: -16.500057220458984
    8. 's' → logprob: -17.000057220458984
    9. 'Vector' → logprob: -17.000057220458984
    10. '.s' → logprob: -17.250057220458984

Token 656: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.856408536899835e-05
    2. '1' → logprob: -10.500028610229492
    3. 'sub' → logprob: -15.125028610229492
    4. ' ' → logprob: -16.375028610229492
    5. 'self' → logprob: -16.375028610229492
    6. '```' → logprob: -16.437528610229492
    7. 'oint' → logprob: -16.500028610229492
    8. 's' → logprob: -17.187528610229492
    9. 'oints' → logprob: -17.312528610229492
    10. '۲' → logprob: -17.375028610229492

Token 657: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3869357407093048
    2. '-' → logprob: -1.1369357109069824
    3. '-self' → logprob: -9.76193618774414
    4. '-
' → logprob: -13.01193618774414
    5. ' ' → logprob: -13.26193618774414
    6. ' -
' → logprob: -14.01193618774414
    7. ' ' → logprob: -14.51193618774414
    8. '-p' → logprob: -14.51193618774414
    9. '-sub' → logprob: -15.63693618774414
    10. '-point' → logprob: -15.76193618774414

Token 658: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002476604888215661
    2. ' self' → logprob: -6.002476692199707
    3. '	self' → logprob: -14.377476692199707
    4. '       ' → logprob: -15.502476692199707
    5. '(self' → logprob: -16.00247573852539
    6. '[self' → logprob: -16.75247573852539
    7. '<|end|>' → logprob: -18.00247573852539
    8. '   ' → logprob: -18.25247573852539
    9. 's' → logprob: -18.37747573852539
    10. ' ' → logprob: -18.62747573852539

Token 659: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0032373634167015553
    2. 'p' → logprob: -5.753237247467041
    3. '.' → logprob: -9.7532377243042
    4. '.s' → logprob: -14.2532377243042
    5. '<p' → logprob: -15.2532377243042
    6. 'self' → logprob: -15.7532377243042
    7. '<|end|>' → logprob: -16.253236770629883
    8. '	p' → logprob: -16.628236770629883
    9. '.pkl' → logprob: -16.753236770629883
    10. ' .' → logprob: -16.753236770629883

Token 660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. 'oint' → logprob: -12.375005722045898
    3. 'p' → logprob: -14.250005722045898
    4. '2' → logprob: -15.500005722045898
    5. 'oints' → logprob: -15.625005722045898
    6. 'nt' → logprob: -16.3750057220459
    7. 'r' → logprob: -17.0000057220459
    8. 't' → logprob: -17.0000057220459
    9. 'oin' → logprob: -17.2500057220459
    10. '```' → logprob: -17.6250057220459

Token 661: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 662: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01271623931825161
    2. '<|end|>' → logprob: -4.637716293334961
    3. '
' → logprob: -6.262716293334961
    4. '```' → logprob: -7.512716293334961
    5. '    
' → logprob: -7.887716293334961
    6. '<|end|>' → logprob: -9.762716293334961
    7. ')' → logprob: -10.512716293334961
    8. '#' → logprob: -11.512716293334961
    9. 'def' → logprob: -12.387716293334961
    10. ' ' → logprob: -12.387716293334961

Token 663: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.25218692421913147
    2. '   ' → logprob: -1.502186894416809
    3. ')' → logprob: -8.75218677520752
    4. ' def' → logprob: -9.62718677520752
    5. '#' → logprob: -11.37718677520752
    6. '	def' → logprob: -11.50218677520752
    7. '```' → logprob: -12.50218677520752
    8. '    
' → logprob: -12.75218677520752
    9. 'class' → logprob: -13.62718677520752
    10. 'from' → logprob: -14.25218677520752

Token 664: ' is' (ID: 382)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.006972882431000471
    2. 'point' → logprob: -6.131972789764404
    3. 'is' → logprob: -6.881972789764404
    4. 'project' → logprob: -7.381972789764404
    5. 'len' → logprob: -7.506972789764404
    6. 'projection' → logprob: -7.631972789764404
    7. 'direction' → logprob: -7.631972789764404
    8. 'contains' → logprob: -8.256973266601562
    9. 'proj' → logprob: -8.256973266601562
    10. '__' → logprob: -8.381973266601562

Token 665: '_' (ID: 62)
  Prédit: '_parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.0630275160074234
    2. '_' → logprob: -2.9380276203155518
    3. 'parallel' → logprob: -4.938027381896973
    4. '_vertical' → logprob: -7.188027381896973
    5. '_point' → logprob: -10.063027381896973
    6. 'Parallel' → logprob: -10.063027381896973
    7. ' parallel' → logprob: -10.688027381896973
    8. '_horizontal' → logprob: -10.688027381896973
    9. '_par' → logprob: -11.438027381896973
    10. '.parallel' → logprob: -11.563027381896973

Token 666: 'orth' (ID: 2909)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.21328961849212646
    2. 'orth' → logprob: -1.7132896184921265
    3. 'vertical' → logprob: -4.588289737701416
    4. 'point' → logprob: -7.463289737701416
    5. 'deg' → logprob: -7.588289737701416
    6. 'proper' → logprob: -8.338289260864258
    7. 'horizontal' → logprob: -9.088289260864258
    8. '_parallel' → logprob: -9.338289260864258
    9. '_' → logprob: -10.463289260864258
    10. 'ort' → logprob: -10.838289260864258

Token 667: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -14.250001907348633
    3. 'og' → logprob: -14.625001907348633
    4. 'agonal' → logprob: -15.625001907348633
    5. 'ogona' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.500001907348633
    7. '_parallel' → logprob: -17.750001907348633
    8. 'ogon' → logprob: -18.000001907348633
    9. '``' → logprob: -18.875001907348633
    10. 'ogal' → logprob: -19.000001907348633

Token 668: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016074994346126914
    2. ' (' → logprob: -9.000161170959473
    3. '(' → logprob: -10.250161170959473
    4. '(s' → logprob: -14.000161170959473
    5. '   ' → logprob: -14.625161170959473
    6. '(Vector' → logprob: -15.625161170959473
    7. '(Self' → logprob: -16.375160217285156
    8. '       ' → logprob: -16.500160217285156
    9. '(other' → logprob: -16.625160217285156
    10. '(S' → logprob: -16.875160217285156

Token 669: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00021474185632541776
    2. ',' → logprob: -9.250214576721191
    3. '(' → logprob: -10.000214576721191
    4. ' (' → logprob: -10.250214576721191
    5. '(other' → logprob: -10.625214576721191
    6. '(Vector' → logprob: -12.375214576721191
    7. ')(' → logprob: -12.500214576721191
    8. ')' → logprob: -12.875214576721191
    9. '   ' → logprob: -13.750214576721191
    10. '       ' → logprob: -14.250214576721191

Token 670: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01728423498570919
    2. ' self' → logprob: -4.267284393310547
    3. 'Vector' → logprob: -6.517284393310547
    4. 'Segment' → logprob: -7.267284393310547
    5. 'other' → logprob: -7.517284393310547
    6. '(self' → logprob: -8.267284393310547
    7. ' other' → logprob: -9.767284393310547
    8. 'lambda' → logprob: -10.892284393310547
    9. ' Vector' → logprob: -11.142284393310547
    10. ')' → logprob: -11.267284393310547

Token 671: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4939258396625519
    2. '(self' → logprob: -0.9939258098602295
    3. ')' → logprob: -3.9939258098602295
    4. ' (' → logprob: -7.868926048278809
    5. '   ' → logprob: -7.993926048278809
    6. ' ,' → logprob: -9.368926048278809
    7. 'self' → logprob: -9.368926048278809
    8. ':' → logprob: -9.618926048278809
    9. '(' → logprob: -10.243926048278809
    10. '(other' → logprob: -10.243926048278809

Token 672: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014667343348264694
    2. ' '' → logprob: -4.889667510986328
    3. ''S' → logprob: -5.639667510986328
    4. 'Segment' → logprob: -6.389667510986328
    5. ''s' → logprob: -6.514667510986328
    6. 'object' → logprob: -8.889667510986328
    7. ')' → logprob: -9.764667510986328
    8. 'Vector' → logprob: -10.264667510986328
    9. ' ' → logprob: -11.139667510986328
    10. '"' → logprob: -11.264667510986328

Token 673: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -5.438573680294212e-06
    2. ' Segment' → logprob: -12.500005722045898
    3. 'Vector' → logprob: -13.875005722045898
    4. '_segment' → logprob: -15.500005722045898
    5. 'Point' → logprob: -15.875005722045898
    6. 'egment' → logprob: -16.0000057220459
    7. 'segment' → logprob: -16.6250057220459
    8. 'Seg' → logprob: -16.7500057220459
    9. 'class' → logprob: -17.1250057220459
    10. 'Section' → logprob: -17.1250057220459

Token 674: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0181703120470047
    2. ')' → logprob: -4.018170356750488
    3. '")' → logprob: -10.893170356750488
    4. ''):
' → logprob: -14.143170356750488
    5. '`)' → logprob: -15.018170356750488
    6. ''' → logprob: -15.393170356750488
    7. ' ')' → logprob: -15.518170356750488
    8. '   ' → logprob: -15.518170356750488
    9. ')'' → logprob: -16.893169403076172
    10. 'self' → logprob: -17.393169403076172

Token 675: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005785631947219372
    2. ' ->' → logprob: -5.3807854652404785
    3. '->' → logprob: -6.8807854652404785
    4. ')->' → logprob: -9.630785942077637
    5. '   ' → logprob: -10.255785942077637
    6. ':' → logprob: -10.880785942077637
    7. '(self' → logprob: -12.130785942077637
    8. ',' → logprob: -12.755785942077637
    9. ' )' → logprob: -12.880785942077637
    10. '       ' → logprob: -13.005785942077637

Token 676: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -2.7610454708337784e-05
    2. ' bool' → logprob: -10.500027656555176
    3. ' ' → logprob: -17.37502670288086
    4. 'return' → logprob: -18.00002670288086
    5. ')' → logprob: -19.12502670288086
    6. '   ' → logprob: -19.25002670288086
    7. 'float' → logprob: -19.37502670288086
    8. '<bool' → logprob: -20.00002670288086
    9. '  ' → logprob: -20.50002670288086
    10. '
' → logprob: -20.50002670288086

Token 677: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3539617955684662
    2. '       ' → logprob: -1.4789618253707886
    3. ':
' → logprob: -2.853961706161499
    4. '   ' → logprob: -5.228961944580078
    5. ')' → logprob: -5.478961944580078
    6. '):' → logprob: -6.853961944580078
    7. '):
' → logprob: -7.478961944580078
    8. ' ->' → logprob: -8.353961944580078
    9. '(self' → logprob: -8.478961944580078
    10. ':return' → logprob: -8.478961944580078

Token 678: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003044802288059145
    2. 'return' → logprob: -8.750304222106934
    3. '   ' → logprob: -8.875304222106934
    4. ' return' → logprob: -12.000304222106934
    5. '```' → logprob: -17.37530517578125
    6. '	return' → logprob: -17.62530517578125
    7. ')' → logprob: -19.25030517578125
    8. '	   ' → logprob: -19.50030517578125
    9. '	' → logprob: -19.75030517578125
    10. '0' → logprob: -19.87530517578125

Token 679: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004138837568461895
    2. '       ' → logprob: -5.504138946533203
    3. ' return' → logprob: -9.754138946533203
    4. '   ' → logprob: -13.004138946533203
    5. '
' → logprob: -17.004138946533203
    6. '	return' → logprob: -17.379138946533203
    7. '           ' → logprob: -17.879138946533203
    8. ' ' → logprob: -18.754138946533203
    9. '        
' → logprob: -19.129138946533203
    10. '```' → logprob: -19.379138946533203

Token 680: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005310961976647377
    2. ' self' → logprob: -5.255311012268066
    3. 'float' → logprob: -9.505311012268066
    4. '   ' → logprob: -13.130311012268066
    5. '	self' → logprob: -15.130311012268066
    6. '(self' → logprob: -15.380311012268066
    7. ' float' → logprob: -15.380311012268066
    8. '       ' → logprob: -16.63031005859375
    9. ' ' → logprob: -17.00531005859375
    10. '[self' → logprob: -17.88031005859375

Token 681: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -4.811348480870947e-05
    2. 'vector' → logprob: -10.25004768371582
    3. '.' → logprob: -12.12504768371582
    4. 'Vector' → logprob: -12.12504768371582
    5. '.segment' → logprob: -14.75004768371582
    6. '.Vector' → logprob: -14.87504768371582
    7. ' vector' → logprob: -15.12504768371582
    8. ' .' → logprob: -15.25004768371582
    9. '   ' → logprob: -15.37504768371582
    10. '_vector' → logprob: -16.00004768371582

Token 682: '().' (ID: 1454)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.029796656221151352
    2. '().' → logprob: -3.529796600341797
    3. '.' → logprob: -10.404796600341797
    4. ' .' → logprob: -11.404796600341797
    5. ').' → logprob: -12.904796600341797
    6. '.cross' → logprob: -14.029796600341797
    7. '   ' → logprob: -14.404796600341797
    8. '.dot' → logprob: -15.529796600341797
    9. ' ().' → logprob: -16.279796600341797
    10. 'is' → logprob: -16.404796600341797

Token 683: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -6.704273118884885e-07
    2. 'dot' → logprob: -14.250000953674316
    3. ' is' → logprob: -17.75
    4. '.is' → logprob: -19.125
    5. 'cross' → logprob: -19.875
    6. '_is' → logprob: -20.375
    7. '	is' → logprob: -21.125
    8. '```' → logprob: -21.75
    9. ',is' → logprob: -22.625
    10. '"is' → logprob: -22.75

Token 684: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0036580299492925406
    2. 'orth' → logprob: -5.628657817840576
    3. 'ort' → logprob: -9.878658294677734
    4. '_parallel' → logprob: -13.128658294677734
    5. '```' → logprob: -13.378658294677734
    6. 'Orth' → logprob: -13.503658294677734
    7. ' orth' → logprob: -14.378658294677734
    8. 'parallel' → logprob: -15.378658294677734
    9. 'ORTH' → logprob: -15.628658294677734
    10. 'oth' → logprob: -16.503658294677734

Token 685: 'orth' (ID: 2909)
  Prédit: 'orth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orth' → logprob: -5.512236498361744e-07
    2. 'ort' → logprob: -14.875000953674316
    3. 'Orth' → logprob: -16.125
    4. 'parallel' → logprob: -16.625
    5. ' orth' → logprob: -17.625
    6. '_' → logprob: -19.75
    7. 'oth' → logprob: -19.875
    8. 'ORTH' → logprob: -20.875
    9. '```' → logprob: -22.125
    10. 'is' → logprob: -22.25

Token 686: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -2.339278580620885e-06
    2. 'agonal' → logprob: -14.125001907348633
    3. 'ogal' → logprob: -14.250001907348633
    4. 'og' → logprob: -14.500001907348633
    5. 'ogo' → logprob: -15.375001907348633
    6. 'ogon' → logprob: -16.625001907348633
    7. 'ogona' → logprob: -16.750001907348633
    8. '   ' → logprob: -17.375001907348633
    9. 'onal' → logprob: -18.250001907348633
    10. '```' → logprob: -18.375001907348633

Token 687: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -5.037835580878891e-05
    2. '(' → logprob: -10.50005054473877
    3. ' (' → logprob: -11.00005054473877
    4. '(self' → logprob: -12.75005054473877
    5. 'other' → logprob: -13.50005054473877
    6. '((' → logprob: -13.87505054473877
    7. '()(' → logprob: -14.75005054473877
    8. '(
' → logprob: -16.125049591064453
    9. '(that' → logprob: -16.625049591064453
    10. ' ' → logprob: -17.125049591064453

Token 688: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.38704290986061096
    2. '().' → logprob: -1.1370428800582886
    3. '(vector' → logprob: -9.387042999267578
    4. 'vector' → logprob: -9.887042999267578
    5. 'Vector' → logprob: -11.762042999267578
    6. '(self' → logprob: -11.762042999267578
    7. '.' → logprob: -11.887042999267578
    8. '   ' → logprob: -12.262042999267578
    9. ' vector' → logprob: -13.012042999267578
    10. '.segment' → logprob: -13.262042999267578

Token 689: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -3.8219583075260743e-05
    2. '()' → logprob: -11.250038146972656
    3. '())
' → logprob: -11.250038146972656
    4. ')' → logprob: -11.500038146972656
    5. ' ())' → logprob: -13.250038146972656
    6. '())

' → logprob: -15.625038146972656
    7. '())
' → logprob: -17.500038146972656
    8. '(' → logprob: -17.625038146972656
    9. '();)' → logprob: -18.000038146972656
    10. '());' → logprob: -18.375038146972656

Token 690: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008813816122710705
    2. ' def' → logprob: -5.508813858032227
    3. 'def' → logprob: -6.008813858032227
    4. '<|end|>' → logprob: -6.258813858032227
    5. '
' → logprob: -8.508813858032227
    6. '    
' → logprob: -9.633813858032227
    7. ')' → logprob: -10.758813858032227
    8. '```' → logprob: -11.008813858032227
    9. ' ' → logprob: -11.258813858032227
    10. '  ' → logprob: -11.508813858032227

Token 691: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00572197837755084
    2. ' def' → logprob: -5.2557220458984375
    3. '   ' → logprob: -7.6307220458984375
    4. '	def' → logprob: -13.380722045898438
    5. ' ' → logprob: -15.255722045898438
    6. '
' → logprob: -15.255722045898438
    7. '```' → logprob: -15.255722045898438
    8. '<|end|>' → logprob: -16.505722045898438
    9. '    
' → logprob: -16.630722045898438
    10. ':def' → logprob: -16.880722045898438

Token 692: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.008415993303060532
    2. ' is' → logprob: -4.883416175842285
    3. 'def' → logprob: -7.133416175842285
    4. ' def' → logprob: -11.758416175842285
    5. '   ' → logprob: -13.758416175842285
    6. '
' → logprob: -14.258416175842285
    7. ' ' → logprob: -14.633416175842285
    8. '```' → logprob: -15.195916175842285
    9. '.is' → logprob: -15.508416175842285
    10. '	is' → logprob: -15.758416175842285

Token 693: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -1.6405310816480778e-05
    2. 'parallel' → logprob: -12.000016212463379
    3. ' parallel' → logprob: -12.125016212463379
    4. 'Parallel' → logprob: -13.000016212463379
    5. '.parallel' → logprob: -13.625016212463379
    6. '_par' → logprob: -14.125016212463379
    7. 'def' → logprob: -16.250017166137695
    8. '__' → logprob: -16.625017166137695
    9. '_partial' → logprob: -16.875017166137695
    10. '_equal' → logprob: -17.125017166137695

Token 694: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001669485354796052
    2. '(' → logprob: -8.750166893005371
    3. '(other' → logprob: -12.250166893005371
    4. '(s' → logprob: -13.375166893005371
    5. ' (' → logprob: -13.375166893005371
    6. '(
' → logprob: -15.375166893005371
    7. 'self' → logprob: -16.125167846679688
    8. '(se' → logprob: -17.125167846679688
    9. '(Self' → logprob: -17.375167846679688
    10. '(the' → logprob: -17.500167846679688

Token 695: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.3664780259132385
    2. '(self' → logprob: -1.2414779663085938
    3. '(' → logprob: -4.116477966308594
    4. ')' → logprob: -6.741477966308594
    5. ' (' → logprob: -8.616477966308594
    6. ',' → logprob: -9.366477966308594
    7. ')(' → logprob: -9.991477966308594
    8. 'self' → logprob: -10.491477966308594
    9. '(
' → logprob: -11.366477966308594
    10. 'other' → logprob: -11.866477966308594

Token 696: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00047630956396460533
    2. ' other' → logprob: -7.750476360321045
    3. 'self' → logprob: -10.000475883483887
    4. '(other' → logprob: -15.375475883483887
    5. 'Other' → logprob: -17.125476837158203
    6. '.other' → logprob: -17.375476837158203
    7. ' self' → logprob: -17.750476837158203
    8. '_other' → logprob: -19.500476837158203
    9. '   ' → logprob: -21.875476837158203
    10. ' ' → logprob: -22.125476837158203

Token 697: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10271177440881729
    2. '('' → logprob: -2.3527116775512695
    3. ')' → logprob: -6.6027116775512695
    4. ''' → logprob: -8.22771167755127
    5. ' ('' → logprob: -8.22771167755127
    6. '(' → logprob: -8.85271167755127
    7. '):' → logprob: -9.35271167755127
    8. '   ' → logprob: -9.47771167755127
    9. '(self' → logprob: -9.60271167755127
    10. ' :' → logprob: -9.72771167755127

Token 698: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002847909927368164
    2. ' '' → logprob: -5.877847671508789
    3. 'Segment' → logprob: -11.252847671508789
    4. ''S' → logprob: -11.627847671508789
    5. ''s' → logprob: -12.502847671508789
    6. ')' → logprob: -12.627847671508789
    7. '   ' → logprob: -12.752847671508789
    8. '['' → logprob: -12.877847671508789
    9. ' ' → logprob: -13.127847671508789
    10. '`' → logprob: -13.877847671508789

Token 699: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -6.277553620748222e-05
    2. ''' → logprob: -10.625062942504883
    3. ''S' → logprob: -10.625062942504883
    4. ' Segment' → logprob: -11.250062942504883
    5. ''s' → logprob: -14.125062942504883
    6. '_segment' → logprob: -16.000062942504883
    7. 'Point' → logprob: -16.250062942504883
    8. 'Seg' → logprob: -16.375062942504883
    9. 'Segments' → logprob: -16.375062942504883
    10. 'Section' → logprob: -17.375062942504883

Token 700: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029756393283605576
    2. '')' → logprob: -3.5297563076019287
    3. ')'' → logprob: -12.654756546020508
    4. ''' → logprob: -13.654756546020508
    5. 'self' → logprob: -14.779756546020508
    6. '")' → logprob: -14.779756546020508
    7. ' )' → logprob: -15.654756546020508
    8. '`)' → logprob: -16.029756546020508
    9. ' ')' → logprob: -16.279756546020508
    10. ')`' → logprob: -16.404756546020508

Token 701: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04192613810300827
    2. '(self' → logprob: -3.416926145553589
    3. '(' → logprob: -5.79192590713501
    4. '   ' → logprob: -6.54192590713501
    5. '()' → logprob: -6.79192590713501
    6. ' ->' → logprob: -7.04192590713501
    7. '->' → logprob: -7.41692590713501
    8. 'self' → logprob: -8.166926383972168
    9. '       ' → logprob: -8.166926383972168
    10. ' self' → logprob: -8.916926383972168

Token 702: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.03443392738699913
    2. ' bool' → logprob: -3.4094338417053223
    3. ''' → logprob: -7.659433841705322
    4. ''s' → logprob: -8.65943431854248
    5. 'True' → logprob: -10.03443431854248
    6. ' '' → logprob: -10.65943431854248
    7. '(bool' → logprob: -11.03443431854248
    8. '('' → logprob: -11.15943431854248
    9. 'Point' → logprob: -11.53443431854248
    10. '<bool' → logprob: -12.40943431854248

Token 703: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0035312979016453028
    2. '       ' → logprob: -6.628531455993652
    3. 'self' → logprob: -6.753531455993652
    4. '   ' → logprob: -7.753531455993652
    5. '(' → logprob: -8.003531455993652
    6. 'return' → logprob: -9.128531455993652
    7. ')' → logprob: -9.128531455993652
    8. ' self' → logprob: -11.003531455993652
    9. '()' → logprob: -12.003531455993652
    10. ':' → logprob: -12.003531455993652

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.75896155834198
    2. 'return' → logprob: -0.75896155834198
    3. ' return' → logprob: -2.7589616775512695
    4. '   ' → logprob: -8.00896167755127
    5. '	return' → logprob: -12.88396167755127
    6. '```' → logprob: -13.63396167755127
    7. 'def' → logprob: -14.63396167755127
    8. '           ' → logprob: -14.88396167755127
    9. '     ' → logprob: -15.38396167755127
    10. ' ' → logprob: -16.008960723876953

Token 705: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006920627201907337
    2. '       ' → logprob: -7.750691890716553
    3. ' return' → logprob: -8.250692367553711
    4. '   ' → logprob: -15.375692367553711
    5. '```' → logprob: -18.12569236755371
    6. 'def' → logprob: -18.25069236755371
    7. '	return' → logprob: -18.37569236755371
    8. '
' → logprob: -18.62569236755371
    9. '           ' → logprob: -20.12569236755371
    10. 'eturn' → logprob: -20.50069236755371

Token 706: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019288709154352546
    2. ' self' → logprob: -6.251928806304932
    3. '(self' → logprob: -15.75192928314209
    4. '	self' → logprob: -16.376928329467773
    5. 'Self' → logprob: -18.001928329467773
    6. '   ' → logprob: -18.376928329467773
    7. 'other' → logprob: -18.501928329467773
    8. '
' → logprob: -18.751928329467773
    9. '[self' → logprob: -18.876928329467773
    10. ' ' → logprob: -19.001928329467773

Token 707: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -4.584861744660884e-05
    2. 'vector' → logprob: -10.000045776367188
    3. '.is' → logprob: -15.500045776367188
    4. ' vector' → logprob: -17.000045776367188
    5. 'Vector' → logprob: -17.375045776367188
    6. '.' → logprob: -17.625045776367188
    7. '	vector' → logprob: -18.500045776367188
    8. '_vector' → logprob: -18.875045776367188
    9. '.Vector' → logprob: -20.125045776367188
    10. '<vector' → logprob: -21.500045776367188

Token 708: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -15.75
    3. '().__' → logprob: -18.75
    4. ' ().' → logprob: -18.75
    5. '.is' → logprob: -18.75
    6. '.' → logprob: -20.875
    7. '(' → logprob: -21.625
    8. '()
' → logprob: -22.25
    9. '```' → logprob: -22.875
    10. '().
' → logprob: -23.0

Token 709: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -2.2200749754119897e-06
    2. ' is' → logprob: -13.500001907348633
    3. '.is' → logprob: -14.500001907348633
    4. '```' → logprob: -16.625001907348633
    5. '	is' → logprob: -17.125001907348633
    6. '(is' → logprob: -18.000001907348633
    7. '"is' → logprob: -18.875001907348633
    8. '   ' → logprob: -19.250001907348633
    9. '
' → logprob: -19.375001907348633
    10. '_is' → logprob: -19.500001907348633

Token 710: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.00015943869948387146
    2. 'parallel' → logprob: -8.75015926361084
    3. ' parallel' → logprob: -14.37515926361084
    4. 'Parallel' → logprob: -15.50015926361084
    5. '.parallel' → logprob: -15.62515926361084
    6. '_' → logprob: -17.750160217285156
    7. '```' → logprob: -18.250160217285156
    8. '_vector' → logprob: -18.750160217285156
    9. '_par' → logprob: -18.750160217285156
    10. 'def' → logprob: -20.000160217285156

Token 711: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.875000953674316
    3. 'other' → logprob: -15.750000953674316
    4. ' (' → logprob: -18.625
    5. ' other' → logprob: -19.375
    6. '(object' → logprob: -20.375
    7. '(
' → logprob: -21.125
    8. '()(' → logprob: -21.25
    9. '```' → logprob: -21.25
    10. 'Other' → logprob: -22.125

Token 712: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.25049903988838196
    2. '().' → logprob: -2.1254990100860596
    3. '(vector' → logprob: -3.3754990100860596
    4. '(' → logprob: -3.6254990100860596
    5. '(other' → logprob: -3.6254990100860596
    6. 'vector' → logprob: -4.500499248504639
    7. 'Vector' → logprob: -6.625499248504639
    8. ' vector' → logprob: -7.375499248504639
    9. '.' → logprob: -8.00049877166748
    10. '.Vector' → logprob: -8.00049877166748

Token 713: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00013846253568772227
    2. '()' → logprob: -9.250138282775879
    3. ')' → logprob: -10.250138282775879
    4. '())
' → logprob: -12.500138282775879
    5. ' ())' → logprob: -12.875138282775879
    6. '())

' → logprob: -14.750138282775879
    7. '();)' → logprob: -16.875139236450195
    8. '(' → logprob: -17.000139236450195
    9. '()))' → logprob: -17.500139236450195
    10. '(),' → logprob: -17.500139236450195

Token 714: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005831506568938494
    2. '<|end|>' → logprob: -5.630831718444824
    3. '
' → logprob: -6.255831718444824
    4. '    
' → logprob: -9.005831718444824
    5. '```' → logprob: -9.755831718444824
    6. ')' → logprob: -10.130831718444824
    7. '<|end|>' → logprob: -10.505831718444824
    8. 'def' → logprob: -11.255831718444824
    9. '#' → logprob: -11.880831718444824
    10. '(' → logprob: -12.005831718444824

Token 715: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.21809624135494232
    2. '   ' → logprob: -1.7180962562561035
    3. '<|end|>' → logprob: -4.5930962562561035
    4. '
' → logprob: -5.8430962562561035
    5. ' def' → logprob: -7.2180962562561035
    6. '#' → logprob: -7.3430962562561035
    7. ')' → logprob: -7.4680962562561035
    8. '```' → logprob: -7.7180962562561035
    9. 'class' → logprob: -8.468095779418945
    10. '<|end|>' → logprob: -8.593095779418945

Token 716: ' projection' (ID: 41244)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.9599454402923584
    2. 'project' → logprob: -1.5849454402923584
    3. 'point' → logprob: -2.0849454402923584
    4. 'proj' → logprob: -2.4599454402923584
    5. 'projection' → logprob: -2.5849454402923584
    6. 'contains' → logprob: -3.0849454402923584
    7. '__' → logprob: -3.3349454402923584
    8. 'distance' → logprob: -4.4599456787109375
    9. 'get' → logprob: -5.0849456787109375
    10. 'proper' → logprob: -5.7099456787109375

Token 717: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.082895273109898e-05
    2. '(' → logprob: -10.625030517578125
    3. '   ' → logprob: -12.375030517578125
    4. ' (' → logprob: -14.000030517578125
    5. '(s' → logprob: -14.625030517578125
    6. 'self' → logprob: -14.750030517578125
    7. 'def' → logprob: -15.500030517578125
    8. '(
' → logprob: -16.500030517578125
    9. '       ' → logprob: -16.750030517578125
    10. 's' → logprob: -17.000030517578125

Token 718: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0897955372929573
    2. '(self' → logprob: -2.4647955894470215
    3. '   ' → logprob: -7.8397955894470215
    4. ')' → logprob: -8.839795112609863
    5. 'def' → logprob: -9.089795112609863
    6. 'self' → logprob: -9.089795112609863
    7. '       ' → logprob: -10.839795112609863
    8. ',self' → logprob: -10.839795112609863
    9. 's' → logprob: -11.339795112609863
    10. ' (' → logprob: -11.839795112609863

Token 719: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.174517422914505
    2. 'point' → logprob: -2.0495173931121826
    3. 'self' → logprob: -3.9245173931121826
    4. 'other' → logprob: -4.549517631530762
    5. 'pt' → logprob: -7.174517631530762
    6. 'param' → logprob: -9.799517631530762
    7. 'Point' → logprob: -9.924517631530762
    8. ' p' → logprob: -10.424517631530762
    9. 'a' → logprob: -10.924517631530762
    10. '   ' → logprob: -11.299517631530762

Token 720: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10266207903623581
    2. '(self' → logprob: -2.8526620864868164
    3. ')' → logprob: -4.102662086486816
    4. ',' → logprob: -4.602662086486816
    5. 'self' → logprob: -5.102662086486816
    6. '   ' → logprob: -5.977662086486816
    7. '       ' → logprob: -6.227662086486816
    8. '1' → logprob: -7.227662086486816
    9. ' self' → logprob: -7.352662086486816
    10. '):' → logprob: -7.977662086486816

Token 721: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -9.925185440806672e-05
    2. ' Point' → logprob: -9.250099182128906
    3. 'oint' → logprob: -12.750099182128906
    4. '	Point' → logprob: -15.750099182128906
    5. ''' → logprob: -17.375099182128906
    6. '   ' → logprob: -17.500099182128906
    7. '_Point' → logprob: -18.500099182128906
    8. '.Point' → logprob: -19.000099182128906
    9. '_point' → logprob: -19.375099182128906
    10. '<Point' → logprob: -19.625099182128906

Token 722: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. '   ' → logprob: -13.625003814697266
    3. '')' → logprob: -13.875003814697266
    4. ',' → logprob: -14.250003814697266
    5. ' )' → logprob: -14.375003814697266
    6. ')->' → logprob: -16.125003814697266
    7. '       ' → logprob: -16.125003814697266
    8. ':' → logprob: -16.625003814697266
    9. ',)' → logprob: -16.875003814697266
    10. '")' → logprob: -17.625003814697266

Token 723: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.30571022629737854
    2. ' ->' → logprob: -1.9307101964950562
    3. ')' → logprob: -2.1807103157043457
    4. ':' → logprob: -5.680710315704346
    5. '   ' → logprob: -6.430710315704346
    6. '       ' → logprob: -8.680709838867188
    7. ')->' → logprob: -8.805709838867188
    8. ',' → logprob: -11.305709838867188
    9. '()' → logprob: -12.055709838867188
    10. '(self' → logprob: -12.305709838867188

Token 724: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.0445127372804563e-05
    2. ' Point' → logprob: -11.62501049041748
    3. ''' → logprob: -14.00001049041748
    4. 'Vector' → logprob: -14.75001049041748
    5. 'float' → logprob: -17.250009536743164
    6. '	Point' → logprob: -17.250009536743164
    7. '   ' → logprob: -18.000009536743164
    8. 'point' → logprob: -19.500009536743164
    9. '_Point' → logprob: -19.500009536743164
    10. '_point' → logprob: -19.500009536743164

Token 725: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7734028100967407
    2. '       ' → logprob: -0.7734028100967407
    3. ':
' → logprob: -3.773402690887451
    4. '   ' → logprob: -4.023402690887451
    5. '(self' → logprob: -4.023402690887451
    6. '->' → logprob: -4.648402690887451
    7. ')' → logprob: -5.773402690887451
    8. ' ->' → logprob: -6.273402690887451
    9. 'self' → logprob: -6.523402690887451
    10. '(' → logprob: -7.648402690887451

Token 726: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014393717981874943
    2. 'v' → logprob: -4.8893938064575195
    3. 'vec' → logprob: -5.6393938064575195
    4. 't' → logprob: -6.0143938064575195
    5. '   ' → logprob: -7.6393938064575195
    6. 'vector' → logprob: -9.63939380645752
    7. 'b' → logprob: -10.38939380645752
    8. 'ab' → logprob: -10.38939380645752
    9. 'u' → logprob: -10.63939380645752
    10. 's' → logprob: -11.01439380645752

Token 727: ' v' (ID: 323)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.038686688989400864
    2. 'r' → logprob: -3.288686752319336
    3. 'vec' → logprob: -7.788686752319336
    4. ' base' → logprob: -9.538686752319336
    5. '_base' → logprob: -9.663686752319336
    6. '   ' → logprob: -10.288686752319336
    7. 't' → logprob: -11.413686752319336
    8. 'v' (adapté à ' v') → logprob: -11.413686752319336
    9. 'proj' → logprob: -11.538686752319336
    10. 'basis' → logprob: -12.038686752319336

Token 728: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47415420413017273
    2. '=' → logprob: -0.9741542339324951
    3. '=v' → logprob: -10.724154472351074
    4. 'ector' → logprob: -10.974154472351074
    5. '=self' → logprob: -11.474154472351074
    6. '   ' → logprob: -11.724154472351074
    7. 'ect' → logprob: -12.224154472351074
    8. '=p' → logprob: -13.224154472351074
    9. '=(' → logprob: -13.474154472351074
    10. '1' → logprob: -13.474154472351074

Token 729: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.339278580620885e-06
    2. ' self' → logprob: -13.125001907348633
    3. '(self' → logprob: -15.250001907348633
    4. '	self' → logprob: -19.250001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '[self' → logprob: -20.250001907348633
    7. 'Self' → logprob: -21.250001907348633
    8. '  ' → logprob: -21.625001907348633
    9. 'Segment' → logprob: -21.625001907348633
    10. '=self' → logprob: -21.625001907348633

Token 730: '.vector' (ID: 104563)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.7752895951271057
    2. 'vector' → logprob: -1.025289535522461
    3. '.vector' → logprob: -1.775289535522461
    4. 'p' → logprob: -4.525289535522461
    5. ' vector' → logprob: -8.650289535522461
    6. 'Vector' → logprob: -9.525289535522461
    7. '.' → logprob: -9.650289535522461
    8. '2' → logprob: -9.900289535522461
    9. '   ' → logprob: -10.150289535522461
    10. '_vector' → logprob: -11.775289535522461

Token 731: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3884912133216858
    2. '()
' → logprob: -1.138491153717041
    3. '       ' → logprob: -6.638491153717041
    4. '   ' → logprob: -9.6384916305542
    5. '()
' → logprob: -9.7634916305542
    6. ' =' → logprob: -9.8884916305542
    7. 'v' → logprob: -10.3884916305542
    8. '().' → logprob: -10.5134916305542
    9. '()\' → logprob: -11.1384916305542
    10. '=' → logprob: -11.5134916305542

Token 732: '       ' (ID: 309)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.043310653418302536
    2. '       ' → logprob: -3.9183106422424316
    3. 'r' → logprob: -4.293310642242432
    4. 'u' → logprob: -5.168310642242432
    5. 'base' → logprob: -6.793310642242432
    6. '   ' → logprob: -7.418310642242432
    7. 'unit' → logprob: -8.16831111907959
    8. 'return' → logprob: -8.16831111907959
    9. 'w' → logprob: -8.29331111907959
    10. 'dp' → logprob: -8.66831111907959

Token 733: ' vp' (ID: 55177)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09715372323989868
    2. 'r' → logprob: -3.222153663635254
    3. 'base' → logprob: -3.847153663635254
    4. 'u' → logprob: -3.972153663635254
    5. 'return' → logprob: -4.597153663635254
    6. 'from' → logprob: -7.347153663635254
    7. 'w' → logprob: -7.847153663635254
    8. 'proj' → logprob: -8.097153663635254
    9. 'unit' → logprob: -8.597153663635254
    10. 'v' → logprob: -8.972153663635254

Token 734: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5970263481140137
    2. ' =' → logprob: -0.9720263481140137
    3. 'v' → logprob: -2.7220263481140137
    4. 'p' → logprob: -5.347026348114014
    5. 'ect' → logprob: -8.472026824951172
    6. '=v' → logprob: -8.722026824951172
    7. 'ector' → logprob: -9.347026824951172
    8. 'o' → logprob: -9.597026824951172
    9. 'dot' → logprob: -9.972026824951172
    10. ':' → logprob: -10.097026824951172

Token 735: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.702754474943504e-05
    2. 'Point' → logprob: -10.87503719329834
    3. ' p' → logprob: -11.37503719329834
    4. 'Vector' → logprob: -12.87503719329834
    5. 'v' → logprob: -13.12503719329834
    6. '(p' → logprob: -13.50003719329834
    7. '   ' → logprob: -15.62503719329834
    8. 'point' → logprob: -15.87503719329834
    9. '
' → logprob: -17.000036239624023
    10. '<p' → logprob: -17.125036239624023

Token 736: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931583285331726
    2. ' -' → logprob: -0.6931583285331726
    3. '-p' → logprob: -12.193158149719238
    4. '-self' → logprob: -13.443158149719238
    5. '-sub' → logprob: -13.943158149719238
    6. '-v' → logprob: -14.068158149719238
    7. ' ' → logprob: -14.318158149719238
    8. '-
' → logprob: -14.568158149719238
    9. '   ' → logprob: -14.818158149719238
    10. '-vector' → logprob: -15.193158149719238

Token 737: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.227250610711053e-05
    2. ' self' → logprob: -10.125041961669922
    3. '(self' → logprob: -13.750041961669922
    4. '       ' → logprob: -13.875041961669922
    5. '	self' → logprob: -16.500041961669922
    6. '[self' → logprob: -16.875041961669922
    7. '=self' → logprob: -17.250041961669922
    8. '<|end|>' → logprob: -17.250041961669922
    9. 'Point' → logprob: -18.375041961669922
    10. '
' → logprob: -19.000041961669922

Token 738: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.1279553291387856e-05
    2. '.' → logprob: -11.875011444091797
    3. 'p' → logprob: -12.375011444091797
    4. ' .' → logprob: -17.250011444091797
    5. '<p' → logprob: -17.875011444091797
    6. '.s' → logprob: -18.375011444091797
    7. ').' → logprob: -19.125011444091797
    8. '.pkl' → logprob: -19.375011444091797
    9. '   ' → logprob: -20.000011444091797
    10. '.py' → logprob: -20.125011444091797

Token 739: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'p' → logprob: -18.6875
    3. '2' → logprob: -18.8125
    4. '１' → logprob: -18.8125
    5. '۱' → logprob: -19.4375
    6. '```' → logprob: -19.875
    7. ' ' → logprob: -20.0
    8. '১' → logprob: -20.0625
    9. 's' → logprob: -20.1875
    10. '१' → logprob: -20.4375

Token 740: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08544905483722687
    2. '
' → logprob: -2.585448980331421
    3. 'return' → logprob: -5.96044921875
    4. 'v' → logprob: -6.21044921875
    5. ')' → logprob: -7.83544921875
    6. '<|end|>' → logprob: -7.96044921875
    7. '        
' → logprob: -8.08544921875
    8. '
' → logprob: -8.46044921875
    9. ';' → logprob: -9.83544921875
    10. ' return' → logprob: -9.96044921875

Token 741: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6823433041572571
    2. 'return' → logprob: -0.9323433041572571
    3. 't' → logprob: -2.4323432445526123
    4. '   ' → logprob: -5.307343482971191
    5. 'dot' → logprob: -5.807343482971191
    6. 'k' → logprob: -6.432343482971191
    7. 'r' → logprob: -7.807343482971191
    8. 'u' → logprob: -7.807343482971191
    9. 's' → logprob: -7.932343482971191
    10. ' return' → logprob: -8.182343482971191

Token 742: ' return' (ID: 622)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.770256519317627
    2. 'return' (adapté à ' return') → logprob: -0.770256519317627
    3. 'r' → logprob: -2.770256519317627
    4. 'k' → logprob: -5.395256519317627
    5. '   ' → logprob: -5.520256519317627
    6. 'proj' → logprob: -7.020256519317627
    7. 'dot' → logprob: -7.270256519317627
    8. 'scale' → logprob: -7.645256519317627
    9. 'sc' → logprob: -8.895256042480469
    10. 'd' → logprob: -9.270256042480469

Token 743: ' v' (ID: 323)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2233183042553719e-05
    2. ' self' → logprob: -11.375012397766113
    3. 'Point' → logprob: -14.500012397766113
    4. 'v' → logprob: -16.250011444091797
    5. '(self' → logprob: -16.625011444091797
    6. '   ' → logprob: -17.000011444091797
    7. '	self' → logprob: -18.125011444091797
    8. 'Self' → logprob: -18.500011444091797
    9. '```' → logprob: -18.750011444091797
    10. '
' → logprob: -18.875011444091797

Token 744: '.dot' (ID: 52692)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07828215509653091
    2. '*(' → logprob: -2.828282117843628
    3. ' *' → logprob: -4.828282356262207
    4. '*v' → logprob: -4.828282356262207
    5. '*((' → logprob: -10.078282356262207
    6. '*p' → logprob: -10.203282356262207
    7. '*self' → logprob: -10.453282356262207
    8. '   ' → logprob: -11.078282356262207
    9. '*object' → logprob: -11.203282356262207
    10. '
' → logprob: -11.828282356262207

Token 745: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -7.703443770878948e-06
    2. 'vp' → logprob: -11.875007629394531
    3. '(' → logprob: -15.000007629394531
    4. 'v' → logprob: -15.250007629394531
    5. '(p' → logprob: -16.25000762939453
    6. '((' → logprob: -17.12500762939453
    7. ' (' → logprob: -17.75000762939453
    8. '(
' → logprob: -17.75000762939453
    9. '```' → logprob: -18.37500762939453
    10. '
' → logprob: -18.87500762939453

Token 746: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.4121114822482923e-06
    2. '(p' → logprob: -14.000003814697266
    3. 'v' → logprob: -14.125003814697266
    4. '```' → logprob: -14.750003814697266
    5. ')' → logprob: -15.000003814697266
    6. '(v' → logprob: -15.375003814697266
    7. '(' → logprob: -15.375003814697266
    8. '   ' → logprob: -16.312503814697266
    9. '
' → logprob: -16.562503814697266
    10. 'vp' → logprob: -16.750003814697266

Token 747: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019614976190496236
    2. '   ' → logprob: -8.87519645690918
    3. ')/' → logprob: -10.25019645690918
    4. ' /' → logprob: -12.12519645690918
    5. '()' → logprob: -12.25019645690918
    6. '/' → logprob: -12.87519645690918
    7. '    ' → logprob: -13.12519645690918
    8. ')
' → logprob: -13.75019645690918
    9. '```' → logprob: -13.75019645690918
    10. ' )' → logprob: -14.00019645690918

Token 748: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.08222152292728424
    2. '/' → logprob: -2.582221508026123
    3. '/v' → logprob: -5.832221508026123
    4. ' *' → logprob: -9.332221984863281
    5. '*' → logprob: -9.332221984863281
    6. 'v' → logprob: -9.832221984863281
    7. '()' → logprob: -9.832221984863281
    8. '   ' → logprob: -9.957221984863281
    9. '(v' → logprob: -10.832221984863281
    10. '*v' → logprob: -11.707221984863281

Token 749: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.128163257315464e-07
    2. '(v' → logprob: -15.625
    3. ' v' → logprob: -17.0
    4. '	v' → logprob: -19.375
    5. ')v' → logprob: -20.625
    6. '   ' → logprob: -20.75
    7. '_v' → logprob: -22.125
    8. 'vector' → logprob: -22.25
    9. '<v' → logprob: -22.25
    10. '(' → logprob: -22.5

Token 750: '.norm' (ID: 73834)
  Prédit: '.norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.norm' → logprob: -7.3458322731312364e-06
    2. 'norm' → logprob: -11.875007629394531
    3. '.dot' → logprob: -16.50000762939453
    4. '.' → logprob: -16.62500762939453
    5. '.abs' → logprob: -16.87500762939453
    6. '
' → logprob: -17.12500762939453
    7. ' .' → logprob: -17.12500762939453
    8. '**' → logprob: -18.50000762939453
    9. '.v' → logprob: -18.62500762939453
    10. '.nom' → logprob: -18.87500762939453

Token 751: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.023293538717553e-05
    2. ' ()' → logprob: -10.875030517578125
    3. '(),' → logprob: -12.625030517578125
    4. '())' → logprob: -13.125030517578125
    5. '()
' → logprob: -13.375030517578125
    6. '(' → logprob: -13.375030517578125
    7. '()}' → logprob: -14.500030517578125
    8. '();' → logprob: -14.625030517578125
    9. '()`' → logprob: -14.875030517578125
    10. '()*' → logprob: -15.125030517578125

Token 752: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.15826241672039032
    2. '*' → logprob: -2.2832624912261963
    3. '*v' → logprob: -3.1582624912261963
    4. '*self' → logprob: -6.533262252807617
    5. '*p' → logprob: -8.158262252807617
    6. '*u' → logprob: -9.533262252807617
    7. '*object' → logprob: -10.033262252807617
    8. '   ' → logprob: -11.533262252807617
    9. '**' → logprob: -11.783262252807617
    10. '*w' → logprob: -11.908262252807617

Token 753: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.084206375409849e-05
    2. ' v' → logprob: -10.125041007995605
    3. 'Vector' → logprob: -14.875041007995605
    4. '	v' → logprob: -15.625041007995605
    5. 'vector' → logprob: -16.00004005432129
    6. '(v' → logprob: -16.12504005432129
    7. 'vq' → logprob: -17.75004005432129
    8. '<|end|>' → logprob: -17.75004005432129
    9. ')v' → logprob: -18.00004005432129
    10. '   ' → logprob: -19.87504005432129

Token 754: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 755: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.1689596148207784e-05
    2. ' self' → logprob: -9.875051498413086
    3. '(self' → logprob: -17.250051498413086
    4. 'Point' → logprob: -17.250051498413086
    5. 'Self' → logprob: -17.625051498413086
    6. '   ' → logprob: -17.875051498413086
    7. '[self' → logprob: -18.250051498413086
    8. '	self' → logprob: -18.750051498413086
    9. 'p' → logprob: -18.875051498413086
    10. '=self' → logprob: -19.500051498413086

Token 756: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.723973582556937e-05
    2. '.' → logprob: -11.000017166137695
    3. 'p' → logprob: -14.875017166137695
    4. ' .' → logprob: -16.250017166137695
    5. ').' → logprob: -19.500017166137695
    6. '<p' → logprob: -19.500017166137695
    7. '.py' → logprob: -19.750017166137695
    8. '[' → logprob: -19.875017166137695
    9. '.п' → logprob: -19.875017166137695
    10. '```' → logprob: -20.000017166137695

Token 757: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'p' → logprob: -15.375
    3. '   ' → logprob: -17.25
    4. ' ' → logprob: -17.75
    5. 's' → logprob: -18.125
    6. 'self' → logprob: -18.25
    7. '```' → logprob: -18.25
    8. '.' → logprob: -18.8125
    9. 'unction' → logprob: -19.0
    10. '...' → logprob: -19.0625

Token 758: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 759: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1866130530834198
    2. '<|end|>' → logprob: -2.186613082885742
    3. 'def' → logprob: -3.061613082885742
    4. ')' → logprob: -5.436613082885742
    5. '
' → logprob: -6.311613082885742
    6. '```' → logprob: -6.561613082885742
    7. ' def' → logprob: -7.061613082885742
    8. ' ' → logprob: -7.061613082885742
    9. '    
' → logprob: -7.561613082885742
    10. '.' → logprob: -8.186613082885742

Token 760: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00031854258850216866
    2. '   ' → logprob: -8.75031852722168
    3. ' def' → logprob: -9.00031852722168
    4. '
' → logprob: -10.37531852722168
    5. '    
' → logprob: -13.25031852722168
    6. '```' → logprob: -13.75031852722168
    7. '	def' → logprob: -13.75031852722168
    8. '#' → logprob: -14.50031852722168
    9. ')' → logprob: -15.62531852722168
    10. 'return' → logprob: -15.87531852722168

Token 761: ' reflection' (ID: 39755)
  Prédit: 'reflection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reflection' → logprob: -0.14587001502513885
    2. 'reflect' → logprob: -2.6458699703216553
    3. 'projection' → logprob: -3.8958699703216553
    4. 'distance' → logprob: -4.520870208740234
    5. 'vertical' → logprob: -4.895870208740234
    6. 'project' → logprob: -5.145870208740234
    7. 'contains' → logprob: -5.395870208740234
    8. 'is' → logprob: -6.020870208740234
    9. 'ref' → logprob: -6.145870208740234
    10. 're' → logprob: -6.270870208740234

Token 762: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5213274309644476e-05
    2. '   ' → logprob: -11.750015258789062
    3. '(' → logprob: -12.125015258789062
    4. ' (' → logprob: -14.125015258789062
    5. 'self' → logprob: -14.125015258789062
    6. '(s' → logprob: -16.125015258789062
    7. '       ' → logprob: -16.875015258789062
    8. ' ' → logprob: -17.000015258789062
    9. '(
' → logprob: -17.250015258789062
    10. ' self' → logprob: -17.625015258789062

Token 763: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005473146447911859
    2. 'self' → logprob: -8.625547409057617
    3. ')' → logprob: -8.875547409057617
    4. '   ' → logprob: -8.875547409057617
    5. '       ' → logprob: -10.250547409057617
    6. '(' → logprob: -10.750547409057617
    7. ' (' → logprob: -11.500547409057617
    8. ',' → logprob: -12.000547409057617
    9. ')(' → logprob: -12.000547409057617
    10. ' self' → logprob: -13.125547409057617

Token 764: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.021487072110176086
    2. 'self' → logprob: -4.146487236022949
    3. ' p' → logprob: -5.271487236022949
    4. ' self' → logprob: -8.14648723602295
    5. '   ' → logprob: -12.14648723602295
    6. ' ' → logprob: -12.89648723602295
    7. '(self' → logprob: -13.02148723602295
    8. 'point' → logprob: -13.64648723602295
    9. '	p' → logprob: -15.02148723602295
    10. '	self' → logprob: -15.77148723602295

Token 765: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.8444881536415778e-05
    2. ')' → logprob: -10.750028610229492
    3. ' :' → logprob: -12.875028610229492
    4. '):' → logprob: -12.875028610229492
    5. '   ' → logprob: -13.875028610229492
    6. ',' → logprob: -15.500028610229492
    7. 'p' → logprob: -15.625028610229492
    8. ' p' → logprob: -16.250028610229492
    9. 'self' → logprob: -16.500028610229492
    10. '       ' → logprob: -16.625028610229492

Token 766: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.5491004129871726e-05
    2. ' Point' → logprob: -10.000045776367188
    3. '	Point' → logprob: -19.000045776367188
    4. '   ' → logprob: -19.875045776367188
    5. '(Point' → logprob: -20.625045776367188
    6. '_Point' → logprob: -20.625045776367188
    7. '_point' → logprob: -20.875045776367188
    8. 'point' → logprob: -21.250045776367188
    9. '.Point' → logprob: -21.375045776367188
    10. 'p' → logprob: -21.500045776367188

Token 767: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. '   ' → logprob: -12.625007629394531
    3. ':' → logprob: -12.750007629394531
    4. ' )' → logprob: -14.125007629394531
    5. '')' → logprob: -15.000007629394531
    6. '       ' → logprob: -16.37500762939453
    7. ' ' → logprob: -17.12500762939453
    8. '```' → logprob: -17.12500762939453
    9. 'p' → logprob: -17.37500762939453
    10. '`)' → logprob: -17.62500762939453

Token 768: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005803655367344618
    2. '->' → logprob: -5.25580358505249
    3. ' ->' → logprob: -7.50580358505249
    4. ':' → logprob: -11.380804061889648
    5. '   ' → logprob: -12.255804061889648
    6. ')->' → logprob: -13.630804061889648
    7. '')' → logprob: -14.505804061889648
    8. ' )' → logprob: -14.755804061889648
    9. '`)' → logprob: -14.880804061889648
    10. '       ' → logprob: -15.505804061889648

Token 769: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0007565005216747522
    2. ' Point' → logprob: -7.25075626373291
    3. 'p' → logprob: -10.12575626373291
    4. 'self' → logprob: -12.25075626373291
    5. 'point' → logprob: -14.87575626373291
    6. ' ' → logprob: -15.12575626373291
    7. '2' → logprob: -15.12575626373291
    8. '   ' → logprob: -15.37575626373291
    9. 'def' → logprob: -16.125757217407227
    10. '_point' → logprob: -16.125757217407227

Token 770: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19571426510810852
    2. ':
' → logprob: -2.320714235305786
    3. '       ' → logprob: -2.945714235305786
    4. ')' → logprob: -4.320714473724365
    5. '   ' → logprob: -5.070714473724365
    6. '(' → logprob: -6.070714473724365
    7. '(self' → logprob: -6.070714473724365
    8. '):' → logprob: -7.320714473724365
    9. '->' → logprob: -7.570714473724365
    10. '):
' → logprob: -7.820714473724365

Token 771: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7078855633735657
    2. '   ' → logprob: -0.9578855633735657
    3. 'return' → logprob: -2.207885503768921
    4. 'r' → logprob: -5.5828857421875
    5. 'q' → logprob: -5.7078857421875
    6. 'proj' → logprob: -6.2078857421875
    7. 't' → logprob: -6.5828857421875
    8. ' return' → logprob: -6.5828857421875
    9. '2' → logprob: -7.4578857421875
    10. ' ' → logprob: -7.5828857421875

Token 772: ' x' (ID: 1215)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.45217081904411316
    2. 'return' → logprob: -1.0771708488464355
    3. 'proj' → logprob: -4.4521708488464355
    4. 'q' → logprob: -4.8271708488464355
    5. 'projection' → logprob: -6.7021708488464355
    6. '2' → logprob: -7.2021708488464355
    7. 'tmp' → logprob: -8.077170372009277
    8. 'p' → logprob: -8.077170372009277
    9. 't' → logprob: -8.202170372009277
    10. 'rp' → logprob: -9.577170372009277

Token 773: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6081984043121338
    2. ' =' → logprob: -0.8581984043121338
    3. '_proj' → logprob: -3.858198404312134
    4. 'r' → logprob: -5.483198165893555
    5. 'proj' → logprob: -5.858198165893555
    6. '2' → logprob: -6.858198165893555
    7. '_projection' → logprob: -7.358198165893555
    8. 'p' → logprob: -7.733198165893555
    9. 'projection' → logprob: -7.858198165893555
    10. '1' → logprob: -8.483198165893555

Token 774: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007665063603781164
    2. 'p' → logprob: -7.625766277313232
    3. '2' → logprob: -8.62576675415039
    4. ' self' → logprob: -9.25076675415039
    5. 'Point' → logprob: -13.25076675415039
    6. ' ' → logprob: -14.75076675415039
    7. '(self' → logprob: -15.12576675415039
    8. 'Self' → logprob: -15.87576675415039
    9. '	self' → logprob: -16.00076675415039
    10. ' p' → logprob: -17.00076675415039

Token 775: '.pro' (ID: 3231)
  Prédit: '.pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pro' → logprob: -0.0009161015041172504
    2. 'projection' → logprob: -7.000916004180908
    3. ' .' → logprob: -13.250916481018066
    4. '.project' → logprob: -13.625916481018066
    5. '(pro' → logprob: -15.125916481018066
    6. ' projection' → logprob: -15.250916481018066
    7. 'Projection' → logprob: -15.500916481018066
    8. '.' → logprob: -15.500916481018066
    9. '.p' → logprob: -15.750916481018066
    10. '#' → logprob: -16.12591552734375

Token 776: 'jection' (ID: 11533)
  Prédit: 'jection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jection' → logprob: -5.5577775128767826e-06
    2. 'ject' → logprob: -12.375005722045898
    3. 'j' → logprob: -14.000005722045898
    4. 'jected' → logprob: -15.250005722045898
    5. 'tection' → logprob: -16.7500057220459
    6. 'rection' → logprob: -17.3750057220459
    7. '```' → logprob: -18.2500057220459
    8. 'jek' → logprob: -18.2500057220459
    9. 'JECTION' → logprob: -18.2500057220459
    10. 'projection' → logprob: -18.6250057220459

Token 777: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.259079363080673e-05
    2. '(' → logprob: -11.500012397766113
    3. ' (' → logprob: -13.250012397766113
    4. '(
' → logprob: -15.625012397766113
    5. 'p' → logprob: -16.00001335144043
    6. '(point' → logprob: -16.00001335144043
    7. '(x' → logprob: -16.12501335144043
    8. '(P' → logprob: -16.87501335144043
    9. '((' → logprob: -17.87501335144043
    10. '
' → logprob: -18.00001335144043

Token 778: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002909488743171096
    2. ')*' → logprob: -6.5029096603393555
    3. ')
' → logprob: -7.3779096603393555
    4. '*' → logprob: -7.3779096603393555
    5. 'p' → logprob: -9.627909660339355
    6. ' *' → logprob: -10.877909660339355
    7. '2' → logprob: -11.627909660339355
    8. '0' → logprob: -11.627909660339355
    9. ')
' → logprob: -12.002909660339355
    10. ' )' → logprob: -12.252909660339355

Token 779: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0026290426030755043
    2. ' return' → logprob: -6.127629280090332
    3. '2' → logprob: -8.502629280090332
    4. '   ' → logprob: -8.752629280090332
    5. '	return' → logprob: -10.002629280090332
    6. '       ' → logprob: -10.377629280090332
    7. ' ' → logprob: -12.752629280090332
    8. '	' → logprob: -13.627629280090332
    9. '6' → logprob: -14.252629280090332
    10. '3' → logprob: -14.877629280090332

Token 780: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -9.984787902794778e-05
    2. ' return' → logprob: -9.250100135803223
    3. '   ' → logprob: -13.375100135803223
    4. '2' → logprob: -13.750100135803223
    5. '	return' → logprob: -14.125100135803223
    6. ' ' → logprob: -16.000099182128906
    7. 'x' → logprob: -16.625099182128906
    8. 'r' → logprob: -17.375099182128906
    9. 'print' → logprob: -18.000099182128906
    10. ')return' → logprob: -18.000099182128906

Token 781: ' p' (ID: 275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000545526563655585
    2. 'Point' → logprob: -7.750545501708984
    3. '2' → logprob: -9.375545501708984
    4. ' x' → logprob: -11.000545501708984
    5. '(x' → logprob: -12.000545501708984
    6. 'Segment' → logprob: -13.125545501708984
    7. ' Point' → logprob: -13.375545501708984
    8. '(' → logprob: -13.625545501708984
    9. 'self' → logprob: -14.000545501708984
    10. 'p' → logprob: -14.000545501708984

Token 782: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.006706139072775841
    2. '+' → logprob: -5.256706237792969
    3. ' *' → logprob: -7.006706237792969
    4. ' +' → logprob: -7.506706237792969
    5. '2' → logprob: -12.256706237792969
    6. '+x' → logprob: -12.381706237792969
    7. '1' → logprob: -13.006706237792969
    8. '__' → logprob: -14.006706237792969
    9. ' ' → logprob: -14.131706237792969
    10. '0' → logprob: -14.131706237792969

Token 783: ' ' (ID: 220)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.021112820133566856
    2. '2' → logprob: -3.8961129188537598
    3. ' (' → logprob: -7.52111291885376
    4. ' ' → logprob: -11.521112442016602
    5. '(p' → logprob: -11.771112442016602
    6. '(' → logprob: -12.021112442016602
    7. '(Point' → logprob: -13.146112442016602
    8. '   ' → logprob: -14.271112442016602
    9. '(point' → logprob: -14.646112442016602
    10. '(points' → logprob: -14.896112442016602

Token 784: '2' (ID: 17)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.043448545038700104
    2. '2' → logprob: -3.1684484481811523
    3. ' (' → logprob: -7.793448448181152
    4. ' ' → logprob: -11.293448448181152
    5. '(' → logprob: -11.668448448181152
    6. '(Point' → logprob: -12.043448448181152
    7. '(p' → logprob: -12.418448448181152
    8. '1' → logprob: -13.543448448181152
    9. '   ' → logprob: -14.293448448181152
    10. '
' → logprob: -14.668448448181152

Token 785: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12709388136863708
    2. '*(' → logprob: -2.12709379196167
    3. '(x' → logprob: -9.377094268798828
    4. ' *' → logprob: -9.877094268798828
    5. '*x' → logprob: -10.502094268798828
    6. '(' → logprob: -14.627094268798828
    7. '0' → logprob: -14.752094268798828
    8. '(*' → logprob: -14.877094268798828
    9. '**' → logprob: -15.127094268798828
    10. '`' → logprob: -15.377094268798828

Token 786: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0001246348983841017
    2. ' (' → logprob: -9.00012493133545
    3. '(' → logprob: -15.00012493133545
    4. '*(' → logprob: -15.37512493133545
    5. '0' → logprob: -16.125123977661133
    6. '(xs' → logprob: -16.250123977661133
    7. '(Point' → logprob: -16.375123977661133
    8. 'Vector' → logprob: -16.750123977661133
    9. 'x' → logprob: -16.750123977661133
    10. '```' → logprob: -16.875123977661133

Token 787: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.576149046421051
    2. 'x' → logprob: -0.826149046421051
    3. ' x' → logprob: -8.951148986816406
    4. ' (' → logprob: -9.826148986816406
    5. '(' → logprob: -11.076148986816406
    6. '
' → logprob: -13.451148986816406
    7. '{x' → logprob: -13.451148986816406
    8. '"x' → logprob: -13.451148986816406
    9. ')x' → logprob: -13.826148986816406
    10. '	x' → logprob: -13.951148986816406

Token 788: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018697423860430717
    2. '-' → logprob: -4.018697261810303
    3. '-x' → logprob: -7.518697261810303
    4. 'x' → logprob: -13.268697738647461
    5. ' ' → logprob: -14.143697738647461
    6. '-ref' → logprob: -14.393697738647461
    7. '-point' → logprob: -14.643697738647461
    8. '```' → logprob: -15.018697738647461
    9. '-p' → logprob: -15.643697738647461
    10. '-vector' → logprob: -16.64369773864746

Token 789: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.6060808522743173e-05
    2. 'x' → logprob: -10.875025749206543
    3. ' p' → logprob: -12.000025749206543
    4. '<|end|>' → logprob: -14.375025749206543
    5. 'point' → logprob: -16.00002670288086
    6. 'Point' → logprob: -17.37502670288086
    7. 'self' → logprob: -17.37502670288086
    8. 'px' → logprob: -17.75002670288086
    9. '```' → logprob: -18.12502670288086
    10. ')' → logprob: -18.25002670288086

Token 790: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ' )' → logprob: -12.500004768371582
    3. ')
' → logprob: -14.125004768371582
    4. ')return' → logprob: -16.5000057220459
    5. ')

' → logprob: -16.7500057220459
    6. '))' → logprob: -16.7500057220459
    7. '<|end|>' → logprob: -17.5000057220459
    8. ')#' → logprob: -17.8750057220459
    9. ').' → logprob: -18.2500057220459
    10. '())' → logprob: -18.5000057220459

Token 791: 'Line' (ID: 3665)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 792: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4524880349636078
    2. 'Segment' → logprob: -1.5774880647659302
    3. ' =' → logprob: -2.8274879455566406
    4. '=' → logprob: -2.9524879455566406
    5. '(' → logprob: -3.5774879455566406
    6. '<|end|>' → logprob: -5.327487945556641
    7. ':

' → logprob: -5.577487945556641
    8. 'class' → logprob: -6.327487945556641
    9. '(object' → logprob: -6.452487945556641
    10. ':
' → logprob: -6.827487945556641

Token 793: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -8.685467764735222e-05
    2. 'Line' → logprob: -9.500086784362793
    3. ' Segment' → logprob: -11.625086784362793
    4. 'Point' → logprob: -13.000086784362793
    5. 'Vector' → logprob: -14.375086784362793
    6. 'Seg' → logprob: -16.00008773803711
    7. '   ' → logprob: -17.62508773803711
    8. 'class' → logprob: -19.12508773803711
    9. 'segment' → logprob: -19.25008773803711
    10. 'Section' → logprob: -19.37508773803711

Token 794: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43493711948394775
    2. '

' → logprob: -1.5599371194839478
    3. 'class' → logprob: -2.434937000274658
    4. '<|end|>' → logprob: -2.934937000274658
    5. 'def' → logprob: -6.559937000274658
    6. '<|end|>' → logprob: -8.934937477111816
    7. '#' → logprob: -10.059937477111816
    8. ' class' → logprob: -10.184937477111816
    9. '    
' → logprob: -10.559937477111816
    10. '```' → logprob: -10.684937477111816

Token 795: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4817649722099304
    2. 'class' → logprob: -1.1067650318145752
    3. '
' → logprob: -3.231765031814575
    4. '

' → logprob: -4.981764793395996
    5. '<|end|>' → logprob: -5.606764793395996
    6. '#' → logprob: -7.981764793395996
    7. '<|end|>' → logprob: -8.106764793395996
    8. 'from' → logprob: -8.606764793395996
    9. '   ' → logprob: -8.856764793395996
    10. ')' → logprob: -9.106764793395996

Token 796: ' Circle' (ID: 33361)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -0.40647703409194946
    2. 'Polygon' → logprob: -1.4064769744873047
    3. ' Circle' → logprob: -2.7814769744873047
    4. ' Polygon' → logprob: -3.6564769744873047
    5. 'Line' → logprob: -8.031476974487305
    6. '_circle' → logprob: -8.156476974487305
    7. 'Triangle' → logprob: -8.531476974487305
    8. 'Rectangle' → logprob: -9.156476974487305
    9. 'Polyline' → logprob: -9.281476974487305
    10. 'Conv' → logprob: -10.031476974487305

Token 797: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0046761189587414265
    2. ':

' → logprob: -5.379676342010498
    3. ':
' → logprob: -9.87967586517334
    4. '(object' → logprob: -13.37967586517334
    5. '():' → logprob: -13.62967586517334
    6. '(' → logprob: -14.12967586517334
    7. ':

' → logprob: -14.75467586517334
    8. ':def' → logprob: -15.00467586517334
    9. '<|end|>' → logprob: -15.87967586517334
    10. '):' → logprob: -15.87967586517334

Token 798: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18995320796966553
    2. 'def' → logprob: -2.189953327178955
    3. '
' → logprob: -2.939953327178955
    4. '    
' → logprob: -4.814953327178955
    5. ' def' → logprob: -9.939952850341797
    6. 'class' → logprob: -10.689952850341797
    7. '  
' → logprob: -11.689952850341797
    8. ' 
' → logprob: -12.189952850341797
    9. '	def' → logprob: -12.189952850341797
    10. '```' → logprob: -12.189952850341797

Token 799: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.6656825866666622e-05
    2. ' def' → logprob: -10.87502670288086
    3. '   ' → logprob: -12.25002670288086
    4. '__' → logprob: -13.25002670288086
    5. '
' → logprob: -14.25002670288086
    6. '	def' → logprob: -15.75002670288086
    7. 'from' → logprob: -16.50002670288086
    8. 'class' → logprob: -16.62502670288086
    9. '```' → logprob: -16.62502670288086
    10. 'de' → logprob: -17.12502670288086

Token 800: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17503060400485992
    2. 'init' → logprob: -1.9250305891036987
    3. '_init' → logprob: -4.675030708312988
    4. 'def' → logprob: -5.300030708312988
    5. ' __' → logprob: -8.050030708312988
    6. '___' → logprob: -10.300030708312988
    7. '_' → logprob: -11.550030708312988
    8. '```' → logprob: -11.925030708312988
    9. '_def' → logprob: -12.925030708312988
    10. ' def' → logprob: -12.925030708312988

Token 801: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0001601539261173457
    2. 'def' → logprob: -8.750160217285156
    3. '__' → logprob: -13.625160217285156
    4. ' init' → logprob: -15.750160217285156
    5. '```' → logprob: -15.875160217285156
    6. '_init' → logprob: -16.000160217285156
    7. 'int' → logprob: -17.125160217285156
    8. '(init' → logprob: -17.375160217285156
    9. 'repr' → logprob: -17.625160217285156
    10. '   ' → logprob: -18.250160217285156

Token 802: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2523762583732605
    2. '__(' → logprob: -1.5023763179779053
    3. '(' → logprob: -8.002376556396484
    4. ' (' → logprob: -10.377376556396484
    5. 'self' → logprob: -10.877376556396484
    6. '   ' → logprob: -11.002376556396484
    7. '_(' → logprob: -11.502376556396484
    8. '__(
' → logprob: -11.627376556396484
    9. '```' → logprob: -11.877376556396484
    10. '__' → logprob: -12.002376556396484

Token 803: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.704273118884885e-07
    2. ' self' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.875
    4. '       ' → logprob: -19.125
    5. ',' → logprob: -19.25
    6. '
' → logprob: -19.5
    7. 'elf' → logprob: -19.625
    8. '0' → logprob: -20.5
    9. '(self' → logprob: -20.625
    10. 's' → logprob: -21.25

Token 804: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10272308439016342
    2. '(self' → logprob: -2.4777231216430664
    3. 'self' → logprob: -4.352723121643066
    4. '   ' → logprob: -8.602723121643066
    5. ' self' → logprob: -8.727723121643066
    6. ' (' → logprob: -8.852723121643066
    7. '       ' → logprob: -9.227723121643066
    8. ')' → logprob: -9.602723121643066
    9. '(' → logprob: -9.727723121643066
    10. ',
' → logprob: -10.352723121643066

Token 805: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.019047778099775314
    2. 'center' → logprob: -4.019047737121582
    3. 'o' → logprob: -7.269047737121582
    4. ' c' → logprob: -9.519047737121582
    5. '   ' → logprob: -9.894047737121582
    6. 'self' → logprob: -10.519047737121582
    7. 'p' → logprob: -10.894047737121582
    8. ' center' → logprob: -11.769047737121582
    9. '  ' → logprob: -12.519047737121582
    10. ' ' → logprob: -12.769047737121582

Token 806: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.664371848164592e-05
    2. '=' → logprob: -11.750016212463379
    3. ',' → logprob: -12.125016212463379
    4. '=None' → logprob: -13.250016212463379
    5. '):' → logprob: -14.750016212463379
    6. ')' → logprob: -14.750016212463379
    7. '   ' → logprob: -15.625016212463379
    8. ' =' → logprob: -15.625016212463379
    9. ' :' → logprob: -17.250017166137695
    10. '<Point' → logprob: -17.375017166137695

Token 807: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0015053401002660394
    2. ' Point' → logprob: -6.501505374908447
    3. '	Point' → logprob: -13.126504898071289
    4. '_Point' → logprob: -15.126504898071289
    5. '_point' → logprob: -15.501504898071289
    6. '.Point' → logprob: -15.751504898071289
    7. '(Point' → logprob: -16.00150489807129
    8. '<Point' → logprob: -16.25150489807129
    9. '   ' → logprob: -17.00150489807129
    10. '<|end|>' → logprob: -18.00150489807129

Token 808: '=None' (ID: 12783)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0775069072842598
    2. ',' → logprob: -3.4525070190429688
    3. ' =' → logprob: -3.5775070190429688
    4. '=None' → logprob: -4.202507019042969
    5. ' ,' → logprob: -12.827507019042969
    6. ' ' → logprob: -12.952507019042969
    7. '   ' → logprob: -13.327507019042969
    8. 'None' → logprob: -13.452507019042969
    9. ')' → logprob: -13.827507019042969
    10. '=center' → logprob: -15.702507019042969

Token 809: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001600347168277949
    2. ' ,' → logprob: -8.750160217285156
    3. ',c' → logprob: -14.750160217285156
    4. ')' → logprob: -14.750160217285156
    5. 'c' → logprob: -16.250160217285156
    6. ',
' → logprob: -16.250160217285156
    7. '   ' → logprob: -16.250160217285156
    8. '       ' → logprob: -16.625160217285156
    9. '‌,' → logprob: -16.625160217285156
    10. ' ' → logprob: -17.000160217285156

Token 810: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00020389800192788243
    2. ' r' → logprob: -8.500204086303711
    3. '	r' → logprob: -15.375204086303711
    4. 'radius' → logprob: -16.62520408630371
    5. '   ' → logprob: -17.25020408630371
    6. '  ' → logprob: -18.75020408630371
    7. ' ' → logprob: -20.87520408630371
    8. '    
' → logprob: -21.50020408630371
    9. '``' → logprob: -22.00020408630371
    10. '.r' → logprob: -22.00020408630371

Token 811: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010100651998072863
    2. '=' → logprob: -7.001009941101074
    3. '=None' → logprob: -9.501009941101074
    4. ')' → logprob: -11.251009941101074
    5. ' :' → logprob: -12.126009941101074
    6. '=float' → logprob: -12.751009941101074
    7. ' =' → logprob: -13.376009941101074
    8. '):' → logprob: -15.376009941101074
    9. ' ' → logprob: -15.751009941101074
    10. '0' → logprob: -16.12601089477539

Token 812: ' float' (ID: 4428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030153775587677956
    2. ' ' → logprob: -4.155153751373291
    3. 'float' → logprob: -4.405153751373291
    4. ' float' → logprob: -6.405153751373291
    5. 'None' → logprob: -9.90515422821045
    6. '1' → logprob: -10.15515422821045
    7. ')' → logprob: -10.53015422821045
    8. '   ' → logprob: -11.40515422821045
    9. ' None' → logprob: -11.65515422821045
    10. '  ' → logprob: -12.40515422821045

Token 813: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.081584716506768e-05
    2. ')' → logprob: -11.375020980834961
    3. ' =' → logprob: -12.125020980834961
    4. '=None' → logprob: -12.750020980834961
    5. '0' → logprob: -14.250020980834961
    6. '):' → logprob: -15.500020980834961
    7. ':' → logprob: -15.875020980834961
    8. ')=' → logprob: -17.87502098083496
    9. '=-' → logprob: -18.12502098083496
    10. ' ' → logprob: -18.25002098083496

Token 814: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.2762428822461516e-05
    2. '1' → logprob: -10.500052452087402
    3. ' ' → logprob: -10.625052452087402
    4. '-' → logprob: -14.875052452087402
    5. '   ' → logprob: -15.875052452087402
    6. 'None' → logprob: -15.875052452087402
    7. '  ' → logprob: -16.50005340576172
    8. '=' → logprob: -16.75005340576172
    9. '```' → logprob: -16.87505340576172
    10. '０' → logprob: -17.62505340576172

Token 815: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.551721889991313e-05
    2. '.)' → logprob: -9.750065803527832
    3. '.):' → logprob: -12.125065803527832
    4. ')' → logprob: -13.875065803527832
    5. '.
' → logprob: -14.750065803527832
    6. '.:' → logprob: -15.625065803527832
    7. '.).' → logprob: -16.375064849853516
    8. '.

' → logprob: -17.250064849853516
    9. '.')' → logprob: -17.250064849853516
    10. '.,' → logprob: -17.375064849853516

Token 816: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. '```' → logprob: -13.375004768371582
    3. ')' → logprob: -13.625004768371582
    4. ' ' → logprob: -14.437504768371582
    5. 'float' → logprob: -14.812504768371582
    6. '5' → logprob: -15.062504768371582
    7. '   ' → logprob: -15.500004768371582
    8. 'f' → logprob: -16.5625057220459
    9. '):
' → logprob: -16.6875057220459
    10. '1' → logprob: -16.8125057220459

Token 817: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1502007693052292
    2. ')' → logprob: -2.150200843811035
    3. '):
' → logprob: -3.775200843811035
    4. '):
' → logprob: -10.025200843811035
    5. ' ):' → logprob: -11.400200843811035
    6. ' )' → logprob: -12.025200843811035
    7. '   ' → logprob: -12.400200843811035
    8. '):

' → logprob: -12.775200843811035
    9. ':' → logprob: -14.025200843811035
    10. ',' → logprob: -14.150200843811035

Token 818: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08957803249359131
    2. ':
' → logprob: -2.464578151702881
    3. '       ' → logprob: -8.339577674865723
    4. '   ' → logprob: -8.839577674865723
    5. '):
' → logprob: -9.464577674865723
    6. '->' → logprob: -10.089577674865723
    7. ' ->' → logprob: -10.089577674865723
    8. ')' → logprob: -10.464577674865723
    9. ':c' → logprob: -10.839577674865723
    10. ',' → logprob: -11.214577674865723

Token 819: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.676292231422849e-05
    2. ' None' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.375017166137695
    4. 'float' → logprob: -19.875017166137695
    5. 'void' → logprob: -20.500017166137695
    6. 'No' → logprob: -20.625017166137695
    7. '_None' → logprob: -20.875017166137695
    8. '(None' → logprob: -21.000017166137695
    9. 'none' → logprob: -21.750017166137695
    10. '=None' → logprob: -21.875017166137695

Token 820: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29714691638946533
    2. ':
' → logprob: -1.4221469163894653
    3. '       ' → logprob: -4.172146797180176
    4. '):
' → logprob: -8.047146797180176
    5. '   ' → logprob: -10.172146797180176
    6. '):' → logprob: -10.547146797180176
    7. ' :
' → logprob: -11.172146797180176
    8. ',' → logprob: -11.297146797180176
    9. ':c' → logprob: -11.547146797180176
    10. '<|end|>' → logprob: -11.797146797180176

Token 821: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015568782109767199
    2. 'self' → logprob: -6.501556873321533
    3. '   ' → logprob: -10.501557350158691
    4. ' self' → logprob: -11.001557350158691
    5. '	' → logprob: -11.876557350158691
    6. '	self' → logprob: -12.876557350158691
    7. '	   ' → logprob: -15.126557350158691
    8. ' ' → logprob: -16.001556396484375
    9. 'if' → logprob: -16.126556396484375
    10. '           ' → logprob: -16.376556396484375

Token 822: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -8.554343366995454e-05
    2. '       ' → logprob: -9.500085830688477
    3. ' self' → logprob: -11.500085830688477
    4. '	self' → logprob: -14.750085830688477
    5. '   ' → logprob: -16.875085830688477
    6. '	' → logprob: -18.750085830688477
    7. 'if' → logprob: -19.375085830688477
    8. '(self' → logprob: -19.500085830688477
    9. '﻿' → logprob: -19.875085830688477
    10. 'super' → logprob: -21.000085830688477

Token 823: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.002235662890598178
    2. '.' → logprob: -6.1272358894348145
    3. 'c' → logprob: -10.752235412597656
    4. ' .' → logprob: -11.252235412597656
    5. '=' → logprob: -11.877235412597656
    6. ' =' → logprob: -12.627235412597656
    7. ':' → logprob: -13.127235412597656
    8. 'class' → logprob: -13.877235412597656
    9. '	c' → logprob: -14.252235412597656
    10. '{' → logprob: -15.252235412597656

Token 824: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10022058337926865
    2. ' =' → logprob: -2.3502206802368164
    3. ':' → logprob: -11.350220680236816
    4. '=c' → logprob: -13.100220680236816
    5. 'c' → logprob: -16.7252197265625
    6. '=None' → logprob: -17.8502197265625
    7. '   ' → logprob: -18.1002197265625
    8. ')' → logprob: -18.1002197265625
    9. '=
' → logprob: -18.7252197265625
    10. '=

' → logprob: -18.9752197265625

Token 825: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.02133735828101635
    2. ' Point' → logprob: -4.021337509155273
    3. 'c' → logprob: -5.771337509155273
    4. ' c' → logprob: -9.771337509155273
    5. '	Point' → logprob: -12.271337509155273
    6. 'Circle' → logprob: -13.146337509155273
    7. '(Point' → logprob: -13.646337509155273
    8. '   ' → logprob: -14.771337509155273
    9. '_Point' → logprob: -15.146337509155273
    10. ' ' → logprob: -15.521337509155273

Token 826: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975199744105339
    2. ' =' → logprob: -3.529752016067505
    3. '=c' → logprob: -13.404751777648926
    4. 'c' → logprob: -17.029752731323242
    5. '   ' → logprob: -17.529752731323242
    6. ' ' → logprob: -18.279752731323242
    7. '=
' → logprob: -18.529752731323242
    8. ')' → logprob: -18.529752731323242
    9. '=C' → logprob: -18.779752731323242
    10. ':' → logprob: -19.029752731323242

Token 827: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.25328361988067627
    2. ' Point' → logprob: -1.5032836198806763
    3. 'c' → logprob: -6.753283500671387
    4. ' c' → logprob: -8.628283500671387
    5. 'Circle' → logprob: -12.253283500671387
    6. '	Point' → logprob: -13.253283500671387
    7. ' Circle' → logprob: -14.878283500671387
    8. '(Point' → logprob: -15.128283500671387
    9. '   ' → logprob: -15.753283500671387
    10. ' ' → logprob: -16.003284454345703

Token 828: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00023655613767914474
    2. 'if' → logprob: -8.375236511230469
    3. ' if' → logprob: -12.750236511230469
    4. '0' → logprob: -13.000236511230469
    5. '(' → logprob: -15.500236511230469
    6. '()
' → logprob: -15.500236511230469
    7. ' ()' → logprob: -15.625236511230469
    8. 'c' → logprob: -16.12523651123047
    9. '{}' → logprob: -16.62523651123047
    10. '()

' → logprob: -17.12523651123047

Token 829: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20169302821159363
    2. ' if' → logprob: -1.701693058013916
    3. '()' → logprob: -8.201692581176758
    4. '       ' → logprob: -12.451692581176758
    5. '	if' → logprob: -14.326692581176758
    6. '        ' → logprob: -15.076692581176758
    7. '   ' → logprob: -15.576692581176758
    8. '           ' → logprob: -16.576692581176758
    9. '    ' → logprob: -16.701692581176758
    10. '
' → logprob: -17.076692581176758

Token 830: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0206720617134124e-05
    2. ' c' → logprob: -11.50001049041748
    3. '(c' → logprob: -19.375009536743164
    4. '	c' → logprob: -19.750009536743164
    5. ')c' → logprob: -21.375009536743164
    6. '_c' → logprob: -22.000009536743164
    7. '   ' → logprob: -22.750009536743164
    8. '<c' → logprob: -23.000009536743164
    9. '       ' → logprob: -23.000009536743164
    10. 'cation' → logprob: -23.625009536743164

Token 831: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.38687753677368164
    2. 'is' → logprob: -1.1368775367736816
    3. 'None' → logprob: -13.261877059936523
    4. 'if' → logprob: -13.261877059936523
    5. '==' → logprob: -13.386877059936523
    6. 'else' → logprob: -15.136877059936523
    7. '=None' → logprob: -15.261877059936523
    8. ')is' → logprob: -15.261877059936523
    9. 'Is' → logprob: -15.636877059936523
    10. '	is' → logprob: -15.636877059936523

Token 832: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.02975071594119072
    2. ' None' → logprob: -3.5297508239746094
    3. '=None' → logprob: -16.15475082397461
    4. 'none' → logprob: -16.65475082397461
    5. '(None' → logprob: -16.90475082397461
    6. '_None' → logprob: -17.27975082397461
    7. '   ' → logprob: -18.40475082397461
    8. ' ' → logprob: -19.40475082397461
    9. '.None' → logprob: -19.52975082397461
    10. '_none' → logprob: -19.77975082397461

Token 833: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.061990655958652496
    2. ' else' → logprob: -2.811990737915039
    3. '       ' → logprob: -11.061990737915039
    4. '        ' → logprob: -12.311990737915039
    5. '	else' → logprob: -13.061990737915039
    6. '   ' → logprob: -16.06199073791504
    7. 'elses' → logprob: -16.43699073791504
    8. ':' → logprob: -16.93699073791504
    9. '```' → logprob: -16.93699073791504
    10. '_else' → logprob: -17.18699073791504

Token 834: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00014001218369230628
    2. ' c' → logprob: -8.875140190124512
    3. '	c' → logprob: -16.750139236450195
    4. ')c' → logprob: -18.625139236450195
    5. 'Point' → logprob: -18.875139236450195
    6. '_c' → logprob: -19.000139236450195
    7. 'с' → logprob: -19.500139236450195
    8. 'copy' → logprob: -19.625139236450195
    9. 'cation' → logprob: -20.000139236450195
    10. '```' → logprob: -20.125139236450195

Token 835: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003981376066803932
    2. '
' → logprob: -8.500397682189941
    3. 'self' → logprob: -9.625397682189941
    4. '<|end|>' → logprob: -9.750397682189941
    5. ',' → logprob: -10.125397682189941
    6. 'r' → logprob: -11.375397682189941
    7. '   ' → logprob: -12.125397682189941
    8. ',
' → logprob: -12.625397682189941
    9. ' self' → logprob: -13.375397682189941
    10. '<|end|>' → logprob: -13.500397682189941

Token 836: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07895874977111816
    2. 'self' → logprob: -2.578958749771118
    3. ' self' → logprob: -9.828958511352539
    4. '   ' → logprob: -11.453958511352539
    5. '	self' → logprob: -13.078958511352539
    6. '	' → logprob: -14.203958511352539
    7. '           ' → logprob: -15.203958511352539
    8. '(self' → logprob: -15.453958511352539
    9. ',' → logprob: -15.703958511352539
    10. '<|end|>' → logprob: -15.828958511352539

Token 837: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.318681188422488e-05
    2. '       ' → logprob: -11.37501335144043
    3. ' self' → logprob: -13.50001335144043
    4. '	self' → logprob: -16.37501335144043
    5. '
' → logprob: -16.87501335144043
    6. 's' → logprob: -18.12501335144043
    7. '(self' → logprob: -18.87501335144043
    8. '   ' → logprob: -19.00001335144043
    9. '        
' → logprob: -19.37501335144043
    10. 'r' → logprob: -19.87501335144043

Token 838: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.004884212277829647
    2. 'r' → logprob: -5.379884243011475
    3. '.' → logprob: -8.254883766174316
    4. '	r' → logprob: -13.754883766174316
    5. '=r' → logprob: -14.004883766174316
    6. ' .' → logprob: -14.254883766174316
    7. ' r' → logprob: -14.504883766174316
    8. '.radius' → logprob: -14.879883766174316
    9. ':r' → logprob: -16.004884719848633
    10. '=' → logprob: -16.629884719848633

Token 839: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13682027161121368
    2. ' =' → logprob: -2.1368203163146973
    3. ':' → logprob: -4.636820316314697
    4. '=r' → logprob: -9.011819839477539
    5. ' ' → logprob: -11.261819839477539
    6. ' :' → logprob: -12.511819839477539
    7. '   ' → logprob: -12.511819839477539
    8. 'r' → logprob: -12.636819839477539
    9. '	' → logprob: -12.761819839477539
    10. ' r' → logprob: -13.386819839477539

Token 840: ' float' (ID: 4428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019294669618830085
    2. ' r' → logprob: -6.25192928314209
    3. 'float' → logprob: -14.25192928314209
    4. ' float' → logprob: -15.75192928314209
    5. '	r' → logprob: -16.251930236816406
    6. ' ' → logprob: -16.876930236816406
    7. '0' → logprob: -16.876930236816406
    8. ' ' → logprob: -17.501930236816406
    9. '   ' → logprob: -18.751930236816406
    10. '_r' → logprob: -19.001930236816406

Token 841: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03836459666490555
    2. ' =' → logprob: -3.2883646488189697
    3. '=r' → logprob: -8.03836441040039
    4. ' ' → logprob: -15.91336441040039
    5. 'r' → logprob: -17.03836441040039
    6. ':' → logprob: -17.16336441040039
    7. '	' → logprob: -17.91336441040039
    8. '＝' → logprob: -18.16336441040039
    9. ' r' → logprob: -18.53836441040039
    10. '=re' → logprob: -19.16336441040039

Token 842: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00043102685594931245
    2. ' r' → logprob: -7.750431060791016
    3. '0' → logprob: -15.875431060791016
    4. '	r' → logprob: -15.875431060791016
    5. 'float' → logprob: -17.125431060791016
    6. '   ' → logprob: -17.250431060791016
    7. ' ' → logprob: -17.250431060791016
    8. ' ' → logprob: -17.750431060791016
    9. '       ' → logprob: -19.125431060791016
    10. '  ' → logprob: -19.625431060791016

Token 843: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 844: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5216620564460754
    2. 'def' → logprob: -1.0216619968414307
    3. '<|end|>' → logprob: -3.5216619968414307
    4. '
' → logprob: -4.14666223526001
    5. '```' → logprob: -7.89666223526001
    6. ')' → logprob: -8.021661758422852
    7. '<|end|>' → logprob: -8.646661758422852
    8. ' def' → logprob: -9.646661758422852
    9. '	def' → logprob: -9.896661758422852
    10. '  ' → logprob: -11.146661758422852

Token 845: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.404745439183898e-05
    2. '<|end|>' → logprob: -10.62503433227539
    3. ' def' → logprob: -12.75003433227539
    4. '#' → logprob: -13.37503433227539
    5. '@property' → logprob: -13.37503433227539
    6. '   ' → logprob: -13.75003433227539
    7. 'from' → logprob: -14.37503433227539
    8. ')' → logprob: -15.00003433227539
    9. '```' → logprob: -15.00003433227539
    10. '
' → logprob: -15.62503433227539

Token 846: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006796724628657103
    2. ' __' → logprob: -5.006796836853027
    3. 'area' → logprob: -10.006796836853027
    4. '_area' → logprob: -11.006796836853027
    5. 'repr' → logprob: -11.506796836853027
    6. 'def' → logprob: -12.381796836853027
    7. '.__' → logprob: -13.381796836853027
    8. ' area' → logprob: -14.006796836853027
    9. '_repr' → logprob: -14.381796836853027
    10. '___' → logprob: -14.631796836853027

Token 847: 'eq' (ID: 21725)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -3.690834273584187e-05
    2. 'eq' → logprob: -10.25003719329834
    3. 'init' → logprob: -13.50003719329834
    4. 'str' → logprob: -16.250036239624023
    5. 'rep' → logprob: -17.250036239624023
    6. 'lt' → logprob: -18.375036239624023
    7. ' repr' → logprob: -19.000036239624023
    8. '_repr' → logprob: -19.000036239624023
    9. 'def' → logprob: -21.250036239624023
    10. 'abs' → logprob: -22.375036239624023

Token 848: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01123137678951025
    2. '(self' → logprob: -4.511231422424316
    3. '__' → logprob: -8.761231422424316
    4. '__(
' → logprob: -11.261231422424316
    5. '(' → logprob: -11.386231422424316
    6. '_(' → logprob: -13.761231422424316
    7. '__((' → logprob: -14.136231422424316
    8. '__(*' → logprob: -15.636231422424316
    9. ' (' → logprob: -15.761231422424316
    10. '```' → logprob: -16.13623046875

Token 849: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.190178904333152e-05
    2. ' self' → logprob: -10.750031471252441
    3. '(self' → logprob: -11.500031471252441
    4. '
' → logprob: -16.000032424926758
    5. 'other' → logprob: -17.500032424926758
    6. ')' → logprob: -17.625032424926758
    7. ' ' → logprob: -18.000032424926758
    8. '   ' → logprob: -18.125032424926758
    9. '       ' → logprob: -18.125032424926758
    10. ',' → logprob: -18.250032424926758

Token 850: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006539639085531235
    2. ',' → logprob: -5.256539821624756
    3. '(' → logprob: -7.381539821624756
    4. ')' → logprob: -8.631539344787598
    5. ' (' → logprob: -8.631539344787598
    6. '__(' → logprob: -9.006539344787598
    7. ')(' → logprob: -9.006539344787598
    8. 'self' → logprob: -9.881539344787598
    9. ',self' → logprob: -11.631539344787598
    10. ' self' → logprob: -12.131539344787598

Token 851: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00014489953173324466
    2. ' other' → logprob: -9.000144958496094
    3. 'self' → logprob: -10.750144958496094
    4. '   ' → logprob: -18.750144958496094
    5. ' self' → logprob: -19.375144958496094
    6. ' ' → logprob: -19.875144958496094
    7. 'o' → logprob: -20.125144958496094
    8. 'Other' → logprob: -20.500144958496094
    9. '       ' → logprob: -20.625144958496094
    10. 'object' → logprob: -20.625144958496094

Token 852: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028682351112365723
    2. ' :' → logprob: -6.252868175506592
    3. ')' → logprob: -7.627868175506592
    4. ',' → logprob: -8.12786865234375
    5. '):' → logprob: -10.37786865234375
    6. ' ' → logprob: -10.62786865234375
    7. '<|end|>' → logprob: -10.75286865234375
    8. '(object' → logprob: -11.00286865234375
    9. '==' → logprob: -12.00286865234375
    10. ')object' → logprob: -12.00286865234375

Token 853: ' object' (ID: 2817)
  Prédit: 'object'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'object' → logprob: -0.0007227989844977856
    2. ' object' → logprob: -7.250722885131836
    3. ''' → logprob: -11.750722885131836
    4. '(object' → logprob: -12.750722885131836
    5. '	object' → logprob: -14.625722885131836
    6. ')object' → logprob: -14.625722885131836
    7. ')' → logprob: -15.375722885131836
    8. 'Circle' → logprob: -15.625722885131836
    9. '.object' → logprob: -15.875722885131836
    10. 'Object' → logprob: -16.000722885131836

Token 854: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.690834273584187e-05
    2. ' )' → logprob: -10.37503719329834
    3. '):' → logprob: -13.00003719329834
    4. ')->' → logprob: -13.50003719329834
    5. '   ' → logprob: -14.00003719329834
    6. ':' → logprob: -14.62503719329834
    7. ')object' → logprob: -15.75003719329834
    8. ' ' → logprob: -16.375036239624023
    9. '),' → logprob: -16.750036239624023
    10. ')throws' → logprob: -16.875036239624023

Token 855: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4852966070175171
    2. ' ->' → logprob: -1.360296607017517
    3. ':' → logprob: -2.6102967262268066
    4. '->' → logprob: -2.9852967262268066
    5. ')->' → logprob: -5.985296726226807
    6. '       ' → logprob: -7.485296726226807
    7. '   ' → logprob: -7.735296726226807
    8. ' )' → logprob: -8.735296249389648
    9. ',' → logprob: -10.360296249389648
    10. ' ' → logprob: -10.360296249389648

Token 856: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -4.842555426876061e-06
    2. ' bool' → logprob: -12.250004768371582
    3. '	bool' → logprob: -17.7500057220459
    4. '<bool' → logprob: -18.6250057220459
    5. '(bool' → logprob: -19.0000057220459
    6. ')' → logprob: -19.5000057220459
    7. 'Bool' → logprob: -20.7500057220459
    8. '->' → logprob: -20.7500057220459
    9. ',bool' → logprob: -20.7500057220459
    10. '
' → logprob: -21.3750057220459

Token 857: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06862692534923553
    2. ')' → logprob: -3.693626880645752
    3. '->' → logprob: -3.818626880645752
    4. '       ' → logprob: -4.943626880645752
    5. ' ->' → logprob: -5.318626880645752
    6. '   ' → logprob: -5.568626880645752
    7. ')->' → logprob: -6.443626880645752
    8. '<|end|>' → logprob: -6.943626880645752
    9. '->____' → logprob: -8.19362735748291
    10. '        ' → logprob: -9.31862735748291

Token 858: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.588793960167095e-05
    2. '<|end|>' → logprob: -10.375076293945312
    3. ' if' → logprob: -10.875076293945312
    4. '   ' → logprob: -11.250076293945312
    5. '	   ' → logprob: -12.250076293945312
    6. '	       ' → logprob: -13.500076293945312
    7. '#' → logprob: -14.125076293945312
    8. '      ' → logprob: -14.250076293945312
    9. ' ' → logprob: -14.250076293945312
    10. 'if' → logprob: -14.375076293945312

Token 859: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04048335924744606
    2. '       ' → logprob: -3.5404834747314453
    3. ' if' → logprob: -4.540483474731445
    4. '   ' → logprob: -12.165483474731445
    5. '	if' → logprob: -13.790483474731445
    6. 'return' → logprob: -14.915483474731445
    7. 'If' → logprob: -14.915483474731445
    8. '           ' → logprob: -16.290483474731445
    9. '      ' → logprob: -16.290483474731445
    10. '     ' → logprob: -16.540483474731445

Token 860: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03804263845086098
    2. 'not' → logprob: -3.2880425453186035
    3. 'Not' → logprob: -14.663043022155762
    4. '	not' → logprob: -15.288043022155762
    5. '   ' → logprob: -16.038042068481445
    6. '_not' → logprob: -16.163042068481445
    7. '(not' → logprob: -16.288042068481445
    8. '...' → logprob: -17.288042068481445
    9. ' ' → logprob: -17.413042068481445
    10. '       ' → logprob: -17.538042068481445

Token 861: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.038044363260269165
    2. ' isinstance' → logprob: -3.2880444526672363
    3. '(is' → logprob: -12.788043975830078
    4. '   ' → logprob: -17.288043975830078
    5. 'instance' → logprob: -17.288043975830078
    6. 'Is' → logprob: -17.538043975830078
    7. '...' → logprob: -18.913043975830078
    8. '
' → logprob: -19.163043975830078
    9. '.is' → logprob: -19.288043975830078
    10. '  ' → logprob: -19.288043975830078

Token 862: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0011712945997714996
    2. 'other' → logprob: -6.751171112060547
    3. ' other' → logprob: -14.001171112060547
    4. 'Other' → logprob: -15.376171112060547
    5. '_other' → logprob: -19.626171112060547
    6. 'OTHER' → logprob: -20.876171112060547
    7. '.other' → logprob: -20.876171112060547
    8. '-other' → logprob: -21.751171112060547
    9. '```' → logprob: -21.876171112060547
    10. '(' → logprob: -23.126171112060547

Token 863: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0023202260490506887
    2. 'other' → logprob: -6.252320289611816
    3. ',' → logprob: -7.877320289611816
    4. ' other' → logprob: -11.377320289611816
    5. 'Other' → logprob: -15.377320289611816
    6. '(' → logprob: -15.752320289611816
    7. '.other' → logprob: -15.752320289611816
    8. '-other' → logprob: -16.3773193359375
    9. ')' → logprob: -16.8773193359375
    10. 'Circle' → logprob: -17.6273193359375

Token 864: ' Circle' (ID: 33361)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -0.004632215015590191
    2. ' Circle' → logprob: -5.379631996154785
    3. 'Point' → logprob: -11.879631996154785
    4. 'self' → logprob: -13.754631996154785
    5. '   ' → logprob: -13.879631996154785
    6. 'class' → logprob: -14.379631996154785
    7. 'Circular' → logprob: -14.754631996154785
    8. 'Cir' → logprob: -15.004631996154785
    9. 'Circuit' → logprob: -15.254631996154785
    10. ' ' → logprob: -15.379631996154785

Token 865: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31341272592544556
    2. '):' → logprob: -1.3134126663208008
    3. '):
' → logprob: -9.9384126663208
    4. ')' → logprob: -10.0634126663208
    5. '       ' → logprob: -10.8134126663208
    6. '   ' → logprob: -11.1884126663208
    7. ',' → logprob: -11.5634126663208
    8. ':' → logprob: -12.3134126663208
    9. '):

' → logprob: -12.4384126663208
    10. '           ' → logprob: -13.1884126663208

Token 866: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.999452772201039e-05
    2. 'return' → logprob: -10.875029563903809
    3. ':return' → logprob: -13.250029563903809
    4. '       ' → logprob: -13.500029563903809
    5. '   ' → logprob: -13.875029563903809
    6. '0' → logprob: -14.000029563903809
    7. '               ' → logprob: -14.000029563903809
    8. ' return' → logprob: -14.250029563903809
    9. '		' → logprob: -14.250029563903809
    10. ':' → logprob: -14.375029563903809

Token 867: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6649161577224731
    2. '           ' → logprob: -1.1649161577224731
    3. '#' → logprob: -2.0399160385131836
    4. 'return' (adapté à ' return') → logprob: -3.1649160385131836
    5. ' return' → logprob: -6.664916038513184
    6. '   ' → logprob: -9.289916038513184
    7. '```' → logprob: -10.664916038513184
    8. '0' → logprob: -10.789916038513184
    9. ':return' → logprob: -11.289916038513184
    10. '{return' → logprob: -11.414916038513184

Token 868: ' Not' (ID: 4037)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -2.7372048862162046e-05
    2. ' Not' → logprob: -11.000027656555176
    3. 'False' → logprob: -11.625027656555176
    4. '   ' → logprob: -13.625027656555176
    5. '       ' → logprob: -15.750027656555176
    6. 'not' → logprob: -16.37502670288086
    7. '_Not' → logprob: -17.00002670288086
    8. ' ' → logprob: -17.12502670288086
    9. '           ' → logprob: -17.62502670288086
    10. '  ' → logprob: -17.87502670288086

Token 869: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.0005841302336193621
    2. 'Implement' → logprob: -8.375584602355957
    3. 'Not' → logprob: -8.625584602355957
    4. 'implemented' → logprob: -9.250584602355957
    5. 'Supported' → logprob: -11.250584602355957
    6. 'Implementation' → logprob: -11.750584602355957
    7. 'ot' → logprob: -11.875584602355957
    8. 'Defined' → logprob: -12.000584602355957
    9. '_IMPLEMENT' → logprob: -12.125584602355957
    10. '  ' → logprob: -12.875584602355957

Token 870: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002251125843031332
    2. '
' → logprob: -8.500225067138672
    3. '   ' → logprob: -11.250225067138672
    4. 'return' → logprob: -13.250225067138672
    5. '        
' → logprob: -13.375225067138672
    6. '      ' → logprob: -14.000225067138672
    7. ')' → logprob: -14.125225067138672
    8. '           ' → logprob: -14.125225067138672
    9. '<|end|>' → logprob: -14.625225067138672
    10. '	' → logprob: -14.750225067138672

Token 871: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023321842309087515
    2. 'return' → logprob: -8.50023365020752
    3. '   ' → logprob: -11.62523365020752
    4. ' return' → logprob: -11.75023365020752
    5. '
' → logprob: -12.12523365020752
    6. '	' → logprob: -13.00023365020752
    7. '        
' → logprob: -13.62523365020752
    8. '<|end|>' → logprob: -13.75023365020752
    9. '           ' → logprob: -14.25023365020752
    10. '      ' → logprob: -14.50023365020752

Token 872: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0046835956163704395
    2. '       ' → logprob: -5.379683494567871
    3. ' return' → logprob: -10.129683494567871
    4. '   ' → logprob: -11.129683494567871
    5. 'def' → logprob: -11.879683494567871
    6. 'if' → logprob: -13.754683494567871
    7. '	return' → logprob: -14.879683494567871
    8. '```' → logprob: -15.879683494567871
    9. 'self' → logprob: -16.504684448242188
    10. '           ' → logprob: -16.504684448242188

Token 873: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1002306118607521
    2. 'float' → logprob: -2.3502306938171387
    3. ' self' → logprob: -11.35023021697998
    4. '(self' → logprob: -11.47523021697998
    5. ' float' → logprob: -14.35023021697998
    6. '   ' → logprob: -14.60023021697998
    7. '(float' → logprob: -14.85023021697998
    8. '	self' → logprob: -15.85023021697998
    9. '(' → logprob: -16.225231170654297
    10. '\
' → logprob: -16.600231170654297

Token 874: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -6.0629870858974755e-05
    2. '.' → logprob: -10.37506103515625
    3. '.r' → logprob: -11.37506103515625
    4. 'c' → logprob: -11.62506103515625
    5. ' .' → logprob: -12.37506103515625
    6. 'self' → logprob: -13.50006103515625
    7. '	c' → logprob: -14.00006103515625
    8. 'r' → logprob: -14.25006103515625
    9. '   ' → logprob: -14.75006103515625
    10. 's' → logprob: -15.62506103515625

Token 875: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931498050689697
    2. ' ==' → logprob: -0.6931498050689697
    3. '==
' → logprob: -13.56814956665039
    4. ')==' → logprob: -14.19314956665039
    5. '=' → logprob: -15.06814956665039
    6. '__' → logprob: -16.06814956665039
    7. ')' → logprob: -16.19314956665039
    8. '()==' → logprob: -17.31814956665039
    9. '==(' → logprob: -17.31814956665039
    10. ' ==
' → logprob: -17.69314956665039

Token 876: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.001170225441455841
    2. ' other' → logprob: -6.7511701583862305
    3. '(other' → logprob: -18.376171112060547
    4. '       ' → logprob: -19.876171112060547
    5. '.other' → logprob: -20.126171112060547
    6. '           ' → logprob: -21.376171112060547
    7. 'Other' → logprob: -21.751171112060547
    8. 'self' → logprob: -21.876171112060547
    9. '_other' → logprob: -22.626171112060547
    10. ' ' → logprob: -24.001171112060547

Token 877: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.023271452635526657
    2. '.' → logprob: -3.7732715606689453
    3. ' .' → logprob: -11.023271560668945
    4. '   ' → logprob: -12.898271560668945
    5. 'c' → logprob: -13.273271560668945
    6. '.
' → logprob: -14.148271560668945
    7. ' ' → logprob: -14.148271560668945
    8. 'and' → logprob: -14.273271560668945
    9. ' and' → logprob: -14.523271560668945
    10. ').' → logprob: -14.523271560668945

Token 878: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.20142357051372528
    2. ' and' → logprob: -1.7014235258102417
    3. '           ' → logprob: -11.826423645019531
    4. '       ' → logprob: -12.826423645019531
    5. '	and' → logprob: -16.32642364501953
    6. '   ' → logprob: -16.45142364501953
    7. '               ' → logprob: -16.95142364501953
    8. ' ' → logprob: -17.82642364501953
    9. '```' → logprob: -17.95142364501953
    10. '        ' → logprob: -18.45142364501953

Token 879: ' self' (ID: 1051)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -6.611323624383658e-05
    2. ' float' → logprob: -10.125065803527832
    3. 'self' → logprob: -11.250065803527832
    4. 'abs' → logprob: -12.000065803527832
    5. '   ' → logprob: -12.125065803527832
    6. '       ' → logprob: -13.750065803527832
    7. 'flo' → logprob: -16.00006675720215
    8. '
' → logprob: -16.50006675720215
    9. '	float' → logprob: -17.12506675720215
    10. 'fabs' → logprob: -17.25006675720215

Token 880: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.08028627932071686
    2. 'r' → logprob: -2.5802862644195557
    3. 'float' → logprob: -7.330286502838135
    4. '.' → logprob: -7.830286502838135
    5. '.float' → logprob: -8.080286026000977
    6. ' r' → logprob: -11.955286026000977
    7. '   ' → logprob: -12.205286026000977
    8. 'abs' → logprob: -12.205286026000977
    9. 's' → logprob: -12.830286026000977
    10. ' ' → logprob: -12.955286026000977

Token 881: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18719765543937683
    2. ' ==' → logprob: -2.312197685241699
    3. 'float' → logprob: -2.687197685241699
    4. ' float' → logprob: -5.812197685241699
    5. '(float' → logprob: -8.4371976852417
    6. '=float' → logprob: -9.8121976852417
    7. '<float' → logprob: -10.1871976852417
    8. ' ' → logprob: -10.3121976852417
    9. '_float' → logprob: -10.3121976852417
    10. '=' → logprob: -10.3121976852417

Token 882: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0067156096920371056
    2. ' other' → logprob: -5.006715774536133
    3. '(other' → logprob: -15.506715774536133
    4. '.other' → logprob: -17.631715774536133
    5. 'Other' → logprob: -18.256715774536133
    6. '       ' → logprob: -18.756715774536133
    7. '_other' → logprob: -19.006715774536133
    8. ' ' → logprob: -19.381715774536133
    9. '   ' → logprob: -19.506715774536133
    10. '
' → logprob: -21.506715774536133

Token 883: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.007777221500873566
    2. '.' → logprob: -4.882777214050293
    3. 'r' → logprob: -8.882777214050293
    4. ' .' → logprob: -10.507777214050293
    5. '<|end|>' → logprob: -13.007777214050293
    6. '	r' → logprob: -14.507777214050293
    7. '‌.' → logprob: -14.507777214050293
    8. '<|end|>' → logprob: -14.632777214050293
    9. ' ' → logprob: -15.507777214050293
    10. ').' → logprob: -15.507777214050293

Token 884: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 885: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40982773900032043
    2. '   ' → logprob: -1.159827709197998
    3. '<|end|>' → logprob: -3.909827709197998
    4. '```' → logprob: -7.409827709197998
    5. '
' → logprob: -7.659827709197998
    6. '#' → logprob: -7.784827709197998
    7. ')' → logprob: -7.784827709197998
    8. ' def' → logprob: -8.534828186035156
    9. 'from' → logprob: -8.909828186035156
    10. '<|end|>' → logprob: -9.034828186035156

Token 886: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.318681188422488e-05
    2. 'from' → logprob: -12.25001335144043
    3. '   ' → logprob: -12.50001335144043
    4. '#' → logprob: -12.87501335144043
    5. ' def' → logprob: -13.62501335144043
    6. 'class' → logprob: -14.50001335144043
    7. '	def' → logprob: -16.25001335144043
    8. '
' → logprob: -16.75001335144043
    9. '```' → logprob: -17.37501335144043
    10. '@property' → logprob: -17.37501335144043

Token 887: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03479998931288719
    2. 'contains' → logprob: -3.4098000526428223
    3. 'area' → logprob: -7.659800052642822
    4. ' __' → logprob: -8.409799575805664
    5. 'contain' → logprob: -8.534799575805664
    6. 'is' → logprob: -9.409799575805664
    7. 'r' → logprob: -10.159799575805664
    8. 'inside' → logprob: -10.534799575805664
    9. 'def' → logprob: -10.909799575805664
    10. 'has' → logprob: -10.909799575805664

Token 888: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.0009530289680697024
    2. 'lt' → logprob: -7.000953197479248
    3. 'init' → logprob: -10.37595272064209
    4. 'hash' → logprob: -12.25095272064209
    5. 'abs' → logprob: -13.37595272064209
    6. 'eq' → logprob: -13.75095272064209
    7. 'str' → logprob: -13.87595272064209
    8. 'ne' → logprob: -14.50095272064209
    9. 'rep' → logprob: -14.62595272064209
    10. 'le' → logprob: -14.62595272064209

Token 889: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.08933462202548981
    2. '(self' → logprob: -2.464334726333618
    3. '__' → logprob: -8.214334487915039
    4. '__(
' → logprob: -9.714334487915039
    5. '(' → logprob: -10.214334487915039
    6. 'self' → logprob: -11.214334487915039
    7. '__("' → logprob: -12.589334487915039
    8. '__('' → logprob: -12.714334487915039
    9. '```' → logprob: -12.839334487915039
    10. '__[' → logprob: -14.089334487915039

Token 890: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004593862977344543
    2. '(self' → logprob: -7.75045919418335
    3. ' self' → logprob: -10.500459671020508
    4. 's' → logprob: -14.750459671020508
    5. ')' → logprob: -15.500459671020508
    6. '(' → logprob: -15.750459671020508
    7. 'def' → logprob: -15.875459671020508
    8. '       ' → logprob: -16.250459671020508
    9. '   ' → logprob: -16.625459671020508
    10. 'str' → logprob: -17.250459671020508

Token 891: ')' (ID: 8)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3146905303001404
    2. '(self' → logprob: -1.3146905899047852
    3. '__(
' → logprob: -7.439690589904785
    4. '(' → logprob: -8.064690589904785
    5. '__' → logprob: -8.064690589904785
    6. 'self' → logprob: -8.939690589904785
    7. ')(' → logprob: -10.189690589904785
    8. '__("' → logprob: -11.064690589904785
    9. '__('' → logprob: -11.689690589904785
    10. ' (' → logprob: -11.689690589904785

Token 892: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.232493564719334e-05
    2. '(' → logprob: -9.625082015991211
    3. 'self' → logprob: -12.000082015991211
    4. '       ' → logprob: -12.000082015991211
    5. '   ' → logprob: -13.125082015991211
    6. ' (' → logprob: -14.125082015991211
    7. '```' → logprob: -15.250082015991211
    8. 'def' → logprob: -15.375082015991211
    9. 'return' → logprob: -15.375082015991211
    10. '(s' → logprob: -15.750082015991211

Token 893: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0007100477814674377
    2. ' str' → logprob: -7.2507100105285645
    3. '	str' → logprob: -18.125709533691406
    4. '[str' → logprob: -18.875709533691406
    5. '(str' → logprob: -19.125709533691406
    6. 'stri' → logprob: -19.750709533691406
    7. '=str' → logprob: -20.000709533691406
    8. '_str' → logprob: -20.375709533691406
    9. ':str' → logprob: -20.500709533691406
    10. 'string' → logprob: -21.125709533691406

Token 894: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.968312951968983e-06
    2. '(' → logprob: -11.750009536743164
    3. '(s' → logprob: -14.375009536743164
    4. '       ' → logprob: -14.375009536743164
    5. '   ' → logprob: -14.625009536743164
    6. 'self' → logprob: -15.125009536743164
    7. ' (' → logprob: -17.125009536743164
    8. '(
' → logprob: -17.250009536743164
    9. '=self' → logprob: -18.500009536743164
    10. '[self' → logprob: -18.625009536743164

Token 895: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007406574441120028
    2. 'f' → logprob: -8.125741004943848
    3. ' return' → logprob: -8.625741004943848
    4. 'return' → logprob: -8.875741004943848
    5. ' f' → logprob: -9.000741004943848
    6. '   ' → logprob: -14.750741004943848
    7. '	' → logprob: -14.875741004943848
    8. '      ' → logprob: -15.000741004943848
    9. '           ' → logprob: -15.250741004943848
    10. '	return' → logprob: -15.625741004943848

Token 896: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12446031719446182
    2. '"' → logprob: -2.749460220336914
    3. 'f' → logprob: -2.999460220336914
    4. ' return' → logprob: -6.249460220336914
    5. '       ' → logprob: -7.249460220336914
    6. ' f' → logprob: -8.124460220336914
    7. '"C' → logprob: -8.749460220336914
    8. '   ' → logprob: -9.499460220336914
    9. 'Circle' → logprob: -9.999460220336914
    10. '           ' → logprob: -11.374460220336914

Token 897: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14179590344429016
    2. 'f' → logprob: -2.6417958736419678
    3. ' f' → logprob: -2.8917958736419678
    4. ' "' → logprob: -5.391796112060547
    5. '"C' → logprob: -7.016796112060547
    6. ''' → logprob: -10.891796112060547
    7. 'Circle' → logprob: -11.516796112060547
    8. ' ' → logprob: -12.766796112060547
    9. '   ' → logprob: -12.766796112060547
    10. '       ' → logprob: -12.891796112060547

Token 898: 'Circle' (ID: 28055)
  Prédit: 'Circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -8.268254896393046e-05
    2. '"' → logprob: -9.500082969665527
    3. ' Circle' → logprob: -12.500082969665527
    4. 'f' → logprob: -13.500082969665527
    5. '"C' → logprob: -14.250082969665527
    6. '.Circle' → logprob: -14.250082969665527
    7. 'Point' → logprob: -15.125082969665527
    8. ''' → logprob: -15.250082969665527
    9. 'Circ' → logprob: -15.250082969665527
    10. 'circle' → logprob: -16.12508201599121

Token 899: '({},' (ID: 45594)
  Prédit: '({},'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({},' → logprob: -5.872261317563243e-05
    2. '({' → logprob: -9.750059127807617
    3. '{},' → logprob: -15.625059127807617
    4. '(c' → logprob: -16.000059127807617
    5. '(' → logprob: -16.375059127807617
    6. '(self' → logprob: -17.375059127807617
    7. '("' → logprob: -18.125059127807617
    8. '{' → logprob: -18.250059127807617
    9. '(Point' → logprob: -18.750059127807617
    10. '"' → logprob: -19.125059127807617

Token 900: ' {})' (ID: 75167)
  Prédit: '{})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{})' → logprob: -0.000689082604367286
    2. 'r' → logprob: -7.6256890296936035
    3. ' {})' → logprob: -9.500689506530762
    4. '{' → logprob: -10.000689506530762
    5. '{}' → logprob: -10.250689506530762
    6. '{},' → logprob: -10.375689506530762
    7. 'radius' → logprob: -11.750689506530762
    8. ')' → logprob: -12.250689506530762
    9. ',' → logprob: -14.000689506530762
    10. '{}".' → logprob: -15.125689506530762

Token 901: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.7197802662849426
    2. '.format' → logprob: -0.7197802662849426
    3. '(self' → logprob: -4.469780445098877
    4. 'format' → logprob: -4.719780445098877
    5. '(".' → logprob: -5.719780445098877
    6. '(format' → logprob: -6.469780445098877
    7. ')' → logprob: -7.844780445098877
    8. 'self' → logprob: -8.719779968261719
    9. '{}".' → logprob: -8.719779968261719
    10. '(' → logprob: -9.219779968261719

Token 902: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -1.7432603272027336e-06
    2. '(format' → logprob: -13.750001907348633
    3. ' format' → logprob: -14.250001907348633
    4. '	format' → logprob: -17.875001907348633
    5. 'form' → logprob: -18.000001907348633
    6. 'def' → logprob: -18.375001907348633
    7. 'forma' → logprob: -19.750001907348633
    8. '.format' → logprob: -20.000001907348633
    9. 'ormat' → logprob: -20.625001907348633
    10. 'f' → logprob: -20.625001907348633

Token 903: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.4974866644479334e-05
    2. 'self' → logprob: -11.125015258789062
    3. '(' → logprob: -15.500015258789062
    4. '(re' → logprob: -18.375015258789062
    5. 'repr' → logprob: -18.500015258789062
    6. ' self' → logprob: -20.125015258789062
    7. '(
' → logprob: -20.250015258789062
    8. '(s' → logprob: -20.375015258789062
    9. ' (' → logprob: -20.500015258789062
    10. 's' → logprob: -20.875015258789062

Token 904: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -2.8087270038668066e-05
    2. 'self' → logprob: -10.750027656555176
    3. '.' → logprob: -12.125027656555176
    4. 'c' → logprob: -14.125027656555176
    5. ' .' → logprob: -15.375027656555176
    6. '.s' → logprob: -17.125028610229492
    7. '.self' → logprob: -17.750028610229492
    8. ').' → logprob: -17.875028610229492
    9. ' self' → logprob: -18.125028610229492
    10. '().' → logprob: -19.000028610229492

Token 905: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1008713702030946e-06
    2. ',self' → logprob: -14.000001907348633
    3. ' ,' → logprob: -14.250001907348633
    4. 'self' → logprob: -14.625001907348633
    5. ',
' → logprob: -17.000001907348633
    6. ')' → logprob: -18.500001907348633
    7. ',

' → logprob: -19.250001907348633
    8. ' self' → logprob: -19.625001907348633
    9. '(),' → logprob: -21.000001907348633
    10. ',r' → logprob: -21.250001907348633

Token 906: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019297054968774319
    2. ' self' → logprob: -6.251929759979248
    3. '       ' → logprob: -14.62692928314209
    4. '   ' → logprob: -15.87692928314209
    5. '     ' → logprob: -16.501930236816406
    6. ' ' → logprob: -16.501930236816406
    7. '    ' → logprob: -16.501930236816406
    8. '           ' → logprob: -16.876930236816406
    9. '      ' → logprob: -17.251930236816406
    10. '	self' → logprob: -17.251930236816406

Token 907: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0011823695385828614
    2. 'r' → logprob: -6.751182556152344
    3. '.' → logprob: -11.376182556152344
    4. ' r' → logprob: -14.876182556152344
    5. '	r' → logprob: -16.126182556152344
    6. ',r' → logprob: -16.626182556152344
    7. '.c' → logprob: -16.751182556152344
    8. ')' → logprob: -17.626182556152344
    9. ' .' → logprob: -18.501182556152344
    10. ').' → logprob: -18.501182556152344

Token 908: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.250000953674316
    3. '   ' → logprob: -15.375000953674316
    4. ')
' → logprob: -17.125
    5. ')`' → logprob: -17.75
    6. '       ' → logprob: -18.25
    7. ')}' → logprob: -18.625
    8. '),' → logprob: -18.875
    9. '<|end|>' → logprob: -18.875
    10. '))' → logprob: -19.0

Token 909: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06283275038003922
    2. '   ' → logprob: -2.812832832336426
    3. '<|end|>' → logprob: -7.937832832336426
    4. 'from' → logprob: -8.187832832336426
    5. '#' → logprob: -9.312832832336426
    6. 'class' → logprob: -9.937832832336426
    7. '<|end|>' → logprob: -10.187832832336426
    8. '	def' → logprob: -10.937832832336426
    9. ' def' → logprob: -10.937832832336426
    10. '
' → logprob: -12.062832832336426

Token 910: ' main' (ID: 2758)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.21034438908100128
    2. ' cc' → logprob: -3.3353443145751953
    3. 'inter' → logprob: -3.7103443145751953
    4. 'cross' → logprob: -3.8353443145751953
    5. 'is' → logprob: -4.335344314575195
    6. 'main' → logprob: -4.335344314575195
    7. 'dot' → logprob: -4.460344314575195
    8. 'distance' → logprob: -4.585344314575195
    9. ' intersect' → logprob: -4.960344314575195
    10. ' main' → logprob: -5.085344314575195

Token 911: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.3676733690081164e-05
    2. '()' → logprob: -11.12502384185791
    3. ' ():' → logprob: -12.25002384185791
    4. '():
' → logprob: -12.50002384185791
    5. '()>' → logprob: -16.375022888183594
    6. '(' → logprob: -16.625022888183594
    7. '().' → logprob: -17.250022888183594
    8. '():
' → logprob: -18.000022888183594
    9. '()">' → logprob: -18.625022888183594
    10. '()->' → logprob: -18.750022888183594

Token 912: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0013958304189145565
    2. ':' → logprob: -6.8763957023620605
    3. '()' → logprob: -8.376396179199219
    4. '():
' → logprob: -9.126396179199219
    5. '()->' → logprob: -11.376396179199219
    6. ' ():' → logprob: -11.876396179199219
    7. '(' → logprob: -13.126396179199219
    8. '):' → logprob: -13.626396179199219
    9. '()>' → logprob: -13.751396179199219
    10. '():
' → logprob: -15.626396179199219

Token 913: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0024835076183080673
    2. ' None' → logprob: -6.002483367919922
    3. 'int' → logprob: -11.752483367919922
    4. '   ' → logprob: -17.377483367919922
    5. 'none' → logprob: -18.002483367919922
    6. '_None' → logprob: -20.627483367919922
    7. ' ' → logprob: -20.752483367919922
    8. ' int' → logprob: -20.877483367919922
    9. 'void' → logprob: -21.127483367919922
    10. 'bool' → logprob: -21.377483367919922

Token 914: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005339774303138256
    2. '():' → logprob: -5.255339622497559
    3. ':
' → logprob: -9.505339622497559
    4. '():
' → logprob: -11.255339622497559
    5. '):' → logprob: -11.505339622497559
    6. ':def' → logprob: -12.755339622497559
    7. ' :' → logprob: -13.505339622497559
    8. '>:' → logprob: -14.130339622497559
    9. '{' → logprob: -14.505339622497559
    10. '()' → logprob: -14.630339622497559

Token 915: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008344047237187624
    2. ' pass' → logprob: -7.8758344650268555
    3. '    ' → logprob: -8.625834465026855
    4. 'pass' → logprob: -8.875834465026855
    5. 'n' → logprob: -9.625834465026855
    6. '	pass' → logprob: -11.000834465026855
    7. '...' → logprob: -11.125834465026855
    8. 'import' → logprob: -11.500834465026855
    9. '#' → logprob: -12.250834465026855
    10. '    
' → logprob: -12.625834465026855

Token 916: ' x' (ID: 1215)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.371800035238266
    2. 'p' → logprob: -1.7468000650405884
    3. 'n' → logprob: -3.246799945831299
    4. '   ' → logprob: -3.371799945831299
    5. 'import' → logprob: -3.996799945831299
    6. 'r' → logprob: -4.246799945831299
    7. 'c' → logprob: -4.996799945831299
    8. 'a' → logprob: -5.121799945831299
    9. '#' → logprob: -5.371799945831299
    10. ' pass' → logprob: -5.621799945831299

Token 917: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2866998314857483
    2. '1' → logprob: -1.7866997718811035
    3. ',' → logprob: -2.7866997718811035
    4. '=' → logprob: -4.1616997718811035
    5. '   ' → logprob: -6.7866997718811035
    6. 'y' → logprob: -6.9116997718811035
    7. '0' → logprob: -7.5366997718811035
    8. ':' → logprob: -7.7866997718811035
    9. ',y' → logprob: -7.7866997718811035
    10. ' ' → logprob: -8.536700248718262

Token 918: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020738892257213593
    2. ' =' → logprob: -4.3957390785217285
    3. '=' → logprob: -5.0207390785217285
    4. ',x' → logprob: -6.8957390785217285
    5. ' ,' → logprob: -8.14573860168457
    6. ':' → logprob: -9.27073860168457
    7. '=int' → logprob: -10.64573860168457
    8. ' ' → logprob: -10.64573860168457
    9. '<|end|>' → logprob: -10.64573860168457
    10. ',input' → logprob: -10.77073860168457

Token 919: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.003446349408477545
    2. ' y' → logprob: -5.753446578979492
    3. 'x' → logprob: -8.253446578979492
    4. ' ' → logprob: -12.628446578979492
    5. '<|end|>' → logprob: -13.003446578979492
    6. '  ' → logprob: -14.378446578979492
    7. '   ' → logprob: -14.628446578979492
    8. ' x' → logprob: -14.878446578979492
    9. ' =' → logprob: -15.128446578979492
    10. '=' → logprob: -15.128446578979492

Token 920: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011142584262415767
    2. '=' → logprob: -7.626114368438721
    3. '_' → logprob: -8.126113891601562
    4. ',' → logprob: -8.501113891601562
    5. ' =' → logprob: -9.751113891601562
    6. '<|end|>' → logprob: -9.751113891601562
    7. ' ' → logprob: -13.001113891601562
    8. ')' → logprob: -13.126113891601562
    9. '<|end|>' → logprob: -14.001113891601562
    10. '  ' → logprob: -14.001113891601562

Token 921: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3700215816497803
    2. '=' → logprob: -1.2450215816497803
    3. ' =' → logprob: -3.8700215816497803
    4. ',x' → logprob: -8.24502182006836
    5. ' ,' → logprob: -8.62002182006836
    6. ' ' → logprob: -11.24502182006836
    7. 'x' → logprob: -11.99502182006836
    8. '=x' → logprob: -12.12002182006836
    9. '=input' → logprob: -12.87002182006836
    10. '<|end|>' → logprob: -12.87002182006836

Token 922: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.73052782076411e-05
    2. ' x' → logprob: -9.625067710876465
    3. '   ' → logprob: -15.000067710876465
    4. 'z' → logprob: -15.500067710876465
    5. ' ' → logprob: -15.500067710876465
    6. '  ' → logprob: -15.625067710876465
    7. ',x' → logprob: -16.25006675720215
    8. '	x' → logprob: -16.37506675720215
    9. '_x' → logprob: -16.87506675720215
    10. 'w' → logprob: -17.12506675720215

Token 923: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004610551695805043
    2. '2' → logprob: -7.750461101531982
    3. '=' → logprob: -10.875460624694824
    4. ',' → logprob: -11.875460624694824
    5. ' =' → logprob: -13.125460624694824
    6. '```' → logprob: -13.375460624694824
    7. ' ' → logprob: -15.500460624694824
    8. '
' → logprob: -15.750460624694824
    9. '_' → logprob: -16.12546157836914
    10. '   ' → logprob: -16.62546157836914

Token 924: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4272752852994017e-05
    2. '=' → logprob: -11.62502384185791
    3. ' ,' → logprob: -11.75002384185791
    4. '1' → logprob: -12.62502384185791
    5. '<|end|>' → logprob: -13.25002384185791
    6. ' =' → logprob: -14.12502384185791
    7. ',y' → logprob: -14.25002384185791
    8. ',x' → logprob: -14.75002384185791
    9. '‌,' → logprob: -16.125024795532227
    10. ',
' → logprob: -16.125024795532227

Token 925: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0364612452685833
    2. ' y' → logprob: -3.411461353302002
    3. 'x' → logprob: -5.911461353302002
    4. '<|end|>' → logprob: -9.286460876464844
    5. ' x' → logprob: -12.286460876464844
    6. ' ' → logprob: -13.411460876464844
    7. ' =' → logprob: -13.411460876464844
    8. 's' → logprob: -13.911460876464844
    9. '=' → logprob: -14.286460876464844
    10. '...' → logprob: -15.411460876464844

Token 926: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07890763878822327
    2. '2' → logprob: -2.5789077281951904
    3. '=' → logprob: -11.32890796661377
    4. ' ' → logprob: -12.82890796661377
    5. ',' → logprob: -13.45390796661377
    6. '   ' → logprob: -14.57890796661377
    7. '```' → logprob: -14.57890796661377
    8. ' =' → logprob: -15.07890796661377
    9. '3' → logprob: -16.328907012939453
    10. 'def' → logprob: -16.953907012939453

Token 927: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13630186021327972
    2. ',' → logprob: -2.6363017559051514
    3. ' =' → logprob: -2.8863017559051514
    4. ',x' → logprob: -12.01130199432373
    5. 'x' → logprob: -13.38630199432373
    6. '=input' → logprob: -13.76130199432373
    7. ')' → logprob: -14.13630199432373
    8. '=x' → logprob: -14.38630199432373
    9. ' ' → logprob: -14.51130199432373
    10. ' ,' → logprob: -14.51130199432373

Token 928: ' [' (ID: 723)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.005249414127320051
    2. ' map' → logprob: -5.255249500274658
    3. 'list' → logprob: -11.3802490234375
    4. '[' → logprob: -13.3802490234375
    5. '(map' → logprob: -14.0052490234375
    6. '	map' → logprob: -14.3802490234375
    7. '   ' → logprob: -14.6302490234375
    8. '0' → logprob: -15.6302490234375
    9. ' ' → logprob: -15.7552490234375
    10. 'float' → logprob: -15.8802490234375

Token 929: 'int' (ID: 491)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.007037051022052765
    2. 'map' → logprob: -5.757037162780762
    3. ' float' → logprob: -6.132037162780762
    4. 'int' → logprob: -6.507037162780762
    5. '0' → logprob: -9.757037162780762
    6. ' map' → logprob: -10.132037162780762
    7. '*' → logprob: -10.257037162780762
    8. '   ' → logprob: -10.632037162780762
    9. '```' → logprob: -11.882037162780762
    10. '1' → logprob: -12.382037162780762

Token 930: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.34507665038108826
    2. '(i' → logprob: -1.3450766801834106
    3. '(input' → logprob: -3.595076560974121
    4. '(_)' → logprob: -5.970076560974121
    5. '()]' → logprob: -7.470076560974121
    6. '()' → logprob: -8.220076560974121
    7. '(s' → logprob: -8.470076560974121
    8. 'input' → logprob: -9.220076560974121
    9. ']' → logprob: -9.970076560974121
    10. '(_' → logprob: -10.220076560974121

Token 931: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5324087738990784
    2. '()' → logprob: -1.0324087142944336
    3. 'for' → logprob: -3.4074087142944336
    4. ' for' → logprob: -4.657408714294434
    5. '(x' → logprob: -5.032408714294434
    6. 'input' → logprob: -6.282408714294434
    7. '(i' → logprob: -6.657408714294434
    8. '())' → logprob: -6.657408714294434
    9. '()]' → logprob: -6.782408714294434
    10. '(input' → logprob: -7.157408714294434

Token 932: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7126857042312622
    2. '()' → logprob: -0.9626857042312622
    3. ' for' → logprob: -2.3376855850219727
    4. 'input' → logprob: -3.7126855850219727
    5. '(input' → logprob: -5.087685585021973
    6. 'in' → logprob: -8.337685585021973
    7. '(x' → logprob: -8.462685585021973
    8. ' input' → logprob: -9.712685585021973
    9. '()]' → logprob: -9.962685585021973
    10. ']' → logprob: -10.337685585021973

Token 933: ' x' (ID: 1215)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804344683885574
    2. ' input' → logprob: -3.28804349899292
    3. '(input' → logprob: -13.663043022155762
    4. 'in' → logprob: -14.913043022155762
    5. 'range' → logprob: -15.663043022155762
    6. 'open' → logprob: -15.913043022155762
    7. '=input' → logprob: -17.663043975830078
    8. '0' → logprob: -17.788043975830078
    9. 'x' → logprob: -17.913043975830078
    10. ' in' → logprob: -18.163043975830078

Token 934: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.30180710554122925
    2. 'in' → logprob: -1.926807165145874
    3. 'input' → logprob: -2.176807165145874
    4. ' input' → logprob: -6.676806926727295
    5. '(input' → logprob: -9.426807403564453
    6. '=input' → logprob: -9.676807403564453
    7. 'import' → logprob: -10.426807403564453
    8. '[' → logprob: -11.176807403564453
    9. '(' → logprob: -11.176807403564453
    10. ' ' → logprob: -12.051807403564453

Token 935: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001584850688232109
    2. ' input' → logprob: -8.750158309936523
    3. 'open' → logprob: -19.000158309936523
    4. '(input' → logprob: -19.500158309936523
    5. '
' → logprob: -19.750158309936523
    6. 'range' → logprob: -19.875158309936523
    7. '```' → logprob: -20.875158309936523
    8. '<input' → logprob: -21.625158309936523
    9. '=input' → logprob: -22.125158309936523
    10. '	input' → logprob: -22.250158309936523

Token 936: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0802738870552275e-05
    2. '()' → logprob: -11.87501049041748
    3. '()]' → logprob: -12.50001049041748
    4. '()].' → logprob: -17.875011444091797
    5. '(' → logprob: -18.125011444091797
    6. ' ().' → logprob: -18.125011444091797
    7. '()[' → logprob: -20.375011444091797
    8. '("").' → logprob: -21.250011444091797
    9. '().__' → logprob: -21.375011444091797
    10. '()
' → logprob: -21.750011444091797

Token 937: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015098588773980737
    2. 'strip' → logprob: -6.501509666442871
    3. '().' → logprob: -12.126509666442871
    4. 'rstrip' → logprob: -13.751509666442871
    5. ' split' → logprob: -14.626509666442871
    6. '(split' → logprob: -14.876509666442871
    7. 'spl' → logprob: -16.626510620117188
    8. '.split' → logprob: -17.751510620117188
    9. 's' → logprob: -18.376510620117188
    10. ' strip' → logprob: -19.001510620117188

Token 938: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -5.9795445849886164e-05
    2. '()' → logprob: -9.750060081481934
    3. '(' → logprob: -13.750060081481934
    4. '()]
' → logprob: -14.750060081481934
    5. '('' → logprob: -17.250059127807617
    6. '("' → logprob: -17.500059127807617
    7. '())' → logprob: -17.875059127807617
    8. ']' → logprob: -18.000059127807617
    9. '()],' → logprob: -18.000059127807617
    10. '()}' → logprob: -19.375059127807617

Token 939: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021338483784347773
    2. 'p' → logprob: -6.502133846282959
    3. 's' → logprob: -8.002134323120117
    4. '    
' → logprob: -8.752134323120117
    5. 'points' → logprob: -10.377134323120117
    6. '<|end|>' → logprob: -10.752134323120117
    7. 'a' → logprob: -11.127134323120117
    8. ' p' → logprob: -11.252134323120117
    9. 'x' → logprob: -11.752134323120117
    10. 'segment' → logprob: -12.252134323120117

Token 940: ' p' (ID: 275)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7805172204971313
    2. 'p' (adapté à ' p') → logprob: -0.9055172204971313
    3. 'x' → logprob: -3.655517101287842
    4. 'a' → logprob: -3.780517101287842
    5. 's' → logprob: -4.030517101287842
    6. 'r' → logprob: -4.530517101287842
    7. 'center' → logprob: -4.780517101287842
    8. 'l' → logprob: -4.905517101287842
    9. 'circle' → logprob: -4.905517101287842
    10. 'cx' → logprob: -5.030517101287842

Token 941: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.618001053633634e-05
    2. 'r' → logprob: -10.875025749206543
    3. ' =' → logprob: -12.250025749206543
    4. '=' → logprob: -13.500025749206543
    5. ' ' → logprob: -14.625025749206543
    6. 'a' → logprob: -15.625025749206543
    7. 's' → logprob: -16.12502670288086
    8. '_' → logprob: -16.50002670288086
    9. 'p' → logprob: -16.50002670288086
    10. 'A' → logprob: -16.87502670288086

Token 942: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1608322709798813
    2. '=' → logprob: -1.9108322858810425
    3. ',' → logprob: -7.410832405090332
    4. '<|end|>' → logprob: -13.285832405090332
    5. ')' → logprob: -14.910832405090332
    6. '.' → logprob: -15.285832405090332
    7. ':' → logprob: -15.785832405090332
    8. '<|end|>' → logprob: -16.285831451416016
    9. 'p' → logprob: -16.410831451416016
    10. ' =
' → logprob: -16.535831451416016

Token 943: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -7.493430894101039e-05
    2. ' Point' → logprob: -9.500075340270996
    3. '	Point' → logprob: -18.50007438659668
    4. 'Vector' → logprob: -20.75007438659668
    5. '   ' → logprob: -21.00007438659668
    6. '(Point' → logprob: -21.12507438659668
    7. ' ' → logprob: -22.50007438659668
    8. '_Point' → logprob: -22.87507438659668
    9. '_point' → logprob: -23.12507438659668
    10. '  ' → logprob: -23.37507438659668

Token 944: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00012106612848583609
    2. 'x' → logprob: -9.125121116638184
    3. '(' → logprob: -11.375121116638184
    4. '(
' → logprob: -15.125121116638184
    5. ' (' → logprob: -16.250120162963867
    6. '((' → logprob: -16.500120162963867
    7. '```' → logprob: -17.375120162963867
    8. '()' → logprob: -17.500120162963867
    9. '(float' → logprob: -17.625120162963867
    10. '(int' → logprob: -18.250120162963867

Token 945: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '=' → logprob: -14.625001907348633
    3. ',' → logprob: -14.875001907348633
    4. '```' → logprob: -16.125001907348633
    5. 's' → logprob: -16.250001907348633
    6. ')' → logprob: -16.625001907348633
    7. '(' → logprob: -16.750001907348633
    8. '2' → logprob: -16.750001907348633
    9. '(x' → logprob: -17.125001907348633
    10. ' ' → logprob: -17.250001907348633

Token 946: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3438327843905427e-05
    2. ',y' → logprob: -11.00002384185791
    3. ' ,' → logprob: -12.62502384185791
    4. ')' → logprob: -13.50002384185791
    5. ',p' → logprob: -13.62502384185791
    6. ',x' → logprob: -15.37502384185791
    7. ',
' → logprob: -15.87502384185791
    8. '‌,' → logprob: -15.87502384185791
    9. '<|end|>' → logprob: -15.87502384185791
    10. '),' → logprob: -16.750022888183594

Token 947: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.8889261304575484e-06
    2. ' y' → logprob: -12.500003814697266
    3. '<|end|>' → logprob: -17.375003814697266
    4. '   ' → logprob: -18.250003814697266
    5. '	y' → logprob: -20.000003814697266
    6. ')y' → logprob: -20.125003814697266
    7. ')' → logprob: -20.375003814697266
    8. 'x' → logprob: -20.500003814697266
    9. '  ' → logprob: -20.875003814697266
    10. '    ' → logprob: -21.000003814697266

Token 948: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 'y' → logprob: -16.875
    3. ')' → logprob: -17.375
    4. ' ' → logprob: -18.5
    5. ' y' → logprob: -19.25
    6. '2' → logprob: -19.625
    7. ')y' → logprob: -20.0
    8. '<|end|>' → logprob: -20.25
    9. '   ' → logprob: -20.625
    10. '```' → logprob: -21.25

Token 949: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020544764993246645
    2. ')
' → logprob: -8.500205039978027
    3. ')p' → logprob: -13.625205039978027
    4. '   ' → logprob: -15.625205039978027
    5. ' )' → logprob: -15.875205039978027
    6. ')
' → logprob: -16.125205993652344
    7. '),' → logprob: -16.125205993652344
    8. ')

' → logprob: -16.375205993652344
    9. '<|end|>' → logprob: -16.750205993652344
    10. ').' → logprob: -18.125205993652344

Token 950: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014255179092288017
    2. 'p' → logprob: -4.264255046844482
    3. ' p' → logprob: -9.38925552368164
    4. '	p' → logprob: -12.26425552368164
    5. '    
' → logprob: -13.13925552368164
    6. '
' → logprob: -14.88925552368164
    7. '<|end|>' → logprob: -15.38925552368164
    8. '  ' → logprob: -15.63925552368164
    9. '```' → logprob: -15.76425552368164
    10. 'x' → logprob: -15.88925552368164

Token 951: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -2.558399319241289e-05
    2. '   ' → logprob: -10.625025749206543
    3. ' p' → logprob: -13.625025749206543
    4. '
' → logprob: -17.125024795532227
    5. '    
' → logprob: -17.500024795532227
    6. '  ' → logprob: -18.250024795532227
    7. '	p' → logprob: -18.500024795532227
    8. 's' → logprob: -18.625024795532227
    9. ' ' → logprob: -19.000024795532227
    10. 'print' → logprob: -19.250024795532227

Token 952: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.62500286102295
    3. '２' → logprob: -15.37500286102295
    4. '۲' → logprob: -15.50000286102295
    5. '₂' → logprob: -16.312501907348633
    6. '_' → logprob: -16.312501907348633
    7. 'p' → logprob: -16.562501907348633
    8. '   ' → logprob: -16.625001907348633
    9. ' =' → logprob: -17.312501907348633
    10. '=' → logprob: -17.312501907348633

Token 953: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192928314208984
    2. '=' → logprob: -1.5019292831420898
    3. '<|end|>' → logprob: -16.626930236816406
    4. ')' → logprob: -17.501930236816406
    5. '＝' → logprob: -17.501930236816406
    6. ' =)' → logprob: -18.001930236816406
    7. ' ' → logprob: -18.126930236816406
    8. '=}' → logprob: -18.126930236816406
    9. ',' → logprob: -18.376930236816406
    10. ' =
' → logprob: -18.751930236816406

Token 954: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0005530327325686812
    2. ' Point' → logprob: -7.500553131103516
    3. '	Point' → logprob: -16.500553131103516
    4. '_point' → logprob: -17.875553131103516
    5. '(Point' → logprob: -18.000553131103516
    6. '.Point' → logprob: -18.625553131103516
    7. '_Point' → logprob: -19.000553131103516
    8. '   ' → logprob: -19.125553131103516
    9. '<Point' → logprob: -19.500553131103516
    10. 'p' → logprob: -19.625553131103516

Token 955: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00013464801304508
    2. 'x' → logprob: -9.000134468078613
    3. '(' → logprob: -11.500134468078613
    4. ' (' → logprob: -14.750134468078613
    5. '(
' → logprob: -15.000134468078613
    6. ' x' → logprob: -15.375134468078613
    7. '(Point' → logprob: -16.87513542175293
    8. 'Point' → logprob: -17.12513542175293
    9. '(points' → logprob: -18.50013542175293
    10. '   ' → logprob: -18.75013542175293

Token 956: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4974866644479334e-05
    2. 'x' → logprob: -11.500015258789062
    3. ',' → logprob: -13.125015258789062
    4. '(x' → logprob: -13.750015258789062
    5. '```' → logprob: -14.500015258789062
    6. '   ' → logprob: -14.750015258789062
    7. ' ' → logprob: -14.875015258789062
    8. '(' → logprob: -16.000015258789062
    9. '₂' → logprob: -16.375015258789062
    10. '۲' → logprob: -16.500015258789062

Token 957: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023214559769257903
    2. ',x' → logprob: -8.500231742858887
    3. ',p' → logprob: -11.250231742858887
    4. ' ,' → logprob: -11.875231742858887
    5. '(x' → logprob: -12.875231742858887
    6. ',y' → logprob: -13.125231742858887
    7. 'x' → logprob: -13.125231742858887
    8. ')' → logprob: -13.875231742858887
    9. 'p' → logprob: -14.375231742858887
    10. ',
' → logprob: -15.625231742858887

Token 958: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06920909136533737
    2. 'x' → logprob: -2.819209098815918
    3. ' y' → logprob: -4.944209098815918
    4. ' x' → logprob: -9.319209098815918
    5. ')' → logprob: -14.569209098815918
    6. '   ' → logprob: -15.444209098815918
    7. 'p' → logprob: -15.569209098815918
    8. ',' → logprob: -16.0692081451416
    9. ' ' → logprob: -16.8192081451416
    10. '(x' → logprob: -17.4442081451416

Token 959: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.000000953674316
    4. ')' → logprob: -17.625
    5. '   ' → logprob: -18.25
    6. '1' → logprob: -18.875
    7. '۲' → logprob: -18.875
    8. 'y' → logprob: -18.875
    9. '２' → logprob: -19.0
    10. '
' → logprob: -19.0

Token 960: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029875844484195113
    2. ')
' → logprob: -8.125298500061035
    3. '   ' → logprob: -13.000298500061035
    4. ' )' → logprob: -15.250298500061035
    5. ')

' → logprob: -16.25029945373535
    6. ')
' → logprob: -17.12529945373535
    7. ')p' → logprob: -17.50029945373535
    8. '))' → logprob: -17.87529945373535
    9. '#' → logprob: -18.25029945373535
    10. '),' → logprob: -18.50029945373535

Token 961: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01608000509440899
    2. 'p' → logprob: -4.891079902648926
    3. 'v' → logprob: -5.391079902648926
    4. 's' → logprob: -6.141079902648926
    5. 'd' → logprob: -7.641079902648926
    6. 'line' → logprob: -8.641079902648926
    7. '```' → logprob: -8.641079902648926
    8. 'seg' → logprob: -8.891079902648926
    9. 't' → logprob: -9.016079902648926
    10. 'dp' → logprob: -9.141079902648926

Token 962: ' l' (ID: 305)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3340173959732056
    2. 's' → logprob: -1.4590173959732056
    3. 'seg' → logprob: -1.5840173959732056
    4. 'p' → logprob: -2.709017276763916
    5. 'segment' → logprob: -2.959017276763916
    6. 'print' → logprob: -3.084017276763916
    7. 'l' (adapté à ' l') → logprob: -3.584017276763916
    8. 'line' → logprob: -3.709017276763916
    9. 'm' → logprob: -3.959017276763916
    10. 'mid' → logprob: -4.084017276763916

Token 963: ' =' (ID: 314)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.04486570134758949
    2. ' =' → logprob: -3.294865608215332
    3. '=' → logprob: -5.919865608215332
    4. 'line' → logprob: -6.544865608215332
    5. '1' → logprob: -7.169865608215332
    6. '=line' → logprob: -7.669865608215332
    7. '_line' → logprob: -7.669865608215332
    8. 'l' → logprob: -7.919865608215332
    9. '   ' → logprob: -8.919865608215332
    10. 'Line' → logprob: -9.294865608215332

Token 964: ' Line' (ID: 11342)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.474509060382843
    2. 'Line' → logprob: -0.974509060382843
    3. ' Segment' → logprob: -8.349509239196777
    4. ' Line' → logprob: -8.974509239196777
    5. 'Vector' → logprob: -10.474509239196777
    6. 'Point' → logprob: -10.974509239196777
    7. 'Seg' → logprob: -11.849509239196777
    8. '(Line' → logprob: -12.099509239196777
    9. 'segment' → logprob: -12.349509239196777
    10. 'Circle' → logprob: -13.474509239196777

Token 965: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0006764543941244483
    2. 'Segment' → logprob: -7.37567663192749
    3. '(Point' → logprob: -10.750676155090332
    4. '(' → logprob: -11.500676155090332
    5. '(S' → logprob: -11.750676155090332
    6. 'Seg' → logprob: -12.250676155090332
    7. '(P' → logprob: -12.500676155090332
    8. ' =' → logprob: -14.625676155090332
    9. '=' → logprob: -15.250676155090332
    10. ' Segment' → logprob: -15.375676155090332

Token 966: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. 'oint' → logprob: -13.250001907348633
    3. 'oints' → logprob: -15.625001907348633
    4. '(p' → logprob: -15.750001907348633
    5. 'p' → logprob: -17.750001907348633
    6. 'r' → logprob: -18.125001907348633
    7. ' ' → logprob: -18.250001907348633
    8. 'oin' → logprob: -18.500001907348633
    9. 'ar' → logprob: -18.750001907348633
    10. ' p' → logprob: -19.000001907348633

Token 967: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005610156804323196
    2. ',p' → logprob: -7.500561237335205
    3. ' ,' → logprob: -11.875560760498047
    4. 'p' → logprob: -14.625560760498047
    5. ',
' → logprob: -15.125560760498047
    6. ')' → logprob: -16.250560760498047
    7. ',l' → logprob: -16.375560760498047
    8. ' ' → logprob: -19.000560760498047
    9. ',q' → logprob: -19.125560760498047
    10. 's' → logprob: -19.250560760498047

Token 968: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00023071514442563057
    2. ' p' → logprob: -8.37523078918457
    3. '   ' → logprob: -17.00023078918457
    4. '<p' → logprob: -17.37523078918457
    5. '(p' → logprob: -18.37523078918457
    6. ')p' → logprob: -19.00023078918457
    7. ')' → logprob: -19.12523078918457
    8. ' ' → logprob: -19.25023078918457
    9. '	p' → logprob: -19.25023078918457
    10. '2' → logprob: -19.62523078918457

Token 969: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ')' → logprob: -14.375000953674316
    3. '۲' → logprob: -16.25
    4. '₂' → logprob: -17.3125
    5. '1' → logprob: -17.375
    6. '２' → logprob: -17.6875
    7. '<|end|>' → logprob: -17.875
    8. ' ' → logprob: -18.1875
    9. '```' → logprob: -18.4375
    10. '२' → logprob: -18.5

Token 970: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022108007688075304
    2. ')
' → logprob: -6.12721061706543
    3. '   ' → logprob: -10.75221061706543
    4. ')

' → logprob: -12.75221061706543
    5. ')
' → logprob: -14.37721061706543
    6. ' )' → logprob: -14.50221061706543
    7. ').' → logprob: -16.12721061706543
    8. '<|end|>' → logprob: -16.75221061706543
    9. ' ' → logprob: -17.00221061706543
    10. ')p' → logprob: -17.62721061706543

Token 971: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6964613795280457
    2. 'x' → logprob: -1.3214614391326904
    3. 'p' → logprob: -2.1964614391326904
    4. 'q' → logprob: -3.0714614391326904
    5. 'px' → logprob: -3.5714614391326904
    6. 'cx' → logprob: -3.6964614391326904
    7. 'qx' → logprob: -4.821461200714111
    8. 'a' → logprob: -5.071461200714111
    9. 'xp' → logprob: -6.071461200714111
    10. 'xc' → logprob: -6.821461200714111

Token 972: ' q' (ID: 2335)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7937722206115723
    2. 'p' → logprob: -1.2937722206115723
    3. 'q' (adapté à ' q') → logprob: -1.7937722206115723
    4. 'cx' → logprob: -3.4187722206115723
    5. 'px' → logprob: -3.9187722206115723
    6. 'qx' → logprob: -4.543772220611572
    7. 'm' → logprob: -4.793772220611572
    8. 'print' → logprob: -5.043772220611572
    9. 'xp' → logprob: -5.168772220611572
    10. 'a' → logprob: -5.293772220611572

Token 973: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18843449652194977
    2. '1' → logprob: -1.8134344816207886
    3. '_x' → logprob: -5.563434600830078
    4. ' =' → logprob: -6.063434600830078
    5. 'u' → logprob: -6.688434600830078
    6. '3' → logprob: -7.188434600830078
    7. 'r' → logprob: -8.438434600830078
    8. '=' → logprob: -9.938434600830078
    9. 'p' → logprob: -10.063434600830078
    10. '_point' → logprob: -10.688434600830078

Token 974: ' int' (ID: 677)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.048905275762081146
    2. 'int' → logprob: -3.423905372619629
    3. '[' → logprob: -5.298905372619629
    4. 'p' → logprob: -6.048905372619629
    5. '[int' → logprob: -6.048905372619629
    6. 'list' → logprob: -6.923905372619629
    7. '[l' → logprob: -7.173905372619629
    8. 'l' → logprob: -7.173905372619629
    9. '[]
' → logprob: -7.298905372619629
    10. '[]' → logprob: -7.673905372619629

Token 975: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.2729995988775045e-06
    2. 'input' → logprob: -12.000006675720215
    3. '=input' → logprob: -19.5000057220459
    4. ' input' → logprob: -20.1250057220459
    5. '(' → logprob: -20.5000057220459
    6. '	input' → logprob: -20.8750057220459
    7. ',input' → logprob: -21.1250057220459
    8. '<input' → logprob: -22.2500057220459
    9. '()' → logprob: -22.3750057220459
    10. '(in' → logprob: -22.5000057220459

Token 976: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007061431184411049
    2. '()' → logprob: -5.00706148147583
    3. '())
' → logprob: -8.007061004638672
    4. '()
' → logprob: -12.132061004638672
    5. '().' → logprob: -12.382061004638672
    6. ')' → logprob: -13.132061004638672
    7. '())

' → logprob: -14.257061004638672
    8. ' ())' → logprob: -14.757061004638672
    9. '();)' → logprob: -15.757061004638672
    10. '())
' → logprob: -16.132061004638672

Token 977: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5760328769683838
    2. '   ' → logprob: -0.8260328769683838
    3. ' for' → logprob: -9.326032638549805
    4. '	for' → logprob: -12.576032638549805
    5. '    
' → logprob: -14.951032638549805
    6. '
' → logprob: -15.201032638549805
    7. 'points' → logprob: -16.201032638549805
    8. 'results' → logprob: -16.826032638549805
    9. '<|end|>' → logprob: -17.701032638549805
    10. '```' → logprob: -17.701032638549805

Token 978: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -14.750000953674316
    3. ' for' → logprob: -15.750000953674316
    4. '	for' → logprob: -19.875
    5. 'from' → logprob: -22.375
    6. 'import' → logprob: -23.0
    7. 'points' → logprob: -25.25
    8. 'results' → logprob: -25.875
    9. '_for' → logprob: -26.5
    10. '    
' → logprob: -26.875

Token 979: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00036679807817563415
    2. ' _' → logprob: -8.000367164611816
    3. '_i' → logprob: -10.375367164611816
    4. ' i' → logprob: -16.6253662109375
    5. '_

' → logprob: -18.1253662109375
    6. '_=' → logprob: -18.3753662109375
    7. '_in' → logprob: -18.5003662109375
    8. '_a' → logprob: -18.8753662109375
    9. '__' → logprob: -19.2503662109375
    10. 'i' → logprob: -19.3753662109375

Token 980: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024816039949655533
    2. 'in' → logprob: -6.002481460571289
    3. ' ' → logprob: -12.502481460571289
    4. '  ' → logprob: -14.252481460571289
    5. 'q' → logprob: -14.877481460571289
    6. '<|end|>' → logprob: -15.377481460571289
    7. '	in' → logprob: -15.502481460571289
    8. 'i' → logprob: -15.752481460571289
    9. 'import' → logprob: -15.877481460571289
    10. '   ' → logprob: -16.50248146057129

Token 981: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.1424973713001236e-05
    2. ' range' → logprob: -10.375031471252441
    3. '(range' → logprob: -16.750030517578125
    4. '	range' → logprob: -17.875030517578125
    5. 'q' → logprob: -18.000030517578125
    6. 'in' → logprob: -18.125030517578125
    7. 'rang' → logprob: -18.375030517578125
    8. 'r' → logprob: -18.375030517578125
    9. 'ran' → logprob: -18.625030517578125
    10. '[' → logprob: -18.750030517578125

Token 982: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -4.0484450437361374e-05
    2. '(' → logprob: -10.375040054321289
    3. ' (' → logprob: -11.875040054321289
    4. 'q' → logprob: -13.125040054321289
    5. ' q' → logprob: -15.750040054321289
    6. '(query' → logprob: -18.00004005432129
    7. '(i' → logprob: -18.25004005432129
    8. '(qu' → logprob: -18.50004005432129
    9. '(n' → logprob: -18.62504005432129
    10. '	q' → logprob: -18.62504005432129

Token 983: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027027498930692673
    2. '):
' → logprob: -3.7770276069641113
    3. ':' → logprob: -5.652027606964111
    4. ' ):' → logprob: -8.777027130126953
    5. '   ' → logprob: -9.902027130126953
    6. '):
' → logprob: -10.527027130126953
    7. '():' → logprob: -11.527027130126953
    8. ')' → logprob: -12.152027130126953
    9. ':
' → logprob: -12.652027130126953
    10. ' :' → logprob: -12.777027130126953

Token 984: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001055676257237792
    2. '   ' → logprob: -6.876055717468262
    3. '	   ' → logprob: -11.251055717468262
    4. '<|end|>' → logprob: -13.001055717468262
    5. '```' → logprob: -13.376055717468262
    6. '	' → logprob: -13.626055717468262
    7. '[' → logprob: -14.626055717468262
    8. 'x' → logprob: -15.001055717468262
    9. 's' → logprob: -15.251055717468262
    10. ',' → logprob: -15.376055717468262

Token 985: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.006697488483041525
    2. '   ' → logprob: -6.256697654724121
    3. 'px' → logprob: -6.631697654724121
    4. 'a' → logprob: -6.756697654724121
    5. 'cx' → logprob: -6.881697654724121
    6. 'xp' → logprob: -8.006697654724121
    7. 'qx' → logprob: -8.381697654724121
    8. '       ' → logprob: -8.756697654724121
    9. 'xi' → logprob: -9.131697654724121
    10. 'xx' → logprob: -9.631697654724121

Token 986: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002922022540587932
    2. ' ,' → logprob: -9.25029182434082
    3. '1' → logprob: -9.62529182434082
    4. ',y' → logprob: -9.62529182434082
    5. '0' → logprob: -10.12529182434082
    6. '_,' → logprob: -11.25029182434082
    7. 'y' → logprob: -12.87529182434082
    8. 'q' → logprob: -13.25029182434082
    9. '3' → logprob: -13.50029182434082
    10. 'p' → logprob: -13.87529182434082

Token 987: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006715728435665369
    2. ' y' → logprob: -5.006715774536133
    3. '	y' → logprob: -16.381715774536133
    4. '   ' → logprob: -16.631715774536133
    5. ' ' → logprob: -16.631715774536133
    6. '  ' → logprob: -17.256715774536133
    7. '<|end|>' → logprob: -17.756715774536133
    8. '    ' → logprob: -18.006715774536133
    9. ',y' → logprob: -18.131715774536133
    10. ',' → logprob: -18.131715774536133

Token 988: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519317865371704
    2. ' =' → logprob: -1.5019317865371704
    3. ',' → logprob: -13.876932144165039
    4. '   ' → logprob: -14.376932144165039
    5. '=int' → logprob: -14.501932144165039
    6. '＝' → logprob: -15.376932144165039
    7. '    ' → logprob: -16.00193214416504
    8. ' ' → logprob: -16.37693214416504
    9. '=input' → logprob: -16.75193214416504
    10. '  ' → logprob: -17.00193214416504

Token 989: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.025344202294945717
    2. '[' → logprob: -4.025344371795654
    3. ' [' → logprob: -5.275344371795654
    4. ' map' → logprob: -7.150344371795654
    5. '[input' → logprob: -7.150344371795654
    6. 'map' → logprob: -8.025343894958496
    7. '[list' → logprob: -9.275343894958496
    8. '   ' → logprob: -11.400343894958496
    9. '[Int' → logprob: -11.775343894958496
    10. '[x' → logprob: -11.775343894958496

Token 990: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001242772996192798
    2. 'float' → logprob: -9.000123977661133
    3. '[int' → logprob: -15.000123977661133
    4. ' int' → logprob: -15.500123977661133
    5. '(int' → logprob: -16.125123977661133
    6. '   ' → logprob: -16.625123977661133
    7. 'map' → logprob: -17.125123977661133
    8. ']int' → logprob: -18.250123977661133
    9. '```' → logprob: -19.000123977661133
    10. '<int' → logprob: -19.125123977661133

Token 991: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00019984507525805384
    2. 'x' → logprob: -9.125200271606445
    3. '(input' → logprob: -9.500200271606445
    4. '(i' → logprob: -12.500200271606445
    5. 'input' → logprob: -12.500200271606445
    6. '()' → logprob: -12.625200271606445
    7. '(' → logprob: -12.750200271606445
    8. '(token' → logprob: -13.750200271606445
    9. ' x' → logprob: -15.000200271606445
    10. ' (' → logprob: -15.375200271606445

Token 992: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00180953333619982
    2. 'for' → logprob: -6.626809597015381
    3. '()' → logprob: -7.876809597015381
    4. ' for' → logprob: -9.251809120178223
    5. '())' → logprob: -13.626809120178223
    6. '   ' → logprob: -13.751809120178223
    7. ')]' → logprob: -13.751809120178223
    8. 'in' → logprob: -13.751809120178223
    9. '),' → logprob: -13.876809120178223
    10. '(x' → logprob: -14.376809120178223

Token 993: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07890014350414276
    2. ' for' → logprob: -2.578900098800659
    3. 'in' → logprob: -11.828900337219238
    4. ')' → logprob: -14.078900337219238
    5. ' in' → logprob: -14.328900337219238
    6. '```' → logprob: -15.203900337219238
    7. '()' → logprob: -15.453900337219238
    8. '   ' → logprob: -15.578900337219238
    9. 'input' → logprob: -15.703900337219238
    10. '...' → logprob: -16.203899383544922

Token 994: ' x' (ID: 1215)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.057589784264564514
    2. 'x' → logprob: -2.9325897693634033
    3. ' input' → logprob: -5.932590007781982
    4. 'in' → logprob: -10.182589530944824
    5. ' x' → logprob: -11.557589530944824
    6. ' ' → logprob: -14.307589530944824
    7. 'import' → logprob: -14.557589530944824
    8. '
' → logprob: -14.932589530944824
    9. ' in' → logprob: -15.057589530944824
    10. '_' → logprob: -15.182589530944824

Token 995: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.181211918592453
    2. 'in' → logprob: -1.8062119483947754
    3. 'input' → logprob: -6.556211948394775
    4. '(input' → logprob: -10.806211471557617
    5. ' input' → logprob: -11.056211471557617
    6. 's' → logprob: -13.431211471557617
    7. 'inp' → logprob: -13.431211471557617
    8. 'import' → logprob: -13.556211471557617
    9. ',input' → logprob: -14.181211471557617
    10. '(' → logprob: -14.931211471557617

Token 996: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007099286303855479
    2. ' input' → logprob: -7.2507100105285645
    3. '(input' → logprob: -21.875709533691406
    4. 'import' → logprob: -22.000709533691406
    5. '
' → logprob: -22.125709533691406
    6. '<input' → logprob: -22.125709533691406
    7. 'output' → logprob: -22.375709533691406
    8. '	input' → logprob: -22.875709533691406
    9. 'in' → logprob: -23.000709533691406
    10. 'stdin' → logprob: -23.000709533691406

Token 997: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -13.750000953674316
    3. ' ().' → logprob: -16.375001907348633
    4. '(' → logprob: -19.250001907348633
    5. '.split' → logprob: -19.500001907348633
    6. '()].' → logprob: -19.875001907348633
    7. '()]' → logprob: -20.625001907348633
    8. '.' → logprob: -21.875001907348633
    9. '].' → logprob: -22.375001907348633
    10. '()
' → logprob: -22.875001907348633

Token 998: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. 'strip' → logprob: -14.250000953674316
    3. ' split' → logprob: -17.25
    4. '(split' → logprob: -19.0
    5. '.split' → logprob: -19.375
    6. 'spl' → logprob: -22.25
    7. 'rstrip' → logprob: -22.625
    8. '().' → logprob: -22.875
    9. 'plit' → logprob: -23.375
    10. '_split' → logprob: -25.5

Token 999: '()]
' (ID: 67155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005635928362607956
    2. '()]' → logprob: -5.380635738372803
    3. ']
' → logprob: -7.505635738372803
    4. '       ' → logprob: -7.880635738372803
    5. '()' → logprob: -10.630636215209961
    6. ')]' → logprob: -10.755636215209961
    7. ']()' → logprob: -10.755636215209961
    8. '()]
' → logprob: -11.880636215209961
    9. ')' → logprob: -12.255636215209961
    10. ']()
' → logprob: -12.505636215209961

Token 1000: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018295119516551495
    2. '<|end|>' → logprob: -6.751829624176025
    3. '        
' → logprob: -7.876829624176025
    4. '   ' → logprob: -8.751829147338867
    5. ',' → logprob: -11.001829147338867
    6. ' p' → logprob: -11.251829147338867
    7. '<|end|>' → logprob: -11.376829147338867
    8. ' point' → logprob: -11.626829147338867
    9. '  
' → logprob: -11.626829147338867
    10. '    
' → logprob: -11.876829147338867

Token 1001: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.05427703261375427
    2. '       ' → logprob: -3.054276943206787
    3. ' p' → logprob: -5.304276943206787
    4. '   ' → logprob: -8.054277420043945
    5. 'q' → logprob: -9.054277420043945
    6. 'point' → logprob: -9.304277420043945
    7. 'print' → logprob: -10.554277420043945
    8. 'pt' → logprob: -10.679277420043945
    9. 'r' → logprob: -10.804277420043945
    10. 'v' → logprob: -10.929277420043945

Token 1002: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05494751036167145
    2. '=' → logprob: -2.9299476146698
    3. 'oint' → logprob: -10.429947853088379
    4. 'oints' → logprob: -11.929947853088379
    5. '_point' → logprob: -12.304947853088379
    6. '   ' → logprob: -12.429947853088379
    7. '=p' → logprob: -12.554947853088379
    8. 'p' → logprob: -13.554947853088379
    9. '       ' → logprob: -13.554947853088379
    10. '1' → logprob: -13.554947853088379

Token 1003: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -5.836499985889532e-05
    2. ' Point' → logprob: -9.7500581741333
    3. '	Point' → logprob: -16.875059127807617
    4. '   ' → logprob: -18.250059127807617
    5. '_point' → logprob: -18.750059127807617
    6. 'p' → logprob: -19.250059127807617
    7. 'point' → logprob: -19.625059127807617
    8. '.Point' → logprob: -19.750059127807617
    9. '(Point' → logprob: -19.750059127807617
    10. '_Point' → logprob: -19.875059127807617

Token 1004: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0012636866886168718
    2. '(' → logprob: -6.751263618469238
    3. 'x' → logprob: -9.376263618469238
    4. '(
' → logprob: -12.876263618469238
    5. ' (' → logprob: -13.001263618469238
    6. '<|end|>' → logprob: -13.626263618469238
    7. '(input' → logprob: -13.876263618469238
    8. '(p' → logprob: -14.501263618469238
    9. '=' → logprob: -15.876263618469238
    10. ',' → logprob: -16.126264572143555

Token 1005: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019388694781810045
    2. ',y' → logprob: -6.251938819885254
    3. ' ,' → logprob: -11.626938819885254
    4. ',p' → logprob: -14.501938819885254
    5. 'y' → logprob: -14.626938819885254
    6. ',
' → logprob: -15.501938819885254
    7. ' y' → logprob: -16.37693977355957
    8. ')' → logprob: -17.12693977355957
    9. 'p' → logprob: -17.62693977355957
    10. '<|end|>' → logprob: -17.75193977355957

Token 1006: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00033546582562848926
    2. ' y' → logprob: -8.000335693359375
    3. '	y' → logprob: -19.375335693359375
    4. ')y' → logprob: -19.875335693359375
    5. '   ' → logprob: -20.125335693359375
    6. ' ' → logprob: -21.125335693359375
    7. '<|end|>' → logprob: -21.375335693359375
    8. ')' → logprob: -21.375335693359375
    9. '    ' → logprob: -21.875335693359375
    10. ',' → logprob: -22.625335693359375

Token 1007: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18899358808994293
    2. ')
' → logprob: -1.9389935731887817
    3. '       ' → logprob: -3.5639936923980713
    4. ')
' → logprob: -10.688993453979492
    5. ')

' → logprob: -12.938993453979492
    6. '<|end|>' → logprob: -12.938993453979492
    7. '   ' → logprob: -13.438993453979492
    8. ' )
' → logprob: -14.188993453979492
    9. ' )' → logprob: -14.188993453979492
    10. '	' → logprob: -14.563993453979492

Token 1008: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011772842844948173
    2. 'print' → logprob: -9.625117301940918
    3. '   ' → logprob: -10.125117301940918
    4. '        
' → logprob: -13.125117301940918
    5. 'result' → logprob: -13.500117301940918
    6. 'p' → logprob: -13.625117301940918
    7. 's' → logprob: -13.625117301940918
    8. '<|end|>' → logprob: -14.125117301940918
    9. 'v' → logprob: -14.375117301940918
    10. 'r' → logprob: -14.375117301940918

Token 1009: ' a' (ID: 261)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5550565123558044
    2. 'print' → logprob: -1.4300565719604492
    3. '       ' → logprob: -1.9300565719604492
    4. 'q' → logprob: -4.055056571960449
    5. 'rp' → logprob: -4.680056571960449
    6. 'res' → logprob: -5.055056571960449
    7. 's' → logprob: -6.055056571960449
    8. 'pr' → logprob: -6.680056571960449
    9. 'c' → logprob: -6.680056571960449
    10. 'p' → logprob: -7.305056571960449

Token 1010: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798005849123001
    2. '=' → logprob: -2.304800510406494
    3. 'ns' → logprob: -2.804800510406494
    4. '   ' → logprob: -6.054800510406494
    5. 'b' → logprob: -7.429800510406494
    6. 'r' → logprob: -8.179800987243652
    7. 'n' → logprob: -8.679800987243652
    8. '       ' → logprob: -8.929800987243652
    9. 'ction' → logprob: -9.179800987243652
    10. '  ' → logprob: -9.429800987243652

Token 1011: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0006857485859654844
    2. 'p' → logprob: -7.625685691833496
    3. ' l' → logprob: -9.875685691833496
    4. 'float' → logprob: -10.000685691833496
    5. '2' → logprob: -10.625685691833496
    6. 'int' → logprob: -10.875685691833496
    7. '1' → logprob: -11.375685691833496
    8. 'Point' → logprob: -11.625685691833496
    9. 'x' → logprob: -12.125685691833496
    10. 'input' → logprob: -12.250685691833496

Token 1012: '.ref' (ID: 18976)
  Prédit: '.pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pro' → logprob: -0.40836194157600403
    2. '.ref' → logprob: -1.5333619117736816
    3. '.' → logprob: -2.1583619117736816
    4. '.reflect' → logprob: -5.908361911773682
    5. '.project' → logprob: -7.658361911773682
    6. '.point' → logprob: -9.03336238861084
    7. ' .' → logprob: -9.15836238861084
    8. '.p' → logprob: -9.28336238861084
    9. '.distance' → logprob: -9.90836238861084
    10. '.vector' → logprob: -9.90836238861084

Token 1013: 'lection' (ID: 1659)
  Prédit: 'lection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lection' → logprob: -5.1928003813372925e-05
    2. 'ection' → logprob: -10.125051498413086
    3. 'lect' → logprob: -12.125051498413086
    4. 'reflection' → logprob: -12.875051498413086
    5. '```' → logprob: -13.625051498413086
    6. 'le' → logprob: -14.125051498413086
    7. '``' → logprob: -14.750051498413086
    8. '#' → logprob: -15.125051498413086
    9. 'l' → logprob: -15.125051498413086
    10. 'rection' → logprob: -15.250051498413086

Token 1014: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.625001907348633
    3. ' (' → logprob: -15.250001907348633
    4. '(
' → logprob: -18.625001907348633
    5. 'p' → logprob: -19.125001907348633
    6. '(a' → logprob: -19.500001907348633
    7. '```' → logprob: -19.500001907348633
    8. '(point' → logprob: -19.625001907348633
    9. '(s' → logprob: -20.125001907348633
    10. '((' → logprob: -20.375001907348633

Token 1015: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03849434480071068
    2. ')
' → logprob: -3.288494348526001
    3. '       ' → logprob: -8.288494110107422
    4. ',' → logprob: -8.788494110107422
    5. ')
' → logprob: -10.913494110107422
    6. ')p' → logprob: -11.163494110107422
    7. '   ' → logprob: -12.413494110107422
    8. 'print' → logprob: -12.663494110107422
    9. ')

' → logprob: -12.913494110107422
    10. ',p' → logprob: -13.413494110107422

Token 1016: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001370320824207738
    2. '   ' → logprob: -9.125137329101562
    3. 'print' → logprob: -10.500137329101562
    4. '<|end|>' → logprob: -15.625137329101562
    5. '```' → logprob: -16.000137329101562
    6. '
' → logprob: -16.000137329101562
    7. ' print' → logprob: -17.000137329101562
    8. '        
' → logprob: -17.125137329101562
    9. '	   ' → logprob: -18.375137329101562
    10. '	' → logprob: -19.000137329101562

Token 1017: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001246185740455985
    2. '       ' → logprob: -6.751245975494385
    3. '   ' → logprob: -9.501246452331543
    4. ' print' → logprob: -13.751246452331543
    5. '	print' → logprob: -16.001245498657227
    6. 'printf' → logprob: -19.501245498657227
    7. '```' → logprob: -19.876245498657227
    8. 'println' → logprob: -21.001245498657227
    9. '
' → logprob: -21.251245498657227
    10. '	' → logprob: -21.626245498657227

Token 1018: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.010002793744206429
    2. '(int' → logprob: -4.885002613067627
    3. '("{' → logprob: -6.760002613067627
    4. '(f' → logprob: -7.385002613067627
    5. '(round' → logprob: -8.510003089904785
    6. 'a' → logprob: -8.760003089904785
    7. '("{}' → logprob: -8.760003089904785
    8. 'int' → logprob: -9.760003089904785
    9. '"{' → logprob: -10.885003089904785
    10. '(float' → logprob: -12.385003089904785

Token 1019: '.x' (ID: 3700)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001345946453511715
    2. '.x' → logprob: -6.626346111297607
    3. '())' → logprob: -11.25134563446045
    4. ' )' → logprob: -12.62634563446045
    5. ').' → logprob: -14.50134563446045
    6. '(' → logprob: -14.62634563446045
    7. '),' → logprob: -14.87634563446045
    8. '()' → logprob: -14.87634563446045
    9. '.' → logprob: -15.00134563446045
    10. ',' → logprob: -15.25134563446045

Token 1020: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003512168535962701
    2. ' ,' → logprob: -6.128512382507324
    3. ',a' → logprob: -7.378512382507324
    4. ')' → logprob: -8.003512382507324
    5. ',end' → logprob: -8.003512382507324
    6. ',p' → logprob: -10.878512382507324
    7. 'a' → logprob: -12.503512382507324
    8. ',",' → logprob: -12.878512382507324
    9. ',
' → logprob: -13.253512382507324
    10. ',b' → logprob: -13.378512382507324

Token 1021: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8624639324116288e-06
    2. ' a' → logprob: -13.250001907348633
    3. 'int' → logprob: -19.875001907348633
    4. '   ' → logprob: -21.875001907348633
    5. '	a' → logprob: -22.500001907348633
    6. ' ' → logprob: -24.750001907348633
    7. '    ' → logprob: -25.000001907348633
    8. ')a' → logprob: -25.125001907348633
    9. '(a' → logprob: -25.500001907348633
    10. '       ' → logprob: -25.500001907348633

Token 1022: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0052354102954268456
    2. '.' → logprob: -5.255235195159912
    3. ' .' → logprob: -13.75523567199707
    4. '.py' → logprob: -15.38023567199707
    5. '.a' → logprob: -16.13023567199707
    6. ' ' → logprob: -16.75523567199707
    7. '.x' → logprob: -16.88023567199707
    8. 'y' → logprob: -17.25523567199707
    9. ',' → logprob: -17.25523567199707
    10. ' y' → logprob: -17.38023567199707

Token 1023: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '   ' → logprob: -16.625001907348633
    5. ')}' → logprob: -16.750001907348633
    6. '),' → logprob: -17.000001907348633
    7. '<|end|>' → logprob: -17.000001907348633
    8. '}' → logprob: -17.250001907348633
    9. '       ' → logprob: -17.500001907348633
    10. ')a' → logprob: -17.750001907348633

Token 1024: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1025: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03883278742432594
    2. ' __' → logprob: -3.288832902908325
    3. '_' → logprob: -7.163832664489746
    4. '_name' → logprob: -12.413832664489746
    5. 'name' → logprob: -12.538832664489746
    6. 'if' → logprob: -13.163832664489746
    7. '___' → logprob: -13.288832664489746
    8. '/__' → logprob: -13.913832664489746
    9. '202' → logprob: -14.038832664489746
    10. '.__' → logprob: -14.163832664489746

Token 1026: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1931658238172531
    2. ' ==' → logprob: -1.8181657791137695
    3. '==' → logprob: -4.5681657791137695
    4. ' __' → logprob: -6.1931657791137695
    5. '_' → logprob: -7.4431657791137695
    6. '=="' → logprob: -8.56816577911377
    7. '=='' → logprob: -10.06816577911377
    8. 'name' → logprob: -10.56816577911377
    9. ' =="' → logprob: -10.81816577911377
    10. '=' → logprob: -11.81816577911377

Token 1027: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.0
    3. '____' → logprob: -16.875
    4. '__.__' → logprob: -17.0
    5. '__
' → logprob: -17.375
    6. '==' → logprob: -17.75
    7. '___' → logprob: -18.75
    8. ' __' → logprob: -19.5
    9. 'name' → logprob: -19.5
    10. '__.' → logprob: -20.0

Token 1028: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.481175035238266
    2. '__' → logprob: -1.2311750650405884
    3. ' ==' → logprob: -2.481174945831299
    4. '=="' → logprob: -5.106174945831299
    5. '=='' → logprob: -8.731175422668457
    6. '=' → logprob: -9.231175422668457
    7. '_' → logprob: -11.231175422668457
    8. '==
' → logprob: -12.231175422668457
    9. '___' → logprob: -12.856175422668457
    10. '===' → logprob: -13.106175422668457

Token 1029: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07890389114618301
    2. ''' → logprob: -2.578903913497925
    3. '__' → logprob: -11.453904151916504
    4. ' "__' → logprob: -12.703904151916504
    5. ' '__' → logprob: -15.453904151916504
    6. '   ' → logprob: -16.203903198242188
    7. ''"' → logprob: -17.328903198242188
    8. '('__' → logprob: -17.328903198242188
    9. '("__' → logprob: -17.453903198242188
    10. '"name' → logprob: -17.953903198242188

Token 1030: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.21236546337604523
    2. '__' → logprob: -1.7123655080795288
    3. ''' → logprob: -4.962365627288818
    4. '"' → logprob: -5.587365627288818
    5. 'name' → logprob: -9.08736515045166
    6. '   ' → logprob: -11.46236515045166
    7. '_main' → logprob: -11.83736515045166
    8. '==' → logprob: -12.08736515045166
    9. ''m' → logprob: -13.08736515045166
    10. 'python' → logprob: -13.33736515045166

Token 1031: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4747270345687866
    2. '__":
' → logprob: -0.9747270345687866
    3. '__':
' → logprob: -8.349726676940918
    4. '_' → logprob: -8.349726676940918
    5. '__:' → logprob: -9.349726676940918
    6. '__.' → logprob: -10.349726676940918
    7. '__.__' → logprob: -10.724726676940918
    8. '__["' → logprob: -11.349726676940918
    9. '__",' → logprob: -12.349726676940918
    10. '___' → logprob: -12.724726676940918

Token 1032: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011173497885465622
    2. 'main' → logprob: -4.511173725128174
    3. '	main' → logprob: -9.136173248291016
    4. ' main' → logprob: -11.261173248291016
    5. '   ' → logprob: -12.261173248291016
    6. '_main' → logprob: -16.136173248291016
    7. '  ' → logprob: -16.886173248291016
    8. '       ' → logprob: -17.011173248291016
    9. '__' → logprob: -17.511173248291016
    10. ' ' → logprob: -17.636173248291016

Token 1033: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.5
    3. '	main' → logprob: -21.625
    4. '_main' → logprob: -22.625
    5. '   ' → logprob: -24.125
    6. 'import' → logprob: -24.875
    7. '.main' → logprob: -25.625
    8. '(main' → logprob: -26.625
    9. 'mai' → logprob: -27.5
    10. '-main' → logprob: -28.0

Token 1034: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0038723968900740147
    2. '<|end|>' → logprob: -6.003872394561768
    3. '()
' → logprob: -7.128872394561768
    4. '(' → logprob: -8.378872871398926
    5. '
' → logprob: -8.378872871398926
    6. '()\' → logprob: -10.503872871398926
    7. '```' → logprob: -10.503872871398926
    8. '#' → logprob: -11.128872871398926
    9. '();' → logprob: -11.128872871398926
    10. '\n' → logprob: -11.503872871398926


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1032
Tokens correctement prédits (1ère position, stricte): 449
Tokens correctement prédits (1ère position, avec adaptation): 504
Tokens correctement prédits (top 10): 931
Précision stricte (1ère position): 43.51%
Précision adaptée (1ère position): 48.84%
Précision (top 10): 90.21%
================================================================================
