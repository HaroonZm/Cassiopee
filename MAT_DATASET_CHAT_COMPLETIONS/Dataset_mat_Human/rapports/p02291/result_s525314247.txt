================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import sin, cos, atan2

def sgn(x, eps=1e-10):
    if x < -eps: return -1
    if -eps <= x <= eps: return 0
    if eps < x: return 1

class Vector():
    def __init__(self, x=0.0, y=0.0):
        self.x = x
        self.y = y

    def arg(self):
        return atan2(self.y, self.x)

    def norm(self):
        return (self.x**2 + self.y**2)**0.5

    def rotate(self, t):
        nx = self.x * cos(t) - self.y * sin(t)
        ny = self.x * sin(t) + self.y * cos(t)
        return Vector(nx, ny)

    def counter(self):
        nx = -self.x
        ny = -self.y
        return Vector(nx, ny)

    def times(self, k):
        nx = self.x * k
        ny = self.y * k
        return Vector(nx, ny)

    def unit(self):
        norm = self.norm()
        nx = self.x / norm
        ny = self.y / norm
        return Vector(nx, ny)

    def normal(self):
        norm = self.norm()
        nx = -self.y / norm
        ny = self.x / norm
        return Vector(nx, ny)

    def add(self, other): #Vector, Vector -> Vector
        nx = self.x + other.x
        ny = self.y + other.y
        return Vector(nx, ny)

    def sub(self, other):
        nx = self.x - other.x
        ny = self.y - other.y
        return Vector(nx, ny)

    def dot(self, other): #Vector, Vector -> int
        return self.x * other.x + self.y * other.y

    def cross(self, other): #Vector, Vector -> int
        return self.x * other.y - self.y * other.x

    def __str__(self):
        return '{:.9f}'.format(self.x) + ' ' + '{:.9f}'.format(self.y)

class Line():
    def __init__(self, bgn=Vector(), end=Vector()):
        self.bgn = bgn
        self.end = end

    def build(self, a, b, c): #ax + by == 1
        assert sgn(a) != 0 or sgn(b) != 0
        if sgn(b) == 0:
            self.bgn = Vector(-c / a, 0.0)
            self.end = Vector(-c / a, 1.0)
        else:
            self.v = Vector(0, -c / b)
            self.u = Vector(1.0, -(a + b) / b)

    def vec(self):
        return self.end.sub(self.bgn)

    def projection(self, point):
        v = self.vec()
        u = point.sub(self.bgn)
        k = v.dot(u) / v.norm()
        h = v.unit().times(k)
        return self.bgn.add(h)

    def refrection(self, point):
        proj = self.projection(point)
        return proj.sub(point).times(2).add(point)

xp1, yp1, xp2, yp2 = map(int, input().split())
q = int(input())

p1 = Vector(xp1, yp1)
p2 = Vector(xp2, yp2)
l = Line(p1, p2)

for _ in range(q):
    x, y = map(int, input().split())
    p = Vector(x, y)
    ref = l.refrection(p)
    print(ref)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' sin' (ID: 2187)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.1960834264755249
    2. ' sqrt' → logprob: -1.946083426475525
    3. 'pow' → logprob: -4.1960835456848145
    4. 'pi' → logprob: -5.1960835456848145
    5. ' pi' → logprob: -5.3210835456848145
    6. 'sin' → logprob: -5.4460835456848145
    7. 'import' → logprob: -6.5710835456848145
    8. 'ceil' → logprob: -6.6960835456848145
    9. 'log' → logprob: -7.6960835456848145
    10. '```' → logprob: -7.9460835456848145

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.265633419388905e-05
    2. '\(' → logprob: -10.625062942504883
    3. ',' → logprob: -11.250062942504883
    4. '(
' → logprob: -11.625062942504883
    5. ' (' → logprob: -12.625062942504883
    6. '(x' → logprob: -12.875062942504883
    7. 'u' → logprob: -13.125062942504883
    8. '```' → logprob: -13.375062942504883
    9. '('' → logprob: -14.250062942504883
    10. ')' → logprob: -14.500062942504883

Token 5: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.16024038195610046
    2. ' cos' → logprob: -1.9102404117584229
    3. ' cosine' → logprob: -11.535240173339844
    4. '_cos' → logprob: -13.160240173339844
    5. ' ' → logprob: -13.285240173339844
    6. 'Cos' → logprob: -14.410240173339844
    7. '*cos' → logprob: -14.535240173339844
    8. '<|end|>' → logprob: -14.660240173339844
    9. 'c' → logprob: -15.535240173339844
    10. 'pi' → logprob: -15.660240173339844

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001563185011036694
    2. ',' → logprob: -6.87656307220459
    3. '\(' → logprob: -7.87656307220459
    4. '(
' → logprob: -9.87656307220459
    5. '```' → logprob: -10.50156307220459
    6. ' (' → logprob: -11.00156307220459
    7. '(x' → logprob: -11.37656307220459
    8. '\' → logprob: -12.00156307220459
    9. 'x' → logprob: -12.37656307220459
    10. 'u' → logprob: -12.62656307220459

Token 7: ' atan' (ID: 70327)
  Prédit: 'tan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tan' → logprob: -0.2209712564945221
    2. ' tan' → logprob: -1.7209712266921997
    3. 'atan' → logprob: -4.72097110748291
    4. 'pi' → logprob: -4.97097110748291
    5. ' pi' → logprob: -6.09597110748291
    6. 'sqrt' → logprob: -7.59597110748291
    7. ' sqrt' → logprob: -7.72097110748291
    8. 't' → logprob: -8.84597110748291
    9. ' radians' → logprob: -9.97097110748291
    10. 'tau' → logprob: -10.22097110748291

Token 8: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010097326710820198
    2. '2' → logprob: -5.135097503662109
    3. ',' → logprob: -6.385097503662109
    4. '(
' → logprob: -6.385097503662109
    5. '\(' → logprob: -8.26009750366211
    6. 's' → logprob: -9.38509750366211
    7. '(x' → logprob: -9.76009750366211
    8. '(`' → logprob: -10.01009750366211
    9. 'w' → logprob: -10.13509750366211
    10. 'h' → logprob: -10.38509750366211

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006921819876879454
    2. ',' → logprob: -7.625692367553711
    3. '\(' → logprob: -9.625692367553711
    4. '(
' → logprob: -10.250692367553711
    5. ' (' → logprob: -10.625692367553711
    6. '#' → logprob: -10.875692367553711
    7. 'def' → logprob: -11.750692367553711
    8. '<|end|>' → logprob: -12.000692367553711
    9. 'import' → logprob: -12.250692367553711
    10. '\n' → logprob: -12.625692367553711

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002600864740088582
    2. ',' → logprob: -6.87760066986084
    3. 'def' → logprob: -7.00260066986084
    4. '(
' → logprob: -8.12760066986084
    5. 'd' → logprob: -9.50260066986084
    6. 'x' → logprob: -9.87760066986084
    7. '\(' → logprob: -10.12760066986084
    8. 'a' → logprob: -10.37760066986084
    9. 'import' → logprob: -10.50260066986084
    10. '#' → logprob: -10.50260066986084

Token 11: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20791226625442505
    2. ' calculate' → logprob: -2.5829122066497803
    3. ' space' → logprob: -3.3329122066497803
    4. ' sin' → logprob: -3.4579122066497803
    5. ' f' → logprob: -4.707912445068359
    6. ' my' → logprob: -4.707912445068359
    7. ' a' → logprob: -5.957912445068359
    8. ' sine' → logprob: -5.957912445068359
    9. ' ' → logprob: -6.207912445068359
    10. '_' → logprob: -6.207912445068359

Token 12: 'gn' (ID: 5900)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.02961879037320614
    2. 'qrt' → logprob: -3.654618740081787
    3. 'quare' → logprob: -6.654618740081787
    4. 'ine' → logprob: -7.904618740081787
    5. 'i' → logprob: -8.029619216918945
    6. '(in' → logprob: -8.154619216918945
    7. 'q' → logprob: -8.154619216918945
    8. 'quared' → logprob: -8.404619216918945
    9. 'qr' → logprob: -9.404619216918945
    10. 'phere' → logprob: -9.529619216918945

Token 13: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033220804762095213
    2. '(x' → logprob: -6.128322124481201
    3. '_' → logprob: -8.253321647644043
    4. 's' → logprob: -9.003321647644043
    5. 'def' → logprob: -9.253321647644043
    6. '(n' → logprob: -9.253321647644043
    7. ')' → logprob: -9.378321647644043
    8. '(a' → logprob: -9.628321647644043
    9. '(value' → logprob: -9.878321647644043
    10. '(
' → logprob: -10.003321647644043

Token 14: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013866664376109838
    2. ')' → logprob: -6.626386642456055
    3. '):
' → logprob: -10.501386642456055
    4. ':' → logprob: -10.626386642456055
    5. ' ):' → logprob: -12.126386642456055
    6. '   ' → logprob: -14.251386642456055
    7. '>):' → logprob: -14.876386642456055
    8. '>:' → logprob: -15.001386642456055
    9. '=' → logprob: -15.376386642456055
    10. ' ' → logprob: -15.501386642456055

Token 15: ' eps' (ID: 39683)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3270100951194763
    2. '):' → logprob: -2.702010154724121
    3. ')' → logprob: -2.827010154724121
    4. ' ):' → logprob: -2.952010154724121
    5. ' )' → logprob: -3.327010154724121
    6. ' x' → logprob: -4.202010154724121
    7. ' n' → logprob: -4.202010154724121
    8. 'y' → logprob: -4.577010154724121
    9. ' ' → logprob: -4.702010154724121
    10. '  ' → logprob: -6.452010154724121

Token 16: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004172071814537048
    2. '):' → logprob: -5.504171848297119
    3. ')' → logprob: -10.379172325134277
    4. ':' → logprob: -10.879172325134277
    5. ',' → logprob: -11.004172325134277
    6. '=None' → logprob: -11.254172325134277
    7. ' =' → logprob: -12.254172325134277
    8. ')=' → logprob: -12.504172325134277
    9. ' ):' → logprob: -13.129172325134277
    10. ' ' → logprob: -13.629172325134277

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16416248679161072
    2. ' ' → logprob: -1.914162516593933
    3. '0' → logprob: -5.539162635803223
    4. ')' → logprob: -15.539162635803223
    5. '10' → logprob: -15.914162635803223
    6. '9' → logprob: -16.289161682128906
    7. '5' → logprob: -16.289161682128906
    8. '+' → logprob: -16.414161682128906
    9. '<|end|>' → logprob: -16.789161682128906
    10. '2' → logprob: -16.914161682128906

Token 18: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.015338235534727573
    2. '0' → logprob: -4.39033842086792
    3. '-' → logprob: -5.89033842086792
    4. '-e' → logprob: -10.640337944030762
    5. '.' → logprob: -11.265337944030762
    6. '.e' → logprob: -11.890337944030762
    7. ' ' → logprob: -12.390337944030762
    8. ')' → logprob: -13.015337944030762
    9. ')e' → logprob: -13.765337944030762
    10. '```' → logprob: -13.890337944030762

Token 19: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. '```' → logprob: -18.375
    3. '-)' → logprob: -19.875
    4. '−' → logprob: -20.25
    5. '4' → logprob: -20.75
    6. '-
' → logprob: -20.875
    7. ' -' → logprob: -21.0
    8. '0' → logprob: -21.5
    9. '9' → logprob: -21.625
    10. '-
' → logprob: -21.625

Token 20: '10' (ID: 702)
  Prédit: '08'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: -0.8400683403015137
    2. '09' → logprob: -1.7150683403015137
    3. '12' → logprob: -2.3400683403015137
    4. '9' → logprob: -2.3400683403015137
    5. '10' → logprob: -2.4650683403015137
    6. '8' → logprob: -2.8400683403015137
    7. '07' → logprob: -4.090068340301514
    8. '7' → logprob: -4.340068340301514
    9. '06' → logprob: -4.465068340301514
    10. '05' → logprob: -5.215068340301514

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001839633216150105
    2. ')' → logprob: -6.376839637756348
    3. '):
' → logprob: -9.126839637756348
    4. ' ):' → logprob: -10.876839637756348
    5. ':' → logprob: -12.251839637756348
    6. '):
' → logprob: -14.126839637756348
    7. ''):' → logprob: -14.251839637756348
    8. '):

' → logprob: -14.251839637756348
    9. '   ' → logprob: -14.501839637756348
    10. ' ' → logprob: -14.626839637756348

Token 22: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023828020319342613
    2. '):' → logprob: -4.273828029632568
    3. '   ' → logprob: -5.523828029632568
    4. ':return' → logprob: -5.648828029632568
    5. '():' → logprob: -6.898828029632568
    6. ' :' → logprob: -7.773828029632568
    7. '>:' → logprob: -8.02382755279541
    8. ':**' → logprob: -10.02382755279541
    9. '```' → logprob: -10.02382755279541
    10. '`:' → logprob: -10.52382755279541

Token 23: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1952614784240723
    2. ' if' → logprob: -1.1952614784240723
    3. ' return' → logprob: -1.5702614784240723
    4. 'if' (adapté à ' if') → logprob: -2.1952614784240723
    5. '```' → logprob: -2.8202614784240723
    6. 'return' → logprob: -4.570261478424072
    7. '`' → logprob: -6.070261478424072
    8. '    ' → logprob: -6.695261478424072
    9. ' ' → logprob: -7.570261478424072
    10. '0' → logprob: -7.695261478424072

Token 24: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2554399073123932
    2. ' abs' → logprob: -1.5054398775100708
    3. 'x' → logprob: -6.255439758300781
    4. 'abs' → logprob: -6.505439758300781
    5. ' ' → logprob: -9.630439758300781
    6. '   ' → logprob: -11.630439758300781
    7. '(abs' → logprob: -11.630439758300781
    8. '  ' → logprob: -13.255439758300781
    9. '    ' → logprob: -13.505439758300781
    10. '_abs' → logprob: -14.505439758300781

Token 25: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3559621572494507
    2. ' >' → logprob: -1.2309621572494507
    3. '>' → logprob: -5.48096227645874
    4. '<' → logprob: -5.85596227645874
    5. '<|end|>' → logprob: -8.480961799621582
    6. ' ' → logprob: -9.605961799621582
    7. '<|end|>' → logprob: -10.355961799621582
    8. 'abs' → logprob: -10.355961799621582
    9. '   ' → logprob: -10.730961799621582
    10. '+' → logprob: -11.668461799621582

Token 26: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006821220740675926
    2. '-' → logprob: -5.256821155548096
    3. '0' → logprob: -6.756821155548096
    4. ' eps' → logprob: -8.381821632385254
    5. ' ' → logprob: -8.881821632385254
    6. '-e' → logprob: -10.381821632385254
    7. 'eps' → logprob: -11.006821632385254
    8. '-s' → logprob: -12.881821632385254
    9. '-E' → logprob: -14.006821632385254
    10. '-n' → logprob: -14.381821632385254

Token 27: 'eps' (ID: 12967)
  Prédit: 'eps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eps' → logprob: -0.014179493300616741
    2. ' eps' → logprob: -4.264179706573486
    3. 'epsilon' → logprob: -11.764179229736328
    4. 'ep' → logprob: -12.139179229736328
    5. 'esp' → logprob: -14.139179229736328
    6. 'e' → logprob: -14.139179229736328
    7. '_eps' → logprob: -14.514179229736328
    8. ' epsilon' → logprob: -15.139179229736328
    9. ' ' → logprob: -15.889179229736328
    10. '0' → logprob: -16.264179229736328

Token 28: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037607743870466948
    2. ':return' → logprob: -5.628760814666748
    3. ' :' → logprob: -9.12876033782959
    4. '):' → logprob: -10.87876033782959
    5. ':
' → logprob: -10.87876033782959
    6. '   ' → logprob: -12.12876033782959
    7. '<|end|>' → logprob: -13.12876033782959
    8. ' return' → logprob: -13.25376033782959
    9. '       ' → logprob: -13.37876033782959
    10. '>:' → logprob: -13.62876033782959

Token 29: ' return' (ID: 622)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6348546147346497
    2. '-' → logprob: -1.0098545551300049
    3. '       ' → logprob: -3.009854555130005
    4. 'return' → logprob: -4.134854793548584
    5. ' return' → logprob: -4.134854793548584
    6. '   ' → logprob: -4.509854793548584
    7. '<|end|>' → logprob: -4.884854793548584
    8. '    ' → logprob: -6.384854793548584
    9. ' ' → logprob: -6.884854793548584
    10. ':return' → logprob: -7.134854793548584

Token 30: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10021529346704483
    2. ' -' → logprob: -2.350215196609497
    3. '1' → logprob: -11.850214958190918
    4. ' ' → logprob: -13.475214958190918
    5. '  ' → logprob: -16.725215911865234
    6. '   ' → logprob: -17.225215911865234
    7. '<|end|>' → logprob: -18.725215911865234
    8. '```' → logprob: -18.850215911865234
    9. ' ' → logprob: -19.350215911865234
    10. '    ' → logprob: -19.975215911865234

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '0' → logprob: -15.750005722045898
    4. '  ' → logprob: -17.6250057220459
    5. '   ' → logprob: -17.8750057220459
    6. '<|end|>' → logprob: -18.0000057220459
    7. '```' → logprob: -18.1250057220459
    8. '2' → logprob: -19.7500057220459
    9. '.' → logprob: -20.0000057220459
    10. '-' → logprob: -20.1250057220459

Token 32: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' -' (ID: 533)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.008680282160639763
    2. 'x' → logprob: -4.75868034362793
    3. ' ' → logprob: -9.75868034362793
    4. ' abs' → logprob: -12.25868034362793
    5. 'abs' → logprob: -13.38368034362793
    6. '  ' → logprob: -14.50868034362793
    7. '<|end|>' → logprob: -14.63368034362793
    8. '	x' → logprob: -15.50868034362793
    9. '0' → logprob: -15.75868034362793
    10. '   ' → logprob: -16.13368034362793

Token 36: 'eps' (ID: 12967)
  Prédit: 'eps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eps' → logprob: -0.033658839762210846
    2. ' eps' → logprob: -3.408658742904663
    3. '_eps' → logprob: -12.033658981323242
    4. 'epsilon' → logprob: -12.658658981323242
    5. 'esp' → logprob: -13.033658981323242
    6. 'ep' → logprob: -13.908658981323242
    7. '1' → logprob: -15.783658981323242
    8. ' ' → logprob: -16.408658981323242
    9. ' epsilon' → logprob: -16.533658981323242
    10. '0' → logprob: -16.658658981323242

Token 37: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06512854248285294
    2. '<' → logprob: -3.1901285648345947
    3. ' <=' → logprob: -3.9401285648345947
    4. '<=' → logprob: -6.315128326416016
    5. ' ' → logprob: -7.565128326416016
    6. '<|end|>' → logprob: -9.315128326416016
    7. ' >' → logprob: -11.815128326416016
    8. ' ' → logprob: -12.690128326416016
    9. '<x' → logprob: -13.065128326416016
    10. '>' → logprob: -13.565128326416016

Token 38: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804194927215576
    2. ' x' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.413042068481445
    4. '   ' → logprob: -16.413042068481445
    5. '	x' → logprob: -16.413042068481445
    6. ')x' → logprob: -16.788042068481445
    7. '<|end|>' → logprob: -17.288042068481445
    8. '```' → logprob: -18.663042068481445
    9. '0' → logprob: -18.788042068481445
    10. '(x' → logprob: -19.038042068481445

Token 39: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7492265701293945
    2. '<=' → logprob: -1.2492265701293945
    3. ' <=' → logprob: -1.7492265701293945
    4. ' <' → logprob: -2.8742265701293945
    5. '<|end|>' → logprob: -5.1242265701293945
    6. ' and' → logprob: -5.8742265701293945
    7. 'and' → logprob: -7.2492265701293945
    8. ' ' → logprob: -7.8742265701293945
    9. '<|end|>' → logprob: -8.874226570129395
    10. 'x' → logprob: -10.374226570129395

Token 40: ' eps' (ID: 39683)
  Prédit: 'eps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eps' → logprob: -0.6931656002998352
    2. ' eps' → logprob: -0.6931656002998352
    3. ' ' → logprob: -11.56816577911377
    4. 'ep' → logprob: -13.06816577911377
    5. '+' → logprob: -13.19316577911377
    6. '_eps' → logprob: -13.44316577911377
    7. 'epsilon' → logprob: -13.94316577911377
    8. ' +' → logprob: -13.94316577911377
    9. '0' → logprob: -14.56816577911377
    10. ' epsilon' → logprob: -14.94316577911377

Token 41: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002309646224603057
    2. ' :' → logprob: -6.502309799194336
    3. ':return' → logprob: -7.127309799194336
    4. '   ' → logprob: -12.627309799194336
    5. ' return' → logprob: -15.252309799194336
    6. 'return' → logprob: -15.377309799194336
    7. ':
' → logprob: -15.752309799194336
    8. '):' → logprob: -16.377309799194336
    9. ' ' → logprob: -17.127309799194336
    10. '       ' → logprob: -17.377309799194336

Token 42: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38706377148628235
    2. '0' → logprob: -1.13706374168396
    3. ' return' → logprob: -8.887063980102539
    4. '    ' → logprob: -10.637063980102539
    5. 'return' → logprob: -10.887063980102539
    6. '1' → logprob: -11.762063980102539
    7. '   ' → logprob: -12.512063980102539
    8. ' ' → logprob: -16.38706398010254
    9. '       ' → logprob: -16.51206398010254
    10. '  ' → logprob: -16.51206398010254

Token 43: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029750484973192215
    2. ' ' → logprob: -3.5297505855560303
    3. '   ' → logprob: -19.02975082397461
    4. '1' → logprob: -19.27975082397461
    5. '۰' → logprob: -19.52975082397461
    6. ' ' → logprob: -19.52975082397461
    7. '  ' → logprob: -19.65475082397461
    8. '<|end|>' → logprob: -20.27975082397461
    9. '    ' → logprob: -21.02975082397461
    10. '```' → logprob: -21.65475082397461

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '1' → logprob: -20.00000762939453
    4. '۰' → logprob: -20.50000762939453
    5. '  ' → logprob: -22.37500762939453
    6. '   ' → logprob: -22.75000762939453
    7. '```' → logprob: -22.75000762939453
    8. '０' → logprob: -22.87500762939453
    9. ' ' → logprob: -23.37500762939453
    10. '+' → logprob: -24.00000762939453

Token 45: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020712753757834435
    2. '    
' → logprob: -7.002071380615234
    3. '<|end|>' → logprob: -7.627071380615234
    4. '  ' → logprob: -8.627071380615234
    5. '   
' → logprob: -9.127071380615234
    6. '  
' → logprob: -9.252071380615234
    7. '    ' → logprob: -9.877071380615234
    8. '\n' → logprob: -10.127071380615234
    9. '```' → logprob: -10.127071380615234
    10. '
' → logprob: -10.752071380615234

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021582336630672216
    2. '    
' → logprob: -7.127158164978027
    3. ' return' → logprob: -7.877158164978027
    4. '
' → logprob: -8.252158164978027
    5. 'return' → logprob: -8.877158164978027
    6. '```' → logprob: -9.002158164978027
    7. '   
' → logprob: -9.377158164978027
    8. '  ' → logprob: -9.502158164978027
    9. '\n' → logprob: -9.502158164978027
    10. '1' → logprob: -9.627158164978027

Token 47: ' if' (ID: 538)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09316131472587585
    2. '   ' → logprob: -2.4681613445281982
    3. ' return' → logprob: -6.093161106109619
    4. 'return' → logprob: -6.843161106109619
    5. ' ' → logprob: -8.093161582946777
    6. '    ' → logprob: -8.343161582946777
    7. '  ' → logprob: -8.718161582946777
    8. ' else' → logprob: -9.968161582946777
    9. '```' → logprob: -9.968161582946777
    10. '    
' → logprob: -10.593161582946777

Token 48: ' eps' (ID: 39683)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06197575107216835
    2. 'x' → logprob: -2.8119757175445557
    3. '1' → logprob: -12.561975479125977
    4. ' ' → logprob: -12.686975479125977
    5. '   ' → logprob: -13.561975479125977
    6. '	x' → logprob: -16.436975479125977
    7. '  ' → logprob: -17.436975479125977
    8. '0' → logprob: -17.811975479125977
    9. '+' → logprob: -18.936975479125977
    10. '    ' → logprob: -19.061975479125977

Token 49: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.055053457617759705
    2. ' <' → logprob: -2.930053472518921
    3. '>' → logprob: -8.9300537109375
    4. ':' → logprob: -11.3050537109375
    5. '<=' → logprob: -11.9300537109375
    6. ' >' → logprob: -12.1800537109375
    7. '+' → logprob: -13.1800537109375
    8. ' ' → logprob: -13.6800537109375
    9. ' <=' → logprob: -13.8050537109375
    10. '<len' → logprob: -13.8050537109375

Token 50: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20141352713108063
    2. ' x' → logprob: -1.7014135122299194
    3. ' ' → logprob: -15.82641315460205
    4. '	x' → logprob: -16.826414108276367
    5. ')x' → logprob: -17.201414108276367
    6. '0' → logprob: -19.201414108276367
    7. '>x' → logprob: -19.451414108276367
    8. ' ' → logprob: -19.701414108276367
    9. '(x' → logprob: -19.826414108276367
    10. '$x' → logprob: -20.201414108276367

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016850868239998817
    2. ' :' → logprob: -4.14185094833374
    3. ':return' → logprob: -7.89185094833374
    4. '<' → logprob: -8.266850471496582
    5. ' <' → logprob: -9.016850471496582
    6. ':<' → logprob: -10.141850471496582
    7. '):' → logprob: -11.891850471496582
    8. '>:' → logprob: -13.016850471496582
    9. '<x' → logprob: -13.141850471496582
    10. ':x' → logprob: -13.266850471496582

Token 52: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.701365053653717
    2. ' ' → logprob: -0.701365053653717
    3. ' return' → logprob: -4.826364994049072
    4. 'return' → logprob: -8.95136547088623
    5. '    ' → logprob: -10.95136547088623
    6. '   ' → logprob: -11.45136547088623
    7. ' ' → logprob: -12.20136547088623
    8. '```' → logprob: -13.57636547088623
    9. '  ' → logprob: -14.07636547088623
    10. ' s' → logprob: -14.20136547088623

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015028368216007948
    2. ' ' → logprob: -6.501502990722656
    3. '+' → logprob: -14.501502990722656
    4. ' +' → logprob: -19.251502990722656
    5. '  ' → logprob: -20.001502990722656
    6. '   ' → logprob: -20.501502990722656
    7. '```' → logprob: -21.751502990722656
    8. '0' → logprob: -22.001502990722656
    9. '<|end|>' → logprob: -22.126502990722656
    10. ' ' → logprob: -22.126502990722656

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. '+' → logprob: -14.750001907348633
    4. '  ' → logprob: -21.375001907348633
    5. '```' → logprob: -21.375001907348633
    6. '   ' → logprob: -22.500001907348633
    7. ' +' → logprob: -22.625001907348633
    8. '１' → logprob: -23.000001907348633
    9. '۱' → logprob: -23.500001907348633
    10. '<|end|>' → logprob: -24.000001907348633

Token 55: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7810925841331482
    2. '\n' → logprob: -1.281092643737793
    3. '<|end|>' → logprob: -1.531092643737793
    4. '

' → logprob: -4.156092643737793
    5. 'newline' → logprob: -4.656092643737793
    6. '```' → logprob: -4.781092643737793
    7. '' → logprob: -5.531092643737793
    8. '\' → logprob: -5.656092643737793
    9. ' ' → logprob: -6.656092643737793
    10. '<|end|>' → logprob: -7.281092643737793

Token 56: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08790688961744308
    2. '

' → logprob: -2.962906837463379
    3. '\n' → logprob: -4.212906837463379
    4. 'def' → logprob: -4.962906837463379
    5. '<|end|>' → logprob: -5.587906837463379
    6. '```' → logprob: -5.712906837463379
    7. '\' → logprob: -6.837906837463379
    8. '' → logprob: -7.212906837463379
    9. ':' → logprob: -8.087906837463379
    10. 'newline' → logprob: -8.212906837463379

Token 57: ' Vector' (ID: 8764)
  Prédit: ' Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.07519376277923584
    2. ' Point' → logprob: -2.8251938819885254
    3. ' Vec' → logprob: -4.575193881988525
    4. ' ' → logprob: -6.825193881988525
    5. ' My' → logprob: -8.075193405151367
    6. ' S' → logprob: -8.325193405151367
    7. ' Math' → logprob: -8.700193405151367
    8. ' V' → logprob: -9.200193405151367
    9. ' Angle' → logprob: -9.200193405151367
    10. ' Quaternion' → logprob: -9.200193405151367

Token 58: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006919495761394501
    2. '3' → logprob: -5.8819193840026855
    3. '(' → logprob: -6.0069193840026855
    4. '2' → logprob: -7.0069193840026855
    5. ' :' → logprob: -8.506919860839844
    6. '4' → logprob: -8.631919860839844
    7. '():' → logprob: -9.131919860839844
    8. '):' → logprob: -9.756919860839844
    9. '(Vector' → logprob: -10.131919860839844
    10. ':
' → logprob: -10.256919860839844

Token 59: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2607609033584595
    2. '(' → logprob: -1.5107609033584595
    3. '(object' → logprob: -5.76076078414917
    4. ' :' → logprob: -6.01076078414917
    5. ':
' → logprob: -7.38576078414917
    6. '():' → logprob: -7.63576078414917
    7. '<|end|>' → logprob: -7.76076078414917
    8. '   ' → logprob: -8.010761260986328
    9. '```' → logprob: -8.135761260986328
    10. ' (' → logprob: -9.010761260986328

Token 60: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0194648839533329
    2. 'def' (adapté à ' def') → logprob: -4.89446496963501
    3. ' ' → logprob: -5.26946496963501
    4. '   ' → logprob: -5.89446496963501
    5. ' (' → logprob: -6.76946496963501
    6. '(' → logprob: -7.14446496963501
    7. ' 
' → logprob: -7.89446496963501
    8. '    ' → logprob: -7.89446496963501
    9. '_' → logprob: -8.769464492797852
    10. ' __' → logprob: -9.019464492797852

Token 61: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.08040442317724228
    2. ' ' → logprob: -2.83040452003479
    3. ' _' → logprob: -5.330404281616211
    4. '_' → logprob: -5.705404281616211
    5. ' init' → logprob: -5.830404281616211
    6. '__' → logprob: -5.955404281616211
    7. ' ' → logprob: -6.205404281616211
    8. '_init' → logprob: -7.330404281616211
    9. 'init' → logprob: -7.455404281616211
    10. '  ' → logprob: -7.955404281616211

Token 62: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.5577775128767826e-06
    2. 'i' → logprob: -12.250005722045898
    3. 'ini' → logprob: -14.500005722045898
    4. 'in' → logprob: -16.0000057220459
    5. ' init' → logprob: -16.7500057220459
    6. '_init' → logprob: -18.2500057220459
    7. 'int' → logprob: -19.2500057220459
    8. '```' → logprob: -19.8750057220459
    9. 'inite' → logprob: -20.2500057220459
    10. '	init' → logprob: -21.0000057220459

Token 63: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1788073629140854
    2. '(self' → logprob: -2.678807258605957
    3. '(' → logprob: -3.053807258605957
    4. '__' → logprob: -3.428807258605957
    5. '<|end|>' → logprob: -4.803807258605957
    6. '__(
' → logprob: -5.803807258605957
    7. '_' → logprob: -6.803807258605957
    8. ' (' → logprob: -7.053807258605957
    9. '_(' → logprob: -7.428807258605957
    10. 'self' → logprob: -7.553807258605957

Token 64: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014036978245712817
    2. ' self' → logprob: -8.875140190124512
    3. '0' → logprob: -15.125140190124512
    4. '(self' → logprob: -16.500141143798828
    5. '   ' → logprob: -16.625141143798828
    6. 'x' → logprob: -16.625141143798828
    7. 's' → logprob: -17.750141143798828
    8. '	self' → logprob: -18.000141143798828
    9. ')' → logprob: -18.125141143798828
    10. ',self' → logprob: -18.875141143798828

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006898301653563976
    2. ' ,' → logprob: -5.006898403167725
    3. 'self' → logprob: -9.131897926330566
    4. ',self' → logprob: -9.881897926330566
    5. ' self' → logprob: -11.006897926330566
    6. '(self' → logprob: -12.506897926330566
    7. '<|end|>' → logprob: -13.381897926330566
    8. '_,' → logprob: -14.006897926330566
    9. '_self' → logprob: -15.381897926330566
    10. '<|end|>' → logprob: -15.631897926330566

Token 66: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16706831753253937
    2. ' x' → logprob: -1.917068362236023
    3. ' self' → logprob: -5.4170684814453125
    4. 'self' → logprob: -6.0420684814453125
    5. ' ' → logprob: -13.292068481445312
    6. '0' → logprob: -13.792068481445312
    7. ')x' → logprob: -15.042068481445312
    8. '_x' → logprob: -15.167068481445312
    9. '	x' → logprob: -15.292068481445312
    10. '   ' → logprob: -15.292068481445312

Token 67: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ' ,' → logprob: -12.25001049041748
    3. ':' → logprob: -13.00001049041748
    4. '=' → logprob: -13.00001049041748
    5. '=None' → logprob: -15.25001049041748
    6. ',y' → logprob: -15.25001049041748
    7. ')' → logprob: -15.87501049041748
    8. ',v' → logprob: -17.500009536743164
    9. '):' → logprob: -17.750009536743164
    10. ':int' → logprob: -17.875009536743164

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.625295639038086
    4. '1' → logprob: -16.625295639038086
    5. '  ' → logprob: -17.187795639038086
    6. ' ' → logprob: -17.875295639038086
    7. 'None' → logprob: -17.937795639038086
    8. '=' → logprob: -18.000295639038086
    9. ')' → logprob: -18.187795639038086
    10. '```' → logprob: -18.625295639038086

Token 69: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003637097543105483
    2. '.' → logprob: -8.00036334991455
    3. ' ,' → logprob: -10.75036334991455
    4. '.,' → logprob: -13.37536334991455
    5. ')' → logprob: -13.62536334991455
    6. ',float' → logprob: -13.75036334991455
    7. ',y' → logprob: -14.62536334991455
    8. '):' → logprob: -14.62536334991455
    9. '<|end|>' → logprob: -14.75036334991455
    10. ' ' → logprob: -14.87536334991455

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '```' → logprob: -17.875
    3. '5' → logprob: -18.25
    4. ' ' → logprob: -18.5
    5. '   ' → logprob: -18.5
    6. ',' → logprob: -19.25
    7. ')' → logprob: -19.375
    8. '  ' → logprob: -19.625
    9. 'float' → logprob: -19.75
    10. '.' → logprob: -19.75

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5094070477061905e-05
    2. ' ,' → logprob: -11.500015258789062
    3. '<|end|>' → logprob: -13.500015258789062
    4. '):' → logprob: -13.875015258789062
    5. ',x' → logprob: -14.250015258789062
    6. ',y' → logprob: -14.625015258789062
    7. ',float' → logprob: -14.625015258789062
    8. '‌,' → logprob: -15.000015258789062
    9. ')' → logprob: -15.250015258789062
    10. ' ' → logprob: -15.750015258789062

Token 72: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2519315779209137
    2. 'y' → logprob: -1.5019315481185913
    3. '	y' → logprob: -13.251931190490723
    4. ' ' → logprob: -14.626931190490723
    5. '<|end|>' → logprob: -16.12693214416504
    6. ' ' → logprob: -16.75193214416504
    7. ',y' → logprob: -17.00193214416504
    8. ')y' → logprob: -17.25193214416504
    9. ',' → logprob: -17.87693214416504
    10. ')' → logprob: -18.00193214416504

Token 73: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002124806633219123
    2. ')' → logprob: -8.875212669372559
    3. ')=' → logprob: -9.625212669372559
    4. '=}' → logprob: -13.000212669372559
    5. ',' → logprob: -13.125212669372559
    6. '=None' → logprob: -13.750212669372559
    7. '=

' → logprob: -14.625212669372559
    8. '<|end|>' → logprob: -15.125212669372559
    9. '=value' → logprob: -16.375211715698242
    10. '<|end|>' → logprob: -16.375211715698242

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014025058771949261
    2. ' ' → logprob: -8.875140190124512
    3. ')' → logprob: -15.375140190124512
    4. '  ' → logprob: -16.375141143798828
    5. '   ' → logprob: -17.125141143798828
    6. '    ' → logprob: -18.750141143798828
    7. '۰' → logprob: -19.125141143798828
    8. '1' → logprob: -19.250141143798828
    9. '<|end|>' → logprob: -19.625141143798828
    10. ' ' → logprob: -19.625141143798828

Token 75: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.60414821645827e-06
    2. ')' → logprob: -12.625004768371582
    3. '.)' → logprob: -14.000004768371582
    4. '0' → logprob: -15.500004768371582
    5. ' .' → logprob: -16.875003814697266
    6. ',' → logprob: -17.250003814697266
    7. '.

' → logprob: -17.625003814697266
    8. ' ' → logprob: -18.500003814697266
    9. '.,' → logprob: -18.500003814697266
    10. '.
' → logprob: -18.750003814697266

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. ')' → logprob: -16.250001907348633
    4. '```' → logprob: -17.875001907348633
    5. '5' → logprob: -18.125001907348633
    6. '  ' → logprob: -18.812501907348633
    7. '   ' → logprob: -19.125001907348633
    8. '1' → logprob: -20.375001907348633
    9. 'f' → logprob: -20.375001907348633
    10. '۰' → logprob: -20.875001907348633

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015530710807070136
    2. ')' → logprob: -6.501553058624268
    3. ',' → logprob: -11.001553535461426
    4. '):
' → logprob: -11.251553535461426
    5. ' ):' → logprob: -11.376553535461426
    6. ':' → logprob: -12.376553535461426
    7. '   ' → logprob: -12.376553535461426
    8. ' ' → logprob: -14.001553535461426
    9. '),' → logprob: -16.25155258178711
    10. '):
' → logprob: -17.12655258178711

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007981925155036151
    2. 'self' → logprob: -7.750798225402832
    3. '   ' → logprob: -8.875798225402832
    4. ' self' → logprob: -9.500798225402832
    5. 'x' → logprob: -10.125798225402832
    6. ',' → logprob: -10.625798225402832
    7. ')' → logprob: -11.000798225402832
    8. ' ' → logprob: -11.250798225402832
    9. ':' → logprob: -11.875798225402832
    10. '<|end|>' → logprob: -12.000798225402832

Token 79: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.32695311307907104
    2. ' self' → logprob: -1.3269531726837158
    3. '       ' → logprob: -4.326952934265137
    4. '   ' → logprob: -8.451952934265137
    5. ' ' → logprob: -9.076952934265137
    6. '	self' → logprob: -10.826952934265137
    7. ' ' → logprob: -11.326952934265137
    8. '    ' → logprob: -11.576952934265137
    9. '        ' → logprob: -11.826952934265137
    10. '     ' → logprob: -12.576952934265137

Token 80: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00029756641015410423
    2. '.x' → logprob: -8.125297546386719
    3. '.
' → logprob: -14.875297546386719
    4. ' .' → logprob: -15.625297546386719
    5. '.=' → logprob: -15.625297546386719
    6. '.

' → logprob: -15.875297546386719
    7. '.

' → logprob: -15.875297546386719
    8. '.s' → logprob: -16.25029754638672
    9. '.user' → logprob: -16.62529754638672
    10. '.y' → logprob: -16.75029754638672

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026310397312045097
    2. '=' → logprob: -3.651310443878174
    3. ' ' → logprob: -12.651309967041016
    4. ',' → logprob: -12.901309967041016
    5. ' =
' → logprob: -12.901309967041016
    6. ' =)' → logprob: -14.776309967041016
    7. '<|end|>' → logprob: -14.901309967041016
    8. ' ,' → logprob: -14.901309967041016
    9. ' +=' → logprob: -15.651309967041016
    10. '=x' → logprob: -15.901309967041016

Token 82: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.048587486147880554
    2. ' x' → logprob: -3.0485875606536865
    3. '	x' → logprob: -16.673587799072266
    4. '0' → logprob: -18.048587799072266
    5. ' ' → logprob: -18.173587799072266
    6. ')x' → logprob: -19.298587799072266
    7. '$x' → logprob: -20.423587799072266
    8. '(x' → logprob: -20.798587799072266
    9. ' ' → logprob: -21.173587799072266
    10. 'float' → logprob: -21.173587799072266

Token 83: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09907130897045135
    2. '
' → logprob: -2.7240712642669678
    3. '<|end|>' → logprob: -3.5990712642669678
    4. '   ' → logprob: -7.474071502685547
    5. '        
' → logprob: -8.599071502685547
    6. '    
' → logprob: -8.724071502685547
    7. '<|end|>' → logprob: -9.474071502685547
    8. ' 
' → logprob: -9.849071502685547
    9. '  
' → logprob: -9.849071502685547
    10. ' ' → logprob: -10.224071502685547

Token 85: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0210412610322237
    2. ' self' → logprob: -4.271041393280029
    3. '       ' → logprob: -5.021041393280029
    4. '
' → logprob: -8.896040916442871
    5. 'y' → logprob: -9.521040916442871
    6. '   ' → logprob: -10.396040916442871
    7. ' y' → logprob: -12.521040916442871
    8. '        
' → logprob: -12.646040916442871
    9. '	self' → logprob: -13.146040916442871
    10. ' ' → logprob: -13.396040916442871

Token 86: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007324361358769238
    2. '.y' → logprob: -7.250732421875
    3. '.x' → logprob: -11.500732421875
    4. '<|end|>' → logprob: -11.625732421875
    5. ' .' → logprob: -14.125732421875
    6. '.py' → logprob: -14.500732421875
    7. '<|end|>' → logprob: -14.500732421875
    8. 'y' → logprob: -15.250732421875
    9. '.)' → logprob: -15.625732421875
    10. ' ' → logprob: -15.750732421875

Token 87: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38687217235565186
    2. ' y' → logprob: -1.1368721723556519
    3. ' ' → logprob: -14.261872291564941
    4. '0' → logprob: -14.636872291564941
    5. '	y' → logprob: -16.761871337890625
    6. ' ' → logprob: -17.511871337890625
    7. 'x' → logprob: -18.761871337890625
    8. ')y' → logprob: -18.761871337890625
    9. '   ' → logprob: -19.136871337890625
    10. '  ' → logprob: -19.761871337890625

Token 89: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.043158356100320816
    2. '<|end|>' → logprob: -3.5431582927703857
    3. '   ' → logprob: -4.668158531188965
    4. '    
' → logprob: -5.918158531188965
    5. '

' → logprob: -7.168158531188965
    6. '<|end|>' → logprob: -8.668158531188965
    7. ' 
' → logprob: -9.668158531188965
    8. '
    
' → logprob: -9.918158531188965
    9. '  
' → logprob: -9.918158531188965
    10. '\n' → logprob: -10.668158531188965

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12413425743579865
    2. '    
' → logprob: -2.7491343021392822
    3. '
' → logprob: -3.1241343021392822
    4. 'def' → logprob: -5.499134063720703
    5. ' 
' → logprob: -6.624134063720703
    6. ' def' → logprob: -6.749134063720703
    7. '   
' → logprob: -7.249134063720703
    8. '  
' → logprob: -7.374134063720703
    9. '<|end|>' → logprob: -8.874134063720703
    10. '        
' → logprob: -9.124134063720703

Token 91: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.028315769508481026
    2. '   ' → logprob: -4.528315544128418
    3. ' def' → logprob: -4.528315544128418
    4. '
' → logprob: -5.278315544128418
    5. '    
' → logprob: -6.903315544128418
    6. ' 
' → logprob: -9.153315544128418
    7. '        
' → logprob: -10.653315544128418
    8. ' ' → logprob: -11.028315544128418
    9. '   
' → logprob: -11.153315544128418
    10. '  
' → logprob: -11.153315544128418

Token 92: ' arg' (ID: 2341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12738054990768433
    2. '_' → logprob: -2.502380609512329
    3. ' _' → logprob: -3.752380609512329
    4. ' x' → logprob: -5.50238037109375
    5. ' s' → logprob: -5.87738037109375
    6. ' __' → logprob: -6.37738037109375
    7. ' space' → logprob: -6.87738037109375
    8. '_space' → logprob: -7.37738037109375
    9. ' add' → logprob: -7.75238037109375
    10. 's' → logprob: -7.75238037109375

Token 93: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31683287024497986
    2. '(self' → logprob: -1.4418329000473022
    3. '()' → logprob: -3.6918327808380127
    4. 'ument' → logprob: -5.316833019256592
    5. 's' → logprob: -6.316833019256592
    6. '(s' → logprob: -6.316833019256592
    7. '()(' → logprob: -7.941833019256592
    8. 'uments' → logprob: -8.066832542419434
    9. 'umen' → logprob: -9.191832542419434
    10. ')' → logprob: -9.316832542419434

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.047547806054353714
    2. ')' → logprob: -3.5475478172302246
    3. '():' → logprob: -5.297547817230225
    4. '(self' → logprob: -5.297547817230225
    5. '()' → logprob: -5.672547817230225
    6. 'self' → logprob: -6.172547817230225
    7. '):
' → logprob: -6.547547817230225
    8. ' ):' → logprob: -8.047547340393066
    9. '(' → logprob: -8.547547340393066
    10. '):

' → logprob: -10.297547340393066

Token 95: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49601584672927856
    2. '       ' → logprob: -1.3710157871246338
    3. '(self' → logprob: -2.496015787124634
    4. '()' → logprob: -2.996015787124634
    5. '(
' → logprob: -5.496016025543213
    6. '   ' → logprob: -8.621015548706055
    7. ')' → logprob: -9.121015548706055
    8. 'return' → logprob: -9.246015548706055
    9. ' (' → logprob: -9.871015548706055
    10. 'self' → logprob: -9.871015548706055

Token 96: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16990715265274048
    2. ' return' → logprob: -2.1699070930480957
    3. '       ' → logprob: -3.1699070930480957
    4. ' atan' → logprob: -10.794907569885254
    5. 'atan' → logprob: -11.169907569885254
    6. '```' → logprob: -11.169907569885254
    7. 'import' → logprob: -11.919907569885254
    8. '	return' → logprob: -13.794907569885254
    9. 'eturn' → logprob: -14.044907569885254
    10. ' if' → logprob: -14.169907569885254

Token 97: ' atan' (ID: 70327)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.038043100386857986
    2. ' atan' → logprob: -3.2880430221557617
    3. '.atan' → logprob: -13.663043022155762
    4. 'aton' → logprob: -14.913043022155762
    5. 'ata' → logprob: -16.538043975830078
    6. 'aten' → logprob: -17.663043975830078
    7. 'atat' → logprob: -17.788043975830078
    8. '   ' → logprob: -18.288043975830078
    9. ' at' → logprob: -18.538043975830078
    10. '0' → logprob: -18.538043975830078

Token 98: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'atan' → logprob: -17.875
    3. ' ' → logprob: -18.0
    4. '۲' → logprob: -18.875
    5. '   ' → logprob: -19.5
    6. '(' → logprob: -19.5625
    7. '₂' → logprob: -19.8125
    8. '２' → logprob: -20.0
    9. '22' → logprob: -20.3125
    10. '٢' → logprob: -20.625

Token 99: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4741149842739105
    2. '(' → logprob: -0.9741150140762329
    3. '(
' → logprob: -10.724115371704102
    4. ' (' → logprob: -11.724115371704102
    5. '(

' → logprob: -12.599115371704102
    6. '(s' → logprob: -12.849115371704102
    7. '(y' → logprob: -13.724115371704102
    8. '(this' → logprob: -14.974115371704102
    9. '(Self' → logprob: -16.2241153717041
    10. 'self' → logprob: -16.2241153717041

Token 100: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0007171963807195425
    2. '.' → logprob: -7.2507171630859375
    3. '.x' → logprob: -12.875717163085938
    4. '(' → logprob: -13.500717163085938
    5. ' .' → logprob: -13.750717163085938
    6. '(y' → logprob: -13.875717163085938
    7. '(.' → logprob: -14.000717163085938
    8. ').' → logprob: -15.500717163085938
    9. 'y' → logprob: -16.125717163085938
    10. '.py' → logprob: -16.875717163085938

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.764977686339989e-05
    2. ' ,' → logprob: -10.000057220458984
    3. ',self' → logprob: -11.375057220458984
    4. ',
' → logprob: -15.000057220458984
    5. ')' → logprob: -15.375057220458984
    6. 'self' → logprob: -16.250057220458984
    7. ' ' → logprob: -18.125057220458984
    8. ',

' → logprob: -19.250057220458984
    9. ' self' → logprob: -19.875057220458984
    10. '),' → logprob: -20.000057220458984

Token 102: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0789012461900711
    2. 'self' → logprob: -2.5789012908935547
    3. ' ' → logprob: -12.328901290893555
    4. ')' → logprob: -12.703901290893555
    5. ' ' → logprob: -13.203901290893555
    6. '	self' → logprob: -13.953901290893555
    7. ' )' → logprob: -14.328901290893555
    8. '(self' → logprob: -15.453901290893555
    9. 's' → logprob: -16.203901290893555
    10. '    ' → logprob: -16.328901290893555

Token 103: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0009117019944824278
    2. '.' → logprob: -7.000911712646484
    3. ' .' → logprob: -15.750911712646484
    4. ')' → logprob: -17.375911712646484
    5. ').' → logprob: -17.625911712646484
    6. '.)' → logprob: -17.875911712646484
    7. '.s' → logprob: -18.125911712646484
    8. 'x' → logprob: -18.250911712646484
    9. '.y' → logprob: -19.000911712646484
    10. '._' → logprob: -20.250911712646484

Token 104: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -15.125001907348633
    4. ')return' → logprob: -18.750001907348633
    5. '   ' → logprob: -19.000001907348633
    6. ')

' → logprob: -19.125001907348633
    7. '<|end|>' → logprob: -19.125001907348633
    8. '}' → logprob: -19.625001907348633
    9. ')}' → logprob: -19.750001907348633
    10. ' ' → logprob: -20.250001907348633

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2827950119972229
    2. '<|end|>' → logprob: -1.7827949523925781
    3. '
' → logprob: -3.532794952392578
    4. '    
' → logprob: -3.782794952392578
    5. ' ' → logprob: -4.907794952392578
    6. ' 
' → logprob: -5.407794952392578
    7. '  
' → logprob: -5.532794952392578
    8. '*' → logprob: -6.157794952392578
    9. '  ' → logprob: -6.282794952392578
    10. '+' → logprob: -6.407794952392578

Token 106: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0024009819608181715
    2. '   ' → logprob: -6.127400875091553
    3. ' def' → logprob: -8.502401351928711
    4. '    
' → logprob: -11.502401351928711
    5. '
' → logprob: -13.627401351928711
    6. ' 
' → logprob: -15.127401351928711
    7. ' ' → logprob: -15.252401351928711
    8. '        
' → logprob: -15.502401351928711
    9. '	def' → logprob: -15.502401351928711
    10. '```' → logprob: -16.12740135192871

Token 107: ' norm' (ID: 7882)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0953369289636612
    2. ' def' → logprob: -3.0953369140625
    3. ' norm' → logprob: -3.9703369140625
    4. ' mag' → logprob: -4.5953369140625
    5. ' abs' → logprob: -4.9703369140625
    6. ' magnitude' → logprob: -5.3453369140625
    7. ' __' → logprob: -6.4703369140625
    8. ' length' → logprob: -6.7203369140625
    9. 'norm' → logprob: -7.8453369140625
    10. 'm' → logprob: -7.8453369140625

Token 108: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01572556607425213
    2. '(' → logprob: -4.765725612640381
    3. '()' → logprob: -5.015725612640381
    4. '(s' → logprob: -7.890725612640381
    5. '()(' → logprob: -10.015725135803223
    6. '(
' → logprob: -11.765725135803223
    7. 's' → logprob: -12.265725135803223
    8. ' (' → logprob: -12.390725135803223
    9. '_squared' → logprob: -12.390725135803223
    10. 'self' → logprob: -12.890725135803223

Token 109: '):
' (ID: 1883)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9597323536872864
    2. ')' → logprob: -1.2097322940826416
    3. '(self' → logprob: -1.3347322940826416
    4. '())' → logprob: -3.3347322940826416
    5. '(' → logprob: -4.834732532501221
    6. ' ' → logprob: -5.709732532501221
    7. '():' → logprob: -5.959732532501221
    8. '):' → logprob: -6.459732532501221
    9. 's' → logprob: -6.709732532501221
    10. ' )' → logprob: -7.584732532501221

Token 110: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.27033665776252747
    2. ' return' → logprob: -1.770336627960205
    3. '   ' → logprob: -3.770336627960205
    4. '(s' → logprob: -3.770336627960205
    5. '    ' → logprob: -4.520336627960205
    6. '(' → logprob: -5.270336627960205
    7. ' ' → logprob: -6.020336627960205
    8. 'return' → logprob: -7.645336627960205
    9. ' ((' → logprob: -7.645336627960205
    10. 's' → logprob: -7.770336627960205

Token 111: ' return' (ID: 622)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5713547468185425
    2. 'return' (adapté à ' return') → logprob: -1.1963547468185425
    3. '(self' → logprob: -2.571354866027832
    4. ' return' → logprob: -3.071354866027832
    5. ' (' → logprob: -5.321354866027832
    6. '(' → logprob: -5.946354866027832
    7. 's' → logprob: -7.196354866027832
    8. '   ' → logprob: -7.696354866027832
    9. 'self' → logprob: -7.696354866027832
    10. 'import' → logprob: -7.821354866027832

Token 112: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8181011080741882
    2. '(s' → logprob: -0.9431011080741882
    3. '(self' → logprob: -1.818101167678833
    4. '(' → logprob: -5.068100929260254
    5. '(abs' → logprob: -7.943100929260254
    6. '((' → logprob: -9.443100929260254
    7. '(c' → logprob: -9.568100929260254
    8. 'self' → logprob: -9.568100929260254
    9. ' self' → logprob: -9.943100929260254
    10. '(x' → logprob: -10.443100929260254

Token 113: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.796184723294573e-06
    2. ' self' → logprob: -12.500005722045898
    3. '(self' → logprob: -13.125005722045898
    4. '   ' → logprob: -16.5000057220459
    5. '	self' → logprob: -19.0000057220459
    6. '
' → logprob: -19.1250057220459
    7. 's' → logprob: -19.7500057220459
    8. '```' → logprob: -20.1250057220459
    9. 'sel' → logprob: -20.3750057220459
    10. ' ' → logprob: -20.8750057220459

Token 114: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.03808509185910225
    2. '.' → logprob: -3.2880849838256836
    3. ' .' → logprob: -10.413084983825684
    4. 'x' → logprob: -12.288084983825684
    5. '.s' → logprob: -12.788084983825684
    6. ').' → logprob: -12.913084983825684
    7. '.
' → logprob: -14.413084983825684
    8. 'self' → logprob: -14.538084983825684
    9. ' ' → logprob: -14.788084983825684
    10. '.py' → logprob: -14.913084983825684

Token 115: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0003134168218821287
    2. ' **' → logprob: -8.375313758850098
    3. '*self' → logprob: -9.625313758850098
    4. '*' → logprob: -11.125313758850098
    5. ')**' → logprob: -13.500313758850098
    6. ' *' → logprob: -15.375313758850098
    7. ' ' → logprob: -16.12531280517578
    8. '**)' → logprob: -16.50031280517578
    9. '2' → logprob: -17.00031280517578
    10. 'self' → logprob: -17.12531280517578

Token 116: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002807013690471649
    2. ' ' → logprob: -5.877807140350342
    3. '²' → logprob: -14.377806663513184
    4. '۲' → logprob: -15.190306663513184
    5. '  ' → logprob: -15.565306663513184
    6. '
' → logprob: -15.877806663513184
    7. '   ' → logprob: -16.1278076171875
    8. '```' → logprob: -16.1903076171875
    9. '22' → logprob: -16.2528076171875
    10. '**' → logprob: -16.3153076171875

Token 117: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07929225265979767
    2. '+' → logprob: -2.5792922973632812
    3. '+self' → logprob: -7.829292297363281
    4. ' ' → logprob: -13.329292297363281
    5. ' +
' → logprob: -13.579292297363281
    6. '+x' → logprob: -15.204292297363281
    7. ' plus' → logprob: -15.454292297363281
    8. ' ' → logprob: -15.954292297363281
    9. '+y' → logprob: -16.20429229736328
    10. '   ' → logprob: -16.20429229736328

Token 118: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04859532043337822
    2. ' self' → logprob: -3.048595428466797
    3. '	self' → logprob: -12.923595428466797
    4. ' ' → logprob: -13.048595428466797
    5. '<|end|>' → logprob: -13.048595428466797
    6. '   ' → logprob: -14.173595428466797
    7. '(self' → logprob: -15.673595428466797
    8. '[self' → logprob: -15.923595428466797
    9. '    ' → logprob: -16.423595428466797
    10. '  ' → logprob: -16.423595428466797

Token 119: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00018530222587287426
    2. '.' → logprob: -8.625185012817383
    3. 'y' → logprob: -12.125185012817383
    4. ' .' → logprob: -16.000185012817383
    5. '.x' → logprob: -16.500185012817383
    6. ' ' → logprob: -18.125185012817383
    7. ' y' → logprob: -18.250185012817383
    8. '	y' → logprob: -18.625185012817383
    9. '.py' → logprob: -19.125185012817383
    10. ').' → logprob: -20.125185012817383

Token 120: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.036894600838422775
    2. '2' → logprob: -3.9118945598602295
    3. '.' → logprob: -4.161894798278809
    4. ')' → logprob: -8.411894798278809
    5. ')**' → logprob: -8.536894798278809
    6. '.py' → logprob: -9.661894798278809
    7. ' ' → logprob: -9.786894798278809
    8. '**)' → logprob: -9.786894798278809
    9. ' **' → logprob: -10.786894798278809
    10. '²' → logprob: -11.661894798278809

Token 121: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016158436483237892
    2. ' ' → logprob: -8.750161170959473
    3. '**' → logprob: -14.000161170959473
    4. '```' → logprob: -14.000161170959473
    5. '
' → logprob: -14.875161170959473
    6. '{' → logprob: -15.687661170959473
    7. '   ' → logprob: -15.812661170959473
    8. ')' → logprob: -16.18766212463379
    9. '۲' → logprob: -16.18766212463379
    10. '.' → logprob: -16.50016212463379

Token 122: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.038155101239681244
    2. ')' → logprob: -3.2881550788879395
    3. ' )' → logprob: -9.288155555725098
    4. '**' → logprob: -11.413155555725098
    5. '0' → logprob: -12.413155555725098
    6. ' ' → logprob: -12.788155555725098
    7. '   ' → logprob: -12.913155555725098
    8. ' ' → logprob: -14.663155555725098
    9. '**)' → logprob: -16.16315460205078
    10. '```' → logprob: -16.91315460205078

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.662937372922897e-05
    2. ' ' → logprob: -9.250096321105957
    3. '(' → logprob: -15.000096321105957
    4. '.' → logprob: -16.500097274780273
    5. '   ' → logprob: -18.125097274780273
    6. ' ' → logprob: -19.375097274780273
    7. '  ' → logprob: -19.625097274780273
    8. '-' → logprob: -19.875097274780273
    9. ' (' → logprob: -20.375097274780273
    10. '۰' → logprob: -20.437597274780273

Token 124: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.7610454708337784e-05
    2. '0' → logprob: -10.750027656555176
    3. '.-' → logprob: -12.625027656555176
    4. '-' → logprob: -13.125027656555176
    5. '-.' → logprob: -15.750027656555176
    6. '5' → logprob: -15.750027656555176
    7. ' .' → logprob: -16.25002670288086
    8. '`.' → logprob: -16.25002670288086
    9. '2' → logprob: -16.37502670288086
    10. '```' → logprob: -16.37502670288086

Token 125: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.0
    3. '.' → logprob: -18.1875
    4. '   ' → logprob: -18.375
    5. '0' → logprob: -18.5
    6. 'five' → logprob: -18.6875
    7. ' ' → logprob: -18.75
    8. '4' → logprob: -18.8125
    9. '05' → logprob: -19.4375
    10. '500' → logprob: -20.125

Token 126: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014427212066948414
    2. '<|end|>' → logprob: -4.514427185058594
    3. '   ' → logprob: -6.139427185058594
    4. '

' → logprob: -7.389427185058594
    5. '    
' → logprob: -8.639427185058594
    6. '```' → logprob: -9.264427185058594
    7. '<|end|>' → logprob: -9.514427185058594
    8. '  
' → logprob: -9.764427185058594
    9. ' 
' → logprob: -10.014427185058594
    10. ' ' → logprob: -10.264427185058594

Token 128: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30962514877319336
    2. 'def' (adapté à ' def') → logprob: -1.9346251487731934
    3. ' def' → logprob: -2.4346251487731934
    4. '
' → logprob: -4.309625148773193
    5. ' 
' → logprob: -4.809625148773193
    6. '    
' → logprob: -5.059625148773193
    7. ' ' → logprob: -5.309625148773193
    8. '   
' → logprob: -7.809625148773193
    9. '  ' → logprob: -8.184625625610352
    10. '  
' → logprob: -8.434625625610352

Token 129: ' rotate' (ID: 31987)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06698016822338104
    2. ' add' → logprob: -2.9419801235198975
    3. ' __' → logprob: -5.066980361938477
    4. ' def' → logprob: -6.691980361938477
    5. ' s' → logprob: -7.191980361938477
    6. ' x' → logprob: -7.441980361938477
    7. 'add' → logprob: -7.566980361938477
    8. ' ' → logprob: -7.566980361938477
    9. ' _' → logprob: -7.941980361938477
    10. ' +' → logprob: -8.316980361938477

Token 130: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0067703151144087315
    2. '(' → logprob: -5.256770133972168
    3. ' (' → logprob: -6.506770133972168
    4. '(
' → logprob: -11.006770133972168
    5. '(s' → logprob: -11.256770133972168
    6. 'self' → logprob: -12.131770133972168
    7. '(angle' → logprob: -13.631770133972168
    8. '(sel' → logprob: -13.631770133972168
    9. ' ' → logprob: -13.756770133972168
    10. ' self' → logprob: -14.256770133972168

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018744789122138172
    2. ' ,' → logprob: -8.750187873840332
    3. ',self' → logprob: -10.875187873840332
    4. 'self' → logprob: -12.625187873840332
    5. ')' → logprob: -13.000187873840332
    6. '(self' → logprob: -13.250187873840332
    7. ',s' → logprob: -13.625187873840332
    8. ',
' → logprob: -14.500187873840332
    9. ',(' → logprob: -15.500187873840332
    10. 's' → logprob: -16.000186920166016

Token 132: ' t' (ID: 260)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1469772309064865
    2. ' self' → logprob: -2.396977186203003
    3. 'theta' → logprob: -3.771977186203003
    4. 'angle' → logprob: -4.021977424621582
    5. ' angle' → logprob: -5.521977424621582
    6. ' theta' → logprob: -7.271977424621582
    7. 't' → logprob: -11.021977424621582
    8. ' ' → logprob: -11.271977424621582
    9. 'phi' → logprob: -11.396977424621582
    10. ')' → logprob: -11.896977424621582

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5872034430503845
    2. 'heta' → logprob: -0.8372034430503845
    3. 'eta' → logprob: -5.337203502655029
    4. '):
' → logprob: -5.462203502655029
    5. ')' → logprob: -6.712203502655029
    6. 'het' → logprob: -7.962203502655029
    7. 'etha' → logprob: -8.087203025817871
    8. 'a' → logprob: -9.337203025817871
    9. 'h' → logprob: -9.587203025817871
    10. ' ):' → logprob: -10.337203025817871

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07913289219141006
    2. 'c' → logprob: -2.9541327953338623
    3. 'x' → logprob: -4.204133033752441
    4. 'cos' → logprob: -5.204133033752441
    5. 'new' → logprob: -6.579133033752441
    6. ' c' → logprob: -7.954133033752441
    7. '
' → logprob: -8.204133033752441
    8. '   ' → logprob: -8.704133033752441
    9. ' cosa' → logprob: -9.079133033752441
    10. 'cs' → logprob: -9.079133033752441

Token 135: ' nx' (ID: 50118)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04254598170518875
    2. 'c' → logprob: -4.167545795440674
    3. 'nx' (adapté à ' nx') → logprob: -4.292545795440674
    4. 'new' → logprob: -4.792545795440674
    5. 'cos' → logprob: -6.792545795440674
    6. 'return' → logprob: -7.042545795440674
    7. 'cx' → logprob: -7.542545795440674
    8. '   ' → logprob: -7.792545795440674
    9. 'xx' → logprob: -8.292546272277832
    10. 'xr' → logprob: -8.417546272277832

Token 136: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2522432506084442
    2. ' =' → logprob: -1.5022432804107666
    3. ',' → logprob: -8.127243041992188
    4. 'x' → logprob: -11.252243041992188
    5. ' ' → logprob: -12.627243041992188
    6. '  ' → logprob: -14.502243041992188
    7. 's' → logprob: -14.752243041992188
    8. ')' → logprob: -14.877243041992188
    9. 'w' → logprob: -15.002243041992188
    10. '   ' → logprob: -15.002243041992188

Token 137: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.21956799924373627
    2. 'self' → logprob: -1.7195680141448975
    3. 'cos' → logprob: -4.219567775726318
    4. ' cos' → logprob: -5.719567775726318
    5. '	self' → logprob: -12.969568252563477
    6. '   ' → logprob: -14.094568252563477
    7. ' ' → logprob: -14.344568252563477
    8. '(self' → logprob: -14.969568252563477
    9. '    ' → logprob: -15.594568252563477
    10. '  ' → logprob: -15.969568252563477

Token 138: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.031038623303174973
    2. 'x' → logprob: -3.781038522720337
    3. '.' → logprob: -4.906038761138916
    4. 'cos' → logprob: -8.406038284301758
    5. '.cos' → logprob: -9.406038284301758
    6. '*cos' → logprob: -10.156038284301758
    7. ' x' → logprob: -12.031038284301758
    8. ' .' → logprob: -12.531038284301758
    9. ' *' → logprob: -13.156038284301758
    10. '*x' → logprob: -13.281038284301758

Token 139: ' *' (ID: 425)
  Prédit: '*cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*cos' → logprob: -0.11021720618009567
    2. '*' → logprob: -2.3602170944213867
    3. ' *' → logprob: -4.610217094421387
    4. '*c' → logprob: -11.610217094421387
    5. '*sin' → logprob: -13.985217094421387
    6. 'cos' → logprob: -13.985217094421387
    7. '*self' → logprob: -16.610218048095703
    8. '*s' → logprob: -16.610218048095703
    9. '*t' → logprob: -16.985218048095703
    10. '**' → logprob: -17.235218048095703

Token 140: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.00026205103495158255
    2. ' cos' → logprob: -8.250262260437012
    3. '*cos' → logprob: -14.125262260437012
    4. 'c' → logprob: -19.250261306762695
    5. 'sin' → logprob: -19.750261306762695
    6. 'cost' → logprob: -21.125261306762695
    7. '.cos' → logprob: -21.250261306762695
    8. '  ' → logprob: -21.250261306762695
    9. '   ' → logprob: -21.375261306762695
    10. '
' → logprob: -21.875261306762695

Token 141: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00510176457464695
    2. '(' → logprob: -5.755101680755615
    3. 't' → logprob: -6.255101680755615
    4. ' t' → logprob: -13.755102157592773
    5. '(
' → logprob: -14.880102157592773
    6. ' (' → logprob: -16.630102157592773
    7. '	t' → logprob: -17.380102157592773
    8. ')t' → logprob: -17.630102157592773
    9. '<|end|>' → logprob: -18.880102157592773
    10. '+t' → logprob: -19.380102157592773

Token 142: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.682846287731081e-05
    2. ' )' → logprob: -9.625066757202148
    3. ')-' → logprob: -14.750066757202148
    4. '-)' → logprob: -16.50006675720215
    5. '）' → logprob: -16.75006675720215
    6. '       ' → logprob: -17.00006675720215
    7. '')' → logprob: -17.62506675720215
    8. ')
' → logprob: -17.62506675720215
    9. '`)' → logprob: -17.87506675720215
    10. '        ' → logprob: -17.87506675720215

Token 143: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.313264399766922
    2. '-' → logprob: -1.3132643699645996
    3. ' ' → logprob: -13.563264846801758
    4. '+' → logprob: -14.438264846801758
    5. '       ' → logprob: -14.938264846801758
    6. '        ' → logprob: -15.438264846801758
    7. '   ' → logprob: -16.813264846801758
    8. '-self' → logprob: -16.813264846801758
    9. '−' → logprob: -17.188264846801758
    10. ',' → logprob: -17.188264846801758

Token 144: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16042427718639374
    2. ' self' → logprob: -1.9104242324829102
    3. '<|end|>' → logprob: -8.78542423248291
    4. '	self' → logprob: -10.53542423248291
    5. 's' → logprob: -11.78542423248291
    6. 'sin' → logprob: -11.91042423248291
    7. ' ' → logprob: -12.66042423248291
    8. '(self' → logprob: -13.91042423248291
    9. ' sin' → logprob: -14.28542423248291
    10. '_self' → logprob: -15.16042423248291

Token 145: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0013380973832681775
    2. 'y' → logprob: -6.626338005065918
    3. '.' → logprob: -11.376338005065918
    4. ' y' → logprob: -14.751338005065918
    5. '	y' → logprob: -15.126338005065918
    6. ' .' → logprob: -17.751338958740234
    7. '.py' → logprob: -17.751338958740234
    8. ',y' → logprob: -18.001338958740234
    9. ' ' → logprob: -18.126338958740234
    10. '.x' → logprob: -18.501338958740234

Token 146: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00010211274639004841
    2. '*' → logprob: -9.625102043151855
    3. '*sin' → logprob: -10.250102043151855
    4. 'sin' → logprob: -15.375102043151855
    5. ' ' → logprob: -15.750102043151855
    6. '<|end|>' → logprob: -15.875102043151855
    7. '*cos' → logprob: -16.250102996826172
    8. ' sin' → logprob: -16.250102996826172
    9. '*s' → logprob: -17.625102996826172
    10. ' ' → logprob: -17.625102996826172

Token 147: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -0.474234014749527
    2. ' sin' → logprob: -0.9742339849472046
    3. 's' → logprob: -8.849233627319336
    4. '*sin' → logprob: -11.974233627319336
    5. '<|end|>' → logprob: -12.224233627319336
    6. '	s' → logprob: -13.974233627319336
    7. ' sine' → logprob: -15.224233627319336
    8. ' ' → logprob: -15.349233627319336
    9. 'cos' → logprob: -15.724233627319336
    10. ' ' → logprob: -15.974233627319336

Token 148: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0008135587559081614
    2. '(' → logprob: -7.1258134841918945
    3. 't' → logprob: -11.625813484191895
    4. '(
' → logprob: -16.37581443786621
    5. '<|end|>' → logprob: -16.50081443786621
    6. ' (' → logprob: -17.00081443786621
    7. '(s' → logprob: -17.75081443786621
    8. ')t' → logprob: -18.37581443786621
    9. ')' → logprob: -19.25081443786621
    10. '	t' → logprob: -19.62581443786621

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011367550177965313
    2. ')
' → logprob: -9.125113487243652
    3. ' )' → logprob: -13.375113487243652
    4. ')
' → logprob: -14.000113487243652
    5. 't' → logprob: -14.125113487243652
    6. ')t' → logprob: -14.125113487243652
    7. '       ' → logprob: -15.000113487243652
    8. ')

' → logprob: -15.625113487243652
    9. '))' → logprob: -15.750113487243652
    10. '   ' → logprob: -16.37511444091797

Token 150: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13236171007156372
    2. '<|end|>' → logprob: -2.507361650466919
    3. '       ' → logprob: -3.257361650466919
    4. '        
' → logprob: -7.132361888885498
    5. '  
' → logprob: -7.382361888885498
    6. 'n' → logprob: -7.632361888885498
    7. '\n' → logprob: -7.632361888885498
    8. '
' → logprob: -7.757361888885498
    9. ')' → logprob: -8.00736141204834
    10. '<|end|>' → logprob: -8.25736141204834

Token 151: ' ny' (ID: 4423)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02685368061065674
    2. ' self' → logprob: -4.276853561401367
    3. 'n' → logprob: -4.901853561401367
    4. '       ' → logprob: -5.651853561401367
    5. 'ny' (adapté à ' ny') → logprob: -7.276853561401367
    6. 'y' → logprob: -7.401853561401367
    7. '
' → logprob: -9.401853561401367
    8. '        
' → logprob: -9.401853561401367
    9. ' ny' → logprob: -10.526853561401367
    10. ' 
' → logprob: -10.651853561401367

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740782678127289
    2. ' =' → logprob: -0.9740782976150513
    3. ')' → logprob: -13.974078178405762
    4. ' ' → logprob: -15.349078178405762
    5. ' =
' → logprob: -17.349079132080078
    6. '   ' → logprob: -17.349079132080078
    7. ',' → logprob: -17.599079132080078
    8. ' =)' → logprob: -17.974079132080078
    9. '<|end|>' → logprob: -18.349079132080078
    10. '    ' → logprob: -18.349079132080078

Token 153: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04859191179275513
    2. ' self' → logprob: -3.0485918521881104
    3. '	self' → logprob: -13.173591613769531
    4. '(self' → logprob: -13.423591613769531
    5. '       ' → logprob: -14.923591613769531
    6. ' ' → logprob: -15.423591613769531
    7. '   ' → logprob: -15.923591613769531
    8. '[self' → logprob: -16.17359161376953
    9. '=self' → logprob: -16.29859161376953
    10. 'Self' → logprob: -16.42359161376953

Token 154: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00015217094914987683
    2. 'x' → logprob: -9.000152587890625
    3. '.' → logprob: -10.500152587890625
    4. '.y' → logprob: -13.875152587890625
    5. ' .' → logprob: -16.000152587890625
    6. ' x' → logprob: -17.375152587890625
    7. '.
' → logprob: -18.250152587890625
    8. '```' → logprob: -18.375152587890625
    9. '[' → logprob: -18.625152587890625
    10. '`.' → logprob: -18.750152587890625

Token 155: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0031794982496649027
    2. '*' → logprob: -5.753179550170898
    3. '*sin' → logprob: -13.378179550170898
    4. ' ' → logprob: -15.753179550170898
    5. ' ' → logprob: -16.5031795501709
    6. '*s' → logprob: -18.5031795501709
    7. '*cos' → logprob: -18.7531795501709
    8. '**' → logprob: -19.7531795501709
    9. 'sin' → logprob: -20.3781795501709
    10. '*np' → logprob: -21.5031795501709

Token 156: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -0.06206212937831879
    2. ' sin' → logprob: -2.8120620250701904
    3. 'cos' → logprob: -9.56206226348877
    4. 's' → logprob: -10.81206226348877
    5. ' cos' → logprob: -12.93706226348877
    6. '*sin' → logprob: -13.68706226348877
    7. '<|end|>' → logprob: -15.68706226348877
    8. '.sin' → logprob: -16.687061309814453
    9. '	s' → logprob: -17.937061309814453
    10. ' ' → logprob: -18.187061309814453

Token 157: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0002614550176076591
    2. '(' → logprob: -8.250261306762695
    3. 't' → logprob: -16.250261306762695
    4. '(
' → logprob: -17.625261306762695
    5. ' (' → logprob: -18.375261306762695
    6. '(s' → logprob: -20.375261306762695
    7. '	t' → logprob: -21.125261306762695
    8. '(T' → logprob: -21.375261306762695
    9. '(

' → logprob: -21.375261306762695
    10. '(x' → logprob: -21.500261306762695

Token 158: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. ' )' → logprob: -11.750008583068848
    3. ')
' → logprob: -15.375008583068848
    4. ')+' → logprob: -16.25000762939453
    5. '()' → logprob: -16.37500762939453
    6. '       ' → logprob: -16.50000762939453
    7. '）' → logprob: -16.87500762939453
    8. '   ' → logprob: -17.25000762939453
    9. ' ' → logprob: -17.62500762939453
    10. ')`' → logprob: -18.12500762939453

Token 159: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2521305978298187
    2. '+' → logprob: -1.5021306276321411
    3. '       ' → logprob: -9.252130508422852
    4. ')' → logprob: -10.002130508422852
    5. ' ' → logprob: -10.377130508422852
    6. '        ' → logprob: -11.502130508422852
    7. ' -' → logprob: -12.127130508422852
    8. ' +
' → logprob: -12.502130508422852
    9. '+
' → logprob: -12.877130508422852
    10. '-' → logprob: -13.377130508422852

Token 160: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931579113006592
    2. 'self' → logprob: -0.6931579113006592
    3. ' ' → logprob: -11.943158149719238
    4. '	self' → logprob: -13.818158149719238
    5. '<|end|>' → logprob: -13.818158149719238
    6. '       ' → logprob: -14.193158149719238
    7. '(self' → logprob: -14.943158149719238
    8. '   ' → logprob: -15.318158149719238
    9. '    ' → logprob: -15.693158149719238
    10. '  ' → logprob: -15.943158149719238

Token 161: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.000996963819488883
    2. 'y' → logprob: -7.500997066497803
    3. '.' → logprob: -7.750997066497803
    4. 'self' → logprob: -11.625996589660645
    5. '.py' → logprob: -13.625996589660645
    6. ' .' → logprob: -14.125996589660645
    7. 'cos' → logprob: -14.375996589660645
    8. ' ' → logprob: -14.875996589660645
    9. '.cos' → logprob: -14.875996589660645
    10. ')' → logprob: -15.000996589660645

Token 162: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.030638430267572403
    2. '*' → logprob: -3.5306384563446045
    3. '*cos' → logprob: -7.030638217926025
    4. '*self' → logprob: -13.280638694763184
    5. ' ' → logprob: -14.905638694763184
    6. '*c' → logprob: -15.405638694763184
    7. 'cos' → logprob: -15.405638694763184
    8. ')' → logprob: -15.405638694763184
    9. ' cos' → logprob: -16.030637741088867
    10. '*object' → logprob: -16.030637741088867

Token 163: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.04858975484967232
    2. ' cos' → logprob: -3.0485897064208984
    3. '*cos' → logprob: -13.298589706420898
    4. 'self' → logprob: -14.548589706420898
    5. '.cos' → logprob: -16.7985897064209
    6. ' self' → logprob: -16.9235897064209
    7. '_cos' → logprob: -16.9235897064209
    8. 'c' → logprob: -17.5485897064209
    9. '   ' → logprob: -19.0485897064209
    10. ' cosine' → logprob: -19.0485897064209

Token 164: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0009130131802521646
    2. '(' → logprob: -7.000913143157959
    3. 't' → logprob: -13.7509126663208
    4. '(
' → logprob: -15.2509126663208
    5. ' (' → logprob: -16.375913619995117
    6. ')' → logprob: -18.000913619995117
    7. '(s' → logprob: -18.500913619995117
    8. '(x' → logprob: -19.125913619995117
    9. '```' → logprob: -20.000913619995117
    10. '(n' → logprob: -20.625913619995117

Token 165: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000825229799374938
    2. ')
' → logprob: -8.000824928283691
    3. 't' → logprob: -8.375824928283691
    4. '(t' → logprob: -9.000824928283691
    5. ')t' → logprob: -9.125824928283691
    6. '       ' → logprob: -11.000824928283691
    7. '   ' → logprob: -13.000824928283691
    8. '))' → logprob: -13.125824928283691
    9. ' )' → logprob: -13.125824928283691
    10. ')`' → logprob: -13.750824928283691

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07023384422063828
    2. 'self' → logprob: -2.8202338218688965
    3. '
' → logprob: -4.9452338218688965
    4. ' self' → logprob: -6.9452338218688965
    5. 'return' → logprob: -9.320234298706055
    6. '        
' → logprob: -10.695234298706055
    7. '   ' → logprob: -11.570234298706055
    8. '	self' → logprob: -11.820234298706055
    9. '
' → logprob: -12.195234298706055
    10. ')' → logprob: -12.820234298706055

Token 167: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16972357034683228
    2. '       ' → logprob: -1.9197235107421875
    3. 'self' → logprob: -4.7947235107421875
    4. ' self' → logprob: -7.2947235107421875
    5. '\n' → logprob: -8.169723510742188
    6. '
' → logprob: -9.794723510742188
    7. '        
' → logprob: -10.044723510742188
    8. '\' → logprob: -10.794723510742188
    9. ')
' → logprob: -11.044723510742188
    10. '   ' → logprob: -11.169723510742188

Token 168: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.061968810856342316
    2. ' Vector' → logprob: -2.8119688034057617
    3. 'self' → logprob: -14.436968803405762
    4. '	Vector' → logprob: -14.811968803405762
    5. ' self' → logprob: -16.436969757080078
    6. '_Vector' → logprob: -16.811969757080078
    7. ' ' → logprob: -17.436969757080078
    8. ' ' → logprob: -18.186969757080078
    9. '(Vector' → logprob: -18.311969757080078
    10. '  ' → logprob: -18.311969757080078

Token 169: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.023258056491613388
    2. '(' → logprob: -3.7732579708099365
    3. '(n' → logprob: -11.773258209228516
    4. '(
' → logprob: -12.398258209228516
    5. '(nn' → logprob: -15.273258209228516
    6. '((' → logprob: -15.398258209228516
    7. '(mx' → logprob: -16.523258209228516
    8. '(x' → logprob: -16.523258209228516
    9. '(

' → logprob: -17.148258209228516
    10. ' (' → logprob: -17.523258209228516

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1637164789135568e-05
    2. ' ,' → logprob: -12.125011444091797
    3. ',n' → logprob: -12.500011444091797
    4. ',
' → logprob: -13.625011444091797
    5. ',y' → logprob: -13.625011444091797
    6. ',

' → logprob: -16.750011444091797
    7. ')' → logprob: -17.375011444091797
    8. '‌,' → logprob: -18.250011444091797
    9. '<|end|>' → logprob: -18.375011444091797
    10. ',new' → logprob: -18.875011444091797

Token 171: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.5759437084197998
    2. 'ny' → logprob: -0.8259437084197998
    3. ' 
' → logprob: -13.325943946838379
    4. '
' → logprob: -14.450943946838379
    5. 'nyt' → logprob: -14.700943946838379
    6. 'nyi' → logprob: -14.825943946838379
    7. 'nye' → logprob: -15.700943946838379
    8. ' ' → logprob: -15.825943946838379
    9. ''ny' → logprob: -15.825943946838379
    10. ' ' → logprob: -15.950943946838379

Token 172: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2723104848410003e-05
    2. ')
' → logprob: -10.875022888183594
    3. '<|end|>' → logprob: -12.625022888183594
    4. ' )' → logprob: -15.750022888183594
    5. ')return' → logprob: -16.000022888183594
    6. ')

' → logprob: -16.750022888183594
    7. '   ' → logprob: -16.750022888183594
    8. '<|end|>' → logprob: -17.500022888183594
    9. ')#' → logprob: -18.250022888183594
    10. '),' → logprob: -18.375022888183594

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11958782374858856
    2. '<|end|>' → logprob: -2.3695878982543945
    3. ' ' → logprob: -4.9945878982543945
    4. ')' → logprob: -5.4945878982543945
    5. '    
' → logprob: -5.8695878982543945
    6. '  ' → logprob: -6.8695878982543945
    7. '
' → logprob: -6.8695878982543945
    8. 'def' → logprob: -6.9945878982543945
    9. '  
' → logprob: -7.2445878982543945
    10. ' def' → logprob: -8.119587898254395

Token 174: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.05186614394187927
    2. '   ' → logprob: -3.051866054534912
    3. ' def' → logprob: -5.926866054534912
    4. '	def' → logprob: -8.42686653137207
    5. ')' → logprob: -8.92686653137207
    6. '    
' → logprob: -9.55186653137207
    7. ' ' → logprob: -10.05186653137207
    8. '<|end|>' → logprob: -10.55186653137207
    9. '#' → logprob: -10.80186653137207
    10. '  ' → logprob: -10.80186653137207

Token 175: ' counter' (ID: 9446)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07629368454217911
    2. ' ' → logprob: -2.826293706893921
    3. '__' → logprob: -5.326293468475342
    4. ' def' → logprob: -5.951293468475342
    5. ' +' → logprob: -6.076293468475342
    6. ' add' → logprob: -6.451293468475342
    7. '+' → logprob: -7.576293468475342
    8. ' x' → logprob: -8.0762939453125
    9. ' ' → logprob: -8.3262939453125
    10. 'add' → logprob: -8.5762939453125

Token 176: '(self' (ID: 2402)
  Prédit: 'clock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clock' → logprob: -0.5285525918006897
    2. '_clock' → logprob: -0.9035525918006897
    3. ')' → logprob: -6.778552532196045
    4. ' clockwise' → logprob: -7.278552532196045
    5. '
' → logprob: -7.778552532196045
    6. '(self' → logprob: -7.903552532196045
    7. 'Clock' → logprob: -7.903552532196045
    8. '   ' → logprob: -8.028553009033203
    9. '```' → logprob: -8.153553009033203
    10. 'cw' → logprob: -8.278553009033203

Token 177: '):
' (ID: 1883)
  Prédit: 'clock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clock' → logprob: -0.06414728611707687
    2. '_clock' → logprob: -3.6891472339630127
    3. ')(' → logprob: -3.8141472339630127
    4. ')' → logprob: -4.439147472381592
    5. '):
' → logprob: -6.814147472381592
    6. 'Clock' → logprob: -7.439147472381592
    7. ')(
' → logprob: -7.564147472381592
    8. '   ' → logprob: -8.314146995544434
    9. ' clockwise' → logprob: -8.814146995544434
    10. ')
' → logprob: -9.064146995544434

Token 178: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1578029841184616
    2. ' return' → logprob: -2.6578030586242676
    3. '    ' → logprob: -3.1578030586242676
    4. 'return' → logprob: -3.9078030586242676
    5. '       ' → logprob: -5.657803058624268
    6. 'self' → logprob: -5.782803058624268
    7. ' self' → logprob: -5.907803058624268
    8. 'Vector' → logprob: -6.282803058624268
    9. ' Vector' → logprob: -7.532803058624268
    10. '  ' → logprob: -8.03280258178711

Token 179: ' nx' (ID: 50118)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.5320895910263062
    2. 'return' → logprob: -1.1570895910263062
    3. 'self' → logprob: -3.0320897102355957
    4. ' return' → logprob: -3.6570897102355957
    5. ' Vector' → logprob: -4.407089710235596
    6. ' self' → logprob: -5.032089710235596
    7. '   ' → logprob: -6.532089710235596
    8. 'sg' → logprob: -6.907089710235596
    9. '-' → logprob: -7.407089710235596
    10. '1' → logprob: -7.782089710235596

Token 180: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06282658874988556
    2. ' =' → logprob: -2.812826633453369
    3. ',' → logprob: -7.062826633453369
    4. ')' → logprob: -14.437826156616211
    5. '=-' → logprob: -14.437826156616211
    6. '=self' → logprob: -15.187826156616211
    7. '.' → logprob: -15.687826156616211
    8. '<|end|>' → logprob: -15.687826156616211
    9. ' ,' → logprob: -16.18782615661621
    10. '=}' → logprob: -16.31282615661621

Token 181: ' -' (ID: 533)
  Prédit: '-self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-self' → logprob: -0.8657911419868469
    2. ' -' → logprob: -1.3657910823822021
    3. '-' → logprob: -1.8657910823822021
    4. '-s' → logprob: -2.365791082382202
    5. 'self' → logprob: -3.740791082382202
    6. ' self' → logprob: -3.740791082382202
    7. '-c' → logprob: -3.865791082382202
    8. '0' → logprob: -5.990791320800781
    9. '   ' → logprob: -6.365791320800781
    10. '-vector' → logprob: -6.865791320800781

Token 182: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001696902181720361
    2. ' self' → logprob: -8.87516975402832
    3. 'y' → logprob: -10.62516975402832
    4. '   ' → logprob: -13.25016975402832
    5. '<|end|>' → logprob: -14.12516975402832
    6. '
' → logprob: -14.75016975402832
    7. '       ' → logprob: -14.87516975402832
    8. 's' → logprob: -15.12516975402832
    9. '```' → logprob: -15.25016975402832
    10. '(self' → logprob: -15.25016975402832

Token 183: '.x' (ID: 3700)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.10633555799722672
    2. '.x' → logprob: -2.3563356399536133
    3. '.' → logprob: -5.356335639953613
    4. 'y' → logprob: -7.106335639953613
    5. 'x' → logprob: -7.481335639953613
    6. ' .' → logprob: -12.356335639953613
    7. '.py' → logprob: -13.731335639953613
    8. '.
' → logprob: -13.731335639953613
    9. ' y' → logprob: -14.106335639953613
    10. '<|end|>' → logprob: -15.356335639953613

Token 184: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032209681812673807
    2. ',
' → logprob: -7.253221035003662
    3. ',y' → logprob: -7.253221035003662
    4. ' ,' → logprob: -7.378221035003662
    5. ',n' → logprob: -8.003220558166504
    6. '       ' → logprob: -8.003220558166504
    7. 'y' → logprob: -8.503220558166504
    8. '
' → logprob: -8.628220558166504
    9. '<|end|>' → logprob: -9.878220558166504
    10. '   ' → logprob: -10.878220558166504

Token 185: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009814057499170303
    2. '       ' → logprob: -4.884814262390137
    3. ',y' → logprob: -7.384814262390137
    4. ',
' → logprob: -7.634814262390137
    5. ',n' → logprob: -7.884814262390137
    6. 'y' → logprob: -8.384814262390137
    7. ' ,' → logprob: -8.509814262390137
    8. '
' → logprob: -8.884814262390137
    9. '   ' → logprob: -10.009814262390137
    10. 'ny' → logprob: -10.384814262390137

Token 186: ' ny' (ID: 4423)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13774578273296356
    2. 'ny' (adapté à ' ny') → logprob: -3.0127458572387695
    3. 'self' → logprob: -3.5127458572387695
    4. 'y' → logprob: -3.6377458572387695
    5. ' -' → logprob: -4.2627458572387695
    6. ' ny' → logprob: -6.1377458572387695
    7. '-y' → logprob: -6.5127458572387695
    8. '-n' → logprob: -6.6377458572387695
    9. '-self' → logprob: -6.6377458572387695
    10. ' self' → logprob: -6.6377458572387695

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484341621399
    2. ' =' → logprob: -0.6931484341621399
    3. '=-' → logprob: -14.443148612976074
    4. '<|end|>' → logprob: -14.818148612976074
    5. ')' → logprob: -16.068147659301758
    6. ' =
' → logprob: -16.818147659301758
    7. '=
' → logprob: -16.943147659301758
    8. ' ' → logprob: -17.818147659301758
    9. '=}' → logprob: -18.693147659301758
    10. '=(-' → logprob: -18.818147659301758

Token 188: ' -' (ID: 533)
  Prédit: '-self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-self' → logprob: -0.31585049629211426
    2. '-' → logprob: -1.4408504962921143
    3. 'self' → logprob: -3.5658504962921143
    4. ' -' → logprob: -5.565850257873535
    5. ' self' → logprob: -7.065850257873535
    6. '-s' → logprob: -7.190850257873535
    7. '-vector' → logprob: -8.065850257873535
    8. '-y' → logprob: -11.565850257873535
    9. '-v' → logprob: -11.565850257873535
    10. '-x' → logprob: -11.815850257873535

Token 189: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3663626305060461e-05
    2. ' self' → logprob: -11.25001335144043
    3. '(self' → logprob: -15.00001335144043
    4. '<|end|>' → logprob: -15.62501335144043
    5. '	self' → logprob: -17.00001335144043
    6. '[self' → logprob: -17.00001335144043
    7. '*self' → logprob: -17.12501335144043
    8. '       ' → logprob: -17.75001335144043
    9. '$self' → logprob: -18.62501335144043
    10. '   ' → logprob: -19.12501335144043

Token 190: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.001778234145604074
    2. 'y' → logprob: -6.3767781257629395
    3. '.' → logprob: -9.501778602600098
    4. ' .' → logprob: -14.001778602600098
    5. ' y' → logprob: -15.626778602600098
    6. '.x' → logprob: -15.876778602600098
    7. '.py' → logprob: -16.00177764892578
    8. '	y' → logprob: -17.25177764892578
    9. '.
' → logprob: -18.00177764892578
    10. 'ny' → logprob: -18.50177764892578

Token 191: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03194538876414299
    2. '
' → logprob: -3.6569454669952393
    3. 'return' → logprob: -5.53194522857666
    4. ' return' → logprob: -6.90694522857666
    5. '	' → logprob: -7.65694522857666
    6. '<|end|>' → logprob: -9.78194522857666
    7. '	return' → logprob: -9.90694522857666
    8. '
' → logprob: -10.53194522857666
    9. '        
' → logprob: -11.03194522857666
    10. '   ' → logprob: -11.28194522857666

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01570444367825985
    2. 'return' → logprob: -4.51570463180542
    3. ' return' → logprob: -5.39070463180542
    4. '   ' → logprob: -10.140704154968262
    5. '	' → logprob: -10.765704154968262
    6. '	return' → logprob: -10.765704154968262
    7. '
' → logprob: -13.640704154968262
    8. '      ' → logprob: -14.265704154968262
    9. '<|end|>' → logprob: -14.265704154968262
    10. ' ' → logprob: -14.515704154968262

Token 193: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16673597693443298
    2. ' return' → logprob: -1.9167360067367554
    3. '       ' → logprob: -5.041736125946045
    4. '
' → logprob: -11.291735649108887
    5. '	return' → logprob: -11.541735649108887
    6. '   ' → logprob: -12.666735649108887
    7. 'eturn' → logprob: -13.791735649108887
    8. ' ' → logprob: -15.166735649108887
    9. 'Vector' → logprob: -15.541735649108887
    10. '	' → logprob: -15.791735649108887

Token 194: ' Vector' (ID: 8764)
  Prédit: ' Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.4740802049636841
    2. 'Vector' → logprob: -0.9740802049636841
    3. '	Vector' → logprob: -13.099080085754395
    4. '_Vector' → logprob: -15.099080085754395
    5. '  ' → logprob: -15.474080085754395
    6. ' ' → logprob: -15.474080085754395
    7. ' vector' → logprob: -16.22408103942871
    8. '   ' → logprob: -16.34908103942871
    9. '(Vector' → logprob: -16.59908103942871
    10. 'self' → logprob: -16.72408103942871

Token 195: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.0001593195047462359
    2. '(' → logprob: -8.75015926361084
    3. ' (' → logprob: -15.25015926361084
    4. '(n' → logprob: -15.37515926361084
    5. '(
' → logprob: -15.62515926361084
    6. 'nx' → logprob: -15.75015926361084
    7. '```' → logprob: -18.750160217285156
    8. '(nn' → logprob: -19.000160217285156
    9. '(-' → logprob: -19.250160217285156
    10. '(mx' → logprob: -19.250160217285156

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.551721889991313e-05
    2. ' ,' → logprob: -10.000065803527832
    3. ',n' → logprob: -11.000065803527832
    4. ',y' → logprob: -12.750065803527832
    5. ',
' → logprob: -15.625065803527832
    6. ')' → logprob: -16.625064849853516
    7. ',num' → logprob: -17.000064849853516
    8. '‌,' → logprob: -17.125064849853516
    9. ',new' → logprob: -17.250064849853516
    10. ',

' → logprob: -17.875064849853516

Token 197: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.16022878885269165
    2. ' ny' → logprob: -1.9102287292480469
    3. 'nyi' → logprob: -13.285228729248047
    4. 'nyt' → logprob: -14.410228729248047
    5. ''ny' → logprob: -14.785228729248047
    6. ' ' → logprob: -14.910228729248047
    7. 'n' → logprob: -15.035228729248047
    8. ')' → logprob: -15.410228729248047
    9. ' ' → logprob: -15.410228729248047
    10. ' nny' → logprob: -16.035228729248047

Token 198: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.000001907348633
    4. ' )' → logprob: -18.500001907348633
    5. ')return' → logprob: -19.125001907348633
    6. ')

' → logprob: -19.250001907348633
    7. '       ' → logprob: -19.750001907348633
    8. '))' → logprob: -20.125001907348633
    9. ')`' → logprob: -20.250001907348633
    10. '}' → logprob: -20.875001907348633

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03872981667518616
    2. '+' → logprob: -4.038729667663574
    3. 'def' → logprob: -4.913729667663574
    4. '<|end|>' → logprob: -5.413729667663574
    5. ')' → logprob: -5.663729667663574
    6. '*' → logprob: -6.913729667663574
    7. '#' → logprob: -7.038729667663574
    8. ' def' → logprob: -7.288729667663574
    9. '    
' → logprob: -7.663729667663574
    10. '  ' → logprob: -7.663729667663574

Token 200: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009432338178157806
    2. '   ' → logprob: -5.134432315826416
    3. ' def' → logprob: -5.759432315826416
    4. '	def' → logprob: -9.009432792663574
    5. ' ' → logprob: -9.509432792663574
    6. '    
' → logprob: -10.509432792663574
    7. '+' → logprob: -10.634432792663574
    8. '#' → logprob: -10.634432792663574
    9. '__' → logprob: -10.634432792663574
    10. '  ' → logprob: -11.384432792663574

Token 201: ' times' (ID: 4238)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.36113759875297546
    2. '__' → logprob: -1.2361376285552979
    3. ' add' → logprob: -4.986137390136719
    4. 'add' → logprob: -6.236137390136719
    5. ' ' → logprob: -6.611137390136719
    6. '_' → logprob: -7.986137390136719
    7. ' copy' → logprob: -7.986137390136719
    8. ' scale' → logprob: -8.236137390136719
    9. ' dot' → logprob: -8.361137390136719
    10. 'normalize' → logprob: -8.736137390136719

Token 202: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00920699443668127
    2. '(' → logprob: -4.759206771850586
    3. '(s' → logprob: -8.634206771850586
    4. '<|end|>' → logprob: -8.884206771850586
    5. ' (' → logprob: -9.009206771850586
    6. 's' → logprob: -10.384206771850586
    7. 'self' → logprob: -10.759206771850586
    8. 't' → logprob: -11.009206771850586
    9. 'def' → logprob: -11.259206771850586
    10. '<|end|>' → logprob: -11.884206771850586

Token 203: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02202574349939823
    2. '(' → logprob: -4.5220255851745605
    3. ' (' → logprob: -4.6470255851745605
    4. ',' → logprob: -7.3970255851745605
    5. ')' → logprob: -7.6470255851745605
    6. '(n' → logprob: -9.772026062011719
    7. '(s' → logprob: -10.522026062011719
    8. ')(' → logprob: -10.647026062011719
    9. '(x' → logprob: -10.897026062011719
    10. '(other' → logprob: -11.147026062011719

Token 204: ' k' (ID: 372)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -1.2966554164886475
    2. 'self' → logprob: -1.7966554164886475
    3. ' other' → logprob: -2.0466554164886475
    4. 't' → logprob: -2.4216554164886475
    5. ' t' → logprob: -2.7966554164886475
    6. ' self' → logprob: -3.0466554164886475
    7. 'k' → logprob: -3.0466554164886475
    8. 'scalar' → logprob: -3.2966554164886475
    9. ' scalar' → logprob: -3.5466554164886475
    10. 'v' → logprob: -3.9216554164886475

Token 205: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0955408588051796
    2. '):' → logprob: -2.845540761947632
    3. ')' → logprob: -3.470540761947632
    4. 'self' → logprob: -6.845541000366211
    5. '(self' → logprob: -7.845541000366211
    6. '):
' → logprob: -8.720541000366211
    7. '   ' → logprob: -9.220541000366211
    8. ' ,' → logprob: -9.845541000366211
    9. '),' → logprob: -10.970541000366211
    10. ' self' → logprob: -11.095541000366211

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05218188837170601
    2. ' Vector' → logprob: -4.052181720733643
    3. 'Vector' → logprob: -4.177181720733643
    4. ' return' → logprob: -4.927181720733643
    5. 'return' → logprob: -5.802181720733643
    6. '   ' → logprob: -5.927181720733643
    7. 'self' → logprob: -6.802181720733643
    8. '<|end|>' → logprob: -7.177181720733643
    9. '
' → logprob: -7.302181720733643
    10. '(Vector' → logprob: -7.677181720733643

Token 207: ' nx' (ID: 50118)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.17732805013656616
    2. 'return' → logprob: -1.927328109741211
    3. ' Vector' → logprob: -4.677328109741211
    4. ' return' → logprob: -4.927328109741211
    5. 'self' → logprob: -8.427328109741211
    6. '       ' → logprob: -8.677328109741211
    7. '   ' → logprob: -11.302328109741211
    8. ' self' → logprob: -12.552328109741211
    9. ' ' → logprob: -13.927328109741211
    10. 'Return' → logprob: -14.552328109741211

Token 208: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740830957889557
    2. ' =' → logprob: -0.9740830659866333
    3. '=k' → logprob: -13.349082946777344
    4. ')' → logprob: -13.599082946777344
    5. ',' → logprob: -14.224082946777344
    6. ' ' → logprob: -14.474082946777344
    7. '<|end|>' → logprob: -14.474082946777344
    8. '.' → logprob: -14.724082946777344
    9. '=}' → logprob: -15.349082946777344
    10. ' =
' → logprob: -15.474082946777344

Token 209: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3132651150226593
    2. 'self' → logprob: -1.313265085220337
    3. ' ' → logprob: -14.063264846801758
    4. '	self' → logprob: -14.313264846801758
    5. ' k' → logprob: -14.813264846801758
    6. 'x' → logprob: -15.188264846801758
    7. '   ' → logprob: -15.188264846801758
    8. ' x' → logprob: -15.188264846801758
    9. ' ' → logprob: -15.188264846801758
    10. '<|end|>' → logprob: -16.063264846801758

Token 210: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0019699118565768003
    2. '.' → logprob: -6.251969814300537
    3. 'x' → logprob: -10.126970291137695
    4. ' .' → logprob: -13.751970291137695
    5. ' x' → logprob: -15.501970291137695
    6. '.
' → logprob: -17.751970291137695
    7. ' ' → logprob: -18.126970291137695
    8. '*x' → logprob: -18.626970291137695
    9. '.k' → logprob: -19.001970291137695
    10. '*' → logprob: -19.501970291137695

Token 211: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.018847176805138588
    2. '*' → logprob: -4.0188469886779785
    3. '*k' → logprob: -7.2688469886779785
    4. '*K' → logprob: -16.89384651184082
    5. ' ' → logprob: -17.26884651184082
    6. '*object' → logprob: -17.51884651184082
    7. '*q' → logprob: -18.76884651184082
    8. ' ' → logprob: -18.89384651184082
    9. '*self' → logprob: -19.26884651184082
    10. '*x' → logprob: -19.89384651184082

Token 212: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01814994215965271
    2. ' k' → logprob: -4.0181498527526855
    3. '	k' → logprob: -18.018150329589844
    4. ' ' → logprob: -18.268150329589844
    5. '   ' → logprob: -19.643150329589844
    6. '*k' → logprob: -20.143150329589844
    7. 'kx' → logprob: -20.268150329589844
    8. '_k' → logprob: -20.643150329589844
    9. '  ' → logprob: -20.768150329589844
    10. '{k' → logprob: -21.393150329589844

Token 213: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5565505027770996
    2. '       ' → logprob: -1.5565505027770996
    3. '<|end|>' → logprob: -1.5565505027770996
    4. 'return' → logprob: -6.0565505027771
    5. '<|end|>' → logprob: -6.1815505027771
    6. ' return' → logprob: -8.556550979614258
    7. '        
' → logprob: -8.681550979614258
    8. '
' → logprob: -9.431550979614258
    9. ',' → logprob: -9.681550979614258
    10. '```' → logprob: -10.681550979614258

Token 214: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.653877854347229
    2. '       ' → logprob: -0.778877854347229
    3. 'return' → logprob: -4.5288777351379395
    4. '<|end|>' → logprob: -4.7788777351379395
    5. ' return' → logprob: -7.1538777351379395
    6. '        
' → logprob: -7.5288777351379395
    7. '
' → logprob: -8.403878211975098
    8. '<|end|>' → logprob: -9.153878211975098
    9. '   ' → logprob: -9.778878211975098
    10. '  
' → logprob: -10.778878211975098

Token 215: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.5759986042976379
    2. 'ny' (adapté à ' ny') → logprob: -0.8259986042976379
    3. '       ' → logprob: -9.825998306274414
    4. ' return' → logprob: -13.075998306274414
    5. 'n' → logprob: -13.825998306274414
    6. 'return' → logprob: -14.825998306274414
    7. '   ' → logprob: -15.075998306274414
    8. 'nyi' → logprob: -15.325998306274414
    9. '
' → logprob: -15.450998306274414
    10. 'iny' → logprob: -15.700998306274414

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010450834408402443
    2. '=' → logprob: -4.635450839996338
    3. ' *' → logprob: -7.385450839996338
    4. '<|end|>' → logprob: -9.63545036315918
    5. '*' → logprob: -12.38545036315918
    6. ' ' → logprob: -12.63545036315918
    7. ' *=' → logprob: -13.76045036315918
    8. ')' → logprob: -15.88545036315918
    9. '<|end|>' → logprob: -15.88545036315918
    10. '   ' → logprob: -16.26045036315918

Token 217: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029758475720882416
    2. ' self' → logprob: -3.5297584533691406
    3. '(self' → logprob: -13.15475845336914
    4. '	self' → logprob: -13.27975845336914
    5. '       ' → logprob: -13.65475845336914
    6. '[self' → logprob: -13.65475845336914
    7. '<|end|>' → logprob: -14.02975845336914
    8. '   ' → logprob: -14.65475845336914
    9. ' ' → logprob: -15.15475845336914
    10. '*self' → logprob: -15.77975845336914

Token 218: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.03928081691265106
    2. ' *' → logprob: -3.539280891418457
    3. '*' → logprob: -5.539280891418457
    4. '.' → logprob: -5.664280891418457
    5. '.x' → logprob: -7.039280891418457
    6. 'y' → logprob: -7.664280891418457
    7. '*y' → logprob: -7.789280891418457
    8. ' ' → logprob: -8.664280891418457
    9. ' .' → logprob: -10.039280891418457
    10. '<|end|>' → logprob: -10.664280891418457

Token 219: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00033558503491804004
    2. '*' → logprob: -8.000335693359375
    3. '*k' → logprob: -15.750335693359375
    4. ' ' → logprob: -18.625335693359375
    5. ' ' → logprob: -18.875335693359375
    6. ' **' → logprob: -20.625335693359375
    7. '<|end|>' → logprob: -20.875335693359375
    8. '*object' → logprob: -21.000335693359375
    9. '**' → logprob: -21.250335693359375
    10. '   ' → logprob: -22.375335693359375

Token 220: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011047814972698689
    2. ' k' → logprob: -4.511047840118408
    3. '	k' → logprob: -18.38604736328125
    4. 'kx' → logprob: -18.38604736328125
    5. ' ' → logprob: -18.51104736328125
    6. '   ' → logprob: -18.88604736328125
    7. 'x' → logprob: -18.88604736328125
    8. 'y' → logprob: -19.13604736328125
    9. '*k' → logprob: -19.13604736328125
    10. ' к' → logprob: -19.51104736328125

Token 221: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008398733101785183
    2. '
' → logprob: -5.508398532867432
    3. 'return' → logprob: -5.633398532867432
    4. ' return' → logprob: -7.383398532867432
    5. '<|end|>' → logprob: -9.50839900970459
    6. '
' → logprob: -11.38339900970459
    7. '   ' → logprob: -11.75839900970459
    8. '	return' → logprob: -11.88339900970459
    9. '        
' → logprob: -12.50839900970459
    10. '	' → logprob: -12.75839900970459

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016373928636312485
    2. 'return' → logprob: -4.266374111175537
    3. ' return' → logprob: -6.141374111175537
    4. '   ' → logprob: -10.016373634338379
    5. '	return' → logprob: -12.016373634338379
    6. '
' → logprob: -12.641373634338379
    7. '	' → logprob: -14.516373634338379
    8. '      ' → logprob: -14.766373634338379
    9. 'eturn' → logprob: -15.516373634338379
    10. '<|end|>' → logprob: -15.766373634338379

Token 223: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00010235115041723475
    2. ' return' → logprob: -9.250102043151855
    3. '       ' → logprob: -12.000102043151855
    4. '   ' → logprob: -16.250102996826172
    5. '
' → logprob: -17.750102996826172
    6. '	return' → logprob: -18.250102996826172
    7. '        
' → logprob: -21.000102996826172
    8. '```' → logprob: -21.875102996826172
    9. '{return' → logprob: -22.125102996826172
    10. ' ' → logprob: -22.125102996826172

Token 224: ' Vector' (ID: 8764)
  Prédit: ' Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.25192928314208984
    2. 'Vector' → logprob: -1.5019292831420898
    3. '	Vector' → logprob: -16.501930236816406
    4. '_Vector' → logprob: -17.376930236816406
    5. ' vector' → logprob: -18.251930236816406
    6. '<Vector' → logprob: -18.751930236816406
    7. '.Vector' → logprob: -19.001930236816406
    8. '(Vector' → logprob: -19.126930236816406
    9. ' ' → logprob: -20.251930236816406
    10. 'Vectors' → logprob: -20.501930236816406

Token 225: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.0019299437990412116
    2. '(' → logprob: -6.251929759979248
    3. '(n' → logprob: -14.001930236816406
    4. '(
' → logprob: -15.501930236816406
    5. ' (' → logprob: -15.751930236816406
    6. '(x' → logprob: -16.001930236816406
    7. '(mx' → logprob: -17.876930236816406
    8. '(cx' → logprob: -18.626930236816406
    9. '(dx' → logprob: -18.751930236816406
    10. '(nn' → logprob: -19.126930236816406

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1994775377388578e-05
    2. ' ,' → logprob: -11.750012397766113
    3. ',y' → logprob: -13.000012397766113
    4. ',n' → logprob: -13.750012397766113
    5. ',
' → logprob: -15.250012397766113
    6. '<|end|>' → logprob: -15.250012397766113
    7. ')' → logprob: -16.000011444091797
    8. '‌,' → logprob: -17.500011444091797
    9. ',

' → logprob: -17.625011444091797
    10. ',new' → logprob: -18.250011444091797

Token 227: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.023245712742209435
    2. 'ny' → logprob: -3.7732458114624023
    3. 'ky' → logprob: -16.773244857788086
    4. ' ky' → logprob: -17.148244857788086
    5. ' ' → logprob: -17.398244857788086
    6. ' ' → logprob: -17.523244857788086
    7. ' k' → logprob: -17.523244857788086
    8. 'k' → logprob: -17.523244857788086
    9. ' nk' → logprob: -17.773244857788086
    10. ' Ny' → logprob: -17.773244857788086

Token 228: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -13.750000953674316
    3. ' )' → logprob: -17.125001907348633
    4. '   ' → logprob: -17.625001907348633
    5. ')return' → logprob: -18.875001907348633
    6. '<|end|>' → logprob: -19.000001907348633
    7. ')

' → logprob: -19.750001907348633
    8. '),' → logprob: -20.125001907348633
    9. '       ' → logprob: -20.500001907348633
    10. '))' → logprob: -21.000001907348633

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028872661292552948
    2. 'def' → logprob: -3.6538727283477783
    3. ' def' → logprob: -6.403872489929199
    4. ' ' → logprob: -7.528872489929199
    5. '<|end|>' → logprob: -8.6538724899292
    6. '  ' → logprob: -9.4038724899292
    7. '
' → logprob: -9.9038724899292
    8. '    
' → logprob: -10.2788724899292
    9. '	def' → logprob: -11.6538724899292
    10. '    ' → logprob: -11.9038724899292

Token 230: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.007468074560165405
    2. '   ' → logprob: -5.757468223571777
    3. '__' → logprob: -6.007468223571777
    4. ' def' → logprob: -6.757468223571777
    5. ' ' → logprob: -8.007468223571777
    6. '+' → logprob: -8.132468223571777
    7. '    
' → logprob: -11.757468223571777
    8. '  ' → logprob: -12.132468223571777
    9. '	def' → logprob: -12.632468223571777
    10. 'add' → logprob: -13.007468223571777

Token 231: ' unit' (ID: 7670)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.5689031481742859
    2. ' add' → logprob: -1.4439032077789307
    3. 'plus' → logprob: -2.3189032077789307
    4. ' plus' → logprob: -2.9439032077789307
    5. '__' → logprob: -3.3189032077789307
    6. ' __' → logprob: -5.318902969360352
    7. 'dot' → logprob: -5.693902969360352
    8. ' dot' → logprob: -7.318902969360352
    9. 'div' → logprob: -7.943902969360352
    10. 'normalize' → logprob: -8.318902969360352

Token 232: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003410647332202643
    2. '(' → logprob: -8.750341415405273
    3. '(self' → logprob: -8.750341415405273
    4. '()(' → logprob: -11.750341415405273
    5. '().' → logprob: -12.500341415405273
    6. ' ()' → logprob: -12.875341415405273
    7. '())' → logprob: -13.125341415405273
    8. '()
' → logprob: -13.125341415405273
    9. '()

' → logprob: -13.125341415405273
    10. '()`' → logprob: -14.500341415405273

Token 233: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.28082892298698425
    2. '):' → logprob: -1.6558289527893066
    3. ')' → logprob: -3.5308289527893066
    4. '):
' → logprob: -3.7808289527893066
    5. 'self' → logprob: -7.155828952789307
    6. ')(' → logprob: -7.405828952789307
    7. '()' → logprob: -9.405828475952148
    8. '(' → logprob: -9.405828475952148
    9. '   ' → logprob: -9.780828475952148
    10. ',' → logprob: -9.905828475952148

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028544258326292038
    2. 'return' → logprob: -3.7785441875457764
    3. 'if' → logprob: -5.6535444259643555
    4. '   ' → logprob: -7.7785444259643555
    5. 'self' → logprob: -8.028544425964355
    6. '()' → logprob: -8.153544425964355
    7. 'n' → logprob: -8.278544425964355
    8. '
' → logprob: -8.653544425964355
    9. ' if' → logprob: -9.653544425964355
    10. ' return' → logprob: -9.903544425964355

Token 235: ' norm' (ID: 7882)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3995850682258606
    2. 'if' → logprob: -1.3995850086212158
    3. 'norm' (adapté à ' norm') → logprob: -2.774585008621216
    4. 'return' → logprob: -4.524585247039795
    5. 'length' → logprob: -5.649585247039795
    6. '   ' → logprob: -6.399585247039795
    7. 'l' → logprob: -6.399585247039795
    8. 'mag' → logprob: -7.274585247039795
    9. ' if' → logprob: -7.649585247039795
    10. 'd' → logprob: -7.774585247039795

Token 236: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.046229589730501175
    2. ' =' → logprob: -3.171229600906372
    3. '=' → logprob: -6.046229362487793
    4. '_value' → logprob: -7.921229362487793
    5. '_val' → logprob: -8.421229362487793
    6. 's' → logprob: -9.921229362487793
    7. '()
' → logprob: -9.921229362487793
    8. ' ()' → logprob: -10.421229362487793
    9. 'self' → logprob: -10.796229362487793
    10. '()==' → logprob: -11.046229362487793

Token 237: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067201098427176476
    2. ' self' → logprob: -5.006720066070557
    3. '(self' → logprob: -12.881720542907715
    4. '   ' → logprob: -13.131720542907715
    5. '1' → logprob: -17.0067195892334
    6. ' ' → logprob: -17.5067195892334
    7. ' (' → logprob: -18.3817195892334
    8. '       ' → logprob: -18.3817195892334
    9. '	self' → logprob: -18.3817195892334
    10. '(' → logprob: -18.6317195892334

Token 238: '.norm' (ID: 73834)
  Prédit: '.norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.norm' → logprob: -7.803360495017841e-05
    2. '.' → logprob: -9.500078201293945
    3. '().' → logprob: -13.625078201293945
    4. '.n' → logprob: -13.750078201293945
    5. ' .' → logprob: -14.625078201293945
    6. 'norm' → logprob: -15.625078201293945
    7. '.nom' → logprob: -15.750078201293945
    8. '.normal' → logprob: -18.000078201293945
    9. '.
' → logprob: -18.750078201293945
    10. '
' → logprob: -19.000078201293945

Token 239: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.01820274256169796
    2. '()' → logprob: -4.018202781677246
    3. '()
' → logprob: -9.893202781677246
    4. '()

' → logprob: -13.643202781677246
    5. ' ()
' → logprob: -14.893202781677246
    6. 'if' → logprob: -15.018202781677246
    7. '()\' → logprob: -15.518202781677246
    8. '();
' → logprob: -16.64320182800293
    9. '()>' → logprob: -16.76820182800293
    10. '()<' → logprob: -16.76820182800293

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010887817479670048
    2. ' if' → logprob: -6.876088619232178
    3. 'if' → logprob: -10.626089096069336
    4. ' return' → logprob: -11.501089096069336
    5. '   ' → logprob: -11.626089096069336
    6. '        
' → logprob: -12.376089096069336
    7. 'return' → logprob: -12.626089096069336
    8. '
' → logprob: -13.001089096069336
    9. '<|end|>' → logprob: -13.876089096069336
    10. ',' → logprob: -14.876089096069336

Token 241: ' nx' (ID: 50118)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12950323522090912
    2. 'return' → logprob: -2.1295032501220703
    3. '       ' → logprob: -6.00450325012207
    4. ' if' → logprob: -9.25450325012207
    5. ' return' → logprob: -11.87950325012207
    6. '   ' → logprob: -13.62950325012207
    7. '	if' → logprob: -16.50450325012207
    8. '
' → logprob: -16.50450325012207
    9. '0' → logprob: -16.87950325012207
    10. '        
' → logprob: -16.87950325012207

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45556023716926575
    2. '=' → logprob: -1.4555602073669434
    3. ' /' → logprob: -2.4555602073669434
    4. '/' → logprob: -3.0805602073669434
    5. ',' → logprob: -7.330560207366943
    6. ' ' → logprob: -9.705560684204102
    7. '/n' → logprob: -10.080560684204102
    8. ' if' → logprob: -10.205560684204102
    9. ' /=' → logprob: -10.330560684204102
    10. ' /
' → logprob: -11.330560684204102

Token 243: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005250472575426102
    2. ' self' → logprob: -5.255250453948975
    3. '0' → logprob: -11.380250930786133
    4. '   ' → logprob: -13.005250930786133
    5. '
' → logprob: -13.255250930786133
    6. '(self' → logprob: -14.380250930786133
    7. 'None' → logprob: -15.005250930786133
    8. ' ' → logprob: -16.255250930786133
    9. '1' → logprob: -16.255250930786133
    10. '  ' → logprob: -16.755250930786133

Token 244: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0006284446571953595
    2. '.' → logprob: -7.500628471374512
    3. 'x' → logprob: -9.500628471374512
    4. ' .' → logprob: -14.375628471374512
    5. ' x' → logprob: -16.125627517700195
    6. '0' → logprob: -19.250627517700195
    7. '._' → logprob: -20.000627517700195
    8. '..' → logprob: -20.125627517700195
    9. '   ' → logprob: -20.500627517700195
    10. '	x' → logprob: -20.750627517700195

Token 245: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3868972063064575
    2. ' /' → logprob: -1.1368972063064575
    3. '/n' → logprob: -10.636897087097168
    4. '/
' → logprob: -13.761897087097168
    5. ' /
' → logprob: -13.886897087097168
    6. ' ' → logprob: -16.636898040771484
    7. '/
/' → logprob: -17.636898040771484
    8. '
' → logprob: -18.011898040771484
    9. '/usr' → logprob: -18.011898040771484
    10. '/

' → logprob: -18.136898040771484

Token 246: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.011094387620687485
    2. ' norm' → logprob: -4.761094570159912
    3. '(norm' → logprob: -6.011094570159912
    4. '(' → logprob: -10.761094093322754
    5. ' (' → logprob: -13.136094093322754
    6. '
' → logprob: -14.011094093322754
    7. 'max' → logprob: -14.136094093322754
    8. '   ' → logprob: -15.511094093322754
    9. '(n' → logprob: -16.26109504699707
    10. '(max' → logprob: -16.63609504699707

Token 247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1299775391817093
    2. '
' → logprob: -2.3799774646759033
    3. '<|end|>' → logprob: -3.7549774646759033
    4. '        
' → logprob: -6.254977703094482
    5. ',' → logprob: -6.379977703094482
    6. ' if' → logprob: -7.129977703094482
    7. 'if' → logprob: -7.754977703094482
    8. '<|end|>' → logprob: -8.754977226257324
    9. ' 
' → logprob: -8.879977226257324
    10. '   ' → logprob: -9.129977226257324

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008943438529968262
    2. '
' → logprob: -5.133943557739258
    3. ',' → logprob: -6.758943557739258
    4. ' ny' → logprob: -7.383943557739258
    5. '<|end|>' → logprob: -7.633943557739258
    6. 'ny' → logprob: -8.133943557739258
    7. '        
' → logprob: -8.633943557739258
    8. '        ' → logprob: -10.258943557739258
    9. ',y' → logprob: -10.383943557739258
    10. '   ' → logprob: -10.508943557739258

Token 249: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' (adapté à ' ny') → logprob: -2.0219828002154827e-05
    2. ' ny' → logprob: -11.000020027160645
    3. '       ' → logprob: -12.625020027160645
    4. '   ' → logprob: -15.500020027160645
    5. 'nyi' → logprob: -17.50002098083496
    6. 'y' → logprob: -18.12502098083496
    7. 'nyt' → logprob: -18.75002098083496
    8. 'iy' → logprob: -19.37502098083496
    9. 'NY' → logprob: -19.37502098083496
    10. '     ' → logprob: -19.62502098083496

Token 250: ' =' (ID: 314)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.17981435358524323
    2. '/' → logprob: -1.804814338684082
    3. '=' → logprob: -9.804814338684082
    4. ' =' → logprob: -11.429814338684082
    5. ' /=' → logprob: -14.304814338684082
    6. '       ' → logprob: -14.304814338684082
    7. ' ' → logprob: -14.429814338684082
    8. '<|end|>' → logprob: -14.554814338684082
    9. ')' → logprob: -15.179814338684082
    10. ' /
' → logprob: -15.429814338684082

Token 251: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018160710111260414
    2. ' self' → logprob: -4.018160820007324
    3. '       ' → logprob: -11.768160820007324
    4. '(self' → logprob: -13.893160820007324
    5. '[self' → logprob: -14.268160820007324
    6. '	self' → logprob: -14.518160820007324
    7. '   ' → logprob: -15.018160820007324
    8. ' ' → logprob: -15.768160820007324
    9. '<|end|>' → logprob: -15.768160820007324
    10. '0' → logprob: -16.393159866333008

Token 252: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.008018371649086475
    2. ' /' → logprob: -5.508018493652344
    3. '/' → logprob: -5.758018493652344
    4. '.' → logprob: -7.258018493652344
    5. 'y' → logprob: -9.758018493652344
    6. ' .' → logprob: -11.883018493652344
    7. '   ' → logprob: -13.258018493652344
    8. ' y' → logprob: -13.633018493652344
    9. ' ' → logprob: -13.758018493652344
    10. '.x' → logprob: -14.383018493652344

Token 253: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5759421586990356
    2. ' /' → logprob: -0.8259421586990356
    3. '/n' → logprob: -13.325942039489746
    4. ' /
' → logprob: -14.825942039489746
    5. ' ' → logprob: -16.075942993164062
    6. ' ' → logprob: -16.075942993164062
    7. '/k' → logprob: -16.325942993164062
    8. '/usr' → logprob: -16.325942993164062
    9. '/
' → logprob: -16.575942993164062
    10. '       ' → logprob: -16.575942993164062

Token 254: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.0017042214749380946
    2. ' norm' → logprob: -6.376704216003418
    3. '(norm' → logprob: -13.751704216003418
    4. 'self' → logprob: -15.251704216003418
    5. '   ' → logprob: -15.376704216003418
    6. '.norm' → logprob: -15.751704216003418
    7. ' ' → logprob: -16.126705169677734
    8. '       ' → logprob: -16.876705169677734
    9. 'nor' → logprob: -17.251705169677734
    10. '2' → logprob: -17.626705169677734

Token 255: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004510493890848011
    2. 'return' → logprob: -8.37545108795166
    3. ' return' → logprob: -8.62545108795166
    4. '
' → logprob: -10.37545108795166
    5. '	' → logprob: -12.25045108795166
    6. '   ' → logprob: -13.25045108795166
    7. '	return' → logprob: -13.75045108795166
    8. '        
' → logprob: -14.62545108795166
    9. ',' → logprob: -14.75045108795166
    10. '      ' → logprob: -15.12545108795166

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014485642313957214
    2. 'return' → logprob: -6.751448631286621
    3. ' return' → logprob: -8.251448631286621
    4. '   ' → logprob: -11.376448631286621
    5. '	return' → logprob: -12.751448631286621
    6. '
' → logprob: -13.501448631286621
    7. '<|end|>' → logprob: -13.876448631286621
    8. '	' → logprob: -15.751448631286621
    9. '        
' → logprob: -16.001447677612305
    10. ' ' → logprob: -16.251447677612305

Token 257: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.093505099765025e-05
    2. '       ' → logprob: -11.250020980834961
    3. ' return' → logprob: -11.750020980834961
    4. '   ' → logprob: -17.50002098083496
    5. '	return' → logprob: -19.50002098083496
    6. '
' → logprob: -20.87502098083496
    7. '```' → logprob: -21.37502098083496
    8. 'if' → logprob: -22.50002098083496
    9. 'eturn' → logprob: -22.62502098083496
    10. '        
' → logprob: -23.25002098083496

Token 258: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.20141343772411346
    2. ' Vector' → logprob: -1.7014133930206299
    3. '	Vector' → logprob: -16.201414108276367
    4. '(Vector' → logprob: -17.326414108276367
    5. '   ' → logprob: -17.951414108276367
    6. 'self' → logprob: -18.701414108276367
    7. '_Vector' → logprob: -18.826414108276367
    8. ' vector' → logprob: -19.076414108276367
    9. '<Vector' → logprob: -19.076414108276367
    10. '.Vector' → logprob: -19.951414108276367

Token 259: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -7.553032628493384e-05
    2. '(' → logprob: -9.500075340270996
    3. '(
' → logprob: -14.875075340270996
    4. ' (' → logprob: -15.875075340270996
    5. 'nx' → logprob: -15.875075340270996
    6. '(n' → logprob: -17.000076293945312
    7. '(x' → logprob: -17.625076293945312
    8. '(mx' → logprob: -19.000076293945312
    9. '```' → logprob: -19.125076293945312
    10. '(dx' → logprob: -19.500076293945312

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.141186450899113e-05
    2. ' ,' → logprob: -10.875020980834961
    3. ',y' → logprob: -13.375020980834961
    4. ',n' → logprob: -14.500020980834961
    5. ',
' → logprob: -15.000020980834961
    6. ')' → logprob: -18.12502098083496
    7. '       ' → logprob: -18.12502098083496
    8. ',

' → logprob: -18.50002098083496
    9. '<|end|>' → logprob: -18.50002098083496
    10. '‌,' → logprob: -18.75002098083496

Token 261: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.3868728280067444
    2. ' ny' → logprob: -1.1368727684020996
    3. ' ' → logprob: -14.511873245239258
    4. 'nyi' → logprob: -14.761873245239258
    5. ' ' → logprob: -15.386873245239258
    6. ''ny' → logprob: -16.261873245239258
    7. 'nyt' → logprob: -16.261873245239258
    8. 'iny' → logprob: -16.386873245239258
    9. '   ' → logprob: -16.761873245239258
    10. '  ' → logprob: -16.761873245239258

Token 262: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ')
' → logprob: -12.250004768371582
    3. ')

' → logprob: -16.7500057220459
    4. ' )' → logprob: -17.1250057220459
    5. '   ' → logprob: -17.6250057220459
    6. ')return' → logprob: -19.1250057220459
    7. '<|end|>' → logprob: -19.2500057220459
    8. '       ' → logprob: -20.8750057220459
    9. ')`' → logprob: -20.8750057220459
    10. '))' → logprob: -21.0000057220459

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038948945701122284
    2. 'def' → logprob: -3.5389490127563477
    3. '<|end|>' → logprob: -5.288949012756348
    4. ' ' → logprob: -6.663949012756348
    5. '+' → logprob: -6.913949012756348
    6. '    
' → logprob: -7.538949012756348
    7. ' def' → logprob: -7.788949012756348
    8. '  ' → logprob: -8.663949012756348
    9. '```' → logprob: -8.913949012756348
    10. ')' → logprob: -9.413949012756348

Token 264: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005244385101832449
    2. '   ' → logprob: -7.875524520874023
    3. ' def' → logprob: -9.000524520874023
    4. '	def' → logprob: -12.125524520874023
    5. '<|end|>' → logprob: -12.375524520874023
    6. '    
' → logprob: -12.625524520874023
    7. '#' → logprob: -12.625524520874023
    8. ' ' → logprob: -13.750524520874023
    9. '```' → logprob: -14.250524520874023
    10. '  ' → logprob: -14.250524520874023

Token 265: ' normal' (ID: 6078)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.7022764086723328
    2. '__' → logprob: -0.8272764086723328
    3. 'add' → logprob: -3.3272764682769775
    4. ' add' → logprob: -3.5772764682769775
    5. 'dot' → logprob: -7.452276229858398
    6. ' dot' → logprob: -8.077276229858398
    7. 'plus' → logprob: -8.327276229858398
    8. ' ' → logprob: -8.327276229858398
    9. '```' → logprob: -8.702276229858398
    10. ' def' → logprob: -8.702276229858398

Token 266: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005180051666684449
    2. '(' → logprob: -8.500517845153809
    3. '(self' → logprob: -8.875517845153809
    4. ' ()' → logprob: -9.625517845153809
    5. '():' → logprob: -11.375517845153809
    6. '()`' → logprob: -11.625517845153809
    7. '().' → logprob: -11.875517845153809
    8. '())' → logprob: -11.875517845153809
    9. '()(' → logprob: -12.125517845153809
    10. '`()' → logprob: -12.125517845153809

Token 267: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02883143164217472
    2. '()' → logprob: -3.7788314819335938
    3. ')' → logprob: -6.028831481933594
    4. '())' → logprob: -7.528831481933594
    5. '(' → logprob: -7.653831481933594
    6. '   ' → logprob: -7.903831481933594
    7. '()(' → logprob: -7.903831481933594
    8. '():' → logprob: -8.278831481933594
    9. '()):
' → logprob: -8.403831481933594
    10. ')(' → logprob: -8.528831481933594

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08557108044624329
    2. '   ' → logprob: -2.710571050643921
    3. ' return' → logprob: -4.2105712890625
    4. 'return' → logprob: -7.4605712890625
    5. '()' → logprob: -10.3355712890625
    6. 'def' → logprob: -11.3355712890625
    7. '      ' → logprob: -11.5855712890625
    8. '    ' → logprob: -12.2105712890625
    9. '```' → logprob: -12.4605712890625
    10. '	return' → logprob: -12.4605712890625

Token 269: ' norm' (ID: 7882)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0032668381463736296
    2. ' return' → logprob: -6.37826681137085
    3. '   ' → logprob: -6.62826681137085
    4. 'Vector' → logprob: -8.378267288208008
    5. '       ' → logprob: -12.378267288208008
    6. 'nx' → logprob: -12.503267288208008
    7. '	return' → logprob: -13.503267288208008
    8. '```' → logprob: -14.503267288208008
    9. '  ' → logprob: -14.878267288208008
    10. 'def' → logprob: -15.003267288208008

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4834953844547272
    2. '()' → logprob: -1.3584953546524048
    3. '=' → logprob: -2.1084954738616943
    4. '       ' → logprob: -6.233495235443115
    5. '   ' → logprob: -6.483495235443115
    6. ' ()' → logprob: -7.108495235443115
    7. '()
' → logprob: -8.858495712280273
    8. '(' → logprob: -9.983495712280273
    9. '_' → logprob: -9.983495712280273
    10. '()>' → logprob: -9.983495712280273

Token 271: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0022386356722563505
    2. ' self' → logprob: -6.377238750457764
    3. 'Vector' → logprob: -7.627238750457764
    4. '(self' → logprob: -11.002238273620605
    5. '1' → logprob: -11.127238273620605
    6. '-' → logprob: -12.377238273620605
    7. 'norm' → logprob: -12.502238273620605
    8. '-self' → logprob: -12.877238273620605
    9. '(' → logprob: -13.127238273620605
    10. ' Vector' → logprob: -13.627238273620605

Token 272: '.norm' (ID: 73834)
  Prédit: '.norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.norm' → logprob: -0.00018065694894175977
    2. 'norm' → logprob: -9.1251802444458
    3. '.normal' → logprob: -10.3751802444458
    4. '().' → logprob: -11.0001802444458
    5. '.n' → logprob: -11.3751802444458
    6. '.' → logprob: -12.6251802444458
    7. '.y' → logprob: -12.8751802444458
    8. '.x' → logprob: -13.1251802444458
    9. '.unit' → logprob: -13.3751802444458
    10. '.rotate' → logprob: -14.3751802444458

Token 273: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024936046451330185
    2. '()' → logprob: -3.7749359607696533
    3. '()
' → logprob: -6.524936199188232
    4. '(' → logprob: -9.649935722351074
    5. ',' → logprob: -9.649935722351074
    6. 'n' → logprob: -10.524935722351074
    7. 'return' → logprob: -11.899935722351074
    8. 'if' → logprob: -11.899935722351074
    9. 'def' → logprob: -12.024935722351074
    10. '(),' → logprob: -12.024935722351074

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027232270687818527
    2. 'nx' → logprob: -3.7772321701049805
    3. ' nx' → logprob: -5.9022321701049805
    4. 'if' → logprob: -7.7772321701049805
    5. '(nx' → logprob: -7.7772321701049805
    6. 'return' → logprob: -8.40223217010498
    7. 'x' → logprob: -9.90223217010498
    8. '```' → logprob: -10.02723217010498
    9. 'n' → logprob: -10.40223217010498
    10. ' if' → logprob: -10.90223217010498

Token 275: ' nx' (ID: 50118)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7355659604072571
    2. 'nx' (adapté à ' nx') → logprob: -0.7355659604072571
    3. '       ' → logprob: -3.9855659008026123
    4. 'if' → logprob: -4.110566139221191
    5. '   ' → logprob: -5.485566139221191
    6. ' nx' → logprob: -6.610566139221191
    7. 'Vector' → logprob: -7.610566139221191
    8. ' return' → logprob: -7.860566139221191
    9. '(nx' → logprob: -9.860566139221191
    10. 'n' → logprob: -10.485566139221191

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048589304089546204
    2. ' =' → logprob: -3.0485892295837402
    3. ',' → logprob: -14.173589706420898
    4. '=-' → logprob: -14.548589706420898
    5. '   ' → logprob: -15.048589706420898
    6. '=
' → logprob: -15.298589706420898
    7. '=self' → logprob: -16.1735897064209
    8. ' ' → logprob: -16.6735897064209
    9. '=(-' → logprob: -17.1735897064209
    10. '=

' → logprob: -17.7985897064209

Token 277: ' -' (ID: 533)
  Prédit: '-self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-self' → logprob: -0.7838403582572937
    2. ' -' → logprob: -1.4088404178619385
    3. '-' → logprob: -1.6588404178619385
    4. '-y' → logprob: -2.2838404178619385
    5. '-s' → logprob: -5.533840179443359
    6. '   ' → logprob: -6.783840179443359
    7. 'self' → logprob: -7.283840179443359
    8. '-n' → logprob: -8.03384017944336
    9. '-vector' → logprob: -8.65884017944336
    10. ' self' → logprob: -9.15884017944336

Token 278: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.580929347255733e-05
    2. ' self' → logprob: -11.250016212463379
    3. 'y' → logprob: -13.250016212463379
    4. '   ' → logprob: -14.000016212463379
    5. '(self' → logprob: -16.250015258789062
    6. '	self' → logprob: -17.250015258789062
    7. '       ' → logprob: -19.000015258789062
    8. '-self' → logprob: -19.000015258789062
    9. '
' → logprob: -19.250015258789062
    10. 'sel' → logprob: -19.375015258789062

Token 279: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5760689377784729
    2. '.y' → logprob: -0.8260689377784729
    3. '   ' → logprob: -9.701068878173828
    4. ' y' → logprob: -10.451068878173828
    5. '.' → logprob: -10.951068878173828
    6. '	y' → logprob: -11.326068878173828
    7. 'self' → logprob: -11.951068878173828
    8. ',y' → logprob: -14.326068878173828
    9. ''y' → logprob: -14.951068878173828
    10. '@y' → logprob: -15.076068878173828

Token 280: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.20522671937942505
    2. ' /' → logprob: -1.7052266597747803
    3. '/n' → logprob: -5.580226898193359
    4. 'norm' → logprob: -10.70522689819336
    5. '       ' → logprob: -11.95522689819336
    6. '(norm' → logprob: -13.33022689819336
    7. ' norm' → logprob: -13.45522689819336
    8. '   ' → logprob: -13.83022689819336
    9. '/
' → logprob: -14.08022689819336
    10. '.norm' → logprob: -14.95522689819336

Token 281: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.0009115827269852161
    2. ' norm' → logprob: -7.000911712646484
    3. '(norm' → logprob: -15.750911712646484
    4. '.norm' → logprob: -20.000911712646484
    5. '
' → logprob: -20.125911712646484
    6. '_norm' → logprob: -20.875911712646484
    7. 'nor' → logprob: -21.250911712646484
    8. 'normal' → logprob: -21.500911712646484
    9. 'Norm' → logprob: -22.250911712646484
    10. ' ' → logprob: -22.250911712646484

Token 282: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003268022555857897
    2. 'ny' → logprob: -6.253268241882324
    3. ',' → logprob: -7.503268241882324
    4. '
' → logprob: -8.378268241882324
    5. '<|end|>' → logprob: -8.503268241882324
    6. '        
' → logprob: -8.878268241882324
    7. '   ' → logprob: -9.253268241882324
    8. 'n' → logprob: -10.003268241882324
    9. '    
' → logprob: -11.253268241882324
    10. ' ny' → logprob: -11.378268241882324

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.526165783405304
    2. 'ny' → logprob: -0.901165783405304
    3. ' ny' → logprob: -6.776165962219238
    4. ',' → logprob: -7.651165962219238
    5. '        
' → logprob: -7.776165962219238
    6. '   ' → logprob: -8.151165962219238
    7. 'n' → logprob: -8.526165962219238
    8. '
' → logprob: -8.901165962219238
    9. '<|end|>' → logprob: -9.276165962219238
    10. '    
' → logprob: -10.151165962219238

Token 284: ' ny' (ID: 4423)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002488022670149803
    2. ' self' → logprob: -6.002488136291504
    3. '   ' → logprob: -11.502488136291504
    4. '(self' → logprob: -14.002488136291504
    5. '       ' → logprob: -14.252488136291504
    6. '
' → logprob: -14.627488136291504
    7. '    ' → logprob: -15.627488136291504
    8. '	self' → logprob: -16.002487182617188
    9. '[self' → logprob: -17.002487182617188
    10. 'x' → logprob: -17.002487182617188

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020893067121506
    2. ' =' → logprob: -2.3502089977264404
    3. ')' → logprob: -14.22520923614502
    4. ' ' → logprob: -14.47520923614502
    5. ',' → logprob: -15.10020923614502
    6. '   ' → logprob: -15.22520923614502
    7. '=
' → logprob: -15.97520923614502
    8. '=self' → logprob: -16.225208282470703
    9. '<|end|>' → logprob: -16.350208282470703
    10. ' =
' → logprob: -16.600208282470703

Token 286: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0052377874962985516
    2. ' self' → logprob: -5.255237579345703
    3. '   ' → logprob: -12.880237579345703
    4. '(self' → logprob: -14.005237579345703
    5. '[self' → logprob: -15.255237579345703
    6. '	self' → logprob: -15.255237579345703
    7. ' ' → logprob: -16.130237579345703
    8. '  ' → logprob: -17.505237579345703
    9. '    ' → logprob: -17.630237579345703
    10. '=self' → logprob: -18.380237579345703

Token 287: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0031652413308620453
    2. 'x' → logprob: -6.253165245056152
    3. 'self' → logprob: -6.753165245056152
    4. '.' → logprob: -9.753165245056152
    5. ' self' → logprob: -11.753165245056152
    6. '.self' → logprob: -14.003165245056152
    7. '0' → logprob: -14.753165245056152
    8. '(self' → logprob: -14.878165245056152
    9. ' x' → logprob: -15.003165245056152
    10. '   ' → logprob: -15.753165245056152

Token 288: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.011106183752417564
    2. ' /' → logprob: -4.511106014251709
    3. '/n' → logprob: -9.761106491088867
    4. ' norm' → logprob: -14.761106491088867
    5. 'norm' → logprob: -15.386106491088867
    6. '(norm' → logprob: -16.636106491088867
    7. '/
' → logprob: -17.136106491088867
    8. '/usr' → logprob: -17.886106491088867
    9. ' ' → logprob: -18.136106491088867
    10. '       ' → logprob: -18.136106491088867

Token 289: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.006715728435665369
    2. ' norm' → logprob: -5.006715774536133
    3. '(norm' → logprob: -15.131715774536133
    4. 'normal' → logprob: -15.631715774536133
    5. '.norm' → logprob: -18.006715774536133
    6. '_norm' → logprob: -18.506715774536133
    7. 'n' → logprob: -19.506715774536133
    8. '   ' → logprob: -20.381715774536133
    9. 'nor' → logprob: -20.381715774536133
    10. ' ' → logprob: -20.631715774536133

Token 290: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00149462278932333
    2. 'return' → logprob: -6.876494407653809
    3. ' return' → logprob: -7.751494407653809
    4. '
' → logprob: -10.501494407653809
    5. '<|end|>' → logprob: -13.876494407653809
    6. '   ' → logprob: -14.376494407653809
    7. '	return' → logprob: -14.501494407653809
    8. '      ' → logprob: -14.751494407653809
    9. '	' → logprob: -14.751494407653809
    10. ')return' → logprob: -15.001494407653809

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002964746206998825
    2. 'return' → logprob: -6.002964973449707
    3. ' return' → logprob: -7.877964973449707
    4. '   ' → logprob: -9.127964973449707
    5. '	return' → logprob: -14.752964973449707
    6. '      ' → logprob: -14.752964973449707
    7. '     ' → logprob: -16.12796401977539
    8. '	' → logprob: -16.25296401977539
    9. ' ' → logprob: -16.37796401977539
    10. '           ' → logprob: -16.75296401977539

Token 292: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00031735055381432176
    2. '       ' → logprob: -8.750317573547363
    3. ' return' → logprob: -8.750317573547363
    4. '   ' → logprob: -14.625317573547363
    5. '	return' → logprob: -16.875316619873047
    6. '
' → logprob: -18.375316619873047
    7. 'eturn' → logprob: -19.250316619873047
    8. '```' → logprob: -20.125316619873047
    9. ' ' → logprob: -20.750316619873047
    10. ')return' → logprob: -20.875316619873047

Token 293: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.3132619559764862
    2. ' Vector' → logprob: -1.3132619857788086
    3. '	Vector' → logprob: -16.188261032104492
    4. 'self' → logprob: -16.688261032104492
    5. '(Vector' → logprob: -17.688261032104492
    6. '_Vector' → logprob: -17.813261032104492
    7. '   ' → logprob: -18.188261032104492
    8. ' self' → logprob: -18.313261032104492
    9. ' vector' → logprob: -18.563261032104492
    10. ' ' → logprob: -18.938261032104492

Token 294: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.018261035904288292
    2. '(n' → logprob: -4.143260955810547
    3. '(' → logprob: -6.143260955810547
    4. '(norm' → logprob: -10.893260955810547
    5. '(normal' → logprob: -11.018260955810547
    6. '(-' → logprob: -11.268260955810547
    7. '((' → logprob: -11.768260955810547
    8. '(
' → logprob: -11.893260955810547
    9. '(self' → logprob: -12.143260955810547
    10. ' (' → logprob: -12.268260955810547

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2576201558113098
    2. ')' → logprob: -1.507620096206665
    3. ',n' → logprob: -5.507620334625244
    4. '(norm' → logprob: -7.757620334625244
    5. '       ' → logprob: -7.882620334625244
    6. '/n' → logprob: -8.382619857788086
    7. '   ' → logprob: -8.632619857788086
    8. '.norm' → logprob: -9.257619857788086
    9. '<|end|>' → logprob: -9.257619857788086
    10. 'norm' → logprob: -10.257619857788086

Token 296: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.10331720858812332
    2. ' ny' → logprob: -2.3533172607421875
    3. 'norm' → logprob: -6.3533172607421875
    4. 'nx' → logprob: -6.9783172607421875
    5. ' norm' → logprob: -8.478317260742188
    6. ' nx' → logprob: -8.603317260742188
    7. '-n' → logprob: -11.228317260742188
    8. 'n' → logprob: -11.478317260742188
    9. '1' → logprob: -11.853317260742188
    10. 'nyt' → logprob: -13.228317260742188

Token 297: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1994775377388578e-05
    2. '   ' → logprob: -12.125012397766113
    3. ')
' → logprob: -12.250012397766113
    4. '<|end|>' → logprob: -13.750012397766113
    5. ' )' → logprob: -15.500012397766113
    6. ')return' → logprob: -16.125011444091797
    7. '}' → logprob: -16.125011444091797
    8. ')

' → logprob: -16.375011444091797
    9. ')#' → logprob: -17.750011444091797
    10. '       ' → logprob: -17.875011444091797

Token 298: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05609146133065224
    2. '   ' → logprob: -2.931091547012329
    3. ' def' → logprob: -6.93109130859375
    4. '<|end|>' → logprob: -9.68109130859375
    5. '	def' → logprob: -9.80609130859375
    6. '+' → logprob: -10.55609130859375
    7. '#' → logprob: -10.68109130859375
    8. '    
' → logprob: -11.18109130859375
    9. '```' → logprob: -11.30609130859375
    10. ' ' → logprob: -11.68109130859375

Token 299: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003978427965193987
    2. '   ' → logprob: -5.878978252410889
    3. ' def' → logprob: -6.878978252410889
    4. '    
' → logprob: -9.878978729248047
    5. ' ' → logprob: -10.253978729248047
    6. '	def' → logprob: -10.628978729248047
    7. '  ' → logprob: -12.003978729248047
    8. '#' → logprob: -12.378978729248047
    9. '```' → logprob: -12.503978729248047
    10. '  
' → logprob: -12.878978729248047

Token 300: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.38022375106811523
    2. '__' → logprob: -1.2552237510681152
    3. ' __' → logprob: -4.005223751068115
    4. ' add' → logprob: -4.880223751068115
    5. 'dot' → logprob: -5.505223751068115
    6. '_add' → logprob: -8.255224227905273
    7. 'eq' → logprob: -8.380224227905273
    8. 'sub' → logprob: -8.880224227905273
    9. 'plus' → logprob: -9.005224227905273
    10. 'def' → logprob: -9.380224227905273

Token 301: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.975612187583465e-05
    2. '(' → logprob: -10.875029563903809
    3. 'self' → logprob: -12.250029563903809
    4. ' (' → logprob: -13.125029563903809
    5. 's' → logprob: -13.250029563903809
    6. '(s' → logprob: -14.125029563903809
    7. 'def' → logprob: -15.250029563903809
    8. '   ' → logprob: -15.875029563903809
    9. 'vector' → logprob: -16.375030517578125
    10. '_(' → logprob: -16.375030517578125

Token 302: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002238013403257355
    2. 'self' → logprob: -9.000224113464355
    3. ')(' → logprob: -10.500224113464355
    4. ',' → logprob: -10.625224113464355
    5. ')' → logprob: -11.250224113464355
    6. '   ' → logprob: -11.750224113464355
    7. '(' → logprob: -12.250224113464355
    8. '       ' → logprob: -12.375224113464355
    9. ',self' → logprob: -12.375224113464355
    10. 'def' → logprob: -12.625224113464355

Token 303: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.30517813563346863
    2. ' other' → logprob: -2.055178165435791
    3. 'self' → logprob: -2.430178165435791
    4. 'v' → logprob: -3.555178165435791
    5. ' v' → logprob: -4.305178165435791
    6. ' self' → logprob: -5.430178165435791
    7. 'o' → logprob: -8.680177688598633
    8. 'vec' → logprob: -9.180177688598633
    9. 'b' → logprob: -10.055177688598633
    10. ' ' → logprob: -10.680177688598633

Token 304: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16075685620307922
    2. '):
' → logprob: -1.9107568264007568
    3. ',' → logprob: -8.535757064819336
    4. 'self' → logprob: -8.910757064819336
    5. ')' → logprob: -9.410757064819336
    6. '(self' → logprob: -9.785757064819336
    7. '       ' → logprob: -10.660757064819336
    8. '   ' → logprob: -10.660757064819336
    9. '):
' → logprob: -11.285757064819336
    10. '):

' → logprob: -13.160757064819336

Token 305: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20728489756584167
    2. '
' → logprob: -1.832284927368164
    3. ' 
' → logprob: -4.582284927368164
    4. '        
' → logprob: -4.832284927368164
    5. '  
' → logprob: -5.457284927368164
    6. 'return' → logprob: -6.582284927368164
    7. ' return' → logprob: -7.332284927368164
    8. 'self' → logprob: -7.457284927368164
    9. '    
' → logprob: -7.707284927368164
    10. '   ' → logprob: -8.457284927368164

Token 306: 'Vector' (ID: 7580)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6186774373054504
    2. 'return' → logprob: -1.8686773777008057
    3. ' return' → logprob: -1.9936773777008057
    4. 'Vector' → logprob: -2.7436773777008057
    5. '   ' → logprob: -3.1186773777008057
    6. '
' → logprob: -4.118677616119385
    7. '    ' → logprob: -4.243677616119385
    8. ' Vector' → logprob: -4.493677616119385
    9. ' 
' → logprob: -4.993677616119385
    10. '        
' → logprob: -5.118677616119385

Token 307: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4323947429656982
    2. '):
' → logprob: -1.5573947429656982
    3. ')' → logprob: -1.8073947429656982
    4. '       ' → logprob: -1.9323947429656982
    5. '):' → logprob: -2.1823947429656982
    6. '():
' → logprob: -3.4323947429656982
    7. '():' → logprob: -3.4323947429656982
    8. '   ' → logprob: -4.057394981384277
    9. '.' → logprob: -4.307394981384277
    10. ':' → logprob: -4.557394981384277

Token 308: ' Vector' (ID: 8764)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7736852169036865
    2. ' other' → logprob: -1.5236852169036865
    3. 'other' → logprob: -2.7736852169036865
    4. ')' → logprob: -3.2736852169036865
    5. 'return' → logprob: -3.2736852169036865
    6. '):' → logprob: -3.6486852169036865
    7. '):
' → logprob: -3.7736852169036865
    8. '       ' → logprob: -3.8986852169036865
    9. ' ' → logprob: -3.8986852169036865
    10. '   ' → logprob: -4.023685455322266

Token 309: ' ->' (ID: 2747)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1719731092453003
    2. ':' → logprob: -1.4219731092453003
    3. '):' → logprob: -1.4219731092453003
    4. '       ' → logprob: -2.42197322845459
    5. ':
' → logprob: -2.67197322845459
    6. '   ' → logprob: -3.54697322845459
    7. ')' → logprob: -4.67197322845459
    8. '():
' → logprob: -5.67197322845459
    9. ',' → logprob: -6.04697322845459
    10. '<|end|>' → logprob: -6.29697322845459

Token 310: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.018154975026845932
    2. ' Vector' → logprob: -4.018155097961426
    3. '	Vector' → logprob: -13.018155097961426
    4. 'None' → logprob: -13.268155097961426
    5. '_Vector' → logprob: -14.643155097961426
    6. '   ' → logprob: -15.393155097961426
    7. '<Vector' → logprob: -15.768155097961426
    8. ' ' → logprob: -16.39315414428711
    9. ' ' → logprob: -16.51815414428711
    10. '(Vector' → logprob: -17.01815414428711

Token 311: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7976006269454956
    2. ':
' → logprob: -1.2976006269454956
    3. '       ' → logprob: -1.6726006269454956
    4. '
' → logprob: -3.047600746154785
    5. '):
' → logprob: -3.922600746154785
    6. '   ' → logprob: -4.422600746154785
    7. '):' → logprob: -6.297600746154785
    8. ')' → logprob: -6.922600746154785
    9. '  
' → logprob: -6.922600746154785
    10. '():
' → logprob: -7.297600746154785

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05028313398361206
    2. '
' → logprob: -3.050283193588257
    3. 'return' → logprob: -7.300282955169678
    4. ' return' → logprob: -7.800282955169678
    5. '        
' → logprob: -8.300283432006836
    6. '<|end|>' → logprob: -8.800283432006836
    7. '  
' → logprob: -9.800283432006836
    8. '   ' → logprob: -10.550283432006836
    9. ':' → logprob: -10.925283432006836
    10. '    
' → logprob: -11.050283432006836

Token 313: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' (adapté à ' nx') → logprob: -0.16317962110042572
    2. 'return' → logprob: -1.913179636001587
    3. 'Vector' → logprob: -6.413179397583008
    4. ' nx' → logprob: -6.913179397583008
    5. ' return' → logprob: -8.413179397583008
    6. '   ' → logprob: -10.038179397583008
    7. '       ' → logprob: -10.913179397583008
    8. 'x' → logprob: -11.413179397583008
    9. 'new' → logprob: -12.163179397583008
    10. '```' → logprob: -12.663179397583008

Token 314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740773141384125
    2. ' =' → logprob: -0.9740773439407349
    3. ' ' → logprob: -15.599077224731445
    4. '=self' → logprob: -17.224077224731445
    5. ',' → logprob: -17.599077224731445
    6. '=
' → logprob: -17.974077224731445
    7. '   ' → logprob: -18.099077224731445
    8. ' =
' → logprob: -18.224077224731445
    9. '  ' → logprob: -18.599077224731445
    10. '＝' → logprob: -18.724077224731445

Token 315: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008615872822701931
    2. ' self' → logprob: -4.758615970611572
    3. '       ' → logprob: -13.758615493774414
    4. '(self' → logprob: -15.883615493774414
    5. '   ' → logprob: -16.758615493774414
    6. '	self' → logprob: -16.883615493774414
    7. '[self' → logprob: -17.258615493774414
    8. ' ' → logprob: -17.758615493774414
    9. '  ' → logprob: -19.133615493774414
    10. '
' → logprob: -19.258615493774414

Token 316: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.008621666580438614
    2. '.' → logprob: -4.758621692657471
    3. 'x' → logprob: -12.008621215820312
    4. ' .' → logprob: -13.883621215820312
    5. '+.' → logprob: -17.133621215820312
    6. '.
' → logprob: -18.133621215820312
    7. ' +' → logprob: -18.133621215820312
    8. '._' → logprob: -18.258621215820312
    9. '+' → logprob: -18.383621215820312
    10. ' x' → logprob: -18.883621215820312

Token 317: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020699352025986
    2. ' +' → logprob: -2.3502070903778076
    3. 'other' → logprob: -15.725207328796387
    4. '+
' → logprob: -15.850207328796387
    5. '+x' → logprob: -16.60020637512207
    6. '+self' → logprob: -16.97520637512207
    7. '＋' → logprob: -17.22520637512207
    8. '+y' → logprob: -18.60020637512207
    9. ' +
' → logprob: -18.60020637512207
    10. ' other' → logprob: -19.22520637512207

Token 318: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0031777136027812958
    2. ' other' → logprob: -5.753177642822266
    3. '(other' → logprob: -17.253177642822266
    4. 'Other' → logprob: -17.753177642822266
    5. '.other' → logprob: -18.128177642822266
    6. '_other' → logprob: -19.753177642822266
    7. 'othe' → logprob: -21.003177642822266
    8. ' ' → logprob: -21.253177642822266
    9. '   ' → logprob: -21.503177642822266
    10. 'others' → logprob: -21.753177642822266

Token 319: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.005241583567112684
    2. '.' → logprob: -5.255241394042969
    3. ' .' → logprob: -11.880241394042969
    4. 'x' → logprob: -14.755241394042969
    5. '.
' → logprob: -15.505241394042969
    6. '.py' → logprob: -16.88024139404297
    7. ').' → logprob: -17.00524139404297
    8. ' ' → logprob: -17.13024139404297
    9. '.xaml' → logprob: -17.13024139404297
    10. '.gridx' → logprob: -18.13024139404297

Token 320: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47221291065216064
    2. '       ' → logprob: -1.4722129106521606
    3. '<|end|>' → logprob: -1.9722129106521606
    4. '        
' → logprob: -5.222212791442871
    5. '<|end|>' → logprob: -6.972212791442871
    6. '\n' → logprob: -7.972212791442871
    7. '    
' → logprob: -8.222212791442871
    8. '  
' → logprob: -8.847212791442871
    9. ' 
' → logprob: -8.972212791442871
    10. '   ' → logprob: -9.472212791442871

Token 321: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45884448289871216
    2. '       ' → logprob: -1.0838444232940674
    3. '<|end|>' → logprob: -4.3338446617126465
    4. 'ny' → logprob: -4.7088446617126465
    5. '        
' → logprob: -5.7088446617126465
    6. '\n' → logprob: -6.3338446617126465
    7. ' ny' → logprob: -7.7088446617126465
    8. '  
' → logprob: -8.083844184875488
    9. '<|end|>' → logprob: -8.083844184875488
    10. ' 
' → logprob: -8.083844184875488

Token 322: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' (adapté à ' ny') → logprob: -0.01422179862856865
    2. ' ny' → logprob: -4.264221668243408
    3. '       ' → logprob: -9.764222145080566
    4. 'n' → logprob: -14.389222145080566
    5. 'nyt' → logprob: -16.13922119140625
    6. '   ' → logprob: -16.38922119140625
    7. 'nyi' → logprob: -17.51422119140625
    8. 'nx' → logprob: -18.26422119140625
    9. ' nny' → logprob: -19.01422119140625
    10. 'nye' → logprob: -19.13922119140625

Token 323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25549188256263733
    2. '=' → logprob: -1.505491852760315
    3. ' +' → logprob: -5.755491733551025
    4. ' +=' → logprob: -8.505492210388184
    5. '<|end|>' → logprob: -9.380492210388184
    6. '+' → logprob: -9.880492210388184
    7. ' ' → logprob: -10.255492210388184
    8. ')' → logprob: -11.630492210388184
    9. '<|end|>' → logprob: -12.880492210388184
    10. '+=' → logprob: -13.255492210388184

Token 324: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023246875032782555
    2. ' self' → logprob: -3.7732467651367188
    3. '(self' → logprob: -14.773246765136719
    4. '       ' → logprob: -15.148246765136719
    5. '   ' → logprob: -15.398246765136719
    6. '	self' → logprob: -15.648246765136719
    7. 'other' → logprob: -15.648246765136719
    8. ' ' → logprob: -16.14824676513672
    9. '[self' → logprob: -16.89824676513672
    10. ' other' → logprob: -17.14824676513672

Token 325: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.04897599294781685
    2. 'y' → logprob: -3.048975944519043
    3. '.' → logprob: -8.423975944519043
    4. '+' → logprob: -9.048975944519043
    5. '+y' → logprob: -10.548975944519043
    6. ' y' → logprob: -10.923975944519043
    7. ' +' → logprob: -12.423975944519043
    8. '.py' → logprob: -13.548975944519043
    9. '	y' → logprob: -14.798975944519043
    10. ' .' → logprob: -15.423975944519043

Token 326: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022473573684692
    2. '+' → logprob: -1.9102246761322021
    3. ' +
' → logprob: -15.160224914550781
    4. '+
' → logprob: -15.535224914550781
    5. ' ' → logprob: -17.41022491455078
    6. '+y' → logprob: -17.66022491455078
    7. '+self' → logprob: -17.78522491455078
    8. ' ' → logprob: -18.03522491455078
    9. '   ' → logprob: -18.66022491455078
    10. '       ' → logprob: -18.66022491455078

Token 327: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.008626751601696014
    2. ' other' → logprob: -4.758626937866211
    3. 'othe' → logprob: -12.008626937866211
    4. '(other' → logprob: -12.883626937866211
    5. 'self' → logprob: -13.133626937866211
    6. '.other' → logprob: -14.633626937866211
    7. ' ' → logprob: -14.883626937866211
    8. 'oth' → logprob: -15.258626937866211
    9. '   ' → logprob: -16.13362693786621
    10. '
' → logprob: -16.25862693786621

Token 328: '.y' (ID: 4486)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06983716785907745
    2. ' +' → logprob: -2.8198370933532715
    3. '.y' → logprob: -5.1948370933532715
    4. '+y' → logprob: -6.8198370933532715
    5. '<|end|>' → logprob: -7.9448370933532715
    6. ')' → logprob: -8.31983757019043
    7. '.py' → logprob: -8.56983757019043
    8. 'y' → logprob: -8.69483757019043
    9. '.' → logprob: -9.31983757019043
    10. '+
' → logprob: -9.81983757019043

Token 329: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009865405037999153
    2. '
' → logprob: -4.7598652839660645
    3. 'return' → logprob: -7.7598652839660645
    4. '<|end|>' → logprob: -7.7598652839660645
    5. ' return' → logprob: -8.634865760803223
    6. '   ' → logprob: -9.009865760803223
    7. '	' → logprob: -10.134865760803223
    8. '        
' → logprob: -10.634865760803223
    9. '	return' → logprob: -12.134865760803223
    10. '
' → logprob: -12.384865760803223

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010648438474163413
    2. 'return' → logprob: -7.501064777374268
    3. ' return' → logprob: -7.626064777374268
    4. '
' → logprob: -11.001065254211426
    5. '   ' → logprob: -12.876065254211426
    6. '	return' → logprob: -13.001065254211426
    7. '	' → logprob: -13.501065254211426
    8. '<|end|>' → logprob: -14.626065254211426
    9. '        
' → logprob: -15.501065254211426
    10. '
' → logprob: -16.25106430053711

Token 331: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00524454889819026
    2. '       ' → logprob: -5.505244731903076
    3. ' return' → logprob: -6.755244731903076
    4. '   ' → logprob: -14.880244255065918
    5. '	return' → logprob: -15.755244255065918
    6. '
' → logprob: -16.505245208740234
    7. '{return' → logprob: -19.005245208740234
    8. '```' → logprob: -19.505245208740234
    9. 'eturn' → logprob: -19.755245208740234
    10. ' ' → logprob: -19.880245208740234

Token 332: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.6931471824645996
    2. ' Vector' → logprob: -0.6931471824645996
    3. '	Vector' → logprob: -16.818147659301758
    4. '_Vector' → logprob: -17.818147659301758
    5. '(Vector' → logprob: -18.443147659301758
    6. ' vector' → logprob: -18.818147659301758
    7. '<Vector' → logprob: -19.443147659301758
    8. ' ' → logprob: -19.568147659301758
    9. '.Vector' → logprob: -19.568147659301758
    10. ' ' → logprob: -20.068147659301758

Token 333: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -2.8444881536415778e-05
    2. '(' → logprob: -10.500028610229492
    3. '(
' → logprob: -14.375028610229492
    4. '(self' → logprob: -15.375028610229492
    5. 'nx' → logprob: -17.250028610229492
    6. '(n' → logprob: -17.375028610229492
    7. ' (' → logprob: -17.750028610229492
    8. '(nn' → logprob: -18.875028610229492
    9. '(x' → logprob: -19.375028610229492
    10. '((' → logprob: -19.375028610229492

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.629921436891891e-05
    2. ' ,' → logprob: -10.62502670288086
    3. ',n' → logprob: -14.00002670288086
    4. ',
' → logprob: -14.25002670288086
    5. ')' → logprob: -15.75002670288086
    6. ',y' → logprob: -15.87502670288086
    7. '‌,' → logprob: -16.12502670288086
    8. ',

' → logprob: -16.37502670288086
    9. '),' → logprob: -18.62502670288086
    10. '   ' → logprob: -18.62502670288086

Token 335: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.1002129316329956
    2. ' ny' → logprob: -2.350213050842285
    3. 'n' → logprob: -13.100213050842285
    4. 'nyi' → logprob: -13.475213050842285
    5. 'nyt' → logprob: -14.475213050842285
    6. ' ' → logprob: -14.475213050842285
    7. '
' → logprob: -14.850213050842285
    8. 'nye' → logprob: -15.100213050842285
    9. ' ' → logprob: -15.600213050842285
    10. ' nny' → logprob: -15.600213050842285

Token 336: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.125003814697266
    4. ' )' → logprob: -17.875003814697266
    5. ')

' → logprob: -17.875003814697266
    6. '<|end|>' → logprob: -17.875003814697266
    7. ')return' → logprob: -19.250003814697266
    8. '}' → logprob: -20.125003814697266
    9. '),' → logprob: -20.750003814697266
    10. ')}' → logprob: -21.125003814697266

Token 337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20478059351444244
    2. 'def' → logprob: -1.7047805786132812
    3. ' def' → logprob: -6.079780578613281
    4. '<|end|>' → logprob: -8.204780578613281
    5. '    
' → logprob: -8.329780578613281
    6. ' ' → logprob: -8.704780578613281
    7. '  ' → logprob: -8.829780578613281
    8. '	def' → logprob: -9.204780578613281
    9. '```' → logprob: -9.454780578613281
    10. '
' → logprob: -10.454780578613281

Token 338: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.012545442208647728
    2. '   ' → logprob: -4.512545585632324
    3. ' def' → logprob: -6.512545585632324
    4. '	def' → logprob: -11.512545585632324
    5. ' ' → logprob: -13.637545585632324
    6. '```' → logprob: -15.137545585632324
    7. '    
' → logprob: -16.137544631958008
    8. '
' → logprob: -16.512544631958008
    9. '  ' → logprob: -17.137544631958008
    10. '#' → logprob: -17.887544631958008

Token 339: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.11023696511983871
    2. ' sub' → logprob: -2.360236883163452
    3. 'subtract' → logprob: -4.860237121582031
    4. ' subtract' → logprob: -6.235237121582031
    5. 'dot' → logprob: -9.860237121582031
    6. '__' → logprob: -9.860237121582031
    7. 'minus' → logprob: -9.985237121582031
    8. 'def' → logprob: -10.735237121582031
    9. '	sub' → logprob: -11.235237121582031
    10. ' ' → logprob: -11.360237121582031

Token 340: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04315173625946045
    2. '(' → logprob: -3.41815185546875
    3. 'stract' → logprob: -4.66815185546875
    4. 'tract' → logprob: -10.04315185546875
    5. '(other' → logprob: -11.54315185546875
    6. 'self' → logprob: -12.29315185546875
    7. ' (' → logprob: -12.66815185546875
    8. '(s' → logprob: -12.79315185546875
    9. 'straction' → logprob: -13.54315185546875
    10. 'traction' → logprob: -13.79315185546875

Token 341: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.013114816509187222
    2. ',' → logprob: -4.388114929199219
    3. 'self' → logprob: -8.513114929199219
    4. '(' → logprob: -8.763114929199219
    5. ')(' → logprob: -9.263114929199219
    6. ')' → logprob: -9.763114929199219
    7. ',self' → logprob: -9.888114929199219
    8. '   ' → logprob: -10.888114929199219
    9. ' (' → logprob: -11.888114929199219
    10. '       ' → logprob: -12.388114929199219

Token 342: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.06197217106819153
    2. 'other' → logprob: -2.811972141265869
    3. '(other' → logprob: -12.561972618103027
    4. 'self' → logprob: -14.436972618103027
    5. ' self' → logprob: -15.936972618103027
    6. 'Other' → logprob: -16.18697166442871
    7. '_other' → logprob: -16.31197166442871
    8. '.other' → logprob: -16.68697166442871
    9. ' oth' → logprob: -17.93697166442871
    10. ' andere' → logprob: -20.06197166442871

Token 343: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2832406163215637
    2. '):' → logprob: -1.408240556716919
    3. '   ' → logprob: -7.283240795135498
    4. '):
' → logprob: -8.15824031829834
    5. '       ' → logprob: -8.28324031829834
    6. '(other' → logprob: -8.40824031829834
    7. '(' → logprob: -8.53324031829834
    8. 'self' → logprob: -8.78324031829834
    9. ' ,' → logprob: -9.28324031829834
    10. '(self' → logprob: -9.65824031829834

Token 344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3601352274417877
    2. ' nx' → logprob: -1.2351351976394653
    3. ' other' → logprob: -5.485135078430176
    4. '   ' → logprob: -5.610135078430176
    5. '(nx' → logprob: -6.110135078430176
    6. ' ' → logprob: -7.485135078430176
    7. 'nx' → logprob: -7.985135078430176
    8. ' #' → logprob: -9.235135078430176
    9. '      ' → logprob: -9.485135078430176
    10. ' self' → logprob: -9.485135078430176

Token 345: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.4741034209728241
    2. 'nx' (adapté à ' nx') → logprob: -0.9741034507751465
    3. '   ' → logprob: -11.349102973937988
    4. '       ' → logprob: -11.474102973937988
    5. 'self' → logprob: -13.224102973937988
    6. '(nx' → logprob: -13.724102973937988
    7. 'n' → logprob: -13.724102973937988
    8. 'x' → logprob: -16.849103927612305
    9. '    ' → logprob: -17.349103927612305
    10. 'return' → logprob: -17.974103927612305

Token 346: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.078889846801758
    4. '=}' → logprob: -17.453889846801758
    5. '=
' → logprob: -18.078889846801758
    6. ')' → logprob: -18.078889846801758
    7. '<|end|>' → logprob: -18.078889846801758
    8. '=self' → logprob: -18.203889846801758
    9. ' =
' → logprob: -18.328889846801758
    10. ',' → logprob: -18.453889846801758

Token 347: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006746869999915361
    2. ' self' → logprob: -5.006746768951416
    3. '       ' → logprob: -10.381747245788574
    4. '	self' → logprob: -15.631747245788574
    5. '   ' → logprob: -16.006746292114258
    6. '(self' → logprob: -16.631746292114258
    7. ' ' → logprob: -16.631746292114258
    8. '[self' → logprob: -17.006746292114258
    9. 'Self' → logprob: -18.256746292114258
    10. '        ' → logprob: -18.756746292114258

Token 348: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0013158319052308798
    2. 'x' → logprob: -6.751315593719482
    3. 'self' → logprob: -8.87631607055664
    4. '.' → logprob: -12.37631607055664
    5. ' self' → logprob: -14.25131607055664
    6. ' .' → logprob: -15.50131607055664
    7. '-self' → logprob: -15.50131607055664
    8. ' -' → logprob: -15.62631607055664
    9. ' x' → logprob: -16.25131607055664
    10. '-' → logprob: -16.37631607055664

Token 349: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012511883862316608
    2. '-' → logprob: -4.387511730194092
    3. ' ' → logprob: -13.38751220703125
    4. ' ' → logprob: -14.63751220703125
    5. '<|end|>' → logprob: -15.63751220703125
    6. ' −' → logprob: -16.76251220703125
    7. '-other' → logprob: -17.38751220703125
    8. ' -
' → logprob: -17.51251220703125
    9. '−' → logprob: -17.76251220703125
    10. ' –' → logprob: -18.13751220703125

Token 350: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3868720829486847
    2. ' other' → logprob: -1.1368720531463623
    3. '(other' → logprob: -14.511872291564941
    4. '.other' → logprob: -15.511872291564941
    5. '_other' → logprob: -15.886872291564941
    6. 'Other' → logprob: -16.011871337890625
    7. ' oth' → logprob: -16.886871337890625
    8. '<|end|>' → logprob: -16.886871337890625
    9. 'o' → logprob: -18.011871337890625
    10. 'othe' → logprob: -18.011871337890625

Token 351: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.033714283257722855
    2. '.' → logprob: -3.4087142944335938
    3. 'x' → logprob: -9.658714294433594
    4. ' .' → logprob: -12.658714294433594
    5. '.
' → logprob: -14.908714294433594
    6. '.py' → logprob: -15.658714294433594
    7. '[' → logprob: -15.658714294433594
    8. '```' → logprob: -15.908714294433594
    9. ' x' → logprob: -16.158714294433594
    10. '`.' → logprob: -16.658714294433594

Token 352: '
' (ID: 198)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.02224809303879738
    2. '.' → logprob: -3.8972480297088623
    3. 'x' → logprob: -6.772248268127441
    4. '.y' → logprob: -8.272248268127441
    5. ' .' → logprob: -9.022248268127441
    6. '.other' → logprob: -9.022248268127441
    7. ',' → logprob: -10.397248268127441
    8. '.n' → logprob: -11.522248268127441
    9. ' ' → logprob: -12.147248268127441
    10. '.py' → logprob: -12.272248268127441

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05240488424897194
    2. ' other' → logprob: -3.1774048805236816
    3. ' ny' → logprob: -5.677404880523682
    4. 'ny' → logprob: -5.802404880523682
    5. 'other' → logprob: -6.302404880523682
    6. '   ' → logprob: -7.677404880523682
    7. '      ' → logprob: -8.92740535736084
    8. ',' → logprob: -9.05240535736084
    9. ' ' → logprob: -9.55240535736084
    10. '        ' → logprob: -9.80240535736084

Token 354: ' ny' (ID: 4423)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.25192946195602417
    2. ' other' → logprob: -1.501929521560669
    3. '(other' → logprob: -15.87692928314209
    4. '.other' → logprob: -15.87692928314209
    5. 'Other' → logprob: -16.751930236816406
    6. ' ' → logprob: -17.876930236816406
    7. '       ' → logprob: -17.876930236816406
    8. '   ' → logprob: -18.001930236816406
    9. 'othe' → logprob: -18.251930236816406
    10. 'y' → logprob: -18.501930236816406

Token 355: ' =' (ID: 314)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.007487480994313955
    2. ' =' → logprob: -5.2574872970581055
    3. '-' → logprob: -6.5074872970581055
    4. '=' → logprob: -7.2574872970581055
    5. ' ' → logprob: -10.882487297058105
    6. '   ' → logprob: -11.757487297058105
    7. ' -=' → logprob: -11.882487297058105
    8. 'other' → logprob: -12.382487297058105
    9. '       ' → logprob: -12.382487297058105
    10. ' other' → logprob: -12.757487297058105

Token 356: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011327913030982018
    2. ' self' → logprob: -4.511327743530273
    3. 'other' → logprob: -8.261327743530273
    4. ' other' → logprob: -10.761327743530273
    5. '(self' → logprob: -15.636327743530273
    6. '       ' → logprob: -15.886327743530273
    7. '	self' → logprob: -16.136327743530273
    8. '[self' → logprob: -16.636327743530273
    9. 'Other' → logprob: -17.761327743530273
    10. ' ' → logprob: -18.011327743530273

Token 357: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00017874970217235386
    2. 'y' → logprob: -8.750178337097168
    3. 'other' → logprob: -11.000178337097168
    4. '.other' → logprob: -13.250178337097168
    5. ' y' → logprob: -14.375178337097168
    6. '.' → logprob: -14.625178337097168
    7. '.x' → logprob: -14.875178337097168
    8. '	y' → logprob: -16.375179290771484
    9. ' .' → logprob: -16.875179290771484
    10. '-' → logprob: -17.000179290771484

Token 358: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.061968132853507996
    2. '-' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.186967849731445
    4. ' ' → logprob: -15.811967849731445
    5. '−' → logprob: -17.561967849731445
    6. '   ' → logprob: -18.436967849731445
    7. ' -
' → logprob: -18.936967849731445
    8. '—' → logprob: -19.061967849731445
    9. '[' → logprob: -19.311967849731445
    10. '  ' → logprob: -19.436967849731445

Token 359: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0008056987426243722
    2. ' other' → logprob: -7.125805854797363
    3. '.other' → logprob: -14.625805854797363
    4. '(other' → logprob: -14.750805854797363
    5. 'othe' → logprob: -15.125805854797363
    6. 'y' → logprob: -17.250804901123047
    7. 'self' → logprob: -17.250804901123047
    8. ' ' → logprob: -17.875804901123047
    9. 'Other' → logprob: -17.875804901123047
    10. ' y' → logprob: -18.000804901123047

Token 360: '.y' (ID: 4486)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7514939308166504
    2. ' -' → logprob: -0.8764939308166504
    3. '.y' → logprob: -2.2514939308166504
    4. '.' → logprob: -5.12649393081665
    5. '.x' → logprob: -7.37649393081665
    6. '-y' → logprob: -9.876493453979492
    7. 'y' → logprob: -10.126493453979492
    8. ' .' → logprob: -10.251493453979492
    9. ' ' → logprob: -10.376493453979492
    10. ' y' → logprob: -10.501493453979492

Token 361: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041168857365846634
    2. 'return' → logprob: -3.2911689281463623
    3. ' return' → logprob: -5.791168689727783
    4. '
' → logprob: -9.916169166564941
    5. '	return' → logprob: -11.666169166564941
    6. '   ' → logprob: -12.166169166564941
    7. ')return' → logprob: -13.916169166564941
    8. ':return' → logprob: -14.416169166564941
    9. '<|end|>' → logprob: -14.541169166564941
    10. '
' → logprob: -14.666169166564941

Token 362: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14427870512008667
    2. '       ' → logprob: -2.3942787647247314
    3. 'return' → logprob: -3.1442787647247314
    4. '   ' → logprob: -11.394278526306152
    5. '	return' → logprob: -12.269278526306152
    6. 'Return' → logprob: -15.019278526306152
    7. '      ' → logprob: -15.394278526306152
    8. '.return' → logprob: -15.644278526306152
    9. ':return' → logprob: -16.14427947998047
    10. ' ' → logprob: -16.14427947998047

Token 363: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6931473612785339
    2. 'return' (adapté à ' return') → logprob: -0.6931473612785339
    3. '       ' → logprob: -15.943147659301758
    4. 'eturn' → logprob: -18.068147659301758
    5. 'Return' → logprob: -18.193147659301758
    6. '   ' → logprob: -18.318147659301758
    7. '	return' → logprob: -18.818147659301758
    8. ' ' → logprob: -19.568147659301758
    9. ' retur' → logprob: -19.818147659301758
    10. ':return' → logprob: -19.818147659301758

Token 364: ' Vector' (ID: 8764)
  Prédit: ' Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.00861456897109747
    2. 'Vector' → logprob: -4.758614540100098
    3. '	Vector' → logprob: -17.258615493774414
    4. '_Vector' → logprob: -17.883615493774414
    5. ' vector' → logprob: -18.008615493774414
    6. '<Vector' → logprob: -18.883615493774414
    7. ' ' → logprob: -18.883615493774414
    8. '.Vector' → logprob: -19.383615493774414
    9. ' Vec' → logprob: -19.883615493774414
    10. '(Vector' → logprob: -19.883615493774414

Token 365: '(nx' (ID: 189861)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.050182122737169266
    2. '(nx' → logprob: -3.0501821041107178
    3. '(n' → logprob: -6.925182342529297
    4. '(' → logprob: -7.425182342529297
    5. '(next' → logprob: -12.675182342529297
    6. '(nd' → logprob: -13.050182342529297
    7. '(
' → logprob: -13.550182342529297
    8. ' (' → logprob: -13.675182342529297
    9. '(self' → logprob: -13.675182342529297
    10. 'other' → logprob: -13.925182342529297

Token 366: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0624222606420517
    2. '-' → logprob: -2.812422275543213
    3. ' ' → logprob: -8.687421798706055
    4. ',' → logprob: -9.437421798706055
    5. ' +' → logprob: -9.437421798706055
    6. '+' → logprob: -9.812421798706055
    7. '   ' → logprob: -10.437421798706055
    8. ')' → logprob: -10.937421798706055
    9. '  ' → logprob: -12.062421798706055
    10. '       ' → logprob: -12.312421798706055

Token 367: ' ny' (ID: 4423)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.16395488381385803
    2. ' other' → logprob: -1.9139548540115356
    3. ' ny' → logprob: -6.288954734802246
    4. 'ny' → logprob: -6.288954734802246
    5. '(other' → logprob: -12.163954734802246
    6. 'Other' → logprob: -13.913954734802246
    7. '_other' → logprob: -14.163954734802246
    8. ' oth' → logprob: -14.288954734802246
    9. '.other' → logprob: -14.538954734802246
    10. ' oy' → logprob: -14.663954734802246

Token 368: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. ')
' → logprob: -12.750006675720215
    3. '<|end|>' → logprob: -13.000006675720215
    4. '   ' → logprob: -14.250006675720215
    5. ')return' → logprob: -15.625006675720215
    6. '       ' → logprob: -16.5000057220459
    7. ' )' → logprob: -16.6250057220459
    8. '}' → logprob: -17.2500057220459
    9. ')

' → logprob: -17.7500057220459
    10. ')n' → logprob: -18.3750057220459

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03855983540415764
    2. 'def' → logprob: -3.288559913635254
    3. ' def' → logprob: -7.788559913635254
    4. '    
' → logprob: -10.288559913635254
    5. '<|end|>' → logprob: -10.538559913635254
    6. '  ' → logprob: -11.038559913635254
    7. '```' → logprob: -11.413559913635254
    8. ' ' → logprob: -11.913559913635254
    9. '	def' → logprob: -12.663559913635254
    10. '
' → logprob: -13.038559913635254

Token 370: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03720832243561745
    2. '   ' → logprob: -3.537208318710327
    3. ' def' → logprob: -4.912208557128906
    4. '	def' → logprob: -10.037208557128906
    5. ' ' → logprob: -10.787208557128906
    6. '    
' → logprob: -12.537208557128906
    7. '
' → logprob: -12.912208557128906
    8. '  ' → logprob: -13.412208557128906
    9. '```' → logprob: -14.537208557128906
    10. ')' → logprob: -15.287208557128906

Token 371: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.09127241373062134
    2. 'mul' → logprob: -3.0912723541259766
    3. ' dot' → logprob: -3.7162723541259766
    4. 'cross' → logprob: -4.966272354125977
    5. 'eq' → logprob: -5.216272354125977
    6. '__' → logprob: -6.966272354125977
    7. ' mul' → logprob: -7.341272354125977
    8. 'dist' → logprob: -7.716272354125977
    9. 'equals' → logprob: -8.091272354125977
    10. ' cross' → logprob: -8.091272354125977

Token 372: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00033879990223795176
    2. '(' → logprob: -8.000338554382324
    3. ' (' → logprob: -13.625338554382324
    4. '<|end|>' → logprob: -14.000338554382324
    5. '(s' → logprob: -14.250338554382324
    6. '(other' → logprob: -15.375338554382324
    7. '(this' → logprob: -15.500338554382324
    8. 'self' → logprob: -16.25033950805664
    9. '(
' → logprob: -16.25033950805664
    10. '<|end|>' → logprob: -17.50033950805664

Token 373: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.1012350469827652
    2. '(self' → logprob: -2.9762351512908936
    3. '(' → logprob: -3.1012351512908936
    4. ')' → logprob: -8.726235389709473
    5. ' (' → logprob: -9.601235389709473
    6. '(
' → logprob: -11.476235389709473
    7. ')(' → logprob: -11.726235389709473
    8. ',' → logprob: -11.851235389709473
    9. 'self' → logprob: -12.101235389709473
    10. 'other' → logprob: -12.101235389709473

Token 374: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.47407814860343933
    2. ' other' → logprob: -0.9740781784057617
    3. 'self' → logprob: -14.224078178405762
    4. '(other' → logprob: -14.974078178405762
    5. ' self' → logprob: -17.224077224731445
    6. 'Other' → logprob: -17.349077224731445
    7. '.other' → logprob: -17.599077224731445
    8. '_other' → logprob: -18.099077224731445
    9. ' ' → logprob: -19.349077224731445
    10. ' oth' → logprob: -20.974077224731445

Token 375: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.034595951437950134
    2. '):
' → logprob: -3.6595959663391113
    3. ',' → logprob: -5.034595966339111
    4. '(self' → logprob: -7.284595966339111
    5. 'self' → logprob: -8.034595489501953
    6. ' ):' → logprob: -8.284595489501953
    7. ')' → logprob: -8.409595489501953
    8. '       ' → logprob: -9.284595489501953
    9. '   ' → logprob: -9.784595489501953
    10. '(other' → logprob: -9.909595489501953

Token 376: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47523462772369385
    2. ' return' → logprob: -0.9752346277236938
    3. 'self' → logprob: -7.350234508514404
    4. ' self' → logprob: -8.225234985351562
    5. '       ' → logprob: -8.725234985351562
    6. '   ' → logprob: -9.725234985351562
    7. '
' → logprob: -10.725234985351562
    8. '	return' → logprob: -13.725234985351562
    9. '        
' → logprob: -14.350234985351562
    10. '```' → logprob: -15.475234985351562

Token 377: 'Vector' (ID: 7580)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1939833164215088
    2. ' return' → logprob: -2.443983316421509
    3. 'self' → logprob: -2.443983316421509
    4. ' self' → logprob: -5.94398307800293
    5. '   ' → logprob: -9.69398307800293
    6. '       ' → logprob: -11.69398307800293
    7. '
' → logprob: -12.19398307800293
    8. 'float' → logprob: -13.81898307800293
    9. ' ' → logprob: -14.69398307800293
    10. '    ' → logprob: -14.81898307800293

Token 378: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47689881920814514
    2. '(' → logprob: -2.3518989086151123
    3. ' return' → logprob: -2.3518989086151123
    4. '       ' → logprob: -2.6018989086151123
    5. '   ' → logprob: -3.1018989086151123
    6. ')' → logprob: -3.9768989086151123
    7. '()' → logprob: -4.476898670196533
    8. '<|end|>' → logprob: -4.476898670196533
    9. '(
' → logprob: -4.976898670196533
    10. 'def' → logprob: -5.601898670196533

Token 379: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.25204166769981384
    2. ' Vector' → logprob: -1.5020416975021362
    3. ' vector' → logprob: -10.127041816711426
    4. ' other' → logprob: -10.377041816711426
    5. '<Vector' → logprob: -11.877041816711426
    6. '_Vector' → logprob: -11.877041816711426
    7. '(Vector' → logprob: -12.002041816711426
    8. '	Vector' → logprob: -12.127041816711426
    9. 'self' → logprob: -12.502041816711426
    10. '.Vector' → logprob: -13.002041816711426

Token 380: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17489759624004364
    2. '   ' → logprob: -2.4248976707458496
    3. ' return' → logprob: -3.6748976707458496
    4. 'return' → logprob: -4.29989767074585
    5. '):
' → logprob: -4.67489767074585
    6. '():
' → logprob: -5.17489767074585
    7. ':return' → logprob: -5.54989767074585
    8. ':
' → logprob: -6.04989767074585
    9. ')' → logprob: -6.17489767074585
    10. ':' → logprob: -6.17489767074585

Token 381: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00762189133092761
    2. ' float' → logprob: -4.882621765136719
    3. '(float' → logprob: -11.507621765136719
    4. 'return' → logprob: -13.132621765136719
    5. 'flo' → logprob: -13.632621765136719
    6. 'Float' → logprob: -14.257621765136719
    7. 'int' → logprob: -14.632621765136719
    8. '<float' → logprob: -14.757621765136719
    9. '	float' → logprob: -15.007621765136719
    10. '=float' → logprob: -15.507621765136719

Token 382: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7969002723693848
    2. '       ' → logprob: -0.7969002723693848
    3. 'return' → logprob: -3.4219002723693848
    4. ' return' → logprob: -3.6719002723693848
    5. '<|end|>' → logprob: -4.421900272369385
    6. '()' → logprob: -4.796900272369385
    7. ':' → logprob: -5.421900272369385
    8. '(' → logprob: -5.421900272369385
    9. '
' → logprob: -6.296900272369385
    10. '()
' → logprob: -6.546900272369385

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03208577632904053
    2. 'return' → logprob: -3.78208589553833
    3. ' return' → logprob: -4.78208589553833
    4. '   ' → logprob: -7.78208589553833
    5. '	return' → logprob: -12.657085418701172
    6. '
' → logprob: -13.157085418701172
    7. ':return' → logprob: -15.782085418701172
    8. '      ' → logprob: -16.032085418701172
    9. '```' → logprob: -16.407085418701172
    10. '{return' → logprob: -16.532085418701172

Token 384: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02995331399142742
    2. 'self' → logprob: -3.5299532413482666
    3. ' return' → logprob: -8.529953002929688
    4. ' self' → logprob: -12.279953002929688
    5. '   ' → logprob: -15.154953002929688
    6. '
' → logprob: -15.529953002929688
    7. '(self' → logprob: -15.904953002929688
    8. '       ' → logprob: -16.654953002929688
    9. '	return' → logprob: -18.779953002929688
    10. '        
' → logprob: -19.404953002929688

Token 385: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975292131304741
    2. ' self' → logprob: -3.5297529697418213
    3. '(self' → logprob: -13.654752731323242
    4. 'int' → logprob: -14.029752731323242
    5. '   ' → logprob: -15.154752731323242
    6. ' int' → logprob: -16.404752731323242
    7. ' ' → logprob: -17.029752731323242
    8. '	self' → logprob: -17.279752731323242
    9. '
' → logprob: -18.279752731323242
    10. '       ' → logprob: -19.154752731323242

Token 386: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0025037210434675217
    2. '.' → logprob: -6.002503871917725
    3. ' .' → logprob: -10.502503395080566
    4. ' ' → logprob: -15.627503395080566
    5. '.s' → logprob: -15.752503395080566
    6. 'x' → logprob: -16.377504348754883
    7. '.y' → logprob: -16.502504348754883
    8. '.user' → logprob: -17.502504348754883
    9. ').' → logprob: -18.252504348754883
    10. '..' → logprob: -18.377504348754883

Token 387: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014164566993713379
    2. '*' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.139164924621582
    4. '*object' → logprob: -15.389164924621582
    5. ' ' → logprob: -16.889163970947266
    6. '**' → logprob: -18.139163970947266
    7. ' **' → logprob: -18.889163970947266
    8. '*out' → logprob: -19.514163970947266
    9. '.' → logprob: -20.264163970947266
    10. '   ' → logprob: -20.264163970947266

Token 388: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.001170225441455841
    2. ' other' → logprob: -6.7511701583862305
    3. '(other' → logprob: -17.876171112060547
    4. 'Other' → logprob: -19.501171112060547
    5. '.other' → logprob: -19.501171112060547
    6. '_other' → logprob: -20.376171112060547
    7. ' ' → logprob: -21.001171112060547
    8. 'othe' → logprob: -21.751171112060547
    9. 'others' → logprob: -21.876171112060547
    10. 'oth' → logprob: -22.626171112060547

Token 389: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00862320140004158
    2. '.' → logprob: -4.758623123168945
    3. ' .' → logprob: -12.258623123168945
    4. 'x' → logprob: -12.508623123168945
    5. '.
' → logprob: -16.758623123168945
    6. '.y' → logprob: -17.258623123168945
    7. ' ' → logprob: -17.383623123168945
    8. ').' → logprob: -17.883623123168945
    9. '<|end|>' → logprob: -17.883623123168945
    10. '‌.' → logprob: -18.383623123168945

Token 390: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018150994554162025
    2. '+' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.01815128326416
    4. ' ' → logprob: -15.51815128326416
    5. ' +
' → logprob: -16.643150329589844
    6. '    ' → logprob: -17.393150329589844
    7. '        ' → logprob: -17.893150329589844
    8. '+self' → logprob: -17.893150329589844
    9. ' plus' → logprob: -19.018150329589844
    10. '*' → logprob: -19.143150329589844

Token 391: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3133920729160309
    2. 'self' → logprob: -1.3133920431137085
    3. ' other' → logprob: -9.18839168548584
    4. 'other' → logprob: -10.56339168548584
    5. '	self' → logprob: -13.81339168548584
    6. ' ' → logprob: -13.93839168548584
    7. '       ' → logprob: -16.688392639160156
    8. '(self' → logprob: -16.688392639160156
    9. ' ' → logprob: -16.813392639160156
    10. '   ' → logprob: -17.563392639160156

Token 392: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.20150309801101685
    2. 'y' → logprob: -1.701503038406372
    3. '.' → logprob: -9.326502799987793
    4. ' y' → logprob: -14.951502799987793
    5. '.x' → logprob: -15.701502799987793
    6. 'user' → logprob: -15.826502799987793
    7. 'Y' → logprob: -17.07650375366211
    8. 'x' → logprob: -17.57650375366211
    9. ' .' → logprob: -17.57650375366211
    10. ' ' → logprob: -17.70150375366211

Token 393: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.000805341056548059
    2. '*' → logprob: -7.125805377960205
    3. ' ' → logprob: -14.625804901123047
    4. ' ' → logprob: -15.375804901123047
    5. '<|end|>' → logprob: -16.125804901123047
    6. '.' → logprob: -17.500804901123047
    7. '*object' → logprob: -17.750804901123047
    8. '   ' → logprob: -18.875804901123047
    9. ' *
' → logprob: -18.875804901123047
    10. ' **' → logprob: -19.000804901123047

Token 394: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0067161982879042625
    2. ' other' → logprob: -5.006716251373291
    3. ' ' → logprob: -15.381715774536133
    4. '(other' → logprob: -15.881715774536133
    5. '.other' → logprob: -16.006715774536133
    6. 'self' → logprob: -16.381715774536133
    7. '   ' → logprob: -17.131715774536133
    8. 'othe' → logprob: -17.631715774536133
    9. 'oth' → logprob: -17.631715774536133
    10. 'others' → logprob: -17.756715774536133

Token 395: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.10050857067108154
    2. 'y' → logprob: -2.350508689880371
    3. '.' → logprob: -8.225508689880371
    4. ' y' → logprob: -10.725508689880371
    5. '*y' → logprob: -12.100508689880371
    6. '	y' → logprob: -12.600508689880371
    7. '_y' → logprob: -14.225508689880371
    8. '*' → logprob: -14.600508689880371
    9. 's' → logprob: -14.850508689880371
    10. 'Y' → logprob: -14.850508689880371

Token 396: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10108011960983276
    2. '   ' → logprob: -2.3510801792144775
    3. ' def' → logprob: -7.101079940795898
    4. '	def' → logprob: -10.476079940795898
    5. ' ' → logprob: -11.476079940795898
    6. '  ' → logprob: -12.351079940795898
    7. '    
' → logprob: -12.476079940795898
    8. '<|end|>' → logprob: -14.351079940795898
    9. '
' → logprob: -14.476079940795898
    10. '```' → logprob: -15.351079940795898

Token 398: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005309181287884712
    2. '   ' → logprob: -5.630309104919434
    3. ' def' → logprob: -6.380309104919434
    4. '	def' → logprob: -12.005309104919434
    5. ' ' → logprob: -12.755309104919434
    6. '    
' → logprob: -13.255309104919434
    7. '
' → logprob: -13.630309104919434
    8. '  ' → logprob: -14.255309104919434
    9. '```' → logprob: -16.88031005859375
    10. '        
' → logprob: -17.25531005859375

Token 399: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.00633957190439105
    2. ' cross' → logprob: -5.3813395500183105
    3. 'det' → logprob: -7.0063395500183105
    4. 'angle' → logprob: -7.7563395500183105
    5. 'cc' → logprob: -9.506340026855469
    6. 'cr' → logprob: -9.756340026855469
    7. 'len' → logprob: -10.131340026855469
    8. 'abs' → logprob: -10.381340026855469
    9. '__' → logprob: -10.631340026855469
    10. 'mul' → logprob: -11.006340026855469

Token 400: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012430864153429866
    2. '(' → logprob: -6.7512431144714355
    3. ' (' → logprob: -9.626242637634277
    4. 'self' → logprob: -13.126242637634277
    5. '(s' → logprob: -13.376242637634277
    6. '<|end|>' → logprob: -13.751242637634277
    7. '(other' → logprob: -14.251242637634277
    8. ' self' → logprob: -14.751242637634277
    9. '(
' → logprob: -15.126242637634277
    10. 'def' → logprob: -15.376242637634277

Token 401: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017477693036198616
    2. '(' → logprob: -6.3767476081848145
    3. '(other' → logprob: -10.376748085021973
    4. ' (' → logprob: -11.376748085021973
    5. '(s' → logprob: -13.501748085021973
    6. 'self' → logprob: -15.001748085021973
    7. ',' → logprob: -15.251748085021973
    8. ')' → logprob: -15.251748085021973
    9. '(
' → logprob: -15.626748085021973
    10. ')(' → logprob: -15.751748085021973

Token 402: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.47409793734550476
    2. 'other' → logprob: -0.9740979671478271
    3. 'self' → logprob: -10.974098205566406
    4. ' self' → logprob: -12.974098205566406
    5. 'Other' → logprob: -14.349098205566406
    6. '(other' → logprob: -14.474098205566406
    7. '.other' → logprob: -15.474098205566406
    8. '_other' → logprob: -15.724098205566406
    9. ' ' → logprob: -18.849098205566406
    10. 'OTHER' → logprob: -19.974098205566406

Token 403: '):' (ID: 3127)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06345409154891968
    2. '):' → logprob: -2.9384541511535645
    3. ',' → logprob: -5.3134541511535645
    4. '(' → logprob: -6.6884541511535645
    5. '):
' → logprob: -6.9384541511535645
    6. ')' → logprob: -7.8134541511535645
    7. 'self' → logprob: -7.8134541511535645
    8. '   ' → logprob: -8.438453674316406
    9. '       ' → logprob: -8.813453674316406
    10. ' (' → logprob: -9.313453674316406

Token 404: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03499431908130646
    2. 'return' → logprob: -3.65999436378479
    3. '       ' → logprob: -5.284994125366211
    4. ' self' → logprob: -5.659994125366211
    5. 'self' → logprob: -9.284994125366211
    6. '   ' → logprob: -11.909994125366211
    7. ' ' → logprob: -12.284994125366211
    8. '	return' → logprob: -13.909994125366211
    9. '```' → logprob: -14.534994125366211
    10. ':return' → logprob: -15.284994125366211

Token 405: 'Vector' (ID: 7580)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.546630322933197
    2. 'return' → logprob: -1.1716303825378418
    3. 'int' → logprob: -3.421630382537842
    4. 'float' → logprob: -3.546630382537842
    5. '       ' → logprob: -3.921630382537842
    6. ' return' → logprob: -4.546630382537842
    7. '   ' → logprob: -4.671630382537842
    8. ' self' → logprob: -5.046630382537842
    9. ' int' → logprob: -6.671630382537842
    10. 'def' → logprob: -7.046630382537842

Token 406: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9071536660194397
    2. '       ' → logprob: -1.782153606414795
    3. '(' → logprob: -2.282153606414795
    4. '(self' → logprob: -2.657153606414795
    5. ' return' → logprob: -2.782153606414795
    6. 'def' → logprob: -3.157153606414795
    7. 'return' → logprob: -3.407153606414795
    8. ':' → logprob: -3.782153606414795
    9. ' (' → logprob: -4.282153606414795
    10. ':return' → logprob: -4.407153606414795

Token 407: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.02326679229736328
    2. ' Vector' → logprob: -3.7732667922973633
    3. 'other' → logprob: -12.023266792297363
    4. ' other' → logprob: -12.898266792297363
    5. 'Other' → logprob: -13.023266792297363
    6. '   ' → logprob: -13.273266792297363
    7. '(Vector' → logprob: -13.273266792297363
    8. ' ' → logprob: -13.398266792297363
    9. 'float' → logprob: -13.648266792297363
    10. ' vector' → logprob: -14.023266792297363

Token 408: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8894477486610413
    2. '   ' → logprob: -1.5144476890563965
    3. ':' → logprob: -1.7644476890563965
    4. 'def' → logprob: -2.5144476890563965
    5. ':return' → logprob: -3.5144476890563965
    6. '(' → logprob: -3.7644476890563965
    7. ' ->' → logprob: -4.1394476890563965
    8. 'return' → logprob: -4.5144476890563965
    9. ' return' → logprob: -4.6394476890563965
    10. ' def' → logprob: -5.1394476890563965

Token 409: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.06417524069547653
    2. ' float' → logprob: -3.0641751289367676
    3. 'int' → logprob: -4.189175128936768
    4. ' int' → logprob: -8.189175605773926
    5. ' ' → logprob: -11.064175605773926
    6. 'flo' → logprob: -12.189175605773926
    7. '	float' → logprob: -12.939175605773926
    8. '   ' → logprob: -13.189175605773926
    9. '(float' → logprob: -13.439175605773926
    10. 'f' → logprob: -14.189175605773926

Token 410: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05707140639424324
    2. '   ' → logprob: -3.3070714473724365
    3. 'return' → logprob: -4.182071208953857
    4. ' return' → logprob: -5.807071208953857
    5. ':' → logprob: -8.682071685791016
    6. '
' → logprob: -8.932071685791016
    7. ':return' → logprob: -9.307071685791016
    8. ':
' → logprob: -9.557071685791016
    9. '	return' → logprob: -10.432071685791016
    10. '        
' → logprob: -11.432071685791016

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.712487518787384
    2. 'return' → logprob: -0.712487518787384
    3. ' return' → logprob: -3.9624874591827393
    4. '   ' → logprob: -8.96248722076416
    5. '	return' → logprob: -11.96248722076416
    6. '```' → logprob: -13.21248722076416
    7. ':return' → logprob: -13.83748722076416
    8. ' ' → logprob: -14.71248722076416
    9. '{return' → logprob: -14.96248722076416
    10. '	' → logprob: -15.71248722076416

Token 412: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -4.3822154111694545e-05
    2. ' return' → logprob: -10.250043869018555
    3. 'self' → logprob: -11.750043869018555
    4. '       ' → logprob: -15.000043869018555
    5. '   ' → logprob: -15.625043869018555
    6. 'ret' → logprob: -19.250043869018555
    7. '	return' → logprob: -19.500043869018555
    8. '```' → logprob: -20.375043869018555
    9. 'eturn' → logprob: -21.250043869018555
    10. '
' → logprob: -21.250043869018555

Token 413: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693586945533752
    2. ' self' → logprob: -2.1269359588623047
    3. '   ' → logprob: -13.001935958862305
    4. '(self' → logprob: -13.001935958862305
    5. '       ' → logprob: -13.376935958862305
    6. ' ' → logprob: -14.001935958862305
    7. '	self' → logprob: -15.001935958862305
    8. '```' → logprob: -16.251935958862305
    9. '[self' → logprob: -16.626935958862305
    10. '  ' → logprob: -16.751935958862305

Token 414: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.5213274309644476e-05
    2. '.' → logprob: -11.500015258789062
    3. 'x' → logprob: -12.250015258789062
    4. '.y' → logprob: -15.250015258789062
    5. ' .' → logprob: -17.000015258789062
    6. ' x' → logprob: -19.875015258789062
    7. 'Vector' → logprob: -20.000015258789062
    8. ').' → logprob: -20.125015258789062
    9. '0' → logprob: -20.375015258789062
    10. '[' → logprob: -20.500015258789062

Token 415: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00407923199236393
    2. '*' → logprob: -5.504079341888428
    3. ' ' → logprob: -14.25407886505127
    4. '*object' → logprob: -16.629079818725586
    5. ' ' → logprob: -17.129079818725586
    6. '**' → logprob: -18.004079818725586
    7. ' **' → logprob: -18.879079818725586
    8. '*self' → logprob: -19.004079818725586
    9. '.' → logprob: -19.629079818725586
    10. '*out' → logprob: -19.629079818725586

Token 416: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.005233763717114925
    2. ' other' → logprob: -5.2552337646484375
    3. '.other' → logprob: -18.130233764648438
    4. 'Other' → logprob: -18.255233764648438
    5. '(other' → logprob: -18.755233764648438
    6. '_other' → logprob: -20.755233764648438
    7. ' ' → logprob: -22.130233764648438
    8. 'OTHER' → logprob: -23.130233764648438
    9. '-other' → logprob: -23.755233764648438
    10. 'othe' → logprob: -24.130233764648438

Token 417: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4741666316986084
    2. '.y' → logprob: -0.9741666316986084
    3. 's' → logprob: -10.224166870117188
    4. '.' → logprob: -10.599166870117188
    5. 'py' → logprob: -12.224166870117188
    6. '.x' → logprob: -12.974166870117188
    7. 'Y' → logprob: -12.974166870117188
    8. 'x' → logprob: -13.224166870117188
    9. ' y' → logprob: -13.224166870117188
    10. '	y' → logprob: -13.474166870117188

Token 418: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023246292024850845
    2. '-' → logprob: -3.7732462882995605
    3. ' ' → logprob: -14.773246765136719
    4. ' -
' → logprob: -15.523246765136719
    5. ' ' → logprob: -16.02324676513672
    6. '-
' → logprob: -18.14824676513672
    7. '    ' → logprob: -18.14824676513672
    8. '        ' → logprob: -18.64824676513672
    9. '       ' → logprob: -18.64824676513672
    10. '  ' → logprob: -19.14824676513672

Token 419: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007101670489646494
    2. ' self' → logprob: -7.2507100105285645
    3. 'other' → logprob: -16.750709533691406
    4. '       ' → logprob: -17.000709533691406
    5. '   ' → logprob: -17.250709533691406
    6. '	self' → logprob: -17.375709533691406
    7. '(self' → logprob: -17.625709533691406
    8. ' ' → logprob: -18.625709533691406
    9. '[self' → logprob: -18.625709533691406
    10. '  ' → logprob: -20.000709533691406

Token 420: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5760179162025452
    2. '.y' → logprob: -0.8260179162025452
    3. '.' → logprob: -9.826018333435059
    4. ' y' → logprob: -10.826018333435059
    5. 'Y' → logprob: -13.701018333435059
    6. '	y' → logprob: -13.701018333435059
    7. 'x' → logprob: -14.576018333435059
    8. 'other' → logprob: -14.576018333435059
    9. '.x' → logprob: -14.951018333435059
    10. 's' → logprob: -15.451018333435059

Token 421: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0019286326132714748
    2. '*' → logprob: -6.251928806304932
    3. '*object' → logprob: -16.751928329467773
    4. ' ' → logprob: -18.376928329467773
    5. ' ' → logprob: -19.126928329467773
    6. '*out' → logprob: -19.751928329467773
    7. '**' → logprob: -20.001928329467773
    8. '<|end|>' → logprob: -20.251928329467773
    9. '.' → logprob: -20.876928329467773
    10. '*self' → logprob: -21.001928329467773

Token 422: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00020354038861114532
    2. ' other' → logprob: -8.500203132629395
    3. '(other' → logprob: -17.50020408630371
    4. '.other' → logprob: -18.50020408630371
    5. 'Other' → logprob: -20.87520408630371
    6. '_other' → logprob: -21.25020408630371
    7. '-other' → logprob: -23.00020408630371
    8. 'othe' → logprob: -23.37520408630371
    9. ' ' → logprob: -23.50020408630371
    10. 'others' → logprob: -23.75020408630371

Token 423: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00292873359285295
    2. 'x' → logprob: -5.877928733825684
    3. '.' → logprob: -9.002928733825684
    4. ' .' → logprob: -14.627928733825684
    5. ' x' → logprob: -16.002927780151367
    6. '	x' → logprob: -16.877927780151367
    7. 's' → logprob: -17.377927780151367
    8. '.
' → logprob: -17.377927780151367
    9. 'import' → logprob: -17.627927780151367
    10. '[' → logprob: -17.627927780151367

Token 424: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28286007046699524
    2. '   ' → logprob: -1.4078600406646729
    3. ' def' → logprob: -7.407860279083252
    4. '	def' → logprob: -7.657860279083252
    5. '<|end|>' → logprob: -8.532859802246094
    6. '#' → logprob: -9.032859802246094
    7. '    
' → logprob: -9.657859802246094
    8. '
' → logprob: -10.032859802246094
    9. '  ' → logprob: -10.032859802246094
    10. ' ' → logprob: -10.282859802246094

Token 426: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009337326046079397
    2. '   ' → logprob: -7.500933647155762
    3. ' def' → logprob: -8.000933647155762
    4. '	def' → logprob: -11.500933647155762
    5. '#' → logprob: -11.625933647155762
    6. ')' → logprob: -11.875933647155762
    7. ' ' → logprob: -12.250933647155762
    8. '<|end|>' → logprob: -12.750933647155762
    9. '```' → logprob: -13.125933647155762
    10. '    
' → logprob: -13.125933647155762

Token 427: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.48494017124176025
    2. 'eq' → logprob: -1.9849401712417603
    3. 'str' → logprob: -2.3599400520324707
    4. 'angle' → logprob: -3.2349400520324707
    5. 'equals' → logprob: -3.9849400520324707
    6. 'dist' → logprob: -4.359940052032471
    7. 'distance' → logprob: -4.359940052032471
    8. ' __' → logprob: -4.484940052032471
    9. 'equal' → logprob: -4.609940052032471
    10. 'copy' → logprob: -4.734940052032471

Token 428: 'str' (ID: 689)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.09279752522706985
    2. 'eq' → logprob: -2.8427975177764893
    3. 'repr' → logprob: -4.092797756195068
    4. 'mul' → logprob: -4.342797756195068
    5. 'str' → logprob: -7.592797756195068
    6. 'init' → logprob: -8.96779727935791
    7. 'sub' → logprob: -11.09279727935791
    8. 'lt' → logprob: -11.71779727935791
    9. 'neg' → logprob: -12.46779727935791
    10. 'a' → logprob: -12.96779727935791

Token 429: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04869069904088974
    2. '__' → logprob: -3.0486907958984375
    3. '__(
' → logprob: -9.923690795898438
    4. '__('' → logprob: -10.548690795898438
    5. '___' → logprob: -11.298690795898438
    6. '__.__' → logprob: -12.173690795898438
    7. '__((' → logprob: -12.548690795898438
    8. '__("' → logprob: -13.173690795898438
    9. '____' → logprob: -13.298690795898438
    10. '_(' → logprob: -13.923690795898438

Token 430: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.723352049040841e-06
    2. ')' → logprob: -12.375004768371582
    3. 's' → logprob: -15.625004768371582
    4. ' self' → logprob: -15.750004768371582
    5. '(self' → logprob: -16.500003814697266
    6. 'sel' → logprob: -17.375003814697266
    7. '
' → logprob: -17.750003814697266
    8. 'se' → logprob: -17.750003814697266
    9. '):
' → logprob: -18.125003814697266
    10. '	self' → logprob: -18.250003814697266

Token 431: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2666778266429901
    2. '(self' → logprob: -2.6416778564453125
    3. ')' → logprob: -2.7666778564453125
    4. '):' → logprob: -3.2666778564453125
    5. '__(' → logprob: -3.5166778564453125
    6. '__' → logprob: -4.2666778564453125
    7. ')(' → logprob: -4.6416778564453125
    8. '):
' → logprob: -5.6416778564453125
    9. '__)' → logprob: -6.8916778564453125
    10. '	self' → logprob: -7.2666778564453125

Token 432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005625854711979628
    2. ' return' → logprob: -5.2556257247924805
    3. 'return' → logprob: -7.8806257247924805
    4. '   ' → logprob: -11.50562572479248
    5. ' f' → logprob: -13.13062572479248
    6. '	return' → logprob: -13.75562572479248
    7. 'f' → logprob: -15.00562572479248
    8. '      ' → logprob: -15.75562572479248
    9. '	' → logprob: -16.130626678466797
    10. '     ' → logprob: -16.630626678466797

Token 433: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0014186843764036894
    2. '   ' → logprob: -7.251418590545654
    3. 'f' → logprob: -7.751418590545654
    4. '       ' → logprob: -8.501419067382812
    5. ' return' → logprob: -9.501419067382812
    6. '	return' → logprob: -15.126419067382812
    7. '"' → logprob: -16.501419067382812
    8. ' f' → logprob: -16.876419067382812
    9. ' ' → logprob: -18.126419067382812
    10. '    ' → logprob: -18.251419067382812

Token 434: ' '{' (ID: 24918)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0009823163272812963
    2. ' f' → logprob: -7.375982284545898
    3. '"' → logprob: -8.000982284545898
    4. ''f' → logprob: -11.500982284545898
    5. ''' → logprob: -11.875982284545898
    6. ' ' → logprob: -13.500982284545898
    7. '(f' → logprob: -13.750982284545898
    8. '   ' → logprob: -14.625982284545898
    9. '	f' → logprob: -15.375982284545898
    10. 'F' → logprob: -16.1259822845459

Token 435: ':.' (ID: 27474)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7883169054985046
    2. ':.' → logprob: -1.2883169651031494
    3. '},' → logprob: -1.5383169651031494
    4. '0' → logprob: -3.0383169651031494
    5. '}' → logprob: -5.66331672668457
    6. ''' → logprob: -6.91331672668457
    7. '},{' → logprob: -7.41331672668457
    8. '{' → logprob: -7.66331672668457
    9. '%.' → logprob: -7.78831672668457
    10. '(self' → logprob: -8.16331672668457

Token 436: '9' (ID: 24)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.03141968324780464
    2. '8' → logprob: -4.65641975402832
    3. '10' → logprob: -4.90641975402832
    4. '3' → logprob: -5.03141975402832
    5. '9' → logprob: -5.90641975402832
    6. '4' → logprob: -6.28141975402832
    7. '2' → logprob: -6.53141975402832
    8. '5' → logprob: -7.28141975402832
    9. '7' → logprob: -7.53141975402832
    10. '12' → logprob: -8.53141975402832

Token 437: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -9.627176768844947e-05
    2. 'g' → logprob: -9.250096321105957
    3. '}' → logprob: -16.12509536743164
    4. '{' → logprob: -17.75009536743164
    5. '```' → logprob: -17.75009536743164
    6. 'e' → logprob: -17.87509536743164
    7. ' f' → logprob: -18.25009536743164
    8. '
' → logprob: -18.50009536743164
    9. ''f' → logprob: -19.87509536743164
    10. '{}' → logprob: -19.87509536743164

Token 438: '}'.' (ID: 58336)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.5921638607978821
    2. '({' → logprob: -0.9671638607978821
    3. '({},' → logprob: -3.4671638011932373
    4. '(' → logprob: -3.9671638011932373
    5. '(self' → logprob: -4.967164039611816
    6. '}'.' → logprob: -5.967164039611816
    7. 'f' → logprob: -6.342164039611816
    8. ' ({' → logprob: -6.967164039611816
    9. ',' → logprob: -6.967164039611816
    10. ' (' → logprob: -7.217164039611816

Token 439: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.005263525992631912
    2. '6' → logprob: -5.505263328552246
    3. 'f' → logprob: -6.755263328552246
    4. ' format' → logprob: -11.505263328552246
    5. '```' → logprob: -13.255263328552246
    6. '7' → logprob: -13.380263328552246
    7. '2' → logprob: -13.505263328552246
    8. '3' → logprob: -13.880263328552246
    9. '	format' → logprob: -14.380263328552246
    10. 'g' → logprob: -14.380263328552246

Token 440: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002031180774793029
    2. '((' → logprob: -6.252031326293945
    3. '(abs' → logprob: -10.002031326293945
    4. 'self' → logprob: -10.502031326293945
    5. '(float' → logprob: -11.252031326293945
    6. '(' → logprob: -11.627031326293945
    7. '(s' → logprob: -12.752031326293945
    8. '(round' → logprob: -13.502031326293945
    9. '(Vector' → logprob: -13.877031326293945
    10. '(str' → logprob: -13.877031326293945

Token 441: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0001801801408873871
    2. 'self' → logprob: -9.0001802444458
    3. '(self' → logprob: -10.7501802444458
    4. '.' → logprob: -10.8751802444458
    5. '().' → logprob: -12.0001802444458
    6. 'x' → logprob: -12.3751802444458
    7. '(x' → logprob: -13.0001802444458
    8. ' self' → logprob: -13.1251802444458
    9. '(' → logprob: -14.2501802444458
    10. ').' → logprob: -15.2501802444458

Token 442: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025220993906259537
    2. ')+' → logprob: -3.775221109390259
    3. ')+'' → logprob: -6.65022087097168
    4. '+' → logprob: -7.90022087097168
    5. ',' → logprob: -8.65022087097168
    6. ')+"' → logprob: -9.77522087097168
    7. ' )' → logprob: -10.52522087097168
    8. '+)' → logprob: -11.02522087097168
    9. '),' → logprob: -11.15022087097168
    10. ' +' → logprob: -11.65022087097168

Token 443: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07156533002853394
    2. ' +' → logprob: -2.6965653896331787
    3. ',' → logprob: -6.6965651512146
    4. '+
' → logprob: -9.571565628051758
    5. '+'' → logprob: -9.571565628051758
    6. '+'\' → logprob: -9.696565628051758
    7. '<|end|>' → logprob: -9.821565628051758
    8. '+',' → logprob: -9.946565628051758
    9. ')' → logprob: -10.696565628051758
    10. '+,' → logprob: -11.196565628051758

Token 444: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00551725784316659
    2. '','' → logprob: -5.380517482757568
    3. '',' → logprob: -7.505517482757568
    4. '"' → logprob: -8.13051700592041
    5. '';' → logprob: -10.63051700592041
    6. ''\' → logprob: -11.25551700592041
    7. ' '' → logprob: -11.50551700592041
    8. '","' → logprob: -13.63051700592041
    9. '':'' → logprob: -14.13051700592041
    10. '('' → logprob: -14.13051700592041

Token 445: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007662701420485973
    2. '','' → logprob: -5.007662773132324
    3. '',' → logprob: -7.757662773132324
    4. ' '' → logprob: -8.257662773132324
    5. '"' → logprob: -9.382662773132324
    6. '';' → logprob: -9.507662773132324
    7. ''\' → logprob: -9.757662773132324
    8. ' ' → logprob: -10.882662773132324
    9. ',' → logprob: -11.382662773132324
    10. ' ','' → logprob: -12.632662773132324

Token 446: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12833189964294434
    2. ''{' → logprob: -2.1283318996429443
    3. '+'' → logprob: -6.753332138061523
    4. ''' → logprob: -8.878332138061523
    5. '+
' → logprob: -10.378332138061523
    6. ' +' → logprob: -10.378332138061523
    7. '{' → logprob: -10.628332138061523
    8. ''+' → logprob: -12.003332138061523
    9. ' '{' → logprob: -13.628332138061523
    10. '"{' → logprob: -14.253332138061523

Token 447: ' '{' (ID: 24918)
  Prédit: ''{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''{' → logprob: -1.6240566083070007e-06
    2. ' '{' → logprob: -14.375001907348633
    3. '{' → logprob: -14.875001907348633
    4. '"{' → logprob: -14.875001907348633
    5. ''' → logprob: -15.250001907348633
    6. '('{' → logprob: -16.625001907348633
    7. ''>{' → logprob: -21.125001907348633
    8. '   ' → logprob: -21.500001907348633
    9. '='{' → logprob: -22.125001907348633
    10. '	' → logprob: -22.375001907348633

Token 448: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -5.5577775128767826e-06
    2. '{' → logprob: -12.375005722045898
    3. ':{' → logprob: -14.625005722045898
    4. '.' → logprob: -14.750005722045898
    5. ' {:.' → logprob: -15.875005722045898
    6. ' :.' → logprob: -16.3750057220459
    7. '0' → logprob: -17.1250057220459
    8. ':x' → logprob: -17.7500057220459
    9. ':+' → logprob: -18.1250057220459
    10. '   ' → logprob: -18.2500057220459

Token 449: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.264322317088954e-05
    2. 'f' → logprob: -9.875052452087402
    3. '{' → logprob: -14.375052452087402
    4. '.' → logprob: -15.375052452087402
    5. '```' → logprob: -16.00005340576172
    6. ' ' → logprob: -16.25005340576172
    7. 'str' → logprob: -17.37505340576172
    8. 's' → logprob: -17.50005340576172
    9. '   ' → logprob: -18.00005340576172
    10. 'def' → logprob: -18.25005340576172

Token 450: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -14.125001907348633
    3. '.f' → logprob: -14.875001907348633
    4. '```' → logprob: -15.875001907348633
    5. '
' → logprob: -16.000001907348633
    6. '{' → logprob: -17.250001907348633
    7. 'str' → logprob: -17.625001907348633
    8. 'fff' → logprob: -17.750001907348633
    9. ':f' → logprob: -17.750001907348633
    10. '   ' → logprob: -18.125001907348633

Token 451: '}'.' (ID: 58336)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0020216628909111023
    2. ''' → logprob: -6.752021789550781
    3. '}'.' → logprob: -7.127021789550781
    4. '{}'.' → logprob: -10.752021789550781
    5. '''.' → logprob: -11.252021789550781
    6. '').' → logprob: -12.627021789550781
    7. '{' → logprob: -12.752021789550781
    8. ''}' → logprob: -13.252021789550781
    9. '".' → logprob: -13.502021789550781
    10. '}' → logprob: -13.752021789550781

Token 452: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -9.088346359931165e-07
    2. ' format' → logprob: -14.375000953674316
    3. 'f' → logprob: -15.375000953674316
    4. '	format' → logprob: -17.625
    5. 'ormat' → logprob: -18.125
    6. 'form' → logprob: -18.5
    7. 'str' → logprob: -18.5
    8. 'forma' → logprob: -19.125
    9. '(format' → logprob: -21.0
    10. '7' → logprob: -21.25

Token 453: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9623810658231378e-05
    2. '(' → logprob: -10.875020027160645
    3. 'self' → logprob: -14.250020027160645
    4. ' (' → logprob: -17.500019073486328
    5. '(s' → logprob: -17.625019073486328
    6. '(
' → logprob: -18.125019073486328
    7. '(sel' → logprob: -19.375019073486328
    8. '(this' → logprob: -19.875019073486328
    9. '((' → logprob: -20.250019073486328
    10. ' self' → logprob: -21.125019073486328

Token 454: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0003633521846495569
    2. 'y' → logprob: -8.00036334991455
    3. '.' → logprob: -10.50036334991455
    4. ',y' → logprob: -16.250364303588867
    5. ' .' → logprob: -16.375364303588867
    6. '.x' → logprob: -16.750364303588867
    7. ').' → logprob: -17.125364303588867
    8. '(y' → logprob: -17.750364303588867
    9. ' y' → logprob: -18.250364303588867
    10. '.py' → logprob: -18.250364303588867

Token 455: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020938136731274426
    2. '')' → logprob: -8.50020980834961
    3. '}' → logprob: -12.50020980834961
    4. ')'' → logprob: -13.87520980834961
    5. ')
' → logprob: -14.75020980834961
    6. ')}' → logprob: -15.00020980834961
    7. ')+' → logprob: -16.37520980834961
    8. '")' → logprob: -16.50020980834961
    9. '})' → logprob: -16.62520980834961
    10. ' )' → logprob: -16.75020980834961

Token 456: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5291248559951782
    2. '<|end|>' → logprob: -0.9041248559951782
    3. '<|end|>' → logprob: -5.904124736785889
    4. '#' → logprob: -7.029124736785889
    5. '\n' → logprob: -7.404124736785889
    6. '```' → logprob: -7.404124736785889
    7. 'def' → logprob: -7.529124736785889
    8. '

' → logprob: -8.654125213623047
    9. '[' → logprob: -8.779125213623047
    10. ')' → logprob: -9.779125213623047

Token 457: ' Line' (ID: 11342)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.6377388834953308
    2. ' Polygon' → logprob: -1.0127389430999756
    3. ' Segment' → logprob: -3.2627389430999756
    4. 'Point' → logprob: -3.8877389430999756
    5. 'Polygon' → logprob: -4.1377387046813965
    6. ' Line' → logprob: -4.1377387046813965
    7. 'Segment' → logprob: -5.7627387046813965
    8. ' Circle' → logprob: -5.7627387046813965
    9. ' Vector' → logprob: -6.0127387046813965
    10. ' Geometry' → logprob: -6.6377387046813965

Token 458: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01272977888584137
    2. ':' → logprob: -4.387729644775391
    3. '():
' → logprob: -9.01272964477539
    4. ' ():' → logprob: -10.13772964477539
    5. '(object' → logprob: -10.76272964477539
    6. '):' → logprob: -11.01272964477539
    7. ' :' → logprob: -11.13772964477539
    8. ':
' → logprob: -13.01272964477539
    9. '(Vector' → logprob: -13.63772964477539
    10. '(' → logprob: -14.26272964477539

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019723696634173393
    2. 'def' → logprob: -4.644723892211914
    3. '<|end|>' → logprob: -5.269723892211914
    4. ' def' → logprob: -5.644723892211914
    5. ':
' → logprob: -8.269723892211914
    6. '():
' → logprob: -8.394723892211914
    7. ':' → logprob: -8.769723892211914
    8. '	def' → logprob: -9.019723892211914
    9. ' ' → logprob: -9.019723892211914
    10. '  ' → logprob: -9.519723892211914

Token 460: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06200980395078659
    2. ' def' → logprob: -2.812009811401367
    3. '__' → logprob: -10.687009811401367
    4. '   ' → logprob: -11.437009811401367
    5. '	def' → logprob: -12.187009811401367
    6. 'class' → logprob: -13.312009811401367
    7. ' __' → logprob: -13.812009811401367
    8. 'from' → logprob: -15.062009811401367
    9. ':def' → logprob: -16.437009811401367
    10. ' ' → logprob: -16.937009811401367

Token 461: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.048611775040626526
    2. '__' → logprob: -3.048611879348755
    3. '_init' → logprob: -10.923611640930176
    4. ' def' → logprob: -13.048611640930176
    5. 'init' → logprob: -13.548611640930176
    6. 'def' → logprob: -14.048611640930176
    7. '_' → logprob: -14.298611640930176
    8. '.__' → logprob: -14.673611640930176
    9. ' init' → logprob: -14.798611640930176
    10. ' ' → logprob: -14.923611640930176

Token 462: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.167648876318708e-05
    2. 'def' → logprob: -10.125041961669922
    3. '   ' → logprob: -14.125041961669922
    4. ' init' → logprob: -15.000041961669922
    5. '_init' → logprob: -15.875041961669922
    6. 'in' → logprob: -16.125041961669922
    7. 'ini' → logprob: -16.125041961669922
    8. '__' → logprob: -17.125041961669922
    9. '```' → logprob: -17.125041961669922
    10. '	init' → logprob: -17.750041961669922

Token 463: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2520046830177307
    2. '__(' → logprob: -1.502004623413086
    3. '(' → logprob: -9.877004623413086
    4. 'self' → logprob: -11.502004623413086
    5. '__' → logprob: -12.502004623413086
    6. '__(
' → logprob: -12.752004623413086
    7. ' (' → logprob: -12.877004623413086
    8. '_(' → logprob: -13.002004623413086
    9. '(this' → logprob: -14.752004623413086
    10. 'def' → logprob: -15.002004623413086

Token 464: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8624639324116288e-06
    2. ' self' → logprob: -13.625001907348633
    3. '   ' → logprob: -14.875001907348633
    4. ')' → logprob: -15.625001907348633
    5. '0' → logprob: -16.500001907348633
    6. 's' → logprob: -17.625001907348633
    7. ',' → logprob: -17.875001907348633
    8. '(self' → logprob: -18.125001907348633
    9. '       ' → logprob: -18.500001907348633
    10. 'x' → logprob: -19.125001907348633

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006214152672328055
    2. 'self' → logprob: -7.750621318817139
    3. ' ,' → logprob: -8.750621795654297
    4. '(self' → logprob: -11.250621795654297
    5. ' self' → logprob: -11.875621795654297
    6. ',self' → logprob: -11.875621795654297
    7. ' (' → logprob: -12.875621795654297
    8. '   ' → logprob: -14.125621795654297
    9. '_,' → logprob: -14.875621795654297
    10. ',x' → logprob: -15.125621795654297

Token 466: ' b' (ID: 287)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.15781265497207642
    2. 'self' → logprob: -2.6578125953674316
    3. 'a' → logprob: -2.7828125953674316
    4. ' p' → logprob: -5.032812595367432
    5. ' self' → logprob: -6.907812595367432
    6. 'x' → logprob: -7.032812595367432
    7. 'v' → logprob: -7.032812595367432
    8. 'point' → logprob: -7.032812595367432
    9. 's' → logprob: -7.282812595367432
    10. 'A' → logprob: -7.532812595367432

Token 467: 'gn' (ID: 5900)
  Prédit: 'egin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'egin' → logprob: -0.32765108346939087
    2. ',' → logprob: -1.702651023864746
    3. 'ase' → logprob: -3.452651023864746
    4. '=' → logprob: -3.702651023864746
    5. 'y' → logprob: -4.077651023864746
    6. '=None' → logprob: -4.702651023864746
    7. 'p' → logprob: -5.702651023864746
    8. '1' → logprob: -5.702651023864746
    9. 'asis' → logprob: -6.452651023864746
    10. 'eg' → logprob: -6.702651023864746

Token 468: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002655916614457965
    2. '=None' → logprob: -6.002655982971191
    3. '=' → logprob: -8.752655982971191
    4. ' ,' → logprob: -11.627655982971191
    5. '_,' → logprob: -12.377655982971191
    6. ',None' → logprob: -13.502655982971191
    7. 'ector' → logprob: -13.752655982971191
    8. '):' → logprob: -14.252655982971191
    9. '(None' → logprob: -14.252655982971191
    10. '(),' → logprob: -14.752655982971191

Token 469: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.25203073024749756
    2. 'None' → logprob: -1.5020307302474976
    3. '0' → logprob: -10.127030372619629
    4. ')' → logprob: -10.502030372619629
    5. ' Vector' → logprob: -10.877030372619629
    6. ' None' → logprob: -12.252030372619629
    7. '(Vector' → logprob: -12.252030372619629
    8. '=None' → logprob: -13.252030372619629
    9. 'Point' → logprob: -13.502030372619629
    10. '(None' → logprob: -13.877030372619629

Token 470: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -6.76628842484206e-05
    2. '()' → logprob: -9.875067710876465
    3. ',' → logprob: -11.375067710876465
    4. ' (),' → logprob: -13.250067710876465
    5. '(' → logprob: -14.000067710876465
    6. '(),
' → logprob: -14.250067710876465
    7. 'None' → logprob: -14.250067710876465
    8. '0' → logprob: -15.125067710876465
    9. '()):
' → logprob: -16.25006675720215
    10. '()
' → logprob: -16.50006675720215

Token 471: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0011976092355325818
    2. ' end' → logprob: -6.876197814941406
    3. 'fin' → logprob: -9.626197814941406
    4. 'nd' → logprob: -10.376197814941406
    5. 'vec' → logprob: -10.501197814941406
    6. '   ' → logprob: -10.751197814941406
    7. ' ' → logprob: -12.501197814941406
    8. 'en' → logprob: -12.626197814941406
    9. 'ed' → logprob: -12.626197814941406
    10. 'e' → logprob: -13.376197814941406

Token 472: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0020309460815042257
    2. '()' → logprob: -6.377030849456787
    3. '=None' → logprob: -8.877031326293945
    4. '()):
' → logprob: -9.252031326293945
    5. '())' → logprob: -9.752031326293945
    6. '(Vector' → logprob: -11.377031326293945
    7. '(' → logprob: -11.752031326293945
    8. ' =' → logprob: -12.252031326293945
    9. '(),' → logprob: -12.752031326293945
    10. '():' → logprob: -13.002031326293945

Token 473: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -1.1994775377388578e-05
    2. ' Vector' → logprob: -11.875012397766113
    3. '(Vector' → logprob: -12.375012397766113
    4. ')' → logprob: -15.250012397766113
    5. '	Vector' → logprob: -15.500012397766113
    6. 'None' → logprob: -15.750012397766113
    7. '<Vector' → logprob: -15.750012397766113
    8. '   ' → logprob: -17.000011444091797
    9. '_Vector' → logprob: -17.250011444091797
    10. '.Vector' → logprob: -17.625011444091797

Token 474: '()):
' (ID: 83536)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011245992965996265
    2. '()):
' → logprob: -4.511246204376221
    3. '())' → logprob: -9.136245727539062
    4. '):' → logprob: -9.761245727539062
    5. '(' → logprob: -11.886245727539062
    6. '(),' → logprob: -12.011245727539062
    7. ' (' → logprob: -12.386245727539062
    8. '():' → logprob: -12.636245727539062
    9. '());' → logprob: -12.886245727539062
    10. '()}' → logprob: -13.386245727539062

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031091354321688414
    2. '	' → logprob: -9.250310897827148
    3. 'self' → logprob: -9.375310897827148
    4. ':' → logprob: -10.000310897827148
    5. ',' → logprob: -10.500310897827148
    6. ' self' → logprob: -10.625310897827148
    7. '	self' → logprob: -11.875310897827148
    8. '      ' → logprob: -12.250310897827148
    9. '   ' → logprob: -12.500310897827148
    10. '<|end|>' → logprob: -12.750310897827148

Token 476: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0001317871210630983
    2. '       ' → logprob: -9.250131607055664
    3. ' self' → logprob: -10.250131607055664
    4. '	self' → logprob: -15.750131607055664
    5. '   ' → logprob: -17.500131607055664
    6. '(self' → logprob: -17.875131607055664
    7. ' ' → logprob: -19.500131607055664
    8. '[self' → logprob: -19.750131607055664
    9. '	' → logprob: -20.500131607055664
    10. '
' → logprob: -21.125131607055664

Token 477: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.001352498889900744
    2. '.' → logprob: -6.626352310180664
    3. ' .' → logprob: -10.751352310180664
    4. 'b' → logprob: -12.876352310180664
    5. '._' → logprob: -13.376352310180664
    6. '.B' → logprob: -15.251352310180664
    7. '   ' → logprob: -15.751352310180664
    8. '_b' → logprob: -16.001352310180664
    9. ' ' → logprob: -16.126352310180664
    10. '.x' → logprob: -16.376352310180664

Token 478: 'gn' (ID: 5900)
  Prédit: 'gn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gn' → logprob: -9.662937372922897e-05
    2. 'g' → logprob: -9.250096321105957
    3. 'egn' → logprob: -16.000097274780273
    4. 'eg' → logprob: -16.125097274780273
    5. '   ' → logprob: -16.625097274780273
    6. '=' → logprob: -17.375097274780273
    7. '       ' → logprob: -17.375097274780273
    8. 'e' → logprob: -17.875097274780273
    9. ' g' → logprob: -18.125097274780273
    10. '_g' → logprob: -18.375097274780273

Token 479: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859646037220955
    2. ' =' → logprob: -3.0485963821411133
    3. '=b' → logprob: -11.798596382141113
    4. ',' → logprob: -14.048596382141113
    5. '   ' → logprob: -14.423596382141113
    6. ' ' → logprob: -16.17359733581543
    7. ')' → logprob: -16.79859733581543
    8. '=
' → logprob: -17.04859733581543
    9. '    ' → logprob: -17.17359733581543
    10. ',b' → logprob: -18.04859733581543

Token 480: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.8889261304575484e-06
    2. 'Vector' → logprob: -13.000003814697266
    3. ' b' → logprob: -13.375003814697266
    4. '	b' → logprob: -19.250003814697266
    5. ' Vector' → logprob: -20.125003814697266
    6. 'Line' → logprob: -20.875003814697266
    7. '   ' → logprob: -21.250003814697266
    8. ' ' → logprob: -22.000003814697266
    9. '(Vector' → logprob: -22.625003814697266
    10. ' б' → logprob: -22.750003814697266

Token 481: 'gn' (ID: 5900)
  Prédit: 'gn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gn' → logprob: -1.5048530030981055e-06
    2. 'g' → logprob: -13.500001907348633
    3. 'eg' → logprob: -16.750001907348633
    4. 'ln' → logprob: -19.125001907348633
    5. ' gn' → logprob: -19.125001907348633
    6. 'ng' → logprob: -19.750001907348633
    7. 'Vector' → logprob: -20.125001907348633
    8. 'egn' → logprob: -20.375001907348633
    9. '   ' → logprob: -20.750001907348633
    10. 'gm' → logprob: -21.000001907348633

Token 482: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07909753173589706
    2. '
' → logprob: -2.5790975093841553
    3. '<|end|>' → logprob: -8.954097747802734
    4. 'self' → logprob: -10.829097747802734
    5. '
' → logprob: -10.954097747802734
    6. '	' → logprob: -10.954097747802734
    7. '   ' → logprob: -11.329097747802734
    8. '        
' → logprob: -13.079097747802734
    9. ',' → logprob: -13.704097747802734
    10. '               ' → logprob: -13.829097747802734

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012551113031804562
    2. 'self' → logprob: -6.751255035400391
    3. ' self' → logprob: -10.12625503540039
    4. '   ' → logprob: -10.37625503540039
    5. '
' → logprob: -12.50125503540039
    6. '	' → logprob: -12.75125503540039
    7. ',' → logprob: -13.50125503540039
    8. '      ' → logprob: -13.50125503540039
    9. ' ' → logprob: -13.62625503540039
    10. '<|end|>' → logprob: -14.00125503540039

Token 484: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0022307864855974913
    2. 'end' → logprob: -6.252230644226074
    3. ' self' → logprob: -8.127230644226074
    4. '       ' → logprob: -12.002230644226074
    5. '   ' → logprob: -15.127230644226074
    6. ' end' → logprob: -15.252230644226074
    7. ' ' → logprob: -16.12723159790039
    8. '
' → logprob: -17.00223159790039
    9. '	self' → logprob: -17.25223159790039
    10. 's' → logprob: -18.37723159790039

Token 485: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -0.023357287049293518
    2. 'end' → logprob: -3.773357391357422
    3. '.' → logprob: -9.148357391357422
    4. ' .' → logprob: -13.273357391357422
    5. '=end' → logprob: -14.398357391357422
    6. '.y' → logprob: -14.523357391357422
    7. ' end' → logprob: -14.523357391357422
    8. ':end' → logprob: -15.023357391357422
    9. '[end' → logprob: -15.023357391357422
    10. '	end' → logprob: -15.523357391357422

Token 486: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5728743672370911
    2. ' =' → logprob: -0.9478743672370911
    3. '<|end|>' → logprob: -3.0728743076324463
    4. ')' → logprob: -6.697874546051025
    5. ' ' → logprob: -8.322874069213867
    6. '<|end|>' → logprob: -8.572874069213867
    7. '.' → logprob: -9.072874069213867
    8. '   ' → logprob: -9.072874069213867
    9. '
' → logprob: -9.697874069213867
    10. ',' → logprob: -9.822874069213867

Token 487: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.00014001218369230628
    2. ' end' → logprob: -8.875140190124512
    3. '(end' → logprob: -17.250139236450195
    4. '	end' → logprob: -18.250139236450195
    5. 'endon' → logprob: -18.625139236450195
    6. 'Vector' → logprob: -18.750139236450195
    7. ' ' → logprob: -19.125139236450195
    8. 'b' → logprob: -19.125139236450195
    9. '=end' → logprob: -19.250139236450195
    10. '[end' → logprob: -19.375139236450195

Token 488: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18417242169380188
    2. '   ' → logprob: -2.1841723918914795
    3. '<|end|>' → logprob: -3.0591723918914795
    4. '

' → logprob: -5.684172630310059
    5. 'def' → logprob: -6.059172630310059
    6. '<|end|>' → logprob: -7.059172630310059
    7. '       ' → logprob: -7.434172630310059
    8. '	def' → logprob: -7.434172630310059
    9. ' def' → logprob: -7.559172630310059
    10. '    
' → logprob: -8.184172630310059

Token 489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020116696134209633
    2. 'def' → logprob: -4.395116806030273
    3. '
' → logprob: -5.145116806030273
    4. '<|end|>' → logprob: -6.645116806030273
    5. '    
' → logprob: -8.520116806030273
    6. ' def' → logprob: -9.020116806030273
    7. '	def' → logprob: -9.520116806030273
    8. '<|end|>' → logprob: -10.770116806030273
    9. ')' → logprob: -11.520116806030273
    10. '```' → logprob: -12.270116806030273

Token 490: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0010559145594015718
    2. '   ' → logprob: -7.126055717468262
    3. ' def' → logprob: -8.501055717468262
    4. '@property' → logprob: -10.001055717468262
    5. ' ' → logprob: -13.876055717468262
    6. '	def' → logprob: -14.376055717468262
    7. ')' → logprob: -14.501055717468262
    8. '@' → logprob: -14.751055717468262
    9. ':' → logprob: -16.626056671142578
    10. '    
' → logprob: -16.876056671142578

Token 491: ' build' (ID: 3024)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.3985767364501953
    2. 'dir' → logprob: -2.5235767364501953
    3. 'vector' → logprob: -2.6485767364501953
    4. 'vec' → logprob: -2.6485767364501953
    5. ' direction' → logprob: -3.0235767364501953
    6. 'length' → logprob: -3.2735767364501953
    7. ' vector' → logprob: -4.773576736450195
    8. ' length' → logprob: -5.273576736450195
    9. 'def' → logprob: -6.398576736450195
    10. ' dir' → logprob: -7.148576736450195

Token 492: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009559163823723793
    2. '(' → logprob: -4.759559154510498
    3. 'self' → logprob: -7.509559154510498
    4. '_line' → logprob: -8.509559631347656
    5. '(s' → logprob: -9.759559631347656
    6. '_from' → logprob: -10.509559631347656
    7. ' (' → logprob: -10.759559631347656
    8. '_vector' → logprob: -11.009559631347656
    9. '(
' → logprob: -11.134559631347656
    10. '_' → logprob: -11.384559631347656

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10009903460741043
    2. '):' → logprob: -2.4750990867614746
    3. 'self' → logprob: -5.100099086761475
    4. '):
' → logprob: -5.725099086761475
    5. ' ,' → logprob: -8.100098609924316
    6. ',line' → logprob: -8.225098609924316
    7. '(self' → logprob: -8.350098609924316
    8. 'from' → logprob: -8.725098609924316
    9. ',b' → logprob: -8.850098609924316
    10. '   ' → logprob: -8.975098609924316

Token 494: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7806609272956848
    2. ' b' → logprob: -1.78066086769104
    3. 'p' → logprob: -2.03066086769104
    4. ' p' → logprob: -2.65566086769104
    5. 'self' → logprob: -2.65566086769104
    6. ' self' → logprob: -3.78066086769104
    7. 'other' → logprob: -4.030661106109619
    8. ' other' → logprob: -4.405661106109619
    9. 'a' → logprob: -4.530661106109619
    10. 'point' → logprob: -4.780661106109619

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09984295815229416
    2. 'r' → logprob: -3.2248430252075195
    3. 'rg' → logprob: -3.4748430252075195
    4. '):' → logprob: -4.5998430252075195
    5. ',b' → logprob: -5.3498430252075195
    6. 'b' → logprob: -5.5998430252075195
    7. 'ng' → logprob: -6.0998430252075195
    8. 'nd' → logprob: -7.0998430252075195
    9. 'rray' → logprob: -7.3498430252075195
    10. '):
' → logprob: -7.8498430252075195

Token 496: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002498490735888481
    2. ' b' → logprob: -6.252498626708984
    3. 'v' → logprob: -9.002498626708984
    4. 't' → logprob: -9.377498626708984
    5. 'p' → logprob: -9.877498626708984
    6. 'n' → logprob: -10.002498626708984
    7. '   ' → logprob: -10.127498626708984
    8. 'k' → logprob: -10.252498626708984
    9. 'l' → logprob: -10.377498626708984
    10. 'd' → logprob: -10.752498626708984

Token 497: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6329189538955688
    2. '):' → logprob: -0.7579189538955688
    3. '):
' → logprob: -8.632919311523438
    4. ',' → logprob: -9.132919311523438
    5. ' ):' → logprob: -11.382919311523438
    6. '=' → logprob: -12.257919311523438
    7. ')' → logprob: -12.382919311523438
    8. ':' → logprob: -13.007919311523438
    9. ' ):
' → logprob: -13.257919311523438
    10. '   ' → logprob: -13.382919311523438

Token 498: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0718625858426094
    2. ' c' → logprob: -4.321862697601318
    3. 't' → logprob: -4.446862697601318
    4. 'k' → logprob: -4.446862697601318
    5. 'p' → logprob: -5.071862697601318
    6. 'eps' → logprob: -5.446862697601318
    7. '):
' → logprob: -5.446862697601318
    8. 'direction' → logprob: -6.446862697601318
    9. 'line' → logprob: -6.821862697601318
    10. 'x' → logprob: -6.946862697601318

Token 499: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10054846853017807
    2. '):
' → logprob: -2.350548505783081
    3. ')' → logprob: -8.72554874420166
    4. '):
' → logprob: -8.97554874420166
    5. ' ):' → logprob: -9.97554874420166
    6. '):

' → logprob: -13.22554874420166
    7. ' ):
' → logprob: -13.60054874420166
    8. '=None' → logprob: -13.72554874420166
    9. '=' → logprob: -14.10054874420166
    10. '   ' → logprob: -14.60054874420166

Token 500: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017658039927482605
    2. ' if' → logprob: -4.392658233642578
    3. 'if' → logprob: -5.767658233642578
    4. '        ' → logprob: -7.017658233642578
    5. 'd' → logprob: -8.017658233642578
    6. '#' → logprob: -8.767658233642578
    7. 'x' → logprob: -9.267658233642578
    8. 't' → logprob: -9.892658233642578
    9. 'delta' → logprob: -10.267658233642578
    10. 'dx' → logprob: -10.392658233642578

Token 501: 'ax' (ID: 1362)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32332122325897217
    2. '       ' → logprob: -2.1983213424682617
    3. 'def' → logprob: -2.8233213424682617
    4. 'self' → logprob: -3.3233213424682617
    5. 'if' → logprob: -4.073321342468262
    6. ' self' → logprob: -4.823321342468262
    7. ' #' → logprob: -4.823321342468262
    8. 'pass' → logprob: -4.948321342468262
    9. ' if' → logprob: -5.198321342468262
    10. '   ' → logprob: -5.198321342468262

Token 502: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10049068182706833
    2. ' +' → logprob: -2.3504905700683594
    3. 'x' → logprob: -8.85049057006836
    4. '+b' → logprob: -9.47549057006836
    5. '=' → logprob: -10.35049057006836
    6. '+=' → logprob: -11.72549057006836
    7. '+x' → logprob: -12.35049057006836
    8. ',' → logprob: -12.85049057006836
    9. '+
' → logprob: -12.97549057006836
    10. 'plus' → logprob: -13.10049057006836

Token 503: ' by' (ID: 656)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08280032873153687
    2. 'b' → logprob: -2.7078003883361816
    3. 'ay' → logprob: -5.582800388336182
    4. 'by' → logprob: -5.707800388336182
    5. ' y' → logprob: -5.957800388336182
    6. '=' → logprob: -6.207800388336182
    7. '1' → logprob: -8.457799911499023
    8. 'bx' → logprob: -8.707799911499023
    9. 'x' → logprob: -9.082799911499023
    10. ' b' → logprob: -9.207799911499023

Token 504: ' ==' (ID: 951)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5293186902999878
    2. '+' → logprob: -0.9043186902999878
    3. '=' → logprob: -5.279318809509277
    4. ' =' → logprob: -7.279318809509277
    5. '+=' → logprob: -8.904318809509277
    6. ' +=' → logprob: -9.279318809509277
    7. '+c' → logprob: -9.529318809509277
    8. ',' → logprob: -11.154318809509277
    9. '+b' → logprob: -11.529318809509277
    10. ')' → logprob: -11.779318809509277

Token 505: ' ' (ID: 220)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6350836753845215
    2. '0' → logprob: -0.7600836753845215
    3. ' c' → logprob: -6.1350836753845215
    4. ' ' → logprob: -8.13508415222168
    5. '=' → logprob: -12.63508415222168
    6. '=c' → logprob: -12.88508415222168
    7. ')c' → logprob: -12.88508415222168
    8. '```' → logprob: -13.13508415222168
    9. '
' → logprob: -13.38508415222168
    10. '   ' → logprob: -13.51008415222168

Token 506: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1131468340754509
    2. '0' → logprob: -2.2381467819213867
    3. ' c' → logprob: -8.113146781921387
    4. ' ' → logprob: -11.113146781921387
    5. '=c' → logprob: -12.988146781921387
    6. ')c' → logprob: -13.488146781921387
    7. '```' → logprob: -13.738146781921387
    8. '
' → logprob: -13.738146781921387
    9. '-c' → logprob: -14.363146781921387
    10. '<c' → logprob: -14.488146781921387

Token 507: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23645871877670288
    2. '):' → logprob: -2.8614587783813477
    3. '<|end|>' → logprob: -2.8614587783813477
    4. ')' → logprob: -3.3614587783813477
    5. '       ' → logprob: -3.4864587783813477
    6. ' ' → logprob: -5.111458778381348
    7. '   ' → logprob: -5.111458778381348
    8. '
' → logprob: -5.736458778381348
    9. '):
' → logprob: -5.861458778381348
    10. '0' → logprob: -6.236458778381348

Token 508: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2377011626958847
    2. ':' → logprob: -1.612701177597046
    3. '   ' → logprob: -5.987700939178467
    4. '<|end|>' → logprob: -6.237700939178467
    5. '):' → logprob: -6.487700939178467
    6. ' =' → logprob: -6.612700939178467
    7. 'def' → logprob: -7.237700939178467
    8. ' :' → logprob: -7.237700939178467
    9. ',' → logprob: -7.487700939178467
    10. '      ' → logprob: -7.862700939178467

Token 509: ' assert' (ID: 3696)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40546703338623047
    2. 'self' → logprob: -1.9054670333862305
    3. 'd' → logprob: -2.4054670333862305
    4. 'def' → logprob: -3.9054670333862305
    5. 'den' → logprob: -3.9054670333862305
    6. 'eps' → logprob: -3.9054670333862305
    7. '   ' → logprob: -4.2804670333862305
    8. 'det' → logprob: -5.0304670333862305
    9. 'assert' (adapté à ' assert') → logprob: -5.4054670333862305
    10. 'a' → logprob: -6.2804670333862305

Token 510: ' s' (ID: 265)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.058932770043611526
    2. 'abs' → logprob: -3.4339327812194824
    3. '(a' → logprob: -4.183932781219482
    4. ' a' → logprob: -5.433932781219482
    5. ' abs' → logprob: -5.933932781219482
    6. '(abs' → logprob: -6.558932781219482
    7. 'not' → logprob: -7.183932781219482
    8. ' not' → logprob: -8.558932304382324
    9. '(not' → logprob: -8.558932304382324
    10. ' isinstance' → logprob: -9.933932304382324

Token 511: 'gn' (ID: 5900)
  Prédit: 'gn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gn' → logprob: -9.014684110297821e-06
    2. 'g' → logprob: -11.625008583068848
    3. ' gn' → logprob: -19.375009536743164
    4. 'n' → logprob: -19.750009536743164
    5. 'tn' → logprob: -20.375009536743164
    6. 'pn' → logprob: -20.750009536743164
    7. '(' → logprob: -21.125009536743164
    8. '
' → logprob: -21.375009536743164
    9. 'gl' → logprob: -21.500009536743164
    10. 'sg' → logprob: -21.625009536743164

Token 512: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.021608056500554085
    2. '(c' → logprob: -3.8966081142425537
    3. '(' → logprob: -7.396607875823975
    4. 'a' → logprob: -8.646608352661133
    5. '(b' → logprob: -8.771608352661133
    6. '(s' → logprob: -9.521608352661133
    7. '(self' → logprob: -11.021608352661133
    8. '((' → logprob: -11.521608352661133
    9. '(abs' → logprob: -11.521608352661133
    10. 'c' → logprob: -11.896608352661133

Token 513: ')' (ID: 8)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3487435579299927
    2. ')' → logprob: -1.9737435579299927
    3. '(' → logprob: -2.348743438720703
    4. 'a' → logprob: -3.473743438720703
    5. ')!=' → logprob: -4.348743438720703
    6. ',' → logprob: -4.723743438720703
    7. '!=' → logprob: -5.348743438720703
    8. '(c' → logprob: -7.348743438720703
    9. ',a' → logprob: -7.473743438720703
    10. ' !=' → logprob: -8.473743438720703

Token 514: ' !=' (ID: 1666)
  Prédit: '()!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()!=' → logprob: -0.43050462007522583
    2. '()' → logprob: -1.430504560470581
    3. '!=' → logprob: -2.305504560470581
    4. '(' → logprob: -4.55550479888916
    5. ' !=' → logprob: -7.93050479888916
    6. '()==' → logprob: -11.30550479888916
    7. '(!' → logprob: -11.30550479888916
    8. '!' → logprob: -12.30550479888916
    9. '=' → logprob: -12.68050479888916
    10. '!==' → logprob: -12.68050479888916

Token 515: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '=' → logprob: -17.875017166137695
    4. '۰' → logprob: -19.250017166137695
    5. '<|end|>' → logprob: -19.375017166137695
    6. '(' → logprob: -20.875017166137695
    7. 'zero' → logprob: -21.500017166137695
    8. '   ' → logprob: -21.625017166137695
    9. '```' → logprob: -21.750017166137695
    10. '  ' → logprob: -22.000017166137695

Token 516: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '=' → logprob: -18.625003814697266
    4. '۰' → logprob: -18.875003814697266
    5. '<|end|>' → logprob: -19.625003814697266
    6. '   ' → logprob: -20.125003814697266
    7. 'zero' → logprob: -20.375003814697266
    8. '00' → logprob: -20.750003814697266
    9. '०' → logprob: -20.875003814697266
    10. '০' → logprob: -21.000003814697266

Token 517: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.17837561666965485
    2. ' and' → logprob: -2.053375720977783
    3. 'or' → logprob: -4.178375720977783
    4. '
' → logprob: -4.303375720977783
    5. 'and' → logprob: -5.303375720977783
    6. '       ' → logprob: -7.678375720977783
    7. ',' → logprob: -7.928375720977783
    8. '<|end|>' → logprob: -8.803375244140625
    9. 'def' → logprob: -9.553375244140625
    10. '   ' → logprob: -9.803375244140625

Token 518: ' s' (ID: 265)
  Prédit: 'sg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sg' → logprob: -0.00012594614236149937
    2. ' s' → logprob: -9.250125885009766
    3. ' sg' → logprob: -11.375125885009766
    4. 'sgi' → logprob: -11.375125885009766
    5. 's' → logprob: -12.375125885009766
    6. '   ' → logprob: -13.250125885009766
    7. '  ' → logprob: -15.250125885009766
    8. 'sign' → logprob: -16.125125885009766
    9. ' ' → logprob: -16.500125885009766
    10. 'sn' → logprob: -17.000125885009766

Token 519: 'gn' (ID: 5900)
  Prédit: 'gn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gn' → logprob: -0.0001584850688232109
    2. 'g' → logprob: -8.750158309936523
    3. ' gn' → logprob: -17.250158309936523
    4. 'n' → logprob: -18.250158309936523
    5. 'sg' → logprob: -19.750158309936523
    6. 'cn' → logprob: -19.875158309936523
    7. 'ng' → logprob: -21.375158309936523
    8. 'gs' → logprob: -21.500158309936523
    9. 'qn' → logprob: -21.500158309936523
    10. '
' → logprob: -21.625158309936523

Token 520: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.1875571544806007e-05
    2. 'b' → logprob: -11.625011444091797
    3. '(s' → logprob: -12.875011444091797
    4. '(' → logprob: -16.125011444091797
    5. '   ' → logprob: -16.500011444091797
    6. ' (' → logprob: -17.000011444091797
    7. '(c' → logprob: -18.000011444091797
    8. '       ' → logprob: -18.750011444091797
    9. '(a' → logprob: -19.500011444091797
    10. '```' → logprob: -19.625011444091797

Token 521: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17947468161582947
    2. '()' → logprob: -1.9294747114181519
    3. '())' → logprob: -4.304474830627441
    4. '()!=' → logprob: -5.929474830627441
    5. ')!=' → logprob: -6.054474830627441
    6. ' !=' → logprob: -8.179474830627441
    7. '!=' → logprob: -8.679474830627441
    8. '   ' → logprob: -10.429474830627441
    9. ' )' → logprob: -11.054474830627441
    10. '       ' → logprob: -11.429474830627441

Token 522: ' !=' (ID: 1666)
  Prédit: '()!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()!=' → logprob: -0.24619433283805847
    2. '()' → logprob: -1.6211943626403809
    3. '!=' → logprob: -3.996194362640381
    4. ' !=' → logprob: -6.246194362640381
    5. ')!=' → logprob: -8.996193885803223
    6. '()==' → logprob: -10.121193885803223
    7. '(' → logprob: -10.246193885803223
    8. ')' → logprob: -11.996193885803223
    9. '()>' → logprob: -12.246193885803223
    10. ']!=' → logprob: -12.246193885803223

Token 523: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007101670489646494
    2. ' ' → logprob: -7.2507100105285645
    3. '<|end|>' → logprob: -16.500709533691406
    4. '  ' → logprob: -17.125709533691406
    5. '   ' → logprob: -17.125709533691406
    6. '
' → logprob: -18.250709533691406
    7. '```' → logprob: -18.625709533691406
    8. '1' → logprob: -18.625709533691406
    9. '    ' → logprob: -18.875709533691406
    10. '00' → logprob: -19.000709533691406

Token 524: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '<|end|>' → logprob: -15.125051498413086
    4. '
' → logprob: -17.875051498413086
    5. '  ' → logprob: -18.000051498413086
    6. '   ' → logprob: -18.000051498413086
    7. '```' → logprob: -18.000051498413086
    8. '۰' → logprob: -18.250051498413086
    9. '1' → logprob: -18.250051498413086
    10. '.' → logprob: -18.625051498413086

Token 525: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01375571172684431
    2. '
' → logprob: -4.638755798339844
    3. ',' → logprob: -5.638755798339844
    4. '<|end|>' → logprob: -8.513755798339844
    5. '        
' → logprob: -9.888755798339844
    6. 'def' → logprob: -10.263755798339844
    7. ' and' → logprob: -10.263755798339844
    8. ',
' → logprob: -11.013755798339844
    9. ' or' → logprob: -11.013755798339844
    10. '   ' → logprob: -11.513755798339844

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010494127869606018
    2. '
' → logprob: -4.635494232177734
    3. '        
' → logprob: -8.385494232177734
    4. '<|end|>' → logprob: -8.510494232177734
    5. ',' → logprob: -8.635494232177734
    6. 'self' → logprob: -10.635494232177734
    7. ',
' → logprob: -11.010494232177734
    8. '   ' → logprob: -11.510494232177734
    9. '  
' → logprob: -11.510494232177734
    10. 'def' → logprob: -11.760494232177734

Token 527: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4739333391189575
    2. 'if' (adapté à ' if') → logprob: -1.3489333391189575
    3. 'd' → logprob: -2.723933219909668
    4. '       ' → logprob: -3.348933219909668
    5. 'k' → logprob: -5.723933219909668
    6. '#' → logprob: -5.848933219909668
    7. 't' → logprob: -6.098933219909668
    8. ' if' → logprob: -6.598933219909668
    9. 'c' → logprob: -6.848933219909668
    10. 'x' → logprob: -7.098933219909668

Token 528: ' s' (ID: 265)
  Prédit: 'sg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sg' → logprob: -0.4733542799949646
    2. 'abs' → logprob: -1.7233543395996094
    3. ' s' → logprob: -2.4733543395996094
    4. 's' → logprob: -2.5983543395996094
    5. 'a' → logprob: -3.5983543395996094
    6. 'b' → logprob: -4.723354339599609
    7. ' abs' → logprob: -6.223354339599609
    8. '   ' → logprob: -7.348354339599609
    9. ' a' → logprob: -8.34835433959961
    10. ' b' → logprob: -8.59835433959961

Token 529: 'gn' (ID: 5900)
  Prédit: 'gn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gn' → logprob: -7.612634362885728e-05
    2. 'g' → logprob: -9.500076293945312
    3. 'ng' → logprob: -14.625076293945312
    4. ' gn' → logprob: -16.000076293945312
    5. 'n' → logprob: -16.500076293945312
    6. '   ' → logprob: -16.875076293945312
    7. 'sg' → logprob: -17.000076293945312
    8. 'cn' → logprob: -17.125076293945312
    9. '(g' → logprob: -17.125076293945312
    10. 'qn' → logprob: -17.375076293945312

Token 530: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.31400975584983826
    2. '(a' → logprob: -1.3140097856521606
    3. '(c' → logprob: -7.314009666442871
    4. 'a' → logprob: -9.939009666442871
    5. 'b' → logprob: -11.189009666442871
    6. '(s' → logprob: -11.439009666442871
    7. '(' → logprob: -12.189009666442871
    8. '(abs' → logprob: -13.689009666442871
    9. '   ' → logprob: -13.814009666442871
    10. '(
' → logprob: -15.064009666442871

Token 531: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16219832003116608
    2. ')' → logprob: -2.787198305130005
    3. '()==' → logprob: -3.037198305130005
    4. '==' → logprob: -4.537198543548584
    5. '(' → logprob: -4.662198543548584
    6. ')==' → logprob: -4.912198543548584
    7. '()!=' → logprob: -5.037198543548584
    8. ' ==' → logprob: -6.037198543548584
    9. '())' → logprob: -6.662198543548584
    10. ')!=' → logprob: -6.912198543548584

Token 532: ' ==' (ID: 951)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.513174295425415
    2. '()' → logprob: -1.513174295425415
    3. '==' → logprob: -1.513174295425415
    4. '!=' → logprob: -2.138174295425415
    5. '()==' → logprob: -2.388174295425415
    6. '()!=' → logprob: -2.513174295425415
    7. ' ==' → logprob: -3.513174295425415
    8. ' !=' → logprob: -4.013174057006836
    9. '   ' → logprob: -8.888174057006836
    10. '=' → logprob: -8.888174057006836

Token 533: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002989968634210527
    2. ' ' → logprob: -8.125299453735352
    3. '1' → logprob: -13.125299453735352
    4. '   ' → logprob: -15.375299453735352
    5. '(' → logprob: -15.875299453735352
    6. '  ' → logprob: -15.875299453735352
    7. 'not' → logprob: -16.37529945373535
    8. '
' → logprob: -16.87529945373535
    9. '    ' → logprob: -17.25029945373535
    10. '```' → logprob: -17.31279945373535

Token 534: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014084660506341606
    2. ' ' → logprob: -8.875141143798828
    3. '1' → logprob: -14.375141143798828
    4. '-' → logprob: -16.000141143798828
    5. '۰' → logprob: -17.000141143798828
    6. 'not' → logprob: -17.312641143798828
    7. '   ' → logprob: -17.500141143798828
    8. '  ' → logprob: -17.812641143798828
    9. '00' → logprob: -18.125141143798828
    10. '<|end|>' → logprob: -18.125141143798828

Token 535: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2519932985305786
    2. ':
' → logprob: -1.5019932985305786
    3. ':
' → logprob: -11.126993179321289
    4. ' :' → logprob: -11.251993179321289
    5. ' :
' → logprob: -11.376993179321289
    6. '       ' → logprob: -11.876993179321289
    7. '):
' → logprob: -12.001993179321289
    8. ':

' → logprob: -12.376993179321289
    9. ':return' → logprob: -12.626993179321289
    10. '():
' → logprob: -13.751993179321289

Token 536: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4883911907672882
    2. ':
' → logprob: -1.6133911609649658
    3. '           ' → logprob: -2.238391160964966
    4. '       ' → logprob: -2.738391160964966
    5. ' :' → logprob: -5.738391399383545
    6. '):
' → logprob: -5.863391399383545
    7. ',' → logprob: -5.863391399383545
    8. '        ' → logprob: -6.988391399383545
    9. ' self' → logprob: -7.113391399383545
    10. ' :
' → logprob: -7.113391399383545

Token 537: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0717632845044136
    2. 'x' → logprob: -2.696763277053833
    3. '           ' → logprob: -6.946763515472412
    4. ' self' → logprob: -7.946763515472412
    5. '       ' → logprob: -8.946763038635254
    6. '#' → logprob: -9.071763038635254
    7. 'return' → logprob: -9.946763038635254
    8. 'nx' → logprob: -10.071763038635254
    9. 'v' → logprob: -10.321763038635254
    10. '   ' → logprob: -10.321763038635254

Token 538: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0006705015548504889
    2. '.' → logprob: -7.625670433044434
    3. '=' → logprob: -9.625670433044434
    4. ' =' → logprob: -9.875670433044434
    5. ' .' → logprob: -10.250670433044434
    6. '.x' → logprob: -12.250670433044434
    7. '=.' → logprob: -12.500670433044434
    8. '.=' → logprob: -12.750670433044434
    9. '.s' → logprob: -12.875670433044434
    10. 'b' → logprob: -13.125670433044434

Token 539: 'gn' (ID: 5900)
  Prédit: 'gn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gn' → logprob: -6.988221684878226e-06
    2. 'g' → logprob: -11.875006675720215
    3. ' gn' → logprob: -18.12500762939453
    4. 'eg' → logprob: -19.87500762939453
    5. 'gne' → logprob: -20.00000762939453
    6. '_g' → logprob: -20.00000762939453
    7. '       ' → logprob: -20.87500762939453
    8. ' g' → logprob: -21.25000762939453
    9. '   ' → logprob: -21.37500762939453
    10. 'egn' → logprob: -21.62500762939453

Token 540: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197485327720642
    2. ' =' → logprob: -2.8119747638702393
    3. '.x' → logprob: -12.18697452545166
    4. '.' → logprob: -13.93697452545166
    5. ' ' → logprob: -14.68697452545166
    6. '.y' → logprob: -15.18697452545166
    7. 'x' → logprob: -15.43697452545166
    8. '.=' → logprob: -16.436975479125977
    9. '   ' → logprob: -16.811975479125977
    10. '=
' → logprob: -17.186975479125977

Token 541: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -1.9266199160483666e-05
    2. ' Vector' → logprob: -11.125019073486328
    3. 'Line' → logprob: -13.125019073486328
    4. 'self' → logprob: -13.125019073486328
    5. '   ' → logprob: -14.875019073486328
    6. '	Vector' → logprob: -16.000019073486328
    7. '  ' → logprob: -17.625019073486328
    8. '(Vector' → logprob: -17.875019073486328
    9. '<Vector' → logprob: -18.875019073486328
    10. '_Vector' → logprob: -20.000019073486328

Token 542: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08096395432949066
    2. '(c' → logprob: -2.5809638500213623
    3. '(-' → logprob: -6.330964088439941
    4. '((' → logprob: -8.330964088439941
    5. '1' → logprob: -10.580964088439941
    6. 'c' → logprob: -12.455964088439941
    7. '(float' → logprob: -12.705964088439941
    8. '(a' → logprob: -12.705964088439941
    9. '(
' → logprob: -13.080964088439941
    10. '(C' → logprob: -13.330964088439941

Token 543: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002867225557565689
    2. '1' → logprob: -8.625287055969238
    3. ' c' → logprob: -9.375287055969238
    4. '(c' → logprob: -11.500287055969238
    5. '   ' → logprob: -12.375287055969238
    6. '(' → logprob: -13.000287055969238
    7. '
' → logprob: -13.625287055969238
    8. '-c' → logprob: -13.625287055969238
    9. ' ' → logprob: -14.625287055969238
    10. '-' → logprob: -14.875287055969238

Token 544: ' /' (ID: 820)
  Prédit: '/a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/a' → logprob: -0.3289104998111725
    2. ' /' → logprob: -1.32891047000885
    3. '/' → logprob: -4.2039103507995605
    4. 'a' → logprob: -7.5789103507995605
    5. '/s' → logprob: -10.828910827636719
    6. '1' → logprob: -11.453910827636719
    7. ' a' → logprob: -11.453910827636719
    8. '0' → logprob: -12.203910827636719
    9. '   ' → logprob: -12.203910827636719
    10. '/b' → logprob: -12.328910827636719

Token 545: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.700132997939363e-05
    2. ' a' → logprob: -11.000017166137695
    3. ' ' → logprob: -16.000017166137695
    4. '   ' → logprob: -16.250017166137695
    5. '  ' → logprob: -18.375017166137695
    6. 's' → logprob: -18.625017166137695
    7. 'b' → logprob: -18.750017166137695
    8. '    ' → logprob: -19.250017166137695
    9. '(a' → logprob: -19.250017166137695
    10. '     ' → logprob: -19.750017166137695

Token 546: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007887208834290504
    2. '0' → logprob: -4.882887363433838
    3. ' ,' → logprob: -8.25788688659668
    4. ' ' → logprob: -11.88288688659668
    5. '   ' → logprob: -12.00788688659668
    6. '  ' → logprob: -13.00788688659668
    7. ',
' → logprob: -13.13288688659668
    8. ')' → logprob: -14.25788688659668
    9. '(),' → logprob: -14.38288688659668
    10. '1' → logprob: -14.75788688659668

Token 547: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.037216249853372574
    2. '-' → logprob: -3.4122161865234375
    3. ' ' → logprob: -5.9122161865234375
    4. ' -' → logprob: -8.287216186523438
    5. '1' → logprob: -8.412216186523438
    6. '   ' → logprob: -8.912216186523438
    7. '  ' → logprob: -9.787216186523438
    8. 'float' → logprob: -9.912216186523438
    9. '100' → logprob: -10.037216186523438
    10. '-inf' → logprob: -10.537216186523438

Token 548: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08179759979248047
    2. '-' → logprob: -2.5817975997924805
    3. '1' → logprob: -6.9567975997924805
    4. 'float' → logprob: -7.5817975997924805
    5. ' ' → logprob: -7.7067975997924805
    6. '100' → logprob: -8.45679759979248
    7. ' -' → logprob: -9.08179759979248
    8. '   ' → logprob: -9.20679759979248
    9. '-inf' → logprob: -9.33179759979248
    10. '-s' → logprob: -9.95679759979248

Token 549: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.207344189286232
    2. '.' → logprob: -2.0823442935943604
    3. ')
' → logprob: -2.8323442935943604
    4. '0' → logprob: -6.207344055175781
    5. ',' → logprob: -6.582344055175781
    6. '   ' → logprob: -8.957344055175781
    7. '),' → logprob: -9.332344055175781
    8. ' ' → logprob: -10.207344055175781
    9. ')

' → logprob: -10.582344055175781
    10. ' )' → logprob: -10.957344055175781

Token 550: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.778209353797138e-05
    2. '5' → logprob: -9.625067710876465
    3. '   ' → logprob: -14.125067710876465
    4. ' ' → logprob: -14.750067710876465
    5. '00' → logprob: -15.625067710876465
    6. '  ' → logprob: -16.37506866455078
    7. '1' → logprob: -16.62506866455078
    8. '       ' → logprob: -16.62506866455078
    9. ')' → logprob: -16.87506866455078
    10. '    ' → logprob: -17.25006866455078

Token 551: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47451332211494446
    2. ')
' → logprob: -0.9745132923126221
    3. ')

' → logprob: -8.474513053894043
    4. '0' → logprob: -9.599513053894043
    5. '   ' → logprob: -10.349513053894043
    6. ' )
' → logprob: -10.474513053894043
    7. '       ' → logprob: -10.724513053894043
    8. ')
' → logprob: -10.849513053894043
    9. '),' → logprob: -10.974513053894043
    10. ',' → logprob: -11.099513053894043

Token 552: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.1054253011243418e-05
    2. '       ' → logprob: -11.500020980834961
    3. '	       ' → logprob: -13.000020980834961
    4. ',' → logprob: -13.250020980834961
    5. '		' → logprob: -13.375020980834961
    6. 'self' → logprob: -13.375020980834961
    7. '   ' → logprob: -13.375020980834961
    8. '          ' → logprob: -14.375020980834961
    9. '               ' → logprob: -14.500020980834961
    10. '         ' → logprob: -15.750020980834961

Token 553: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.016741614788770676
    2. '           ' → logprob: -4.266741752624512
    3. ' self' → logprob: -6.016741752624512
    4. 'Vector' → logprob: -10.016741752624512
    5. ' ' → logprob: -10.641741752624512
    6. '	self' → logprob: -11.016741752624512
    7. '   ' → logprob: -11.141741752624512
    8. '0' → logprob: -11.266741752624512
    9. '               ' → logprob: -11.891741752624512
    10. '       ' → logprob: -12.266741752624512

Token 554: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -0.010500259697437286
    2. 'end' → logprob: -4.885500431060791
    3. '.' → logprob: -5.885500431060791
    4. ' .' → logprob: -9.510499954223633
    5. '=end' → logprob: -11.385499954223633
    6. ':end' → logprob: -11.510499954223633
    7. ' end' → logprob: -12.510499954223633
    8. '   ' → logprob: -13.135499954223633
    9. '	end' → logprob: -13.135499954223633
    10. ' ' → logprob: -13.760499954223633

Token 555: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602301150560379
    2. '=' → logprob: -1.9102301597595215
    3. ' ' → logprob: -12.160229682922363
    4. '	' → logprob: -15.410229682922363
    5. '   ' → logprob: -15.785229682922363
    6. '.' → logprob: -15.910229682922363
    7. '  ' → logprob: -17.28523063659668
    8. ')' → logprob: -17.53523063659668
    9. '=self' → logprob: -17.53523063659668
    10. ',' → logprob: -17.66023063659668

Token 556: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.008684420958161354
    2. ' Vector' → logprob: -4.7586846351623535
    3. 'self' → logprob: -10.508684158325195
    4. '	Vector' → logprob: -10.633684158325195
    5. '           ' → logprob: -11.633684158325195
    6. '   ' → logprob: -12.508684158325195
    7. ' ' → logprob: -13.258684158325195
    8. '  ' → logprob: -13.758684158325195
    9. ' self' → logprob: -13.883684158325195
    10. '    ' → logprob: -15.008684158325195

Token 557: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0003576304006855935
    2. '(' → logprob: -8.000357627868652
    3. '((-' → logprob: -11.125357627868652
    4. ' (-' → logprob: -13.125357627868652
    5. '-' → logprob: -13.375357627868652
    6. '-c' → logprob: -13.625357627868652
    7. '(-(' → logprob: -14.250357627868652
    8. '-b' → logprob: -14.500357627868652
    9. '(
' → logprob: -15.000357627868652
    10. '-self' → logprob: -15.375357627868652

Token 558: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.546478935983032e-05
    2. ' c' → logprob: -10.625025749206543
    3. '(c' → logprob: -15.625025749206543
    4. '_c' → logprob: -15.625025749206543
    5. '   ' → logprob: -16.000024795532227
    6. '-c' → logprob: -16.250024795532227
    7. '	c' → logprob: -16.375024795532227
    8. ' ' → logprob: -16.375024795532227
    9. '/c' → logprob: -16.625024795532227
    10. '  ' → logprob: -17.125024795532227

Token 559: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.48605769872665405
    2. ' /' → logprob: -1.2360577583312988
    3. '/a' → logprob: -2.361057758331299
    4. 'a' → logprob: -10.48605728149414
    5. '/
' → logprob: -10.48605728149414
    6. ' ' → logprob: -11.48605728149414
    7. '/s' → logprob: -11.73605728149414
    8. '   ' → logprob: -12.61105728149414
    9. ' /
' → logprob: -12.86105728149414
    10. '/b' → logprob: -13.17355728149414

Token 560: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000488110730657354
    2. ' a' → logprob: -7.62548828125
    3. ' ' → logprob: -16.87548828125
    4. '	a' → logprob: -17.00048828125
    5. '   ' → logprob: -18.12548828125
    6. '(a' → logprob: -18.12548828125
    7. '[a' → logprob: -19.25048828125
    8. '<a' → logprob: -19.37548828125
    9. ''a' → logprob: -19.50048828125
    10. '*a' → logprob: -19.50048828125

Token 561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010580805974313989
    2. ' ,' → logprob: -9.250105857849121
    3. ',
' → logprob: -12.125105857849121
    4. '   ' → logprob: -13.375105857849121
    5. '0' → logprob: -13.500105857849121
    6. '1' → logprob: -14.750105857849121
    7. '       ' → logprob: -14.875105857849121
    8. ' ' → logprob: -16.250104904174805
    9. '100' → logprob: -17.125104904174805
    10. '           ' → logprob: -17.375104904174805

Token 562: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0147264264523983
    2. '100' → logprob: -4.764726638793945
    3. ' ' → logprob: -5.514726638793945
    4. '10' → logprob: -6.264726638793945
    5. '   ' → logprob: -9.139726638793945
    6. '  ' → logprob: -10.264726638793945
    7. '5' → logprob: -12.514726638793945
    8. '999' → logprob: -13.077226638793945
    9. ' ' → logprob: -13.389726638793945
    10. '
' → logprob: -13.452226638793945

Token 563: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015067375265061855
    2. '100' → logprob: -4.5150675773620605
    3. '10' → logprob: -5.7650675773620605
    4. ' ' → logprob: -7.2650675773620605
    5. '   ' → logprob: -9.015067100524902
    6. '  ' → logprob: -10.515067100524902
    7. '123' → logprob: -12.390067100524902
    8. '5' → logprob: -12.702567100524902
    9. '999' → logprob: -12.890067100524902
    10. '2' → logprob: -12.890067100524902

Token 564: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005895260721445084
    2. 'e' → logprob: -5.630895137786865
    3. '0' → logprob: -6.130895137786865
    4. '000' → logprob: -10.005895614624023
    5. ' .' → logprob: -10.005895614624023
    6. ')' → logprob: -10.755895614624023
    7. '00' → logprob: -13.255895614624023
    8. ' ' → logprob: -14.005895614624023
    9. '   ' → logprob: -14.380895614624023
    10. '1' → logprob: -14.755895614624023

Token 565: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002705250633880496
    2. '5' → logprob: -6.877705097198486
    3. '9' → logprob: -7.127705097198486
    4. '6' → logprob: -7.877705097198486
    5. '1' → logprob: -8.252705574035645
    6. '7' → logprob: -9.377705574035645
    7. '3' → logprob: -9.877705574035645
    8. '2' → logprob: -10.877705574035645
    9. '000' → logprob: -11.127705574035645
    10. '8' → logprob: -11.252705574035645

Token 566: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04891923815011978
    2. ')
' → logprob: -3.048919200897217
    3. '       ' → logprob: -8.048919677734375
    4. ')
' → logprob: -11.923919677734375
    5. '           ' → logprob: -12.798919677734375
    6. ' )' → logprob: -13.673919677734375
    7. '   ' → logprob: -13.798919677734375
    8. ')

' → logprob: -15.298919677734375
    9. '),' → logprob: -15.923919677734375
    10. ' )
' → logprob: -16.423919677734375

Token 567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013731609098613262
    2. 'else' → logprob: -4.638731479644775
    3. ' else' → logprob: -5.638731479644775
    4. 'elif' → logprob: -8.513731956481934
    5. '<|end|>' → logprob: -9.138731956481934
    6. '
' → logprob: -9.763731956481934
    7. '   ' → logprob: -11.763731956481934
    8. ' elif' → logprob: -11.763731956481934
    9. '        
' → logprob: -11.888731956481934
    10. ')' → logprob: -12.638731956481934

Token 568: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.055035293102264404
    2. ' else' → logprob: -3.555035352706909
    3. '       ' → logprob: -3.805035352706909
    4. 'elif' → logprob: -5.93003511428833
    5. '   ' → logprob: -10.555035591125488
    6. '	else' → logprob: -11.305035591125488
    7. ' elif' → logprob: -11.680035591125488
    8. 'el' → logprob: -14.305035591125488
    9. '           ' → logprob: -14.430035591125488
    10. ')' → logprob: -14.930035591125488

Token 569: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18571607768535614
    2. ':
' → logprob: -1.8107160329818726
    3. '           ' → logprob: -5.435716152191162
    4. '       ' → logprob: -6.560716152191162
    5. ' :' → logprob: -9.685715675354004
    6. ' :
' → logprob: -10.060715675354004
    7. '):
' → logprob: -11.435715675354004
    8. 'self' → logprob: -11.560715675354004
    9. '   ' → logprob: -11.560715675354004
    10. '        ' → logprob: -11.935715675354004

Token 570: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.041031572967767715
    2. 'self' → logprob: -3.2910315990448
    3. ' self' → logprob: -6.041031360626221
    4. '       ' → logprob: -7.666031360626221
    5. '   ' → logprob: -9.416031837463379
    6. ' ' → logprob: -10.666031837463379
    7. '	       ' → logprob: -11.291031837463379
    8. '	self' → logprob: -11.541031837463379
    9. '          ' → logprob: -12.916031837463379
    10. 'x' → logprob: -13.291031837463379

Token 571: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0024401010014116764
    2. ' self' → logprob: -6.252439975738525
    3. '           ' → logprob: -7.877439975738525
    4. 'y' → logprob: -9.377440452575684
    5. '   ' → logprob: -10.877440452575684
    6. 'x' → logprob: -11.252440452575684
    7. '	self' → logprob: -12.127440452575684
    8. '       ' → logprob: -12.377440452575684
    9. ' ' → logprob: -13.002440452575684
    10. 't' → logprob: -14.127440452575684

Token 572: '.v' (ID: 5520)
  Prédit: '.b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0001649220648687333
    2. '.' → logprob: -9.500164985656738
    3. ' .' → logprob: -9.875164985656738
    4. 'b' → logprob: -11.250164985656738
    5. '   ' → logprob: -11.250164985656738
    6. '=' → logprob: -12.750164985656738
    7. '.build' → logprob: -13.375164985656738
    8. ' =' → logprob: -13.500164985656738
    9. '..' → logprob: -14.000164985656738
    10. '.set' → logprob: -14.750164985656738

Token 573: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05949857831001282
    2. ' =' → logprob: -3.5594985485076904
    3. 'ec' → logprob: -4.1844987869262695
    4. 'ector' → logprob: -4.3094987869262695
    5. 'ect' → logprob: -7.5594987869262695
    6. 'v' → logprob: -10.80949878692627
    7. 'al' → logprob: -11.30949878692627
    8. 'ectors' → logprob: -11.55949878692627
    9. '=
' → logprob: -11.68449878692627
    10. 'ctor' → logprob: -11.93449878692627

Token 574: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.002201047958806157
    2. ' Vector' → logprob: -6.127201080322266
    3. 'self' → logprob: -12.002201080322266
    4. '	Vector' → logprob: -13.127201080322266
    5. '(Vector' → logprob: -13.252201080322266
    6. '   ' → logprob: -13.377201080322266
    7. '  ' → logprob: -14.252201080322266
    8. '1' → logprob: -14.252201080322266
    9. ' ' → logprob: -14.252201080322266
    10. 'b' → logprob: -14.377201080322266

Token 575: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018205426633358
    2. '(b' → logprob: -4.143205642700195
    3. '(-' → logprob: -6.143205642700195
    4. '((' → logprob: -12.018205642700195
    5. '1' → logprob: -12.643205642700195
    6. '(c' → logprob: -12.768205642700195
    7. 'b' → logprob: -13.518205642700195
    8. '((-' → logprob: -14.143205642700195
    9. ' (' → logprob: -14.393205642700195
    10. '(
' → logprob: -14.393205642700195

Token 576: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5307116508483887
    2. '1' → logprob: -0.9057116508483887
    3. '-b' → logprob: -5.280711650848389
    4. '-' → logprob: -6.155711650848389
    5. ' b' → logprob: -8.655712127685547
    6. '0' → logprob: -9.905712127685547
    7. ' ' → logprob: -10.030712127685547
    8. '(b' → logprob: -11.155712127685547
    9. ' -' → logprob: -11.280712127685547
    10. '	b' → logprob: -11.780712127685547

Token 577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018993634730577469
    2. '1' → logprob: -6.501899242401123
    3. '.' → logprob: -8.251899719238281
    4. ' ,' → logprob: -9.126899719238281
    5. '   ' → logprob: -11.126899719238281
    6. '.,' → logprob: -11.751899719238281
    7. '       ' → logprob: -13.626899719238281
    8. '0' → logprob: -14.126899719238281
    9. ')' → logprob: -14.501899719238281
    10. ',
' → logprob: -14.626899719238281

Token 578: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025040784385055304
    2. '-' → logprob: -6.877503871917725
    3. '-c' → logprob: -6.877503871917725
    4. ' ' → logprob: -8.377504348754883
    5. ' -' → logprob: -9.502504348754883
    6. 'c' → logprob: -10.377504348754883
    7. '
' → logprob: -10.627504348754883
    8. '-a' → logprob: -10.752504348754883
    9. '   ' → logprob: -10.877504348754883
    10. '0' → logprob: -11.502504348754883

Token 579: 'c' (ID: 66)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06574881076812744
    2. '1' → logprob: -3.190748691558838
    3. 'b' → logprob: -3.940748691558838
    4. 'c' → logprob: -6.315748691558838
    5. '-' → logprob: -7.940748691558838
    6. '-a' → logprob: -8.565749168395996
    7. 'Line' → logprob: -8.690749168395996
    8. '(' → logprob: -8.815749168395996
    9. '(a' → logprob: -9.065749168395996
    10. 'line' → logprob: -10.190749168395996

Token 580: ' /' (ID: 820)
  Prédit: '/b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/b' → logprob: -0.23040521144866943
    2. '/a' → logprob: -2.105405330657959
    3. ' /' → logprob: -2.730405330657959
    4. '/' → logprob: -3.980405330657959
    5. 'a' → logprob: -9.9804048538208
    6. 'b' → logprob: -10.3554048538208
    7. '/s' → logprob: -11.1054048538208
    8. '/v' → logprob: -12.2304048538208
    9. '/(' → logprob: -12.2304048538208
    10. ')' → logprob: -12.8554048538208

Token 581: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0325924449716695e-05
    2. ' b' → logprob: -11.75001049041748
    3. 'a' → logprob: -13.00001049041748
    4. '   ' → logprob: -16.500009536743164
    5. '	b' → logprob: -17.875009536743164
    6. '    ' → logprob: -19.125009536743164
    7. ' ' → logprob: -19.250009536743164
    8. '  ' → logprob: -19.625009536743164
    9. '(b' → logprob: -19.625009536743164
    10. '_b' → logprob: -19.750009536743164

Token 582: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010567454155534506
    2. ')
' → logprob: -7.501056671142578
    3. ' )' → logprob: -7.751056671142578
    4. '       ' → logprob: -9.876056671142578
    5. '),' → logprob: -11.751056671142578
    6. '0' → logprob: -13.001056671142578
    7. ',' → logprob: -13.126056671142578
    8. '   ' → logprob: -13.126056671142578
    9. ').' → logprob: -13.501056671142578
    10. ' )
' → logprob: -13.626056671142578

Token 583: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016751834191381931
    2. '<|end|>' → logprob: -7.501675128936768
    3. '       ' → logprob: -8.876675605773926
    4. ' +' → logprob: -9.001675605773926
    5. ' ' → logprob: -9.001675605773926
    6. '+' → logprob: -9.126675605773926
    7. '            
' → logprob: -9.126675605773926
    8. '          ' → logprob: -9.376675605773926
    9. '            ' → logprob: -9.501675605773926
    10. '	       ' → logprob: -9.751675605773926

Token 584: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.021041611209511757
    2. 'return' → logprob: -4.521041393280029
    3. '           ' → logprob: -5.771041393280029
    4. ' self' → logprob: -6.271041393280029
    5. 'Vector' → logprob: -6.521041393280029
    6. 'v' → logprob: -6.646041393280029
    7. '       ' → logprob: -6.896041393280029
    8. 'if' → logprob: -7.646041393280029
    9. 'line' → logprob: -9.646041870117188
    10. '   ' → logprob: -9.771041870117188

Token 585: '.u' (ID: 22262)
  Prédit: '.b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.6677547097206116
    2. '.end' → logprob: -1.0427546501159668
    3. '.v' → logprob: -2.042754650115967
    4. 'end' → logprob: -5.667754650115967
    5. 'v' → logprob: -7.292754650115967
    6. 'b' → logprob: -7.917754650115967
    7. '.build' → logprob: -8.667755126953125
    8. '.' → logprob: -9.792755126953125
    9. '=end' → logprob: -10.292755126953125
    10. '.endpoint' → logprob: -10.792755126953125

Token 586: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022828221321106
    2. '=' → logprob: -1.9102282524108887
    3. ' ' → logprob: -12.660228729248047
    4. '   ' → logprob: -15.535228729248047
    5. 'v' → logprob: -16.160228729248047
    6. '  ' → logprob: -16.160228729248047
    7. 'x' → logprob: -16.535228729248047
    8. '.' → logprob: -16.535228729248047
    9. 'f' → logprob: -16.660228729248047
    10. '	' → logprob: -16.910228729248047

Token 587: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.00997352134436369
    2. ' Vector' → logprob: -4.634973526000977
    3. 'self' → logprob: -8.634973526000977
    4. '	Vector' → logprob: -11.134973526000977
    5. 'Line' → logprob: -12.134973526000977
    6. '(Vector' → logprob: -12.259973526000977
    7. '1' → logprob: -13.009973526000977
    8. ' self' → logprob: -13.384973526000977
    9. '<Vector' → logprob: -13.509973526000977
    10. ' ' → logprob: -13.759973526000977

Token 588: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00035846480750478804
    2. '(-' → logprob: -8.125358581542969
    3. '1' → logprob: -10.000358581542969
    4. '((' → logprob: -12.500358581542969
    5. ' (' → logprob: -12.875358581542969
    6. '(c' → logprob: -13.125358581542969
    7. '(
' → logprob: -13.375358581542969
    8. '(b' → logprob: -13.625358581542969
    9. '(x' → logprob: -13.625358581542969
    10. '(s' → logprob: -14.000358581542969

Token 589: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028210394084453583
    2. '-' → logprob: -6.62782096862793
    3. '-b' → logprob: -7.37782096862793
    4. ' ' → logprob: -7.75282096862793
    5. '0' → logprob: -9.37782096862793
    6. 'b' → logprob: -9.37782096862793
    7. '(' → logprob: -9.62782096862793
    8. '-c' → logprob: -9.75282096862793
    9. ' -' → logprob: -10.25282096862793
    10. 'c' → logprob: -10.75282096862793

Token 590: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01508568786084652
    2. '0' → logprob: -4.390085697174072
    3. ' ,' → logprob: -6.515085697174072
    4. '.' → logprob: -6.890085697174072
    5. ' ' → logprob: -11.140085220336914
    6. ',
' → logprob: -11.390085220336914
    7. '.,' → logprob: -11.890085220336914
    8. '   ' → logprob: -11.890085220336914
    9. ' /' → logprob: -12.390085220336914
    10. '000' → logprob: -12.390085220336914

Token 591: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009832115843892097
    2. ',' → logprob: -4.75983190536499
    3. ' ' → logprob: -6.88483190536499
    4. ' ,' → logprob: -10.009832382202148
    5. ' -' → logprob: -10.134832382202148
    6. ' /' → logprob: -11.134832382202148
    7. '.' → logprob: -11.134832382202148
    8. '   ' → logprob: -11.634832382202148
    9. '/b' → logprob: -11.634832382202148
    10. '-' → logprob: -12.009832382202148

Token 592: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04946102946996689
    2. '0' → logprob: -3.4244611263275146
    3. ' ,' → logprob: -4.1744608879089355
    4. '   ' → logprob: -8.674461364746094
    5. ' ' → logprob: -9.799461364746094
    6. '  ' → logprob: -11.174461364746094
    7. '.' → logprob: -11.174461364746094
    8. '    ' → logprob: -11.174461364746094
    9. ',
' → logprob: -11.924461364746094
    10. ',-' → logprob: -12.549461364746094

Token 593: ' -(' (ID: 66319)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.13575394451618195
    2. '(-(' → logprob: -2.760753870010376
    3. '-(' → logprob: -3.010753870010376
    4. '(' → logprob: -4.635754108428955
    5. ' (-' → logprob: -5.885754108428955
    6. '((-' → logprob: -7.510754108428955
    7. ' -(' → logprob: -7.885754108428955
    8. ' (' → logprob: -8.385753631591797
    9. '0' → logprob: -8.635753631591797
    10. '   ' → logprob: -9.260753631591797

Token 594: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00100422790274024
    2. 'c' → logprob: -7.001004219055176
    3. '-a' → logprob: -10.126004219055176
    4. '(a' → logprob: -10.376004219055176
    5. ' a' → logprob: -11.876004219055176
    6. '-' → logprob: -12.501004219055176
    7. 'b' → logprob: -12.751004219055176
    8. '-c' → logprob: -13.251004219055176
    9. '-(' → logprob: -13.376004219055176
    10. '(c' → logprob: -13.751004219055176

Token 595: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5423556566238403
    2. '+c' → logprob: -1.7923556566238403
    3. ' +' → logprob: -1.9173556566238403
    4. '+b' → logprob: -2.292355537414551
    5. '+a' → logprob: -6.167355537414551
    6. ')' → logprob: -6.792355537414551
    7. '*' → logprob: -7.417355537414551
    8. ')/' → logprob: -9.66735553741455
    9. '1' → logprob: -10.04235553741455
    10. '*c' → logprob: -11.04235553741455

Token 596: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.3358446166384965e-05
    2. ' b' → logprob: -9.875053405761719
    3. '   ' → logprob: -14.000053405761719
    4. 'c' → logprob: -14.250053405761719
    5. '	b' → logprob: -16.25005340576172
    6. ' ' → logprob: -16.37505340576172
    7. '1' → logprob: -16.75005340576172
    8. '(b' → logprob: -17.00005340576172
    9. 'a' → logprob: -17.37505340576172
    10. '  ' → logprob: -17.50005340576172

Token 597: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029700954910367727
    2. ')/' → logprob: -5.877970218658447
    3. '*' → logprob: -8.752969741821289
    4. ')/(' → logprob: -12.377969741821289
    5. '   ' → logprob: -13.627969741821289
    6. ' )' → logprob: -13.752969741821289
    7. '*)' → logprob: -15.127969741821289
    8. '  ' → logprob: -15.377969741821289
    9. ' ' → logprob: -16.12796974182129
    10. ')*' → logprob: -16.75296974182129

Token 598: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.2000812143087387
    2. '*' → logprob: -2.5750811100006104
    3. '/c' → logprob: -2.5750811100006104
    4. ' /' → logprob: -4.0750813484191895
    5. '*c' → logprob: -5.0750813484191895
    6. '/b' → logprob: -6.3250813484191895
    7. '/a' → logprob: -6.9500813484191895
    8. '   ' → logprob: -6.9500813484191895
    9. ')' → logprob: -7.0750813484191895
    10. ' ' → logprob: -8.450080871582031

Token 599: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000344044849043712
    2. ' b' → logprob: -8.000344276428223
    3. 'a' → logprob: -11.750344276428223
    4. '   ' → logprob: -15.125344276428223
    5. '(b' → logprob: -16.125343322753906
    6. ' ' → logprob: -16.500343322753906
    7. '	b' → logprob: -17.250343322753906
    8. '
' → logprob: -17.375343322753906
    9. 'c' → logprob: -17.500343322753906
    10. '    ' → logprob: -17.750343322753906

Token 600: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001625379954930395
    2. ' )' → logprob: -9.125162124633789
    3. ')
' → logprob: -10.000162124633789
    4. '       ' → logprob: -12.250162124633789
    5. '())' → logprob: -14.000162124633789
    6. '   ' → logprob: -14.500162124633789
    7. ' ' → logprob: -14.750162124633789
    8. '0' → logprob: -15.125162124633789
    9. '           ' → logprob: -15.375162124633789
    10. '))' → logprob: -15.500162124633789

Token 601: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 602: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 603: ' vec' (ID: 10563)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.7460302114486694
    2. 'b' → logprob: -1.7460302114486694
    3. 'distance' → logprob: -2.121030330657959
    4. '__' → logprob: -3.246030330657959
    5. 'inter' → logprob: -3.621030330657959
    6. 'build' → logprob: -3.621030330657959
    7. 'dist' → logprob: -4.121030330657959
    8. 'length' → logprob: -4.121030330657959
    9. 'direction' → logprob: -4.496030330657959
    10. ' b' → logprob: -4.871030330657959

Token 604: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5977908968925476
    2. '()' → logprob: -0.9727908968925476
    3. 'or' → logprob: -2.9727909564971924
    4. 'tor' → logprob: -4.472790718078613
    5. '(' → logprob: -5.097790718078613
    6. 'ector' → logprob: -6.347790718078613
    7. '()(' → logprob: -7.847790718078613
    8. '():' → logprob: -8.847790718078613
    9. ' =' → logprob: -8.972790718078613
    10. '=' → logprob: -9.097790718078613

Token 605: '):
' (ID: 1883)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5710709691047668
    2. '():' → logprob: -1.446070909500122
    3. '(self' → logprob: -2.696070909500122
    4. '):' → logprob: -3.196070909500122
    5. ')' → logprob: -3.446070909500122
    6. '())' → logprob: -3.821070909500122
    7. '()):
' → logprob: -3.946070909500122
    8. '():
' → logprob: -4.571071147918701
    9. '):
' → logprob: -6.571071147918701
    10. '(' → logprob: -7.196071147918701

Token 606: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7267429828643799
    2. 'return' → logprob: -0.9767429828643799
    3. '   ' → logprob: -1.9767429828643799
    4. '       ' → logprob: -6.601742744445801
    5. '	return' → logprob: -9.4767427444458
    6. ' ' → logprob: -10.8517427444458
    7. ':return' → logprob: -12.7267427444458
    8. '{return' → logprob: -13.1017427444458
    9. '  ' → logprob: -13.2267427444458
    10. '    ' → logprob: -14.6017427444458

Token 607: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0033944444730877876
    2. '       ' → logprob: -6.003394603729248
    3. ' return' → logprob: -7.003394603729248
    4. '	return' → logprob: -12.12839412689209
    5. 'self' → logprob: -13.00339412689209
    6. '   ' → logprob: -13.37839412689209
    7. '	' → logprob: -16.003395080566406
    8. '
' → logprob: -16.253395080566406
    9. ':return' → logprob: -17.128395080566406
    10. ' ' → logprob: -17.378395080566406

Token 608: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004174917936325073
    2. ' self' → logprob: -5.504174709320068
    3. 'Vector' → logprob: -9.254175186157227
    4. ' Vector' → logprob: -14.629175186157227
    5. 'Line' → logprob: -15.754175186157227
    6. '   ' → logprob: -16.504175186157227
    7. '(self' → logprob: -16.629175186157227
    8. 'Self' → logprob: -16.879175186157227
    9. '	self' → logprob: -17.004175186157227
    10. '[self' → logprob: -18.129175186157227

Token 609: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -1.7835754988482222e-05
    2. 'end' → logprob: -12.125018119812012
    3. ' .' → logprob: -12.250018119812012
    4. '.' → logprob: -12.750018119812012
    5. '.sub' → logprob: -13.125018119812012
    6. '.b' → logprob: -14.500018119812012
    7. '.line' → logprob: -15.125018119812012
    8. '   ' → logprob: -15.250018119812012
    9. '.e' → logprob: -15.375018119812012
    10. ':end' → logprob: -15.875018119812012

Token 610: '.sub' (ID: 7619)
  Prédit: '.sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sub' → logprob: -0.004693442024290562
    2. '.' → logprob: -5.504693508148193
    3. 'sub' → logprob: -7.879693508148193
    4. ' .' → logprob: -8.629693031311035
    5. '.add' → logprob: -10.129693031311035
    6. ' ' → logprob: -11.629693031311035
    7. ' -' → logprob: -12.879693031311035
    8. '.subtract' → logprob: -13.379693031311035
    9. '   ' → logprob: -13.504693031311035
    10. ' sub' → logprob: -13.629693031311035

Token 611: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.165027217415627e-05
    2. 'self' → logprob: -11.000021934509277
    3. '(' → logprob: -12.250021934509277
    4. ' self' → logprob: -16.37502098083496
    5. '(
' → logprob: -18.00002098083496
    6. '(this' → logprob: -18.37502098083496
    7. ' (' → logprob: -18.75002098083496
    8. '	self' → logprob: -19.00002098083496
    9. '(s' → logprob: -19.87502098083496
    10. '=self' → logprob: -20.00002098083496

Token 612: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.014582532458007336
    2. 'self' → logprob: -4.264582633972168
    3. '.self' → logprob: -8.139582633972168
    4. 'b' → logprob: -9.514582633972168
    5. ').' → logprob: -10.639582633972168
    6. ' self' → logprob: -11.514582633972168
    7. '.' → logprob: -11.514582633972168
    8. '   ' → logprob: -13.139582633972168
    9. ' .' → logprob: -13.264582633972168
    10. '.s' → logprob: -13.264582633972168

Token 613: 'gn' (ID: 5900)
  Prédit: 'gn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gn' → logprob: -7.541112427134067e-05
    2. 'g' → logprob: -9.500075340270996
    3. 'eg' → logprob: -14.625075340270996
    4. 'г' → logprob: -17.875076293945312
    5. '_g' → logprob: -18.125076293945312
    6. 'gm' → logprob: -18.250076293945312
    7. 'egin' → logprob: -18.375076293945312
    8. 'gin' → logprob: -18.375076293945312
    9. '   ' → logprob: -19.125076293945312
    10. 'ng' → logprob: -19.250076293945312

Token 614: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029790988191962242
    2. '())' → logprob: -3.5297908782958984
    3. '()' → logprob: -10.404790878295898
    4. ')
' → logprob: -12.029790878295898
    5. '())
' → logprob: -13.779790878295898
    6. ').' → logprob: -13.779790878295898
    7. ' )' → logprob: -14.279790878295898
    8. ' ())' → logprob: -14.404790878295898
    9. ')

' → logprob: -14.779790878295898
    10. ')return' → logprob: -16.4047908782959

Token 615: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42693933844566345
    2. '<|end|>' → logprob: -1.1769393682479858
    3. '
' → logprob: -4.051939487457275
    4. ')' → logprob: -5.176939487457275
    5. ' ' → logprob: -5.426939487457275
    6. 'def' → logprob: -5.551939487457275
    7. '<|end|>' → logprob: -5.926939487457275
    8. '    
' → logprob: -6.676939487457275
    9. ' def' → logprob: -7.051939487457275
    10. '[' → logprob: -7.426939487457275

Token 616: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 617: ' projection' (ID: 41244)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.0769139528274536
    2. 'proj' → logprob: -2.951913833618164
    3. 'direction' → logprob: -2.951913833618164
    4. ' point' → logprob: -3.076913833618164
    5. 'angle' → logprob: -3.076913833618164
    6. 'dist' → logprob: -3.076913833618164
    7. 'vec' → logprob: -3.201913833618164
    8. 'project' → logprob: -3.451913833618164
    9. 'dir' → logprob: -3.576913833618164
    10. 'arg' → logprob: -3.701913833618164

Token 618: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.750004768371582
    3. '(s' → logprob: -13.625004768371582
    4. ' (' → logprob: -13.875004768371582
    5. 'def' → logprob: -17.1250057220459
    6. '   ' → logprob: -17.3750057220459
    7. 'self' → logprob: -18.1250057220459
    8. '(this' → logprob: -18.2500057220459
    9. '(sel' → logprob: -18.2500057220459
    10. '(
' → logprob: -18.5000057220459

Token 619: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023739055905025452
    2. ',' → logprob: -8.500237464904785
    3. ' (' → logprob: -11.250237464904785
    4. '(' → logprob: -11.625237464904785
    5. ')(' → logprob: -13.000237464904785
    6. 'self' → logprob: -13.000237464904785
    7. ',self' → logprob: -13.000237464904785
    8. '   ' → logprob: -13.125237464904785
    9. 'def' → logprob: -14.250237464904785
    10. '(line' → logprob: -14.500237464904785

Token 620: ' point' (ID: 2438)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6677170991897583
    2. 'point' → logprob: -1.2927170991897583
    3. 'self' → logprob: -1.6677170991897583
    4. 'other' → logprob: -4.792716979980469
    5. 'pt' → logprob: -5.042716979980469
    6. ' p' → logprob: -5.667716979980469
    7. ' point' → logprob: -5.792716979980469
    8. ' self' → logprob: -6.792716979980469
    9. 'v' → logprob: -7.167716979980469
    10. ' other' → logprob: -8.917716979980469

Token 621: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3195962607860565
    2. '):' → logprob: -1.319596290588379
    3. '):
' → logprob: -5.194596290588379
    4. '(self' → logprob: -8.319596290588379
    5. ' ):' → logprob: -8.319596290588379
    6. '   ' → logprob: -9.569596290588379
    7. '(' → logprob: -9.569596290588379
    8. ' ,' → logprob: -9.819596290588379
    9. '       ' → logprob: -10.194596290588379
    10. 'self' → logprob: -11.319596290588379

Token 622: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10030306875705719
    2. 'v' → logprob: -3.1003031730651855
    3. '   ' → logprob: -3.1003031730651855
    4. 'vec' → logprob: -6.2253031730651855
    5. 'p' → logprob: -6.7253031730651855
    6. 't' → logprob: -7.6003031730651855
    7. 'ab' → logprob: -7.8503031730651855
    8. 'ap' → logprob: -7.9753031730651855
    9. 'u' → logprob: -8.850302696228027
    10. 'b' → logprob: -8.975302696228027

Token 623: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.4240535795688629
    2. 'ap' → logprob: -1.9240535497665405
    3. 'vec' → logprob: -2.42405366897583
    4. 'line' → logprob: -3.04905366897583
    5. 'ab' → logprob: -3.67405366897583
    6. 'base' → logprob: -4.29905366897583
    7. '   ' → logprob: -5.67405366897583
    8. 'p' → logprob: -5.79905366897583
    9. 'l' → logprob: -5.92405366897583
    10. 't' → logprob: -6.29905366897583

Token 624: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018271684646606445
    2. '=' → logprob: -4.018271446228027
    3. 'ec' → logprob: -10.268271446228027
    4. '   ' → logprob: -10.518271446228027
    5. 'ector' → logprob: -10.768271446228027
    6. 'v' → logprob: -10.893271446228027
    7. 'ect' → logprob: -12.018271446228027
    8. '       ' → logprob: -12.518271446228027
    9. '_vec' → logprob: -12.643271446228027
    10. 'e' → logprob: -13.268271446228027

Token 625: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011311407200992107
    2. 'point' → logprob: -4.5113115310668945
    3. ' self' → logprob: -8.261311531066895
    4. ' point' → logprob: -13.261311531066895
    5. '(self' → logprob: -13.886311531066895
    6. 'line' → logprob: -14.136311531066895
    7. '   ' → logprob: -15.011311531066895
    8. '	self' → logprob: -15.136311531066895
    9. ' ' → logprob: -15.511311531066895
    10. 'vector' → logprob: -15.511311531066895

Token 626: '.vec' (ID: 161083)
  Prédit: '.vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vec' → logprob: -0.00010211274639004841
    2. '.vector' → logprob: -9.875102043151855
    3. '().' → logprob: -10.375102043151855
    4. '.' → logprob: -12.125102043151855
    5. ' .' → logprob: -12.375102043151855
    6. 'vec' → logprob: -12.625102043151855
    7. '.ve' → logprob: -13.000102043151855
    8. '.end' → logprob: -13.375102043151855
    9. '.v' → logprob: -14.125102043151855
    10. '.sub' → logprob: -14.375102043151855

Token 627: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.259371280670166
    2. '()' → logprob: -1.759371280670166
    3. '().' → logprob: -2.884371280670166
    4. '()
' → logprob: -8.009370803833008
    5. '().
' → logprob: -10.134370803833008
    6. '()

' → logprob: -10.884370803833008
    7. '   ' → logprob: -11.634370803833008
    8. '       ' → logprob: -11.884370803833008
    9. '.' → logprob: -12.634370803833008
    10. '(' → logprob: -13.384370803833008

Token 628: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009282466024160385
    2. 'v' → logprob: -6.50928258895874
    3. 'u' → logprob: -6.63428258895874
    4. '=' → logprob: -6.88428258895874
    5. 'w' → logprob: -7.00928258895874
    6. 't' → logprob: -7.25928258895874
    7. 'p' → logprob: -7.50928258895874
    8. ' =' → logprob: -7.63428258895874
    9. 'dot' → logprob: -7.63428258895874
    10. 'd' → logprob: -8.009282112121582

Token 629: ' u' (ID: 337)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.13365702331066132
    2. 'u' (adapté à ' u') → logprob: -2.1336569786071777
    3. 'ap' → logprob: -6.133656978607178
    4. 'pv' → logprob: -6.133656978607178
    5. 'vp' → logprob: -6.758656978607178
    6. 'return' → logprob: -8.008657455444336
    7. 'p' → logprob: -8.633657455444336
    8. 't' → logprob: -8.883657455444336
    9. 'bp' → logprob: -9.008657455444336
    10. '   ' → logprob: -9.383657455444336

Token 630: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408369183540344
    2. '=' → logprob: -0.974083662033081
    3. 'v' → logprob: -13.72408390045166
    4. '   ' → logprob: -13.84908390045166
    5. ' ' → logprob: -13.97408390045166
    6. 'dot' → logprob: -13.97408390045166
    7. 'p' → logprob: -14.09908390045166
    8. '=v' → logprob: -14.34908390045166
    9. '.' → logprob: -15.09908390045166
    10. 'n' → logprob: -15.34908390045166

Token 631: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0001227276516146958
    2. ' point' → logprob: -9.625123023986816
    3. 'v' → logprob: -10.375123023986816
    4. 'Vector' → logprob: -11.125123023986816
    5. 'self' → logprob: -12.125123023986816
    6. 'line' → logprob: -13.375123023986816
    7. '   ' → logprob: -14.125123023986816
    8. 'Point' → logprob: -14.125123023986816
    9. 'vector' → logprob: -14.125123023986816
    10. '	point' → logprob: -14.750123023986816

Token 632: '.sub' (ID: 7619)
  Prédit: '.sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sub' → logprob: -0.001977287931367755
    2. '.' → logprob: -6.251977443695068
    3. 'sub' → logprob: -10.25197696685791
    4. ' .' → logprob: -11.75197696685791
    5. '
' → logprob: -12.87697696685791
    6. '   ' → logprob: -13.25197696685791
    7. '.add' → logprob: -14.25197696685791
    8. '.subtract' → logprob: -16.001977920532227
    9. '.s' → logprob: -16.251977920532227
    10. ' ' → logprob: -16.376977920532227

Token 633: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.8087270038668066e-05
    2. '(' → logprob: -11.125027656555176
    3. 'self' → logprob: -11.250027656555176
    4. ' self' → logprob: -16.875028610229492
    5. '       ' → logprob: -17.000028610229492
    6. ' (' → logprob: -17.125028610229492
    7. '(
' → logprob: -17.250028610229492
    8. '(this' → logprob: -17.750028610229492
    9. '	self' → logprob: -17.875028610229492
    10. '=self' → logprob: -19.250028610229492

Token 634: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.014438255690038204
    2. 'self' → logprob: -4.264438152313232
    3. 'b' → logprob: -8.88943862915039
    4. ').' → logprob: -10.26443862915039
    5. ')' → logprob: -10.38943862915039
    6. '.' → logprob: -10.63943862915039
    7. '.self' → logprob: -11.26443862915039
    8. '.s' → logprob: -11.38943862915039
    9. '       ' → logprob: -11.51443862915039
    10. ' self' → logprob: -12.51443862915039

Token 635: 'gn' (ID: 5900)
  Prédit: 'gn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gn' → logprob: 0.0
    2. ' gn' → logprob: -16.875
    3. 'g' → logprob: -17.625
    4. 'jn' → logprob: -19.125
    5. 'yn' → logprob: -19.875
    6. '_g' → logprob: -20.75
    7. '       ' → logprob: -20.875
    8. 'ng' → logprob: -20.875
    9. 'GN' → logprob: -20.875
    10. '```' → logprob: -21.25

Token 636: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08568893373012543
    2. ')' → logprob: -2.585688829421997
    3. '       ' → logprob: -5.335689067840576
    4. '())
' → logprob: -6.710689067840576
    5. ').' → logprob: -8.460688591003418
    6. ')
' → logprob: -8.585688591003418
    7. ' )
' → logprob: -8.835688591003418
    8. '()' → logprob: -9.335688591003418
    9. '())' → logprob: -9.710688591003418
    10. '()
' → logprob: -10.460688591003418

Token 637: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013252463191747665
    2. 't' → logprob: -4.638252258300781
    3. 'd' → logprob: -6.763252258300781
    4. 'return' → logprob: -6.888252258300781
    5. 'n' → logprob: -8.013252258300781
    6. 'dot' → logprob: -8.013252258300781
    7. 's' → logprob: -9.263252258300781
    8. '   ' → logprob: -9.513252258300781
    9. 'k' → logprob: -9.638252258300781
    10. 'p' → logprob: -9.638252258300781

Token 638: ' k' (ID: 372)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05698684602975845
    2. 'k' (adapté à ' k') → logprob: -3.3069868087768555
    3. 'return' → logprob: -4.8069868087768555
    4. '   ' → logprob: -5.5569868087768555
    5. 'dot' → logprob: -6.5569868087768555
    6. 'r' → logprob: -6.8069868087768555
    7. 'd' → logprob: -7.0569868087768555
    8. '       ' → logprob: -7.3069868087768555
    9. 'a' → logprob: -8.181986808776855
    10. 's' → logprob: -8.306986808776855

Token 639: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014213353395462
    2. ' =' → logprob: -1.7014213800430298
    3. '.' → logprob: -12.326421737670898
    4. '=v' → logprob: -13.451421737670898
    5. '   ' → logprob: -14.201421737670898
    6. ',' → logprob: -15.326421737670898
    7. ' ' → logprob: -15.451421737670898
    8. 'v' → logprob: -15.576421737670898
    9. ')' → logprob: -15.701421737670898
    10. '.=' → logprob: -15.826421737670898

Token 640: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0006415460375137627
    2. 'u' → logprob: -7.750641345977783
    3. ' v' → logprob: -8.750641822814941
    4. '(v' → logprob: -10.000641822814941
    5. '(u' → logprob: -12.375641822814941
    6. '   ' → logprob: -13.625641822814941
    7. 'max' → logprob: -14.000641822814941
    8. '	v' → logprob: -15.000641822814941
    9. ' u' → logprob: -15.375641822814941
    10. 'self' → logprob: -16.375640869140625

Token 641: '.dot' (ID: 52692)
  Prédit: '.dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dot' → logprob: -0.0007177923689596355
    2. '.' → logprob: -7.250717639923096
    3. ' .' → logprob: -13.000718116760254
    4. 'dot' → logprob: -13.750718116760254
    5. '.vector' → logprob: -14.125718116760254
    6. '.Dot' → logprob: -14.375718116760254
    7. '..' → logprob: -14.500718116760254
    8. '.times' → logprob: -14.750718116760254
    9. '.x' → logprob: -15.000718116760254
    10. ').' → logprob: -15.000718116760254

Token 642: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.125000953674316
    3. 'u' → logprob: -15.125000953674316
    4. '(v' → logprob: -18.375
    5. ' (' → logprob: -19.25
    6. ' u' → logprob: -19.5
    7. '(
' → logprob: -19.75
    8. '	u' → logprob: -21.0
    9. '[u' → logprob: -22.25
    10. '(k' → logprob: -22.5

Token 643: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001427538663847372
    2. ')/' → logprob: -9.000143051147461
    3. ' )' → logprob: -11.875143051147461
    4. '())' → logprob: -12.125143051147461
    5. '(v' → logprob: -13.000143051147461
    6. '   ' → logprob: -13.375143051147461
    7. '       ' → logprob: -13.875143051147461
    8. '()' → logprob: -14.750143051147461
    9. ')
' → logprob: -14.750143051147461
    10. '')' → logprob: -15.500143051147461

Token 644: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5576250553131104
    2. ' /' → logprob: -1.0576250553131104
    3. '()' → logprob: -2.5576250553131104
    4. '()/' → logprob: -6.057624816894531
    5. '/v' → logprob: -8.557624816894531
    6. '/k' → logprob: -10.432624816894531
    7. '/
' → logprob: -10.557624816894531
    8. '       ' → logprob: -10.932624816894531
    9. '(' → logprob: -11.182624816894531
    10. ')' → logprob: -11.682624816894531

Token 645: ' v' (ID: 323)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.3795269727706909
    2. 'v' → logprob: -1.254526972770691
    3. ' v' → logprob: -3.8795270919799805
    4. ' (' → logprob: -4.6295270919799805
    5. '(' → logprob: -9.12952709197998
    6. '   ' → logprob: -11.12952709197998
    7. ' ' → logprob: -11.62952709197998
    8. '((' → logprob: -11.62952709197998
    9. '(max' → logprob: -11.87952709197998
    10. '	v' → logprob: -12.00452709197998

Token 646: '.norm' (ID: 73834)
  Prédit: '.dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dot' → logprob: -0.013278339058160782
    2. '.norm' → logprob: -4.388278484344482
    3. '.x' → logprob: -7.263278484344482
    4. 'dot' → logprob: -11.138278007507324
    5. '.cross' → logprob: -11.513278007507324
    6. '.len' → logprob: -11.763278007507324
    7. '().' → logprob: -11.763278007507324
    8. '.times' → logprob: -12.013278007507324
    9. '.vec' → logprob: -12.513278007507324
    10. '.length' → logprob: -12.513278007507324

Token 647: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.512236498361744e-07
    2. '().__' → logprob: -15.000000953674316
    3. '2' → logprob: -16.75
    4. '()*' → logprob: -17.0
    5. '()`' → logprob: -17.0
    6. '()
' → logprob: -17.375
    7. '**' → logprob: -17.5
    8. '```' → logprob: -18.5
    9. '（）' → logprob: -19.25
    10. '()==' → logprob: -19.5

Token 648: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08796616643667221
    2. '**' → logprob: -2.587966203689575
    3. '2' → logprob: -5.212965965270996
    4. '()/' → logprob: -6.337965965270996
    5. '()*' → logprob: -6.462965965270996
    6. '²' → logprob: -9.712965965270996
    7. '       ' → logprob: -9.962965965270996
    8. '*' → logprob: -10.337965965270996
    9. '()
' → logprob: -10.837965965270996
    10. ' **' → logprob: -10.837965965270996

Token 649: ' h' (ID: 312)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10872280597686768
    2. 'v' → logprob: -3.733722686767578
    3. '(v' → logprob: -3.733722686767578
    4. '**' → logprob: -3.983722686767578
    5. '/v' → logprob: -4.733722686767578
    6. '()' → logprob: -5.108722686767578
    7. '(' → logprob: -5.358722686767578
    8. 'k' → logprob: -5.483722686767578
    9. ' v' → logprob: -5.858722686767578
    10. ' ' → logprob: -6.483722686767578

Token 650: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0053522284142673016
    2. '=' → logprob: -5.255352020263672
    3. '=v' → logprob: -9.755352020263672
    4. 'v' → logprob: -10.380352020263672
    5. '   ' → logprob: -11.880352020263672
    6. '2' → logprob: -11.880352020263672
    7. ',' → logprob: -12.755352020263672
    8. '²' → logprob: -13.130352020263672
    9. '_vector' → logprob: -13.380352020263672
    10. '*v' → logprob: -13.755352020263672

Token 651: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0022831226233392954
    2. ' v' → logprob: -7.127283096313477
    3. 'Vector' → logprob: -7.377283096313477
    4. 'k' → logprob: -7.627283096313477
    5. 'self' → logprob: -8.627283096313477
    6. 'u' → logprob: -9.877283096313477
    7. '   ' → logprob: -10.127283096313477
    8. '	v' → logprob: -10.502283096313477
    9. '(v' → logprob: -10.627283096313477
    10. 'vector' → logprob: -11.252283096313477

Token 652: '.unit' (ID: 51513)
  Prédit: '.times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.times' → logprob: -6.694766489090398e-05
    2. '.unit' → logprob: -10.000066757202148
    3. '.' → logprob: -12.125066757202148
    4. 'times' → logprob: -12.250066757202148
    5. '.norm' → logprob: -12.250066757202148
    6. '.normal' → logprob: -13.000066757202148
    7. ' .' → logprob: -13.000066757202148
    8. '.multiply' → logprob: -14.625066757202148
    9. '   ' → logprob: -14.875066757202148
    10. '.normalize' → logprob: -15.000066757202148

Token 653: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0431058369576931
    2. '()' → logprob: -3.1681058406829834
    3. '()*' → logprob: -9.293106079101562
    4. 'times' → logprob: -12.293106079101562
    5. '   ' → logprob: -12.668106079101562
    6. '()
' → logprob: -13.043106079101562
    7. ' ().' → logprob: -13.543106079101562
    8. '(' → logprob: -14.293106079101562
    9. '()).' → logprob: -14.543106079101562
    10. '().__' → logprob: -14.918106079101562

Token 654: 'times' (ID: 32499)
  Prédit: 'times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -3.128163257315464e-07
    2. 'tim' → logprob: -16.125
    3. ' times' → logprob: -16.75
    4. '.times' → logprob: -17.375
    5. 'dot' → logprob: -17.75
    6. 't' → logprob: -19.125
    7. 'time' → logprob: -19.5
    8. '_times' → logprob: -19.625
    9. '   ' → logprob: -20.125
    10. 'Times' → logprob: -20.125

Token 655: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -5.061676347395405e-05
    2. 'k' → logprob: -10.00005054473877
    3. '(' → logprob: -12.25005054473877
    4. ' (' → logprob: -15.50005054473877
    5. '((' → logprob: -16.750051498413086
    6. '(h' → logprob: -18.250051498413086
    7. '(int' → logprob: -18.500051498413086
    8. '(
' → logprob: -18.750051498413086
    9. '(s' → logprob: -18.750051498413086
    10. '(abs' → logprob: -21.250051498413086

Token 656: ')
' (ID: 446)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014737824909389019
    2. '())' → logprob: -5.014737606048584
    3. '()
' → logprob: -5.139737606048584
    4. ')' → logprob: -6.264737606048584
    5. '(' → logprob: -8.639738082885742
    6. '       ' → logprob: -11.389738082885742
    7. ' ()' → logprob: -11.514738082885742
    8. ' ())' → logprob: -11.764738082885742
    9. '())
' → logprob: -11.889738082885742
    10. '().' → logprob: -12.639738082885742

Token 657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0366191640496254
    2. 'return' → logprob: -3.411619186401367
    3. ' return' → logprob: -5.911619186401367
    4. '   ' → logprob: -8.786619186401367
    5. '	return' → logprob: -9.286619186401367
    6. '	' → logprob: -11.911619186401367
    7. '
' → logprob: -12.161619186401367
    8. '           ' → logprob: -14.036619186401367
    9. '	   ' → logprob: -14.161619186401367
    10. ' ' → logprob: -14.661619186401367

Token 658: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01642165146768093
    2. '       ' → logprob: -4.891421794891357
    3. ' return' → logprob: -4.891421794891357
    4. '   ' → logprob: -7.266421794891357
    5. '	return' → logprob: -8.3914213180542
    6. 'p' → logprob: -8.5164213180542
    7. 'result' → logprob: -10.2664213180542
    8. 'proj' → logprob: -10.5164213180542
    9. 'res' → logprob: -10.6414213180542
    10. 'r' → logprob: -11.1414213180542

Token 659: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014275862835347652
    2. ' self' → logprob: -4.264276027679443
    3. 'h' → logprob: -9.139275550842285
    4. 'Vector' → logprob: -12.514275550842285
    5. '	self' → logprob: -15.139275550842285
    6. ' ' → logprob: -15.514275550842285
    7. ' h' → logprob: -15.639275550842285
    8. 'Line' → logprob: -15.639275550842285
    9. '   ' → logprob: -16.2642765045166
    10. ' Vector' → logprob: -16.3892765045166

Token 660: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -7.226628895296017e-06
    2. 'b' → logprob: -12.500007629394531
    3. ' .' → logprob: -12.875007629394531
    4. '.' → logprob: -15.500007629394531
    5. '   ' → logprob: -15.625007629394531
    6. ').' → logprob: -16.50000762939453
    7. '`.' → logprob: -16.50000762939453
    8. '```' → logprob: -16.75000762939453
    9. '	b' → logprob: -16.87500762939453
    10. '().' → logprob: -17.00000762939453

Token 661: 'gn' (ID: 5900)
  Prédit: 'gn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gn' → logprob: -0.00010139751975657418
    2. 'g' → logprob: -9.250101089477539
    3. 'n' → logprob: -12.250101089477539
    4. 'ng' → logprob: -15.125101089477539
    5. ' gn' → logprob: -16.12510108947754
    6. 'gne' → logprob: -18.37510108947754
    7. 'г' → logprob: -18.62510108947754
    8. 'nd' → logprob: -19.75010108947754
    9. ' g' → logprob: -19.75010108947754
    10. '```' → logprob: -20.87510108947754

Token 662: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.20181617140769958
    2. '.' → logprob: -1.701816201210022
    3. ' .' → logprob: -7.951816082000732
    4. '().' → logprob: -10.57681655883789
    5. 'add' → logprob: -11.07681655883789
    6. '+.' → logprob: -12.82681655883789
    7. '   ' → logprob: -12.95181655883789
    8. '.Add' → logprob: -14.20181655883789
    9. ' add' → logprob: -14.32681655883789
    10. ').' → logprob: -14.45181655883789

Token 663: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.75000286102295
    3. ' (' → logprob: -18.125003814697266
    4. '(
' → logprob: -18.875003814697266
    5. 'h' → logprob: -19.500003814697266
    6. '((' → logprob: -19.750003814697266
    7. '(k' → logprob: -20.125003814697266
    8. '(H' → logprob: -21.250003814697266
    9. '(u' → logprob: -21.750003814697266
    10. '```' → logprob: -21.875003814697266

Token 664: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01013591792434454
    2. '())' → logprob: -4.760136127471924
    3. '()' → logprob: -6.510136127471924
    4. '   ' → logprob: -11.635135650634766
    5. ' )' → logprob: -12.135135650634766
    6. '<|end|>' → logprob: -12.510135650634766
    7. ' ())' → logprob: -12.635135650634766
    8. '       ' → logprob: -12.885135650634766
    9. ')return' → logprob: -13.135135650634766
    10. '(' → logprob: -13.385135650634766

Token 665: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 666: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.382352352142334
    2. '<|end|>' → logprob: -1.882352352142334
    3. 'def' (adapté à ' def') → logprob: -2.007352352142334
    4. '
' → logprob: -4.257352352142334
    5. ')' → logprob: -5.132352352142334
    6. '<|end|>' → logprob: -5.632352352142334
    7. ' def' → logprob: -5.882352352142334
    8. ' ' → logprob: -6.757352352142334
    9. '  ' → logprob: -7.007352352142334
    10. '#' → logprob: -7.632352352142334

Token 667: ' ref' (ID: 2714)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.128065586090088
    2. 'distance' → logprob: -1.253065586090088
    3. ' distance' → logprob: -2.628065586090088
    4. ' dist' → logprob: -3.003065586090088
    5. 'inter' → logprob: -3.253065586090088
    6. 'intersection' → logprob: -3.628065586090088
    7. 'reflect' → logprob: -3.753065586090088
    8. 'projection' → logprob: -4.003065586090088
    9. 'project' → logprob: -4.503065586090088
    10. 'cross' → logprob: -4.503065586090088

Token 668: 'rection' (ID: 36365)
  Prédit: 'lect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lect' → logprob: -0.007680685259401798
    2. 'lection' → logprob: -4.882680892944336
    3. 'l' → logprob: -10.507680892944336
    4. 'lecture' → logprob: -10.632680892944336
    5. '(' → logprob: -11.882680892944336
    6. 'le' → logprob: -12.632680892944336
    7. 'lectron' → logprob: -12.632680892944336
    8. 'er' → logprob: -12.882680892944336
    9. '_' → logprob: -13.632680892944336
    10. '1' → logprob: -14.257680892944336

Token 669: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006248714867979288
    2. 'lection' → logprob: -5.631248950958252
    3. '(' → logprob: -6.506248950958252
    4. 'ection' → logprob: -7.506248950958252
    5. 'lect' → logprob: -8.256248474121094
    6. 'rection' → logprob: -8.256248474121094
    7. 'self' → logprob: -10.881248474121094
    8. 'ction' → logprob: -11.381248474121094
    9. ' (' → logprob: -11.631248474121094
    10. 'er' → logprob: -11.881248474121094

Token 670: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.8921695047756657e-05
    2. 'self' → logprob: -11.500028610229492
    3. '(' → logprob: -11.750028610229492
    4. ')' → logprob: -12.250028610229492
    5. ' (' → logprob: -13.375028610229492
    6. 's' → logprob: -13.875028610229492
    7. ')(' → logprob: -14.125028610229492
    8. ',' → logprob: -14.375028610229492
    9. '   ' → logprob: -14.750028610229492
    10. 'def' → logprob: -14.875028610229492

Token 671: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.011995759792625904
    2. ' point' → logprob: -4.636995792388916
    3. 'self' → logprob: -6.261995792388916
    4. 'p' → logprob: -8.886995315551758
    5. 'other' → logprob: -9.136995315551758
    6. ' self' → logprob: -9.761995315551758
    7. 'line' → logprob: -12.136995315551758
    8. '	point' → logprob: -12.386995315551758
    9. ' p' → logprob: -12.511995315551758
    10. ' other' → logprob: -12.636995315551758

Token 672: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03602023050189018
    2. '):' → logprob: -3.786020278930664
    3. '):
' → logprob: -5.286020278930664
    4. '       ' → logprob: -5.411020278930664
    5. '(self' → logprob: -6.661020278930664
    6. 'self' → logprob: -6.786020278930664
    7. '   ' → logprob: -7.411020278930664
    8. ' self' → logprob: -9.286020278930664
    9. ')' → logprob: -11.036020278930664
    10. ' ,' → logprob: -11.286020278930664

Token 673: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5319220423698425
    2. ' v' → logprob: -0.9069220423698425
    3. 'v' → logprob: -4.781921863555908
    4. '	v' → logprob: -9.031922340393066
    5. ' line' → logprob: -9.406922340393066
    6. ' vector' → logprob: -10.031922340393066
    7. '   ' → logprob: -10.281922340393066
    8. ' #' → logprob: -10.906922340393066
    9. '	' → logprob: -11.406922340393066
    10. ' self' → logprob: -12.156922340393066

Token 674: ' proj' (ID: 16022)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3484089970588684
    2. 'p' → logprob: -1.5984089374542236
    3. 'proj' (adapté à ' proj') → logprob: -2.8484089374542236
    4. 'o' → logprob: -4.973409175872803
    5. 'foot' → logprob: -5.598409175872803
    6. 'projection' → logprob: -5.598409175872803
    7. 'h' → logprob: -5.723409175872803
    8. 'op' → logprob: -5.973409175872803
    9. 'vec' → logprob: -6.223409175872803
    10. '   ' → logprob: -6.348409175872803

Token 675: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2108006328344345
    2. '=' → logprob: -2.0858006477355957
    3. 'ection' → logprob: -2.8358006477355957
    4. '_point' → logprob: -5.210800647735596
    5. 'point' → logprob: -7.710800647735596
    6. 'ect' → logprob: -7.960800647735596
    7. 'ected' → logprob: -8.085800170898438
    8. 'ec' → logprob: -8.835800170898438
    9. '=self' → logprob: -9.210800170898438
    10. '   ' → logprob: -9.460800170898438

Token 676: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002043748099822551
    2. ' self' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.750204086303711
    4. '       ' → logprob: -14.750204086303711
    5. ' ' → logprob: -17.37520408630371
    6. '(self' → logprob: -17.37520408630371
    7. '	self' → logprob: -17.50020408630371
    8. '  ' → logprob: -18.37520408630371
    9. 'elf' → logprob: -18.87520408630371
    10. '    ' → logprob: -18.87520408630371

Token 677: '.pro' (ID: 3231)
  Prédit: '.pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pro' → logprob: -0.0007269674097187817
    2. 'projection' → logprob: -7.25072717666626
    3. '.project' → logprob: -11.125726699829102
    4. '.' → logprob: -13.375726699829102
    5. ' projection' → logprob: -14.625726699829102
    6. '	pro' → logprob: -16.2507266998291
    7. '   ' → logprob: -16.7507266998291
    8. ' .' → logprob: -17.2507266998291
    9. '_projection' → logprob: -17.3757266998291
    10. '(pro' → logprob: -17.8757266998291

Token 678: 'jection' (ID: 11533)
  Prédit: 'jection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jection' → logprob: -3.292907877039397e-06
    2. 'j' → logprob: -14.25000286102295
    3. 'rection' → logprob: -14.87500286102295
    4. 'projection' → logprob: -14.87500286102295
    5. 'tection' → logprob: -14.87500286102295
    6. '```' → logprob: -15.00000286102295
    7. 'ject' → logprob: -15.12500286102295
    8. '``' → logprob: -15.25000286102295
    9. '   ' → logprob: -15.50000286102295
    10. 'jek' → logprob: -16.250003814697266

Token 679: '(point' (ID: 46989)
  Prédit: '(point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(point' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.875001907348633
    3. '(project' → logprob: -15.250001907348633
    4. '(line' → logprob: -15.875001907348633
    5. '(object' → logprob: -16.125001907348633
    6. '(points' → logprob: -16.750001907348633
    7. '(pro' → logprob: -17.250001907348633
    8. '(Point' → logprob: -17.875001907348633
    9. '(p' → logprob: -18.500001907348633
    10. ' (' → logprob: -18.500001907348633

Token 680: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1688825935125351
    2. ')' → logprob: -1.9188826084136963
    3. ').' → logprob: -4.918882369995117
    4. '())
' → logprob: -7.918882369995117
    5. '()' → logprob: -8.043882369995117
    6. ')
' → logprob: -8.543882369995117
    7. '()
' → logprob: -8.793882369995117
    8. '().' → logprob: -9.168882369995117
    9. '   ' → logprob: -9.918882369995117
    10. 'sub' → logprob: -10.043882369995117

Token 681: '       ' (ID: 309)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4992118179798126
    2. '       ' → logprob: -1.4992117881774902
    3. '   ' → logprob: -2.7492117881774902
    4. 'd' → logprob: -3.3742117881774902
    5. 'vec' → logprob: -3.6242117881774902
    6. 'diff' → logprob: -4.49921178817749
    7. ' v' → logprob: -4.87421178817749
    8. '	v' → logprob: -5.62421178817749
    9. 'u' → logprob: -5.62421178817749
    10. 've' → logprob: -5.99921178817749

Token 682: ' return' (ID: 622)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.6353515982627869
    2. 'v' → logprob: -1.0103516578674316
    3. 'return' (adapté à ' return') → logprob: -3.1353516578674316
    4. 'diff' → logprob: -3.2603516578674316
    5. 'd' → logprob: -5.010351657867432
    6. 'h' → logprob: -5.385351657867432
    7. 'to' → logprob: -5.385351657867432
    8. 'vv' → logprob: -6.510351657867432
    9. 'u' → logprob: -6.885351657867432
    10. 'dir' → logprob: -7.260351657867432

Token 683: ' proj' (ID: 16022)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.01237273309379816
    2. ' proj' → logprob: -4.637372970581055
    3. 'self' → logprob: -6.012372970581055
    4. ' self' → logprob: -9.387372970581055
    5. 'point' → logprob: -10.387372970581055
    6. 'Vector' → logprob: -11.012372970581055
    7. 'projection' → logprob: -11.762372970581055
    8. 'project' → logprob: -12.012372970581055
    9. 'pro' → logprob: -12.387372970581055
    10. '	pro' → logprob: -12.512372970581055

Token 684: '.sub' (ID: 7619)
  Prédit: '.times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.times' → logprob: -0.2428099364042282
    2. '.' → logprob: -1.7428098917007446
    3. '.add' → logprob: -3.242810010910034
    4. ' .' → logprob: -7.742809772491455
    5. 'times' → logprob: -8.117810249328613
    6. '   ' → logprob: -8.117810249328613
    7. '.sub' → logprob: -8.617810249328613
    8. ').' → logprob: -9.742810249328613
    9. '.mul' → logprob: -9.742810249328613
    10. ' ' → logprob: -9.742810249328613

Token 685: '(point' (ID: 46989)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -7.946405094116926e-05
    2. 'proj' → logprob: -10.000079154968262
    3. ' point' → logprob: -10.750079154968262
    4. '(point' → logprob: -11.375079154968262
    5. 'self' → logprob: -14.375079154968262
    6. '	point' → logprob: -14.625079154968262
    7. 'project' → logprob: -16.375080108642578
    8. '_point' → logprob: -18.750080108642578
    9. ' proj' → logprob: -19.250080108642578
    10. '.point' → logprob: -19.625080108642578

Token 686: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.04392963647842407
    2. '.times' → logprob: -4.043929576873779
    3. '.sub' → logprob: -4.793929576873779
    4. '.' → logprob: -4.793929576873779
    5. '().' → logprob: -5.418929576873779
    6. '   ' → logprob: -5.543929576873779
    7. '.add' → logprob: -8.168930053710938
    8. '       ' → logprob: -9.293930053710938
    9. ' .' → logprob: -10.293930053710938
    10. 'times' → logprob: -10.418930053710938

Token 687: 'times' (ID: 32499)
  Prédit: 'times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.00043341092532500625
    2. 'counter' → logprob: -7.750433444976807
    3. 'sub' → logprob: -13.375432968139648
    4. 'tw' → logprob: -14.875432968139648
    5. '.times' → logprob: -15.375432968139648
    6. 'Times' → logprob: -15.625432968139648
    7. '_times' → logprob: -15.750432968139648
    8. ' times' → logprob: -16.00043296813965
    9. '(times' → logprob: -16.37543296813965
    10. 'vec' → logprob: -17.00043296813965

Token 688: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16563795506954193
    2. '(' → logprob: -1.9156379699707031
    3. '(-' → logprob: -5.415637969970703
    4. '-' → logprob: -7.040637969970703
    5. ' ' → logprob: -9.915637969970703
    6. '   ' → logprob: -11.290637969970703
    7. ' -' → logprob: -11.790637969970703
    8. ' (' → logprob: -12.540637969970703
    9. '  ' → logprob: -13.415637969970703
    10. '(
' → logprob: -13.790637969970703

Token 689: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01824827864766121
    2. '-' → logprob: -4.018248081207275
    3. ' ' → logprob: -9.893248558044434
    4. ' -' → logprob: -10.643248558044434
    5. '   ' → logprob: -11.393248558044434
    6. '(-' → logprob: -11.893248558044434
    7. '(' → logprob: -13.143248558044434
    8. '  ' → logprob: -13.268248558044434
    9. '    ' → logprob: -13.768248558044434
    10. '     ' → logprob: -15.830748558044434

Token 690: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10026447474956512
    2. ').' → logprob: -2.350264549255371
    3. '())' → logprob: -10.725264549255371
    4. ' )' → logprob: -11.475264549255371
    5. '0' → logprob: -12.225264549255371
    6. '))' → logprob: -12.850264549255371
    7. '   ' → logprob: -13.100264549255371
    8. '()).' → logprob: -13.225264549255371
    9. '(' → logprob: -13.350264549255371
    10. '<|end|>' → logprob: -13.475264549255371

Token 691: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.018843550235033035
    2. 'sub' → logprob: -4.018843650817871
    3. 'times' → logprob: -7.643843650817871
    4. 'counter' → logprob: -9.018843650817871
    5. 'subtract' → logprob: -11.518843650817871
    6. '_add' → logprob: -11.768843650817871
    7. 'neg' → logprob: -11.893843650817871
    8. ' add' → logprob: -12.143843650817871
    9. 'cross' → logprob: -12.268843650817871
    10. 'reverse' → logprob: -12.393843650817871

Token 692: '(point' (ID: 46989)
  Prédit: '(pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.0005251537077128887
    2. '(point' → logprob: -7.625524997711182
    3. '(project' → logprob: -10.75052547454834
    4. '(' → logprob: -11.62552547454834
    5. 'proj' → logprob: -12.00052547454834
    6. '(prod' → logprob: -15.50052547454834
    7. ' proj' → logprob: -15.75052547454834
    8. '(self' → logprob: -16.500524520874023
    9. '	pro' → logprob: -16.875524520874023
    10. '_proj' → logprob: -17.000524520874023

Token 693: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020078644156455994
    2. '())' → logprob: -6.252007961273193
    3. ').' → logprob: -10.127007484436035
    4. '()' → logprob: -12.002007484436035
    5. '<|end|>' → logprob: -12.002007484436035
    6. ' )' → logprob: -12.627007484436035
    7. ' ())' → logprob: -12.627007484436035
    8. '(' → logprob: -12.752007484436035
    9. '(pro' → logprob: -12.877007484436035
    10. '(project' → logprob: -12.877007484436035

Token 694: 'xp' (ID: 65620)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17526844143867493
    2. '(' → logprob: -2.4252684116363525
    3. ')' → logprob: -2.6752684116363525
    4. '<|end|>' → logprob: -6.925268650054932
    5. '(
' → logprob: -7.800268650054932
    6. '.)' → logprob: -7.925268650054932
    7. ' ' → logprob: -7.925268650054932
    8. '()' → logprob: -7.925268650054932
    9. '[' → logprob: -8.050268173217773
    10. '_' → logprob: -9.050268173217773

Token 695: '1' (ID: 16)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9948855638504028
    2. ' =' → logprob: -1.4948855638504028
    3. '=' → logprob: -1.8698855638504028
    4. ')' → logprob: -2.8698854446411133
    5. 'oints' → logprob: -3.3698854446411133
    6. 't' → logprob: -3.6198854446411133
    7. '.x' → logprob: -3.9948854446411133
    8. 'y' → logprob: -4.369885444641113
    9. 'def' → logprob: -4.744885444641113
    10. 'ro' → logprob: -4.869885444641113

Token 696: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5242999792098999
    2. '=' → logprob: -1.5242999792099
    3. ',' → logprob: -1.8992999792099
    4. '.' → logprob: -3.6493000984191895
    5. ')' → logprob: -5.5243000984191895
    6. '<|end|>' → logprob: -5.8993000984191895
    7. 'def' → logprob: -6.1493000984191895
    8. '.x' → logprob: -6.5243000984191895
    9. ' ' → logprob: -6.7743000984191895
    10. ' .' → logprob: -8.274299621582031

Token 697: ' yp' (ID: 151848)
  Prédit: 'yp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.00023798657639417797
    2. ' yp' → logprob: -8.375238418579102
    3. 'xp' → logprob: -12.125238418579102
    4. ' ' → logprob: -14.375238418579102
    5. 'ypy' → logprob: -14.500238418579102
    6. 'ype' → logprob: -15.250238418579102
    7. 'x' → logprob: -15.625238418579102
    8. '=' → logprob: -16.5002384185791
    9. 'ypass' → logprob: -16.6252384185791
    10. 'yn' → logprob: -16.7502384185791

Token 698: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014013137842994183
    2. '=' → logprob: -9.375140190124512
    3. ' =' → logprob: -10.250140190124512
    4. ',' → logprob: -11.250140190124512
    5. 'r' → logprob: -12.375140190124512
    6. '```' → logprob: -13.375140190124512
    7. 'c' → logprob: -15.375140190124512
    8. 'x' → logprob: -15.625140190124512
    9. '' → logprob: -15.750140190124512
    10. '2' → logprob: -15.750140190124512

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0073123532347381115
    2. '=' → logprob: -5.507312297821045
    3. ' =' → logprob: -5.757312297821045
    4. ',x' → logprob: -10.132312774658203
    5. ' ,' → logprob: -10.632312774658203
    6. ' ' → logprob: -13.257312774658203
    7. '<|end|>' → logprob: -14.132312774658203
    8. ')' → logprob: -14.632312774658203
    9. '  ' → logprob: -15.007312774658203
    10. '=x' → logprob: -15.132312774658203

Token 700: ' xp' (ID: 74091)
  Prédit: 'xp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xp' → logprob: -0.0002434699417790398
    2. 'x' → logprob: -9.000243186950684
    3. ' xp' → logprob: -9.125243186950684
    4. 'xd' → logprob: -12.875243186950684
    5. ' ' → logprob: -13.250243186950684
    6. 'xm' → logprob: -13.250243186950684
    7. 'xn' → logprob: -13.625243186950684
    8. 'xc' → logprob: -13.750243186950684
    9. 'xh' → logprob: -14.375243186950684
    10. 'xr' → logprob: -15.000243186950684

Token 701: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04929264634847641
    2. '2' → logprob: -3.04929256439209
    3. '=' → logprob: -7.79929256439209
    4. 'p' → logprob: -9.29929256439209
    5. ' =' → logprob: -9.67429256439209
    6. ',' → logprob: -9.92429256439209
    7. 'x' → logprob: -10.54929256439209
    8. 'xp' → logprob: -10.54929256439209
    9. 'y' → logprob: -11.17429256439209
    10. '3' → logprob: -11.42429256439209

Token 702: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021188464597798884
    2. '=' → logprob: -8.750211715698242
    3. '1' → logprob: -10.250211715698242
    4. ' =' → logprob: -11.375211715698242
    5. ' ,' → logprob: -12.500211715698242
    6. 'p' → logprob: -14.000211715698242
    7. '_,' → logprob: -14.625211715698242
    8. ',p' → logprob: -14.875211715698242
    9. ',
' → logprob: -15.125211715698242
    10. ',y' → logprob: -15.375211715698242

Token 703: ' yp' (ID: 151848)
  Prédit: ' yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yp' → logprob: -0.3133135437965393
    2. 'yp' → logprob: -1.3133134841918945
    3. 'y' → logprob: -10.813313484191895
    4. '<|end|>' → logprob: -11.688313484191895
    5. ' ' → logprob: -11.938313484191895
    6. 'ypy' → logprob: -12.438313484191895
    7. 'yd' → logprob: -13.188313484191895
    8. ' y' → logprob: -13.313313484191895
    9. 'yc' → logprob: -13.438313484191895
    10. 'yb' → logprob: -13.813313484191895

Token 704: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006316631333902478
    2. '2' → logprob: -7.375631809234619
    3. '```' → logprob: -13.313131332397461
    4. '=' → logprob: -14.375631332397461
    5. 'def' → logprob: -14.688131332397461
    6. 'x' → logprob: -15.125631332397461
    7. ' ' → logprob: -15.500631332397461
    8. 'p' → logprob: -15.500631332397461
    9. '12' → logprob: -15.750631332397461
    10. ' =' → logprob: -15.875631332397461

Token 705: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16555088758468628
    2. ',' → logprob: -2.040550947189331
    3. ' =' → logprob: -3.790550947189331
    4. '=input' → logprob: -11.66555118560791
    5. '=
' → logprob: -12.29055118560791
    6. ')' → logprob: -12.54055118560791
    7. '<|end|>' → logprob: -12.54055118560791
    8. ' ' → logprob: -13.41555118560791
    9. '=

' → logprob: -13.41555118560791
    10. ',x' → logprob: -13.41555118560791

Token 706: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10011164844036102
    2. '0' → logprob: -2.600111722946167
    3. ' map' → logprob: -3.975111722946167
    4. 'list' → logprob: -6.600111484527588
    5. '[' → logprob: -7.850111484527588
    6. ' ' → logprob: -7.975111484527588
    7. ' [' → logprob: -10.350111961364746
    8. ' list' → logprob: -10.725111961364746
    9. '(map' → logprob: -10.850111961364746
    10. '1' → logprob: -11.100111961364746

Token 707: '(int' (ID: 2742)
  Prédit: '(float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.20310145616531372
    2. '(int' → logprob: -1.703101396560669
    3. 'float' → logprob: -6.453101634979248
    4. 'int' → logprob: -9.32810115814209
    5. '(' → logprob: -10.95310115814209
    6. '<float' → logprob: -13.45310115814209
    7. ',float' → logprob: -14.20310115814209
    8. '=float' → logprob: -14.45310115814209
    9. '(input' → logprob: -14.57810115814209
    10. '(
' → logprob: -14.70310115814209

Token 708: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.062227822840213776
    2. ',' → logprob: -2.812227725982666
    3. 'input' → logprob: -8.562228202819824
    4. '(input' → logprob: -9.687228202819824
    5. ',(' → logprob: -12.937228202819824
    6. ' ,' → logprob: -13.812228202819824
    7. '(),' → logprob: -14.562228202819824
    8. '(' → logprob: -14.812228202819824
    9. ',i' → logprob: -14.812228202819824
    10. ' input' → logprob: -14.937228202819824

Token 709: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020401719666551799
    2. ' input' → logprob: -8.500204086303711
    3. '(input' → logprob: -15.375204086303711
    4. '   ' → logprob: -16.25020408630371
    5. 'open' → logprob: -16.37520408630371
    6. ',input' → logprob: -16.87520408630371
    7. '=input' → logprob: -17.12520408630371
    8. ' ' → logprob: -17.50020408630371
    9. ')' → logprob: -18.37520408630371
    10. '	input' → logprob: -18.37520408630371

Token 710: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.566264295950532e-05
    2. '()' → logprob: -9.375085830688477
    3. ' ().' → logprob: -14.625085830688477
    4. '(' → logprob: -15.250085830688477
    5. '   ' → logprob: -17.750085830688477
    6. '(),' → logprob: -17.875085830688477
    7. '()
' → logprob: -17.875085830688477
    8. ')' → logprob: -18.250085830688477
    9. '().__' → logprob: -19.000085830688477
    10. '())' → logprob: -19.250085830688477

Token 711: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2113979209971149e-05
    2. 'strip' → logprob: -11.375012397766113
    3. ' split' → logprob: -15.375012397766113
    4. 'spl' → logprob: -15.375012397766113
    5. '().' → logprob: -16.375011444091797
    6. '(split' → logprob: -16.750011444091797
    7. 'rstrip' → logprob: -18.625011444091797
    8. 'read' → logprob: -18.750011444091797
    9. 'sp' → logprob: -19.125011444091797
    10. 's' → logprob: -20.250011444091797

Token 712: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005640312563627958
    2. '()' → logprob: -5.255640506744385
    3. ')' → logprob: -7.880640506744385
    4. '(' → logprob: -11.755640029907227
    5. '())
' → logprob: -11.880640029907227
    6. '('' → logprob: -12.505640029907227
    7. '().' → logprob: -13.130640029907227
    8. '());' → logprob: -13.130640029907227
    9. ' ())' → logprob: -13.255640029907227
    10. '(','' → logprob: -13.755640029907227

Token 713: 'q' (ID: 80)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3790999948978424
    2. 'line' → logprob: -1.87909996509552
    3. 'l' → logprob: -2.7541000843048096
    4. 'v' → logprob: -3.1291000843048096
    5. 'a' → logprob: -4.0040998458862305
    6. 'x' → logprob: -5.0040998458862305
    7. 'A' → logprob: -5.2540998458862305
    8. 'lp' → logprob: -5.2540998458862305
    9. 'xp' → logprob: -5.5040998458862305
    10. 'vp' → logprob: -5.6290998458862305

Token 714: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.18425381183624268
    2. ' =' → logprob: -2.184253692626953
    3. '1' → logprob: -3.434253692626953
    4. 'x' → logprob: -4.059253692626953
    5. '=' → logprob: -6.184253692626953
    6. 'point' → logprob: -6.809253692626953
    7. 'u' → logprob: -6.809253692626953
    8. ',' → logprob: -6.934253692626953
    9. 'points' → logprob: -8.434253692626953
    10. '_points' → logprob: -8.559253692626953

Token 715: ' int' (ID: 677)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.241489440202713
    2. 'int' → logprob: -1.9914894104003906
    3. 'Line' → logprob: -2.9914894104003906
    4. ' Vector' → logprob: -4.366489410400391
    5. ' int' → logprob: -4.866489410400391
    6. 'xp' → logprob: -5.866489410400391
    7. '[]' → logprob: -6.741489410400391
    8. ' Line' → logprob: -7.366489410400391
    9. '1' → logprob: -7.366489410400391
    10. '0' → logprob: -7.991489410400391

Token 716: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00047928967978805304
    2. '()' → logprob: -7.750479221343994
    3. '(' → logprob: -10.375479698181152
    4. '=input' → logprob: -11.500479698181152
    5. 'input' → logprob: -12.000479698181152
    6. '();' → logprob: -15.500479698181152
    7. '(
' → logprob: -15.500479698181152
    8. ',input' → logprob: -15.875479698181152
    9. '(inp' → logprob: -16.125478744506836
    10. '()
' → logprob: -16.625478744506836

Token 717: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20244163274765015
    2. '()' → logprob: -1.702441692352295
    3. '())
' → logprob: -7.077441692352295
    4. ')' → logprob: -9.327441215515137
    5. '()
' → logprob: -9.452441215515137
    6. '(' → logprob: -11.952441215515137
    7. '().' → logprob: -12.327441215515137
    8. ' ())' → logprob: -13.577441215515137
    9. '())
' → logprob: -13.702441215515137
    10. '())

' → logprob: -14.077441215515137

Token 718: 'p' (ID: 79)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004919093102216721
    2. 'lines' → logprob: -5.754919052124023
    3. 'line' → logprob: -6.504919052124023
    4. 'points' → logprob: -9.379919052124023
    5. 'l' → logprob: -9.754919052124023
    6. 'vectors' → logprob: -10.004919052124023
    7. ' for' → logprob: -11.004919052124023
    8. 'v' → logprob: -11.379919052124023
    9. 'a' → logprob: -12.254919052124023
    10. 'while' → logprob: -12.754919052124023

Token 719: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5639137029647827
    2. 'oints' → logprob: -0.9389137029647827
    3. ' =' → logprob: -3.6889138221740723
    4. 'ts' → logprob: -5.438913822174072
    5. 'nts' → logprob: -5.438913822174072
    6. 'r' → logprob: -6.063913822174072
    7. 'os' → logprob: -6.813913822174072
    8. 'oint' → logprob: -7.188913822174072
    9. 's' → logprob: -7.188913822174072
    10. '=' → logprob: -7.688913822174072

Token 720: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06716030836105347
    2. '1' → logprob: -3.3171603679656982
    3. '=' → logprob: -3.5671603679656982
    4. ',' → logprob: -8.442160606384277
    5. 'p' → logprob: -9.692160606384277
    6. 'oint' → logprob: -9.817160606384277
    7. 't' → logprob: -10.442160606384277
    8. 'oints' → logprob: -10.442160606384277
    9. 'r' → logprob: -10.567160606384277
    10. ' ' → logprob: -10.692160606384277

Token 721: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -9.65101717156358e-05
    2. ' Vector' → logprob: -9.250096321105957
    3. '	Vector' → logprob: -15.375096321105957
    4. '<Vector' → logprob: -17.625097274780273
    5. '(Vector' → logprob: -17.750097274780273
    6. 'Line' → logprob: -17.875097274780273
    7. 'Point' → logprob: -18.625097274780273
    8. '   ' → logprob: -18.625097274780273
    9. '_Vector' → logprob: -18.750097274780273
    10. '  ' → logprob: -18.875097274780273

Token 722: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -9.960946772480384e-05
    2. 'xp' → logprob: -9.250099182128906
    3. '(' → logprob: -12.625099182128906
    4. '()' → logprob: -16.875099182128906
    5. 'x' → logprob: -17.000099182128906
    6. ' (' → logprob: -18.375099182128906
    7. '(
' → logprob: -18.500099182128906
    8. '((' → logprob: -18.625099182128906
    9. '(int' → logprob: -18.875099182128906
    10. ' xp' → logprob: -19.000099182128906

Token 723: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.6166903151315637e-05
    2. '=' → logprob: -11.500016212463379
    3. '1' → logprob: -12.625016212463379
    4. '=p' → logprob: -13.625016212463379
    5. 'xp' → logprob: -13.875016212463379
    6. '_p' → logprob: -15.750016212463379
    7. ' p' → logprob: -16.125015258789062
    8. '[p' → logprob: -16.500015258789062
    9. ')p' → logprob: -17.250015258789062
    10. '0' → logprob: -17.750015258789062

Token 724: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'p' → logprob: -18.375
    3. ',' → logprob: -18.625
    4. ' ' → logprob: -18.75
    5. '_' → logprob: -19.375
    6. '１' → logprob: -19.9375
    7. ')' → logprob: -20.0
    8. '۱' → logprob: -20.25
    9. '2' → logprob: -20.375
    10. '১' → logprob: -20.5

Token 725: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7133641196996905e-05
    2. ' ,' → logprob: -10.87502670288086
    3. ',y' → logprob: -12.00002670288086
    4. 'y' → logprob: -13.87502670288086
    5. 'p' → logprob: -14.62502670288086
    6. '<|end|>' → logprob: -15.50002670288086
    7. ',
' → logprob: -16.50002670288086
    8. ',p' → logprob: -16.62502670288086
    9. '‌,' → logprob: -16.87502670288086
    10. '[' → logprob: -17.00002670288086

Token 726: ' yp' (ID: 151848)
  Prédit: 'yp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -2.339278580620885e-06
    2. ' yp' → logprob: -13.000001907348633
    3. 'ypy' → logprob: -17.375001907348633
    4. 'ypass' → logprob: -18.500001907348633
    5. 'ype' → logprob: -18.875001907348633
    6. '   ' → logprob: -19.375001907348633
    7. ' ' → logprob: -19.750001907348633
    8. 'ypad' → logprob: -20.125001907348633
    9. 'yper' → logprob: -20.250001907348633
    10. 'ym' → logprob: -20.250001907348633

Token 727: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'p' → logprob: -15.375
    3. '2' → logprob: -17.875
    4. '<|end|>' → logprob: -17.875
    5. ')' → logprob: -18.375
    6. ' ' → logprob: -18.625
    7. ',' → logprob: -19.4375
    8. '१' → logprob: -20.5
    9. '<|end|>' → logprob: -20.5
    10. '１' → logprob: -20.5

Token 728: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5759605765342712
    2. ')' → logprob: -0.8259605765342712
    3. ')
' → logprob: -11.075960159301758
    4. ')

' → logprob: -12.575960159301758
    5. ')p' → logprob: -13.325960159301758
    6. '),' → logprob: -15.075960159301758
    7. ' )
' → logprob: -15.575960159301758
    8. 'p' → logprob: -16.575960159301758
    9. ').' → logprob: -17.325960159301758
    10. ');' → logprob: -17.575960159301758

Token 729: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.512236498361744e-07
    2. ' p' → logprob: -14.500000953674316
    3. '
' → logprob: -18.125
    4. '<|end|>' → logprob: -18.625
    5. 'Vector' → logprob: -19.5
    6. '   ' → logprob: -19.75
    7. '```' → logprob: -19.875
    8. 'xp' → logprob: -20.625
    9. '<p' → logprob: -20.75
    10. '#' → logprob: -21.0

Token 730: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '۲' → logprob: -18.75
    3. '２' → logprob: -19.375
    4. ' ' → logprob: -19.5
    5. '₂' → logprob: -19.875
    6. '1' → logprob: -20.625
    7. '_' → logprob: -20.8125
    8. 'p' → logprob: -20.9375
    9. '٢' → logprob: -21.375
    10. '২' → logprob: -21.5

Token 731: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395360946655
    2. '=' → logprob: -0.8259395360946655
    3. ')' → logprob: -17.075939178466797
    4. '＝' → logprob: -18.325939178466797
    5. ' ' → logprob: -18.325939178466797
    6. 'p' → logprob: -18.575939178466797
    7. 's' → logprob: -19.075939178466797
    8. '<|end|>' → logprob: -19.200939178466797
    9. ' =
' → logprob: -19.825939178466797
    10. '.' → logprob: -19.825939178466797

Token 732: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0001234428636962548
    2. ' Vector' → logprob: -9.000123023986816
    3. '	Vector' → logprob: -17.250123977661133
    4. '<Vector' → logprob: -18.000123977661133
    5. '.Vector' → logprob: -18.750123977661133
    6. '(Vector' → logprob: -19.500123977661133
    7. '_Vector' → logprob: -19.500123977661133
    8. '_vector' → logprob: -20.125123977661133
    9. 'vector' → logprob: -20.250123977661133
    10. 'Vectors' → logprob: -22.250123977661133

Token 733: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.2200749754119897e-06
    2. 'xp' → logprob: -13.625001907348633
    3. '(' → logprob: -14.500001907348633
    4. 'x' → logprob: -14.750001907348633
    5. ' (' → logprob: -18.750001907348633
    6. '(
' → logprob: -18.750001907348633
    7. 'Vector' → logprob: -20.750001907348633
    8. '((' → logprob: -20.875001907348633
    9. ' xp' → logprob: -21.125001907348633
    10. '(int' → logprob: -22.000001907348633

Token 734: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10496321320533752
    2. '2' → logprob: -2.3549633026123047
    3. 'xp' → logprob: -5.354963302612305
    4. 'x' → logprob: -10.979963302612305
    5. ' xp' → logprob: -13.104963302612305
    6. '```' → logprob: -14.729963302612305
    7. '1' → logprob: -15.729963302612305
    8. '   ' → logprob: -15.979963302612305
    9. ')' → logprob: -15.979963302612305
    10. 's' → logprob: -15.979963302612305

Token 735: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. 'xp' → logprob: -14.000001907348633
    3. 'p' → logprob: -14.625001907348633
    4. ' ' → logprob: -16.500001907348633
    5. 'x' → logprob: -16.750001907348633
    6. '۲' → logprob: -17.625001907348633
    7. '   ' → logprob: -18.250001907348633
    8. '```' → logprob: -18.875001907348633
    9. '２' → logprob: -18.937501907348633
    10. '₂' → logprob: -19.000001907348633

Token 736: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.676981345459353e-06
    2. ' ,' → logprob: -12.125005722045898
    3. 'p' → logprob: -16.2500057220459
    4. ',
' → logprob: -17.5000057220459
    5. ',p' → logprob: -18.3750057220459
    6. '‌,' → logprob: -18.7500057220459
    7. ')' → logprob: -18.8750057220459
    8. '<|end|>' → logprob: -19.5000057220459
    9. ',y' → logprob: -20.3750057220459
    10. '2' → logprob: -20.5000057220459

Token 737: ' yp' (ID: 151848)
  Prédit: 'yp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.00033546582562848926
    2. ' yp' → logprob: -8.000335693359375
    3. 'ypy' → logprob: -18.625335693359375
    4. 'xp' → logprob: -18.875335693359375
    5. '   ' → logprob: -19.500335693359375
    6. 'ypass' → logprob: -19.625335693359375
    7. '
' → logprob: -19.625335693359375
    8. 'YP' → logprob: -19.750335693359375
    9. 'y' → logprob: -19.875335693359375
    10. 'ype' → logprob: -20.000335693359375

Token 738: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. 'p' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.5
    4. '   ' → logprob: -17.5
    5. '```' → logprob: -17.5
    6. '۲' → logprob: -18.125
    7. '1' → logprob: -18.75
    8. '২' → logprob: -18.9375
    9. '<p' → logprob: -19.6875
    10. '
' → logprob: -19.875

Token 739: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02976299449801445
    2. ')
' → logprob: -3.5297629833221436
    3. ')

' → logprob: -11.654763221740723
    4. ')p' → logprob: -13.154763221740723
    5. ')
' → logprob: -13.779763221740723
    6. 'p' → logprob: -14.779763221740723
    7. ' )' → logprob: -15.404763221740723
    8. ' )
' → logprob: -17.029762268066406
    9. ')#' → logprob: -17.404762268066406
    10. '   ' → logprob: -17.529762268066406

Token 740: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08140262961387634
    2. 'line' → logprob: -2.581402540206909
    3. 'p' → logprob: -7.331402778625488
    4. 'v' → logprob: -7.331402778625488
    5. 'L' → logprob: -7.456402778625488
    6. ' l' → logprob: -8.331402778625488
    7. ' line' → logprob: -8.706402778625488
    8. 'vec' → logprob: -10.581402778625488
    9. 'ln' → logprob: -10.581402778625488
    10. 'lin' → logprob: -10.831402778625488

Token 741: ' =' (ID: 314)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.4646453261375427
    2. '=' → logprob: -1.4646453857421875
    3. ' =' → logprob: -1.9646453857421875
    4. '=line' → logprob: -8.964645385742188
    5. 'i' → logprob: -9.589645385742188
    6. '1' → logprob: -9.964645385742188
    7. 'l' → logprob: -11.339645385742188
    8. 'e' → logprob: -11.839645385742188
    9. 'p' → logprob: -12.589645385742188
    10. 'line' → logprob: -12.714645385742188

Token 742: ' Line' (ID: 11342)
  Prédit: 'Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -3.547789674485102e-05
    2. ' Line' → logprob: -10.250035285949707
    3. 'Lin' → logprob: -19.500036239624023
    4. 'line' → logprob: -20.000036239624023
    5. '(Line' → logprob: -20.125036239624023
    6. 'Vector' → logprob: -20.125036239624023
    7. 'Lines' → logprob: -21.250036239624023
    8. 'ine' → logprob: -21.250036239624023
    9. '_line' → logprob: -21.500036239624023
    10. ' line' → logprob: -21.625036239624023

Token 743: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.3501601219177246
    2. '()' → logprob: -1.2251601219177246
    3. '()
' → logprob: -6.850160121917725
    4. 'p' → logprob: -8.100160598754883
    5. '().' → logprob: -8.350160598754883
    6. '()

' → logprob: -9.850160598754883
    7. '(' → logprob: -10.225160598754883
    8. '()(' → logprob: -12.100160598754883
    9. '(
' → logprob: -12.850160598754883
    10. '=' → logprob: -13.100160598754883

Token 744: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.125
    3. 'p' → logprob: -15.875
    4. 'l' → logprob: -17.25
    5. '```' → logprob: -18.625
    6. 'oints' → logprob: -18.9375
    7. 'r' → logprob: -19.0
    8. 'oint' → logprob: -19.0625
    9. '１' → logprob: -19.1875
    10. 'a' → logprob: -19.1875

Token 745: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006889634532853961
    2. ',p' → logprob: -7.3756890296936035
    3. 'p' → logprob: -9.875688552856445
    4. ' ,' → logprob: -11.625688552856445
    5. ',
' → logprob: -13.125688552856445
    6. ' p' → logprob: -18.000688552856445
    7. ',l' → logprob: -18.000688552856445
    8. ')' → logprob: -18.875688552856445
    9. ',q' → logprob: -18.875688552856445
    10. '   ' → logprob: -19.500688552856445

Token 746: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9027791495318525e-05
    2. ' p' → logprob: -10.875019073486328
    3. '   ' → logprob: -20.500019073486328
    4. '<p' → logprob: -20.500019073486328
    5. '	p' → logprob: -21.125019073486328
    6. 'Vector' → logprob: -21.250019073486328
    7. ')p' → logprob: -21.375019073486328
    8. ' ' → logprob: -21.875019073486328
    9. ')' → logprob: -22.000019073486328
    10. '  ' → logprob: -22.250019073486328

Token 747: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. 'p' → logprob: -15.5
    3. 't' → logprob: -16.625
    4. '۲' → logprob: -17.0
    5. 's' → logprob: -17.8125
    6. '1' → logprob: -18.4375
    7. '₂' → logprob: -18.5625
    8. 'a' → logprob: -18.625
    9. 'er' → logprob: -18.8125
    10. 'r' → logprob: -18.875

Token 748: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010821137111634016
    2. ')
' → logprob: -6.876081943511963
    3. ')

' → logprob: -10.751082420349121
    4. '<|end|>' → logprob: -11.001082420349121
    5. 'l' → logprob: -12.501082420349121
    6. ').' → logprob: -13.376082420349121
    7. ' )' → logprob: -14.251082420349121
    8. 'p' → logprob: -14.501082420349121
    9. '<|end|>' → logprob: -14.626082420349121
    10. 't' → logprob: -15.001082420349121

Token 749: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00018530222587287426
    2. ' for' → logprob: -8.750185012817383
    3. 'def' → logprob: -10.750185012817383
    4. '<|end|>' → logprob: -12.625185012817383
    5. '```' → logprob: -14.000185012817383
    6. 'while' → logprob: -14.875185012817383
    7. '
' → logprob: -15.375185012817383
    8. '#' → logprob: -16.000185012817383
    9. '   ' → logprob: -16.125185012817383
    10. '	for' → logprob: -16.125185012817383

Token 750: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.04863789677619934
    2. '_' → logprob: -3.048637866973877
    3. ' i' → logprob: -10.173638343811035
    4. ' ' → logprob: -11.423638343811035
    5. '_i' → logprob: -14.048638343811035
    6. ' _
' → logprob: -15.173638343811035
    7. 'i' → logprob: -15.798638343811035
    8. ' ' → logprob: -16.29863739013672
    9. '_=' → logprob: -18.29863739013672
    10. ' ‌' → logprob: -18.67363739013672

Token 751: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25212281942367554
    2. 'in' → logprob: -1.5021228790283203
    3. '_' → logprob: -9.50212287902832
    4. 'i' → logprob: -10.25212287902832
    5. ' ' → logprob: -10.37712287902832
    6. ' _' → logprob: -10.62712287902832
    7. ' i' → logprob: -11.50212287902832
    8. '	in' → logprob: -12.00212287902832
    9. 'n' → logprob: -12.12712287902832
    10. '  ' → logprob: -12.87712287902832

Token 752: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004892880679108202
    2. ' range' → logprob: -7.625489234924316
    3. 'q' → logprob: -14.750489234924316
    4. 'in' → logprob: -15.000489234924316
    5. 'input' → logprob: -15.500489234924316
    6. 'r' → logprob: -16.375490188598633
    7. '(range' → logprob: -16.875490188598633
    8. 'rang' → logprob: -17.000490188598633
    9. ' ' → logprob: -17.250490188598633
    10. '[' → logprob: -17.875490188598633

Token 753: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.04078530892729759
    2. '(' → logprob: -4.165785312652588
    3. ' q' → logprob: -4.540785312652588
    4. 'q' → logprob: -4.540785312652588
    5. ' (' → logprob: -5.790785312652588
    6. '(int' → logprob: -9.79078483581543
    7. '(i' → logprob: -13.16578483581543
    8. '1' → logprob: -14.16578483581543
    9. '	q' → logprob: -14.66578483581543
    10. ' ' → logprob: -14.66578483581543

Token 754: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0038273909594863653
    2. '):
' → logprob: -5.6288275718688965
    3. ':' → logprob: -9.253827095031738
    4. ' ):' → logprob: -9.628827095031738
    5. '):
' → logprob: -10.253827095031738
    6. '():' → logprob: -11.628827095031738
    7. ',' → logprob: -11.878827095031738
    8. ')' → logprob: -12.003827095031738
    9. ']:' → logprob: -12.753827095031738
    10. '}:' → logprob: -13.503827095031738

Token 755: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00032497590291313827
    2. 'x' → logprob: -8.375325202941895
    3. 'p' → logprob: -9.750325202941895
    4. '   ' → logprob: -11.500325202941895
    5. 'point' → logprob: -11.875325202941895
    6. ' x' → logprob: -12.375325202941895
    7. '	x' → logprob: -12.500325202941895
    8. '	point' → logprob: -12.875325202941895
    9. 'xp' → logprob: -13.500325202941895
    10. '  ' → logprob: -13.750325202941895

Token 756: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.16010437905788422
    2. '   ' → logprob: -2.035104274749756
    3. 'xp' → logprob: -4.660104274749756
    4. ' x' → logprob: -5.660104274749756
    5. 'qx' → logprob: -6.910104274749756
    6. 'px' → logprob: -6.910104274749756
    7. 'xx' → logprob: -8.285104751586914
    8. 'a' → logprob: -8.535104751586914
    9. 'xi' → logprob: -8.660104751586914
    10. 'xt' → logprob: -9.035104751586914

Token 757: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005521982675418258
    2. 'p' → logprob: -7.875552177429199
    3. ',y' → logprob: -9.3755521774292
    4. ' ,' → logprob: -9.6255521774292
    5. '_,' → logprob: -11.3755521774292
    6. 'y' → logprob: -11.6255521774292
    7. ',p' → logprob: -14.6255521774292
    8. 'q' → logprob: -16.375553131103516
    9. '‌,' → logprob: -16.500553131103516
    10. 'i' → logprob: -16.875553131103516

Token 758: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005234002135694027
    2. ' y' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.005233764648438
    4. '	y' → logprob: -17.630233764648438
    5. '<|end|>' → logprob: -17.880233764648438
    6. '=' → logprob: -18.380233764648438
    7. 'x' → logprob: -18.755233764648438
    8. '  ' → logprob: -19.005233764648438
    9. ' =' → logprob: -19.005233764648438
    10. ',y' → logprob: -19.255233764648438

Token 759: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804263845086098
    2. ' =' → logprob: -3.2880425453186035
    3. '=input' → logprob: -14.163043022155762
    4. '=int' → logprob: -15.288043022155762
    5. '   ' → logprob: -16.288042068481445
    6. ',' → logprob: -16.288042068481445
    7. ')' → logprob: -16.788042068481445
    8. ' ' → logprob: -17.538042068481445
    9. '=line' → logprob: -17.538042068481445
    10. '＝' → logprob: -17.663042068481445

Token 760: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6931529641151428
    2. ' map' → logprob: -0.6931529641151428
    3. '	map' → logprob: -12.193153381347656
    4. '   ' → logprob: -15.193153381347656
    5. ' ' → logprob: -15.943153381347656
    6. 'm' → logprob: -16.193153381347656
    7. ',map' → logprob: -17.318153381347656
    8. '  ' → logprob: -17.318153381347656
    9. '(map' → logprob: -17.943153381347656
    10. '
' → logprob: -18.193153381347656

Token 761: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004342453321442008
    2. 'int' → logprob: -7.750434398651123
    3. '(float' → logprob: -12.750433921813965
    4. '[int' → logprob: -14.750433921813965
    5. '(' → logprob: -16.37543487548828
    6. '=int' → logprob: -16.50043487548828
    7. '<int' → logprob: -17.62543487548828
    8. ' int' → logprob: -18.25043487548828
    9. ',int' → logprob: -18.62543487548828
    10. ']int' → logprob: -19.00043487548828

Token 762: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020072881132364273
    2. ',input' → logprob: -4.145072937011719
    3. '(),' → logprob: -5.770072937011719
    4. 'input' → logprob: -7.520072937011719
    5. '()' → logprob: -9.270072937011719
    6. '(' → logprob: -9.270072937011719
    7. '(input' → logprob: -9.645072937011719
    8. '().' → logprob: -9.645072937011719
    9. '   ' → logprob: -10.645072937011719
    10. ' ,' → logprob: -11.520072937011719

Token 763: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.547789674485102e-05
    2. ' input' → logprob: -10.250035285949707
    3. ' ' → logprob: -20.125036239624023
    4. '(input' → logprob: -21.625036239624023
    5. '   ' → logprob: -22.250036239624023
    6. '	input' → logprob: -23.125036239624023
    7. '=input' → logprob: -23.250036239624023
    8. '_input' → logprob: -23.250036239624023
    9. ',input' → logprob: -23.625036239624023
    10. 'Input' → logprob: -23.625036239624023

Token 764: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. ' ().' → logprob: -15.75
    3. '()' → logprob: -16.125
    4. '.' → logprob: -16.125
    5. '.split' → logprob: -17.875
    6. '   ' → logprob: -18.125
    7. ')' → logprob: -18.5
    8. '
' → logprob: -19.625
    9. ' .' → logprob: -20.125
    10. '(' → logprob: -20.5

Token 765: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.25
    3. '.split' → logprob: -18.375
    4. 'strip' → logprob: -18.5
    5. '(split' → logprob: -18.75
    6. 'spl' → logprob: -20.0
    7. 'sp' → logprob: -22.5
    8. '_split' → logprob: -23.25
    9. 'rstrip' → logprob: -23.625
    10. 's' → logprob: -24.0

Token 766: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5770811438560486
    2. ')
' → logprob: -0.8270811438560486
    3. '()' → logprob: -7.327081203460693
    4. '())
' → logprob: -7.952081203460693
    5. '())' → logprob: -9.327080726623535
    6. '()
' → logprob: -10.952080726623535
    7. ')
' → logprob: -11.077080726623535
    8. ')

' → logprob: -12.577080726623535
    9. '   ' → logprob: -12.827080726623535
    10. ')`
' → logprob: -13.327080726623535

Token 767: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00157771329395473
    2. 'v' → logprob: -6.626577854156494
    3. 'p' → logprob: -9.751577377319336
    4. '<|end|>' → logprob: -10.126577377319336
    5. ' line' → logprob: -10.376577377319336
    6. 'line' → logprob: -10.501577377319336
    7. 'point' → logprob: -10.626577377319336
    8. '
' → logprob: -11.251577377319336
    9. ' point' → logprob: -11.376577377319336
    10. ' p' → logprob: -11.626577377319336

Token 768: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.16298902034759521
    2. 'v' → logprob: -3.2879891395568848
    3. '   ' → logprob: -3.5379891395568848
    4. 'point' → logprob: -3.5379891395568848
    5. 'pt' → logprob: -3.6629891395568848
    6. 'r' → logprob: -5.037989139556885
    7. 'print' → logprob: -5.162989139556885
    8. 'res' → logprob: -5.162989139556885
    9. 'vec' → logprob: -5.787989139556885
    10. ' p' → logprob: -6.412989139556885

Token 769: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10036560893058777
    2. ' =' → logprob: -2.35036563873291
    3. 'oint' → logprob: -8.97536563873291
    4. 'oints' → logprob: -10.72536563873291
    5. 'p' → logprob: -12.85036563873291
    6. '=
' → logprob: -12.97536563873291
    7. ')' → logprob: -14.10036563873291
    8. 't' → logprob: -14.22536563873291
    9. '1' → logprob: -14.35036563873291
    10. 'oin' → logprob: -14.72536563873291

Token 770: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0005532711511477828
    2. ' Vector' → logprob: -7.500553131103516
    3. 'Point' → logprob: -16.375553131103516
    4. '	Vector' → logprob: -17.000553131103516
    5. '  ' → logprob: -17.625553131103516
    6. ' ' → logprob: -17.875553131103516
    7. '   ' → logprob: -18.625553131103516
    8. 'p' → logprob: -19.250553131103516
    9. '_Vector' → logprob: -19.250553131103516
    10. 'vector' → logprob: -19.500553131103516

Token 771: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00012856863031629473
    2. '(' → logprob: -9.000128746032715
    3. 'x' → logprob: -12.375128746032715
    4. '(
' → logprob: -14.625128746032715
    5. ' (' → logprob: -15.125128746032715
    6. '=' → logprob: -17.8751277923584
    7. '((' → logprob: -18.1251277923584
    8. '(input' → logprob: -18.1251277923584
    9. '=x' → logprob: -18.3751277923584
    10. '   ' → logprob: -18.6251277923584

Token 772: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017778765177354217
    2. ',y' → logprob: -6.376777648925781
    3. ' ,' → logprob: -9.501777648925781
    4. 'y' → logprob: -14.751777648925781
    5. ',
' → logprob: -15.251777648925781
    6. ',p' → logprob: -15.751777648925781
    7. '   ' → logprob: -16.12677764892578
    8. 'p' → logprob: -17.25177764892578
    9. ' y' → logprob: -17.75177764892578
    10. '  ' → logprob: -17.75177764892578

Token 773: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004886920796707273
    2. ' y' → logprob: -7.625488758087158
    3. '   ' → logprob: -14.50048828125
    4. '    ' → logprob: -16.87548828125
    5. '	y' → logprob: -16.87548828125
    6. '  ' → logprob: -17.50048828125
    7. '
' → logprob: -17.75048828125
    8. ' ' → logprob: -17.75048828125
    9. ')' → logprob: -18.37548828125
    10. ')y' → logprob: -18.62548828125

Token 774: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6410104632377625
    2. ')
' → logprob: -0.8910104632377625
    3. '   ' → logprob: -2.7660105228424072
    4. ')
' → logprob: -9.516010284423828
    5. ' )
' → logprob: -12.141010284423828
    6. ' )' → logprob: -13.516010284423828
    7. ')

' → logprob: -13.641010284423828
    8. ' ' → logprob: -13.766010284423828
    9. '    
' → logprob: -14.641010284423828
    10. '  ' → logprob: -14.766010284423828

Token 775: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09444431215524673
    2. 'r' → logprob: -2.8444442749023438
    3. 'print' → logprob: -3.8444442749023438
    4. 'rp' → logprob: -5.344444274902344
    5. 'res' → logprob: -6.469444274902344
    6. 'p' → logprob: -6.469444274902344
    7. ' r' → logprob: -6.594444274902344
    8. ' rp' → logprob: -7.969444274902344
    9. 'ans' → logprob: -8.594444274902344
    10. 'v' → logprob: -8.594444274902344

Token 776: ' ref' (ID: 2714)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1038416400551796
    2. 'r' → logprob: -2.478841543197632
    3. 'rp' → logprob: -5.228841781616211
    4. '   ' → logprob: -5.978841781616211
    5. 'pr' → logprob: -6.228841781616211
    6. 'q' → logprob: -6.603841781616211
    7. 'res' → logprob: -6.728841781616211
    8. 'v' → logprob: -6.978841781616211
    9. 'p' → logprob: -7.228841781616211
    10. 'if' → logprob: -8.728841781616211

Token 777: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7316059470176697
    2. 'p' → logprob: -0.9816059470176697
    3. ' =' → logprob: -2.7316060066223145
    4. 'l' → logprob: -3.8566060066223145
    5. 'lect' → logprob: -4.2316060066223145
    6. 'lected' → logprob: -4.2316060066223145
    7. '=' → logprob: -4.4816060066223145
    8. 'rect' → logprob: -5.8566060066223145
    9. 'lection' → logprob: -5.8566060066223145
    10. '=p' → logprob: -6.2316060066223145

Token 778: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0206720617134124e-05
    2. ' l' → logprob: -11.50001049041748
    3. '	l' → logprob: -17.750009536743164
    4. '   ' → logprob: -20.000009536743164
    5. ' ' → logprob: -22.375009536743164
    6. '_l' → logprob: -22.500009536743164
    7. '`' → logprob: -23.000009536743164
    8. '```' → logprob: -23.250009536743164
    9. ';l' → logprob: -23.500009536743164
    10. ' ' → logprob: -23.500009536743164

Token 779: '.ref' (ID: 18976)
  Prédit: '.ref'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ref' → logprob: -1.1994775377388578e-05
    2. 'ref' → logprob: -11.625012397766113
    3. '.' → logprob: -13.375012397766113
    4. '.re' → logprob: -14.250012397766113
    5. ' .' → logprob: -14.875012397766113
    6. '.reflect' → logprob: -15.125012397766113
    7. '	ref' → logprob: -16.250011444091797
    8. ' ref' → logprob: -17.250011444091797
    9. '.rect' → logprob: -17.500011444091797
    10. '.refs' → logprob: -17.500011444091797

Token 780: 'rection' (ID: 36365)
  Prédit: 'rection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rection' → logprob: -5.633853652398102e-05
    2. 'rect' → logprob: -10.125056266784668
    3. 're' → logprob: -11.750056266784668
    4. 'raction' → logprob: -13.000056266784668
    5. 'reaction' → logprob: -13.375056266784668
    6. 'rech' → logprob: -13.625056266784668
    7. 'cretion' → logprob: -14.000056266784668
    8. 'reflection' → logprob: -14.500056266784668
    9. 'reck' → logprob: -15.000056266784668
    10. 'recht' → logprob: -15.250056266784668

Token 781: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.3199920178740285e-05
    2. '(' → logprob: -10.750022888183594
    3. '(ref' → logprob: -13.625022888183594
    4. ' (' → logprob: -15.125022888183594
    5. 'p' → logprob: -16.000022888183594
    6. '(point' → logprob: -16.875022888183594
    7. '(
' → logprob: -18.000022888183594
    8. 'ref' → logprob: -18.125022888183594
    9. '(s' → logprob: -18.625022888183594
    10. 's' → logprob: -18.750022888183594

Token 782: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5788816213607788
    2. ')' → logprob: -0.8288816213607788
    3. '()' → logprob: -6.703881740570068
    4. '())
' → logprob: -7.203881740570068
    5. '   ' → logprob: -7.703881740570068
    6. '())' → logprob: -7.828881740570068
    7. ')
' → logprob: -10.32888126373291
    8. ' )
' → logprob: -10.57888126373291
    9. '()
' → logprob: -10.70388126373291
    10. '(p' → logprob: -11.45388126373291

Token 783: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02729700319468975
    2. 'print' → logprob: -3.652297019958496
    3. ' print' → logprob: -7.027297019958496
    4. '
' → logprob: -9.652297019958496
    5. '	print' → logprob: -10.652297019958496
    6. '<|end|>' → logprob: -11.402297019958496
    7. '```' → logprob: -12.027297019958496
    8. ')' → logprob: -14.277297019958496
    9. '.print' → logprob: -14.402297019958496
    10. '       ' → logprob: -15.152297019958496

Token 784: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.8624639324116288e-06
    2. ' print' → logprob: -13.250001907348633
    3. '
' → logprob: -18.500001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '	print' → logprob: -20.250001907348633
    6. '#print' → logprob: -21.375001907348633
    7. '```' → logprob: -21.375001907348633
    8. 'r' → logprob: -21.875001907348633
    9. '-print' → logprob: -22.250001907348633
    10. 'Print' → logprob: -22.625001907348633

Token 785: '(ref' (ID: 27813)
  Prédit: '(ref'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ref' → logprob: -0.001933277933858335
    2. 'ref' → logprob: -6.5019330978393555
    3. '(str' → logprob: -7.7519330978393555
    4. '(re' → logprob: -14.876933097839355
    5. '(f' → logprob: -15.751933097839355
    6. 'str' → logprob: -16.001934051513672
    7. ' ref' → logprob: -16.251934051513672
    8. '(' → logprob: -16.876934051513672
    9. '('{' → logprob: -17.251934051513672
    10. '_ref' → logprob: -17.751934051513672

Token 786: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011814195895567536
    2. '())' → logprob: -6.751181602478027
    3. '()' → logprob: -12.001181602478027
    4. '.x' → logprob: -12.876181602478027
    5. '<|end|>' → logprob: -14.251181602478027
    6. ' )' → logprob: -14.501181602478027
    7. ')x' → logprob: -15.251181602478027
    8. ' ())' → logprob: -15.626181602478027
    9. ').' → logprob: -15.876181602478027
    10. '(' → logprob: -15.876181602478027


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 784
Tokens correctement prédits (1ère position, stricte): 338
Tokens correctement prédits (1ère position, avec adaptation): 378
Tokens correctement prédits (top 10): 700
Précision stricte (1ère position): 43.11%
Précision adaptée (1ère position): 48.21%
Précision (top 10): 89.29%
================================================================================
