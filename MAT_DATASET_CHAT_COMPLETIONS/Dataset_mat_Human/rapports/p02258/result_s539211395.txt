================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
R = [int(input()) for _ in range(N)]
maxi = -(10**10)
mini = R[0]
for i in range(1,N):
    maxi = max(maxi,R[i]-mini)
    mini = min(mini,R[i])
print(maxi)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001967457792488858
    2. '```' → logprob: -9.50019645690918
    3. '(N' → logprob: -10.37519645690918
    4. '`' → logprob: -10.87519645690918
    5. '(
' → logprob: -11.00019645690918
    6. ')' → logprob: -11.62519645690918
    7. '("("' → logprob: -11.62519645690918
    8. ''' → logprob: -11.62519645690918
    9. '()' → logprob: -11.87519645690918
    10. '('' → logprob: -12.25019645690918

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4827296733856201
    2. ')' → logprob: -0.9827296733856201
    3. '()' → logprob: -5.107729911804199
    4. '())' → logprob: -6.732729911804199
    5. '(
' → logprob: -7.732729911804199
    6. '```' → logprob: -8.7327299118042
    7. '))' → logprob: -9.1077299118042
    8. '")' → logprob: -9.3577299118042
    9. '')' → logprob: -9.4827299118042
    10. '(

' → logprob: -9.9827299118042

Token 5: 'R' (ID: 49)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8320107460021973
    2. 'for' → logprob: -1.8320107460021973
    3. 'a' → logprob: -2.0820107460021973
    4. 's' → logprob: -2.2070107460021973
    5. '*' → logprob: -2.5820107460021973
    6. ''' → logprob: -2.8320107460021973
    7. '#' → logprob: -3.2070107460021973
    8. ')' → logprob: -3.2070107460021973
    9. 'i' → logprob: -3.3320107460021973
    10. 'x' → logprob: -3.3320107460021973

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5331253409385681
    2. '=' → logprob: -1.533125400543213
    3. '.' → logprob: -2.908125400543213
    4. ',' → logprob: -3.033125400543213
    5. '[' → logprob: -3.158125400543213
    6. 'a' → logprob: -4.283125400543213
    7. 'A' → logprob: -5.408125400543213
    8. 'E' → logprob: -5.408125400543213
    9. '[i' → logprob: -5.658125400543213
    10. '[:]' → logprob: -5.658125400543213

Token 7: ' [' (ID: 723)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.3517687320709229
    2. 'N' → logprob: -2.101768732070923
    3. 'int' → logprob: -2.476768732070923
    4. 'input' → logprob: -2.476768732070923
    5. ' input' → logprob: -2.601768732070923
    6. ' int' → logprob: -2.851768732070923
    7. ' []' → logprob: -2.851768732070923
    8. ' ' → logprob: -2.976768732070923
    9. '0' → logprob: -2.976768732070923
    10. 'list' → logprob: -3.226768732070923

Token 8: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3471013605594635
    2. '0' → logprob: -1.7221013307571411
    3. ']' → logprob: -2.2221014499664307
    4. 'list' → logprob: -6.222101211547852
    5. ']int' → logprob: -6.597101211547852
    6. '[]' → logprob: -6.972101211547852
    7. ')' → logprob: -7.722101211547852
    8. '(int' → logprob: -7.972101211547852
    9. 'input' → logprob: -8.222101211547852
    10. '[int' → logprob: -8.472101211547852

Token 9: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007165596820414066
    2. '(input' → logprob: -5.007165431976318
    3. '(x' → logprob: -8.382165908813477
    4. '()' → logprob: -9.007165908813477
    5. '(i' → logprob: -10.632165908813477
    6. '()]' → logprob: -10.882165908813477
    7. ']' → logprob: -11.507165908813477
    8. '(a' → logprob: -11.507165908813477
    9. '('' → logprob: -11.632165908813477
    10. '(
' → logprob: -12.132165908813477

Token 10: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00017970333283301443
    2. '()' → logprob: -9.250179290771484
    3. '()]' → logprob: -9.625179290771484
    4. '()))' → logprob: -11.250179290771484
    5. '()),' → logprob: -13.375179290771484
    6. ')' → logprob: -14.125179290771484
    7. ' ())' → logprob: -14.125179290771484
    8. '())
' → logprob: -14.375179290771484
    9. ')]' → logprob: -15.375179290771484
    10. '());' → logprob: -15.875179290771484

Token 11: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007345127407461405
    2. ')]' → logprob: -5.007345199584961
    3. ']' → logprob: -7.757345199584961
    4. ')])' → logprob: -10.132345199584961
    5. ' )' → logprob: -10.507345199584961
    6. ' for' → logprob: -10.632345199584961
    7. 'for' → logprob: -11.132345199584961
    8. '])' → logprob: -11.257345199584961
    9. ')
' → logprob: -11.382345199584961
    10. '[' → logprob: -11.382345199584961

Token 12: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03133534640073776
    2. ' ' → logprob: -3.5313353538513184
    3. ' i' → logprob: -6.781335353851318
    4. '_' → logprob: -8.78133487701416
    5. 'range' → logprob: -8.90633487701416
    6. ' _' → logprob: -9.40633487701416
    7. '_range' → logprob: -11.15633487701416
    8. '(range' → logprob: -11.28133487701416
    9. '  ' → logprob: -11.40633487701416
    10. '	range' → logprob: -11.53133487701416

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6303111910820007
    2. 'range' → logprob: -1.1303112506866455
    3. ' range' → logprob: -2.6303112506866455
    4. 'in' → logprob: -2.6303112506866455
    5. ' ' → logprob: -7.755311012268066
    6. '	range' → logprob: -10.255311012268066
    7. '  ' → logprob: -11.255311012268066
    8. '_' → logprob: -11.255311012268066
    9. ' xrange' → logprob: -12.130311012268066
    10. '(range' → logprob: -12.380311012268066

Token 14: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804171830415726
    2. ' range' → logprob: -3.288041830062866
    3. '	range' → logprob: -15.913042068481445
    4. 'rang' → logprob: -17.413042068481445
    5. '_range' → logprob: -17.788042068481445
    6. '(range' → logprob: -17.913042068481445
    7. '.range' → logprob: -18.038042068481445
    8. ')' → logprob: -19.913042068481445
    9. ' ' → logprob: -20.038042068481445
    10. 'r' → logprob: -20.163042068481445

Token 15: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04863709583878517
    2. '(' → logprob: -3.0486371517181396
    3. '(n' → logprob: -10.173637390136719
    4. '(
' → logprob: -12.298637390136719
    5. ' (' → logprob: -13.298637390136719
    6. 'N' → logprob: -13.423637390136719
    7. '(len' → logprob: -13.423637390136719
    8. '(

' → logprob: -14.423637390136719
    9. ' N' → logprob: -14.923637390136719
    10. '(R' → logprob: -15.423637390136719

Token 16: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000158842682139948
    2. ')' → logprob: -9.12515926361084
    3. ')])' → logprob: -10.87515926361084
    4. ']' → logprob: -10.87515926361084
    5. '])]' → logprob: -11.75015926361084
    6. '')]' → logprob: -13.62515926361084
    7. '])' → logprob: -14.00015926361084
    8. ' )' → logprob: -14.37515926361084
    9. '))' → logprob: -15.25015926361084
    10. ')].' → logprob: -15.62515926361084

Token 17: 'max' (ID: 3228)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.040245532989502
    2. 'M' → logprob: -1.540245532989502
    3. 'r' → logprob: -2.290245532989502
    4. 'max' → logprob: -2.415245532989502
    5. 'print' → logprob: -2.665245532989502
    6. 's' → logprob: -2.790245532989502
    7. 'm' → logprob: -3.665245532989502
    8. 'for' → logprob: -3.790245532989502
    9. 'sum' → logprob: -4.415245532989502
    10. 'S' → logprob: -4.540245532989502

Token 18: 'i' (ID: 72)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004865838214755058
    2. '(' → logprob: -6.004865646362305
    3. '_val' → logprob: -7.004865646362305
    4. '_r' → logprob: -7.754865646362305
    5. '_len' → logprob: -8.504865646362305
    6. '_value' → logprob: -8.629865646362305
    7. '_count' → logprob: -9.254865646362305
    8. '_sum' → logprob: -9.254865646362305
    9. '_max' → logprob: -9.754865646362305
    10. '_R' → logprob: -9.879865646362305

Token 19: ' =' (ID: 314)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05446512624621391
    2. 'mum' → logprob: -3.3044650554656982
    3. '_m' → logprob: -4.179465293884277
    4. '_' → logprob: -7.179465293884277
    5. '=' → logprob: -9.179465293884277
    6. '_max' → logprob: -10.679465293884277
    7. ' =' → logprob: -10.804465293884277
    8. 'mal' → logprob: -11.054465293884277
    9. 'z' → logprob: -11.804465293884277
    10. '	m' → logprob: -12.054465293884277

Token 20: ' -(' (ID: 66319)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9556999802589417
    2. 'max' → logprob: -1.2056999206542969
    3. '0' → logprob: -1.5806999206542969
    4. ' ' → logprob: -2.955699920654297
    5. ' R' → logprob: -3.580699920654297
    6. 'R' → logprob: -4.580699920654297
    7. '-' → logprob: -4.705699920654297
    8. ' -' → logprob: -5.080699920654297
    9. ' float' → logprob: -5.830699920654297
    10. 'float' → logprob: -6.455699920654297

Token 21: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0010343570029363036
    2. 'float' → logprob: -7.376034259796143
    3. '1' → logprob: -8.0010347366333
    4. '100' → logprob: -10.0010347366333
    5. '2' → logprob: -11.2510347366333
    6. 'int' → logprob: -12.2510347366333
    7. '999' → logprob: -12.7510347366333
    8. ' ' → logprob: -13.1260347366333
    9. '101' → logprob: -14.1260347366333
    10. '(' → logprob: -14.2510347366333

Token 22: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.07141727954149246
    2. '10' → logprob: -2.6964173316955566
    3. '7' → logprob: -7.321417331695557
    4. '6' → logprob: -7.946417331695557
    5. '8' → logprob: -8.446416854858398
    6. '12' → logprob: -9.446416854858398
    7. '15' → logprob: -9.696416854858398
    8. '```' → logprob: -10.071416854858398
    9. '18' → logprob: -11.071416854858398
    10. '11' → logprob: -11.196416854858398

Token 23: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.2867046892642975
    2. '10' → logprob: -1.411704659461975
    3. '15' → logprob: -5.6617045402526855
    4. '18' → logprob: -7.2867045402526855
    5. '6' → logprob: -7.4117045402526855
    6. '7' → logprob: -7.7867045402526855
    7. '12' → logprob: -8.786705017089844
    8. '20' → logprob: -9.411705017089844
    9. '8' → logprob: -10.036705017089844
    10. '11' → logprob: -10.411705017089844

Token 24: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003520277969073504
    2. ' )' → logprob: -8.125351905822754
    3. '+' → logprob: -10.125351905822754
    4. '+)' → logprob: -11.750351905822754
    5. '1' → logprob: -12.750351905822754
    6. '))' → logprob: -13.250351905822754
    7. '-' → logprob: -14.625351905822754
    8. '0' → logprob: -14.625351905822754
    9. ')+' → logprob: -15.125351905822754
    10. ')))' → logprob: -15.250351905822754

Token 25: 'mini' (ID: 42752)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39230749011039734
    2. 'for' → logprob: -2.0173075199127197
    3. ' 
' → logprob: -2.2673075199127197
    4. ' for' → logprob: -3.6423075199127197
    5. '<|end|>' → logprob: -3.8923075199127197
    6. '\n' → logprob: -4.017307281494141
    7. '  
' → logprob: -5.267307281494141
    8. '
' → logprob: -5.517307281494141
    9. '\' → logprob: -5.517307281494141
    10. '*' → logprob: -5.767307281494141

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008818071335554123
    2. '=' → logprob: -4.75881814956665
    3. ' ' → logprob: -8.633817672729492
    4. '<|end|>' → logprob: -11.508817672729492
    5. ',' → logprob: -12.633817672729492
    6. ' =
' → logprob: -13.133817672729492
    7. ')' → logprob: -13.133817672729492
    8. '_' → logprob: -13.633817672729492
    9. ' =)' → logprob: -13.633817672729492
    10. ' ,' → logprob: -13.633817672729492

Token 27: ' R' (ID: 460)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01746944896876812
    2. ' ' → logprob: -4.26746940612793
    3. '(' → logprob: -5.76746940612793
    4. ' (' → logprob: -9.14246940612793
    5. '1' → logprob: -10.14246940612793
    6. '+(' → logprob: -11.51746940612793
    7. '  ' → logprob: -13.01746940612793
    8. '   ' → logprob: -13.26746940612793
    9. '101' → logprob: -13.26746940612793
    10. '109' → logprob: -13.39246940612793

Token 28: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03936048224568367
    2. '[:]' → logprob: -3.289360523223877
    3. '<|end|>' → logprob: -7.539360523223877
    4. '.' → logprob: -8.414360046386719
    5. '.copy' → logprob: -8.414360046386719
    6. '[:' → logprob: -8.539360046386719
    7. '```' → logprob: -9.539360046386719
    8. '[max' → logprob: -10.789360046386719
    9. '0' → logprob: -10.914360046386719
    10. '<|end|>' → logprob: -11.539360046386719

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002330992283532396
    2. ' ' → logprob: -8.375232696533203
    3. '-' → logprob: -13.375232696533203
    4. 'i' → logprob: -15.562732696533203
    5. '1' → logprob: -16.250232696533203
    6. '   ' → logprob: -16.312732696533203
    7. '])' → logprob: -16.437732696533203
    8. ']' → logprob: -16.625232696533203
    9. ')' → logprob: -16.625232696533203
    10. '00' → logprob: -17.000232696533203

Token 30: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1512298882007599
    2. ']' → logprob: -2.0262298583984375
    3. '])' → logprob: -5.1512298583984375
    4. ' )' → logprob: -6.2762298583984375
    5. ')]' → logprob: -7.7762298583984375
    6. ' ]' → logprob: -8.776229858398438
    7. ')
' → logprob: -9.276229858398438
    8. '[' → logprob: -10.151229858398438
    9. ')])' → logprob: -10.151229858398438
    10. ' ])' → logprob: -10.276229858398438

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39810702204704285
    2. ' for' → logprob: -1.8981070518493652
    3. '
' → logprob: -2.6481070518493652
    4. '\n' → logprob: -2.8981070518493652
    5. '+' → logprob: -3.7731070518493652
    6. '+
' → logprob: -4.648107051849365
    7. ' 
' → logprob: -4.898107051849365
    8. '<|end|>' → logprob: -5.023107051849365
    9. '```' → logprob: -5.648107051849365
    10. '
' → logprob: -7.648107051849365

Token 32: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.328224241733551
    2. ' r' → logprob: -1.3282241821289062
    3. ' ' → logprob: -4.828224182128906
    4. 'r' → logprob: -5.953224182128906
    5. 'i' → logprob: -6.703224182128906
    6. ' R' → logprob: -6.828224182128906
    7. ' _' → logprob: -7.203224182128906
    8. ' x' → logprob: -7.328224182128906
    9. ' v' → logprob: -8.953224182128906
    10. '_' → logprob: -8.953224182128906

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012684931047260761
    2. 'in' → logprob: -4.3876848220825195
    3. ' ' → logprob: -9.01268482208252
    4. 'n' → logprob: -10.76268482208252
    5. '	in' → logprob: -11.01268482208252
    6. '+' → logprob: -12.51268482208252
    7. '  ' → logprob: -12.76268482208252
    8. ',' → logprob: -13.13768482208252
    9. ' i' → logprob: -13.26268482208252
    10. 's' → logprob: -13.76268482208252

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006734080612659454
    2. 'range' → logprob: -5.0067338943481445
    3. ' ' → logprob: -11.131733894348145
    4. '  ' → logprob: -13.756733894348145
    5. '	range' → logprob: -14.256733894348145
    6. '(range' → logprob: -14.756733894348145
    7. '   ' → logprob: -15.006733894348145
    8. ' xrange' → logprob: -15.131733894348145
    9. ' ran' → logprob: -15.131733894348145
    10. ')' → logprob: -15.256733894348145

Token 35: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012816164642572403
    2. '(N' → logprob: -4.387815952301025
    3. '(len' → logprob: -8.137816429138184
    4. ' (' → logprob: -11.887816429138184
    5. '(n' → logprob: -12.637816429138184
    6. '1' → logprob: -12.762816429138184
    7. '(
' → logprob: -14.387816429138184
    8. ' ' → logprob: -15.762816429138184
    9. '(i' → logprob: -15.887816429138184
    10. 'N' → logprob: -16.262815475463867

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2812638282775879
    2. 'N' → logprob: -1.406263828277588
    3. 'len' → logprob: -9.53126335144043
    4. ' N' → logprob: -11.03126335144043
    5. '0' → logprob: -11.40626335144043
    6. ' ' → logprob: -11.90626335144043
    7. 'n' → logprob: -12.65626335144043
    8. '   ' → logprob: -13.78126335144043
    9. ')' → logprob: -14.90626335144043
    10. '2' → logprob: -14.90626335144043

Token 37: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11549144983291626
    2. ',N' → logprob: -2.3654913902282715
    3. ' ,' → logprob: -4.6154913902282715
    4. ',len' → logprob: -5.3654913902282715
    5. ')' → logprob: -8.61549186706543
    6. '):' → logprob: -9.11549186706543
    7. ',n' → logprob: -9.49049186706543
    8. ' ' → logprob: -9.86549186706543
    9. ',length' → logprob: -10.24049186706543
    10. ' ):' → logprob: -10.49049186706543

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00026097820955328643
    2. ':' → logprob: -8.750261306762695
    3. ')' → logprob: -9.375261306762695
    4. ' ):' → logprob: -11.750261306762695
    5. '):
' → logprob: -11.875261306762695
    6. ']:' → logprob: -13.875261306762695
    7. '>:' → logprob: -14.375261306762695
    8. '}:' → logprob: -14.750261306762695
    9. '+' → logprob: -15.375261306762695
    10. '():' → logprob: -15.500261306762695

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6593465209007263
    2. '    
' → logprob: -2.159346580505371
    3. ' 
' → logprob: -2.409346580505371
    4. ' if' → logprob: -2.534346580505371
    5. '
' → logprob: -2.659346580505371
    6. ' ' → logprob: -2.784346580505371
    7. '```' → logprob: -3.909346580505371
    8. '  
' → logprob: -4.034346580505371
    9. '<|end|>' → logprob: -4.409346580505371
    10. '   
' → logprob: -5.284346580505371

Token 40: ' maxi' (ID: 111201)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5674786567687988
    2. 'if' → logprob: -1.3174786567687988
    3. 'max' → logprob: -2.192478656768799
    4. ' max' → logprob: -3.442478656768799
    5. ' maxi' → logprob: -4.317478656768799
    6. '   ' → logprob: -5.942478656768799
    7. 'mini' → logprob: -6.067478656768799
    8. ' mini' → logprob: -6.567478656768799
    9. ' ' → logprob: -6.817478656768799
    10. '  ' → logprob: -8.19247817993164

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11823208630084991
    2. '=' → logprob: -2.243232011795044
    3. '=max' → logprob: -5.243232250213623
    4. 'max' → logprob: -9.493231773376465
    5. ' max' → logprob: -11.118231773376465
    6. '-' → logprob: -11.993231773376465
    7. ' ' → logprob: -12.868231773376465
    8. ',' → logprob: -12.868231773376465
    9. ' =
' → logprob: -13.368231773376465
    10. '-max' → logprob: -13.493231773376465

Token 42: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.20142142474651337
    2. 'max' → logprob: -1.7014213800430298
    3. '   ' → logprob: -12.451421737670898
    4. '(max' → logprob: -13.201421737670898
    5. '	max' → logprob: -13.576421737670898
    6. ' ' → logprob: -14.951421737670898
    7. ',max' → logprob: -15.576421737670898
    8. '=max' → logprob: -16.2014217376709
    9. ' ' → logprob: -16.3264217376709
    10. '    ' → logprob: -16.3264217376709

Token 43: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.02525772899389267
    2. '(R' → logprob: -3.7752578258514404
    3. '(' → logprob: -6.275257587432861
    4. '(min' → logprob: -9.15025806427002
    5. 'max' → logprob: -12.27525806427002
    6. '((' → logprob: -12.52525806427002
    7. ' (' → logprob: -13.02525806427002
    8. '(r' → logprob: -13.40025806427002
    9. ')' → logprob: -13.65025806427002
    10. '(ma' → logprob: -13.77525806427002

Token 44: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01173187606036663
    2. 'max' → logprob: -5.26173210144043
    3. '(max' → logprob: -5.51173210144043
    4. '(R' → logprob: -6.51173210144043
    5. ')' → logprob: -8.76173210144043
    6. '-i' → logprob: -9.13673210144043
    7. '(' → logprob: -9.38673210144043
    8. '(i' → logprob: -9.38673210144043
    9. '-R' → logprob: -9.51173210144043
    10. 'imax' → logprob: -9.76173210144043

Token 45: ',R' (ID: 48317)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.25159525871276855
    2. ',' → logprob: -1.8765952587127686
    3. ',R' → logprob: -3.0015952587127686
    4. '(' → logprob: -4.001595497131348
    5. ' ,' → logprob: -7.751595497131348
    6. ')' → logprob: -8.501595497131348
    7. ',max' → logprob: -8.751595497131348
    8. ',m' → logprob: -9.001595497131348
    9. '(max' → logprob: -9.126595497131348
    10. ',(' → logprob: -9.501595497131348

Token 46: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.00000286102295
    3. 'i' → logprob: -16.625001907348633
    4. ' [' → logprob: -16.750001907348633
    5. '[I' → logprob: -17.000001907348633
    6. '[
' → logprob: -18.125001907348633
    7. '[j' → logprob: -18.500001907348633
    8. ' ' → logprob: -18.625001907348633
    9. '```' → logprob: -18.750001907348633
    10. '(i' → logprob: -19.250001907348633

Token 47: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3892829716205597
    2. ']-' → logprob: -1.1392829418182373
    3. '-' → logprob: -6.264283180236816
    4. ' ]' → logprob: -8.139283180236816
    5. ' -' → logprob: -8.889283180236816
    6. '[' → logprob: -11.139283180236816
    7. ']+' → logprob: -11.264283180236816
    8. ' ' → logprob: -11.514283180236816
    9. ')-' → logprob: -11.889283180236816
    10. '])-' → logprob: -12.514283180236816

Token 48: 'mini' (ID: 42752)
  Prédit: 'mini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mini' → logprob: -0.0019398193107917905
    2. ' mini' → logprob: -6.25193977355957
    3. 'mi' → logprob: -12.12693977355957
    4. 'min' → logprob: -13.25193977355957
    5. ' ' → logprob: -13.87693977355957
    6. '-mini' → logprob: -13.87693977355957
    7. 'mmi' → logprob: -14.50193977355957
    8. '   ' → logprob: -15.00193977355957
    9. '  ' → logprob: -15.25193977355957
    10. 'мини' → logprob: -15.37693977355957

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002346488763578236
    2. ')
' → logprob: -9.000234603881836
    3. ' )' → logprob: -9.125234603881836
    4. '   ' → logprob: -14.750234603881836
    5. ' )
' → logprob: -14.875234603881836
    6. ')
' → logprob: -15.000234603881836
    7. '))' → logprob: -15.375234603881836
    8. ',' → logprob: -15.625234603881836
    9. ')`' → logprob: -16.000234603881836
    10. ' ' → logprob: -16.125234603881836

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5432162880897522
    2. 'mini' → logprob: -1.0432162284851074
    3. 'if' → logprob: -3.5432162284851074
    4. ' if' → logprob: -4.293216228485107
    5. '    
' → logprob: -4.543216228485107
    6. ' mini' → logprob: -5.418216228485107
    7. '  ' → logprob: -5.793216228485107
    8. '
' → logprob: -6.418216228485107
    9. '  
' → logprob: -6.793216228485107
    10. ' ' → logprob: -7.043216228485107

Token 51: ' mini' (ID: 15065)
  Prédit: 'mini'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mini' (adapté à ' mini') → logprob: -0.023015543818473816
    2. 'if' → logprob: -4.64801549911499
    3. ' mini' → logprob: -4.64801549911499
    4. '   ' → logprob: -6.52301549911499
    5. ' if' → logprob: -6.64801549911499
    6. 'min' → logprob: -7.27301549911499
    7. ' ' → logprob: -10.023015975952148
    8. '  ' → logprob: -10.273015975952148
    9. 'max' → logprob: -10.773015975952148
    10. '    
' → logprob: -11.148015975952148

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20173217356204987
    2. '=' → logprob: -1.7017321586608887
    3. '=min' → logprob: -8.076732635498047
    4. '=max' → logprob: -11.951732635498047
    5. '=
' → logprob: -14.201732635498047
    6. '=

' → logprob: -15.201732635498047
    7. '<|end|>' → logprob: -15.701732635498047
    8. ')' → logprob: -15.951732635498047
    9. 'min' → logprob: -16.201732635498047
    10. ' =
' → logprob: -16.201732635498047

Token 53: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.20142242312431335
    2. 'min' → logprob: -1.7014224529266357
    3. 'max' → logprob: -12.451422691345215
    4. ' max' → logprob: -12.451422691345215
    5. '	min' → logprob: -14.951422691345215
    6. '(min' → logprob: -15.326422691345215
    7. ' mini' → logprob: -16.2014217376709
    8. 'mini' → logprob: -16.3264217376709
    9. ',min' → logprob: -16.3264217376709
    10. '[min' → logprob: -16.5764217376709

Token 54: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0001114106344175525
    2. '(' → logprob: -9.62511157989502
    3. '(max' → logprob: -10.62511157989502
    4. '(R' → logprob: -11.50011157989502
    5. '(mi' → logprob: -11.50011157989502
    6. '(m' → logprob: -15.25011157989502
    7. '(M' → logprob: -15.62511157989502
    8. ' (' → logprob: -16.000110626220703
    9. '(
' → logprob: -17.125110626220703
    10. 'mini' → logprob: -17.500110626220703

Token 55: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013550633564591408
    2. '(R' → logprob: -4.388550758361816
    3. 'mini' → logprob: -7.388550758361816
    4. '(i' → logprob: -8.388550758361816
    5. '(min' → logprob: -9.388550758361816
    6. '(max' → logprob: -10.263550758361816
    7. '(' → logprob: -10.888550758361816
    8. 'max' → logprob: -11.638550758361816
    9. 'ii' → logprob: -11.638550758361816
    10. '(mi' → logprob: -12.013550758361816

Token 56: ',R' (ID: 48317)
  Prédit: ',R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',R' → logprob: -0.06377368420362473
    2. ',' → logprob: -2.8137736320495605
    3. ' ,' → logprob: -6.5637736320495605
    4. 'R' → logprob: -8.188774108886719
    5. '(R' → logprob: -9.813774108886719
    6. ' R' → logprob: -10.188774108886719
    7. '   ' → logprob: -11.688774108886719
    8. ')' → logprob: -12.688774108886719
    9. ',r' → logprob: -12.688774108886719
    10. '(' → logprob: -12.813774108886719

Token 57: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -16.25
    3. '[I' → logprob: -16.375
    4. 'i' → logprob: -16.5
    5. ']' → logprob: -16.625
    6. '```' → logprob: -17.375
    7. ')' → logprob: -17.625
    8. ' [' → logprob: -18.125
    9. '[
' → logprob: -18.375
    10. '][' → logprob: -19.0

Token 58: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00013560164370574057
    2. ')' → logprob: -10.12513542175293
    3. '])
' → logprob: -10.25013542175293
    4. '[i' → logprob: -10.50013542175293
    5. ']' → logprob: -11.50013542175293
    6. ' ])' → logprob: -11.50013542175293
    7. ')])' → logprob: -11.75013542175293
    8. ']))' → logprob: -13.62513542175293
    9. ']])' → logprob: -14.37513542175293
    10. ''])' → logprob: -14.50013542175293

Token 59: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3868820369243622
    2. '(max' → logprob: -1.1368820667266846
    3. '()' → logprob: -12.261881828308105
    4. '(

' → logprob: -13.011881828308105
    5. '(
' → logprob: -13.261881828308105
    6. '("("' → logprob: -14.511881828308105
    7. '('' → logprob: -14.761881828308105
    8. 'max' → logprob: -14.886881828308105
    9. '((' → logprob: -15.386881828308105
    10. ' (' → logprob: -15.636881828308105

Token 61: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1160349458805285e-05
    2. 'imax' → logprob: -12.375011444091797
    3. ')' → logprob: -12.750011444091797
    4. ')i' → logprob: -13.500011444091797
    5. '(i' → logprob: -13.750011444091797
    6. 'max' → logprob: -14.750011444091797
    7. ' i' → logprob: -14.875011444091797
    8. '(max' → logprob: -15.750011444091797
    9. 'ix' → logprob: -16.250011444091797
    10. '	i' → logprob: -16.625011444091797

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -16.25
    3. ' )' → logprob: -16.625
    4. ')
' → logprob: -17.125
    5. ')`' → logprob: -17.875
    6. ')}' → logprob: -19.125
    7. '')' → logprob: -19.625
    8. ')#' → logprob: -20.0
    9. '`)' → logprob: -20.125
    10. '）' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 60
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 47
Précision stricte (1ère position): 51.67%
Précision adaptée (1ère position): 53.33%
Précision (top 10): 78.33%
================================================================================
