================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import sqrt
from typing import List, Tuple

def project(point: complex, begin: complex, end: complex) -> complex:
    tmp = (point - begin) / (end - begin)
    return tmp.real * (end - begin) + begin

if __name__ == "__main__":
    x, y, r = map(int, input().split())
    c = complex(x, y)
    ans: List[Tuple[float, float, float, float]] = []
    q = int(input())

    for _ in range(q):
        res = []
        x, y, z, w = map(int, input().split())
        p1, p2 = complex(x, y), complex(z, w)
        proj = project(c, p1, p2)
        for i in (-1, 1):
            res.append(proj + i * sqrt(
                       r**2 - abs(c - proj)**2) * (p2 - p1) / abs(p2 - p1))
        res.sort(key=lambda x: (x.real, x.imag))
        ans.append((res[0].real, res[0].imag, res[1].real, res[1].imag))

    for a in ans:
        print("{:.6f} {:.6f} {:.6f} {:.6f}".format(*a))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' sqrt' (ID: 44237)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.2518087923526764
    2. ' sqrt' → logprob: -1.751808762550354
    3. 'pow' → logprob: -4.0018086433410645
    4. 'pi' → logprob: -4.7518086433410645
    5. 'sin' → logprob: -4.7518086433410645
    6. ' pi' → logprob: -5.0018086433410645
    7. 'import' → logprob: -6.3768086433410645
    8. 'ceil' → logprob: -7.0018086433410645
    9. ' sin' → logprob: -7.1268086433410645
    10. 'log' → logprob: -7.6268086433410645

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001213806332089007
    2. '\(' → logprob: -7.251214027404785
    3. '(
' → logprob: -8.376214027404785
    4. '\n' → logprob: -9.126214027404785
    5. '\' → logprob: -9.751214027404785
    6. ',' → logprob: -10.626214027404785
    7. 'a' → logprob: -11.126214027404785
    8. 'def' → logprob: -11.751214027404785
    9. '#' → logprob: -11.876214027404785
    10. '```' → logprob: -12.001214027404785

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.032494936138391495
    2. '(
' → logprob: -3.5324950218200684
    3. '
' → logprob: -6.907495021820068
    4. '\(' → logprob: -7.532495021820068
    5. '\n' → logprob: -7.907495021820068
    6. '(

' → logprob: -8.15749454498291
    7. '```' → logprob: -8.90749454498291
    8. '\' → logprob: -9.28249454498291
    9. '`' → logprob: -9.78249454498291
    10. ',' → logprob: -10.15749454498291

Token 6: ' typing' (ID: 34152)
  Prédit: ' cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cm' → logprob: -0.4773811399936676
    2. 'cmath' → logprob: -1.3523811101913452
    3. ' random' → logprob: -2.8523812294006348
    4. ' sys' → logprob: -4.352381229400635
    5. ' os' → logprob: -4.477381229400635
    6. ' sym' → logprob: -4.852381229400635
    7. 'random' → logprob: -4.852381229400635
    8. ' math' → logprob: -5.227381229400635
    9. ' itertools' → logprob: -5.477381229400635
    10. 'cm' → logprob: -5.602381229400635

Token 7: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5816451907157898
    2. ' import' → logprob: -0.8316451907157898
    3. '_import' → logprob: -5.9566450119018555
    4. '```' → logprob: -6.8316450119018555
    5. '_' → logprob: -6.9566450119018555
    6. '.' → logprob: -7.8316450119018555
    7. '<|end|>' → logprob: -8.831645011901855
    8. ' ' → logprob: -9.081645011901855
    9. '.import' → logprob: -9.331645011901855
    10. '[' → logprob: -9.331645011901855

Token 8: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.6639145016670227
    2. 'List' → logprob: -1.288914442062378
    3. 'Any' → logprob: -2.538914442062378
    4. ' Any' → logprob: -3.288914442062378
    5. ' Union' → logprob: -3.413914442062378
    6. ' Optional' → logprob: -3.663914442062378
    7. 'Optional' → logprob: -4.163914680480957
    8. 'Union' → logprob: -4.413914680480957
    9. 'Iterable' → logprob: -5.788914680480957
    10. 'Tuple' → logprob: -7.288914680480957

Token 9: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08062253147363663
    2. '```' → logprob: -2.830622434616089
    3. '
' → logprob: -4.830622673034668
    4. '\' → logprob: -5.455622673034668
    5. '\n' → logprob: -5.580622673034668
    6. '``' → logprob: -6.705622673034668
    7. '

' → logprob: -7.955622673034668
    8. 'class' → logprob: -9.080622673034668
    9. 'd' → logprob: -9.330622673034668
    10. ',' → logprob: -9.330622673034668

Token 10: ' Tuple' (ID: 50841)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -1.4803615808486938
    2. 'Optional' → logprob: -1.4803615808486938
    3. 'Tuple' → logprob: -1.6053615808486938
    4. ' Optional' → logprob: -1.8553615808486938
    5. ' Tuple' → logprob: -2.1053614616394043
    6. 'Union' → logprob: -3.6053614616394043
    7. ' Callable' → logprob: -3.8553614616394043
    8. 'Any' → logprob: -5.355361461639404
    9. 'Callable' → logprob: -5.355361461639404
    10. ' Any' → logprob: -6.230361461639404

Token 11: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26126912236213684
    2. '```' → logprob: -1.5112690925598145
    3. '\' → logprob: -5.5112690925598145
    4. '\n' → logprob: -6.0112690925598145
    5. '
' → logprob: -6.8862690925598145
    6. '``' → logprob: -7.2612690925598145
    7. '`' → logprob: -8.386269569396973
    8. ':' → logprob: -8.886269569396973
    9. '<|end|>' → logprob: -9.011269569396973
    10. '(' → logprob: -9.636269569396973

Token 12: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5822880268096924
    2. 'def' → logprob: -0.8322880268096924
    3. 'de' → logprob: -5.457287788391113
    4. '```' → logprob: -6.207287788391113
    5. '`' → logprob: -10.457287788391113
    6. 'class' → logprob: -11.582287788391113
    7. '``' → logprob: -12.582287788391113
    8. 'D' → logprob: -13.082287788391113
    9. '\' → logprob: -13.707287788391113
    10. '"""' → logprob: -14.082287788391113

Token 13: ' project' (ID: 2993)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0029902977403253317
    2. ' sqrt' → logprob: -6.627990245819092
    3. ' calculate' → logprob: -6.752990245819092
    4. ' square' → logprob: -8.37799072265625
    5. ' space' → logprob: -9.12799072265625
    6. ' compute' → logprob: -9.87799072265625
    7. ' ' → logprob: -10.75299072265625
    8. '_' → logprob: -11.12799072265625
    9. ' find' → logprob: -11.12799072265625
    10. ' )' → logprob: -12.00299072265625

Token 14: '(point' (ID: 46989)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008175170049071312
    2. '(' → logprob: -5.508175373077393
    3. ' ' → logprob: -6.008175373077393
    4. '_space' → logprob: -7.633175373077393
    5. ' _' → logprob: -8.008174896240234
    6. ' (' → logprob: -8.258174896240234
    7. '_s' → logprob: -8.883174896240234
    8. 'ed' → logprob: -9.258174896240234
    9. ')' → logprob: -10.258174896240234
    10. '_to' → logprob: -10.508174896240234

Token 15: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10575230419635773
    2. ':' → logprob: -2.3557522296905518
    3. ')' → logprob: -5.480752468109131
    4. 's' → logprob: -7.605752468109131
    5. '=' → logprob: -8.355751991271973
    6. '):' → logprob: -8.605751991271973
    7. '[' → logprob: -8.980751991271973
    8. ' ,' → logprob: -9.855751991271973
    9. '<|end|>' → logprob: -9.855751991271973
    10. ',)' → logprob: -10.480751991271973

Token 16: ' complex' (ID: 8012)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.3258931338787079
    2. ' Tuple' → logprob: -1.3258931636810303
    3. 'Tuple' → logprob: -5.075892925262451
    4. 'List' → logprob: -5.075892925262451
    5. ' tuple' → logprob: -10.82589340209961
    6. ')' → logprob: -10.95089340209961
    7. ' )' → logprob: -12.20089340209961
    8. '(List' → logprob: -12.45089340209961
    9. ' ' → logprob: -12.95089340209961
    10. 'tuple' → logprob: -12.95089340209961

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02065587230026722
    2. ')' → logprob: -3.895655870437622
    3. ' ,' → logprob: -9.770655632019043
    4. ':' → logprob: -11.020655632019043
    5. '):' → logprob: -11.020655632019043
    6. ',p' → logprob: -11.520655632019043
    7. ',)' → logprob: -12.895655632019043
    8. '<|end|>' → logprob: -13.020655632019043
    9. ' )' → logprob: -13.145655632019043
    10. '<|end|>' → logprob: -13.270655632019043

Token 18: ' begin' (ID: 4252)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5437480211257935
    2. ' vector' → logprob: -1.5437480211257935
    3. ' direction' → logprob: -2.543747901916504
    4. ' axis' → logprob: -2.918747901916504
    5. 'vector' → logprob: -3.918747901916504
    6. 'line' → logprob: -3.918747901916504
    7. ' onto' → logprob: -5.043747901916504
    8. 'onto' → logprob: -5.168747901916504
    9. 'axis' → logprob: -5.543747901916504
    10. ' plane' → logprob: -5.668747901916504

Token 19: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11444104462862015
    2. ',' → logprob: -2.739441156387329
    3. '=' → logprob: -3.239441156387329
    4. ')' → logprob: -5.98944091796875
    5. '_point' → logprob: -6.48944091796875
    6. '_:' → logprob: -10.36444091796875
    7. '):' → logprob: -10.36444091796875
    8. ' =' → logprob: -10.48944091796875
    9. 'point' → logprob: -10.73944091796875
    10. 'ing' → logprob: -10.86444091796875

Token 20: ' complex' (ID: 8012)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.4287570118904114
    2. ' complex' → logprob: -1.0537569522857666
    3. ')' → logprob: -10.428756713867188
    4. '_complex' → logprob: -11.928756713867188
    5. ' complexe' → logprob: -12.053756713867188
    6. '<|end|>' → logprob: -12.553756713867188
    7. 'Complex' → logprob: -12.678756713867188
    8. 'point' → logprob: -13.303756713867188
    9. ' komplex' → logprob: -13.928756713867188
    10. '<|end|>' → logprob: -14.053756713867188

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004648234229534864
    2. ')' → logprob: -5.379648208618164
    3. ' ,' → logprob: -10.629648208618164
    4. '):' → logprob: -13.254648208618164
    5. ',)' → logprob: -14.379648208618164
    6. ' )' → logprob: -15.129648208618164
    7. ',line' → logprob: -15.129648208618164
    8. '<|end|>' → logprob: -15.754648208618164
    9. '),' → logprob: -15.879648208618164
    10. '<|end|>' → logprob: -15.879648208618164

Token 22: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.42885732650756836
    2. ' end' → logprob: -1.0538573265075684
    3. ' ' → logprob: -9.678857803344727
    4. 'direction' → logprob: -10.803857803344727
    5. '	end' → logprob: -10.803857803344727
    6. ' direction' → logprob: -10.803857803344727
    7. '  ' → logprob: -11.553857803344727
    8. '   ' → logprob: -12.178857803344727
    9. ')' → logprob: -12.678857803344727
    10. ',end' → logprob: -12.803857803344727

Token 23: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026784732937812805
    2. ')' → logprob: -3.651784658432007
    3. '):' → logprob: -7.651784896850586
    4. ',' → logprob: -12.526784896850586
    5. ' :' → logprob: -13.526784896850586
    6. ' )' → logprob: -13.901784896850586
    7. '```' → logprob: -14.276784896850586
    8. '=' → logprob: -14.401784896850586
    9. '),' → logprob: -15.026784896850586
    10. ')->' → logprob: -15.276784896850586

Token 24: ' complex' (ID: 8012)
  Prédit: ' complex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complex' → logprob: -0.16083553433418274
    2. 'complex' → logprob: -1.9108355045318604
    3. ')' → logprob: -7.4108357429504395
    4. ' )' → logprob: -13.035835266113281
    5. '_complex' → logprob: -13.410835266113281
    6. ' complexe' → logprob: -13.785835266113281
    7. 'Complex' → logprob: -14.535835266113281
    8. ' complexo' → logprob: -14.785835266113281
    9. ' komplex' → logprob: -15.410835266113281
    10. ' ' → logprob: -15.660835266113281

Token 25: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003209918737411499
    2. '):' → logprob: -5.753210067749023
    3. ')->' → logprob: -10.628210067749023
    4. ' )' → logprob: -12.378210067749023
    5. '`)' → logprob: -13.628210067749023
    6. '   ' → logprob: -14.128210067749023
    7. ':' → logprob: -14.253210067749023
    8. ',' → logprob: -15.378210067749023
    9. '->' → logprob: -15.753210067749023
    10. '')' → logprob: -15.753210067749023

Token 26: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10625334084033966
    2. ' ->' → logprob: -3.4812533855438232
    3. '->' → logprob: -3.4812533855438232
    4. ')' → logprob: -3.6062533855438232
    5. ')->' → logprob: -5.106253147125244
    6. '):' → logprob: -5.231253147125244
    7. ' :' → logprob: -7.856253147125244
    8. '   ' → logprob: -8.606253623962402
    9. ':return' → logprob: -10.231253623962402
    10. '>' → logprob: -10.481253623962402

Token 27: ' complex' (ID: 8012)
  Prédit: ' complex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complex' → logprob: -0.576836884021759
    2. 'complex' → logprob: -0.826836884021759
    3. 'float' → logprob: -7.701837062835693
    4. ' float' → logprob: -7.951837062835693
    5. 'Tuple' → logprob: -9.826836585998535
    6. ' Tuple' → logprob: -10.451836585998535
    7. 'Complex' → logprob: -12.326836585998535
    8. 'List' → logprob: -13.826836585998535
    9. 'int' → logprob: -14.076836585998535
    10. ' ' → logprob: -14.451836585998535

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000622249732259661
    2. ' :' → logprob: -7.625622272491455
    3. '):' → logprob: -9.125621795654297
    4. ':**' → logprob: -11.500621795654297
    5. ':return' → logprob: -12.125621795654297
    6. '():' → logprob: -12.875621795654297
    7. '   ' → logprob: -13.750621795654297
    8. ':
' → logprob: -14.000621795654297
    9. ':def' → logprob: -14.000621795654297
    10. '':' → logprob: -14.125621795654297

Token 29: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.582775890827179
    2. '   ' → logprob: -0.832775890827179
    3. '    ' → logprob: -6.207776069641113
    4. '.' → logprob: -6.957776069641113
    5. '):' → logprob: -6.957776069641113
    6. ' :' → logprob: -7.332776069641113
    7. ':
' → logprob: -7.582776069641113
    8. ')' → logprob: -8.207776069641113
    9. '```' → logprob: -8.332776069641113
    10. ' ' → logprob: -8.332776069641113

Token 30: ' tmp' (ID: 8919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5232913494110107
    2. ' if' → logprob: -2.0232913494110107
    3. 'b' → logprob: -2.2732913494110107
    4. ' line' → logprob: -3.0232913494110107
    5. ' vector' → logprob: -3.2732913494110107
    6. 'if' → logprob: -3.7732913494110107
    7. 'v' → logprob: -4.27329158782959
    8. 'vector' → logprob: -5.02329158782959
    9. ' ab' → logprob: -5.02329158782959
    10. ' b' → logprob: -5.39829158782959

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6937339901924133
    2. ' =' → logprob: -0.6937339901924133
    3. ' ' → logprob: -8.193734169006348
    4. '_point' → logprob: -9.943734169006348
    5. '_' → logprob: -10.068734169006348
    6. '_vector' → logprob: -10.443734169006348
    7. '_vec' → logprob: -10.693734169006348
    8. 'vector' → logprob: -11.068734169006348
    9. '=end' → logprob: -11.193734169006348
    10. '.' → logprob: -11.193734169006348

Token 32: ' (' (ID: 350)
  Prédit: '(end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.2810567617416382
    2. 'end' → logprob: -1.6560567617416382
    3. '(begin' → logprob: -3.7810568809509277
    4. '(point' → logprob: -4.281056880950928
    5. 'begin' → logprob: -5.406056880950928
    6. ' (' → logprob: -5.531056880950928
    7. ' end' → logprob: -5.906056880950928
    8. '((' → logprob: -5.906056880950928
    9. 'point' → logprob: -6.031056880950928
    10. '(' → logprob: -7.156056880950928

Token 33: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0049510011449456215
    2. '(point' → logprob: -5.754951000213623
    3. 'end' → logprob: -6.379951000213623
    4. ' point' → logprob: -10.379951477050781
    5. '(end' → logprob: -10.379951477050781
    6. '(' → logprob: -12.379951477050781
    7. '   ' → logprob: -12.629951477050781
    8. 'begin' → logprob: -12.879951477050781
    9. '	point' → logprob: -13.254951477050781
    10. ' (' → logprob: -13.504951477050781

Token 34: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04103706404566765
    2. '-' → logprob: -3.416037082672119
    3. '-b' → logprob: -4.916037082672119
    4. '-end' → logprob: -11.416036605834961
    5. '-BEGIN' → logprob: -11.916036605834961
    6. ' ' → logprob: -12.291036605834961
    7. '-real' → logprob: -12.666036605834961
    8. '   ' → logprob: -12.916036605834961
    9. '	' → logprob: -13.166036605834961
    10. ' ' → logprob: -13.291036605834961

Token 35: ' begin' (ID: 4252)
  Prédit: 'begin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'begin' → logprob: -0.0005007279687561095
    2. ' begin' → logprob: -7.625500679016113
    3. '	begin' → logprob: -11.500500679016113
    4. '(begin' → logprob: -13.000500679016113
    5. '.begin' → logprob: -17.25050163269043
    6. 'beg' → logprob: -17.25050163269043
    7. ' ' → logprob: -17.25050163269043
    8. 'end' → logprob: -17.25050163269043
    9. ')' → logprob: -17.37550163269043
    10. '_begin' → logprob: -17.62550163269043

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002956591488327831
    2. ')*' → logprob: -8.625295639038086
    3. ')*(' → logprob: -9.875295639038086
    4. '   ' → logprob: -10.875295639038086
    5. ')/(' → logprob: -11.500295639038086
    6. ').' → logprob: -11.625295639038086
    7. ' )' → logprob: -12.000295639038086
    8. ')
' → logprob: -12.125295639038086
    9. ')/' → logprob: -12.625295639038086
    10. '-' → logprob: -12.625295639038086

Token 37: ' /' (ID: 820)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20120015740394592
    2. '.con' → logprob: -2.451200246810913
    3. ' *' → logprob: -3.701200246810913
    4. '/' → logprob: -3.701200246810913
    5. '   ' → logprob: -4.076200008392334
    6. 'con' → logprob: -4.951200008392334
    7. ')' → logprob: -5.076200008392334
    8. ' /' → logprob: -5.201200008392334
    9. '*(' → logprob: -5.326200008392334
    10. '-' → logprob: -6.576200008392334

Token 38: ' (' (ID: 350)
  Prédit: '(end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.007767155766487122
    2. ' (' → logprob: -4.882767200469971
    3. '(abs' → logprob: -8.882766723632812
    4. '(' → logprob: -11.382766723632812
    5. '=end' → logprob: -12.507766723632812
    6. ',end' → logprob: -13.507766723632812
    7. '   ' → logprob: -14.007766723632812
    8. '[end' → logprob: -14.632766723632812
    9. '(begin' → logprob: -14.882766723632812
    10. 'abs' → logprob: -14.882766723632812

Token 39: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.025641705840826035
    2. ' end' → logprob: -4.025641918182373
    3. '(end' → logprob: -4.900641918182373
    4. ' (' → logprob: -11.775641441345215
    5. '	end' → logprob: -12.775641441345215
    6. '[end' → logprob: -13.025641441345215
    7. '=end' → logprob: -13.150641441345215
    8. ':end' → logprob: -13.275641441345215
    9. ',end' → logprob: -13.650641441345215
    10. '(' → logprob: -13.900641441345215

Token 40: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12692999839782715
    2. '-' → logprob: -2.126929998397827
    3. ' ' → logprob: -13.751930236816406
    4. '   ' → logprob: -15.501930236816406
    5. '-start' → logprob: -15.501930236816406
    6. '-BEGIN' → logprob: -15.751930236816406
    7. '-b' → logprob: -16.876930236816406
    8. '  ' → logprob: -17.001930236816406
    9. ' ' → logprob: -17.001930236816406
    10. '<|end|>' → logprob: -17.501930236816406

Token 41: ' begin' (ID: 4252)
  Prédit: 'begin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'begin' → logprob: -0.014183126389980316
    2. ' begin' → logprob: -4.264183044433594
    3. '	begin' → logprob: -11.264183044433594
    4. '(begin' → logprob: -12.389183044433594
    5. 'end' → logprob: -14.514183044433594
    6. ' ' → logprob: -14.514183044433594
    7. '.begin' → logprob: -14.889183044433594
    8. 'beginn' → logprob: -14.889183044433594
    9. '_begin' → logprob: -15.139183044433594
    10. 'beg' → logprob: -15.514183044433594

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7491250875755213e-05
    2. ')
' → logprob: -10.875027656555176
    3. ' )' → logprob: -11.750027656555176
    4. '   ' → logprob: -15.750027656555176
    5. ')

' → logprob: -15.875027656555176
    6. ')**' → logprob: -16.00002670288086
    7. '))' → logprob: -16.75002670288086
    8. ')return' → logprob: -17.00002670288086
    9. ')
' → logprob: -17.00002670288086
    10. '}' → logprob: -17.62502670288086

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16286180913448334
    2. '<|end|>' → logprob: -2.7878618240356445
    3. '
' → logprob: -3.4128618240356445
    4. 'return' → logprob: -3.7878618240356445
    5. '*' → logprob: -4.5378618240356445
    6. ')' → logprob: -5.0378618240356445
    7. '<|end|>' → logprob: -5.6628618240356445
    8. ' return' → logprob: -5.9128618240356445
    9. '[' → logprob: -6.6628618240356445
    10. '    
' → logprob: -6.7878618240356445

Token 44: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8585430383682251
    2. 'if' → logprob: -0.9835430383682251
    3. '   ' → logprob: -2.2335429191589355
    4. 'tmp' → logprob: -2.9835429191589355
    5. ' if' → logprob: -3.6085429191589355
    6. 't' → logprob: -4.4835429191589355
    7. 'real' → logprob: -5.7335429191589355
    8. ' return' → logprob: -6.9835429191589355
    9. 'result' → logprob: -7.4835429191589355
    10. ' t' → logprob: -8.483543395996094

Token 45: ' tmp' (ID: 8919)
  Prédit: 'begin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'begin' → logprob: -0.031193235889077187
    2. ' begin' → logprob: -3.531193256378174
    3. '(begin' → logprob: -6.656193256378174
    4. 'tmp' → logprob: -10.406192779541016
    5. 'complex' → logprob: -10.531192779541016
    6. 'beg' → logprob: -10.531192779541016
    7. ' complex' → logprob: -11.156192779541016
    8. ' (' → logprob: -11.281192779541016
    9. '   ' → logprob: -11.281192779541016
    10. '(' → logprob: -11.781192779541016

Token 46: '.real' (ID: 63800)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31575098633766174
    2. '.real' → logprob: -1.6907509565353394
    3. '<|end|>' → logprob: -3.440751075744629
    4. ' if' → logprob: -3.440751075744629
    5. '*' → logprob: -4.190751075744629
    6. 'if' → logprob: -6.190751075744629
    7. '.con' → logprob: -6.940751075744629
    8. ' ' → logprob: -7.440751075744629
    9. '0' → logprob: -7.815751075744629
    10. 'real' → logprob: -7.940751075744629

Token 47: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.006919968873262405
    2. ' +' → logprob: -5.381919860839844
    3. '<|end|>' → logprob: -7.131919860839844
    4. '+' → logprob: -7.506919860839844
    5. ' ' → logprob: -8.006919860839844
    6. '*' → logprob: -8.256919860839844
    7. ',' → logprob: -8.881919860839844
    8. ')' → logprob: -9.131919860839844
    9. ' ```' → logprob: -11.131919860839844
    10. '0' → logprob: -11.256919860839844

Token 48: ' (' (ID: 350)
  Prédit: '(end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.04604734480381012
    2. ' (' → logprob: -3.1710474491119385
    3. 'end' → logprob: -5.921047210693359
    4. ' end' → logprob: -8.04604721069336
    5. '=end' → logprob: -10.92104721069336
    6. '(begin' → logprob: -11.79604721069336
    7. ',end' → logprob: -12.42104721069336
    8. '(' → logprob: -12.79604721069336
    9. '[end' → logprob: -13.17104721069336
    10. ':end' → logprob: -13.79604721069336

Token 49: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0025719713885337114
    2. '(end' → logprob: -6.127572059631348
    3. ' end' → logprob: -7.877572059631348
    4. ':end' → logprob: -13.002572059631348
    5. '=end' → logprob: -13.752572059631348
    6. ')' → logprob: -14.002572059631348
    7. ' (' → logprob: -14.002572059631348
    8. '(' → logprob: -14.127572059631348
    9. '>end' → logprob: -14.752572059631348
    10. '[end' → logprob: -14.877572059631348

Token 50: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02103670872747898
    2. '-' → logprob: -3.8960366249084473
    3. '-real' → logprob: -7.646036624908447
    4. ')' → logprob: -12.646037101745605
    5. '.real' → logprob: -12.896037101745605
    6. '-b' → logprob: -13.146037101745605
    7. ' ' → logprob: -13.146037101745605
    8. '-start' → logprob: -13.771037101745605
    9. '-BEGIN' → logprob: -14.021037101745605
    10. '-re' → logprob: -14.146037101745605

Token 51: ' begin' (ID: 4252)
  Prédit: 'begin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'begin' → logprob: -0.006721417419612408
    2. ' begin' → logprob: -5.006721496582031
    3. '(begin' → logprob: -12.631721496582031
    4. '	begin' → logprob: -13.006721496582031
    5. '.begin' → logprob: -15.006721496582031
    6. ' ' → logprob: -16.88172149658203
    7. '_begin' → logprob: -17.13172149658203
    8. 'beg' → logprob: -17.13172149658203
    9. 'beginn' → logprob: -17.13172149658203
    10. '<|end|>' → logprob: -18.25672149658203

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002831464516930282
    2. ' )' → logprob: -8.750283241271973
    3. ')+' → logprob: -9.000283241271973
    4. '<|end|>' → logprob: -14.875283241271973
    5. '+' → logprob: -15.250283241271973
    6. ')
' → logprob: -15.750283241271973
    7. ')return' → logprob: -16.625282287597656
    8. ' +' → logprob: -16.625282287597656
    9. '）' → logprob: -16.750282287597656
    10. ']' → logprob: -16.750282287597656

Token 53: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20147141814231873
    2. '+' → logprob: -1.7014714479446411
    3. '<|end|>' → logprob: -10.951471328735352
    4. ' ' → logprob: -11.076471328735352
    5. ' plus' → logprob: -11.951471328735352
    6. 'real' → logprob: -12.201471328735352
    7. '.real' → logprob: -12.951471328735352
    8. '   ' → logprob: -13.951471328735352
    9. ' +
' → logprob: -13.951471328735352
    10. '[' → logprob: -13.951471328735352

Token 54: ' begin' (ID: 4252)
  Prédit: 'begin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'begin' → logprob: -0.001038883114233613
    2. ' begin' → logprob: -6.876039028167725
    3. '(begin' → logprob: -12.376038551330566
    4. '	begin' → logprob: -13.626038551330566
    5. '.begin' → logprob: -14.876038551330566
    6. '_begin' → logprob: -16.501039505004883
    7. '<|end|>' → logprob: -16.626039505004883
    8. 'beginn' → logprob: -16.876039505004883
    9. 'BEGIN' → logprob: -18.501039505004883
    10. ' ' → logprob: -18.626039505004883

Token 55: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.376444011926651
    2. 'def' → logprob: -1.2514439821243286
    3. '<|end|>' → logprob: -4.376443862915039
    4. '#' → logprob: -4.751443862915039
    5. '```' → logprob: -6.001443862915039
    6. '\n' → logprob: -7.251443862915039
    7. '\' → logprob: -7.501443862915039
    8. ' ' → logprob: -8.001443862915039
    9. 'n' → logprob: -8.126443862915039
    10. '<|end|>' → logprob: -8.126443862915039

Token 56: 'if' (ID: 366)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8688617944717407
    2. '
' → logprob: -0.9938617944717407
    3. '#' → logprob: -1.7438617944717407
    4. '<|end|>' → logprob: -3.868861675262451
    5. '```' → logprob: -4.993861675262451
    6. '\' → logprob: -6.493861675262451
    7. '\n' → logprob: -6.493861675262451
    8. 'x' → logprob: -7.368861675262451
    9. ' ' → logprob: -7.618861675262451
    10. '[' → logprob: -7.868861675262451

Token 57: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.001414996455423534
    2. '__' → logprob: -6.876414775848389
    3. ' ' → logprob: -8.501415252685547
    4. ' ' → logprob: -9.501415252685547
    5. ' True' → logprob: -10.001415252685547
    6. '_' → logprob: -10.501415252685547
    7. '  ' → logprob: -10.876415252685547
    8. ' isinstance' → logprob: -12.501415252685547
    9. ' not' → logprob: -13.001415252685547
    10. ' _' → logprob: -13.001415252685547

Token 58: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0011822503292933106
    2. '==' → logprob: -7.3761820793151855
    3. ' ==' → logprob: -8.501182556152344
    4. '__.__' → logprob: -8.626182556152344
    5. '.__' → logprob: -10.001182556152344
    6. '__.' → logprob: -10.126182556152344
    7. '.' → logprob: -10.626182556152344
    8. '_' → logprob: -10.751182556152344
    9. '[' → logprob: -11.251182556152344
    10. 'name' → logprob: -11.751182556152344

Token 59: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.822646693966817e-06
    2. '_' → logprob: -12.000007629394531
    3. '____' → logprob: -14.250007629394531
    4. '__.__' → logprob: -14.500007629394531
    5. '___' → logprob: -15.250007629394531
    6. '__
' → logprob: -16.00000762939453
    7. '__

' → logprob: -17.12500762939453
    8. '==' → logprob: -17.62500762939453
    9. '__.' → logprob: -18.62500762939453
    10. '______' → logprob: -18.87500762939453

Token 60: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0008852534228935838
    2. '==' → logprob: -7.875885486602783
    3. ' ==' → logprob: -8.000885009765625
    4. '__.__' → logprob: -9.125885009765625
    5. '__.' → logprob: -10.875885009765625
    6. '_' → logprob: -10.875885009765625
    7. '___' → logprob: -12.000885009765625
    8. '=="' → logprob: -12.000885009765625
    9. '.__' → logprob: -12.125885009765625
    10. '.' → logprob: -13.875885009765625

Token 61: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014165159314870834
    2. ''' → logprob: -4.264164924621582
    3. ' "' → logprob: -13.889164924621582
    4. '__' → logprob: -14.639164924621582
    5. ' "__' → logprob: -15.514164924621582
    6. '_' → logprob: -17.7641658782959
    7. ' ' → logprob: -18.2641658782959
    8. '"user' → logprob: -18.3891658782959
    9. ' '' → logprob: -18.5141658782959
    10. '`' → logprob: -18.7641658782959

Token 62: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.088346359931165e-07
    2. 'm' → logprob: -15.000000953674316
    3. 'name' → logprob: -15.000000953674316
    4. ' main' → logprob: -15.875000953674316
    5. 'ma' → logprob: -16.625
    6. '_main' → logprob: -17.5
    7. '-main' → logprob: -19.0
    8. 'maine' → logprob: -19.0
    9. 'built' → logprob: -19.25
    10. 'init' → logprob: -19.5

Token 63: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008401098661124706
    2. '__:' → logprob: -5.258400917053223
    3. '__":
' → logprob: -5.758400917053223
    4. '_' → logprob: -12.508400917053223
    5. '__["' → logprob: -14.133400917053223
    6. '":' → logprob: -14.633400917053223
    7. '__",' → logprob: -14.633400917053223
    8. '___' → logprob: -15.258400917053223
    9. '____' → logprob: -16.00840187072754
    10. '__':
' → logprob: -16.25840187072754

Token 64: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.654817521572113
    2. '   ' → logprob: -0.779817521572113
    3. '<|end|>' → logprob: -5.279817581176758
    4. '[' → logprob: -5.404817581176758
    5. ')' → logprob: -6.029817581176758
    6. '
' → logprob: -6.404817581176758
    7. '```' → logprob: -6.404817581176758
    8. '    
' → logprob: -6.779817581176758
    9. ':
' → logprob: -7.029817581176758
    10. '<|end|>' → logprob: -7.154817581176758

Token 65: ' x' (ID: 1215)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9360870718955994
    2. ' p' → logprob: -1.5610871315002441
    3. 'points' → logprob: -1.8110871315002441
    4. 'point' → logprob: -2.186087131500244
    5. ' points' → logprob: -2.936087131500244
    6. '   ' → logprob: -3.061087131500244
    7. ' point' → logprob: -4.436087131500244
    8. 'start' → logprob: -6.061087131500244
    9. ' start' → logprob: -6.186087131500244
    10. 'result' → logprob: -7.186087131500244

Token 66: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44276317954063416
    2. '_' → logprob: -1.0677632093429565
    3. '=' → logprob: -5.067763328552246
    4. '_point' → logprob: -6.442763328552246
    5. '   ' → logprob: -6.442763328552246
    6. ',' → logprob: -6.817763328552246
    7. 'y' → logprob: -7.317763328552246
    8. 'point' → logprob: -7.567763328552246
    9. '_points' → logprob: -8.317763328552246
    10. ' _' → logprob: -8.442763328552246

Token 67: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001327499165199697
    2. ' y' → logprob: -6.6263275146484375
    3. '=' → logprob: -14.001327514648438
    4. ' =' → logprob: -15.251327514648438
    5. ' ' → logprob: -16.251327514648438
    6. '	y' → logprob: -16.251327514648438
    7. '   ' → logprob: -16.376327514648438
    8. '  ' → logprob: -16.876327514648438
    9. '_y' → logprob: -17.126327514648438
    10. '0' → logprob: -17.376327514648438

Token 68: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09517879784107208
    2. '=' → logprob: -2.7201788425445557
    3. ',' → logprob: -3.7201788425445557
    4. '<|end|>' → logprob: -7.595178604125977
    5. ' ' → logprob: -9.595178604125977
    6. ')' → logprob: -9.970178604125977
    7. 's' → logprob: -10.845178604125977
    8. '  ' → logprob: -11.470178604125977
    9. '<|end|>' → logprob: -11.470178604125977
    10. '   ' → logprob: -11.595178604125977

Token 69: ' r' (ID: 428)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8766213655471802
    2. 'z' → logprob: -0.8766213655471802
    3. 'a' → logprob: -3.5016212463378906
    4. ' z' → logprob: -3.7516212463378906
    5. ' x' → logprob: -3.8766212463378906
    6. 'dx' → logprob: -4.501621246337891
    7. 'w' → logprob: -4.751621246337891
    8. 'u' → logprob: -5.001621246337891
    9. 'r' → logprob: -5.251621246337891
    10. 'begin' → logprob: -5.376621246337891

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006414081901311874
    2. '=' → logprob: -5.25641393661499
    3. ',' → logprob: -6.75641393661499
    4. ' ' → logprob: -11.881414413452148
    5. 's' → logprob: -13.006414413452148
    6. ')' → logprob: -13.131414413452148
    7. '  ' → logprob: -14.131414413452148
    8. '<|end|>' → logprob: -14.131414413452148
    9. ' ,' → logprob: -14.506414413452148
    10. '   ' → logprob: -14.756414413452148

Token 71: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.46785056591033936
    2. '0' → logprob: -1.9678505659103394
    3. '1' → logprob: -2.217850685119629
    4. ' ' → logprob: -2.717850685119629
    5. ' map' → logprob: -3.342850685119629
    6. '3' → logprob: -4.217850685119629
    7. '2' → logprob: -5.717850685119629
    8. '5' → logprob: -6.592850685119629
    9. '4' → logprob: -7.217850685119629
    10. 'float' → logprob: -7.217850685119629

Token 72: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.35404887795448303
    2. '(float' → logprob: -1.6040488481521606
    3. '(' → logprob: -2.35404896736145
    4. '(lambda' → logprob: -6.479048728942871
    5. '(input' → logprob: -8.104048728942871
    6. '(str' → logprob: -9.604048728942871
    7. '(
' → logprob: -9.729048728942871
    8. '(s' → logprob: -10.229048728942871
    9. '(eval' → logprob: -11.104048728942871
    10. '<|end|>' → logprob: -11.229048728942871

Token 73: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08754000067710876
    2. ')' → logprob: -2.9625399112701416
    3. 'input' → logprob: -3.7125399112701416
    4. ',input' → logprob: -5.712540149688721
    5. '(' → logprob: -5.837540149688721
    6. ',' → logprob: -6.962540149688721
    7. ')(' → logprob: -8.712539672851562
    8. ' input' → logprob: -8.837539672851562
    9. '=input' → logprob: -9.587539672851562
    10. '<|end|>' → logprob: -10.587539672851562

Token 74: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.016290659084916115
    2. ' input' → logprob: -4.141290664672852
    3. ')' → logprob: -8.391290664672852
    4. '(input' → logprob: -11.641290664672852
    5. '   ' → logprob: -11.766290664672852
    6. ',input' → logprob: -12.391290664672852
    7. ' ' → logprob: -12.766290664672852
    8. ' )' → logprob: -12.766290664672852
    9. '	input' → logprob: -14.141290664672852
    10. '=input' → logprob: -14.266290664672852

Token 75: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2051418572664261
    2. '()' → logprob: -2.33014178276062
    3. '())' → logprob: -2.45514178276062
    4. '());' → logprob: -7.080142021179199
    5. ')' → logprob: -7.830142021179199
    6. '(' → logprob: -8.4551420211792
    7. '()>' → logprob: -8.8301420211792
    8. '(()' → logprob: -8.8301420211792
    9. '();)' → logprob: -8.9551420211792
    10. '()))' → logprob: -9.3301420211792

Token 76: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.195421494543552e-05
    2. 'strip' → logprob: -9.62507152557373
    3. ' split' → logprob: -12.62507152557373
    4. '(split' → logprob: -13.50007152557373
    5. ' ' → logprob: -14.62507152557373
    6. 'spl' → logprob: -14.87507152557373
    7. 'rstrip' → logprob: -15.50007152557373
    8. ')' → logprob: -16.750072479248047
    9. 'sp' → logprob: -17.000072479248047
    10. '```' → logprob: -17.250072479248047

Token 77: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01568613387644291
    2. '()' → logprob: -4.39068603515625
    3. ')' → logprob: -5.76568603515625
    4. '()))' → logprob: -11.14068603515625
    5. '(' → logprob: -11.39068603515625
    6. ' ())' → logprob: -12.89068603515625
    7. '(),' → logprob: -13.01568603515625
    8. '())
' → logprob: -13.01568603515625
    9. '();)' → logprob: -13.89068603515625
    10. '('' → logprob: -14.01568603515625

Token 78: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' c' (ID: 274)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.16059361398220062
    2. 'cir' → logprob: -2.4105935096740723
    3. 'circle' → logprob: -3.0355935096740723
    4. 'pts' → logprob: -6.535593509674072
    5. 's' → logprob: -6.910593509674072
    6. ' points' → logprob: -7.035593509674072
    7. 'angles' → logprob: -7.285593509674072
    8. 'c' (adapté à ' c') → logprob: -7.285593509674072
    9. 'n' → logprob: -7.535593509674072
    10. 'p' → logprob: -7.660593509674072

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38340064883232117
    2. '=' → logprob: -1.3834006786346436
    3. 'enter' → logprob: -3.5084006786346436
    4. '=center' → logprob: -4.0084004402160645
    5. 'ircle' → logprob: -4.5084004402160645
    6. 'center' → logprob: -5.5084004402160645
    7. '_center' → logprob: -5.8834004402160645
    8. '_circle' → logprob: -8.008400917053223
    9. 'circle' → logprob: -8.383400917053223
    10. ':' → logprob: -8.383400917053223

Token 81: ' complex' (ID: 8012)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.006749597378075123
    2. ' complex' → logprob: -5.006749629974365
    3. 'x' → logprob: -10.506749153137207
    4. '0' → logprob: -12.631749153137207
    5. '(com' → logprob: -12.881749153137207
    6. ' complexe' → logprob: -15.381749153137207
    7. '_complex' → logprob: -16.006750106811523
    8. 'com' → logprob: -16.006750106811523
    9. '   ' → logprob: -16.256750106811523
    10. 'Complex' → logprob: -16.381750106811523

Token 82: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0001261845463886857
    2. '(' → logprob: -9.000125885009766
    3. '((' → logprob: -13.250125885009766
    4. 'x' → logprob: -14.125125885009766
    5. ' (' → logprob: -16.000125885009766
    6. '(
' → logprob: -17.125125885009766
    7. '```' → logprob: -18.250125885009766
    8. '(s' → logprob: -18.750125885009766
    9. '()' → logprob: -19.375125885009766
    10. '(int' → logprob: -19.500125885009766

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.478889215737581e-05
    2. ' ,' → logprob: -10.375054359436035
    3. ',y' → logprob: -11.250054359436035
    4. ',r' → logprob: -11.500054359436035
    5. ' ' → logprob: -15.625054359436035
    6. '‌,' → logprob: -16.50005531311035
    7. ')' → logprob: -17.12505531311035
    8. ',
' → logprob: -17.87505531311035
    9. '  ' → logprob: -18.00005531311035
    10. '`,' → logprob: -18.00005531311035

Token 84: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00034261439577676356
    2. ' y' → logprob: -8.00034236907959
    3. '0' → logprob: -11.87534236907959
    4. ' ' → logprob: -16.250343322753906
    5. '   ' → logprob: -17.750343322753906
    6. ')y' → logprob: -17.875343322753906
    7. '	y' → logprob: -18.125343322753906
    8. '  ' → logprob: -18.250343322753906
    9. ')' → logprob: -18.375343322753906
    10. '    ' → logprob: -19.375343322753906

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.945094355614856e-05
    2. ')
' → logprob: -10.125069618225098
    3. ',' → logprob: -11.500069618225098
    4. '),' → logprob: -11.625069618225098
    5. 'r' → logprob: -12.250069618225098
    6. ' )' → logprob: -13.125069618225098
    7. ')

' → logprob: -13.875069618225098
    8. '<|end|>' → logprob: -14.125069618225098
    9. '   ' → logprob: -14.375069618225098
    10. '))' → logprob: -15.375069618225098

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19980351626873016
    2. 'r' → logprob: -2.699803590774536
    3. 's' → logprob: -3.574803590774536
    4. 'n' → logprob: -4.074803352355957
    5. 't' → logprob: -4.074803352355957
    6. 'points' → logprob: -4.199803352355957
    7. '<|end|>' → logprob: -4.699803352355957
    8. 'p' → logprob: -4.949803352355957
    9. 'a' → logprob: -4.949803352355957
    10. '    
' → logprob: -5.449803352355957

Token 87: ' ans' (ID: 3345)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6166964173316956
    2. 'points' → logprob: -1.2416963577270508
    3. 'v' → logprob: -3.491696357727051
    4. 'pts' → logprob: -3.491696357727051
    5. 't' → logprob: -4.116696357727051
    6. 'a' → logprob: -4.116696357727051
    7. 'n' → logprob: -4.241696357727051
    8. 'd' → logprob: -4.491696357727051
    9. 'l' → logprob: -4.741696357727051
    10. 'lst' → logprob: -4.991696357727051

Token 88: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023333296179771423
    2. '=' → logprob: -3.7733333110809326
    3. ':' → logprob: -9.523333549499512
    4. ',' → logprob: -12.023333549499512
    5. 's' → logprob: -13.023333549499512
    6. ' ' → logprob: -13.273333549499512
    7. '.' → logprob: -13.898333549499512
    8. ')' → logprob: -13.898333549499512
    9. ' =)' → logprob: -13.898333549499512
    10. '<|end|>' → logprob: -15.023333549499512

Token 89: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -1.0417394638061523
    2. 'List' → logprob: -1.7917394638061523
    3. 'int' → logprob: -1.9167394638061523
    4. 'float' → logprob: -2.2917394638061523
    5. ' float' → logprob: -2.5417394638061523
    6. 'complex' → logprob: -2.7917394638061523
    7. ' complex' → logprob: -3.2917394638061523
    8. ' int' → logprob: -3.4167394638061523
    9. ' =' → logprob: -4.916739463806152
    10. ' []' → logprob: -5.791739463806152

Token 90: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00836941972374916
    2. '[int' → logprob: -4.883369445800781
    3. '[List' → logprob: -7.258369445800781
    4. '[str' → logprob: -9.883369445800781
    5. '<|end|>' → logprob: -13.258369445800781
    6. '[
' → logprob: -13.758369445800781
    7. '[T' → logprob: -14.008369445800781
    8. '[(' → logprob: -14.383369445800781
    9. '[Double' → logprob: -14.633369445800781
    10. ' =' → logprob: -14.758369445800781

Token 91: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.5420771837234497
    2. 'complex' → logprob: -0.9170771837234497
    3. 'float' → logprob: -4.04207706451416
    4. 'int' → logprob: -7.54207706451416
    5. ' complex' → logprob: -8.54207706451416
    6. ' Tuple' → logprob: -8.66707706451416
    7. 'Complex' → logprob: -9.41707706451416
    8. 'bool' → logprob: -9.54207706451416
    9. '[' → logprob: -10.04207706451416
    10. 'List' → logprob: -10.54207706451416

Token 92: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.08810632675886154
    2. '[' → logprob: -2.588106393814087
    3. '[str' → logprob: -4.713106155395508
    4. 'int' → logprob: -8.713106155395508
    5. 'float' → logprob: -10.463106155395508
    6. 'complex' → logprob: -13.213106155395508
    7. '[
' → logprob: -14.713106155395508
    8. '[List' → logprob: -14.963106155395508
    9. ']' → logprob: -15.088106155395508
    10. 'str' → logprob: -15.463106155395508

Token 93: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.24902382493019104
    2. 'complex' → logprob: -1.8740237951278687
    3. 'int' → logprob: -2.749023914337158
    4. ' float' → logprob: -6.749023914337158
    5. 'bool' → logprob: -7.249023914337158
    6. 'str' → logprob: -8.2490234375
    7. ' complex' → logprob: -8.3740234375
    8. 'flo' → logprob: -8.8740234375
    9. '[int' → logprob: -9.4990234375
    10. '   ' → logprob: -10.1865234375

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014251544780563563
    2. ',float' → logprob: -8.875142097473145
    3. ' ,' → logprob: -13.375142097473145
    4. ']]' → logprob: -14.000142097473145
    5. ',int' → logprob: -15.750142097473145
    6. ',double' → logprob: -17.00014305114746
    7. 'float' → logprob: -17.87514305114746
    8. ',bool' → logprob: -18.00014305114746
    9. '```' → logprob: -18.62514305114746
    10. '，' → logprob: -18.62514305114746

Token 95: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.030430184677243233
    2. ' float' → logprob: -3.5304300785064697
    3. 'int' → logprob: -8.15542984008789
    4. 'bool' → logprob: -8.65542984008789
    5. 'complex' → logprob: -9.28042984008789
    6. '...' → logprob: -11.15542984008789
    7. ' ' → logprob: -11.15542984008789
    8. 'str' → logprob: -11.28042984008789
    9. '	float' → logprob: -11.28042984008789
    10. '   ' → logprob: -11.90542984008789

Token 96: ',' (ID: 11)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']]' → logprob: -7.159660890465602e-05
    2. ']' → logprob: -9.75007152557373
    3. ']]=' → logprob: -12.37507152557373
    4. ')]' → logprob: -12.62507152557373
    5. ']]
' → logprob: -13.00007152557373
    6. '']]' → logprob: -13.87507152557373
    7. ']]]' → logprob: -13.87507152557373
    8. '"]]' → logprob: -14.50007152557373
    9. ']]

' → logprob: -14.62507152557373
    10. '>]' → logprob: -15.62507152557373

Token 97: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.09345156699419022
    2. 'int' → logprob: -2.718451499938965
    3. 'bool' → logprob: -4.343451499938965
    4. ' float' → logprob: -5.968451499938965
    5. 'complex' → logprob: -6.093451499938965
    6. 'str' → logprob: -6.093451499938965
    7. ']]' → logprob: -6.593451499938965
    8. 'List' → logprob: -6.968451499938965
    9. ']' → logprob: -8.218451499938965
    10. '   ' → logprob: -9.343451499938965

Token 98: ',' (ID: 11)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.000353100651409477
    2. ']' → logprob: -8.00035285949707
    3. ']]
' → logprob: -12.12535285949707
    4. ']]=' → logprob: -12.25035285949707
    5. ')]' → logprob: -12.37535285949707
    6. ']]

' → logprob: -13.87535285949707
    7. ']]]' → logprob: -14.00035285949707
    8. ',' → logprob: -15.12535285949707
    9. '']]' → logprob: -15.50035285949707
    10. ']]
' → logprob: -15.62535285949707

Token 99: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.002852901816368103
    2. 'int' → logprob: -7.127852916717529
    3. ' float' → logprob: -7.127852916717529
    4. 'bool' → logprob: -7.252852916717529
    5. 'complex' → logprob: -7.877852916717529
    6. 'str' → logprob: -9.752852439880371
    7. ']]' → logprob: -10.627852439880371
    8. 'None' → logprob: -10.877852439880371
    9. ')]' → logprob: -11.002852439880371
    10. 'List' → logprob: -12.127852439880371

Token 100: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013895035721361637
    2. ')]' → logprob: -4.638895034790039
    3. ']]' → logprob: -5.513895034790039
    4. ']=' → logprob: -10.638895034790039
    5. '])' → logprob: -10.888895034790039
    6. ',' → logprob: -11.013895034790039
    7. '   ' → logprob: -11.763895034790039
    8. ')' → logprob: -11.763895034790039
    9. '>]' → logprob: -11.763895034790039
    10. ' ]' → logprob: -11.888895034790039

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20152394473552704
    2. '=' → logprob: -1.7015239000320435
    3. '=[]' → logprob: -9.326523780822754
    4. '[:]' → logprob: -11.576523780822754
    5. '[]' → logprob: -11.951523780822754
    6. ':' → logprob: -12.826523780822754
    7. '   ' → logprob: -13.451523780822754
    8. ' ' → logprob: -14.826523780822754
    9. '<|end|>' → logprob: -15.076523780822754
    10. ')' → logprob: -15.701523780822754

Token 102: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00011486753646750003
    2. ' []' → logprob: -9.500114440917969
    3. '[' → logprob: -10.375114440917969
    4. '[]
' → logprob: -11.875114440917969
    5. '[]}' → logprob: -13.750114440917969
    6. '[]

' → logprob: -15.125114440917969
    7. '[])' → logprob: -15.875114440917969
    8. '[]>' → logprob: -16.50011444091797
    9. '   ' → logprob: -16.50011444091797
    10. '[]"' → logprob: -16.75011444091797

Token 103: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07914446294307709
    2. '   ' → logprob: -2.7041444778442383
    3. ' for' → logprob: -5.454144477844238
    4. '<|end|>' → logprob: -6.579144477844238
    5. 'n' → logprob: -6.704144477844238
    6. 'r' → logprob: -7.329144477844238
    7. 'a' → logprob: -7.954144477844238
    8. 'while' → logprob: -8.329144477844238
    9. 'i' → logprob: -8.829144477844238
    10. 't' → logprob: -9.079144477844238

Token 104: ' q' (ID: 2335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2161916047334671
    2. ' for' → logprob: -2.091191530227661
    3. '   ' → logprob: -2.841191530227661
    4. 'n' → logprob: -4.96619176864624
    5. ' ' → logprob: -6.21619176864624
    6. '    ' → logprob: -7.21619176864624
    7. 'i' → logprob: -7.59119176864624
    8. 'r' → logprob: -7.71619176864624
    9. '<|end|>' → logprob: -7.96619176864624
    10. ' 
' → logprob: -8.341191291809082

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04382068291306496
    2. '=' → logprob: -3.16882061958313
    3. '=int' → logprob: -7.918820858001709
    4. 'u' → logprob: -8.29382038116455
    5. 'ue' → logprob: -9.66882038116455
    6. '   ' → logprob: -10.04382038116455
    7. 'uer' → logprob: -10.54382038116455
    8. ' ' → logprob: -10.91882038116455
    9. ':' → logprob: -11.29382038116455
    10. '_' → logprob: -11.54382038116455

Token 106: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00021045419271104038
    2. '[int' → logprob: -9.250210762023926
    3. ' int' → logprob: -9.500210762023926
    4. '[]' → logprob: -11.000210762023926
    5. 'float' → logprob: -12.125210762023926
    6. '(int' → logprob: -12.250210762023926
    7. '1' → logprob: -13.000210762023926
    8. '   ' → logprob: -13.500210762023926
    9. '[' → logprob: -13.625210762023926
    10. ' ' → logprob: -14.125210762023926

Token 107: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00014692598779220134
    2. '(' → logprob: -8.875146865844727
    3. 'input' → logprob: -12.000146865844727
    4. '()' → logprob: -14.500146865844727
    5. '=input' → logprob: -16.500146865844727
    6. ',input' → logprob: -16.625146865844727
    7. ' input' → logprob: -17.125146865844727
    8. ' (' → logprob: -17.250146865844727
    9. '(
' → logprob: -17.375146865844727
    10. ' ' → logprob: -18.250146865844727

Token 108: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011084014549851418
    2. '()' → logprob: -4.511084079742432
    3. '())
' → logprob: -10.511083602905273
    4. ')' → logprob: -12.011083602905273
    5. ' ())' → logprob: -13.511083602905273
    6. '().' → logprob: -14.386083602905273
    7. '())

' → logprob: -15.136083602905273
    8. '()
' → logprob: -15.511083602905273
    9. '(' → logprob: -16.011083602905273
    10. '();)' → logprob: -16.261083602905273

Token 109: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004219316877424717
    2. '   ' → logprob: -5.5042195320129395
    3. ' for' → logprob: -9.004219055175781
    4. '<|end|>' → logprob: -11.254219055175781
    5. '	for' → logprob: -12.629219055175781
    6. '    
' → logprob: -13.879219055175781
    7. '
' → logprob: -14.754219055175781
    8. 'while' → logprob: -16.25421905517578
    9. '  ' → logprob: -16.50421905517578
    10. '<|end|>' → logprob: -17.00421905517578

Token 110: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.630610641877865e-06
    2. ' for' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.625006675720215
    4. '	for' → logprob: -18.2500057220459
    5. 'while' → logprob: -20.6250057220459
    6. '
' → logprob: -20.7500057220459
    7. 'from' → logprob: -21.5000057220459
    8. 'def' → logprob: -22.0000057220459
    9. '    
' → logprob: -22.0000057220459
    10. 'import' → logprob: -22.1250057220459

Token 111: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.018150413408875465
    2. ' _' → logprob: -4.018150329589844
    3. ' in' → logprob: -16.018150329589844
    4. '_i' → logprob: -16.018150329589844
    5. ' range' → logprob: -16.518150329589844
    6. ' ' → logprob: -16.518150329589844
    7. ' i' → logprob: -17.143150329589844
    8. '_range' → logprob: -17.768150329589844
    9. ' ' → logprob: -18.018150329589844
    10. '_

' → logprob: -19.768150329589844

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012824994511902332
    2. 'in' → logprob: -4.512825012207031
    3. ' ' → logprob: -7.387825012207031
    4. 'n' → logprob: -7.762825012207031
    5. 'range' → logprob: -8.137825012207031
    6. 'q' → logprob: -8.262825012207031
    7. '_' → logprob: -10.012825012207031
    8. 'i' → logprob: -10.262825012207031
    9. '  ' → logprob: -11.262825012207031
    10. ' _' → logprob: -11.512825012207031

Token 113: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001463299704482779
    2. ' range' → logprob: -9.00014591217041
    3. '(range' → logprob: -11.12514591217041
    4. 'input' → logprob: -11.75014591217041
    5. 'q' → logprob: -16.125146865844727
    6. '	range' → logprob: -17.750146865844727
    7. 'map' → logprob: -18.000146865844727
    8. '(' → logprob: -18.000146865844727
    9. '   ' → logprob: -18.000146865844727
    10. ')' → logprob: -18.125146865844727

Token 114: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00010723850573413074
    2. '(' → logprob: -9.625106811523438
    3. 'q' → logprob: -10.250106811523438
    4. ' (' → logprob: -12.250106811523438
    5. ' q' → logprob: -13.875106811523438
    6. '	q' → logprob: -18.750106811523438
    7. '(range' → logprob: -18.750106811523438
    8. '[q' → logprob: -18.875106811523438
    9. ' ' → logprob: -19.000106811523438
    10. '(int' → logprob: -19.250106811523438

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002302508568391204
    2. '):
' → logprob: -6.127302646636963
    3. ':' → logprob: -9.377302169799805
    4. ' ):' → logprob: -10.752302169799805
    5. ')' → logprob: -12.252302169799805
    6. '):
' → logprob: -12.377302169799805
    7. '():' → logprob: -13.877302169799805
    8. '   ' → logprob: -14.127302169799805
    9. '}:' → logprob: -15.627302169799805
    10. '):

' → logprob: -15.752302169799805

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002601438027340919
    2. '   ' → logprob: -8.625260353088379
    3. '<|end|>' → logprob: -10.750260353088379
    4. '	   ' → logprob: -11.625260353088379
    5. '        
' → logprob: -11.750260353088379
    6. 'n' → logprob: -11.875260353088379
    7. 'input' → logprob: -12.250260353088379
    8. ' line' → logprob: -12.875260353088379
    9. ',' → logprob: -12.875260353088379
    10. 'line' → logprob: -12.875260353088379

Token 117: ' res' (ID: 694)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.37746477127075195
    2. 'a' → logprob: -1.752464771270752
    3. 'ax' → logprob: -2.627464771270752
    4. 'px' → logprob: -3.877464771270752
    5. '   ' → logprob: -4.502464771270752
    6. 'sx' → logprob: -4.502464771270752
    7. 'X' → logprob: -5.002464771270752
    8. 'lx' → logprob: -5.502464771270752
    9. 'bx' → logprob: -5.752464771270752
    10. 'xa' → logprob: -6.002464771270752

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14644597470760345
    2. '=' → logprob: -2.2714459896087646
    3. 'x' → logprob: -3.6464459896087646
    4. ',' → logprob: -5.2714457511901855
    5. 'a' → logprob: -8.146446228027344
    6. ' ' → logprob: -8.521446228027344
    7. '   ' → logprob: -8.521446228027344
    8. '_x' → logprob: -9.021446228027344
    9. 'input' → logprob: -9.021446228027344
    10. 'line' → logprob: -9.021446228027344

Token 119: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5261983871459961
    2. 'input' → logprob: -1.276198387145996
    3. '[]' → logprob: -2.901198387145996
    4. 'project' → logprob: -4.026198387145996
    5. 'complex' → logprob: -4.151198387145996
    6. '0' → logprob: -5.026198387145996
    7. 'map' → logprob: -5.526198387145996
    8. '[input' → logprob: -5.526198387145996
    9. 'tuple' → logprob: -5.651198387145996
    10. 'None' → logprob: -5.776198387145996

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015930612571537495
    2. '<|end|>' → logprob: -6.626593112945557
    3. '        
' → logprob: -9.751592636108398
    4. ',' → logprob: -9.751592636108398
    5. ' ' → logprob: -10.376592636108398
    6. ' for' → logprob: -10.626592636108398
    7. '   ' → logprob: -11.126592636108398
    8. '        ' → logprob: -11.501592636108398
    9. '<|end|>' → logprob: -11.501592636108398
    10. 'for' → logprob: -11.626592636108398

Token 121: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.6161477565765381
    2. 'a' → logprob: -1.616147756576538
    3. 'ax' → logprob: -2.616147756576538
    4. 'px' → logprob: -3.491147756576538
    5. '   ' → logprob: -3.616147756576538
    6. 'sx' → logprob: -3.741147756576538
    7. '       ' → logprob: -4.491147994995117
    8. 'l' → logprob: -4.741147994995117
    9. 'cx' → logprob: -4.866147994995117
    10. 'n' → logprob: -4.866147994995117

Token 122: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014723025262355804
    2. ',' → logprob: -4.51472282409668
    3. '0' → logprob: -5.88972282409668
    4. 'a' → logprob: -7.76472282409668
    5. '_,' → logprob: -8.63972282409668
    6. 's' → logprob: -9.51472282409668
    7. ' ,' → logprob: -9.63972282409668
    8. '_' → logprob: -10.63972282409668
    9. 'p' → logprob: -11.01472282409668
    10. '2' → logprob: -11.26472282409668

Token 123: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014210639521479607
    2. ' y' → logprob: -4.2642107009887695
    3. '   ' → logprob: -10.51421070098877
    4. ' ' → logprob: -11.76421070098877
    5. '<|end|>' → logprob: -12.26421070098877
    6. ',' → logprob: -12.63921070098877
    7. '  ' → logprob: -13.26421070098877
    8. '    ' → logprob: -14.01421070098877
    9. ',y' → logprob: -15.01421070098877
    10. '	y' → logprob: -15.13921070098877

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23334842920303345
    2. '=' → logprob: -1.6083483695983887
    3. ' =' → logprob: -4.858348369598389
    4. ' ,' → logprob: -9.358348846435547
    5. ',r' → logprob: -10.483348846435547
    6. 'r' → logprob: -11.858348846435547
    7. '_,' → logprob: -13.108348846435547
    8. ' ' → logprob: -13.233348846435547
    9. '    ' → logprob: -13.358348846435547
    10. ',z' → logprob: -13.733348846435547

Token 125: ' z' (ID: 579)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03194238618016243
    2. ' r' → logprob: -3.906942367553711
    3. 'a' → logprob: -5.906942367553711
    4. 'd' → logprob: -6.156942367553711
    5. 'p' → logprob: -6.531942367553711
    6. 'z' → logprob: -6.906942367553711
    7. 'dx' → logprob: -7.031942367553711
    8. 'w' → logprob: -7.406942367553711
    9. 'l' → logprob: -7.906942367553711
    10. 'x' → logprob: -8.031942367553711

Token 126: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5133853554725647
    2. '=' → logprob: -1.13838529586792
    3. ',' → logprob: -2.51338529586792
    4. 'r' → logprob: -9.513385772705078
    5. ',r' → logprob: -10.513385772705078
    6. ' ' → logprob: -10.763385772705078
    7. ' ,' → logprob: -11.388385772705078
    8. 'w' → logprob: -11.388385772705078
    9. 'x' → logprob: -11.513385772705078
    10. '=float' → logprob: -11.888385772705078

Token 127: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07223395258188248
    2. 'r' → logprob: -3.3222339153289795
    3. 't' → logprob: -3.9472339153289795
    4. ' w' → logprob: -5.822234153747559
    5. 'a' → logprob: -5.947234153747559
    6. 'u' → logprob: -6.697234153747559
    7. 'd' → logprob: -6.697234153747559
    8. 'k' → logprob: -6.947234153747559
    9. 'p' → logprob: -6.947234153747559
    10. 'v' → logprob: -7.697234153747559

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06993754208087921
    2. ' =' → logprob: -2.6949374675750732
    3. ',' → logprob: -14.319937705993652
    4. '=input' → logprob: -15.319937705993652
    5. ' ' → logprob: -15.944937705993652
    6. '   ' → logprob: -16.319936752319336
    7. '＝' → logprob: -17.069936752319336
    8. '    ' → logprob: -17.569936752319336
    9. '*' → logprob: -17.944936752319336
    10. ')' → logprob: -17.944936752319336

Token 129: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1603182554244995
    2. ' map' → logprob: -1.9103182554244995
    3. 'input' → logprob: -9.785318374633789
    4. ' ' → logprob: -11.285318374633789
    5. '   ' → logprob: -11.660318374633789
    6. '	map' → logprob: -11.660318374633789
    7. ' input' → logprob: -12.285318374633789
    8. '  ' → logprob: -13.660318374633789
    9. '(map' → logprob: -13.910318374633789
    10. 'list' → logprob: -14.910318374633789

Token 130: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00019901065388694406
    2. '(' → logprob: -9.000199317932129
    3. '(float' → logprob: -9.625199317932129
    4. 'int' → logprob: -12.125199317932129
    5. '[int' → logprob: -13.000199317932129
    6. '<int' → logprob: -13.875199317932129
    7. '=int' → logprob: -15.250199317932129
    8. ' (' → logprob: -15.625199317932129
    9. '(
' → logprob: -16.125198364257812
    10. '(str' → logprob: -16.500198364257812

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03822796046733856
    2. ',input' → logprob: -3.2882280349731445
    3. '(),' → logprob: -9.163228034973145
    4. 'input' → logprob: -9.788228034973145
    5. '(input' → logprob: -10.913228034973145
    6. ' ,' → logprob: -12.538228034973145
    7. '(' → logprob: -13.663228034973145
    8. '()' → logprob: -13.913228034973145
    9. '   ' → logprob: -14.288228034973145
    10. ')' → logprob: -15.663228034973145

Token 132: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004078878089785576
    2. ' input' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.00407886505127
    4. ')' → logprob: -17.129079818725586
    5. ',input' → logprob: -17.254079818725586
    6. ' ' → logprob: -17.754079818725586
    7. '(input' → logprob: -18.379079818725586
    8. '=input' → logprob: -19.629079818725586
    9. '	input' → logprob: -19.754079818725586
    10. '_input' → logprob: -19.879079818725586

Token 133: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.726595241460018e-05
    2. '()' → logprob: -11.00003719329834
    3. ' ().' → logprob: -11.25003719329834
    4. '.' → logprob: -12.12503719329834
    5. ')' → logprob: -14.75003719329834
    6. '.split' → logprob: -14.87503719329834
    7. ').' → logprob: -14.87503719329834
    8. '(' → logprob: -15.00003719329834
    9. '   ' → logprob: -15.37503719329834
    10. '>().' → logprob: -15.87503719329834

Token 134: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0280383548888494e-06
    2. 'strip' → logprob: -14.875000953674316
    3. ' split' → logprob: -14.875000953674316
    4. '(split' → logprob: -15.875000953674316
    5. ')' → logprob: -16.250001907348633
    6. '.split' → logprob: -17.625001907348633
    7. 'spl' → logprob: -18.875001907348633
    8. '().' → logprob: -18.875001907348633
    9. '   ' → logprob: -20.500001907348633
    10. 'rstrip' → logprob: -20.750001907348633

Token 135: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1044471487402916
    2. '())' → logprob: -2.35444712638855
    3. '()' → logprob: -5.479447364807129
    4. ')
' → logprob: -10.229447364807129
    5. '())
' → logprob: -11.229447364807129
    6. '   ' → logprob: -13.229447364807129
    7. ')`' → logprob: -13.354447364807129
    8. '))' → logprob: -13.479447364807129
    9. '(' → logprob: -13.979447364807129
    10. ' )' → logprob: -14.104447364807129

Token 136: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.7065841555595398
    2. 'a' → logprob: -1.3315842151641846
    3. '       ' → logprob: -1.8315842151641846
    4. ' p' → logprob: -3.8315842151641846
    5. ' a' → logprob: -4.2065839767456055
    6. 'v' → logprob: -4.8315839767456055
    7. 's' → logprob: -4.9565839767456055
    8. 'A' → logprob: -4.9565839767456055
    9. 'start' → logprob: -5.4565839767456055
    10. '   ' → logprob: -5.9565839767456055

Token 138: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17290592193603516
    2. '1' → logprob: -1.9229059219360352
    3. '=' → logprob: -5.172905921936035
    4. '0' → logprob: -5.172905921936035
    5. 'oint' → logprob: -7.422905921936035
    6. 'begin' → logprob: -7.922905921936035
    7. '   ' → logprob: -9.672905921936035
    8. '_begin' → logprob: -9.922905921936035
    9. 'a' → logprob: -10.047905921936035
    10. '_start' → logprob: -10.297905921936035

Token 139: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0437135323882103
    2. '=' → logprob: -3.1687135696411133
    3. ',' → logprob: -7.293713569641113
    4. '1' → logprob: -11.168713569641113
    5. '<|end|>' → logprob: -11.418713569641113
    6. ')' → logprob: -12.793713569641113
    7. ' ' → logprob: -13.668713569641113
    8. '<|end|>' → logprob: -13.793713569641113
    9. 'p' → logprob: -14.043713569641113
    10. ':' → logprob: -14.543713569641113

Token 140: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.23151859641075134
    2. 'p' → logprob: -1.6065186262130737
    3. ' =' → logprob: -5.356518745422363
    4. '=' → logprob: -6.731518745422363
    5. ' ' → logprob: -9.981518745422363
    6. '=p' → logprob: -10.106518745422363
    7. ' complex' → logprob: -10.981518745422363
    8. '    ' → logprob: -11.481518745422363
    9. 'complex' → logprob: -11.606518745422363
    10. '<|end|>' → logprob: -11.981518745422363

Token 141: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3334071636199951
    2. ' =' → logprob: -2.083407163619995
    3. '=' → logprob: -2.333407163619995
    4. '1' → logprob: -2.833407163619995
    5. ',' → logprob: -6.083407402038574
    6. 'p' → logprob: -7.583407402038574
    7. '=p' → logprob: -9.583407402038574
    8. '_' → logprob: -10.208407402038574
    9. ' p' → logprob: -10.208407402038574
    10. ' ' → logprob: -10.208407402038574

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142601430416107
    2. '=' → logprob: -1.7014260292053223
    3. ',' → logprob: -11.451425552368164
    4. '<|end|>' → logprob: -13.951425552368164
    5. ' ' → logprob: -14.201425552368164
    6. ')' → logprob: -16.201425552368164
    7. ':' → logprob: -16.451425552368164
    8. '<|end|>' → logprob: -16.701425552368164
    9. '=line' → logprob: -16.951425552368164
    10. '=create' → logprob: -17.326425552368164

Token 143: ' complex' (ID: 8012)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.3869536221027374
    2. ' complex' → logprob: -1.136953592300415
    3. '   ' → logprob: -9.636953353881836
    4. '(com' → logprob: -12.761953353881836
    5. ' complexe' → logprob: -12.886953353881836
    6. '    ' → logprob: -13.136953353881836
    7. '  ' → logprob: -13.261953353881836
    8. 'project' → logprob: -13.386953353881836
    9. ' ' → logprob: -13.511953353881836
    10. 'map' → logprob: -14.386953353881836

Token 144: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.1875571544806007e-05
    2. '(' → logprob: -11.500011444091797
    3. 'x' → logprob: -14.125011444091797
    4. '(z' → logprob: -14.625011444091797
    5. ' (' → logprob: -15.000011444091797
    6. '((' → logprob: -16.375011444091797
    7. '(
' → logprob: -16.750011444091797
    8. '
' → logprob: -18.750011444091797
    9. '```' → logprob: -19.000011444091797
    10. ',' → logprob: -19.250011444091797

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026884564431384206
    2. ' ,' → logprob: -8.375268936157227
    3. ',y' → logprob: -10.250268936157227
    4. ',z' → logprob: -13.625268936157227
    5. ',w' → logprob: -14.000268936157227
    6. '   ' → logprob: -14.625268936157227
    7. '),' → logprob: -15.750268936157227
    8. ' ' → logprob: -17.000268936157227
    9. 'y' → logprob: -17.125268936157227
    10. 'w' → logprob: -17.500268936157227

Token 146: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019362468738108873
    2. ' y' → logprob: -6.251936435699463
    3. 'z' → logprob: -11.876935958862305
    4. '   ' → logprob: -15.376935958862305
    5. ' ' → logprob: -16.001935958862305
    6. ',y' → logprob: -16.376935958862305
    7. '	y' → logprob: -16.501935958862305
    8. ',' → logprob: -16.626935958862305
    9. '    ' → logprob: -16.876935958862305
    10. ')y' → logprob: -17.376935958862305

Token 147: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -3.292907877039397e-06
    2. ' ),' → logprob: -13.12500286102295
    3. ')' → logprob: -13.87500286102295
    4. '   ' → logprob: -16.000003814697266
    5. ',' → logprob: -16.125003814697266
    6. '},' → logprob: -17.375003814697266
    7. ' ' → logprob: -17.500003814697266
    8. ',),' → logprob: -17.750003814697266
    9. ')),' → logprob: -17.875003814697266
    10. '],' → logprob: -18.375003814697266

Token 148: ' complex' (ID: 8012)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.31326204538345337
    2. ' complex' → logprob: -1.3132619857788086
    3. 'Complex' → logprob: -16.313262939453125
    4. '_complex' → logprob: -17.313262939453125
    5. ' complexe' → logprob: -17.563262939453125
    6. ' komplex' → logprob: -17.813262939453125
    7. ' complexo' → logprob: -18.188262939453125
    8. ' ' → logprob: -18.438262939453125
    9. '   ' → logprob: -18.813262939453125
    10. ' kompleks' → logprob: -19.563262939453125

Token 149: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -13.250005722045898
    3. ' (' → logprob: -13.250005722045898
    4. '(w' → logprob: -13.375005722045898
    5. 'z' → logprob: -14.875005722045898
    6. '(x' → logprob: -16.3750057220459
    7. '((' → logprob: -19.0000057220459
    8. '(
' → logprob: -19.3750057220459
    9. '	z' → logprob: -19.5000057220459
    10. '(int' → logprob: -19.6250057220459

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000550887081772089
    2. ',w' → logprob: -7.625550746917725
    3. ' ,' → logprob: -9.750551223754883
    4. 'w' → logprob: -12.375551223754883
    5. ' w' → logprob: -15.625551223754883
    6. ',
' → logprob: -16.500551223754883
    7. '<|end|>' → logprob: -17.000551223754883
    8. '0' → logprob: -18.125551223754883
    9. '1' → logprob: -18.125551223754883
    10. ' ' → logprob: -18.250551223754883

Token 151: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.018150178715586662
    2. ' w' → logprob: -4.018150329589844
    3. '   ' → logprob: -16.018150329589844
    4. '	w' → logprob: -16.393150329589844
    5. ' ' → logprob: -17.393150329589844
    6. 'W' → logprob: -17.518150329589844
    7. '
' → logprob: -18.268150329589844
    8. '    ' → logprob: -18.518150329589844
    9. ',' → logprob: -18.768150329589844
    10. '(w' → logprob: -18.768150329589844

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.166338137816638e-05
    2. ')
' → logprob: -10.375031471252441
    3. ')

' → logprob: -15.750031471252441
    4. ' )' → logprob: -16.000032424926758
    5. '<|end|>' → logprob: -17.000032424926758
    6. '))' → logprob: -17.125032424926758
    7. ')
' → logprob: -17.500032424926758
    8. '   ' → logprob: -17.625032424926758
    9. '),' → logprob: -17.875032424926758
    10. '')' → logprob: -18.625032424926758

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0473765954375267
    2. 'v' → logprob: -3.6723766326904297
    3. 'd' → logprob: -4.92237663269043
    4. 'p' → logprob: -4.92237663269043
    5. 't' → logprob: -6.17237663269043
    6. 's' → logprob: -7.54737663269043
    7. 'u' → logprob: -7.67237663269043
    8. 'proj' → logprob: -8.17237663269043
    9. 'a' → logprob: -8.29737663269043
    10. '   ' → logprob: -8.42237663269043

Token 154: ' proj' (ID: 16022)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6030868887901306
    2. 'proj' (adapté à ' proj') → logprob: -2.4780869483947754
    3. 'pr' → logprob: -2.7280869483947754
    4. 'd' → logprob: -2.8530869483947754
    5. 'p' → logprob: -3.2280869483947754
    6. 'm' → logprob: -3.4780869483947754
    7. '       ' → logprob: -3.4780869483947754
    8. 't' → logprob: -3.8530869483947754
    9. 'u' → logprob: -4.103086948394775
    10. 'c' → logprob: -4.478086948394775

Token 155: ' =' (ID: 314)
  Prédit: 'ected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ected' → logprob: -0.4228103756904602
    2. 'ect' → logprob: -1.1728103160858154
    3. '=' → logprob: -4.1728105545043945
    4. '_point' → logprob: -4.5478105545043945
    5. ' =' → logprob: -5.2978105545043945
    6. '_' → logprob: -6.1728105545043945
    7. 'ection' → logprob: -7.0478105545043945
    8. 'point' → logprob: -7.9228105545043945
    9. 'ects' → logprob: -8.797810554504395
    10. '_p' → logprob: -9.172810554504395

Token 156: ' project' (ID: 2993)
  Prédit: 'project'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'project' → logprob: -0.004627598915249109
    2. ' project' → logprob: -5.379627704620361
    3. '   ' → logprob: -12.129627227783203
    4. 'proj' → logprob: -14.004627227783203
    5. '(project' → logprob: -14.754627227783203
    6. '       ' → logprob: -15.379627227783203
    7. ' ' → logprob: -15.879627227783203
    8. '	project' → logprob: -15.879627227783203
    9. 'point' → logprob: -16.004627227783203
    10. '  ' → logprob: -17.254627227783203

Token 157: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.5977621078491211
    2. '(p' → logprob: -0.8477621078491211
    3. '(point' → logprob: -3.847762107849121
    4. '(' → logprob: -8.472762107849121
    5. '(project' → logprob: -10.972762107849121
    6. '(
' → logprob: -12.097762107849121
    7. '(points' → logprob: -12.347762107849121
    8. 'p' → logprob: -12.722762107849121
    9. '(pt' → logprob: -12.972762107849121
    10. ')' → logprob: -13.097762107849121

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004844596143811941
    2. ',p' → logprob: -5.379844665527344
    3. 'p' → logprob: -9.129844665527344
    4. ' ,' → logprob: -9.254844665527344
    5. '(p' → logprob: -11.129844665527344
    6. ' p' → logprob: -12.504844665527344
    7. 's' → logprob: -14.879844665527344
    8. ')' → logprob: -15.004844665527344
    9. '(' → logprob: -15.004844665527344
    10. ',
' → logprob: -15.379844665527344

Token 159: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019313741941004992
    2. ' p' → logprob: -6.251931190490723
    3. '       ' → logprob: -13.501931190490723
    4. ')p' → logprob: -14.501931190490723
    5. '   ' → logprob: -15.001931190490723
    6. ')' → logprob: -15.126931190490723
    7. '           ' → logprob: -16.00193214416504
    8. '	p' → logprob: -16.62693214416504
    9. '(p' → logprob: -16.87693214416504
    10. ' ' → logprob: -17.25193214416504

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '2' → logprob: -13.750001907348633
    3. 'r' → logprob: -15.250001907348633
    4. 'p' → logprob: -15.375001907348633
    5. 'ro' → logprob: -15.500001907348633
    6. 'oint' → logprob: -15.750001907348633
    7. 'oints' → logprob: -16.500001907348633
    8. '```' → logprob: -16.500001907348633
    9. '_' → logprob: -16.875001907348633
    10. ')' → logprob: -17.062501907348633

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004740447038784623
    2. ',p' → logprob: -8.250473976135254
    3. ' ,' → logprob: -8.625473976135254
    4. 'p' → logprob: -10.375473976135254
    5. ' p' → logprob: -13.750473976135254
    6. ',
' → logprob: -14.500473976135254
    7. '_,' → logprob: -15.750473976135254
    8. '   ' → logprob: -15.875473976135254
    9. ')' → logprob: -16.87547492980957
    10. '(),' → logprob: -17.37547492980957

Token 162: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019286326132714748
    2. ' p' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.501928329467773
    4. '       ' → logprob: -18.126928329467773
    5. '           ' → logprob: -18.126928329467773
    6. ')p' → logprob: -18.376928329467773
    7. '<p' → logprob: -19.126928329467773
    8. '	p' → logprob: -19.501928329467773
    9. ')' → logprob: -20.126928329467773
    10. ' ' → logprob: -20.501928329467773

Token 163: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.125
    3. '۲' → logprob: -16.75
    4. '₂' → logprob: -17.5
    5. '２' → logprob: -17.6875
    6. ')' → logprob: -17.6875
    7. '```' → logprob: -18.0
    8. 'o' → logprob: -18.4375
    9. 'p' → logprob: -18.8125
    10. 'c' → logprob: -19.375

Token 164: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01420041173696518
    2. ')
' → logprob: -4.264200210571289
    3. ')
' → logprob: -10.764200210571289
    4. ')

' → logprob: -11.139200210571289
    5. ' )' → logprob: -14.639200210571289
    6. ')`' → logprob: -15.139200210571289
    7. ')`
' → logprob: -15.889200210571289
    8. '   ' → logprob: -16.13920021057129
    9. ').' → logprob: -16.51420021057129
    10. ')

' → logprob: -16.88920021057129

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014158309204503894
    2. '<|end|>' → logprob: -6.751415729522705
    3. '        
' → logprob: -9.126416206359863
    4. ' if' → logprob: -9.876416206359863
    5. '```' → logprob: -10.501416206359863
    6. 'if' → logprob: -10.876416206359863
    7. '<|end|>' → logprob: -11.001416206359863
    8. ',' → logprob: -11.626416206359863
    9. '
' → logprob: -12.251416206359863
    10. '   ' → logprob: -13.376416206359863

Token 166: ' for' (ID: 395)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6345195174217224
    2. 'if' → logprob: -1.2595195770263672
    3. 'dist' → logprob: -1.8845195770263672
    4. '       ' → logprob: -4.634519577026367
    5. 'dx' → logprob: -5.134519577026367
    6. '   ' → logprob: -5.759519577026367
    7. 'vec' → logprob: -6.009519577026367
    8. 'v' → logprob: -6.134519577026367
    9. 'distance' → logprob: -6.134519577026367
    10. 'dis' → logprob: -6.759519577026367

Token 167: ' i' (ID: 575)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0429226160049438
    2. 't' → logprob: -2.2929224967956543
    3. 'point' → logprob: -2.4179224967956543
    4. ' point' → logprob: -2.6679224967956543
    5. ' p' → logprob: -2.9179224967956543
    6. 'i' → logprob: -3.0429224967956543
    7. ' t' → logprob: -3.1679224967956543
    8. 'd' → logprob: -3.6679224967956543
    9. 'dx' → logprob: -4.042922496795654
    10. 'pt' → logprob: -4.167922496795654

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06380287557840347
    2. 'in' → logprob: -3.06380295753479
    3. ',' → logprob: -4.438802719116211
    4. 'n' → logprob: -6.063802719116211
    5. ' ' → logprob: -7.438802719116211
    6. ' ,' → logprob: -8.938802719116211
    7. 'd' → logprob: -9.563802719116211
    8. 's' → logprob: -10.313802719116211
    9. '   ' → logprob: -10.688802719116211
    10. 'range' → logprob: -10.813802719116211

Token 169: ' (-' (ID: 21382)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.213082417845726
    2. 'range' → logprob: -2.0880823135375977
    3. '[' → logprob: -3.2130823135375977
    4. ' [' → logprob: -4.338082313537598
    5. '[-' → logprob: -5.213082313537598
    6. '[(' → logprob: -5.963082313537598
    7. '(range' → logprob: -6.713082313537598
    8. ' [(' → logprob: -6.838082313537598
    9. ' (' → logprob: -6.963082313537598
    10. ' ' → logprob: -7.338082313537598

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006585848750546575
    2. ' ' → logprob: -7.7506585121154785
    3. 'r' → logprob: -9.250658988952637
    4. '2' → logprob: -10.000658988952637
    5. '0' → logprob: -10.625658988952637
    6. '100' → logprob: -11.250658988952637
    7. '10' → logprob: -11.500658988952637
    8. 'sqrt' → logprob: -12.063158988952637
    9. '3' → logprob: -12.688158988952637
    10. '5' → logprob: -12.813158988952637

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042923877481371164
    2. '1' → logprob: -8.000429153442383
    3. '0' → logprob: -10.125429153442383
    4. ' ,' → logprob: -10.125429153442383
    5. 'j' → logprob: -12.625429153442383
    6. ',+' → logprob: -13.000429153442383
    7. 'e' → logprob: -13.250429153442383
    8. ',
' → logprob: -13.375429153442383
    9. ' ' → logprob: -13.875429153442383
    10. '.' → logprob: -14.375429153442383

Token 172: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5240440368652344
    2. '1' → logprob: -0.8990440368652344
    3. '0' → logprob: -7.399044036865234
    4. '+' → logprob: -8.524044036865234
    5. ' +' → logprob: -9.524044036865234
    6. '   ' → logprob: -11.774044036865234
    7. ')' → logprob: -11.899044036865234
    8. '  ' → logprob: -12.274044036865234
    9. '
' → logprob: -12.524044036865234
    10. '2' → logprob: -12.649044036865234

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030642462894320488
    2. ' ' → logprob: -3.530642509460449
    3. '0' → logprob: -7.030642509460449
    4. '+' → logprob: -12.03064250946045
    5. '   ' → logprob: -14.78064250946045
    6. '2' → logprob: -14.90564250946045
    7. ' +' → logprob: -15.78064250946045
    8. '    ' → logprob: -16.030641555786133
    9. '  ' → logprob: -16.155641555786133
    10. ')' → logprob: -17.655641555786133

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018254481256008148
    2. '):
' → logprob: -4.018254280090332
    3. ' ):' → logprob: -10.143254280090332
    4. ':' → logprob: -10.393254280090332
    5. '       ' → logprob: -10.643254280090332
    6. '   ' → logprob: -12.393254280090332
    7. '):
' → logprob: -12.393254280090332
    8. ',' → logprob: -13.768254280090332
    9. ' ):
' → logprob: -14.268254280090332
    10. ']:' → logprob: -15.393254280090332

Token 175: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27938947081565857
    2. '           ' → logprob: -2.0293893814086914
    3. '       ' → logprob: -2.4043893814086914
    4. ':
' → logprob: -4.154389381408691
    5. '<|end|>' → logprob: -5.654389381408691
    6. ',' → logprob: -6.654389381408691
    7. '<|end|>' → logprob: -7.779389381408691
    8. '               ' → logprob: -8.654389381408691
    9. '	       ' → logprob: -8.779389381408691
    10. '   ' → logprob: -9.029389381408691

Token 176: ' res' (ID: 694)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8731163144111633
    2. ' d' → logprob: -1.8731162548065186
    3. ' dx' → logprob: -1.9981162548065186
    4. 'd' → logprob: -2.2481162548065186
    5. 'v' → logprob: -3.4981162548065186
    6. '               ' → logprob: -3.7481162548065186
    7. ' v' → logprob: -3.7481162548065186
    8. 'dx' → logprob: -3.8731162548065186
    9. ' k' → logprob: -5.123116493225098
    10. ' p' → logprob: -5.123116493225098

Token 177: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.08925165981054306
    2. '.' → logprob: -2.464251756668091
    3. '.extend' → logprob: -8.464251518249512
    4. '=' → logprob: -9.839251518249512
    5. ' =' → logprob: -11.089251518249512
    6. '.=' → logprob: -11.839251518249512
    7. 'append' → logprob: -12.089251518249512
    8. '_append' → logprob: -12.214251518249512
    9. ' .' → logprob: -13.339251518249512
    10. '.Append' → logprob: -13.464251518249512

Token 178: '(pro' (ID: 7092)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.16229045391082764
    2. '(' → logprob: -2.162290573120117
    3. '(((' → logprob: -3.412290573120117
    4. '(pro' → logprob: -7.537290573120117
    5. '(project' → logprob: -8.162290573120117
    6. '(s' → logprob: -8.412290573120117
    7. '((((' → logprob: -8.537290573120117
    8. '(tuple' → logprob: -8.537290573120117
    9. '(
' → logprob: -8.662290573120117
    10. '(p' → logprob: -9.787290573120117

Token 179: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0025887389201670885
    2. 'ject' → logprob: -6.252588748931885
    3. 'jx' → logprob: -7.752588748931885
    4. 'x' → logprob: -10.002588272094727
    5. 'c' → logprob: -10.127588272094727
    6. 'jf' → logprob: -10.252588272094727
    7. 'ct' → logprob: -10.502588272094727
    8. 'd' → logprob: -11.002588272094727
    9. 'jc' → logprob: -11.502588272094727
    10. '(j' → logprob: -12.127588272094727

Token 180: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3237834572792053
    2. '+' → logprob: -1.3237833976745605
    3. '+i' → logprob: -4.5737833976745605
    4. ' plus' → logprob: -10.573783874511719
    5. ' ' → logprob: -11.073783874511719
    6. '.real' → logprob: -11.448783874511719
    7. ' -' → logprob: -11.448783874511719
    8. '<|end|>' → logprob: -11.823783874511719
    9. ')' → logprob: -11.948783874511719
    10. '+x' → logprob: -12.011283874511719

Token 181: ' i' (ID: 575)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.9775785207748413
    2. 'i' → logprob: -1.3525785207748413
    3. '(i' → logprob: -1.8525785207748413
    4. ' complex' → logprob: -2.227578639984131
    5. '(' → logprob: -3.102578639984131
    6. '(com' → logprob: -3.977578639984131
    7. ' i' → logprob: -4.102578639984131
    8. ' (' → logprob: -4.227578639984131
    9. '1' → logprob: -5.602578639984131
    10. '(c' → logprob: -7.602578639984131

Token 182: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06583553552627563
    2. '*(' → logprob: -2.940835475921631
    3. ' *' → logprob: -4.690835475921631
    4. '*((' → logprob: -6.690835475921631
    5. 'j' → logprob: -8.815835952758789
    6. 'complex' → logprob: -8.940835952758789
    7. '   ' → logprob: -10.065835952758789
    8. '*(-' → logprob: -10.315835952758789
    9. '*s' → logprob: -10.565835952758789
    10. '*j' → logprob: -11.065835952758789

Token 183: ' sqrt' (ID: 44237)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.07901658117771149
    2. ' complex' → logprob: -3.57901668548584
    3. '(com' → logprob: -3.95401668548584
    4. '1' → logprob: -4.70401668548584
    5. '(' → logprob: -4.82901668548584
    6. 'sqrt' → logprob: -4.95401668548584
    7. 'r' → logprob: -6.82901668548584
    8. ' (' → logprob: -6.95401668548584
    9. '(r' → logprob: -7.32901668548584
    10. '((' → logprob: -7.32901668548584

Token 184: '(
' (ID: 1607)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.024651942774653435
    2. '(abs' → logprob: -4.149652004241943
    3. '((' → logprob: -5.524652004241943
    4. 'r' → logprob: -5.649652004241943
    5. '(' → logprob: -7.774652004241943
    6. '(max' → logprob: -8.149651527404785
    7. 'abs' → logprob: -8.899651527404785
    8. '(float' → logprob: -9.524651527404785
    9. '(pow' → logprob: -9.899651527404785
    10. '(((' → logprob: -10.024651527404785

Token 185: '                      ' (ID: 10682)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7073336839675903
    2. '(abs' → logprob: -1.5823336839675903
    3. '(r' → logprob: -2.082333564758301
    4. 'abs' → logprob: -2.332333564758301
    5. '(max' → logprob: -2.957333564758301
    6. '((' → logprob: -4.332333564758301
    7. 'max' → logprob: -4.457333564758301
    8. '(' → logprob: -6.332333564758301
    9. '(((' → logprob: -7.957333564758301
    10. '(pow' → logprob: -8.4573335647583

Token 186: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.037566378712654114
    2. 'abs' → logprob: -4.287566184997559
    3. '(r' → logprob: -4.537566184997559
    4. 'max' → logprob: -5.287566184997559
    5. '(abs' → logprob: -5.537566184997559
    6. '(max' → logprob: -5.787566184997559
    7. '(' → logprob: -9.412566184997559
    8. '((' → logprob: -9.537566184997559
    9. ' r' → logprob: -9.787566184997559
    10. 'float' → logprob: -10.162566184997559

Token 187: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.08841518312692642
    2. '*r' → logprob: -2.5884151458740234
    3. '*' → logprob: -4.963415145874023
    4. '2' → logprob: -6.213415145874023
    5. 'r' → logprob: -7.963415145874023
    6. ' **' → logprob: -9.213415145874023
    7. '.r' → logprob: -12.213415145874023
    8. '_squared' → logprob: -12.338415145874023
    9. '(r' → logprob: -12.463415145874023
    10. 'sq' → logprob: -12.588415145874023

Token 188: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003902775060851127
    2. ' ' → logprob: -7.87539005279541
    3. '   ' → logprob: -13.00039005279541
    4. '**' → logprob: -13.68789005279541
    5. '
' → logprob: -13.75039005279541
    6. '-' → logprob: -14.12539005279541
    7. ' -' → logprob: -14.43789005279541
    8. '```' → logprob: -14.43789005279541
    9. ')' → logprob: -14.62539005279541
    10. '^' → logprob: -14.81289005279541

Token 189: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04859600216150284
    2. ' -' → logprob: -3.048595905303955
    3. '   ' → logprob: -12.173596382141113
    4. ' ' → logprob: -13.423596382141113
    5. '  ' → logprob: -14.923596382141113
    6. ')' → logprob: -15.048596382141113
    7. '    ' → logprob: -15.173596382141113
    8. '-
' → logprob: -15.298596382141113
    9. '          ' → logprob: -15.548596382141113
    10. '-s' → logprob: -15.798596382141113

Token 190: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.995785653591156
    2. '(abs' → logprob: -1.1207857131958008
    3. '(pro' → logprob: -1.4957857131958008
    4. '(p' → logprob: -3.120785713195801
    5. '((' → logprob: -3.495785713195801
    6. 'proj' → logprob: -5.370785713195801
    7. ' (' → logprob: -8.2457857131958
    8. '(c' → logprob: -8.2457857131958
    9. '(project' → logprob: -8.4957857131958
    10. '(res' → logprob: -8.6207857131958

Token 191: '(c' (ID: 2410)
  Prédit: '(pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.0011821311200037599
    2. '((' → logprob: -7.2511820793151855
    3. '(c' → logprob: -8.626182556152344
    4. '(project' → logprob: -8.751182556152344
    5. '(' → logprob: -9.251182556152344
    6. 'proj' → logprob: -10.501182556152344
    7. '(p' → logprob: -11.626182556152344
    8. 'c' → logprob: -14.751182556152344
    9. ' (' → logprob: -15.001182556152344
    10. '(
' → logprob: -15.001182556152344

Token 192: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1343996375799179
    2. '-' → logprob: -2.259399652481079
    3. '-pro' → logprob: -3.884399652481079
    4. '-p' → logprob: -7.7593994140625
    5. '-project' → logprob: -8.2593994140625
    6. ' ' → logprob: -9.8843994140625
    7. '   ' → logprob: -11.2593994140625
    8. '  ' → logprob: -11.2593994140625
    9. '          ' → logprob: -12.2593994140625
    10. '           ' → logprob: -12.7593994140625

Token 193: ' proj' (ID: 16022)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.0008316631428897381
    2. ' proj' → logprob: -7.125831604003906
    3. 'pro' → logprob: -11.625831604003906
    4. 'project' → logprob: -11.875831604003906
    5. '           ' → logprob: -13.250831604003906
    6. '  ' → logprob: -13.250831604003906
    7. 'p' → logprob: -13.500831604003906
    8. '(pro' → logprob: -13.875831604003906
    9. ' ' → logprob: -13.875831604003906
    10. '   ' → logprob: -14.500831604003906

Token 194: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.018234701827168465
    2. ')' → logprob: -4.018234729766846
    3. ' )' → logprob: -9.643234252929688
    4. '   ' → logprob: -11.268234252929688
    5. ' ' → logprob: -13.018234252929688
    6. '))' → logprob: -13.393234252929688
    7. ')))' → logprob: -13.643234252929688
    8. '**' → logprob: -14.018234252929688
    9. '       ' → logprob: -14.643234252929688
    10. '  ' → logprob: -15.393234252929688

Token 195: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.0259150157216936e-05
    2. ' ' → logprob: -10.00005054473877
    3. '```' → logprob: -13.37505054473877
    4. '1' → logprob: -13.87505054473877
    5. '**' → logprob: -14.37505054473877
    6. '   ' → logprob: -15.06255054473877
    7. ')' → logprob: -15.50005054473877
    8. '(' → logprob: -16.062549591064453
    9. '  ' → logprob: -16.312549591064453
    10. '=' → logprob: -16.375049591064453

Token 196: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.016840782016515732
    2. ')' → logprob: -4.141840934753418
    3. ' ))' → logprob: -8.641840934753418
    4. ')))' → logprob: -8.766840934753418
    5. '))
' → logprob: -8.766840934753418
    6. '   ' → logprob: -8.891840934753418
    7. '       ' → logprob: -9.641840934753418
    8. ')*' → logprob: -10.516840934753418
    9. '      ' → logprob: -11.266840934753418
    10. '           ' → logprob: -11.641840934753418

Token 197: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.59061199426651
    2. '*(' → logprob: -1.2156119346618652
    3. ' *' → logprob: -2.0906119346618652
    4. ')' → logprob: -3.9656119346618652
    5. '*p' → logprob: -5.965611934661865
    6. '*((' → logprob: -6.590611934661865
    7. '(p' → logprob: -7.965611934661865
    8. '))' → logprob: -8.090612411499023
    9. '   ' → logprob: -8.215612411499023
    10. ')*(' → logprob: -8.215612411499023

Token 198: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5704618692398071
    2. '1' → logprob: -1.3204618692398071
    3. 'complex' → logprob: -2.4454617500305176
    4. '(' → logprob: -3.3204617500305176
    5. '((' → logprob: -3.9454617500305176
    6. '(c' → logprob: -4.820461750030518
    7. '(end' → logprob: -5.445461750030518
    8. ' (' → logprob: -5.570461750030518
    9. '(project' → logprob: -6.070461750030518
    10. '(z' → logprob: -6.195461750030518

Token 199: 'p' (ID: 79)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.04512631520628929
    2. '(end' → logprob: -3.42012619972229
    3. 'end' → logprob: -5.170126438140869
    4. 'p' → logprob: -5.545126438140869
    5. '1' → logprob: -7.920126438140869
    6. ' (' → logprob: -8.045125961303711
    7. '(c' → logprob: -8.045125961303711
    8. '(' → logprob: -8.170125961303711
    9. '((' → logprob: -8.545125961303711
    10. 'complex' → logprob: -9.170125961303711

Token 200: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. '
' → logprob: -14.00000286102295
    3. '   ' → logprob: -15.50000286102295
    4. '(' → logprob: -15.75000286102295
    5. 'p' → logprob: -16.000001907348633
    6. ' ' → logprob: -16.000001907348633
    7. 's' → logprob: -16.062501907348633
    8. 'end' → logprob: -16.250001907348633
    9. 'import' → logprob: -16.250001907348633
    10. '```' → logprob: -16.687501907348633

Token 201: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1687249094247818
    2. '-p' → logprob: -1.9187248945236206
    3. ' -' → logprob: -4.79372501373291
    4. '-c' → logprob: -9.16872501373291
    5. 'p' → logprob: -10.16872501373291
    6. '-per' → logprob: -12.04372501373291
    7. '-P' → logprob: -12.54372501373291
    8. '          ' → logprob: -12.66872501373291
    9. '   ' → logprob: -12.79372501373291
    10. ' p' → logprob: -12.91872501373291

Token 202: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00011021859245374799
    2. ' p' → logprob: -9.125110626220703
    3. '<|end|>' → logprob: -13.625110626220703
    4. ')p' → logprob: -17.750110626220703
    5. ' ' → logprob: -17.875110626220703
    6. '<p' → logprob: -17.875110626220703
    7. '   ' → logprob: -18.000110626220703
    8. '       ' → logprob: -18.250110626220703
    9. ')' → logprob: -18.375110626220703
    10. '	p' → logprob: -18.375110626220703

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ')' → logprob: -16.0
    3. ' ' → logprob: -16.125
    4. 'r' → logprob: -16.9375
    5. 'oints' → logprob: -17.375
    6. '```' → logprob: -17.75
    7. '<|end|>' → logprob: -18.0
    8. '１' → logprob: -18.0
    9. 'ro' → logprob: -18.0625
    10. '۱' → logprob: -18.4375

Token 204: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.036315612494945526
    2. ')/(' → logprob: -3.411315679550171
    3. ')/' → logprob: -6.661315441131592
    4. '/' → logprob: -7.286315441131592
    5. '/(' → logprob: -8.03631591796875
    6. '   ' → logprob: -9.03631591796875
    7. 'j' → logprob: -9.28631591796875
    8. ' /' → logprob: -9.53631591796875
    9. ')
' → logprob: -11.28631591796875
    10. ' )' → logprob: -11.41131591796875

Token 205: ' /' (ID: 820)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.39956188201904297
    2. '/' → logprob: -1.649561882019043
    3. ')' → logprob: -3.024561882019043
    4. '/(' → logprob: -3.774561882019043
    5. ')/(' → logprob: -4.024561882019043
    6. '   ' → logprob: -4.149561882019043
    7. 'j' → logprob: -4.274561882019043
    8. 'complex' → logprob: -5.024561882019043
    9. '1' → logprob: -5.899561882019043
    10. '*(' → logprob: -6.024561882019043

Token 206: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -5.6457742175552994e-05
    2. ' abs' → logprob: -10.375056266784668
    3. '(abs' → logprob: -10.625056266784668
    4. '.abs' → logprob: -14.875056266784668
    5. '_abs' → logprob: -15.000056266784668
    6. '```' → logprob: -16.250057220458984
    7. '
' → logprob: -17.500057220458984
    8. 'Abs' → logprob: -17.500057220458984
    9. '|' → logprob: -17.750057220458984
    10. '   ' → logprob: -18.375057220458984

Token 207: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.1994775377388578e-05
    2. 'p' → logprob: -11.750012397766113
    3. '(' → logprob: -12.875012397766113
    4. '((' → logprob: -14.000012397766113
    5. '(end' → logprob: -14.625012397766113
    6. '(
' → logprob: -15.500012397766113
    7. ' (' → logprob: -16.875011444091797
    8. '   ' → logprob: -19.500011444091797
    9. ' p' → logprob: -19.875011444091797
    10. 'end' → logprob: -20.125011444091797

Token 208: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3319124011322856e-05
    2. 'p' → logprob: -10.875022888183594
    3. '1' → logprob: -12.625022888183594
    4. ' p' → logprob: -15.125022888183594
    5. ' ' → logprob: -15.500022888183594
    6. '```' → logprob: -15.875022888183594
    7. '₂' → logprob: -16.437522888183594
    8. ')' → logprob: -16.875022888183594
    9. ' -' → logprob: -17.000022888183594
    10. '-' → logprob: -17.750022888183594

Token 209: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6530151963233948
    2. ' -' → logprob: -0.7780151963233948
    3. '-p' → logprob: -3.90301513671875
    4. 'p' → logprob: -10.77801513671875
    5. ' ' → logprob: -12.40301513671875
    6. ' p' → logprob: -13.27801513671875
    7. '   ' → logprob: -14.77801513671875
    8. '-
' → logprob: -15.65301513671875
    9. '  ' → logprob: -15.77801513671875
    10. ',' → logprob: -16.02801513671875

Token 210: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005532711511477828
    2. ' p' → logprob: -7.500553131103516
    3. ' ' → logprob: -16.000553131103516
    4. '   ' → logprob: -16.375553131103516
    5. '  ' → logprob: -17.000553131103516
    6. '1' → logprob: -17.375553131103516
    7. '           ' → logprob: -17.500553131103516
    8. '<p' → logprob: -17.875553131103516
    9. '	p' → logprob: -18.375553131103516
    10. '    ' → logprob: -18.375553131103516

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.875000953674316
    4. ')' → logprob: -16.5
    5. 'p' → logprob: -17.375
    6. '
' → logprob: -17.625
    7. '   ' → logprob: -17.75
    8. '-' → logprob: -18.625
    9. '１' → logprob: -18.75
    10. '_' → logprob: -18.8125

Token 212: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16138853132724762
    2. ')' → logprob: -1.9113885164260864
    3. '))
' → logprob: -7.286388397216797
    4. '       ' → logprob: -8.536388397216797
    5. ')))' → logprob: -8.786388397216797
    6. ')
' → logprob: -9.161388397216797
    7. '   ' → logprob: -11.036388397216797
    8. ' ))' → logprob: -12.661388397216797
    9. ' )' → logprob: -13.411388397216797
    10. '           ' → logprob: -14.036388397216797

Token 213: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10642150789499283
    2. 'for' → logprob: -2.60642147064209
    3. ')' → logprob: -4.48142147064209
    4. '       ' → logprob: -4.98142147064209
    5. ' for' → logprob: -5.10642147064209
    6. 'ans' → logprob: -7.10642147064209
    7. '```' → logprob: -7.48142147064209
    8. ' ans' → logprob: -7.98142147064209
    9. ')
' → logprob: -7.98142147064209
    10. '.' → logprob: -9.35642147064209

Token 214: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3221856653690338
    2. 'for' → logprob: -1.3221856355667114
    3. 'ans' → logprob: -5.072185516357422
    4. ' for' → logprob: -6.072185516357422
    5. '       ' → logprob: -8.572185516357422
    6. ' ans' → logprob: -10.197185516357422
    7. '```' → logprob: -10.322185516357422
    8. 'print' → logprob: -10.572185516357422
    9. 'res' (adapté à ' res') → logprob: -12.572185516357422
    10. '(ans' → logprob: -12.572185516357422

Token 215: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.43246105313301086
    2. '.append' → logprob: -1.5574610233306885
    3. '<|end|>' → logprob: -2.5574610233306885
    4. '.extend' → logprob: -3.8074610233306885
    5. '.' → logprob: -4.182461261749268
    6. '.pop' → logprob: -4.682461261749268
    7. ')' → logprob: -5.182461261749268
    8. ',' → logprob: -6.057461261749268
    9. '[' → logprob: -6.057461261749268
    10. '.clear' → logprob: -6.557461261749268

Token 216: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.2447182536125183
    2. '()' → logprob: -1.994718313217163
    3. 'key' → logprob: -2.744718313217163
    4. '(reverse' → logprob: -4.744718074798584
    5. '()
' → logprob: -5.619718074798584
    6. ',key' → logprob: -5.869718074798584
    7. ' key' → logprob: -6.869718074798584
    8. 'reverse' → logprob: -8.244718551635742
    9. '_key' → logprob: -9.869718551635742
    10. 'def' → logprob: -9.869718551635742

Token 217: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.008619419299066067
    2. '=' → logprob: -4.75861930847168
    3. '=len' → logprob: -13.00861930847168
    4. '=res' → logprob: -13.13361930847168
    5. ' =' → logprob: -15.50861930847168
    6. '=str' → logprob: -16.38361930847168
    7. '=float' → logprob: -16.50861930847168
    8. '=(' → logprob: -16.63361930847168
    9. 'lambda' → logprob: -17.13361930847168
    10. ' lambda' → logprob: -17.50861930847168

Token 218: ' x' (ID: 1215)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4266999661922455
    2. 'z' → logprob: -1.8016999959945679
    3. 'x' → logprob: -3.0516998767852783
    4. 't' → logprob: -3.0516998767852783
    5. 'pt' → logprob: -3.3016998767852783
    6. 'a' → logprob: -3.9266998767852783
    7. 'k' → logprob: -4.551700115203857
    8. 'v' → logprob: -5.051700115203857
    9. 'point' → logprob: -5.176700115203857
    10. 'q' → logprob: -6.426700115203857

Token 219: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008338087354786694
    2. ':x' → logprob: -7.125833988189697
    3. ' :' → logprob: -10.500833511352539
    4. ':
' → logprob: -13.750833511352539
    5. 'x' → logprob: -14.625833511352539
    6. 'res' → logprob: -16.50083351135254
    7. '   ' → logprob: -16.62583351135254
    8. '：' → logprob: -16.75083351135254
    9. ':r' → logprob: -17.37583351135254
    10. ':return' → logprob: -17.50083351135254

Token 220: ' (' (ID: 350)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0676918774843216
    2. 'x' → logprob: -3.3176918029785156
    3. 'lambda' → logprob: -4.067691802978516
    4. '(x' → logprob: -5.317691802978516
    5. ' abs' → logprob: -5.567691802978516
    6. '(abs' → logprob: -6.067691802978516
    7. '(lambda' → logprob: -8.067691802978516
    8. ' x' → logprob: -8.192691802978516
    9. ' lambda' → logprob: -8.692691802978516
    10. 'complex' → logprob: -9.192691802978516

Token 221: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28241246938705444
    2. '(x' → logprob: -1.9074125289916992
    3. 'abs' → logprob: -2.407412528991699
    4. '(abs' → logprob: -5.032412528991699
    5. ' (' → logprob: -7.782412528991699
    6. ' x' → logprob: -8.4074125289917
    7. ' abs' → logprob: -9.2824125289917
    8. '((' → logprob: -9.7824125289917
    9. '-' → logprob: -9.7824125289917
    10. '-(' → logprob: -10.4074125289917

Token 222: '.real' (ID: 63800)
  Prédit: '.real'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.real' → logprob: -0.029756275936961174
    2. '.imag' → logprob: -3.5297563076019287
    3. '.con' → logprob: -13.154756546020508
    4. ').' → logprob: -13.279756546020508
    5. ' .' → logprob: -13.904756546020508
    6. '.' → logprob: -14.154756546020508
    7. '.im' → logprob: -14.904756546020508
    8. '   ' → logprob: -17.654756546020508
    9. '.x' → logprob: -17.779756546020508
    10. '-' → logprob: -17.779756546020508

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012421583756804466
    2. ',x' → logprob: -4.512421607971191
    3. '))' → logprob: -6.637421607971191
    4. ',y' → logprob: -10.387421607971191
    5. ' ,' → logprob: -11.387421607971191
    6. ',res' → logprob: -11.637421607971191
    7. ')' → logprob: -12.762421607971191
    8. ',p' → logprob: -13.137421607971191
    9. ',
' → logprob: -13.137421607971191
    10. '**' → logprob: -14.262421607971191

Token 224: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005929274018853903
    2. ' x' → logprob: -5.130929470062256
    3. '   ' → logprob: -15.505928993225098
    4. ' ' → logprob: -16.130929946899414
    5. '    ' → logprob: -16.380929946899414
    6. '  ' → logprob: -16.380929946899414
    7. '	x' → logprob: -16.630929946899414
    8. '(x' → logprob: -17.630929946899414
    9. '     ' → logprob: -17.630929946899414
    10. '      ' → logprob: -17.755929946899414

Token 225: '.imag' (ID: 171484)
  Prédit: '.imag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.imag' → logprob: -0.014350365847349167
    2. '.im' → logprob: -4.264350414276123
    3. ' .' → logprob: -9.514349937438965
    4. '.abs' → logprob: -9.639349937438965
    5. 'imag' → logprob: -11.014349937438965
    6. '.Im' → logprob: -11.764349937438965
    7. ').' → logprob: -11.889349937438965
    8. '.' → logprob: -12.014349937438965
    9. ')' → logprob: -12.264349937438965
    10. '.real' → logprob: -13.639349937438965

Token 226: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005348019185476005
    2. ')' → logprob: -7.625535011291504
    3. '))
' → logprob: -10.125535011291504
    4. '),' → logprob: -12.375535011291504
    5. ' ))' → logprob: -14.250535011291504
    6. ',' → logprob: -14.625535011291504
    7. ')))' → logprob: -14.625535011291504
    8. '()))' → logprob: -15.250535011291504
    9. ')
' → logprob: -15.625535011291504
    10. '))

' → logprob: -15.750535011291504

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060772575438022614
    2. '   ' → logprob: -3.060772657394409
    3. ' for' → logprob: -5.06077241897583
    4. 'for' → logprob: -5.18577241897583
    5. '
' → logprob: -9.685772895812988
    6. '<|end|>' → logprob: -9.935772895812988
    7. 'ans' → logprob: -11.310772895812988
    8. '```' → logprob: -11.810772895812988
    9. ' ans' → logprob: -12.185772895812988
    10. 'print' → logprob: -12.185772895812988

Token 228: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8938231468200684
    2. 'for' → logprob: -1.1438231468200684
    3. 'ans' (adapté à ' ans') → logprob: -1.5188231468200684
    4. 'if' → logprob: -4.018823146820068
    5. ' ans' → logprob: -4.018823146820068
    6. ' for' → logprob: -4.268823146820068
    7. '(ans' → logprob: -6.518823146820068
    8. ' if' → logprob: -7.268823146820068
    9. 'print' → logprob: -7.518823146820068
    10. '	ans' → logprob: -9.018823623657227

Token 229: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.11665117740631104
    2. '.append' → logprob: -2.3666510581970215
    3. '.' → logprob: -4.1166510581970215
    4. ' .' → logprob: -12.11665153503418
    5. '.ext' → logprob: -13.36665153503418
    6. '​.' → logprob: -14.11665153503418
    7. '.app' → logprob: -14.36665153503418
    8. '+.' → logprob: -14.36665153503418
    9. '+=' → logprob: -14.99165153503418
    10. '.ap' → logprob: -14.99165153503418

Token 230: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.005573928821831942
    2. '(' → logprob: -5.505573749542236
    3. '(((' → logprob: -7.005573749542236
    4. '(res' → logprob: -8.255574226379395
    5. '(tuple' → logprob: -9.255574226379395
    6. ' ((' → logprob: -9.505574226379395
    7. '(
' → logprob: -9.505574226379395
    8. '([(' → logprob: -10.005574226379395
    9. '[(' → logprob: -11.130574226379395
    10. '   ' → logprob: -12.255574226379395

Token 231: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00031043673516251147
    2. ' res' → logprob: -8.750310897827148
    3. 'round' → logprob: -9.000310897827148
    4. 'float' → logprob: -11.375310897827148
    5. '   ' → logprob: -11.500310897827148
    6. '           ' → logprob: -13.125310897827148
    7. 'ans' → logprob: -13.875310897827148
    8. '*' → logprob: -14.000310897827148
    9. '       ' → logprob: -14.375310897827148
    10. '
' → logprob: -14.750310897827148

Token 232: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002398938377154991
    2. '0' → logprob: -8.375240325927734
    3. ')[' → logprob: -13.000240325927734
    4. '-' → logprob: -13.500240325927734
    5. ' [' → logprob: -13.625240325927734
    6. '][' → logprob: -13.875240325927734
    7. '[-' → logprob: -14.250240325927734
    8. '1' → logprob: -14.375240325927734
    9. '```' → logprob: -14.625240325927734
    10. '   ' → logprob: -14.875240325927734

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.6100132496794686e-05
    2. ' ' → logprob: -9.875056266784668
    3. '1' → logprob: -13.125056266784668
    4. '-' → logprob: -13.937556266784668
    5. '[' → logprob: -14.312556266784668
    6. '   ' → logprob: -14.750056266784668
    7. '  ' → logprob: -16.37505531311035
    8. '۰' → logprob: -16.37505531311035
    9. '(' → logprob: -17.00005531311035
    10. '０' → logprob: -17.06255531311035

Token 234: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.35764533281326294
    2. ').' → logprob: -1.7326452732086182
    3. '.real' → logprob: -2.107645273208618
    4. '}.' → logprob: -6.357645511627197
    5. '.' → logprob: -8.232645034790039
    6. ' .' → logprob: -8.232645034790039
    7. '   ' → logprob: -10.482645034790039
    8. ' ' → logprob: -10.482645034790039
    9. ' ].' → logprob: -12.357645034790039
    10. '.re' → logprob: -12.982645034790039

Token 235: 'real' (ID: 13187)
  Prédit: 'real'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'real' → logprob: -7.896309739408025e-07
    2. ' real' → logprob: -14.250000953674316
    3. '.real' → logprob: -16.375
    4. 'imag' → logprob: -20.0
    5. '_real' → logprob: -20.125
    6. '(real' → logprob: -20.375
    7. '-real' → logprob: -21.625
    8. ' ' → logprob: -21.625
    9. 'x' → logprob: -21.875
    10. 'Real' → logprob: -22.375

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.56364209135063e-05
    2. ',res' → logprob: -10.000065803527832
    3. ' ,' → logprob: -11.250065803527832
    4. ',
' → logprob: -11.875065803527832
    5. 'res' → logprob: -16.500064849853516
    6. ',
' → logprob: -16.875064849853516
    7. '       ' → logprob: -17.625064849853516
    8. '   ' → logprob: -18.125064849853516
    9. ',float' → logprob: -18.625064849853516
    10. '```' → logprob: -18.625064849853516

Token 237: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0019286326132714748
    2. ' res' → logprob: -6.251928806304932
    3. '	res' → logprob: -17.751928329467773
    4. '   ' → logprob: -18.001928329467773
    5. '
' → logprob: -18.126928329467773
    6. ' ' → logprob: -18.626928329467773
    7. '(res' → logprob: -18.876928329467773
    8. '       ' → logprob: -19.126928329467773
    9. 'ans' → logprob: -19.126928329467773
    10. '  ' → logprob: -19.376928329467773

Token 238: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10619191825389862
    2. '0' → logprob: -2.606191873550415
    3. '.imag' → logprob: -4.481192111968994
    4. '.' → logprob: -4.606192111968994
    5. '].' → logprob: -5.481192111968994
    6. ').' → logprob: -6.731192111968994
    7. '.im' → logprob: -9.231191635131836
    8. '[].' → logprob: -9.856191635131836
    9. ' ' → logprob: -10.481191635131836
    10. '.real' → logprob: -10.481191635131836

Token 239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.034592388459714e-06
    2. '1' → logprob: -12.875005722045898
    3. ' ' → logprob: -12.875005722045898
    4. 'imag' → logprob: -15.000005722045898
    5. '-' → logprob: -15.375005722045898
    6. '   ' → logprob: -16.3750057220459
    7. '.imag' → logprob: -16.6250057220459
    8. '```' → logprob: -16.6875057220459
    9. '
' → logprob: -17.0625057220459
    10. '  ' → logprob: -17.8125057220459

Token 240: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.013077527284622192
    2. '.imag' → logprob: -4.888077735900879
    3. '.real' → logprob: -5.513077735900879
    4. ').' → logprob: -6.638077735900879
    5. '.im' → logprob: -9.638077735900879
    6. '.' → logprob: -11.013077735900879
    7. '}.' → logprob: -11.388077735900879
    8. ' ].' → logprob: -12.138077735900879
    9. '],' → logprob: -12.138077735900879
    10. ']' → logprob: -12.388077735900879

Token 241: 'imag' (ID: 66716)
  Prédit: 'imag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imag' → logprob: -1.981667537620524e-06
    2. '.imag' → logprob: -13.375001907348633
    3. 'real' → logprob: -15.500001907348633
    4. ' imag' → logprob: -15.875001907348633
    5. ' ' → logprob: -19.750001907348633
    6. 'im' → logprob: -19.750001907348633
    7. 'img' → logprob: -20.250001907348633
    8. '
' → logprob: -20.250001907348633
    9. '0' → logprob: -20.625001907348633
    10. '   ' → logprob: -20.625001907348633

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.542423165636137e-05
    2. ' ,' → logprob: -9.625085830688477
    3. ',res' → logprob: -11.000085830688477
    4. ',
' → logprob: -13.375085830688477
    5. '),' → logprob: -14.000085830688477
    6. 'res' → logprob: -16.125085830688477
    7. '       ' → logprob: -17.125085830688477
    8. '   ' → logprob: -17.125085830688477
    9. ')' → logprob: -18.125085830688477
    10. '```' → logprob: -18.375085830688477

Token 243: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.20141558349132538
    2. ' res' → logprob: -1.7014155387878418
    3. ' ' → logprob: -14.826416015625
    4. '	res' → logprob: -14.826416015625
    5. '(res' → logprob: -15.451416015625
    6. '   ' → logprob: -15.576416015625
    7. '    ' → logprob: -15.701416015625
    8. '       ' → logprob: -15.826416015625
    9. '      ' → logprob: -16.451416015625
    10. '        ' → logprob: -16.451416015625

Token 244: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7372048862162046e-05
    2. '1' → logprob: -10.625027656555176
    3. '```' → logprob: -13.750027656555176
    4. '0' → logprob: -14.875027656555176
    5. ' [' → logprob: -14.875027656555176
    6. ')[' → logprob: -14.875027656555176
    7. '   ' → logprob: -15.625027656555176
    8. 's' → logprob: -16.00002670288086
    9. '][' → logprob: -16.25002670288086
    10. '{' → logprob: -16.62502670288086

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -14.375001907348633
    3. '0' → logprob: -14.500001907348633
    4. '-' → logprob: -14.625001907348633
    5. '   ' → logprob: -15.625001907348633
    6. '```' → logprob: -17.125001907348633
    7. '  ' → logprob: -18.125001907348633
    8. '``' → logprob: -18.500001907348633
    9. '[' → logprob: -18.625001907348633
    10. '１' → logprob: -18.625001907348633

Token 246: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.05964783951640129
    2. '.real' → logprob: -2.934647798538208
    3. '}.' → logprob: -5.684648036956787
    4. ').' → logprob: -7.309648036956787
    5. '.' → logprob: -7.559648036956787
    6. '>.' → logprob: -9.934647560119629
    7. ' .' → logprob: -10.434647560119629
    8. '.re' → logprob: -10.684647560119629
    9. '.to' → logprob: -12.309647560119629
    10. ']' → logprob: -12.309647560119629

Token 247: 'real' (ID: 13187)
  Prédit: 'real'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'real' → logprob: -0.00936549250036478
    2. '.real' → logprob: -5.259365558624268
    3. 'imag' → logprob: -5.509365558624268
    4. '.imag' → logprob: -9.50936508178711
    5. ' real' → logprob: -14.88436508178711
    6. '_real' → logprob: -18.38436508178711
    7. '-real' → logprob: -18.38436508178711
    8. ' imag' → logprob: -19.25936508178711
    9. '(real' → logprob: -19.38436508178711
    10. 'complex' → logprob: -19.50936508178711

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. ',
' → logprob: -11.500015258789062
    3. ' ,' → logprob: -12.250015258789062
    4. ',res' → logprob: -15.250015258789062
    5. ',

' → logprob: -17.375015258789062
    6. '),' → logprob: -17.500015258789062
    7. ')' → logprob: -17.875015258789062
    8. '```' → logprob: -18.625015258789062
    9. '‌,' → logprob: -18.875015258789062
    10. ',
' → logprob: -19.125015258789062

Token 249: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3868711292743683
    2. ' res' → logprob: -1.136871099472046
    3. '(res' → logprob: -17.511871337890625
    4. ')' → logprob: -17.636871337890625
    5. '	res' → logprob: -17.761871337890625
    6. ',res' → logprob: -18.011871337890625
    7. '_res' → logprob: -18.761871337890625
    8. ' ' → logprob: -18.886871337890625
    9. '$res' → logprob: -19.136871337890625
    10. 'resi' → logprob: -19.136871337890625

Token 250: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.361762136220932
    2. '.' → logprob: -1.3617621660232544
    3. '.imag' → logprob: -3.111762046813965
    4. '1' → logprob: -5.986762046813965
    5. '.im' → logprob: -8.861762046813965
    6. '0' → logprob: -9.111762046813965
    7. '-' → logprob: -10.861762046813965
    8. '.i' → logprob: -11.111762046813965
    9. '].' → logprob: -11.736762046813965
    10. '```' → logprob: -12.486762046813965

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. 'imag' → logprob: -12.625005722045898
    3. '0' → logprob: -13.875005722045898
    4. '.imag' → logprob: -14.000005722045898
    5. '-' → logprob: -16.3750057220459
    6. ' ' → logprob: -16.5000057220459
    7. '```' → logprob: -16.7500057220459
    8. 'im' → logprob: -17.3750057220459
    9. '].' → logprob: -17.7500057220459
    10. 'Imag' → logprob: -17.8750057220459

Token 252: '].' (ID: 1651)
  Prédit: '.imag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.imag' → logprob: -0.21473978459835052
    2. '].' → logprob: -1.7147397994995117
    3. '.' → logprob: -4.464739799499512
    4. '.im' → logprob: -6.589739799499512
    5. ').' → logprob: -8.089739799499512
    6. '}.' → logprob: -10.214739799499512
    7. ' ].' → logprob: -12.714739799499512
    8. ' .' → logprob: -13.214739799499512
    9. '>.' → logprob: -13.339739799499512
    10. '.i' → logprob: -13.714739799499512

Token 253: 'imag' (ID: 66716)
  Prédit: 'imag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imag' → logprob: -2.935296834039036e-06
    2. '.imag' → logprob: -12.75000286102295
    3. ' imag' → logprob: -18.250003814697266
    4. '1' → logprob: -19.000003814697266
    5. 'im' → logprob: -19.875003814697266
    6. 'img' → logprob: -20.625003814697266
    7. 'abs' → logprob: -21.750003814697266
    8. 'imm' → logprob: -22.125003814697266
    9. '0' → logprob: -22.500003814697266
    10. 'inf' → logprob: -22.625003814697266

Token 254: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01105206273496151
    2. '))' → logprob: -4.511052131652832
    3. '   ' → logprob: -13.386052131652832
    4. ')))' → logprob: -13.761052131652832
    5. ')
' → logprob: -14.011052131652832
    6. ')}' → logprob: -15.136052131652832
    7. '       ' → logprob: -15.261052131652832
    8. '))
' → logprob: -15.761052131652832
    9. ' )' → logprob: -15.886052131652832
    10. ')")' → logprob: -17.386051177978516

Token 255: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4208151698112488
    2. '   ' → logprob: -1.1708152294158936
    3. 'print' → logprob: -3.4208152294158936
    4. '    
' → logprob: -7.5458149909973145
    5. ' for' → logprob: -9.170815467834473
    6. '
' → logprob: -10.170815467834473
    7. '  
' → logprob: -11.920815467834473
    8. '```' → logprob: -12.295815467834473
    9. '        
' → logprob: -13.170815467834473
    10. '<|end|>' → logprob: -13.920815467834473

Token 256: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.47757811343763e-05
    2. 'print' → logprob: -10.250044822692871
    3. '   ' → logprob: -11.750044822692871
    4. ' for' → logprob: -13.625044822692871
    5. 'ans' → logprob: -15.750044822692871
    6. '```' → logprob: -17.125043869018555
    7. 'import' → logprob: -18.750043869018555
    8. '    
' → logprob: -19.500043869018555
    9. '
' → logprob: -20.625043869018555
    10. '	for' → logprob: -20.875043869018555

Token 257: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5335341095924377
    2. 'x' → logprob: -0.9085341095924377
    3. '(x' → logprob: -6.033534049987793
    4. ' a' → logprob: -6.408534049987793
    5. 'line' → logprob: -6.533534049987793
    6. ' x' → logprob: -6.533534049987793
    7. '(a' → logprob: -7.283534049987793
    8. 'res' → logprob: -7.533534049987793
    9. 'ax' → logprob: -7.783534049987793
    10. 'i' → logprob: -7.783534049987793

Token 258: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20174144208431244
    2. 'in' → logprob: -1.7017414569854736
    3. ' ' → logprob: -8.951741218566895
    4. 'a' → logprob: -10.201741218566895
    5. 'n' → logprob: -10.201741218566895
    6. 'r' → logprob: -10.451741218566895
    7. '   ' → logprob: -10.701741218566895
    8. ',' → logprob: -10.826741218566895
    9. '  ' → logprob: -11.826741218566895
    10. '_in' → logprob: -12.076741218566895

Token 259: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.505351095460355e-05
    2. ' ans' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.12507438659668
    4. '(ans' → logprob: -17.62507438659668
    5. '	ans' → logprob: -18.12507438659668
    6. 'range' → logprob: -20.12507438659668
    7. ' ' → logprob: -20.50007438659668
    8. 'an' → logprob: -20.50007438659668
    9. '_ans' → logprob: -20.87507438659668
    10. 'answer' → logprob: -21.12507438659668

Token 260: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002607525559142232
    2. ':
' → logprob: -6.127607345581055
    3. ',' → logprob: -8.877607345581055
    4. '):' → logprob: -9.252607345581055
    5. '   ' → logprob: -9.877607345581055
    6. 'print' → logprob: -10.377607345581055
    7. ' in' → logprob: -10.627607345581055
    8. ')' → logprob: -10.752607345581055
    9. '<|end|>' → logprob: -11.127607345581055
    10. '=' → logprob: -11.627607345581055

Token 261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3142426908016205
    2. '   ' → logprob: -1.3142427206039429
    3. ' print' → logprob: -7.814242839813232
    4. 'print' → logprob: -7.939242839813232
    5. ':' → logprob: -9.064242362976074
    6. ',' → logprob: -10.064242362976074
    7. '<|end|>' → logprob: -10.564242362976074
    8. '```' → logprob: -11.439242362976074
    9. '(' → logprob: -12.439242362976074
    10. ':
' → logprob: -12.564242362976074

Token 262: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010348338400945067
    2. ' print' → logprob: -7.001034736633301
    3. '   ' → logprob: -9.0010347366333
    4. '       ' → logprob: -16.626035690307617
    5. '	print' → logprob: -17.876035690307617
    6. 'printf' → logprob: -18.126035690307617
    7. '```' → logprob: -18.751035690307617
    8. 'Print' → logprob: -22.376035690307617
    9. '-print' → logprob: -22.626035690307617
    10. '.print' → logprob: -22.751035690307617

Token 263: '("{' (ID: 29673)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5601717829704285
    2. '(*' → logprob: -1.0601718425750732
    3. '(f' → logprob: -2.5601718425750732
    4. '(' → logprob: -5.435171604156494
    5. 'a' → logprob: -7.185171604156494
    6. 'f' → logprob: -10.185172080993652
    7. '()' → logprob: -11.185172080993652
    8. '("{' → logprob: -11.435172080993652
    9. '*' → logprob: -11.935172080993652
    10. '*a' → logprob: -12.935172080993652

Token 264: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.006277859210968018
    2. 'a' → logprob: -5.256278038024902
    3. '0' → logprob: -7.006278038024902
    4. ':' → logprob: -9.506278038024902
    5. ':a' → logprob: -9.881278038024902
    6. '}' → logprob: -11.756278038024902
    7. '[a' → logprob: -13.631278038024902
    8. '.' → logprob: -14.006278038024902
    9. '[' → logprob: -14.506278038024902
    10. '{' → logprob: -15.131278038024902

Token 265: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.19856016337871552
    2. '8' → logprob: -2.3235602378845215
    3. '9' → logprob: -3.4485602378845215
    4. '10' → logprob: -3.4485602378845215
    5. '7' → logprob: -4.3235602378845215
    6. '12' → logprob: -5.4485602378845215
    7. '15' → logprob: -7.4485602378845215
    8. '14' → logprob: -9.448559761047363
    9. '11' → logprob: -9.573559761047363
    10. '4' → logprob: -9.823559761047363

Token 266: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9361264946837764e-07
    2. ' f' → logprob: -17.25
    3. '```' → logprob: -17.375
    4. '{' → logprob: -18.375
    5. '}' → logprob: -18.5
    6. '	f' → logprob: -18.625
    7. ''f' → logprob: -19.625
    8. '
' → logprob: -20.25
    9. '<f' → logprob: -20.25
    10. 'g' → logprob: -20.5

Token 267: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.08974388986825943
    2. ' {:.' → logprob: -2.4647438526153564
    3. '}".' → logprob: -7.2147440910339355
    4. '".' → logprob: -11.089743614196777
    5. ' .' → logprob: -11.339743614196777
    6. ' }' → logprob: -11.589743614196777
    7. '{' → logprob: -11.589743614196777
    8. '"' → logprob: -12.589743614196777
    9. ' ' → logprob: -12.714743614196777
    10. '}{' → logprob: -12.839743614196777

Token 268: ' {:.' (ID: 117746)
  Prédit: ' {:.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {:.' → logprob: -5.9795445849886164e-05
    2. ' {' → logprob: -10.500060081481934
    3. '{' → logprob: -10.625060081481934
    4. ' {}' → logprob: -12.750060081481934
    5. ' {:' → logprob: -12.750060081481934
    6. ' {}".' → logprob: -14.125060081481934
    7. ' .' → logprob: -14.750060081481934
    8. ' ' → logprob: -14.875060081481934
    9. ' {.' → logprob: -14.875060081481934
    10. '"{' → logprob: -17.000059127807617

Token 269: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.4974866644479334e-05
    2. 'f' → logprob: -11.125015258789062
    3. ' ' → logprob: -17.125015258789062
    4. '```' → logprob: -17.125015258789062
    5. 'format' → logprob: -17.750015258789062
    6. 'print' → logprob: -18.500015258789062
    7. '{' → logprob: -18.500015258789062
    8. 'six' → logprob: -19.000015258789062
    9. '六' → logprob: -19.125015258789062
    10. '006' → logprob: -19.375015258789062

Token 270: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -17.0
    3. '{' → logprob: -17.375
    4. ' f' → logprob: -17.375
    5. '```' → logprob: -17.5
    6. ' ' → logprob: -18.625
    7. 'ф' → logprob: -18.75
    8. '	f' → logprob: -18.875
    9. '   ' → logprob: -19.0
    10. 'g' → logprob: -20.375

Token 271: '}' (ID: 92)
  Prédit: ' {:.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {:.' → logprob: -6.337155355140567e-05
    2. '{' → logprob: -9.750062942504883
    3. ' {' → logprob: -13.250062942504883
    4. ' {}' → logprob: -13.750062942504883
    5. '}' → logprob: -14.250062942504883
    6. ' {.' → logprob: -14.500062942504883
    7. ' ' → logprob: -14.875062942504883
    8. ' {:' → logprob: -15.250062942504883
    9. ' .' → logprob: -15.375062942504883
    10. '{}' → logprob: -16.125062942504883

Token 272: ' {:.' (ID: 117746)
  Prédit: ' {:.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {:.' → logprob: -0.014164102263748646
    2. '{' → logprob: -4.264163970947266
    3. ' {.' → logprob: -15.264163970947266
    4. '"{' → logprob: -15.889163970947266
    5. '{:' → logprob: -16.014163970947266
    6. ' {:' → logprob: -17.014163970947266
    7. ' ' → logprob: -17.139163970947266
    8. '{x' → logprob: -17.514163970947266
    9. ' {' → logprob: -17.514163970947266
    10. '{s' → logprob: -17.639163970947266

Token 273: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -3.128163257315464e-07
    2. 'f' → logprob: -16.0
    3. '```' → logprob: -16.125
    4. ' ' → logprob: -17.25
    5. '{' → logprob: -17.375
    6. 'format' → logprob: -19.375
    7. '006' → logprob: -19.375
    8. '   ' → logprob: -19.5
    9. '۶' → logprob: -19.75
    10. '六' → logprob: -20.125

Token 274: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.339278580620885e-06
    2. '
' → logprob: -14.000001907348633
    3. ' f' → logprob: -14.375001907348633
    4. '}' → logprob: -15.375001907348633
    5. '```' → logprob: -15.875001907348633
    6. '	f' → logprob: -16.250001907348633
    7. '6' → logprob: -16.500001907348633
    8. '{' → logprob: -16.500001907348633
    9. ' ' → logprob: -16.750001907348633
    10. '   ' → logprob: -17.250001907348633

Token 275: '}' (ID: 92)
  Prédit: ' {:.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {:.' → logprob: -0.3504457473754883
    2. '}' → logprob: -1.2254457473754883
    3. '{' → logprob: -6.850445747375488
    4. ' ' → logprob: -7.225445747375488
    5. '{}' → logprob: -9.600445747375488
    6. ' {}' → logprob: -10.350445747375488
    7. ')' → logprob: -10.350445747375488
    8. ' }' → logprob: -11.475445747375488
    9. '}{' → logprob: -11.600445747375488
    10. '  ' → logprob: -11.725445747375488

Token 276: ' {:.' (ID: 117746)
  Prédit: ' {:.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {:.' → logprob: -0.00038134094211272895
    2. '{' → logprob: -7.8753814697265625
    3. ' {.' → logprob: -13.750381469726562
    4. ' {:' → logprob: -16.875381469726562
    5. ' {}' → logprob: -17.000381469726562
    6. ' ' → logprob: -17.125381469726562
    7. '{}' → logprob: -18.125381469726562
    8. '{}.' → logprob: -18.125381469726562
    9. ' {!' → logprob: -18.375381469726562
    10. '{}{' → logprob: -18.750381469726562

Token 277: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.005234121344983578
    2. 'f' → logprob: -5.255234241485596
    3. '```' → logprob: -15.755233764648438
    4. '{' → logprob: -15.880233764648438
    5. ' ' → logprob: -16.880233764648438
    6. 'print' → logprob: -17.880233764648438
    7. '006' → logprob: -17.880233764648438
    8. '   ' → logprob: -18.005233764648438
    9. '六' → logprob: -18.755233764648438
    10. '}' → logprob: -18.880233764648438

Token 278: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.2664456789934775e-06
    2. '}' → logprob: -14.500000953674316
    3. ' f' → logprob: -15.375000953674316
    4. '
' → logprob: -15.500000953674316
    5. '{' → logprob: -15.875000953674316
    6. '6' → logprob: -17.125001907348633
    7. '```' → logprob: -17.375001907348633
    8. '	f' → logprob: -17.500001907348633
    9. ' ' → logprob: -17.625001907348633
    10. '[f' → logprob: -18.250001907348633

Token 279: '}".' (ID: 53576)
  Prédit: '".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.10606112331151962
    2. '}".' → logprob: -2.4810612201690674
    3. '"' → logprob: -4.106060981750488
    4. '}' → logprob: -8.106060981750488
    5. '").' → logprob: -8.856060981750488
    6. '}"' → logprob: -10.731060981750488
    7. '")' → logprob: -11.106060981750488
    8. '}.' → logprob: -12.231060981750488
    9. ' ".' → logprob: -12.356060981750488
    10. '"}' → logprob: -12.981060981750488

Token 280: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -5.796184723294573e-06
    2. ' format' → logprob: -12.125005722045898
    3. 'print' → logprob: -15.750005722045898
    4. '.format' → logprob: -16.3750057220459
    5. '(format' → logprob: -16.6250057220459
    6. '	format' → logprob: -18.7500057220459
    7. 'a' → logprob: -19.1250057220459
    8. '```' → logprob: -19.8750057220459
    9. 'f' → logprob: -20.0000057220459
    10. ')' → logprob: -20.7500057220459

Token 281: '(*' (ID: 9000)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007013021036982536
    2. '*a' → logprob: -5.007012844085693
    3. '(*' → logprob: -8.257013320922852
    4. '(a' → logprob: -10.882013320922852
    5. '   ' → logprob: -11.507013320922852
    6. ' a' → logprob: -11.632013320922852
    7. ')a' → logprob: -15.007013320922852
    8. '	a' → logprob: -16.50701332092285
    9. '*' → logprob: -17.88201332092285
    10. '#a' → logprob: -18.13201332092285

Token 282: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.128163257315464e-07
    2. ' a' → logprob: -15.5
    3. '   ' → logprob: -17.875
    4. ')a' → logprob: -20.125
    5. '	a' → logprob: -21.0
    6. '_a' → logprob: -21.375
    7. '(a' → logprob: -21.75
    8. '[a' → logprob: -22.0
    9. 'а' → logprob: -22.75
    10. ')' → logprob: -23.125

Token 283: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -2.248469718324486e-05
    2. ')' → logprob: -10.875022888183594
    3. '))
' → logprob: -12.625022888183594
    4. ')))' → logprob: -16.625022888183594
    5. '   ' → logprob: -16.750022888183594
    6. ' ))' → logprob: -17.375022888183594
    7. ' ' → logprob: -19.125022888183594
    8. '()))' → logprob: -19.250022888183594
    9. ')}' → logprob: -19.875022888183594
    10. '"))' → logprob: -20.250022888183594


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 281
Tokens correctement prédits (1ère position, stricte): 129
Tokens correctement prédits (1ère position, avec adaptation): 136
Tokens correctement prédits (top 10): 246
Précision stricte (1ère position): 45.91%
Précision adaptée (1ère position): 48.40%
Précision (top 10): 87.54%
================================================================================
