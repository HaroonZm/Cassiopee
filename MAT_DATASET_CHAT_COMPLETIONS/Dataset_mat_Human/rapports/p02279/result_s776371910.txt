================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class TreeNode():

  def __init__(self, val, parent=-1):
    self.val = val
    self.children = []
    self.parent_val = parent
    self.depth = None

  def node_type(self):
    if self.depth == 0:
      return "root"
    elif len(self.children) > 0:
      return "internal node"
    else:
      return "leaf"

  def children_values(self):
    return [ c.val for c in self.children ]

  def __str__(self):
    return "node {0}: parent = {1}, depth = {2}, {3}, {4}".format(str(self.val), str(self.parent_val), str(self.depth), self.node_type(), self.children_values())

def calc_depths(node, level):
  if node is None: return 
  node.depth = level
  for ch in node.children:
    calc_depths(ch, level+1)

num = int(input())
nodes = {}

for i in range(num):
  ins = list(map(int, input().split()))
  val = ins[0]

  if nodes.get(ins[0]) is None:
    nodes[val] = TreeNode(val)

  n = nodes[val]
  if ins[1] > 0:
    for j in ins[2:]:
      nodes.setdefault(j, TreeNode(j, n.val))
      n.children.append(nodes[j])
      nodes[j].parent_val = n.val

parent = [node for node in nodes.values() if node.parent_val == -1][0]
calc_depths(parent, 0)
sort_nodes = sorted(nodes.items(), key=lambda x:x[0] )

for _, node in sort_nodes:
  print(node)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Tree' (ID: 14224)
  → Token d'amorce (pas de prédiction)

Token 2: 'Node' (ID: 2701)
  → Token d'amorce (pas de prédiction)

Token 3: '():

' (ID: 101746)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07421839237213135
    2. ':' → logprob: -3.199218273162842
    3. '{' → logprob: -3.574218273162842
    4. '.' → logprob: -6.324218273162842
    5. '[' → logprob: -7.699218273162842
    6. '```' → logprob: -8.94921875
    7. '(:' → logprob: -9.57421875
    8. '(
' → logprob: -9.57421875
    9. ' (' → logprob: -9.69921875
    10. ' {' → logprob: -10.19921875

Token 4: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004770210944116116
    2. '(' → logprob: -5.504770278930664
    3. '():' → logprob: -7.629770278930664
    4. '```' → logprob: -9.879770278930664
    5. '(:' → logprob: -10.254770278930664
    6. ':
' → logprob: -10.629770278930664
    7. '(
' → logprob: -10.754770278930664
    8. '{' → logprob: -10.879770278930664
    9. ' :' → logprob: -11.004770278930664
    10. ' (' → logprob: -12.129770278930664

Token 5: ' def' (ID: 1056)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012529428116977215
    2. '(' → logprob: -4.637529373168945
    3. ' :' → logprob: -7.137529373168945
    4. '   ' → logprob: -7.512529373168945
    5. ' ' → logprob: -7.637529373168945
    6. '():' → logprob: -8.387529373168945
    7. '```' → logprob: -8.637529373168945
    8. ':
' → logprob: -9.012529373168945
    9. '(
' → logprob: -9.512529373168945
    10. '.' → logprob: -9.512529373168945

Token 6: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.38824599981307983
    2. ' ' → logprob: -1.2632460594177246
    3. '__' → logprob: -3.2632460594177246
    4. ' def' → logprob: -8.388245582580566
    5. ' init' → logprob: -9.013245582580566
    6. ' ' → logprob: -9.013245582580566
    7. '  ' → logprob: -9.638245582580566
    8. '_' → logprob: -10.513245582580566
    9. '_init' → logprob: -10.888245582580566
    10. ' constructor' → logprob: -11.013245582580566

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.9153885558771435e-06
    2. ' init' → logprob: -12.875005722045898
    3. 'i' → logprob: -13.750005722045898
    4. '_init' → logprob: -13.750005722045898
    5. 'ini' → logprob: -14.125005722045898
    6. 'in' → logprob: -15.375005722045898
    7. '_i' → logprob: -16.6250057220459
    8. '_' → logprob: -17.3750057220459
    9. '	init' → logprob: -17.3750057220459
    10. 'inti' → logprob: -18.2500057220459

Token 8: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01778615452349186
    2. '(self' → logprob: -5.142786026000977
    3. '__(' → logprob: -5.267786026000977
    4. ' (' → logprob: -5.267786026000977
    5. '<|end|>' → logprob: -8.017786026000977
    6. '__(
' → logprob: -8.517786026000977
    7. 'self' → logprob: -8.642786026000977
    8. '__' → logprob: -8.767786026000977
    9. '(
' → logprob: -9.517786026000977
    10. '_' → logprob: -9.517786026000977

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011832444579340518
    2. ' self' → logprob: -9.125118255615234
    3. ')' → logprob: -12.250118255615234
    4. '(self' → logprob: -13.000118255615234
    5. ' ' → logprob: -13.375118255615234
    6. '	self' → logprob: -15.500118255615234
    7. ',self' → logprob: -15.875118255615234
    8. '       ' → logprob: -16.500118255615234
    9. ' )' → logprob: -16.625118255615234
    10. 'sel' → logprob: -16.750118255615234

Token 10: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.697536826133728
    2. '):' → logprob: -1.322536826133728
    3. ',' → logprob: -2.1975369453430176
    4. '<|end|>' → logprob: -3.0725369453430176
    5. '.' → logprob: -3.1975369453430176
    6. '(' → logprob: -3.8225369453430176
    7. ':' → logprob: -4.822536945343018
    8. ' ' → logprob: -6.572536945343018
    9. 'self' → logprob: -7.072536945343018
    10. '[' → logprob: -7.197536945343018

Token 11: ' val' (ID: 1459)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003788204165175557
    2. ' self' → logprob: -5.628787994384766
    3. 'data' → logprob: -9.128787994384766
    4. 'val' → logprob: -10.128787994384766
    5. 'value' → logprob: -11.378787994384766
    6. ')' → logprob: -11.503787994384766
    7. 'parent' → logprob: -12.128787994384766
    8. 'root' → logprob: -12.378787994384766
    9. '(self' → logprob: -12.503787994384766
    10. ' val' → logprob: -13.628787994384766

Token 12: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07396093755960464
    2. '=' → logprob: -3.698961019515991
    3. ',' → logprob: -3.823961019515991
    4. ')' → logprob: -3.823961019515991
    5. ':' → logprob: -6.073960781097412
    6. ' ):' → logprob: -8.82396125793457
    7. '):
' → logprob: -9.07396125793457
    8. '=None' → logprob: -9.57396125793457
    9. ' ' → logprob: -9.69896125793457
    10. ' ,' → logprob: -10.19896125793457

Token 13: ' parent' (ID: 5980)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.1985817700624466
    2. ' parent' → logprob: -2.0735816955566406
    3. 'left' → logprob: -3.4485816955566406
    4. ' children' → logprob: -4.698581695556641
    5. 'parent' → logprob: -5.073581695556641
    6. 'children' → logprob: -6.073581695556641
    7. ' )' → logprob: -6.323581695556641
    8. ' ' → logprob: -6.948581695556641
    9. ')' → logprob: -7.073581695556641
    10. ' root' → logprob: -7.573581695556641

Token 14: '=-' (ID: 21714)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16193322837352753
    2. ')' → logprob: -2.911933183670044
    3. ',' → logprob: -2.911933183670044
    4. '=' → logprob: -3.411933183670044
    5. '=None' → logprob: -4.911933422088623
    6. '):
' → logprob: -8.911932945251465
    7. ' ' → logprob: -9.411932945251465
    8. ':' → logprob: -9.536932945251465
    9. ')=' → logprob: -10.411932945251465
    10. ' ):' → logprob: -10.661932945251465

Token 15: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -12.250009536743164
    3. 'None' → logprob: -12.375009536743164
    4. ' None' → logprob: -15.375009536743164
    5. '2' → logprob: -17.125009536743164
    6. '   ' → logprob: -19.625009536743164
    7. ')' → logprob: -19.750009536743164
    8. '  ' → logprob: -20.000009536743164
    9. '=None' → logprob: -20.250009536743164
    10. '0' → logprob: -20.375009536743164

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002695386065170169
    2. ')' → logprob: -6.627695560455322
    3. ',' → logprob: -6.627695560455322
    4. '):
' → logprob: -10.502695083618164
    5. ':' → logprob: -11.627695083618164
    6. ' ):' → logprob: -12.377695083618164
    7. ' ' → logprob: -12.627695083618164
    8. '),' → logprob: -15.002695083618164
    9. ''):' → logprob: -15.252695083618164
    10. '=' → logprob: -15.877695083618164

Token 17: '   ' (ID: 271)
  Prédit: ' ):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ):' → logprob: -1.395262598991394
    2. ' ' → logprob: -1.645262598991394
    3. '):' → logprob: -1.895262598991394
    4. ')' → logprob: -2.1452627182006836
    5. ' )' → logprob: -2.6452627182006836
    6. '   ' → logprob: -2.8952627182006836
    7. '       ' → logprob: -2.8952627182006836
    8. '    ' → logprob: -3.5202627182006836
    9. ' :' → logprob: -3.6452627182006836
    10. '<|end|>' → logprob: -3.8952627182006836

Token 18: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.9433575868606567
    2. ' self' → logprob: -1.3183575868606567
    3. ' ' → logprob: -1.6933575868606567
    4. '       ' → logprob: -2.318357467651367
    5. '    ' → logprob: -3.318357467651367
    6. '   ' → logprob: -4.443357467651367
    7. '     ' → logprob: -5.443357467651367
    8. '        ' → logprob: -6.443357467651367
    9. '  ' → logprob: -6.443357467651367
    10. ' ' → logprob: -6.818357467651367

Token 19: '.val' (ID: 20368)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018466554582118988
    2. '.val' → logprob: -4.143466472625732
    3. ' .' → logprob: -6.518466472625732
    4. '.parent' → logprob: -7.768466472625732
    5. '.value' → logprob: -7.893466472625732
    6. ' ' → logprob: -9.39346694946289
    7. '.next' → logprob: -11.39346694946289
    8. ' =' → logprob: -12.01846694946289
    9. '.space' → logprob: -12.14346694946289
    10. '.children' → logprob: -12.26846694946289

Token 20: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1440397948026657
    2. ' =' → logprob: -2.0190398693084717
    3. ' ' → logprob: -7.269039630889893
    4. '<|end|>' → logprob: -8.51904010772705
    5. '_' → logprob: -8.76904010772705
    6. ')' → logprob: -8.89404010772705
    7. ',' → logprob: -9.39404010772705
    8. '.' → logprob: -9.89404010772705
    9. ' =)' → logprob: -11.51904010772705
    10. ' ,' → logprob: -12.64404010772705

Token 21: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.47407862544059753
    2. 'val' → logprob: -0.9740786552429199
    3. '	val' → logprob: -14.349078178405762
    4. '_val' → logprob: -14.974078178405762
    5. '[val' → logprob: -15.224078178405762
    6. '(val' → logprob: -15.599078178405762
    7. ' ' → logprob: -15.974078178405762
    8. ' ' → logprob: -16.099079132080078
    9. ',val' → logprob: -16.599079132080078
    10. '.val' → logprob: -16.724079132080078

Token 22: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9467691779136658
    2. ' ' → logprob: -1.4467692375183105
    3. '    ' → logprob: -1.4467692375183105
    4. 'self' (adapté à ' self') → logprob: -2.5717692375183105
    5. '<|end|>' → logprob: -3.8217692375183105
    6. ' self' → logprob: -4.3217692375183105
    7. '  ' → logprob: -4.9467692375183105
    8. '    
' → logprob: -5.3217692375183105
    9. ' 
' → logprob: -5.5717692375183105
    10. '     ' → logprob: -5.6967692375183105

Token 25: '.children' (ID: 26331)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11356097459793091
    2. '.parent' → logprob: -2.238560914993286
    3. ' .' → logprob: -7.613561153411865
    4. ' ' → logprob: -8.863560676574707
    5. 'parent' → logprob: -10.488560676574707
    6. '_parent' → logprob: -10.613560676574707
    7. '.Parent' → logprob: -11.613560676574707
    8. '.val' → logprob: -12.113560676574707
    9. '.children' → logprob: -12.113560676574707
    10. ' parent' → logprob: -12.238560676574707

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22884322702884674
    2. '=' → logprob: -1.6038432121276855
    3. '=[]' → logprob: -5.7288432121276855
    4. '<|end|>' → logprob: -9.228843688964844
    5. ' ' → logprob: -10.103843688964844
    6. '[]' → logprob: -11.728843688964844
    7. '[' → logprob: -12.228843688964844
    8. '<|end|>' → logprob: -12.728843688964844
    9. ':' → logprob: -12.978843688964844
    10. ',' → logprob: -12.978843688964844

Token 27: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.018197350203990936
    2. ' []' → logprob: -4.018197536468506
    3. '{}' → logprob: -10.393197059631348
    4. '[]}' → logprob: -11.143197059631348
    5. '[' → logprob: -14.018197059631348
    6. '[]
' → logprob: -14.518197059631348
    7. ' ' → logprob: -14.893197059631348
    8. ' {}' → logprob: -15.393197059631348
    9. '[]

' → logprob: -15.643197059631348
    10. '[],' → logprob: -16.268198013305664

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10163012146949768
    2. ' ' → logprob: -3.226630210876465
    3. '<|end|>' → logprob: -3.851630210876465
    4. '    
' → logprob: -3.976630210876465
    5. '  
' → logprob: -5.101630210876465
    6. '  ' → logprob: -5.601630210876465
    7. '    ' → logprob: -6.101630210876465
    8. '
' → logprob: -6.351630210876465
    9. '\n' → logprob: -7.101630210876465
    10. '   
' → logprob: -7.476630210876465

Token 29: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25331491231918335
    2. ' ' → logprob: -1.8783149719238281
    3. 'self' (adapté à ' self') → logprob: -3.753314971923828
    4. '    ' → logprob: -4.128314971923828
    5. '<|end|>' → logprob: -4.253314971923828
    6. '    
' → logprob: -5.128314971923828
    7. '  ' → logprob: -5.253314971923828
    8. '  
' → logprob: -6.878314971923828
    9. '     ' → logprob: -7.128314971923828
    10. '\n' → logprob: -7.378314971923828

Token 30: '.parent' (ID: 17454)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6932374238967896
    2. '.parent' → logprob: -0.6932374238967896
    3. ' .' → logprob: -10.5682373046875
    4. '.Parent' → logprob: -11.0682373046875
    5. '.children' → logprob: -11.0682373046875
    6. '.parents' → logprob: -11.5682373046875
    7. 'parent' → logprob: -11.6932373046875
    8. '_parent' → logprob: -12.1932373046875
    9. '.user' → logprob: -12.3182373046875
    10. '._' → logprob: -13.8182373046875

Token 31: '_val' (ID: 13694)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198740750551224
    2. '=' → logprob: -2.8119874000549316
    3. ' ' → logprob: -10.93698787689209
    4. '<|end|>' → logprob: -13.81198787689209
    5. ' =
' → logprob: -14.18698787689209
    6. ')' → logprob: -16.436986923217773
    7. ' =)' → logprob: -17.311986923217773
    8. '  ' → logprob: -17.436986923217773
    9. '_' → logprob: -17.561986923217773
    10. '.' → logprob: -17.686986923217773

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895833045244217
    2. '=' → logprob: -2.463958263397217
    3. ' ' → logprob: -11.088958740234375
    4. ' ==' → logprob: -13.838958740234375
    5. ' =
' → logprob: -14.338958740234375
    6. ')' → logprob: -14.588958740234375
    7. '<|end|>' → logprob: -14.838958740234375
    8. '_' → logprob: -15.213958740234375
    9. ',' → logprob: -15.463958740234375
    10. '  ' → logprob: -15.713958740234375

Token 33: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.6327539086341858
    2. 'parent' → logprob: -0.7577539086341858
    3. ' -' → logprob: -9.2577543258667
    4. '-' → logprob: -10.3827543258667
    5. ' None' → logprob: -11.7577543258667
    6. 'None' → logprob: -12.1327543258667
    7. ' ' → logprob: -12.2577543258667
    8. '(parent' → logprob: -12.5077543258667
    9. '	parent' → logprob: -13.0077543258667
    10. 'val' → logprob: -14.2577543258667

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04673130437731743
    2. ' ' → logprob: -3.7967312335968018
    3. '<|end|>' → logprob: -4.171731472015381
    4. '

' → logprob: -5.796731472015381
    5. '  
' → logprob: -5.921731472015381
    6. '   ' → logprob: -7.171731472015381
    7. ' 
' → logprob: -8.421730995178223
    8. 'def' → logprob: -8.671730995178223
    9. '<|end|>' → logprob: -8.796730995178223
    10. '' → logprob: -8.796730995178223

Token 35: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1914892941713333
    2. '<|end|>' → logprob: -1.941489338874817
    3. ' ' → logprob: -3.9414892196655273
    4. '  
' → logprob: -5.691489219665527
    5. 'def' → logprob: -6.066489219665527
    6. '

' → logprob: -6.566489219665527
    7. '<|end|>' → logprob: -6.941489219665527
    8. ' def' → logprob: -7.316489219665527
    9. '   ' → logprob: -7.691489219665527
    10. '\n' → logprob: -7.816489219665527

Token 36: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5735825300216675
    2. '<|end|>' → logprob: -1.5735825300216675
    3. ' ' → logprob: -1.6985825300216675
    4. ' 
' → logprob: -4.573582649230957
    5. '  
' → logprob: -4.573582649230957
    6. '   ' → logprob: -5.198582649230957
    7. 'def' → logprob: -5.323582649230957
    8. '\n' → logprob: -5.448582649230957
    9. 'n' → logprob: -5.948582649230957
    10. '    
' → logprob: -6.448582649230957

Token 37: '.depth' (ID: 89791)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008764417842030525
    2. '.parent' → logprob: -5.008764266967773
    3. ' ' → logprob: -7.133764266967773
    4. '.children' → logprob: -7.383764266967773
    5. 'parent' → logprob: -8.133764266967773
    6. '_parent' → logprob: -9.383764266967773
    7. '=' → logprob: -9.758764266967773
    8. ' .' → logprob: -10.383764266967773
    9. ')' → logprob: -10.758764266967773
    10. 'n' → logprob: -11.258764266967773

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20150485634803772
    2. '=' → logprob: -1.7015048265457153
    3. ' ' → logprob: -9.451504707336426
    4. '<|end|>' → logprob: -11.701504707336426
    5. ' =
' → logprob: -13.326504707336426
    6. '=None' → logprob: -13.701504707336426
    7. 's' → logprob: -14.826504707336426
    8. ')' → logprob: -14.951504707336426
    9. ',' → logprob: -15.451504707336426
    10. '  ' → logprob: -15.576504707336426

Token 39: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02154143713414669
    2. ' ' → logprob: -3.8965413570404053
    3. '-' → logprob: -8.146541595458984
    4. 'self' → logprob: -8.271541595458984
    5. '1' → logprob: -8.646541595458984
    6. ' self' → logprob: -9.021541595458984
    7. 'parent' → logprob: -9.271541595458984
    8. ' -' → logprob: -10.646541595458984
    9. ' parent' → logprob: -10.771541595458984
    10. 'None' → logprob: -11.771541595458984

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5916469097137451
    2. '<|end|>' → logprob: -0.9666469097137451
    3. ' ' → logprob: -3.466646909713745
    4. '   ' → logprob: -4.341647148132324
    5. '\n' → logprob: -5.716647148132324
    6. '  
' → logprob: -5.716647148132324
    7. '' → logprob: -5.841647148132324
    8. ' 
' → logprob: -6.216647148132324
    9. 'def' → logprob: -6.341647148132324
    10. '

' → logprob: -6.341647148132324

Token 41: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.809522271156311
    2. '
' → logprob: -1.184522271156311
    3. ' 
' → logprob: -2.1845221519470215
    4. '<|end|>' → logprob: -2.9345221519470215
    5. '   ' → logprob: -3.1845221519470215
    6. '  
' → logprob: -4.8095221519470215
    7. '```' → logprob: -4.8095221519470215
    8. '\' → logprob: -5.6845221519470215
    9. ' def' → logprob: -5.8095221519470215
    10. '' → logprob: -5.9345221519470215

Token 42: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5255131721496582
    2. '
' → logprob: -1.4005131721496582
    3. ' 
' → logprob: -2.775513172149658
    4. 'def' → logprob: -2.900513172149658
    5. '   ' → logprob: -4.025513172149658
    6. '  
' → logprob: -4.900513172149658
    7. ' def' → logprob: -5.025513172149658
    8. '<|end|>' → logprob: -5.150513172149658
    9. '\n' → logprob: -6.775513172149658
    10. '    
' → logprob: -7.025513172149658

Token 43: ' node' (ID: 4596)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.014594977721571922
    2. ' ' → logprob: -4.764595031738281
    3. 'add' → logprob: -6.139595031738281
    4. ' __' → logprob: -7.014595031738281
    5. ' set' → logprob: -7.264595031738281
    6. '_' → logprob: -7.264595031738281
    7. ' append' → logprob: -7.264595031738281
    8. '_add' → logprob: -7.764595031738281
    9. ' _' → logprob: -8.889595031738281
    10. ' def' → logprob: -9.889595031738281

Token 44: '_type' (ID: 3804)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25077590346336365
    2. '_depth' → logprob: -1.625775933265686
    3. '_val' → logprob: -5.1257758140563965
    4. ' _' → logprob: -5.1257758140563965
    5. '_type' → logprob: -5.5007758140563965
    6. '_name' → logprob: -5.6257758140563965
    7. 's' → logprob: -6.0007758140563965
    8. '_children' → logprob: -7.8757758140563965
    9. '_add' → logprob: -8.250776290893555
    10. '_value' → logprob: -8.375776290893555

Token 45: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011489023454487324
    2. '(self' → logprob: -4.636488914489746
    3. '_' → logprob: -6.886488914489746
    4. 's' → logprob: -8.261488914489746
    5. '(s' → logprob: -8.261488914489746
    6. '(
' → logprob: -9.761488914489746
    7. ' (' → logprob: -10.136488914489746
    8. ')' → logprob: -10.511488914489746
    9. ' ' → logprob: -11.386488914489746
    10. '()' → logprob: -11.886488914489746

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008029596880078316
    2. ')' → logprob: -4.883029460906982
    3. ' ):' → logprob: -8.63302993774414
    4. ',' → logprob: -9.13302993774414
    5. '():' → logprob: -9.63302993774414
    6. '):
' → logprob: -10.25802993774414
    7. ' ' → logprob: -11.63302993774414
    8. 'self' → logprob: -11.63302993774414
    9. ':' → logprob: -12.25802993774414
    10. '(self' → logprob: -12.63302993774414

Token 47: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6764925718307495
    2. ':' → logprob: -0.9264925718307495
    3. '   ' → logprob: -2.926492691040039
    4. ' ' → logprob: -3.926492691040039
    5. '       ' → logprob: -5.551492691040039
    6. ':return' → logprob: -5.551492691040039
    7. '(
' → logprob: -5.801492691040039
    8. ' :' → logprob: -5.801492691040039
    9. '(self' → logprob: -5.801492691040039
    10. '():' → logprob: -6.051492691040039

Token 48: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23726901412010193
    2. ' ' → logprob: -2.7372689247131348
    3. ' if' → logprob: -2.8622689247131348
    4. '    ' → logprob: -3.4872689247131348
    5. 'if' (adapté à ' if') → logprob: -3.4872689247131348
    6. '       ' → logprob: -4.237268924713135
    7. '     ' → logprob: -5.237268924713135
    8. '  ' → logprob: -5.487268924713135
    9. 'return' → logprob: -6.487268924713135
    10. ' return' → logprob: -7.737268924713135

Token 49: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0039919656701385975
    2. 'self' → logprob: -5.628992080688477
    3. ' len' → logprob: -8.503992080688477
    4. ' not' → logprob: -8.753992080688477
    5. ' ' → logprob: -10.503992080688477
    6. 'len' → logprob: -13.503992080688477
    7. ' ' → logprob: -13.878992080688477
    8. 'not' → logprob: -15.003992080688477
    9. ' isinstance' → logprob: -15.128992080688477
    10. '	self' → logprob: -15.128992080688477

Token 50: '.depth' (ID: 89791)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23757079243659973
    2. '.parent' → logprob: -1.9875707626342773
    3. '.val' → logprob: -2.9875707626342773
    4. ' .' → logprob: -3.8625707626342773
    5. '.children' → logprob: -6.237570762634277
    6. '.depth' → logprob: -6.987570762634277
    7. ' ' → logprob: -10.612570762634277
    8. '.has' → logprob: -10.862570762634277
    9. '.is' → logprob: -11.237570762634277
    10. '.child' → logprob: -11.362570762634277

Token 51: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3271097242832184
    2. ' is' → logprob: -1.327109694480896
    3. '==' → logprob: -4.3271098136901855
    4. ' ' → logprob: -7.9521098136901855
    5. ' <' → logprob: -9.452109336853027
    6. 'is' → logprob: -9.702109336853027
    7. ' >' → logprob: -10.327109336853027
    8. '=' → logprob: -12.452109336853027
    9. '>' → logprob: -12.452109336853027
    10. ' =' → logprob: -12.952109336853027

Token 52: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5672088861465454
    2. '0' → logprob: -0.9422088861465454
    3. ' None' → logprob: -3.442208766937256
    4. 'None' → logprob: -4.567208766937256
    5. ' -' → logprob: -7.567208766937256
    6. '-' → logprob: -8.442209243774414
    7. '   ' → logprob: -11.817209243774414
    8. '1' → logprob: -13.317209243774414
    9. '  ' → logprob: -13.442209243774414
    10. '(None' → logprob: -14.192209243774414

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019638370722532272
    2. 'None' → logprob: -4.644638538360596
    3. ' ' → logprob: -5.144638538360596
    4. '-' → logprob: -5.769638538360596
    5. ' None' → logprob: -7.269638538360596
    6. ' -' → logprob: -8.644638061523438
    7. '1' → logprob: -12.894638061523438
    8. '   ' → logprob: -13.082138061523438
    9. '  ' → logprob: -13.894638061523438
    10. '(None' → logprob: -14.457138061523438

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003890854713972658
    2. ' :' → logprob: -8.125389099121094
    3. ':
' → logprob: -9.875389099121094
    4. ':return' → logprob: -11.000389099121094
    5. ' and' → logprob: -11.250389099121094
    6. ' or' → logprob: -11.750389099121094
    7. '):' → logprob: -13.625389099121094
    8. ' ' → logprob: -13.750389099121094
    9. '<|end|>' → logprob: -14.750389099121094
    10. 'and' → logprob: -15.000389099121094

Token 55: '     ' (ID: 530)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012410994619131088
    2. ':return' → logprob: -5.262411117553711
    3. ' :' → logprob: -5.512411117553711
    4. ':
' → logprob: -6.262411117553711
    5. ' ' → logprob: -7.137411117553711
    6. ' and' → logprob: -8.887411117553711
    7. '   ' → logprob: -9.512411117553711
    8. ' :
' → logprob: -9.887411117553711
    9. ' return' → logprob: -10.262411117553711
    10. ' or' → logprob: -10.512411117553711

Token 56: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4103289544582367
    2. ' return' → logprob: -1.410328984260559
    3. ' ' → logprob: -2.7853288650512695
    4. '     ' → logprob: -3.6603288650512695
    5. '   ' → logprob: -6.1603288650512695
    6. ':return' → logprob: -6.5353288650512695
    7. 'r' → logprob: -7.5353288650512695
    8. '	return' → logprob: -8.66032886505127
    9. '       ' → logprob: -8.78532886505127
    10. '    ' → logprob: -9.16032886505127

Token 57: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.23370791971683502
    2. ''' → logprob: -1.6087079048156738
    3. ' "' → logprob: -5.483707904815674
    4. ' '' → logprob: -6.108707904815674
    5. ' ' → logprob: -6.483707904815674
    6. '   ' → logprob: -9.108708381652832
    7. 'Root' → logprob: -9.983708381652832
    8. 'root' → logprob: -10.233708381652832
    9. ' root' → logprob: -10.358708381652832
    10. ''r' → logprob: -10.358708381652832

Token 58: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.03041098639369011
    2. 'Root' → logprob: -3.5304110050201416
    3. ' root' → logprob: -7.9054107666015625
    4. 'ROOT' → logprob: -9.530410766601562
    5. '根' → logprob: -9.780410766601562
    6. '_root' → logprob: -10.030410766601562
    7. 'leaf' → logprob: -10.780410766601562
    8. '	root' → logprob: -10.905410766601562
    9. '"' → logprob: -11.155410766601562
    10. ' ' → logprob: -11.405410766601562

Token 59: '"
' (ID: 1092)
  Prédit: '"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.3876700699329376
    2. '"' → logprob: -1.1376700401306152
    3. '"
' → logprob: -7.262670040130615
    4. '"

' → logprob: -9.637670516967773
    5. '"\' → logprob: -11.387670516967773
    6. '"`
' → logprob: -11.762670516967773
    7. '"
/' → logprob: -13.012670516967773
    8. ' ' → logprob: -13.387670516967773
    9. '\n' → logprob: -13.512670516967773
    10. 'node' → logprob: -13.637670516967773

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017302634194493294
    2. '\n' → logprob: -5.392302513122559
    3. '
' → logprob: -5.892302513122559
    4. '<|end|>' → logprob: -6.017302513122559
    5. '```' → logprob: -6.392302513122559
    6. '    
' → logprob: -6.517302513122559
    7. ' ' → logprob: -6.642302513122559
    8. '  
' → logprob: -6.642302513122559
    9. ' elif' → logprob: -7.642302513122559
    10. 'elif' → logprob: -8.017302513122559

Token 61: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.7909186482429504
    2. 'elif' (adapté à ' elif') → logprob: -1.0409185886383057
    3. ' ' → logprob: -2.1659185886383057
    4. '   ' → logprob: -2.6659185886383057
    5. '	elif' → logprob: -5.790918827056885
    6. '<|end|>' → logprob: -5.915918827056885
    7. '  ' → logprob: -7.165918827056885
    8. '  
' → logprob: -7.165918827056885
    9. '```' → logprob: -7.665918827056885
    10. '
' → logprob: -8.165918350219727

Token 62: ' len' (ID: 4631)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3212173581123352
    2. 'self' → logprob: -1.5712172985076904
    3. ' len' → logprob: -2.8212172985076904
    4. 'len' → logprob: -5.4462175369262695
    5. ' not' → logprob: -5.9462175369262695
    6. ' ' → logprob: -7.8212175369262695
    7. 'not' → logprob: -9.82121753692627
    8. '(len' → logprob: -12.44621753692627
    9. ' isinstance' → logprob: -12.57121753692627
    10. ' ' → logprob: -12.82121753692627

Token 63: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029775023460388184
    2. '(' → logprob: -3.5297751426696777
    3. ' (' → logprob: -11.15477466583252
    4. '(this' → logprob: -12.02977466583252
    5. '(s' → logprob: -13.02977466583252
    6. '(
' → logprob: -13.65477466583252
    7. '(children' → logprob: -14.52977466583252
    8. '(node' → logprob: -16.529775619506836
    9. 'self' → logprob: -17.029775619506836
    10. '()' → logprob: -17.154775619506836

Token 64: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.0032474661711603403
    2. '.' → logprob: -5.753247261047363
    3. ' .' → logprob: -10.253247261047363
    4. '(children' → logprob: -10.878247261047363
    5. '.Children' → logprob: -12.378247261047363
    6. '.child' → logprob: -12.378247261047363
    7. 'children' → logprob: -13.003247261047363
    8. '(' → logprob: -13.503247261047363
    9. '.parent' → logprob: -14.628247261047363
    10. ')' → logprob: -14.628247261047363

Token 65: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18827670812606812
    2. ')' → logprob: -2.438276767730713
    3. '==' → logprob: -2.563276767730713
    4. ')==' → logprob: -5.563276767730713
    5. ' )' → logprob: -6.438276767730713
    6. ' >' → logprob: -6.938276767730713
    7. ' ' → logprob: -7.563276767730713
    8. '>' → logprob: -8.688276290893555
    9. '()==' → logprob: -9.563276290893555
    10. '()' → logprob: -9.813276290893555

Token 66: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20398403704166412
    2. '==' → logprob: -1.703984022140503
    3. ' >' → logprob: -6.328984260559082
    4. '>' → logprob: -7.328984260559082
    5. ' ' → logprob: -9.328984260559082
    6. '()==' → logprob: -11.203984260559082
    7. ')' → logprob: -12.203984260559082
    8. '=' → logprob: -12.328984260559082
    9. ')==' → logprob: -12.328984260559082
    10. '0' → logprob: -12.578984260559082

Token 67: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1002512127161026
    2. ' ' → logprob: -2.3502511978149414
    3. '<|end|>' → logprob: -10.100251197814941
    4. '=' → logprob: -14.225251197814941
    5. '>' → logprob: -14.225251197814941
    6. '1' → logprob: -14.350251197814941
    7. '<|end|>' → logprob: -14.475251197814941
    8. '  ' → logprob: -14.850251197814941
    9. '```' → logprob: -15.100251197814941
    10. '۰' → logprob: -15.475251197814941

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012510828673839569
    2. ' ' → logprob: -4.387510776519775
    3. '=' → logprob: -14.762511253356934
    4. '1' → logprob: -15.387511253356934
    5. '  ' → logprob: -15.387511253356934
    6. '>' → logprob: -16.262510299682617
    7. '<|end|>' → logprob: -16.387510299682617
    8. '۰' → logprob: -16.762510299682617
    9. '   ' → logprob: -17.637510299682617
    10. '```' → logprob: -17.762510299682617

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007598382653668523
    2. ':
' → logprob: -7.750759601593018
    3. ' :' → logprob: -8.125760078430176
    4. ':return' → logprob: -10.750760078430176
    5. ' and' → logprob: -12.250760078430176
    6. ' ' → logprob: -13.250760078430176
    7. ' :
' → logprob: -13.250760078430176
    8. '):' → logprob: -13.250760078430176
    9. '   ' → logprob: -15.000760078430176
    10. ')' → logprob: -15.000760078430176

Token 70: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.8478865027427673
    2. '"' → logprob: -0.9728865027427673
    3. ' ' → logprob: -2.472886562347412
    4. ' "' → logprob: -2.972886562347412
    5. ''' → logprob: -3.847886562347412
    6. ' :' → logprob: -4.347886562347412
    7. ':' → logprob: -4.847886562347412
    8. ' '' → logprob: -5.222886562347412
    9. '    ' → logprob: -6.097886562347412
    10. '   ' → logprob: -6.722886562347412

Token 71: ' return' (ID: 622)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05197366699576378
    2. ' "' → logprob: -3.051973581314087
    3. ' ' → logprob: -6.801973819732666
    4. '     ' → logprob: -7.176973819732666
    5. ''' → logprob: -7.426973819732666
    6. 'internal' → logprob: -8.801973342895508
    7. ' internal' → logprob: -8.801973342895508
    8. ' return' → logprob: -9.176973342895508
    9. ' '' → logprob: -9.676973342895508
    10. '    ' → logprob: -9.801973342895508

Token 72: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2015829086303711
    2. ' "' → logprob: -1.701582908630371
    3. ''' → logprob: -8.951582908630371
    4. ' ' → logprob: -11.076582908630371
    5. ' '' → logprob: -11.451582908630371
    6. '"s' → logprob: -13.701582908630371
    7. ''s' → logprob: -13.826582908630371
    8. 'internal' → logprob: -13.951582908630371
    9. ' internal' → logprob: -14.076582908630371
    10. '	' → logprob: -14.076582908630371

Token 73: 'internal' (ID: 18891)
  Prédit: 'internal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'internal' → logprob: -0.06188679113984108
    2. '"' → logprob: -3.811886787414551
    3. ' internal' → logprob: -4.061886787414551
    4. 'inner' → logprob: -4.686886787414551
    5. 'inter' → logprob: -5.311886787414551
    6. 'branch' → logprob: -5.436886787414551
    7. ' "' → logprob: -7.436886787414551
    8. ' branch' → logprob: -8.06188678741455
    9. ' ' → logprob: -8.18688678741455
    10. 'intern' → logprob: -8.31188678741455

Token 74: ' node' (ID: 4596)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.13812141120433807
    2. ' node' → logprob: -2.1381213665008545
    3. '_node' → logprob: -5.513121604919434
    4. ' "' → logprob: -5.763121604919434
    5. '_' → logprob: -6.763121604919434
    6. 'node' → logprob: -6.763121604919434
    7. ' ' → logprob: -7.138121604919434
    8. '-node' → logprob: -7.763121604919434
    9. '-' → logprob: -8.888121604919434
    10. '```' → logprob: -9.763121604919434

Token 75: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16028667986392975
    2. '"
' → logprob: -1.9102866649627686
    3. '   ' → logprob: -10.160286903381348
    4. '"
' → logprob: -10.910286903381348
    5. 's' → logprob: -13.410286903381348
    6. '"

' → logprob: -13.785286903381348
    7. '"`
' → logprob: -14.285286903381348
    8. ' ' → logprob: -14.410286903381348
    9. ' "
' → logprob: -14.535286903381348
    10. ' "' → logprob: -14.535286903381348

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009487723931670189
    2. '
' → logprob: -4.884487628936768
    3. 'else' → logprob: -7.259487628936768
    4. ' else' → logprob: -7.759487628936768
    5. '    
' → logprob: -8.134488105773926
    6. '  
' → logprob: -8.634488105773926
    7. '<|end|>' → logprob: -9.259488105773926
    8. 'elif' → logprob: -9.634488105773926
    9. '```' → logprob: -10.384488105773926
    10. ' ' → logprob: -11.009488105773926

Token 77: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059986598789691925
    2. 'else' (adapté à ' else') → logprob: -3.3099865913391113
    3. ' else' → logprob: -3.9349865913391113
    4. 'elif' → logprob: -6.434986591339111
    5. '	else' → logprob: -8.18498706817627
    6. ' ' → logprob: -9.18498706817627
    7. ' elif' → logprob: -9.30998706817627
    8. '	elif' → logprob: -9.80998706817627
    9. '<|end|>' → logprob: -11.93498706817627
    10. '    
' → logprob: -12.05998706817627

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02386014722287655
    2. ':
' → logprob: -3.773860216140747
    3. '     ' → logprob: -7.773859977722168
    4. '   ' → logprob: -9.273859977722168
    5. ' :' → logprob: -10.273859977722168
    6. ':return' → logprob: -10.523859977722168
    7. ' :
' → logprob: -10.648859977722168
    8. ' ' → logprob: -12.523859977722168
    9. '    ' → logprob: -12.773859977722168
    10. '<|end|>' → logprob: -13.023859977722168

Token 79: '     ' (ID: 530)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10423976182937622
    2. ' "' → logprob: -2.4792397022247314
    3. '     ' → logprob: -4.2292399406433105
    4. '   ' → logprob: -8.604239463806152
    5. ' ' → logprob: -8.729239463806152
    6. ' return' → logprob: -9.104239463806152
    7. 'return' → logprob: -9.604239463806152
    8. '       ' → logprob: -10.354239463806152
    9. '    ' → logprob: -10.854239463806152
    10. ''' → logprob: -11.104239463806152

Token 80: ' return' (ID: 622)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -5.88418151892256e-05
    2. ' "' → logprob: -10.125059127807617
    3. 'leaf' → logprob: -11.875059127807617
    4. 'return' (adapté à ' return') → logprob: -12.500059127807617
    5. ''' → logprob: -13.000059127807617
    6. ' leaf' → logprob: -13.375059127807617
    7. '     ' → logprob: -13.500059127807617
    8. ' ' → logprob: -14.375059127807617
    9. ' return' → logprob: -14.750059127807617
    10. '       ' → logprob: -14.750059127807617

Token 81: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07889529317617416
    2. ' "' → logprob: -2.578895330429077
    3. ' ' → logprob: -13.078895568847656
    4. ''' → logprob: -13.703895568847656
    5. ' leaf' → logprob: -14.203895568847656
    6. 'leaf' → logprob: -14.453895568847656
    7. '("' → logprob: -15.703895568847656
    8. '"s' → logprob: -16.078895568847656
    9. '	' → logprob: -16.203895568847656
    10. '"a' → logprob: -16.578895568847656

Token 82: 'leaf' (ID: 50921)
  Prédit: 'leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaf' → logprob: -0.003094531362876296
    2. '"' → logprob: -6.003094673156738
    3. ' leaf' → logprob: -7.503094673156738
    4. 'le' → logprob: -10.003094673156738
    5. ''' → logprob: -11.628094673156738
    6. ' ' → logprob: -12.128094673156738
    7. 'lea' → logprob: -13.503094673156738
    8. '   ' → logprob: -13.753094673156738
    9. 'external' → logprob: -14.378094673156738
    10. '_leaf' → logprob: -14.503094673156738

Token 83: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0001830410328693688
    2. '"
' → logprob: -9.00018310546875
    3. 'node' → logprob: -9.87518310546875
    4. ' node' → logprob: -12.37518310546875
    5. '"`' → logprob: -13.00018310546875
    6. '"

' → logprob: -14.62518310546875
    7. '"value' → logprob: -14.62518310546875
    8. 'Node' → logprob: -15.62518310546875
    9. ' "' → logprob: -16.00018310546875
    10. '_node' → logprob: -16.12518310546875

Token 84: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020498912781476974
    2. ' ' → logprob: -4.895498752593994
    3. '

' → logprob: -5.520498752593994
    4. '  
' → logprob: -5.520498752593994
    5. '<|end|>' → logprob: -5.520498752593994
    6. ' 
' → logprob: -8.770499229431152
    7. '<|end|>' → logprob: -9.145499229431152
    8. '\n' → logprob: -9.145499229431152
    9. '' → logprob: -9.270499229431152
    10. '  

' → logprob: -9.520499229431152

Token 85: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6169905662536621
    2. '
' → logprob: -0.9919905662536621
    3. '  
' → logprob: -3.116990566253662
    4. '<|end|>' → logprob: -3.741990566253662
    5. 'def' → logprob: -4.741990566253662
    6. 'class' → logprob: -5.991990566253662
    7. '

' → logprob: -6.366990566253662
    8. '\n' → logprob: -6.366990566253662
    9. '' → logprob: -6.616990566253662
    10. ' 
' → logprob: -7.116990566253662

Token 86: ' children' (ID: 3953)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.0002933942887466401
    2. ' append' → logprob: -8.875293731689453
    3. '_add' → logprob: -9.875293731689453
    4. ' insert' → logprob: -10.375293731689453
    5. ' ' → logprob: -11.000293731689453
    6. 'add' → logprob: -11.250293731689453
    7. ' ad' → logprob: -11.875293731689453
    8. ' set' → logprob: -12.125293731689453
    9. ' depth' → logprob: -12.250293731689453
    10. ' is' → logprob: -12.250293731689453

Token 87: '_values' (ID: 20393)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27626171708106995
    2. '(self' → logprob: -1.7762616872787476
    3. 's' → logprob: -3.526261806488037
    4. '<|end|>' → logprob: -4.276261806488037
    5. '_' → logprob: -4.776261806488037
    6. '()' → logprob: -5.151261806488037
    7. '(s' → logprob: -5.151261806488037
    8. '_count' → logprob: -5.901261806488037
    9. '_list' → logprob: -6.901261806488037
    10. ')' → logprob: -7.276261806488037

Token 88: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011673200875520706
    2. '(' → logprob: -4.5116729736328125
    3. ' (' → logprob: -7.5116729736328125
    4. '(s' → logprob: -9.636672973632812
    5. ' ' → logprob: -11.886672973632812
    6. 'self' → logprob: -12.886672973632812
    7. '(
' → logprob: -13.261672973632812
    8. 's' → logprob: -14.511672973632812
    9. '(Self' → logprob: -14.511672973632812
    10. '	self' → logprob: -15.136672973632812

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006265062838792801
    2. 'self' → logprob: -6.006265163421631
    3. ')' → logprob: -6.131265163421631
    4. '):
' → logprob: -6.506265163421631
    5. '(self' → logprob: -9.756264686584473
    6. ' ' → logprob: -10.506264686584473
    7. ' ):' → logprob: -11.131264686584473
    8. '):

' → logprob: -12.256264686584473
    9. '   ' → logprob: -12.881264686584473
    10. ' self' → logprob: -13.631264686584473

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030880756676197052
    2. '[' → logprob: -4.155880928039551
    3. '[]' → logprob: -5.030880928039551
    4. 'return' → logprob: -5.280880928039551
    5. '[
' → logprob: -6.780880928039551
    6. ' return' → logprob: -7.405880928039551
    7. '[self' → logprob: -8.53088092803955
    8. ' ' → logprob: -8.53088092803955
    9. '  ' → logprob: -9.15588092803955
    10. ':' → logprob: -9.15588092803955

Token 91: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09003066271543503
    2. '   ' → logprob: -2.5900306701660156
    3. ' return' → logprob: -5.090030670166016
    4. '[' → logprob: -5.340030670166016
    5. '[]' → logprob: -10.715030670166016
    6. '[
' → logprob: -10.840030670166016
    7. '[self' → logprob: -10.965030670166016
    8. '       ' → logprob: -11.090030670166016
    9. ' [' → logprob: -11.090030670166016
    10. ' ' → logprob: -11.340030670166016

Token 92: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.6354016065597534
    2. ' [' → logprob: -0.8854016065597534
    3. '[' → logprob: -2.885401725769043
    4. '[node' → logprob: -7.010401725769043
    5. '[val' → logprob: -8.260401725769043
    6. '[i' → logprob: -8.635401725769043
    7. '[len' → logprob: -8.885401725769043
    8. '[list' → logprob: -9.010401725769043
    9. '[obj' → logprob: -9.510401725769043
    10. '[item' → logprob: -10.010401725769043

Token 93: ' c' (ID: 274)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.005125126801431179
    2. 'c' → logprob: -5.505125045776367
    3. ' child' → logprob: -7.005125045776367
    4. 'node' → logprob: -9.505125045776367
    5. 'x' → logprob: -10.380125045776367
    6. 'ch' → logprob: -11.755125045776367
    7. '   ' → logprob: -12.005125045776367
    8. 'children' → logprob: -12.130125045776367
    9. '(child' → logprob: -12.380125045776367
    10. ' c' → logprob: -12.880125045776367

Token 94: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -4.584861744660884e-05
    2. '.' → logprob: -10.000045776367188
    3. '.v' → logprob: -15.500045776367188
    4. '.Val' → logprob: -16.625045776367188
    5. ' .' → logprob: -16.750045776367188
    6. '.va' → logprob: -18.625045776367188
    7. 'val' → logprob: -19.000045776367188
    8. '.value' → logprob: -19.000045776367188
    9. '.valor' → logprob: -20.000045776367188
    10. '.vel' → logprob: -20.000045776367188

Token 95: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01623447798192501
    2. 'for' → logprob: -4.141234397888184
    3. ' ' → logprob: -9.016234397888184
    4. '	for' → logprob: -9.891234397888184
    5. ')' → logprob: -10.641234397888184
    6. ' )' → logprob: -13.516234397888184
    7. '  ' → logprob: -14.141234397888184
    8. ']' → logprob: -14.266234397888184
    9. '   ' → logprob: -14.766234397888184
    10. '    ' → logprob: -14.891234397888184

Token 96: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.012540609575808048
    2. 'c' → logprob: -4.387540817260742
    3. ' ' → logprob: -10.512540817260742
    4. 'self' → logprob: -13.387540817260742
    5. ' self' → logprob: -13.637540817260742
    6. '	c' → logprob: -15.012540817260742
    7. '  ' → logprob: -15.012540817260742
    8. ' ' → logprob: -15.512540817260742
    9. 'child' → logprob: -16.012540817260742
    10. ' s' → logprob: -16.137540817260742

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02030232734978199
    2. ' ' → logprob: -4.6453022956848145
    3. 'in' → logprob: -5.2703022956848145
    4. '.' → logprob: -5.7703022956848145
    5. '.children' → logprob: -6.8953022956848145
    6. 'h' → logprob: -7.6453022956848145
    7. '  ' → logprob: -8.145302772521973
    8. '   ' → logprob: -9.145302772521973
    9. '.in' → logprob: -9.645302772521973
    10. ' .' → logprob: -10.145302772521973

Token 98: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4740915596485138
    2. ' self' → logprob: -0.9740915298461914
    3. ' ' → logprob: -11.474091529846191
    4. '(self' → logprob: -13.349091529846191
    5. '	self' → logprob: -13.474091529846191
    6. '  ' → logprob: -14.724091529846191
    7. 'elf' → logprob: -15.349091529846191
    8. '   ' → logprob: -15.974091529846191
    9. 's' → logprob: -16.724092483520508
    10. '    ' → logprob: -17.099092483520508

Token 99: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.001584735349752009
    2. '.' → logprob: -6.501584529876709
    3. 'children' → logprob: -9.501585006713867
    4. ' .' → logprob: -12.751585006713867
    5. '.child' → logprob: -13.501585006713867
    6. '.Children' → logprob: -13.501585006713867
    7. ' children' → logprob: -14.126585006713867
    8. '	children' → logprob: -14.251585006713867
    9. '_children' → logprob: -15.501585006713867
    10. 'Children' → logprob: -15.876585006713867

Token 100: ' ]

' (ID: 32229)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011064324527978897
    2. ' ]' → logprob: -4.511064529418945
    3. ' ' → logprob: -11.761064529418945
    4. ']
' → logprob: -12.386064529418945
    5. '   ' → logprob: -12.511064529418945
    6. ')]' → logprob: -15.261064529418945
    7. '()]' → logprob: -16.011064529418945
    8. ' ]
' → logprob: -16.011064529418945
    9. ')' → logprob: -16.261064529418945
    10. '']' → logprob: -16.636064529418945

Token 101: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23763275146484375
    2. 'class' → logprob: -2.4876327514648438
    3. ' ' → logprob: -2.6126327514648438
    4. '<|end|>' → logprob: -3.4876327514648438
    5. '  
' → logprob: -4.112632751464844
    6. 'def' → logprob: -5.987632751464844
    7. '

' → logprob: -6.612632751464844
    8. '<|end|>' → logprob: -6.862632751464844
    9. ' 
' → logprob: -7.487632751464844
    10. ' class' → logprob: -7.737632751464844

Token 102: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4375949501991272
    2. ' ' → logprob: -1.0625948905944824
    3. '
' → logprob: -5.437594890594482
    4. 'class' → logprob: -6.437594890594482
    5. ' def' → logprob: -6.562594890594482
    6. '  
' → logprob: -7.062594890594482
    7. '   ' → logprob: -8.43759536743164
    8. '	def' → logprob: -9.56259536743164
    9. '<|end|>' → logprob: -9.68759536743164
    10. '#' → logprob: -10.06259536743164

Token 103: ' __' (ID: 2516)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.11122972518205643
    2. 'add' → logprob: -2.361229658126831
    3. ' set' → logprob: -5.36122989654541
    4. 'set' → logprob: -6.48622989654541
    5. ' __' → logprob: -6.61122989654541
    6. '__' → logprob: -7.11122989654541
    7. ' is' → logprob: -7.23622989654541
    8. '_add' → logprob: -7.61122989654541
    9. ' append' → logprob: -8.48622989654541
    10. 'append' → logprob: -8.86122989654541

Token 104: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5759876370429993
    2. 'repr' → logprob: -0.8259876370429993
    3. 'init' → logprob: -10.325987815856934
    4. 'eq' → logprob: -11.325987815856934
    5. 'rep' → logprob: -14.450987815856934
    6. 're' → logprob: -14.575987815856934
    7. 's' → logprob: -14.700987815856934
    8. 'len' → logprob: -14.700987815856934
    9. 'r' → logprob: -14.950987815856934
    10. ' str' → logprob: -15.075987815856934

Token 105: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.038251250982284546
    2. '__' → logprob: -3.2882511615753174
    3. '__(
' → logprob: -8.913250923156738
    4. '__('' → logprob: -10.038250923156738
    5. '(self' → logprob: -11.038250923156738
    6. '(' → logprob: -11.788250923156738
    7. '___' → logprob: -12.913250923156738
    8. '__("' → logprob: -13.038250923156738
    9. '__((' → logprob: -13.538250923156738
    10. '_(' → logprob: -14.538250923156738

Token 106: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.214019307051785e-05
    2. ')' → logprob: -10.500032424926758
    3. ' self' → logprob: -13.125032424926758
    4. '(self' → logprob: -14.000032424926758
    5. '	self' → logprob: -14.125032424926758
    6. '
' → logprob: -14.500032424926758
    7. ' ' → logprob: -15.625032424926758
    8. '):
' → logprob: -16.750032424926758
    9. '   ' → logprob: -17.375032424926758
    10. ')
' → logprob: -17.500032424926758

Token 107: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06506118923425674
    2. ')' → logprob: -2.815061092376709
    3. ' ):' → logprob: -6.690061092376709
    4. '):
' → logprob: -6.940061092376709
    5. 'self' → logprob: -7.565061092376709
    6. '__' → logprob: -8.565061569213867
    7. ' )' → logprob: -9.815061569213867
    8. ' ' → logprob: -9.815061569213867
    9. '_' → logprob: -11.315061569213867
    10. '):

' → logprob: -11.440061569213867

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006258073262870312
    2. ' return' → logprob: -5.631258010864258
    3. 'return' → logprob: -6.006258010864258
    4. '       ' → logprob: -8.756258010864258
    5. ' f' → logprob: -11.631258010864258
    6. '   ' → logprob: -11.881258010864258
    7. '     ' → logprob: -11.881258010864258
    8. '"' → logprob: -13.006258010864258
    9. '    ' → logprob: -13.006258010864258
    10. '    
' → logprob: -13.506258010864258

Token 109: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04566524550318718
    2. 'f' → logprob: -3.4206652641296387
    3. ' return' → logprob: -4.920665264129639
    4. '   ' → logprob: -5.670665264129639
    5. ' f' → logprob: -7.170665264129639
    6. ' ' → logprob: -9.04566478729248
    7. 's' → logprob: -9.54566478729248
    8. 'if' → logprob: -9.79566478729248
    9. '"' → logprob: -9.79566478729248
    10. '       ' → logprob: -9.92066478729248

Token 110: ' "' (ID: 392)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.017120659351348877
    2. 'f' → logprob: -4.267120838165283
    3. ' str' → logprob: -6.142120838165283
    4. ' self' → logprob: -7.892120838165283
    5. ' ' → logprob: -8.892120361328125
    6. 'str' → logprob: -9.267120361328125
    7. '"' → logprob: -9.517120361328125
    8. ' "{}' → logprob: -9.642120361328125
    9. 'self' → logprob: -10.017120361328125
    10. ' "' → logprob: -11.767120361328125

Token 111: 'node' (ID: 7005)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.05590423196554184
    2. 'Node' → logprob: -3.1809041500091553
    3. '"' → logprob: -5.055904388427734
    4. '<Tree' → logprob: -6.680904388427734
    5. ' Tree' → logprob: -6.805904388427734
    6. '{}' → logprob: -7.055904388427734
    7. 'f' → logprob: -7.055904388427734
    8. '{' → logprob: -7.430904388427734
    9. '"+' → logprob: -8.180904388427734
    10. ' f' → logprob: -8.180904388427734

Token 112: ' {' (ID: 354)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8497083187103271
    2. ' "' → logprob: -1.2247083187103271
    3. ' val' → logprob: -2.099708318710327
    4. ' with' → logprob: -3.349708318710327
    5. '(val' → logprob: -3.349708318710327
    6. ' value' → logprob: -3.474708318710327
    7. ' (' → logprob: -4.224708557128906
    8. '(' → logprob: -4.599708557128906
    9. '("' → logprob: -4.724708557128906
    10. '"' → logprob: -4.849708557128906

Token 113: '0' (ID: 15)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7965385913848877
    2. ' val' → logprob: -1.4215385913848877
    3. ':' → logprob: -2.2965385913848877
    4. ' "' → logprob: -2.5465385913848877
    5. '}' → logprob: -2.6715385913848877
    6. '}"' → logprob: -4.171538352966309
    7. '"' → logprob: -4.671538352966309
    8. '}:' → logprob: -5.046538352966309
    9. '_val' → logprob: -5.296538352966309
    10. '0' → logprob: -5.546538352966309

Token 114: '}:' (ID: 33132)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5528886318206787
    2. '}' → logprob: -1.5528886318206787
    3. '.val' → logprob: -1.9278886318206787
    4. '(val' → logprob: -3.8028886318206787
    5. '}".' → logprob: -3.9278886318206787
    6. '}:' → logprob: -4.427888870239258
    7. '[val' → logprob: -5.302888870239258
    8. 'val' → logprob: -5.552888870239258
    9. ' val' → logprob: -6.802888870239258
    10. ' (' → logprob: -7.177888870239258

Token 115: ' parent' (ID: 5980)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.364855408668518
    2. ' {}".' → logprob: -1.614855408668518
    3. ' {' → logprob: -1.739855408668518
    4. '{' → logprob: -1.989855408668518
    5. '{}".' → logprob: -2.2398552894592285
    6. 'val' → logprob: -2.2398552894592285
    7. ' "' → logprob: -5.2398552894592285
    8. ' value' → logprob: -5.6148552894592285
    9. 'value' → logprob: -5.6148552894592285
    10. '"' → logprob: -6.1148552894592285

Token 116: ' =' (ID: 314)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.20832942426204681
    2. '{' → logprob: -2.208329439163208
    3. '={' → logprob: -3.208329439163208
    4. ':' → logprob: -4.208329200744629
    5. '=' → logprob: -4.458329200744629
    6. ' {}".' → logprob: -4.958329200744629
    7. ' =' → logprob: -6.083329200744629
    8. '({' → logprob: -7.458329200744629
    9. ' {}' → logprob: -7.958329200744629
    10. '{}".' → logprob: -7.958329200744629

Token 117: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.04021601006388664
    2. ' {' → logprob: -3.5402159690856934
    3. '{}".' → logprob: -5.040215969085693
    4. '{}' → logprob: -5.790215969085693
    5. ' {}".' → logprob: -7.290215969085693
    6. ' {}' → logprob: -8.915216445922852
    7. '"' → logprob: -11.040216445922852
    8. '{},' → logprob: -11.415216445922852
    9. ' ' → logprob: -11.665216445922852
    10. '{}{' → logprob: -12.290216445922852

Token 118: '1' (ID: 16)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.8385237455368042
    2. '},' → logprob: -1.4635237455368042
    3. '0' → logprob: -1.7135237455368042
    4. '}".' → logprob: -2.3385238647460938
    5. 'self' → logprob: -3.0885238647460938
    6. '1' → logprob: -5.213523864746094
    7. '}{' → logprob: -5.338523864746094
    8. '{' → logprob: -6.213523864746094
    9. '},"' → logprob: -8.088523864746094
    10. '}"' → logprob: -8.463523864746094

Token 119: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2551700472831726
    2. '},' → logprob: -1.5051701068878174
    3. '}' → logprob: -6.755169868469238
    4. ' ,' → logprob: -7.255169868469238
    5. '}".' → logprob: -7.755169868469238
    6. '{' → logprob: -8.130169868469238
    7. 'self' → logprob: -8.255169868469238
    8. ' ' → logprob: -9.130169868469238
    9. ' },' → logprob: -9.380169868469238
    10. ';' → logprob: -9.880169868469238

Token 120: ' depth' (ID: 13636)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.7556730508804321
    2. '{' → logprob: -0.8806730508804321
    3. ' depth' → logprob: -2.7556729316711426
    4. 'depth' → logprob: -3.6306729316711426
    5. 'self' → logprob: -4.755672931671143
    6. ' self' → logprob: -5.005672931671143
    7. ' val' → logprob: -5.755672931671143
    8. ',' → logprob: -6.380672931671143
    9. 'val' → logprob: -6.755672931671143
    10. ' children' → logprob: -6.880672931671143

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.610023558139801
    2. '=' → logprob: -0.860023558139801
    3. ' {' → logprob: -4.110023498535156
    4. '={' → logprob: -4.360023498535156
    5. '{' → logprob: -5.485023498535156
    6. ' ={' → logprob: -8.985023498535156
    7. ' ' → logprob: -10.485023498535156
    8. ':' → logprob: -11.110023498535156
    9. '=self' → logprob: -13.360023498535156
    10. '={}' → logprob: -13.860023498535156

Token 122: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.576056957244873
    2. '{' → logprob: -0.826056957244873
    3. ' {}' → logprob: -10.326057434082031
    4. '{}' → logprob: -10.326057434082031
    5. ' ' → logprob: -10.826057434082031
    6. ' ' → logprob: -11.451057434082031
    7. ' {}".' → logprob: -12.201057434082031
    8. 'self' → logprob: -12.451057434082031
    9. '"{' → logprob: -12.826057434082031
    10. '"' → logprob: -12.826057434082031

Token 123: '2' (ID: 17)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12357520312070847
    2. '{' → logprob: -2.498575210571289
    3. '}' → logprob: -3.498575210571289
    4. '0' → logprob: -6.498575210571289
    5. '}{' → logprob: -6.623575210571289
    6. '{}' → logprob: -7.873575210571289
    7. ' self' → logprob: -8.498575210571289
    8. '}".' → logprob: -9.498575210571289
    9. '{}".' → logprob: -9.498575210571289
    10. 'str' → logprob: -10.373575210571289

Token 124: '},' (ID: 4180)
  Prédit: '}".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}".' → logprob: -0.004940920043736696
    2. '".' → logprob: -5.754940986633301
    3. ',' → logprob: -7.004940986633301
    4. '},' → logprob: -7.254940986633301
    5. ' }' → logprob: -10.2549409866333
    6. '}' → logprob: -10.2549409866333
    7. '{}".' → logprob: -10.8799409866333
    8. 'self' → logprob: -11.6299409866333
    9. ' },' → logprob: -11.7549409866333
    10. '.format' → logprob: -12.0049409866333

Token 125: ' {' (ID: 354)
  Prédit: ' children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' children' → logprob: -0.8090834021568298
    2. ' val' → logprob: -1.8090834617614746
    3. 'children' → logprob: -2.1840834617614746
    4. ' {' → logprob: -2.4340834617614746
    5. ' type' → logprob: -3.1840834617614746
    6. ' value' → logprob: -3.1840834617614746
    7. 'val' → logprob: -3.9340834617614746
    8. '{' → logprob: -3.9340834617614746
    9. ' self' → logprob: -4.059083461761475
    10. 'value' → logprob: -4.184083461761475

Token 126: '3' (ID: 18)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1890065222978592
    2. 'len' → logprob: -2.1890065670013428
    3. '}' → logprob: -3.4390065670013428
    4. 'type' → logprob: -3.9390065670013428
    5. '0' → logprob: -5.689006328582764
    6. '"' → logprob: -7.314006328582764
    7. ''' → logprob: -7.564006328582764
    8. 'children' → logprob: -7.564006328582764
    9. 't' → logprob: -7.689006328582764
    10. 'node' → logprob: -8.064006805419922

Token 127: '},' (ID: 4180)
  Prédit: '}".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}".' → logprob: -0.21868756413459778
    2. '".' → logprob: -2.7186875343322754
    3. ',' → logprob: -3.0936875343322754
    4. 'children' → logprob: -3.3436875343322754
    5. '}' → logprob: -4.593687534332275
    6. ' children' → logprob: -5.343687534332275
    7. 'nodes' → logprob: -5.343687534332275
    8. '},' → logprob: -5.468687534332275
    9. '"' → logprob: -5.468687534332275
    10. '",' → logprob: -5.468687534332275

Token 128: ' {' (ID: 354)
  Prédit: ' children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' children' → logprob: -0.28628450632095337
    2. 'children' → logprob: -1.5362844467163086
    3. '"' → logprob: -3.6612844467163086
    4. ' "' → logprob: -5.411284446716309
    5. ' values' → logprob: -7.286284446716309
    6. ' ' → logprob: -7.786284446716309
    7. 'values' → logprob: -7.911284446716309
    8. ' Children' → logprob: -8.161284446716309
    9. '"value' → logprob: -8.661284446716309
    10. 'Children' → logprob: -8.911284446716309

Token 129: '4' (ID: 19)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.06940518319606781
    2. 'self' → logprob: -3.0694050788879395
    3. '"' → logprob: -4.1944050788879395
    4. '4' → logprob: -6.0694050788879395
    5. ''' → logprob: -6.9444050788879395
    6. ' len' → logprob: -6.9444050788879395
    7. '}' → logprob: -8.319405555725098
    8. ''s' → logprob: -8.319405555725098
    9. '[len' → logprob: -8.819405555725098
    10. 'children' → logprob: -8.944405555725098

Token 130: '}".' (ID: 53576)
  Prédit: '}".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}".' → logprob: -0.1883421689271927
    2. '".' → logprob: -2.0633420944213867
    3. 'self' → logprob: -4.188342094421387
    4. '.format' → logprob: -4.563342094421387
    5. 'format' → logprob: -5.188342094421387
    6. '"' → logprob: -5.563342094421387
    7. ' self' → logprob: -6.063342094421387
    8. 'len' → logprob: -6.438342094421387
    9. '}' → logprob: -6.938342094421387
    10. '",' → logprob: -7.438342094421387

Token 131: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.0006414268864318728
    2. ' format' → logprob: -7.375641345977783
    3. '(format' → logprob: -11.375641822814941
    4. 'str' → logprob: -13.000641822814941
    5. 'strip' → logprob: -14.875641822814941
    6. 'f' → logprob: -15.125641822814941
    7. '	format' → logprob: -15.500641822814941
    8. 'form' → logprob: -15.625641822814941
    9. ' ' → logprob: -16.000640869140625
    10. '```' → logprob: -17.375640869140625

Token 132: '(str' (ID: 7946)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06207546219229698
    2. '(' → logprob: -2.81207537651062
    3. '(
' → logprob: -9.1870756149292
    4. 'self' → logprob: -12.6870756149292
    5. '(

' → logprob: -14.5620756149292
    6. '(s' → logprob: -14.5620756149292
    7. '((' → logprob: -14.6870756149292
    8. '(str' → logprob: -15.1870756149292
    9. ' (' → logprob: -15.3120756149292
    10. '("("' → logprob: -16.062074661254883

Token 133: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019324433524161577
    2. '(' → logprob: -6.251932621002197
    3. '(
' → logprob: -13.126932144165039
    4. 'self' → logprob: -13.376932144165039
    5. ' (' → logprob: -15.626932144165039
    6. '(

' → logprob: -16.12693214416504
    7. '(s' → logprob: -17.50193214416504
    8. ' self' → logprob: -17.75193214416504
    9. '(this' → logprob: -19.00193214416504
    10. ')(' → logprob: -19.12693214416504

Token 134: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -1.1041145626222715e-05
    2. '.' → logprob: -11.500011444091797
    3. ' .' → logprob: -14.125011444091797
    4. 'val' → logprob: -16.250011444091797
    5. ').' → logprob: -17.625011444091797
    6. '	val' → logprob: -19.375011444091797
    7. '.value' → logprob: -19.375011444091797
    8. ' ' → logprob: -19.625011444091797
    9. '[val' → logprob: -20.875011444091797
    10. '.
' → logprob: -21.000011444091797

Token 135: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002546641044318676
    2. ' ,' → logprob: -8.75025463104248
    3. '",' → logprob: -10.00025463104248
    4. '),' → logprob: -11.00025463104248
    5. ')' → logprob: -11.37525463104248
    6. '',' → logprob: -12.00025463104248
    7. ' ' → logprob: -12.12525463104248
    8. ',self' → logprob: -12.25025463104248
    9. ',
' → logprob: -13.00025463104248
    10. 'self' → logprob: -13.37525463104248

Token 136: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.07292938232421875
    2. ' str' → logprob: -2.6979293823242188
    3. 'self' → logprob: -6.697929382324219
    4. '"' → logprob: -6.697929382324219
    5. ''' → logprob: -8.822929382324219
    6. ' self' → logprob: -8.947929382324219
    7. '(str' → logprob: -9.072929382324219
    8. ' "' → logprob: -10.072929382324219
    9. ' 
' → logprob: -10.322929382324219
    10. '	str' → logprob: -11.072929382324219

Token 137: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005250006448477507
    2. '(' → logprob: -5.255249977111816
    3. '(
' → logprob: -11.255249977111816
    4. ' (' → logprob: -13.880249977111816
    5. '(this' → logprob: -13.880249977111816
    6. '(parent' → logprob: -15.130249977111816
    7. '((' → logprob: -15.255249977111816
    8. '(

' → logprob: -15.380249977111816
    9. '(s' → logprob: -15.505249977111816
    10. '("("' → logprob: -16.005250930786133

Token 138: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.7432603272027336e-06
    2. 'parent' → logprob: -13.500001907348633
    3. '.' → logprob: -15.125001907348633
    4. ' .' → logprob: -16.875001907348633
    5. ').' → logprob: -18.875001907348633
    6. '.parents' → logprob: -19.000001907348633
    7. 'Parent' → logprob: -19.625001907348633
    8. '_parent' → logprob: -19.750001907348633
    9. '	parent' → logprob: -19.750001907348633
    10. ' parent' → logprob: -20.000001907348633

Token 139: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -8.0536883615423e-05
    2. 'val' → logprob: -10.375080108642578
    3. ')' → logprob: -11.250080108642578
    4. '.val' → logprob: -11.375080108642578
    5. '._' → logprob: -12.375080108642578
    6. '),' → logprob: -12.625080108642578
    7. '_' → logprob: -12.625080108642578
    8. ' ' → logprob: -13.125080108642578
    9. ')_' → logprob: -13.250080108642578
    10. '

' → logprob: -13.750080108642578

Token 140: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018763974076136947
    2. '),' → logprob: -6.376876354217529
    3. ' ,' → logprob: -8.876876831054688
    4. ')' → logprob: -11.751876831054688
    5. '',' → logprob: -11.751876831054688
    6. '",' → logprob: -11.876876831054688
    7. ' ' → logprob: -12.376876831054688
    8. ',str' → logprob: -12.626876831054688
    9. ' ),' → logprob: -13.626876831054688
    10. 'str' → logprob: -14.126876831054688

Token 141: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.13364993035793304
    2. ' str' → logprob: -2.1336498260498047
    3. '"' → logprob: -5.258649826049805
    4. ''' → logprob: -6.633649826049805
    5. ' "' → logprob: -9.883649826049805
    6. 'self' → logprob: -10.008649826049805
    7. '(str' → logprob: -10.508649826049805
    8. ' '' → logprob: -10.508649826049805
    9. ' 
' → logprob: -11.383649826049805
    10. ' ' → logprob: -11.883649826049805

Token 142: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06197362765669823
    2. '(' → logprob: -2.8119735717773438
    3. '(
' → logprob: -12.186973571777344
    4. ' (' → logprob: -14.936973571777344
    5. '(this' → logprob: -15.686973571777344
    6. '(s' → logprob: -15.686973571777344
    7. '(

' → logprob: -16.561973571777344
    8. '((' → logprob: -17.436973571777344
    9. '(str' → logprob: -17.686973571777344
    10. 'self' → logprob: -17.811973571777344

Token 143: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.000568998686503619
    2. 'depth' → logprob: -7.500568866729736
    3. '.' → logprob: -11.125569343566895
    4. ' .' → logprob: -14.375569343566895
    5. ' depth' → logprob: -15.875569343566895
    6. 'Depth' → logprob: -16.125568389892578
    7. '(depth' → logprob: -16.125568389892578
    8. ').' → logprob: -16.125568389892578
    9. '.val' → logprob: -16.750568389892578
    10. ')' → logprob: -17.125568389892578

Token 144: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04333725571632385
    2. '),' → logprob: -3.168337345123291
    3. ')' → logprob: -8.418336868286133
    4. '",' → logprob: -9.793336868286133
    5. '',' → logprob: -10.293336868286133
    6. 'self' → logprob: -12.043336868286133
    7. ' ' → logprob: -12.668336868286133
    8. ' ,' → logprob: -12.793336868286133
    9. '   ' → logprob: -12.918336868286133
    10. '},' → logprob: -12.918336868286133

Token 145: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1554524451494217
    2. ' self' → logprob: -2.0304524898529053
    3. 'str' → logprob: -4.530452251434326
    4. ' str' → logprob: -7.030452251434326
    5. '"' → logprob: -7.155452251434326
    6. ' "' → logprob: -9.655452728271484
    7. ' ' → logprob: -9.780452728271484
    8. '     ' → logprob: -10.280452728271484
    9. '    ' → logprob: -10.905452728271484
    10. '   ' → logprob: -11.280452728271484

Token 146: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -0.020363422110676765
    2. '.' → logprob: -4.5203633308410645
    3. '.children' → logprob: -4.8953633308410645
    4. ' .' → logprob: -6.8953633308410645
    5. '.val' → logprob: -7.5203633308410645
    6. '.type' → logprob: -8.770363807678223
    7. '.child' → logprob: -10.645363807678223
    8. '.token' → logprob: -12.020363807678223
    9. '.user' → logprob: -12.145363807678223
    10. '.parent' → logprob: -12.145363807678223

Token 147: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.875000953674316
    3. ' _' → logprob: -15.125000953674316
    4. '_typ' → logprob: -16.0
    5. 'type' → logprob: -16.5
    6. '_t' → logprob: -17.5
    7. 'Type' → logprob: -18.125
    8. ')_' → logprob: -18.125
    9. '_TYPE' → logprob: -18.5
    10. ' ' → logprob: -18.625

Token 148: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.034137874841690063
    2. '()' → logprob: -3.4091379642486572
    3. '())' → logprob: -7.909137725830078
    4. '()),' → logprob: -10.159137725830078
    5. '(),"' → logprob: -10.534137725830078
    6. '(),
' → logprob: -10.534137725830078
    7. '(),

' → logprob: -10.909137725830078
    8. '(),'' → logprob: -12.534137725830078
    9. '()
' → logprob: -12.909137725830078
    10. ' (),' → logprob: -13.284137725830078

Token 149: ' self' (ID: 1051)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.3275218605995178
    2. 'self' → logprob: -1.702521800994873
    3. ' str' → logprob: -3.077521800994873
    4. '"' → logprob: -3.202521800994873
    5. ' self' → logprob: -4.827521800994873
    6. ''' → logprob: -7.327521800994873
    7. '",' → logprob: -7.577521800994873
    8. ' "' → logprob: -7.827521800994873
    9. ' ' → logprob: -8.077522277832031
    10. ''s' → logprob: -9.702522277832031

Token 150: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -2.8087270038668066e-05
    2. '.' → logprob: -11.250027656555176
    3. 'children' → logprob: -11.875027656555176
    4. ' .' → logprob: -12.125027656555176
    5. ').' → logprob: -13.875027656555176
    6. '	children' → logprob: -14.625027656555176
    7. ' children' → logprob: -14.875027656555176
    8. '.Children' → logprob: -15.250027656555176
    9. '.child' → logprob: -16.000028610229492
    10. '".' → logprob: -16.000028610229492

Token 151: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.006111043971031904
    2. ')' → logprob: -5.256111145019531
    3. ')_' → logprob: -7.131111145019531
    4. '))' → logprob: -11.131111145019531
    5. 'values' → logprob: -11.131111145019531
    6. '_' → logprob: -11.756111145019531
    7. '_vals' → logprob: -11.881111145019531
    8. '_val' → logprob: -12.256111145019531
    9. '")' → logprob: -12.881111145019531
    10. ')]' → logprob: -12.881111145019531

Token 152: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001546883606351912
    2. '()' → logprob: -6.501546859741211
    3. ')' → logprob: -10.251546859741211
    4. '())
' → logprob: -12.626546859741211
    5. '()))' → logprob: -12.751546859741211
    6. ' ())' → logprob: -13.001546859741211
    7. '()]' → logprob: -15.126546859741211
    8. '(' → logprob: -15.126546859741211
    9. '(),' → logprob: -16.37654685974121
    10. '())

' → logprob: -16.62654685974121

Token 153: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007217795588076115
    2. '

' → logprob: -5.632217884063721
    3. '\n' → logprob: -6.757217884063721
    4. '
' → logprob: -7.507217884063721
    5. '<|end|>' → logprob: -7.632217884063721
    6. 'class' → logprob: -8.007217407226562
    7. ' 
' → logprob: -8.132217407226562
    8. '' → logprob: -8.382217407226562
    9. '  
' → logprob: -8.882217407226562
    10. ' ' → logprob: -9.632217407226562

Token 154: ' calc' (ID: 25691)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.43817979097366333
    2. ' parse' → logprob: -2.1881797313690186
    3. ' tree' → logprob: -2.3131797313690186
    4. ' create' → logprob: -3.8131797313690186
    5. ' read' → logprob: -3.9381797313690186
    6. ' main' → logprob: -4.188179969787598
    7. ' calculate' → logprob: -4.438179969787598
    8. ' insert' → logprob: -4.438179969787598
    9. ' dfs' → logprob: -4.563179969787598
    10. ' add' → logprob: -4.688179969787598

Token 155: '_depth' (ID: 44220)
  Prédit: '_depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depth' → logprob: -0.010209307074546814
    2. '_tree' → logprob: -5.010209083557129
    3. '_node' → logprob: -6.010209083557129
    4. '_nodes' → logprob: -8.385209083557129
    5. '_de' → logprob: -8.510209083557129
    6. '_root' → logprob: -9.260209083557129
    7. '_' → logprob: -9.260209083557129
    8. 'Depth' → logprob: -9.885209083557129
    9. '_max' → logprob: -10.260209083557129
    10. '_d' → logprob: -10.635209083557129

Token 156: 's' (ID: 82)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.5352136492729187
    2. '(root' → logprob: -1.5352137088775635
    3. '(tree' → logprob: -2.4102137088775635
    4. '(' → logprob: -2.6602137088775635
    5. ' (' → logprob: -3.6602137088775635
    6. '(nodes' → logprob: -5.035213470458984
    7. 's' → logprob: -5.785213470458984
    8. '(s' → logprob: -6.660213470458984
    9. '(self' → logprob: -7.160213470458984
    10. '_nodes' → logprob: -7.660213470458984

Token 157: '(node' (ID: 13356)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.31998518109321594
    2. '(root' → logprob: -1.6949851512908936
    3. '(nodes' → logprob: -2.6949851512908936
    4. '(node' → logprob: -4.444985389709473
    5. ' (' → logprob: -4.819985389709473
    6. '(' → logprob: -6.319985389709473
    7. '(t' → logprob: -7.069985389709473
    8. '(parent' → logprob: -9.694985389709473
    9. '(graph' → logprob: -10.069985389709473
    10. '(self' → logprob: -10.319985389709473

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005538951605558395
    2. '):' → logprob: -6.1305389404296875
    3. ' ,' → logprob: -6.2555389404296875
    4. ',node' → logprob: -6.7555389404296875
    5. ' ):' → logprob: -9.255538940429688
    6. ',n' → logprob: -9.505538940429688
    7. ' ' → logprob: -10.505538940429688
    8. ')' → logprob: -11.005538940429688
    9. ',parent' → logprob: -11.630538940429688
    10. '(node' → logprob: -11.755538940429688

Token 159: ' level' (ID: 3211)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.6376832723617554
    2. ' nodes' → logprob: -2.012683391571045
    3. ' depth' → logprob: -2.137683391571045
    4. 'depth' → logprob: -2.887683391571045
    5. 'parent' → logprob: -3.012683391571045
    6. ' tree' → logprob: -3.387683391571045
    7. 'nodes' → logprob: -4.262683391571045
    8. ' parents' → logprob: -4.262683391571045
    9. ' node' → logprob: -4.762683391571045
    10. ' children' → logprob: -4.887683391571045

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048591118305921555
    2. '=' → logprob: -3.173591136932373
    3. ')' → logprob: -5.548591136932373
    4. ' ):' → logprob: -7.673591136932373
    5. '):
' → logprob: -7.798591136932373
    6. '+' → logprob: -7.798591136932373
    7. ' ' → logprob: -8.048590660095215
    8. ',' → logprob: -10.173590660095215
    9. '):

' → logprob: -12.298590660095215
    10. '   ' → logprob: -12.298590660095215

Token 161: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7695474028587341
    2. '   ' → logprob: -1.019547462463379
    3. '
' → logprob: -2.519547462463379
    4. '  
' → logprob: -3.269547462463379
    5. ':' → logprob: -3.519547462463379
    6. '<|end|>' → logprob: -4.394547462463379
    7. '(node' → logprob: -5.644547462463379
    8. ')' → logprob: -5.894547462463379
    9. '```' → logprob: -6.144547462463379
    10. '    
' → logprob: -7.269547462463379

Token 162: ' if' (ID: 538)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.005115395877510309
    2. ' node' → logprob: -6.255115509033203
    3. '
' → logprob: -6.755115509033203
    4. ' ' → logprob: -6.755115509033203
    5. '	node' → logprob: -7.755115509033203
    6. 'if' → logprob: -8.380115509033203
    7. '  
' → logprob: -9.505115509033203
    8. '(node' → logprob: -10.755115509033203
    9. '   ' → logprob: -10.880115509033203
    10. '```' → logprob: -10.880115509033203

Token 163: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.6984169483184814
    2. 'node' → logprob: -0.6984169483184814
    3. 'level' → logprob: -6.073416709899902
    4. ' level' → logprob: -6.573416709899902
    5. ' ' → logprob: -7.323416709899902
    6. ' not' → logprob: -7.448416709899902
    7. 'not' → logprob: -8.198416709899902
    8. '(node' → logprob: -10.823416709899902
    9. '	node' → logprob: -11.698416709899902
    10. ' len' → logprob: -13.448416709899902

Token 164: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.22787097096443176
    2. '.depth' → logprob: -1.6028709411621094
    3. '.is' → logprob: -7.227870941162109
    4. ' ' → logprob: -7.352870941162109
    5. '.' → logprob: -7.727870941162109
    6. 'depth' → logprob: -8.47787094116211
    7. 'is' → logprob: -8.72787094116211
    8. ' .' → logprob: -8.97787094116211
    9. '==' → logprob: -10.22787094116211
    10. ':' → logprob: -10.72787094116211

Token 165: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.005261510610580444
    2. ' None' → logprob: -5.255261421203613
    3. 'not' → logprob: -10.755261421203613
    4. '0' → logprob: -12.880261421203613
    5. ' ' → logprob: -13.505261421203613
    6. ' not' → logprob: -13.630261421203613
    7. '(None' → logprob: -14.255261421203613
    8. '_None' → logprob: -15.255261421203613
    9. 'none' → logprob: -16.25526237487793
    10. '-' → logprob: -16.25526237487793

Token 166: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00929640419781208
    2. ':
' → logprob: -4.759296417236328
    3. ':return' → logprob: -7.634296417236328
    4. ' ' → logprob: -9.009296417236328
    5. ' :' → logprob: -9.759296417236328
    6. ' or' → logprob: -11.884296417236328
    7. ' :
' → logprob: -12.259296417236328
    8. '   ' → logprob: -13.134296417236328
    9. '):' → logprob: -13.884296417236328
    10. '.' → logprob: -14.634296417236328

Token 167: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028369542211294174
    2. '
' → logprob: -4.278369426727295
    3. ' return' → logprob: -5.153369426727295
    4. '\n' → logprob: -5.903369426727295
    5. 'return' → logprob: -5.903369426727295
    6. ' ' → logprob: -6.403369426727295
    7. '  
' → logprob: -7.153369426727295
    8. '    
' → logprob: -8.653369903564453
    9. '  ' → logprob: -9.778369903564453
    10. '	return' → logprob: -10.028369903564453

Token 168: ' 
' (ID: 793)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7277917861938477
    2. 'None' → logprob: -1.1027917861938477
    3. ' None' → logprob: -2.1027917861938477
    4. ' ' → logprob: -3.1027917861938477
    5. '0' → logprob: -5.227791786193848
    6. ' 
' → logprob: -5.227791786193848
    7. '  
' → logprob: -5.477791786193848
    8. '<|end|>' → logprob: -6.602791786193848
    9. '\n' → logprob: -7.102791786193848
    10. '(None' → logprob: -8.852791786193848

Token 169: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6586894989013672
    2. 'node' → logprob: -1.0336894989013672
    3. '
' → logprob: -2.658689498901367
    4. '  
' → logprob: -3.783689498901367
    5. ' node' → logprob: -4.033689498901367
    6. '	node' → logprob: -5.283689498901367
    7. '[node' → logprob: -5.908689498901367
    8. '(node' → logprob: -5.908689498901367
    9. '\n' → logprob: -6.283689498901367
    10. ' 
' → logprob: -6.908689498901367

Token 170: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.003657910507172346
    2. ' node' → logprob: -6.253657817840576
    3. ' ' → logprob: -6.378657817840576
    4. '
' → logprob: -11.753658294677734
    5. '  
' → logprob: -11.878658294677734
    6. '	node' → logprob: -12.128658294677734
    7. '```' → logprob: -12.878658294677734
    8. '[node' → logprob: -13.128658294677734
    9. '(node' → logprob: -13.378658294677734
    10. '   ' → logprob: -13.378658294677734

Token 171: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -3.531315314830863e-06
    2. '.' → logprob: -12.875003814697266
    3. '.level' → logprob: -14.250003814697266
    4. ' .' → logprob: -15.625003814697266
    5. '.Depth' → logprob: -16.875003814697266
    6. '.height' → logprob: -17.500003814697266
    7. '.deep' → logprob: -18.125003814697266
    8. '.degree' → logprob: -18.500003814697266
    9. 'depth' → logprob: -18.625003814697266
    10. '.depart' → logprob: -18.875003814697266

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164566993713379
    2. '=' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.139164924621582
    4. ' =
' → logprob: -15.389164924621582
    5. '=node' → logprob: -17.139163970947266
    6. ' ' → logprob: -18.639163970947266
    7. '<|end|>' → logprob: -18.639163970947266
    8. ' =)' → logprob: -18.764163970947266
    9. '[level' → logprob: -19.014163970947266
    10. '＝' → logprob: -19.014163970947266

Token 173: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.31326231360435486
    2. ' level' → logprob: -1.3132623434066772
    3. '(level' → logprob: -15.563261985778809
    4. '	level' → logprob: -15.813261985778809
    5. ' ' → logprob: -16.188262939453125
    6. '[level' → logprob: -16.438262939453125
    7. ' nivel' → logprob: -18.938262939453125
    8. '-level' → logprob: -20.063262939453125
    9. 'levels' → logprob: -20.438262939453125
    10. '.level' → logprob: -20.438262939453125

Token 174: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0254930779337883
    2. ' for' → logprob: -3.9004931449890137
    3. 'for' → logprob: -5.650493144989014
    4. '
' → logprob: -7.275493144989014
    5. '  
' → logprob: -7.275493144989014
    6. ' 
' → logprob: -11.275492668151855
    7. ' if' → logprob: -11.400492668151855
    8. '   ' → logprob: -12.150492668151855
    9. 'if' → logprob: -13.275492668151855
    10. '  ' → logprob: -13.525492668151855

Token 175: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01419159211218357
    2. ' for' → logprob: -4.514191627502441
    3. 'for' → logprob: -5.764191627502441
    4. '  
' → logprob: -14.389191627502441
    5. '   ' → logprob: -15.389191627502441
    6. '```' → logprob: -16.639190673828125
    7. ' if' → logprob: -16.764190673828125
    8. '	for' → logprob: -17.139190673828125
    9. '
' → logprob: -17.264190673828125
    10. 'if' → logprob: -17.514190673828125

Token 176: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005100341513752937
    2. ' ' → logprob: -5.755100250244141
    3. ' for' → logprob: -6.255100250244141
    4. '	for' → logprob: -16.38010025024414
    5. 'if' → logprob: -17.00510025024414
    6. '   ' → logprob: -18.13010025024414
    7. '  
' → logprob: -18.63010025024414
    8. '```' → logprob: -19.25510025024414
    9. '  ' → logprob: -20.75510025024414
    10. '
' → logprob: -22.38010025024414

Token 177: ' ch' (ID: 549)
  Prédit: ' child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' child' → logprob: -0.16240467131137848
    2. 'child' → logprob: -1.9124046564102173
    3. ' c' → logprob: -6.537404537200928
    4. 'c' → logprob: -7.287404537200928
    5. '	child' → logprob: -10.662405014038086
    6. ' ch' → logprob: -12.162405014038086
    7. 'ch' → logprob: -12.162405014038086
    8. ' ' → logprob: -12.537405014038086
    9. '(child' → logprob: -12.662405014038086
    10. '   ' → logprob: -13.412405014038086

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4743185043334961
    2. 'ild' → logprob: -0.9743185043334961
    3. 'in' → logprob: -8.974318504333496
    4. ' ' → logprob: -9.349318504333496
    5. 'il' → logprob: -11.224318504333496
    6. 'ilder' → logprob: -12.599318504333496
    7. 'i' → logprob: -12.974318504333496
    8. '  ' → logprob: -13.224318504333496
    9. 'ilde' → logprob: -13.599318504333496
    10. 'd' → logprob: -13.849318504333496

Token 179: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0619848296046257
    2. ' node' → logprob: -2.8119847774505615
    3. '(node' → logprob: -11.43698501586914
    4. ' ' → logprob: -12.18698501586914
    5. '	node' → logprob: -14.31198501586914
    6. '[node' → logprob: -14.93698501586914
    7. '.node' → logprob: -15.81198501586914
    8. '_node' → logprob: -17.06198501586914
    9. '=node' → logprob: -17.18698501586914
    10. '  ' → logprob: -17.56198501586914

Token 180: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -5.676981345459353e-06
    2. '.' → logprob: -12.625005722045898
    3. 'children' → logprob: -13.625005722045898
    4. ' .' → logprob: -14.250005722045898
    5. '.child' → logprob: -15.375005722045898
    6. '.Children' → logprob: -16.3750057220459
    7. '	children' → logprob: -17.2500057220459
    8. '(children' → logprob: -17.8750057220459
    9. 'Children' → logprob: -18.1250057220459
    10. '_children' → logprob: -18.3750057220459

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007968932390213013
    2. ' :' → logprob: -4.882968902587891
    3. '):' → logprob: -9.13296890258789
    4. ':
' → logprob: -9.13296890258789
    5. ' ' → logprob: -9.38296890258789
    6. '<|end|>' → logprob: -10.75796890258789
    7. '  ' → logprob: -11.50796890258789
    8. '():' → logprob: -11.63296890258789
    9. ',' → logprob: -12.75796890258789
    10. ')' → logprob: -12.88296890258789

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14511215686798096
    2. 'calc' → logprob: -2.3951120376586914
    3. ' calc' → logprob: -3.8951120376586914
    4. '(calc' → logprob: -5.145112037658691
    5. 'ch' → logprob: -5.270112037658691
    6. ' ' → logprob: -5.645112037658691
    7. '    
' → logprob: -5.770112037658691
    8. '  
' → logprob: -5.770112037658691
    9. '  ' → logprob: -6.770112037658691
    10. '
' → logprob: -7.770112037658691

Token 183: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' (adapté à ' calc') → logprob: -0.030185699462890625
    2. ' calc' → logprob: -3.9051856994628906
    3. '   ' → logprob: -4.655185699462891
    4. ' ' → logprob: -10.28018569946289
    5. '(calc' → logprob: -10.90518569946289
    6. '
' → logprob: -11.40518569946289
    7. 'cal' → logprob: -11.90518569946289
    8. '  ' → logprob: -12.40518569946289
    9. '  
' → logprob: -13.03018569946289
    10. '    
' → logprob: -13.15518569946289

Token 184: '_depth' (ID: 44220)
  Prédit: '_depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depth' → logprob: -1.580929347255733e-05
    2. 'depth' → logprob: -11.250016212463379
    3. '_' → logprob: -13.625016212463379
    4. '(depth' → logprob: -14.875016212463379
    5. '_DEPTH' → logprob: -15.000016212463379
    6. '_de' → logprob: -15.000016212463379
    7. '_children' → logprob: -15.875016212463379
    8. '(ch' → logprob: -16.125015258789062
    9. ' depths' → logprob: -16.375015258789062
    10. 'Depth' → logprob: -16.375015258789062

Token 185: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05480159819126129
    2. 'depth' → logprob: -3.0548017024993896
    3. '_depth' → logprob: -5.4298014640808105
    4. ' depths' → logprob: -6.9298014640808105
    5. 'ths' → logprob: -8.054801940917969
    6. 'ds' → logprob: -8.679801940917969
    7. '(depth' → logprob: -9.054801940917969
    8. 'ch' → logprob: -9.429801940917969
    9. 'Depth' → logprob: -10.179801940917969
    10. '-depth' → logprob: -10.179801940917969

Token 186: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.0007183883571997285
    2. '(' → logprob: -7.250718593597412
    3. ' (' → logprob: -12.500718116760254
    4. '(
' → logprob: -12.750718116760254
    5. 'ch' → logprob: -14.625718116760254
    6. '[ch' → logprob: -14.875718116760254
    7. '(child' → logprob: -14.875718116760254
    8. ' ' → logprob: -15.250718116760254
    9. '(chr' → logprob: -16.37571907043457
    10. '	ch' → logprob: -16.62571907043457

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.579495235811919e-05
    2. ' ,' → logprob: -9.87509536743164
    3. ',ch' → logprob: -10.12509536743164
    4. '(ch' → logprob: -13.75009536743164
    5. '   ' → logprob: -13.75009536743164
    6. ' ' → logprob: -14.75009536743164
    7. '`,' → logprob: -15.12509536743164
    8. '',' → logprob: -15.12509536743164
    9. ',
' → logprob: -15.12509536743164
    10. ',node' → logprob: -15.37509536743164

Token 188: ' level' (ID: 3211)
  Prédit: ' level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' level' → logprob: -0.5759636163711548
    2. 'level' → logprob: -0.8259636163711548
    3. ' ' → logprob: -11.450963973999023
    4. '(level' → logprob: -11.950963973999023
    5. '	level' → logprob: -12.825963973999023
    6. '[level' → logprob: -12.950963973999023
    7. '    ' → logprob: -14.700963973999023
    8. ' nivel' → logprob: -14.825963973999023
    9. ')' → logprob: -14.950963973999023
    10. '  ' → logprob: -15.575963973999023

Token 189: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47408756613731384
    2. ' +' → logprob: -0.9740875959396362
    3. ' ' → logprob: -11.724087715148926
    4. '1' → logprob: -13.349087715148926
    5. ')' → logprob: -14.974087715148926
    6. ')+' → logprob: -15.849087715148926
    7. '+
' → logprob: -16.09908676147461
    8. ' +
' → logprob: -16.09908676147461
    9. '+)' → logprob: -16.84908676147461
    10. ' plus' → logprob: -17.09908676147461

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.625021934509277
    4. ')' → logprob: -17.125022888183594
    5. '```' → logprob: -17.125022888183594
    6. '  ' → logprob: -17.625022888183594
    7. '     ' → logprob: -18.375022888183594
    8. '
' → logprob: -19.250022888183594
    9. '１' → logprob: -19.750022888183594
    10. '    ' → logprob: -19.750022888183594

Token 191: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.763666947837919e-05
    2. ' )' → logprob: -10.00004768371582
    3. ')
' → logprob: -13.25004768371582
    4. ' ' → logprob: -15.50004768371582
    5. '))' → logprob: -16.62504768371582
    6. '())' → logprob: -17.12504768371582
    7. '")' → logprob: -17.25004768371582
    8. '')' → logprob: -17.50004768371582
    9. ')

' → logprob: -17.62504768371582
    10. '<|end|>' → logprob: -17.87504768371582

Token 192: 'num' (ID: 4571)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05108010396361351
    2. 'class' → logprob: -3.0510799884796143
    3. '<|end|>' → logprob: -7.176080226898193
    4. '#' → logprob: -7.301080226898193
    5. 'root' → logprob: -7.926080226898193
    6. '
' → logprob: -8.176079750061035
    7. '<|end|>' → logprob: -8.676079750061035
    8. ' ' → logprob: -9.926079750061035
    9. '```' → logprob: -10.301079750061035
    10. ' def' → logprob: -10.676079750061035

Token 193: ' =' (ID: 314)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.019519252702593803
    2. ' =' → logprob: -4.519519329071045
    3. '=' → logprob: -5.144519329071045
    4. '_' → logprob: -6.644519329071045
    5. ' ' → logprob: -7.894519329071045
    6. 'ber' → logprob: -8.019518852233887
    7. '_children' → logprob: -9.144518852233887
    8. 's' → logprob: -9.519518852233887
    9. '_n' → logprob: -9.644518852233887
    10. '  ' → logprob: -10.019518852233887

Token 194: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6737192273139954
    2. '10' → logprob: -1.5487191677093506
    3. '5' → logprob: -2.2987191677093506
    4. ' ' → logprob: -2.5487191677093506
    5. ' int' → logprob: -2.6737191677093506
    6. '3' → logprob: -3.7987191677093506
    7. '7' → logprob: -5.92371940612793
    8. '0' → logprob: -6.04871940612793
    9. '4' → logprob: -6.79871940612793
    10. '[int' → logprob: -7.67371940612793

Token 195: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3134866952896118
    2. '(input' → logprob: -1.3134866952896118
    3. '('' → logprob: -8.68848705291748
    4. '()' → logprob: -11.06348705291748
    5. '(
' → logprob: -11.31348705291748
    6. '("' → logprob: -11.56348705291748
    7. 'input' → logprob: -11.81348705291748
    8. '("("' → logprob: -11.81348705291748
    9. ' ' → logprob: -13.93848705291748
    10. ' (' → logprob: -14.18848705291748

Token 196: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25612765550613403
    2. '())' → logprob: -1.5061275959014893
    3. '(' → logprob: -5.631127834320068
    4. '("' → logprob: -8.00612735748291
    5. '("("' → logprob: -9.00612735748291
    6. '()
' → logprob: -10.00612735748291
    7. '('' → logprob: -10.88112735748291
    8. '()>' → logprob: -11.00612735748291
    9. '().' → logprob: -11.25612735748291
    10. '("")' → logprob: -12.13112735748291

Token 197: 'nodes' (ID: 44664)
  Prédit: 'nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.0056475442834198475
    2. 'tree' → logprob: -6.130647659301758
    3. 'parents' → logprob: -6.880647659301758
    4. 'node' → logprob: -7.630647659301758
    5. 'vals' → logprob: -7.630647659301758
    6. 'trees' → logprob: -8.130647659301758
    7. 'values' → logprob: -8.130647659301758
    8. 'val' → logprob: -8.255647659301758
    9. 'stack' → logprob: -8.880647659301758
    10. 'parent' → logprob: -9.130647659301758

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03814224898815155
    2. '=' → logprob: -3.288142204284668
    3. 's' → logprob: -10.038142204284668
    4. ' ' → logprob: -10.788142204284668
    5. '=[]' → logprob: -11.038142204284668
    6. '[]' → logprob: -11.663142204284668
    7. '_nodes' → logprob: -12.413142204284668
    8. '[' → logprob: -12.663142204284668
    9. ' =[' → logprob: -13.913142204284668
    10. '_' → logprob: -14.038142204284668

Token 199: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.12579210102558136
    2. '[]' → logprob: -2.5007920265197754
    3. ' {}' → logprob: -3.8757920265197754
    4. ' []' → logprob: -4.375792026519775
    5. '[' → logprob: -6.625792026519775
    6. ' [' → logprob: -6.750792026519775
    7. 'dict' → logprob: -8.625792503356934
    8. '[-' → logprob: -10.250792503356934
    9. '[num' → logprob: -10.375792503356934
    10. '[n' → logprob: -10.750792503356934

Token 200: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4855663721391466e-05
    2. ' for' → logprob: -11.125015258789062
    3. 'root' → logprob: -16.875015258789062
    4. 'parents' → logprob: -16.875015258789062
    5. 'parent' → logprob: -17.000015258789062
    6. '
' → logprob: -18.625015258789062
    7. 'from' → logprob: -18.750015258789062
    8. 'prev' → logprob: -19.500015258789062
    9. 'values' → logprob: -19.500015258789062
    10. 'roots' → logprob: -19.500015258789062

Token 201: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03470810502767563
    2. ' i' → logprob: -3.784708023071289
    3. ' _' → logprob: -4.784708023071289
    4. 'i' → logprob: -5.909708023071289
    5. '_i' → logprob: -8.034708023071289
    6. ' ' → logprob: -13.409708023071289
    7. ' in' → logprob: -13.534708023071289
    8. '_=' → logprob: -15.409708023071289
    9. ' range' → logprob: -16.28470802307129
    10. 'n' → logprob: -16.90970802307129

Token 202: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04906090348958969
    2. 'in' → logprob: -3.049060821533203
    3. ' ' → logprob: -7.799060821533203
    4. '_' → logprob: -10.799060821533203
    5. 'range' → logprob: -11.424060821533203
    6. 'n' → logprob: -12.049060821533203
    7. '1' → logprob: -12.424060821533203
    8. '0' → logprob: -12.674060821533203
    9. ',' → logprob: -13.049060821533203
    10. ' _' → logprob: -13.424060821533203

Token 203: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04302122816443443
    2. ' range' → logprob: -3.1680212020874023
    3. ' ' → logprob: -11.543021202087402
    4. 'num' → logprob: -12.293021202087402
    5. '(range' → logprob: -13.168021202087402
    6. '	range' → logprob: -13.668021202087402
    7. 'rang' → logprob: -13.793021202087402
    8. '  ' → logprob: -14.043021202087402
    9. 'ran' → logprob: -14.168021202087402
    10. '   ' → logprob: -14.293021202087402

Token 204: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.07966659963130951
    2. '(' → logprob: -2.5796666145324707
    3. ' (' → logprob: -7.204666614532471
    4. '(n' → logprob: -10.829666137695312
    5. ' num' → logprob: -11.829666137695312
    6. ' ' → logprob: -12.829666137695312
    7. 'num' → logprob: -12.954666137695312
    8. '(
' → logprob: -14.204666137695312
    9. '<num' → logprob: -15.204666137695312
    10. '(

' → logprob: -16.454666137695312

Token 205: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009109546430408955
    2. ' ):' → logprob: -4.8841094970703125
    3. '):
' → logprob: -6.6341094970703125
    4. '+' → logprob: -9.009109497070312
    5. ')' → logprob: -9.884109497070312
    6. ' ' → logprob: -12.384109497070312
    7. ' ):
' → logprob: -12.509109497070312
    8. ':' → logprob: -12.634109497070312
    9. ' )' → logprob: -14.009109497070312
    10. ' :' → logprob: -14.884109497070312

Token 206: ' ' (ID: 220)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.04042429104447365
    2. ' line' → logprob: -3.915424346923828
    3. ' vals' → logprob: -5.165424346923828
    4. ' data' → logprob: -5.290424346923828
    5. 'val' → logprob: -6.040424346923828
    6. ' parts' → logprob: -6.290424346923828
    7. '   ' → logprob: -6.540424346923828
    8. ' v' → logprob: -7.415424346923828
    9. ' ' → logprob: -7.415424346923828
    10. '	val' → logprob: -7.790424346923828

Token 207: ' ins' (ID: 2215)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4310779571533203
    2. 'vals' → logprob: -2.4310779571533203
    3. ' val' → logprob: -2.5560779571533203
    4. 'v' → logprob: -3.0560779571533203
    5. 'data' → logprob: -3.3060779571533203
    6. 'line' → logprob: -3.3060779571533203
    7. ' vals' → logprob: -3.5560779571533203
    8. ' line' → logprob: -4.30607795715332
    9. ' data' → logprob: -5.18107795715332
    10. ' ' → logprob: -5.30607795715332

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6257981061935425
    2. '_val' → logprob: -1.7507981061935425
    3. 'tr' → logprob: -2.000798225402832
    4. 't' → logprob: -2.625798225402832
    5. 'truction' → logprob: -3.000798225402832
    6. '=' → logprob: -4.375798225402832
    7. 'tru' → logprob: -5.625798225402832
    8. '_' → logprob: -5.875798225402832
    9. 'ert' → logprob: -6.000798225402832
    10. 'n' → logprob: -6.250798225402832

Token 209: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.13119563460350037
    2. 'list' → logprob: -2.131195545196533
    3. ' input' → logprob: -5.756195545196533
    4. 'int' → logprob: -7.131195545196533
    5. ' list' → logprob: -8.381196022033691
    6. '[input' → logprob: -10.006196022033691
    7. '[' → logprob: -12.131196022033691
    8. 'tuple' → logprob: -12.506196022033691
    9. 'str' → logprob: -13.131196022033691
    10. '(input' → logprob: -13.381196022033691

Token 210: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.05170869827270508
    2. '(input' → logprob: -3.301708698272705
    3. '(' → logprob: -4.301708698272705
    4. '(filter' → logprob: -11.676708221435547
    5. '(int' → logprob: -12.176708221435547
    6. 'map' → logprob: -12.676708221435547
    7. '(
' → logprob: -12.801708221435547
    8. '()' → logprob: -12.926708221435547
    9. '(eval' → logprob: -13.051708221435547
    10. '(str' → logprob: -13.176708221435547

Token 211: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03445073589682579
    2. '(' → logprob: -3.5344507694244385
    3. '(str' → logprob: -5.409450531005859
    4. 'int' → logprob: -9.28445053100586
    5. 'str' → logprob: -10.03445053100586
    6. '(input' → logprob: -10.03445053100586
    7. '(
' → logprob: -10.53445053100586
    8. ' (' → logprob: -12.53445053100586
    9. ' int' → logprob: -13.65945053100586
    10. '<int' → logprob: -14.65945053100586

Token 212: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.48249247670173645
    2. ',input' → logprob: -0.9824924468994141
    3. ',' → logprob: -4.857492446899414
    4. 'input' → logprob: -7.732492446899414
    5. '(' → logprob: -8.857492446899414
    6. ' (' → logprob: -11.732492446899414
    7. ' input' → logprob: -11.857492446899414
    8. ' ,' → logprob: -12.482492446899414
    9. ' ' → logprob: -12.482492446899414
    10. '=input' → logprob: -12.857492446899414

Token 213: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006787012796849012
    2. ' input' → logprob: -5.006786823272705
    3. ',input' → logprob: -9.631787300109863
    4. '(input' → logprob: -12.381787300109863
    5. ' ' → logprob: -13.881787300109863
    6. ',' → logprob: -15.256787300109863
    7. '=input' → logprob: -15.631787300109863
    8. '	input' → logprob: -15.631787300109863
    9. ')' → logprob: -15.881787300109863
    10. '[input' → logprob: -16.506786346435547

Token 214: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0280383548888494e-06
    2. ' ().' → logprob: -14.375000953674316
    3. '()' → logprob: -14.750000953674316
    4. '()
' → logprob: -19.375001907348633
    5. '.split' → logprob: -19.625001907348633
    6. '(' → logprob: -20.375001907348633
    7. '.' → logprob: -21.500001907348633
    8. '.strip' → logprob: -21.750001907348633
    9. ' .' → logprob: -21.750001907348633
    10. ' ' → logprob: -22.125001907348633

Token 215: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0031875784043222666
    2. 'strip' → logprob: -5.753187656402588
    3. ' split' → logprob: -12.50318717956543
    4. 'rstrip' → logprob: -12.62818717956543
    5. ' ' → logprob: -13.25318717956543
    6. '(split' → logprob: -14.00318717956543
    7. '().' → logprob: -15.25318717956543
    8. 'spl' → logprob: -17.37818717956543
    9. '.split' → logprob: -17.75318717956543
    10. ' strip' → logprob: -18.12818717956543

Token 216: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08264273405075073
    2. '()' → logprob: -2.5826427936553955
    3. '))' → logprob: -6.207642555236816
    4. '()))
' → logprob: -6.707642555236816
    5. '(' → logprob: -7.957642555236816
    6. '())' → logprob: -9.832642555236816
    7. '())))' → logprob: -10.582642555236816
    8. '().' → logprob: -10.832642555236816
    9. '()));' → logprob: -10.957642555236816
    10. '('' → logprob: -11.457642555236816

Token 217: ' ' (ID: 220)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5529472827911377
    2. ' ' → logprob: -1.6779472827911377
    3. ' val' → logprob: -1.9279472827911377
    4. 'node' → logprob: -3.5529472827911377
    5. ' if' → logprob: -3.8029472827911377
    6. ' node' → logprob: -4.427947044372559
    7. 'id' → logprob: -4.552947044372559
    8. 'if' → logprob: -4.927947044372559
    9. '  
' → logprob: -5.927947044372559
    10. 'v' → logprob: -6.302947044372559

Token 218: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.13271772861480713
    2. 'node' → logprob: -2.7577176094055176
    3. 'v' → logprob: -3.0077176094055176
    4. 'id' → logprob: -5.382717609405518
    5. 'if' → logprob: -6.007717609405518
    6. ' val' → logprob: -7.132717609405518
    7. ' ' → logprob: -7.132717609405518
    8. 'idx' → logprob: -7.132717609405518
    9. 'index' → logprob: -8.132718086242676
    10. 'n' → logprob: -8.132718086242676

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009392540901899338
    2. '=' → logprob: -5.009392738342285
    3. ',' → logprob: -6.009392738342285
    4. ' ' → logprob: -8.884392738342285
    5. ' ,' → logprob: -9.509392738342285
    6. ' =
' → logprob: -13.134392738342285
    7. '  ' → logprob: -14.259392738342285
    8. '[' → logprob: -14.759392738342285
    9. ',num' → logprob: -15.009392738342285
    10. ')' → logprob: -15.009392738342285

Token 220: ' ins' (ID: 2215)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.007616087328642607
    2. ' ins' → logprob: -4.88261604309082
    3. ' ' → logprob: -12.00761604309082
    4. '(ins' → logprob: -13.38261604309082
    5. 'i' → logprob: -14.00761604309082
    6. 'int' → logprob: -14.88261604309082
    7. 'inst' → logprob: -15.38261604309082
    8. ' i' → logprob: -15.38261604309082
    9. '   ' → logprob: -15.63261604309082
    10. '  ' → logprob: -15.88261604309082

Token 221: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.125000953674316
    3. ' [' → logprob: -15.500000953674316
    4. '0' → logprob: -15.625000953674316
    5. '[
' → logprob: -16.5
    6. '[i' → logprob: -17.5
    7. '
' → logprob: -18.75
    8. '[-' → logprob: -20.125
    9. '   ' → logprob: -20.5
    10. '  
' → logprob: -20.625

Token 222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. '[' → logprob: -15.250024795532227
    4. '1' → logprob: -15.500024795532227
    5. '
' → logprob: -17.375024795532227
    6. '   ' → logprob: -17.437524795532227
    7. ',' → logprob: -17.937524795532227
    8. '０' → logprob: -18.625024795532227
    9. '  ' → logprob: -18.875024795532227
    10. '(' → logprob: -18.875024795532227

Token 223: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28563785552978516
    2. ')' → logprob: -1.4106378555297852
    3. ' ' → logprob: -5.910637855529785
    4. ',' → logprob: -7.035637855529785
    5. ']
' → logprob: -8.285637855529785
    6. ')
' → logprob: -8.535637855529785
    7. ' ]' → logprob: -9.035637855529785
    8. '<|end|>' → logprob: -9.660637855529785
    9. '])' → logprob: -10.035637855529785
    10. ' )' → logprob: -10.035637855529785

Token 224: ' ' (ID: 220)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.4210774600505829
    2. ' ' → logprob: -1.7960774898529053
    3. 'node' → logprob: -2.7960774898529053
    4. ' parent' → logprob: -2.9210774898529053
    5. 'if' → logprob: -3.2960774898529053
    6. ' node' → logprob: -4.546077251434326
    7. ' if' → logprob: -4.671077251434326
    8. 'p' → logprob: -6.046077251434326
    9. 'nodes' → logprob: -7.171077251434326
    10. 'parents' → logprob: -7.546077251434326

Token 225: ' if' (ID: 538)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.10374787449836731
    2. 'if' → logprob: -3.103747844696045
    3. 'node' → logprob: -3.478747844696045
    4. 'par' → logprob: -4.853747844696045
    5. 'nodes' → logprob: -5.103747844696045
    6. ' ' → logprob: -5.603747844696045
    7. 'p' → logprob: -6.728747844696045
    8. ' parent' → logprob: -6.978747844696045
    9. 'degree' → logprob: -7.353747844696045
    10. 'children' → logprob: -7.853747844696045

Token 226: ' nodes' (ID: 15749)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.005381741560995579
    2. 'val' → logprob: -5.2553815841674805
    3. ' not' → logprob: -9.13038158416748
    4. ' ' → logprob: -10.38038158416748
    5. '(val' → logprob: -13.25538158416748
    6. ' len' → logprob: -13.63038158416748
    7. ' nodes' → logprob: -13.75538158416748
    8. '	val' → logprob: -13.88038158416748
    9. 'not' → logprob: -14.00538158416748
    10. ' i' → logprob: -14.00538158416748

Token 227: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -6.301394023466855e-05
    2. '.setdefault' → logprob: -10.250062942504883
    3. '.' → logprob: -11.000062942504883
    4. '[val' → logprob: -11.875062942504883
    5. '.__' → logprob: -13.125062942504883
    6. ' .' → logprob: -14.375062942504883
    7. '.val' → logprob: -14.750062942504883
    8. '.has' → logprob: -14.875062942504883
    9. 'get' → logprob: -15.000062942504883
    10. 'val' → logprob: -16.125062942504883

Token 228: '(ins' (ID: 125327)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(val' → logprob: -1.1637164789135568e-05
    2. '(' → logprob: -11.500011444091797
    3. 'val' → logprob: -14.250011444091797
    4. ' (' → logprob: -14.250011444091797
    5. '[val' → logprob: -16.500011444091797
    6. ',val' → logprob: -18.000011444091797
    7. '(vals' → logprob: -18.000011444091797
    8. '(str' → logprob: -18.375011444091797
    9. ' val' → logprob: -18.500011444091797
    10. ' ' → logprob: -19.000011444091797

Token 229: '[' (ID: 58)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4047867953777313
    2. '(val' → logprob: -1.7797868251800537
    3. '[val' → logprob: -1.9047868251800537
    4. ')' → logprob: -4.904786586761475
    5. '.get' → logprob: -6.029786586761475
    6. '[' → logprob: -6.279786586761475
    7. '0' → logprob: -7.154786586761475
    8. ' val' → logprob: -7.279786586761475
    9. ' ' → logprob: -7.404786586761475
    10. ',val' → logprob: -7.654786586761475

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014051615260541439
    2. 'val' → logprob: -4.76405143737793
    3. '[' → logprob: -6.13905143737793
    4. ' ' → logprob: -6.76405143737793
    5. '])' → logprob: -7.51405143737793
    6. 'i' → logprob: -7.76405143737793
    7. '1' → logprob: -8.01405143737793
    8. ']' → logprob: -8.26405143737793
    9. ')' → logprob: -9.26405143737793
    10. ' val' → logprob: -9.76405143737793

Token 231: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021271906734909862
    2. ' )' → logprob: -8.750212669372559
    3. ')==' → logprob: -10.625212669372559
    4. '])' → logprob: -11.250212669372559
    5. ')is' → logprob: -12.250212669372559
    6. ' ' → logprob: -12.625212669372559
    7. ',None' → logprob: -13.125212669372559
    8. '())' → logprob: -13.375212669372559
    9. '）' → logprob: -13.625212669372559
    10. '")' → logprob: -14.250212669372559

Token 232: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25516626238822937
    2. 'is' → logprob: -1.5051662921905518
    3. '==' → logprob: -6.005166053771973
    4. ' ' → logprob: -8.005166053771973
    5. ')' → logprob: -8.130166053771973
    6. ' ==' → logprob: -9.505166053771973
    7. ')is' → logprob: -10.380166053771973
    8. ' )' → logprob: -10.755166053771973
    9. 'in' → logprob: -12.505166053771973
    10. 'None' → logprob: -13.130166053771973

Token 233: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.12693366408348083
    2. ' None' → logprob: -2.1269335746765137
    3. ' ' → logprob: -12.126934051513672
    4. ' not' → logprob: -16.251934051513672
    5. 'not' → logprob: -16.501934051513672
    6. '  ' → logprob: -17.876934051513672
    7. '_None' → logprob: -17.876934051513672
    8. '=None' → logprob: -18.626934051513672
    9. 'none' → logprob: -18.876934051513672
    10. '   ' → logprob: -19.001934051513672

Token 234: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00582901481539011
    2. '=' → logprob: -5.630828857421875
    3. ':
' → logprob: -6.755828857421875
    4. ' =' → logprob: -7.505828857421875
    5. ' ' → logprob: -8.505828857421875
    6. ' :' → logprob: -9.130828857421875
    7. '):' → logprob: -9.255828857421875
    8. '==' → logprob: -10.005828857421875
    9. ')' → logprob: -11.130828857421875
    10. '=None' → logprob: -11.255828857421875

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21877291798591614
    2. ':' → logprob: -2.3437728881835938
    3. ' ' → logprob: -2.7187728881835938
    4. ':
' → logprob: -3.4687728881835938
    5. ' nodes' → logprob: -7.218772888183594
    6. '):
' → logprob: -7.218772888183594
    7. 'nodes' → logprob: -7.218772888183594
    8. '	nodes' → logprob: -7.843772888183594
    9. '(nodes' → logprob: -8.093772888183594
    10. '.nodes' → logprob: -9.093772888183594

Token 236: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.06466635316610336
    2. ' nodes' → logprob: -2.814666271209717
    3. ' ' → logprob: -6.064666271209717
    4. '   ' → logprob: -8.314666748046875
    5. 'node' → logprob: -9.689666748046875
    6. '	nodes' → logprob: -9.939666748046875
    7. ' node' → logprob: -12.314666748046875
    8. '
' → logprob: -12.814666748046875
    9. '     ' → logprob: -13.064666748046875
    10. '(nodes' → logprob: -13.189666748046875

Token 237: '[val' (ID: 162482)
  Prédit: '[val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -2.2007883671903983e-05
    2. '[' → logprob: -10.750021934509277
    3. ' [' → logprob: -15.875021934509277
    4. '[in' → logprob: -16.250022888183594
    5. 'val' → logprob: -16.875022888183594
    6. '
' → logprob: -17.375022888183594
    7. '```' → logprob: -18.125022888183594
    8. '.setdefault' → logprob: -18.500022888183594
    9. '[i' → logprob: -18.625022888183594
    10. '

' → logprob: -18.625022888183594

Token 238: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06153050810098648
    2. '=' → logprob: -3.061530590057373
    3. ' =' → logprob: -4.936530590057373
    4. ']=' → logprob: -5.186530590057373
    5. ' ]' → logprob: -9.436530113220215
    6. ' ' → logprob: -12.061530113220215
    7. ')' → logprob: -13.186530113220215
    8. ',' → logprob: -14.811530113220215
    9. '=create' → logprob: -16.06153106689453
    10. ')=' → logprob: -16.31153106689453

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067154900170862675
    2. ' =' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.631715774536133
    4. '=create' → logprob: -17.256715774536133
    5. '=
' → logprob: -18.131715774536133
    6. '=

' → logprob: -18.881715774536133
    7. ']' → logprob: -19.381715774536133
    8. '=new' → logprob: -20.131715774536133
    9. ']=' → logprob: -20.256715774536133
    10. '=}' → logprob: -20.256715774536133

Token 240: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.001929228543303907
    2. ' Tree' → logprob: -6.25192928314209
    3. '	Tree' → logprob: -15.00192928314209
    4. ' ' → logprob: -16.126928329467773
    5. 'Node' → logprob: -16.251928329467773
    6. '<Tree' → logprob: -18.001928329467773
    7. '(Tree' → logprob: -18.501928329467773
    8. '   ' → logprob: -19.001928329467773
    9. '.Tree' → logprob: -19.876928329467773
    10. '  ' → logprob: -20.001928329467773

Token 241: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: 0.0
    2. 'node' → logprob: -20.25
    3. '_node' → logprob: -20.5
    4. 'Nodes' → logprob: -20.75
    5. ' Node' → logprob: -21.375
    6. '_Node' → logprob: -21.5
    7. 'ode' → logprob: -22.375
    8. '	Node' → logprob: -23.5
    9. '<Node' → logprob: -23.875
    10. 'None' → logprob: -24.375

Token 242: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -3.35706390615087e-05
    2. '(' → logprob: -10.375033378601074
    3. '(ins' → logprob: -13.250033378601074
    4. 'val' → logprob: -14.875033378601074
    5. '[val' → logprob: -16.75003433227539
    6. ' (' → logprob: -17.00003433227539
    7. '(
' → logprob: -17.00003433227539
    8. '(vals' → logprob: -18.37503433227539
    9. ',val' → logprob: -18.50003433227539
    10. ' val' → logprob: -19.12503433227539

Token 243: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005891580134630203
    2. ',' → logprob: -5.380891799926758
    3. ')
' → logprob: -7.505891799926758
    4. ',val' → logprob: -8.005891799926758
    5. ' )' → logprob: -8.255891799926758
    6. ' ' → logprob: -10.005891799926758
    7. ',)' → logprob: -10.380891799926758
    8. ',None' → logprob: -11.130891799926758
    9. ')

' → logprob: -11.630891799926758
    10. '())' → logprob: -12.505891799926758

Token 244: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0023579292465001345
    2. '  
' → logprob: -7.1273579597473145
    3. 'else' → logprob: -7.5023579597473145
    4. ' if' → logprob: -7.6273579597473145
    5. ' else' → logprob: -8.252357482910156
    6. 'if' → logprob: -8.627357482910156
    7. ' for' → logprob: -10.877357482910156
    8. '   ' → logprob: -11.127357482910156
    9. 'nodes' → logprob: -11.752357482910156
    10. ' 
' → logprob: -12.002357482910156

Token 245: ' n' (ID: 297)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.8910288214683533
    2. 'nodes' → logprob: -1.141028881072998
    3. 'for' → logprob: -2.266028881072998
    4. 'if' → logprob: -2.391028881072998
    5. 'parent' → logprob: -3.141028881072998
    6. ' ' → logprob: -4.016028881072998
    7. 'current' → logprob: -5.891028881072998
    8. 'else' → logprob: -6.266028881072998
    9. ' nodes' → logprob: -6.391028881072998
    10. 'curr' → logprob: -6.766028881072998

Token 246: ' =' (ID: 314)
  Prédit: 'odes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odes' → logprob: -0.5235375165939331
    2. 'ode' → logprob: -0.8985375165939331
    3. ' =' → logprob: -8.648537635803223
    4. '=' → logprob: -8.898537635803223
    5. 'um' → logprob: -10.898537635803223
    6. 'o' → logprob: -10.898537635803223
    7. 'ods' → logprob: -11.273537635803223
    8. 'od' → logprob: -11.398537635803223
    9. 'ow' → logprob: -11.648537635803223
    10. 'val' → logprob: -12.273537635803223

Token 247: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.4948095381259918
    2. 'odes' → logprob: -1.3698095083236694
    3. ' nodes' → logprob: -1.9948095083236694
    4. 'ode' → logprob: -9.6198091506958
    5. '	nodes' → logprob: -11.3698091506958
    6. '(nodes' → logprob: -11.4948091506958
    7. ' ' → logprob: -11.6198091506958
    8. 'val' → logprob: -11.8698091506958
    9. 'num' → logprob: -13.1198091506958
    10. 'ins' → logprob: -13.2448091506958

Token 248: '[val' (ID: 162482)
  Prédit: '[val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -1.2664456789934775e-06
    2. 'val' → logprob: -14.250000953674316
    3. '.get' → logprob: -14.625000953674316
    4. '[' → logprob: -16.000001907348633
    5. ',val' → logprob: -19.375001907348633
    6. '(val' → logprob: -19.375001907348633
    7. '.val' → logprob: -19.750001907348633
    8. ' [' → logprob: -20.250001907348633
    9. '```' → logprob: -20.500001907348633
    10. '	val' → logprob: -20.750001907348633

Token 249: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011533919721841812
    2. ']
' → logprob: -5.136533737182617
    3. ')' → logprob: -5.761533737182617
    4. ']

' → logprob: -6.511533737182617
    5. ' ' → logprob: -7.136533737182617
    6. ' ]' → logprob: -9.136533737182617
    7. ')
' → logprob: -10.886533737182617
    8. ']
' → logprob: -11.386533737182617
    9. '  
' → logprob: -12.261533737182617
    10. ' ]
' → logprob: -12.511533737182617

Token 250: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4859684705734253
    2. 'for' → logprob: -1.8609684705734253
    3. 'if' → logprob: -2.235968589782715
    4. 'n' → logprob: -2.485968589782715
    5. ' for' → logprob: -3.985968589782715
    6. 'parent' → logprob: -4.735968589782715
    7. ' if' → logprob: -4.860968589782715
    8. '  
' → logprob: -6.235968589782715
    9. ' n' → logprob: -6.610968589782715
    10. 'p' → logprob: -7.735968589782715

Token 251: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4938347637653351
    2. 'if' → logprob: -1.6188347339630127
    3. 'p' → logprob: -2.7438347339630127
    4. ' ' → logprob: -2.7438347339630127
    5. 'for' → logprob: -2.8688347339630127
    6. ' if' → logprob: -6.618834972381592
    7. 'parent' → logprob: -6.743834972381592
    8. ' for' → logprob: -7.118834972381592
    9. ' n' → logprob: -7.243834972381592
    10. 'num' → logprob: -7.993834972381592

Token 252: ' ins' (ID: 2215)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6305845379829407
    2. 'ins' → logprob: -1.255584478378296
    3. ' len' → logprob: -1.880584478378296
    4. ' ins' → logprob: -3.505584478378296
    5. ' ' → logprob: -8.505584716796875
    6. '(len' → logprob: -10.630584716796875
    7. '(ins' → logprob: -11.130584716796875
    8. 'val' → logprob: -11.880584716796875
    9. 'i' → logprob: -12.255584716796875
    10. 'n' → logprob: -13.068084716796875

Token 253: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.945094355614856e-05
    2. '1' → logprob: -11.000069618225098
    3. ' ' → logprob: -11.250069618225098
    4. '>' → logprob: -11.500069618225098
    5. '!=' → logprob: -11.875069618225098
    6. '==' → logprob: -12.125069618225098
    7. ' [' → logprob: -12.500069618225098
    8. ':' → logprob: -13.250069618225098
    9. '[
' → logprob: -13.500069618225098
    10. ' and' → logprob: -13.625069618225098

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014465990476310253
    2. '0' → logprob: -4.764465808868408
    3. '2' → logprob: -5.389465808868408
    4. ' ' → logprob: -6.889465808868408
    5. '3' → logprob: -8.514466285705566
    6. '>' → logprob: -10.389466285705566
    7. '4' → logprob: -12.514466285705566
    8. '   ' → logprob: -12.764466285705566
    9. ']' → logprob: -12.889466285705566
    10. '
' → logprob: -13.389466285705566

Token 255: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.20482787489891052
    2. ' !=' → logprob: -1.954827904701233
    3. '!=-' → logprob: -3.3298277854919434
    4. '>=' → logprob: -5.829827785491943
    5. ']!=' → logprob: -6.704827785491943
    6. '>' → logprob: -7.204827785491943
    7. ')!=' → logprob: -7.204827785491943
    8. '()!=' → logprob: -7.454827785491943
    9. ' ' → logprob: -7.454827785491943
    10. '==' → logprob: -8.079828262329102

Token 256: ' >' (ID: 1424)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07491353899240494
    2. ' !=' → logprob: -2.824913501739502
    3. '!=-' → logprob: -4.824913501739502
    4. '>=' → logprob: -5.699913501739502
    5. '==' → logprob: -7.324913501739502
    6. '>' → logprob: -7.449913501739502
    7. ' ' → logprob: -8.82491397857666
    8. ' >=' → logprob: -9.94991397857666
    9. ' ==' → logprob: -10.94991397857666
    10. ' >' → logprob: -11.69991397857666

Token 257: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011490208096802235
    2. ' ' → logprob: -4.511490345001221
    3. '-' → logprob: -8.011489868164062
    4. '=' → logprob: -9.261489868164062
    5. ' -' → logprob: -11.261489868164062
    6. 'num' → logprob: -14.386489868164062
    7. 'n' → logprob: -14.386489868164062
    8. 'val' → logprob: -14.886489868164062
    9. '1' → logprob: -15.011489868164062
    10. '  ' → logprob: -15.386489868164062

Token 258: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009661173447966576
    2. ' ' → logprob: -5.1346611976623535
    3. '-' → logprob: -5.6346611976623535
    4. '=' → logprob: -9.509660720825195
    5. ' -' → logprob: -9.634660720825195
    6. 'n' → logprob: -11.634660720825195
    7. '1' → logprob: -13.509660720825195
    8. 'val' → logprob: -13.759660720825195
    9. 'num' → logprob: -14.384660720825195
    10. '０' → logprob: -14.634660720825195

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002651166869327426
    2. ':
' → logprob: -6.002651214599609
    3. ' and' → logprob: -9.62765121459961
    4. ' ' → logprob: -10.00265121459961
    5. ' :' → logprob: -10.00265121459961
    6. '   ' → logprob: -11.75265121459961
    7. ' :
' → logprob: -12.37765121459961
    8. ',' → logprob: -12.50265121459961
    9. ':

' → logprob: -14.00265121459961
    10. '  ' → logprob: -14.12765121459961

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02396874874830246
    2. ' for' → logprob: -3.8989686965942383
    3. ' ' → logprob: -5.898968696594238
    4. 'for' → logprob: -7.898968696594238
    5. ' n' → logprob: -8.648968696594238
    6. 'n' → logprob: -9.523968696594238
    7. '  ' → logprob: -10.648968696594238
    8. 'nodes' → logprob: -11.648968696594238
    9. '       ' → logprob: -12.398968696594238
    10. ' nodes' → logprob: -12.648968696594238

Token 261: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11046146601438522
    2. ' for' → logprob: -2.485461473464966
    3. '   ' → logprob: -4.485461235046387
    4. ' ' → logprob: -4.860461235046387
    5. 'n' → logprob: -6.360461235046387
    6. 'children' → logprob: -8.610461235046387
    7. ' n' → logprob: -8.735461235046387
    8. 'nodes' → logprob: -9.235461235046387
    9. 'if' → logprob: -10.110461235046387
    10. '  ' → logprob: -10.735461235046387

Token 262: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2650252878665924
    2. 'i' → logprob: -2.3900253772735596
    3. ' j' → logprob: -2.7650253772735596
    4. 'c' → logprob: -3.3900253772735596
    5. 'child' → logprob: -3.6400253772735596
    6. ' i' → logprob: -5.2650251388549805
    7. ' child' → logprob: -5.5150251388549805
    8. ' c' → logprob: -5.7650251388549805
    9. 'ch' → logprob: -6.2650251388549805
    10. 'idx' → logprob: -6.3900251388549805

Token 263: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003669675439596176
    2. 'in' → logprob: -5.753669738769531
    3. ' ' → logprob: -7.628669738769531
    4. '  ' → logprob: -13.003669738769531
    5. ',' → logprob: -13.878669738769531
    6. ' ,' → logprob: -14.253669738769531
    7. '	in' → logprob: -14.253669738769531
    8. 's' → logprob: -15.878669738769531
    9. '_in' → logprob: -16.00366973876953
    10. '    ' → logprob: -16.00366973876953

Token 264: ' ins' (ID: 2215)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2398710697889328
    2. ' range' → logprob: -1.8648710250854492
    3. 'ins' → logprob: -2.864871025085449
    4. ' ins' → logprob: -6.614871025085449
    5. ' ' → logprob: -11.86487102508545
    6. '   ' → logprob: -12.98987102508545
    7. 'list' → logprob: -13.23987102508545
    8. '  ' → logprob: -13.36487102508545
    9. '(range' → logprob: -13.36487102508545
    10. '	range' → logprob: -13.36487102508545

Token 265: '[' (ID: 58)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8026983737945557
    2. ' in' → logprob: -1.0526983737945557
    3. '[' → logprob: -2.6776983737945557
    4. '(' → logprob: -2.9276983737945557
    5. ' range' → logprob: -2.9276983737945557
    6. 'in' → logprob: -4.427698135375977
    7. ' ' → logprob: -4.552698135375977
    8. '(range' → logprob: -6.677698135375977
    9. '   ' → logprob: -7.052698135375977
    10. '2' → logprob: -7.177698135375977

Token 266: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2219519168138504
    2. 'range' → logprob: -1.721951961517334
    3. ' ' → logprob: -4.596951961517334
    4. ' range' → logprob: -4.721951961517334
    5. '   ' → logprob: -7.346951961517334
    6. '  ' → logprob: -7.721951961517334
    7. '(' → logprob: -9.596951484680176
    8. '    ' → logprob: -9.721951484680176
    9. '     ' → logprob: -9.971951484680176
    10. '(range' → logprob: -10.971951484680176

Token 267: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1488620787858963
    2. ' :' → logprob: -2.02386212348938
    3. ' ' → logprob: -5.898861885070801
    4. ':]' → logprob: -6.773861885070801
    5. ':j' → logprob: -6.773861885070801
    6. ']:' → logprob: -7.023861885070801
    7. ' :]' → logprob: -9.8988618850708
    8. ':],' → logprob: -10.3988618850708
    9. ' ]' → logprob: -10.5238618850708
    10. ' ):' → logprob: -10.7738618850708

Token 268: ']:
' (ID: 22152)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05764930322766304
    2. ' ' → logprob: -3.3076493740081787
    3. '(' → logprob: -4.8076491355896
    4. ']:' → logprob: -5.4326491355896
    5. '1' → logprob: -6.4326491355896
    6. ']' → logprob: -6.5576491355896
    7. 'ins' → logprob: -6.6826491355896
    8. ':' → logprob: -7.4326491355896
    9. ']:
' → logprob: -7.8076491355896
    10. ' ins' → logprob: -8.182649612426758

Token 269: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.12466500699520111
    2. '   ' → logprob: -2.4996650218963623
    3. 'if' → logprob: -3.8746650218963623
    4. ' if' → logprob: -4.624664783477783
    5. ' ' → logprob: -5.499664783477783
    6. '       ' → logprob: -8.374665260314941
    7. '    ' → logprob: -8.624665260314941
    8. '  ' → logprob: -11.499665260314941
    9. 'n' → logprob: -12.124665260314941
    10. '      ' → logprob: -12.999665260314941

Token 270: ' nodes' (ID: 15749)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21472997963428497
    2. '     ' → logprob: -2.2147300243377686
    3. ' if' → logprob: -2.9647300243377686
    4. '   ' → logprob: -3.5897300243377686
    5. ' ' → logprob: -5.5897297859191895
    6. '       ' → logprob: -6.9647297859191895
    7. 'n' → logprob: -9.214730262756348
    8. 'nodes' (adapté à ' nodes') → logprob: -9.964730262756348
    9. '    ' → logprob: -11.339730262756348
    10. '  ' → logprob: -11.339730262756348

Token 271: '.setdefault' (ID: 113053)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5608955025672913
    2. '.setdefault' → logprob: -1.1858954429626465
    3. 'val' → logprob: -2.8108954429626465
    4. '.get' → logprob: -3.1858954429626465
    5. 'get' → logprob: -4.4358954429626465
    6. '_val' → logprob: -5.1858954429626465
    7. '[val' → logprob: -6.3108954429626465
    8. 'j' → logprob: -6.6858954429626465
    9. 'if' → logprob: -7.4358954429626465
    10. '_j' → logprob: -8.060895919799805

Token 272: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0019299437990412116
    2. 'j' → logprob: -6.251929759979248
    3. '(' → logprob: -13.876930236816406
    4. ' j' → logprob: -15.376930236816406
    5. '(
' → logprob: -17.001930236816406
    6. '	j' → logprob: -17.251930236816406
    7. ' (' → logprob: -17.251930236816406
    8. ' ' → logprob: -17.751930236816406
    9. '   ' → logprob: -17.876930236816406
    10. ',j' → logprob: -18.376930236816406

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012594614236149937
    2. ' ,' → logprob: -9.000125885009766
    3. '=' → logprob: -13.250125885009766
    4. ',
' → logprob: -15.000125885009766
    5. ' ' → logprob: -15.625125885009766
    6. '(Tree' → logprob: -16.750125885009766
    7. ' =' → logprob: -16.875125885009766
    8. ',j' → logprob: -17.000125885009766
    9. ')' → logprob: -17.250125885009766
    10. '   ' → logprob: -17.875125885009766

Token 274: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.03805629536509514
    2. ' Tree' → logprob: -3.2880563735961914
    3. ' ' → logprob: -12.038056373596191
    4. '	Tree' → logprob: -12.538056373596191
    5. '   ' → logprob: -13.413056373596191
    6. '    ' → logprob: -13.538056373596191
    7. '  ' → logprob: -13.913056373596191
    8. '     ' → logprob: -14.663056373596191
    9. '(Tree' → logprob: -14.663056373596191
    10. '<Tree' → logprob: -15.538056373596191

Token 275: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: 0.0
    2. 'Nodes' → logprob: -20.875
    3. 'node' → logprob: -21.0
    4. 'Tree' → logprob: -21.375
    5. '_node' → logprob: -22.0
    6. ' Node' → logprob: -22.625
    7. '	Node' → logprob: -23.25
    8. '_Node' → logprob: -24.0
    9. '```' → logprob: -24.125
    10. '_NODE' → logprob: -24.5

Token 276: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00018446780450176448
    2. 'j' → logprob: -8.625184059143066
    3. '(' → logprob: -12.750184059143066
    4. ' (' → logprob: -14.000184059143066
    5. ')' → logprob: -14.625184059143066
    6. ' j' → logprob: -15.375184059143066
    7. ')(' → logprob: -15.875184059143066
    8. '(
' → logprob: -16.500185012817383
    9. ',j' → logprob: -16.500185012817383
    10. '
' → logprob: -16.750185012817383

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47482165694236755
    2. ',val' → logprob: -0.9748216867446899
    3. ' ,' → logprob: -7.2248215675354
    4. 'val' → logprob: -11.724822044372559
    5. ' ' → logprob: -13.349822044372559
    6. '))' → logprob: -13.849822044372559
    7. ',
' → logprob: -13.974822044372559
    8. ',value' → logprob: -14.224822044372559
    9. '  ' → logprob: -14.349822044372559
    10. '   ' → logprob: -14.474822044372559

Token 278: ' n' (ID: 297)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -3.953082341467962e-05
    2. ' val' → logprob: -10.500039100646973
    3. 'ins' → logprob: -12.000039100646973
    4. 'node' → logprob: -12.875039100646973
    5. 'n' → logprob: -13.125039100646973
    6. 'j' → logprob: -14.750039100646973
    7. '
' → logprob: -15.250039100646973
    8. '   ' → logprob: -16.00004005432129
    9. 'v' → logprob: -16.25004005432129
    10. '	val' → logprob: -16.75004005432129

Token 279: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.00012070851516909897
    2. 'val' → logprob: -9.250121116638184
    3. '.' → logprob: -10.750121116638184
    4. ' .' → logprob: -13.000121116638184
    5. ').' → logprob: -14.875121116638184
    6. ')' → logprob: -15.250121116638184
    7. ' ' → logprob: -16.250120162963867
    8. '   ' → logprob: -17.000120162963867
    9. ' val' → logprob: -17.750120162963867
    10. 'Val' → logprob: -18.125120162963867

Token 280: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.17097876965999603
    2. '))' → logprob: -1.9209787845611572
    3. '     ' → logprob: -5.545978546142578
    4. ' ' → logprob: -5.795978546142578
    5. ' ))
' → logprob: -5.920978546142578
    6. '))
' → logprob: -7.920978546142578
    7. ' ))' → logprob: -7.920978546142578
    8. '   ' → logprob: -8.795978546142578
    9. '))

' → logprob: -9.795978546142578
    10. ')' → logprob: -9.920978546142578

Token 281: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.15987013280391693
    2. 'n' → logprob: -2.159870147705078
    3. 'nodes' → logprob: -3.784870147705078
    4. ' ' → logprob: -5.159870147705078
    5. ' n' → logprob: -6.034870147705078
    6. ' nodes' → logprob: -6.909870147705078
    7. '      
' → logprob: -8.159870147705078
    8. '   ' → logprob: -8.784870147705078
    9. '	nodes' → logprob: -10.034870147705078
    10. '  
' → logprob: -11.284870147705078

Token 282: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.16563402116298676
    2. 'nodes' → logprob: -1.915634036064148
    3. '     ' → logprob: -5.2906341552734375
    4. ' nodes' → logprob: -9.040634155273438
    5. ' n' → logprob: -9.415634155273438
    6. 'child' → logprob: -9.665634155273438
    7. 'node' → logprob: -10.290634155273438
    8. 'children' → logprob: -11.040634155273438
    9. '	nodes' → logprob: -11.165634155273438
    10. '      
' → logprob: -11.415634155273438

Token 283: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -2.939851037808694e-05
    2. '.child' → logprob: -11.125029563903809
    3. '.' → logprob: -11.375029563903809
    4. '.nodes' → logprob: -13.250029563903809
    5. ' .' → logprob: -14.000029563903809
    6. '.Children' → logprob: -15.125029563903809
    7. '.cells' → logprob: -16.375028610229492
    8. ').' → logprob: -16.750028610229492
    9. 'children' → logprob: -16.750028610229492
    10. '.characters' → logprob: -16.875028610229492

Token 284: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.1279553291387856e-05
    2. 'append' → logprob: -12.125011444091797
    3. '.' → logprob: -12.250011444091797
    4. ' .' → logprob: -14.375011444091797
    5. '.extend' → logprob: -15.250011444091797
    6. '.app' → logprob: -16.000011444091797
    7. '.ap' → logprob: -16.250011444091797
    8. '_append' → logprob: -18.125011444091797
    9. ' append' → logprob: -18.625011444091797
    10. '.Append' → logprob: -18.875011444091797

Token 285: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -4.739826181321405e-05
    2. 'nodes' → logprob: -10.00004768371582
    3. '(' → logprob: -13.25004768371582
    4. ' nodes' → logprob: -16.12504768371582
    5. '(n' → logprob: -17.37504768371582
    6. '(
' → logprob: -17.75004768371582
    7. '(node' → logprob: -18.75004768371582
    8. '	nodes' → logprob: -18.75004768371582
    9. '(children' → logprob: -20.00004768371582
    10. ' (' → logprob: -20.37504768371582

Token 286: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.3856492842023727e-06
    2. '.get' → logprob: -14.000000953674316
    3. '[' → logprob: -15.375000953674316
    4. '[val' → logprob: -16.625001907348633
    5. '[js' → logprob: -16.750001907348633
    6. '.setdefault' → logprob: -16.875001907348633
    7. ' [' → logprob: -17.125001907348633
    8. '[i' → logprob: -18.125001907348633
    9. ')[' → logprob: -18.500001907348633
    10. '[n' → logprob: -18.750001907348633

Token 287: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.029997853562235832
    2. ')' → logprob: -3.5299978256225586
    3. ' ])' → logprob: -8.779997825622559
    4. ' )' → logprob: -10.404997825622559
    5. ' ' → logprob: -10.904997825622559
    6. '))' → logprob: -11.029997825622559
    7. ')])' → logprob: -11.654997825622559
    8. ')]' → logprob: -11.779997825622559
    9. '])
' → logprob: -12.029997825622559
    10. ']' → logprob: -12.904997825622559

Token 288: '     ' (ID: 530)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.001458808546885848
    2. 'for' → logprob: -6.626458644866943
    3. '
' → logprob: -9.501459121704102
    4. 'root' → logprob: -10.501459121704102
    5. ' calc' → logprob: -11.626459121704102
    6. ' ' → logprob: -11.876459121704102
    7. '  
' → logprob: -12.251459121704102
    8. '(calc' → logprob: -12.501459121704102
    9. ' for' → logprob: -13.376459121704102
    10. '```' → logprob: -13.626459121704102

Token 289: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.0004873955331277102
    2. ' nodes' → logprob: -7.875487327575684
    3. '     ' → logprob: -9.500487327575684
    4. ' ' → logprob: -11.625487327575684
    5. '(nodes' → logprob: -12.000487327575684
    6. '      
' → logprob: -12.375487327575684
    7. 'n' → logprob: -12.500487327575684
    8. '	nodes' → logprob: -12.750487327575684
    9. '.nodes' → logprob: -13.875487327575684
    10. '   ' → logprob: -14.000487327575684

Token 290: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0010129223810508847
    2. '[n' → logprob: -7.001012802124023
    3. '[val' → logprob: -9.876012802124023
    4. '[' → logprob: -10.376012802124023
    5. 'val' → logprob: -11.001012802124023
    6. 'j' → logprob: -14.876012802124023
    7. ' [' → logprob: -15.376012802124023
    8. '[i' → logprob: -15.501012802124023
    9. '[js' → logprob: -15.751012802124023
    10. '[node' → logprob: -16.001012802124023

Token 291: '].' (ID: 1651)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.03812858462333679
    2. '].' → logprob: -3.288128614425659
    3. '.' → logprob: -10.163128852844238
    4. ').' → logprob: -10.538128852844238
    5. '}.' → logprob: -11.663128852844238
    6. ' .' → logprob: -11.913128852844238
    7. '.parents' → logprob: -13.163128852844238
    8. ' ].' → logprob: -13.538128852844238
    9. 'parent' → logprob: -14.538128852844238
    10. '`.' → logprob: -14.663128852844238

Token 292: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -2.2200749754119897e-06
    2. '.parent' → logprob: -13.625001907348633
    3. ' parent' → logprob: -14.125001907348633
    4. '	parent' → logprob: -17.000001907348633
    5. 'depth' → logprob: -17.000001907348633
    6. '_parent' → logprob: -18.000001907348633
    7. ',parent' → logprob: -18.000001907348633
    8. ' ' → logprob: -18.375001907348633
    9. 'parents' → logprob: -18.375001907348633
    10. 'node' → logprob: -18.500001907348633

Token 293: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.176947600673884e-05
    2. '=' → logprob: -11.125021934509277
    3. 'val' → logprob: -12.250021934509277
    4. '=_' → logprob: -14.000021934509277
    5. ' =' → logprob: -14.125021934509277
    6. '.val' → logprob: -16.00002098083496
    7. ' _' → logprob: -17.12502098083496
    8. ' ' → logprob: -17.12502098083496
    9. '_' → logprob: -17.25002098083496
    10. '```' → logprob: -17.25002098083496

Token 294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022798418998718
    2. ' =' → logprob: -1.9102280139923096
    3. '=n' → logprob: -12.91022777557373
    4. ' ' → logprob: -13.66022777557373
    5. '=j' → logprob: -16.535228729248047
    6. '=
' → logprob: -17.535228729248047
    7. '＝' → logprob: -17.910228729248047
    8. '=s' → logprob: -18.285228729248047
    9. ' =
' → logprob: -18.910228729248047
    10. '=

' → logprob: -18.910228729248047

Token 295: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4299129247665405
    2. 'val' → logprob: -1.0549129247665405
    3. ' n' → logprob: -7.30491304397583
    4. ' val' → logprob: -7.67991304397583
    5. 'j' → logprob: -10.304912567138672
    6. 'v' → logprob: -11.054912567138672
    7. 'node' → logprob: -12.054912567138672
    8. ' ' → logprob: -12.304912567138672
    9. '[val' → logprob: -12.679912567138672
    10. '	val' → logprob: -13.179912567138672

Token 296: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -1.4498052223643754e-05
    2. 'val' → logprob: -11.250014305114746
    3. '.' → logprob: -13.500014305114746
    4. '[val' → logprob: -18.625015258789062
    5. '.v' → logprob: -19.250015258789062
    6. ' .' → logprob: -19.500015258789062
    7. 'Val' → logprob: -19.750015258789062
    8. '.Val' → logprob: -20.500015258789062
    9. '.value' → logprob: -20.750015258789062
    10. ' val' → logprob: -20.750015258789062

Token 297: '

' (ID: 279)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.008950882591307163
    2. '
' → logprob: -4.883950710296631
    3. 'print' → logprob: -6.883950710296631
    4. 'for' → logprob: -9.133951187133789
    5. 'depth' → logprob: -10.133951187133789
    6. '(calc' → logprob: -10.133951187133789
    7. '  
' → logprob: -10.258951187133789
    8. 'nodes' → logprob: -10.508951187133789
    9. ' calc' → logprob: -10.758951187133789
    10. 'num' → logprob: -11.133951187133789

Token 298: 'parent' (ID: 4903)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.00018411019118502736
    2. '
' → logprob: -9.625184059143066
    3. 'for' → logprob: -10.125184059143066
    4. ' ' → logprob: -11.125184059143066
    5. ' calc' → logprob: -11.125184059143066
    6. '```' → logprob: -11.125184059143066
    7. '(calc' → logprob: -11.500184059143066
    8. 'print' → logprob: -11.750184059143066
    9. '  
' → logprob: -11.875184059143066
    10. 'root' → logprob: -12.750184059143066

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7627688050270081
    2. '_val' → logprob: -0.7627688050270081
    3. '=' → logprob: -2.7627687454223633
    4. '_' → logprob: -6.387768745422363
    5. '_vals' → logprob: -7.387768745422363
    6. ' ' → logprob: -7.637768745422363
    7. '_node' → logprob: -8.387768745422363
    8. '=None' → logprob: -8.512768745422363
    9. '_nodes' → logprob: -8.512768745422363
    10. 's' → logprob: -8.637768745422363

Token 300: ' [' (ID: 723)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28117644786834717
    2. 'nodes' → logprob: -2.9061765670776367
    3. 'None' → logprob: -3.1561765670776367
    4. '[n' → logprob: -3.4061765670776367
    5. '0' → logprob: -3.5311765670776367
    6. '[' → logprob: -3.7811765670776367
    7. '[min' → logprob: -4.156176567077637
    8. '[next' → logprob: -4.281176567077637
    9. 'next' → logprob: -4.406176567077637
    10. 'min' → logprob: -5.906176567077637

Token 301: 'node' (ID: 7005)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09279980510473251
    2. '0' → logprob: -3.9677999019622803
    3. 'None' → logprob: -3.9677999019622803
    4. 'i' → logprob: -4.217799663543701
    5. 'n' → logprob: -4.592799663543701
    6. 'nodes' → logprob: -4.842799663543701
    7. 'node' → logprob: -5.217799663543701
    8. 'False' → logprob: -5.342799663543701
    9. 'v' → logprob: -5.592799663543701
    10. 'x' → logprob: -6.092799663543701

Token 302: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04212547466158867
    2. 'for' → logprob: -4.042125701904297
    3. '.val' → logprob: -4.667125701904297
    4. '.parent' → logprob: -5.167125701904297
    5. '.' → logprob: -5.417125701904297
    6. 'val' → logprob: -5.792125701904297
    7. ' ' → logprob: -7.542125701904297
    8. 'parent' → logprob: -8.417125701904297
    9. '[' → logprob: -9.542125701904297
    10. ' .' → logprob: -10.167125701904297

Token 303: ' node' (ID: 4596)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.33962482213974
    2. 'nodes' → logprob: -1.4646248817443848
    3. ' node' → logprob: -3.4646248817443848
    4. 'node' → logprob: -3.9646248817443848
    5. 'v' → logprob: -6.339624881744385
    6. 'n' → logprob: -6.339624881744385
    7. ' v' → logprob: -6.839624881744385
    8. ' n' → logprob: -7.589624881744385
    9. 'k' → logprob: -8.089624404907227
    10. ' k' → logprob: -8.339624404907227

Token 304: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11917830258607864
    2. 'nodes' → logprob: -2.994178295135498
    3. ' nodes' → logprob: -3.119178295135498
    4. 'in' → logprob: -4.369178295135498
    5. 'values' → logprob: -5.619178295135498
    6. '.values' → logprob: -7.244178295135498
    7. 's' → logprob: -7.244178295135498
    8. ' values' → logprob: -9.244178771972656
    9. '(nodes' → logprob: -9.244178771972656
    10. '_nodes' → logprob: -10.119178771972656

Token 305: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.0024781543761491776
    2. ' nodes' → logprob: -6.002478122711182
    3. '(nodes' → logprob: -14.12747859954834
    4. 'values' → logprob: -14.25247859954834
    5. '	nodes' → logprob: -14.50247859954834
    6. ' ' → logprob: -15.00247859954834
    7. 'list' → logprob: -16.002477645874023
    8. '.nodes' → logprob: -16.877477645874023
    9. 'node' → logprob: -17.127477645874023
    10. '
' → logprob: -17.127477645874023

Token 306: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.011810221709311008
    2. '.' → logprob: -4.511810302734375
    3. 'values' → logprob: -7.261810302734375
    4. ' ' → logprob: -10.511810302734375
    5. ' if' → logprob: -11.011810302734375
    6. 'if' → logprob: -11.636810302734375
    7. ' .' → logprob: -12.261810302734375
    8. ' in' → logprob: -13.636810302734375
    9. 's' → logprob: -14.386810302734375
    10. ' values' → logprob: -14.511810302734375

Token 307: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00022892709239386022
    2. ' if' → logprob: -8.750228881835938
    3. 'if' → logprob: -9.625228881835938
    4. ' ()' → logprob: -12.750228881835938
    5. '()]' → logprob: -14.250228881835938
    6. ' ' → logprob: -14.500228881835938
    7. ']' → logprob: -14.875228881835938
    8. '   ' → logprob: -17.125228881835938
    9. '()][' → logprob: -17.750228881835938
    10. ')' → logprob: -17.750228881835938

Token 308: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31326377391815186
    2. 'if' → logprob: -1.3132637739181519
    3. ' ' → logprob: -13.188263893127441
    4. '   ' → logprob: -16.563262939453125
    5. '()' → logprob: -17.063262939453125
    6. '  ' → logprob: -17.063262939453125
    7. '    ' → logprob: -18.188262939453125
    8. '          ' → logprob: -18.688262939453125
    9. '           ' → logprob: -19.063262939453125
    10. '     ' → logprob: -19.188262939453125

Token 309: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3132731318473816
    2. ' node' → logprob: -1.3132731914520264
    3. ' ' → logprob: -11.938273429870605
    4. '(node' → logprob: -12.813273429870605
    5. '   ' → logprob: -14.313273429870605
    6. '[node' → logprob: -14.438273429870605
    7. '	node' → logprob: -14.938273429870605
    8. '  ' → logprob: -15.188273429870605
    9. '    ' → logprob: -15.563273429870605
    10. '
' → logprob: -16.31327247619629

Token 310: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0002680112374946475
    2. '.' → logprob: -8.62526798248291
    3. ' .' → logprob: -9.37526798248291
    4. '.Parent' → logprob: -14.25026798248291
    5. '.parents' → logprob: -14.50026798248291
    6. 'parent' → logprob: -14.62526798248291
    7. '.depth' → logprob: -14.62526798248291
    8. '.val' → logprob: -14.75026798248291
    9. '[parent' → logprob: -14.87526798248291
    10. '.node' → logprob: -15.00026798248291

Token 311: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00025073037249967456
    2. 'val' → logprob: -8.750250816345215
    3. '==' → logprob: -9.500250816345215
    4. '==-' → logprob: -11.875250816345215
    5. ' ==' → logprob: -12.625250816345215
    6. '_' → logprob: -12.625250816345215
    7. '_v' → logprob: -13.875250816345215
    8. ' _' → logprob: -14.000250816345215
    9. ' ' → logprob: -15.125250816345215
    10. '-' → logprob: -15.375250816345215

Token 312: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.39803850650787354
    2. ' ==' → logprob: -1.1480385065078735
    3. '==-' → logprob: -4.523038387298584
    4. '<' → logprob: -8.898038864135742
    5. '==
' → logprob: -10.023038864135742
    6. ' <' → logprob: -10.773038864135742
    7. '=' → logprob: -11.273038864135742
    8. ']==' → logprob: -11.523038864135742
    9. ')==' → logprob: -11.648038864135742
    10. ' ' → logprob: -11.898038864135742

Token 313: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020354038861114532
    2. ' -' → logprob: -8.500203132629395
    3. ' ' → logprob: -17.12520408630371
    4. '−' → logprob: -20.00020408630371
    5. '   ' → logprob: -20.25020408630371
    6. '-
' → logprob: -20.75020408630371
    7. '-l' → logprob: -21.00020408630371
    8. '  ' → logprob: -21.12520408630371
    9. '
' → logprob: -21.62520408630371
    10. '	' → logprob: -21.75020408630371

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '１' → logprob: -16.375019073486328
    4. '<|end|>' → logprob: -17.500019073486328
    5. '۱' → logprob: -17.562519073486328
    6. '   ' → logprob: -17.875019073486328
    7. '  ' → logprob: -18.437519073486328
    8. '```' → logprob: -18.625019073486328
    9. '2' → logprob: -18.750019073486328
    10. '`' → logprob: -19.000019073486328

Token 315: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006754444446414709
    2. ']' → logprob: -5.006754398345947
    3. '[' → logprob: -10.631754875183105
    4. ' ][' → logprob: -11.506754875183105
    5. ']
' → logprob: -12.506754875183105
    6. ']

' → logprob: -14.381754875183105
    7. '"][' → logprob: -15.256754875183105
    8. ' ]' → logprob: -16.13175392150879
    9. ')[' → logprob: -16.50675392150879
    10. ''][' → logprob: -16.63175392150879

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.50000762939453
    4. '00' → logprob: -19.50000762939453
    5. '０' → logprob: -19.62500762939453
    6. '۰' → logprob: -20.00000762939453
    7. '
' → logprob: -20.12500762939453
    8. '000' → logprob: -20.93750762939453
    9. '  ' → logprob: -21.37500762939453
    10. '1' → logprob: -21.50000762939453

Token 317: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007754502817988396
    2. ']
' → logprob: -4.882754325866699
    3. ')' → logprob: -9.7577543258667
    4. ']

' → logprob: -9.7577543258667
    5. ' ]' → logprob: -10.7577543258667
    6. ']
' → logprob: -11.6327543258667
    7. ')
' → logprob: -14.0077543258667
    8. ' ]
' → logprob: -14.8827543258667
    9. ']

' → logprob: -14.8827543258667
    10. ' ' → logprob: -15.2577543258667

Token 318: 'calc' (ID: 49633)
  Prédit: 'calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -4.1318875446449965e-05
    2. '
' → logprob: -10.250041007995605
    3. 'parent' → logprob: -12.625041007995605
    4. '```' → logprob: -13.750041007995605
    5. ' calc' → logprob: -14.375041007995605
    6. '(calc' → logprob: -14.750041007995605
    7. 'print' → logprob: -15.875041007995605
    8. '
' → logprob: -16.000041961669922
    9. '.calc' → logprob: -16.375041961669922
    10. ' ' → logprob: -16.750041961669922

Token 319: '_depth' (ID: 44220)
  Prédit: '_depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depth' → logprob: -3.128163257315464e-07
    2. 'depth' → logprob: -15.375
    3. '_de' → logprob: -16.75
    4. '_DEPTH' → logprob: -19.125
    5. ' depths' → logprob: -19.375
    6. '_calc' → logprob: -19.375
    7. '_d' → logprob: -19.75
    8. '_dep' → logprob: -20.0
    9. 'Depth' → logprob: -20.375
    10. '_cal' → logprob: -20.75

Token 320: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19690468907356262
    2. '_depth' → logprob: -2.1969046592712402
    3. 'depth' → logprob: -2.6969046592712402
    4. ' depths' → logprob: -9.071905136108398
    5. 'ds' → logprob: -10.946905136108398
    6. '-depth' → logprob: -10.946905136108398
    7. '(depth' → logprob: -11.696905136108398
    8. 'Depth' → logprob: -12.321905136108398
    9. 'd' → logprob: -12.821905136108398
    10. ' Depth' → logprob: -13.571905136108398

Token 321: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -2.1054253011243418e-05
    2. 'parent' → logprob: -10.875020980834961
    3. '(paren' → logprob: -14.000020980834961
    4. '(' → logprob: -14.375020980834961
    5. ',parent' → logprob: -14.625020980834961
    6. '[parent' → logprob: -16.25002098083496
    7. ' parent' → logprob: -17.00002098083496
    8. '(
' → logprob: -17.37502098083496
    9. ' (' → logprob: -18.25002098083496
    10. '	parent' → logprob: -18.37502098083496

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.123899558791891e-05
    2. '0' → logprob: -9.75007152557373
    3. ' ,' → logprob: -11.37507152557373
    4. '(' → logprob: -14.25007152557373
    5. ')' → logprob: -14.62507152557373
    6. ',parent' → logprob: -15.75007152557373
    7. ',
' → logprob: -16.125070571899414
    8. '(parent' → logprob: -16.250070571899414
    9. ' ' → logprob: -16.375070571899414
    10. '1' → logprob: -18.000070571899414

Token 323: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '   ' → logprob: -19.375295639038086
    4. '۰' → logprob: -19.375295639038086
    5. '０' → logprob: -19.625295639038086
    6. '  ' → logprob: -19.750295639038086
    7. '00' → logprob: -20.500295639038086
    8. ' ' → logprob: -20.750295639038086
    9. ')' → logprob: -20.812795639038086
    10. '
' → logprob: -20.937795639038086

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '０' → logprob: -19.125011444091797
    4. '۰' → logprob: -19.375011444091797
    5. '   ' → logprob: -19.500011444091797
    6. '  ' → logprob: -20.500011444091797
    7. '00' → logprob: -20.625011444091797
    8. ' ' → logprob: -21.000011444091797
    9. '
' → logprob: -21.062511444091797
    10. ')' → logprob: -21.125011444091797

Token 325: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004925066023133695
    2. ')
' → logprob: -7.625492572784424
    3. ' )' → logprob: -12.500492095947266
    4. ')

' → logprob: -14.250492095947266
    5. ')
' → logprob: -17.125492095947266
    6. ')#' → logprob: -17.875492095947266
    7. ')`' → logprob: -18.500492095947266
    8. '),' → logprob: -18.500492095947266
    9. ')add' → logprob: -18.750492095947266
    10. ' )
' → logprob: -19.125492095947266

Token 326: 'sort' (ID: 13373)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006749047315679491
    2. 'nodes' → logprob: -7.375674724578857
    3. 'sorted' → logprob: -11.125675201416016
    4. 'keys' → logprob: -11.250675201416016
    5. ' for' → logprob: -12.000675201416016
    6. 'parent' → logprob: -12.125675201416016
    7. 'node' → logprob: -12.625675201416016
    8. 'print' → logprob: -13.250675201416016
    9. 'values' → logprob: -13.500675201416016
    10. 'vals' → logprob: -13.500675201416016

Token 327: '_nodes' (ID: 34593)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -7.922563963802531e-05
    2. '_nodes' → logprob: -9.875079154968262
    3. 'nodes' → logprob: -10.750079154968262
    4. 'e' → logprob: -13.375079154968262
    5. 'def' → logprob: -13.625079154968262
    6. 'parent' → logprob: -14.375079154968262
    7. '(nodes' → logprob: -14.625079154968262
    8. '_parent' → logprob: -15.250079154968262
    9. 'd' → logprob: -15.250079154968262
    10. ' =' → logprob: -15.625079154968262

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06003319099545479
    2. '=' → logprob: -2.935033082962036
    3. 'ed' → logprob: -5.810033321380615
    4. 'd' → logprob: -7.185033321380615
    5. '_nodes' → logprob: -7.560033321380615
    6. '_keys' → logprob: -8.560032844543457
    7. ' ' → logprob: -9.435032844543457
    8. '_list' → logprob: -9.435032844543457
    9. '=[]' → logprob: -9.435032844543457
    10. 'sorted' → logprob: -9.685032844543457

Token 329: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.023265859112143517
    2. ' sorted' → logprob: -3.773265838623047
    3. '[' → logprob: -11.523265838623047
    4. '(sorted' → logprob: -11.648265838623047
    5. 'list' → logprob: -14.148265838623047
    6. ' [' → logprob: -14.898265838623047
    7. ' ' → logprob: -14.898265838623047
    8. '.sorted' → logprob: -16.273265838623047
    9. '   ' → logprob: -16.648265838623047
    10. '[s' → logprob: -16.898265838623047

Token 330: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.00043233807082287967
    2. '(list' → logprob: -8.250432014465332
    3. '(' → logprob: -9.375432014465332
    4. '([' → logprob: -9.500432014465332
    5. 'nodes' → logprob: -12.000432014465332
    6. '([(' → logprob: -12.875432014465332
    7. '((' → logprob: -13.500432014465332
    8. '(
' → logprob: -14.375432014465332
    9. '(node' → logprob: -15.375432014465332
    10. 'list' → logprob: -15.875432014465332

Token 331: '.items' (ID: 19607)
  Prédit: '.values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -5.037835580878891e-05
    2. '.items' → logprob: -10.75005054473877
    3. '.' → logprob: -10.87505054473877
    4. 'values' → logprob: -12.62505054473877
    5. '.keys' → logprob: -12.75005054473877
    6. '().' → logprob: -13.25005054473877
    7. '(values' → logprob: -14.00005054473877
    8. ').' → logprob: -14.37505054473877
    9. ' .' → logprob: -15.62505054473877
    10. '.Values' → logprob: -15.62505054473877

Token 332: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.010803033597767353
    2. '(key' → logprob: -4.63580322265625
    3. '()' → logprob: -7.76080322265625
    4. '())' → logprob: -8.13580322265625
    5. ',key' → logprob: -8.63580322265625
    6. ',' → logprob: -8.88580322265625
    7. 'key' → logprob: -12.51080322265625
    8. '(),
' → logprob: -13.13580322265625
    9. '(lambda' → logprob: -13.13580322265625
    10. ' ,' → logprob: -13.76080322265625

Token 333: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.10671620070934296
    2. 'lambda' → logprob: -2.6067161560058594
    3. ' key' → logprob: -3.6067161560058594
    4. ' lambda' → logprob: -8.10671615600586
    5. '   ' → logprob: -15.60671615600586
    6. '(key' → logprob: -15.73171615600586
    7. '=lambda' → logprob: -16.48171615600586
    8. '(lambda' → logprob: -16.98171615600586
    9. ' ' → logprob: -17.35671615600586
    10. ',key' → logprob: -17.73171615600586

Token 334: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -2.15310683415737e-05
    2. 'lambda' → logprob: -11.250021934509277
    3. '=' → logprob: -11.875021934509277
    4. '(lambda' → logprob: -13.500021934509277
    5. ' lambda' → logprob: -17.37502098083496
    6. '_lambda' → logprob: -20.87502098083496
    7. '```' → logprob: -21.00002098083496
    8. ' =' → logprob: -21.87502098083496
    9. '=
' → logprob: -22.25002098083496
    10. '=(' → logprob: -22.50002098083496

Token 335: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0034089400433003902
    2. ' lambda' → logprob: -5.753408908843994
    3. 'x' → logprob: -8.503409385681152
    4. '(lambda' → logprob: -10.503409385681152
    5. '=lambda' → logprob: -14.253409385681152
    6. ' x' → logprob: -15.378409385681152
    7. 'λ' → logprob: -16.378408432006836
    8. 'lam' → logprob: -16.878408432006836
    9. 'item' → logprob: -17.128408432006836
    10. 'kv' → logprob: -17.628408432006836

Token 336: ':x' (ID: 73587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01138567365705967
    2. ':x' → logprob: -4.511385440826416
    3. ' :' → logprob: -8.386385917663574
    4. 'x' → logprob: -9.261385917663574
    5. ' x' → logprob: -11.261385917663574
    6. ':int' → logprob: -14.011385917663574
    7. ':
' → logprob: -14.886385917663574
    8. ' ' → logprob: -15.261385917663574
    9. '```' → logprob: -15.761385917663574
    10. 'lambda' → logprob: -15.761385917663574

Token 337: '[' (ID: 58)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16501906514167786
    2. ' x' → logprob: -2.4150190353393555
    3. '[' → logprob: -2.7900190353393555
    4. '1' → logprob: -6.7900190353393555
    5. ':' → logprob: -9.415019035339355
    6. ' ' → logprob: -9.540019035339355
    7. '0' → logprob: -10.540019035339355
    8. ':x' → logprob: -11.415019035339355
    9. '   ' → logprob: -12.040019035339355
    10. '(x' → logprob: -12.165019035339355

Token 338: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08059162646532059
    2. 'x' → logprob: -2.5805916786193848
    3. '[' → logprob: -6.955591678619385
    4. ' x' → logprob: -7.580591678619385
    5. ' ' → logprob: -8.705591201782227
    6. '0' → logprob: -9.580591201782227
    7. '(x' → logprob: -13.830591201782227
    8. '   ' → logprob: -14.705591201782227
    9. 'val' → logprob: -16.080591201782227
    10. '(' → logprob: -16.205591201782227

Token 339: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12845256924629211
    2. ')[' → logprob: -2.2534525394439697
    3. '])' → logprob: -4.378452777862549
    4. ' )' → logprob: -6.628452777862549
    5. ']' → logprob: -7.753452777862549
    6. '][' → logprob: -8.00345230102539
    7. ' )[' → logprob: -8.12845230102539
    8. '[' → logprob: -8.62845230102539
    9. ',' → logprob: -8.75345230102539
    10. ')]' → logprob: -9.62845230102539

Token 340: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061124082654714584
    2. ')[' → logprob: -3.311124086380005
    3. ',' → logprob: -3.811124086380005
    4. ' )' → logprob: -7.811123847961426
    5. '[' → logprob: -9.436123847961426
    6. ')
' → logprob: -9.561123847961426
    7. ',[' → logprob: -10.311123847961426
    8. ' )[' → logprob: -10.311123847961426
    9. ' ' → logprob: -11.061123847961426
    10. ' ,' → logprob: -11.061123847961426

Token 341: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.796184723294573e-06
    2. ' for' → logprob: -12.125005722045898
    3. '
' → logprob: -15.625005722045898
    4. 'print' → logprob: -17.0000057220459
    5. '	for' → logprob: -18.3750057220459
    6. 'i' → logprob: -18.6250057220459
    7. '  
' → logprob: -18.7500057220459
    8. '    
' → logprob: -18.7500057220459
    9. '```' → logprob: -19.1250057220459
    10. 'result' → logprob: -19.5000057220459

Token 342: ' _,' (ID: 18042)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.7986729145050049
    2. 'k' → logprob: -1.0486729145050049
    3. '_,' → logprob: -2.048672914505005
    4. ' key' → logprob: -3.423672914505005
    5. ' k' → logprob: -4.048672676086426
    6. ' _,' → logprob: -4.548672676086426
    7. 'node' → logprob: -5.673672676086426
    8. 'i' → logprob: -5.798672676086426
    9. 'item' → logprob: -7.048672676086426
    10. 'kv' → logprob: -7.298672676086426

Token 343: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.03923555091023445
    2. 'n' → logprob: -3.6642355918884277
    3. ' node' → logprob: -4.539235591888428
    4. 'v' → logprob: -6.914235591888428
    5. 'nd' → logprob: -7.664235591888428
    6. ' n' → logprob: -8.28923511505127
    7. 'tree' → logprob: -8.53923511505127
    8. 'nod' → logprob: -9.91423511505127
    9. 'tn' → logprob: -10.03923511505127
    10. 't' → logprob: -10.41423511505127

Token 344: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.474081814289093
    2. 'in' → logprob: -0.974081814289093
    3. ' ' → logprob: -12.599081993103027
    4. '	in' → logprob: -14.474081993103027
    5. ',' → logprob: -14.974081993103027
    6. 'n' → logprob: -15.474081993103027
    7. '  ' → logprob: -15.974081993103027
    8. 's' → logprob: -16.97408103942871
    9. 'ins' → logprob: -17.09908103942871
    10. '
' → logprob: -17.59908103942871

Token 345: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.0007137430948205292
    2. ' sort' → logprob: -7.25071382522583
    3. 'sorted' → logprob: -12.625713348388672
    4. '(sort' → logprob: -15.375713348388672
    5. '	sort' → logprob: -16.250713348388672
    6. ' ' → logprob: -16.375713348388672
    7. 'nodes' → logprob: -18.375713348388672
    8. '   ' → logprob: -18.625713348388672
    9. 'node' → logprob: -18.625713348388672
    10. ' sorted' → logprob: -19.375713348388672

Token 346: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.2664456789934775e-06
    2. '_items' → logprob: -13.750000953674316
    3. 'nodes' → logprob: -16.375001907348633
    4. 'Nodes' → logprob: -18.125001907348633
    5. '_' → logprob: -18.250001907348633
    6. 'ed' → logprob: -18.625001907348633
    7. '```' → logprob: -18.625001907348633
    8. 'odes' → logprob: -18.750001907348633
    9. '(nodes' → logprob: -18.750001907348633
    10. ' Nodes' → logprob: -18.875001907348633

Token 347: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00467991828918457
    2. ':
' → logprob: -5.3796796798706055
    3. ',' → logprob: -10.379679679870605
    4. ' :' → logprob: -11.254679679870605
    5. '.print' → logprob: -12.754679679870605
    6. '.' → logprob: -13.254679679870605
    7. '):' → logprob: -13.379679679870605
    8. ':

' → logprob: -13.379679679870605
    9. 'print' → logprob: -13.379679679870605
    10. '):
' → logprob: -13.754679679870605

Token 348: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4255649149417877
    2. ' print' → logprob: -1.1755648851394653
    3. ' ' → logprob: -3.300565004348755
    4. '   ' → logprob: -6.925564765930176
    5. '	print' → logprob: -9.175564765930176
    6. '.print' → logprob: -12.675564765930176
    7. '  
' → logprob: -14.050564765930176
    8. '(print' → logprob: -14.675564765930176
    9. '```' → logprob: -15.050564765930176
    10. '  ' → logprob: -15.175564765930176

Token 349: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. ' print' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.375001907348633
    4. '  
' → logprob: -19.750001907348633
    5. '	print' → logprob: -20.250001907348633
    6. '   ' → logprob: -20.750001907348633
    7. '#print' → logprob: -21.625001907348633
    8. '.print' → logprob: -21.625001907348633
    9. 'pr' → logprob: -21.875001907348633
    10. '_print' → logprob: -22.500001907348633

Token 350: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.12696485221385956
    2. '(str' → logprob: -2.126964807510376
    3. '(' → logprob: -10.751964569091797
    4. 'node' → logprob: -11.751964569091797
    5. 'str' → logprob: -12.126964569091797
    6. '(f' → logprob: -13.251964569091797
    7. '("{}' → logprob: -16.001964569091797
    8. '("' → logprob: -16.376964569091797
    9. '((' → logprob: -17.001964569091797
    10. '("{' → logprob: -17.126964569091797

Token 351: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ' )' → logprob: -12.375005722045898
    3. '())' → logprob: -14.750005722045898
    4. ').__' → logprob: -14.750005722045898
    5. ')__' → logprob: -16.0000057220459
    6. '.__' → logprob: -16.0000057220459
    7. ')`' → logprob: -16.2500057220459
    8. ' ' → logprob: -16.6250057220459
    9. '()' → logprob: -17.2500057220459
    10. ')
' → logprob: -17.6250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 349
Tokens correctement prédits (1ère position, stricte): 148
Tokens correctement prédits (1ère position, avec adaptation): 157
Tokens correctement prédits (top 10): 306
Précision stricte (1ère position): 42.41%
Précision adaptée (1ère position): 44.99%
Précision (top 10): 87.68%
================================================================================
