================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def q(a,h):
 d[a]=str(h)
 for b in t[a]:q(b,h+1)
t,p,d={},{},{}
for _ in[0]*int(input()):
 e=input().split()
 t[e[0]]=e[2:]
 for i in e[2:]:p[i]=e[0]
r=(set(t)-set(p)).pop()
p[r]='-1'
q(r,0)
for i in sorted(map(int,t)):i=str(i);print('node',i+':','parent =',p[i]+',','depth =',d[i]+',','root,'if'-1'==p[i]else'internal node,'if t[i]else'leaf,',list(map(int,t[i])))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' q' (ID: 2335)
  → Token d'amorce (pas de prédiction)

Token 2: '(a' (ID: 6271)
  → Token d'amorce (pas de prédiction)

Token 3: ',h' (ID: 42751)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25285398960113525
    2. ',' → logprob: -2.0028538703918457
    3. ')' → logprob: -2.5028538703918457
    4. ':' → logprob: -5.502853870391846
    5. '[' → logprob: -6.627853870391846
    6. ',b' → logprob: -7.627853870391846
    7. 'u' → logprob: -9.127854347229004
    8. '=' → logprob: -9.252854347229004
    9. ',a' → logprob: -9.252854347229004
    10. '.' → logprob: -9.627854347229004

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.035417139530181885
    2. ')' → logprob: -3.660417079925537
    3. ',' → logprob: -4.785417079925537
    4. ',b' → logprob: -8.410417556762695
    5. '=' → logprob: -9.035417556762695
    6. ':' → logprob: -9.535417556762695
    7. ',a' → logprob: -10.285417556762695
    8. ',e' → logprob: -10.535417556762695
    9. ',p' → logprob: -10.660417556762695
    10. ',i' → logprob: -10.785417556762695

Token 5: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.356987863779068
    2. '   ' → logprob: -1.2319878339767456
    3. ' ' → logprob: -5.231987953186035
    4. ' :' → logprob: -7.356987953186035
    5. ':return' → logprob: -7.856987953186035
    6. '  ' → logprob: -8.356987953186035
    7. '_' → logprob: -8.356987953186035
    8. ''' → logprob: -8.356987953186035
    9. '    ' → logprob: -8.481987953186035
    10. ' return' → logprob: -8.606987953186035

Token 6: '[a' (ID: 32035)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0605238676071167
    2. '=' → logprob: -4.185523986816406
    3. ' e' → logprob: -4.310523986816406
    4. 'ef' → logprob: -4.685523986816406
    5. 'i' → logprob: -5.435523986816406
    6. 'o' → logprob: -5.685523986816406
    7. ' =' → logprob: -6.060523986816406
    8. ' ' → logprob: -6.185523986816406
    9. 'r' → logprob: -6.435523986816406
    10. ':' → logprob: -7.185523986816406

Token 7: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.052622731775045395
    2. ']+=' → logprob: -4.0526227951049805
    3. ']=' → logprob: -4.1776227951049805
    4. ' ]' → logprob: -4.8026227951049805
    5. '][' → logprob: -5.1776227951049805
    6. '[' → logprob: -6.3026227951049805
    7. '+' → logprob: -6.8026227951049805
    8. ']+' → logprob: -7.9276227951049805
    9. '[a' → logprob: -7.9276227951049805
    10. ' ][' → logprob: -8.42762279510498

Token 8: 'str' (ID: 689)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.10042858123779297
    2. '0' → logprob: -3.475428581237793
    3. ' h' → logprob: -3.475428581237793
    4. '{}' → logprob: -3.975428581237793
    5. '[]' → logprob: -5.225428581237793
    6. '1' → logprob: -5.225428581237793
    7. ' ' → logprob: -6.350428581237793
    8. ' []' → logprob: -7.225428581237793
    9. ' {}' → logprob: -7.225428581237793
    10. 'a' → logprob: -8.350428581237793

Token 9: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23714469373226166
    2. '[' → logprob: -1.6121447086334229
    3. '.' → logprob: -5.612144470214844
    4. '[a' → logprob: -6.237144470214844
    5. '[(' → logprob: -6.987144470214844
    6. '(a' → logprob: -6.987144470214844
    7. ')' → logprob: -7.237144470214844
    8. '[]' → logprob: -7.487144470214844
    9. '['' → logprob: -7.612144470214844
    10. ''' → logprob: -7.737144470214844

Token 10: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005059692775830626
    2. ' )' → logprob: -8.625506401062012
    3. '[a' → logprob: -8.875506401062012
    4. '[' → logprob: -9.000506401062012
    5. ')a' → logprob: -10.875506401062012
    6. ')+' → logprob: -11.250506401062012
    7. ']' → logprob: -11.750506401062012
    8. ')[' → logprob: -12.625506401062012
    9. ')])' → logprob: -12.625506401062012
    10. '))' → logprob: -12.875506401062012

Token 11: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2842741012573242
    2. '[' → logprob: -1.6592741012573242
    3. '
' → logprob: -1.6592741012573242
    4. '.' → logprob: -1.9092741012573242
    5. '\n' → logprob: -2.909274101257324
    6. ' ' → logprob: -3.534274101257324
    7. '\' → logprob: -3.909274101257324
    8. ')' → logprob: -3.909274101257324
    9. 'd' → logprob: -4.534274101257324
    10. '<|end|>' → logprob: -4.534274101257324

Token 12: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0035550505854189396
    2. ' i' → logprob: -5.753554821014404
    3. ' b' → logprob: -8.753555297851562
    4. 'i' → logprob: -10.128555297851562
    5. '  ' → logprob: -10.128555297851562
    6. ' d' → logprob: -10.253555297851562
    7. ' c' → logprob: -10.503555297851562
    8. ' e' → logprob: -11.128555297851562
    9. ' x' → logprob: -11.253555297851562
    10. ' a' → logprob: -11.753555297851562

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02666066214442253
    2. 'in' → logprob: -3.651660680770874
    3. ' ' → logprob: -8.651660919189453
    4. ',' → logprob: -10.151660919189453
    5. '	in' → logprob: -10.276660919189453
    6. ' ,' → logprob: -10.401660919189453
    7. '[' → logprob: -11.401660919189453
    8. ',in' → logprob: -11.401660919189453
    9. ' i' → logprob: -11.526660919189453
    10. '  ' → logprob: -11.651660919189453

Token 14: ' t' (ID: 260)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8000065684318542
    2. ' range' → logprob: -0.8000065684318542
    3. 'range' → logprob: -2.675006628036499
    4. ' a' → logprob: -3.800006628036499
    5. 'd' → logprob: -4.80000638961792
    6. 'a' → logprob: -7.30000638961792
    7. ' ' → logprob: -7.42500638961792
    8. ' h' → logprob: -8.300006866455078
    9. ' c' → logprob: -9.800006866455078
    10. '[' → logprob: -10.425006866455078

Token 15: '[a' (ID: 32035)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8301303386688232
    2. '[' → logprob: -1.2051303386688232
    3. ':' → logprob: -1.9551303386688232
    4. '.' → logprob: -2.4551303386688232
    5. ']' → logprob: -4.955130577087402
    6. '[a' → logprob: -5.080130577087402
    7. ' :' → logprob: -5.580130577087402
    8. 'in' → logprob: -5.705130577087402
    9. '[u' → logprob: -6.080130577087402
    10. '[in' → logprob: -6.580130577087402

Token 16: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3821423351764679
    2. ']' → logprob: -1.7571423053741455
    3. '])' → logprob: -2.1321423053741455
    4. ']):' → logprob: -3.8821423053741455
    5. '][' → logprob: -6.007142543792725
    6. ']+' → logprob: -6.632142543792725
    7. '].' → logprob: -7.632142543792725
    8. '],' → logprob: -7.757142543792725
    9. ' ]' → logprob: -8.382142066955566
    10. '):' → logprob: -8.632142066955566

Token 17: 'q' (ID: 80)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.33785831928253174
    2. ' ' → logprob: -2.587858200073242
    3. '    ' → logprob: -2.587858200073242
    4. ' if' → logprob: -2.712858200073242
    5. ' q' → logprob: -3.712858200073242
    6. 'd' → logprob: -3.837858200073242
    7. '       ' → logprob: -4.462858200073242
    8. '   ' → logprob: -5.462858200073242
    9. '        ' → logprob: -5.712858200073242
    10. ' 
' → logprob: -6.837858200073242

Token 18: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.5935689210891724
    2. '(a' → logprob: -1.0935689210891724
    3. '(' → logprob: -2.718568801879883
    4. '(d' → logprob: -3.093568801879883
    5. ' (' → logprob: -7.218568801879883
    6. '(u' → logprob: -8.968568801879883
    7. '(t' → logprob: -9.218568801879883
    8. '(c' → logprob: -9.468568801879883
    9. '(q' → logprob: -9.718568801879883
    10. ' d' → logprob: -10.093568801879883

Token 19: ',h' (ID: 42751)
  Prédit: ',h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',h' → logprob: -0.577660083770752
    2. ',' → logprob: -0.827660083770752
    3. ' ,' → logprob: -6.702660083770752
    4. ',d' → logprob: -8.827659606933594
    5. '(h' → logprob: -9.077659606933594
    6. '(' → logprob: -10.202659606933594
    7. ')' → logprob: -10.327659606933594
    8. ',(' → logprob: -10.452659606933594
    9. ' ' → logprob: -11.202659606933594
    10. ',q' → logprob: -11.327659606933594

Token 20: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05116766691207886
    2. '+' → logprob: -3.0511677265167236
    3. ' )' → logprob: -6.4261674880981445
    4. '*' → logprob: -7.4261674880981445
    5. '-' → logprob: -8.926167488098145
    6. ' +' → logprob: -9.551167488098145
    7. '+)' → logprob: -11.051167488098145
    8. ' ' → logprob: -11.051167488098145
    9. '))' → logprob: -11.301167488098145
    10. ');' → logprob: -11.426167488098145

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000919796759262681
    2. ' ' → logprob: -7.000919818878174
    3. ''' → logprob: -13.125919342041016
    4. '"' → logprob: -13.125919342041016
    5. '-' → logprob: -14.000919342041016
    6. '2' → logprob: -14.125919342041016
    7. '   ' → logprob: -14.875919342041016
    8. 'd' → logprob: -14.875919342041016
    9. '  ' → logprob: -15.000919342041016
    10. ')' → logprob: -15.125919342041016

Token 22: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. ' )' → logprob: -11.875009536743164
    3. ')
' → logprob: -13.750009536743164
    4. '))' → logprob: -14.250009536743164
    5. ')return' → logprob: -16.375009536743164
    6. '')' → logprob: -16.500009536743164
    7. '),' → logprob: -16.500009536743164
    8. '`)' → logprob: -16.750009536743164
    9. ')`' → logprob: -17.250009536743164
    10. ' ' → logprob: -17.625009536743164

Token 23: 't' (ID: 83)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: ',p' (ID: 14835)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7659931182861328
    2. '<|end|>' → logprob: -0.8909931182861328
    3. ' =' → logprob: -2.765993118286133
    4. '=' → logprob: -3.765993118286133
    5. '[a' → logprob: -4.015993118286133
    6. '.setdefault' → logprob: -5.015993118286133
    7. '.' → logprob: -5.015993118286133
    8. '<|end|>' → logprob: -6.640993118286133
    9. '[:]' → logprob: -7.015993118286133
    10. '['' → logprob: -7.015993118286133

Token 25: ',d' (ID: 26159)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10964400321245193
    2. ' =' → logprob: -2.6096439361572266
    3. '={}' → logprob: -3.8596439361572266
    4. ',' → logprob: -5.359643936157227
    5. '={'' → logprob: -6.359643936157227
    6. ',d' → logprob: -7.234643936157227
    7. '={' → logprob: -7.234643936157227
    8. '={"' → logprob: -8.109643936157227
    9. '={},' → logprob: -8.109643936157227
    10. '={}
' → logprob: -8.609643936157227

Token 26: '={' (ID: 1693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6371210813522339
    2. ' =' → logprob: -0.7621210813522339
    3. ',' → logprob: -6.012121200561523
    4. '={}' → logprob: -6.512121200561523
    5. '=[]' → logprob: -9.012121200561523
    6. '[' → logprob: -9.137121200561523
    7. ' ={' → logprob: -9.387121200561523
    8. '={' → logprob: -10.012121200561523
    9. '<|end|>' → logprob: -10.012121200561523
    10. ' =[' → logprob: -10.637121200561523

Token 27: '},{' (ID: 34684)
  Prédit: '},'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.0254211463034153
    2. '},{' → logprob: -4.400421142578125
    3. '{}' → logprob: -4.775421142578125
    4. '}' → logprob: -6.025421142578125
    5. '[]' → logprob: -7.150421142578125
    6. ' },' → logprob: -7.275421142578125
    7. ''' → logprob: -8.775421142578125
    8. '{' → logprob: -9.775421142578125
    9. '},"' → logprob: -9.775421142578125
    10. '{},' → logprob: -10.150421142578125

Token 28: '},' (ID: 4180)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.5592957139015198
    2. '},' → logprob: -1.684295654296875
    3. '},{' → logprob: -1.809295654296875
    4. '0' → logprob: -3.309295654296875
    5. '{}' → logprob: -4.309295654296875
    6. ' }' → logprob: -4.684295654296875
    7. ' },' → logprob: -5.309295654296875
    8. '}{' → logprob: -5.684295654296875
    9. ''},' → logprob: -5.809295654296875
    10. ' ' → logprob: -6.184295654296875

Token 29: '{}
' (ID: 34494)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.037997305393218994
    2. '{' → logprob: -3.537997245788574
    3. '[]' → logprob: -5.037997245788574
    4. ' {}' → logprob: -7.662997245788574
    5. '0' → logprob: -7.787997245788574
    6. ''' → logprob: -8.537997245788574
    7. '[' → logprob: -9.037997245788574
    8. '"' → logprob: -9.412997245788574
    9. '```' → logprob: -9.662997245788574
    10. '1' → logprob: -9.912997245788574

Token 30: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14084722101688385
    2. ' _' → logprob: -2.7658472061157227
    3. ' a' → logprob: -3.5158472061157227
    4. '_' → logprob: -4.015847206115723
    5. 'i' → logprob: -4.640847206115723
    6. ' ' → logprob: -5.390847206115723
    7. ' b' → logprob: -5.765847206115723
    8. 'a' → logprob: -6.515847206115723
    9. ' c' → logprob: -8.265847206115723
    10. ' x' → logprob: -8.265847206115723

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0037897464353591204
    2. 'in' → logprob: -5.628789901733398
    3. ' ' → logprob: -8.628789901733398
    4. 'import' → logprob: -12.628789901733398
    5. ' i' → logprob: -13.253789901733398
    6. '_' → logprob: -13.378789901733398
    7. '  ' → logprob: -13.503789901733398
    8. ' _' → logprob: -13.753789901733398
    9. 'range' → logprob: -14.378789901733398
    10. '```' → logprob: -15.378789901733398

Token 33: '[' (ID: 58)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38715243339538574
    2. 'range' → logprob: -1.1371524333953857
    3. '[' → logprob: -8.387152671813965
    4. '[]' → logprob: -11.387152671813965
    5. '0' → logprob: -11.512152671813965
    6. ' ' → logprob: -11.762152671813965
    7. 'ran' → logprob: -12.262152671813965
    8. ''' → logprob: -12.387152671813965
    9. '```' → logprob: -13.137152671813965
    10. ' ran' → logprob: -13.262152671813965

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1666296273469925
    2. 'range' → logprob: -2.0416295528411865
    3. '*' → logprob: -4.666629791259766
    4. 'input' → logprob: -4.791629791259766
    5. ' range' → logprob: -6.416629791259766
    6. 'None' → logprob: -7.166629791259766
    7. '1' → logprob: -7.291629791259766
    8. ' ' → logprob: -7.291629791259766
    9. '10' → logprob: -7.666629791259766
    10. ''' → logprob: -8.041629791259766

Token 35: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.13293881714344025
    2. ',' → logprob: -2.132938861846924
    3. ']' → logprob: -5.757938861846924
    4. '..' → logprob: -7.007938861846924
    5. ']<' → logprob: -7.007938861846924
    6. ':' → logprob: -7.757938861846924
    7. ']+' → logprob: -8.882938385009766
    8. ']:' → logprob: -9.382938385009766
    9. ' ' → logprob: -9.632938385009766
    10. ',
' → logprob: -9.757938385009766

Token 36: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4893479645252228
    2. '9' → logprob: -1.2393479347229004
    3. '5' → logprob: -3.4893479347229004
    4. '10' → logprob: -3.8643479347229004
    5. '8' → logprob: -4.1143479347229
    6. '7' → logprob: -4.4893479347229
    7. ' int' → logprob: -5.1143479347229
    8. '6' → logprob: -5.4893479347229
    9. '4' → logprob: -5.8643479347229
    10. '3' → logprob: -6.2393479347229

Token 37: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008675907738506794
    2. '(' → logprob: -4.758676052093506
    3. 'input' → logprob: -10.383675575256348
    4. ' input' → logprob: -10.758675575256348
    5. '(i' → logprob: -13.508675575256348
    6. '(
' → logprob: -13.758675575256348
    7. '(eval' → logprob: -13.758675575256348
    8. ' ' → logprob: -13.883675575256348
    9. '<input' → logprob: -14.133675575256348
    10. '```' → logprob: -14.258675575256348

Token 38: '()):
' (ID: 83536)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06282211095094681
    2. '()' → logprob: -2.812822103500366
    3. '(' → logprob: -7.187822341918945
    4. ' ())' → logprob: -10.812822341918945
    5. '('' → logprob: -11.187822341918945
    6. '()){' → logprob: -11.187822341918945
    7. '();)' → logprob: -11.812822341918945
    8. '():' → logprob: -11.937822341918945
    9. '()),' → logprob: -12.062822341918945
    10. '()))' → logprob: -12.062822341918945

Token 39: ' e' (ID: 319)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5266776084899902
    2. ' a' → logprob: -0.9016776084899902
    3. 'x' → logprob: -6.40167760848999
    4. ' x' → logprob: -7.27667760848999
    5. 's' → logprob: -8.526678085327148
    6. ' n' → logprob: -8.901678085327148
    7. 'k' → logprob: -8.901678085327148
    8. 'n' → logprob: -8.901678085327148
    9. 'e' → logprob: -9.151678085327148
    10. 'b' → logprob: -9.526678085327148

Token 40: '=input' (ID: 87911)
  Prédit: '=input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=input' → logprob: -0.5531644225120544
    2. '=' → logprob: -0.9281644225120544
    3. ' =' → logprob: -3.803164482116699
    4. '=list' → logprob: -6.178164482116699
    5. '=e' → logprob: -6.303164482116699
    6. ',e' → logprob: -7.178164482116699
    7. ',' → logprob: -7.303164482116699
    8. '=str' → logprob: -7.303164482116699
    9. '=int' → logprob: -8.1781644821167
    10. ',input' → logprob: -8.6781644821167

Token 41: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011560667306184769
    2. '().' → logprob: -4.511560440063477
    3. '()>' → logprob: -9.136560440063477
    4. '())' → logprob: -9.511560440063477
    5. '();' → logprob: -9.636560440063477
    6. '()+' → logprob: -9.886560440063477
    7. '()
' → logprob: -10.136560440063477
    8. ' ()' → logprob: -10.386560440063477
    9. '()`' → logprob: -11.011560440063477
    10. '`()' → logprob: -11.011560440063477

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001745775662129745
    2. ' split' → logprob: -9.000174522399902
    3. 'spl' → logprob: -11.125174522399902
    4. 'strip' → logprob: -11.250174522399902
    5. 'r' → logprob: -11.375174522399902
    6. 'rstrip' → logprob: -12.125174522399902
    7. 'rs' → logprob: -12.750174522399902
    8. 's' → logprob: -13.500174522399902
    9. 'plit' → logprob: -13.625174522399902
    10. 'replace' → logprob: -14.875174522399902

Token 43: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003943304473068565
    2. '(' → logprob: -8.375393867492676
    3. '('' → logprob: -9.250393867492676
    4. '()>' → logprob: -11.125393867492676
    5. ' ()' → logprob: -11.500393867492676
    6. '();' → logprob: -11.875393867492676
    7. '()[' → logprob: -11.875393867492676
    8. '()]' → logprob: -12.125393867492676
    9. '()=>' → logprob: -12.375393867492676
    10. '())' → logprob: -12.750393867492676

Token 44: ' t' (ID: 260)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.381489872932434
    2. 'a' → logprob: -2.0064897537231445
    3. 'p' → logprob: -2.2564897537231445
    4. ' p' → logprob: -2.3814897537231445
    5. '<|end|>' → logprob: -2.5064897537231445
    6. ' a' → logprob: -2.6314897537231445
    7. ' if' → logprob: -2.6314897537231445
    8. 't' → logprob: -2.8814897537231445
    9. ' e' → logprob: -2.8814897537231445
    10. 's' → logprob: -3.1314897537231445

Token 45: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.18008896708488464
    2. '.setdefault' → logprob: -1.805088996887207
    3. '.' → logprob: -8.805088996887207
    4. '[' → logprob: -8.930088996887207
    5. '[a' → logprob: -11.055088996887207
    6. 'e' → logprob: -11.055088996887207
    7. '=e' → logprob: -11.555088996887207
    8. '.update' → logprob: -12.430088996887207
    9. ' [' → logprob: -12.680088996887207
    10. ' .' → logprob: -13.180088996887207

Token 46: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.1424973713001236e-05
    2. '0' → logprob: -11.250031471252441
    3. '1' → logprob: -11.625031471252441
    4. '[-' → logprob: -13.000031471252441
    5. ' [' → logprob: -13.250031471252441
    6. '```' → logprob: -13.375031471252441
    7. '[
' → logprob: -13.625031471252441
    8. '(' → logprob: -14.375031471252441
    9. '.pop' → logprob: -14.750031471252441
    10. ' ' → logprob: -15.500031471252441

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00783031526952982
    2. '1' → logprob: -5.0078301429748535
    3. '[' → logprob: -7.3828301429748535
    4. ' ' → logprob: -7.8828301429748535
    5. '-' → logprob: -9.632830619812012
    6. '2' → logprob: -10.882830619812012
    7. '][' → logprob: -11.507830619812012
    8. '[-' → logprob: -12.507830619812012
    9. '```' → logprob: -12.695330619812012
    10. '   ' → logprob: -12.695330619812012

Token 48: ']]=' (ID: 192551)
  Prédit: ']]='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]=' → logprob: -0.05734824016690254
    2. ']]' → logprob: -3.1823482513427734
    3. ']].' → logprob: -5.057348251342773
    4. ']' → logprob: -5.557348251342773
    5. ']=' → logprob: -6.307348251342773
    6. ']][' → logprob: -7.182348251342773
    7. '].' → logprob: -7.557348251342773
    8. ']+=' → logprob: -8.182348251342773
    9. '[' → logprob: -8.432348251342773
    10. '][' → logprob: -8.932348251342773

Token 49: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.005516784731298685
    2. '[]' → logprob: -5.25551700592041
    3. '[e' → logprob: -9.00551700592041
    4. '[' → logprob: -9.38051700592041
    5. ' e' → logprob: -9.75551700592041
    6. 'set' → logprob: -11.75551700592041
    7. ' []' → logprob: -12.88051700592041
    8. 'list' → logprob: -13.25551700592041
    9. '{}' → logprob: -13.75551700592041
    10. '[]}' → logprob: -13.75551700592041

Token 50: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.456358823925257e-05
    2. '1' → logprob: -10.000064849853516
    3. ' ' → logprob: -11.625064849853516
    4. ' [' → logprob: -12.500064849853516
    5. '```' → logprob: -12.750064849853516
    6. '<|end|>' → logprob: -13.625064849853516
    7. '[]' → logprob: -14.000064849853516
    8. '2' → logprob: -15.000064849853516
    9. 'e' → logprob: -16.125064849853516
    10. '(' → logprob: -16.375064849853516

Token 51: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020687280222773552
    2. '2' → logprob: -3.8956873416900635
    3. ' ' → logprob: -9.395687103271484
    4. '3' → logprob: -10.270687103271484
    5. '[' → logprob: -10.645687103271484
    6. '4' → logprob: -14.395687103271484
    7. '   ' → logprob: -14.458187103271484
    8. '```' → logprob: -14.458187103271484
    9. '5' → logprob: -15.208187103271484
    10. '  ' → logprob: -15.208187103271484

Token 52: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.32502880692481995
    2. ']' → logprob: -2.575028896331787
    3. ':].' → logprob: -2.825028896331787
    4. '.split' → logprob: -2.950028896331787
    5. ':' → logprob: -3.575028896331787
    6. ':],' → logprob: -3.575028896331787
    7. '].' → logprob: -4.075028896331787
    8. '],' → logprob: -6.075028896331787
    9. '[' → logprob: -6.200028896331787
    10. '])' → logprob: -6.200028896331787

Token 53: ' for' (ID: 395)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.0076254382729530334
    2. ' for' → logprob: -5.382625579833984
    3. 'p' → logprob: -6.882625579833984
    4. '<|end|>' → logprob: -7.382625579833984
    5. ' ' → logprob: -7.757625579833984
    6. ' d' → logprob: -8.007625579833984
    7. ',p' → logprob: -8.757625579833984
    8. ' if' → logprob: -9.507625579833984
    9. ' 
' → logprob: -9.507625579833984
    10. 'for' → logprob: -9.632625579833984

Token 54: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07923498749732971
    2. 'i' → logprob: -2.829235076904297
    3. 'v' → logprob: -4.954235076904297
    4. ' x' → logprob: -5.454235076904297
    5. 'c' → logprob: -6.204235076904297
    6. 'f' → logprob: -7.204235076904297
    7. 'u' → logprob: -7.329235076904297
    8. ' i' → logprob: -7.579235076904297
    9. 'b' → logprob: -7.829235076904297
    10. 'a' → logprob: -8.204235076904297

Token 55: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6329616904258728
    2. ' in' → logprob: -0.7579616904258728
    3. ' ' → logprob: -8.50796127319336
    4. ',in' → logprob: -10.00796127319336
    5. ',' → logprob: -10.63296127319336
    6. 'e' → logprob: -10.75796127319336
    7. ',e' → logprob: -11.13296127319336
    8. ',n' → logprob: -11.63296127319336
    9. ',p' → logprob: -11.75796127319336
    10. '1' → logprob: -11.88296127319336

Token 56: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.23044036328792572
    2. ' e' → logprob: -1.605440378189087
    3. ' range' → logprob: -5.855440139770508
    4. 'range' → logprob: -6.230440139770508
    5. 'p' → logprob: -9.230440139770508
    6. ' p' → logprob: -10.105440139770508
    7. ' ' → logprob: -10.855440139770508
    8. '[' → logprob: -12.105440139770508
    9. 't' → logprob: -12.480440139770508
    10. 'd' → logprob: -13.230440139770508

Token 57: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.034592388459714e-06
    2. ':' → logprob: -13.000005722045898
    3. '(' → logprob: -14.125005722045898
    4. ' ' → logprob: -14.375005722045898
    5. ' [' → logprob: -14.375005722045898
    6. '[::-' → logprob: -15.000005722045898
    7. '1' → logprob: -15.375005722045898
    8. '[
' → logprob: -15.625005722045898
    9. 'range' → logprob: -15.750005722045898
    10. '[-' → logprob: -16.0000057220459

Token 58: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6176127791404724
    2. '2' → logprob: -0.9926127791404724
    3. '[' → logprob: -2.742612838745117
    4. '3' → logprob: -4.117612838745117
    5. ' ' → logprob: -4.867612838745117
    6. '(' → logprob: -6.742612838745117
    7. 'range' → logprob: -7.992612838745117
    8. '0' → logprob: -9.367612838745117
    9. '   ' → logprob: -9.867612838745117
    10. '```' → logprob: -10.867612838745117

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006338030099868774
    2. ']:' → logprob: -5.131338119506836
    3. ':]' → logprob: -8.506338119506836
    4. ' :' → logprob: -9.506338119506836
    5. ' ' → logprob: -10.131338119506836
    6. ':],' → logprob: -10.631338119506836
    7. '():' → logprob: -10.756338119506836
    8. '):' → logprob: -11.631338119506836
    9. '']:' → logprob: -12.881338119506836
    10. ':e' → logprob: -13.006338119506836

Token 60: ']:' (ID: 12433)
  Prédit: ':p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':p' → logprob: -0.13774733245372772
    2. ':' → logprob: -2.262747287750244
    3. ' p' → logprob: -4.387747287750244
    4. ']:' → logprob: -5.387747287750244
    5. 'p' → logprob: -5.512747287750244
    6. ' :' → logprob: -5.887747287750244
    7. ']' → logprob: -8.137747764587402
    8. ':
' → logprob: -9.137747764587402
    9. ' ' → logprob: -9.637747764587402
    10. ',p' → logprob: -9.762747764587402

Token 61: 'p' (ID: 79)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3132782578468323
    2. 'p' → logprob: -1.3132781982421875
    3. ' ' → logprob: -11.313278198242188
    4. '	p' → logprob: -13.438278198242188
    5. '   ' → logprob: -14.688278198242188
    6. '_p' → logprob: -14.938278198242188
    7. 't' → logprob: -15.063278198242188
    8. ',p' → logprob: -15.063278198242188
    9. ' 
' → logprob: -15.188278198242188
    10. 'd' → logprob: -15.438278198242188

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001431114797014743
    2. '.setdefault' → logprob: -8.875143051147461
    3. 'i' → logprob: -13.375143051147461
    4. '[p' → logprob: -13.750143051147461
    5. '[' → logprob: -16.00014305114746
    6. '.update' → logprob: -16.12514305114746
    7. ' [' → logprob: -16.25014305114746
    8. '[a' → logprob: -16.62514305114746
    9. '[str' → logprob: -17.12514305114746
    10. '.__' → logprob: -17.25014305114746

Token 63: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.0002112886286340654
    2. ']' → logprob: -8.500211715698242
    3. ' ]' → logprob: -12.375211715698242
    4. '=' → logprob: -13.250211715698242
    5. '=e' → logprob: -14.500211715698242
    6. '"]=' → logprob: -15.000211715698242
    7. ']+=' → logprob: -15.125211715698242
    8. '']=' → logprob: -15.750211715698242
    9. '=i' → logprob: -16.000211715698242
    10. ']=(' → logprob: -16.500211715698242

Token 64: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0007101670489646494
    2. ' e' → logprob: -7.2507100105285645
    3. ' ' → logprob: -15.625710487365723
    4. '	e' → logprob: -16.750709533691406
    5. '   ' → logprob: -18.250709533691406
    6. ''e' → logprob: -18.500709533691406
    7. ')e' → logprob: -19.125709533691406
    8. '  ' → logprob: -19.750709533691406
    9. '%e' → logprob: -19.875709533691406
    10. 'i' → logprob: -19.875709533691406

Token 65: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004497381451074034
    2. '[' → logprob: -7.7504496574401855
    3. ' ' → logprob: -10.875450134277344
    4. '   ' → logprob: -16.500450134277344
    5. '1' → logprob: -16.625450134277344
    6. '<|end|>' → logprob: -17.875450134277344
    7. '۰' → logprob: -18.125450134277344
    8. '  ' → logprob: -18.250450134277344
    9. '(' → logprob: -18.250450134277344
    10. '.' → logprob: -18.625450134277344

Token 67: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.582717776298523
    2. '<|end|>' → logprob: -0.832717776298523
    3. ']' → logprob: -5.7077178955078125
    4. '}' → logprob: -6.8327178955078125
    5. '
' → logprob: -6.8327178955078125
    6. '<|end|>' → logprob: -7.0827178955078125
    7. ' )' → logprob: -8.457717895507812
    8. ')
' → logprob: -9.707717895507812
    9. '```' → logprob: -9.707717895507812
    10. '）' → logprob: -11.457717895507812

Token 68: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01576193794608116
    2. ' r' → logprob: -4.890761852264404
    3. 'a' → logprob: -6.390761852264404
    4. 'root' → logprob: -6.390761852264404
    5. 'v' → logprob: -6.765761852264404
    6. 's' → logprob: -6.890761852264404
    7. 'u' → logprob: -7.015761852264404
    8. 'for' → logprob: -7.265761852264404
    9. 'f' → logprob: -8.890762329101562
    10. ' root' → logprob: -8.890762329101562

Token 69: '=(' (ID: 9893)
  Prédit: 'oot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oot' → logprob: -0.6135985851287842
    2. '=' → logprob: -0.8635985851287842
    3. 'e' → logprob: -4.488598823547363
    4. '=[]' → logprob: -4.488598823547363
    5. '=root' → logprob: -5.613598823547363
    6. '={}' → logprob: -5.863598823547363
    7. '=""' → logprob: -6.363598823547363
    8. '=''' → logprob: -6.738598823547363
    9. '=[]
' → logprob: -6.863598823547363
    10. '='' → logprob: -7.488598823547363

Token 70: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.21179653704166412
    2. ' set' → logprob: -2.586796522140503
    3. '[' → logprob: -3.961796522140503
    4. ' [' → logprob: -4.461796760559082
    5. '{' → logprob: -4.586796760559082
    6. 'e' → logprob: -4.836796760559082
    7. 's' → logprob: -4.961796760559082
    8. 'next' → logprob: -5.086796760559082
    9. 'input' → logprob: -5.211796760559082
    10. 'list' → logprob: -5.336796760559082

Token 71: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.011644343845546246
    2. '(p' → logprob: -4.76164436340332
    3. '(d' → logprob: -6.76164436340332
    4. ' (' → logprob: -7.13664436340332
    5. 't' → logprob: -7.26164436340332
    6. ' t' → logprob: -8.01164436340332
    7. '(' → logprob: -11.38664436340332
    8. ')t' → logprob: -11.88664436340332
    9. 'd' → logprob: -12.13664436340332
    10. ' d' → logprob: -12.76164436340332

Token 72: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.32905909419059753
    2. '.keys' → logprob: -1.45405912399292
    3. ')' → logprob: -3.32905912399292
    4. ' )' → logprob: -5.20405912399292
    5. ')t' → logprob: -6.45405912399292
    6. 't' → logprob: -6.95405912399292
    7. ')-(' → logprob: -7.20405912399292
    8. ')+' → logprob: -7.32905912399292
    9. ').' → logprob: -7.45405912399292
    10. '[t' → logprob: -8.329058647155762

Token 73: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.033740557730197906
    2. ' set' → logprob: -3.408740520477295
    3. 'p' → logprob: -9.908740997314453
    4. '{' → logprob: -10.658740997314453
    5. ' p' → logprob: -12.033740997314453
    6. '=set' → logprob: -12.033740997314453
    7. '(set' → logprob: -12.658740997314453
    8. ')set' → logprob: -12.658740997314453
    9. 's' → logprob: -13.533740997314453
    10. ' {' → logprob: -14.158740997314453

Token 74: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.13284644484519958
    2. ' p' → logprob: -2.5078463554382324
    3. 'p' → logprob: -3.2578463554382324
    4. ' (' → logprob: -6.007846355438232
    5. ' d' → logprob: -7.132846355438232
    6. '(d' → logprob: -7.757846355438232
    7. 'd' → logprob: -7.882846355438232
    8. '(' → logprob: -7.882846355438232
    9. '(
' → logprob: -10.75784683227539
    10. ')' → logprob: -12.75784683227539

Token 75: ')).' (ID: 8784)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0022426776122301817
    2. ')' → logprob: -6.377242565155029
    3. ')).' → logprob: -8.627243041992188
    4. '))[' → logprob: -9.252243041992188
    5. '))-' → logprob: -9.377243041992188
    6. ')))' → logprob: -9.627243041992188
    7. ' ))' → logprob: -10.002243041992188
    8. '()))' → logprob: -10.752243041992188
    9. '))+' → logprob: -11.002243041992188
    10. '))*' → logprob: -11.127243041992188

Token 76: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -2.5776860184123507e-06
    2. '.pop' → logprob: -13.12500286102295
    3. 'copy' → logprob: -15.25000286102295
    4. 'po' → logprob: -16.125001907348633
    5. ' pop' → logprob: -16.875001907348633
    6. 'next' → logprob: -17.000001907348633
    7. 'Pop' → logprob: -17.625001907348633
    8. 'p' → logprob: -18.000001907348633
    9. '_pop' → logprob: -18.000001907348633
    10. '	pop' → logprob: -18.000001907348633

Token 77: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06375758349895477
    2. '()' → logprob: -2.8137576580047607
    3. '(
' → logprob: -6.438757419586182
    4. '(

' → logprob: -9.43875789642334
    5. '('' → logprob: -10.43875789642334
    6. '()
' → logprob: -10.68875789642334
    7. ' (' → logprob: -11.18875789642334
    8. ' ()' → logprob: -11.68875789642334
    9. '<|end|>' → logprob: -11.93875789642334
    10. ')' → logprob: -11.93875789642334

Token 78: 'p' (ID: 79)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00018768629524856806
    2. ' q' → logprob: -8.625187873840332
    3. '?q' → logprob: -12.500187873840332
    4. 'print' → logprob: -14.000187873840332
    5. '
' → logprob: -14.000187873840332
    6. 'for' → logprob: -14.375187873840332
    7. ' for' → logprob: -14.500187873840332
    8. '(q' → logprob: -14.875187873840332
    9. '[q' → logprob: -15.375187873840332
    10. 'd' → logprob: -15.875187873840332

Token 79: '[r' (ID: 33265)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ']='' (ID: 69193)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.06420642882585526
    2. ']' → logprob: -2.81420636177063
    3. ']=-' → logprob: -6.439206600189209
    4. ']="' → logprob: -8.31420612335205
    5. ']='' → logprob: -8.43920612335205
    6. ' ]' → logprob: -10.18920612335205
    7. ']+=' → logprob: -10.56420612335205
    8. ']={' → logprob: -10.56420612335205
    9. ']=(' → logprob: -10.93920612335205
    10. ')=' → logprob: -11.06420612335205

Token 81: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6244726181030273
    2. ''' → logprob: -0.9994726181030273
    3. '0' → logprob: -2.4994726181030273
    4. 'None' → logprob: -4.624472618103027
    5. '"' → logprob: -6.999472618103027
    6. '#' → logprob: -7.374472618103027
    7. ''-' → logprob: -7.374472618103027
    8. ' ' → logprob: -8.249472618103027
    9. '*' → logprob: -8.249472618103027
    10. 'none' → logprob: -8.374472618103027

Token 82: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00020818933262489736
    2. ''
' → logprob: -8.500207901000977
    3. ' '' → logprob: -13.250207901000977
    4. ''
' → logprob: -13.875207901000977
    5. '1' → logprob: -14.250207901000977
    6. '"' → logprob: -14.250207901000977
    7. '0' → logprob: -15.125207901000977
    8. ''

' → logprob: -16.250207901000977
    9. '')' → logprob: -17.000207901000977
    10. '
' → logprob: -17.125207901000977

Token 83: ''
' (ID: 2207)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02598627656698227
    2. '<|end|>' → logprob: -4.525986194610596
    3. ')' → logprob: -5.650986194610596
    4. '
' → logprob: -5.900986194610596
    5. '\n' → logprob: -5.900986194610596
    6. ''' → logprob: -6.275986194610596
    7. ''
' → logprob: -6.900986194610596
    8. '')' → logprob: -7.525986194610596
    9. ')
' → logprob: -7.525986194610596
    10. ' 
' → logprob: -7.900986194610596

Token 84: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.001762882457114756
    2. 'for' → logprob: -6.501762866973877
    3. ' for' → logprob: -9.376763343811035
    4. 'print' → logprob: -9.501763343811035
    5. ' q' → logprob: -10.501763343811035
    6. '\n' → logprob: -10.626763343811035
    7. '
' → logprob: -10.751763343811035
    8. 'n' → logprob: -12.001763343811035
    9. ')' → logprob: -12.626763343811035
    10. 'f' → logprob: -12.751763343811035

Token 85: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0012947621289640665
    2. '(' → logprob: -6.8762946128845215
    3. ' (' → logprob: -8.25129508972168
    4. '(root' → logprob: -14.50129508972168
    5. '<|end|>' → logprob: -16.25129508972168
    6. '(
' → logprob: -16.75129508972168
    7. '(s' → logprob: -16.87629508972168
    8. '(re' → logprob: -16.87629508972168
    9. ' ' → logprob: -16.87629508972168
    10. '(q' → logprob: -17.00129508972168

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015461683506146073
    2. ' ,' → logprob: -6.501546382904053
    3. '0' → logprob: -10.126545906066895
    4. ' ' → logprob: -13.001545906066895
    5. ',
' → logprob: -14.001545906066895
    6. '1' → logprob: -15.001545906066895
    7. ')' → logprob: -15.126545906066895
    8. '，' → logprob: -16.87654685974121
    9. ',-' → logprob: -17.12654685974121
    10. ' ,
' → logprob: -17.25154685974121

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005674490821547806
    2. ' ' → logprob: -8.000567436218262
    3. '1' → logprob: -8.375567436218262
    4. '-' → logprob: -14.375567436218262
    5. ')' → logprob: -15.000567436218262
    6. '۰' → logprob: -15.563067436218262
    7. '2' → logprob: -15.750567436218262
    8. '00' → logprob: -16.625568389892578
    9. '000' → logprob: -17.125568389892578
    10. '01' → logprob: -17.313068389892578

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.300083648762666e-05
    2. ')
' → logprob: -10.500053405761719
    3. ' )' → logprob: -10.625053405761719
    4. ')return' → logprob: -14.750053405761719
    5. '))' → logprob: -15.875053405761719
    6. ')

' → logprob: -16.37505340576172
    7. ')#' → logprob: -16.50005340576172
    8. ')
' → logprob: -17.12505340576172
    9. ')`' → logprob: -17.25005340576172
    10. ')a' → logprob: -17.25005340576172

Token 89: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39184072613716125
    2. 'for' → logprob: -1.1418406963348389
    3. ' for' → logprob: -5.891840934753418
    4. 'n' → logprob: -7.891840934753418
    5. ' print' → logprob: -8.016840934753418
    6. 'p' → logprob: -8.266840934753418
    7. 'r' → logprob: -8.266840934753418
    8. '#' → logprob: -8.641840934753418
    9. 'a' → logprob: -9.391840934753418
    10. ')' → logprob: -9.391840934753418

Token 90: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18439330160617828
    2. 'i' → logprob: -2.0593934059143066
    3. ' a' → logprob: -4.184393405914307
    4. ' k' → logprob: -5.059393405914307
    5. 'a' → logprob: -5.059393405914307
    6. ' e' → logprob: -5.559393405914307
    7. ' x' → logprob: -6.309393405914307
    8. 'e' → logprob: -6.309393405914307
    9. 'k' → logprob: -6.559393405914307
    10. ' d' → logprob: -7.309393405914307

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42639198899269104
    2. 'in' → logprob: -1.3013919591903687
    3. ' d' → logprob: -3.301392078399658
    4. ' sorted' → logprob: -3.676392078399658
    5. 'sorted' → logprob: -5.051392078399658
    6. 'd' → logprob: -5.176392078399658
    7. ' n' → logprob: -9.0513916015625
    8. ' t' → logprob: -9.1763916015625
    9. ' i' → logprob: -9.5513916015625
    10. 'range' → logprob: -9.5513916015625

Token 92: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.1970237493515015
    2. 'd' → logprob: -1.4470237493515015
    3. ' sorted' → logprob: -1.5720237493515015
    4. ' d' → logprob: -1.5720237493515015
    5. ' p' → logprob: -3.822023868560791
    6. 'p' → logprob: -4.197023868560791
    7. 't' → logprob: -5.447023868560791
    8. ' t' → logprob: -5.697023868560791
    9. ' range' → logprob: -6.947023868560791
    10. 'range' → logprob: -7.197023868560791

Token 93: '(map' (ID: 16946)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0028953328728675842
    2. '(' → logprob: -5.877895355224609
    3. ' d' → logprob: -10.00289535522461
    4. ' (' → logprob: -10.87789535522461
    5. '(p' → logprob: -10.87789535522461
    6. '(
' → logprob: -12.50289535522461
    7. 'd' → logprob: -13.62789535522461
    8. '(t' → logprob: -13.75289535522461
    9. '(r' → logprob: -14.75289535522461
    10. '(list' → logprob: -15.75289535522461

Token 94: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16869762539863586
    2. '(d' → logprob: -1.9186975955963135
    3. '(str' → logprob: -4.918697834014893
    4. '(' → logprob: -7.418697834014893
    5. ' int' → logprob: -8.543697357177734
    6. 'int' → logprob: -8.793697357177734
    7. ' d' → logprob: -9.793697357177734
    8. ' (' → logprob: -10.293697357177734
    9. 'd' → logprob: -10.418697357177734
    10. 'str' → logprob: -10.793697357177734

Token 95: ',t' (ID: 26927)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.03974045440554619
    2. ' (' → logprob: -3.289740562438965
    3. '(' → logprob: -6.789740562438965
    4. ',' → logprob: -8.539740562438965
    5. ',d' → logprob: -8.539740562438965
    6. ' d' → logprob: -9.164740562438965
    7. ' ,' → logprob: -10.039740562438965
    8. 'd' → logprob: -12.039740562438965
    9. ')' → logprob: -12.039740562438965
    10. ')(' → logprob: -12.289740562438965

Token 96: ')):' (ID: 92037)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.8321980834007263
    2. '[r' → logprob: -1.582198143005371
    3. '.keys' → logprob: -1.707198143005371
    4. '[p' → logprob: -2.082198143005371
    5. '))' → logprob: -3.082198143005371
    6. '[key' → logprob: -6.707198143005371
    7. ')' → logprob: -6.707198143005371
    8. ')))' → logprob: -6.832198143005371
    9. '.get' → logprob: -7.707198143005371
    10. '[d' → logprob: -7.832198143005371

Token 97: 'i' (ID: 72)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.026369739323854446
    2. 'print' → logprob: -3.65136981010437
    3. '   ' → logprob: -10.65137004852295
    4. '	print' → logprob: -10.65137004852295
    5. '```' → logprob: -12.27637004852295
    6. ' 
' → logprob: -12.40137004852295
    7. '<|end|>' → logprob: -12.52637004852295
    8. '#print' → logprob: -13.40137004852295
    9. ' ' → logprob: -13.65137004852295
    10. '    
' → logprob: -13.77637004852295

Token 98: '=str' (ID: 36106)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7868424654006958
    2. ' print' → logprob: -1.4118424654006958
    3. ',' → logprob: -2.1618423461914062
    4. '=' → logprob: -2.9118423461914062
    5. ' in' → logprob: -3.2868423461914062
    6. ' =' → logprob: -3.5368423461914062
    7. ' ' → logprob: -4.411842346191406
    8. ')' → logprob: -5.036842346191406
    9. ':' → logprob: -5.286842346191406
    10. '=int' → logprob: -5.286842346191406

Token 99: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08096164464950562
    2. '(i' → logprob: -2.5809617042541504
    3. ' i' → logprob: -6.20596170425415
    4. '(' → logprob: -10.330961227416992
    5. ' ' → logprob: -11.455961227416992
    6. 't' → logprob: -12.455961227416992
    7. '_i' → logprob: -13.955961227416992
    8. '	i' → logprob: -14.205961227416992
    9. '[i' → logprob: -14.330961227416992
    10. ',i' → logprob: -14.705961227416992

Token 100: ');' (ID: 2245)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38398900628089905
    2. ')' → logprob: -1.2589889764785767
    3. ' print' → logprob: -4.633988857269287
    4. ' )
' → logprob: -4.633988857269287
    5. 'print' → logprob: -5.008988857269287
    6. ' )' → logprob: -5.758988857269287
    7. ';' → logprob: -6.258988857269287
    8. ');' → logprob: -6.508988857269287
    9. '
' → logprob: -7.008988857269287
    10. ')
' → logprob: -7.383988857269287

Token 101: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12693114578723907
    2. ' print' → logprob: -2.1269311904907227
    3. 'pr' → logprob: -13.751931190490723
    4. '	print' → logprob: -14.501931190490723
    5. 'for' → logprob: -14.751931190490723
    6. ' for' → logprob: -15.126931190490723
    7. 'if' → logprob: -15.376931190490723
    8. 'import' → logprob: -15.626931190490723
    9. ' if' → logprob: -16.001930236816406
    10. 'd' → logprob: -16.626930236816406

Token 102: '('' (ID: 706)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6784897446632385
    2. '(d' → logprob: -0.8034897446632385
    3. '(p' → logprob: -3.8034896850585938
    4. '(f' → logprob: -4.053489685058594
    5. '(' → logprob: -5.428489685058594
    6. 'd' → logprob: -8.553489685058594
    7. ' d' → logprob: -9.053489685058594
    8. ' (' → logprob: -9.428489685058594
    9. '(a' → logprob: -9.553489685058594
    10. '('{}' → logprob: -9.678489685058594

Token 103: 'node' (ID: 7005)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.045334137976169586
    2. ' i' → logprob: -3.2953341007232666
    3. 'p' → logprob: -5.420334339141846
    4. 'd' → logprob: -6.545334339141846
    5. ' p' → logprob: -7.545334339141846
    6. 'f' → logprob: -8.045333862304688
    7. ' d' → logprob: -8.670333862304688
    8. ' ' → logprob: -9.670333862304688
    9. ''' → logprob: -9.670333862304688
    10. ' '{}' → logprob: -10.045333862304688

Token 104: '',' (ID: 787)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.21681812405586243
    2. ' ,' → logprob: -2.09181809425354
    3. ' ' → logprob: -3.34181809425354
    4. ',' → logprob: -4.841818332672119
    5. ' {}' → logprob: -5.341818332672119
    6. ' :' → logprob: -5.466818332672119
    7. ' {},' → logprob: -5.466818332672119
    8. ' =' → logprob: -5.966818332672119
    9. ' id' → logprob: -6.216818332672119
    10. ' {' → logprob: -6.466818332672119

Token 105: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02082657441496849
    2. ' i' → logprob: -3.895826578140259
    3. 'd' → logprob: -8.39582633972168
    4. 'p' → logprob: -10.64582633972168
    5. ' d' → logprob: -10.64582633972168
    6. ' ' → logprob: -12.14582633972168
    7. ' p' → logprob: -12.89582633972168
    8. 'int' → logprob: -13.27082633972168
    9. '   ' → logprob: -14.89582633972168
    10. '  ' → logprob: -15.02082633972168

Token 106: '+' (ID: 10)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.8132488131523132
    2. ','' → logprob: -1.188248872756958
    3. ',' → logprob: -1.813248872756958
    4. ',end' → logprob: -3.313248872756958
    5. ',d' → logprob: -3.438248872756958
    6. ',f' → logprob: -5.688248634338379
    7. ' ,' → logprob: -5.813248634338379
    8. '',' → logprob: -5.938248634338379
    9. ' p' → logprob: -6.188248634338379
    10. ' ,'' → logprob: -6.563248634338379

Token 107: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.01975911483168602
    2. '":' → logprob: -5.019759178161621
    3. ' ':' → logprob: -5.644759178161621
    4. ''' → logprob: -5.644759178161621
    5. '':'' → logprob: -5.644759178161621
    6. '',' → logprob: -6.394759178161621
    7. '','' → logprob: -9.144759178161621
    8. ''s' → logprob: -9.144759178161621
    9. ' ':'' → logprob: -9.394759178161621
    10. ''d' → logprob: -9.644759178161621

Token 108: '','' (ID: 4074)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.45319193601608276
    2. ''' → logprob: -1.2031919956207275
    3. ' '' → logprob: -3.8281919956207275
    4. ''d' → logprob: -4.328191757202148
    5. 'd' → logprob: -4.453191757202148
    6. ' p' → logprob: -4.703191757202148
    7. ' f' → logprob: -5.953191757202148
    8. ' ' → logprob: -6.828191757202148
    9. ' depth' → logprob: -7.078191757202148
    10. 'depth' → logprob: -7.703191757202148

Token 109: 'parent' (ID: 4903)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4991750717163086
    2. ' d' → logprob: -0.9991750717163086
    3. 'depth' → logprob: -4.374175071716309
    4. ''d' → logprob: -4.874175071716309
    5. ' depth' → logprob: -6.749175071716309
    6. ''' → logprob: -6.874175071716309
    7. 'int' → logprob: -7.499175071716309
    8. 'p' → logprob: -7.499175071716309
    9. ' p' → logprob: -7.999175071716309
    10. ' '' → logprob: -8.499175071716309

Token 110: ' =' (ID: 314)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.030523383989930153
    2. 'p' → logprob: -3.9055233001708984
    3. ' p' → logprob: -5.405523300170898
    4. ''+' → logprob: -6.280523300170898
    5. ''' → logprob: -6.655523300170898
    6. 'is' → logprob: -7.530523300170898
    7. 'd' → logprob: -7.655523300170898
    8. '=',' → logprob: -7.655523300170898
    9. '=p' → logprob: -8.655523300170898
    10. '='+' → logprob: -8.780523300170898

Token 111: '',' (ID: 787)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.029801061376929283
    2. ' p' → logprob: -3.5298011302948
    3. 'd' → logprob: -10.779801368713379
    4. ' ' → logprob: -12.154801368713379
    5. ''p' → logprob: -12.279801368713379
    6. '+p' → logprob: -12.529801368713379
    7. 'str' → logprob: -13.029801368713379
    8. '''' → logprob: -13.029801368713379
    9. ''' → logprob: -13.154801368713379
    10. ' d' → logprob: -13.654801368713379

Token 112: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06199043244123459
    2. ' p' → logprob: -2.81199049949646
    3. ' ' → logprob: -11.311990737915039
    4. 'd' → logprob: -13.061990737915039
    5. '   ' → logprob: -13.436990737915039
    6. ' d' → logprob: -13.811990737915039
    7. '  ' → logprob: -14.311990737915039
    8. 'str' → logprob: -14.436990737915039
    9. '    ' → logprob: -14.499490737915039
    10. '(p' → logprob: -14.749490737915039

Token 113: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.014397015795111656
    2. 'i' → logprob: -4.264397144317627
    3. ' i' → logprob: -8.389396667480469
    4. '[' → logprob: -13.514396667480469
    5. ''i' → logprob: -13.639396667480469
    6. ' [' → logprob: -14.264396667480469
    7. '(i' → logprob: -14.639396667480469
    8. ''[' → logprob: -14.639396667480469
    9. '{i' → logprob: -14.764396667480469
    10. '
' → logprob: -14.889396667480469

Token 114: ']+' (ID: 15344)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.231467604637146
    2. '[i' → logprob: -2.3564677238464355
    3. '',' → logprob: -2.6064677238464355
    4. ',i' → logprob: -3.6064677238464355
    5. ','' → logprob: -5.1064677238464355
    6. ' ,' → logprob: -6.7314677238464355
    7. ' ',',' → logprob: -6.9814677238464355
    8. '+',' → logprob: -7.1064677238464355
    9. ' ',' → logprob: -7.9814677238464355
    10. '','' → logprob: -8.106467247009277

Token 115: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.002551527228206396
    2. ''' → logprob: -7.252551555633545
    3. '','' → logprob: -7.252551555633545
    4. ' ',',' → logprob: -7.377551555633545
    5. ',' → logprob: -8.127551078796387
    6. '';' → logprob: -9.502551078796387
    7. ''',' → logprob: -10.377551078796387
    8. ' ',' → logprob: -10.877551078796387
    9. '",' → logprob: -10.877551078796387
    10. 'f' → logprob: -11.127551078796387

Token 116: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5622390508651733
    2. ' f' → logprob: -1.5622390508651733
    3. ' '' → logprob: -1.6872390508651733
    4. ' depth' → logprob: -3.687239170074463
    5. 'depth' → logprob: -5.187239170074463
    6. ''s' → logprob: -7.187239170074463
    7. ' level' → logprob: -7.312239170074463
    8. ' end' → logprob: -7.312239170074463
    9. ' k' → logprob: -7.937239170074463
    10. ''end' → logprob: -7.937239170074463

Token 117: 'depth' (ID: 41022)
  Prédit: 'depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.24584878981113434
    2. ''' → logprob: -1.7458487749099731
    3. ' depth' → logprob: -3.6208488941192627
    4. 'level' → logprob: -5.245848655700684
    5. ''s' → logprob: -5.370848655700684
    6. ''d' → logprob: -6.245848655700684
    7. 'root' → logprob: -6.995848655700684
    8. 'children' → logprob: -6.995848655700684
    9. 'child' → logprob: -7.370848655700684
    10. ' '' → logprob: -7.620848655700684

Token 118: ' =' (ID: 314)
  Prédit: '=','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=',' → logprob: -0.06117880344390869
    2. '=' → logprob: -3.186178684234619
    3. ' =' → logprob: -4.436178684234619
    4. '='' → logprob: -5.436178684234619
    5. '='+' → logprob: -6.561178684234619
    6. '',' → logprob: -8.311179161071777
    7. '=d' → logprob: -9.436179161071777
    8. ' ='' → logprob: -9.686179161071777
    9. ''' → logprob: -12.811179161071777
    10. '=

' → logprob: -12.936179161071777

Token 119: '',' (ID: 787)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3875339925289154
    2. ' d' → logprob: -1.1375340223312378
    3. '',' → logprob: -7.387534141540527
    4. ',d' → logprob: -11.137534141540527
    5. ''' → logprob: -11.512534141540527
    6. ',' → logprob: -12.262534141540527
    7. ')d' → logprob: -12.387534141540527
    8. ' ',' → logprob: -13.012534141540527
    9. ''+' → logprob: -13.262534141540527
    10. ''d' → logprob: -13.262534141540527

Token 120: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04858850687742233
    2. ' d' → logprob: -3.048588514328003
    3. ' ' → logprob: -14.173588752746582
    4. '   ' → logprob: -16.173587799072266
    5. 'str' → logprob: -16.423587799072266
    6. ')d' → logprob: -16.548587799072266
    7. '  ' → logprob: -16.673587799072266
    8. '	d' → logprob: -17.173587799072266
    9. '>d' → logprob: -17.298587799072266
    10. '    ' → logprob: -17.298587799072266

Token 121: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4140441635390744e-05
    2. '(i' → logprob: -11.375014305114746
    3. '[' → logprob: -13.625014305114746
    4. 'i' → logprob: -14.000014305114746
    5. ' [' → logprob: -14.875014305114746
    6. ' i' → logprob: -16.25001335144043
    7. '[str' → logprob: -17.12501335144043
    8. '{i' → logprob: -17.25001335144043
    9. ')[' → logprob: -17.87501335144043
    10. '[
' → logprob: -18.50001335144043

Token 122: ']+' (ID: 15344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1269623339176178
    2. '')' → logprob: -2.126962423324585
    3. '")' → logprob: -12.001962661743164
    4. '+')' → logprob: -12.251962661743164
    5. ')")' → logprob: -12.501962661743164
    6. '))' → logprob: -12.501962661743164
    7. ')
' → logprob: -12.626962661743164
    8. ',' → logprob: -12.751962661743164
    9. ' )' → logprob: -12.876962661743164
    10. ')'' → logprob: -13.251962661743164

Token 123: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.21637137234210968
    2. '',' → logprob: -2.2163712978363037
    3. ''.' → logprob: -2.8413712978363037
    4. ')' → logprob: -4.466371536254883
    5. ''' → logprob: -4.716371536254883
    6. '','' → logprob: -5.216371536254883
    7. ' '.')' → logprob: -7.216371536254883
    8. '';' → logprob: -8.466371536254883
    9. '.')' → logprob: -9.341371536254883
    10. ' '')' → logprob: -9.841371536254883

Token 124: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07561970502138138
    2. ''end' → logprob: -2.950619697570801
    3. 'children' → logprob: -5.200619697570801
    4. ' '' → logprob: -5.200619697570801
    5. ''s' → logprob: -5.825619697570801
    6. ')' → logprob: -6.575619697570801
    7. ''d' → logprob: -7.325619697570801
    8. ' children' → logprob: -7.325619697570801
    9. ''re' → logprob: -7.950619697570801
    10. ''t' → logprob: -7.950619697570801

Token 125: 'root' (ID: 5488)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.2366155982017517
    2. ''' → logprob: -1.9866156578063965
    3. 'len' → logprob: -2.9866156578063965
    4. 'child' → logprob: -3.8616156578063965
    5. ''s' → logprob: -7.6116156578063965
    6. ''d' → logprob: -7.7366156578063965
    7. ' children' → logprob: -8.736615180969238
    8. 'degree' → logprob: -8.736615180969238
    9. '',' → logprob: -9.361615180969238
    10. 'parent' → logprob: -9.486615180969238

Token 126: ','' (ID: 6620)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40507277846336365
    2. '=' → logprob: -1.280072808265686
    3. '')' → logprob: -3.5300726890563965
    4. ''' → logprob: -4.7800726890563965
    5. 'node' → logprob: -5.6550726890563965
    6. '=root' → logprob: -5.6550726890563965
    7. '=True' → logprob: -5.9050726890563965
    8. '=node' → logprob: -6.0300726890563965
    9. ' node' → logprob: -6.1550726890563965
    10. ' ='' → logprob: -6.5300726890563965

Token 127: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2889226973056793
    2. 'sep' → logprob: -2.6639227867126465
    3. '=True' → logprob: -3.2889227867126465
    4. ' sep' → logprob: -3.6639227867126465
    5. 'end' → logprob: -3.7889227867126465
    6. ''' → logprob: -4.0389227867126465
    7. 'if' → logprob: -4.4139227867126465
    8. ' if' → logprob: -4.5389227867126465
    9. ''s' → logprob: -4.9139227867126465
    10. '=' → logprob: -5.1639227867126465

Token 128: ''-' (ID: 44302)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0082311630249023
    2. 'p' → logprob: -1.2582311630249023
    3. ' i' → logprob: -1.6332311630249023
    4. ' p' → logprob: -1.8832311630249023
    5. ' d' → logprob: -6.508231163024902
    6. 'd' → logprob: -6.758231163024902
    7. ' not' → logprob: -7.633231163024902
    8. 'r' → logprob: -8.633231163024902
    9. ' ' → logprob: -9.383231163024902
    10. ' r' → logprob: -9.633231163024902

Token 129: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03542117029428482
    2. ' p' → logprob: -3.410421133041382
    3. '1' → logprob: -6.535421371459961
    4. 'd' → logprob: -9.410421371459961
    5. 'i' → logprob: -9.660421371459961
    6. '(p' → logprob: -10.035421371459961
    7. ' ' → logprob: -10.535421371459961
    8. 'r' → logprob: -10.910421371459961
    9. '0' → logprob: -11.035421371459961
    10. ' d' → logprob: -11.535421371459961

Token 130: ''' (ID: 6)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.046142518520355225
    2. 'in' → logprob: -3.796142578125
    3. ' ==' → logprob: -4.171142578125
    4. ' in' → logprob: -5.046142578125
    5. 'else' → logprob: -7.671142578125
    6. ' else' → logprob: -9.546142578125
    7. ')' → logprob: -9.921142578125
    8. 'p' → logprob: -9.921142578125
    9. '!=' → logprob: -10.296142578125
    10. '==(' → logprob: -10.421142578125

Token 131: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6139056086540222
    2. 'in' → logprob: -0.8639056086540222
    3. ' in' → logprob: -3.488905668258667
    4. ' ==' → logprob: -5.488905429840088
    5. '!=' → logprob: -6.613905429840088
    6. 'else' → logprob: -7.363905429840088
    7. 'p' → logprob: -8.613905906677246
    8. 'not' → logprob: -8.863905906677246
    9. ' not' → logprob: -9.238905906677246
    10. '==(' → logprob: -9.488905906677246

Token 132: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1002098023891449
    2. ' p' → logprob: -2.3502097129821777
    3. ' ' → logprob: -13.225210189819336
    4. '  ' → logprob: -14.975210189819336
    5. 'i' → logprob: -15.600210189819336
    6. ' ' → logprob: -15.725210189819336
    7. '
' → logprob: -16.225210189819336
    8. '   ' → logprob: -16.350210189819336
    9. '(p' → logprob: -16.350210189819336
    10. '<p' → logprob: -16.350210189819336

Token 133: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.093505099765025e-05
    2. 'i' → logprob: -11.875020980834961
    3. ' [' → logprob: -12.125020980834961
    4. '[' → logprob: -12.500020980834961
    5. ' i' → logprob: -13.375020980834961
    6. '[I' → logprob: -14.250020980834961
    7. '```' → logprob: -14.750020980834961
    8. '{i' → logprob: -15.000020980834961
    9. ' ' → logprob: -15.125020980834961
    10. '(i' → logprob: -15.250020980834961

Token 134: ']' (ID: 60)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6931561827659607
    2. 'else' → logprob: -0.6931561827659607
    3. ' ' → logprob: -12.318156242370605
    4. '
' → logprob: -13.693156242370605
    5. '

' → logprob: -13.943156242370605
    6. '	else' → logprob: -14.693156242370605
    7. ' ' → logprob: -15.068156242370605
    8. ' els' → logprob: -15.068156242370605
    9. '  ' → logprob: -15.443156242370605
    10. '   ' → logprob: -15.943156242370605

Token 135: 'else' (ID: 2807)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6931704878807068
    2. 'else' → logprob: -0.6931704878807068
    3. ' ' → logprob: -11.818170547485352
    4. ')' → logprob: -11.943170547485352
    5. 'continue' → logprob: -12.443170547485352
    6. '    ' → logprob: -13.693170547485352
    7. '
' → logprob: -14.068170547485352
    8. ' continue' → logprob: -14.318170547485352
    9. '  ' → logprob: -14.568170547485352
    10. 'end' → logprob: -14.693170547485352

Token 136: ''in' (ID: 17942)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01392701268196106
    2. ' '' → logprob: -4.763926982879639
    3. '''' → logprob: -6.138926982879639
    4. ''s' → logprob: -6.638926982879639
    5. ' '')' → logprob: -7.763926982879639
    6. '"' → logprob: -8.013927459716797
    7. ''f' → logprob: -9.013927459716797
    8. ''m' → logprob: -9.138927459716797
    9. ''t' → logprob: -9.138927459716797
    10. ' f' → logprob: -9.388927459716797

Token 137: 'ternal' (ID: 4543)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6466276049613953
    2. 'p' → logprob: -1.52162766456604
    3. ' p' → logprob: -2.02162766456604
    4. 't' → logprob: -3.27162766456604
    5. ' '' → logprob: -4.396627426147461
    6. ''s' → logprob: -4.521627426147461
    7. '')' → logprob: -4.646627426147461
    8. 'd' → logprob: -4.896627426147461
    9. ' ' → logprob: -5.396627426147461
    10. '   ' → logprob: -5.521627426147461

Token 138: ' node' (ID: 4596)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0357128381729126
    2. '')' → logprob: -1.2857128381729126
    3. ' node' → logprob: -1.5357128381729126
    4. ')' → logprob: -2.285712718963623
    5. 'node' → logprob: -3.785712718963623
    6. ' ')' → logprob: -4.910712718963623
    7. '',' → logprob: -5.035712718963623
    8. '_node' → logprob: -6.035712718963623
    9. ' )' → logprob: -6.285712718963623
    10. ' ' → logprob: -6.285712718963623

Token 139: ','' (ID: 6620)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4296300411224365
    2. '')' → logprob: -1.0546300411224365
    3. ' )' → logprob: -8.304630279541016
    4. ''' → logprob: -8.929630279541016
    5. '<|end|>' → logprob: -8.929630279541016
    6. ' ')' → logprob: -9.054630279541016
    7. ')
' → logprob: -9.929630279541016
    8. '")' → logprob: -10.304630279541016
    9. '',' → logprob: -10.679630279541016
    10. ' '')' → logprob: -10.804630279541016

Token 140: 'if' (ID: 366)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23901453614234924
    2. ''end' → logprob: -1.9890145063400269
    3. ' '' → logprob: -3.4890146255493164
    4. ''t' → logprob: -3.9890146255493164
    5. ''s' → logprob: -4.864014625549316
    6. ''d' → logprob: -5.364014625549316
    7. ')' → logprob: -5.864014625549316
    8. ''re' → logprob: -6.364014625549316
    9. 'end' → logprob: -6.739014625549316
    10. '',' → logprob: -6.864014625549316

Token 141: ' t' (ID: 260)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7871479392051697
    2. 't' → logprob: -1.5371479988098145
    3. ' i' → logprob: -1.5371479988098145
    4. ' t' → logprob: -2.2871479988098145
    5. 'len' → logprob: -4.7871479988098145
    6. ' len' → logprob: -5.4121479988098145
    7. ' ' → logprob: -8.162147521972656
    8. ' str' → logprob: -9.412147521972656
    9. 'str' → logprob: -9.787147521972656
    10. 'e' → logprob: -10.912147521972656

Token 142: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0038921150844544172
    2. 'i' → logprob: -5.628891944885254
    3. ' i' → logprob: -8.253891944885254
    4. '.get' → logprob: -12.003891944885254
    5. 'e' → logprob: -12.128891944885254
    6. ' ' → logprob: -12.253891944885254
    7. 't' → logprob: -12.878891944885254
    8. '[str' → logprob: -12.878891944885254
    9. '
' → logprob: -13.128891944885254
    10. ' [' → logprob: -13.628891944885254

Token 143: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004123192047700286
    2. 'i' → logprob: -8.875411987304688
    3. 'else' → logprob: -9.000411987304688
    4. '.get' → logprob: -9.625411987304688
    5. ' else' → logprob: -10.000411987304688
    6. 't' → logprob: -11.875411987304688
    7. ' i' → logprob: -12.125411987304688
    8. '```' → logprob: -12.375411987304688
    9. ')' → logprob: -13.000411987304688
    10. '(i' → logprob: -13.125411987304688

Token 144: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0038998194504529238
    2. ' '' → logprob: -5.753900051116943
    3. ''ex' → logprob: -7.378900051116943
    4. ' leaf' → logprob: -10.628899574279785
    5. ' ' → logprob: -10.878899574279785
    6. ''l' → logprob: -11.128899574279785
    7. ''end' → logprob: -11.378899574279785
    8. 'leaf' → logprob: -11.878899574279785
    9. '"' → logprob: -12.128899574279785
    10. '('' → logprob: -13.128899574279785

Token 146: 'leaf' (ID: 50921)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1160915344953537
    2. ''ex' → logprob: -2.36609148979187
    3. ' '' → logprob: -4.241091728210449
    4. ' leaf' → logprob: -7.616091728210449
    5. ''end' → logprob: -7.616091728210449
    6. ''in' → logprob: -8.49109172821045
    7. 'leaf' → logprob: -9.74109172821045
    8. ''l' → logprob: -10.24109172821045
    9. ' ' → logprob: -11.36609172821045
    10. '   ' → logprob: -12.24109172821045

Token 147: ',' (ID: 11)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5696580410003662
    2. ' node' → logprob: -1.4446580410003662
    3. 'node' → logprob: -2.569658041000366
    4. ')' → logprob: -2.569658041000366
    5. '[i' → logprob: -3.944658041000366
    6. ''),' → logprob: -5.069658279418945
    7. ''' → logprob: -5.319658279418945
    8. ' i' → logprob: -6.069658279418945
    9. ')'' → logprob: -6.319658279418945
    10. ''])' → logprob: -6.444658279418945

Token 148: '',' (ID: 787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1542971283197403
    2. ''' → logprob: -2.904297113418579
    3. '')' → logprob: -3.154297113418579
    4. ' '')' → logprob: -4.529297351837158
    5. 'sep' → logprob: -4.654297351837158
    6. '''' → logprob: -5.154297351837158
    7. ' )' → logprob: -5.279297351837158
    8. ' sep' → logprob: -5.404297351837158
    9. 'end' → logprob: -6.029297351837158
    10. ' end' → logprob: -6.529297351837158

Token 149: 'list' (ID: 2641)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0633811429142952
    2. ''' → logprob: -4.313381195068359
    3. 'sep' → logprob: -4.438381195068359
    4. '''' → logprob: -4.938381195068359
    5. 't' → logprob: -5.063381195068359
    6. '')' → logprob: -5.188381195068359
    7. 'end' → logprob: -5.813381195068359
    8. 'p' → logprob: -5.938381195068359
    9. ')
' → logprob: -6.188381195068359
    10. ' )' → logprob: -6.563381195068359

Token 150: '(map' (ID: 16946)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.5512217283248901
    2. '(map' → logprob: -1.0512217283248901
    3. '=' → logprob: -3.6762218475341797
    4. '(sorted' → logprob: -4.55122184753418
    5. '(' → logprob: -4.67622184753418
    6. '(d' → logprob: -4.92622184753418
    7. 't' → logprob: -5.05122184753418
    8. '(p' → logprob: -5.30122184753418
    9. '=t' → logprob: -5.42622184753418
    10. '=d' → logprob: -7.05122184753418

Token 151: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06515366584062576
    2. '(lambda' → logprob: -3.0651535987854004
    3. '(str' → logprob: -4.1901535987854
    4. 'int' → logprob: -7.6901535987854
    5. '(' → logprob: -7.8151535987854
    6. 'str' → logprob: -8.940154075622559
    7. '(p' → logprob: -9.065154075622559
    8. 'lambda' → logprob: -9.815154075622559
    9. '(eval' → logprob: -10.815154075622559
    10. '(t' → logprob: -11.065154075622559

Token 152: ',t' (ID: 26927)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.6625010967254639
    2. '(d' → logprob: -0.7875010967254639
    3. '(p' → logprob: -4.037501335144043
    4. '(' → logprob: -4.787501335144043
    5. ')(' → logprob: -6.037501335144043
    6. '((' → logprob: -8.162501335144043
    7. ' (' → logprob: -8.537501335144043
    8. ')' → logprob: -8.912501335144043
    9. '(k' → logprob: -9.662501335144043
    10. '(s' → logprob: -10.037501335144043

Token 153: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019574174657464027
    2. '(i' → logprob: -6.626957416534424
    3. ' [' → logprob: -8.251957893371582
    4. ')[' → logprob: -8.501957893371582
    5. '[t' → logprob: -9.751957893371582
    6. ')' → logprob: -10.501957893371582
    7. '[' → logprob: -10.626957893371582
    8. '
' → logprob: -11.126957893371582
    9. '[e' → logprob: -11.876957893371582
    10. '[q' → logprob: -12.376957893371582

Token 154: '])))' (ID: 196150)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.4792226254940033
    2. '))' → logprob: -0.9792226552963257
    3. '))))' → logprob: -5.854222774505615
    4. ')' → logprob: -7.604222774505615
    5. ' ' → logprob: -8.229222297668457
    6. '()))' → logprob: -8.229222297668457
    7. '())))' → logprob: -8.229222297668457
    8. ')),' → logprob: -8.354222297668457
    9. ')));' → logprob: -8.479222297668457
    10. ')))
' → logprob: -8.729222297668457


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 152
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 55
Tokens correctement prédits (top 10): 95
Précision stricte (1ère position): 36.18%
Précision adaptée (1ère position): 36.18%
Précision (top 10): 62.50%
================================================================================
