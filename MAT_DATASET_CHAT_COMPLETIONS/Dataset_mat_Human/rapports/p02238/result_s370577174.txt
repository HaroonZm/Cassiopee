================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
adj=[]
for i in range(n):
      adj.append(list(map(int, input().split())))

edge=[[0 for i2 in range(n)]for i1 in range(n)]

#??£??\???????????????

for i in range(n):
    for j in range(adj[i][1]):
        edge[i][adj[i][j+2]-1]=1

time=1
discover=[0 for i in range(n)]
final=[0 for i in range(n)]
stack=[]

def dfs(id,time):
    for i in range(n):
        c=0
        if edge[id][i]==1 and discover[i]==0:
            stack.append(id)
            discover[i]=time
            c+=1
            #print(discover,final,i,stack)
            dfs(i,time+1)
        else:
            pass
    if c==0:
        if len(stack)>0:
            if final[id]==0:
                final[id] = time
                #print("back",discover,final,id,stack)
                dfs(stack.pop(), time + 1)
            else:
                #print("back", discover, final, id, stack)
                dfs(stack.pop(),time)

discover[0]=time
stack.append(0)
dfs(0,time+1)

for i in range(n):
    if discover[i]==0:
        discover[i]=final[0]+1
        stack.append(i)
        dfs(i,final[0]+2)
        break

for i in range(n):
    print(i+1,discover[i],final[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2951568067073822
    2. '(' → logprob: -1.4201568365097046
    3. '())' → logprob: -5.295156955718994
    4. '()' → logprob: -5.545156955718994
    5. '```' → logprob: -6.170156955718994
    6. '<|end|>' → logprob: -7.295156955718994
    7. '(
' → logprob: -7.670156955718994
    8. '")' → logprob: -7.920156955718994
    9. '`)' → logprob: -8.545156478881836
    10. '')' → logprob: -8.670156478881836

Token 4: 'adj' (ID: 57001)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.5210232734680176
    2. '+' → logprob: -1.5210232734680176
    3. '#' → logprob: -2.0210232734680176
    4. ')' → logprob: -2.1460232734680176
    5. ' ' → logprob: -2.3960232734680176
    6. ''' → logprob: -2.7710232734680176
    7. 'i' → logprob: -3.0210232734680176
    8. 's' → logprob: -3.8960232734680176
    9. 'a' → logprob: -4.521023273468018
    10. '\n' → logprob: -4.521023273468018

Token 5: '=[]
' (ID: 63466)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007417303277179599
    2. '[]' → logprob: -8.750741958618164
    3. '\[' → logprob: -9.000741958618164
    4. '[a' → logprob: -9.375741958618164
    5. ')' → logprob: -9.500741958618164
    6. '=' → logprob: -9.875741958618164
    7. '[u' → logprob: -10.250741958618164
    8. '[i' → logprob: -10.250741958618164
    9. '_' → logprob: -10.625741958618164
    10. 'acency' → logprob: -10.875741958618164

Token 6: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09244338423013687
    2. ' for' → logprob: -2.5924434661865234
    3. '[' → logprob: -4.467443466186523
    4. ' ' → logprob: -7.717443466186523
    5. '[]' → logprob: -7.967443466186523
    6. '[:]' → logprob: -8.092443466186523
    7. '.' → logprob: -8.467443466186523
    8. '=' → logprob: -8.592443466186523
    9. '<|end|>' → logprob: -8.967443466186523
    10. '.for' → logprob: -9.467443466186523

Token 7: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.393657386302948
    2. ' ' → logprob: -1.1436574459075928
    3. 'i' → logprob: -5.393657207489014
    4. ' _' → logprob: -6.393657207489014
    5. '_' → logprob: -8.268657684326172
    6. '  ' → logprob: -8.518657684326172
    7. ' ‌' → logprob: -9.643657684326172
    8. '	i' → logprob: -12.018657684326172
    9. ' ' → logprob: -12.018657684326172
    10. ' I' → logprob: -12.268657684326172

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20170576870441437
    2. 'in' → logprob: -1.701705813407898
    3. ' ' → logprob: -8.451705932617188
    4. '	in' → logprob: -10.451705932617188
    5. 'range' → logprob: -11.076705932617188
    6. 'n' → logprob: -11.326705932617188
    7. '  ' → logprob: -12.201705932617188
    8. '```' → logprob: -12.201705932617188
    9. '   ' → logprob: -12.951705932617188
    10. ' i' → logprob: -13.826705932617188

Token 9: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132627606391907
    2. 'range' → logprob: -1.313262701034546
    3. '	range' → logprob: -14.438262939453125
    4. ' ' → logprob: -15.063262939453125
    5. '(range' → logprob: -16.438262939453125
    6. '_range' → logprob: -16.938262939453125
    7. 'Range' → logprob: -17.063262939453125
    8. 'rang' → logprob: -18.438262939453125
    9. '.range' → logprob: -18.813262939453125
    10. '  ' → logprob: -19.063262939453125

Token 10: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3872710168361664
    2. '(' → logprob: -1.1372710466384888
    3. ' (' → logprob: -7.887270927429199
    4. '(len' → logprob: -10.7622709274292
    5. ' n' → logprob: -14.2622709274292
    6. '(space' → logprob: -14.6372709274292
    7. '(range' → logprob: -15.1372709274292
    8. 'n' → logprob: -15.1372709274292
    9. '(m' → logprob: -15.2622709274292
    10. '()' → logprob: -15.7622709274292

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020769957453012466
    2. ')' → logprob: -3.8957700729370117
    3. '):
' → logprob: -8.895770072937012
    4. ' ):' → logprob: -9.645770072937012
    5. ':' → logprob: -11.520770072937012
    6. ' )' → logprob: -12.895770072937012
    7. '){' → logprob: -13.020770072937012
    8. '+' → logprob: -13.520770072937012
    9. '   ' → logprob: -13.520770072937012
    10. '-' → logprob: -14.020770072937012

Token 12: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046545617282390594
    2. '    ' → logprob: -3.2965455055236816
    3. ' ' → logprob: -5.796545505523682
    4. ' adj' → logprob: -6.546545505523682
    5. ' ' → logprob: -6.921545505523682
    6. '  ' → logprob: -7.671545505523682
    7. '   ' → logprob: -7.796545505523682
    8. '```' → logprob: -7.796545505523682
    9. '   ' → logprob: -7.921545505523682
    10. 'adj' → logprob: -8.04654598236084

Token 13: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.7229042649269104
    2. 'adj' (adapté à ' adj') → logprob: -1.2229042053222656
    3. '   ' → logprob: -1.5979042053222656
    4. ' []' → logprob: -4.847904205322266
    5. ' ' → logprob: -5.597904205322266
    6. '    ' → logprob: -5.722904205322266
    7. '[]' → logprob: -6.722904205322266
    8. ' line' → logprob: -8.097904205322266
    9. ' row' → logprob: -8.597904205322266
    10. ' adjacency' → logprob: -8.597904205322266

Token 14: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.016135599464178085
    2. '.' → logprob: -4.1411356925964355
    3. ' .' → logprob: -10.891135215759277
    4. '[' → logprob: -10.891135215759277
    5. '[].' → logprob: -11.016135215759277
    6. '.setdefault' → logprob: -11.141135215759277
    7. '[i' → logprob: -11.391135215759277
    8. '.app' → logprob: -11.516135215759277
    9. '.extend' → logprob: -12.641135215759277
    10. '.ap' → logprob: -13.141135215759277

Token 15: '(list' (ID: 13116)
  Prédit: '([]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -0.7131924629211426
    2. '(list' → logprob: -0.9631924629211426
    3. '([' → logprob: -2.3381924629211426
    4. '(' → logprob: -3.4631924629211426
    5. '(input' → logprob: -9.213191986083984
    6. '([])
' → logprob: -9.213191986083984
    7. '((' → logprob: -9.713191986083984
    8. '(int' → logprob: -10.213191986083984
    9. 'list' → logprob: -10.588191986083984
    10. '({' → logprob: -10.713191986083984

Token 16: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.025398481637239456
    2. '(' → logprob: -3.9003984928131104
    3. '(int' → logprob: -5.650398254394531
    4. '(input' → logprob: -6.650398254394531
    5. '(eval' → logprob: -10.775398254394531
    6. '(range' → logprob: -12.650398254394531
    7. '())' → logprob: -13.650398254394531
    8. '(list' → logprob: -13.650398254394531
    9. 'map' → logprob: -13.900398254394531
    10. ')' → logprob: -13.900398254394531

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002180715324357152
    2. '(input' → logprob: -6.502180576324463
    3. '(' → logprob: -7.627180576324463
    4. '<int' → logprob: -9.127181053161621
    5. 'int' → logprob: -10.502181053161621
    6. '(lambda' → logprob: -11.252181053161621
    7. '=int' → logprob: -11.377181053161621
    8. ',int' → logprob: -11.627181053161621
    9. '(
' → logprob: -12.502181053161621
    10. ' int' → logprob: -12.877181053161621

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00039659533649683
    2. 'input' → logprob: -8.500396728515625
    3. ',input' → logprob: -8.875396728515625
    4. '(' → logprob: -10.250396728515625
    5. '=input' → logprob: -12.000396728515625
    6. ' input' → logprob: -12.625396728515625
    7. ')' → logprob: -12.750396728515625
    8. '[input' → logprob: -13.500396728515625
    9. '<input' → logprob: -13.750396728515625
    10. ' (' → logprob: -14.375396728515625

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00595427630469203
    2. ' input' → logprob: -5.130954265594482
    3. '(input' → logprob: -10.88095474243164
    4. ',input' → logprob: -13.00595474243164
    5. ')' → logprob: -13.63095474243164
    6. '<input' → logprob: -13.75595474243164
    7. '=input' → logprob: -14.00595474243164
    8. ' ' → logprob: -14.50595474243164
    9. '))' → logprob: -14.88095474243164
    10. '	input' → logprob: -15.00595474243164

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002993544621858746
    2. '()' → logprob: -8.375299453735352
    3. '())))' → logprob: -10.500299453735352
    4. '()))' → logprob: -10.750299453735352
    5. '())' → logprob: -11.250299453735352
    6. ')' → logprob: -12.875299453735352
    7. '()));' → logprob: -13.875299453735352
    8. '(' → logprob: -14.125299453735352
    9. '()
' → logprob: -14.500299453735352
    10. ' ().' → logprob: -14.875299453735352

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007257753168232739
    2. 'strip' → logprob: -7.250725746154785
    3. 'rstrip' → logprob: -11.375725746154785
    4. ' split' → logprob: -12.875725746154785
    5. '(split' → logprob: -13.375725746154785
    6. 'spl' → logprob: -15.750725746154785
    7. 's' → logprob: -18.0007266998291
    8. 'sp' → logprob: -18.2507266998291
    9. ')' → logprob: -18.7507266998291
    10. ' strip' → logprob: -18.7507266998291

Token 22: '()))' (ID: 16829)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.290662556886673
    2. '())' → logprob: -2.4156625270843506
    3. '()))' → logprob: -2.6656625270843506
    4. ')))' → logprob: -2.7906625270843506
    5. '()' → logprob: -3.9156625270843506
    6. '(' → logprob: -4.66566276550293
    7. ')' → logprob: -6.41566276550293
    8. '())))
' → logprob: -7.41566276550293
    9. '))' → logprob: -8.79066276550293
    10. '('' → logprob: -9.41566276550293

Token 23: ')

' (ID: 1029)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47412821650505066
    2. ')' → logprob: -0.974128246307373
    3. ')))' → logprob: -10.099127769470215
    4. ' ))' → logprob: -13.224127769470215
    5. ' )' → logprob: -13.349127769470215
    6. '))
' → logprob: -13.599127769470215
    7. '()))' → logprob: -13.974127769470215
    8. '()' → logprob: -14.099127769470215
    9. ')
' → logprob: -14.224127769470215
    10. ''))' → logprob: -14.474127769470215

Token 24: 'edge' (ID: 13457)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3221835196018219
    2. 'dist' → logprob: -1.8221834897994995
    3. 'd' → logprob: -3.322183609008789
    4. 'dp' → logprob: -3.447183609008789
    5. 'distance' → logprob: -4.197183609008789
    6. 'visited' → logprob: -4.572183609008789
    7. 'f' → logprob: -4.697183609008789
    8. '#' → logprob: -6.072183609008789
    9. ')' → logprob: -6.322183609008789
    10. 'result' → logprob: -7.197183609008789

Token 25: '=[[' (ID: 112637)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009967254009097815
    2. '_s' → logprob: -7.1259965896606445
    3. '_' → logprob: -9.250996589660645
    4. '[]' → logprob: -10.625996589660645
    5. ' =' → logprob: -11.500996589660645
    6. ' s' → logprob: -11.500996589660645
    7. '[' → logprob: -11.625996589660645
    8. '_list' → logprob: -12.000996589660645
    9. '=' → logprob: -12.250996589660645
    10. '(' → logprob: -12.500996589660645

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004079708829522133
    2. 'False' → logprob: -5.879079818725586
    3. 'int' → logprob: -7.754079818725586
    4. 'float' → logprob: -8.129079818725586
    5. 'j' → logprob: -8.879079818725586
    6. '1' → logprob: -9.004079818725586
    7. 'i' → logprob: -9.129079818725586
    8. '-' → logprob: -9.879079818725586
    9. '(' → logprob: -10.004079818725586
    10. 'adj' → logprob: -10.754079818725586

Token 27: ' for' (ID: 395)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.7370840311050415
    2. ' for' → logprob: -1.3620840311050415
    3. ']' → logprob: -2.237083911895752
    4. ',' → logprob: -2.237083911895752
    5. ']*(' → logprob: -3.737083911895752
    6. 'for' → logprob: -3.737083911895752
    7. ' ' → logprob: -6.362083911895752
    8. ' ]' → logprob: -6.362083911895752
    9. ' ,' → logprob: -8.73708438873291
    10. ')' → logprob: -8.86208438873291

Token 28: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7013231515884399
    2. '_' → logprob: -1.07632315158844
    3. ' _' → logprob: -2.3263230323791504
    4. 'range' → logprob: -3.5763230323791504
    5. ' ' → logprob: -4.07632303237915
    6. 'j' → logprob: -4.95132303237915
    7. ' in' → logprob: -5.45132303237915
    8. ' range' → logprob: -5.45132303237915
    9. '_j' → logprob: -5.57632303237915
    10. ' i' → logprob: -7.32632303237915

Token 29: '2' (ID: 17)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020761197432875633
    2. 'in' → logprob: -3.895761251449585
    3. ' ' → logprob: -8.645761489868164
    4. 'range' → logprob: -10.770761489868164
    5. ')' → logprob: -11.770761489868164
    6. '(range' → logprob: -12.770761489868164
    7. ' range' → logprob: -12.895761489868164
    8. '(' → logprob: -13.270761489868164
    9. '	in' → logprob: -13.395761489868164
    10. ' ]' → logprob: -13.520761489868164

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03719327598810196
    2. 'in' → logprob: -3.4121932983398438
    3. 'range' → logprob: -6.287193298339844
    4. ' ' → logprob: -6.662193298339844
    5. ' range' → logprob: -8.412193298339844
    6. ')' → logprob: -9.162193298339844
    7. '(range' → logprob: -10.537193298339844
    8. ']' → logprob: -10.912193298339844
    9. ' ]' → logprob: -11.662193298339844
    10. ' )' → logprob: -12.662193298339844

Token 31: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859168455004692
    2. ' range' → logprob: -3.0485916137695312
    3. ' ' → logprob: -12.798591613769531
    4. '  ' → logprob: -14.548591613769531
    5. '(range' → logprob: -14.923591613769531
    6. '   ' → logprob: -15.173591613769531
    7. '	range' → logprob: -15.673591613769531
    8. ')' → logprob: -17.04859161376953
    9. '    ' → logprob: -17.04859161376953
    10. ']' → logprob: -17.17359161376953

Token 32: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00042114028474316
    2. '(' → logprob: -7.875421047210693
    3. ' (' → logprob: -10.125421524047852
    4. ' n' → logprob: -15.125421524047852
    5. 'n' → logprob: -15.250421524047852
    6. ']' → logprob: -15.625421524047852
    7. '](' → logprob: -16.62542152404785
    8. ')n' → logprob: -16.62542152404785
    9. '(nx' → logprob: -16.75042152404785
    10. ' ]' → logprob: -16.87542152404785

Token 33: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00020616286201402545
    2. ')' → logprob: -9.250205993652344
    3. ' )' → logprob: -9.250205993652344
    4. ')])' → logprob: -12.500205993652344
    5. ']' → logprob: -12.625205993652344
    6. '])]' → logprob: -13.125205993652344
    7. '])' → logprob: -14.000205993652344
    8. ' ' → logprob: -14.375205993652344
    9. ')}' → logprob: -14.500205993652344
    10. '+' → logprob: -14.625205993652344

Token 34: 'for' (ID: 1938)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13650156557559967
    2. 'for' → logprob: -2.2615015506744385
    3. ' for' → logprob: -3.8865015506744385
    4. ' ]' → logprob: -5.886501789093018
    5. ')' → logprob: -10.26150131225586
    6. ' ' → logprob: -10.51150131225586
    7. ')]' → logprob: -11.38650131225586
    8. '	for' → logprob: -11.51150131225586
    9. '   ' → logprob: -11.63650131225586
    10. '    ' → logprob: -13.38650131225586

Token 35: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10668555647134781
    2. ' i' → logprob: -2.3566856384277344
    3. 'range' → logprob: -5.606685638427734
    4. '(range' → logprob: -6.481685638427734
    5. ' ' → logprob: -6.981685638427734
    6. 'i' → logprob: -9.981685638427734
    7. '<|end|>' → logprob: -9.981685638427734
    8. ' (' → logprob: -10.606685638427734
    9. '_' → logprob: -10.606685638427734
    10. '(' → logprob: -10.731685638427734

Token 36: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.39662113785743713
    2. '2' → logprob: -1.3966211080551147
    3. 'in' → logprob: -3.2716212272644043
    4. '(n' → logprob: -3.5216212272644043
    5. '(' → logprob: -5.146621227264404
    6. ' ' → logprob: -5.646621227264404
    7. '   ' → logprob: -7.646621227264404
    8. 'n' → logprob: -7.646621227264404
    9. 'range' → logprob: -7.771621227264404
    10. '3' → logprob: -8.021620750427246

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0792786031961441
    2. 'in' → logprob: -2.5792787075042725
    3. ' range' → logprob: -8.704278945922852
    4. 'range' → logprob: -9.079278945922852
    5. '(' → logprob: -9.954278945922852
    6. '(range' → logprob: -10.829278945922852
    7. ' ' → logprob: -11.079278945922852
    8. '(n' → logprob: -11.204278945922852
    9. ' (' → logprob: -11.704278945922852
    10. 'n' → logprob: -13.704278945922852

Token 38: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868778944015503
    2. 'range' → logprob: -1.1368778944015503
    3. '(range' → logprob: -11.88687801361084
    4. '	range' → logprob: -17.511877059936523
    5. '(' → logprob: -18.886877059936523
    6. ' ' → logprob: -19.511877059936523
    7. '.range' → logprob: -20.886877059936523
    8. 'n' → logprob: -21.136877059936523
    9. '(n' → logprob: -21.136877059936523
    10. '_range' → logprob: -21.261877059936523

Token 39: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.889424836728722e-05
    2. '(' → logprob: -9.375099182128906
    3. 'n' → logprob: -11.375099182128906
    4. ' (' → logprob: -13.125099182128906
    5. ' n' → logprob: -15.000099182128906
    6. '(range' → logprob: -16.000099182128906
    7. 'range' → logprob: -17.250099182128906
    8. '(N' → logprob: -18.500099182128906
    9. '((' → logprob: -18.500099182128906
    10. '(
' → logprob: -18.750099182128906

Token 40: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.4617256056226324e-05
    2. ')' → logprob: -11.875014305114746
    3. ']' → logprob: -12.875014305114746
    4. '])]' → logprob: -13.250014305114746
    5. ')])' → logprob: -13.375014305114746
    6. ' )' → logprob: -13.875014305114746
    7. ')]
' → logprob: -15.625014305114746
    8. '])' → logprob: -15.750014305114746
    9. '')]' → logprob: -16.125015258789062
    10. '))' → logprob: -16.250015258789062

Token 41: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007762196473777294
    2. ' for' → logprob: -5.007762432098389
    3. '
' → logprob: -6.882762432098389
    4. '```' → logprob: -12.13276195526123
    5. ' 
' → logprob: -12.50776195526123
    6. 's' → logprob: -13.50776195526123
    7. 'n' → logprob: -13.50776195526123
    8. 'f' → logprob: -13.50776195526123
    9. 'i' → logprob: -13.63276195526123
    10. ']' → logprob: -13.88276195526123

Token 42: '??' (ID: 6961)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22888940572738647
    2. ' for' → logprob: -1.6038894653320312
    3. 'i' → logprob: -6.853889465332031
    4. 'f' → logprob: -7.478889465332031
    5. 'range' → logprob: -7.478889465332031
    6. ' range' → logprob: -7.728889465332031
    7. ' ' → logprob: -7.728889465332031
    8. ' i' → logprob: -8.978889465332031
    9. 'n' → logprob: -9.228889465332031
    10. 'r' → logprob: -9.728889465332031

Token 43: '£' (ID: 18943)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0028057026211172342
    2. ' for' → logprob: -5.877805709838867
    3. '
' → logprob: -15.752805709838867
    4. 'f' → logprob: -16.377805709838867
    5. 'or' → logprob: -16.377805709838867
    6. '```' → logprob: -16.377805709838867
    7. 's' → logprob: -16.627805709838867
    8. 'n' → logprob: -16.877805709838867
    9. 'i' → logprob: -17.002805709838867
    10. 'def' → logprob: -17.252805709838867

Token 44: '??' (ID: 6961)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3900190591812134
    2. ' for' → logprob: -1.1400190591812134
    3. ' ' → logprob: -5.890018939971924
    4. ']' → logprob: -9.265019416809082
    5. '
' → logprob: -9.765019416809082
    6. ')' → logprob: -10.640019416809082
    7. ' ]' → logprob: -10.640019416809082
    8. 'f' → logprob: -10.765019416809082
    9. '=' → logprob: -11.015019416809082
    10. ' 
' → logprob: -11.015019416809082

Token 45: '\' (ID: 59)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06472089141607285
    2. ' for' → logprob: -2.814720869064331
    3. ']' → logprob: -6.31472110748291
    4. ')' → logprob: -7.43972110748291
    5. ' ]' → logprob: -9.18972110748291
    6. ' ' → logprob: -9.31472110748291
    7. 'f' → logprob: -10.06472110748291
    8. '=' → logprob: -10.93972110748291
    9. 'i' → logprob: -11.18972110748291
    10. '#' → logprob: -11.56472110748291

Token 46: '????????' (ID: 85218)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.226801797747612
    2. ' for' → logprob: -1.8518017530441284
    3. ' ' → logprob: -3.976801872253418
    4. ']' → logprob: -4.726801872253418
    5. ' ]' → logprob: -5.226801872253418
    6. 'f' → logprob: -5.226801872253418
    7. '=' → logprob: -6.101801872253418
    8. ')' → logprob: -6.476801872253418
    9. 'i' → logprob: -6.726801872253418
    10. 'n' → logprob: -8.101801872253418

Token 47: '????' (ID: 25883)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3078238070011139
    2. ' for' → logprob: -1.4328237771987915
    3. 'f' → logprob: -4.307823657989502
    4. '#' → logprob: -6.307823657989502
    5. ')' → logprob: -6.307823657989502
    6. ']' → logprob: -6.682823657989502
    7. 'n' → logprob: -6.807823657989502
    8. '=' → logprob: -6.932823657989502
    9. ' ' → logprob: -7.057823657989502
    10. 'd' → logprob: -7.057823657989502

Token 48: '???

' (ID: 85275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20461639761924744
    2. ' for' → logprob: -1.8296164274215698
    3. ' ' → logprob: -4.954616546630859
    4. '=' → logprob: -5.454616546630859
    5. 'f' → logprob: -5.454616546630859
    6. ']' → logprob: -6.329616546630859
    7. ')' → logprob: -6.579616546630859
    8. ' ]' → logprob: -6.829616546630859
    9. ':' → logprob: -7.329616546630859
    10. '#' → logprob: -7.579616546630859

Token 49: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010466240346431732
    2. ' for' → logprob: -6.876046657562256
    3. 'f' → logprob: -11.751046180725098
    4. ']' → logprob: -13.751046180725098
    5. 'def' → logprob: -14.251046180725098
    6. 's' → logprob: -14.501046180725098
    7. 'd' → logprob: -14.501046180725098
    8. ')' → logprob: -14.501046180725098
    9. '   ' → logprob: -15.001046180725098
    10. 'i' → logprob: -15.251046180725098

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006512983236461878
    2. ' ' → logprob: -5.5065131187438965
    3. 'i' → logprob: -6.1315131187438965
    4. '_' → logprob: -9.381512641906738
    5. ' _' → logprob: -9.756512641906738
    6. ' ' → logprob: -10.381512641906738
    7. ' ‌' → logprob: -10.756512641906738
    8. ' u' → logprob: -11.006512641906738
    9. '	i' → logprob: -11.256512641906738
    10. ' j' → logprob: -11.381512641906738

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0726952999830246
    2. 'in' → logprob: -2.822695255279541
    3. ' ' → logprob: -4.572695255279541
    4. 'n' → logprob: -8.8226957321167
    5. '	in' → logprob: -9.5726957321167
    6. ' n' → logprob: -10.0726957321167
    7. '  ' → logprob: -10.1976957321167
    8. '(' → logprob: -12.4476957321167
    9. ' i' → logprob: -12.5726957321167
    10. '_' → logprob: -12.5726957321167

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20146068930625916
    2. 'range' → logprob: -1.7014607191085815
    3. ' ' → logprob: -10.076460838317871
    4. 'n' → logprob: -14.076460838317871
    5. '  ' → logprob: -14.076460838317871
    6. '	range' → logprob: -14.201460838317871
    7. '(range' → logprob: -14.451460838317871
    8. ' in' → logprob: -14.951460838317871
    9. '   ' → logprob: -14.951460838317871
    10. '```' → logprob: -15.326460838317871

Token 53: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0030795522034168243
    2. '(' → logprob: -5.878079414367676
    3. ' (' → logprob: -8.253079414367676
    4. ' n' → logprob: -11.253079414367676
    5. ' ' → logprob: -14.378079414367676
    6. 'n' → logprob: -15.128079414367676
    7. '(range' → logprob: -15.253079414367676
    8. '(
' → logprob: -16.378080368041992
    9. ')' → logprob: -17.128080368041992
    10. ' range' → logprob: -17.253080368041992

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005222928593866527
    2. '):
' → logprob: -8.50052261352539
    3. ')' → logprob: -8.75052261352539
    4. '-' → logprob: -9.75052261352539
    5. ':' → logprob: -10.00052261352539
    6. ' ):' → logprob: -10.37552261352539
    7. '+' → logprob: -11.37552261352539
    8. ']:' → logprob: -11.50052261352539
    9. ' ' → logprob: -14.25052261352539
    10. '   ' → logprob: -14.25052261352539

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18427136540412903
    2. ' for' → logprob: -1.9342713356018066
    3. 'for' → logprob: -4.184271335601807
    4. '	for' → logprob: -4.809271335601807
    5. ' ' → logprob: -8.309271812438965
    6. '   ' → logprob: -10.309271812438965
    7. '  ' → logprob: -10.434271812438965
    8. '<|end|>' → logprob: -11.059271812438965
    9. '\t' → logprob: -11.184271812438965
    10. '       ' → logprob: -11.559271812438965

Token 56: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16158916056156158
    2. 'for' (adapté à ' for') → logprob: -1.9115891456604004
    3. '   ' → logprob: -6.6615891456604
    4. '	for' → logprob: -10.161589622497559
    5. ' ' → logprob: -10.286589622497559
    6. '    ' → logprob: -12.161589622497559
    7. ' j' → logprob: -13.411589622497559
    8. '  ' → logprob: -13.536589622497559
    9. ' range' → logprob: -14.036589622497559
    10. '<|end|>' → logprob: -14.536589622497559

Token 57: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.046003974974155426
    2. 'j' → logprob: -3.171004056930542
    3. ' range' → logprob: -5.921003818511963
    4. 'range' → logprob: -8.171004295349121
    5. ' ' → logprob: -11.421004295349121
    6. '_j' → logprob: -11.921004295349121
    7. '	j' → logprob: -12.171004295349121
    8. '```' → logprob: -13.296004295349121
    9. ' n' → logprob: -13.421004295349121
    10. ' ' → logprob: -13.671004295349121

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07897219061851501
    2. 'in' → logprob: -2.578972101211548
    3. ' ' → logprob: -9.703971862792969
    4. '	in' → logprob: -11.953971862792969
    5. '+' → logprob: -13.078971862792969
    6. '(' → logprob: -13.078971862792969
    7. 'range' → logprob: -13.203971862792969
    8. 'n' → logprob: -13.203971862792969
    9. '    ' → logprob: -13.578971862792969
    10. '   ' → logprob: -13.703971862792969

Token 59: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47490593791007996
    2. 'range' → logprob: -0.9749059677124023
    3. '(range' → logprob: -7.099905967712402
    4. ' ' → logprob: -13.724905967712402
    5. '	range' → logprob: -13.724905967712402
    6. '(' → logprob: -14.474905967712402
    7. '(n' → logprob: -15.349905967712402
    8. ' in' → logprob: -15.974905967712402
    9. ' (' → logprob: -16.099905014038086
    10. 'in' → logprob: -16.849905014038086

Token 60: '(adj' (ID: 141921)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008234490524046123
    2. '(' → logprob: -7.125823497772217
    3. '(range' → logprob: -11.125823020935059
    4. '(i' → logprob: -13.125823020935059
    5. ' (' → logprob: -14.000823020935059
    6. '(s' → logprob: -15.000823020935059
    7. 'range' → logprob: -15.000823020935059
    8. '(
' → logprob: -15.125823020935059
    9. '(j' → logprob: -15.500823020935059
    10. ')' → logprob: -15.875823020935059

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.703443770878948e-06
    2. '[' → logprob: -12.125007629394531
    3. ')' → logprob: -13.500007629394531
    4. '[j' → logprob: -14.375007629394531
    5. '[n' → logprob: -15.750007629394531
    6. 'i' → logprob: -17.75000762939453
    7. '   ' → logprob: -17.75000762939453
    8. ' [' → logprob: -17.87500762939453
    9. '])' → logprob: -18.00000762939453
    10. '(i' → logprob: -18.37500762939453

Token 62: '][' (ID: 2696)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17942775785923004
    2. ']):' → logprob: -2.0544278621673584
    3. ']:' → logprob: -4.054427623748779
    4. '[i' → logprob: -4.679427623748779
    5. '[' → logprob: -5.929427623748779
    6. '[j' → logprob: -6.179427623748779
    7. '])' → logprob: -6.179427623748779
    8. ']' → logprob: -6.929427623748779
    9. ')' → logprob: -7.554427623748779
    10. ':' → logprob: -7.804427623748779

Token 63: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12643742561340332
    2. 'i' → logprob: -2.2514374256134033
    3. 'n' → logprob: -5.501437187194824
    4. ' ' → logprob: -5.626437187194824
    5. '])' → logprob: -6.501437187194824
    6. '   ' → logprob: -6.876437187194824
    7. 'j' → logprob: -7.001437187194824
    8. ':' → logprob: -7.126437187194824
    9. ')' → logprob: -7.626437187194824
    10. '1' → logprob: -7.876437187194824

Token 64: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.9365987181663513
    2. ']' → logprob: -1.311598777770996
    3. ']+' → logprob: -1.936598777770996
    4. '+' → logprob: -2.436598777770996
    5. ']:' → logprob: -2.936598777770996
    6. ':' → logprob: -4.311598777770996
    7. '])' → logprob: -4.436598777770996
    8. '):' → logprob: -5.061598777770996
    9. '],' → logprob: -5.436598777770996
    10. '[' → logprob: -5.436598777770996

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036069903522729874
    2. '<|end|>' → logprob: -3.911069869995117
    3. '   ' → logprob: -5.286069869995117
    4. '    ' → logprob: -5.536069869995117
    5. ' ' → logprob: -5.786069869995117
    6. '        ' → logprob: -7.161069869995117
    7. '     ' → logprob: -7.411069869995117
    8. '      ' → logprob: -7.411069869995117
    9. ':' → logprob: -7.911069869995117
    10. '  ' → logprob: -8.786069869995117

Token 66: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.4279669523239136
    2. '       ' → logprob: -1.4279669523239136
    3. ' x' → logprob: -3.427967071533203
    4. 'edge' (adapté à ' edge') → logprob: -3.552967071533203
    5. '   ' → logprob: -4.177967071533203
    6. '           ' → logprob: -5.177967071533203
    7. ' edges' → logprob: -5.177967071533203
    8. ' s' → logprob: -5.427967071533203
    9. ' k' → logprob: -5.677967071533203
    10. '    ' → logprob: -6.177967071533203

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001205893131555058
    2. '[' → logprob: -9.500120162963867
    3. '][' → logprob: -11.625120162963867
    4. '[int' → logprob: -11.625120162963867
    5. 'i' → logprob: -12.250120162963867
    6. '[n' → logprob: -12.750120162963867
    7. '[I' → logprob: -13.000120162963867
    8. '[node' → logprob: -13.125120162963867
    9. '[input' → logprob: -13.125120162963867
    10. '[a' → logprob: -13.125120162963867

Token 68: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0035772647242993116
    2. '[' → logprob: -5.87857723236084
    3. ' ][' → logprob: -7.75357723236084
    4. ']' → logprob: -8.25357723236084
    5. '[j' → logprob: -11.37857723236084
    6. '[int' → logprob: -11.37857723236084
    7. '[i' → logprob: -11.75357723236084
    8. '   ' → logprob: -11.87857723236084
    9. ']][' → logprob: -12.12857723236084
    10. '[node' → logprob: -12.62857723236084

Token 69: 'adj' (ID: 57001)
  Prédit: 'adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.00012868782505393028
    2. ' adj' → logprob: -9.125128746032715
    3. 'int' → logprob: -11.750128746032715
    4. '[' → logprob: -12.875128746032715
    5. 'j' → logprob: -12.875128746032715
    6. 'i' → logprob: -13.625128746032715
    7. 'ad' → logprob: -13.875128746032715
    8. '   ' → logprob: -14.125128746032715
    9. ' ' → logprob: -14.125128746032715
    10. '0' → logprob: -14.500128746032715

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8312570318812504e-05
    2. '[' → logprob: -11.000018119812012
    3. '[j' → logprob: -14.625018119812012
    4. 'i' → logprob: -14.875018119812012
    5. '[int' → logprob: -16.375019073486328
    6. 'adj' → logprob: -16.500019073486328
    7. ' [' → logprob: -16.500019073486328
    8. 's' → logprob: -16.750019073486328
    9. '[I' → logprob: -16.750019073486328
    10. '[a' → logprob: -16.750019073486328

Token 71: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07042151689529419
    2. '][' → logprob: -2.6954214572906494
    3. '[j' → logprob: -7.9454216957092285
    4. '[i' → logprob: -9.44542121887207
    5. ' [' → logprob: -11.07042121887207
    6. ']' → logprob: -11.69542121887207
    7. ' ][' → logprob: -11.94542121887207
    8. '2' → logprob: -12.44542121887207
    9. 's' → logprob: -12.82042121887207
    10. '+' → logprob: -12.94542121887207

Token 72: 'j' (ID: 73)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001281303120777011
    2. 'j' → logprob: -6.876281261444092
    3. ' ' → logprob: -8.87628173828125
    4. '3' → logprob: -9.87628173828125
    5. '   ' → logprob: -10.62628173828125
    6. '0' → logprob: -11.37628173828125
    7. ' j' → logprob: -11.87628173828125
    8. '    ' → logprob: -13.00128173828125
    9. '  ' → logprob: -13.12628173828125
    10. '1' → logprob: -13.37628173828125

Token 73: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0016287636244669557
    2. '[' → logprob: -6.876628875732422
    3. '2' → logprob: -7.876628875732422
    4. ' +' → logprob: -8.626628875732422
    5. '3' → logprob: -11.251628875732422
    6. ']' → logprob: -11.626628875732422
    7. ' ' → logprob: -12.501628875732422
    8. '   ' → logprob: -12.876628875732422
    9. '+
' → logprob: -13.001628875732422
    10. ']]' → logprob: -13.376628875732422

Token 74: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001526644453406334
    2. ' ' → logprob: -6.501526832580566
    3. '+' → logprob: -11.751526832580566
    4. '   ' → logprob: -12.376526832580566
    5. '3' → logprob: -12.751526832580566
    6. ']' → logprob: -12.876526832580566
    7. '  ' → logprob: -13.001526832580566
    8. '1' → logprob: -13.126526832580566
    9. '    ' → logprob: -14.626526832580566
    10. ']]' → logprob: -14.751526832580566

Token 75: ']-' (ID: 27107)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.04819677770137787
    2. ']' → logprob: -3.673196792602539
    3. ')]' → logprob: -4.298196792602539
    4. ']]=' → logprob: -5.048196792602539
    5. ']=' → logprob: -7.673196792602539
    6. '-' → logprob: -7.923196792602539
    7. ' ]]' → logprob: -8.173196792602539
    8. '])]' → logprob: -9.048196792602539
    9. ']]]' → logprob: -9.298196792602539
    10. ']==' → logprob: -9.423196792602539

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.754368223482743e-05
    2. ' ' → logprob: -9.625067710876465
    3. '１' → logprob: -13.875067710876465
    4. '<|end|>' → logprob: -16.00006675720215
    5. '۱' → logprob: -16.87506675720215
    6. '१' → logprob: -17.06256675720215
    7. '=' → logprob: -17.31256675720215
    8. '১' → logprob: -17.75006675720215
    9. '   ' → logprob: -17.81256675720215
    10. '...' → logprob: -17.87506675720215

Token 77: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.06328480690717697
    2. ']' → logprob: -2.8132848739624023
    3. '=' → logprob: -6.813284873962402
    4. ']+=' → logprob: -9.188284873962402
    5. ' ]' → logprob: -9.313284873962402
    6. ']==' → logprob: -12.188284873962402
    7. ']]=' → logprob: -12.188284873962402
    8. ')=' → logprob: -12.438284873962402
    9. ' =' → logprob: -12.688284873962402
    10. ']='' → logprob: -13.313284873962402

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.2500057220459
    4. '0' → logprob: -16.6250057220459
    5. 'i' → logprob: -16.7500057220459
    6. '2' → logprob: -17.0000057220459
    7. '１' → logprob: -17.7500057220459
    8. '-' → logprob: -17.9375057220459
    9. '  ' → logprob: -18.0000057220459
    10. '6' → logprob: -18.1250057220459

Token 79: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: 'time' (ID: 4580)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19122210144996643
    2. '[' → logprob: -2.6912221908569336
    3. 's' → logprob: -2.8162221908569336
    4. ' =' → logprob: -3.6912221908569336
    5. '_' → logprob: -4.441222190856934
    6. '=[]' → logprob: -5.941222190856934
    7. '[]' → logprob: -6.316222190856934
    8. ',' → logprob: -6.816222190856934
    9. '.' → logprob: -7.316222190856934
    10. '=[' → logprob: -7.441222190856934

Token 82: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4905567467212677
    2. '0' → logprob: -0.9905567169189453
    3. '[n' → logprob: -4.365556716918945
    4. '[int' → logprob: -6.240556716918945
    5. '[-' → logprob: -6.865556716918945
    6. 'n' → logprob: -8.615556716918945
    7. '[max' → logprob: -9.115556716918945
    8. 'int' → logprob: -10.115556716918945
    9. '[]' → logprob: -10.240556716918945
    10. '-' → logprob: -10.365556716918945

Token 83: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: 'discover' (ID: 189838)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7461206912994385
    2. 'stack' → logprob: -1.8711206912994385
    3. 'visited' → logprob: -2.7461206912994385
    4. 'time' → logprob: -3.1211206912994385
    5. 'dfs' → logprob: -3.1211206912994385
    6. 'color' → logprob: -3.1211206912994385
    7. 'distance' → logprob: -3.2461206912994385
    8. 'dis' → logprob: -3.2461206912994385
    9. 'for' → logprob: -4.121120452880859
    10. 'd' → logprob: -4.371120452880859

Token 85: '=[' (ID: 13370)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.650189220905304
    2. '_time' → logprob: -0.900189220905304
    3. '[' → logprob: -2.900189161300659
    4. 'time' → logprob: -4.650189399719238
    5. 'Time' → logprob: -5.900189399719238
    6. 'ed' → logprob: -6.400189399719238
    7. '[u' → logprob: -7.275189399719238
    8. '=' → logprob: -7.400189399719238
    9. '[]' → logprob: -7.775189399719238
    10. '_times' → logprob: -8.525189399719238

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20142367482185364
    2. '-' → logprob: -1.7014236450195312
    3. 'False' → logprob: -12.951423645019531
    4. '-f' → logprob: -13.451423645019531
    5. ' ' → logprob: -13.576423645019531
    6. ']' → logprob: -13.701423645019531
    7. 'None' → logprob: -13.826423645019531
    8. '-n' → logprob: -14.076423645019531
    9. ' -' → logprob: -14.826423645019531
    10. '[' → logprob: -15.326423645019531

Token 87: ' for' (ID: 395)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.16230961680412292
    2. ']*(' → logprob: -2.7873096466064453
    3. ' for' → logprob: -2.9123096466064453
    4. ']' → logprob: -3.9123096466064453
    5. 'for' → logprob: -4.287309646606445
    6. ' ]' → logprob: -9.287309646606445
    7. ' ' → logprob: -10.787309646606445
    8. '	for' → logprob: -10.912309646606445
    9. ']+' → logprob: -11.662309646606445
    10. '```' → logprob: -12.787309646606445

Token 88: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7518053650856018
    2. '_' → logprob: -1.001805305480957
    3. 'range' → logprob: -2.001805305480957
    4. ' range' → logprob: -4.251805305480957
    5. '_i' → logprob: -4.876805305480957
    6. ' i' → logprob: -6.251805305480957
    7. 'in' → logprob: -6.376805305480957
    8. '_range' → logprob: -8.501805305480957
    9. '(range' → logprob: -8.501805305480957
    10. ' _' → logprob: -8.876805305480957

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002374067902565
    2. 'in' → logprob: -2.3502373695373535
    3. 'range' → logprob: -11.100237846374512
    4. ' ' → logprob: -11.725237846374512
    5. '_' → logprob: -13.600237846374512
    6. '(' → logprob: -13.725237846374512
    7. ' range' → logprob: -13.850237846374512
    8. 'n' → logprob: -14.225237846374512
    9. 'i' → logprob: -14.225237846374512
    10. '```' → logprob: -14.975237846374512

Token 90: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859020933508873
    2. ' range' → logprob: -3.0485901832580566
    3. '(range' → logprob: -13.173590660095215
    4. '	range' → logprob: -15.548590660095215
    5. 'rang' → logprob: -15.673590660095215
    6. ' ' → logprob: -15.798590660095215
    7. 'ran' → logprob: -15.923590660095215
    8. 'r' → logprob: -16.6735897064209
    9. '  ' → logprob: -16.7985897064209
    10. '   ' → logprob: -16.9235897064209

Token 91: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.049755782238208e-05
    2. 'n' → logprob: -10.12505054473877
    3. '(' → logprob: -11.50005054473877
    4. ' (' → logprob: -16.000049591064453
    5. '(range' → logprob: -16.875049591064453
    6. ')n' → logprob: -17.000049591064453
    7. ' n' → logprob: -17.750049591064453
    8. ']' → logprob: -18.125049591064453
    9. '](' → logprob: -18.250049591064453
    10. '(
' → logprob: -18.625049591064453

Token 92: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07972637563943863
    2. ']' → logprob: -2.579726457595825
    3. ')' → logprob: -7.204726219177246
    4. '])' → logprob: -10.454726219177246
    5. ')]
' → logprob: -10.579726219177246
    6. ']
' → logprob: -10.829726219177246
    7. ' ]' → logprob: -11.579726219177246
    8. '])]' → logprob: -12.829726219177246
    9. ')]
' → logprob: -13.204726219177246
    10. ')],' → logprob: -14.204726219177246

Token 93: 'final' (ID: 17196)
  Prédit: 'finish'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finish' → logprob: -0.4888242185115814
    2. 'finished' → logprob: -0.9888242483139038
    3. 'def' → logprob: -5.613824367523193
    4. 'fin' → logprob: -5.613824367523193
    5. 'low' → logprob: -5.738824367523193
    6. 'stack' → logprob: -6.738824367523193
    7. 'visited' → logprob: -6.863824367523193
    8. 'parent' → logprob: -7.363824367523193
    9. 'completion' → logprob: -8.363823890686035
    10. 'color' → logprob: -8.488823890686035

Token 94: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.3047238290309906
    2. 'time' → logprob: -1.804723858833313
    3. '[' → logprob: -2.9297237396240234
    4. '=' → logprob: -3.5547237396240234
    5. 'ize' → logprob: -4.679723739624023
    6. '_time' → logprob: -5.554723739624023
    7. '=[]' → logprob: -7.554723739624023
    8. 'ly' → logprob: -7.554723739624023
    9. 'e' → logprob: -8.179723739624023
    10. 'ized' → logprob: -8.304723739624023

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '[' → logprob: -15.375001907348633
    4. '(' → logprob: -17.250001907348633
    5. '   ' → logprob: -19.125001907348633
    6. '```' → logprob: -19.750001907348633
    7. 'for' → logprob: -20.375001907348633
    8. '۰' → logprob: -21.125001907348633
    9. ']' → logprob: -21.250001907348633
    10. '０' → logprob: -21.250001907348633

Token 96: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8389707803726196
    2. 'for' → logprob: -0.8389707803726196
    3. ']' → logprob: -2.08897066116333
    4. ')' → logprob: -4.58897066116333
    5. '(for' → logprob: -7.71397066116333
    6. '[' → logprob: -7.96397066116333
    7. ')]' → logprob: -8.213971138000488
    8. '	for' → logprob: -8.463971138000488
    9. '(' → logprob: -8.963971138000488
    10. ' ' → logprob: -9.088971138000488

Token 97: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002116462419508025
    2. 'range' → logprob: -9.000211715698242
    3. ' i' → logprob: -9.375211715698242
    4. ' range' → logprob: -13.000211715698242
    5. 'int' → logprob: -14.250211715698242
    6. '(i' → logprob: -15.000211715698242
    7. 'in' → logprob: -16.500211715698242
    8. '_' → logprob: -16.875211715698242
    9. ' ' → logprob: -17.125211715698242
    10. '   ' → logprob: -17.375211715698242

Token 98: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8225429654121399
    2. 'in' → logprob: -1.1975429058074951
    3. ' in' → logprob: -1.6975429058074951
    4. '(range' → logprob: -2.697542905807495
    5. ' range' → logprob: -5.322543144226074
    6. '(n' → logprob: -5.822543144226074
    7. '(' → logprob: -8.072543144226074
    8. 'for' → logprob: -10.447543144226074
    9. ' (' → logprob: -10.947543144226074
    10. '```' → logprob: -11.947543144226074

Token 99: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006050990778021514
    2. ' range' → logprob: -7.50060510635376
    3. '(range' → logprob: -9.875604629516602
    4. '(n' → logprob: -14.500604629516602
    5. '	range' → logprob: -17.2506046295166
    6. 'n' → logprob: -17.6256046295166
    7. '(' → logprob: -17.7506046295166
    8. '.range' → logprob: -19.3756046295166
    9. '```' → logprob: -19.8756046295166
    10. '`' → logprob: -20.3756046295166

Token 100: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009183663059957325
    2. 'n' → logprob: -7.000918388366699
    3. '(' → logprob: -12.2509183883667
    4. ')' → logprob: -13.5009183883667
    5. ')]' → logprob: -15.2509183883667
    6. ' (' → logprob: -16.125917434692383
    7. ')n' → logprob: -16.125917434692383
    8. 'range' → logprob: -16.250917434692383
    9. '```' → logprob: -16.750917434692383
    10. ',n' → logprob: -16.875917434692383

Token 101: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005027544684708118
    2. ']' → logprob: -7.750502586364746
    3. ')' → logprob: -9.750502586364746
    4. ')]
' → logprob: -12.125502586364746
    5. '])' → logprob: -12.375502586364746
    6. '])]' → logprob: -13.000502586364746
    7. ')])' → logprob: -14.625502586364746
    8. '')]' → logprob: -14.750502586364746
    9. ')]

' → logprob: -15.750502586364746
    10. ']
' → logprob: -16.375503540039062

Token 102: 'stack' (ID: 15145)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4019644856452942
    2. 'stack' → logprob: -1.1519644260406494
    3. 'visited' → logprob: -4.7769646644592285
    4. 'color' → logprob: -5.1519646644592285
    5. 'finished' → logprob: -7.9019646644592285
    6. 'parent' → logprob: -8.77696418762207
    7. 'finish' → logprob: -9.65196418762207
    8. 'visit' → logprob: -10.52696418762207
    9. 'state' → logprob: -10.65196418762207
    10. 'status' → logprob: -10.65196418762207

Token 103: '=[]' (ID: 65563)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5390117168426514
    2. '=[]' → logprob: -0.9140117168426514
    3. ' =' → logprob: -4.1640119552612305
    4. '=[' → logprob: -9.28901195526123
    5. '=[]
' → logprob: -9.53901195526123
    6. '=[]
' → logprob: -10.91401195526123
    7. '=[],' → logprob: -11.53901195526123
    8. '={}' → logprob: -12.28901195526123
    9. ']' → logprob: -12.66401195526123
    10. ']=' → logprob: -12.91401195526123

Token 104: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6563411355018616
    2. 'def' → logprob: -0.7813411355018616
    3. '<|end|>' → logprob: -3.906341075897217
    4. ' for' → logprob: -7.031341075897217
    5. 'current' → logprob: -7.406341075897217
    6. 'visited' → logprob: -7.406341075897217
    7. '
' → logprob: -8.031341552734375
    8. 'index' → logprob: -8.406341552734375
    9. 'i' → logprob: -8.531341552734375
    10. '0' → logprob: -8.781341552734375

Token 105: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00043674863991327584
    2. 'for' → logprob: -7.750436782836914
    3. 'visited' → logprob: -13.500436782836914
    4. 'while' → logprob: -13.750436782836914
    5. 'i' → logprob: -14.250436782836914
    6. ' def' → logprob: -14.500436782836914
    7. 'import' → logprob: -14.500436782836914
    8. 'stack' → logprob: -14.750436782836914
    9. '```' → logprob: -15.250436782836914
    10. 'index' → logprob: -15.250436782836914

Token 106: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.6477651596069336
    2. 'dfs' → logprob: -0.7727651596069336
    3. ' DFS' → logprob: -4.272765159606934
    4. 'DFS' → logprob: -6.897765159606934
    5. 'df' → logprob: -10.022765159606934
    6. 'd' → logprob: -11.272765159606934
    7. ' depth' → logprob: -11.272765159606934
    8. ' df' → logprob: -12.272765159606934
    9. ' ' → logprob: -12.772765159606934
    10. 'depth' → logprob: -12.772765159606934

Token 107: '(id' (ID: 6589)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22918547689914703
    2. '(i' → logprob: -1.7291854619979858
    3. '(node' → logprob: -4.354185581207275
    4. '(u' → logprob: -4.354185581207275
    5. '(v' → logprob: -7.354185581207275
    6. '(n' → logprob: -7.604185581207275
    7. '(x' → logprob: -7.979185581207275
    8. '(s' → logprob: -9.479185104370117
    9. '(a' → logprob: -10.229185104370117
    10. '(vertex' → logprob: -11.104185104370117

Token 108: ',time' (ID: 125988)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002812005812302232
    2. '):
' → logprob: -6.377811908721924
    3. ')' → logprob: -7.252811908721924
    4. ',' → logprob: -8.377812385559082
    5. ' ):' → logprob: -9.502812385559082
    6. '):
' → logprob: -11.002812385559082
    7. 'd' → logprob: -11.252812385559082
    8. '_' → logprob: -11.377812385559082
    9. '(i' → logprob: -11.502812385559082
    10. 'u' → logprob: -11.752812385559082

Token 109: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005714046768844128
    2. ',' → logprob: -5.255713939666748
    3. ')' → logprob: -7.880713939666748
    4. ' ):' → logprob: -9.755714416503906
    5. '):
' → logprob: -10.380714416503906
    6. ':' → logprob: -12.755714416503906
    7. ',n' → logprob: -13.380714416503906
    8. ' ,' → logprob: -13.505714416503906
    9. ',index' → logprob: -14.130714416503906
    10. '=' → logprob: -14.505714416503906

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2010943740606308
    2. ' if' → logprob: -1.826094388961792
    3. ' time' → logprob: -4.576094150543213
    4. ' stack' → logprob: -5.076094150543213
    5. ' discover' → logprob: -6.326094150543213
    6. '	stack' → logprob: -7.576094150543213
    7. '   ' → logprob: -7.826094150543213
    8. 'discover' → logprob: -7.951094150543213
    9. ' global' → logprob: -8.076094627380371
    10. 'stack' → logprob: -8.576094627380371

Token 111: ' for' (ID: 395)
  Prédit: 'discover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'discover' → logprob: -0.13442692160606384
    2. ' discover' → logprob: -2.5094268321990967
    3. ' if' → logprob: -3.6344268321990967
    4. '   ' → logprob: -4.259427070617676
    5. 'stack' → logprob: -6.509427070617676
    6. 'if' → logprob: -6.759427070617676
    7. ' stack' → logprob: -7.634427070617676
    8. 'global' → logprob: -8.384427070617676
    9. ' global' → logprob: -8.634427070617676
    10. 'time' → logprob: -9.134427070617676

Token 112: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07472638785839081
    2. 'j' → logprob: -3.0747263431549072
    3. 'v' → logprob: -4.199726581573486
    4. 'k' → logprob: -4.824726581573486
    5. ' i' → logprob: -6.949726581573486
    6. 'x' → logprob: -7.449726581573486
    7. 'u' → logprob: -7.824726581573486
    8. 'node' → logprob: -8.699726104736328
    9. 'neighbor' → logprob: -8.699726104736328
    10. 'w' → logprob: -9.324726104736328

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11295817047357559
    2. 'in' → logprob: -2.2379581928253174
    3. ' ' → logprob: -9.112957954406738
    4. 'range' → logprob: -11.362957954406738
    5. '  ' → logprob: -12.487957954406738
    6. '   ' → logprob: -12.612957954406738
    7. '	in' → logprob: -13.112957954406738
    8. ',' → logprob: -13.862957954406738
    9. ' range' → logprob: -14.112957954406738
    10. '    ' → logprob: -14.362957954406738

Token 114: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007113590254448354
    2. ' range' → logprob: -7.250711441040039
    3. '(range' → logprob: -14.000711441040039
    4. 'stack' → logprob: -14.875711441040039
    5. 'edge' → logprob: -15.750711441040039
    6. ')' → logprob: -17.50071144104004
    7. 'adj' → logprob: -17.62571144104004
    8. '	range' → logprob: -17.75071144104004
    9. ' ' → logprob: -18.25071144104004
    10. '   ' → logprob: -18.50071144104004

Token 115: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003167545364703983
    2. 'n' → logprob: -8.625316619873047
    3. '(len' → logprob: -9.000316619873047
    4. '(' → logprob: -11.375316619873047
    5. 'len' → logprob: -13.500316619873047
    6. ' n' → logprob: -15.000316619873047
    7. '(edge' → logprob: -15.875316619873047
    8. ')n' → logprob: -16.250316619873047
    9. '	n' → logprob: -16.375316619873047
    10. ' (' → logprob: -16.500316619873047

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07890267670154572
    2. '):
' → logprob: -2.5789027214050293
    3. '):
' → logprob: -11.578902244567871
    4. '):

' → logprob: -13.828902244567871
    5. ' ):' → logprob: -13.953902244567871
    6. ')' → logprob: -14.828902244567871
    7. ':' → logprob: -14.953902244567871
    8. '   ' → logprob: -15.078902244567871
    9. ']:' → logprob: -15.703902244567871
    10. '():' → logprob: -16.078903198242188

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042234960943460464
    2. ' if' → logprob: -3.7922348976135254
    3. 'if' → logprob: -4.042234897613525
    4. '<|end|>' → logprob: -7.042234897613525
    5. '   ' → logprob: -8.042235374450684
    6. ' ' → logprob: -11.042235374450684
    7. ',' → logprob: -11.667235374450684
    8. '```' → logprob: -11.792235374450684
    9. '    ' → logprob: -12.167235374450684
    10. '<|end|>' → logprob: -12.167235374450684

Token 118: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004889904521405697
    2. ' if' → logprob: -5.504889965057373
    3. '       ' → logprob: -7.254889965057373
    4. '   ' → logprob: -9.254889488220215
    5. '```' → logprob: -11.879889488220215
    6. '           ' → logprob: -14.379889488220215
    7. '
' → logprob: -14.504889488220215
    8. 'edge' → logprob: -15.129889488220215
    9. ' ' → logprob: -15.504889488220215
    10. '	if' → logprob: -15.629889488220215

Token 119: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2509135007858276
    2. 'ont' → logprob: -1.6259135007858276
    3. 'in' → logprob: -2.125913619995117
    4. 'f' → logprob: -2.125913619995117
    5. 'if' → logprob: -2.250913619995117
    6. ' in' → logprob: -3.375913619995117
    7. '==' → logprob: -3.625913619995117
    8. '=edge' → logprob: -4.000913619995117
    9. ' if' → logprob: -4.375913619995117
    10. ':' → logprob: -4.500913619995117

Token 120: '0' (ID: 15)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.07724344730377197
    2. 'adj' → logprob: -2.9522433280944824
    3. ' edge' → logprob: -4.327243328094482
    4. '1' → logprob: -5.327243328094482
    5. '0' → logprob: -6.452243328094482
    6. 'i' → logprob: -6.952243328094482
    7. 'stack' → logprob: -6.952243328094482
    8. ' adj' → logprob: -8.70224380493164
    9. '   ' → logprob: -9.20224380493164
    10. ' ' → logprob: -9.82724380493164

Token 121: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11347679793834686
    2. ' if' → logprob: -2.4884767532348633
    3. '       ' → logprob: -3.7384767532348633
    4. '   ' → logprob: -8.738476753234863
    5. '<|end|>' → logprob: -8.863476753234863
    6. ' ' → logprob: -10.363476753234863
    7. '        ' → logprob: -10.613476753234863
    8. '    ' → logprob: -10.738476753234863
    9. 'for' → logprob: -11.363476753234863
    10. '
' → logprob: -11.613476753234863

Token 124: ' edge' (ID: 11165)
  Prédit: 'discover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discover' → logprob: -0.4953117072582245
    2. ' discover' → logprob: -0.9953117370605469
    3. ' edge' → logprob: -4.620311737060547
    4. 'edge' → logprob: -5.245311737060547
    5. 'adj' → logprob: -5.620311737060547
    6. ' adj' → logprob: -7.620311737060547
    7. 'stack' → logprob: -7.995311737060547
    8. ' stack' → logprob: -8.245311737060547
    9. ' time' → logprob: -8.370311737060547
    10. ' ' → logprob: -8.870311737060547

Token 125: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -1.2948405128554441e-05
    2. '[' → logprob: -11.87501335144043
    3. '[i' → logprob: -12.62501335144043
    4. 'id' → logprob: -13.87501335144043
    5. ' [' → logprob: -14.25001335144043
    6. '```' → logprob: -15.50001335144043
    7. '][' → logprob: -16.00001335144043
    8. '   ' → logprob: -16.50001335144043
    9. '[ip' → logprob: -16.75001335144043
    10. '}[' → logprob: -16.87501335144043

Token 126: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0014756986638531089
    2. '[i' → logprob: -6.626475811004639
    3. ' ][' → logprob: -9.25147533416748
    4. ']' → logprob: -10.50147533416748
    5. '[' → logprob: -11.00147533416748
    6. '"][' → logprob: -13.00147533416748
    7. ']][' → logprob: -13.50147533416748
    8. '   ' → logprob: -13.62647533416748
    9. ''][' → logprob: -13.87647533416748
    10. 'i' → logprob: -14.50147533416748

Token 127: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.7968066206085496e-05
    2. ' i' → logprob: -10.750027656555176
    3. '[i' → logprob: -12.250027656555176
    4. ']' → logprob: -14.875027656555176
    5. '][' → logprob: -15.375027656555176
    6. '   ' → logprob: -15.500027656555176
    7. '
' → logprob: -15.625027656555176
    8. '[' → logprob: -15.875027656555176
    9. ' ' → logprob: -15.875027656555176
    10. '0' → logprob: -16.250028610229492

Token 128: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.0019419649615883827
    2. ']' → logprob: -6.251942157745361
    3. ' ]' → logprob: -12.001941680908203
    4. ']!=' → logprob: -12.876941680908203
    5. '==' → logprob: -13.376941680908203
    6. ']>' → logprob: -13.626941680908203
    7. 'and' → logprob: -14.126941680908203
    8. '']==' → logprob: -14.126941680908203
    9. ']>=' → logprob: -15.376941680908203
    10. '```' → logprob: -16.751941680908203

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -16.000009536743164
    4. '   ' → logprob: -17.250009536743164
    5. '  ' → logprob: -19.000009536743164
    6. '１' → logprob: -19.125009536743164
    7. '=' → logprob: -20.000009536743164
    8. '
' → logprob: -20.875009536743164
    9. '    ' → logprob: -20.875009536743164
    10. '۱' → logprob: -21.062509536743164

Token 130: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04871022701263428
    2. 'and' → logprob: -3.048710346221924
    3. '           ' → logprob: -10.298709869384766
    4. ':
' → logprob: -10.423709869384766
    5. '       ' → logprob: -10.798709869384766
    6. ':' → logprob: -11.298709869384766
    7. ' ' → logprob: -11.548709869384766
    8. '   ' → logprob: -12.298709869384766
    9. '        ' → logprob: -12.673709869384766
    10. '    ' → logprob: -13.298709869384766

Token 131: ' discover' (ID: 8275)
  Prédit: 'discover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discover' → logprob: -0.0033176883589476347
    2. ' discover' → logprob: -5.753317832946777
    3. 'not' → logprob: -9.003317832946777
    4. ' not' → logprob: -11.378317832946777
    5. ' ' → logprob: -12.878317832946777
    6. 'dis' → logprob: -13.378317832946777
    7. '   ' → logprob: -14.878317832946777
    8. 'discard' → logprob: -15.128317832946777
    9. 'disc' → logprob: -15.878317832946777
    10. 'time' → logprob: -16.12831687927246

Token 132: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0038592200726270676
    2. '[id' → logprob: -5.628859043121338
    3. '[c' → logprob: -8.628859519958496
    4. '[' → logprob: -9.628859519958496
    5. 'id' → logprob: -12.253859519958496
    6. 'i' → logprob: -12.878859519958496
    7. '==' → logprob: -13.003859519958496
    8. '```' → logprob: -13.253859519958496
    9. 'c' → logprob: -13.878859519958496
    10. '[
' → logprob: -15.128859519958496

Token 133: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.015082990750670433
    2. '==' → logprob: -4.265082836151123
    3. ']' → logprob: -7.140082836151123
    4. ' ==' → logprob: -10.015083312988281
    5. '']==' → logprob: -10.015083312988281
    6. '[' → logprob: -11.140083312988281
    7. ' ]' → logprob: -11.890083312988281
    8. ')==' → logprob: -12.265083312988281
    9. '0' → logprob: -12.390083312988281
    10. '```' → logprob: -12.640083312988281

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.37500762939453
    4. '           ' → logprob: -19.37500762939453
    5. '  ' → logprob: -19.50000762939453
    6. '０' → logprob: -19.62500762939453
    7. '```' → logprob: -19.62500762939453
    8. '     ' → logprob: -19.75000762939453
    9. '                   ' → logprob: -20.12500762939453
    10. '۰' → logprob: -20.25000762939453

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08031125366687775
    2. ':
' → logprob: -2.5803112983703613
    3. '           ' → logprob: -7.080311298370361
    4. ' and' → logprob: -8.080310821533203
    5. '       ' → logprob: -9.080310821533203
    6. ' :' → logprob: -9.705310821533203
    7. ':
' → logprob: -10.955310821533203
    8. ':

' → logprob: -11.330310821533203
    9. ' :
' → logprob: -11.455310821533203
    10. '):' → logprob: -11.580310821533203

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01125341933220625
    2. ' discover' → logprob: -5.136253356933594
    3. 'discover' → logprob: -5.511253356933594
    4. ' c' → logprob: -8.136253356933594
    5. '       ' → logprob: -8.386253356933594
    6. '          ' → logprob: -8.886253356933594
    7. 'c' → logprob: -9.136253356933594
    8. 'time' → logprob: -9.261253356933594
    9. ' time' → logprob: -9.386253356933594
    10. '               ' → logprob: -9.636253356933594

Token 137: ' stack' (ID: 10825)
  Prédit: 'discover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'discover' → logprob: -0.35803577303886414
    2. '               ' → logprob: -1.8580358028411865
    3. 'time' → logprob: -2.2330358028411865
    4. 'dis' → logprob: -3.9830358028411865
    5. 'c' → logprob: -4.733035564422607
    6. '           ' → logprob: -5.483035564422607
    7. ' discover' → logprob: -5.858035564422607
    8. ' time' → logprob: -6.858035564422607
    9. '   ' → logprob: -6.858035564422607
    10. '       ' → logprob: -7.983035564422607

Token 138: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001506528351455927
    2. '.' → logprob: -6.501506328582764
    3. '.app' → logprob: -13.501506805419922
    4. '.pop' → logprob: -13.501506805419922
    5. '.extend' → logprob: -14.376506805419922
    6. 'append' → logprob: -14.501506805419922
    7. '.ap' → logprob: -15.501506805419922
    8. ' .' → logprob: -16.001506805419922
    9. '.push' → logprob: -16.876506805419922
    10. '.a' → logprob: -19.251506805419922

Token 139: '(id' (ID: 6589)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9504606825648807e-05
    2. '(' → logprob: -10.875019073486328
    3. '((' → logprob: -14.500019073486328
    4. 'i' → logprob: -17.125019073486328
    5. '(
' → logprob: -17.250019073486328
    6. '(id' → logprob: -18.625019073486328
    7. '(a' → logprob: -20.500019073486328
    8. '(I' → logprob: -20.750019073486328
    9. '(x' → logprob: -21.000019073486328
    10. '(

' → logprob: -21.000019073486328

Token 140: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08955710381269455
    2. ')' → logprob: -2.46455717086792
    3. ')
' → logprob: -8.089556694030762
    4. '           ' → logprob: -8.714556694030762
    5. ' )
' → logprob: -8.964556694030762
    6. ')i' → logprob: -12.214556694030762
    7. ' )' → logprob: -12.339556694030762
    8. ')

' → logprob: -12.839556694030762
    9. '   ' → logprob: -13.339556694030762
    10. '               ' → logprob: -13.839556694030762

Token 141: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009299826808273792
    2. 'discover' → logprob: -5.3842997550964355
    3. ' time' → logprob: -6.5092997550964355
    4. ' discover' → logprob: -6.6342997550964355
    5. 'time' → logprob: -7.0092997550964355
    6. '
' → logprob: -8.009300231933594
    7. '       ' → logprob: -8.634300231933594
    8. '            
' → logprob: -9.384300231933594
    9. ' discovery' → logprob: -9.759300231933594
    10. '               ' → logprob: -9.884300231933594

Token 142: ' discover' (ID: 8275)
  Prédit: 'discover'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discover' (adapté à ' discover') → logprob: -0.05049487575888634
    2. 'time' → logprob: -3.550494909286499
    3. '           ' → logprob: -5.17549467086792
    4. ' discover' → logprob: -5.42549467086792
    5. 'dis' → logprob: -5.55049467086792
    6. '   ' → logprob: -5.92549467086792
    7. 'c' → logprob: -6.17549467086792
    8. '       ' → logprob: -7.30049467086792
    9. '               ' → logprob: -7.42549467086792
    10. ' time' → logprob: -8.550495147705078

Token 143: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013858173042535782
    2. '[id' → logprob: -9.250138282775879
    3. '[' → logprob: -10.125138282775879
    4. '```' → logprob: -15.250138282775879
    5. '[I' → logprob: -15.375138282775879
    6. '[next' → logprob: -15.625138282775879
    7. '[s' → logprob: -15.750138282775879
    8. '[node' → logprob: -15.875138282775879
    9. '[u' → logprob: -16.000139236450195
    10. 'i' → logprob: -16.000139236450195

Token 144: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.04723139479756355
    2. ']' → logprob: -3.172231435775757
    3. '[i' → logprob: -5.547231197357178
    4. '=' → logprob: -8.797231674194336
    5. ']+=' → logprob: -9.797231674194336
    6. ']==' → logprob: -10.172231674194336
    7. '[' → logprob: -11.172231674194336
    8. ']=-' → logprob: -11.422231674194336
    9. '=i' → logprob: -11.922231674194336
    10. '][' → logprob: -12.047231674194336

Token 145: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.00028648413717746735
    2. ' time' → logprob: -8.375286102294922
    3. '1' → logprob: -9.875286102294922
    4. '   ' → logprob: -13.250286102294922
    5. '	time' → logprob: -14.625286102294922
    6. 't' → logprob: -14.750286102294922
    7. ' ' → logprob: -15.000286102294922
    8. '"time' → logprob: -15.125286102294922
    9. '  ' → logprob: -15.500286102294922
    10. '=time' → logprob: -15.500286102294922

Token 146: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8091304302215576
    2. '
' → logprob: -0.9341304302215576
    3. '+' → logprob: -1.9341304302215576
    4. '<|end|>' → logprob: -5.309130668640137
    5. '<|end|>' → logprob: -5.434130668640137
    6. 'time' → logprob: -6.184130668640137
    7. '
' → logprob: -6.684130668640137
    8. ' +' → logprob: -6.684130668640137
    9. '            
' → logprob: -6.934130668640137
    10. '+
' → logprob: -7.809130668640137

Token 147: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003009553998708725
    2. 'time' → logprob: -6.50300931930542
    3. '
' → logprob: -7.50300931930542
    4. ' time' → logprob: -7.75300931930542
    5. '            
' → logprob: -9.003009796142578
    6. '            ' → logprob: -9.378009796142578
    7. '       ' → logprob: -9.503009796142578
    8. '          ' → logprob: -9.503009796142578
    9. ',time' → logprob: -10.003009796142578
    10. '               ' → logprob: -10.503009796142578

Token 148: ' c' (ID: 274)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0013647585874423385
    2. 'dfs' → logprob: -7.001364707946777
    3. '           ' → logprob: -9.001364707946777
    4. ' time' → logprob: -9.376364707946777
    5. 'return' → logprob: -9.501364707946777
    6. '   ' → logprob: -10.001364707946777
    7. 'stack' → logprob: -10.751364707946777
    8. '               ' → logprob: -11.001364707946777
    9. 'new' → logprob: -11.001364707946777
    10. 't' → logprob: -11.876364707946777

Token 149: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.13218531012535095
    2. '=' → logprob: -2.132185220718384
    3. ' +=' → logprob: -5.382185459136963
    4. '+' → logprob: -7.882185459136963
    5. ' =' → logprob: -9.007184982299805
    6. '=c' → logprob: -9.757184982299805
    7. '=time' → logprob: -9.757184982299805
    8. '   ' → logprob: -11.007184982299805
    9. '=int' → logprob: -12.632184982299805
    10. 'time' → logprob: -13.257184982299805

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.431207682704553e-05
    2. ' ' → logprob: -9.875054359436035
    3. '   ' → logprob: -13.625054359436035
    4. 'time' → logprob: -13.750054359436035
    5. 'c' → logprob: -15.000054359436035
    6. '  ' → logprob: -16.62505340576172
    7. '
' → logprob: -17.62505340576172
    8. '１' → logprob: -18.12505340576172
    9. '       ' → logprob: -18.37505340576172
    10. ' time' → logprob: -18.75005340576172

Token 151: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009680655784904957
    2. ' time' → logprob: -5.63468074798584
    3. 'time' → logprob: -6.00968074798584
    4. '
' → logprob: -6.00968074798584
    5. 'return' → logprob: -7.88468074798584
    6. ' return' → logprob: -8.00968074798584
    7. ' if' → logprob: -8.25968074798584
    8. '            
' → logprob: -9.75968074798584
    9. 'if' → logprob: -10.13468074798584
    10. '               ' → logprob: -11.00968074798584

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07330688834190369
    2. 'time' → logprob: -2.9483067989349365
    3. ' time' → logprob: -4.573307037353516
    4. ' if' → logprob: -5.948307037353516
    5. 'if' → logprob: -6.198307037353516
    6. 'return' → logprob: -6.198307037353516
    7. ' return' → logprob: -7.948307037353516
    8. '
' → logprob: -8.198307037353516
    9. '       ' → logprob: -8.448307037353516
    10. '               ' → logprob: -9.323307037353516

Token 153: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.015167525969445705
    2. '           ' → logprob: -4.640167713165283
    3. '   ' → logprob: -6.640167713165283
    4. 'dfs' → logprob: -6.640167713165283
    5. ' time' → logprob: -6.765167713165283
    6. 'if' → logprob: -7.265167713165283
    7. 'return' → logprob: -8.390167236328125
    8. '               ' → logprob: -8.515167236328125
    9. '       ' → logprob: -9.140167236328125
    10. 't' → logprob: -9.515167236328125

Token 154: 'print' (ID: 1598)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.2848265767097473
    2. 'dfs' → logprob: -2.1598265171051025
    3. ' time' → logprob: -2.4098265171051025
    4. 'time' → logprob: -4.034826755523682
    5. ' if' → logprob: -4.784826755523682
    6. ' return' → logprob: -4.909826755523682
    7. 'return' → logprob: -6.284826755523682
    8. ' stack' → logprob: -6.409826755523682
    9. 'if' → logprob: -6.659826755523682
    10. '   ' → logprob: -7.034826755523682

Token 155: '(dis' (ID: 26948)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5378616452217102
    2. '("' → logprob: -1.0378615856170654
    3. '('' → logprob: -3.5378615856170654
    4. '(stack' → logprob: -3.9128615856170654
    5. '(i' → logprob: -5.0378618240356445
    6. '()' → logprob: -6.2878618240356445
    7. '(id' → logprob: -6.4128618240356445
    8. '("("' → logprob: -7.1628618240356445
    9. '(time' → logprob: -7.2878618240356445
    10. '(c' → logprob: -8.787861824035645

Token 156: 'cover' (ID: 4548)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.17053347826004028
    2. 'cover' → logprob: -2.4205334186553955
    3. ')' → logprob: -2.7955334186553955
    4. 'ov' → logprob: -6.795533657073975
    5. 'or' → logprob: -7.420533657073975
    6. 'print' → logprob: -7.670533657073975
    7. 'covered' → logprob: -7.670533657073975
    8. '(c' → logprob: -7.920533657073975
    9. 'o' → logprob: -8.045533180236816
    10. 'c' → logprob: -8.420533180236816

Token 157: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03650618717074394
    2. '[i' → logprob: -3.911506175994873
    3. ')
' → logprob: -4.286506175994873
    4. '[' → logprob: -7.036506175994873
    5. '   ' → logprob: -7.161506175994873
    6. ',' → logprob: -9.286506652832031
    7. ' )' → logprob: -9.411506652832031
    8. '(i' → logprob: -10.036506652832031
    9. '           ' → logprob: -10.286506652832031
    10. '       ' → logprob: -10.411506652832031

Token 158: 'final' (ID: 17196)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.2637019753456116
    2. ' time' → logprob: -2.388701915740967
    3. 'final' → logprob: -3.013701915740967
    4. ')' → logprob: -3.263701915740967
    5. '"' → logprob: -4.388701915740967
    6. ''' → logprob: -4.888701915740967
    7. 'stack' → logprob: -5.263701915740967
    8. ' final' → logprob: -5.263701915740967
    9. ' i' → logprob: -5.513701915740967
    10. 'i' → logprob: -5.638701915740967

Token 159: ',i' (ID: 25032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006758584058843553
    2. ')
' → logprob: -7.375675678253174
    3. ',' → logprob: -11.000676155090332
    4. '   ' → logprob: -11.500676155090332
    5. ' )' → logprob: -11.500676155090332
    6. '[' → logprob: -13.000676155090332
    7. ')
' → logprob: -13.375676155090332
    8. ' ' → logprob: -13.750676155090332
    9. '       ' → logprob: -13.875676155090332
    10. '[i' → logprob: -14.375676155090332

Token 160: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016317364061251283
    2. ')
' → logprob: -6.876631736755371
    3. ' )' → logprob: -7.626631736755371
    4. ',' → logprob: -9.376631736755371
    5. '```' → logprob: -12.251631736755371
    6. '   ' → logprob: -12.751631736755371
    7. ')
' → logprob: -13.001631736755371
    8. ' )
' → logprob: -13.126631736755371
    9. ')#' → logprob: -13.376631736755371
    10. ' ,' → logprob: -13.751631736755371

Token 161: 'stack' (ID: 15145)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.27834469079971313
    2. ')' → logprob: -2.7783446311950684
    3. 'i' → logprob: -2.7783446311950684
    4. ' time' → logprob: -2.9033446311950684
    5. 'dfs' → logprob: -3.7783446311950684
    6. ' i' → logprob: -4.653344631195068
    7. '"' → logprob: -5.153344631195068
    8. ' )' → logprob: -5.403344631195068
    9. ' dfs' → logprob: -5.403344631195068
    10. ')
' → logprob: -5.778344631195068

Token 162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008138752542436123
    2. ')
' → logprob: -5.008138656616211
    3. ' )' → logprob: -7.633138656616211
    4. '           ' → logprob: -7.633138656616211
    5. ',' → logprob: -8.008138656616211
    6. '   ' → logprob: -10.133138656616211
    7. '       ' → logprob: -10.633138656616211
    8. ' )
' → logprob: -11.258138656616211
    9. ')return' → logprob: -11.633138656616211
    10. '               ' → logprob: -12.508138656616211

Token 163: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17273171246051788
    2. 'time' → logprob: -2.047731637954712
    3. ' time' → logprob: -4.172731876373291
    4. 'return' → logprob: -5.172731876373291
    5. 'if' → logprob: -5.922731876373291
    6. ' if' → logprob: -6.422731876373291
    7. '
' → logprob: -6.672731876373291
    8. '       ' → logprob: -6.922731876373291
    9. ' return' → logprob: -7.672731876373291
    10. ',time' → logprob: -7.797731876373291

Token 164: ' dfs' (ID: 51252)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.10694395750761032
    2. ' time' → logprob: -2.4819438457489014
    3. '           ' → logprob: -4.9819440841674805
    4. '   ' → logprob: -5.6069440841674805
    5. 'return' → logprob: -6.2319440841674805
    6. ',' → logprob: -6.8569440841674805
    7. ',time' → logprob: -6.9819440841674805
    8. ' return' → logprob: -7.4819440841674805
    9. 'dfs' (adapté à ' dfs') → logprob: -7.9819440841674805
    10. '               ' → logprob: -8.10694408416748

Token 165: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006735742092132568
    2. '(' → logprob: -5.006735801696777
    3. '(
' → logprob: -10.881735801696777
    4. ' (' → logprob: -14.381735801696777
    5. '((' → logprob: -14.631735801696777
    6. '(ii' → logprob: -15.631735801696777
    7. '(id' → logprob: -16.00673484802246
    8. '(

' → logprob: -16.50673484802246
    9. '```' → logprob: -16.88173484802246
    10. '(I' → logprob: -17.38173484802246

Token 166: ',time' (ID: 125988)
  Prédit: ',time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',time' → logprob: -0.00559634156525135
    2. ',' → logprob: -5.505596160888672
    3. ' ,' → logprob: -6.505596160888672
    4. '(time' → logprob: -12.005596160888672
    5. ',(' → logprob: -12.005596160888672
    6. ' ' → logprob: -13.380596160888672
    7. '   ' → logprob: -13.505596160888672
    8. 'time' → logprob: -14.005596160888672
    9. '  ' → logprob: -14.005596160888672
    10. ',c' → logprob: -14.630596160888672

Token 167: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2260388880968094
    2. ')' → logprob: -1.601038932800293
    3. ' +' → logprob: -7.726038932800293
    4. '+)' → logprob: -9.476038932800293
    5. ' )' → logprob: -9.601038932800293
    6. ')+' → logprob: -11.226038932800293
    7. ',time' → logprob: -11.976038932800293
    8. ')
' → logprob: -12.476038932800293
    9. '   ' → logprob: -13.476038932800293
    10. ',' → logprob: -13.601038932800293

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. 'c' → logprob: -11.875012397766113
    3. ' ' → logprob: -12.375012397766113
    4. '   ' → logprob: -14.750012397766113
    5. '
' → logprob: -16.250011444091797
    6. '2' → logprob: -16.375011444091797
    7. '           ' → logprob: -17.375011444091797
    8. '0' → logprob: -17.500011444091797
    9. '       ' → logprob: -17.500011444091797
    10. ' c' → logprob: -17.500011444091797

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1808500438928604
    2. ')
' → logprob: -1.8058500289916992
    3. '           ' → logprob: -7.180850028991699
    4. ')

' → logprob: -9.4308500289917
    5. ' )' → logprob: -9.6808500289917
    6. '   ' → logprob: -9.9308500289917
    7. '       ' → logprob: -10.1808500289917
    8. ')return' → logprob: -10.3058500289917
    9. ' )
' → logprob: -10.4308500289917
    10. ')
' → logprob: -11.0558500289917

Token 170: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16896958649158478
    2. ' if' → logprob: -2.2939696311950684
    3. 'final' → logprob: -3.5439696311950684
    4. 'if' → logprob: -4.168969631195068
    5. ' final' → logprob: -4.668969631195068
    6. '```' → logprob: -9.04396915435791
    7. '       ' → logprob: -9.16896915435791
    8. 'stack' → logprob: -9.16896915435791
    9. ' while' → logprob: -9.29396915435791
    10. 'time' → logprob: -9.29396915435791

Token 171: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5369704365730286
    2. ' if' → logprob: -1.4119703769683838
    3. 'if' → logprob: -1.7869703769683838
    4. 'final' → logprob: -6.036970615386963
    5. ' final' → logprob: -6.911970615386963
    6. '       ' → logprob: -7.536970615386963
    7. 'time' → logprob: -8.911970138549805
    8. '           ' → logprob: -9.786970138549805
    9. ' ' → logprob: -9.911970138549805
    10. ' time' → logprob: -10.161970138549805

Token 172: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4260920584201813
    2. ':' → logprob: -1.4260920286178589
    3. ' if' → logprob: -2.9260921478271484
    4. '       ' → logprob: -4.176092147827148
    5. ' continue' → logprob: -4.301092147827148
    6. ':
' → logprob: -4.676092147827148
    7. '   ' → logprob: -4.801092147827148
    8. 'if' → logprob: -6.051092147827148
    9. 'continue' → logprob: -6.551092147827148
    10. ' :' → logprob: -7.051092147827148

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2836574912071228
    2. '       ' → logprob: -2.4086575508117676
    3. 'if' → logprob: -2.6586575508117676
    4. 'continue' → logprob: -3.4086575508117676
    5. '   ' → logprob: -3.9086575508117676
    6. ' if' → logprob: -4.033657550811768
    7. ' continue' → logprob: -5.658657550811768
    8. 'stack' → logprob: -5.783657550811768
    9. 'pass' → logprob: -5.783657550811768
    10. 'final' → logprob: -6.158657550811768

Token 174: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.6071212887763977
    2. 'if' → logprob: -1.107121229171753
    3. 'continue' → logprob: -2.607121229171753
    4. 'final' → logprob: -3.482121229171753
    5. 'return' → logprob: -4.482121467590332
    6. '   ' → logprob: -5.607121467590332
    7. 'stack' → logprob: -5.982121467590332
    8. '       ' → logprob: -7.232121467590332
    9. 'time' → logprob: -7.357121467590332
    10. '           ' → logprob: -7.982121467590332

Token 175: '
' (ID: 198)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.34360337257385254
    2. '   ' → logprob: -1.5936033725738525
    3. 'if' → logprob: -3.4686033725738525
    4. ' if' → logprob: -3.5936033725738525
    5. ' final' → logprob: -3.5936033725738525
    6. '<|end|>' → logprob: -7.468603134155273
    7. '	final' → logprob: -8.593603134155273
    8. '       ' → logprob: -8.968603134155273
    9. '.final' → logprob: -9.468603134155273
    10. ' finalize' → logprob: -9.468603134155273

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09902769327163696
    2. '<|end|>' → logprob: -3.349027633666992
    3. ' if' → logprob: -3.849027633666992
    4. 'final' → logprob: -4.099027633666992
    5. ' final' → logprob: -5.474027633666992
    6. 'return' → logprob: -5.599027633666992
    7. 'time' → logprob: -5.724027633666992
    8. 'if' → logprob: -5.849027633666992
    9. '       ' → logprob: -6.224027633666992
    10. ')' → logprob: -6.849027633666992

Token 177: ' if' (ID: 538)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.3610212206840515
    2. 'if' (adapté à ' if') → logprob: -1.2360212802886963
    3. 'return' → logprob: -4.486021041870117
    4. '   ' → logprob: -7.236021041870117
    5. ' if' → logprob: -8.111021041870117
    6. ' final' → logprob: -9.111021041870117
    7. 'while' → logprob: -10.611021041870117
    8. 'discover' → logprob: -10.986021041870117
    9. 'for' → logprob: -11.111021041870117
    10. ' ' → logprob: -11.611021041870117

Token 178: ' c' (ID: 274)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3801286518573761
    2. 'not' → logprob: -2.6301286220550537
    3. ' not' → logprob: -2.7551286220550537
    4. ' len' → logprob: -2.8801286220550537
    5. 'stack' → logprob: -3.1301286220550537
    6. 'final' → logprob: -3.2551286220550537
    7. 'discover' → logprob: -3.5051286220550537
    8. ' stack' → logprob: -4.880128860473633
    9. 'c' → logprob: -6.630128860473633
    10. ' final' → logprob: -6.755128860473633

Token 179: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10448580235242844
    2. '>' → logprob: -2.3544857501983643
    3. ' ==' → logprob: -6.354485988616943
    4. '>=' → logprob: -6.354485988616943
    5. '+=' → logprob: -7.979485988616943
    6. '=' → logprob: -8.729485511779785
    7. ' >' → logprob: -8.979485511779785
    8. '!=' → logprob: -9.729485511779785
    9. '0' → logprob: -10.229485511779785
    10. '+' → logprob: -10.729485511779785

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011880126112373546
    2. ' ' → logprob: -9.12511920928955
    3. '1' → logprob: -11.62511920928955
    4. '   ' → logprob: -15.68761920928955
    5. '  ' → logprob: -16.250118255615234
    6. '2' → logprob: -16.500118255615234
    7. '=' → logprob: -16.562618255615234
    8. '
' → logprob: -16.750118255615234
    9. 'len' → logprob: -17.312618255615234
    10. '00' → logprob: -17.500118255615234

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08105377107858658
    2. ':
' → logprob: -2.8310537338256836
    3. ' and' → logprob: -4.706053733825684
    4. '   ' → logprob: -4.831053733825684
    5. '       ' → logprob: -7.581053733825684
    6. 'final' → logprob: -7.581053733825684
    7. 'and' → logprob: -7.831053733825684
    8. ' final' → logprob: -8.831053733825684
    9. ' or' → logprob: -8.956053733825684
    10. ' :' → logprob: -9.706053733825684

Token 182: '       ' (ID: 309)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.02112390659749508
    2. '   ' → logprob: -4.021123886108398
    3. ' final' → logprob: -5.896123886108398
    4. '       ' → logprob: -9.396123886108398
    5. 'stack' → logprob: -9.396123886108398
    6. ' ' → logprob: -10.896123886108398
    7. '	final' → logprob: -11.021123886108398
    8. '           ' → logprob: -12.021123886108398
    9. '  ' → logprob: -12.396123886108398
    10. 'finish' → logprob: -13.521123886108398

Token 183: ' if' (ID: 538)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -7.624555291840807e-05
    2. 'stack' → logprob: -10.000076293945312
    3. 'discover' → logprob: -11.375076293945312
    4. 'if' (adapté à ' if') → logprob: -11.500076293945312
    5. ' final' → logprob: -12.375076293945312
    6. '   ' → logprob: -13.000076293945312
    7. 'while' → logprob: -13.875076293945312
    8. 'time' → logprob: -14.750076293945312
    9. 'finish' → logprob: -15.375076293945312
    10. 'for' → logprob: -15.625076293945312

Token 184: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5931892991065979
    2. 'stack' → logprob: -1.0931892395019531
    3. ' stack' → logprob: -3.343189239501953
    4. ' len' → logprob: -3.593189239501953
    5. 'not' → logprob: -3.968189239501953
    6. 'final' → logprob: -4.218189239501953
    7. ' not' → logprob: -4.343189239501953
    8. 'discover' → logprob: -6.093189239501953
    9. ' final' → logprob: -8.093189239501953
    10. 'id' → logprob: -8.843189239501953

Token 185: '(stack' (ID: 52691)
  Prédit: '(stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -7.421908958349377e-05
    2. '(' → logprob: -10.00007438659668
    3. 'stack' → logprob: -10.50007438659668
    4. ' (' → logprob: -15.12507438659668
    5. '(st' → logprob: -15.25007438659668
    6. ' stack' → logprob: -15.37507438659668
    7. '(Stack' → logprob: -15.37507438659668
    8. '	stack' → logprob: -15.87507438659668
    9. '(
' → logprob: -16.25007438659668
    10. '(queue' → logprob: -18.62507438659668

Token 186: ')>' (ID: 37292)
  Prédit: ')=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.6444218158721924
    2. ')' → logprob: -1.2694218158721924
    3. ')>' → logprob: -1.6444218158721924
    4. '==' → logprob: -8.519421577453613
    5. ' )' → logprob: -8.519421577453613
    6. ')!=' → logprob: -8.769421577453613
    7. '>' → logprob: -9.019421577453613
    8. ']==' → logprob: -9.894421577453613
    9. ')>=' → logprob: -10.144421577453613
    10. '()>' → logprob: -10.519421577453613

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011439072113716975
    2. ' ' → logprob: -9.125114440917969
    3. '=' → logprob: -12.375114440917969
    4. '>' → logprob: -14.750114440917969
    5. '1' → logprob: -14.875114440917969
    6. 'stack' → logprob: -16.00011444091797
    7. '==' → logprob: -16.25011444091797
    8. '   ' → logprob: -16.62511444091797
    9. '```' → logprob: -16.75011444091797
    10. ')' → logprob: -17.50011444091797

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7126577496528625
    2. ':
' → logprob: -0.7126577496528625
    3. '           ' → logprob: -4.587657928466797
    4. '):
' → logprob: -5.712657928466797
    5. ' and' → logprob: -6.462657928466797
    6. ',' → logprob: -6.587657928466797
    7. ' :
' → logprob: -7.212657928466797
    8. '):' → logprob: -7.337657928466797
    9. '       ' → logprob: -7.712657928466797
    10. ' :' → logprob: -7.962657928466797

Token 189: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5681843757629395
    2. ' final' → logprob: -1.5681843757629395
    3. 'final' → logprob: -2.3181843757629395
    4. ' stack' → logprob: -3.1931843757629395
    5. 'stack' → logprob: -3.1931843757629395
    6. ' id' → logprob: -3.6931843757629395
    7. '   ' → logprob: -5.1931843757629395
    8. 'id' → logprob: -5.3181843757629395
    9. ' node' → logprob: -6.8181843757629395
    10. '```' → logprob: -6.8181843757629395

Token 190: ' if' (ID: 538)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5935702323913574
    2. 'u' → logprob: -1.8435702323913574
    3. 'id' → logprob: -2.2185702323913574
    4. 'x' → logprob: -2.5935702323913574
    5. 'final' → logprob: -2.9685702323913574
    6. ' v' → logprob: -4.718570232391357
    7. 'tmp' → logprob: -4.968570232391357
    8. 't' → logprob: -5.218570232391357
    9. 'now' → logprob: -5.218570232391357
    10. 'stack' → logprob: -5.843570232391357

Token 191: ' final' (ID: 1721)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.1990148425102234
    2. ' stack' → logprob: -2.574014902114868
    3. 'discover' → logprob: -2.949014902114868
    4. 'id' → logprob: -3.574014902114868
    5. 'len' → logprob: -4.949014663696289
    6. ' id' → logprob: -5.324014663696289
    7. 'final' → logprob: -5.324014663696289
    8. ' discover' → logprob: -5.824014663696289
    9. ' len' → logprob: -6.824014663696289
    10. '(stack' → logprob: -7.574014663696289

Token 192: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -0.47681137919425964
    2. '[' → logprob: -0.976811408996582
    3. '][' → logprob: -6.101811408996582
    4. '[i' → logprob: -9.476811408996582
    5. '[len' → logprob: -9.601811408996582
    6. '[-' → logprob: -10.226811408996582
    7. 'stack' → logprob: -10.351811408996582
    8. ' [' → logprob: -10.476811408996582
    9. ')[' → logprob: -10.851811408996582
    10. '```' → logprob: -10.851811408996582

Token 193: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.03019576519727707
    2. '[id' → logprob: -3.780195713043213
    3. ']' → logprob: -5.155195713043213
    4. ']!=' → logprob: -7.155195713043213
    5. '][' → logprob: -8.655196189880371
    6. '==' → logprob: -10.030196189880371
    7. '']==' → logprob: -10.280196189880371
    8. '[' → logprob: -10.405196189880371
    9. '[i' → logprob: -10.780196189880371
    10. ']<' → logprob: -11.155196189880371

Token 194: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.8750057220459
    4. '           ' → logprob: -18.6250057220459
    5. '```' → logprob: -19.2500057220459
    6. '  ' → logprob: -19.3750057220459
    7. 'time' → logprob: -19.6250057220459
    8. '    ' → logprob: -19.7500057220459
    9. ')' → logprob: -20.1250057220459
    10. '       ' → logprob: -20.2500057220459

Token 195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1292874664068222
    2. ':
' → logprob: -2.2542874813079834
    3. '               ' → logprob: -4.254287242889404
    4. ' and' → logprob: -6.504287242889404
    5. '):
' → logprob: -8.379287719726562
    6. '):' → logprob: -9.254287719726562
    7. '           ' → logprob: -9.504287719726562
    8. ':

' → logprob: -10.004287719726562
    9. ':return' → logprob: -10.129287719726562
    10. ' :' → logprob: -10.629287719726562

Token 196: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17566163837909698
    2. ' final' → logprob: -2.425661563873291
    3. 'final' → logprob: -2.675661563873291
    4. '           ' → logprob: -5.925661563873291
    5. '```' → logprob: -7.300661563873291
    6. '       ' → logprob: -8.80066204071045
    7. '                   ' → logprob: -9.05066204071045
    8. '   ' → logprob: -9.05066204071045
    9. '	final' → logprob: -11.05066204071045
    10. 'Final' → logprob: -11.67566204071045

Token 197: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' (adapté à ' final') → logprob: -0.0033208883833140135
    2. ' final' → logprob: -6.003320693969727
    3. 'stack' → logprob: -7.503320693969727
    4. 'time' → logprob: -8.628320693969727
    5. '               ' → logprob: -10.003320693969727
    6. '   ' → logprob: -10.878320693969727
    7. '           ' → logprob: -11.003320693969727
    8. '                   ' → logprob: -11.628320693969727
    9. 'discover' → logprob: -11.753320693969727
    10. ' stack' → logprob: -12.378320693969727

Token 198: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -3.523948907968588e-05
    2. '[' → logprob: -10.375035285949707
    3. '```' → logprob: -13.250035285949707
    4. ' [' → logprob: -14.625035285949707
    5. 'id' → logprob: -15.125035285949707
    6. '][' → logprob: -15.500035285949707
    7. '[i' → logprob: -15.750035285949707
    8. '[user' → logprob: -16.37503433227539
    9. '[node' → logprob: -16.50003433227539
    10. '[class' → logprob: -16.62503433227539

Token 199: ']' (ID: 60)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.0009312293259426951
    2. ']' → logprob: -7.000931262969971
    3. ']+=' → logprob: -11.625930786132812
    4. '=' → logprob: -12.125930786132812
    5. ']==' → logprob: -13.375930786132812
    6. ']=(' → logprob: -13.625930786132812
    7. ']=-' → logprob: -13.875930786132812
    8. ' ]' → logprob: -14.500930786132812
    9. ')=' → logprob: -14.750930786132812
    10. ']]=' → logprob: -15.250930786132812

Token 200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008676333236508071
    2. ' =' → logprob: -7.75086784362793
    3. '=time' → logprob: -7.87586784362793
    4. '=int' → logprob: -11.00086784362793
    5. '=end' → logprob: -11.12586784362793
    6. '=len' → logprob: -12.25086784362793
    7. ']=' → logprob: -12.50086784362793
    8. '=c' → logprob: -13.37586784362793
    9. '=i' → logprob: -13.75086784362793
    10. '=max' → logprob: -13.87586784362793

Token 201: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0008282098569907248
    2. ' time' → logprob: -7.125828266143799
    3. 'max' → logprob: -11.50082778930664
    4. '   ' → logprob: -12.75082778930664
    5. ' ' → logprob: -13.25082778930664
    6. 'stack' → logprob: -13.50082778930664
    7. 't' → logprob: -13.87582778930664
    8. '  ' → logprob: -14.00082778930664
    9. 'ti' → logprob: -14.25082778930664
    10. '	time' → logprob: -14.37582778930664

Token 202: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21143071353435516
    2. '           ' → logprob: -1.7114306688308716
    3. '<|end|>' → logprob: -5.086430549621582
    4. '
' → logprob: -6.836430549621582
    5. '       ' → logprob: -6.961430549621582
    6. '   ' → logprob: -7.086430549621582
    7. '<|end|>' → logprob: -8.961430549621582
    8. 'return' → logprob: -9.336430549621582
    9. '                   ' → logprob: -9.336430549621582
    10. ')' → logprob: -9.461430549621582

Token 203: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' #' (ID: 1069)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0011976092355325818
    2. 'time' → logprob: -7.626197814941406
    3. 'if' → logprob: -7.751197814941406
    4. 'return' → logprob: -8.501197814941406
    5. ' stack' → logprob: -10.501197814941406
    6. '   ' → logprob: -11.251197814941406
    7. 'temp' → logprob: -12.001197814941406
    8. 'id' → logprob: -12.251197814941406
    9. '_stack' → logprob: -12.376197814941406
    10. '       ' → logprob: -12.626197814941406

Token 205: 'print' (ID: 1598)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.010887112468481064
    2. 'return' → logprob: -5.135887145996094
    3. 'if' → logprob: -5.510887145996094
    4. 'time' → logprob: -7.385887145996094
    5. ' stack' → logprob: -9.010887145996094
    6. '_stack' → logprob: -10.885887145996094
    7. 'id' → logprob: -11.010887145996094
    8. 'discover' → logprob: -11.010887145996094
    9. '   ' → logprob: -11.260887145996094
    10. '_' → logprob: -11.260887145996094

Token 206: '("' (ID: 568)
  Prédit: '(stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -0.24493008852005005
    2. '()' → logprob: -1.9949300289154053
    3. '(' → logprob: -3.1199300289154053
    4. 'stack' → logprob: -3.8699300289154053
    5. 'final' → logprob: -4.619930267333984
    6. '(final' → logprob: -5.869930267333984
    7. '("' → logprob: -6.994930267333984
    8. '('' → logprob: -7.494930267333984
    9. 'time' → logprob: -7.494930267333984
    10. '(time' → logprob: -7.744930267333984

Token 207: 'back' (ID: 2205)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1263214349746704
    2. '   ' → logprob: -2.876321315765381
    3. '       ' → logprob: -4.001321315765381
    4. '           ' → logprob: -4.626321315765381
    5. '0' → logprob: -4.751321315765381
    6. '               ' → logprob: -5.626321315765381
    7. ')
' → logprob: -5.626321315765381
    8. 'time' → logprob: -5.626321315765381
    9. '    ' → logprob: -6.001321315765381
    10. ' ' → logprob: -6.001321315765381

Token 208: '",' (ID: 672)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5893491506576538
    2. '       ' → logprob: -1.7143491506576538
    3. '           ' → logprob: -1.9643491506576538
    4. '")' → logprob: -2.0893492698669434
    5. '               ' → logprob: -2.3393492698669434
    6. '                   ' → logprob: -3.0893492698669434
    7. '                       ' → logprob: -3.2143492698669434
    8. 'tracking' → logprob: -3.3393492698669434
    9. '                               ' → logprob: -3.8393492698669434
    10. '                           ' → logprob: -3.9643492698669434

Token 209: 'discover' (ID: 189838)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.191362202167511
    2. ' stack' → logprob: -2.316362142562866
    3. 'time' → logprob: -3.066362142562866
    4. 'final' → logprob: -4.191362380981445
    5. 'id' → logprob: -4.941362380981445
    6. ')' → logprob: -5.816362380981445
    7. ' time' → logprob: -6.566362380981445
    8. ' id' → logprob: -6.941362380981445
    9. ' final' → logprob: -7.316362380981445
    10. '   ' → logprob: -9.316362380981445

Token 210: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04448951408267021
    2. '[id' → logprob: -3.919489622116089
    3. ')
' → logprob: -4.91948938369751
    4. '   ' → logprob: -4.91948938369751
    5. '[i' → logprob: -5.66948938369751
    6. '[' → logprob: -6.04448938369751
    7. ',' → logprob: -6.41948938369751
    8. ' )' → logprob: -7.04448938369751
    9. '[])' → logprob: -9.294489860534668
    10. '       ' → logprob: -9.544489860534668

Token 211: 'final' (ID: 17196)
  Prédit: 'final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.29224392771720886
    2. 'stack' → logprob: -1.4172439575195312
    3. 'time' → logprob: -4.667243957519531
    4. ')' → logprob: -7.667243957519531
    5. ' stack' → logprob: -7.792243957519531
    6. 'id' → logprob: -7.917243957519531
    7. ' final' → logprob: -8.667243957519531
    8. 'dfs' → logprob: -9.667243957519531
    9. '   ' → logprob: -9.792243957519531
    10. 'i' → logprob: -11.167243957519531

Token 212: ',id' (ID: 69002)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014433303149417043
    2. ')
' → logprob: -6.751443386077881
    3. ',' → logprob: -9.001442909240723
    4. '           ' → logprob: -9.751442909240723
    5. '       ' → logprob: -10.501442909240723
    6. '               ' → logprob: -10.626442909240723
    7. '   ' → logprob: -11.001442909240723
    8. '```' → logprob: -12.126442909240723
    9. ' )' → logprob: -12.376442909240723
    10. '<|end|>' → logprob: -12.876442909240723

Token 213: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004297155828680843
    2. ')
' → logprob: -8.3754301071167
    3. ',' → logprob: -9.1254301071167
    4. '               ' → logprob: -10.3754301071167
    5. '           ' → logprob: -10.7504301071167
    6. '       ' → logprob: -11.3754301071167
    7. ' )' → logprob: -11.8754301071167
    8. '")' → logprob: -12.0004301071167
    9. '   ' → logprob: -12.7504301071167
    10. '```' → logprob: -13.5004301071167

Token 214: 'stack' (ID: 15145)
  Prédit: 'stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.003743429435417056
    2. 'time' → logprob: -5.878743648529053
    3. ' stack' → logprob: -7.628743648529053
    4. ')' → logprob: -8.128743171691895
    5. 'final' → logprob: -9.503743171691895
    6. 'id' → logprob: -10.878743171691895
    7. 'dfs' → logprob: -10.878743171691895
    8. 'len' → logprob: -11.253743171691895
    9. '   ' → logprob: -11.378743171691895
    10. ')
' → logprob: -12.878743171691895

Token 215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0811779797077179
    2. ')
' → logprob: -2.5811779499053955
    3. '           ' → logprob: -7.081178188323975
    4. '.pop' → logprob: -7.456178188323975
    5. '               ' → logprob: -7.581178188323975
    6. ',' → logprob: -8.956177711486816
    7. '       ' → logprob: -9.581177711486816
    8. '[' → logprob: -10.706177711486816
    9. '   ' → logprob: -10.706177711486816
    10. ']' → logprob: -11.206177711486816

Token 216: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7350835800170898
    2. '   ' → logprob: -1.6100835800170898
    3. '<|end|>' → logprob: -1.7350835800170898
    4. '       ' → logprob: -2.23508358001709
    5. 'stack' → logprob: -5.11008358001709
    6. ' return' → logprob: -5.23508358001709
    7. ' stack' → logprob: -5.36008358001709
    8. ')' → logprob: -5.48508358001709
    9. '	stack' → logprob: -5.73508358001709
    10. '               ' → logprob: -5.73508358001709

Token 217: ' dfs' (ID: 51252)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.022706998512148857
    2. ' stack' → logprob: -3.897706985473633
    3. '               ' → logprob: -6.647706985473633
    4. '           ' → logprob: -7.647706985473633
    5. 'return' → logprob: -8.647706985473633
    6. '	stack' → logprob: -9.272706985473633
    7. '       ' → logprob: -9.647706985473633
    8. '   ' → logprob: -10.272706985473633
    9. ' return' → logprob: -11.522706985473633
    10. 'if' → logprob: -13.397706985473633

Token 218: '(stack' (ID: 52691)
  Prédit: '(stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -0.0041011967696249485
    2. 'stack' → logprob: -5.504101276397705
    3. '(' → logprob: -11.254100799560547
    4. '(id' → logprob: -12.379100799560547
    5. ' stack' → logprob: -12.754100799560547
    6. '()' → logprob: -13.879100799560547
    7. '(
' → logprob: -14.504100799560547
    8. 'id' → logprob: -15.004100799560547
    9. '	stack' → logprob: -15.129100799560547
    10. '(st' → logprob: -15.129100799560547

Token 219: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.023292647674679756
    2. '[-' → logprob: -3.7732925415039062
    3. '.' → logprob: -10.523292541503906
    4. 'pop' → logprob: -11.773292541503906
    5. ' .' → logprob: -11.898292541503906
    6. '[len' → logprob: -13.023292541503906
    7. '(-' → logprob: -13.523292541503906
    8. ')' → logprob: -14.648292541503906
    9. '-' → logprob: -15.148292541503906
    10. '().' → logprob: -15.398292541503906

Token 220: '(),' (ID: 2547)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.15667270123958588
    2. '()' → logprob: -2.406672716140747
    3. '(),' → logprob: -2.906672716140747
    4. '())
' → logprob: -9.156672477722168
    5. '(' → logprob: -10.156672477722168
    6. ' ())' → logprob: -10.906672477722168
    7. '(-' → logprob: -11.156672477722168
    8. '()-' → logprob: -11.281672477722168
    9. '()]' → logprob: -11.281672477722168
    10. '()))' → logprob: -11.656672477722168

Token 221: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.004010491538792849
    2. 'final' → logprob: -5.6290106773376465
    3. ' time' → logprob: -7.8790106773376465
    4. '   ' → logprob: -11.629010200500488
    5. 'discover' → logprob: -12.379010200500488
    6. ' final' → logprob: -12.754010200500488
    7. ' ' → logprob: -13.004010200500488
    8. 'int' → logprob: -13.379010200500488
    9. '	time' → logprob: -13.379010200500488
    10. '0' → logprob: -13.629010200500488

Token 222: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2530260682106018
    2. '+' → logprob: -1.503026008605957
    3. ' )' → logprob: -7.628026008605957
    4. '-' → logprob: -9.128026008605957
    5. '))' → logprob: -9.253026008605957
    6. ')
' → logprob: -9.253026008605957
    7. ' +' → logprob: -9.628026008605957
    8. '   ' → logprob: -9.628026008605957
    9. ')))' → logprob: -9.753026008605957
    10. '+)' → logprob: -10.253026008605957

Token 223: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016158436483237892
    2. ' ' → logprob: -9.000161170959473
    3. '0' → logprob: -10.250161170959473
    4. '
' → logprob: -14.125161170959473
    5. '   ' → logprob: -14.250161170959473
    6. '2' → logprob: -14.375161170959473
    7. '  ' → logprob: -15.750161170959473
    8. 'len' → logprob: -16.37516212463379
    9. '

' → logprob: -16.81266212463379
    10. '-' → logprob: -16.93766212463379

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.85366350505501e-05
    2. '0' → logprob: -9.50009822845459
    3. ' ' → logprob: -10.75009822845459
    4. '2' → logprob: -13.62509822845459
    5. '-' → logprob: -14.87509822845459
    6. '   ' → logprob: -15.62509822845459
    7. '
' → logprob: -16.000099182128906
    8. '```' → logprob: -16.750099182128906
    9. '3' → logprob: -17.125099182128906
    10. '  ' → logprob: -17.250099182128906

Token 225: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002354832977289334
    2. ')
' → logprob: -8.375235557556152
    3. ' )' → logprob: -13.125235557556152
    4. '       ' → logprob: -14.250235557556152
    5. '   ' → logprob: -14.625235557556152
    6. ')))' → logprob: -15.250235557556152
    7. '```' → logprob: -15.250235557556152
    8. '))' → logprob: -15.875235557556152
    9. ')}}' → logprob: -15.875235557556152
    10. '           ' → logprob: -16.000234603881836

Token 226: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29346391558647156
    2. ':' → logprob: -1.418463945388794
    3. ':
' → logprob: -4.918463706970215
    4. ':return' → logprob: -6.043463706970215
    5. '       ' → logprob: -7.043463706970215
    6. ' :' → logprob: -7.918463706970215
    7. '<|end|>' → logprob: -7.918463706970215
    8. ' return' → logprob: -8.168463706970215
    9. '           ' → logprob: -8.543463706970215
    10. 'return' → logprob: -9.418463706970215

Token 229: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2733073830604553
    2. ' return' → logprob: -2.2733073234558105
    3. '       ' → logprob: -3.0233073234558105
    4. ' pass' → logprob: -3.0233073234558105
    5. '           ' → logprob: -3.5233073234558105
    6. ' ' → logprob: -5.8983073234558105
    7. '```' → logprob: -6.0233073234558105
    8. '   ' → logprob: -6.7733073234558105
    9. 'return' → logprob: -6.8983073234558105
    10. ' None' → logprob: -7.3983073234558105

Token 230: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.015749149024486542
    2. 'pass' → logprob: -4.265748977661133
    3. '               ' → logprob: -7.390748977661133
    4. ' return' → logprob: -8.015748977661133
    5. 'stack' → logprob: -8.390748977661133
    6. '           ' → logprob: -8.515748977661133
    7. '   ' → logprob: -9.390748977661133
    8. 'final' → logprob: -9.890748977661133
    9. ' pass' → logprob: -10.265748977661133
    10. '       ' → logprob: -10.515748977661133

Token 231: 'print' (ID: 1598)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08108026534318924
    2. 'pass' → logprob: -2.581080198287964
    3. 'final' → logprob: -6.331080436706543
    4. 'stack' → logprob: -8.831080436706543
    5. 'time' → logprob: -9.456080436706543
    6. '   ' → logprob: -10.206080436706543
    7. '           ' → logprob: -10.456080436706543
    8. 'break' → logprob: -10.706080436706543
    9. '               ' → logprob: -10.831080436706543
    10. ' return' → logprob: -11.081080436706543

Token 232: '("' (ID: 568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26552480459213257
    2. '(' → logprob: -1.8905248641967773
    3. '("' → logprob: -2.5155248641967773
    4. '("")' → logprob: -7.515524864196777
    5. '(final' → logprob: -8.765524864196777
    6. ')' → logprob: -8.765524864196777
    7. '()
' → logprob: -9.015524864196777
    8. '(stack' → logprob: -9.265524864196777
    9. '(""' → logprob: -9.390524864196777
    10. '(dis' → logprob: -9.640524864196777

Token 233: 'back' (ID: 2205)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2183598130941391
    2. '0' → logprob: -1.8433598279953003
    3. '")' → logprob: -4.46835994720459
    4. 'pass' → logprob: -5.59335994720459
    5. 'final' → logprob: -6.09335994720459
    6. 'return' → logprob: -6.09335994720459
    7. ' pass' → logprob: -6.21835994720459
    8. '               ' → logprob: -6.34335994720459
    9. '
' → logprob: -6.34335994720459
    10. 'None' → logprob: -6.34335994720459

Token 234: '",' (ID: 672)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012461502104997635
    2. ')
' → logprob: -5.3874616622924805
    3. '               ' → logprob: -5.8874616622924805
    4. '")' → logprob: -6.5124616622924805
    5. '   ' → logprob: -7.2624616622924805
    6. '           ' → logprob: -7.3874616622924805
    7. '```' → logprob: -7.3874616622924805
    8. ',' → logprob: -8.38746166229248
    9. ' )' → logprob: -8.51246166229248
    10. '
' → logprob: -9.26246166229248

Token 235: ' discover' (ID: 8275)
  Prédit: 'discover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discover' → logprob: -0.018661731854081154
    2. 'final' → logprob: -4.5186614990234375
    3. 'stack' → logprob: -6.1436614990234375
    4. ')' → logprob: -6.5186614990234375
    5. 'dfs' → logprob: -7.0186614990234375
    6. '"' → logprob: -7.2686614990234375
    7. '0' → logprob: -7.7686614990234375
    8. ' discover' → logprob: -7.8936614990234375
    9. 'None' → logprob: -8.018661499023438
    10. 'time' → logprob: -8.268661499023438

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2809489965438843
    2. ')' → logprob: -1.5309489965438843
    3. ',i' → logprob: -5.030949115753174
    4. '[i' → logprob: -5.155949115753174
    5. ')
' → logprob: -5.530949115753174
    6. ' ,' → logprob: -5.780949115753174
    7. '   ' → logprob: -6.155949115753174
    8. '[' → logprob: -6.530949115753174
    9. '[],' → logprob: -7.405949115753174
    10. ',
' → logprob: -7.530949115753174

Token 237: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.016088686883449554
    2. ' final' → logprob: -4.141088485717773
    3. 'stack' → logprob: -10.516088485717773
    4. ' stack' → logprob: -11.891088485717773
    5. ')' → logprob: -12.016088485717773
    6. 'id' → logprob: -12.891088485717773
    7. ' id' → logprob: -13.016088485717773
    8. ' i' → logprob: -13.016088485717773
    9. ' ' → logprob: -13.391088485717773
    10. 'i' → logprob: -13.766088485717773

Token 238: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1821296066045761
    2. ',' → logprob: -1.9321296215057373
    3. '[id' → logprob: -4.682129383087158
    4. ')
' → logprob: -4.807129383087158
    5. ',id' → logprob: -5.932129383087158
    6. '[i' → logprob: -7.682129383087158
    7. '   ' → logprob: -8.307129859924316
    8. ',i' → logprob: -8.557129859924316
    9. ')i' → logprob: -9.182129859924316
    10. '[' → logprob: -9.557129859924316

Token 239: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.8946982622146606
    2. 'stack' → logprob: -1.6446982622146606
    3. ' id' → logprob: -1.7696982622146606
    4. ' stack' → logprob: -2.019698143005371
    5. 'i' → logprob: -3.644698143005371
    6. 'final' → logprob: -3.769698143005371
    7. 'time' → logprob: -4.144698143005371
    8. ' final' → logprob: -4.644698143005371
    9. ' i' → logprob: -5.019698143005371
    10. ' time' → logprob: -5.144698143005371

Token 240: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042516738176345825
    2. ')
' → logprob: -3.2925167083740234
    3. ',' → logprob: -5.667516708374023
    4. '   ' → logprob: -8.667516708374023
    5. ' )' → logprob: -8.792516708374023
    6. '           ' → logprob: -9.167516708374023
    7. '       ' → logprob: -9.417516708374023
    8. '               ' → logprob: -9.542516708374023
    9. '[i' → logprob: -9.542516708374023
    10. '[id' → logprob: -9.792516708374023

Token 241: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.9002199172973633
    2. ' time' → logprob: -1.4002199172973633
    3. 'stack' → logprob: -1.6502199172973633
    4. 'time' → logprob: -1.9002199172973633
    5. '0' → logprob: -5.775219917297363
    6. ')' → logprob: -7.275219917297363
    7. 'final' → logprob: -7.900219917297363
    8. '1' → logprob: -8.025219917297363
    9. ' final' → logprob: -8.400219917297363
    10. ' ' → logprob: -8.650219917297363

Token 242: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16045300662517548
    2. ')
' → logprob: -1.910452961921692
    3. '               ' → logprob: -8.910452842712402
    4. '           ' → logprob: -10.035452842712402
    5. ')

' → logprob: -11.285452842712402
    6. '```' → logprob: -11.535452842712402
    7. ')
' → logprob: -12.035452842712402
    8. ' )' → logprob: -12.285452842712402
    9. '       ' → logprob: -12.535452842712402
    10. ' )
' → logprob: -12.910452842712402

Token 243: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004871757701039314
    2. '<|end|>' → logprob: -5.629871845245361
    3. '       ' → logprob: -7.254871845245361
    4. ' return' → logprob: -8.504871368408203
    5. '           ' → logprob: -8.879871368408203
    6. ')' → logprob: -10.004871368408203
    7. 'return' → logprob: -10.004871368408203
    8. '```' → logprob: -10.129871368408203
    9. '   ' → logprob: -10.504871368408203
    10. '                ' → logprob: -10.504871368408203

Token 244: ' dfs' (ID: 51252)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005861478392034769
    2. 'pass' → logprob: -5.380861282348633
    3. 'stack' → logprob: -8.005861282348633
    4. ' return' → logprob: -8.255861282348633
    5. '               ' → logprob: -8.380861282348633
    6. '   ' → logprob: -8.630861282348633
    7. 'time' → logprob: -9.005861282348633
    8. '           ' → logprob: -9.630861282348633
    9. 'final' → logprob: -10.755861282348633
    10. ' pass' → logprob: -11.380861282348633

Token 245: '(stack' (ID: 52691)
  Prédit: '(stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -2.3199920178740285e-05
    2. 'stack' → logprob: -10.750022888183594
    3. '(' → logprob: -13.625022888183594
    4. '(id' → logprob: -15.375022888183594
    5. '(Stack' → logprob: -16.375022888183594
    6. '(st' → logprob: -16.500022888183594
    7. '(edge' → logprob: -16.875022888183594
    8. '	stack' → logprob: -17.250022888183594
    9. '()' → logprob: -17.500022888183594
    10. ' stack' → logprob: -17.875022888183594

Token 246: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0007559045334346592
    2. '.' → logprob: -7.625755786895752
    3. 'pop' → logprob: -8.50075626373291
    4. ')' → logprob: -10.87575626373291
    5. '.append' → logprob: -10.87575626373291
    6. ' .' → logprob: -11.37575626373291
    7. '[-' → logprob: -11.62575626373291
    8. ').' → logprob: -13.50075626373291
    9. ',' → logprob: -13.75075626373291
    10. '(pop' → logprob: -14.00075626373291

Token 247: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0005256305448710918
    2. ',' → logprob: -8.00052547454834
    3. '()' → logprob: -9.00052547454834
    4. '(' → logprob: -9.75052547454834
    5. ' (),' → logprob: -12.50052547454834
    6. '(),
' → logprob: -12.62552547454834
    7. ' ,' → logprob: -14.75052547454834
    8. '(),

' → logprob: -15.00052547454834
    9. '()
' → logprob: -15.25052547454834
    10. '),' → logprob: -16.375526428222656

Token 248: 'time' (ID: 4580)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.6938560009002686
    2. 'time' → logprob: -0.6938560009002686
    3. 'final' → logprob: -7.818856239318848
    4. ' final' → logprob: -8.318856239318848
    5. 'discover' → logprob: -10.943856239318848
    6. ' ' → logprob: -11.068856239318848
    7. '   ' → logprob: -11.318856239318848
    8. ' discover' → logprob: -11.943856239318848
    9. '  ' → logprob: -12.818856239318848
    10. '    ' → logprob: -13.318856239318848

Token 249: ')

' (ID: 1029)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003628461854532361
    2. ' +' → logprob: -5.628628253936768
    3. ')' → logprob: -11.253628730773926
    4. '+)' → logprob: -11.503628730773926
    5. ')+' → logprob: -13.003628730773926
    6. '+
' → logprob: -13.003628730773926
    7. ' )' → logprob: -15.128628730773926
    8. '   ' → logprob: -16.50362777709961
    9. ' +
' → logprob: -16.75362777709961
    10. '+')' → logprob: -16.75362777709961

Token 250: 'discover' (ID: 189838)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5875605940818787
    2. '<|end|>' → logprob: -0.8375605940818787
    3. '   ' → logprob: -5.337560653686523
    4. ' ' → logprob: -5.962560653686523
    5. ':' → logprob: -7.212560653686523
    6. ' return' → logprob: -7.712560653686523
    7. '```' → logprob: -7.712560653686523
    8. ':return' → logprob: -7.712560653686523
    9. '<|end|>' → logprob: -8.087560653686523
    10. '
' → logprob: -8.087560653686523

Token 251: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005872295005246997
    2. '[' → logprob: -7.750587463378906
    3. '=' → logprob: -9.250587463378906
    4. ']' → logprob: -10.500587463378906
    5. '(' → logprob: -11.000587463378906
    6. ']=' → logprob: -12.375587463378906
    7. 'id' → logprob: -12.625587463378906
    8. ' ' → logprob: -12.875587463378906
    9. ' =' → logprob: -14.000587463378906
    10. '1' → logprob: -14.250587463378906

Token 253: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.38824406266212463
    2. ']' → logprob: -1.1382440328598022
    3. ']==' → logprob: -7.013244152069092
    4. '=' → logprob: -8.388243675231934
    5. ' ]' → logprob: -9.138243675231934
    6. ']+=' → logprob: -9.388243675231934
    7. '[' → logprob: -10.513243675231934
    8. ']!=' → logprob: -10.888243675231934
    9. ']=-' → logprob: -13.013243675231934
    10. ']=(' → logprob: -13.513243675231934

Token 254: 'time' (ID: 4580)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07890157401561737
    2. 'time' → logprob: -2.578901529312134
    3. ' time' → logprob: -11.953901290893555
    4. ' ' → logprob: -12.578901290893555
    5. '0' → logprob: -14.078901290893555
    6. '   ' → logprob: -14.703901290893555
    7. '"time' → logprob: -15.453901290893555
    8. '	time' → logprob: -16.453901290893555
    9. '```' → logprob: -16.453901290893555
    10. 'Time' → logprob: -16.453901290893555

Token 255: '
' (ID: 198)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.004414217080920935
    2. ')' → logprob: -5.754414081573486
    3. ' dfs' → logprob: -7.004414081573486
    4. ',' → logprob: -8.504414558410645
    5. 'd' → logprob: -10.629414558410645
    6. 'stack' → logprob: -10.629414558410645
    7. '[' → logprob: -11.254414558410645
    8. '(' → logprob: -11.504414558410645
    9. '()' → logprob: -11.879414558410645
    10. '.' → logprob: -12.004414558410645

Token 256: 'stack' (ID: 15145)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0027349782176315784
    2. 'd' → logprob: -6.252735137939453
    3. ')' → logprob: -7.877735137939453
    4. '0' → logprob: -8.377735137939453
    5. '(' → logprob: -9.752735137939453
    6. ' dfs' → logprob: -9.877735137939453
    7. 'stack' → logprob: -10.877735137939453
    8. '.' → logprob: -11.002735137939453
    9. '[' → logprob: -11.502735137939453
    10. ',' → logprob: -11.752735137939453

Token 257: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0350218340754509
    2. '.pop' → logprob: -3.5350217819213867
    3. '.' → logprob: -5.535021781921387
    4. '=[]' → logprob: -7.035021781921387
    5. '[]' → logprob: -8.285021781921387
    6. '[:]' → logprob: -10.035021781921387
    7. '=' → logprob: -10.160021781921387
    8. '<|end|>' → logprob: -10.535021781921387
    9. '[-' → logprob: -11.285021781921387
    10. '=[]
' → logprob: -11.285021781921387

Token 258: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -14.875
    3. ' (' → logprob: -17.375
    4. '((' → logprob: -18.625
    5. '(
' → logprob: -20.375
    6. '()' → logprob: -21.125
    7. '```' → logprob: -21.625
    8. '('' → logprob: -22.625
    9. '（' → logprob: -22.75
    10. '(int' → logprob: -23.0

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '   ' → logprob: -22.5
    4. '０' → logprob: -22.625
    5. '۰' → logprob: -23.5
    6. '(' → logprob: -23.625
    7. '00' → logprob: -25.125
    8. '  ' → logprob: -25.75
    9. '```' → logprob: -26.0
    10. '000' → logprob: -26.0

Token 260: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ')
' → logprob: -12.500003814697266
    3. ' )' → logprob: -15.125003814697266
    4. ')#' → logprob: -16.750003814697266
    5. '))' → logprob: -17.375003814697266
    6. ')n' → logprob: -17.375003814697266
    7. ')

' → logprob: -17.500003814697266
    8. '),' → logprob: -17.750003814697266
    9. ')return' → logprob: -18.125003814697266
    10. ')`' → logprob: -18.375003814697266

Token 261: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00019007037917617708
    2. ')' → logprob: -8.875189781188965
    3. ' dfs' → logprob: -10.000189781188965
    4. 'print' → logprob: -13.125189781188965
    5. '0' → logprob: -13.500189781188965
    6. 'time' → logprob: -14.375189781188965
    7. '```' → logprob: -15.500189781188965
    8. ',' → logprob: -15.750189781188965
    9. 'd' → logprob: -16.50019073486328
    10. 'DFS' → logprob: -16.62519073486328

Token 262: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.650518920039758e-06
    2. '(
' → logprob: -13.625003814697266
    3. '((' → logprob: -14.000003814697266
    4. '(`' → logprob: -14.750003814697266
    5. ' (' → logprob: -15.000003814697266
    6. '<|end|>' → logprob: -15.625003814697266
    7. '```' → logprob: -16.250003814697266
    8. '(

' → logprob: -16.250003814697266
    9. ')(' → logprob: -16.500003814697266
    10. '0' → logprob: -16.625003814697266

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -19.625
    4. ')' → logprob: -20.5
    5. '(' → logprob: -20.75
    6. '０' → logprob: -20.75
    7. '۰' → logprob: -21.125
    8. 'stack' → logprob: -22.1875
    9. '```' → logprob: -22.1875
    10. '
' → logprob: -22.5

Token 264: ',time' (ID: 125988)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032597112003713846
    2. ',time' → logprob: -5.753259658813477
    3. ',)' → logprob: -10.128259658813477
    4. ',t' → logprob: -11.253259658813477
    5. ',n' → logprob: -11.253259658813477
    6. ' ,' → logprob: -12.253259658813477
    7. ')' → logprob: -12.753259658813477
    8. ',
' → logprob: -12.878259658813477
    9. ',int' → logprob: -13.628259658813477
    10. ',:)' → logprob: -13.628259658813477

Token 265: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029811467975378036
    2. '+' → logprob: -3.529811382293701
    3. '+)' → logprob: -10.15481185913086
    4. ' )' → logprob: -11.40481185913086
    5. ' +' → logprob: -12.02981185913086
    6. ')
' → logprob: -12.77981185913086
    7. '-' → logprob: -14.77981185913086
    8. ')#' → logprob: -15.02981185913086
    9. ')`' → logprob: -15.27981185913086
    10. '+
' → logprob: -15.27981185913086

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. '2' → logprob: -11.37501335144043
    3. '0' → logprob: -14.37501335144043
    4. ' ' → logprob: -14.37501335144043
    5. '```' → logprob: -15.50001335144043
    6. '+' → logprob: -16.12501335144043
    7. '   ' → logprob: -17.00001335144043
    8. '3' → logprob: -17.25001335144043
    9. '
' → logprob: -17.25001335144043
    10. '``' → logprob: -18.18751335144043

Token 267: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -14.875001907348633
    4. '))' → logprob: -18.000001907348633
    5. ')#' → logprob: -18.250001907348633
    6. ')`' → logprob: -18.500001907348633
    7. '),' → logprob: -19.375001907348633
    8. ')

' → logprob: -19.375001907348633
    9. '）' → logprob: -19.750001907348633
    10. ')return' → logprob: -20.250001907348633

Token 268: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11146648973226547
    2. 'for' → logprob: -2.861466407775879
    3. '<|end|>' → logprob: -3.236466407775879
    4. '#' → logprob: -5.986466407775879
    5. '```' → logprob: -5.986466407775879
    6. '0' → logprob: -6.361466407775879
    7. ')' → logprob: -7.361466407775879
    8. '...' → logprob: -7.611466407775879
    9. '[' → logprob: -8.736466407775879
    10. ' for' → logprob: -8.861466407775879

Token 269: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31327947974205017
    2. 'i' → logprob: -1.3132795095443726
    3. '(i' → logprob: -11.563279151916504
    4. ' ' → logprob: -12.563279151916504
    5. ' node' → logprob: -14.313279151916504
    6. '_i' → logprob: -14.438279151916504
    7. '	i' → logprob: -14.563279151916504
    8. ' v' → logprob: -14.563279151916504
    9. 'v' → logprob: -14.688279151916504
    10. 'x' → logprob: -14.688279151916504

Token 270: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06198505312204361
    2. 'in' → logprob: -2.8119850158691406
    3. ' ' → logprob: -11.68698501586914
    4. '(' → logprob: -12.81198501586914
    5. 'range' → logprob: -12.81198501586914
    6. '  ' → logprob: -13.68698501586914
    7. '   ' → logprob: -14.56198501586914
    8. 'n' → logprob: -14.68698501586914
    9. '(n' → logprob: -14.68698501586914
    10. ',' → logprob: -15.81198501586914

Token 271: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011714138090610504
    2. ' range' → logprob: -6.751171588897705
    3. ' ' → logprob: -14.626171112060547
    4. 'final' → logprob: -15.001171112060547
    5. 'in' → logprob: -16.126171112060547
    6. '(range' → logprob: -16.126171112060547
    7. '  ' → logprob: -16.751171112060547
    8. 'r' → logprob: -17.251171112060547
    9. '   ' → logprob: -17.251171112060547
    10. 'ran' → logprob: -17.251171112060547

Token 272: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011951707303524017
    2. 'range' → logprob: -5.011951923370361
    3. '(range' → logprob: -5.261951923370361
    4. '(' → logprob: -10.886951446533203
    5. 'n' → logprob: -11.011951446533203
    6. ' range' → logprob: -13.886951446533203
    7. 'in' → logprob: -14.011951446533203
    8. '(len' → logprob: -14.511951446533203
    9. '(num' → logprob: -18.386951446533203
    10. ' (' → logprob: -18.636951446533203

Token 273: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20150737464427948
    2. '):
' → logprob: -1.701507329940796
    3. '):
' → logprob: -9.701507568359375
    4. ')' → logprob: -10.576507568359375
    5. ':' → logprob: -13.076507568359375
    6. ']:' → logprob: -13.576507568359375
    7. 'print' → logprob: -14.201507568359375
    8. ':
' → logprob: -14.326507568359375
    9. '):

' → logprob: -14.451507568359375
    10. '   ' → logprob: -14.701507568359375

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0149740194901824
    2. 'print' → logprob: -4.264974117279053
    3. ' print' → logprob: -7.139974117279053
    4. '	print' → logprob: -11.639973640441895
    5. ' ' → logprob: -12.014973640441895
    6. 'if' → logprob: -14.264973640441895
    7. '   ' → logprob: -14.514973640441895
    8. '  ' → logprob: -14.639973640441895
    9. '       ' → logprob: -14.764973640441895
    10. '```' → logprob: -15.014973640441895

Token 275: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016662541311234236
    2. 'if' (adapté à ' if') → logprob: -6.501666069030762
    3. '   ' → logprob: -8.751666069030762
    4. ' print' → logprob: -12.126666069030762
    5. ' if' → logprob: -15.876666069030762
    6. 'printf' → logprob: -16.501667022705078
    7. '```' → logprob: -17.251667022705078
    8. '	print' → logprob: -17.626667022705078
    9. '#print' → logprob: -17.751667022705078
    10. ' ' → logprob: -18.251667022705078

Token 276: ' discover' (ID: 8275)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.4993092119693756
    2. 'discover' → logprob: -1.3743091821670532
    3. ' final' → logprob: -2.2493093013763428
    4. ' discover' → logprob: -3.3743093013763428
    5. ' ' → logprob: -9.374309539794922
    6. ' i' → logprob: -9.749309539794922
    7. 'adj' → logprob: -9.999309539794922
    8. '(final' → logprob: -10.124309539794922
    9. 'i' → logprob: -10.874309539794922
    10. 'dis' → logprob: -10.999309539794922

Token 277: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. '==' → logprob: -13.750001907348633
    3. '[' → logprob: -15.000001907348633
    4. '```' → logprob: -15.500001907348633
    5. ' [' → logprob: -15.875001907348633
    6. 'i' → logprob: -15.875001907348633
    7. '[id' → logprob: -16.625001907348633
    8. '
' → logprob: -17.125001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '[
' → logprob: -18.125001907348633

Token 278: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06381596624851227
    2. ']==' → logprob: -2.8138160705566406
    3. ')==' → logprob: -6.813816070556641
    4. '[' → logprob: -8.68881607055664
    5. '==-' → logprob: -8.68881607055664
    6. ' ==' → logprob: -8.81381607055664
    7. ']' → logprob: -9.56381607055664
    8. '>' → logprob: -9.81381607055664
    9. '```' → logprob: -10.06381607055664
    10. ')' → logprob: -10.43881607055664

Token 279: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.125009536743164
    4. '  ' → logprob: -18.750009536743164
    5. '    ' → logprob: -19.000009536743164
    6. '     ' → logprob: -19.625009536743164
    7. '00' → logprob: -19.875009536743164
    8. '=' → logprob: -20.250009536743164
    9. '000' → logprob: -20.375009536743164
    10. '```' → logprob: -20.625009536743164

Token 280: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3246203064918518
    2. ':
' → logprob: -1.324620246887207
    3. '==' → logprob: -5.574620246887207
    4. '   ' → logprob: -5.949620246887207
    5. ' and' → logprob: -6.074620246887207
    6. '=' → logprob: -6.824620246887207
    7. '       ' → logprob: -7.199620246887207
    8. ' or' → logprob: -7.699620246887207
    9. 'print' → logprob: -9.699620246887207
    10. ' print' → logprob: -9.699620246887207

Token 281: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8170876502990723
    2. 'print' → logprob: -0.9420876502990723
    3. '       ' → logprob: -1.8170876502990723
    4. ' print' → logprob: -5.317087650299072
    5. ' ' → logprob: -7.692087650299072
    6. '	print' → logprob: -7.942087650299072
    7. 'discover' → logprob: -9.192087173461914
    8. '     ' → logprob: -10.067087173461914
    9. '  ' → logprob: -10.067087173461914
    10. '           ' → logprob: -11.442087173461914

Token 282: ' discover' (ID: 8275)
  Prédit: 'discover'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discover' (adapté à ' discover') → logprob: -0.14407694339752197
    2. 'print' → logprob: -2.2690768241882324
    3. 'final' → logprob: -4.269076824188232
    4. 'time' → logprob: -4.644076824188232
    5. 'stack' → logprob: -5.144076824188232
    6. '   ' → logprob: -6.894076824188232
    7. 'dis' → logprob: -9.26907730102539
    8. 'pass' → logprob: -9.76907730102539
    9. 'dfs' → logprob: -9.89407730102539
    10. ' discover' → logprob: -11.01907730102539

Token 283: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.625004768371582
    3. '=' → logprob: -14.250004768371582
    4. '```' → logprob: -15.375004768371582
    5. 'i' → logprob: -16.000003814697266
    6. '=i' → logprob: -16.875003814697266
    7. '(i' → logprob: -17.250003814697266
    8. '==' → logprob: -17.500003814697266
    9. '\[' → logprob: -17.750003814697266
    10. '[id' → logprob: -17.875003814697266

Token 284: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.4347369968891144
    2. ']==' → logprob: -1.184736967086792
    3. '=' → logprob: -4.059737205505371
    4. ']' → logprob: -4.184737205505371
    5. '==' → logprob: -4.434737205505371
    6. ']!=' → logprob: -6.434737205505371
    7. '!=' → logprob: -7.684737205505371
    8. ']=-' → logprob: -9.309737205505371
    9. ']+=' → logprob: -9.684737205505371
    10. ']={' → logprob: -10.559737205505371

Token 285: 'final' (ID: 17196)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13901874423027039
    2. 'time' → logprob: -2.1390187740325928
    3. '0' → logprob: -4.764018535614014
    4. '999' → logprob: -6.514018535614014
    5. '1' → logprob: -7.264018535614014
    6. '100' → logprob: -7.639018535614014
    7. 'max' → logprob: -8.764019012451172
    8. ''-' → logprob: -9.014019012451172
    9. '"time' → logprob: -9.389019012451172
    10. '-time' → logprob: -9.764019012451172

Token 286: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.125000953674316
    3. '[' → logprob: -15.375000953674316
    4. 'i' → logprob: -17.125
    5. '(i' → logprob: -18.5
    6. '-' → logprob: -19.125
    7. '   ' → logprob: -19.625
    8. '[id' → logprob: -19.875
    9. '[]' → logprob: -20.0
    10. '``' → logprob: -20.25

Token 287: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.6405310816480778e-05
    2. '[i' → logprob: -11.250016212463379
    3. ']' → logprob: -13.375016212463379
    4. ' i' → logprob: -13.875016212463379
    5. '0' → logprob: -14.250016212463379
    6. '[' → logprob: -15.875016212463379
    7. '   ' → logprob: -18.250017166137695
    8. ' ' → logprob: -18.500017166137695
    9. '][' → logprob: -18.750017166137695
    10. '	i' → logprob: -18.875017166137695

Token 288: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15026438236236572
    2. '[i' → logprob: -2.025264263153076
    3. ']+' → logprob: -5.025264263153076
    4. '[' → logprob: -7.650264263153076
    5. ']-' → logprob: -8.900264739990234
    6. 'i' → logprob: -9.025264739990234
    7. ']]' → logprob: -9.275264739990234
    8. '])' → logprob: -9.400264739990234
    9. '-' → logprob: -10.775264739990234
    10. '0' → logprob: -10.900264739990234

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.065608562901616e-05
    2. 'i' → logprob: -10.375081062316895
    3. '100' → logprob: -11.125081062316895
    4. 'time' → logprob: -11.125081062316895
    5. '2' → logprob: -11.500081062316895
    6. '10' → logprob: -12.125081062316895
    7. ' ' → logprob: -13.125081062316895
    8. 'n' → logprob: -14.500081062316895
    9. '5' → logprob: -15.000081062316895
    10. '１' → logprob: -15.750081062316895

Token 290: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4828914701938629
    2. '<|end|>' → logprob: -1.1078914403915405
    3. '
' → logprob: -3.60789155960083
    4. 'for' → logprob: -4.85789155960083
    5. '   ' → logprob: -5.10789155960083
    6. ')' → logprob: -5.48289155960083
    7. 'final' → logprob: -5.98289155960083
    8. ' print' → logprob: -6.23289155960083
    9. ' for' → logprob: -7.23289155960083
    10. ' ' → logprob: -7.85789155960083

Token 291: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' stack' (ID: 10825)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.0020869735162705183
    2. 'print' → logprob: -6.252087116241455
    3. ' final' → logprob: -8.877086639404297
    4. '   ' → logprob: -11.127086639404297
    5. '       ' → logprob: -12.877086639404297
    6. 'for' → logprob: -14.627086639404297
    7. '	final' → logprob: -15.002086639404297
    8. '           ' → logprob: -16.127086639404297
    9. ' ' → logprob: -16.252086639404297
    10. ' print' → logprob: -16.502086639404297

Token 293: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04446544870734215
    2. '.pop' → logprob: -3.5444655418395996
    3. '.clear' → logprob: -4.6694655418396
    4. '.' → logprob: -5.2944655418396
    5. '=[]' → logprob: -8.669465065002441
    6. '.remove' → logprob: -10.544465065002441
    7. 'append' → logprob: -12.544465065002441
    8. '=' → logprob: -12.794465065002441
    9. '.push' → logprob: -13.044465065002441
    10. '.extend' → logprob: -13.794465065002441

Token 294: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.596781946020201e-05
    2. '(' → logprob: -10.250045776367188
    3. 'i' → logprob: -11.500045776367188
    4. '(
' → logprob: -16.000045776367188
    5. '0' → logprob: -16.625045776367188
    6. '((' → logprob: -17.000045776367188
    7. ' (' → logprob: -18.125045776367188
    8. '(id' → logprob: -18.250045776367188
    9. '(n' → logprob: -18.500045776367188
    10. '()' → logprob: -18.500045776367188

Token 295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01816328801214695
    2. ')
' → logprob: -4.018163204193115
    3. ']' → logprob: -13.018163681030273
    4. ')

' → logprob: -13.393163681030273
    5. ' )' → logprob: -13.518163681030273
    6. ')]' → logprob: -13.768163681030273
    7. ')i' → logprob: -13.768163681030273
    8. ')
' → logprob: -13.893163681030273
    9. '       ' → logprob: -13.893163681030273
    10. '))' → logprob: -14.518163681030273

Token 296: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.204838365316391
    2. '<|end|>' → logprob: -2.579838275909424
    3. ' for' → logprob: -2.829838275909424
    4. 'print' → logprob: -3.204838275909424
    5. '       ' → logprob: -5.204838275909424
    6. ')' → logprob: -6.454838275909424
    7. 'time' → logprob: -7.454838275909424
    8. 'while' → logprob: -7.704838275909424
    9. '```' → logprob: -7.829838275909424
    10. '   ' → logprob: -8.329838752746582

Token 297: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -1.4736459888808895e-05
    2. ' dfs' → logprob: -11.500014305114746
    3. 'final' → logprob: -12.875014305114746
    4. 'time' → logprob: -13.750014305114746
    5. 'df' → logprob: -14.375014305114746
    6. '   ' → logprob: -16.000015258789062
    7. 'discover' → logprob: -16.875015258789062
    8. '0' → logprob: -17.000015258789062
    9. 'def' → logprob: -17.125015258789062
    10. 'DFS' → logprob: -17.875015258789062

Token 298: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00020401719666551799
    2. '(' → logprob: -8.500204086303711
    3. ' (' → logprob: -15.500204086303711
    4. '(
' → logprob: -16.50020408630371
    5. '(stack' → logprob: -16.75020408630371
    6. '(id' → logprob: -17.12520408630371
    7. 'i' → logprob: -17.50020408630371
    8. '(in' → logprob: -17.62520408630371
    9. '```' → logprob: -17.87520408630371
    10. '((' → logprob: -18.00020408630371

Token 299: ',' (ID: 11)
  Prédit: ',time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',time' → logprob: -0.10065960884094238
    2. ',' → logprob: -2.3506596088409424
    3. ' ,' → logprob: -7.850659370422363
    4. '(time' → logprob: -10.100659370422363
    5. ',n' → logprob: -12.475659370422363
    6. '+' → logprob: -13.225659370422363
    7. ',(' → logprob: -13.225659370422363
    8. '   ' → logprob: -13.350659370422363
    9. ',int' → logprob: -13.475659370422363
    10. '(' → logprob: -13.725659370422363

Token 300: 'final' (ID: 17196)
  Prédit: 'final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.001057698973454535
    2. 'discover' → logprob: -7.2510576248168945
    3. 'time' → logprob: -8.376057624816895
    4. ' final' → logprob: -9.626057624816895
    5. '1' → logprob: -10.376057624816895
    6. '0' → logprob: -11.251057624816895
    7. '(final' → logprob: -13.751057624816895
    8. 'dis' → logprob: -14.126057624816895
    9. 'i' → logprob: -14.126057624816895
    10. '   ' → logprob: -14.251057624816895

Token 301: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.021204445511102676
    2. '[i' → logprob: -3.8962044715881348
    3. '0' → logprob: -7.646204471588135
    4. 'i' → logprob: -8.646203994750977
    5. ')' → logprob: -13.146203994750977
    6. ']' → logprob: -13.771203994750977
    7. '(' → logprob: -13.771203994750977
    8. '   ' → logprob: -14.396203994750977
    9. '```' → logprob: -14.521203994750977
    10. ' [' → logprob: -14.771203994750977

Token 302: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008247529622167349
    2. 'i' → logprob: -7.125824928283691
    3. '[' → logprob: -12.125824928283691
    4. '1' → logprob: -12.375824928283691
    5. '-' → logprob: -12.500824928283691
    6. ' ' → logprob: -12.750824928283691
    7. '[i' → logprob: -13.938324928283691
    8. '
' → logprob: -14.500824928283691
    9. '   ' → logprob: -14.563324928283691
    10. '```' → logprob: -14.813324928283691

Token 303: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.22024452686309814
    2. '[i' → logprob: -1.7202445268630981
    3. '[' → logprob: -4.095244407653809
    4. '+' → logprob: -6.595244407653809
    5. ']' → logprob: -7.595244407653809
    6. 'i' → logprob: -9.345244407653809
    7. '   ' → logprob: -10.845244407653809
    8. '1' → logprob: -11.845244407653809
    9. '-' → logprob: -12.720244407653809
    10. '[]' → logprob: -12.845244407653809

Token 304: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10023482143878937
    2. '2' → logprob: -2.3502347469329834
    3. ' ' → logprob: -10.850234985351562
    4. 'time' → logprob: -13.100234985351562
    5. '   ' → logprob: -13.600234985351562
    6. '3' → logprob: -13.725234985351562
    7. '
' → logprob: -13.787734985351562
    8. 'stack' → logprob: -14.412734985351562
    9. 'i' → logprob: -14.475234985351562
    10. '```' → logprob: -14.912734985351562

Token 305: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ')
' → logprob: -12.87500286102295
    3. '))' → logprob: -15.12500286102295
    4. ' )' → logprob: -16.000003814697266
    5. ')#' → logprob: -16.625003814697266
    6. ')`' → logprob: -17.625003814697266
    7. ')))' → logprob: -17.750003814697266
    8. ')return' → logprob: -18.500003814697266
    9. ')}}' → logprob: -18.500003814697266
    10. ')

' → logprob: -18.875003814697266

Token 306: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07730401307344437
    2. 'print' → logprob: -2.8273041248321533
    3. ')' → logprob: -4.702303886413574
    4. ' for' → logprob: -5.452303886413574
    5. '<|end|>' → logprob: -6.702303886413574
    6. ']' → logprob: -7.952303886413574
    7. 'pass' → logprob: -8.952303886413574
    8. '#' → logprob: -10.202303886413574
    9. '```' → logprob: -10.577303886413574
    10. '0' → logprob: -11.202303886413574

Token 307: ' break' (ID: 2338)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1272456794977188
    2. 'for' → logprob: -2.3772456645965576
    3. ' for' → logprob: -4.752245903015137
    4. ']' → logprob: -5.002245903015137
    5. '<|end|>' → logprob: -5.002245903015137
    6. 'print' → logprob: -6.377245903015137
    7. '0' → logprob: -6.877245903015137
    8. '#' → logprob: -7.127245903015137
    9. '   ' → logprob: -8.377245903015137
    10. '<|end|>' → logprob: -9.127245903015137

Token 308: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1857123076915741
    2. 'print' → logprob: -1.8107123374938965
    3. ' for' → logprob: -5.6857123374938965
    4. ')' → logprob: -6.3107123374938965
    5. ']' → logprob: -8.810711860656738
    6. '<|end|>' → logprob: -8.935711860656738
    7. '#' → logprob: -9.185711860656738
    8. 'time' → logprob: -9.810711860656738
    9. 'i' → logprob: -9.810711860656738
    10. '0' → logprob: -9.935711860656738

Token 309: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11290813237428665
    2. 'i' → logprob: -2.237908124923706
    3. ' ' → logprob: -9.487908363342285
    4. '	i' → logprob: -12.612908363342285
    5. '```' → logprob: -13.487908363342285
    6. '   ' → logprob: -13.737908363342285
    7. '  ' → logprob: -13.987908363342285
    8. ' ' → logprob: -13.987908363342285
    9. '_' → logprob: -14.487908363342285
    10. '(i' → logprob: -14.737908363342285

Token 311: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10037833452224731
    2. 'in' → logprob: -2.3503782749176025
    3. '(' → logprob: -9.850378036499023
    4. '(n' → logprob: -9.850378036499023
    5. ' ' → logprob: -10.100378036499023
    6. 'range' → logprob: -11.475378036499023
    7. '   ' → logprob: -12.725378036499023
    8. '  ' → logprob: -12.975378036499023
    9. ' (' → logprob: -13.100378036499023
    10. 'n' → logprob: -13.100378036499023

Token 312: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164221473038197
    2. ' range' → logprob: -4.264164447784424
    3. '(range' → logprob: -15.139163970947266
    4. ' ' → logprob: -15.514163970947266
    5. 'n' → logprob: -16.514163970947266
    6. 'r' → logprob: -17.139163970947266
    7. 'ran' → logprob: -17.389163970947266
    8. '  ' → logprob: -17.514163970947266
    9. 'rang' → logprob: -17.764163970947266
    10. '   ' → logprob: -17.764163970947266

Token 313: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.024876397103071213
    2. '(range' → logprob: -4.024876594543457
    3. 'range' → logprob: -5.024876594543457
    4. ' range' → logprob: -9.274876594543457
    5. '(' → logprob: -10.649876594543457
    6. 'n' → logprob: -11.274876594543457
    7. 'in' → logprob: -14.899876594543457
    8. '(len' → logprob: -14.899876594543457
    9. ' (' → logprob: -15.774876594543457
    10. '_range' → logprob: -15.899876594543457

Token 314: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25414901971817017
    2. '):
' → logprob: -1.5041489601135254
    3. ')' → logprob: -6.504148960113525
    4. '(n' → logprob: -7.629148960113525
    5. '):
' → logprob: -9.129149436950684
    6. 'n' → logprob: -9.754149436950684
    7. ')n' → logprob: -10.504149436950684
    8. ',n' → logprob: -11.129149436950684
    9. ':' → logprob: -11.629149436950684
    10. '(' → logprob: -12.504149436950684

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02465112693607807
    2. 'print' → logprob: -3.899651050567627
    3. ' print' → logprob: -5.524651050567627
    4. ' ' → logprob: -9.274651527404785
    5. '	print' → logprob: -11.024651527404785
    6. '       ' → logprob: -13.524651527404785
    7. '  ' → logprob: -13.899651527404785
    8. '   ' → logprob: -14.649651527404785
    9. '    ' → logprob: -16.14965057373047
    10. '     ' → logprob: -16.39965057373047

Token 316: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.90524822473526
    2. 'print' (adapté à ' print') → logprob: -0.90524822473526
    3. ' print' → logprob: -1.6552481651306152
    4. '	print' → logprob: -10.155248641967773
    5. ' ' → logprob: -10.655248641967773
    6. '  ' → logprob: -12.780248641967773
    7. ' if' → logprob: -13.405248641967773
    8. '       ' → logprob: -13.780248641967773
    9. 'if' → logprob: -13.780248641967773
    10. '```' → logprob: -14.155248641967773

Token 317: '(i' (ID: 3649)
  Prédit: '(dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dis' → logprob: -0.048943981528282166
    2. '(i' → logprob: -3.0489439964294434
    3. '(f' → logprob: -8.173943519592285
    4. 'discover' → logprob: -10.548943519592285
    5. 'dis' → logprob: -10.923943519592285
    6. '(str' → logprob: -11.548943519592285
    7. '("{}' → logprob: -11.798943519592285
    8. '(' → logprob: -12.673943519592285
    9. 'i' → logprob: -12.673943519592285
    10. '((' → logprob: -13.173943519592285

Token 318: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06383944302797318
    2. ',end' → logprob: -2.8138394355773926
    3. ' ,' → logprob: -6.438839435577393
    4. ')' → logprob: -9.56383991241455
    5. ',"' → logprob: -9.93883991241455
    6. ',",' → logprob: -9.93883991241455
    7. ',d' → logprob: -10.68883991241455
    8. ',
' → logprob: -10.68883991241455
    9. '+' → logprob: -10.81383991241455
    10. '   ' → logprob: -12.18883991241455

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00041506090201437473
    2. ' ' → logprob: -8.250414848327637
    3. ',' → logprob: -9.625414848327637
    4. 'discover' → logprob: -9.625414848327637
    5. '"' → logprob: -11.875414848327637
    6. ' discover' → logprob: -12.000414848327637
    7. '   ' → logprob: -13.375414848327637
    8. ')' → logprob: -13.500414848327637
    9. ' ,' → logprob: -13.875414848327637
    10. ' discovery' → logprob: -14.000414848327637

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023002512753009796
    2. ',end' → logprob: -6.377300262451172
    3. ' ,' → logprob: -7.502300262451172
    4. 'discover' → logprob: -11.252300262451172
    5. ',
' → logprob: -11.502300262451172
    6. 'dis' → logprob: -12.877300262451172
    7. '+' → logprob: -12.877300262451172
    8. ' discover' → logprob: -13.252300262451172
    9. ',time' → logprob: -13.502300262451172
    10. ',int' → logprob: -13.502300262451172

Token 321: 'discover' (ID: 189838)
  Prédit: 'discover'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discover' → logprob: -0.0007267289329320192
    2. ' discover' → logprob: -7.250726699829102
    3. '"' → logprob: -11.375726699829102
    4. 'dis' → logprob: -13.000726699829102
    5. ' ' → logprob: -14.000726699829102
    6. '   ' → logprob: -14.625726699829102
    7. ''' → logprob: -14.875726699829102
    8. 'end' → logprob: -15.000726699829102
    9. '  ' → logprob: -15.375726699829102
    10. '"{' → logprob: -15.500726699829102

Token 322: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. ',i' → logprob: -16.25
    3. '[' → logprob: -17.25
    4. ',' → logprob: -17.375
    5. '(i' → logprob: -18.0
    6. '[
' → logprob: -18.875
    7. ')' → logprob: -19.0
    8. ' [' → logprob: -19.625
    9. '```' → logprob: -19.625
    10. ',end' → logprob: -19.75

Token 323: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002104102401062846
    2. ',f' → logprob: -6.62710428237915
    3. ' ,' → logprob: -7.25210428237915
    4. ',end' → logprob: -9.627103805541992
    5. ')' → logprob: -13.252103805541992
    6. 'final' → logprob: -15.252103805541992
    7. ',i' → logprob: -15.377103805541992
    8. ',",' → logprob: -15.752103805541992
    9. ' final' → logprob: -15.877103805541992
    10. '  ' → logprob: -15.877103805541992

Token 324: 'final' (ID: 17196)
  Prédit: 'final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.0001234428636962548
    2. ' final' → logprob: -9.000123023986816
    3. '(final' → logprob: -17.625123977661133
    4. '   ' → logprob: -19.375123977661133
    5. 'Final' → logprob: -19.500123977661133
    6. ' ' → logprob: -19.875123977661133
    7. '  ' → logprob: -19.875123977661133
    8. '	final' → logprob: -20.250123977661133
    9. 'end' → logprob: -20.500123977661133
    10. '.final' → logprob: -21.125123977661133

Token 325: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -16.625
    3. '[' → logprob: -18.5
    4. '])' → logprob: -19.5
    5. ']' → logprob: -19.75
    6. ')[' → logprob: -19.875
    7. ')i' → logprob: -20.25
    8. '(i' → logprob: -20.625
    9. 'i' → logprob: -20.75
    10. '[
' → logprob: -21.375

Token 326: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -16.125001907348633
    4. '))' → logprob: -16.250001907348633
    5. ')`' → logprob: -16.875001907348633
    6. ')i' → logprob: -17.750001907348633
    7. '})' → logprob: -18.125001907348633
    8. '),' → logprob: -18.875001907348633
    9. '])' → logprob: -19.000001907348633
    10. ')#' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 324
Tokens correctement prédits (1ère position, stricte): 139
Tokens correctement prédits (1ère position, avec adaptation): 145
Tokens correctement prédits (top 10): 248
Précision stricte (1ère position): 42.90%
Précision adaptée (1ère position): 44.75%
Précision (top 10): 76.54%
================================================================================
