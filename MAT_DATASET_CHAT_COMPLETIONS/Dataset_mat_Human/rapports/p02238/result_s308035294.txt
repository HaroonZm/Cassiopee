================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def dfs(index):
    global count
    d[index] = count
    count += 1
    for i in field[index]:
        if d[i]:
            continue
        count = dfs(i)
    f[index] = count
    return count + 1

n = int(input())
field = [[0,0]]
for _ in range(n):
    u, k, *v = map(int, input().split())
    field.append(v)
d = [0 for _ in range(n + 1)]
f = [0 for _ in range(n + 1)]

count = 1
for i in range(1, n + 1):
    if d[i]:
        continue
    count = dfs(i)
for i in range(1, n + 1):
    print(i, d[i], f[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' dfs' (ID: 51252)
  → Token d'amorce (pas de prédiction)

Token 2: '(index' (ID: 13517)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4007662832736969
    2. '):' → logprob: -1.1507662534713745
    3. ',' → logprob: -4.400766372680664
    4. '(' → logprob: -7.025766372680664
    5. ':' → logprob: -8.150766372680664
    6. '_' → logprob: -9.525766372680664
    7. '):
' → logprob: -9.900766372680664
    8. '<|end|>' → logprob: -10.150766372680664
    9. '```' → logprob: -10.400766372680664
    10. ' ' → logprob: -11.150766372680664

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17857316136360168
    2. '   ' → logprob: -2.6785731315612793
    3. '():' → logprob: -3.0535731315612793
    4. '(' → logprob: -3.1785731315612793
    5. '):' → logprob: -6.553573131561279
    6. ' :' → logprob: -7.053573131561279
    7. '```' → logprob: -7.303573131561279
    8. '    ' → logprob: -7.428573131561279
    9. '(n' → logprob: -7.678573131561279
    10. '(:' → logprob: -7.678573131561279

Token 5: ' global' (ID: 5466)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4700244963169098
    2. '    ' → logprob: -2.220024585723877
    3. '```' → logprob: -2.595024585723877
    4. ' ' → logprob: -3.095024585723877
    5. '\' → logprob: -3.220024585723877
    6. ' if' → logprob: -3.595024585723877
    7. ':' → logprob: -3.970024585723877
    8. '    
' → logprob: -4.220024585723877
    9. '\n' → logprob: -5.470024585723877
    10. 'if' → logprob: -5.595024585723877

Token 6: ' count' (ID: 3605)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.3180968463420868
    2. ' visited' → logprob: -1.3180968761444092
    3. 'visited' → logprob: -6.19309663772583
    4. ' graph' → logprob: -6.81809663772583
    5. 'stack' → logprob: -7.56809663772583
    6. ' dfs' → logprob: -7.81809663772583
    7. ' result' → logprob: -8.568097114562988
    8. ' seen' → logprob: -8.693097114562988
    9. ' depth' → logprob: -9.568097114562988
    10. ' visit' → logprob: -9.568097114562988

Token 7: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01966525800526142
    2. '   ' → logprob: -4.894665241241455
    3. ' :' → logprob: -5.394665241241455
    4. '```' → logprob: -6.144665241241455
    5. ':
' → logprob: -6.644665241241455
    6. ',' → logprob: -6.769665241241455
    7. '):' → logprob: -7.019665241241455
    8. '    ' → logprob: -7.394665241241455
    9. ' ' → logprob: -8.644665718078613
    10. ')' → logprob: -8.894665718078613

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16153591871261597
    2. '   ' → logprob: -2.0365359783172607
    3. ':
' → logprob: -5.286535739898682
    4. '    
' → logprob: -5.286535739898682
    5. ' :' → logprob: -6.036535739898682
    6. '):' → logprob: -6.661535739898682
    7. ',' → logprob: -6.911535739898682
    8. '```' → logprob: -7.161535739898682
    9. '   
' → logprob: -8.03653621673584
    10. '    ' → logprob: -8.03653621673584

Token 9: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15852412581443787
    2. '   ' → logprob: -2.0335240364074707
    3. '    ' → logprob: -5.658524036407471
    4. '```' → logprob: -5.783524036407471
    5. ' :' → logprob: -6.408524036407471
    6. ' ' → logprob: -6.408524036407471
    7. 'if' → logprob: -6.658524036407471
    8. ',' → logprob: -6.908524036407471
    9. ' if' → logprob: -6.908524036407471
    10. '`' → logprob: -8.033524513244629

Token 10: '[index' (ID: 11815)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6701692342758179
    2. 'e' → logprob: -1.5451692342758179
    3. 'fs' → logprob: -1.5451692342758179
    4. 'f' → logprob: -2.9201693534851074
    5. 'ep' → logprob: -6.045169353485107
    6. 'ef' → logprob: -6.795169353485107
    7. 'eep' → logprob: -7.170169353485107
    8. 'o' → logprob: -7.420169353485107
    9. '[i' → logprob: -7.795169353485107
    10. 'i' → logprob: -8.04516887664795

Token 11: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003665275638923049
    2. '[' → logprob: -6.253665447235107
    3. '+' → logprob: -7.378665447235107
    4. ' ]' → logprob: -7.378665447235107
    5. '][' → logprob: -8.62866497039795
    6. ']==' → logprob: -9.25366497039795
    7. ' +' → logprob: -10.12866497039795
    8. '+]' → logprob: -10.50366497039795
    9. '[]' → logprob: -11.00366497039795
    10. ']+' → logprob: -11.12866497039795

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009084968827664852
    2. '['' → logprob: -5.884085178375244
    3. '+' → logprob: -6.509085178375244
    4. ' ==' → logprob: -6.759085178375244
    5. '[]' → logprob: -6.884085178375244
    6. ']' → logprob: -7.759085178375244
    7. ' +=' → logprob: -8.009084701538086
    8. '[:]' → logprob: -8.134084701538086
    9. '=' → logprob: -8.384084701538086
    10. '==' → logprob: -8.634084701538086

Token 13: ' count' (ID: 3605)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.21875979006290436
    2. 'True' → logprob: -1.9687597751617432
    3. '1' → logprob: -3.343759775161743
    4. ' ' → logprob: -3.843759775161743
    5. '0' → logprob: -10.218759536743164
    6. '-' → logprob: -10.593759536743164
    7. '2' → logprob: -11.218759536743164
    8. ' False' → logprob: -11.218759536743164
    9. 'False' → logprob: -11.343759536743164
    10. '(True' → logprob: -12.218759536743164

Token 14: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02564426138997078
    2. '<|end|>' → logprob: -5.525644302368164
    3. '
' → logprob: -5.900644302368164
    4. ' ' → logprob: -6.025644302368164
    5. '\' → logprob: -6.025644302368164
    6. '[' → logprob: -6.150644302368164
    7. '   ' → logprob: -6.150644302368164
    8. ' +' → logprob: -6.525644302368164
    9. '```' → logprob: -6.525644302368164
    10. '\n' → logprob: -6.650644302368164

Token 15: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1056692898273468
    2. ' +' → logprob: -3.3556692600250244
    3. ' ' → logprob: -3.8556692600250244
    4. '   ' → logprob: -4.2306694984436035
    5. '<|end|>' → logprob: -4.7306694984436035
    6. '[' → logprob: -5.4806694984436035
    7. '
' → logprob: -5.9806694984436035
    8. ')' → logprob: -6.1056694984436035
    9. '\n' → logprob: -6.7306694984436035
    10. '=' → logprob: -6.8556694984436035

Token 16: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49232035875320435
    2. '\n' → logprob: -1.4923202991485596
    3. '\' → logprob: -2.7423202991485596
    4. ' ' → logprob: -3.6173202991485596
    5. ')' → logprob: -4.367320537567139
    6. '+' → logprob: -4.492320537567139
    7. '```' → logprob: -4.492320537567139
    8. '
' → logprob: -4.867320537567139
    9. '    
' → logprob: -5.617320537567139
    10. '[' → logprob: -5.617320537567139

Token 17: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2253303974866867
    2. '+' → logprob: -1.7253303527832031
    3. '+=' → logprob: -3.975330352783203
    4. ' +' → logprob: -5.350330352783203
    5. ' ' → logprob: -10.600330352783203
    6. '++' → logprob: -10.850330352783203
    7. '<|end|>' → logprob: -11.475330352783203
    8. ' =' → logprob: -11.600330352783203
    9. '=' → logprob: -11.725330352783203
    10. '  ' → logprob: -12.225330352783203

Token 18: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008616581559181213
    2. ' ' → logprob: -4.7586164474487305
    3. '   ' → logprob: -13.13361644744873
    4. '+' → logprob: -17.258617401123047
    5. '```' → logprob: -17.821117401123047
    6. ' ' → logprob: -18.071117401123047
    7. '4' → logprob: -18.258617401123047
    8. '  ' → logprob: -18.446117401123047
    9. '2' → logprob: -18.446117401123047
    10. '    ' → logprob: -18.508617401123047

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.000123977661133
    4. '  ' → logprob: -18.875123977661133
    5. '2' → logprob: -19.000123977661133
    6. 'd' → logprob: -19.062623977661133
    7. '```' → logprob: -19.125123977661133
    8. '１' → logprob: -19.562623977661133
    9. '+' → logprob: -19.625123977661133
    10. '4' → logprob: -19.687623977661133

Token 20: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0235105752944946
    2. '<|end|>' → logprob: -1.1485105752944946
    3. '\n' → logprob: -1.5235105752944946
    4. '   ' → logprob: -3.398510456085205
    5. '\' → logprob: -3.773510456085205
    6. ')' → logprob: -3.773510456085205
    7. ' ' → logprob: -4.898510456085205
    8. '    
' → logprob: -6.023510456085205
    9. 'd' → logprob: -6.273510456085205
    10. 'n' → logprob: -6.398510456085205

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012808336177840829
    2. 'for' → logprob: -7.251280784606934
    3. '    
' → logprob: -8.251280784606934
    4. ' for' → logprob: -8.751280784606934
    5. '
' → logprob: -10.501280784606934
    6. '<|end|>' → logprob: -10.501280784606934
    7. '\n' → logprob: -10.501280784606934
    8. 'if' → logprob: -10.751280784606934
    9. '```' → logprob: -11.126280784606934
    10. ' if' → logprob: -12.001280784606934

Token 22: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.33354637026786804
    2. '   ' → logprob: -1.5835464000701904
    3. ' for' → logprob: -2.5835464000701904
    4. 'if' → logprob: -5.958546161651611
    5. ' if' → logprob: -8.45854663848877
    6. '    
' → logprob: -10.83354663848877
    7. '```' → logprob: -10.95854663848877
    8. '	for' → logprob: -11.08354663848877
    9. ' ' → logprob: -11.45854663848877
    10. '    ' → logprob: -12.83354663848877

Token 23: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4048888087272644
    2. ' neighbor' → logprob: -2.029888868331909
    3. ' ' → logprob: -2.154888868331909
    4. ' node' → logprob: -3.529888868331909
    5. ' next' → logprob: -4.27988862991333
    6. ' v' → logprob: -4.52988862991333
    7. 'neighbor' → logprob: -4.52988862991333
    8. ' nxt' → logprob: -4.52988862991333
    9. ' x' → logprob: -5.90488862991333
    10. ' n' → logprob: -5.90488862991333

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0185298640280962
    2. 'in' → logprob: -4.018529891967773
    3. ' ' → logprob: -8.143529891967773
    4. 'n' → logprob: -10.643529891967773
    5. ',' → logprob: -10.893529891967773
    6. '  ' → logprob: -11.268529891967773
    7. '   ' → logprob: -11.393529891967773
    8. '	in' → logprob: -11.768529891967773
    9. 's' → logprob: -12.893529891967773
    10. 'd' → logprob: -13.018529891967773

Token 25: ' field' (ID: 3259)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5741629600524902
    2. ' d' → logprob: -1.5741629600524902
    3. ' graph' → logprob: -1.8241629600524902
    4. 'range' → logprob: -3.6991629600524902
    5. 'd' → logprob: -4.19916296005249
    6. 'graph' → logprob: -4.32416296005249
    7. ' adj' → logprob: -5.32416296005249
    8. ' g' → logprob: -5.44916296005249
    9. 'adj' → logprob: -6.07416296005249
    10. 'g' → logprob: -7.44916296005249

Token 26: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.001826192601583898
    2. ':' → logprob: -6.876826286315918
    3. '   ' → logprob: -8.001826286315918
    4. '[' → logprob: -8.001826286315918
    5. '[Index' → logprob: -11.001826286315918
    6. '[in' → logprob: -11.376826286315918
    7. 's' → logprob: -11.876826286315918
    8. '[idx' → logprob: -11.876826286315918
    9. '```' → logprob: -11.876826286315918
    10. ':index' → logprob: -12.001826286315918

Token 27: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0037149270065128803
    2. ']' → logprob: -5.7537150382995605
    3. '):' → logprob: -8.378714561462402
    4. ']):' → logprob: -8.753714561462402
    5. '[' → logprob: -9.503714561462402
    6. ' ]' → logprob: -10.753714561462402
    7. '][' → logprob: -10.753714561462402
    8. ':' → logprob: -11.628714561462402
    9. ']:
' → logprob: -12.253714561462402
    10. '])' → logprob: -12.628714561462402

Token 28: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08202693611383438
    2. '       ' → logprob: -2.832026958465576
    3. ' if' → logprob: -4.332026958465576
    4. '   ' → logprob: -5.707026958465576
    5. 'if' → logprob: -6.707026958465576
    6. ' :' → logprob: -6.832026958465576
    7. '):' → logprob: -7.957026958465576
    8. '    ' → logprob: -8.207026481628418
    9. '():' → logprob: -9.332026481628418
    10. ':
' → logprob: -9.707026481628418

Token 29: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04481589421629906
    2. 'if' (adapté à ' if') → logprob: -3.1698157787323
    3. ' dfs' → logprob: -7.169816017150879
    4. '   ' → logprob: -7.919816017150879
    5. '       ' → logprob: -7.919816017150879
    6. 'dfs' → logprob: -8.544816017150879
    7. '    ' → logprob: -9.294816017150879
    8. ' ' → logprob: -11.669816017150879
    9. '<|end|>' → logprob: -11.794816017150879
    10. 'd' → logprob: -12.294816017150879

Token 30: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.06539534777402878
    2. 'd' → logprob: -2.8153953552246094
    3. ' not' → logprob: -6.190395355224609
    4. ' i' → logprob: -7.065395355224609
    5. ' ' → logprob: -8.19039535522461
    6. 'i' → logprob: -8.94039535522461
    7. 'not' → logprob: -10.06539535522461
    8. '   ' → logprob: -11.06539535522461
    9. ' visited' → logprob: -11.19039535522461
    10. 'visited' → logprob: -11.94039535522461

Token 31: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.014684110297821e-06
    2. '[' → logprob: -11.875008583068848
    3. 'i' → logprob: -14.000008583068848
    4. '.get' → logprob: -15.125008583068848
    5. '```' → logprob: -15.375008583068848
    6. '[j' → logprob: -15.750008583068848
    7. '[x' → logprob: -16.875009536743164
    8. '[get' → logprob: -17.000009536743164
    9. '[I' → logprob: -17.125009536743164
    10. ' [' → logprob: -17.250009536743164

Token 32: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13212420046329498
    2. ']==' → logprob: -2.382124185562134
    3. '[' → logprob: -3.757124185562134
    4. ' ==' → logprob: -5.507124423980713
    5. '==' → logprob: -6.007124423980713
    6. '[i' → logprob: -8.007123947143555
    7. ' ]' → logprob: -8.507123947143555
    8. '<' → logprob: -8.632123947143555
    9. ')' → logprob: -8.757123947143555
    10. '==-' → logprob: -8.882123947143555

Token 33: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20462746918201447
    2. ' continue' → logprob: -1.704627513885498
    3. 'continue' → logprob: -5.954627513885498
    4. '       ' → logprob: -8.20462703704834
    5. '	continue' → logprob: -8.32962703704834
    6. '_continue' → logprob: -10.32962703704834
    7. ' continues' → logprob: -11.07962703704834
    8. '               ' → logprob: -11.20462703704834
    9. '   ' → logprob: -11.82962703704834
    10. ' Continue' → logprob: -12.32962703704834

Token 34: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.02303359843790531
    2. 'continue' (adapté à ' continue') → logprob: -3.898033618927002
    3. '       ' → logprob: -6.773033618927002
    4. '           ' → logprob: -6.898033618927002
    5. '	continue' → logprob: -9.148033142089844
    6. ' return' → logprob: -9.273033142089844
    7. '               ' → logprob: -10.398033142089844
    8. '_continue' → logprob: -10.523033142089844
    9. ' continu' → logprob: -10.898033142089844
    10. '   ' → logprob: -11.523033142089844

Token 35: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003591279499232769
    2. '        
' → logprob: -6.878591060638428
    3. '
' → logprob: -7.003591060638428
    4. 'd' → logprob: -7.503591060638428
    5. '<|end|>' → logprob: -8.253591537475586
    6. '```' → logprob: -8.378591537475586
    7. '   ' → logprob: -8.753591537475586
    8. '\n' → logprob: -9.003591537475586
    9. ' d' → logprob: -9.628591537475586
    10. 'else' → logprob: -9.878591537475586

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009945078752934933
    2. '        
' → logprob: -5.759944915771484
    3. '
' → logprob: -6.509944915771484
    4. '```' → logprob: -6.759944915771484
    5. '\n' → logprob: -7.134944915771484
    6. 'd' → logprob: -7.134944915771484
    7. '<|end|>' → logprob: -7.384944915771484
    8. '   ' → logprob: -7.884944915771484
    9. 'else' → logprob: -8.134944915771484
    10. ' d' → logprob: -8.634944915771484

Token 37: ' count' (ID: 3605)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.2800626754760742
    2. 'dfs' → logprob: -1.9050626754760742
    3. '       ' → logprob: -2.905062675476074
    4. 'd' → logprob: -3.905062675476074
    5. '        
' → logprob: -5.155062675476074
    6. ' 
' → logprob: -5.530062675476074
    7. ' d' → logprob: -5.905062675476074
    8. '\n' → logprob: -5.905062675476074
    9. '
' → logprob: -6.655062675476074
    10. '\' → logprob: -7.155062675476074

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.610065221786499
    2. ' +=' → logprob: -1.735065221786499
    3. ' =' → logprob: -1.735065221786499
    4. ')' → logprob: -3.110065221786499
    5. '+=' → logprob: -3.235065221786499
    6. ',' → logprob: -5.735065460205078
    7. ' ' → logprob: -6.235065460205078
    8. '   ' → logprob: -6.485065460205078
    9. '+' → logprob: -6.610065460205078
    10. '(i' → logprob: -6.610065460205078

Token 39: ' dfs' (ID: 51252)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7995895147323608
    2. 'd' → logprob: -1.7995895147323608
    3. 'dfs' → logprob: -2.1745896339416504
    4. ' count' → logprob: -2.4245896339416504
    5. ' d' → logprob: -2.7995896339416504
    6. ' dfs' → logprob: -2.9245896339416504
    7. '0' → logprob: -3.0495896339416504
    8. '1' → logprob: -5.04958963394165
    9. ' ' → logprob: -5.04958963394165
    10. '   ' → logprob: -6.42458963394165

Token 40: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -10.500027656555176
    3. ' (' → logprob: -17.50002670288086
    4. '(I' → logprob: -17.75002670288086
    5. '(
' → logprob: -17.87502670288086
    6. '(ii' → logprob: -17.87502670288086
    7. '(index' → logprob: -19.00002670288086
    8. '(int' → logprob: -20.37502670288086
    9. 'i' → logprob: -20.50002670288086
    10. '```' → logprob: -20.87502670288086

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1279553291387856e-05
    2. ')
' → logprob: -11.750011444091797
    3. ' )' → logprob: -14.000011444091797
    4. '       ' → logprob: -14.000011444091797
    5. ')return' → logprob: -14.750011444091797
    6. ')i' → logprob: -14.875011444091797
    7. ')`' → logprob: -15.000011444091797
    8. '   ' → logprob: -15.875011444091797
    9. '))' → logprob: -16.625011444091797
    10. ')d' → logprob: -16.750011444091797

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1602470725774765
    2. 'return' → logprob: -2.2852470874786377
    3. ' return' → logprob: -4.035246849060059
    4. ')' → logprob: -4.535246849060059
    5. '
' → logprob: -4.660246849060059
    6. '<|end|>' → logprob: -6.410246849060059
    7. 'count' → logprob: -6.535246849060059
    8. '```' → logprob: -6.535246849060059
    9. '()' → logprob: -6.660246849060059
    10. '(' → logprob: -7.785246849060059

Token 43: ' f' (ID: 285)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7996399402618408
    2. 'return' → logprob: -0.7996399402618408
    3. 'count' → logprob: -3.049639940261841
    4. ')' → logprob: -3.924639940261841
    5. '<|end|>' → logprob: -4.174639701843262
    6. ' return' → logprob: -4.799639701843262
    7. 'd' → logprob: -5.924639701843262
    8. '       ' → logprob: -6.674639701843262
    9. '
' → logprob: -6.799639701843262
    10. '```' → logprob: -6.924639701843262

Token 44: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.19593802094459534
    2. '[' → logprob: -1.945937991142273
    3. '[i' → logprob: -3.5709381103515625
    4. 'inished' → logprob: -6.4459381103515625
    5. 'd' → logprob: -6.5709381103515625
    6. 'i' → logprob: -6.9459381103515625
    7. 'inish' → logprob: -7.1959381103515625
    8. '[]' → logprob: -7.3209381103515625
    9. '[ind' → logprob: -7.6959381103515625
    10. '[in' → logprob: -8.195938110351562

Token 45: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.209963900502771e-05
    2. ']=' → logprob: -9.375092506408691
    3. ' ]' → logprob: -12.500092506408691
    4. '[' → logprob: -13.500092506408691
    5. ']+=' → logprob: -14.125092506408691
    6. ')' → logprob: -15.250092506408691
    7. '']' → logprob: -15.500092506408691
    8. ')]' → logprob: -15.625092506408691
    9. ']]' → logprob: -16.625091552734375
    10. '=' → logprob: -16.625091552734375

Token 46: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7278208136558533
    2. ' =' → logprob: -0.7278208136558533
    3. '[' → logprob: -3.477820873260498
    4. '[index' → logprob: -6.102820873260498
    5. '[i' → logprob: -8.35282039642334
    6. '   ' → logprob: -8.85282039642334
    7. ' ' → logprob: -8.97782039642334
    8. ' +=' → logprob: -9.10282039642334
    9. '=index' → logprob: -9.72782039642334
    10. '  ' → logprob: -9.97782039642334

Token 47: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.001331667648628354
    2. ' count' → logprob: -6.626331806182861
    3. '  ' → logprob: -13.376331329345703
    4. '	count' → logprob: -13.876331329345703
    5. '   ' → logprob: -14.001331329345703
    6. ' ' → logprob: -14.001331329345703
    7. 'counter' → logprob: -14.376331329345703
    8. 'index' → logprob: -15.001331329345703
    9. '    ' → logprob: -16.501331329345703
    10. '[count' → logprob: -16.501331329345703

Token 48: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024554472416639328
    2. 'return' → logprob: -3.899554491043091
    3. '<|end|>' → logprob: -6.149554252624512
    4. ' return' → logprob: -7.399554252624512
    5. '	return' → logprob: -8.024554252624512
    6. '    
' → logprob: -8.649554252624512
    7. '
' → logprob: -8.649554252624512
    8. '    ' → logprob: -9.024554252624512
    9. '\n' → logprob: -9.274554252624512
    10. '       ' → logprob: -9.649554252624512

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19160985946655273
    2. 'return' → logprob: -2.1916098594665527
    3. '<|end|>' → logprob: -3.0666098594665527
    4. '
' → logprob: -4.941609859466553
    5. ' return' → logprob: -6.191609859466553
    6. '	return' → logprob: -6.816609859466553
    7. '```' → logprob: -6.816609859466553
    8. ' ' → logprob: -6.941609859466553
    9. '    ' → logprob: -7.566609859466553
    10. '  ' → logprob: -7.941609859466553

Token 50: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10307185351848602
    2. '   ' → logprob: -2.353071928024292
    3. ' return' → logprob: -5.978071689605713
    4. 'count' → logprob: -8.853072166442871
    5. '<|end|>' → logprob: -9.603072166442871
    6. ':return' → logprob: -9.978072166442871
    7. '	return' → logprob: -10.228072166442871
    8. '```' → logprob: -11.478072166442871
    9. ')' → logprob: -12.353072166442871
    10. '  ' → logprob: -12.603072166442871

Token 51: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.003206711495295167
    2. 'count' → logprob: -5.753206729888916
    3. ' f' → logprob: -11.378206253051758
    4. ' counts' → logprob: -12.128206253051758
    5. ' ' → logprob: -12.378206253051758
    6. '	count' → logprob: -13.003206253051758
    7. ' coun' → logprob: -13.628206253051758
    8. '[count' → logprob: -13.628206253051758
    9. '(count' → logprob: -13.878206253051758
    10. ' index' → logprob: -14.628206253051758

Token 52: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008631468750536442
    2. ' ' → logprob: -4.758631706237793
    3. '0' → logprob: -11.383631706237793
    4. '   ' → logprob: -12.633631706237793
    5. '+' → logprob: -13.383631706237793
    6. '<|end|>' → logprob: -15.133631706237793
    7. '  ' → logprob: -16.383630752563477
    8. '	' → logprob: -16.383630752563477
    9. 'def' → logprob: -16.508630752563477
    10. '```' → logprob: -16.508630752563477

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.750012397766113
    3. '0' → logprob: -12.375012397766113
    4. '   ' → logprob: -15.500012397766113
    5. '+' → logprob: -18.25001335144043
    6. '  ' → logprob: -19.00001335144043
    7. '2' → logprob: -19.75001335144043
    8. '16' → logprob: -19.87501335144043
    9. '<|end|>' → logprob: -20.00001335144043
    10. '-' → logprob: -20.12501335144043

Token 55: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07408802211284637
    2. '=' → logprob: -2.6990880966186523
    3. ' ' → logprob: -6.074088096618652
    4. ',' → logprob: -6.574088096618652
    5. '<|end|>' → logprob: -8.324088096618652
    6. ' ,' → logprob: -9.699088096618652
    7. ':' → logprob: -10.324088096618652
    8. '  ' → logprob: -10.949088096618652
    9. ' =
' → logprob: -10.949088096618652
    10. ')' → logprob: -11.824088096618652

Token 58: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04322560876607895
    2. 'int' → logprob: -3.1682255268096924
    3. ' ' → logprob: -8.543225288391113
    4. '0' → logprob: -11.543225288391113
    5. '=int' → logprob: -11.793225288391113
    6. '10' → logprob: -12.168225288391113
    7. '[int' → logprob: -12.793225288391113
    8. ' input' → logprob: -13.168225288391113
    9. '<int' → logprob: -13.543225288391113
    10. 'input' → logprob: -14.168225288391113

Token 59: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5240210294723511
    2. '(input' → logprob: -0.8990210294723511
    3. '()' → logprob: -7.649021148681641
    4. 'input' → logprob: -7.899021148681641
    5. '('' → logprob: -11.02402114868164
    6. '(
' → logprob: -11.52402114868164
    7. '=input' → logprob: -12.52402114868164
    8. '(

' → logprob: -12.64902114868164
    9. '(int' → logprob: -12.89902114868164
    10. ' (' → logprob: -13.14902114868164

Token 60: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.38722771406173706
    2. '()' → logprob: -1.1372277736663818
    3. ')' → logprob: -8.262228012084961
    4. '(' → logprob: -9.887228012084961
    5. '())
' → logprob: -11.512228012084961
    6. '().' → logprob: -11.512228012084961
    7. '()
' → logprob: -11.637228012084961
    8. '('' → logprob: -12.887228012084961
    9. '()))' → logprob: -12.887228012084961
    10. '();)' → logprob: -13.137228012084961

Token 61: 'field' (ID: 4735)
  Prédit: 'field'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.06436840444803238
    2. 'd' → logprob: -2.814368486404419
    3. 'n' → logprob: -7.43936824798584
    4. 'f' → logprob: -8.06436824798584
    5. 'count' → logprob: -8.06436824798584
    6. ' field' → logprob: -8.06436824798584
    7. '<|end|>' → logprob: -8.31436824798584
    8. 's' → logprob: -8.81436824798584
    9. 'fields' → logprob: -9.18936824798584
    10. '```' → logprob: -9.43936824798584

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10055267065763474
    2. '=' → logprob: -2.350552558898926
    3. 's' → logprob: -8.350552558898926
    4. '[' → logprob: -9.725552558898926
    5. '[]' → logprob: -10.475552558898926
    6. '=[]' → logprob: -11.600552558898926
    7. ' ' → logprob: -12.600552558898926
    8. '[:]' → logprob: -13.100552558898926
    9. ']' → logprob: -13.225552558898926
    10. ')' → logprob: -14.100552558898926

Token 63: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005395700572989881
    2. '[]' → logprob: -7.750539779663086
    3. ' [[]' → logprob: -9.250539779663086
    4. '[int' → logprob: -12.000539779663086
    5. '[n' → logprob: -13.625539779663086
    6. '[List' → logprob: -13.750539779663086
    7. '[list' → logprob: -13.875539779663086
    8. ' [' → logprob: -14.125539779663086
    9. '[[' → logprob: -14.625539779663086
    10. '{}' → logprob: -15.000539779663086

Token 64: '0' (ID: 15)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009031229419633746
    2. 'int' → logprob: -7.875903129577637
    3. ']int' → logprob: -8.750903129577637
    4. '0' → logprob: -9.000903129577637
    5. ']]' → logprob: -9.250903129577637
    6. ' ]' → logprob: -9.375903129577637
    7. ']*' → logprob: -11.000903129577637
    8. '[]' → logprob: -11.375903129577637
    9. ']()' → logprob: -11.875903129577637
    10. ']
' → logprob: -12.000903129577637

Token 65: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010567454155534506
    2. ' for' → logprob: -7.251056671142578
    3. ']*' → logprob: -9.001056671142578
    4. 'for' → logprob: -9.251056671142578
    5. ' ]' → logprob: -9.501056671142578
    6. ']]' → logprob: -10.126056671142578
    7. ']*(' → logprob: -11.626056671142578
    8. ')' → logprob: -14.001056671142578
    9. ']+' → logprob: -14.626056671142578
    10. '+' → logprob: -15.001056671142578

Token 66: '0' (ID: 15)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05361819639801979
    2. ' ]' → logprob: -3.5536181926727295
    3. '0' → logprob: -4.553618431091309
    4. ']]' → logprob: -5.053618431091309
    5. '1' → logprob: -6.053618431091309
    6. '],' → logprob: -6.428618431091309
    7. ' ' → logprob: -6.678618431091309
    8. ' ]]' → logprob: -7.303618431091309
    9. ']*' → logprob: -8.303618431091309
    10. ' ],' → logprob: -8.803618431091309

Token 67: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20670220255851746
    2. '],' → logprob: -1.7067022323608398
    3. ']]' → logprob: -5.45670223236084
    4. '],[' → logprob: -7.95670223236084
    5. ' ]' → logprob: -8.20670223236084
    6. ' ],' → logprob: -8.70670223236084
    7. ',' → logprob: -9.83170223236084
    8. '],
' → logprob: -9.95670223236084
    9. '0' → logprob: -10.58170223236084
    10. ')]' → logprob: -10.95670223236084

Token 68: 'for' (ID: 1938)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2502429783344269
    2. '[' → logprob: -2.3752429485321045
    3. '_' → logprob: -2.8752429485321045
    4. '<|end|>' → logprob: -3.8752429485321045
    5. 'for' → logprob: -4.250243186950684
    6. '[n' → logprob: -4.875243186950684
    7. ' for' → logprob: -5.000243186950684
    8. '*' → logprob: -5.750243186950684
    9. '[field' → logprob: -6.125243186950684
    10. '\' → logprob: -6.250243186950684

Token 69: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3870432376861572
    2. '_' → logprob: -1.1370432376861572
    3. ' i' → logprob: -8.762042999267578
    4. ' ' → logprob: -11.887042999267578
    5. '_i' → logprob: -11.887042999267578
    6. 'i' → logprob: -13.262042999267578
    7. ' ' → logprob: -16.387042999267578
    8. ' in' → logprob: -17.387042999267578
    9. '＿' → logprob: -19.012042999267578
    10. '_=' → logprob: -19.137042999267578

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34644004702568054
    2. 'in' → logprob: -1.346440076828003
    3. 'range' → logprob: -3.471440076828003
    4. ' range' → logprob: -6.971439838409424
    5. 'n' → logprob: -7.971439838409424
    6. ' ' → logprob: -8.596440315246582
    7. '_' → logprob: -9.596440315246582
    8. '  ' → logprob: -12.221440315246582
    9. '```' → logprob: -12.471440315246582
    10. '	range' → logprob: -12.971440315246582

Token 71: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024758970830589533
    2. ' range' → logprob: -6.002475738525391
    3. '(range' → logprob: -16.37747573852539
    4. '	range' → logprob: -16.37747573852539
    5. 'input' → logprob: -17.37747573852539
    6. 'rang' → logprob: -18.12747573852539
    7. 'in' → logprob: -18.25247573852539
    8. ' ' → logprob: -18.62747573852539
    9. 'ange' → logprob: -18.87747573852539
    10. '  ' → logprob: -19.00247573852539

Token 72: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009130131802521646
    2. '(' → logprob: -7.000913143157959
    3. 'n' → logprob: -13.6259126663208
    4. ' n' → logprob: -15.8759126663208
    5. ' (' → logprob: -16.000913619995117
    6. '(
' → logprob: -16.375913619995117
    7. '(int' → logprob: -17.750913619995117
    8. '(range' → logprob: -17.750913619995117
    9. '()' → logprob: -18.625913619995117
    10. '(num' → logprob: -19.000913619995117

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2544921636581421
    2. '):
' → logprob: -1.504492163658142
    3. ')' → logprob: -6.129492282867432
    4. ':' → logprob: -8.879491806030273
    5. '+' → logprob: -9.754491806030273
    6. ':
' → logprob: -10.254491806030273
    7. ' ):' → logprob: -10.254491806030273
    8. '):
' → logprob: -10.504491806030273
    9. '-' → logprob: -10.504491806030273
    10. ']:' → logprob: -11.504491806030273

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3431585431098938
    2. 'field' → logprob: -2.093158483505249
    3. '<|end|>' → logprob: -2.343158483505249
    4. '    
' → logprob: -3.843158483505249
    5. ' field' → logprob: -4.343158721923828
    6. 'input' → logprob: -5.343158721923828
    7. ' 
' → logprob: -5.343158721923828
    8. '	field' → logprob: -5.468158721923828
    9. ' ' → logprob: -5.593158721923828
    10. '  ' → logprob: -6.093158721923828

Token 75: ' u' (ID: 337)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.106404148042202
    2. ' field' → logprob: -2.3564040660858154
    3. '_' → logprob: -6.8564043045043945
    4. 'a' → logprob: -7.2314043045043945
    5. '_field' → logprob: -7.3564043045043945
    6. '   ' → logprob: -7.6064043045043945
    7. '	field' → logprob: -7.6064043045043945
    8. 'x' → logprob: -7.8564043045043945
    9. '```' → logprob: -8.356404304504395
    10. 'fields' → logprob: -8.606404304504395

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14403916895389557
    2. ',v' → logprob: -2.0190391540527344
    3. ' ,' → logprob: -6.644039154052734
    4. 'v' → logprob: -10.394039154052734
    5. ',n' → logprob: -11.769039154052734
    6. ',m' → logprob: -13.019039154052734
    7. ',s' → logprob: -13.269039154052734
    8. ',a' → logprob: -13.394039154052734
    9. ' v' → logprob: -13.519039154052734
    10. 'n' → logprob: -13.644039154052734

Token 77: ' k' (ID: 372)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.05538904666900635
    2. ' v' → logprob: -2.930388927459717
    3. '	v' → logprob: -8.055389404296875
    4. ' ' → logprob: -8.930389404296875
    5. ',v' → logprob: -10.555389404296875
    6. '_' → logprob: -11.930389404296875
    7. '_v' → logprob: -12.055389404296875
    8. '  ' → logprob: -12.805389404296875
    9. '"' → logprob: -13.305389404296875
    10. ' 
' → logprob: -13.680389404296875

Token 78: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3954063653945923
    2. ' =' → logprob: -1.1454063653945923
    3. ',' → logprob: -4.770406246185303
    4. '=int' → logprob: -12.020406723022461
    5. ' ' → logprob: -12.270406723022461
    6. ' ,' → logprob: -13.020406723022461
    7. '=input' → logprob: -13.520406723022461
    8. '＝' → logprob: -13.770406723022461
    9. 'u' → logprob: -14.145406723022461
    10. 'w' → logprob: -14.270406723022461

Token 79: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7540857791900635
    2. '*v' → logprob: -1.7540857791900635
    3. 'v' → logprob: -2.2540857791900635
    4. '*' → logprob: -2.2540857791900635
    5. ' ' → logprob: -3.0040857791900635
    6. ' v' → logprob: -3.2540857791900635
    7. ' =' → logprob: -3.5040857791900635
    8. '=' → logprob: -4.379085540771484
    9. 's' → logprob: -5.754085540771484
    10. '  ' → logprob: -6.504085540771484

Token 80: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007374357897788286
    2. 'a' → logprob: -6.007374286651611
    3. 'vs' → logprob: -6.132374286651611
    4. ' v' → logprob: -6.507374286651611
    5. 'l' → logprob: -8.25737476348877
    6. 'vv' → logprob: -8.75737476348877
    7. 'arr' → logprob: -9.00737476348877
    8. 'list' → logprob: -9.13237476348877
    9. 'w' → logprob: -9.88237476348877
    10. 'adj' → logprob: -9.88237476348877

Token 81: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3282923400402069
    2. ' =' → logprob: -1.7032923698425293
    3. 'al' → logprob: -2.5782923698425293
    4. 's' → logprob: -3.9532923698425293
    5. 'als' → logprob: -6.453292369842529
    6. 'alue' → logprob: -8.328291893005371
    7. 'alist' → logprob: -8.953291893005371
    8. '=[]' → logprob: -9.078291893005371
    9. 'ectors' → logprob: -9.203291893005371
    10. 'v' → logprob: -9.328291893005371

Token 82: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.693248987197876
    2. ' map' → logprob: -0.693248987197876
    3. 'list' → logprob: -10.068248748779297
    4. ' list' → logprob: -10.443248748779297
    5. '	map' → logprob: -11.693248748779297
    6. '[' → logprob: -12.193248748779297
    7. 'm' → logprob: -12.568248748779297
    8. ' ' → logprob: -12.693248748779297
    9. 'input' → logprob: -12.943248748779297
    10. '   ' → logprob: -12.943248748779297

Token 83: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004452083958312869
    2. '(' → logprob: -7.875445365905762
    3. '(input' → logprob: -10.375445365905762
    4. '(str' → logprob: -11.500445365905762
    5. '<|end|>' → logprob: -11.500445365905762
    6. '<int' → logprob: -12.250445365905762
    7. '(eval' → logprob: -12.875445365905762
    8. '[int' → logprob: -13.125445365905762
    9. '=int' → logprob: -13.750445365905762
    10. 'int' → logprob: -14.500445365905762

Token 84: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.281841516494751
    2. ',' → logprob: -1.406841516494751
    3. '(input' → logprob: -7.906841278076172
    4. 'input' → logprob: -8.906841278076172
    5. ')' → logprob: -10.031841278076172
    6. ',int' → logprob: -10.156841278076172
    7. ' input' → logprob: -10.156841278076172
    8. ' ,' → logprob: -10.656841278076172
    9. '(' → logprob: -10.906841278076172
    10. '<|end|>' → logprob: -11.906841278076172

Token 85: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003609339939430356
    2. ' input' → logprob: -5.6286091804504395
    3. ')' → logprob: -13.003609657287598
    4. '[input' → logprob: -13.378609657287598
    5. ',input' → logprob: -13.503609657287598
    6. 'list' → logprob: -13.753609657287598
    7. '   ' → logprob: -14.253609657287598
    8. ' ' → logprob: -14.253609657287598
    9. '_input' → logprob: -14.378609657287598
    10. '(input' → logprob: -15.253609657287598

Token 86: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.2762428822461516e-05
    2. ')' → logprob: -10.125052452087402
    3. '()' → logprob: -11.625052452087402
    4. '.' → logprob: -13.375052452087402
    5. '())' → logprob: -13.625052452087402
    6. '.split' → logprob: -14.500052452087402
    7. 'split' → logprob: -15.750052452087402
    8. ' .' → logprob: -16.25005340576172
    9. '()
' → logprob: -16.87505340576172
    10. '.readline' → logprob: -17.00005340576172

Token 87: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004107732092961669
    2. 'strip' → logprob: -7.875410556793213
    3. 'rstrip' → logprob: -10.625411033630371
    4. ')' → logprob: -12.250411033630371
    5. '(split' → logprob: -14.500411033630371
    6. ' split' → logprob: -14.750411033630371
    7. 's' → logprob: -15.500411033630371
    8. '```' → logprob: -15.625411033630371
    9. 'plit' → logprob: -16.250410079956055
    10. 'spl' → logprob: -16.625410079956055

Token 88: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2467518299818039
    2. '())' → logprob: -1.6217517852783203
    3. '()' → logprob: -3.8717517852783203
    4. '())
' → logprob: -8.99675178527832
    5. ')
' → logprob: -9.74675178527832
    6. '(' → logprob: -9.99675178527832
    7. '))' → logprob: -10.49675178527832
    8. '()
' → logprob: -11.49675178527832
    9. ' )' → logprob: -12.49675178527832
    10. '();)' → logprob: -12.87175178527832

Token 89: '   ' (ID: 271)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.6264411211013794
    2. '
' → logprob: -1.6264411211013794
    3. '<|end|>' → logprob: -2.12644100189209
    4. '   ' → logprob: -2.25144100189209
    5. '    
' → logprob: -4.62644100189209
    6. '	field' → logprob: -4.87644100189209
    7. ' field' → logprob: -5.25144100189209
    8. ' 
' → logprob: -5.75144100189209
    9. '  
' → logprob: -6.00144100189209
    10. '[field' → logprob: -6.25144100189209

Token 90: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' (adapté à ' field') → logprob: -0.04225119203329086
    2. '   ' → logprob: -4.292251110076904
    3. '<|end|>' → logprob: -4.667251110076904
    4. '
' → logprob: -4.917251110076904
    5. ' field' → logprob: -5.917251110076904
    6. ')' → logprob: -6.667251110076904
    7. '[' → logprob: -7.042251110076904
    8. 'v' → logprob: -7.042251110076904
    9. '	field' → logprob: -7.167251110076904
    10. '    
' → logprob: -7.417251110076904

Token 91: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.029846983030438423
    2. '.' → logprob: -3.5298469066619873
    3. '.extend' → logprob: -10.154847145080566
    4. '.app' → logprob: -10.279847145080566
    5. '.ap' → logprob: -11.779847145080566
    6. '[' → logprob: -12.654847145080566
    7. '[u' → logprob: -12.654847145080566
    8. '.Append' → logprob: -13.154847145080566
    9. '​.' → logprob: -13.154847145080566
    10. '.setdefault' → logprob: -14.029847145080566

Token 92: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.014370457269251347
    2. '(' → logprob: -4.639370441436768
    3. '([' → logprob: -5.389370441436768
    4. '((' → logprob: -11.014370918273926
    5. '([]' → logprob: -11.639370918273926
    6. '(
' → logprob: -11.889370918273926
    7. '([
' → logprob: -12.889370918273926
    8. '(list' → logprob: -13.014370918273926
    9. '([...' → logprob: -14.639370918273926
    10. '(

' → logprob: -14.889370918273926

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.123899558791891e-05
    2. ')
' → logprob: -10.25007152557373
    3. '<|end|>' → logprob: -11.00007152557373
    4. ' )' → logprob: -11.25007152557373
    5. '
' → logprob: -13.75007152557373
    6. '   ' → logprob: -13.75007152557373
    7. '))' → logprob: -14.00007152557373
    8. ']' → logprob: -14.25007152557373
    9. '```' → logprob: -14.87507152557373
    10. '\n' → logprob: -15.37507152557373

Token 94: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0374951995909214
    2. 'count' → logprob: -3.4124951362609863
    3. 'for' → logprob: -5.912495136260986
    4. '```' → logprob: -7.287495136260986
    5. '
' → logprob: -8.037495613098145
    6. 'f' → logprob: -10.412495613098145
    7. 'n' → logprob: -10.787495613098145
    8. 'b' → logprob: -11.412495613098145
    9. 'dfs' → logprob: -11.537495613098145
    10. 'counts' → logprob: -12.162495613098145

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002756137400865555
    2. '=' → logprob: -6.127756118774414
    3. '<|end|>' → logprob: -8.002756118774414
    4. ' ' → logprob: -8.752756118774414
    5. '[' → logprob: -9.877756118774414
    6. ',' → logprob: -11.377756118774414
    7. ' =[' → logprob: -12.377756118774414
    8. '[:]' → logprob: -12.752756118774414
    9. '.' → logprob: -13.752756118774414
    10. '<|end|>' → logprob: -13.752756118774414

Token 96: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005234713666141033
    2. ' [' → logprob: -5.255234718322754
    3. '[n' → logprob: -14.630234718322754
    4. ' ' → logprob: -15.880234718322754
    5. '[-' → logprob: -16.505233764648438
    6. '0' → logprob: -17.005233764648438
    7. '   ' → logprob: -17.255233764648438
    8. '[len' → logprob: -17.255233764648438
    9. '[]' → logprob: -17.755233764648438
    10. ' ' → logprob: -17.755233764648438

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.750005722045898
    3. 'False' → logprob: -13.000005722045898
    4. '-' → logprob: -14.500005722045898
    5. 'n' → logprob: -16.1250057220459
    6. '   ' → logprob: -16.5000057220459
    7. '000' → logprob: -16.7500057220459
    8. '```' → logprob: -17.1250057220459
    9. '00' → logprob: -17.6250057220459
    10. 'None' → logprob: -17.7500057220459

Token 98: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00196836213581264
    2. ']*(' → logprob: -6.3769683837890625
    3. ']*' → logprob: -8.626968383789062
    4. ' for' → logprob: -10.001968383789062
    5. ']+' → logprob: -11.126968383789062
    6. ',' → logprob: -11.501968383789062
    7. ' ]' → logprob: -11.501968383789062
    8. 'for' → logprob: -12.751968383789062
    9. '(n' → logprob: -13.626968383789062
    10. '](' → logprob: -13.876968383789062

Token 99: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00025430647656321526
    2. ' _' → logprob: -8.62525463104248
    3. ' range' → logprob: -10.75025463104248
    4. '_range' → logprob: -10.75025463104248
    5. ' in' → logprob: -11.12525463104248
    6. 'range' → logprob: -11.75025463104248
    7. '(range' → logprob: -13.37525463104248
    8. '_in' → logprob: -13.50025463104248
    9. ' ' → logprob: -13.50025463104248
    10. 'in' → logprob: -13.50025463104248

Token 100: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.27591121196746826
    2. 'in' → logprob: -1.5259112119674683
    3. ' in' → logprob: -4.025911331176758
    4. ' range' → logprob: -5.150911331176758
    5. '_' → logprob: -10.900911331176758
    6. ' ' → logprob: -11.025911331176758
    7. '(range' → logprob: -12.150911331176758
    8. 'i' → logprob: -12.275911331176758
    9. '  ' → logprob: -12.650911331176758
    10. 'n' → logprob: -13.025911331176758

Token 101: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014165272004902363
    2. ' range' → logprob: -4.26416540145874
    3. 'field' → logprob: -13.764164924621582
    4. ' ' → logprob: -15.389164924621582
    5. '(range' → logprob: -15.889164924621582
    6. '	range' → logprob: -15.889164924621582
    7. 'r' → logprob: -16.1391658782959
    8. 'ran' → logprob: -16.8891658782959
    9. '  ' → logprob: -17.1391658782959
    10. '   ' → logprob: -17.5141658782959

Token 102: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5088276267051697
    2. '(range' → logprob: -1.0088276863098145
    3. 'range' → logprob: -3.5088276863098145
    4. ' range' → logprob: -5.6338276863098145
    5. '(' → logprob: -7.3838276863098145
    6. ' (' → logprob: -12.133827209472656
    7. '(r' → logprob: -12.258827209472656
    8. '((' → logprob: -12.758827209472656
    9. '	range' → logprob: -12.758827209472656
    10. '(i' → logprob: -13.383827209472656

Token 103: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003191501135006547
    2. ' +' → logprob: -5.7531914710998535
    3. ')]' → logprob: -11.253191947937012
    4. ')' → logprob: -14.503191947937012
    5. '+
' → logprob: -15.878191947937012
    6. '1' → logprob: -16.253190994262695
    7. '＋' → logprob: -17.128190994262695
    8. ' ' → logprob: -17.753190994262695
    9. ' )' → logprob: -18.003190994262695
    10. '+

' → logprob: -18.128190994262695

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001773192489054054
    2. ' ' → logprob: -8.750177383422852
    3. '2' → logprob: -11.000177383422852
    4. '   ' → logprob: -14.500177383422852
    5. '(' → logprob: -14.937677383422852
    6. '１' → logprob: -15.125177383422852
    7. '  ' → logprob: -15.687677383422852
    8. '```' → logprob: -16.06267738342285
    9. '
' → logprob: -16.25017738342285
    10. '3' → logprob: -16.75017738342285

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002217748697148636
    2. '2' → logprob: -8.500222206115723
    3. ' ' → logprob: -11.125222206115723
    4. '   ' → logprob: -14.375222206115723
    5. '１' → logprob: -14.375222206115723
    6. '```' → logprob: -14.625222206115723
    7. '(' → logprob: -14.687722206115723
    8. '
' → logprob: -15.562722206115723
    9. '  ' → logprob: -15.750222206115723
    10. '+' → logprob: -15.750222206115723

Token 106: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7359806299209595
    2. ')]' → logprob: -0.7359806299209595
    3. ')' → logprob: -3.23598051071167
    4. '])' → logprob: -5.98598051071167
    5. ' ]' → logprob: -9.985980987548828
    6. ')])' → logprob: -10.985980987548828
    7. ']
' → logprob: -11.110980987548828
    8. '])]' → logprob: -12.360980987548828
    9. '）' → logprob: -13.235980987548828
    10. ' )' → logprob: -13.360980987548828

Token 107: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0007104054093360901
    2. 'count' → logprob: -7.250710487365723
    3. ' f' → logprob: -15.875710487365723
    4. '```' → logprob: -15.875710487365723
    5. 'c' → logprob: -17.000709533691406
    6. '
' → logprob: -17.375709533691406
    7. '   ' → logprob: -18.750709533691406
    8. 'Count' → logprob: -18.875709533691406
    9. 'for' → logprob: -19.125709533691406
    10. '[count' → logprob: -19.250709533691406

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006722352933138609
    2. '=' → logprob: -5.006722450256348
    3. ' =[' → logprob: -12.631722450256348
    4. '[' → logprob: -12.881722450256348
    5. ' ' → logprob: -14.131722450256348
    6. '<|end|>' → logprob: -15.881722450256348
    7. '=[' → logprob: -17.00672149658203
    8. ' =
' → logprob: -17.00672149658203
    9. '  ' → logprob: -17.00672149658203
    10. ',' → logprob: -17.38172149658203

Token 109: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07889463007450104
    2. ' [' → logprob: -2.57889461517334
    3. ' ' → logprob: -12.95389461517334
    4. '0' → logprob: -13.32889461517334
    5. ' ' → logprob: -15.32889461517334
    6. '   ' → logprob: -15.70389461517334
    7. '[-' → logprob: -15.95389461517334
    8. '([' → logprob: -16.828895568847656
    9. '  ' → logprob: -16.828895568847656
    10. '[]' → logprob: -17.078895568847656

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38949906826019287
    2. '[' → logprob: -1.1394990682601929
    3. ' [' → logprob: -6.264499187469482
    4. ' ' → logprob: -7.264499187469482
    5. '(' → logprob: -11.764498710632324
    6. '   ' → logprob: -11.889498710632324
    7. ']' → logprob: -12.889498710632324
    8. '  ' → logprob: -14.139498710632324
    9. '```' → logprob: -14.139498710632324
    10. '
' → logprob: -14.764498710632324

Token 111: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.127186581492424
    2. 'for' → logprob: -2.1271865367889404
    3. ']' → logprob: -9.00218677520752
    4. ' ' → logprob: -9.62718677520752
    5. '	for' → logprob: -10.00218677520752
    6. ')' → logprob: -11.75218677520752
    7. '   ' → logprob: -11.87718677520752
    8. ',' → logprob: -13.37718677520752
    9. '(n' → logprob: -13.75218677520752
    10. '  ' → logprob: -13.87718677520752

Token 112: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.6537622034084052e-05
    2. ' _' → logprob: -10.75002670288086
    3. '_range' → logprob: -13.12502670288086
    4. ' range' → logprob: -13.37502670288086
    5. 'range' → logprob: -14.62502670288086
    6. ' (' → logprob: -15.12502670288086
    7. ' in' → logprob: -15.37502670288086
    8. '(' → logprob: -15.75002670288086
    9. '_in' → logprob: -16.62502670288086
    10. '(n' → logprob: -16.75002670288086

Token 113: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.019550234079360962
    2. ' range' → logprob: -4.519550323486328
    3. 'in' → logprob: -5.269550323486328
    4. ' in' → logprob: -6.769550323486328
    5. '_' → logprob: -6.894550323486328
    6. '(range' → logprob: -7.019550323486328
    7. '_range' → logprob: -8.894550323486328
    8. '(n' → logprob: -9.144550323486328
    9. 'n' → logprob: -11.644550323486328
    10. '	range' → logprob: -12.519550323486328

Token 114: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47509899735450745
    2. 'range' → logprob: -0.9750989675521851
    3. '_' → logprob: -6.975099086761475
    4. '(range' → logprob: -9.725098609924316
    5. '_range' → logprob: -10.975098609924316
    6. '(n' → logprob: -11.850098609924316
    7. ' _' → logprob: -14.100098609924316
    8. ' ' → logprob: -14.850098609924316
    9. '	range' → logprob: -14.850098609924316
    10. 'n' → logprob: -15.475098609924316

Token 115: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.513339445111342e-05
    2. '(' → logprob: -10.375044822692871
    3. ' (' → logprob: -11.500044822692871
    4. 'n' → logprob: -12.750044822692871
    5. 'range' → logprob: -15.000044822692871
    6. '((' → logprob: -15.375044822692871
    7. ' n' → logprob: -15.375044822692871
    8. '(range' → logprob: -15.625044822692871
    9. ' range' → logprob: -17.625045776367188
    10. '```' → logprob: -18.500045776367188

Token 116: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889793813228607
    2. ' +' → logprob: -2.5788979530334473
    3. '+
' → logprob: -12.703897476196289
    4. '1' → logprob: -13.078897476196289
    5. ')' → logprob: -13.453897476196289
    6. '＋' → logprob: -14.328897476196289
    7. ' +
' → logprob: -14.953897476196289
    8. ' ' → logprob: -16.07889747619629
    9. '+)' → logprob: -16.32889747619629
    10. ' plus' → logprob: -16.57889747619629

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003918271977454424
    2. ' ' → logprob: -7.875391960144043
    3. '(' → logprob: -11.500391960144043
    4. '   ' → logprob: -14.750391960144043
    5. ')]' → logprob: -15.375391960144043
    6. '])' → logprob: -15.625391960144043
    7. ')' → logprob: -15.625391960144043
    8. '
' → logprob: -15.875391960144043
    9. '  ' → logprob: -16.000391006469727
    10. 'n' → logprob: -16.000391006469727

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.625011444091797
    3. '+' → logprob: -13.875011444091797
    4. '(' → logprob: -14.250011444091797
    5. '```' → logprob: -15.125011444091797
    6. 'n' → logprob: -15.625011444091797
    7. '(n' → logprob: -16.062511444091797
    8. '   ' → logprob: -16.250011444091797
    9. '0' → logprob: -16.500011444091797
    10. '１' → logprob: -17.000011444091797

Token 119: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005465993890538812
    2. ']' → logprob: -7.750546455383301
    3. ')' → logprob: -9.1255464553833
    4. '])' → logprob: -12.2505464553833
    5. '])]' → logprob: -14.0005464553833
    6. ')]
' → logprob: -14.8755464553833
    7. ' )' → logprob: -15.2505464553833
    8. ' ]' → logprob: -15.6255464553833
    9. ')])' → logprob: -15.7505464553833
    10. ')],' → logprob: -15.8755464553833

Token 120: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.029754776507616043
    2. 'for' → logprob: -3.529754877090454
    3. 'index' → logprob: -13.279754638671875
    4. 'c' → logprob: -15.029754638671875
    5. ' count' → logprob: -15.029754638671875
    6. 'start' → logprob: -15.279754638671875
    7. ' for' → logprob: -15.279754638671875
    8. '```' → logprob: -15.279754638671875
    9. 'cnt' → logprob: -15.654754638671875
    10. 'counter' → logprob: -15.779754638671875

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868723213672638
    2. ' =' → logprob: -1.1368722915649414
    3. '<|end|>' → logprob: -14.261872291564941
    4. ' ' → logprob: -15.886872291564941
    5. '0' → logprob: -16.011873245239258
    6. '1' → logprob: -16.386873245239258
    7. '＝' → logprob: -16.886873245239258
    8. ' ' → logprob: -17.261873245239258
    9. ',' → logprob: -17.386873245239258
    10. '=int' → logprob: -18.136873245239258

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005236360710114241
    2. ' ' → logprob: -5.2552361488342285
    3. '0' → logprob: -13.380236625671387
    4. '１' → logprob: -14.630236625671387
    5. ' ' → logprob: -15.630236625671387
    6. '2' → logprob: -15.755236625671387
    7. '  ' → logprob: -16.13023567199707
    8. '	' → logprob: -16.94273567199707
    9. '' → logprob: -17.44273567199707
    10. '   ' → logprob: -17.63023567199707

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.040457421680912e-05
    2. '0' → logprob: -10.000070571899414
    3. ' ' → logprob: -10.625070571899414
    4. '2' → logprob: -15.687570571899414
    5. '１' → logprob: -16.187570571899414
    6. '[' → logprob: -16.750070571899414
    7. '10' → logprob: -17.625070571899414
    8. '   ' → logprob: -17.750070571899414
    9. '' → logprob: -17.812570571899414
    10. '  ' → logprob: -17.875070571899414

Token 124: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12694574892520905
    2. 'dfs' → logprob: -2.126945734024048
    3. ' for' → logprob: -11.751945495605469
    4. '
' → logprob: -12.876945495605469
    5. ' dfs' → logprob: -13.126945495605469
    6. 'df' → logprob: -13.251945495605469
    7. 'print' → logprob: -13.501945495605469
    8. 'while' → logprob: -13.876945495605469
    9. 'DFS' → logprob: -15.001945495605469
    10. '```' → logprob: -15.626945495605469

Token 125: 'for' (ID: 1938)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.3485158681869507
    2. 'for' → logprob: -1.2235158681869507
    3. 'print' → logprob: -9.973515510559082
    4. ' for' → logprob: -11.848515510559082
    5. ' dfs' → logprob: -12.098515510559082
    6. 'count' → logprob: -12.598515510559082
    7. 'df' → logprob: -12.723515510559082
    8. 'while' → logprob: -13.348515510559082
    9. '1' → logprob: -14.348515510559082
    10. 'DFS' → logprob: -14.348515510559082

Token 126: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00421338202431798
    2. ' u' → logprob: -6.504213333129883
    3. 'i' → logprob: -6.629213333129883
    4. ' _' → logprob: -7.004213333129883
    5. ' index' → logprob: -8.879213333129883
    6. '_' → logprob: -8.879213333129883
    7. ' node' → logprob: -9.254213333129883
    8. ' ' → logprob: -9.879213333129883
    9. 'u' → logprob: -11.379213333129883
    10. 'index' → logprob: -11.754213333129883

Token 127: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04340573772788048
    2. 'in' → logprob: -3.168405771255493
    3. ' ' → logprob: -8.043405532836914
    4. 'range' → logprob: -10.668405532836914
    5. 'n' → logprob: -11.043405532836914
    6. '	in' → logprob: -11.293405532836914
    7. '  ' → logprob: -11.543405532836914
    8. ',' → logprob: -12.543405532836914
    9. '1' → logprob: -12.543405532836914
    10. ' i' → logprob: -13.043405532836914

Token 128: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740805923938751
    2. 'range' → logprob: -0.9740805625915527
    3. ' ' → logprob: -13.224081039428711
    4. '	range' → logprob: -14.474081039428711
    5. '(range' → logprob: -15.099081039428711
    6. '1' → logprob: -15.474081039428711
    7. '   ' → logprob: -15.724081039428711
    8. '  ' → logprob: -15.974081039428711
    9. ' ' → logprob: -15.974081039428711
    10. 'rang' → logprob: -16.59908103942871

Token 129: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -15.875
    3. '1' → logprob: -16.375
    4. '(n' → logprob: -17.0
    5. '(
' → logprob: -17.875
    6. ' ' → logprob: -19.25
    7. ',' → logprob: -20.5
    8. 'range' → logprob: -21.125
    9. '   ' → logprob: -21.25
    10. 'n' → logprob: -21.25

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010866894444916397
    2. ' ' → logprob: -9.25010871887207
    3. 'n' → logprob: -11.37510871887207
    4. '   ' → logprob: -14.37510871887207
    5. ' n' → logprob: -15.50010871887207
    6. '
' → logprob: -16.25010871887207
    7. '(' → logprob: -16.62510871887207
    8. '```' → logprob: -17.62510871887207
    9. 'len' → logprob: -17.87510871887207
    10. '(n' → logprob: -18.25010871887207

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01637287251651287
    2. ',n' → logprob: -4.1413726806640625
    3. ' ,' → logprob: -8.016372680664062
    4. '(n' → logprob: -12.891372680664062
    5. 'n' → logprob: -13.266372680664062
    6. ',
' → logprob: -13.391372680664062
    7. '   ' → logprob: -13.641372680664062
    8. ' n' → logprob: -14.766372680664062
    9. 'to' → logprob: -14.766372680664062
    10. 'in' → logprob: -15.766372680664062

Token 132: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00012368128227535635
    2. ' n' → logprob: -9.000123977661133
    3. '	n' → logprob: -15.625123977661133
    4. '   ' → logprob: -17.125123977661133
    5. '
' → logprob: -17.625123977661133
    6. '(n' → logprob: -17.750123977661133
    7. 'len' → logprob: -19.000123977661133
    8. ')n' → logprob: -19.000123977661133
    9. '_n' → logprob: -19.750123977661133
    10. ' ' → logprob: -19.750123977661133

Token 133: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25193288922309875
    2. ' +' → logprob: -1.5019328594207764
    3. '+
' → logprob: -13.126933097839355
    4. '   ' → logprob: -14.501933097839355
    5. '
' → logprob: -14.626933097839355
    6. '+n' → logprob: -15.001933097839355
    7. '＋' → logprob: -15.501933097839355
    8. ' +
' → logprob: -15.751933097839355
    9. ' ' → logprob: -15.876933097839355
    10. '):
' → logprob: -17.75193214416504

Token 134: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009756559506058693
    2. ' ' → logprob: -4.634756565093994
    3. '   ' → logprob: -15.009756088256836
    4. '2' → logprob: -15.759756088256836
    5. '```' → logprob: -16.384756088256836
    6. ' ' → logprob: -16.759756088256836
    7. '  ' → logprob: -16.884756088256836
    8. '
' → logprob: -17.259756088256836
    9. ')' → logprob: -17.759756088256836
    10. ' n' → logprob: -17.759756088256836

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.375032424926758
    4. '2' → logprob: -16.375032424926758
    5. '```' → logprob: -16.750032424926758
    6. 'n' → logprob: -17.687532424926758
    7. '１' → logprob: -17.937532424926758
    8. '+' → logprob: -18.062532424926758
    9. '
' → logprob: -18.125032424926758
    10. '۱' → logprob: -18.250032424926758

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030859487131237984
    2. ':' → logprob: -3.6558594703674316
    3. '):
' → logprob: -5.530859470367432
    4. ')' → logprob: -7.530859470367432
    5. ' ):' → logprob: -10.65585994720459
    6. ':
' → logprob: -10.90585994720459
    7. ' :' → logprob: -13.28085994720459
    8. '():' → logprob: -13.53085994720459
    9. '   ' → logprob: -13.65585994720459
    10. '}:' → logprob: -13.90585994720459

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035464439541101456
    2. ' if' → logprob: -3.5354645252227783
    3. 'if' → logprob: -5.285464286804199
    4. '    
' → logprob: -8.4104642868042
    5. 'dfs' → logprob: -8.9104642868042
    6. '
' → logprob: -9.0354642868042
    7. ' dfs' → logprob: -10.1604642868042
    8. '<|end|>' → logprob: -10.6604642868042
    9. '	if' → logprob: -11.0354642868042
    10. ' ' → logprob: -11.5354642868042

Token 138: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3151113986968994
    2. ' if' → logprob: -2.0651113986968994
    3. 'dfs' → logprob: -2.1901113986968994
    4. '   ' → logprob: -4.06511116027832
    5. ' dfs' → logprob: -4.31511116027832
    6. ':' → logprob: -8.19011116027832
    7. ':
' → logprob: -8.81511116027832
    8. '
' → logprob: -9.06511116027832
    9. 'df' → logprob: -9.19011116027832
    10. '    
' → logprob: -9.19011116027832

Token 139: ' d' (ID: 272)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11923014372587204
    2. ' d' → logprob: -2.244230031967163
    3. 'not' → logprob: -5.369230270385742
    4. 'd' → logprob: -6.369230270385742
    5. ' ' → logprob: -12.119230270385742
    6. ' ' → logprob: -12.744230270385742
    7. '	not' → logprob: -13.494230270385742
    8. '!' → logprob: -13.994230270385742
    9. ' no' → logprob: -14.119230270385742
    10. '   ' → logprob: -14.119230270385742

Token 140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.000001907348633
    3. '```' → logprob: -17.250001907348633
    4. '[
' → logprob: -18.500001907348633
    5. 'i' → logprob: -18.625001907348633
    6. '[u' → logprob: -18.750001907348633
    7. '[I' → logprob: -18.750001907348633
    8. '
' → logprob: -19.500001907348633
    9. '[index' → logprob: -19.625001907348633
    10. '[j' → logprob: -19.625001907348633

Token 141: ']:
' (ID: 22152)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.26126793026924133
    2. ']==' → logprob: -2.011267900466919
    3. ']' → logprob: -2.386267900466919
    4. ' ==' → logprob: -5.636268138885498
    5. ')' → logprob: -8.51126766204834
    6. ')==' → logprob: -8.88626766204834
    7. ']:' → logprob: -9.26126766204834
    8. '']==' → logprob: -9.76126766204834
    9. '=' → logprob: -11.01126766204834
    10. ' ]' → logprob: -11.51126766204834

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8643835186958313
    2. '   ' → logprob: -0.9893835186958313
    3. ' continue' → logprob: -1.9893834590911865
    4. 'continue' → logprob: -2.7393834590911865
    5. '	continue' → logprob: -5.864383697509766
    6. ':' → logprob: -7.239383697509766
    7. '    ' → logprob: -7.364383697509766
    8. ' ' → logprob: -8.364383697509766
    9. ':
' → logprob: -8.364383697509766
    10. '==' → logprob: -8.739383697509766

Token 143: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3984786868095398
    2. ' continue' → logprob: -1.1484787464141846
    3. '   ' → logprob: -4.5234785079956055
    4. '	continue' → logprob: -7.8984785079956055
    5. '       ' → logprob: -8.398478507995605
    6. '    ' → logprob: -10.398478507995605
    7. 'contin' → logprob: -10.773478507995605
    8. '           ' → logprob: -11.398478507995605
    9. ' ' → logprob: -11.398478507995605
    10. 'continu' → logprob: -12.023478507995605

Token 144: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.23975515365600586
    2. '   ' → logprob: -1.9897551536560059
    3. ' count' → logprob: -2.614755153656006
    4. 'dfs' → logprob: -6.239755153656006
    5. '
' → logprob: -7.614755153656006
    6. ' dfs' → logprob: -7.989755153656006
    7. '    
' → logprob: -8.114755630493164
    8. '	count' → logprob: -9.739755630493164
    9. ' ' → logprob: -10.614755630493164
    10. '(count' → logprob: -10.864755630493164

Token 145: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3864268660545349
    2. 'dfs' → logprob: -1.2614269256591797
    3. ' count' → logprob: -4.13642692565918
    4. ' dfs' → logprob: -4.13642692565918
    5. '   ' → logprob: -5.51142692565918
    6. '    
' → logprob: -8.13642692565918
    7. ')' → logprob: -8.26142692565918
    8. '=' → logprob: -9.26142692565918
    9. ' ' → logprob: -9.38642692565918
    10. '(count' → logprob: -9.51142692565918

Token 146: ' count' (ID: 3605)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.1504802703857422
    2. 'count' (adapté à ' count') → logprob: -2.150480270385742
    3. ' dfs' → logprob: -3.900480270385742
    4. ' count' → logprob: -6.150480270385742
    5. '
' → logprob: -7.900480270385742
    6. '   ' → logprob: -8.275480270385742
    7. '    
' → logprob: -9.150480270385742
    8. 'df' → logprob: -10.025480270385742
    9. '```' → logprob: -10.275480270385742
    10. 'd' → logprob: -10.900480270385742

Token 147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692873179912567
    2. ' =' → logprob: -2.1269288063049316
    3. '＝' → logprob: -14.626928329467773
    4. ' ' → logprob: -16.876928329467773
    5. '=d' → logprob: -17.126928329467773
    6. ',' → logprob: -17.251928329467773
    7. '=

' → logprob: -17.251928329467773
    8. '=
' → logprob: -17.376928329467773
    9. '=int' → logprob: -17.501928329467773
    10. '+=' → logprob: -17.751928329467773

Token 148: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.02630889043211937
    2. ' dfs' → logprob: -3.65130877494812
    3. 'df' → logprob: -12.0263090133667
    4. '   ' → logprob: -13.9013090133667
    5. 'ds' → logprob: -14.6513090133667
    6. 'd' → logprob: -14.7763090133667
    7. ' ' → logprob: -14.9013090133667
    8. '
' → logprob: -15.7763090133667
    9. '  ' → logprob: -16.151308059692383
    10. 'fs' → logprob: -16.901308059692383

Token 149: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.018150413408875465
    2. '(' → logprob: -4.018150329589844
    3. '(
' → logprob: -15.518150329589844
    4. '(ii' → logprob: -16.018150329589844
    5. '((' → logprob: -16.643150329589844
    6. '(int' → logprob: -17.393150329589844
    7. ' (' → logprob: -17.768150329589844
    8. 'i' → logprob: -17.893150329589844
    9. '(`' → logprob: -18.018150329589844
    10. '('' → logprob: -18.143150329589844

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.990154047845863e-05
    2. ')
' → logprob: -10.000049591064453
    3. ' )' → logprob: -12.875049591064453
    4. ')i' → logprob: -14.250049591064453
    5. ')`' → logprob: -15.000049591064453
    6. ')

' → logprob: -15.375049591064453
    7. '))' → logprob: -15.750049591064453
    8. ')return' → logprob: -16.125049591064453
    9. '())' → logprob: -16.750049591064453
    10. ')}' → logprob: -16.750049591064453

Token 151: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03868909925222397
    2. 'i' → logprob: -3.413689136505127
    3. '_' → logprob: -5.663689136505127
    4. ' _' → logprob: -6.663689136505127
    5. ' ' → logprob: -8.288688659667969
    6. ' ' → logprob: -10.913688659667969
    7. '_i' → logprob: -12.163688659667969
    8. '	i' → logprob: -12.413688659667969
    9. ' range' → logprob: -13.913688659667969
    10. ' ‌' → logprob: -14.038688659667969

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006988515146076679
    2. 'in' → logprob: -5.506988525390625
    3. ' ' → logprob: -6.256988525390625
    4. 'range' → logprob: -7.756988525390625
    5. ' range' → logprob: -7.881988525390625
    6. 'n' → logprob: -9.131988525390625
    7. ' n' → logprob: -10.756988525390625
    8. '  ' → logprob: -10.881988525390625
    9. ' i' → logprob: -11.006988525390625
    10. ',' → logprob: -13.006988525390625

Token 154: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132673501968384
    2. ' range' → logprob: -1.3132673501968384
    3. 'r' → logprob: -13.563267707824707
    4. ' ' → logprob: -13.563267707824707
    5. '(range' → logprob: -13.688267707824707
    6. 'ange' → logprob: -14.813267707824707
    7. 'rang' → logprob: -15.188267707824707
    8. '  ' → logprob: -15.313267707824707
    9. 'ran' → logprob: -15.438267707824707
    10. '	range' → logprob: -15.813267707824707

Token 155: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.5776860184123507e-06
    2. ' (' → logprob: -13.37500286102295
    3. '(n' → logprob: -14.25000286102295
    4. '(range' → logprob: -16.125001907348633
    5. '1' → logprob: -16.750001907348633
    6. 'range' → logprob: -17.125001907348633
    7. ' range' → logprob: -17.500001907348633
    8. '(
' → logprob: -17.500001907348633
    9. '((' → logprob: -17.750001907348633
    10. ' ' → logprob: -18.750001907348633

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015310514718294144
    2. 'n' → logprob: -7.12653112411499
    3. ' ' → logprob: -7.37653112411499
    4. '(' → logprob: -9.626530647277832
    5. ' n' → logprob: -11.001530647277832
    6. '(n' → logprob: -11.501530647277832
    7. '   ' → logprob: -12.626530647277832
    8. 'range' → logprob: -13.001530647277832
    9. '
' → logprob: -14.376530647277832
    10. ',' → logprob: -15.001530647277832

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004911262076348066
    2. ' ,' → logprob: -5.629911422729492
    3. 'n' → logprob: -7.504911422729492
    4. ',n' → logprob: -7.754911422729492
    5. '(n' → logprob: -8.254911422729492
    6. ' n' → logprob: -10.629911422729492
    7. '(' → logprob: -11.004911422729492
    8. '   ' → logprob: -11.754911422729492
    9. '1' → logprob: -12.254911422729492
    10. ' ' → logprob: -12.754911422729492

Token 158: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1602274775505066
    2. ' n' → logprob: -1.9102275371551514
    3. ' ' → logprob: -14.16022777557373
    4. '   ' → logprob: -14.16022777557373
    5. '	n' → logprob: -14.16022777557373
    6. 'len' → logprob: -14.91022777557373
    7. '(n' → logprob: -15.03522777557373
    8. ' len' → logprob: -15.28522777557373
    9. '
' → logprob: -16.160226821899414
    10. '  ' → logprob: -16.910226821899414

Token 159: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1602274775505066
    2. '+' → logprob: -1.9102275371551514
    3. '+
' → logprob: -13.66022777557373
    4. ' +
' → logprob: -13.78522777557373
    5. ' ' → logprob: -14.53522777557373
    6. '＋' → logprob: -15.28522777557373
    7. ' ' → logprob: -15.91022777557373
    8. ' plus' → logprob: -16.410226821899414
    9. ' +
' → logprob: -16.660226821899414
    10. '+n' → logprob: -17.035226821899414

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003195654833689332
    2. ' ' → logprob: -5.753195762634277
    3. '+' → logprob: -12.628195762634277
    4. '2' → logprob: -13.003195762634277
    5. 'n' → logprob: -13.003195762634277
    6. '
' → logprob: -13.128195762634277
    7. '11' → logprob: -13.378195762634277
    8. ')' → logprob: -13.628195762634277
    9. '   ' → logprob: -13.628195762634277
    10. ' n' → logprob: -13.753195762634277

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004019521293230355
    2. ' ' → logprob: -7.875401973724365
    3. '+' → logprob: -11.000401496887207
    4. '2' → logprob: -13.875401496887207
    5. '11' → logprob: -13.875401496887207
    6. 'n' → logprob: -14.000401496887207
    7. ' +' → logprob: -14.125401496887207
    8. '   ' → logprob: -14.500401496887207
    9. ')' → logprob: -15.375401496887207
    10. '```' → logprob: -15.500401496887207

Token 162: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1314980536699295
    2. '):
' → logprob: -2.381498098373413
    3. ')' → logprob: -3.506498098373413
    4. ':' → logprob: -7.381497859954834
    5. ':
' → logprob: -9.381498336791992
    6. '):
' → logprob: -10.131498336791992
    7. ')：' → logprob: -11.256498336791992
    8. ')**' → logprob: -11.506498336791992
    9. ')
' → logprob: -11.881498336791992
    10. 'print' → logprob: -11.881498336791992

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025709902867674828
    2. 'print' → logprob: -3.775709867477417
    3. ' print' → logprob: -6.025710105895996
    4. '	print' → logprob: -10.775710105895996
    5. '    
' → logprob: -11.775710105895996
    6. ',' → logprob: -12.650710105895996
    7. '
' → logprob: -12.650710105895996
    8. '       ' → logprob: -13.025710105895996
    9. '```' → logprob: -13.150710105895996
    10. ':' → logprob: -13.775710105895996

Token 164: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009139667963609099
    2. ' print' → logprob: -7.000914096832275
    3. '   ' → logprob: -13.125913619995117
    4. '	print' → logprob: -15.625913619995117
    5. '```' → logprob: -16.125913619995117
    6. 'printf' → logprob: -17.125913619995117
    7. '
' → logprob: -17.250913619995117
    8. '(print' → logprob: -17.375913619995117
    9. 'pr' → logprob: -17.625913619995117
    10. 'prit' → logprob: -18.750913619995117

Token 165: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.40684568881988525
    2. '(d' → logprob: -1.1568456888198853
    3. '(f' → logprob: -4.156845569610596
    4. '(' → logprob: -5.906845569610596
    5. 'd' → logprob: -6.656845569610596
    6. 'i' → logprob: -9.531846046447754
    7. 'f' → logprob: -10.531846046447754
    8. '("{}' → logprob: -12.281846046447754
    9. '((' → logprob: -12.906846046447754
    10. '('{}' → logprob: -13.531846046447754

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003817533841356635
    2. ',d' → logprob: -6.128817558288574
    3. ' ,' → logprob: -6.628817558288574
    4. ',f' → logprob: -8.753817558288574
    5. ',end' → logprob: -8.878817558288574
    6. ',int' → logprob: -13.628817558288574
    7. '   ' → logprob: -13.753817558288574
    8. ')' → logprob: -13.753817558288574
    9. '，' → logprob: -13.878817558288574
    10. 'd' → logprob: -14.128817558288574

Token 167: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14271628856658936
    2. ' d' → logprob: -2.017716407775879
    3. ' ' → logprob: -11.267716407775879
    4. ''' → logprob: -11.392716407775879
    5. ' ,' → logprob: -12.517716407775879
    6. '"' → logprob: -12.517716407775879
    7. ',' → logprob: -13.267716407775879
    8. '   ' → logprob: -13.392716407775879
    9. ' '' → logprob: -13.392716407775879
    10. '    ' → logprob: -13.642716407775879

Token 168: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001307142956648022
    2. '[' → logprob: -9.000130653381348
    3. '```' → logprob: -12.750130653381348
    4. '[
' → logprob: -13.375130653381348
    5. ',' → logprob: -13.875130653381348
    6. '[f' → logprob: -14.500130653381348
    7. ',i' → logprob: -15.625130653381348
    8. 'i' → logprob: -16.125131607055664
    9. '\[' → logprob: -16.250131607055664
    10. '[end' → logprob: -16.375131607055664

Token 169: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002735805232077837
    2. ' ,' → logprob: -6.252735614776611
    3. ',f' → logprob: -7.127735614776611
    4. ',end' → logprob: -12.75273609161377
    5. ',d' → logprob: -14.62773609161377
    6. ' f' → logprob: -15.62773609161377
    7. ',
' → logprob: -15.87773609161377
    8. ')' → logprob: -15.87773609161377
    9. ',n' → logprob: -16.377735137939453
    10. ' ' → logprob: -16.377735137939453

Token 170: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.038043100386857986
    2. ' f' → logprob: -3.2880430221557617
    3. '   ' → logprob: -14.663043022155762
    4. ' ' → logprob: -14.663043022155762
    5. '    ' → logprob: -15.663043022155762
    6. '  ' → logprob: -16.038043975830078
    7. ')' → logprob: -16.163043975830078
    8. ',f' → logprob: -16.288043975830078
    9. '	f' → logprob: -16.288043975830078
    10. ',' → logprob: -16.913043975830078

Token 171: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.375004768371582
    3. ']' → logprob: -15.375004768371582
    4. '[
' → logprob: -17.625003814697266
    5. '```' → logprob: -17.750003814697266
    6. ')' → logprob: -18.125003814697266
    7. 'i' → logprob: -18.500003814697266
    8. '[I' → logprob: -20.750003814697266
    9. '(i' → logprob: -20.875003814697266
    10. ' i' → logprob: -21.125003814697266

Token 172: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -15.000000953674316
    3. '))' → logprob: -15.250000953674316
    4. ')`' → logprob: -16.5
    5. ')
' → logprob: -17.125
    6. ',' → logprob: -18.0
    7. '),' → logprob: -18.75
    8. ')}' → logprob: -18.875
    9. ')")' → logprob: -18.875
    10. '}' → logprob: -19.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 170
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 80
Tokens correctement prédits (top 10): 143
Précision stricte (1ère position): 43.53%
Précision adaptée (1ère position): 47.06%
Précision (top 10): 84.12%
================================================================================
