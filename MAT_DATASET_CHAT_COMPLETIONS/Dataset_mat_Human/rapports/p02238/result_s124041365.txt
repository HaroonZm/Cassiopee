================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# input
n = int(input())
A = [[0 for i in range(n)] for j in range(n)]

for i in range(n):
    u, k, *v_list = list(map(int, input().split()))
    for v in v_list:
        A[u-1][v-1] = 1

# init
d = [0] * n
f = [0] * n
t = 0

# recursive
def dfs(u):
    global t
    t += 1
    d[u] = t
    for v in range(n):
        if A[u][v] == 1 and d[v] == 0:
            dfs(v)
    t += 1
    f[u] = t

# dfs
for i in range(n):
    if d[i] == 0:
        dfs(i)

# output
for i in range(n):
    print(i+1, d[i], f[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3559824526309967
    2. ':' → logprob: -2.105982542037964
    3. '_' → logprob: -2.605982542037964
    4. ' =' → logprob: -2.855982542037964
    5. '.' → logprob: -4.480982303619385
    6. '(' → logprob: -4.855982303619385
    7. '[' → logprob: -5.105982303619385
    8. '#' → logprob: -5.230982303619385
    9. ',' → logprob: -5.730982303619385
    10. '```' → logprob: -6.105982303619385

Token 4: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5044875144958496
    2. '=' → logprob: -1.8794875144958496
    3. ',' → logprob: -2.2544875144958496
    4. ' ' → logprob: -2.5044875144958496
    5. '.' → logprob: -3.5044875144958496
    6. '+' → logprob: -4.62948751449585
    7. '_' → logprob: -4.75448751449585
    8. ')' → logprob: -5.87948751449585
    9. '-' → logprob: -6.87948751449585
    10. ':' → logprob: -7.00448751449585

Token 5: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3467455804347992
    2. ' ' → logprob: -1.3467456102371216
    3. 'int' → logprob: -3.721745491027832
    4. ' input' → logprob: -5.721745491027832
    5. '10' → logprob: -5.721745491027832
    6. '5' → logprob: -6.971745491027832
    7. 'input' → logprob: -7.221745491027832
    8. '32' → logprob: -8.596745491027832
    9. '=int' → logprob: -9.221745491027832
    10. '20' → logprob: -9.471745491027832

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00470744539052248
    2. '(input' → logprob: -5.379707336425781
    3. 'input' → logprob: -10.879707336425781
    4. '()' → logprob: -11.004707336425781
    5. '(n' → logprob: -11.004707336425781
    6. ' (' → logprob: -11.129707336425781
    7. '(
' → logprob: -11.879707336425781
    8. ')' → logprob: -12.629707336425781
    9. '('' → logprob: -12.879707336425781
    10. '```' → logprob: -13.504707336425781

Token 7: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018961340188980103
    2. '(' → logprob: -4.518961429595947
    3. '())' → logprob: -5.143961429595947
    4. '()' → logprob: -6.393961429595947
    5. '))' → logprob: -8.768960952758789
    6. '')' → logprob: -9.893960952758789
    7. '('' → logprob: -10.143960952758789
    8. '")' → logprob: -10.268960952758789
    9. '`)' → logprob: -10.643960952758789
    10. '(
' → logprob: -11.018960952758789

Token 8: 'A' (ID: 32)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4840006828308105
    2. 's' → logprob: -1.6090006828308105
    3. 'a' → logprob: -2.2340006828308105
    4. 'if' → logprob: -2.3590006828308105
    5. ' ' → logprob: -2.4840006828308105
    6. '#' → logprob: -2.8590006828308105
    7. 'for' → logprob: -3.2340006828308105
    8. 'x' → logprob: -3.3590006828308105
    9. 'f' → logprob: -3.7340006828308105
    10. ')' → logprob: -3.7340006828308105

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.025129390880465508
    2. '.' → logprob: -4.525129318237305
    3. ' =' → logprob: -4.650129318237305
    4. '=' → logprob: -6.275129318237305
    5. '_' → logprob: -7.150129318237305
    6. '[:]' → logprob: -7.650129318237305
    7. '[]' → logprob: -8.275129318237305
    8. ' ' → logprob: -8.650129318237305
    9. '[i' → logprob: -8.900129318237305
    10. ')' → logprob: -9.150129318237305

Token 10: ' [[' (ID: 9237)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.3011772632598877
    2. ' list' → logprob: -1.4261772632598877
    3. 'list' → logprob: -1.5511772632598877
    4. '[]' → logprob: -1.6761772632598877
    5. ' [' → logprob: -2.6761772632598877
    6. '[' → logprob: -4.551177024841309
    7. '[list' → logprob: -5.301177024841309
    8. '[input' → logprob: -5.801177024841309
    9. '[int' → logprob: -7.301177024841309
    10. '[n' → logprob: -8.301177024841309

Token 11: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048907432705163956
    2. 'int' → logprob: -3.048907518386841
    3. ']' → logprob: -8.798907279968262
    4. ' int' → logprob: -9.423907279968262
    5. ' ' → logprob: -10.798907279968262
    6. ']int' → logprob: -11.048907279968262
    7. 'input' → logprob: -11.173907279968262
    8. 'False' → logprob: -11.798907279968262
    9. '(int' → logprob: -12.048907279968262
    10. ')' → logprob: -12.048907279968262

Token 12: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32297974824905396
    2. ']' → logprob: -1.5729796886444092
    3. ']*' → logprob: -3.197979688644409
    4. 'for' → logprob: -3.822979688644409
    5. ' ' → logprob: -5.822979927062988
    6. ' ]' → logprob: -6.072979927062988
    7. ',' → logprob: -8.197979927062988
    8. ')' → logprob: -8.947979927062988
    9. ']*(' → logprob: -8.947979927062988
    10. '	for' → logprob: -10.197979927062988

Token 13: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.297824501991272
    2. ' _' → logprob: -1.547824501991272
    3. '_' → logprob: -3.2978243827819824
    4. ' range' → logprob: -5.797824382781982
    5. ' ' → logprob: -6.172824382781982
    6. ' i' → logprob: -6.547824382781982
    7. 'j' → logprob: -7.547824382781982
    8. ' in' → logprob: -7.672824382781982
    9. 'range' → logprob: -8.54782485961914
    10. '_j' → logprob: -9.17282485961914

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028353037778288126
    2. 'in' → logprob: -5.877835273742676
    3. ' ' → logprob: -10.502835273742676
    4. '	in' → logprob: -13.752835273742676
    5. ')' → logprob: -14.127835273742676
    6. ' )' → logprob: -15.627835273742676
    7. 'range' → logprob: -15.752835273742676
    8. '<|end|>' → logprob: -16.002836227416992
    9. '```' → logprob: -16.127836227416992
    10. '_in' → logprob: -16.252836227416992

Token 15: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020720958709717
    2. 'range' → logprob: -2.3502073287963867
    3. '	range' → logprob: -14.850207328796387
    4. ' ' → logprob: -16.97520637512207
    5. ' xrange' → logprob: -17.22520637512207
    6. '(range' → logprob: -17.72520637512207
    7. '_range' → logprob: -17.72520637512207
    8. ')' → logprob: -18.60020637512207
    9. ' ran' → logprob: -18.72520637512207
    10. ' rang' → logprob: -19.10020637512207

Token 16: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004683834034949541
    2. '(' → logprob: -5.379683971405029
    3. ' (' → logprob: -9.879683494567871
    4. ' n' → logprob: -11.879683494567871
    5. 'n' → logprob: -13.004683494567871
    6. ' ' → logprob: -14.004683494567871
    7. ')' → logprob: -14.254683494567871
    8. ')n' → logprob: -14.379683494567871
    9. '(

' → logprob: -15.004683494567871
    10. '(
' → logprob: -15.254683494567871

Token 17: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00012190054985694587
    2. ')' → logprob: -9.2501220703125
    3. ' )' → logprob: -11.0001220703125
    4. ']' → logprob: -12.3751220703125
    5. ')])' → logprob: -14.0001220703125
    6. '])]' → logprob: -14.2501220703125
    7. '+' → logprob: -14.6251220703125
    8. ' ]' → logprob: -14.8751220703125
    9. ')}' → logprob: -14.8751220703125
    10. ' ' → logprob: -15.0001220703125

Token 18: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007007336709648371
    2. ' ]' → logprob: -5.007007122039795
    3. ' for' → logprob: -9.132007598876953
    4. 'for' → logprob: -9.132007598876953
    5. ')]' → logprob: -9.882007598876953
    6. ')' → logprob: -12.007007598876953
    7. ']]' → logprob: -12.132007598876953
    8. '],' → logprob: -12.632007598876953
    9. '])' → logprob: -13.257007598876953
    10. '()]' → logprob: -13.507007598876953

Token 19: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011065744794905186
    2. 'range' → logprob: -4.51106595993042
    3. '(range' → logprob: -11.761065483093262
    4. ' j' → logprob: -11.886065483093262
    5. ' ' → logprob: -13.386065483093262
    6. ' in' → logprob: -14.011065483093262
    7. 'j' → logprob: -15.011065483093262
    8. '_' → logprob: -15.386065483093262
    9. ' xrange' → logprob: -15.761065483093262
    10. '	range' → logprob: -16.011066436767578

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007619637995958328
    2. 'in' → logprob: -4.882619857788086
    3. '(' → logprob: -12.257619857788086
    4. 'range' → logprob: -13.257619857788086
    5. '(n' → logprob: -13.257619857788086
    6. '(range' → logprob: -13.257619857788086
    7. ' ' → logprob: -13.882619857788086
    8. ' range' → logprob: -14.007619857788086
    9. ' (' → logprob: -14.632619857788086
    10. '(in' → logprob: -15.132619857788086

Token 21: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759429931640625
    2. 'range' → logprob: -0.8259429931640625
    3. '(range' → logprob: -12.575942993164062
    4. 'n' → logprob: -16.825942993164062
    5. '	range' → logprob: -17.575942993164062
    6. '(n' → logprob: -18.325942993164062
    7. ' ' → logprob: -18.700942993164062
    8. '(' → logprob: -18.950942993164062
    9. 'in' → logprob: -19.700942993164062
    10. ' in' → logprob: -19.700942993164062

Token 22: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00024275471514556557
    2. '(' → logprob: -8.375243186950684
    3. '(range' → logprob: -12.000243186950684
    4. 'n' → logprob: -12.250243186950684
    5. ' (' → logprob: -14.500243186950684
    6. ' range' → logprob: -14.875243186950684
    7. 'range' → logprob: -15.250243186950684
    8. ' n' → logprob: -16.750242233276367
    9. 'Range' → logprob: -19.875242233276367
    10. '(
' → logprob: -19.875242233276367

Token 23: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.494741632603109e-05
    2. ')' → logprob: -10.12508487701416
    3. ']' → logprob: -11.12508487701416
    4. ')])' → logprob: -11.12508487701416
    5. '])]' → logprob: -11.37508487701416
    6. ' )' → logprob: -13.75008487701416
    7. '')]' → logprob: -13.87508487701416
    8. '])' → logprob: -14.87508487701416
    9. ')]
' → logprob: -15.00008487701416
    10. ')],' → logprob: -15.12508487701416

Token 24: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00022952310973778367
    2. ' for' → logprob: -9.000229835510254
    3. 'f' → logprob: -9.750229835510254
    4. 'r' → logprob: -11.625229835510254
    5. '```' → logprob: -12.000229835510254
    6. 'n' → logprob: -12.125229835510254
    7. 'i' → logprob: -12.125229835510254
    8. '#' → logprob: -12.250229835510254
    9. 'x' → logprob: -12.875229835510254
    10. 'a' → logprob: -12.875229835510254

Token 25: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.003289655316621065
    2. ' ' → logprob: -5.878289699554443
    3. ' j' → logprob: -8.253289222717285
    4. 'i' → logprob: -8.503289222717285
    5. ' _' → logprob: -11.503289222717285
    6. ' ‌' → logprob: -12.753289222717285
    7. '_' → logprob: -12.878289222717285
    8. ' row' → logprob: -13.503289222717285
    9. ' ' → logprob: -13.878289222717285
    10. '  ' → logprob: -14.003289222717285

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020682958886027336
    2. 'in' → logprob: -3.8956830501556396
    3. ' ' → logprob: -9.020683288574219
    4. '	in' → logprob: -12.270683288574219
    5. '  ' → logprob: -12.395683288574219
    6. '<|end|>' → logprob: -12.645683288574219
    7. ' i' → logprob: -13.645683288574219
    8. 'n' → logprob: -13.770683288574219
    9. ')' → logprob: -13.895683288574219
    10. '_' → logprob: -14.270683288574219

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00861528143286705
    2. 'range' → logprob: -4.758615493774414
    3. ' ' → logprob: -15.008615493774414
    4. '	range' → logprob: -15.383615493774414
    5. '(range' → logprob: -17.133615493774414
    6. ' xrange' → logprob: -17.258615493774414
    7. 'n' → logprob: -18.133615493774414
    8. '_range' → logprob: -18.258615493774414
    9. ')' → logprob: -18.883615493774414
    10. ' rango' → logprob: -18.883615493774414

Token 28: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16123919188976288
    2. '(' → logprob: -1.9112391471862793
    3. ' (' → logprob: -6.911239147186279
    4. ' n' → logprob: -11.536239624023438
    5. ' ' → logprob: -12.661239624023438
    6. '(range' → logprob: -12.911239624023438
    7. 'n' → logprob: -14.036239624023438
    8. '(s' → logprob: -14.411239624023438
    9. ' range' → logprob: -15.036239624023438
    10. '(
' → logprob: -15.161239624023438

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014039215166121721
    2. ')' → logprob: -6.75140380859375
    3. '):
' → logprob: -9.12640380859375
    4. '+' → logprob: -9.25140380859375
    5. ' ):' → logprob: -11.37640380859375
    6. ':' → logprob: -11.62640380859375
    7. ']:' → logprob: -13.25140380859375
    8. ' ' → logprob: -14.00140380859375
    9. '<|end|>' → logprob: -14.25140380859375
    10. ')]' → logprob: -14.37640380859375

Token 30: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.434170126914978
    2. '   ' → logprob: -1.684170126914978
    3. '    ' → logprob: -2.0591702461242676
    4. ' ' → logprob: -3.4341702461242676
    5. 'for' → logprob: -5.934170246124268
    6. '<|end|>' → logprob: -6.059170246124268
    7. '	for' → logprob: -7.934170246124268
    8. '     
' → logprob: -8.55916976928711
    9. ' A' → logprob: -8.68416976928711
    10. ' ' → logprob: -9.05916976928711

Token 31: ' u' (ID: 337)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42969784140586853
    2. 'for' → logprob: -1.054697871208191
    3. '   ' → logprob: -6.9296979904174805
    4. '	for' → logprob: -12.17969799041748
    5. ' range' → logprob: -12.17969799041748
    6. '    ' → logprob: -12.30469799041748
    7. ' ' → logprob: -13.67969799041748
    8. 'range' → logprob: -14.42969799041748
    9. '```' → logprob: -14.55469799041748
    10. ' j' → logprob: -15.30469799041748

Token 32: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6469480991363525
    2. 's' → logprob: -1.1469480991363525
    3. 'se' → logprob: -2.0219480991363525
    4. 'n' → logprob: -5.021947860717773
    5. 'sers' → logprob: -5.771947860717773
    6. ' =' → logprob: -5.896947860717773
    7. '   ' → logprob: -6.021947860717773
    8. 'ser' → logprob: -6.146947860717773
    9. 'sed' → logprob: -6.146947860717773
    10. 'sing' → logprob: -6.396947860717773

Token 33: ' k' (ID: 372)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.062000297009944916
    2. ' v' → logprob: -2.812000274658203
    3. ' ' → logprob: -11.187000274658203
    4. 'd' → logprob: -12.687000274658203
    5. '	v' → logprob: -12.687000274658203
    6. 'w' → logprob: -13.062000274658203
    7. 't' → logprob: -13.437000274658203
    8. 'b' → logprob: -13.562000274658203
    9. 'l' → logprob: -13.562000274658203
    10. 'k' → logprob: -13.687000274658203

Token 34: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16102032363414764
    2. '=' → logprob: -1.911020278930664
    3. ',' → logprob: -7.286020278930664
    4. ' ' → logprob: -9.411020278930664
    5. '   ' → logprob: -11.411020278930664
    6. ')' → logprob: -11.661020278930664
    7. '    ' → logprob: -13.161020278930664
    8. ' ,' → logprob: -13.411020278930664
    9. '  ' → logprob: -13.661020278930664
    10. 'u' → logprob: -14.286020278930664

Token 35: ' *' (ID: 425)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3004268705844879
    2. '=' → logprob: -2.675426959991455
    3. '*v' → logprob: -2.800426959991455
    4. '*' → logprob: -3.175426959991455
    5. ' =' → logprob: -3.300426959991455
    6. ' v' → logprob: -4.175426959991455
    7. ' *' → logprob: -4.925426959991455
    8. ' ' → logprob: -4.925426959991455
    9. 'm' → logprob: -5.050426959991455
    10. 'l' → logprob: -6.175426959991455

Token 36: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.013176938518881798
    2. 'b' → logprob: -5.888176918029785
    3. 'l' → logprob: -6.013176918029785
    4. 'a' → logprob: -6.388176918029785
    5. 'friends' → logprob: -6.513176918029785
    6. 'd' → logprob: -7.138176918029785
    7. 'arr' → logprob: -7.263176918029785
    8. 'neighbors' → logprob: -7.388176918029785
    9. 'lst' → logprob: -7.388176918029785
    10. ' v' → logprob: -8.138176918029785

Token 37: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5670452117919922
    2. ' =' → logprob: -0.9420452117919922
    3. 's' → logprob: -3.817045211791992
    4. 'al' → logprob: -3.942045211791992
    5. 'als' → logprob: -7.067045211791992
    6. 'alist' → logprob: -8.442045211791992
    7. 'alue' → logprob: -8.692045211791992
    8. '=[]' → logprob: -10.317045211791992
    9. '_list' → logprob: -10.567045211791992
    10. ' ' → logprob: -10.567045211791992

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17975518107414246
    2. ' =' → logprob: -1.8047552108764648
    3. ',' → logprob: -12.429755210876465
    4. ' ' → logprob: -12.679755210876465
    5. '   ' → logprob: -13.304755210876465
    6. 's' → logprob: -14.929755210876465
    7. '  ' → logprob: -15.179755210876465
    8. ')' → logprob: -15.179755210876465
    9. '=line' → logprob: -15.554755210876465
    10. '=input' → logprob: -15.929755210876465

Token 39: ' list' (ID: 1562)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.006823355332016945
    2. ' map' → logprob: -5.006823539733887
    3. 'list' → logprob: -9.756823539733887
    4. 'input' → logprob: -10.006823539733887
    5. '   ' → logprob: -12.631823539733887
    6. '(map' → logprob: -14.756823539733887
    7. ' list' → logprob: -14.881823539733887
    8. ' ' → logprob: -15.256823539733887
    9. '	map' → logprob: -15.381823539733887
    10. '[' → logprob: -15.381823539733887

Token 40: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.407366916188039e-05
    2. '(' → logprob: -9.875054359436035
    3. '(input' → logprob: -13.125054359436035
    4. '(int' → logprob: -15.125054359436035
    5. 'map' → logprob: -16.25005340576172
    6. ' map' → logprob: -16.87505340576172
    7. ' (' → logprob: -17.87505340576172
    8. '(filter' → logprob: -18.00005340576172
    9. '()' → logprob: -18.12505340576172
    10. '	map' → logprob: -18.12505340576172

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00012833021173719317
    2. '(' → logprob: -9.375128746032715
    3. 'int' → logprob: -10.375128746032715
    4. '<int' → logprob: -12.125128746032715
    5. '[int' → logprob: -12.375128746032715
    6. '(str' → logprob: -14.375128746032715
    7. ' int' → logprob: -14.375128746032715
    8. '=int' → logprob: -15.000128746032715
    9. ',int' → logprob: -15.000128746032715
    10. '(input' → logprob: -15.250128746032715

Token 42: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.13964968919754028
    2. '(input' → logprob: -2.1396496295928955
    3. ',' → logprob: -4.514649868011475
    4. 'input' → logprob: -6.639649868011475
    5. '(' → logprob: -8.264649391174316
    6. ')' → logprob: -10.264649391174316
    7. ',int' → logprob: -10.764649391174316
    8. ' input' → logprob: -10.889649391174316
    9. ' ,' → logprob: -11.014649391174316
    10. '```' → logprob: -11.889649391174316

Token 43: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018207067623734474
    2. ' input' → logprob: -4.01820707321167
    3. '(input' → logprob: -10.518206596374512
    4. ',input' → logprob: -10.768206596374512
    5. ')' → logprob: -12.643206596374512
    6. '   ' → logprob: -12.893206596374512
    7. '=input' → logprob: -13.893206596374512
    8. '	input' → logprob: -14.268206596374512
    9. '[input' → logprob: -14.518206596374512
    10. ' ' → logprob: -14.893206596374512

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00012082771718269214
    2. '))' → logprob: -9.375121116638184
    3. ')' → logprob: -10.875121116638184
    4. '()' → logprob: -12.125121116638184
    5. '()))' → logprob: -12.375121116638184
    6. '.' → logprob: -13.375121116638184
    7. '.split' → logprob: -13.750121116638184
    8. '(' → logprob: -13.875121116638184
    9. ' .' → logprob: -14.125121116638184
    10. ' ().' → logprob: -14.250121116638184

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003049570368602872
    2. 'strip' → logprob: -8.12530517578125
    3. 'rstrip' → logprob: -12.37530517578125
    4. ' split' → logprob: -13.12530517578125
    5. '(split' → logprob: -13.12530517578125
    6. 'spl' → logprob: -15.37530517578125
    7. 's' → logprob: -15.62530517578125
    8. '().' → logprob: -15.87530517578125
    9. ')' → logprob: -16.50030517578125
    10. 'sp' → logprob: -17.12530517578125

Token 46: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0350566990673542
    2. '())' → logprob: -3.9100565910339355
    3. '))' → logprob: -4.5350565910339355
    4. '()' → logprob: -5.9100565910339355
    5. ')' → logprob: -7.5350565910339355
    6. '(' → logprob: -8.160057067871094
    7. '()))
' → logprob: -9.035057067871094
    8. '()));' → logprob: -11.160057067871094
    9. '())))' → logprob: -12.785057067871094
    10. '()))
' → logprob: -12.910057067871094

Token 47: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.19825458526611328
    2. ' for' → logprob: -2.0732545852661133
    3. '   ' → logprob: -3.0732545852661133
    4. '<|end|>' → logprob: -5.198254585266113
    5. '	for' → logprob: -7.198254585266113
    6. ' ' → logprob: -7.823254585266113
    7. 'v' → logprob: -7.948254585266113
    8. 'A' → logprob: -8.073254585266113
    9. '<|end|>' → logprob: -9.573254585266113
    10. '  ' → logprob: -9.698254585266113

Token 49: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.04112642630934715
    2. 'v' → logprob: -3.2911264896392822
    3. ' j' → logprob: -6.791126251220703
    4. ' _' → logprob: -7.041126251220703
    5. ' u' → logprob: -7.791126251220703
    6. '_' → logprob: -8.666126251220703
    7. 'j' → logprob: -8.916126251220703
    8. ' ' → logprob: -9.041126251220703
    9. ' x' → logprob: -10.166126251220703
    10. 'u' → logprob: -10.291126251220703

Token 50: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0742236003279686
    2. ' in' → logprob: -3.199223518371582
    3. '_list' → logprob: -3.824223518371582
    4. 'in' → logprob: -5.074223518371582
    5. '_in' → logprob: -6.824223518371582
    6. ' _' → logprob: -7.699223518371582
    7. '_i' → logprob: -7.949223518371582
    8. '_index' → logprob: -8.074223518371582
    9. ' ' → logprob: -9.074223518371582
    10. '   ' → logprob: -9.199223518371582

Token 51: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.023245826363563538
    2. ' v' → logprob: -3.7732458114624023
    3. '	v' → logprob: -15.398245811462402
    4. '(v' → logprob: -17.27324676513672
    5. '_v' → logprob: -18.14824676513672
    6. ' ' → logprob: -18.14824676513672
    7. 'range' → logprob: -19.02324676513672
    8. ',v' → logprob: -19.52324676513672
    9. '   ' → logprob: -19.77324676513672
    10. ' range' → logprob: -19.89824676513672

Token 52: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.29340603761375e-05
    2. '_' → logprob: -9.375092506408691
    3. 's' → logprob: -12.625092506408691
    4. '_lst' → logprob: -13.750092506408691
    5. 'List' → logprob: -14.125092506408691
    6. '_lists' → logprob: -14.125092506408691
    7. '_l' → logprob: -14.125092506408691
    8. ' _' → logprob: -14.375092506408691
    9. '_li' → logprob: -15.750092506408691
    10. '_LIST' → logprob: -15.750092506408691

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.758300438988954e-05
    2. ' :' → logprob: -9.750097274780273
    3. '[' → logprob: -10.750097274780273
    4. ':
' → logprob: -11.875097274780273
    5. '):' → logprob: -11.875097274780273
    6. '   ' → logprob: -13.500097274780273
    7. '[:' → logprob: -14.125097274780273
    8. '[:-' → logprob: -15.125097274780273
    9. ':**' → logprob: -15.250097274780273
    10. '():' → logprob: -15.500097274780273

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012398389168083668
    2. '   ' → logprob: -4.8873982429504395
    3. 'A' → logprob: -6.2623982429504395
    4. ' A' → logprob: -6.6373982429504395
    5. '    ' → logprob: -6.7623982429504395
    6. '        ' → logprob: -9.262398719787598
    7. ' ' → logprob: -9.512398719787598
    8. '<|end|>' → logprob: -10.012398719787598
    9. '        
' → logprob: -10.137398719787598
    10. '      ' → logprob: -10.387398719787598

Token 55: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.005925362464040518
    2. ' A' → logprob: -5.505925178527832
    3. '   ' → logprob: -6.505925178527832
    4. '       ' → logprob: -8.005925178527832
    5. '           ' → logprob: -12.255925178527832
    6. '	A' → logprob: -12.505925178527832
    7. '    ' → logprob: -12.880925178527832
    8. '  ' → logprob: -13.005925178527832
    9. ' ' → logprob: -14.005925178527832
    10. '>A' → logprob: -14.630925178527832

Token 56: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.011090735904872417
    2. '[i' → logprob: -4.5110907554626465
    3. '[' → logprob: -10.136090278625488
    4. '[A' → logprob: -13.511090278625488
    5. '[v' → logprob: -14.011090278625488
    6. '[I' → logprob: -15.386090278625488
    7. '[n' → logprob: -15.636090278625488
    8. '[a' → logprob: -15.761090278625488
    9. ' [' → logprob: -15.761090278625488
    10. 'u' → logprob: -16.136091232299805

Token 57: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.030003171414136887
    2. '[' → logprob: -4.530003070831299
    3. '][' → logprob: -4.905003070831299
    4. ' -' → logprob: -5.030003070831299
    5. '[v' → logprob: -5.530003070831299
    6. '[u' → logprob: -7.155003070831299
    7. ' ][' → logprob: -10.905003547668457
    8. '[-' → logprob: -11.530003547668457
    9. '1' → logprob: -11.530003547668457
    10. '   ' → logprob: -12.030003547668457

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.727905979962088e-05
    2. '2' → logprob: -10.62504768371582
    3. ' ' → logprob: -10.75004768371582
    4. '11' → logprob: -15.37504768371582
    5. '0' → logprob: -15.43754768371582
    6. '-' → logprob: -15.68754768371582
    7. '```' → logprob: -15.81254768371582
    8. '<|end|>' → logprob: -16.00004768371582
    9. '１' → logprob: -16.06254768371582
    10. '۱' → logprob: -16.56254768371582

Token 59: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002373035065829754
    2. '-' → logprob: -6.877373218536377
    3. '[' → logprob: -7.127373218536377
    4. '[v' → logprob: -7.877373218536377
    5. ']' → logprob: -9.502372741699219
    6. ' ][' → logprob: -10.127372741699219
    7. '[u' → logprob: -10.627372741699219
    8. ']][' → logprob: -12.377372741699219
    9. ')][' → logprob: -12.502372741699219
    10. '"][' → logprob: -12.752372741699219

Token 60: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.2200749754119897e-06
    2. ' v' → logprob: -13.750001907348633
    3. '(v' → logprob: -14.125001907348633
    4. '-' → logprob: -16.125001907348633
    5. '[v' → logprob: -16.500001907348633
    6. '	v' → logprob: -16.875001907348633
    7. 'u' → logprob: -17.500001907348633
    8. 'vi' → logprob: -18.250001907348633
    9. '0' → logprob: -18.375001907348633
    10. ')v' → logprob: -18.375001907348633

Token 61: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012403888104017824
    2. ' -' → logprob: -9.125123977661133
    3. '[' → logprob: -11.500123977661133
    4. '1' → logprob: -13.750123977661133
    5. '<|end|>' → logprob: -13.875123977661133
    6. 's' → logprob: -14.875123977661133
    7. ']-' → logprob: -14.875123977661133
    8. '0' → logprob: -14.875123977661133
    9. '()-' → logprob: -15.000123977661133
    10. '-user' → logprob: -15.125123977661133

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. '2' → logprob: -12.37501049041748
    3. ' ' → logprob: -12.62501049041748
    4. ']' → logprob: -13.25001049041748
    5. '```' → logprob: -15.00001049041748
    6. '１' → logprob: -15.62501049041748
    7. '-' → logprob: -15.68751049041748
    8. '0' → logprob: -16.062511444091797
    9. '   ' → logprob: -16.062511444091797
    10. '11' → logprob: -16.687511444091797

Token 63: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024125154595822096
    2. ' ]' → logprob: -6.37741231918335
    3. ']=' → logprob: -8.002412796020508
    4. '=' → logprob: -8.002412796020508
    5. ' =' → logprob: -10.127412796020508
    6. ')' → logprob: -15.627412796020508
    7. '1' → logprob: -15.877412796020508
    8. '`]' → logprob: -15.877412796020508
    9. ']+=' → logprob: -16.127412796020508
    10. '[' → logprob: -16.377412796020508

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326326727867126
    2. '=' → logprob: -1.3132632970809937
    3. ' ' → logprob: -13.813262939453125
    4. '1' → logprob: -16.438262939453125
    5. '=True' → logprob: -16.938262939453125
    6. ' =
' → logprob: -16.938262939453125
    7. '<|end|>' → logprob: -16.938262939453125
    8. '＝' → logprob: -17.063262939453125
    9. ' =)' → logprob: -17.063262939453125
    10. ' +=' → logprob: -17.438262939453125

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023095356300473213
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.75023078918457
    4. '  ' → logprob: -16.25023078918457
    5. '' → logprob: -16.87523078918457
    6. ' ' → logprob: -17.43773078918457
    7. '１' → logprob: -17.81273078918457
    8. 'True' → logprob: -17.93773078918457
    9. '    ' → logprob: -18.37523078918457
    10. ' True' → logprob: -18.62523078918457

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.125009536743164
    4. '  ' → logprob: -16.625009536743164
    5. '' → logprob: -17.500009536743164
    6. '１' → logprob: -18.125009536743164
    7. '`' → logprob: -18.687509536743164
    8. '    ' → logprob: -18.812509536743164
    9. ' ' → logprob: -19.062509536743164
    10. 'True' → logprob: -19.062509536743164

Token 67: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.18840713798999786
    2. '<|end|>' → logprob: -1.9384071826934814
    3. 'print' → logprob: -4.438406944274902
    4. 'for' → logprob: -4.938406944274902
    5. '
' → logprob: -5.938406944274902
    6. '```' → logprob: -6.188406944274902
    7. '<|end|>' → logprob: -7.188406944274902
    8. '#' → logprob: -7.188406944274902
    9. '\' → logprob: -7.438406944274902
    10. ' for' → logprob: -7.563406944274902

Token 68: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036890320479869843
    2. 'print' → logprob: -5.628688812255859
    3. ' for' → logprob: -9.50368881225586
    4. '#' → logprob: -12.25368881225586
    5. '\n' → logprob: -12.50368881225586
    6. '```' → logprob: -12.50368881225586
    7. ')' → logprob: -14.75368881225586
    8. '\' → logprob: -15.00368881225586
    9. 'n' → logprob: -15.37868881225586
    10. 'f' → logprob: -15.50368881225586

Token 69: ' init' (ID: 6327)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14031949639320374
    2. '\n' → logprob: -2.640319585800171
    3. 'print' → logprob: -3.640319585800171
    4. ' for' → logprob: -4.265319347381592
    5. '#' → logprob: -5.015319347381592
    6. ')' → logprob: -5.640319347381592
    7. 'n' → logprob: -6.140319347381592
    8. ' ' → logprob: -6.265319347381592
    9. '\' → logprob: -6.765319347381592
    10. '<|end|>' → logprob: -7.015319347381592

Token 70: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5602253675460815
    2. 'd' → logprob: -1.0602253675460815
    3. 'distance' → logprob: -3.310225486755371
    4. 'dp' → logprob: -3.560225486755371
    5. 'D' → logprob: -4.935225486755371
    6. 'for' → logprob: -5.935225486755371
    7. 'visited' → logprob: -6.310225486755371
    8. '```' → logprob: -6.685225486755371
    9. 'ans' → logprob: -6.810225486755371
    10. 'import' → logprob: -7.685225486755371

Token 71: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2360602170228958
    2. 'dist' → logprob: -2.23606014251709
    3. 'D' → logprob: -2.48606014251709
    4. 'distance' → logprob: -5.11106014251709
    5. 'color' → logprob: -5.36106014251709
    6. '```' → logprob: -5.48606014251709
    7. 'dp' → logprob: -6.36106014251709
    8. 'B' → logprob: -7.73606014251709
    9. 'visited' → logprob: -7.73606014251709
    10. 'colors' → logprob: -8.11106014251709

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9494728446006775
    2. 'ist' → logprob: -1.0744729042053223
    3. 'istance' → logprob: -1.6994729042053223
    4. 'is' → logprob: -2.6994729042053223
    5. '=' → logprob: -4.574472904205322
    6. '=[]' → logprob: -5.074472904205322
    7. 'ists' → logprob: -6.574472904205322
    8. '=[' → logprob: -6.699472904205322
    9. '=[]
' → logprob: -8.199472427368164
    10. 'i' → logprob: -8.324472427368164

Token 73: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48309963941574097
    2. ' [' → logprob: -1.6080996990203857
    3. '[n' → logprob: -1.8580996990203857
    4. '[-' → logprob: -4.608099460601807
    5. '[A' → logprob: -5.358099460601807
    6. ' [-' → logprob: -6.108099460601807
    7. '[i' → logprob: -6.108099460601807
    8. '[[' → logprob: -6.108099460601807
    9. '[int' → logprob: -6.858099460601807
    10. '[u' → logprob: -6.983099460601807

Token 74: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15313716232776642
    2. '0' → logprob: -2.02813720703125
    3. 'float' → logprob: -4.90313720703125
    4. '10' → logprob: -7.40313720703125
    5. '100' → logprob: -7.65313720703125
    6. 'False' → logprob: -8.02813720703125
    7. ' -' → logprob: -8.02813720703125
    8. ' ' → logprob: -8.27813720703125
    9. '[n' → logprob: -8.77813720703125
    10. '-n' → logprob: -8.90313720703125

Token 75: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29403167963027954
    2. ']*' → logprob: -1.5440316200256348
    3. ']*(' → logprob: -3.5440316200256348
    4. 'for' → logprob: -5.044031620025635
    5. ' for' → logprob: -5.169031620025635
    6. ' ]' → logprob: -8.919032096862793
    7. ']+' → logprob: -9.919032096862793
    8. ']int' → logprob: -12.544032096862793
    9. '	for' → logprob: -13.419032096862793
    10. ',' → logprob: -13.669032096862793

Token 76: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9586876034736633
    2. ' *' → logprob: -1.7086875438690186
    3. 'for' → logprob: -1.8336875438690186
    4. '*' → logprob: -2.3336875438690186
    5. '+' → logprob: -2.7086875438690186
    6. '*n' → logprob: -3.7086875438690186
    7. '0' → logprob: -4.583687782287598
    8. ']*' → logprob: -4.708687782287598
    9. ']*(' → logprob: -4.708687782287598
    10. 'xffffff' → logprob: -5.083687782287598

Token 77: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003538158780429512
    2. '(n' → logprob: -8.250353813171387
    3. '(' → logprob: -9.500353813171387
    4. ' n' → logprob: -11.125353813171387
    5. '   ' → logprob: -14.000353813171387
    6. ' (' → logprob: -14.500353813171387
    7. ' ' → logprob: -15.000353813171387
    8. '	n' → logprob: -15.250353813171387
    9. '```' → logprob: -16.000354766845703
    10. '2' → logprob: -16.000354766845703

Token 78: '
' (ID: 198)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6767852306365967
    2. '<|end|>' → logprob: -1.5517852306365967
    3. 'dist' → logprob: -2.8017852306365967
    4. 't' → logprob: -2.9267852306365967
    5. ' f' → logprob: -2.9267852306365967
    6. ',' → logprob: -3.8017852306365967
    7. 'd' → logprob: -4.301785469055176
    8. 'r' → logprob: -4.926785469055176
    9. 'dis' → logprob: -5.176785469055176
    10. 's' → logprob: -5.176785469055176

Token 79: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0203853826969862
    2. 'color' → logprob: -4.520385265350342
    3. 'c' → logprob: -6.020385265350342
    4. 'from' → logprob: -6.395385265350342
    5. 'p' → logprob: -6.520385265350342
    6. 'for' → logprob: -6.770385265350342
    7. 't' → logprob: -7.520385265350342
    8. '```' → logprob: -7.770385265350342
    9. 'e' → logprob: -8.0203857421875
    10. 'import' → logprob: -8.7703857421875

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27087050676345825
    2. '=' → logprob: -1.6458704471588135
    3. '[' → logprob: -3.2708704471588135
    4. '<|end|>' → logprob: -5.520870685577393
    5. '<|end|>' → logprob: -6.770870685577393
    6. '=[' → logprob: -8.270870208740234
    7. 'inished' → logprob: -8.645870208740234
    8. ']' → logprob: -9.020870208740234
    9. 'inish' → logprob: -9.395870208740234
    10. '[:]' → logprob: -9.520870208740234

Token 81: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011060204356908798
    2. ' [' → logprob: -4.5110602378845215
    3. '[-' → logprob: -12.011059761047363
    4. '[n' → logprob: -12.261059761047363
    5. ' ' → logprob: -14.511059761047363
    6. '0' → logprob: -15.011059761047363
    7. 'n' → logprob: -15.761059761047363
    8. '   ' → logprob: -16.38606071472168
    9. '-' → logprob: -16.88606071472168
    10. ' [-' → logprob: -17.01106071472168

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -12.375009536743164
    3. 'n' → logprob: -13.250009536743164
    4. '[' → logprob: -13.625009536743164
    5. ']' → logprob: -13.875009536743164
    6. ')' → logprob: -14.625009536743164
    7. '```' → logprob: -14.875009536743164
    8. '   ' → logprob: -15.000009536743164
    9. '[n' → logprob: -15.375009536743164
    10. '-' → logprob: -16.000009536743164

Token 83: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004933410091325641
    2. ']*' → logprob: -7.75049352645874
    3. ')' → logprob: -10.625493049621582
    4. '*' → logprob: -10.750493049621582
    5. ' ]' → logprob: -11.250493049621582
    6. ' *' → logprob: -14.250493049621582
    7. ' ' → logprob: -14.250493049621582
    8. '*n' → logprob: -14.500493049621582
    9. '```' → logprob: -14.625493049621582
    10. '}' → logprob: -14.625493049621582

Token 84: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1900540590286255
    2. ' *' → logprob: -1.9400540590286255
    3. '*n' → logprob: -3.690053939819336
    4. 'n' → logprob: -5.815053939819336
    5. ' n' → logprob: -7.065053939819336
    6. ')' → logprob: -8.690053939819336
    7. ']' → logprob: -8.815053939819336
    8. ' ' → logprob: -8.815053939819336
    9. '(n' → logprob: -10.815053939819336
    10. '[' → logprob: -10.815053939819336

Token 85: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.451116051815916e-05
    2. ' n' → logprob: -10.625024795532227
    3. '(n' → logprob: -16.250024795532227
    4. '```' → logprob: -17.000024795532227
    5. '(' → logprob: -17.500024795532227
    6. '	n' → logprob: -18.875024795532227
    7. ' ' → logprob: -19.000024795532227
    8. ' (' → logprob: -19.000024795532227
    9. '   ' → logprob: -19.125024795532227
    10. '``' → logprob: -19.250024795532227

Token 86: '
' (ID: 198)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11705080419778824
    2. 'time' → logprob: -2.242050886154175
    3. 'visited' → logprob: -7.117050647735596
    4. 'color' → logprob: -7.242050647735596
    5. 's' → logprob: -7.367050647735596
    6. 'p' → logprob: -7.367050647735596
    7. 'stack' → logprob: -8.117051124572754
    8. 'e' → logprob: -8.992051124572754
    9. 'm' → logprob: -8.992051124572754
    10. ' time' → logprob: -9.117051124572754

Token 87: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.14358356595039368
    2. 'time' → logprob: -2.0185835361480713
    3. 'color' → logprob: -7.39358377456665
    4. 'visited' → logprob: -8.768583297729492
    5. '
' → logprob: -9.768583297729492
    6. '

' → logprob: -10.768583297729492
    7. 'used' → logprob: -12.018583297729492
    8. '  
' → logprob: -12.143583297729492
    9. 'timestamp' → logprob: -12.268583297729492
    10. ' time' → logprob: -12.268583297729492

Token 88: ' =' (ID: 314)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.026037489995360374
    2. '=' → logprob: -4.151037693023682
    3. 'i' → logprob: -4.776037693023682
    4. ' =' → logprob: -6.526037693023682
    5. 'im' → logprob: -10.526037216186523
    6. 'e' → logprob: -11.526037216186523
    7. '```' → logprob: -12.401037216186523
    8. 'imestamp' → logprob: -12.651037216186523
    9. 'і' → logprob: -13.276037216186523
    10. '[' → logprob: -13.526037216186523

Token 89: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15644681453704834
    2. ' ' → logprob: -2.406446933746338
    3. '1' → logprob: -2.906446933746338
    4. '-' → logprob: -12.15644645690918
    5. ' -' → logprob: -12.53144645690918
    6. '[' → logprob: -12.65644645690918
    7. ' [' → logprob: -12.90644645690918
    8. 'int' → logprob: -14.03144645690918
    9. '  ' → logprob: -14.40644645690918
    10. '<|end|>' → logprob: -15.40644645690918

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016051849350333214
    2. '1' → logprob: -4.141051769256592
    3. '[' → logprob: -11.14105224609375
    4. ' ' → logprob: -13.51605224609375
    5. 'time' → logprob: -14.01605224609375
    6. '-' → logprob: -14.39105224609375
    7. '[]' → logprob: -15.76605224609375
    8. 'int' → logprob: -17.01605224609375
    9. '(' → logprob: -17.14105224609375
    10. '=' → logprob: -17.14105224609375

Token 91: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17229542136192322
    2. '
' → logprob: -2.547295331954956
    3. '<|end|>' → logprob: -3.172295331954956
    4. '```' → logprob: -4.047295570373535
    5. 'visited' → logprob: -4.547295570373535
    6. 'stack' → logprob: -6.047295570373535
    7. '<|end|>' → logprob: -6.297295570373535
    8. 'd' → logprob: -6.797295570373535
    9. 'for' → logprob: -7.547295570373535
    10. 'i' → logprob: -7.672295570373535

Token 92: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6316892504692078
    2. 'stack' → logprob: -1.7566893100738525
    3. 'color' → logprob: -1.8816893100738525
    4. 'visited' → logprob: -2.1316893100738525
    5. 'state' → logprob: -5.006689071655273
    6. '```' → logprob: -5.131689071655273
    7. 'status' → logprob: -5.506689071655273
    8. '
' → logprob: -6.506689071655273
    9. 'd' → logprob: -6.881689071655273
    10. 'u' → logprob: -7.131689071655273

Token 93: ' recursive' (ID: 66711)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5390089154243469
    2. 'stack' → logprob: -0.9140089154243469
    3. 'for' → logprob: -5.289009094238281
    4. ' stack' → logprob: -5.539009094238281
    5. 'color' → logprob: -5.789009094238281
    6. 'visited' → logprob: -6.664009094238281
    7. 'time' → logprob: -7.289009094238281
    8. ' def' → logprob: -7.539009094238281
    9. 'import' → logprob: -7.914009094238281
    10. 'd' → logprob: -8.164009094238281

Token 94: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23183658719062805
    2. ' def' → logprob: -1.6068365573883057
    3. '_' → logprob: -5.981836795806885
    4. ')' → logprob: -6.731836795806885
    5. ' ' → logprob: -6.981836795806885
    6. ' 
' → logprob: -7.481836795806885
    7. '<|end|>' → logprob: -8.106836318969727
    8. '
' → logprob: -8.856836318969727
    9. 'd' → logprob: -9.106836318969727
    10. 'dfs' → logprob: -9.606836318969727

Token 95: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.47495681833243e-05
    2. ' def' → logprob: -11.125024795532227
    3. '```' → logprob: -12.500024795532227
    4. 'd' → logprob: -13.500024795532227
    5. 'dfs' → logprob: -13.500024795532227
    6. ')' → logprob: -14.000024795532227
    7. 'de' → logprob: -14.250024795532227
    8. 'stack' → logprob: -14.375024795532227
    9. 'import' → logprob: -15.125024795532227
    10. 'visited' → logprob: -15.375024795532227

Token 96: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.04861496016383171
    2. ' dfs' → logprob: -3.048614978790283
    3. ' DFS' → logprob: -10.923614501953125
    4. ' ' → logprob: -12.298614501953125
    5. 'visit' → logprob: -13.548614501953125
    6. 'DFS' → logprob: -14.048614501953125
    7. 'd' → logprob: -14.173614501953125
    8. 'df' → logprob: -14.423614501953125
    9. '   ' → logprob: -14.923614501953125
    10. '  ' → logprob: -14.923614501953125

Token 97: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.22698821127414703
    2. '(node' → logprob: -2.2269883155822754
    3. '(' → logprob: -2.4769883155822754
    4. '(v' → logprob: -4.976988315582275
    5. '(i' → logprob: -5.601988315582275
    6. '(n' → logprob: -8.101987838745117
    7. '(x' → logprob: -8.601987838745117
    8. '(vertex' → logprob: -9.601987838745117
    9. '(a' → logprob: -11.351987838745117
    10. '(s' → logprob: -11.351987838745117

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11304878443479538
    2. ',' → logprob: -2.238048791885376
    3. ')' → logprob: -8.863048553466797
    4. ':' → logprob: -9.988048553466797
    5. '):
' → logprob: -11.113048553466797
    6. ' ):' → logprob: -11.238048553466797
    7. ',u' → logprob: -12.863048553466797
    8. ' ,' → logprob: -13.238048553466797
    9. 'u' → logprob: -13.613048553466797
    10. ',n' → logprob: -14.113048553466797

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1671832948923111
    2. ' global' → logprob: -2.0421833992004395
    3. 'global' → logprob: -4.0421833992004395
    4. ' t' → logprob: -5.1671833992004395
    5. '	global' → logprob: -8.417182922363281
    6. 't' → logprob: -8.792182922363281
    7. '```' → logprob: -9.167182922363281
    8. '_global' → logprob: -9.417182922363281
    9. '<|end|>' → logprob: -9.667182922363281
    10. ':' → logprob: -9.792182922363281

Token 100: ' global' (ID: 5466)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' (adapté à ' global') → logprob: -0.08034271001815796
    2. ' global' → logprob: -2.5803427696228027
    3. '   ' → logprob: -6.580342769622803
    4. '	global' → logprob: -9.830342292785645
    5. 't' → logprob: -12.955342292785645
    6. 'non' → logprob: -13.080342292785645
    7. ' t' → logprob: -13.455342292785645
    8. '.global' → logprob: -13.955342292785645
    9. '_global' → logprob: -14.205342292785645
    10. '    ' → logprob: -14.330342292785645

Token 101: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0067154900170862675
    2. ' t' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.881715774536133
    4. '	t' → logprob: -18.131715774536133
    5. ' ' → logprob: -18.256715774536133
    6. '`t' → logprob: -18.381715774536133
    7. ')t' → logprob: -20.256715774536133
    8. '
' → logprob: -20.381715774536133
    9. '<|end|>' → logprob: -20.381715774536133
    10. '    ' → logprob: -20.631715774536133

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044723790138959885
    2. 't' → logprob: -3.1697237491607666
    3. '
' → logprob: -6.919723987579346
    4. ' t' → logprob: -7.794723987579346
    5. '    
' → logprob: -9.044723510742188
    6. '	t' → logprob: -9.794723510742188
    7. ',t' → logprob: -9.919723510742188
    8. ',' → logprob: -10.294723510742188
    9. '\t' → logprob: -10.794723510742188
    10. '```' → logprob: -11.794723510742188

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44158488512039185
    2. 't' → logprob: -1.191584825515747
    3. ' t' → logprob: -2.941584825515747
    4. 'd' → logprob: -8.066584587097168
    5. ' d' → logprob: -9.066584587097168
    6. '	t' → logprob: -10.941584587097168
    7. '```' → logprob: -12.066584587097168
    8. ' ' → logprob: -12.441584587097168
    9. '    
' → logprob: -13.691584587097168
    10. '  ' → logprob: -13.691584587097168

Token 104: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0009407619945704937
    2. 'd' → logprob: -7.125940799713135
    3. '   ' → logprob: -9.250940322875977
    4. ' t' → logprob: -10.125940322875977
    5. ' ' → logprob: -16.750940322875977
    6. '	t' → logprob: -16.875940322875977
    7. ' d' → logprob: -17.000940322875977
    8. '```' → logprob: -17.500940322875977
    9. 'u' → logprob: -17.625940322875977
    10. '  ' → logprob: -18.125940322875977

Token 105: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12704244256019592
    2. ' +=' → logprob: -2.127042531967163
    3. '=' → logprob: -9.127042770385742
    4. ' =' → logprob: -12.377042770385742
    5. '+' → logprob: -14.127042770385742
    6. ']+=' → logprob: -14.627042770385742
    7. ' ' → logprob: -16.252042770385742
    8. '   ' → logprob: -16.502042770385742
    9. '```' → logprob: -17.752042770385742
    10. '+='' → logprob: -17.877042770385742

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '<|end|>' → logprob: -19.500011444091797
    4. '+' → logprob: -19.625011444091797
    5. '１' → logprob: -20.250011444091797
    6. '   ' → logprob: -20.500011444091797
    7. '۱' → logprob: -21.000011444091797
    8. '
' → logprob: -21.437511444091797
    9. '```' → logprob: -21.500011444091797
    10. '  ' → logprob: -21.500011444091797

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '１' → logprob: -19.375
    4. '```' → logprob: -19.6875
    5. '   ' → logprob: -20.375
    6. '+' → logprob: -20.375
    7. '

' → logprob: -20.4375
    8. '
' → logprob: -20.6875
    9. '१' → logprob: -20.875
    10. '0' → logprob: -20.9375

Token 108: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6588861346244812
    2. 'd' → logprob: -0.7838861346244812
    3. ' d' → logprob: -3.658886194229126
    4. '
' → logprob: -9.908885955810547
    5. '<|end|>' → logprob: -10.158885955810547
    6. ',' → logprob: -10.408885955810547
    7. ' ' → logprob: -11.033885955810547
    8. '	d' → logprob: -11.158885955810547
    9. ',d' → logprob: -11.408885955810547
    10. '  ' → logprob: -11.908885955810547

Token 109: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014671922661364079
    2. '   ' → logprob: -4.389671802520752
    3. ' d' → logprob: -6.139671802520752
    4. '  ' → logprob: -13.01467227935791
    5. ' ' → logprob: -13.51467227935791
    6. '	d' → logprob: -14.88967227935791
    7. '```' → logprob: -15.26467227935791
    8. '    ' → logprob: -16.889671325683594
    9. '       ' → logprob: -17.014671325683594
    10. '    
' → logprob: -17.264671325683594

Token 110: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -1.5048530030981055e-06
    2. ' d' → logprob: -13.500001907348633
    3. '	d' → logprob: -23.000001907348633
    4. '   ' → logprob: -23.500001907348633
    5. '_d' → logprob: -24.375001907348633
    6. '.d' → logprob: -24.875001907348633
    7. '#' → logprob: -26.375001907348633
    8. '(d' → logprob: -26.625001907348633
    9. '
' → logprob: -27.250001907348633
    10. '```' → logprob: -27.375001907348633

Token 111: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. 'u' → logprob: -18.0
    3. '[' → logprob: -19.0
    4. '[user' → logprob: -19.625
    5. '```' → logprob: -21.5
    6. '[i' → logprob: -21.5
    7. '[d' → logprob: -21.875
    8. '[v' → logprob: -22.0
    9. ' [' → logprob: -22.625
    10. '	u' → logprob: -23.0

Token 112: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002469158498570323
    2. ']=' → logprob: -8.50024700164795
    3. '=' → logprob: -10.50024700164795
    4. ' ]' → logprob: -11.12524700164795
    5. ' =' → logprob: -13.87524700164795
    6. ')' → logprob: -15.87524700164795
    7. '[' → logprob: -16.625246047973633
    8. ']
' → logprob: -18.750246047973633
    9. '`]' → logprob: -18.750246047973633
    10. '']' → logprob: -19.000246047973633

Token 113: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380416102707386
    2. ' =' → logprob: -3.288041591644287
    3. '[' → logprob: -15.913042068481445
    4. '＝' → logprob: -17.413042068481445
    5. '=

' → logprob: -17.538042068481445
    6. '.=' → logprob: -18.288042068481445
    7. '=
' → logprob: -18.663042068481445
    8. '=int' → logprob: -18.913042068481445
    9. ',' → logprob: -19.163042068481445
    10. ')' → logprob: -19.538042068481445

Token 114: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.128163257315464e-07
    2. ' t' → logprob: -15.125
    3. '`t' → logprob: -18.75
    4. '	t' → logprob: -19.25
    5. '<t' → logprob: -21.25
    6. '_t' → logprob: -21.75
    7. '+t' → logprob: -21.875
    8. 'time' → logprob: -22.0
    9. ')t' → logprob: -22.0
    10. '<|end|>' → logprob: -22.375

Token 115: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09505566954612732
    2. ' for' → logprob: -3.09505558013916
    3. 'for' → logprob: -3.09505558013916
    4. '
' → logprob: -9.84505558013916
    5. '	for' → logprob: -10.34505558013916
    6. '    
' → logprob: -10.59505558013916
    7. '<|end|>' → logprob: -11.09505558013916
    8. ' ' → logprob: -12.97005558013916
    9. '       ' → logprob: -13.34505558013916
    10. '```' → logprob: -13.97005558013916

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45606616139411926
    2. 'for' → logprob: -1.2060661315917969
    3. ' for' → logprob: -2.706066131591797
    4. '	for' → logprob: -10.206066131591797
    5. '  ' → logprob: -12.081066131591797
    6. '<|end|>' → logprob: -12.206066131591797
    7. '
' → logprob: -12.831066131591797
    8. ' ' → logprob: -12.831066131591797
    9. '    
' → logprob: -12.956066131591797
    10. '```' → logprob: -14.456066131591797

Token 117: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.306760805164231e-05
    2. ' for' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.87501335144043
    4. '	for' → logprob: -19.87501335144043
    5. '    
' → logprob: -20.87501335144043
    6. '```' → logprob: -21.25001335144043
    7. '
' → logprob: -21.62501335144043
    8. ' ' → logprob: -22.75001335144043
    9. '  ' → logprob: -23.25001335144043
    10. ' 
' → logprob: -23.25001335144043

Token 118: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002963203703984618
    2. 'w' → logprob: -6.002963066101074
    3. 'i' → logprob: -7.752963066101074
    4. ' v' → logprob: -10.377963066101074
    5. 'j' → logprob: -10.877963066101074
    6. 'vv' → logprob: -13.252963066101074
    7. 'idx' → logprob: -13.377963066101074
    8. '(v' → logprob: -13.627963066101074
    9. 'x' → logprob: -14.002963066101074
    10. 'k' → logprob: -14.502963066101074

Token 119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08899804204702377
    2. 'in' → logprob: -2.4639980792999268
    3. ' ' → logprob: -10.213997840881348
    4. '   ' → logprob: -11.588997840881348
    5. '	in' → logprob: -12.213997840881348
    6. ',' → logprob: -13.463997840881348
    7. 'n' → logprob: -14.088997840881348
    8. '  ' → logprob: -14.213997840881348
    9. '    ' → logprob: -14.338997840881348
    10. 'A' → logprob: -14.338997840881348

Token 120: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007101670489646494
    2. ' range' → logprob: -7.2507100105285645
    3. '   ' → logprob: -15.875710487365723
    4. ' ' → logprob: -17.250709533691406
    5. '(range' → logprob: -17.375709533691406
    6. 'A' → logprob: -17.500709533691406
    7. '  ' → logprob: -18.125709533691406
    8. '	range' → logprob: -18.375709533691406
    9. '    ' → logprob: -19.000709533691406
    10. 'r' → logprob: -20.250709533691406

Token 121: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.600714161526412e-05
    2. 'n' → logprob: -9.500076293945312
    3. '(len' → logprob: -14.125076293945312
    4. '(' → logprob: -15.000076293945312
    5. 'len' → logprob: -16.625076293945312
    6. ' (' → logprob: -19.000076293945312
    7. '	n' → logprob: -19.000076293945312
    8. '   ' → logprob: -19.375076293945312
    9. ' n' → logprob: -19.625076293945312
    10. '[n' → logprob: -20.500076293945312

Token 122: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2520117461681366
    2. '):' → logprob: -1.502011775970459
    3. '):
' → logprob: -9.8770112991333
    4. '   ' → logprob: -11.0020112991333
    5. ':' → logprob: -12.0020112991333
    6. ')' → logprob: -12.8770112991333
    7. ':
' → logprob: -13.2520112991333
    8. '():
' → logprob: -13.6270112991333
    9. '):

' → logprob: -13.7520112991333
    10. ' ):
' → logprob: -14.3770112991333

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06307609379291534
    2. ' if' → logprob: -2.9380760192871094
    3. 'if' → logprob: -4.813076019287109
    4. '   ' → logprob: -10.31307601928711
    5. '	if' → logprob: -13.93807601928711
    6. '    ' → logprob: -14.06307601928711
    7. '           ' → logprob: -14.18807601928711
    8. '	   ' → logprob: -14.56307601928711
    9. '     ' → logprob: -14.68807601928711
    10. '      ' → logprob: -15.06307601928711

Token 124: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -6.837811088189483e-05
    2. ' if' → logprob: -9.750068664550781
    3. '       ' → logprob: -11.750068664550781
    4. '   ' → logprob: -13.125068664550781
    5. '
' → logprob: -16.25006866455078
    6. '	if' → logprob: -17.12506866455078
    7. '           ' → logprob: -17.50006866455078
    8. 'If' → logprob: -18.50006866455078
    9. '```' → logprob: -18.62506866455078
    10. '        
' → logprob: -19.62506866455078

Token 125: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1426941603422165
    2. ' A' → logprob: -2.0176942348480225
    3. '   ' → logprob: -11.392694473266602
    4. '(A' → logprob: -12.517694473266602
    5. ' not' → logprob: -13.392694473266602
    6. ' ' → logprob: -13.767694473266602
    7. '	A' → logprob: -14.267694473266602
    8. 'not' → logprob: -15.142694473266602
    9. '(' → logprob: -16.0176944732666
    10. 'a' → logprob: -16.1426944732666

Token 126: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -6.034592388459714e-06
    2. 'u' → logprob: -12.125005722045898
    3. '[' → logprob: -14.625005722045898
    4. ' [' → logprob: -16.8750057220459
    5. '[
' → logprob: -17.2500057220459
    6. '[user' → logprob: -17.5000057220459
    7. '```' → logprob: -18.0000057220459
    8. '	u' → logprob: -18.3750057220459
    9. '   ' → logprob: -18.3750057220459
    10. '<u' → logprob: -18.6250057220459

Token 127: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.026824425905942917
    2. '[v' → logprob: -3.776824474334717
    3. '[u' → logprob: -5.776824474334717
    4. '[' → logprob: -7.901824474334717
    5. ' ][' → logprob: -10.276823997497559
    6. ']' → logprob: -11.276823997497559
    7. ')[' → logprob: -11.276823997497559
    8. 'v' → logprob: -11.776823997497559
    9. '   ' → logprob: -11.901823997497559
    10. ' [' → logprob: -12.651823997497559

Token 128: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0280383548888494e-06
    2. ' v' → logprob: -13.875000953674316
    3. ']' → logprob: -16.750001907348633
    4. '[v' → logprob: -17.625001907348633
    5. ')v' → logprob: -18.125001907348633
    6. '	v' → logprob: -19.125001907348633
    7. '0' → logprob: -19.375001907348633
    8. '][' → logprob: -19.375001907348633
    9. ')' → logprob: -19.625001907348633
    10. '<|end|>' → logprob: -19.750001907348633

Token 129: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3900451362133026
    2. ']==' → logprob: -1.140045166015625
    3. '==' → logprob: -6.265045166015625
    4. ' ==' → logprob: -7.015045166015625
    5. ' ]' → logprob: -8.015045166015625
    6. ' and' → logprob: -10.890045166015625
    7. 'and' → logprob: -12.140045166015625
    8. ')' → logprob: -12.765045166015625
    9. ')==' → logprob: -12.765045166015625
    10. '']==' → logprob: -13.140045166015625

Token 130: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10025595128536224
    2. ' ==' → logprob: -2.3502559661865234
    3. ']==' → logprob: -10.100255966186523
    4. ')==' → logprob: -12.725255966186523
    5. '()==' → logprob: -13.600255966186523
    6. ' and' → logprob: -13.850255966186523
    7. '=' → logprob: -13.975255966186523
    8. 'and' → logprob: -14.725255966186523
    9. '==
' → logprob: -14.850255966186523
    10. ' ' → logprob: -14.975255966186523

Token 131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038169484469108284
    2. ' ' → logprob: -7.8753814697265625
    3. '0' → logprob: -13.375381469726562
    4. '   ' → logprob: -17.750381469726562
    5. '  ' → logprob: -19.750381469726562
    6. '=' → logprob: -20.125381469726562
    7. '１' → logprob: -20.312881469726562
    8. '>' → logprob: -20.750381469726562
    9. '```' → logprob: -20.875381469726562
    10. '
' → logprob: -21.125381469726562

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011164903844473884
    2. '0' → logprob: -9.62511157989502
    3. ' ' → logprob: -10.00011157989502
    4. '   ' → logprob: -17.000112533569336
    5. '  ' → logprob: -18.375112533569336
    6. '```' → logprob: -18.875112533569336
    7. ')' → logprob: -19.375112533569336
    8. '１' → logprob: -19.625112533569336
    9. '`' → logprob: -19.875112533569336
    10. '=' → logprob: -19.875112533569336

Token 133: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014182780869305134
    2. 'and' → logprob: -4.2641825675964355
    3. '       ' → logprob: -11.639183044433594
    4. '           ' → logprob: -11.764183044433594
    5. '        ' → logprob: -13.639183044433594
    6. ' ' → logprob: -14.639183044433594
    7. '   ' → logprob: -15.014183044433594
    8. '    ' → logprob: -15.764183044433594
    9. '          ' → logprob: -16.139183044433594
    10. '      ' → logprob: -16.389183044433594

Token 134: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011049231514334679
    2. ' d' → logprob: -4.511049270629883
    3. '   ' → logprob: -13.761049270629883
    4. ' ' → logprob: -15.761049270629883
    5. 'f' → logprob: -16.636049270629883
    6. '  ' → logprob: -16.886049270629883
    7. '	d' → logprob: -17.011049270629883
    8. ' not' → logprob: -17.386049270629883
    9. 'not' → logprob: -17.761049270629883
    10. '
' → logprob: -18.886049270629883

Token 135: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: 0.0
    2. 'v' → logprob: -17.0
    3. '[' → logprob: -19.375
    4. '[u' → logprob: -21.0
    5. '<v' → logprob: -21.75
    6. '	v' → logprob: -22.375
    7. '[i' → logprob: -23.625
    8. '```' → logprob: -23.75
    9. '(v' → logprob: -23.875
    10. '   ' → logprob: -24.0

Token 136: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2833578884601593
    2. ' ==' → logprob: -1.408357858657837
    3. ']==' → logprob: -6.283358097076416
    4. ']' → logprob: -8.533357620239258
    5. ')==' → logprob: -10.158357620239258
    6. ')' → logprob: -10.408357620239258
    7. '[' → logprob: -10.408357620239258
    8. '0' → logprob: -11.158357620239258
    9. ' ' → logprob: -12.033357620239258
    10. '```' → logprob: -12.283357620239258

Token 137: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029852306470274925
    2. ' ==' → logprob: -3.5298523902893066
    3. '0' → logprob: -9.904851913452148
    4. ']==' → logprob: -10.529851913452148
    5. '[' → logprob: -11.654851913452148
    6. '```' → logprob: -12.404851913452148
    7. '==
' → logprob: -12.654851913452148
    8. '=' → logprob: -12.654851913452148
    9. ' ' → logprob: -13.279851913452148
    10. ')==' → logprob: -13.404851913452148

Token 138: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.125045776367188
    4. '  ' → logprob: -20.500045776367188
    5. '۰' → logprob: -20.500045776367188
    6. '０' → logprob: -21.375045776367188
    7. '```' → logprob: -21.625045776367188
    8. '    ' → logprob: -21.750045776367188
    9. '00' → logprob: -22.125045776367188
    10. '=' → logprob: -22.250045776367188

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.750001907348633
    4. '۰' → logprob: -20.125001907348633
    5. '  ' → logprob: -20.875001907348633
    6. '０' → logprob: -21.000001907348633
    7. '    ' → logprob: -21.750001907348633
    8. '[' → logprob: -21.875001907348633
    9. '00' → logprob: -21.875001907348633
    10. '#' → logprob: -22.250001907348633

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03379691392183304
    2. ':
' → logprob: -3.408797025680542
    3. '       ' → logprob: -9.033797264099121
    4. ' and' → logprob: -11.783797264099121
    5. '):' → logprob: -12.158797264099121
    6. '):
' → logprob: -12.408797264099121
    7. '   ' → logprob: -12.908797264099121
    8. ':def' → logprob: -12.908797264099121
    9. ' :' → logprob: -13.033797264099121
    10. ':

' → logprob: -13.158797264099121

Token 141: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3296048045158386
    2. '           ' → logprob: -1.7046048641204834
    3. ' dfs' → logprob: -2.7046048641204834
    4. 'dfs' → logprob: -3.4546048641204834
    5. '   ' → logprob: -8.204605102539062
    6. '        
' → logprob: -9.954605102539062
    7. '
' → logprob: -10.829605102539062
    8. 'def' → logprob: -10.954605102539062
    9. '         ' → logprob: -11.329605102539062
    10. '               ' → logprob: -11.579605102539062

Token 142: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.021530350670218468
    2. ' dfs' → logprob: -3.8965303897857666
    3. '           ' → logprob: -7.0215301513671875
    4. '       ' → logprob: -10.271530151367188
    5. '   ' → logprob: -10.396530151367188
    6. '               ' → logprob: -10.646530151367188
    7. 'df' → logprob: -13.146530151367188
    8. 'd' → logprob: -13.521530151367188
    9. ' ' → logprob: -14.021530151367188
    10. 'def' → logprob: -14.521530151367188

Token 143: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. '(
' → logprob: -18.125001907348633
    4. 'v' → logprob: -18.875001907348633
    5. ' (' → logprob: -19.625001907348633
    6. '((' → logprob: -20.500001907348633
    7. ')v' → logprob: -20.625001907348633
    8. '[v' → logprob: -20.750001907348633
    9. '(u' → logprob: -21.500001907348633
    10. '```' → logprob: -21.875001907348633

Token 144: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20144784450531006
    2. ')
' → logprob: -1.70144784450531
    3. '   ' → logprob: -10.826447486877441
    4. ')
' → logprob: -11.951447486877441
    5. ')

' → logprob: -12.201447486877441
    6. ')v' → logprob: -13.576447486877441
    7. ' )' → logprob: -14.826447486877441
    8. ' )
' → logprob: -15.076447486877441
    9. ')#' → logprob: -15.326447486877441
    10. ')return' → logprob: -15.326447486877441

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5760507583618164
    2. 't' → logprob: -0.8260507583618164
    3. ' t' → logprob: -9.326050758361816
    4. '```' → logprob: -11.451050758361816
    5. '
' → logprob: -11.826050758361816
    6. '  ' → logprob: -13.451050758361816
    7. '`t' → logprob: -13.951050758361816
    8. ' ' → logprob: -14.076050758361816
    9. '	t' → logprob: -14.826050758361816
    10. '   ' → logprob: -15.326050758361816

Token 146: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -1.3663626305060461e-05
    2. '   ' → logprob: -11.25001335144043
    3. ' t' → logprob: -15.00001335144043
    4. '
' → logprob: -15.12501335144043
    5. 'global' → logprob: -17.00001335144043
    6. '    
' → logprob: -17.75001335144043
    7. 'f' → logprob: -18.62501335144043
    8. '  ' → logprob: -19.12501335144043
    9. '

' → logprob: -19.25001335144043
    10. ' ' → logprob: -19.62501335144043

Token 147: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931537985801697
    2. '+=' → logprob: -0.6931537985801697
    3. '=' → logprob: -11.943153381347656
    4. ' =' → logprob: -16.693153381347656
    5. ']+=' → logprob: -18.068153381347656
    6. ' ' → logprob: -18.068153381347656
    7. '   ' → logprob: -18.568153381347656
    8. ' ' → logprob: -19.693153381347656
    9. '+' → logprob: -20.068153381347656
    10. '	' → logprob: -20.693153381347656

Token 148: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -19.25002098083496
    4. '   ' → logprob: -20.25002098083496
    5. '+' → logprob: -20.87502098083496
    6. '2' → logprob: -21.37502098083496
    7. '```' → logprob: -21.50002098083496
    8. '
' → logprob: -21.62502098083496
    9. '0' → logprob: -21.62502098083496
    10. '  ' → logprob: -21.75002098083496

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '
' → logprob: -20.75
    4. '   ' → logprob: -21.375
    5. '2' → logprob: -21.4375
    6. '+' → logprob: -22.0625
    7. '```' → logprob: -22.125
    8. '１' → logprob: -22.25
    9. '<|end|>' → logprob: -22.25
    10. '۱' → logprob: -22.3125

Token 150: '
' (ID: 198)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07941382378339767
    2. '   ' → logprob: -2.579413890838623
    3. ' f' → logprob: -7.579413890838623
    4. '  ' → logprob: -12.079413414001465
    5. '	f' → logprob: -12.329413414001465
    6. ' ' → logprob: -13.454413414001465
    7. '
' → logprob: -15.079413414001465
    8. '```' → logprob: -15.079413414001465
    9. '(f' → logprob: -15.204413414001465
    10. '       ' → logprob: -15.204413414001465

Token 151: '   ' (ID: 271)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0003831252979580313
    2. '   ' → logprob: -7.875382900238037
    3. ' f' → logprob: -13.000383377075195
    4. '	f' → logprob: -14.500383377075195
    5. '```' → logprob: -15.625383377075195
    6. '  ' → logprob: -16.500383377075195
    7. ' ' → logprob: -17.875383377075195
    8. '       ' → logprob: -18.375383377075195
    9. '(f' → logprob: -18.625383377075195
    10. '
' → logprob: -19.000383377075195

Token 152: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -9.968312951968983e-06
    2. ' f' → logprob: -12.000009536743164
    3. '   ' → logprob: -12.500009536743164
    4. '  ' → logprob: -18.125009536743164
    5. '	f' → logprob: -19.000009536743164
    6. '```' → logprob: -19.625009536743164
    7. ' ' → logprob: -19.750009536743164
    8. '
' → logprob: -21.000009536743164
    9. '       ' → logprob: -21.875009536743164
    10. '(f' → logprob: -22.375009536743164

Token 153: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.2200749754119897e-06
    2. '[f' → logprob: -13.500001907348633
    3. 'u' → logprob: -14.250001907348633
    4. '[' → logprob: -15.875001907348633
    5. '[user' → logprob: -17.125001907348633
    6. '[v' → logprob: -18.125001907348633
    7. '```' → logprob: -19.250001907348633
    8. '	u' → logprob: -19.375001907348633
    9. '<u' → logprob: -19.875001907348633
    10. '(u' → logprob: -20.250001907348633

Token 154: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002895834331866354
    2. ']=' → logprob: -8.375289916992188
    3. '=' → logprob: -9.750289916992188
    4. ' ]' → logprob: -14.375289916992188
    5. ')' → logprob: -15.875289916992188
    6. '[' → logprob: -17.375289916992188
    7. ']
' → logprob: -17.875289916992188
    8. ' =' → logprob: -18.625289916992188
    9. '   ' → logprob: -19.250289916992188
    10. '']' → logprob: -19.500289916992188

Token 155: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004306692280806601
    2. ' =' → logprob: -7.750430583953857
    3. '＝' → logprob: -18.875431060791016
    4. '.=' → logprob: -19.500431060791016
    5. '=
' → logprob: -19.500431060791016
    6. '=

' → logprob: -20.375431060791016
    7. '[' → logprob: -21.500431060791016
    8. '=f' → logprob: -22.000431060791016
    9. ')' → logprob: -22.000431060791016
    10. ')=' → logprob: -22.125431060791016

Token 156: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00020354038861114532
    2. ' t' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.12520408630371
    4. '	t' → logprob: -17.12520408630371
    5. ' ' → logprob: -18.25020408630371
    6. '`t' → logprob: -19.75020408630371
    7. '_t' → logprob: -21.50020408630371
    8. '  ' → logprob: -21.62520408630371
    9. '    ' → logprob: -22.00020408630371
    10. ' ' → logprob: -22.12520408630371

Token 157: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.360996485454962e-05
    2. ' for' → logprob: -10.1250638961792
    3. '#' → logprob: -11.0000638961792
    4. '<|end|>' → logprob: -12.1250638961792
    5. '```' → logprob: -14.3750638961792
    6. 'dfs' → logprob: -15.7500638961792
    7. 'print' → logprob: -15.8750638961792
    8. '    
' → logprob: -16.125062942504883
    9. '  
' → logprob: -16.250062942504883
    10. '
' → logprob: -16.375062942504883

Token 159: ' dfs' (ID: 51252)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.117345684382599e-05
    2. ' for' → logprob: -10.875020980834961
    3. '
' → logprob: -13.125020980834961
    4. '    
' → logprob: -16.12502098083496
    5. ' 
' → logprob: -17.00002098083496
    6. 'dfs' → logprob: -17.50002098083496
    7. '  
' → logprob: -17.87502098083496
    8. '```' → logprob: -18.25002098083496
    9. '   ' → logprob: -19.12502098083496
    10. 'f' → logprob: -19.25002098083496

Token 160: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00029387109680101275
    2. ' for' → logprob: -8.750293731689453
    3. '
' → logprob: -9.000293731689453
    4. '(
' → logprob: -12.000293731689453
    5. ' 
' → logprob: -14.000293731689453
    6. '(u' → logprob: -14.125293731689453
    7. '    
' → logprob: -14.250293731689453
    8. '(' → logprob: -14.250293731689453
    9. '```' → logprob: -14.500293731689453
    10. '()
' → logprob: -14.750293731689453

Token 161: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -15.75
    3. '
' → logprob: -18.0
    4. '```' → logprob: -20.375
    5. 'from' → logprob: -22.375
    6. '    
' → logprob: -22.5
    7. '  
' → logprob: -23.625
    8. '   ' → logprob: -23.75
    9. ' 
' → logprob: -24.25
    10. '	for' → logprob: -24.5

Token 162: ' i' (ID: 575)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4039573669433594
    2. 'i' → logprob: -1.1539573669433594
    3. ' u' → logprob: -4.653957366943359
    4. ' i' → logprob: -4.903957366943359
    5. ' ' → logprob: -16.40395736694336
    6. '   ' → logprob: -16.77895736694336
    7. '`' → logprob: -17.65395736694336
    8. '	u' → logprob: -17.77895736694336
    9. 'node' → logprob: -18.27895736694336
    10. 'x' → logprob: -18.65395736694336

Token 163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14276020228862762
    2. 'in' → logprob: -2.0177602767944336
    3. 'range' → logprob: -10.017760276794434
    4. 'n' → logprob: -10.517760276794434
    5. ' ' → logprob: -11.642760276794434
    6. '	in' → logprob: -13.892760276794434
    7. 's' → logprob: -14.142760276794434
    8. ' range' → logprob: -14.517760276794434
    9. '  ' → logprob: -14.767760276794434
    10. 'In' → logprob: -15.267760276794434

Token 164: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.505351095460355e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -16.12507438659668
    4. '	range' → logprob: -19.87507438659668
    5. 'ange' → logprob: -20.87507438659668
    6. 'n' → logprob: -21.12507438659668
    7. 'in' → logprob: -21.25007438659668
    8. 'ran' → logprob: -21.62507438659668
    9. '(' → logprob: -21.87507438659668
    10. 'r' → logprob: -21.87507438659668

Token 165: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. 'n' → logprob: -17.125003814697266
    4. ' (' → logprob: -19.375003814697266
    5. '(
' → logprob: -20.875003814697266
    6. '(N' → logprob: -21.000003814697266
    7. '(range' → logprob: -21.500003814697266
    8. '(s' → logprob: -21.750003814697266
    9. '(num' → logprob: -22.000003814697266
    10. '(len' → logprob: -22.000003814697266

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10031116008758545
    2. '):
' → logprob: -2.350311279296875
    3. '):
' → logprob: -9.225311279296875
    4. ')' → logprob: -13.225311279296875
    5. ' ):' → logprob: -13.225311279296875
    6. ':' → logprob: -13.975311279296875
    7. '   ' → logprob: -14.475311279296875
    8. '):

' → logprob: -15.100311279296875
    9. '}:' → logprob: -15.350311279296875
    10. ']:' → logprob: -16.600311279296875

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03182865306735039
    2. ' if' → logprob: -4.156828880310059
    3. 'if' → logprob: -4.156828880310059
    4. '    
' → logprob: -11.781828880310059
    5. ' ' → logprob: -13.281828880310059
    6. '	if' → logprob: -13.906828880310059
    7. '  ' → logprob: -14.281828880310059
    8. '   ' → logprob: -14.781828880310059
    9. '
' → logprob: -15.031828880310059
    10. '<|end|>' → logprob: -15.156828880310059

Token 168: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005279534496366978
    2. ' if' → logprob: -5.255279541015625
    3. '   ' → logprob: -10.005279541015625
    4. ' ' → logprob: -15.505279541015625
    5. '```' → logprob: -16.505279541015625
    6. '	if' → logprob: -16.630279541015625
    7. 'If' → logprob: -16.630279541015625
    8. '    
' → logprob: -16.880279541015625
    9. '0' → logprob: -17.005279541015625
    10. '
' → logprob: -17.130279541015625

Token 169: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4740804135799408
    2. 'd' → logprob: -0.9740804433822632
    3. ' ' → logprob: -13.474080085754395
    4. '   ' → logprob: -13.849080085754395
    5. '	d' → logprob: -14.724080085754395
    6. '0' → logprob: -15.224080085754395
    7. ' not' → logprob: -16.34908103942871
    8. '(d' → logprob: -16.34908103942871
    9. ' ' → logprob: -16.97408103942871
    10. '  ' → logprob: -17.09908103942871

Token 170: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. 'i' → logprob: -14.625001907348633
    3. ' [' → logprob: -14.875001907348633
    4. '[' → logprob: -15.000001907348633
    5. '==' → logprob: -16.000001907348633
    6. '[u' → logprob: -17.250001907348633
    7. '```' → logprob: -17.500001907348633
    8. ' ==' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '=' → logprob: -18.500001907348633

Token 171: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16255991160869598
    2. ' ==' → logprob: -1.9125598669052124
    3. ']==' → logprob: -6.412559986114502
    4. ']' → logprob: -7.287559986114502
    5. ')==' → logprob: -13.037559509277344
    6. ')' → logprob: -13.662559509277344
    7. ' ' → logprob: -13.912559509277344
    8. '==
' → logprob: -14.037559509277344
    9. '']==' → logprob: -14.287559509277344
    10. '=' → logprob: -14.412559509277344

Token 172: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1269645392894745
    2. ' ==' → logprob: -2.126964569091797
    3. '0' → logprob: -10.751964569091797
    4. ']==' → logprob: -11.501964569091797
    5. '==
' → logprob: -13.251964569091797
    6. ' ' → logprob: -13.876964569091797
    7. '[' → logprob: -14.126964569091797
    8. '()==' → logprob: -14.376964569091797
    9. ')==' → logprob: -15.126964569091797
    10. '=' → logprob: -15.376964569091797

Token 173: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021855919621884823
    2. ' ' → logprob: -6.127185821533203
    3. '   ' → logprob: -14.752185821533203
    4. '  ' → logprob: -16.877185821533203
    5. '    ' → logprob: -18.877185821533203
    6. '00' → logprob: -19.064685821533203
    7. '```' → logprob: -19.689685821533203
    8. ' ' → logprob: -19.752185821533203
    9. '=' → logprob: -19.877185821533203
    10. '۰' → logprob: -20.127185821533203

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -19.37500762939453
    4. '  ' → logprob: -20.37500762939453
    5. '０' → logprob: -20.62500762939453
    6. '۰' → logprob: -20.87500762939453
    7. '```' → logprob: -21.25000762939453
    8. '<|end|>' → logprob: -21.75000762939453
    9. '#' → logprob: -21.81250762939453
    10. '=' → logprob: -21.87500762939453

Token 175: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6932965517044067
    2. ':
' → logprob: -0.6932965517044067
    3. '       ' → logprob: -9.443296432495117
    4. '():
' → logprob: -10.443296432495117
    5. '   ' → logprob: -10.818296432495117
    6. '):
' → logprob: -11.193296432495117
    7. ':
' → logprob: -13.068296432495117
    8. ' :
' → logprob: -13.318296432495117
    9. '):' → logprob: -13.943296432495117
    10. 'dfs' → logprob: -14.318296432495117

Token 176: '       ' (ID: 309)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.4530196189880371
    2. '       ' → logprob: -1.203019618988037
    3. 'dfs' → logprob: -3.078019618988037
    4. '   ' → logprob: -4.328019618988037
    5. ':
' → logprob: -5.703019618988037
    6. ':' → logprob: -6.953019618988037
    7. ' DFS' → logprob: -8.328020095825195
    8. ' ' → logprob: -9.453020095825195
    9. '
' → logprob: -10.703020095825195
    10. '    
' → logprob: -10.828020095825195

Token 177: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.008615754544734955
    2. ' dfs' → logprob: -4.758615970611572
    3. 'df' → logprob: -13.883615493774414
    4. '   ' → logprob: -15.383615493774414
    5. 'd' → logprob: -16.883615493774414
    6. 'def' → logprob: -17.133615493774414
    7. '       ' → logprob: -18.008615493774414
    8. ' ' → logprob: -18.383615493774414
    9. 'DFS' → logprob: -18.383615493774414
    10. 'dfa' → logprob: -18.383615493774414

Token 178: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.2007883671903983e-05
    2. '(' → logprob: -10.750021934509277
    3. '()' → logprob: -14.750021934509277
    4. ' (' → logprob: -16.625022888183594
    5. '(
' → logprob: -18.000022888183594
    6. '[i' → logprob: -18.375022888183594
    7. '((' → logprob: -19.000022888183594
    8. '(ii' → logprob: -19.375022888183594
    9. '(int' → logprob: -19.500022888183594
    10. 'i' → logprob: -19.625022888183594

Token 179: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.125001907348633
    3. '())' → logprob: -16.000001907348633
    4. ' )' → logprob: -16.125001907348633
    5. ')#' → logprob: -18.250001907348633
    6. '()' → logprob: -18.375001907348633
    7. '))' → logprob: -18.500001907348633
    8. ')i' → logprob: -18.750001907348633
    9. '<|end|>' → logprob: -19.000001907348633
    10. ')}' → logprob: -19.375001907348633

Token 180: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.225939872208983e-05
    2. ' for' → logprob: -11.000032424926758
    3. '
' → logprob: -11.125032424926758
    4. '```' → logprob: -14.750032424926758
    5. '<|end|>' → logprob: -15.625032424926758
    6. '``' → logprob: -16.750032424926758
    7. '    
' → logprob: -16.750032424926758
    8. '   ' → logprob: -17.750032424926758
    9. 'print' → logprob: -17.750032424926758
    10. '#' → logprob: -18.000032424926758

Token 181: ' output' (ID: 4733)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.5
    3. '
' → logprob: -18.0
    4. '```' → logprob: -18.875
    5. 'print' → logprob: -20.0
    6. '   ' → logprob: -20.75
    7. '``' → logprob: -21.375
    8. 'output' → logprob: -21.5
    9. '#' → logprob: -21.5
    10. 'result' → logprob: -21.625

Token 182: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.75
    3. '
' → logprob: -23.875
    4. '```' → logprob: -24.125
    5. 'print' → logprob: -25.0
    6. '   ' → logprob: -25.25
    7. '	for' → logprob: -25.5
    8. 'fora' → logprob: -26.75
    9. 'fo' → logprob: -27.125
    10. '    
' → logprob: -27.25

Token 183: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -20.75
    3. '	for' → logprob: -26.625
    4. '```' → logprob: -27.0
    5. 'from' → logprob: -27.25
    6. 'print' → logprob: -27.375
    7. 'fo' → logprob: -27.5
    8. 'fora' → logprob: -27.75
    9. 'For' → logprob: -28.375
    10. 'import' → logprob: -28.375

Token 184: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31331852078437805
    2. 'i' → logprob: -1.3133184909820557
    3. 'u' → logprob: -10.313318252563477
    4. ' u' → logprob: -10.688318252563477
    5. '	i' → logprob: -15.063318252563477
    6. ' ' → logprob: -15.188318252563477
    7. '(i' → logprob: -16.563318252563477
    8. '```' → logprob: -16.688318252563477
    9. '_i' → logprob: -17.813318252563477
    10. ' ' → logprob: -17.938318252563477

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008626513183116913
    2. 'in' → logprob: -4.758626461029053
    3. 'range' → logprob: -12.258626937866211
    4. ' ' → logprob: -12.508626937866211
    5. ',' → logprob: -13.758626937866211
    6. 'n' → logprob: -14.383626937866211
    7. '	in' → logprob: -14.633626937866211
    8. '  ' → logprob: -14.758626937866211
    9. ' range' → logprob: -15.133626937866211
    10. '0' → logprob: -15.633626937866211

Token 186: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '(range' → logprob: -17.875036239624023
    4. '   ' → logprob: -19.250036239624023
    5. 'r' → logprob: -19.750036239624023
    6. ' ' → logprob: -20.250036239624023
    7. '  ' → logprob: -20.750036239624023
    8. '	range' → logprob: -21.125036239624023
    9. '```' → logprob: -21.625036239624023
    10. 'ran' → logprob: -21.750036239624023

Token 187: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13965019583702087
    2. '(range' → logprob: -2.1396501064300537
    3. 'range' → logprob: -4.389650344848633
    4. 'n' → logprob: -9.014650344848633
    5. ' range' → logprob: -9.764650344848633
    6. '(' → logprob: -10.639650344848633
    7. 'ange' → logprob: -10.639650344848633
    8. 'nge' → logprob: -12.264650344848633
    9. '(r' → logprob: -13.389650344848633
    10. 'in' → logprob: -13.639650344848633

Token 188: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3870086669921875
    2. '):
' → logprob: -1.1370086669921875
    3. '):
' → logprob: -9.137008666992188
    4. ':' → logprob: -11.387008666992188
    5. ' ):' → logprob: -11.637008666992188
    6. ')' → logprob: -12.512008666992188
    7. ' ):
' → logprob: -12.637008666992188
    8. ':
' → logprob: -13.387008666992188
    9. '   ' → logprob: -14.762008666992188
    10. 'print' → logprob: -15.512008666992188

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1282709687948227
    2. 'print' → logprob: -2.1282708644866943
    3. ' print' → logprob: -6.628271102905273
    4. '	print' → logprob: -11.253271102905273
    5. '  ' → logprob: -13.128271102905273
    6. '   ' → logprob: -13.378271102905273
    7. ' ' → logprob: -13.628271102905273
    8. '       ' → logprob: -14.128271102905273
    9. '    ' → logprob: -14.753271102905273
    10. '```' → logprob: -15.753271102905273

Token 190: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.981667537620524e-06
    2. ' print' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.250001907348633
    4. 'printf' → logprob: -20.875001907348633
    5. '	print' → logprob: -21.500001907348633
    6. ' ' → logprob: -22.875001907348633
    7. '#print' → logprob: -23.250001907348633
    8. '```' → logprob: -23.250001907348633
    9. 'prints' → logprob: -23.375001907348633
    10. '  ' → logprob: -24.125001907348633

Token 191: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00026622318546287715
    2. '(f' → logprob: -8.250266075134277
    3. '(' → logprob: -12.625266075134277
    4. 'i' → logprob: -13.875266075134277
    5. '("{}' → logprob: -14.500266075134277
    6. 'f' → logprob: -16.250267028808594
    7. '('{}' → logprob: -16.875267028808594
    8. ' (' → logprob: -17.375267028808594
    9. '(a' → logprob: -17.500267028808594
    10. '((' → logprob: -17.875267028808594

Token 192: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022984668612480164
    2. '+' → logprob: -6.127298355102539
    3. ',end' → logprob: -9.877298355102539
    4. ' ,' → logprob: -10.252298355102539
    5. ',",' → logprob: -11.127298355102539
    6. ',d' → logprob: -12.502298355102539
    7. '+,' → logprob: -13.252298355102539
    8. ' +' → logprob: -13.377298355102539
    9. ',p' → logprob: -14.252298355102539
    10. ')' → logprob: -14.627298355102539

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8789383830153383e-05
    2. ' ' → logprob: -11.375019073486328
    3. ')' → logprob: -12.500019073486328
    4. ',' → logprob: -12.875019073486328
    5. '```' → logprob: -14.750019073486328
    6. '   ' → logprob: -15.625019073486328
    7. '``' → logprob: -16.375019073486328
    8. ' ,' → logprob: -16.375019073486328
    9. '+' → logprob: -16.750019073486328
    10. '0' → logprob: -17.250019073486328

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006698676850646734
    2. ',d' → logprob: -5.5066986083984375
    3. ' ,' → logprob: -6.0066986083984375
    4. ',f' → logprob: -9.006698608398438
    5. 'd' → logprob: -10.881698608398438
    6. ',end' → logprob: -11.881698608398438
    7. 'f' → logprob: -13.506698608398438
    8. ' d' → logprob: -13.756698608398438
    9. '   ' → logprob: -14.506698608398438
    10. '    ' → logprob: -14.631698608398438

Token 195: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005233882926404476
    2. ' d' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.880233764648438
    4. ' ' → logprob: -17.380233764648438
    5. '    ' → logprob: -18.255233764648438
    6. '  ' → logprob: -19.005233764648438
    7. '     ' → logprob: -19.880233764648438
    8. 'f' → logprob: -20.130233764648438
    9. '	d' → logprob: -20.380233764648438
    10. '       ' → logprob: -20.505233764648438

Token 196: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.670925358776003e-05
    2. '[' → logprob: -9.625066757202148
    3. '[
' → logprob: -15.750066757202148
    4. ')' → logprob: -15.875066757202148
    5. ' [' → logprob: -16.37506675720215
    6. '```' → logprob: -16.37506675720215
    7. '[f' → logprob: -16.75006675720215
    8. '[I' → logprob: -17.50006675720215
    9. '[u' → logprob: -18.00006675720215
    10. '[n' → logprob: -18.12506675720215

Token 197: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012499965960159898
    2. ',f' → logprob: -7.00124979019165
    3. ' ,' → logprob: -8.001250267028809
    4. ',d' → logprob: -12.876250267028809
    5. ',end' → logprob: -15.126250267028809
    6. ',i' → logprob: -15.376250267028809
    7. ' f' → logprob: -16.126249313354492
    8. 'f' → logprob: -16.126249313354492
    9. 'd' → logprob: -17.376249313354492
    10. ',n' → logprob: -17.876249313354492

Token 198: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0019286326132714748
    2. ' f' → logprob: -6.251928806304932
    3. ' ' → logprob: -18.626928329467773
    4. '   ' → logprob: -19.501928329467773
    5. '  ' → logprob: -20.251928329467773
    6. '    ' → logprob: -20.626928329467773
    7. ')' → logprob: -21.376928329467773
    8. ''f' → logprob: -21.376928329467773
    9. '	f' → logprob: -21.376928329467773
    10. '     ' → logprob: -22.001928329467773

Token 199: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.014684110297821e-06
    2. '[' → logprob: -12.125008583068848
    3. '[u' → logprob: -12.625008583068848
    4. ')' → logprob: -16.625009536743164
    5. 'i' → logprob: -16.750009536743164
    6. '[I' → logprob: -17.125009536743164
    7. ']' → logprob: -17.875009536743164
    8. ')[' → logprob: -18.000009536743164
    9. '```' → logprob: -18.125009536743164
    10. '(i' → logprob: -18.625009536743164

Token 200: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.500000953674316
    3. '))' → logprob: -15.875000953674316
    4. ')`' → logprob: -16.625
    5. ')
' → logprob: -17.5
    6. ')}' → logprob: -18.75
    7. ')#' → logprob: -18.875
    8. ')")' → logprob: -19.375
    9. '`)' → logprob: -19.5
    10. '})' → logprob: -19.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 198
Tokens correctement prédits (1ère position, stricte): 87
Tokens correctement prédits (1ère position, avec adaptation): 100
Tokens correctement prédits (top 10): 175
Précision stricte (1ère position): 43.94%
Précision adaptée (1ère position): 50.51%
Précision (top 10): 88.38%
================================================================================
