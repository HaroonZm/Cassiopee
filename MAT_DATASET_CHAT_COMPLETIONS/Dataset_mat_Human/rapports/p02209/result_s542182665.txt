================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import *
from bisect import *
from math import *
from collections import *
from heapq import *
from random import *
from decimal import *
import sys

sys.setrecursionlimit(10 ** 6)
int1 = lambda x: int(x) - 1
p2D = lambda x: print(*x, sep="\n")
def II(): return int(sys.stdin.readline())
def MI(): return map(int, sys.stdin.readline().split())
def MI1(): return map(int1, sys.stdin.readline().split())
def MF(): return map(float, sys.stdin.readline().split())
def LI(): return list(map(int, sys.stdin.readline().split()))
def LI1(): return list(map(int1, sys.stdin.readline().split()))
def LF(): return list(map(float, sys.stdin.readline().split()))
def LLI(rows_number): return [LI() for _ in range(rows_number)]
dij = [(1, 0), (0, 1), (-1, 0), (0, -1)]

def main():
    n,k=MI()
    aa=LI()
    bek=[False]*(1<<n)
    for bit in range(1<<n):
        if bek[bit]==False:
            s=sum(a for i,a in enumerate(aa) if bit>>i&1)
            if s==k:bek[bit]=True
            else:continue
        for j in range(n):
            bek[bit|1<<j]=True
    mx=0
    for bit in range(1<<n):
        if bek[bit]:continue
        popcnt=bin(bit).count("1")
        if popcnt>mx:mx=popcnt
    print(n-mx)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' *
' (ID: 2099)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1646274328231812
    2. 'product' → logprob: -1.4146274328231812
    3. 'per' → logprob: -1.7896274328231812
    4. 'count' → logprob: -2.0396275520324707
    5. 'cycle' → logprob: -2.6646275520324707
    6. 'group' → logprob: -3.2896275520324707
    7. 'chain' → logprob: -3.4146275520324707
    8. 'acc' → logprob: -6.039627552032471
    9. 'is' → logprob: -6.539627552032471
    10. 'zip' → logprob: -6.914627552032471

Token 4: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2417243719100952
    2. 'per' → logprob: -1.3667243719100952
    3. 'product' → logprob: -1.6167243719100952
    4. 'c' → logprob: -2.3667244911193848
    5. 'com' → logprob: -2.6167244911193848
    6. 'import' → logprob: -3.3667244911193848
    7. 'count' → logprob: -4.116724491119385
    8. 'chain' → logprob: -4.866724491119385
    9. 'i' → logprob: -4.991724491119385
    10. 'p' → logprob: -5.366724491119385

Token 5: ' bis' (ID: 7204)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.6391881108283997
    2. ' math' → logprob: -1.3891880512237549
    3. ' ' → logprob: -2.764188051223755
    4. ' operator' → logprob: -2.889188051223755
    5. ' sys' → logprob: -2.889188051223755
    6. ' collections' → logprob: -4.264188289642334
    7. ' os' → logprob: -4.389188289642334
    8. 'fun' → logprob: -5.639188289642334
    9. ' itertools' → logprob: -5.764188289642334
    10. ' random' → logprob: -6.014188289642334

Token 6: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.7491250875755213e-05
    2. 'ec' → logprob: -11.125027656555176
    3. 'e' → logprob: -12.125027656555176
    4. 't' → logprob: -13.250027656555176
    5. 'ected' → logprob: -13.750027656555176
    6. 'ector' → logprob: -14.250027656555176
    7. '   ' → logprob: -14.250027656555176
    8. 'ectl' → logprob: -14.375027656555176
    9. '```' → logprob: -14.750027656555176
    10. 'ct' → logprob: -15.000027656555176

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05533682554960251
    2. 'import' → logprob: -2.9303367137908936
    3. ' ' → logprob: -8.305336952209473
    4. '_import' → logprob: -8.805336952209473
    5. '_' → logprob: -10.555336952209473
    6. '.' → logprob: -11.055336952209473
    7. ' _' → logprob: -12.555336952209473
    8. '	import' → logprob: -12.930336952209473
    9. ' ' → logprob: -13.555336952209473
    10. '.import' → logprob: -13.555336952209473

Token 8: ' *
' (ID: 2099)
  Prédit: ' ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ins' → logprob: -0.616355836391449
    2. 'ins' → logprob: -1.3663558959960938
    3. ' bis' → logprob: -1.7413558959960938
    4. ' ' → logprob: -4.366355895996094
    5. ' *' → logprob: -4.866355895996094
    6. '*' → logprob: -5.241355895996094
    7. 'bis' → logprob: -6.241355895996094
    8. '_ins' → logprob: -6.991355895996094
    9. '_' → logprob: -7.991355895996094
    10. ' b' → logprob: -8.491355895996094

Token 9: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9511730670928955
    2. 'i' → logprob: -1.2011730670928955
    3. ',' → logprob: -2.7011730670928955
    4. 'c' → logprob: -2.9511730670928955
    5. '_' → logprob: -3.4511730670928955
    6. 'a' → logprob: -3.4511730670928955
    7. ' ' → logprob: -4.076172828674316
    8. '(' → logprob: -4.201172828674316
    9. '*' → logprob: -4.201172828674316
    10. '.' → logprob: -4.326172828674316

Token 10: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.3151816725730896
    2. 'math' → logprob: -2.0651817321777344
    3. 'collections' → logprob: -2.9401817321777344
    4. ' collections' → logprob: -3.0651817321777344
    5. ' heap' → logprob: -3.5651817321777344
    6. 'heap' → logprob: -4.315181732177734
    7. ' operator' → logprob: -7.190181732177734
    8. 'operator' → logprob: -8.315181732177734
    9. ' sys' → logprob: -8.440181732177734
    10. 'copy' → logprob: -8.815181732177734

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2819850444793701
    2. 'import' → logprob: -1.4069850444793701
    3. '.' → logprob: -7.906985282897949
    4. ' ' → logprob: -7.906985282897949
    5. '_import' → logprob: -10.40698528289795
    6. ' im' → logprob: -11.28198528289795
    7. '<|end|>' → logprob: -11.28198528289795
    8. '	import' → logprob: -11.40698528289795
    9. ' imports' → logprob: -12.28198528289795
    10. ' Import' → logprob: -12.78198528289795

Token 12: ' *
' (ID: 2099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05339885503053665
    2. ' sqrt' → logprob: -3.928398847579956
    3. '*' → logprob: -4.928399085998535
    4. 's' → logprob: -5.428399085998535
    5. ' ceil' → logprob: -5.428399085998535
    6. '_' → logprob: -6.428399085998535
    7. ' inf' → logprob: -6.553399085998535
    8. ' log' → logprob: -6.678399085998535
    9. ' ```' → logprob: -6.678399085998535
    10. ' *' → logprob: -6.803399085998535

Token 13: 'from' (ID: 2845)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.5335922241210938
    2. 'd' → logprob: -1.6585922241210938
    3. '#' → logprob: -1.7835922241210938
    4. 'a' → logprob: -2.2835922241210938
    5. 'import' → logprob: -2.9085922241210938
    6. '\n' → logprob: -2.9085922241210938
    7. '_' → logprob: -3.1585922241210938
    8. '' → logprob: -3.1585922241210938
    9. '`' → logprob: -4.033592224121094
    10. '*' → logprob: -4.158592224121094

Token 14: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.5812323689460754
    2. ' collections' → logprob: -1.4562323093414307
    3. ' sys' → logprob: -2.9562323093414307
    4. 'sys' → logprob: -3.5812323093414307
    5. ' fractions' → logprob: -3.5812323093414307
    6. 'operator' → logprob: -3.8312323093414307
    7. ' operator' → logprob: -3.9562323093414307
    8. 'random' → logprob: -4.45623254776001
    9. ' random' → logprob: -4.83123254776001
    10. '_' → logprob: -4.83123254776001

Token 15: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.714839518070221
    2. ' import' → logprob: -0.839839518070221
    3. '.' → logprob: -2.589839458465576
    4. ' ' → logprob: -6.214839458465576
    5. '<|end|>' → logprob: -6.964839458465576
    6. '```' → logprob: -7.964839458465576
    7. '.import' → logprob: -8.589839935302734
    8. '.Counter' → logprob: -8.964839935302734
    9. '	import' → logprob: -9.714839935302734
    10. ' .' → logprob: -9.839839935302734

Token 16: ' *
' (ID: 2099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004827749449759722
    2. ' defaultdict' → logprob: -5.504827976226807
    3. ' import' → logprob: -7.754827976226807
    4. '_' → logprob: -8.879827499389648
    5. ' abc' → logprob: -9.254827499389648
    6. ' ```' → logprob: -10.254827499389648
    7. ' _' → logprob: -10.879827499389648
    8. 'import' → logprob: -12.129827499389648
    9. '  ' → logprob: -12.379827499389648
    10. ' ' → logprob: -12.504827499389648

Token 17: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5199336409568787
    2. 'd' → logprob: -1.2699337005615234
    3. '#' → logprob: -3.6449337005615234
    4. ' ' → logprob: -3.6449337005615234
    5. 'def' → logprob: -4.019933700561523
    6. 'a' → logprob: -4.019933700561523
    7. 'from' → logprob: -4.894933700561523
    8. '_' → logprob: -5.394933700561523
    9. ',' → logprob: -5.769933700561523
    10. ' 
' → logprob: -5.894933700561523

Token 18: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.39953893423080444
    2. ' functools' → logprob: -1.8995389938354492
    3. 'heap' → logprob: -2.399538993835449
    4. ' operator' → logprob: -3.274538993835449
    5. ' typing' → logprob: -4.149538993835449
    6. 'operator' → logprob: -4.774538993835449
    7. '_' → logprob: -5.149538993835449
    8. ' sys' → logprob: -5.774538993835449
    9. ' random' → logprob: -5.899538993835449
    10. ' queue' → logprob: -6.024538993835449

Token 19: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.054500666621607e-06
    2. 'import' → logprob: -13.62500286102295
    3. 'queue' → logprob: -14.62500286102295
    4. 'i' → logprob: -14.87500286102295
    5. 'n' → logprob: -15.75000286102295
    6. 's' → logprob: -16.000003814697266
    7. 'o' → logprob: -16.125003814697266
    8. 'u' → logprob: -16.375003814697266
    9. ' queue' → logprob: -16.375003814697266
    10. 'a' → logprob: -16.500003814697266

Token 20: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.026927366852760315
    2. 'import' → logprob: -3.6519274711608887
    3. '<|end|>' → logprob: -7.776927471160889
    4. ' ' → logprob: -8.77692699432373
    5. '.' → logprob: -10.15192699432373
    6. '	import' → logprob: -12.65192699432373
    7. '_import' → logprob: -13.02692699432373
    8. '.import' → logprob: -13.40192699432373
    9. '  ' → logprob: -13.77692699432373
    10. ' Import' → logprob: -13.90192699432373

Token 21: ' *
' (ID: 2099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05464877933263779
    2. ' import' → logprob: -3.6796488761901855
    3. ' *' → logprob: -3.6796488761901855
    4. 'import' → logprob: -6.5546488761901855
    5. '  ' → logprob: -7.4296488761901855
    6. '*' → logprob: -8.054648399353027
    7. ' ```' → logprob: -8.804648399353027
    8. '<|end|>' → logprob: -9.304648399353027
    9. ' _' → logprob: -10.179648399353027
    10. ' ' → logprob: -10.179648399353027

Token 22: 'from' (ID: 2845)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3103455901145935
    2. '#' → logprob: -2.6853456497192383
    3. '\' → logprob: -2.8103456497192383
    4. '\n' → logprob: -3.5603456497192383
    5. 'a' → logprob: -3.6853456497192383
    6. '' → logprob: -3.9353456497192383
    7. 'import' → logprob: -4.060345649719238
    8. 'def' → logprob: -4.185345649719238
    9. '_' → logprob: -4.810345649719238
    10. 'n' → logprob: -5.185345649719238

Token 23: ' random' (ID: 7526)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -1.1039384603500366
    2. ' sys' → logprob: -1.6039384603500366
    3. 'operator' → logprob: -2.103938579559326
    4. ' functools' → logprob: -2.228938579559326
    5. 'random' → logprob: -2.728938579559326
    6. ' random' → logprob: -2.978938579559326
    7. 'sys' → logprob: -2.978938579559326
    8. ' fractions' → logprob: -4.103938579559326
    9. '_' → logprob: -4.228938579559326
    10. ' copy' → logprob: -4.978938579559326

Token 24: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10775772482156754
    2. 'import' → logprob: -2.732757806777954
    3. ' ' → logprob: -3.357757806777954
    4. '<|end|>' → logprob: -6.482757568359375
    5. '.' → logprob: -7.357757568359375
    6. '  ' → logprob: -10.357757568359375
    7. '_import' → logprob: -10.857757568359375
    8. ' im' → logprob: -10.982757568359375
    9. '_' → logprob: -11.732757568359375
    10. '	import' → logprob: -11.857757568359375

Token 25: ' *
' (ID: 2099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0017764460062608123
    2. '  ' → logprob: -6.626776218414307
    3. 'space' → logprob: -8.876776695251465
    4. ' *' → logprob: -9.376776695251465
    5. ' space' → logprob: -9.501776695251465
    6. '_' → logprob: -10.376776695251465
    7. ' _' → logprob: -10.751776695251465
    8. ' ```' → logprob: -11.126776695251465
    9. 'import' → logprob: -11.501776695251465
    10. ' '' → logprob: -11.501776695251465

Token 26: 'from' (ID: 2845)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5864318013191223
    2. 'r' → logprob: -1.7114317417144775
    3. '_' → logprob: -2.8364317417144775
    4. 'a' → logprob: -3.0864317417144775
    5. '*' → logprob: -3.3364317417144775
    6. ' ' → logprob: -3.4614317417144775
    7. '#' → logprob: -3.5864317417144775
    8. 'n' → logprob: -3.8364317417144775
    9. 'import' → logprob: -4.211431980133057
    10. 'i' → logprob: -5.211431980133057

Token 27: ' decimal' (ID: 26964)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2593834102153778
    2. ' string' → logprob: -2.3843834400177
    3. 'sys' → logprob: -3.1343834400177
    4. ' functools' → logprob: -3.6343834400177
    5. 'string' → logprob: -4.384383201599121
    6. ' ' → logprob: -4.884383201599121
    7. ' os' → logprob: -5.009383201599121
    8. ' itertools' → logprob: -5.259383201599121
    9. '_' → logprob: -5.384383201599121
    10. ' time' → logprob: -5.509383201599121

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05382629111409187
    2. ' ' → logprob: -3.303826332092285
    3. 'import' → logprob: -4.178826332092285
    4. '<|end|>' → logprob: -8.678826332092285
    5. '_import' → logprob: -9.053826332092285
    6. '	import' → logprob: -11.053826332092285
    7. '.' → logprob: -11.678826332092285
    8. '_' → logprob: -12.053826332092285
    9. ' ```' → logprob: -12.428826332092285
    10. '.import' → logprob: -12.553826332092285

Token 29: ' *
' (ID: 2099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023905660957098007
    2. '.' → logprob: -4.2739057540893555
    3. ' Decimal' → logprob: -5.8989057540893555
    4. '.Decimal' → logprob: -6.0239057540893555
    5. '<|end|>' → logprob: -6.2739057540893555
    6. ' *' → logprob: -7.2739057540893555
    7. ' import' → logprob: -7.7739057540893555
    8. ' .' → logprob: -8.023905754089355
    9. 'import' → logprob: -8.398905754089355
    10. '*' → logprob: -8.398905754089355

Token 30: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9215288758277893
    2. '#' → logprob: -1.5465288162231445
    3. 'a' → logprob: -1.5465288162231445
    4. 'import' → logprob: -3.1715288162231445
    5. 'i' → logprob: -3.4215288162231445
    6. '*' → logprob: -4.1715288162231445
    7. 'n' → logprob: -4.4215288162231445
    8. ' ' → logprob: -4.7965288162231445
    9. ' 
' → logprob: -4.9215288162231445
    10. 'r' → logprob: -5.0465288162231445

Token 31: ' sys' (ID: 12228)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3392321467399597
    2. ' os' → logprob: -1.4642322063446045
    3. ' sys' → logprob: -3.2142322063446045
    4. ' re' → logprob: -5.339231967926025
    5. ' math' → logprob: -5.839231967926025
    6. '_' → logprob: -6.214231967926025
    7. '  ' → logprob: -6.464231967926025
    8. ' _' → logprob: -6.589231967926025
    9. ' numpy' → logprob: -7.464231967926025
    10. ' itertools' → logprob: -7.589231967926025

Token 32: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9755695462226868
    2. '.' → logprob: -1.100569486618042
    3. '\n' → logprob: -1.850569486618042
    4. '' → logprob: -2.475569486618042
    5. '\' → logprob: -4.100569725036621
    6. '

' → logprob: -4.725569725036621
    7. 'import' → logprob: -5.100569725036621
    8. 'newline' → logprob: -5.225569725036621
    9. '
' → logprob: -5.350569725036621
    10. '<|end|>' → logprob: -6.350569725036621

Token 33: 'sys' (ID: 17324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.25975510478019714
    2. '#' → logprob: -3.1347551345825195
    3. '
' → logprob: -3.1347551345825195
    4. 'def' → logprob: -3.2597551345825195
    5. '\n' → logprob: -4.1347551345825195
    6. 'import' → logprob: -4.1347551345825195
    7. 'r' → logprob: -4.3847551345825195
    8. '' → logprob: -4.5097551345825195
    9. '\' → logprob: -4.6347551345825195
    10. 'n' → logprob: -5.0097551345825195

Token 34: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.0590548703912646e-05
    2. ' .' → logprob: -11.875030517578125
    3. '.user' → logprob: -12.500030517578125
    4. '.readline' → logprob: -12.625030517578125
    5. '.`' → logprob: -13.000030517578125
    6. '.stdout' → logprob: -13.000030517578125
    7. '.import' → logprob: -13.625030517578125
    8. '.stdin' → logprob: -13.750030517578125
    9. '.setdefault' → logprob: -14.000030517578125
    10. '."""' → logprob: -14.125030517578125

Token 35: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.004766291938722134
    2. '_rec' → logprob: -5.504766464233398
    3. '_int' → logprob: -8.129766464233398
    4. '_precision' → logprob: -9.254766464233398
    5. '_limit' → logprob: -9.629766464233398
    6. ' recursion' → logprob: -10.254766464233398
    7. 'set' → logprob: -10.379766464233398
    8. 'limit' → logprob: -10.504766464233398
    9. '_version' → logprob: -10.879766464233398
    10. '_trace' → logprob: -11.004766464233398

Token 36: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.000932421418838203
    2. 'urs' → logprob: -7.500932216644287
    3. 'ur' → logprob: -8.000932693481445
    4. 'ursive' → logprob: -10.375932693481445
    5. 'urf' → logprob: -12.125932693481445
    6. 'urse' → logprob: -13.250932693481445
    7. 'limit' → logprob: -13.500932693481445
    8. 'ursor' → logprob: -13.875932693481445
    9. 'urst' → logprob: -13.875932693481445
    10. 'usr' → logprob: -14.875932693481445

Token 37: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0017491996986791492
    2. '_limit' → logprob: -6.376749038696289
    3. 'lim' → logprob: -10.001749038696289
    4. 'depth' → logprob: -14.501749038696289
    5. ' limit' → logprob: -15.251749038696289
    6. 'ault' → logprob: -15.626749038696289
    7. '_l' → logprob: -16.25174903869629
    8. '_' → logprob: -16.25174903869629
    9. '_lim' → logprob: -16.25174903869629
    10. '_depth' → logprob: -16.62674903869629

Token 38: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.226628895296017e-06
    2. ' (' → logprob: -12.625007629394531
    3. '(
' → logprob: -13.625007629394531
    4. '()' → logprob: -14.000007629394531
    5. '((' → logprob: -14.750007629394531
    6. '(

' → logprob: -14.750007629394531
    7. '("("' → logprob: -15.375007629394531
    8. '<|end|>' → logprob: -16.12500762939453
    9. '('' → logprob: -16.62500762939453
    10. '(int' → logprob: -16.62500762939453

Token 39: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06198751926422119
    2. '100' → logprob: -2.8119874000549316
    3. '999' → logprob: -11.68698787689209
    4. ' ' → logprob: -11.81198787689209
    5. '500' → logprob: -13.68698787689209
    6. '1' → logprob: -14.31198787689209
    7. '300' → logprob: -14.56198787689209
    8. '400' → logprob: -14.56198787689209
    9. '200' → logprob: -15.06198787689209
    10. '900' → logprob: -15.43698787689209

Token 40: ' **' (ID: 6240)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.023348432034254074
    2. '**' → logprob: -4.023348331451416
    3. '00' → logprob: -5.398348331451416
    4. '0' → logprob: -7.648348331451416
    5. '6' → logprob: -8.773348808288574
    6. '7' → logprob: -11.523348808288574
    7. '8' → logprob: -12.273348808288574
    8. '```' → logprob: -12.523348808288574
    9. '007' → logprob: -12.898348808288574
    10. ' **' → logprob: -13.273348808288574

Token 41: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.3136727809906006
    2. '9' → logprob: -1.3136727809906006
    3. '8' → logprob: -7.81367301940918
    4. '6' → logprob: -11.93867301940918
    5. '**' → logprob: -15.68867301940918
    6. '```' → logprob: -17.06367301940918
    7. ' ' → logprob: -18.68867301940918
    8. '

' → logprob: -18.93867301940918
    9. '10' → logprob: -19.31367301940918
    10. '+' → logprob: -19.31367301940918

Token 42: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.28206074237823486
    2. '9' → logprob: -1.4070607423782349
    3. '8' → logprob: -7.032060623168945
    4. '6' → logprob: -10.532060623168945
    5. '**' → logprob: -15.032060623168945
    6. '```' → logprob: -16.532060623168945
    7. '10' → logprob: -17.657060623168945
    8. '

' → logprob: -17.657060623168945
    9. '``' → logprob: -17.907060623168945
    10. '+' → logprob: -18.219560623168945

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.25000286102295
    3. ' )' → logprob: -14.12500286102295
    4. '))' → logprob: -15.37500286102295
    5. ')
' → logprob: -16.875001907348633
    6. ')

' → logprob: -17.125001907348633
    7. '),' → logprob: -18.750001907348633
    8. ')`' → logprob: -18.875001907348633
    9. ')#' → logprob: -19.125001907348633
    10. ' ' → logprob: -19.250001907348633

Token 44: 'int' (ID: 491)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6783501505851746
    2. 'n' → logprob: -1.4283502101898193
    3. '

' → logprob: -1.6783502101898193
    4. '\n' → logprob: -3.5533502101898193
    5. 'def' → logprob: -4.30334997177124
    6. '
' → logprob: -4.80334997177124
    7. '' → logprob: -5.17834997177124
    8. '\' → logprob: -5.30334997177124
    9. 'class' → logprob: -6.55334997177124
    10. 'input' → logprob: -7.05334997177124

Token 45: '1' (ID: 16)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.9560618996620178
    2. '(' → logprob: -1.331061840057373
    3. '_' → logprob: -2.081061840057373
    4. '64' → logprob: -2.581061840057373
    5. '()' → logprob: -3.331061840057373
    6. 's' → logprob: -4.331061840057373
    7. ' ' → logprob: -4.581061840057373
    8. 'er' → logprob: -4.706061840057373
    9. '  ' → logprob: -4.831061840057373
    10. 'eger' → logprob: -4.831061840057373

Token 46: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6979997754096985
    2. 'put' → logprob: -1.3229997158050537
    3. 'o' → logprob: -2.6979997158050537
    4. 'n' → logprob: -3.3229997158050537
    5. 'ent' → logprob: -3.6979997158050537
    6. 'def' → logprob: -4.072999954223633
    7. 's' → logprob: -4.322999954223633
    8. '(' → logprob: -4.572999954223633
    9. 'puts' → logprob: -5.072999954223633
    10. '_' → logprob: -5.322999954223633

Token 47: ' lambda' (ID: 27871)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.082292079925537
    2. 'lambda' → logprob: -1.457292079925537
    3. '0' → logprob: -1.707292079925537
    4. '(int' → logprob: -1.832292079925537
    5. '(lambda' → logprob: -3.832292079925537
    6. '1' → logprob: -4.332292079925537
    7. ' lambda' → logprob: -4.332292079925537
    8. '(' → logprob: -4.457292079925537
    9. 'input' → logprob: -4.707292079925537
    10. ' int' → logprob: -4.957292079925537

Token 48: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2593919634819031
    2. 'x' → logprob: -1.6343920230865479
    3. ' :' → logprob: -4.884391784667969
    4. ':' → logprob: -4.884391784667969
    5. ' s' → logprob: -5.134391784667969
    6. 's' → logprob: -5.634391784667969
    7. 'a' → logprob: -5.759391784667969
    8. ' a' → logprob: -5.759391784667969
    9. '_' → logprob: -7.384391784667969
    10. ' n' → logprob: -7.759391784667969

Token 49: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010588377714157104
    2. ':int' → logprob: -4.8855881690979
    3. ':x' → logprob: -5.8855881690979
    4. ' :' → logprob: -9.135588645935059
    5. ':list' → logprob: -10.260588645935059
    6. ':void' → logprob: -10.885588645935059
    7. 'int' → logprob: -11.510588645935059
    8. '[int' → logprob: -12.760588645935059
    9. 'x' → logprob: -12.885588645935059
    10. ':return' → logprob: -13.135588645935059

Token 50: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2823273837566376
    2. 'int' → logprob: -1.40732741355896
    3. '[int' → logprob: -7.782327175140381
    4. ' x' → logprob: -8.407327651977539
    5. '(int' → logprob: -8.532327651977539
    6. ' ord' → logprob: -8.907327651977539
    7. ' ' → logprob: -9.532327651977539
    8. 'x' → logprob: -10.407327651977539
    9. ' map' → logprob: -10.782327651977539
    10. '	int' → logprob: -11.032327651977539

Token 51: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.22560393810272217
    2. '(' → logprob: -1.6006039381027222
    3. '(input' → logprob: -9.350604057312012
    4. 'x' → logprob: -9.475604057312012
    5. 's' → logprob: -12.350604057312012
    6. ' (' → logprob: -12.475604057312012
    7. '1' → logprob: -12.850604057312012
    8. '(str' → logprob: -12.975604057312012
    9. '(
' → logprob: -13.225604057312012
    10. '((' → logprob: -13.225604057312012

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006416652468033135
    2. '.strip' → logprob: -7.625641822814941
    3. '[' → logprob: -9.250641822814941
    4. '))' → logprob: -11.375641822814941
    5. '.readline' → logprob: -11.375641822814941
    6. ' )' → logprob: -11.500641822814941
    7. '),' → logprob: -12.500641822814941
    8. '.split' → logprob: -12.750641822814941
    9. '())' → logprob: -12.750641822814941
    10. '(x' → logprob: -13.000641822814941

Token 53: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4238091707229614
    2. '(input' → logprob: -1.6738091707229614
    3. 'input' → logprob: -2.548809051513672
    4. '()' → logprob: -3.548809051513672
    5. '(x' → logprob: -3.923809051513672
    6. ',' → logprob: -4.423809051513672
    7. '.readline' → logprob: -5.548809051513672
    8. 's' → logprob: -6.048809051513672
    9. '(stdin' → logprob: -6.298809051513672
    10. '(sys' → logprob: -6.423809051513672

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003177952254191041
    2. ' ' → logprob: -5.753178119659424
    3. '0' → logprob: -15.878177642822266
    4. '<|end|>' → logprob: -17.628177642822266
    5. ' ' → logprob: -17.753177642822266
    6. '2' → logprob: -18.440677642822266
    7. '  ' → logprob: -18.565677642822266
    8. '	' → logprob: -18.815677642822266
    9. '' → logprob: -19.065677642822266
    10. '   ' → logprob: -19.190677642822266

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '2' → logprob: -18.50004005432129
    4. '0' → logprob: -18.50004005432129
    5. '<|end|>' → logprob: -19.81254005432129
    6. '  ' → logprob: -19.93754005432129
    7. '...' → logprob: -20.12504005432129
    8. '4' → logprob: -20.50004005432129
    9. '111' → logprob: -20.50004005432129
    10. '﻿' → logprob: -20.62504005432129

Token 56: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36456507444381714
    2. 'def' → logprob: -1.364565134048462
    3. 'newline' → logprob: -3.739565134048462
    4. '\n' → logprob: -4.864564895629883
    5. '#' → logprob: -5.364564895629883
    6. 'n' → logprob: -5.739564895629883
    7. 'input' → logprob: -6.239564895629883
    8. '' → logprob: -6.239564895629883
    9. '\' → logprob: -6.364564895629883
    10. '<|end|>' → logprob: -6.489564895629883

Token 57: 'p' (ID: 79)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07800839841365814
    2. 'def' → logprob: -3.4530084133148193
    3. '\' → logprob: -3.9530084133148193
    4. '\n' → logprob: -4.32800817489624
    5. 'newline' → logprob: -5.57800817489624
    6. 'n' → logprob: -5.95300817489624
    7. 'input' → logprob: -6.45300817489624
    8. '' → logprob: -6.82800817489624
    9. '#' → logprob: -7.70300817489624
    10. '

' → logprob: -8.203008651733398

Token 58: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0050958301872015
    2. 'ass' → logprob: -6.255095958709717
    3. 'arse' → logprob: -7.255095958709717
    4. 'ath' → logprob: -7.380095958709717
    5. 'ar' → logprob: -7.755095958709717
    6. 'er' → logprob: -8.505095481872559
    7. 'ow' → logprob: -8.880095481872559
    8. 'rim' → logprob: -9.380095481872559
    9. 'def' → logprob: -9.880095481872559
    10. 'rin' → logprob: -9.880095481872559

Token 59: 'D' (ID: 35)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.3192330300807953
    2. 'r' → logprob: -1.6942330598831177
    3. ' =' → logprob: -2.819232940673828
    4. '=' → logprob: -4.444232940673828
    5. 'w' → logprob: -5.819232940673828
    6. 'ower' → logprob: -5.944232940673828
    7. '(' → logprob: -6.069232940673828
    8. 'o' → logprob: -6.319232940673828
    9. '2' → logprob: -6.569232940673828
    10. 'owl' → logprob: -6.819232940673828

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18887841701507568
    2. '=' → logprob: -2.0638785362243652
    3. '(' → logprob: -4.063878536224365
    4. '=[]' → logprob: -4.563878536224365
    5. '[' → logprob: -5.438878536224365
    6. 'array' → logprob: -6.188878536224365
    7. '_array' → logprob: -6.938878536224365
    8. '[]' → logprob: -6.938878536224365
    9. 'x' → logprob: -7.313878536224365
    10. 'def' → logprob: -7.438878536224365

Token 61: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.35260921716690063
    2. ' lambda' → logprob: -1.3526091575622559
    3. '(lambda' → logprob: -3.352609157562256
    4. '[]' → logprob: -6.352609157562256
    5. '=lambda' → logprob: -6.977609157562256
    6. '[' → logprob: -7.477609157562256
    7. ' []' → logprob: -8.727609634399414
    8. ' [' → logprob: -9.602609634399414
    9. 'list' → logprob: -9.977609634399414
    10. '[][]' → logprob: -11.477609634399414

Token 62: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.17035101354122162
    2. 'lambda' → logprob: -2.420351028442383
    3. ' x' → logprob: -3.170351028442383
    4. 'x' → logprob: -4.170351028442383
    5. '(lambda' → logprob: -5.545351028442383
    6. ' ' → logprob: -5.795351028442383
    7. ' list' → logprob: -7.920351028442383
    8. ' (' → logprob: -8.045351028442383
    9. ' p' → logprob: -8.295351028442383
    10. '  ' → logprob: -8.420351028442383

Token 63: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018315229564905167
    2. ' :' → logprob: -4.768315315246582
    3. '[' → logprob: -5.143315315246582
    4. ',' → logprob: -6.643315315246582
    5. ':x' → logprob: -6.768315315246582
    6. ':[' → logprob: -7.268315315246582
    7. ',x' → logprob: -8.268315315246582
    8. 'x' → logprob: -8.268315315246582
    9. '[x' → logprob: -9.893315315246582
    10. ':list' → logprob: -10.643315315246582

Token 64: ' print' (ID: 2123)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.5530847311019897
    2. 'print' → logprob: -1.8030847311019897
    3. '[' → logprob: -2.1780848503112793
    4. '[[' → logprob: -2.9280848503112793
    5. 'list' → logprob: -3.3030848503112793
    6. ' [' → logprob: -3.9280848503112793
    7. '[(' → logprob: -4.303084850311279
    8. '[list' → logprob: -5.053084850311279
    9. ' print' → logprob: -5.428084850311279
    10. ' list' → logprob: -6.178084850311279

Token 65: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.14589308202266693
    2. '(' → logprob: -2.145893096923828
    3. '(x' → logprob: -4.395893096923828
    4. '('' → logprob: -6.020893096923828
    5. '([' → logprob: -6.270893096923828
    6. '((' → logprob: -6.895893096923828
    7. '(list' → logprob: -7.645893096923828
    8. '(len' → logprob: -8.270893096923828
    9. '(*(' → logprob: -9.395893096923828
    10. '(['' → logprob: -9.770893096923828

Token 66: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009554674848914146
    2. '['' → logprob: -5.384554862976074
    3. 'map' → logprob: -6.259554862976074
    4. '[' → logprob: -6.759554862976074
    5. '["' → logprob: -7.009554862976074
    6. '('' → logprob: -7.634554862976074
    7. '(x' → logprob: -8.509554862976074
    8. '[x' → logprob: -9.384554862976074
    9. '("' → logprob: -10.009554862976074
    10. '(['' → logprob: -10.509554862976074

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14815613627433777
    2. ')' → logprob: -2.02315616607666
    3. '[' → logprob: -5.27315616607666
    4. '[],' → logprob: -9.02315616607666
    5. ' ,' → logprob: -10.39815616607666
    6. '[]' → logprob: -10.39815616607666
    7. ',m' → logprob: -11.14815616607666
    8. '2' → logprob: -11.14815616607666
    9. ',key' → logprob: -11.39815616607666
    10. '[][]' → logprob: -11.64815616607666

Token 68: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.0002481078845448792
    2. ' sep' → logprob: -8.500247955322266
    3. 'se' → logprob: -10.125247955322266
    4. ')' → logprob: -12.625247955322266
    5. 'end' → logprob: -14.750247955322266
    6. '*' → logprob: -14.875247955322266
    7. 'separator' → logprob: -15.625247955322266
    8. '2' → logprob: -16.125247955322266
    9. ' ' → logprob: -17.125247955322266
    10. '0' → logprob: -17.250247955322266

Token 69: '="\' (ID: 129534)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.6644641160964966
    2. '='\' → logprob: -1.1644641160964966
    3. '=' → logprob: -1.7894641160964966
    4. '="\' → logprob: -5.414463996887207
    5. '="' → logprob: -6.539463996887207
    6. '=\' → logprob: -8.539463996887207
    7. ''' → logprob: -9.914463996887207
    8. '=',' → logprob: -9.914463996887207
    9. '=
' → logprob: -10.289463996887207
    10. '=

' → logprob: -11.164463996887207

Token 70: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00992855615913868
    2. ' ' → logprob: -4.6349287033081055
    3. ' \' → logprob: -9.384928703308105
    4. '\n' → logprob: -10.134928703308105
    5. ' n' → logprob: -10.759928703308105
    6. 't' → logprob: -12.009928703308105
    7. '"' → logprob: -12.134928703308105
    8. 's' → logprob: -12.759928703308105
    9. ' "' → logprob: -13.009928703308105
    10. '
' → logprob: -13.384928703308105

Token 71: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007350223604589701
    2. ')' → logprob: -5.007350444793701
    3. ')")' → logprob: -7.382350444793701
    4. ')"' → logprob: -12.007349967956543
    5. ' )' → logprob: -13.382349967956543
    6. '")
' → logprob: -13.632349967956543
    7. ' ")' → logprob: -14.007349967956543
    8. '"' → logprob: -14.132349967956543
    9. '}")' → logprob: -14.132349967956543
    10. '",' → logprob: -15.007349967956543

Token 72: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.232177272439003
    2. 'def' → logprob: -2.107177257537842
    3. '\n' → logprob: -3.607177257537842
    4. '\' → logprob: -3.857177257537842
    5. 'input' → logprob: -3.857177257537842
    6. 'd' → logprob: -5.482177257537842
    7. 'data' → logprob: -5.607177257537842
    8. '#' → logprob: -5.732177257537842
    9. '
' → logprob: -6.607177257537842
    10. 'a' → logprob: -6.982177257537842

Token 73: ' II' (ID: 9839)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6282809376716614
    2. ' solve' → logprob: -1.1282808780670166
    3. ' dfs' → logprob: -2.0032808780670166
    4. 'solve' → logprob: -6.003281116485596
    5. ' bfs' → logprob: -6.503281116485596
    6. ' ' → logprob: -6.878281116485596
    7. ' solution' → logprob: -7.628281116485596
    8. ' input' → logprob: -7.753281116485596
    9. 'dfs' → logprob: -8.003280639648438
    10. ' factorial' → logprob: -8.378280639648438

Token 74: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009359975229017437
    2. '()' → logprob: -7.125936031341553
    3. ' ():' → logprob: -9.125935554504395
    4. '():
' → logprob: -11.000935554504395
    5. '(' → logprob: -12.500935554504395
    6. ' ()' → logprob: -13.375935554504395
    7. '().' → logprob: -15.250935554504395
    8. '()*' → logprob: -16.00093650817871
    9. '(),' → logprob: -16.87593650817871
    10. '();' → logprob: -17.00093650817871

Token 75: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.005413165781646967
    2. 'return' → logprob: -5.380413055419922
    3. ' int' → logprob: -8.005413055419922
    4. '   ' → logprob: -8.005413055419922
    5. 'int' → logprob: -9.380413055419922
    6. ' ' → logprob: -10.880413055419922
    7. ' input' → logprob: -11.130413055419922
    8. '    ' → logprob: -12.630413055419922
    9. ' ' → logprob: -13.380413055419922
    10. '	return' → logprob: -13.630413055419922

Token 76: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03033049777150154
    2. ' int' → logprob: -3.9053304195404053
    3. 'input' → logprob: -4.905330657958984
    4. 'map' → logprob: -6.655330657958984
    5. ' input' → logprob: -7.280330657958984
    6. ' map' → logprob: -8.030330657958984
    7. '<int' → logprob: -11.905330657958984
    8. 'list' → logprob: -12.030330657958984
    9. 'sys' → logprob: -12.155330657958984
    10. '[int' → logprob: -12.655330657958984

Token 77: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0037510290276259184
    2. '(' → logprob: -5.753750801086426
    3. '(sys' → logprob: -7.503750801086426
    4. 'input' → logprob: -11.128750801086426
    5. '(int' → logprob: -13.128750801086426
    6. '(stdin' → logprob: -13.253750801086426
    7. '(inp' → logprob: -13.628750801086426
    8. '(eval' → logprob: -14.503750801086426
    9. '(next' → logprob: -14.753750801086426
    10. '(open' → logprob: -15.003750801086426

Token 78: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.1041145626222715e-05
    2. '.' → logprob: -11.625011444091797
    3. '.readline' → logprob: -13.750011444091797
    4. 'stdin' → logprob: -14.375011444091797
    5. '(stdin' → logprob: -15.500011444091797
    6. '.argv' → logprob: -16.000011444091797
    7. '.stdout' → logprob: -17.500011444091797
    8. ' stdin' → logprob: -18.125011444091797
    9. '.std' → logprob: -20.000011444091797
    10. '.input' → logprob: -21.250011444091797

Token 79: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -8.77627644513268e-06
    2. '.' → logprob: -12.250008583068848
    3. ' readline' → logprob: -12.750008583068848
    4. '.stdin' → logprob: -14.625008583068848
    5. '.read' → logprob: -14.875008583068848
    6. '().' → logprob: -15.500008583068848
    7. 'read' → logprob: -17.500009536743164
    8. ').' → logprob: -18.500009536743164
    9. ' .' → logprob: -19.000009536743164
    10. '.readlines' → logprob: -19.000009536743164

Token 80: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1605173796415329
    2. '().' → logprob: -1.9105173349380493
    3. '()' → logprob: -8.160517692565918
    4. ' ())' → logprob: -12.910517692565918
    5. '())
' → logprob: -13.285517692565918
    6. '(' → logprob: -13.910517692565918
    7. '();)' → logprob: -14.410517692565918
    8. ')' → logprob: -14.535517692565918
    9. '()))' → logprob: -14.910517692565918
    10. '()]' → logprob: -15.410517692565918

Token 81: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00012976066500414163
    2. ' def' → logprob: -9.500129699707031
    3. '
' → logprob: -10.125129699707031
    4. '<|end|>' → logprob: -11.625129699707031
    5. '\' → logprob: -13.125129699707031
    6. 'ndef' → logprob: -14.125129699707031
    7. '<|end|>' → logprob: -14.375129699707031
    8. '()' → logprob: -14.500129699707031
    9. '```' → logprob: -14.875129699707031
    10. '	def' → logprob: -15.125129699707031

Token 82: ' MI' (ID: 32682)
  Prédit: 'MI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MI' → logprob: -0.6479380130767822
    2. 'LS' → logprob: -1.6479380130767822
    3. 'LI' → logprob: -1.7729380130767822
    4. ' MI' → logprob: -2.8979380130767822
    5. 'L' → logprob: -4.022937774658203
    6. 'MIS' → logprob: -4.397937774658203
    7. 'IS' → logprob: -5.022937774658203
    8. 'M' → logprob: -5.272937774658203
    9. ' LS' → logprob: -5.397937774658203
    10. ' LI' → logprob: -5.522937774658203

Token 83: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.21279704570770264
    2. 'N' → logprob: -2.587797164916992
    3. '()' → logprob: -2.962797164916992
    4. 'n' → logprob: -3.587797164916992
    5. 'S' → logprob: -4.587797164916992
    6. 'ST' → logprob: -4.837797164916992
    7. 'nit' → logprob: -5.837797164916992
    8. 'nt' → logprob: -6.212797164916992
    9. 'L' → logprob: -6.462797164916992
    10. 'T' → logprob: -6.712797164916992

Token 84: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7576124668121338
    2. ' map' → logprob: -1.2576124668121338
    3. ' return' → logprob: -1.7576124668121338
    4. 'list' → logprob: -3.007612466812134
    5. 'map' → logprob: -4.132612228393555
    6. 'return' → logprob: -4.757612228393555
    7. ' tuple' → logprob: -8.757612228393555
    8. ' [' → logprob: -9.757612228393555
    9. ' ' → logprob: -10.007612228393555
    10. '[' → logprob: -10.257612228393555

Token 85: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.38895756006240845
    2. ' map' → logprob: -1.3889575004577637
    3. 'list' → logprob: -2.7639575004577637
    4. ' list' → logprob: -4.638957500457764
    5. '[' → logprob: -8.888957977294922
    6. '	map' → logprob: -11.138957977294922
    7. '(map' → logprob: -11.138957977294922
    8. 'tuple' → logprob: -12.138957977294922
    9. ' ' → logprob: -12.388957977294922
    10. ' [' → logprob: -13.263957977294922

Token 86: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005934244254603982
    2. 'int' → logprob: -7.750593662261963
    3. '(' → logprob: -8.750593185424805
    4. '<int' → logprob: -12.750593185424805
    5. '=int' → logprob: -14.250593185424805
    6. ' int' → logprob: -15.625593185424805
    7. '[int' → logprob: -15.750593185424805
    8. '(lambda' → logprob: -16.250593185424805
    9. '	int' → logprob: -16.625593185424805
    10. ']int' → logprob: -16.625593185424805

Token 87: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.015456555411219597
    2. ',' → logprob: -4.265456676483154
    3. 'sys' → logprob: -7.390456676483154
    4. ',(' → logprob: -8.265456199645996
    5. '=sys' → logprob: -8.390456199645996
    6. ' (' → logprob: -8.890456199645996
    7. ' sys' → logprob: -10.765456199645996
    8. ' ,' → logprob: -11.015456199645996
    9. '(' → logprob: -12.015456199645996
    10. '	sys' → logprob: -12.265456199645996

Token 88: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.048612456768751144
    2. ' sys' → logprob: -3.048612356185913
    3. '	sys' → logprob: -11.923612594604492
    4. ' ' → logprob: -12.048612594604492
    5. '(sys' → logprob: -12.298612594604492
    6. ')' → logprob: -12.798612594604492
    7. '=sys' → logprob: -13.048612594604492
    8. 'system' → logprob: -14.048612594604492
    9. '  ' → logprob: -14.173612594604492
    10. '   ' → logprob: -14.548612594604492

Token 89: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.003245800966396928
    2. 'stdin' → logprob: -5.878245830535889
    3. '.' → logprob: -7.753245830535889
    4. '(stdin' → logprob: -12.12824535369873
    5. '.stdout' → logprob: -12.62824535369873
    6. '.std' → logprob: -14.25324535369873
    7. '.readline' → logprob: -14.50324535369873
    8. ' stdin' → logprob: -14.87824535369873
    9. '=sys' → logprob: -14.87824535369873
    10. '```' → logprob: -15.50324535369873

Token 90: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0012836871901527047
    2. '().' → logprob: -6.751283645629883
    3. 'read' → logprob: -9.876283645629883
    4. '.' → logprob: -11.126283645629883
    5. '.readlines' → logprob: -11.251283645629883
    6. ' readline' → logprob: -11.626283645629883
    7. ')' → logprob: -12.251283645629883
    8. '.stdin' → logprob: -12.376283645629883
    9. 'stdin' → logprob: -12.376283645629883
    10. '.read' → logprob: -12.501283645629883

Token 91: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02291569858789444
    2. '())' → logprob: -3.8979156017303467
    3. '()' → logprob: -6.647915840148926
    4. '.readline' → logprob: -7.272915840148926
    5. ')' → logprob: -8.147915840148926
    6. '()).' → logprob: -10.272915840148926
    7. 'line' → logprob: -11.022915840148926
    8. ' ())' → logprob: -11.272915840148926
    9. ' ().' → logprob: -11.772915840148926
    10. '()))' → logprob: -12.522915840148926

Token 92: 'split' (ID: 13627)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.003970354795455933
    2. 'rstrip' → logprob: -6.378970146179199
    3. ')' → logprob: -6.503970146179199
    4. ' readline' → logprob: -8.1289701461792
    5. '.readline' → logprob: -8.6289701461792
    6. 'split' → logprob: -8.7539701461792
    7. 'strip' → logprob: -9.0039701461792
    8. ' ' → logprob: -12.1289701461792
    9. '```' → logprob: -13.7539701461792
    10. 'reader' → logprob: -14.1289701461792

Token 93: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05342089384794235
    2. ')' → logprob: -3.0534207820892334
    3. '()' → logprob: -5.5534210205078125
    4. '))' → logprob: -7.4284210205078125
    5. '()))' → logprob: -8.428421020507812
    6. '())
' → logprob: -9.178421020507812
    7. '(' → logprob: -11.428421020507812
    8. ' ())' → logprob: -11.678421020507812
    9. '()
' → logprob: -12.678421020507812
    10. ' )' → logprob: -13.428421020507812

Token 94: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005100222188048065
    2. 'd' → logprob: -7.750510215759277
    3. '\' → logprob: -9.875510215759277
    4. '```' → logprob: -11.250510215759277
    5. 'ndef' → logprob: -12.875510215759277
    6. 'D' → logprob: -13.000510215759277
    7. 'de' → logprob: -13.375510215759277
    8. '
' → logprob: -13.375510215759277
    9. ' def' → logprob: -14.000510215759277
    10. '\n' → logprob: -14.250510215759277

Token 95: ' MI' (ID: 32682)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.0073155430145561695
    2. 'LS' → logprob: -5.507315635681152
    3. 'L' → logprob: -6.132315635681152
    4. 'SI' → logprob: -7.507315635681152
    5. ' LI' → logprob: -8.257315635681152
    6. 'LM' → logprob: -9.007315635681152
    7. 'S' → logprob: -10.757315635681152
    8. 'li' → logprob: -11.007315635681152
    9. 'MI' → logprob: -11.257315635681152
    10. 'I' → logprob: -11.257315635681152

Token 96: '1' (ID: 16)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09162477403879166
    2. '():' → logprob: -2.4666247367858887
    3. '())' → logprob: -6.216624736785889
    4. '()*' → logprob: -8.841625213623047
    5. ')' → logprob: -9.216625213623047
    6. '():
' → logprob: -9.341625213623047
    7. '()>' → logprob: -9.341625213623047
    8. '(' → logprob: -9.841625213623047
    9. '()]' → logprob: -10.091625213623047
    10. '().' → logprob: -10.466625213623047

Token 97: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0013001153711229563
    2. '()' → logprob: -6.75130033493042
    3. '):' → logprob: -9.501299858093262
    4. '():
' → logprob: -10.626299858093262
    5. '0' → logprob: -11.376299858093262
    6. '1' → logprob: -11.751299858093262
    7. '()>' → logprob: -13.251299858093262
    8. '(' → logprob: -13.501299858093262
    9. ':' → logprob: -13.501299858093262
    10. ')' → logprob: -13.626299858093262

Token 98: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.035258468240499496
    2. '()' → logprob: -4.2852582931518555
    3. 'return' → logprob: -4.4102582931518555
    4. '():' → logprob: -5.0352582931518555
    5. ' ()' → logprob: -6.4102582931518555
    6. ' ' → logprob: -8.910258293151855
    7. ':return' → logprob: -9.035258293151855
    8. ' =' → logprob: -9.285258293151855
    9. ' ():' → logprob: -9.410258293151855
    10. ':' → logprob: -10.035258293151855

Token 99: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.062333330512046814
    2. ' map' → logprob: -2.812333345413208
    3. 'int' → logprob: -8.312333106994629
    4. '(map' → logprob: -9.937333106994629
    5. ' int' → logprob: -11.062333106994629
    6. 'm' → logprob: -11.312333106994629
    7. '[int' → logprob: -11.312333106994629
    8. '	map' → logprob: -11.687333106994629
    9. 'imap' → logprob: -12.187333106994629
    10. ' ' → logprob: -12.312333106994629

Token 100: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04881933331489563
    2. '(lambda' → logprob: -3.0488193035125732
    3. 'int' → logprob: -8.673819541931152
    4. 'lambda' → logprob: -10.298819541931152
    5. '(' → logprob: -10.673819541931152
    6. '<int' → logprob: -13.298819541931152
    7. '[int' → logprob: -14.548819541931152
    8. '(in' → logprob: -15.173819541931152
    9. '=int' → logprob: -15.548819541931152
    10. ' int' → logprob: -15.673819541931152

Token 101: '1' (ID: 16)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.03863060846924782
    2. ',' → logprob: -3.288630723953247
    3. '(x' → logprob: -8.038630485534668
    4. '=sys' → logprob: -9.413630485534668
    5. ',(' → logprob: -9.788630485534668
    6. '(' → logprob: -10.038630485534668
    7. 'sys' → logprob: -10.663630485534668
    8. ',x' → logprob: -11.163630485534668
    9. ',s' → logprob: -11.413630485534668
    10. ' (' → logprob: -11.538630485534668

Token 102: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.18426600098609924
    2. ',' → logprob: -1.8092659711837769
    3. ')' → logprob: -6.059266090393066
    4. '=sys' → logprob: -7.059266090393066
    5. 'sys' → logprob: -7.309266090393066
    6. ' ,' → logprob: -8.309266090393066
    7. '(x' → logprob: -9.559266090393066
    8. ' sys' → logprob: -9.934266090393066
    9. '),' → logprob: -10.059266090393066
    10. ',s' → logprob: -10.309266090393066

Token 103: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00043913270928896964
    2. ' sys' → logprob: -7.750439167022705
    3. '(sys' → logprob: -11.875438690185547
    4. 'input' → logprob: -14.125438690185547
    5. '=sys' → logprob: -15.000438690185547
    6. ')' → logprob: -15.125438690185547
    7. 'split' → logprob: -16.375438690185547
    8. '	sys' → logprob: -16.625438690185547
    9. ' ' → logprob: -16.875438690185547
    10. 'system' → logprob: -17.000438690185547

Token 104: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00715174525976181
    2. 'stdin' → logprob: -5.0071516036987305
    3. '(stdin' → logprob: -8.38215160369873
    4. '.readline' → logprob: -8.75715160369873
    5. '().' → logprob: -10.75715160369873
    6. '.stdout' → logprob: -11.13215160369873
    7. '.' → logprob: -11.75715160369873
    8. '=sys' → logprob: -13.88215160369873
    9. ')' → logprob: -14.00715160369873
    10. ' stdin' → logprob: -14.38215160369873

Token 105: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4828031659126282
    2. '().' → logprob: -0.9828031659126282
    3. '())' → logprob: -4.8578033447265625
    4. '()' → logprob: -7.3578033447265625
    5. '().__' → logprob: -9.607803344726562
    6. '.readlines' → logprob: -9.732803344726562
    7. ')' → logprob: -9.732803344726562
    8. '.stdin' → logprob: -10.982803344726562
    9. '.' → logprob: -11.107803344726562
    10. '()[' → logprob: -11.232803344726562

Token 106: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8550976164988242e-05
    2. '())' → logprob: -11.000018119812012
    3. '()' → logprob: -13.375018119812012
    4. ' ().' → logprob: -15.500018119812012
    5. ')' → logprob: -17.625019073486328
    6. '.readline' → logprob: -18.625019073486328
    7. '()))' → logprob: -18.750019073486328
    8. '()
' → logprob: -19.000019073486328
    9. '(' → logprob: -19.250019073486328
    10. '()[' → logprob: -19.375019073486328

Token 107: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00018149138486478478
    2. 'strip' → logprob: -9.375181198120117
    3. 'rstrip' → logprob: -9.625181198120117
    4. 'read' → logprob: -11.125181198120117
    5. ' split' → logprob: -12.000181198120117
    6. 'spl' → logprob: -12.250181198120117
    7. ')' → logprob: -12.500181198120117
    8. '(split' → logprob: -15.125181198120117
    9. '())' → logprob: -15.625181198120117
    10. 's' → logprob: -15.750181198120117

Token 108: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09568679332733154
    2. ')' → logprob: -2.595686912536621
    3. '()' → logprob: -4.095686912536621
    4. '())
' → logprob: -12.595686912536621
    5. ' ())' → logprob: -13.095686912536621
    6. '()
' → logprob: -13.470686912536621
    7. '();)' → logprob: -13.720686912536621
    8. '))' → logprob: -13.720686912536621
    9. '(' → logprob: -14.095686912536621
    10. '()]' → logprob: -14.345686912536621

Token 109: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22079719603061676
    2. 'd' → logprob: -1.7207971811294556
    3. '\' → logprob: -4.095797061920166
    4. 'D' → logprob: -6.720797061920166
    5. '```' → logprob: -8.345797538757324
    6. '_' → logprob: -8.470797538757324
    7. '\n' → logprob: -8.595797538757324
    8. '#' → logprob: -9.345797538757324
    9. '()' → logprob: -9.470797538757324
    10. 'n' → logprob: -9.720797538757324

Token 110: ' MF' (ID: 72127)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.17509105801582336
    2. 'I' → logprob: -2.425091028213501
    3. 'LS' → logprob: -3.425091028213501
    4. 'SI' → logprob: -4.05009126663208
    5. ' LI' → logprob: -4.80009126663208
    6. 'S' → logprob: -5.42509126663208
    7. 'L' → logprob: -5.80009126663208
    8. 'IS' → logprob: -5.92509126663208
    9. 'input' → logprob: -6.67509126663208
    10. ' LS' → logprob: -6.92509126663208

Token 111: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00043913270928896964
    2. '()' → logprob: -7.750439167022705
    3. '():
' → logprob: -12.750438690185547
    4. '()>' → logprob: -13.000438690185547
    5. ' ():' → logprob: -14.250438690185547
    6. '):' → logprob: -15.000438690185547
    7. '().__' → logprob: -15.125438690185547
    8. '())' → logprob: -15.250438690185547
    9. '();' → logprob: -15.750438690185547
    10. '()">' → logprob: -15.750438690185547

Token 112: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.046105969697237015
    2. ' return' → logprob: -3.1711058616638184
    3. '()' → logprob: -6.546105861663818
    4. 'lambda' → logprob: -6.921105861663818
    5. 'def' → logprob: -8.546106338500977
    6. ')' → logprob: -8.671106338500977
    7. 'float' → logprob: -8.671106338500977
    8. ' lambda' → logprob: -9.046106338500977
    9. '():' → logprob: -12.171106338500977
    10. ' float' → logprob: -12.546106338500977

Token 113: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011097692884504795
    2. 'float' → logprob: -4.7610979080200195
    3. ' map' → logprob: -6.0110979080200195
    4. ' float' → logprob: -11.13609790802002
    5. 'flo' → logprob: -12.76109790802002
    6. ' ' → logprob: -13.13609790802002
    7. '   ' → logprob: -13.13609790802002
    8. 'm' → logprob: -13.51109790802002
    9. '	map' → logprob: -13.51109790802002
    10. 'list' → logprob: -13.51109790802002

Token 114: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -6.468279752880335e-05
    2. '(' → logprob: -9.750064849853516
    3. 'float' → logprob: -12.625064849853516
    4. '(int' → logprob: -13.750064849853516
    5. '=float' → logprob: -13.750064849853516
    6. '<float' → logprob: -14.375064849853516
    7. ',float' → logprob: -16.000064849853516
    8. '(lambda' → logprob: -16.250064849853516
    9. ' float' → logprob: -16.875064849853516
    10. '(f' → logprob: -17.250064849853516

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010059681721031666
    2. '(sys' → logprob: -4.635059833526611
    3. '(),' → logprob: -9.010059356689453
    4. ')' → logprob: -9.260059356689453
    5. '=sys' → logprob: -10.510059356689453
    6. 'sys' → logprob: -10.760059356689453
    7. ',s' → logprob: -11.260059356689453
    8. ' ,' → logprob: -11.760059356689453
    9. ',System' → logprob: -12.010059356689453
    10. ',float' → logprob: -12.885059356689453

Token 116: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.034955866634845734
    2. '(sys' → logprob: -3.5349559783935547
    3. ' sys' → logprob: -5.284955978393555
    4. ')' → logprob: -9.409955978393555
    5. '=sys' → logprob: -11.034955978393555
    6. '	sys' → logprob: -11.159955978393555
    7. '<|end|>' → logprob: -12.409955978393555
    8. 's' → logprob: -12.909955978393555
    9. 'system' → logprob: -13.284955978393555
    10. '(' → logprob: -13.534955978393555

Token 117: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0003001888981088996
    2. 'stdin' → logprob: -8.125300407409668
    3. '.stdout' → logprob: -12.750300407409668
    4. '.' → logprob: -14.875300407409668
    5. '(stdin' → logprob: -15.000300407409668
    6. '.readline' → logprob: -15.375300407409668
    7. '.std' → logprob: -16.25029945373535
    8. '```' → logprob: -16.50029945373535
    9. '.argv' → logprob: -16.62529945373535
    10. ' stdin' → logprob: -16.75029945373535

Token 118: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.029881002381443977
    2. '().' → logprob: -3.529881000518799
    3. '()' → logprob: -9.279881477355957
    4. '())' → logprob: -11.029881477355957
    5. ')' → logprob: -11.529881477355957
    6. '.' → logprob: -12.654881477355957
    7. '.readlines' → logprob: -12.779881477355957
    8. ' readline' → logprob: -13.279881477355957
    9. '.stdin' → logprob: -13.779881477355957
    10. '().__' → logprob: -14.279881477355957

Token 119: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008910943870432675
    2. '()' → logprob: -7.500891208648682
    3. '())' → logprob: -8.000890731811523
    4. ' ().' → logprob: -13.375890731811523
    5. ')' → logprob: -15.000890731811523
    6. '()
' → logprob: -15.875890731811523
    7. '()[' → logprob: -15.875890731811523
    8. '());' → logprob: -16.125890731811523
    9. ' ()' → logprob: -16.125890731811523
    10. '.readline' → logprob: -16.250890731811523

Token 120: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001358400477329269
    2. 'read' → logprob: -9.87513542175293
    3. 'strip' → logprob: -10.00013542175293
    4. ')' → logprob: -10.75013542175293
    5. 'rstrip' → logprob: -11.37513542175293
    6. '())' → logprob: -13.12513542175293
    7. '(split' → logprob: -13.12513542175293
    8. ' split' → logprob: -14.25013542175293
    9. '()' → logprob: -14.37513542175293
    10. '.readline' → logprob: -15.37513542175293

Token 121: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2132790982723236
    2. '())' → logprob: -1.963279128074646
    3. '()' → logprob: -2.9632790088653564
    4. '()
' → logprob: -11.838278770446777
    5. ')
' → logprob: -12.463278770446777
    6. '())
' → logprob: -12.588278770446777
    7. ' )' → logprob: -13.088278770446777
    8. '(' → logprob: -13.213278770446777
    9. ' ())' → logprob: -13.338278770446777
    10. '))' → logprob: -14.338278770446777

Token 122: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013393278641160578
    2. 'd' → logprob: -9.250133514404297
    3. '\' → logprob: -11.875133514404297
    4. 'D' → logprob: -11.875133514404297
    5. '```' → logprob: -12.000133514404297
    6. '()' → logprob: -12.500133514404297
    7. 'ndef' → logprob: -12.750133514404297
    8. 'de' → logprob: -12.750133514404297
    9. ')' → logprob: -13.875133514404297
    10. 'n' → logprob: -14.000133514404297

Token 123: ' LI' (ID: 14875)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.7614049911499023
    2. 'S' → logprob: -1.3864049911499023
    3. 'LI' → logprob: -2.0114049911499023
    4. 'SI' → logprob: -3.0114049911499023
    5. 'input' → logprob: -3.1364049911499023
    6. 'L' → logprob: -4.261404991149902
    7. ' LS' → logprob: -4.761404991149902
    8. ' input' → logprob: -4.886404991149902
    9. ' S' → logprob: -5.136404991149902
    10. 'I' → logprob: -5.386404991149902

Token 124: '():' (ID: 9442)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.6019614934921265
    2. 'n' → logprob: -1.6019614934921265
    3. 'ST' → logprob: -2.101961612701416
    4. 'ne' → logprob: -2.851961612701416
    5. '()' → logprob: -3.601961612701416
    6. '():' → logprob: -3.976961612701416
    7. 'N' → logprob: -5.226961612701416
    8. 'nt' → logprob: -5.476961612701416
    9. 'nst' → logprob: -5.976961612701416
    10. '1' → logprob: -6.601961612701416

Token 125: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.027041304856538773
    2. 'list' → logprob: -4.027041435241699
    3. ' lambda' → logprob: -4.777041435241699
    4. 'lambda' → logprob: -7.902041435241699
    5. ' return' → logprob: -10.5270414352417
    6. ' map' → logprob: -11.4020414352417
    7. ' lamb' → logprob: -11.7770414352417
    8. ' sys' → logprob: -12.2770414352417
    9. 'return' → logprob: -12.9020414352417
    10. ' ' → logprob: -13.2770414352417

Token 126: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.003184363478794694
    2. ' list' → logprob: -5.7531843185424805
    3. '[list' → logprob: -12.12818431854248
    4. '[' → logprob: -14.62818431854248
    5. 'map' → logprob: -14.75318431854248
    6. 'sys' → logprob: -15.87818431854248
    7. '	list' → logprob: -16.628185272216797
    8. 'ist' → logprob: -16.878185272216797
    9. '(list' → logprob: -17.253185272216797
    10. '=list' → logprob: -17.503185272216797

Token 127: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00014561474381480366
    2. 'map' → logprob: -9.25014591217041
    3. '(' → logprob: -10.12514591217041
    4. '(int' → logprob: -11.87514591217041
    5. ' map' → logprob: -13.87514591217041
    6. '(M' → logprob: -14.12514591217041
    7. ',map' → logprob: -15.87514591217041
    8. '	map' → logprob: -16.000144958496094
    9. '<|end|>' → logprob: -16.000144958496094
    10. '(m' → logprob: -16.500144958496094

Token 128: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.006006828509271e-05
    2. 'int' → logprob: -9.500080108642578
    3. '<int' → logprob: -13.125080108642578
    4. '(' → logprob: -13.250080108642578
    5. '[int' → logprob: -14.125080108642578
    6. '=int' → logprob: -15.250080108642578
    7. ',int' → logprob: -16.125080108642578
    8. ' int' → logprob: -16.500080108642578
    9. ']int' → logprob: -16.625080108642578
    10. ':int' → logprob: -17.125080108642578

Token 129: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.15456423163414001
    2. ',' → logprob: -2.029564142227173
    3. 'sys' → logprob: -4.529564380645752
    4. '(' → logprob: -8.279563903808594
    5. ' sys' → logprob: -8.779563903808594
    6. 'MI' → logprob: -9.154563903808594
    7. ')' → logprob: -9.404563903808594
    8. '=sys' → logprob: -9.404563903808594
    9. ',(' → logprob: -9.904563903808594
    10. ',int' → logprob: -10.029563903808594

Token 130: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00038467496051453054
    2. ' sys' → logprob: -7.87538480758667
    3. 'MI' → logprob: -12.875384330749512
    4. '(sys' → logprob: -13.750384330749512
    5. 'lambda' → logprob: -14.875384330749512
    6. 'system' → logprob: -16.000385284423828
    7. 'int' → logprob: -16.375385284423828
    8. 'str' → logprob: -16.500385284423828
    9. 'II' → logprob: -16.625385284423828
    10. 'Sys' → logprob: -17.000385284423828

Token 131: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.010978847742080688
    2. '.readline' → logprob: -4.760978698730469
    3. 'stdin' → logprob: -6.135978698730469
    4. '(stdin' → logprob: -9.385978698730469
    5. '=sys' → logprob: -9.885978698730469
    6. '.' → logprob: -9.885978698730469
    7. 'sys' → logprob: -12.135978698730469
    8. '.stdout' → logprob: -12.510978698730469
    9. '```' → logprob: -14.010978698730469
    10. '(sys' → logprob: -14.635978698730469

Token 132: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0071355318650603294
    2. '=sys' → logprob: -5.882135391235352
    3. '(sys' → logprob: -6.257135391235352
    4. 'sys' → logprob: -6.257135391235352
    5. '().' → logprob: -8.507135391235352
    6. '(stdin' → logprob: -9.382135391235352
    7. 'read' → logprob: -10.132135391235352
    8. ')' → logprob: -10.132135391235352
    9. '.readlines' → logprob: -10.382135391235352
    10. 'stdin' → logprob: -10.757135391235352

Token 133: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -13.87500286102295
    3. '()' → logprob: -14.12500286102295
    4. ' ().' → logprob: -14.25000286102295
    5. '.readline' → logprob: -15.12500286102295
    6. ')' → logprob: -15.75000286102295
    7. '))' → logprob: -17.000003814697266
    8. ' .' → logprob: -17.500003814697266
    9. ').' → logprob: -17.750003814697266
    10. '()))' → logprob: -18.375003814697266

Token 134: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0013225035509094596
    2. 'read' → logprob: -7.251322269439697
    3. 'strip' → logprob: -7.751322269439697
    4. 'rstrip' → logprob: -9.126322746276855
    5. ')' → logprob: -9.626322746276855
    6. 'spl' → logprob: -13.001322746276855
    7. 'decode' → logprob: -13.376322746276855
    8. ' split' → logprob: -13.626322746276855
    9. '.readline' → logprob: -14.376322746276855
    10. ' readline' → logprob: -14.501322746276855

Token 135: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.25356894731521606
    2. '))' → logprob: -1.5035688877105713
    3. '()' → logprob: -6.75356912612915
    4. '()))
' → logprob: -8.003568649291992
    5. '())' → logprob: -9.253568649291992
    6. '))
' → logprob: -11.128568649291992
    7. ')' → logprob: -11.878568649291992
    8. '(' → logprob: -11.878568649291992
    9. ' ))' → logprob: -12.503568649291992
    10. '()))

' → logprob: -12.503568649291992

Token 136: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013321757433004677
    2. '\' → logprob: -10.125133514404297
    3. '()' → logprob: -10.375133514404297
    4. '[]' → logprob: -10.625133514404297
    5. 'D' → logprob: -11.500133514404297
    6. '```' → logprob: -12.125133514404297
    7. ' def' → logprob: -12.250133514404297
    8. '
' → logprob: -13.125133514404297
    9. 'ndef' → logprob: -13.125133514404297
    10. 'd' → logprob: -13.250133514404297

Token 137: ' LI' (ID: 14875)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.4263497292995453
    2. 'LI' → logprob: -1.1763497591018677
    3. ' LS' → logprob: -4.176349639892578
    4. 'L' → logprob: -4.801349639892578
    5. 'LF' → logprob: -5.051349639892578
    6. ' LI' → logprob: -6.051349639892578
    7. 'LL' → logprob: -6.676349639892578
    8. ' L' → logprob: -6.801349639892578
    9. 'list' → logprob: -7.801349639892578
    10. 'SI' → logprob: -7.801349639892578

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.232493564719334e-05
    2. '()' → logprob: -9.625082015991211
    3. '_' → logprob: -11.375082015991211
    4. '(' → logprob: -13.500082015991211
    5. '():' → logprob: -13.750082015991211
    6. '```' → logprob: -14.375082015991211
    7. 'I' → logprob: -15.250082015991211
    8. 'strip' → logprob: -16.00008201599121
    9. 's' → logprob: -16.25008201599121
    10. 'n' → logprob: -16.25008201599121

Token 139: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.009088988415896893
    2. '()' → logprob: -4.75908899307251
    3. '()>' → logprob: -7.88408899307251
    4. '):' → logprob: -10.259088516235352
    5. '()">' → logprob: -10.384088516235352
    6. '=' → logprob: -12.634088516235352
    7. '())' → logprob: -12.634088516235352
    8. '():
' → logprob: -12.759088516235352
    9. '(' → logprob: -12.884088516235352
    10. '()*' → logprob: -13.009088516235352

Token 140: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.28618860244750977
    2. ' return' → logprob: -1.5361886024475098
    3. 'list' → logprob: -3.5361886024475098
    4. ' list' → logprob: -5.91118860244751
    5. '()' → logprob: -7.03618860244751
    6. 'lambda' → logprob: -7.53618860244751
    7. ' lambda' → logprob: -9.161188125610352
    8. '[]' → logprob: -9.536188125610352
    9. 'def' → logprob: -9.661188125610352
    10. '=list' → logprob: -10.286188125610352

Token 141: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00023214559769257903
    2. ' list' → logprob: -8.375231742858887
    3. '[list' → logprob: -13.750231742858887
    4. 'lambda' → logprob: -15.125231742858887
    5. '[' → logprob: -16.625232696533203
    6. 'li' → logprob: -17.000232696533203
    7. '	list' → logprob: -17.875232696533203
    8. 'List' → logprob: -18.000232696533203
    9. 'lis' → logprob: -18.000232696533203
    10. '(list' → logprob: -18.250232696533203

Token 142: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.05427161231637001
    2. '(lambda' → logprob: -3.554271697998047
    3. '(int' → logprob: -3.804271697998047
    4. '(' → logprob: -6.554271697998047
    5. '(list' → logprob: -7.679271697998047
    6. 'map' → logprob: -10.804271697998047
    7. 'int' → logprob: -11.304271697998047
    8. '(L' → logprob: -12.679271697998047
    9. '(line' → logprob: -13.179271697998047
    10. '(function' → logprob: -13.304271697998047

Token 143: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003384422743692994
    2. 'int' → logprob: -8.000338554382324
    3. '[int' → logprob: -13.625338554382324
    4. '<int' → logprob: -13.750338554382324
    5. '(' → logprob: -15.500338554382324
    6. ',int' → logprob: -15.875338554382324
    7. '=int' → logprob: -16.250337600708008
    8. '(lambda' → logprob: -16.250337600708008
    9. ']int' → logprob: -16.375337600708008
    10. ':int' → logprob: -17.750337600708008

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ')' → logprob: -15.500000953674316
    3. 'int' → logprob: -15.625000953674316
    4. '(lambda' → logprob: -16.125
    5. '(sys' → logprob: -16.625
    6. 'lambda' → logprob: -16.875
    7. 'sys' → logprob: -17.375
    8. '(int' → logprob: -18.0
    9. '_' → logprob: -18.125
    10. '```' → logprob: -18.625

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7292167184641585e-05
    2. '(sys' → logprob: -9.875057220458984
    3. 'sys' → logprob: -12.500057220458984
    4. ' ,' → logprob: -14.375057220458984
    5. '=sys' → logprob: -14.750057220458984
    6. ' sys' → logprob: -14.875057220458984
    7. ',s' → logprob: -15.125057220458984
    8. ',map' → logprob: -16.125057220458984
    9. '))' → logprob: -16.250057220458984
    10. ',System' → logprob: -16.625057220458984

Token 146: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -7.588793960167095e-05
    2. ' sys' → logprob: -9.500076293945312
    3. '(sys' → logprob: -14.125076293945312
    4. ')' → logprob: -15.625076293945312
    5. '=sys' → logprob: -16.750076293945312
    6. '	sys' → logprob: -17.375076293945312
    7. 'stdin' → logprob: -19.000076293945312
    8. 'Sys' → logprob: -19.000076293945312
    9. 's' → logprob: -19.125076293945312
    10. 'system' → logprob: -19.375076293945312

Token 147: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.19062671065330505
    2. '.readline' → logprob: -2.440626621246338
    3. '(stdin' → logprob: -2.815626621246338
    4. 'stdin' → logprob: -3.815626621246338
    5. '(sys' → logprob: -6.815626621246338
    6. '=sys' → logprob: -7.315626621246338
    7. '.stdout' → logprob: -7.315626621246338
    8. '))' → logprob: -7.565626621246338
    9. '().' → logprob: -7.690626621246338
    10. 'sys' → logprob: -7.940626621246338

Token 148: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.026901021599769592
    2. '.stdin' → logprob: -4.9019012451171875
    3. '=sys' → logprob: -5.0269012451171875
    4. '().' → logprob: -5.1519012451171875
    5. 'sys' → logprob: -6.4019012451171875
    6. '.readlines' → logprob: -6.7769012451171875
    7. '(sys' → logprob: -6.7769012451171875
    8. 'stdin' → logprob: -7.1519012451171875
    9. '(stdin' → logprob: -7.4019012451171875
    10. '.' → logprob: -7.6519012451171875

Token 149: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.3199920178740285e-05
    2. '))' → logprob: -11.375022888183594
    3. '()))' → logprob: -11.750022888183594
    4. '.' → logprob: -12.875022888183594
    5. '()' → logprob: -14.375022888183594
    6. '.split' → logprob: -15.500022888183594
    7. ' ().' → logprob: -15.875022888183594
    8. '()))
' → logprob: -16.250022888183594
    9. ''s' → logprob: -16.750022888183594
    10. '().__' → logprob: -17.000022888183594

Token 150: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.127333340875339e-06
    2. ')' → logprob: -13.250003814697266
    3. 'spl' → logprob: -13.500003814697266
    4. ' split' → logprob: -14.625003814697266
    5. '(split' → logprob: -14.875003814697266
    6. 'map' → logprob: -16.625003814697266
    7. 'strip' → logprob: -18.125003814697266
    8. '_split' → logprob: -18.125003814697266
    9. 'read' → logprob: -18.250003814697266
    10. 'rstrip' → logprob: -18.750003814697266

Token 151: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2533521056175232
    2. '()))' → logprob: -1.503352165222168
    3. '()' → logprob: -6.628352165222168
    4. '())' → logprob: -9.753352165222168
    5. ')' → logprob: -10.378352165222168
    6. '()))
' → logprob: -12.253352165222168
    7. ' ))' → logprob: -13.128352165222168
    8. '))
' → logprob: -13.503352165222168
    9. '(' → logprob: -13.628352165222168
    10. ')))' → logprob: -14.753352165222168

Token 152: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0032304716296494007
    2. 'd' → logprob: -6.628230571746826
    3. 'D' → logprob: -6.878230571746826
    4. 'n' → logprob: -7.753230571746826
    5. '\' → logprob: -8.128230094909668
    6. 'de' → logprob: -10.503230094909668
    7. '#' → logprob: -10.503230094909668
    8. 'ndef' → logprob: -11.003230094909668
    9. ')' → logprob: -11.628230094909668
    10. '\n' → logprob: -11.753230094909668

Token 153: ' LF' (ID: 107653)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.061939336359500885
    2. 'LI' → logprob: -3.436939239501953
    3. 'LF' → logprob: -4.311939239501953
    4. 'SI' → logprob: -5.061939239501953
    5. 'LL' → logprob: -5.811939239501953
    6. ' LS' → logprob: -6.436939239501953
    7. 'input' → logprob: -6.686939239501953
    8. 'L' → logprob: -6.936939239501953
    9. 'S' → logprob: -7.561939239501953
    10. 'LO' → logprob: -8.686939239501953

Token 154: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00016146517009474337
    2. '()' → logprob: -8.750161170959473
    3. ' ():' → logprob: -13.375161170959473
    4. '():
' → logprob: -14.125161170959473
    5. '()>' → logprob: -14.500161170959473
    6. ' ()' → logprob: -17.00016212463379
    7. '():

' → logprob: -17.37516212463379
    8. '):' → logprob: -17.62516212463379
    9. '()*' → logprob: -17.87516212463379
    10. '().' → logprob: -17.87516212463379

Token 155: ' return' (ID: 622)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20354239642620087
    2. 'list' → logprob: -1.9535423517227173
    3. 'lambda' → logprob: -3.203542470932007
    4. ')' → logprob: -7.203542232513428
    5. 'return' → logprob: -8.203542709350586
    6. ' lambda' → logprob: -8.953542709350586
    7. ']' → logprob: -9.078542709350586
    8. 'li' → logprob: -9.453542709350586
    9. ' ()' → logprob: -9.453542709350586
    10. '()=>' → logprob: -9.453542709350586

Token 156: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.306760805164231e-05
    2. ' list' → logprob: -11.25001335144043
    3. 'li' → logprob: -18.75001335144043
    4. 'lambda' → logprob: -19.00001335144043
    5. '[list' → logprob: -20.50001335144043
    6. '	list' → logprob: -21.00001335144043
    7. 'List' → logprob: -21.12501335144043
    8. '(list' → logprob: -21.50001335144043
    9. 'map' → logprob: -21.75001335144043
    10. 'lst' → logprob: -22.87501335144043

Token 157: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.3358446166384965e-05
    2. '(float' → logprob: -10.500053405761719
    3. '(' → logprob: -10.625053405761719
    4. 'map' → logprob: -13.750053405761719
    5. ',map' → logprob: -16.87505340576172
    6. ' map' → logprob: -17.12505340576172
    7. ' (' → logprob: -17.12505340576172
    8. '_map' → logprob: -17.12505340576172
    9. '(lambda' → logprob: -17.25005340576172
    10. '	map' → logprob: -17.37505340576172

Token 158: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.00018649426056072116
    2. 'float' → logprob: -8.625186920166016
    3. '(' → logprob: -12.375186920166016
    4. '=float' → logprob: -13.500186920166016
    5. '<float' → logprob: -14.125186920166016
    6. ',float' → logprob: -15.125186920166016
    7. ' float' → logprob: -15.500186920166016
    8. '	float' → logprob: -16.750186920166016
    9. '(f' → logprob: -17.000186920166016
    10. '(lambda' → logprob: -17.250186920166016

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001163196051493287
    2. '(sys' → logprob: -6.876163005828857
    3. ',float' → logprob: -9.376163482666016
    4. ' ,' → logprob: -10.876163482666016
    5. ',int' → logprob: -11.751163482666016
    6. 'sys' → logprob: -12.376163482666016
    7. ')' → logprob: -12.626163482666016
    8. ',s' → logprob: -12.751163482666016
    9. '=sys' → logprob: -13.001163482666016
    10. ',System' → logprob: -13.626163482666016

Token 160: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0008397616329602897
    2. ' sys' → logprob: -7.250839710235596
    3. 'float' → logprob: -9.250840187072754
    4. '(sys' → logprob: -10.375840187072754
    5. ')' → logprob: -14.000840187072754
    6. 's' → logprob: -14.750840187072754
    7. '	sys' → logprob: -14.875840187072754
    8. '=sys' → logprob: -14.875840187072754
    9. 'system' → logprob: -15.000840187072754
    10. 'str' → logprob: -16.750839233398438

Token 161: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.3572999835014343
    2. '(sys' → logprob: -1.732300043106079
    3. '=sys' → logprob: -3.232300043106079
    4. '(stdin' → logprob: -3.232300043106079
    5. 'stdin' → logprob: -3.857300043106079
    6. 'sys' → logprob: -3.857300043106079
    7. '.readline' → logprob: -6.4822998046875
    8. '.sys' → logprob: -7.7322998046875
    9. 'ython' → logprob: -8.7322998046875
    10. '(s' → logprob: -9.8572998046875

Token 162: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.005721624940633774
    2. '.stdin' → logprob: -6.380721569061279
    3. '(sys' → logprob: -6.380721569061279
    4. 'sys' → logprob: -7.005721569061279
    5. '=sys' → logprob: -7.255721569061279
    6. '().' → logprob: -7.880721569061279
    7. '(stdin' → logprob: -8.880722045898438
    8. 'stdin' → logprob: -9.255722045898438
    9. '.sys' → logprob: -11.005722045898438
    10. '```' → logprob: -11.255722045898438

Token 163: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.12127808178775e-05
    2. '()' → logprob: -10.000051498413086
    3. '.readline' → logprob: -12.750051498413086
    4. '.' → logprob: -13.250051498413086
    5. '()))' → logprob: -14.625051498413086
    6. '.split' → logprob: -15.875051498413086
    7. '))' → logprob: -16.000051498413086
    8. ')' → logprob: -16.125051498413086
    9. '())' → logprob: -16.750051498413086
    10. '().__' → logprob: -16.875051498413086

Token 164: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.408677290892228e-05
    2. 'read' → logprob: -9.7500638961792
    3. ' split' → logprob: -12.7500638961792
    4. 'strip' → logprob: -13.5000638961792
    5. 'spl' → logprob: -14.2500638961792
    6. '(split' → logprob: -14.7500638961792
    7. '.split' → logprob: -16.375064849853516
    8. ')' → logprob: -16.500064849853516
    9. 'rstrip' → logprob: -16.500064849853516
    10. '```' → logprob: -17.500064849853516

Token 165: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16256922483444214
    2. '()))' → logprob: -1.912569284439087
    3. '()' → logprob: -6.162569046020508
    4. '()))
' → logprob: -9.037569046020508
    5. '))
' → logprob: -9.787569046020508
    6. ')' → logprob: -10.537569046020508
    7. '())' → logprob: -10.787569046020508
    8. '(' → logprob: -12.287569046020508
    9. ' ))' → logprob: -12.287569046020508
    10. '()))

' → logprob: -13.412569046020508

Token 166: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.994086627149954e-05
    2. '\' → logprob: -10.875080108642578
    3. 'n' → logprob: -11.000080108642578
    4. '#' → logprob: -11.875080108642578
    5. 'ndef' → logprob: -11.875080108642578
    6. '<|end|>' → logprob: -12.000080108642578
    7. 'd' → logprob: -12.625080108642578
    8. '\n' → logprob: -12.875080108642578
    9. '
' → logprob: -13.000080108642578
    10. 'data' → logprob: -13.125080108642578

Token 167: ' L' (ID: 451)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.15748611092567444
    2. 'S' → logprob: -2.5324862003326416
    3. 'SI' → logprob: -3.1574862003326416
    4. 'LI' → logprob: -5.1574859619140625
    5. 'input' → logprob: -5.7824859619140625
    6. 'LD' → logprob: -5.9074859619140625
    7. 'L' → logprob: -6.0324859619140625
    8. 's' → logprob: -6.1574859619140625
    9. 'list' → logprob: -6.6574859619140625
    10. 'SS' → logprob: -6.7824859619140625

Token 168: 'LI' (ID: 14313)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00044103997061029077
    2. 'S' → logprob: -8.62544059753418
    3. 'O' → logprob: -9.25044059753418
    4. 'strip' → logprob: -10.50044059753418
    5. 'F' → logprob: -10.62544059753418
    6. 'D' → logprob: -10.62544059753418
    7. 'IN' → logprob: -10.87544059753418
    8. 'P' → logprob: -12.37544059753418
    9. 'In' → logprob: -12.37544059753418
    10. 'LI' → logprob: -12.37544059753418

Token 169: '(rows' (ID: 69648)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009967254009097815
    2. '()' → logprob: -7.0009965896606445
    3. '():
' → logprob: -9.625996589660645
    4. '=' → logprob: -11.875996589660645
    5. '()>' → logprob: -12.750996589660645
    6. ' ():' → logprob: -13.000996589660645
    7. ' =' → logprob: -14.000996589660645
    8. '():

' → logprob: -14.375996589660645
    9. '()*' → logprob: -14.625996589660645
    10. '();' → logprob: -14.625996589660645

Token 170: '_number' (ID: 11733)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007568581495434046
    2. '):
' → logprob: -8.250757217407227
    3. ',' → logprob: -8.625757217407227
    4. ')' → logprob: -8.750757217407227
    5. ',n' → logprob: -10.000757217407227
    6. '(n' → logprob: -10.000757217407227
    7. ' ):' → logprob: -10.125757217407227
    8. '=' → logprob: -11.500757217407227
    9. 'def' → logprob: -13.000757217407227
    10. '):

' → logprob: -13.000757217407227

Token 171: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01474334578961134
    2. ',' → logprob: -4.264743328094482
    3. ')' → logprob: -7.764743328094482
    4. '):
' → logprob: -9.63974380493164
    5. ' ):' → logprob: -10.26474380493164
    6. ',n' → logprob: -11.26474380493164
    7. '=' → logprob: -11.76474380493164
    8. '(n' → logprob: -12.01474380493164
    9. ':' → logprob: -12.63974380493164
    10. '):

' → logprob: -12.76474380493164

Token 172: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.058790598064661026
    2. '   ' → logprob: -2.933790683746338
    3. '	return' → logprob: -6.183790683746338
    4. 'return' → logprob: -6.433790683746338
    5. '    ' → logprob: -8.80879020690918
    6. ' ' → logprob: -9.68379020690918
    7. '   ' → logprob: -12.55879020690918
    8. '[]' → logprob: -12.93379020690918
    9. ':return' → logprob: -12.93379020690918
    10. ' ' → logprob: -12.93379020690918

Token 173: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.2540547251701355
    2. '[' → logprob: -1.5040547847747803
    3. '[List' → logprob: -6.754054546356201
    4. '[int' → logprob: -7.504054546356201
    5. ' [' → logprob: -8.00405502319336
    6. '[line' → logprob: -10.12905502319336
    7. '[str' → logprob: -11.62905502319336
    8. 'list' → logprob: -11.75405502319336
    9. '[len' → logprob: -12.37905502319336
    10. '[l' → logprob: -13.25405502319336

Token 174: 'LI' (ID: 14313)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4741634726524353
    2. 'LI' → logprob: -0.9741634726524353
    3. ' list' → logprob: -10.474163055419922
    4. '[' → logprob: -11.224163055419922
    5. 'li' → logprob: -11.474163055419922
    6. 'LL' → logprob: -11.724163055419922
    7. ' LI' → logprob: -11.849163055419922
    8. 'List' → logprob: -12.099163055419922
    9. 'LIST' → logprob: -12.349163055419922
    10. 'map' → logprob: -12.724163055419922

Token 175: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00011534435179783031
    2. '()]' → logprob: -9.125115394592285
    3. '())' → logprob: -12.875115394592285
    4. ' ()' → logprob: -13.375115394592285
    5. '()
' → logprob: -14.625115394592285
    6. '(sys' → logprob: -14.750115394592285
    7. '（）' → logprob: -15.125115394592285
    8. 'sys' → logprob: -15.750115394592285
    9. 'for' → logprob: -16.00011444091797
    10. '()`' → logprob: -16.25011444091797

Token 176: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11910327523946762
    2. 'for' → logprob: -2.244103193283081
    3. '(' → logprob: -5.36910343170166
    4. ' for' → logprob: -6.74410343170166
    5. '(sys' → logprob: -8.36910343170166
    6. '()]' → logprob: -9.61910343170166
    7. ')' → logprob: -10.36910343170166
    8. '(rows' → logprob: -10.61910343170166
    9. '(i' → logprob: -10.86910343170166
    10. '_' → logprob: -11.24410343170166

Token 177: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.6550729419104755e-05
    2. ' _' → logprob: -11.125036239624023
    3. '_range' → logprob: -11.125036239624023
    4. '_i' → logprob: -12.500036239624023
    5. '_in' → logprob: -13.125036239624023
    6. 'i' → logprob: -15.125036239624023
    7. ' in' → logprob: -15.625036239624023
    8. 'range' → logprob: -16.125036239624023
    9. '_rows' → logprob: -16.125036239624023
    10. '_row' → logprob: -16.375036239624023

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10045801103115082
    2. 'in' → logprob: -2.3504579067230225
    3. 'range' → logprob: -8.350458145141602
    4. ' ' → logprob: -11.975458145141602
    5. 'i' → logprob: -12.975458145141602
    6. '(' → logprob: -13.350458145141602
    7. '  ' → logprob: -13.475458145141602
    8. ' range' → logprob: -13.600458145141602
    9. '_' → logprob: -14.725458145141602
    10. '```' → logprob: -15.600458145141602

Token 179: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.722539834911004e-05
    2. ' range' → logprob: -9.250097274780273
    3. '_' → logprob: -14.625097274780273
    4. '	range' → logprob: -15.125097274780273
    5. '_range' → logprob: -15.625097274780273
    6. '(range' → logprob: -16.375097274780273
    7. 'repeat' → logprob: -19.125097274780273
    8. 'rang' → logprob: -19.250097274780273
    9. '0' → logprob: -19.375097274780273
    10. '[' → logprob: -19.625097274780273

Token 180: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -8.995397365652025e-05
    2. '(' → logprob: -9.500089645385742
    3. 'rows' → logprob: -11.125089645385742
    4. '(
' → logprob: -16.250089645385742
    5. '	rows' → logprob: -16.500089645385742
    6. '(lines' → logprob: -17.375089645385742
    7. '(r' → logprob: -18.625089645385742
    8. ' rows' → logprob: -18.625089645385742
    9. '(columns' → logprob: -18.875089645385742
    10. '((' → logprob: -19.500089645385742

Token 181: '_number' (ID: 11733)
  Prédit: '(rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -0.0184012483805418
    2. 'rows' → logprob: -4.143401145935059
    3. '_number' → logprob: -6.143401145935059
    4. 'number' → logprob: -9.018401145935059
    5. '(' → logprob: -9.893401145935059
    6. '(number' → logprob: -10.768401145935059
    7. '_rows' → logprob: -11.643401145935059
    8. '	rows' → logprob: -12.268401145935059
    9. '_' → logprob: -12.768401145935059
    10. 's' → logprob: -13.518401145935059

Token 182: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004043361986987293
    2. ']' → logprob: -7.875404357910156
    3. ')' → logprob: -11.250404357910156
    4. '()]' → logprob: -11.625404357910156
    5. ')]
' → logprob: -13.500404357910156
    6. '])' → logprob: -15.875404357910156
    7. ']
' → logprob: -16.000404357910156
    8. ')],' → logprob: -16.125404357910156
    9. ')])' → logprob: -16.125404357910156
    10. '')]' → logprob: -16.500404357910156

Token 183: 'd' (ID: 67)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00041220002458430827
    2. '#' → logprob: -9.375411987304688
    3. '```' → logprob: -9.375411987304688
    4. ')' → logprob: -9.750411987304688
    5. '\' → logprob: -10.500411987304688
    6. '\n' → logprob: -10.750411987304688
    7. 'n' → logprob: -10.875411987304688
    8. '
' → logprob: -11.000411987304688
    9. 'ndef' → logprob: -11.500411987304688
    10. 'D' → logprob: -11.625411987304688

Token 184: 'ij' (ID: 681)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.0007373234839178622
    2. 'efs' → logprob: -8.000737190246582
    3. 'e' → logprob: -8.500737190246582
    4. '=' → logprob: -9.875737190246582
    5. 'def' → logprob: -10.625737190246582
    6. ' =' → logprob: -10.750737190246582
    7. 'efa' → logprob: -10.875737190246582
    8. 'eff' → logprob: -11.125737190246582
    9. 'efe' → logprob: -11.250737190246582
    10. 'eft' → logprob: -11.375737190246582

Token 185: ' =' (ID: 314)
  Prédit: 'ijkstra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.35486075282096863
    2. 'ik' → logprob: -2.479860782623291
    3. 'stra' → logprob: -2.729860782623291
    4. 'st' → logprob: -2.729860782623291
    5. 's' → logprob: -3.729860782623291
    6. 'star' → logprob: -3.979860782623291
    7. 'ek' → logprob: -4.979860782623291
    8. 'stance' → logprob: -5.104860782623291
    9. '```' → logprob: -5.229860782623291
    10. 'eka' → logprob: -5.729860782623291

Token 186: ' [(' (ID: 43900)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5343077182769775
    2. '(lambda' → logprob: -1.5343077182769775
    3. 'deque' → logprob: -2.5343077182769775
    4. ' defaultdict' → logprob: -2.7843077182769775
    5. 'default' → logprob: -3.6593077182769775
    6. '[]' → logprob: -4.659307479858398
    7. 'heap' → logprob: -5.034307479858398
    8. 'ijkstra' → logprob: -6.034307479858398
    9. 'dict' → logprob: -6.159307479858398
    10. 'def' → logprob: -6.284307479858398

Token 187: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6225884556770325
    2. '1' → logprob: -1.1225883960723877
    3. '-' → logprob: -1.9975883960723877
    4. '(' → logprob: -6.122588634490967
    5. '(-' → logprob: -8.872588157653809
    6. ' ' → logprob: -12.872588157653809
    7. ')' → logprob: -12.997588157653809
    8. ' -' → logprob: -13.122588157653809
    9. '2' → logprob: -13.372588157653809
    10. '−' → logprob: -13.497588157653809

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01001955196261406
    2. '0' → logprob: -4.635019779205322
    3. ' ,' → logprob: -8.260019302368164
    4. ',
' → logprob: -13.510019302368164
    5. ' ' → logprob: -14.385019302368164
    6. '1' → logprob: -14.510019302368164
    7. '),(' → logprob: -14.635019302368164
    8. ',-' → logprob: -14.760019302368164
    9. ')' → logprob: -14.885019302368164
    10. '[' → logprob: -15.885019302368164

Token 189: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011818927014246583
    2. ' ' → logprob: -6.7511820793151855
    3. '-' → logprob: -11.626181602478027
    4. '1' → logprob: -13.126181602478027
    5. ' -' → logprob: -15.251181602478027
    6. '   ' → logprob: -16.188682556152344
    7. ' ' → logprob: -16.313682556152344
    8. '  ' → logprob: -16.688682556152344
    9. '	' → logprob: -16.751182556152344
    10. '
' → logprob: -17.188682556152344

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.828512363834307e-05
    2. ' ' → logprob: -9.375088691711426
    3. '-' → logprob: -13.000088691711426
    4. '1' → logprob: -13.875088691711426
    5. '   ' → logprob: -17.12508773803711
    6. '
' → logprob: -17.25008773803711
    7. ' -' → logprob: -17.50008773803711
    8. ')' → logprob: -17.68758773803711
    9. '  ' → logprob: -17.68758773803711
    10. '2' → logprob: -17.87508773803711

Token 191: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.08969616144895554
    2. '),
' → logprob: -3.089696168899536
    3. '),(' → logprob: -3.214696168899536
    4. ')' → logprob: -9.839695930480957
    5. '),

' → logprob: -10.214695930480957
    6. ',' → logprob: -11.589695930480957
    7. '),
' → logprob: -12.714695930480957
    8. ' ),' → logprob: -12.964695930480957
    9. ')]' → logprob: -13.589695930480957
    10. ',),' → logprob: -14.589695930480957

Token 192: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.050335053354501724
    2. '(-' → logprob: -3.050335168838501
    3. ' (' → logprob: -6.675334930419922
    4. '0' → logprob: -7.675334930419922
    5. ' (-' → logprob: -11.050334930419922
    6. '-' → logprob: -12.550334930419922
    7. ' ' → logprob: -13.925334930419922
    8. '
' → logprob: -17.800334930419922
    9. ' -' → logprob: -17.925334930419922
    10. '   ' → logprob: -18.050334930419922

Token 193: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2014227956533432
    2. '0' → logprob: -1.7014228105545044
    3. ' ' → logprob: -12.076422691345215
    4. ' -' → logprob: -12.576422691345215
    5. '−' → logprob: -16.32642364501953
    6. ')' → logprob: -17.07642364501953
    7. '1' → logprob: -17.32642364501953
    8. '(' → logprob: -17.32642364501953
    9. '```' → logprob: -17.57642364501953
    10. '-t' → logprob: -18.20142364501953

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003662020608317107
    2. '1' → logprob: -8.1253662109375
    3. ' ,' → logprob: -9.6253662109375
    4. '),' → logprob: -13.2503662109375
    5. ',
' → logprob: -14.2503662109375
    6. ')' → logprob: -14.5003662109375
    7. '<|end|>' → logprob: -14.5003662109375
    8. '-' → logprob: -15.5003662109375
    9. ',-' → logprob: -15.8753662109375
    10. ' ' → logprob: -16.0003662109375

Token 195: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001935065840370953
    2. '-' → logprob: -6.501935005187988
    3. ' ' → logprob: -7.751935005187988
    4. ' -' → logprob: -12.876935005187988
    5. '  ' → logprob: -17.126935958862305
    6. '```' → logprob: -17.126935958862305
    7. '   ' → logprob: -17.751935958862305
    8. '
' → logprob: -17.814435958862305
    9. '+' → logprob: -18.439435958862305
    10. ')' → logprob: -18.564435958862305

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017037445213645697
    2. '-' → logprob: -6.37670373916626
    3. ' ' → logprob: -13.376704216003418
    4. ' -' → logprob: -17.2517032623291
    5. '
' → logprob: -17.3767032623291
    6. '```' → logprob: -17.5017032623291
    7. '+' → logprob: -18.1267032623291
    8. '

' → logprob: -18.8767032623291
    9. '   ' → logprob: -19.0642032623291
    10. ')' → logprob: -19.1892032623291

Token 197: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00032151900813914835
    2. '),(' → logprob: -8.500321388244629
    3. ' ),' → logprob: -10.375321388244629
    4. '),
' → logprob: -10.375321388244629
    5. ')' → logprob: -10.750321388244629
    6. ')]' → logprob: -11.000321388244629
    7. '],' → logprob: -11.625321388244629
    8. ',' → logprob: -12.125321388244629
    9. ')],' → logprob: -13.875321388244629
    10. ',),' → logprob: -14.125321388244629

Token 198: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -6.158350151963532e-05
    2. '(' → logprob: -10.125061988830566
    3. ' (-' → logprob: -11.000061988830566
    4. '-' → logprob: -12.250061988830566
    5. '   ' → logprob: -17.25006103515625
    6. '[-' → logprob: -18.25006103515625
    7. ' ' → logprob: -18.62506103515625
    8. '	' → logprob: -20.25006103515625
    9. '
' → logprob: -20.75006103515625
    10. '```' → logprob: -20.87506103515625

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.37500286102295
    3. '0' → logprob: -13.87500286102295
    4. ',' → logprob: -16.437501907348633
    5. '```' → logprob: -16.750001907348633
    6. '<|end|>' → logprob: -16.750001907348633
    7. 'd' → logprob: -17.750001907348633
    8. '2' → logprob: -18.062501907348633
    9. '-' → logprob: -18.187501907348633
    10. ')' → logprob: -18.187501907348633

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00099958258215338
    2. ' ,' → logprob: -7.375999450683594
    3. '0' → logprob: -8.000999450683594
    4. '<|end|>' → logprob: -10.375999450683594
    5. ' ' → logprob: -12.250999450683594
    6. '1' → logprob: -14.500999450683594
    7. ',
' → logprob: -15.125999450683594
    8. '<|end|>' → logprob: -15.250999450683594
    9. ')' → logprob: -15.375999450683594
    10. '```' → logprob: -15.625999450683594

Token 201: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11285627633333206
    2. ' ' → logprob: -2.237856388092041
    3. '<|end|>' → logprob: -10.362855911254883
    4. ' ' → logprob: -13.612855911254883
    5. ')' → logprob: -14.862855911254883
    6. '  ' → logprob: -15.862855911254883
    7. '```' → logprob: -15.987855911254883
    8. '۰' → logprob: -16.612855911254883
    9. ',' → logprob: -16.675355911254883
    10. ' 
' → logprob: -16.925355911254883

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028052295092493296
    2. ' ' → logprob: -5.877805233001709
    3. ' ' → logprob: -16.440305709838867
    4. ',' → logprob: -16.502805709838867
    5. '<|end|>' → logprob: -17.002805709838867
    6. '۰' → logprob: -17.127805709838867
    7. ')' → logprob: -17.190305709838867
    8. '```' → logprob: -17.440305709838867
    9. '  ' → logprob: -17.752805709838867
    10. '1' → logprob: -18.252805709838867

Token 203: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0017893016338348389
    2. ',' → logprob: -6.501789093017578
    3. ')' → logprob: -8.751789093017578
    4. '),(' → logprob: -9.876789093017578
    5. ' ),' → logprob: -9.876789093017578
    6. ')]' → logprob: -11.501789093017578
    7. '],' → logprob: -12.251789093017578
    8. '<|end|>' → logprob: -12.251789093017578
    9. ',),' → logprob: -13.251789093017578
    10. '},' → logprob: -13.501789093017578

Token 204: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10062047839164734
    2. ' (' → logprob: -2.3506205081939697
    3. '0' → logprob: -7.850620269775391
    4. '<|end|>' → logprob: -10.97562026977539
    5. ' ' → logprob: -11.97562026977539
    6. ',' → logprob: -14.85062026977539
    7. ')' → logprob: -14.85062026977539
    8. '```' → logprob: -17.53812026977539
    9. ' ' → logprob: -17.66312026977539
    10. '﻿' → logprob: -18.16312026977539

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008065330912359059
    2. ' ' → logprob: -7.1258063316345215
    3. '-' → logprob: -13.50080680847168
    4. '```' → logprob: -15.62580680847168
    5. '1' → logprob: -15.75080680847168
    6. ',' → logprob: -16.00080680847168
    7. ' ' → logprob: -16.00080680847168
    8. '00' → logprob: -16.87580680847168
    9. '۰' → logprob: -17.62580680847168
    10. ')' → logprob: -17.81330680847168

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003781224077101797
    2. ',-' → logprob: -8.250377655029297
    3. '-' → logprob: -9.250377655029297
    4. ' ,' → logprob: -10.875377655029297
    5. '1' → logprob: -14.250377655029297
    6. ' -' → logprob: -14.750377655029297
    7. '```' → logprob: -15.375377655029297
    8. ' ,-' → logprob: -15.500377655029297
    9. ',
' → logprob: -16.000377655029297
    10. '-,' → logprob: -16.000377655029297

Token 207: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.246537173457909e-06
    2. ' -' → logprob: -12.375003814697266
    3. '1' → logprob: -18.375003814697266
    4. '```' → logprob: -19.250003814697266
    5. ')' → logprob: -19.375003814697266
    6. '   ' → logprob: -20.250003814697266
    7. ' ' → logprob: -20.500003814697266
    8. '−' → logprob: -20.625003814697266
    9. '-python' → logprob: -20.625003814697266
    10. '-)' → logprob: -20.625003814697266

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ')]' → logprob: -13.25000286102295
    3. ' ' → logprob: -14.62500286102295
    4. ')' → logprob: -15.87500286102295
    5. '```' → logprob: -16.125001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '-' → logprob: -18.000001907348633
    8. '')]' → logprob: -18.375001907348633
    9. ']]' → logprob: -18.500001907348633
    10. '")]' → logprob: -18.750001907348633

Token 209: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0014511867193505168
    2. '),' → logprob: -7.126451015472412
    3. ')' → logprob: -7.376451015472412
    4. ']' → logprob: -11.87645149230957
    5. ')]
' → logprob: -12.50145149230957
    6. ' )' → logprob: -12.62645149230957
    7. '')]' → logprob: -13.50145149230957
    8. ')}' → logprob: -14.00145149230957
    9. ')],' → logprob: -14.00145149230957
    10. '))' → logprob: -14.37645149230957

Token 210: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04815223813056946
    2. 'n' → logprob: -3.923152208328247
    3. '#' → logprob: -4.173152446746826
    4. 'd' → logprob: -4.673152446746826
    5. 'class' → logprob: -6.798152446746826
    6. 'a' → logprob: -8.173151969909668
    7. 'for' → logprob: -8.673151969909668
    8. 'D' → logprob: -8.798151969909668
    9. '.' → logprob: -8.798151969909668
    10. '\' → logprob: -9.673151969909668

Token 211: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3531849980354309
    2. 'main' → logprob: -1.7281849384307861
    3. ' solve' → logprob: -3.103184938430786
    4. 'solve' → logprob: -3.228184938430786
    5. ' bfs' → logprob: -4.353185176849365
    6. ' d' → logprob: -4.353185176849365
    7. 'd' → logprob: -5.228185176849365
    8. ' dfs' → logprob: -6.103185176849365
    9. 'b' → logprob: -6.853185176849365
    10. 'dfs' → logprob: -7.728185176849365

Token 212: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.372294698550832e-06
    2. ' ():' → logprob: -12.375009536743164
    3. '()' → logprob: -13.000009536743164
    4. '(' → logprob: -13.000009536743164
    5. '():
' → logprob: -14.875009536743164
    6. '(:' → logprob: -16.625009536743164
    7. ':' → logprob: -18.250009536743164
    8. '(":' → logprob: -18.250009536743164
    9. '()(' → logprob: -19.125009536743164
    10. '().' → logprob: -19.750009536743164

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027463885489851236
    2. '    ' → logprob: -6.62774658203125
    3. '    
' → logprob: -8.00274658203125
    4. ' pass' → logprob: -8.37774658203125
    5. ' ' → logprob: -9.12774658203125
    6. ' readline' → logprob: -9.37774658203125
    7. '<|end|>' → logprob: -9.50274658203125
    8. 'input' → logprob: -9.62774658203125
    9. ' n' → logprob: -9.87774658203125
    10. 'n' → logprob: -9.87774658203125

Token 214: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5158842206001282
    2. ' ' → logprob: -1.1408841609954834
    3. ' pass' → logprob: -2.6408841609954834
    4. 'n' (adapté à ' n') → logprob: -5.1408843994140625
    5. '    ' → logprob: -5.8908843994140625
    6. 'pass' → logprob: -6.7658843994140625
    7. ' r' → logprob: -7.5158843994140625
    8. ' x' → logprob: -8.390884399414062
    9. ' input' → logprob: -8.515884399414062
    10. '(n' → logprob: -8.640884399414062

Token 215: ',k' (ID: 35155)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13689212501049042
    2. '=' → logprob: -2.261892080307007
    3. ',' → logprob: -3.761892080307007
    4. '=int' → logprob: -8.261892318725586
    5. ' ,' → logprob: -9.011892318725586
    6. ' =
' → logprob: -9.761892318725586
    7. ')' → logprob: -10.261892318725586
    8. ' ' → logprob: -10.636892318725586
    9. '<|end|>' → logprob: -11.261892318725586
    10. '=input' → logprob: -11.761892318725586

Token 216: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1485205888748169
    2. ' =' → logprob: -2.0235204696655273
    3. ',' → logprob: -5.148520469665527
    4. '=int' → logprob: -11.523520469665527
    5. ')' → logprob: -12.648520469665527
    6. ' ,' → logprob: -12.898520469665527
    7. '=input' → logprob: -13.148520469665527
    8. ' ' → logprob: -14.273520469665527
    9. ' =
' → logprob: -14.898520469665527
    10. ',k' → logprob: -15.273520469665527

Token 217: 'MI' (ID: 15470)
  Prédit: 'MI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MI' → logprob: -0.07979483902454376
    2. ' MI' → logprob: -2.5797948837280273
    3. ' map' → logprob: -7.579794883728027
    4. 'map' → logprob: -8.204794883728027
    5. 'II' → logprob: -9.829794883728027
    6. ' ' → logprob: -10.579794883728027
    7. 'LI' → logprob: -10.829794883728027
    8. 'MF' → logprob: -11.079794883728027
    9. 'MAP' → logprob: -13.954794883728027
    10. '   ' → logprob: -13.954794883728027

Token 218: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.2524021157296374e-05
    2. '()
' → logprob: -10.750052452087402
    3. '(' → logprob: -11.375052452087402
    4. '();' → logprob: -11.500052452087402
    5. ' ()' → logprob: -13.000052452087402
    6. '()\' → logprob: -13.000052452087402
    7. '(),' → logprob: -13.500052452087402
    8. '()]' → logprob: -14.500052452087402
    9. '   ' → logprob: -14.500052452087402
    10. ',' → logprob: -14.625052452087402

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.763248860836029
    2. '<|end|>' → logprob: -0.888248860836029
    3. '    
' → logprob: -2.513248920440674
    4. '
' → logprob: -3.638248920440674
    5. ')' → logprob: -5.388248920440674
    6. '<|end|>' → logprob: -5.763248920440674
    7. ',' → logprob: -6.888248920440674
    8. '#' → logprob: -6.888248920440674
    9. ' 
' → logprob: -7.138248920440674
    10. '  
' → logprob: -7.388248920440674

Token 220: ' aa' (ID: 40260)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22025245428085327
    2. 'arr' → logprob: -2.345252513885498
    3. 's' → logprob: -4.095252513885498
    4. 'dp' → logprob: -4.095252513885498
    5. 'A' → logprob: -4.345252513885498
    6. 'l' → logprob: -4.845252513885498
    7. 'lst' → logprob: -4.970252513885498
    8. 'v' → logprob: -5.595252513885498
    9. 'h' → logprob: -5.720252513885498
    10. 'x' → logprob: -5.970252513885498

Token 221: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34852108359336853
    2. ' =' → logprob: -1.223521113395691
    3. '=list' → logprob: -10.72352123260498
    4. ',' → logprob: -10.84852123260498
    5. '=[]' → logprob: -11.09852123260498
    6. ' ' → logprob: -12.84852123260498
    7. '=input' → logprob: -12.97352123260498
    8. '=int' → logprob: -13.09852123260498
    9. '   ' → logprob: -13.34852123260498
    10. ' =[' → logprob: -13.34852123260498

Token 222: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.0001329791557509452
    2. 'list' → logprob: -9.75013256072998
    3. 'LL' → logprob: -10.37513256072998
    4. 'sorted' → logprob: -11.00013256072998
    5. '[' → logprob: -11.12513256072998
    6. ' LI' → logprob: -11.87513256072998
    7. '[]' → logprob: -13.75013256072998
    8. 'set' → logprob: -14.00013256072998
    9. 'LS' → logprob: -14.37513256072998
    10. 'Li' → logprob: -14.50013256072998

Token 223: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.538490950129926e-05
    2. '(' → logprob: -10.875055313110352
    3. ' ()' → logprob: -11.000055313110352
    4. '()
' → logprob: -11.125055313110352
    5. '())' → logprob: -13.750055313110352
    6. '()]' → logprob: -14.125055313110352
    7. '();' → logprob: -14.125055313110352
    8. '(n' → logprob: -15.125055313110352
    9. '().' → logprob: -15.125055313110352
    10. '()

' → logprob: -15.125055313110352

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21557067334651947
    2. '
' → logprob: -2.2155706882476807
    3. '<|end|>' → logprob: -2.8405706882476807
    4. ' ' → logprob: -4.590570449829102
    5. '[' → logprob: -5.465570449829102
    6. '    
' → logprob: -5.840570449829102
    7. ',' → logprob: -6.715570449829102
    8. ' 
' → logprob: -6.715570449829102
    9. ')' → logprob: -7.215570449829102
    10. '    ' → logprob: -7.340570449829102

Token 225: ' bek' (ID: 13183)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.3365646302700043
    2. 'dp' → logprob: -1.7115646600723267
    3. 'from' → logprob: -3.586564540863037
    4. 'cc' → logprob: -4.086564540863037
    5. 'cnt' → logprob: -4.336564540863037
    6. 's' → logprob: -5.336564540863037
    7. 'bb' → logprob: -5.336564540863037
    8. 'freq' → logprob: -5.336564540863037
    9. 'aaa' → logprob: -5.836564540863037
    10. 'pos' → logprob: -6.086564540863037

Token 226: '=[' (ID: 13370)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.399692177772522
    2. ' =' → logprob: -1.274692177772522
    3. 'a' → logprob: -4.149692058563232
    4. '=' → logprob: -4.149692058563232
    5. 'u' → logprob: -5.149692058563232
    6. '=[]
' → logprob: -6.399692058563232
    7. 'idx' → logprob: -6.524692058563232
    8. 'o' → logprob: -6.774692058563232
    9. 'k' → logprob: -6.899692058563232
    10. 'os' → logprob: -7.024692058563232

Token 227: 'False' (ID: 8168)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12951213121414185
    2. 'False' → logprob: -2.254512071609497
    3. 'float' → logprob: -4.754512310028076
    4. '-' → logprob: -5.254512310028076
    5. '(' → logprob: -7.379512310028076
    6. 'int' → logprob: -7.879512310028076
    7. '10' → logprob: -7.879512310028076
    8. 'inf' → logprob: -8.504511833190918
    9. 'n' → logprob: -8.629511833190918
    10. 'True' → logprob: -8.754511833190918

Token 228: ']*(' (ID: 92627)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.14799587428569794
    2. ']' → logprob: -2.147995948791504
    3. ']*(' → logprob: -3.897995948791504
    4. ' for' → logprob: -7.647995948791504
    5. 'for' → logprob: -10.147995948791504
    6. ']+' → logprob: -11.272995948791504
    7. '(n' → logprob: -11.272995948791504
    8. ' ]' → logprob: -11.647995948791504
    9. '(' → logprob: -12.022995948791504
    10. '()]' → logprob: -12.647995948791504

Token 229: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001801801408873871
    2. '10' → logprob: -9.8751802444458
    3. '100' → logprob: -10.0001802444458
    4. 'k' → logprob: -10.0001802444458
    5. 'max' → logprob: -11.3751802444458
    6. '200' → logprob: -12.0001802444458
    7. '2' → logprob: -12.1251802444458
    8. '(n' → logprob: -12.3751802444458
    9. ' n' → logprob: -12.6251802444458
    10. '101' → logprob: -14.0001802444458

Token 230: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.07908575236797333
    2. '0' → logprob: -2.7040858268737793
    3. '000' → logprob: -5.204085826873779
    4. '<n' → logprob: -6.579085826873779
    5. ' <<' → logprob: -7.204085826873779
    6. '1' → logprob: -7.579085826873779
    7. '00' → logprob: -8.079085350036621
    8. '2' → logprob: -8.204085350036621
    9. '<<(' → logprob: -9.204085350036621
    10. '5' → logprob: -9.454085350036621

Token 231: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00075602374272421
    2. 'k' → logprob: -7.250755786895752
    3. '20' → logprob: -10.25075626373291
    4. '10' → logprob: -13.25075626373291
    5. '17' → logprob: -13.25075626373291
    6. '14' → logprob: -13.87575626373291
    7. '12' → logprob: -14.00075626373291
    8. ' n' → logprob: -14.12575626373291
    9. '18' → logprob: -14.12575626373291
    10. '19' → logprob: -14.25075626373291

Token 232: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.3596853831550106e-05
    2. ')
' → logprob: -10.250053405761719
    3. ' )' → logprob: -11.750053405761719
    4. '))' → logprob: -12.125053405761719
    5. '),' → logprob: -14.500053405761719
    6. '```' → logprob: -14.750053405761719
    7. '`)' → logprob: -14.875053405761719
    8. '')' → logprob: -14.875053405761719
    9. ')

' → logprob: -14.875053405761719
    10. '   ' → logprob: -15.125053405761719

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005070210434496403
    2. '<|end|>' → logprob: -6.005070209503174
    3. ' bek' → logprob: -6.630070209503174
    4. '    
' → logprob: -7.880070209503174
    5. ')' → logprob: -8.505070686340332
    6. 'b' → logprob: -9.255070686340332
    7. '  ' → logprob: -9.505070686340332
    8. '    ' → logprob: -9.630070686340332
    9. ' ' → logprob: -9.755070686340332
    10. '[' → logprob: -10.005070686340332

Token 234: ' for' (ID: 395)
  Prédit: 'bek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bek' → logprob: -0.8918647766113281
    2. 'q' → logprob: -1.5168647766113281
    3. 'dp' → logprob: -1.6418647766113281
    4. 'from' → logprob: -2.016864776611328
    5. 'queue' → logprob: -4.266864776611328
    6. 'dq' → logprob: -4.516864776611328
    7. 'que' → logprob: -5.516864776611328
    8. 'b' → logprob: -6.016864776611328
    9. 'd' → logprob: -7.016864776611328
    10. 'res' → logprob: -7.141864776611328

Token 235: ' bit' (ID: 3546)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5944187045097351
    2. 'i' → logprob: -1.3444187641143799
    3. ' mask' → logprob: -2.09441876411438
    4. 'mask' → logprob: -3.96941876411438
    5. ' x' → logprob: -4.094418525695801
    6. 'x' → logprob: -4.844418525695801
    7. ' _' → logprob: -4.969418525695801
    8. ' subset' → logprob: -5.844418525695801
    9. '_' → logprob: -5.969418525695801
    10. 'a' → logprob: -6.219418525695801

Token 236: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03469382971525192
    2. 'in' → logprob: -3.534693717956543
    3. ' ' → logprob: -5.409693717956543
    4. ',' → logprob: -8.659693717956543
    5. '   ' → logprob: -9.909693717956543
    6. ' ,' → logprob: -9.909693717956543
    7. '  ' → logprob: -10.034693717956543
    8. 'n' → logprob: -10.409693717956543
    9. ')' → logprob: -10.784693717956543
    10. '_' → logprob: -11.284693717956543

Token 237: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16024261713027954
    2. ' range' → logprob: -1.9102425575256348
    3. '(' → logprob: -11.535243034362793
    4. '(range' → logprob: -12.660243034362793
    5. ')' → logprob: -13.035243034362793
    6. ' ' → logprob: -13.785243034362793
    7. '   ' → logprob: -14.285243034362793
    8. '	range' → logprob: -14.785243034362793
    9. 'ran' → logprob: -15.035243034362793
    10. '```' → logprob: -15.285243034362793

Token 238: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029837635811418295
    2. '((' → logprob: -6.377983570098877
    3. '(n' → logprob: -6.752983570098877
    4. '(k' → logprob: -9.127984046936035
    5. '   ' → logprob: -13.002984046936035
    6. '1' → logprob: -14.127984046936035
    7. ' (' → logprob: -14.252984046936035
    8. '(
' → logprob: -15.627984046936035
    9. '(len' → logprob: -15.627984046936035
    10. ')' → logprob: -15.877984046936035

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02545507811009884
    2. '(' → logprob: -3.9004549980163574
    3. 'n' → logprob: -5.400454998016357
    4. '0' → logprob: -8.525455474853516
    5. ')' → logprob: -9.775455474853516
    6. 'k' → logprob: -10.150455474853516
    7. '   ' → logprob: -10.150455474853516
    8. '2' → logprob: -10.650455474853516
    9. ' ' → logprob: -11.525455474853516
    10. '(n' → logprob: -12.025455474853516

Token 240: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.6693550944328308
    2. ',' → logprob: -1.0443551540374756
    3. ',n' → logprob: -2.9193551540374756
    4. ')<<' → logprob: -3.2943551540374756
    5. '(' → logprob: -3.7943551540374756
    6. ' ,' → logprob: -5.4193549156188965
    7. '<<(' → logprob: -5.4193549156188965
    8. '(n' → logprob: -6.0443549156188965
    9. '   ' → logprob: -6.1693549156188965
    10. ')' → logprob: -6.1693549156188965

Token 241: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.584239938296378e-06
    2. '   ' → logprob: -12.750007629394531
    3. '(n' → logprob: -12.875007629394531
    4. ' n' → logprob: -13.625007629394531
    5. ')n' → logprob: -15.375007629394531
    6. '	n' → logprob: -15.750007629394531
    7. '```' → logprob: -16.25000762939453
    8. '(' → logprob: -16.37500762939453
    9. 'k' → logprob: -16.37500762939453
    10. ')' → logprob: -16.62500762939453

Token 242: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007645440753549337
    2. '):
' → logprob: -4.882645606994629
    3. ')' → logprob: -10.382645606994629
    4. ' ):' → logprob: -12.882645606994629
    5. '   ' → logprob: -13.132645606994629
    6. '):
' → logprob: -13.257645606994629
    7. ':' → logprob: -13.507645606994629
    8. '):

' → logprob: -15.507645606994629
    9. ''):' → logprob: -16.632644653320312
    10. '       ' → logprob: -16.882644653320312

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0055655138567090034
    2. ' ' → logprob: -6.505565643310547
    3. '<|end|>' → logprob: -6.880565643310547
    4. ',' → logprob: -7.380565643310547
    5. '        
' → logprob: -7.630565643310547
    6. '        ' → logprob: -7.880565643310547
    7. '    ' → logprob: -8.005565643310547
    8. '[' → logprob: -8.505565643310547
    9. '	' → logprob: -8.630565643310547
    10. ' if' → logprob: -8.880565643310547

Token 244: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.907087504863739
    2. 'cnt' → logprob: -1.6570875644683838
    3. 'count' → logprob: -2.907087564468384
    4. 'if' (adapté à ' if') → logprob: -3.032087564468384
    5. ' cnt' → logprob: -3.032087564468384
    6. ' if' → logprob: -3.032087564468384
    7. 'bek' → logprob: -3.282087564468384
    8. 'print' → logprob: -3.532087564468384
    9. 'sum' → logprob: -3.657087564468384
    10. 'for' → logprob: -3.782087564468384

Token 245: ' bek' (ID: 13183)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.6815409660339355
    2. ' (' → logprob: -2.4315409660339355
    3. ' sum' → logprob: -2.4315409660339355
    4. ' bin' → logprob: -2.5565409660339355
    5. 'bit' → logprob: -3.1815409660339355
    6. '(bit' → logprob: -3.1815409660339355
    7. '   ' → logprob: -3.3065409660339355
    8. ' k' → logprob: -3.8065409660339355
    9. 'bin' → logprob: -3.9315409660339355
    10. 'sum' → logprob: -4.0565409660339355

Token 246: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.314625690924004e-05
    2. ' [' → logprob: -10.250073432922363
    3. 'bit' → logprob: -10.625073432922363
    4. '   ' → logprob: -13.000073432922363
    5. '```' → logprob: -13.000073432922363
    6. '(bit' → logprob: -13.500073432922363
    7. '[b' → logprob: -13.500073432922363
    8. ')[' → logprob: -14.125073432922363
    9. ')' → logprob: -14.125073432922363
    10. '
' → logprob: -14.250073432922363

Token 247: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0009426692849956453
    2. ' bit' → logprob: -7.000942707061768
    3. ']' → logprob: -10.87594223022461
    4. '(bit' → logprob: -12.00094223022461
    5. '[' → logprob: -13.25094223022461
    6. '
' → logprob: -13.62594223022461
    7. 'b' → logprob: -14.50094223022461
    8. ')' → logprob: -14.75094223022461
    9. '])' → logprob: -14.75094223022461
    10. '   ' → logprob: -14.87594223022461

Token 248: ']==' (ID: 34128)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.07918509840965271
    2. ']==' → logprob: -2.7041850090026855
    3. ']' → logprob: -4.9541850090026855
    4. ']:
' → logprob: -6.2041850090026855
    5. ' ]' → logprob: -10.079185485839844
    6. ']!=' → logprob: -10.829185485839844
    7. '==' → logprob: -10.954185485839844
    8. ']:
' → logprob: -11.454185485839844
    9. ']>' → logprob: -11.579185485839844
    10. ']=' → logprob: -11.579185485839844

Token 249: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.06548969447612762
    2. ' False' → logprob: -3.0654897689819336
    3. 'True' → logprob: -4.315489768981934
    4. ' True' → logprob: -5.690489768981934
    5. '0' → logprob: -10.815489768981934
    6. '1' → logprob: -13.815489768981934
    7. '=False' → logprob: -14.565489768981934
    8. ' ' → logprob: -15.190489768981934
    9. '   ' → logprob: -15.940489768981934
    10. '(False' → logprob: -15.940489768981934

Token 250: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01971271075308323
    2. ' and' → logprob: -4.269712924957275
    3. ':
' → logprob: -5.269712924957275
    4. '       ' → logprob: -8.644712448120117
    5. 'and' → logprob: -9.644712448120117
    6. ',' → logprob: -10.019712448120117
    7. '):' → logprob: -10.144712448120117
    8. '           ' → logprob: -10.394712448120117
    9. ' :' → logprob: -11.019712448120117
    10. '):
' → logprob: -12.519712448120117

Token 251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5463023781776428
    2. ':' → logprob: -1.796302318572998
    3. ' :' → logprob: -2.546302318572998
    4. '        ' → logprob: -3.171302318572998
    5. '            ' → logprob: -3.671302318572998
    6. ' ' → logprob: -3.796302318572998
    7. '       ' → logprob: -3.921302318572998
    8. '               ' → logprob: -3.921302318572998
    9. ' ' → logprob: -4.671302318572998
    10. ' 
' → logprob: -5.046302318572998

Token 252: ' s' (ID: 265)
  Prédit: 'bek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bek' → logprob: -1.007123589515686
    2. 'for' → logprob: -1.382123589515686
    3. '   ' → logprob: -2.0071234703063965
    4. ' bek' → logprob: -2.5071234703063965
    5. 'continue' → logprob: -3.1321234703063965
    6. ' for' → logprob: -3.5071234703063965
    7. 'print' → logprob: -3.5071234703063965
    8. '           ' → logprob: -4.6321234703063965
    9. ' continue' → logprob: -4.8821234703063965
    10. 'cnt' → logprob: -5.0071234703063965

Token 253: '=sum' (ID: 174693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4491488039493561
    2. ' =' → logprob: -1.0741487741470337
    3. 'um' → logprob: -4.199148654937744
    4. '=sum' → logprob: -5.574148654937744
    5. ' ' → logprob: -6.949148654937744
    6. ',' → logprob: -10.074149131774902
    7. '=set' → logprob: -10.449149131774902
    8. '[' → logprob: -10.699149131774902
    9. '=(' → logprob: -10.699149131774902
    10. '=int' → logprob: -10.699149131774902

Token 254: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7441595196723938
    2. '([' → logprob: -0.7441595196723938
    3. '(
' → logprob: -4.119159698486328
    4. '([(' → logprob: -4.494159698486328
    5. '[' → logprob: -4.994159698486328
    6. 'aa' → logprob: -5.619159698486328
    7. '((' → logprob: -5.619159698486328
    8. '(a' → logprob: -6.244159698486328
    9. '([
' → logprob: -6.244159698486328
    10. '(i' → logprob: -6.619159698486328

Token 255: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23859544098377228
    2. 'for' → logprob: -1.6135954856872559
    3. ' if' → logprob: -5.113595485687256
    4. 'if' → logprob: -5.363595485687256
    5. ' ' → logprob: -7.113595485687256
    6. 'a' → logprob: -7.488595485687256
    7. ')' → logprob: -8.113595008850098
    8. '+' → logprob: -8.863595008850098
    9. 'i' → logprob: -9.488595008850098
    10. '   ' → logprob: -9.613595008850098

Token 256: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5878396034240723
    2. 'i' → logprob: -1.2128396034240723
    3. ' range' → logprob: -3.5878396034240723
    4. ' idx' → logprob: -3.7128396034240723
    5. 'bit' → logprob: -3.7128396034240723
    6. 'range' → logprob: -3.8378396034240723
    7. 'idx' → logprob: -3.9628396034240723
    8. ' in' → logprob: -5.337839603424072
    9. ',' → logprob: -5.337839603424072
    10. ' bit' → logprob: -5.462839603424072

Token 257: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13338613510131836
    2. ' in' → logprob: -2.6333861351013184
    3. 'in' → logprob: -3.6333861351013184
    4. ',a' → logprob: -4.133386135101318
    5. ' ,' → logprob: -4.883386135101318
    6. ',in' → logprob: -6.883386135101318
    7. ',b' → logprob: -7.758386135101318
    8. ',x' → logprob: -8.008386611938477
    9. ' ' → logprob: -8.508386611938477
    10. ',n' → logprob: -8.883386611938477

Token 258: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15518148243427277
    2. 'in' → logprob: -2.030181407928467
    3. 'enumer' → logprob: -4.530181407928467
    4. ',' → logprob: -6.780181407928467
    5. '<|end|>' → logprob: -7.780181407928467
    6. ' enumerate' → logprob: -10.030181884765625
    7. ' ' → logprob: -11.905181884765625
    8. ',in' → logprob: -11.905181884765625
    9. '<|end|>' → logprob: -12.030181884765625
    10. 's' → logprob: -12.530181884765625

Token 259: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00979386456310749
    2. ' enumerate' → logprob: -4.634793758392334
    3. 'zip' → logprob: -10.259794235229492
    4. '```' → logprob: -14.009794235229492
    5. 'en' → logprob: -14.384794235229492
    6. ' zip' → logprob: -14.634794235229492
    7. '
' → logprob: -15.009794235229492
    8. 'enum' → logprob: -15.259794235229492
    9. '(en' → logprob: -15.509794235229492
    10. 'enqueue' → logprob: -16.259794235229492

Token 260: '(' (ID: 7)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.012536372989416122
    2. ' aa' → logprob: -4.387536525726318
    3. ')' → logprob: -11.01253604888916
    4. '   ' → logprob: -13.01253604888916
    5. '#aa' → logprob: -13.01253604888916
    6. '(' → logprob: -13.01253604888916
    7. ',' → logprob: -13.63753604888916
    8. '
' → logprob: -14.01253604888916
    9. ' ' → logprob: -14.76253604888916
    10. 'aaa' → logprob: -14.88753604888916

Token 261: 'aa' (ID: 3545)
  Prédit: 'aa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.00013536323967855424
    2. ' aa' → logprob: -9.37513542175293
    3. '#aa' → logprob: -10.37513542175293
    4. ')' → logprob: -11.00013542175293
    5. '
' → logprob: -14.00013542175293
    6. '   ' → logprob: -14.75013542175293
    7. 'a' → logprob: -15.00013542175293
    8. 'aaa' → logprob: -15.00013542175293
    9. ' ' → logprob: -16.62513542175293
    10. ',' → logprob: -16.75013542175293

Token 262: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04311292618513107
    2. 'if' → logprob: -3.4181129932403564
    3. ' if' → logprob: -4.668112754821777
    4. '()' → logprob: -11.668112754821777
    5. ' )' → logprob: -11.918112754821777
    6. '   ' → logprob: -12.293112754821777
    7. ')
' → logprob: -12.918112754821777
    8. ' ' → logprob: -13.043112754821777
    9. ']' → logprob: -13.543112754821777
    10. '       ' → logprob: -13.793112754821777

Token 263: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25220194458961487
    2. ' if' → logprob: -1.5022019147872925
    3. '           ' → logprob: -8.877202033996582
    4. '               ' → logprob: -10.627202033996582
    5. ' ' → logprob: -10.877202033996582
    6. '   ' → logprob: -11.252202033996582
    7. '            ' → logprob: -11.252202033996582
    8. '       ' → logprob: -11.377202033996582
    9. '          ' → logprob: -11.877202033996582
    10. '    ' → logprob: -12.127202033996582

Token 264: ' bit' (ID: 3546)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.27663007378578186
    2. 'bit' → logprob: -2.151630163192749
    3. ' bit' → logprob: -2.776630163192749
    4. ' (' → logprob: -2.776630163192749
    5. '((' → logprob: -7.40162992477417
    6. ' ((' → logprob: -9.276630401611328
    7. '(b' → logprob: -9.901630401611328
    8. '(' → logprob: -10.651630401611328
    9. ' ' → logprob: -10.901630401611328
    10. ' not' → logprob: -11.151630401611328

Token 265: '>>' (ID: 3920)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.08653558045625687
    2. ' &' → logprob: -2.836535692214966
    3. '&(' → logprob: -4.336535453796387
    4. '>>' → logprob: -4.836535453796387
    5. '&i' → logprob: -6.211535453796387
    6. '&
' → logprob: -7.586535453796387
    7. '&amp' → logprob: -8.711535453796387
    8. '>>&' → logprob: -9.461535453796387
    9. '&r' → logprob: -9.586535453796387
    10. '&q' → logprob: -9.711535453796387

Token 266: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008051026379689574
    2. ' i' → logprob: -7.125804901123047
    3. '1' → logprob: -14.750804901123047
    4. ' ' → logprob: -16.000804901123047
    5. '	i' → logprob: -16.375804901123047
    6. '   ' → logprob: -17.250804901123047
    7. '```' → logprob: -17.625804901123047
    8. '0' → logprob: -18.000804901123047
    9. '(i' → logprob: -18.250804901123047
    10. '
' → logprob: -19.375804901123047

Token 267: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.03770862892270088
    2. ' &' → logprob: -3.5377085208892822
    3. ')&' → logprob: -5.162708759307861
    4. '&amp' → logprob: -6.162708759307861
    5. '&a' → logprob: -10.537708282470703
    6. ')' → logprob: -10.537708282470703
    7. '&i' → logprob: -11.287708282470703
    8. '&p' → logprob: -11.787708282470703
    9. '&
' → logprob: -11.787708282470703
    10. '1' → logprob: -13.162708282470703

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.750011444091797
    4. '

' → logprob: -17.875011444091797
    5. '
' → logprob: -18.000011444091797
    6. '```' → logprob: -18.250011444091797
    7. '' → logprob: -18.375011444091797
    8. 'a' → logprob: -18.500011444091797
    9. '0' → logprob: -19.625011444091797
    10. '１' → logprob: -19.687511444091797

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001454955490771681
    2. ')
' → logprob: -9.62514591217041
    3. ' )' → logprob: -10.37514591217041
    4. ')==' → logprob: -11.25014591217041
    5. '))' → logprob: -11.87514591217041
    6. '==' → logprob: -12.25014591217041
    7. ');' → logprob: -12.37514591217041
    8. ')>' → logprob: -12.75014591217041
    9. '):' → logprob: -12.87514591217041
    10. 'and' → logprob: -13.25014591217041

Token 270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044275134801864624
    2. '<|end|>' → logprob: -4.044275283813477
    3. '            
' → logprob: -4.169275283813477
    4. ')' → logprob: -6.169275283813477
    5. ' ' → logprob: -6.794275283813477
    6. '<|end|>' → logprob: -6.919275283813477
    7. '
' → logprob: -7.044275283813477
    8. ' if' → logprob: -7.044275283813477
    9. '            ' → logprob: -7.169275283813477
    10. ',' → logprob: -7.544275283813477

Token 271: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09600155800580978
    2. '           ' → logprob: -2.596001625061035
    3. ' for' → logprob: -5.596001625061035
    4. ' bek' → logprob: -5.971001625061035
    5. 'if' (adapté à ' if') → logprob: -6.221001625061035
    6. '
' → logprob: -6.221001625061035
    7. ' s' → logprob: -6.471001625061035
    8. '               ' → logprob: -6.721001625061035
    9. '\n' → logprob: -7.471001625061035
    10. ' print' → logprob: -7.721001625061035

Token 272: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.04385901242494583
    2. 's' → logprob: -3.1688590049743652
    3. ' k' → logprob: -7.418859004974365
    4. 'k' → logprob: -8.668859481811523
    5. ' abs' → logprob: -10.668859481811523
    6. 'abs' → logprob: -11.043859481811523
    7. '(s' → logprob: -11.793859481811523
    8. ' n' → logprob: -12.043859481811523
    9. ' ' → logprob: -12.168859481811523
    10. ' ' → logprob: -12.293859481811523

Token 273: '==' (ID: 560)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7799428105354309
    2. '<=' → logprob: -1.7799427509307861
    3. '>=' → logprob: -2.529942750930786
    4. ' >' → logprob: -2.779942750930786
    5. ' <=' → logprob: -2.904942750930786
    6. ' k' → logprob: -3.154942750930786
    7. '<' → logprob: -3.279942750930786
    8. '==' → logprob: -3.529942750930786
    9. ' >=' → logprob: -3.779942750930786
    10. 'k' → logprob: -4.904942989349365

Token 274: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001192490803077817
    2. '0' → logprob: -6.751192569732666
    3. ' k' → logprob: -11.376192092895508
    4. ' ' → logprob: -13.126192092895508
    5. '   ' → logprob: -13.251192092895508
    6. '1' → logprob: -14.001192092895508
    7. '(k' → logprob: -14.126192092895508
    8. '```' → logprob: -14.563692092895508
    9. '	k' → logprob: -14.688692092895508
    10. '"k' → logprob: -14.688692092895508

Token 275: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008486981969326735
    2. ':
' → logprob: -7.875848770141602
    3. '):' → logprob: -8.000848770141602
    4. ':return' → logprob: -10.000848770141602
    5. ' and' → logprob: -10.250848770141602
    6. ')' → logprob: -11.375848770141602
    7. '           ' → logprob: -11.500848770141602
    8. ' :' → logprob: -11.500848770141602
    9. ' or' → logprob: -12.125848770141602
    10. '<|end|>' → logprob: -12.375848770141602

Token 276: 'bek' (ID: 24641)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020137958228588104
    2. ' bek' → logprob: -4.020137786865234
    3. '                   ' → logprob: -7.145137786865234
    4. 'bek' → logprob: -7.395137786865234
    5. '           ' → logprob: -8.270137786865234
    6. ' print' → logprob: -9.645137786865234
    7. '                
' → logprob: -9.895137786865234
    8. '                       ' → logprob: -10.020137786865234
    9. '                ' → logprob: -10.645137786865234
    10. '```' → logprob: -10.645137786865234

Token 277: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.500000953674316
    3. 'bit' → logprob: -16.625
    4. '][' → logprob: -16.625
    5. ')[' → logprob: -16.75
    6. ' [' → logprob: -16.75
    7. '<|end|>' → logprob: -16.75
    8. '[
' → logprob: -16.875
    9. '\[' → logprob: -17.375
    10. '
' → logprob: -18.0

Token 278: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -2.534558552724775e-05
    2. '[' → logprob: -10.750025749206543
    3. ' bit' → logprob: -13.875025749206543
    4. '...' → logprob: -14.375025749206543
    5. 'True' → logprob: -14.625025749206543
    6. '1' → logprob: -14.625025749206543
    7. '(bit' → logprob: -14.625025749206543
    8. ']' → logprob: -15.625025749206543
    9. 'bet' → logprob: -15.625025749206543
    10. '0' → logprob: -16.250024795532227

Token 279: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.28151509165763855
    2. '=' → logprob: -2.406515121459961
    3. '=True' → logprob: -2.406515121459961
    4. ']' → logprob: -2.781515121459961
    5. ' =' → logprob: -5.781515121459961
    6. ' ]' → logprob: -10.406515121459961
    7. '=False' → logprob: -11.656515121459961
    8. ')=' → logprob: -11.656515121459961
    9. '']=' → logprob: -12.281515121459961
    10. '"]=' → logprob: -12.781515121459961

Token 280: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.759734732331708e-05
    2. ' True' → logprob: -11.000017166137695
    3. '   ' → logprob: -14.625017166137695
    4. '1' → logprob: -15.000017166137695
    5. '(True' → logprob: -17.500017166137695
    6. 'False' → logprob: -17.750017166137695
    7. '=True' → logprob: -18.500017166137695
    8. 'Tr' → logprob: -18.875017166137695
    9. 'true' → logprob: -19.000017166137695
    10. '       ' → logprob: -19.125017166137695

Token 281: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 282: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 283: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7434238791465759
    2. '           ' → logprob: -1.6184239387512207
    3. '<|end|>' → logprob: -2.1184239387512207
    4. ' ' → logprob: -2.3684239387512207
    5. 'else' (adapté à ' else') → logprob: -2.8684239387512207
    6. '       ' → logprob: -3.8684239387512207
    7. '            ' → logprob: -4.743423938751221
    8. '   ' → logprob: -5.243423938751221
    9. ' for' → logprob: -5.743423938751221
    10. '        ' → logprob: -5.868423938751221

Token 284: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2553555965423584
    2. ' for' → logprob: -2.0053555965423584
    3. '               ' → logprob: -3.2553555965423584
    4. 'for' → logprob: -4.0053558349609375
    5. ':
' → logprob: -4.2553558349609375
    6. '           ' → logprob: -4.6303558349609375
    7. ' continue' → logprob: -5.6303558349609375
    8. '   ' → logprob: -6.3803558349609375
    9. 'continue' → logprob: -7.2553558349609375
    10. '            ' → logprob: -7.2553558349609375

Token 285: 'continue' (ID: 19452)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7637602686882019
    2. '               ' → logprob: -1.2637603282928467
    3. 'for' → logprob: -2.2637603282928467
    4. ' continue' → logprob: -3.0137603282928467
    5. ' bek' → logprob: -3.1387603282928467
    6. ' pass' → logprob: -4.138760089874268
    7. 'continue' → logprob: -4.138760089874268
    8. '           ' → logprob: -4.513760089874268
    9. 'bek' → logprob: -4.888760089874268
    10. 'pass' → logprob: -6.513760089874268

Token 286: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7853062152862549
    2. ' for' → logprob: -0.9103062152862549
    3. '   ' → logprob: -2.535306215286255
    4. 'for' (adapté à ' for') → logprob: -2.785306215286255
    5. ' next' → logprob: -8.785305976867676
    6. '    ' → logprob: -8.910305976867676
    7. '        
' → logprob: -9.160305976867676
    8. '           ' → logprob: -9.285305976867676
    9. 'next' → logprob: -10.160305976867676
    10. '	for' → logprob: -10.660305976867676

Token 289: ' j' (ID: 441)
  Prédit: ' nxt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -1.2818491458892822
    2. ' bit' → logprob: -1.4068491458892822
    3. 'n' → logprob: -1.9068491458892822
    4. 'bit' → logprob: -2.0318491458892822
    5. ' next' → logprob: -2.7818491458892822
    6. ' n' → logprob: -3.5318491458892822
    7. ' nb' → logprob: -3.9068491458892822
    8. 'nb' → logprob: -3.9068491458892822
    9. 'next' → logprob: -4.031848907470703
    10. ' sub' → logprob: -4.531848907470703

Token 290: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06996811181306839
    2. 'in' → logprob: -2.6949682235717773
    3. ' ' → logprob: -10.694968223571777
    4. '   ' → logprob: -12.694968223571777
    5. 'range' → logprob: -13.069968223571777
    6. '  ' → logprob: -13.569968223571777
    7. '	in' → logprob: -14.319968223571777
    8. 'n' → logprob: -14.944968223571777
    9. '    ' → logprob: -15.069968223571777
    10. ' range' → logprob: -15.569968223571777

Token 291: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016059475019574165
    2. ' range' → logprob: -4.141059398651123
    3. '   ' → logprob: -11.516059875488281
    4. 'd' → logprob: -11.766059875488281
    5. ' ' → logprob: -13.016059875488281
    6. 'rang' → logprob: -13.266059875488281
    7. 'ran' → logprob: -13.891059875488281
    8. 'r' → logprob: -14.266059875488281
    9. 'ra' → logprob: -14.641059875488281
    10. '	range' → logprob: -15.016059875488281

Token 292: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01002462673932314
    2. 'n' → logprob: -4.635024547576904
    3. '(' → logprob: -8.635025024414062
    4. ' n' → logprob: -10.010025024414062
    5. '(j' → logprob: -11.260025024414062
    6. '   ' → logprob: -11.635025024414062
    7. ' (' → logprob: -11.760025024414062
    8. ')n' → logprob: -12.260025024414062
    9. ',n' → logprob: -12.510025024414062
    10. '	n' → logprob: -13.010025024414062

Token 293: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16031521558761597
    2. '):
' → logprob: -1.9103152751922607
    3. '       ' → logprob: -10.41031551361084
    4. '   ' → logprob: -10.78531551361084
    5. '):
' → logprob: -10.91031551361084
    6. '+' → logprob: -11.41031551361084
    7. ')' → logprob: -12.78531551361084
    8. ' ):' → logprob: -13.28531551361084
    9. ':' → logprob: -13.78531551361084
    10. '           ' → logprob: -14.03531551361084

Token 294: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018200749531388283
    2. ' if' → logprob: -5.018200874328613
    3. '        ' → logprob: -6.143200874328613
    4. '<|end|>' → logprob: -6.143200874328613
    5. ',' → logprob: -6.268200874328613
    6. ' ' → logprob: -6.768200874328613
    7. '            ' → logprob: -7.268200874328613
    8. '	       ' → logprob: -7.393200874328613
    9. ':' → logprob: -8.018200874328613
    10. '            
' → logprob: -8.018200874328613

Token 295: ' bek' (ID: 13183)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1884830743074417
    2. '           ' → logprob: -1.8134831190109253
    3. 'if' → logprob: -4.813483238220215
    4. '               ' → logprob: -8.313483238220215
    5. '            ' → logprob: -9.188483238220215
    6. ' new' → logprob: -9.438483238220215
    7. ' next' → logprob: -10.563483238220215
    8. '          ' → logprob: -10.688483238220215
    9. '```' → logprob: -10.813483238220215
    10. '   ' → logprob: -10.938483238220215

Token 296: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.583550642360933e-05
    2. ' [' → logprob: -11.250036239624023
    3. '[j' → logprob: -11.875036239624023
    4. '[b' → logprob: -12.125036239624023
    5. '[next' → logprob: -12.625036239624023
    6. '][' → logprob: -13.625036239624023
    7. '=' → logprob: -13.875036239624023
    8. '   ' → logprob: -14.375036239624023
    9. '[(' → logprob: -14.375036239624023
    10. '=[' → logprob: -14.875036239624023

Token 297: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0019681276753544807
    2. ' bit' → logprob: -6.251967906951904
    3. '(bit' → logprob: -10.501968383789062
    4. '   ' → logprob: -12.376968383789062
    5. '[' → logprob: -12.626968383789062
    6. ' ' → logprob: -14.126968383789062
    7. 'bits' → logprob: -14.251968383789062
    8. 'bitr' → logprob: -14.251968383789062
    9. 'j' → logprob: -14.876968383789062
    10. '_bit' → logprob: -15.001968383789062

Token 298: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00306683755479753
    2. ' |' → logprob: -6.6280670166015625
    3. ']' → logprob: -7.0030670166015625
    4. ']|' → logprob: -7.3780670166015625
    5. '|(' → logprob: -9.753067016601562
    6. 'or' → logprob: -10.128067016601562
    7. ' |=' → logprob: -10.378067016601562
    8. ' or' → logprob: -10.503067016601562
    9. ']+' → logprob: -11.753067016601562
    10. '|
' → logprob: -11.878067016601562

Token 299: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014185839332640171
    2. '1' → logprob: -4.264185905456543
    3. ' (' → logprob: -10.889185905456543
    4. '   ' → logprob: -13.764185905456543
    5. '```' → logprob: -13.764185905456543
    6. ' ' → logprob: -14.264185905456543
    7. '[' → logprob: -14.764185905456543
    8. '           ' → logprob: -15.639185905456543
    9. '
' → logprob: -16.514184951782227
    10. '{' → logprob: -16.639184951782227

Token 300: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0020731717813760042
    2. ' <<' → logprob: -7.252073287963867
    3. '()<<' → logprob: -7.627073287963867
    4. '<<(' → logprob: -7.752073287963867
    5. '(' → logprob: -8.502073287963867
    6. '(j' → logprob: -9.877073287963867
    7. 'j' → logprob: -10.252073287963867
    8. '<<<' → logprob: -10.377073287963867
    9. '[j' → logprob: -10.502073287963867
    10. '<' → logprob: -10.627073287963867

Token 301: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.696889623621246e-06
    2. ' j' → logprob: -12.87500286102295
    3. '	j' → logprob: -17.000001907348633
    4. '<|end|>' → logprob: -17.375001907348633
    5. '   ' → logprob: -18.375001907348633
    6. '```' → logprob: -18.500001907348633
    7. '[j' → logprob: -18.625001907348633
    8. '_j' → logprob: -19.250001907348633
    9. '
' → logprob: -19.625001907348633
    10. '$j' → logprob: -19.750001907348633

Token 302: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5765490531921387
    2. ']=' → logprob: -0.8265490531921387
    3. ' ]' → logprob: -7.451549053192139
    4. '=' → logprob: -11.201549530029297
    5. ']+=' → logprob: -11.451549530029297
    6. ']=(' → logprob: -14.201549530029297
    7. ']='' → logprob: -14.326549530029297
    8. '']=' → logprob: -14.576549530029297
    9. ']]=' → logprob: -14.826549530029297
    10. '()]' → logprob: -15.076549530029297

Token 303: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.6550729419104755e-05
    2. ' True' → logprob: -10.375036239624023
    3. 'bek' → logprob: -12.250036239624023
    4. '   ' → logprob: -15.625036239624023
    5. '(True' → logprob: -15.750036239624023
    6. '1' → logprob: -16.125036239624023
    7. 'False' → logprob: -17.375036239624023
    8. 'Bek' → logprob: -17.750036239624023
    9. 'true' → logprob: -18.125036239624023
    10. 'Tr' → logprob: -18.250036239624023

Token 304: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: ' mx' (ID: 28004)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5263808369636536
    2. ' =' → logprob: -0.9013808369636536
    3. '=max' → logprob: -6.776381015777588
    4. '_' → logprob: -7.276381015777588
    5. '<|end|>' → logprob: -7.276381015777588
    6. ',' → logprob: -8.65138053894043
    7. '=[]' → logprob: -9.52638053894043
    8. '[' → logprob: -10.15138053894043
    9. ')' → logprob: -10.15138053894043
    10. '=len' → logprob: -10.15138053894043

Token 308: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7475553154945374
    2. 'k' → logprob: -0.8725553154945374
    3. 'max' → logprob: -2.8725552558898926
    4. '-' → logprob: -3.3725552558898926
    5. 'n' → logprob: -4.372555255889893
    6. 'sum' → logprob: -5.622555255889893
    7. 'len' → logprob: -7.747555255889893
    8. '1' → logprob: -8.12255573272705
    9. '(' → logprob: -8.12255573272705
    10. '-k' → logprob: -9.12255573272705

Token 309: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6590849757194519
    2. 'for' → logprob: -1.2840850353240967
    3. '
' → logprob: -1.6590850353240967
    4. '   ' → logprob: -4.409084796905518
    5. ' 
' → logprob: -7.034084796905518
    6. '    
' → logprob: -7.159084796905518
    7. '	for' → logprob: -8.034085273742676
    8. '<|end|>' → logprob: -8.034085273742676
    9. '  
' → logprob: -8.159085273742676
    10. '   
' → logprob: -9.034085273742676

Token 310: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16158318519592285
    2. 'for' → logprob: -2.161583185195923
    3. '   ' → logprob: -3.786583185195923
    4. '
' → logprob: -4.536582946777344
    5. '<|end|>' → logprob: -8.161582946777344
    6. '	for' → logprob: -8.411582946777344
    7. ' 
' → logprob: -10.286582946777344
    8. ' ' → logprob: -10.411582946777344
    9. '    
' → logprob: -10.536582946777344
    10. ',' → logprob: -10.536582946777344

Token 311: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018865767866373062
    2. ' for' → logprob: -4.143865585327148
    3. '   ' → logprob: -5.893865585327148
    4. 'mask' → logprob: -10.893865585327148
    5. 'cnt' → logprob: -11.143865585327148
    6. 'bit' → logprob: -11.268865585327148
    7. 'mx' → logprob: -11.768865585327148
    8. 'bits' → logprob: -12.518865585327148
    9. 'ans' → logprob: -12.893865585327148
    10. 'count' → logprob: -13.643865585327148

Token 312: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.5835601687431335
    2. 'bit' → logprob: -0.8335601687431335
    3. 'i' → logprob: -5.583559989929199
    4. ' i' → logprob: -6.208559989929199
    5. 'mask' → logprob: -6.958559989929199
    6. ' mask' → logprob: -7.833559989929199
    7. '(bit' → logprob: -9.0835599899292
    8. 'b' → logprob: -9.5835599899292
    9. 'x' → logprob: -9.8335599899292
    10. ' b' → logprob: -9.9585599899292

Token 313: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07002479583024979
    2. 'in' → logprob: -2.6950247287750244
    3. ',' → logprob: -9.570024490356445
    4. ' ' → logprob: -11.695024490356445
    5. '   ' → logprob: -12.945024490356445
    6. '	in' → logprob: -13.195024490356445
    7. ' ,' → logprob: -13.570024490356445
    8. '  ' → logprob: -14.070024490356445
    9. ',in' → logprob: -14.320024490356445
    10. ')' → logprob: -14.820024490356445

Token 314: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0046218992210924625
    2. ' range' → logprob: -5.379621982574463
    3. 'bek' → logprob: -14.504621505737305
    4. '(range' → logprob: -15.254621505737305
    5. '   ' → logprob: -15.504621505737305
    6. ' ' → logprob: -15.629621505737305
    7. 'rang' → logprob: -15.629621505737305
    8. '(' → logprob: -15.879621505737305
    9. '	range' → logprob: -16.004621505737305
    10. 'ran' → logprob: -16.879621505737305

Token 315: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4021237802808173e-05
    2. '((' → logprob: -11.375014305114746
    3. '1' → logprob: -13.125014305114746
    4. ' (' → logprob: -15.250014305114746
    5. '(len' → logprob: -15.500014305114746
    6. '(n' → logprob: -17.50001335144043
    7. '(range' → logprob: -18.87501335144043
    8. '   ' → logprob: -18.87501335144043
    9. '(m' → logprob: -19.12501335144043
    10. '```' → logprob: -19.37501335144043

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06197194382548332
    2. '(' → logprob: -2.81197190284729
    3. ' ' → logprob: -13.186971664428711
    4. '   ' → logprob: -14.186971664428711
    5. ' (' → logprob: -14.311971664428711
    6. ')' → logprob: -14.686971664428711
    7. '
' → logprob: -15.686971664428711
    8. '```' → logprob: -15.811971664428711
    9. '[' → logprob: -16.56197166442871
    10. '0' → logprob: -16.56197166442871

Token 317: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.00047285633627325296
    2. '(' → logprob: -7.8754730224609375
    3. '<<(' → logprob: -10.000473022460938
    4. '1' → logprob: -10.875473022460938
    5. ')<<' → logprob: -11.375473022460938
    6. '()<<' → logprob: -11.375473022460938
    7. '   ' → logprob: -13.375473022460938
    8. ' <<' → logprob: -14.000473022460938
    9. '```' → logprob: -14.000473022460938
    10. ')' → logprob: -14.750473022460938

Token 318: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.896309739408025e-07
    2. ' n' → logprob: -14.125000953674316
    3. '(n' → logprob: -17.75
    4. '	n' → logprob: -18.5
    5. '<|end|>' → logprob: -19.0
    6. ')n' → logprob: -19.125
    7. '_n' → logprob: -19.5
    8. '<n' → logprob: -20.0
    9. '   ' → logprob: -20.0
    10. '```' → logprob: -20.375

Token 319: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4741940200328827
    2. '):
' → logprob: -0.9741940498352051
    3. ':' → logprob: -9.724193572998047
    4. '):
' → logprob: -10.224193572998047
    5. '   ' → logprob: -11.724193572998047
    6. ')' → logprob: -12.349193572998047
    7. ' ):' → logprob: -12.724193572998047
    8. ':
' → logprob: -13.349193572998047
    9. ',' → logprob: -13.849193572998047
    10. ' ):
' → logprob: -14.224193572998047

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00488220015540719
    2. ' if' → logprob: -5.629882335662842
    3. '<|end|>' → logprob: -7.879882335662842
    4. ',' → logprob: -8.254881858825684
    5. 'if' → logprob: -8.254881858825684
    6. '   ' → logprob: -8.254881858825684
    7. '	' → logprob: -9.879881858825684
    8. '	   ' → logprob: -10.754881858825684
    9. '	if' → logprob: -11.129881858825684
    10. '<|end|>' → logprob: -12.254881858825684

Token 321: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002140505239367485
    2. '       ' → logprob: -6.627140522003174
    3. ' if' → logprob: -7.377140522003174
    4. '   ' → logprob: -9.002140045166016
    5. 'for' → logprob: -10.502140045166016
    6. '           ' → logprob: -10.502140045166016
    7. 'mx' → logprob: -12.002140045166016
    8. '	if' → logprob: -13.002140045166016
    9. 'count' → logprob: -13.752140045166016
    10. ' ' → logprob: -14.127140045166016

Token 322: ' bek' (ID: 13183)
  Prédit: 'bek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bek' → logprob: -0.0939277708530426
    2. ' bek' → logprob: -2.4689278602600098
    3. 'not' → logprob: -5.96892786026001
    4. ' not' → logprob: -6.34392786026001
    5. '   ' → logprob: -7.84392786026001
    6. ' ' → logprob: -9.593927383422852
    7. '       ' → logprob: -10.718927383422852
    8. '  ' → logprob: -10.781427383422852
    9. ' bekl' → logprob: -11.406427383422852
    10. 'bec' → logprob: -11.718927383422852

Token 323: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -15.250000953674316
    3. 'bit' → logprob: -16.125
    4. '```' → logprob: -16.625
    5. '\[' → logprob: -17.375
    6. '[int' → logprob: -18.0
    7. '[b' → logprob: -18.125
    8. '[
' → logprob: -18.25
    9. '
' → logprob: -18.75
    10. '][' → logprob: -19.0

Token 324: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -3.1782583391759545e-05
    2. ' bit' → logprob: -10.375031471252441
    3. '(bit' → logprob: -15.000031471252441
    4. 'b' → logprob: -17.125032424926758
    5. '
' → logprob: -17.125032424926758
    6. '.bit' → logprob: -17.625032424926758
    7. '   ' → logprob: -17.750032424926758
    8. ')' → logprob: -17.875032424926758
    9. 'not' → logprob: -18.125032424926758
    10. 'bitr' → logprob: -18.250032424926758

Token 325: ']:' (ID: 12433)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23073001205921173
    2. ']:' → logprob: -1.9807300567626953
    3. ':
' → logprob: -3.3557300567626953
    4. ']:
' → logprob: -4.355730056762695
    5. '==' → logprob: -4.480730056762695
    6. ' and' → logprob: -5.480730056762695
    7. '>:' → logprob: -5.980730056762695
    8. ']==' → logprob: -6.730730056762695
    9. 'and' → logprob: -7.730730056762695
    10. ']' → logprob: -8.730730056762695

Token 326: 'continue' (ID: 19452)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8410061001777649
    2. 'mx' → logprob: -1.2160060405731201
    3. ' mx' → logprob: -1.5910060405731201
    4. 'count' → logprob: -3.09100604057312
    5. ' count' → logprob: -5.091006278991699
    6. 'cnt' → logprob: -5.341006278991699
    7. ' if' → logprob: -5.341006278991699
    8. ' cnt' → logprob: -6.341006278991699
    9. '   ' → logprob: -6.966006278991699
    10. '
' → logprob: -7.216006278991699

Token 327: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40152508020401
    2. '       ' → logprob: -1.1515250205993652
    3. '           ' → logprob: -5.401525020599365
    4. '   ' → logprob: -5.401525020599365
    5. '        
' → logprob: -6.401525020599365
    6. '    
' → logprob: -6.901525020599365
    7. ' mx' → logprob: -7.276525020599365
    8. '  
' → logprob: -7.901525020599365
    9. 'mx' → logprob: -8.026525497436523
    10. ' 
' → logprob: -8.276525497436523

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08070720732212067
    2. '
' → logprob: -3.205707311630249
    3. '   ' → logprob: -3.830707311630249
    4. ' mx' → logprob: -5.33070707321167
    5. 'mx' → logprob: -6.08070707321167
    6. ' if' → logprob: -6.20570707321167
    7. ' for' → logprob: -6.70570707321167
    8. ',' → logprob: -6.83070707321167
    9. '        
' → logprob: -6.95570707321167
    10. '    
' → logprob: -7.45570707321167

Token 329: ' pop' (ID: 2735)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.8179460167884827
    2. 'count' → logprob: -1.692945957183838
    3. 'mx' → logprob: -1.692945957183838
    4. 's' → logprob: -2.317945957183838
    5. '       ' → logprob: -3.692945957183838
    6. 'c' → logprob: -3.817945957183838
    7. 'bits' → logprob: -4.942945957183838
    8. 'sum' → logprob: -5.192945957183838
    9. '   ' → logprob: -5.317945957183838
    10. 'subset' → logprob: -5.317945957183838

Token 330: 'cnt' (ID: 33160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00013274075172375888
    2. 'cnt' → logprob: -9.00013256072998
    3. '=' → logprob: -12.12513256072998
    4. 'ount' → logprob: -12.75013256072998
    5. 'pop' → logprob: -15.25013256072998
    6. '   ' → logprob: -16.250133514404297
    7. '_count' → logprob: -16.375133514404297
    8. '(count' → logprob: -16.500133514404297
    9. '[count' → logprob: -16.625133514404297
    10. '=count' → logprob: -16.875133514404297

Token 331: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4363698363304138
    2. ' =' → logprob: -1.5613698959350586
    3. '(bit' → logprob: -2.0613698959350586
    4. '(pop' → logprob: -4.936369895935059
    5. '(' → logprob: -5.686369895935059
    6. '(bin' → logprob: -6.061369895935059
    7. '=count' → logprob: -6.811369895935059
    8. '_bit' → logprob: -7.561369895935059
    9. 'bit' → logprob: -7.811369895935059
    10. '=sum' → logprob: -8.186369895935059

Token 332: 'bin' (ID: 11893)
  Prédit: 'bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.000343210413120687
    2. 'bit' → logprob: -8.250343322753906
    3. 'pop' → logprob: -10.000343322753906
    4. ' bin' → logprob: -10.250343322753906
    5. '(bin' → logprob: -14.125343322753906
    6. '   ' → logprob: -15.250343322753906
    7. 'bi' → logprob: -17.000343322753906
    8. '/bin' → logprob: -17.000343322753906
    9. 'bits' → logprob: -17.250343322753906
    10. 'sum' → logprob: -17.625343322753906

Token 333: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -8.061054359131958e-06
    2. 'bit' → logprob: -12.250007629394531
    3. '[' → logprob: -13.250007629394531
    4. '(' → logprob: -13.875007629394531
    5. '(pop' → logprob: -15.250007629394531
    6. '(bits' → logprob: -16.12500762939453
    7. '(bin' → logprob: -16.37500762939453
    8. '(b' → logprob: -17.87500762939453
    9. '(Bit' → logprob: -18.25000762939453
    10. '(
' → logprob: -18.87500762939453

Token 334: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.004472370259463787
    2. '(bit' → logprob: -5.504472255706787
    3. '(' → logprob: -9.129472732543945
    4. 'count' → logprob: -9.254472732543945
    5. '.count' → logprob: -9.879472732543945
    6. '[' → logprob: -10.504472732543945
    7. 'bit' → logprob: -10.629472732543945
    8. '().' → logprob: -10.879472732543945
    9. '   ' → logprob: -11.254472732543945
    10. '.bit' → logprob: -11.379472732543945

Token 335: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.320199877838604e-07
    2. ' count' → logprob: -15.5
    3. '.count' → logprob: -16.125
    4. '   ' → logprob: -17.625
    5. 'ount' → logprob: -17.625
    6. '	count' → logprob: -18.125
    7. '```' → logprob: -18.5
    8. ' ' → logprob: -19.25
    9. 'c' → logprob: -20.625
    10. 'cnt' → logprob: -20.75

Token 336: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.03827798739075661
    2. '("' → logprob: -3.288278102874756
    3. '(' → logprob: -8.538277626037598
    4. '("("' → logprob: -10.163277626037598
    5. ''' → logprob: -13.413277626037598
    6. '"' → logprob: -16.163278579711914
    7. '1' → logprob: -16.288278579711914
    8. '(`' → logprob: -16.413278579711914
    9. '("="' → logprob: -16.663278579711914
    10. '(',' → logprob: -16.788278579711914

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2762428822461516e-05
    2. '"' → logprob: -10.375052452087402
    3. ''' → logprob: -10.750052452087402
    4. ' ' → logprob: -17.87505340576172
    5. '`' → logprob: -19.25005340576172
    6. '```' → logprob: -19.37505340576172
    7. '('' → logprob: -19.50005340576172
    8. '")' → logprob: -19.62505340576172
    9. '１' → logprob: -19.75005340576172
    10. ')' → logprob: -20.50005340576172

Token 338: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0917358249425888
    2. '")' → logprob: -2.71673583984375
    3. '()' → logprob: -3.96673583984375
    4. ')")' → logprob: -6.71673583984375
    5. '())' → logprob: -6.84173583984375
    6. ')
' → logprob: -8.46673583984375
    7. '')' → logprob: -9.59173583984375
    8. '")
' → logprob: -10.71673583984375
    9. '`)' → logprob: -11.84173583984375
    10. '()
' → logprob: -11.84173583984375

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38369640707969666
    2. '
' → logprob: -1.383696436882019
    3. '<|end|>' → logprob: -3.3836963176727295
    4. ')' → logprob: -4.133696556091309
    5. ' if' → logprob: -5.383696556091309
    6. '   ' → logprob: -5.383696556091309
    7. ' 
' → logprob: -6.258696556091309
    8. '        
' → logprob: -6.508696556091309
    9. ',' → logprob: -6.633696556091309
    10. '  
' → logprob: -6.883696556091309

Token 340: ' if' (ID: 538)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.06259874999523163
    2. 'if' (adapté à ' if') → logprob: -2.812598705291748
    3. ' mx' → logprob: -7.812598705291748
    4. ' if' → logprob: -8.437599182128906
    5. '       ' → logprob: -12.812599182128906
    6. '(mx' → logprob: -12.812599182128906
    7. '   ' → logprob: -12.937599182128906
    8. '
' → logprob: -14.062599182128906
    9. '.mx' → logprob: -14.187599182128906
    10. '>' → logprob: -16.562599182128906

Token 341: ' pop' (ID: 2735)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.11301172524690628
    2. ' pop' → logprob: -2.2380118370056152
    3. 'mx' → logprob: -8.988011360168457
    4. ' mx' → logprob: -10.238011360168457
    5. '   ' → logprob: -11.488011360168457
    6. '	pop' → logprob: -11.738011360168457
    7. '(pop' → logprob: -12.113011360168457
    8. '.pop' → logprob: -14.238011360168457
    9. 'bit' → logprob: -14.488011360168457
    10. 'p' → logprob: -14.613011360168457

Token 342: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -3.7697225252486533e-06
    2. 'count' → logprob: -13.125003814697266
    3. '```' → logprob: -14.875003814697266
    4. '(cnt' → logprob: -15.250003814697266
    5. '[cnt' → logprob: -15.375003814697266
    6. 'ct' → logprob: -15.750003814697266
    7. 'cn' → logprob: -15.750003814697266
    8. '   ' → logprob: -16.125003814697266
    9. '>' → logprob: -16.250003814697266
    10. '[' → logprob: -16.375003814697266

Token 343: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.007643186952918768
    2. ' >' → logprob: -4.882643222808838
    3. '>=' → logprob: -10.50764274597168
    4. '<=' → logprob: -12.75764274597168
    5. ' >=' → logprob: -13.88264274597168
    6. ' ' → logprob: -13.88264274597168
    7. '<' → logprob: -14.00764274597168
    8. ')' → logprob: -14.25764274597168
    9. ')>' → logprob: -14.25764274597168
    10. '()>' → logprob: -14.25764274597168

Token 344: 'mx' (ID: 32467)
  Prédit: 'mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -3.547789674485102e-05
    2. ' mx' → logprob: -10.250035285949707
    3. '
' → logprob: -17.625036239624023
    4. '   ' → logprob: -18.250036239624023
    5. '(mx' → logprob: -18.250036239624023
    6. 'max' → logprob: -18.500036239624023
    7. '.mx' → logprob: -18.875036239624023
    8. '       ' → logprob: -19.375036239624023
    9. 'm' → logprob: -20.500036239624023
    10. '0' → logprob: -21.000036239624023

Token 345: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07091791182756424
    2. ':
' → logprob: -2.695917844772339
    3. 'mx' → logprob: -7.445918083190918
    4. '=' → logprob: -8.320918083190918
    5. '           ' → logprob: -9.820918083190918
    6. '(mx' → logprob: -10.320918083190918
    7. '):
' → logprob: -11.195918083190918
    8. ':max' → logprob: -11.570918083190918
    9. ' mx' → logprob: -11.820918083190918
    10. '):' → logprob: -11.820918083190918

Token 346: 'mx' (ID: 32467)
  Prédit: 'mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.6366133689880371
    2. ' mx' → logprob: -0.7616133689880371
    3. '       ' → logprob: -6.636613368988037
    4. '
' → logprob: -7.386613368988037
    5. '           ' → logprob: -7.386613368988037
    6. '(mx' → logprob: -7.511613368988037
    7. '.mx' → logprob: -7.761613368988037
    8. '```' → logprob: -8.136613845825195
    9. '   ' → logprob: -9.136613845825195
    10. '``' → logprob: -10.511613845825195

Token 347: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.810037742368877e-05
    2. ' =' → logprob: -10.250038146972656
    3. '=max' → logprob: -13.500038146972656
    4. '=p' → logprob: -14.000038146972656
    5. '=m' → logprob: -14.750038146972656
    6. '=
' → logprob: -17.125038146972656
    7. '=int' → logprob: -17.125038146972656
    8. '=s' → logprob: -17.250038146972656
    9. '.=' → logprob: -17.750038146972656
    10. '=

' → logprob: -18.000038146972656

Token 348: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.00020401719666551799
    2. ' pop' → logprob: -8.500204086303711
    3. 'bit' → logprob: -15.625204086303711
    4. '(pop' → logprob: -16.12520408630371
    5. '	pop' → logprob: -16.50020408630371
    6. '.pop' → logprob: -17.50020408630371
    7. '
' → logprob: -17.87520408630371
    8. 'population' → logprob: -18.25020408630371
    9. 'p' → logprob: -18.75020408630371
    10. 'popup' → logprob: -18.87520408630371

Token 349: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -3.128163257315464e-07
    2. 'count' → logprob: -15.875
    3. 'pop' → logprob: -17.0
    4. 'ct' → logprob: -17.0
    5. 'nt' → logprob: -17.25
    6. ' cnt' → logprob: -17.5
    7. '_cnt' → logprob: -18.75
    8. 'cn' → logprob: -18.75
    9. 'int' → logprob: -19.125
    10. '(cnt' → logprob: -19.125

Token 350: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3663123548030853
    2. '   ' → logprob: -1.2413123846054077
    3. 'print' → logprob: -4.491312503814697
    4. '    
' → logprob: -5.366312503814697
    5. '<|end|>' → logprob: -7.616312503814697
    6. '  
' → logprob: -7.991312503814697
    7. '\n' → logprob: -8.491312026977539
    8. ' print' → logprob: -8.616312026977539
    9. '        
' → logprob: -9.491312026977539
    10. '
' → logprob: -9.491312026977539

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31559109687805176
    2. 'print' → logprob: -1.3155910968780518
    3. ' print' → logprob: -6.440590858459473
    4. 'return' → logprob: -8.315590858459473
    5. '
' → logprob: -8.565590858459473
    6. '```' → logprob: -9.190590858459473
    7. ' return' → logprob: -9.815590858459473
    8. '<|end|>' → logprob: -9.940590858459473
    9. '	print' → logprob: -10.190590858459473
    10. '    
' → logprob: -10.190590858459473

Token 352: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1325211524963379
    2. 'print' (adapté à ' print') → logprob: -2.132521152496338
    3. '<|end|>' → logprob: -5.882521152496338
    4. ' print' → logprob: -6.007521152496338
    5. '    
' → logprob: -9.38252067565918
    6. 'return' → logprob: -9.75752067565918
    7. ' return' → logprob: -10.13252067565918
    8. '
' → logprob: -10.63252067565918
    9. '	print' → logprob: -10.63252067565918
    10. '\n' → logprob: -10.88252067565918

Token 353: '(n' (ID: 2406)
  Prédit: '(mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mx' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.25000286102295
    3. 'mx' → logprob: -14.00000286102295
    4. ' mx' → logprob: -16.875001907348633
    5. '(max' → logprob: -16.875001907348633
    6. ' (' → logprob: -17.500001907348633
    7. '(m' → logprob: -17.875001907348633
    8. '(mc' → logprob: -18.000001907348633
    9. '.mx' → logprob: -18.250001907348633
    10. '(nx' → logprob: -18.250001907348633

Token 354: '-m' (ID: 2126)
  Prédit: '-m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-m' → logprob: -0.33808276057243347
    2. ' -' → logprob: -1.3380827903747559
    3. '-' → logprob: -3.713082790374756
    4. ' mx' → logprob: -10.338082313537598
    5. '-mf' → logprob: -10.713082313537598
    6. ')' → logprob: -11.338082313537598
    7. ',' → logprob: -11.463082313537598
    8. '-max' → logprob: -11.588082313537598
    9. '-p' → logprob: -11.713082313537598
    10. '-ms' → logprob: -12.588082313537598

Token 355: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.088346359931165e-07
    2. 'ax' → logprob: -14.000000953674316
    3. ' x' → logprob: -18.125
    4. 'a' → logprob: -18.125
    5. '
' → logprob: -18.5
    6. 'mx' → logprob: -18.625
    7. '```' → logprob: -18.75
    8. ')x' → logprob: -19.0
    9. '	x' → logprob: -19.375
    10. '_x' → logprob: -19.625

Token 356: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ' )' → logprob: -12.875003814697266
    3. ')
' → logprob: -15.000003814697266
    4. '))' → logprob: -15.250003814697266
    5. ')`' → logprob: -15.375003814697266
    6. '`)' → logprob: -16.000003814697266
    7. '*' → logprob: -16.000003814697266
    8. ')}' → logprob: -16.125003814697266
    9. '   ' → logprob: -16.500003814697266
    10. '```' → logprob: -16.875003814697266

Token 357: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 358: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 356
Tokens correctement prédits (1ère position, stricte): 182
Tokens correctement prédits (1ère position, avec adaptation): 184
Tokens correctement prédits (top 10): 293
Précision stricte (1ère position): 51.12%
Précision adaptée (1ère position): 51.69%
Précision (top 10): 82.30%
================================================================================
