================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def partition(A, p, r):
    x = A[r]
    i = p-1
    for j in range(p, r):
        if A[j] <= x:
            i = i + 1
            tmp = A[j]
            A[j] = A[i]
            A[i] = tmp
        else:
            continue
    A[r] = A[i+1]
    A[i+1] = x
    return i+1

def main():
    n = int(input())
    a = [int(i) for i in input().split()]
    x = partition(a, 0, n-1) 
    A = [str(a[i]) for i in range(n)]
    A[x] = '[' + A[x] + ']'
    for i in range(n):
        if i == n-1:
            print(A[i])
        else:
            print(A[i], end=' ')
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' partition' (ID: 31512)
  → Token d'amorce (pas de prédiction)

Token 2: '(A' (ID: 10706)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6624298691749573
    2. ',' → logprob: -1.2874298095703125
    3. '[' → logprob: -1.7874298095703125
    4. ')' → logprob: -3.2874298095703125
    5. '(' → logprob: -6.6624298095703125
    6. '[A' → logprob: -6.7874298095703125
    7. ':' → logprob: -8.287429809570312
    8. '[]):' → logprob: -8.537429809570312
    9. '<|end|>' → logprob: -9.037429809570312
    10. ',A' → logprob: -9.037429809570312

Token 4: ' p' (ID: 275)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.024534698575735092
    2. 'low' → logprob: -3.8995347023010254
    3. ' lo' → logprob: -5.899534702301025
    4. ' l' → logprob: -7.899534702301025
    5. ' p' → logprob: -8.149534225463867
    6. ' start' → logprob: -8.399534225463867
    7. ' left' → logprob: -8.899534225463867
    8. 'p' → logprob: -9.524534225463867
    9. 'lo' → logprob: -9.899534225463867
    10. 'l' → logprob: -10.774534225463867

Token 5: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00288261822424829
    2. ')' → logprob: -6.377882480621338
    3. '[' → logprob: -8.002882957458496
    4. ' ,' → logprob: -8.502882957458496
    5. ',p' → logprob: -8.502882957458496
    6. '```' → logprob: -9.002882957458496
    7. '<|end|>' → logprob: -9.127882957458496
    8. '):' → logprob: -10.002882957458496
    9. '**,' → logprob: -11.252882957458496
    10. ',A' → logprob: -11.752882957458496

Token 6: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.07891171425580978
    2. 'r' → logprob: -2.578911781311035
    3. ',' → logprob: -12.078911781311035
    4. ' q' → logprob: -12.328911781311035
    5. '_r' → logprob: -12.578911781311035
    6. ' ' → logprob: -12.828911781311035
    7. 'q' → logprob: -13.453911781311035
    8. ',r' → logprob: -13.578911781311035
    9. '<|end|>' → logprob: -14.328911781311035
    10. 'A' → logprob: -14.328911781311035

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0075442735105752945
    2. ')' → logprob: -5.132544040679932
    3. ':' → logprob: -6.632544040679932
    4. ''):' → logprob: -8.63254451751709
    5. '**' → logprob: -10.63254451751709
    6. '):
' → logprob: -10.75754451751709
    7. '```' → logprob: -10.75754451751709
    8. ',' → logprob: -10.88254451751709
    9. '"):' → logprob: -11.75754451751709
    10. '`:' → logprob: -12.63254451751709

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004780288320034742
    2. '   ' → logprob: -5.504780292510986
    3. '```' → logprob: -8.129779815673828
    4. '":' → logprob: -9.504779815673828
    5. '':' → logprob: -9.629779815673828
    6. ':
' → logprob: -9.879779815673828
    7. '':'' → logprob: -10.129779815673828
    8. '":"' → logprob: -10.254779815673828
    9. '`:' → logprob: -10.379779815673828
    10. ' :' → logprob: -10.379779815673828

Token 9: ' x' (ID: 1215)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1918717324733734
    2. '   ' → logprob: -2.3168716430664062
    3. '```' → logprob: -2.9418716430664062
    4. ' :' → logprob: -5.816871643066406
    5. ':return' → logprob: -5.816871643066406
    6. '``' → logprob: -5.816871643066406
    7. '`' → logprob: -5.941871643066406
    8. '[:]' → logprob: -6.816871643066406
    9. '    
' → logprob: -7.066871643066406
    10. ' if' → logprob: -7.066871643066406

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6989855170249939
    2. ' =' → logprob: -0.6989855170249939
    3. ',' → logprob: -5.948985576629639
    4. ')' → logprob: -6.573985576629639
    5. '.' → logprob: -7.448985576629639
    6. ' ' → logprob: -8.07398509979248
    7. ' ==' → logprob: -8.32398509979248
    8. '[' → logprob: -8.44898509979248
    9. 's' → logprob: -8.69898509979248
    10. '<|end|>' → logprob: -9.32398509979248

Token 11: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16023874282836914
    2. ' A' → logprob: -1.9102387428283691
    3. ' ' → logprob: -11.535238265991211
    4. '	A' → logprob: -12.535238265991211
    5. '  ' → logprob: -14.410238265991211
    6. '   ' → logprob: -15.410238265991211
    7. '(A' → logprob: -15.910238265991211
    8. '"A' → logprob: -16.28523826599121
    9. '=A' → logprob: -16.78523826599121
    10. '0' → logprob: -17.16023826599121

Token 12: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0019601555541157722
    2. '[' → logprob: -6.251960277557373
    3. '[p' → logprob: -10.501959800720215
    4. ' [' → logprob: -13.876959800720215
    5. '```' → logprob: -14.501959800720215
    6. '[q' → logprob: -14.626959800720215
    7. '[m' → logprob: -15.001959800720215
    8. 'r' → logprob: -15.126959800720215
    9. '[j' → logprob: -15.501959800720215
    10. '   ' → logprob: -15.626959800720215

Token 13: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.081584716506768e-05
    2. ' ]' → logprob: -11.875020980834961
    3. ']
' → logprob: -12.125020980834961
    4. '[' → logprob: -12.250020980834961
    5. '[r' → logprob: -14.000020980834961
    6. '[p' → logprob: -14.250020980834961
    7. '])' → logprob: -14.500020980834961
    8. '']' → logprob: -14.750020980834961
    9. ')' → logprob: -15.125020980834961
    10. ']==' → logprob: -15.500020980834961

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.433317631483078
    2. '
' → logprob: -1.8083176612854004
    3. '    
' → logprob: -3.3083176612854004
    4. ':' → logprob: -3.6833176612854004
    5. '\n' → logprob: -3.6833176612854004
    6. '```' → logprob: -3.9333176612854004
    7. '[' → logprob: -4.6833176612854
    8. '<|end|>' → logprob: -5.0583176612854
    9. '[:]' → logprob: -5.3083176612854
    10. 'i' → logprob: -5.4333176612854

Token 15: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.10988381505012512
    2. ' i' → logprob: -3.1098837852478027
    3. '   ' → logprob: -3.9848837852478027
    4. '```' → logprob: -4.484883785247803
    5. 'for' → logprob: -4.609883785247803
    6. ' for' → logprob: -4.984883785247803
    7. '`' → logprob: -5.984883785247803
    8. '``' → logprob: -6.484883785247803
    9. '	i' → logprob: -6.734883785247803
    10. '=' → logprob: -6.859883785247803

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017097922042012215
    2. '=' → logprob: -4.5170979499816895
    3. ' ' → logprob: -5.6420979499816895
    4. '<|end|>' → logprob: -6.5170979499816895
    5. ' +=' → logprob: -8.642097473144531
    6. '    ' → logprob: -8.642097473144531
    7. '  ' → logprob: -9.017097473144531
    8. ',' → logprob: -9.392097473144531
    9. '<|end|>' → logprob: -9.767097473144531
    10. '   ' → logprob: -9.767097473144531

Token 17: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38689693808555603
    2. ' p' → logprob: -1.1368969678878784
    3. ' ' → logprob: -11.136897087097168
    4. '  ' → logprob: -12.636897087097168
    5. '	p' → logprob: -12.886897087097168
    6. '   ' → logprob: -12.886897087097168
    7. '<p' → logprob: -13.636897087097168
    8. '(p' → logprob: -14.386897087097168
    9. '    ' → logprob: -14.511897087097168
    10. '[' → logprob: -16.01189613342285

Token 18: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0903400182723999
    2. ' -' → logprob: -2.4653401374816895
    3. '<|end|>' → logprob: -7.0903401374816895
    4. '   ' → logprob: -8.590339660644531
    5. '```' → logprob: -9.340339660644531
    6. '    ' → logprob: -9.465339660644531
    7. ' ' → logprob: -9.840339660644531
    8. '<|end|>' → logprob: -9.840339660644531
    9. '
' → logprob: -10.090339660644531
    10. '  ' → logprob: -11.340339660644531

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.88418151892256e-05
    2. ' ' → logprob: -9.750059127807617
    3. '```' → logprob: -15.500059127807617
    4. '   ' → logprob: -15.625059127807617
    5. '  ' → logprob: -16.875059127807617
    6. '۱' → logprob: -17.437559127807617
    7. '１' → logprob: -17.562559127807617
    8. '<|end|>' → logprob: -17.875059127807617
    9. '    ' → logprob: -18.062559127807617
    10. '' → logprob: -18.562559127807617

Token 20: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35266736149787903
    2. ' for' → logprob: -2.1026673316955566
    3. '   ' → logprob: -2.9776673316955566
    4. '\n' → logprob: -3.4776673316955566
    5. '    
' → logprob: -3.4776673316955566
    6. '```' → logprob: -3.6026673316955566
    7. 'for' → logprob: -4.852667331695557
    8. '<|end|>' → logprob: -4.977667331695557
    9. '  
' → logprob: -5.352667331695557
    10. '	for' → logprob: -5.727667331695557

Token 21: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22186551988124847
    2. '   ' → logprob: -2.59686541557312
    3. ' for' → logprob: -2.72186541557312
    4. '\n' → logprob: -4.096865653991699
    5. '    
' → logprob: -4.096865653991699
    6. '```' → logprob: -4.596865653991699
    7. '	for' → logprob: -5.846865653991699
    8. 'for' → logprob: -5.846865653991699
    9. '  
' → logprob: -5.971865653991699
    10. '<|end|>' → logprob: -6.596865653991699

Token 22: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0674256086349487
    2. '\n' → logprob: -1.3174256086349487
    3. ' for' → logprob: -1.8174256086349487
    4. '   ' → logprob: -2.0674257278442383
    5. '```' → logprob: -2.8174257278442383
    6. 'for' (adapté à ' for') → logprob: -4.567425727844238
    7. '    
' → logprob: -4.692425727844238
    8. '\' → logprob: -5.067425727844238
    9. '``' → logprob: -6.067425727844238
    10. '	for' → logprob: -6.192425727844238

Token 23: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.029527490958571434
    2. 'j' → logprob: -3.654527425765991
    3. ' ' → logprob: -5.77952766418457
    4. '   ' → logprob: -9.90452766418457
    5. ' A' → logprob: -11.02952766418457
    6. ' in' → logprob: -11.27952766418457
    7. '  ' → logprob: -11.40452766418457
    8. '    ' → logprob: -11.52952766418457
    9. '	j' → logprob: -12.02952766418457
    10. ' ' → logprob: -12.27952766418457

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007789859548211098
    2. 'in' → logprob: -5.2577900886535645
    3. ' ' → logprob: -6.0077900886535645
    4. '<|end|>' → logprob: -9.882789611816406
    5. '	in' → logprob: -11.257789611816406
    6. '  ' → logprob: -11.382789611816406
    7. '    ' → logprob: -12.507789611816406
    8. ' j' → logprob: -12.882789611816406
    9. '<|end|>' → logprob: -13.132789611816406
    10. ',' → logprob: -13.507789611816406

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0629684180021286
    2. 'range' → logprob: -2.8129684925079346
    3. ' p' → logprob: -6.9379682540893555
    4. ' ' → logprob: -11.062968254089355
    5. ' xrange' → logprob: -11.937968254089355
    6. 'p' → logprob: -12.062968254089355
    7. '	range' → logprob: -14.062968254089355
    8. '(range' → logprob: -14.562968254089355
    9. ' in' → logprob: -15.312968254089355
    10. '  ' → logprob: -15.937968254089355

Token 26: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3920831084251404
    2. '(p' → logprob: -1.1420831680297852
    3. ' (' → logprob: -5.267083168029785
    4. '(i' → logprob: -11.142083168029785
    5. ')' → logprob: -11.267083168029785
    6. ' ' → logprob: -12.017083168029785
    7. '(
' → logprob: -13.642083168029785
    8. '(P' → logprob: -13.892083168029785
    9. ' p' → logprob: -14.517083168029785
    10. '(

' → logprob: -14.517083168029785

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00597667321562767
    2. ' ,' → logprob: -5.130976676940918
    3. ',j' → logprob: -11.255976676940918
    4. ',p' → logprob: -11.505976676940918
    5. ',r' → logprob: -11.630976676940918
    6. ' ' → logprob: -12.380976676940918
    7. '   ' → logprob: -12.755976676940918
    8. ')' → logprob: -12.880976676940918
    9. '+' → logprob: -12.880976676940918
    10. '‌,' → logprob: -14.005976676940918

Token 28: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.16023072600364685
    2. 'r' → logprob: -1.9102307558059692
    3. ' ' → logprob: -12.03523063659668
    4. '	r' → logprob: -15.03523063659668
    5. '_r' → logprob: -15.53523063659668
    6. '(r' → logprob: -17.03523063659668
    7. ')' → logprob: -17.16023063659668
    8. ',' → logprob: -17.16023063659668
    9. ' ' → logprob: -17.28523063659668
    10. ',r' → logprob: -17.53523063659668

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0271479319781065
    2. '+' → logprob: -4.4021477699279785
    3. ')' → logprob: -4.5271477699279785
    4. '):
' → logprob: -5.9021477699279785
    5. ' ):' → logprob: -7.5271477699279785
    6. ':' → logprob: -8.527148246765137
    7. '   ' → logprob: -9.152148246765137
    8. ' +' → logprob: -10.027148246765137
    9. ',' → logprob: -10.527148246765137
    10. '```' → logprob: -11.277148246765137

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014778009615838528
    2. '<|end|>' → logprob: -5.139778137207031
    3. '   ' → logprob: -5.514778137207031
    4. '    ' → logprob: -6.264778137207031
    5. ' if' → logprob: -6.764778137207031
    6. ' ' → logprob: -7.389778137207031
    7. 'if' → logprob: -8.014778137207031
    8. '        
' → logprob: -8.264778137207031
    9. '<|end|>' → logprob: -9.514778137207031
    10. '
' → logprob: -9.639778137207031

Token 31: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.031696081161499
    2. '       ' → logprob: -1.656696081161499
    3. '<|end|>' → logprob: -1.906696081161499
    4. '           ' → logprob: -2.156696081161499
    5. ' ' → logprob: -2.656696081161499
    6. 'if' (adapté à ' if') → logprob: -2.906696081161499
    7. '   ' → logprob: -3.156696081161499
    8. '    ' → logprob: -5.156696319580078
    9. '<|end|>' → logprob: -5.156696319580078
    10. '```' → logprob: -6.781696319580078

Token 32: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0043249609880149364
    2. 'A' → logprob: -5.629324913024902
    3. ' ' → logprob: -7.254324913024902
    4. ' ' → logprob: -11.754324913024902
    5. '	A' → logprob: -12.629324913024902
    6. '    ' → logprob: -13.004324913024902
    7. '  ' → logprob: -14.004324913024902
    8. ')' → logprob: -14.129324913024902
    9. ' (' → logprob: -14.129324913024902
    10. '   ' → logprob: -15.004324913024902

Token 33: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00015955790877342224
    2. '[' → logprob: -8.75015926361084
    3. 'j' → logprob: -14.25015926361084
    4. '[
' → logprob: -15.75015926361084
    5. ' [' → logprob: -16.125160217285156
    6. '```' → logprob: -17.000160217285156
    7. '[i' → logprob: -17.250160217285156
    8. '[js' → logprob: -18.750160217285156
    9. '   ' → logprob: -18.750160217285156
    10. '	j' → logprob: -18.875160217285156

Token 34: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.14192622900009155
    2. '<=' → logprob: -2.6419262886047363
    3. ']' → logprob: -3.2669262886047363
    4. ')' → logprob: -4.141926288604736
    5. ']<=' → logprob: -5.766926288604736
    6. '[' → logprob: -6.016926288604736
    7. ')<=' → logprob: -7.266926288604736
    8. ' ]' → logprob: -7.891926288604736
    9. ' ' → logprob: -8.516925811767578
    10. ' )' → logprob: -10.141925811767578

Token 35: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.11543749272823334
    2. '<=' → logprob: -2.2404375076293945
    3. '[' → logprob: -6.3654375076293945
    4. '<' → logprob: -8.365437507629395
    5. ' ' → logprob: -8.365437507629395
    6. ' <' → logprob: -9.490437507629395
    7. ')' → logprob: -9.740437507629395
    8. ')<=' → logprob: -9.740437507629395
    9. ']<=' → logprob: -9.740437507629395
    10. '<|end|>' → logprob: -10.365437507629395

Token 36: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.034026116132736206
    2. 'x' → logprob: -3.4090261459350586
    3. ' ' → logprob: -7.909026145935059
    4. ''' → logprob: -12.534026145935059
    5. ')' → logprob: -13.409026145935059
    6. '  ' → logprob: -13.534026145935059
    7. '	x' → logprob: -13.784026145935059
    8. '"' → logprob: -13.909026145935059
    9. '```' → logprob: -14.159026145935059
    10. ' ' → logprob: -14.409026145935059

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003595376620069146
    2. ':
' → logprob: -8.375359535217285
    3. ' :' → logprob: -9.250359535217285
    4. ':**' → logprob: -11.250359535217285
    5. '):' → logprob: -11.375359535217285
    6. '<|end|>' → logprob: -13.000359535217285
    7. '       ' → logprob: -13.750359535217285
    8. ':
' → logprob: -14.000359535217285
    9. ':i' → logprob: -14.750359535217285
    10. '<|end|>' → logprob: -14.875359535217285

Token 38: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.894605278968811
    2. '<|end|>' → logprob: -1.144605278968811
    3. '           ' → logprob: -1.644605278968811
    4. '<|end|>' → logprob: -2.8946051597595215
    5. ':' → logprob: -4.5196051597595215
    6. '       ' → logprob: -5.5196051597595215
    7. ':
' → logprob: -5.6446051597595215
    8. '            
' → logprob: -6.3946051597595215
    9. ' ' → logprob: -7.1446051597595215
    10. '   ' → logprob: -7.1446051597595215

Token 39: ' i' (ID: 575)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.305396169424057
    2. '
' → logprob: -2.30539608001709
    3. 'i' (adapté à ' i') → logprob: -2.68039608001709
    4. ' i' → logprob: -2.93039608001709
    5. '               ' → logprob: -4.68039608001709
    6. ' ' → logprob: -4.80539608001709
    7. '    
' → logprob: -5.43039608001709
    8. '<|end|>' → logprob: -5.43039608001709
    9. '            
' → logprob: -6.05539608001709
    10. '                
' → logprob: -6.05539608001709

Token 40: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.017636487260460854
    2. '+=' → logprob: -4.392636299133301
    3. '+' → logprob: -5.517636299133301
    4. ' =' → logprob: -7.517636299133301
    5. '=' → logprob: -8.2676362991333
    6. ' +' → logprob: -8.3926362991333
    7. '<|end|>' → logprob: -10.2676362991333
    8. ' ' → logprob: -11.6426362991333
    9. '    ' → logprob: -11.8926362991333
    10. '```' → logprob: -12.2676362991333

Token 41: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38692352175712585
    2. 'i' → logprob: -1.1369235515594482
    3. '	i' → logprob: -9.886923789978027
    4. ' ' → logprob: -13.511923789978027
    5. '+' → logprob: -16.51192283630371
    6. '<|end|>' → logprob: -16.51192283630371
    7. '```' → logprob: -17.26192283630371
    8. ' ' → logprob: -17.63692283630371
    9. '_i' → logprob: -17.63692283630371
    10. 'j' → logprob: -18.01192283630371

Token 42: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01604997180402279
    2. ' +' → logprob: -4.141049861907959
    3. '1' → logprob: -12.016050338745117
    4. '```' → logprob: -12.391050338745117
    5. ' plus' → logprob: -13.141050338745117
    6. ' ' → logprob: -14.141050338745117
    7. '[' → logprob: -14.641050338745117
    8. '<|end|>' → logprob: -14.766050338745117
    9. '+i' → logprob: -14.891050338745117
    10. '`' → logprob: -15.266050338745117

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03365365043282509
    2. ' ' → logprob: -3.408653736114502
    3. '<|end|>' → logprob: -11.783653259277344
    4. '   ' → logprob: -16.158653259277344
    5. '<|end|>' → logprob: -16.658653259277344
    6. '  ' → logprob: -16.783653259277344
    7. '    ' → logprob: -17.283653259277344
    8. '```' → logprob: -17.658653259277344
    9. ' ' → logprob: -18.033653259277344
    10. '۱' → logprob: -18.846153259277344

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.25002098083496
    4. '<|end|>' → logprob: -18.25002098083496
    5. '  ' → logprob: -20.12502098083496
    6. '```' → logprob: -21.12502098083496
    7. '    ' → logprob: -22.75002098083496
    8. '۱' → logprob: -23.12502098083496
    9. '
' → logprob: -23.50002098083496
    10. '<|end|>' → logprob: -23.62502098083496

Token 45: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6455704569816589
    2. '       ' → logprob: -1.3955705165863037
    3. '<|end|>' → logprob: -1.6455705165863037
    4. '   ' → logprob: -4.895570278167725
    5. '<|end|>' → logprob: -4.895570278167725
    6. '            
' → logprob: -6.020570278167725
    7. ' A' → logprob: -6.270570278167725
    8. '
' → logprob: -6.395570278167725
    9. '    
' → logprob: -6.645570278167725
    10. '[' → logprob: -6.770570278167725

Token 47: ' tmp' (ID: 8919)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.12781506776809692
    2. ' A' → logprob: -2.127815008163452
    3. '<|end|>' → logprob: -7.752815246582031
    4. '           ' → logprob: -8.127815246582031
    5. ' ' → logprob: -9.752815246582031
    6. '	A' → logprob: -10.252815246582031
    7. '       ' → logprob: -11.377815246582031
    8. '```' → logprob: -11.877815246582031
    9. '(A' → logprob: -12.127815246582031
    10. '   ' → logprob: -12.127815246582031

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03478560224175453
    2. '=' → logprob: -3.409785509109497
    3. ']' → logprob: -7.784785747528076
    4. '[' → logprob: -8.409785270690918
    5. ',' → logprob: -8.409785270690918
    6. '<|end|>' → logprob: -8.659785270690918
    7. ' ' → logprob: -10.159785270690918
    8. ')' → logprob: -11.409785270690918
    9. '   ' → logprob: -11.659785270690918
    10. '  ' → logprob: -12.034785270690918

Token 49: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018151111900806427
    2. ' A' → logprob: -4.01815128326416
    3. '	A' → logprob: -13.89315128326416
    4. ' ' → logprob: -16.018150329589844
    5. '   ' → logprob: -17.018150329589844
    6. '>A' → logprob: -17.643150329589844
    7. '_A' → logprob: -17.643150329589844
    8. '=A' → logprob: -18.018150329589844
    9. '`' → logprob: -18.268150329589844
    10. '```' → logprob: -18.393150329589844

Token 50: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0024389089085161686
    2. '[' → logprob: -6.127439022064209
    3. '[j' → logprob: -8.37743854522705
    4. 'i' → logprob: -11.87743854522705
    5. '[I' → logprob: -12.00243854522705
    6. '91' → logprob: -12.37743854522705
    7. ' ' → logprob: -13.37743854522705
    8. ' [' → logprob: -13.75243854522705
    9. '```' → logprob: -13.87743854522705
    10. '[
' → logprob: -14.50243854522705

Token 51: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009897274896502495
    2. ']
' → logprob: -4.634897232055664
    3. ']
' → logprob: -9.384897232055664
    4. ']

' → logprob: -10.384897232055664
    5. ' ]' → logprob: -11.259897232055664
    6. '<|end|>' → logprob: -12.634897232055664
    7. '];' → logprob: -12.884897232055664
    8. '],' → logprob: -13.009897232055664
    9. ']]' → logprob: -13.759897232055664
    10. ']

' → logprob: -13.884897232055664

Token 52: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' A' (ID: 355)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00036502102739177644
    2. '[' → logprob: -8.375365257263184
    3. '[j' → logprob: -9.000365257263184
    4. '[I' → logprob: -11.625365257263184
    5. 'i' → logprob: -13.625365257263184
    6. '```' → logprob: -15.875365257263184
    7. '[A' → logprob: -16.000364303588867
    8. ' ' → logprob: -16.000364303588867
    9. ' [' → logprob: -16.125364303588867
    10. '[index' → logprob: -16.625364303588867

Token 55: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014048750745132565
    2. '],' → logprob: -6.751404762268066
    3. ']=' → logprob: -8.751404762268066
    4. ' ]' → logprob: -9.501404762268066
    5. ']
' → logprob: -15.251404762268066
    6. '=' → logprob: -15.376404762268066
    7. ' ],' → logprob: -15.376404762268066
    8. ']>' → logprob: -15.501404762268066
    9. ']==' → logprob: -15.501404762268066
    10. ',' → logprob: -15.876404762268066

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04486022889614105
    2. ' =' → logprob: -3.1698601245880127
    3. ',' → logprob: -6.294860363006592
    4. ' ' → logprob: -12.044859886169434
    5. '=
' → logprob: -13.544859886169434
    6. '=A' → logprob: -13.544859886169434
    7. '=

' → logprob: -13.669859886169434
    8. '<|end|>' → logprob: -14.169859886169434
    9. ']' → logprob: -14.669859886169434
    10. '>' → logprob: -14.794859886169434

Token 57: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011048054322600365
    2. ' A' → logprob: -4.511047840118408
    3. '           ' → logprob: -15.886048316955566
    4. '	A' → logprob: -16.13604736328125
    5. '>A' → logprob: -18.26104736328125
    6. '_A' → logprob: -18.51104736328125
    7. 'tmp' → logprob: -18.88604736328125
    8. '```' → logprob: -19.01104736328125
    9. '   ' → logprob: -19.13604736328125
    10. '=A' → logprob: -19.76104736328125

Token 58: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002978048287332058
    2. '[' → logprob: -8.125297546386719
    3. '[tmp' → logprob: -14.125297546386719
    4. 'i' → logprob: -14.625297546386719
    5. '[I' → logprob: -15.500297546386719
    6. '[
' → logprob: -15.875297546386719
    7. ' ' → logprob: -17.62529754638672
    8. '```' → logprob: -17.62529754638672
    9. '[++' → logprob: -18.37529754638672
    10. ' [' → logprob: -18.62529754638672

Token 59: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009543364867568016
    2. ']
' → logprob: -7.1259541511535645
    3. '<|end|>' → logprob: -9.000954627990723
    4. '<|end|>' → logprob: -12.000954627990723
    5. '}' → logprob: -12.375954627990723
    6. '           ' → logprob: -12.625954627990723
    7. ')' → logprob: -12.750954627990723
    8. ' ]' → logprob: -13.000954627990723
    9. '```' → logprob: -13.000954627990723
    10. ']

' → logprob: -13.250954627990723

Token 60: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011192612582817674
    2. 'A' → logprob: -7.001119136810303
    3. '```' → logprob: -9.501119613647461
    4. '            
' → logprob: -9.751119613647461
    5. ' A' → logprob: -10.626119613647461
    6. '<|end|>' → logprob: -11.001119613647461
    7. '   ' → logprob: -11.876119613647461
    8. ' 
' → logprob: -12.626119613647461
    9. '       ' → logprob: -12.626119613647461
    10. '		' → logprob: -12.751119613647461

Token 61: ' A' (ID: 355)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0031793788075447083
    2. ' tmp' → logprob: -5.753179550170898
    3. '/tmp' → logprob: -15.003179550170898
    4. '           ' → logprob: -15.128179550170898
    5. '[tmp' → logprob: -15.128179550170898
    6. '	tmp' → logprob: -15.253179550170898
    7. '_tmp' → logprob: -15.628179550170898
    8. 'Tmp' → logprob: -16.0031795501709
    9. '$tmp' → logprob: -16.2531795501709
    10. '(tmp' → logprob: -16.5031795501709

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.65707261255011e-06
    2. '[' → logprob: -12.125008583068848
    3. '[I' → logprob: -13.250008583068848
    4. 'i' → logprob: -13.875008583068848
    5. '```' → logprob: -15.500008583068848
    6. '[
' → logprob: -15.875008583068848
    7. '\[' → logprob: -17.125009536743164
    8. '[A' → logprob: -17.750009536743164
    9. '[s' → logprob: -17.875009536743164
    10. '<|end|>' → logprob: -18.625009536743164

Token 63: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012120219180360436
    2. '=' → logprob: -7.001212120056152
    3. ']=' → logprob: -8.501212120056152
    4. ' =' → logprob: -9.501212120056152
    5. ' ]' → logprob: -11.126212120056152
    6. '<|end|>' → logprob: -12.751212120056152
    7. ')' → logprob: -13.751212120056152
    8. ' ' → logprob: -13.876212120056152
    9. '],' → logprob: -14.001212120056152
    10. ',' → logprob: -14.251212120056152

Token 64: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023247109726071358
    2. ' =' → logprob: -3.773247003555298
    3. '=
' → logprob: -13.898246765136719
    4. ',' → logprob: -15.523246765136719
    5. '=temp' → logprob: -16.14824676513672
    6. '=s' → logprob: -16.64824676513672
    7. ')' → logprob: -16.64824676513672
    8. '<|end|>' → logprob: -16.77324676513672
    9. '=

' → logprob: -17.39824676513672
    10. ']' → logprob: -17.39824676513672

Token 65: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.005233882926404476
    2. ' tmp' → logprob: -5.2552337646484375
    3. '	tmp' → logprob: -17.005233764648438
    4. '/tmp' → logprob: -17.755233764648438
    5. '$tmp' → logprob: -17.880233764648438
    6. 'tm' → logprob: -19.630233764648438
    7. '[tmp' → logprob: -19.630233764648438
    8. '(tmp' → logprob: -19.755233764648438
    9. 'tmpl' → logprob: -20.380233764648438
    10. '_tmp' → logprob: -20.505233764648438

Token 66: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7938429713249207
    2. '\n' → logprob: -0.9188429713249207
    3. '       ' → logprob: -2.4188430309295654
    4. '\' → logprob: -4.793842792510986
    5. '    
' → logprob: -4.793842792510986
    6. 'n' → logprob: -5.043842792510986
    7. '```' → logprob: -5.293842792510986
    8. '  
' → logprob: -5.418842792510986
    9. '\r' → logprob: -5.543842792510986
    10. '           ' → logprob: -5.543842792510986

Token 67: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09500785917043686
    2. 'return' → logprob: -2.84500789642334
    3. ' return' → logprob: -4.22000789642334
    4. '       ' → logprob: -5.59500789642334
    5. '	return' → logprob: -5.84500789642334
    6. '    
' → logprob: -5.84500789642334
    7. '```' → logprob: -6.22000789642334
    8. '
' → logprob: -6.59500789642334
    9. '  
' → logprob: -6.72000789642334
    10. '           ' → logprob: -7.09500789642334

Token 68: ' else' (ID: 1203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12141779810190201
    2. '   ' → logprob: -2.871417760848999
    3. ' return' → logprob: -3.496417760848999
    4. 'A' → logprob: -4.996417999267578
    5. '    
' → logprob: -5.496417999267578
    6. '```' → logprob: -5.996417999267578
    7. 'r' → logprob: -6.121417999267578
    8. '  
' → logprob: -6.496417999267578
    9. '       ' → logprob: -6.621417999267578
    10. 'swap' → logprob: -6.746417999267578

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23742742836475372
    2. ' continue' → logprob: -2.1124274730682373
    3. '       ' → logprob: -3.4874274730682373
    4. 'continue' → logprob: -3.9874274730682373
    5. ':
' → logprob: -4.612427234649658
    6. '
' → logprob: -4.737427234649658
    7. '           ' → logprob: -4.737427234649658
    8. '<|end|>' → logprob: -5.487427234649658
    9. '   ' → logprob: -6.487427234649658
    10. ' pass' → logprob: -6.487427234649658

Token 70: '           ' (ID: 352)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.28236016631126404
    2. '           ' → logprob: -2.532360076904297
    3. ' pass' → logprob: -2.657360076904297
    4. 'continue' → logprob: -2.907360076904297
    5. 'pass' → logprob: -3.657360076904297
    6. '       ' → logprob: -4.532360076904297
    7. '   ' → logprob: -6.907360076904297
    8. '\n' → logprob: -7.282360076904297
    9. ' 
' → logprob: -7.407360076904297
    10. ' None' → logprob: -7.907360076904297

Token 71: ' continue' (ID: 4901)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.4912034869194031
    2. 'continue' (adapté à ' continue') → logprob: -0.9912034869194031
    3. '           ' → logprob: -4.866203308105469
    4. ' continue' → logprob: -5.116203308105469
    5. ' pass' → logprob: -6.241203308105469
    6. '       ' → logprob: -7.116203308105469
    7. '```' → logprob: -7.991203308105469
    8. 'continu' → logprob: -9.366203308105469
    9. '   ' → logprob: -9.741203308105469
    10. 'None' → logprob: -11.866203308105469

Token 72: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027665982488542795
    2. '    
' → logprob: -6.5027666091918945
    3. 'return' → logprob: -7.5027666091918945
    4. '
' → logprob: -8.002766609191895
    5. '  
' → logprob: -9.127766609191895
    6. '\n' → logprob: -9.627766609191895
    7. '       ' → logprob: -9.752766609191895
    8. ' return' → logprob: -10.877766609191895
    9. '        
' → logprob: -11.127766609191895
    10. '            
' → logprob: -11.252766609191895

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05208989232778549
    2. 'return' → logprob: -3.0520899295806885
    3. '    
' → logprob: -7.177089691162109
    4. 'i' → logprob: -7.177089691162109
    5. ' return' → logprob: -7.677089691162109
    6. 'p' → logprob: -8.05208969116211
    7. '  
' → logprob: -8.05208969116211
    8. 'A' → logprob: -8.17708969116211
    9. '
' → logprob: -8.42708969116211
    10. '  ' → logprob: -8.80208969116211

Token 74: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.43805643916130066
    2. 'return' → logprob: -1.688056468963623
    3. '   ' → logprob: -2.063056468963623
    4. '    
' → logprob: -4.188056468963623
    5. 'tmp' → logprob: -4.563056468963623
    6. 'p' → logprob: -5.063056468963623
    7. ' return' → logprob: -5.938056468963623
    8. ' A' → logprob: -6.188056468963623
    9. 'i' → logprob: -6.813056468963623
    10. '  
' → logprob: -7.063056468963623

Token 75: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.4644329249858856
    2. '[i' → logprob: -1.464432954788208
    3. '[' → logprob: -1.964432954788208
    4. '[I' → logprob: -10.964432716369629
    5. '[s' → logprob: -11.214432716369629
    6. '[j' → logprob: -11.714432716369629
    7. '[q' → logprob: -12.714432716369629
    8. '[A' → logprob: -12.839432716369629
    9. '[p' → logprob: -13.214432716369629
    10. '[
' → logprob: -13.339432716369629

Token 76: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.034267015755176544
    2. '],' → logprob: -3.409266948699951
    3. ',' → logprob: -8.28426742553711
    4. ' ]' → logprob: -8.78426742553711
    5. ']=' → logprob: -9.15926742553711
    6. '[' → logprob: -9.78426742553711
    7. '[i' → logprob: -10.90926742553711
    8. ' ],' → logprob: -11.03426742553711
    9. '=' → logprob: -12.40926742553711
    10. ']
' → logprob: -12.53426742553711

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1327972710132599
    2. ' =' → logprob: -2.1327972412109375
    3. ',' → logprob: -5.2577972412109375
    4. '=
' → logprob: -8.007797241210938
    5. ' =
' → logprob: -9.507797241210938
    6. '<|end|>' → logprob: -9.632797241210938
    7. '=A' → logprob: -10.007797241210938
    8. '=

' → logprob: -11.007797241210938
    9. 's' → logprob: -11.132797241210938
    10. ',
' → logprob: -11.132797241210938

Token 78: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.029755808413028717
    2. ' A' → logprob: -3.5297558307647705
    3. '   ' → logprob: -12.529755592346191
    4. '	A' → logprob: -14.029755592346191
    5. '<|end|>' → logprob: -15.404755592346191
    6. '>A' → logprob: -15.529755592346191
    7. ' ' → logprob: -15.529755592346191
    8. '```' → logprob: -16.779756546020508
    9. '  ' → logprob: -17.654756546020508
    10. '=A' → logprob: -17.654756546020508

Token 79: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.125001907348633
    3. 'i' → logprob: -15.750001907348633
    4. '[I' → logprob: -16.375001907348633
    5. '[A' → logprob: -17.500001907348633
    6. '[j' → logprob: -18.250001907348633
    7. '[++' → logprob: -18.375001907348633
    8. '[r' → logprob: -18.375001907348633
    9. '[
' → logprob: -18.750001907348633
    10. '<|end|>' → logprob: -18.750001907348633

Token 80: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.700132997939363e-05
    2. ' +' → logprob: -11.000017166137695
    3. '+
' → logprob: -15.125017166137695
    4. '+i' → logprob: -19.375017166137695
    5. '＋' → logprob: -19.500017166137695
    6. ' plus' → logprob: -19.500017166137695
    7. '```' → logprob: -19.875017166137695
    8. '+

' → logprob: -20.125017166137695
    9. '+j' → logprob: -20.750017166137695
    10. '1' → logprob: -20.750017166137695

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -20.250001907348633
    4. '１' → logprob: -21.125001907348633
    5. '   ' → logprob: -21.250001907348633
    6. '۱' → logprob: -21.875001907348633
    7. '<|end|>' → logprob: -22.250001907348633
    8. '+' → logprob: -22.625001907348633
    9. '১' → logprob: -22.750001907348633
    10. ']' → logprob: -22.875001907348633

Token 82: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009080599062144756
    2. '<|end|>' → logprob: -5.009080410003662
    3. ')' → logprob: -6.509080410003662
    4. '}' → logprob: -7.884080410003662
    5. '```' → logprob: -8.50908088684082
    6. ']
' → logprob: -9.00908088684082
    7. '<|end|>' → logprob: -10.00908088684082
    8. '   ' → logprob: -10.50908088684082
    9. ' ]' → logprob: -10.63408088684082
    10. '
' → logprob: -11.38408088684082

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1301736682653427
    2. '<|end|>' → logprob: -2.880173683166504
    3. '[i' → logprob: -4.130173683166504
    4. 'A' → logprob: -4.255173683166504
    5. '[' → logprob: -4.755173683166504
    6. '    
' → logprob: -5.005173683166504
    7. '```' → logprob: -5.755173683166504
    8. ' 
' → logprob: -5.880173683166504
    9. '  
' → logprob: -6.130173683166504
    10. ' A' → logprob: -6.255173683166504

Token 84: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.00014287306112237275
    2. '   ' → logprob: -8.875143051147461
    3. ' A' → logprob: -13.500143051147461
    4. '       ' → logprob: -14.125143051147461
    5. '```' → logprob: -15.125143051147461
    6. 'i' → logprob: -15.750143051147461
    7. '  ' → logprob: -16.75014305114746
    8. 'The' → logprob: -16.75014305114746
    9. '<|end|>' → logprob: -16.75014305114746
    10. 'tmp' → logprob: -16.87514305114746

Token 85: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.22585146129131317
    2. '[' → logprob: -1.6008514165878296
    3. '<|end|>' → logprob: -8.100851058959961
    4. '[I' → logprob: -10.100851058959961
    5. '[
' → logprob: -10.475851058959961
    6. '```' → logprob: -10.850851058959961
    7. '[...]' → logprob: -11.350851058959961
    8. '\[' → logprob: -11.350851058959961
    9. '[a' → logprob: -12.225851058959961
    10. '[++' → logprob: -12.975851058959961

Token 86: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.253090865968261e-06
    2. ' +' → logprob: -11.625009536743164
    3. '+
' → logprob: -15.500009536743164
    4. '+i' → logprob: -18.250009536743164
    5. '<|end|>' → logprob: -18.250009536743164
    6. '＋' → logprob: -18.625009536743164
    7. ' plus' → logprob: -19.125009536743164
    8. '+

' → logprob: -19.500009536743164
    9. '+j' → logprob: -19.625009536743164
    10. '+r' → logprob: -20.125009536743164

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.0590548703912646e-05
    2. '<|end|>' → logprob: -10.500030517578125
    3. '2' → logprob: -13.375030517578125
    4. ' ' → logprob: -14.750030517578125
    5. '```' → logprob: -15.000030517578125
    6. '<|end|>' → logprob: -15.125030517578125
    7. '[' → logprob: -15.750030517578125
    8. '`' → logprob: -17.250030517578125
    9. '0' → logprob: -17.250030517578125
    10. '   ' → logprob: -17.375030517578125

Token 88: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007911669090390205
    2. ']=' → logprob: -7.625791072845459
    3. '=' → logprob: -8.125791549682617
    4. ' ]' → logprob: -12.750791549682617
    5. ')' → logprob: -13.500791549682617
    6. '],' → logprob: -14.125791549682617
    7. '<|end|>' → logprob: -14.250791549682617
    8. ' =' → logprob: -14.625791549682617
    9. ',' → logprob: -15.250791549682617
    10. '']' → logprob: -15.750791549682617

Token 89: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005726903327740729
    2. ' =' → logprob: -7.625572681427002
    3. '=
' → logprob: -9.75057315826416
    4. '=

' → logprob: -11.25057315826416
    5. ',' → logprob: -11.75057315826416
    6. '<|end|>' → logprob: -13.00057315826416
    7. '=}' → logprob: -14.37557315826416
    8. ' =
' → logprob: -15.00057315826416
    9. '```' → logprob: -15.25057315826416
    10. ']' → logprob: -15.37557315826416

Token 90: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031777136027812958
    2. ' x' → logprob: -5.753177642822266
    3. 'tmp' → logprob: -20.753177642822266
    4. '	x' → logprob: -20.878177642822266
    5. ' ' → logprob: -22.128177642822266
    6. ' tmp' → logprob: -23.253177642822266
    7. 'r' → logprob: -23.253177642822266
    8. '"x' → logprob: -24.128177642822266
    9. '$x' → logprob: -24.378177642822266
    10. ''x' → logprob: -24.503177642822266

Token 91: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.32372111082077026
    2. '
' → logprob: -2.073721170425415
    3. '   ' → logprob: -3.198721170425415
    4. '<|end|>' → logprob: -3.198721170425415
    5. '  
' → logprob: -3.948721170425415
    6. '    
' → logprob: -4.073720932006836
    7. '\' → logprob: -4.948720932006836
    8. ' ' → logprob: -5.323720932006836
    9. ' return' → logprob: -5.448720932006836
    10. '' → logprob: -5.698720932006836

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1008470430970192
    2. 'return' → logprob: -3.475847005844116
    3. ' return' → logprob: -3.975847005844116
    4. '    
' → logprob: -4.725847244262695
    5. ':return' → logprob: -4.975847244262695
    6. '\n' → logprob: -5.225847244262695
    7. '
' → logprob: -5.225847244262695
    8. '	return' → logprob: -5.350847244262695
    9. '<|end|>' → logprob: -5.350847244262695
    10. ' ' → logprob: -5.600847244262695

Token 93: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06341783702373505
    2. '   ' → logprob: -2.813417911529541
    3. ' return' → logprob: -6.688417911529541
    4. '	return' → logprob: -9.063417434692383
    5. ':return' → logprob: -9.688417434692383
    6. 'r' → logprob: -11.313417434692383
    7. '    
' → logprob: -11.938417434692383
    8. ' ' → logprob: -13.063417434692383
    9. '```' → logprob: -13.688417434692383
    10. '{return' → logprob: -13.938417434692383

Token 94: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.474077433347702
    2. 'i' → logprob: -0.9740774631500244
    3. '	i' → logprob: -15.224077224731445
    4. '(i' → logprob: -15.599077224731445
    5. ' (' → logprob: -16.599077224731445
    6. ' ' → logprob: -16.849077224731445
    7. ',i' → logprob: -19.349077224731445
    8. ')i' → logprob: -19.474077224731445
    9. '%i' → logprob: -19.974077224731445
    10. '(' → logprob: -19.974077224731445

Token 95: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.8206473871250637e-05
    2. '+
' → logprob: -10.500028610229492
    3. ' +' → logprob: -14.375028610229492
    4. '+

' → logprob: -16.750028610229492
    5. '+i' → logprob: -17.625028610229492
    6. '1' → logprob: -19.000028610229492
    7. '+[' → logprob: -19.500028610229492
    8. '＋' → logprob: -20.750028610229492
    9. ' +
' → logprob: -21.000028610229492
    10. '+</' → logprob: -21.125028610229492

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '```' → logprob: -19.25
    4. '<|end|>' → logprob: -19.375
    5. '2' → logprob: -21.25
    6. '１' → logprob: -21.5
    7. '۱' → logprob: -21.625
    8. '`' → logprob: -22.5
    9. '१' → logprob: -22.875
    10. '১' → logprob: -23.25

Token 97: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5414557456970215
    2. '<|end|>' → logprob: -1.5414557456970215
    3. '\n' → logprob: -2.5414557456970215
    4. '```' → logprob: -2.7914557456970215
    5. '#' → logprob: -3.2914557456970215
    6. ' ' → logprob: -4.1664557456970215
    7. '\' → logprob: -6.0414557456970215
    8. ' 
' → logprob: -6.4164557456970215
    9. ')' → logprob: -6.5414557456970215
    10. '<|end|>' → logprob: -6.7914557456970215

Token 99: ' main' (ID: 2758)
  Prédit: ' quick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' quick' → logprob: -0.00011737081513274461
    2. ' ' → logprob: -10.125117301940918
    3. ' ' → logprob: -10.875117301940918
    4. ' q' → logprob: -11.125117301940918
    5. ' space' → logprob: -11.375117301940918
    6. ' Quick' → logprob: -11.750117301940918
    7. 'quick' → logprob: -11.875117301940918
    8. ' partition' → logprob: -12.250117301940918
    9. ' fast' → logprob: -12.875117301940918
    10. ' qu' → logprob: -12.875117301940918

Token 100: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14327941834926605
    2. '():' → logprob: -2.0182793140411377
    3. '()' → logprob: -8.518279075622559
    4. ':' → logprob: -8.518279075622559
    5. '(:' → logprob: -9.143279075622559
    6. '_' → logprob: -10.893279075622559
    7. '(
' → logprob: -11.768279075622559
    8. '(**' → logprob: -11.768279075622559
    9. '(":' → logprob: -11.893279075622559
    10. '(_:' → logprob: -12.143279075622559

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08178211003541946
    2. ' ' → logprob: -3.206782102584839
    3. '    ' → logprob: -3.581782102584839
    4. '    
' → logprob: -6.081782341003418
    5. '[' → logprob: -6.206782341003418
    6. '<|end|>' → logprob: -6.581782341003418
    7. ' 
' → logprob: -6.956782341003418
    8. '  ' → logprob: -7.456782341003418
    9. ' pass' → logprob: -7.581782341003418
    10. ' A' → logprob: -7.581782341003418

Token 102: ' n' (ID: 297)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5030702352523804
    2. 'A' → logprob: -1.0030702352523804
    3. 'n' (adapté à ' n') → logprob: -4.37807035446167
    4. ' n' → logprob: -5.00307035446167
    5. ' arr' → logprob: -5.12807035446167
    6. 'arr' → logprob: -6.37807035446167
    7. '   ' → logprob: -7.37807035446167
    8. ' ' → logprob: -7.87807035446167
    9. 'import' → logprob: -8.378069877624512
    10. ' import' → logprob: -8.753069877624512

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007304067723453045
    2. '=' → logprob: -5.0073041915893555
    3. ' ' → logprob: -7.6323041915893555
    4. '  ' → logprob: -9.632304191589355
    5. ',' → logprob: -11.507304191589355
    6. '.' → logprob: -12.632304191589355
    7. 'space' → logprob: -12.632304191589355
    8. '   ' → logprob: -12.757304191589355
    9. '<|end|>' → logprob: -12.757304191589355
    10. ' ,' → logprob: -12.882304191589355

Token 104: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06086871027946472
    2. ' ' → logprob: -3.310868740081787
    3. 'int' → logprob: -4.060868740081787
    4. '10' → logprob: -5.310868740081787
    5. '5' → logprob: -8.310868263244629
    6. '[int' → logprob: -10.310868263244629
    7. '20' → logprob: -10.435868263244629
    8. '0' → logprob: -10.685868263244629
    9. ' 
' → logprob: -12.060868263244629
    10. ' len' → logprob: -12.185868263244629

Token 105: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5774507522583008
    2. '(input' → logprob: -0.8274507522583008
    3. 'input' → logprob: -6.577450752258301
    4. '()' → logprob: -9.9524507522583
    5. ' input' → logprob: -10.7024507522583
    6. '('' → logprob: -11.0774507522583
    7. ' (' → logprob: -11.3274507522583
    8. ' ' → logprob: -11.5774507522583
    9. '(
' → logprob: -12.3274507522583
    10. '=input' → logprob: -13.5774507522583

Token 106: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07460182160139084
    2. '())' → logprob: -2.824601888656616
    3. '(' → logprob: -4.449601650238037
    4. '('' → logprob: -7.699601650238037
    5. '("("' → logprob: -8.699602127075195
    6. '()>' → logprob: -9.699602127075195
    7. '("' → logprob: -9.824602127075195
    8. '());' → logprob: -10.824602127075195
    9. '().' → logprob: -10.949602127075195
    10. '()
' → logprob: -11.199602127075195

Token 107: '   ' (ID: 271)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.7955061197280884
    2. '   ' → logprob: -1.2955061197280884
    3. '<|end|>' → logprob: -1.9205061197280884
    4. ' 
' → logprob: -2.920506000518799
    5. '
' → logprob: -3.795506000518799
    6. '    
' → logprob: -4.045506000518799
    7. 'A' → logprob: -4.545506000518799
    8. ' ' → logprob: -5.295506000518799
    9. '  
' → logprob: -5.420506000518799
    10. '	A' → logprob: -5.670506000518799

Token 108: ' a' (ID: 261)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5234169960021973
    2. 'A' → logprob: -0.8984169960021973
    3. '	A' → logprob: -8.273416519165039
    4. '   ' → logprob: -11.523416519165039
    5. ' ' → logprob: -11.648416519165039
    6. ' 
' → logprob: -12.773416519165039
    7. 'a' (adapté à ' a') → logprob: -12.773416519165039
    8. ' ' → logprob: -12.773416519165039
    9. '<|end|>' → logprob: -12.773416519165039
    10. '```' → logprob: -13.898416519165039

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3877333402633667
    2. '=' → logprob: -1.1377333402633667
    3. ' ' → logprob: -7.512733459472656
    4. '=[]' → logprob: -8.262733459472656
    5. 'rray' → logprob: -10.637733459472656
    6. ' =[' → logprob: -11.887733459472656
    7. '[]' → logprob: -12.137733459472656
    8. 'r' → logprob: -12.137733459472656
    9. 's' → logprob: -12.387733459472656
    10. '[' → logprob: -12.762733459472656

Token 110: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.723369300365448
    2. ' list' → logprob: -1.7233693599700928
    3. ' []' → logprob: -1.9733693599700928
    4. '[]' → logprob: -2.4733693599700928
    5. '[list' → logprob: -2.9733693599700928
    6. '[' → logprob: -3.2233693599700928
    7. 'list' → logprob: -3.8483693599700928
    8. '[input' → logprob: -7.598369121551514
    9. '[int' → logprob: -8.348369598388672
    10. '[List' → logprob: -9.723369598388672

Token 111: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00036834771162830293
    2. ' int' → logprob: -8.625368118286133
    3. '0' → logprob: -8.750368118286133
    4. ']int' → logprob: -10.875368118286133
    5. ']' → logprob: -11.875368118286133
    6. '*' → logprob: -14.125368118286133
    7. '[int' → logprob: -14.250368118286133
    8. ' ]' → logprob: -14.500368118286133
    9. 'i' → logprob: -14.625368118286133
    10. 'list' → logprob: -14.875368118286133

Token 112: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11324966698884964
    2. '(input' → logprob: -2.9882497787475586
    3. '(x' → logprob: -2.9882497787475586
    4. '()' → logprob: -5.488249778747559
    5. '()]' → logprob: -6.488249778747559
    6. '(i' → logprob: -7.988249778747559
    7. '(
' → logprob: -8.988249778747559
    8. ']' → logprob: -10.238249778747559
    9. '(`' → logprob: -11.238249778747559
    10. '(

' → logprob: -11.363249778747559

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47703102231025696
    2. '(input' → logprob: -1.2270309925079346
    3. '()' → logprob: -3.2270309925079346
    4. 'input' → logprob: -3.8520309925079346
    5. '(' → logprob: -4.602031230926514
    6. '())' → logprob: -4.852031230926514
    7. 'for' → logprob: -5.852031230926514
    8. '()]' → logprob: -6.352031230926514
    9. '(x' → logprob: -7.102031230926514
    10. '=input' → logprob: -7.977031230926514

Token 114: ' for' (ID: 395)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8208885788917542
    2. 'for' → logprob: -1.6958885192871094
    3. '(' → logprob: -2.1958885192871094
    4. 'input' → logprob: -2.4458885192871094
    5. '()' → logprob: -2.6958885192871094
    6. ')' → logprob: -2.6958885192871094
    7. ' for' → logprob: -4.070888519287109
    8. '()]' → logprob: -4.445888519287109
    9. ']' → logprob: -4.945888519287109
    10. '(x' → logprob: -6.320888519287109

Token 115: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.02124575525522232
    2. 'input' → logprob: -4.146245956420898
    3. ' ' → logprob: -5.271245956420898
    4. '(input' → logprob: -10.646245956420898
    5. '<|end|>' → logprob: -10.771245956420898
    6. '=input' → logprob: -12.271245956420898
    7. ' range' → logprob: -12.521245956420898
    8. '	input' → logprob: -12.896245956420898
    9. '  ' → logprob: -13.521245956420898
    10. '<|end|>' → logprob: -13.771245956420898

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11431706696748734
    2. 'in' → logprob: -2.4893171787261963
    3. ' input' → logprob: -4.364316940307617
    4. 'input' → logprob: -4.864316940307617
    5. '(input' → logprob: -5.989316940307617
    6. ' ' → logprob: -6.989316940307617
    7. '(' → logprob: -7.489316940307617
    8. '=input' → logprob: -7.739316940307617
    9. '  ' → logprob: -9.739316940307617
    10. ',input' → logprob: -10.489316940307617

Token 117: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31327879428863525
    2. 'input' → logprob: -1.3132787942886353
    3. '(input' → logprob: -11.688279151916504
    4. ' ' → logprob: -12.313279151916504
    5. ' range' → logprob: -12.938279151916504
    6. 'range' → logprob: -13.813279151916504
    7. '=input' → logprob: -15.688279151916504
    8. '(' → logprob: -15.813279151916504
    9. '	input' → logprob: -16.188278198242188
    10. ',input' → logprob: -16.938278198242188

Token 118: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0016085283132269979
    2. '()' → logprob: -6.501608371734619
    3. '()]' → logprob: -9.501608848571777
    4. '(' → logprob: -10.626608848571777
    5. ' ().' → logprob: -12.501608848571777
    6. '()].' → logprob: -13.376608848571777
    7. '())' → logprob: -14.376608848571777
    8. ' ()' → logprob: -14.626608848571777
    9. '().'' → logprob: -15.376608848571777
    10. '()[' → logprob: -15.626608848571777

Token 119: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006821816321462393
    2. 'strip' → logprob: -5.006821632385254
    3. 'rstrip' → logprob: -9.631821632385254
    4. ' split' → logprob: -10.131821632385254
    5. ' strip' → logprob: -14.006821632385254
    6. '(split' → logprob: -16.00682258605957
    7. ' ' → logprob: -16.88182258605957
    8. 'spl' → logprob: -17.13182258605957
    9. '.split' → logprob: -18.50682258605957
    10. 'replace' → logprob: -18.88182258605957

Token 120: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.005338943563401699
    2. '()' → logprob: -5.2553391456604
    3. '())' → logprob: -10.130338668823242
    4. '(' → logprob: -10.130338668823242
    5. '('' → logprob: -11.255338668823242
    6. '()]
' → logprob: -11.630338668823242
    7. ')]' → logprob: -13.505338668823242
    8. ']' → logprob: -13.880338668823242
    9. '()][' → logprob: -14.755338668823242
    10. ' ()' → logprob: -15.630338668823242

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23763489723205566
    2. '
' → logprob: -1.9876348972320557
    3. '    
' → logprob: -3.4876348972320557
    4. '<|end|>' → logprob: -4.362634658813477
    5. 'i' → logprob: -5.362634658813477
    6. ' 
' → logprob: -5.487634658813477
    7. '  
' → logprob: -5.487634658813477
    8. 'def' → logprob: -5.737634658813477
    9. 'n' → logprob: -5.737634658813477
    10. 'a' → logprob: -6.112634658813477

Token 122: ' x' (ID: 1215)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.23411475121974945
    2. 'q' → logprob: -1.8591147661209106
    3. 'l' → logprob: -3.859114646911621
    4. 'pivot' → logprob: -4.984114646911621
    5. 'def' → logprob: -5.109114646911621
    6. 'pi' → logprob: -5.234114646911621
    7. ' p' → logprob: -5.484114646911621
    8. 'k' → logprob: -5.734114646911621
    9. 'pos' → logprob: -6.484114646911621
    10. ' q' → logprob: -6.859114646911621

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10516422241926193
    2. '=' → logprob: -2.3551642894744873
    3. ',' → logprob: -5.480164051055908
    4. '_' → logprob: -7.480164051055908
    5. ' ' → logprob: -9.355164527893066
    6. '   ' → logprob: -10.855164527893066
    7. '[' → logprob: -10.855164527893066
    8. 'p' → logprob: -11.480164527893066
    9. '=[]' → logprob: -11.730164527893066
    10. '=int' → logprob: -11.855164527893066

Token 124: ' partition' (ID: 31512)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -1.1594101190567017
    2. 'a' → logprob: -1.4094101190567017
    3. ' a' → logprob: -1.6594101190567017
    4. ' partition' → logprob: -2.534409999847412
    5. ' n' → logprob: -2.784409999847412
    6. 'n' → logprob: -3.659409999847412
    7. ' max' → logprob: -4.034409999847412
    8. ' ' → logprob: -4.284409999847412
    9. ' int' → logprob: -4.534409999847412
    10. '0' → logprob: -4.659409999847412

Token 125: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38705772161483765
    2. '(a' → logprob: -1.1370577812194824
    3. '(A' → logprob: -8.887057304382324
    4. '(
' → logprob: -10.137057304382324
    5. '(x' → logprob: -12.387057304382324
    6. '(

' → logprob: -13.637057304382324
    7. '<|end|>' → logprob: -13.887057304382324
    8. '(n' → logprob: -14.012057304382324
    9. ' (' → logprob: -14.762057304382324
    10. '(array' → logprob: -15.012057304382324

Token 126: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23354966938495636
    2. ',' → logprob: -1.60854971408844
    3. '(a' → logprob: -4.98354959487915
    4. ' ,' → logprob: -7.73354959487915
    5. ',a' → logprob: -7.85854959487915
    6. '(
' → logprob: -8.983550071716309
    7. '<|end|>' → logprob: -9.108550071716309
    8. ')' → logprob: -10.108550071716309
    9. ',(' → logprob: -10.358550071716309
    10. '(n' → logprob: -10.483550071716309

Token 127: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007106438861228526
    2. ' ' → logprob: -7.250710487365723
    3. '<|end|>' → logprob: -14.375710487365723
    4. ' 
' → logprob: -17.25071144104004
    5. '1' → logprob: -17.37571144104004
    6. ',' → logprob: -18.00071144104004
    7. ')' → logprob: -18.37571144104004
    8. '۰' → logprob: -19.00071144104004
    9. '  
' → logprob: -19.12571144104004
    10. '
' → logprob: -19.37571144104004

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '1' → logprob: -17.250003814697266
    4. '۰' → logprob: -17.500003814697266
    5. '<|end|>' → logprob: -17.875003814697266
    6. '०' → logprob: -19.125003814697266
    7. '```' → logprob: -19.125003814697266
    8. '０' → logprob: -19.375003814697266
    9. ')' → logprob: -19.562503814697266
    10. '[' → logprob: -19.687503814697266

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029582080896943808
    2. ',n' → logprob: -6.252958297729492
    3. ' ,' → logprob: -7.002958297729492
    4. ',len' → logprob: -9.127958297729492
    5. ' ' → logprob: -13.002958297729492
    6. 'len' → logprob: -13.502958297729492
    7. '‌,' → logprob: -13.877958297729492
    8. ',
' → logprob: -14.002958297729492
    9. '',' → logprob: -14.377958297729492
    10. '，' → logprob: -14.502958297729492

Token 130: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023267609998583794
    2. ' n' → logprob: -3.7732675075531006
    3. 'len' → logprob: -10.89826774597168
    4. '<|end|>' → logprob: -13.52326774597168
    5. ' len' → logprob: -13.64826774597168
    6. '	n' → logprob: -14.64826774597168
    7. ' ' → logprob: -14.77326774597168
    8. ')n' → logprob: -15.52326774597168
    9. '(n' → logprob: -16.64826774597168
    10. '<n' → logprob: -16.89826774597168

Token 131: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000918604782782495
    2. ' -' → logprob: -7.000918388366699
    3. ')' → logprob: -12.0009183883667
    4. '<|end|>' → logprob: -14.6259183883667
    5. ' ' → logprob: -15.1259183883667
    6. '-)' → logprob: -15.8759183883667
    7. '1' → logprob: -17.125919342041016
    8. ')-' → logprob: -18.625919342041016
    9. ' )' → logprob: -18.875919342041016
    10. '```' → logprob: -19.000919342041016

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.069664333248511e-05
    2. ' ' → logprob: -11.375020980834961
    3. ')' → logprob: -11.750020980834961
    4. '<|end|>' → logprob: -14.750020980834961
    5. '```' → logprob: -14.750020980834961
    6. '۱' → logprob: -17.06252098083496
    7. '`' → logprob: -17.12502098083496
    8. '  ' → logprob: -17.50002098083496
    9. '-' → logprob: -17.56252098083496
    10. 's' → logprob: -17.56252098083496

Token 133: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -15.375001907348633
    4. '))' → logprob: -17.875001907348633
    5. ')#' → logprob: -18.000001907348633
    6. ')

' → logprob: -18.375001907348633
    7. ')return' → logprob: -19.125001907348633
    8. '),' → logprob: -19.250001907348633
    9. ')}' → logprob: -19.500001907348633
    10. ')`' → logprob: -19.500001907348633

Token 134: ' 
' (ID: 793)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13723979890346527
    2. '<|end|>' → logprob: -2.762239694595337
    3. '   ' → logprob: -3.012239694595337
    4. 'print' → logprob: -4.512239933013916
    5. ')' → logprob: -6.137239933013916
    6. ' print' → logprob: -7.512239933013916
    7. '    
' → logprob: -7.512239933013916
    8. '  
' → logprob: -7.887239933013916
    9. '#' → logprob: -8.262239456176758
    10. '```' → logprob: -8.387239456176758

Token 135: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6019699573516846
    2. '
' → logprob: -1.4769699573516846
    3. '   ' → logprob: -1.9769699573516846
    4. '<|end|>' → logprob: -2.7269699573516846
    5. ')' → logprob: -4.7269697189331055
    6. ' print' → logprob: -5.3519697189331055
    7. '#' → logprob: -6.4769697189331055
    8. '[' → logprob: -6.7269697189331055
    9. '    
' → logprob: -6.7269697189331055
    10. '#print' → logprob: -7.8519697189331055

Token 136: ' A' (ID: 355)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019201948307454586
    2. '   ' → logprob: -6.501920223236084
    3. 'for' → logprob: -8.251919746398926
    4. '
' → logprob: -9.501919746398926
    5. ' print' → logprob: -10.001919746398926
    6. '    
' → logprob: -11.501919746398926
    7. '#print' → logprob: -11.626919746398926
    8. '#' → logprob: -12.751919746398926
    9. ')' → logprob: -12.876919746398926
    10. ' for' → logprob: -13.001919746398926

Token 137: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2313009649515152
    2. '<|end|>' → logprob: -2.6063010692596436
    3. '[:]' → logprob: -2.7313010692596436
    4. ')' → logprob: -4.1063008308410645
    5. ' ' → logprob: -4.3563008308410645
    6. '.' → logprob: -4.8563008308410645
    7. '[x' → logprob: -5.2313008308410645
    8. '[n' → logprob: -5.7313008308410645
    9. '[]' → logprob: -5.7313008308410645
    10. ']' → logprob: -6.1063008308410645

Token 138: ' [' (ID: 723)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20147912204265594
    2. ' a' → logprob: -1.7014790773391724
    3. '[a' → logprob: -10.451478958129883
    4. '[' → logprob: -10.951478958129883
    5. '	a' → logprob: -12.201478958129883
    6. ' [' → logprob: -12.326478958129883
    7. ' ' → logprob: -12.576478958129883
    8. 'x' → logprob: -12.826478958129883
    9. ''a' → logprob: -14.326478958129883
    10. ' ' → logprob: -14.451478958129883

Token 139: 'str' (ID: 689)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6934701204299927
    2. '0' → logprob: -1.3184701204299927
    3. 'x' → logprob: -1.8184701204299927
    4. 'i' → logprob: -2.818470001220703
    5. 'int' → logprob: -5.443470001220703
    6. '1' → logprob: -6.318470001220703
    7. 'n' → logprob: -6.818470001220703
    8. 'str' → logprob: -7.068470001220703
    9. '-' → logprob: -7.568470001220703
    10. ']' → logprob: -8.443470001220703

Token 140: '(a' (ID: 6271)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2272113561630249
    2. '(x' → logprob: -2.1022114753723145
    3. '(a' → logprob: -2.8522114753723145
    4. '(num' → logprob: -4.4772114753723145
    5. '(e' → logprob: -4.9772114753723145
    6. '(elem' → logprob: -6.7272114753723145
    7. '(el' → logprob: -6.9772114753723145
    8. '(ai' → logprob: -7.3522114753723145
    9. '(v' → logprob: -7.6022114753723145
    10. '(' → logprob: -7.6022114753723145

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006654742173850536
    2. '[j' → logprob: -5.381654739379883
    3. '[x' → logprob: -6.256654739379883
    4. '[k' → logprob: -9.756654739379883
    5. 'i' → logprob: -10.506654739379883
    6. '[' → logprob: -11.131654739379883
    7. '[_' → logprob: -11.881654739379883
    8. '[idx' → logprob: -13.131654739379883
    9. '[index' → logprob: -13.381654739379883
    10. '[q' → logprob: -14.131654739379883

Token 142: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3566136956214905
    2. ')]' → logprob: -1.4816136360168457
    3. ')])' → logprob: -2.8566136360168457
    4. '])' → logprob: -4.356613636016846
    5. ' )' → logprob: -6.481613636016846
    6. '])]' → logprob: -7.981613636016846
    7. ']' → logprob: -8.981614112854004
    8. ' ])' → logprob: -9.606614112854004
    9. '   ' → logprob: -9.856614112854004
    10. ' ' → logprob: -9.856614112854004

Token 143: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16692273318767548
    2. ' for' → logprob: -1.916922688484192
    3. ')' → logprob: -5.291922569274902
    4. ']' → logprob: -6.916922569274902
    5. ' ' → logprob: -7.791922569274902
    6. '	for' → logprob: -9.291922569274902
    7. '+' → logprob: -10.041922569274902
    8. '   ' → logprob: -10.791922569274902
    9. ' +' → logprob: -11.166922569274902
    10. '()' → logprob: -11.291922569274902

Token 144: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029761482030153275
    2. 'range' → logprob: -3.529761552810669
    3. ' ' → logprob: -12.02976131439209
    4. '	range' → logprob: -13.15476131439209
    5. ' xrange' → logprob: -13.77976131439209
    6. '(range' → logprob: -13.90476131439209
    7. ' i' → logprob: -14.52976131439209
    8. 'i' → logprob: -14.52976131439209
    9. '  ' → logprob: -17.279762268066406
    10. '_range' → logprob: -17.279762268066406

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31596654653549194
    2. ' range' → logprob: -1.5659666061401367
    3. 'range' → logprob: -3.5659666061401367
    4. '(range' → logprob: -4.065966606140137
    5. ' ' → logprob: -5.065966606140137
    6. '(' → logprob: -5.315966606140137
    7. 'in' → logprob: -5.440966606140137
    8. '	range' → logprob: -7.940966606140137
    9. ' xrange' → logprob: -8.315966606140137
    10. ')' → logprob: -9.065966606140137

Token 146: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02056197077035904
    2. 'range' → logprob: -3.895561933517456
    3. ' ' → logprob: -11.895562171936035
    4. '	range' → logprob: -12.145562171936035
    5. ' ran' → logprob: -12.645562171936035
    6. ' xrange' → logprob: -13.145562171936035
    7. '(range' → logprob: -13.520562171936035
    8. '   ' → logprob: -14.895562171936035
    9. '  ' → logprob: -15.020562171936035
    10. ' r' → logprob: -16.14556121826172

Token 147: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08751967549324036
    2. '(' → logprob: -2.587519645690918
    3. '(x' → logprob: -4.837519645690918
    4. '(len' → logprob: -7.337519645690918
    5. '(
' → logprob: -12.087519645690918
    6. 'n' → logprob: -12.337519645690918
    7. 'x' → logprob: -12.962519645690918
    8. ' (' → logprob: -13.587519645690918
    9. '0' → logprob: -15.087519645690918
    10. '(

' → logprob: -15.087519645690918

Token 148: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00012403888104017824
    2. ']' → logprob: -9.500123977661133
    3. ')' → logprob: -10.250123977661133
    4. ' )' → logprob: -11.500123977661133
    5. '   ' → logprob: -14.125123977661133
    6. ' ]' → logprob: -14.500123977661133
    7. ' ' → logprob: -14.625123977661133
    8. ')]
' → logprob: -14.875123977661133
    9. '+' → logprob: -15.000123977661133
    10. ')])' → logprob: -15.125123977661133

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12314664572477341
    2. 'print' → logprob: -2.4981465339660645
    3. '
' → logprob: -3.8731465339660645
    4. ' print' → logprob: -4.7481465339660645
    5. '<|end|>' → logprob: -6.1231465339660645
    6. '	print' → logprob: -6.9981465339660645
    7. '    
' → logprob: -7.9981465339660645
    8. '#' → logprob: -8.998147010803223
    9. '```' → logprob: -9.373147010803223
    10. ' ' → logprob: -9.498147010803223

Token 150: ' A' (ID: 355)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013285996101330966
    2. ' print' → logprob: -9.12513256072998
    3. '   ' → logprob: -11.12513256072998
    4. 'for' → logprob: -11.75013256072998
    5. '#print' → logprob: -14.50013256072998
    6. '
' → logprob: -15.50013256072998
    7. '	print' → logprob: -16.125133514404297
    8. '#' → logprob: -16.375133514404297
    9. '    
' → logprob: -16.625133514404297
    10. '<|end|>' → logprob: -16.625133514404297

Token 151: '[x' (ID: 17295)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11028296500444412
    2. '.join' → logprob: -3.4852828979492188
    3. '<|end|>' → logprob: -3.6102828979492188
    4. '[' → logprob: -3.7352828979492188
    5. 'print' → logprob: -4.110282897949219
    6. '[:]' → logprob: -5.610282897949219
    7. '.print' → logprob: -7.735282897949219
    8. '#' → logprob: -7.985282897949219
    9. '.append' → logprob: -8.110282897949219
    10. ',' → logprob: -8.110282897949219

Token 152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004174321889877319
    2. '].' → logprob: -6.25417423248291
    3. ' ]' → logprob: -7.12917423248291
    4. ':]' → logprob: -7.37917423248291
    5. '+' → logprob: -8.25417423248291
    6. ']+' → logprob: -8.50417423248291
    7. '],' → logprob: -9.50417423248291
    8. ')]' → logprob: -10.00417423248291
    9. ']+=' → logprob: -10.12917423248291
    10. ']=' → logprob: -10.37917423248291

Token 153: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1494619846343994
    2. 'print' → logprob: -1.2744619846343994
    3. '+' → logprob: -1.3994619846343994
    4. '[' → logprob: -3.0244619846343994
    5. '<|end|>' → logprob: -3.5244619846343994
    6. ')' → logprob: -3.7744619846343994
    7. '=' → logprob: -4.02446174621582
    8. '+=' → logprob: -5.27446174621582
    9. '+='' → logprob: -5.39946174621582
    10. ' =' → logprob: -5.52446174621582

Token 154: ' '['' (ID: 114468)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6413559317588806
    2. '"' → logprob: -0.7663559317588806
    3. '"[' → logprob: -5.266355991363525
    4. ''*' → logprob: -6.641355991363525
    5. '"*' → logprob: -6.891355991363525
    6. '">' → logprob: -8.391355514526367
    7. ''"' → logprob: -8.766355514526367
    8. '"#' → logprob: -8.891355514526367
    9. ''[' → logprob: -8.891355514526367
    10. '[' → logprob: -9.891355514526367

Token 155: ' +' (ID: 659)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2216249406337738
    2. '<|end|>' → logprob: -2.4716248512268066
    3. ''' → logprob: -2.8466248512268066
    4. '+' → logprob: -3.5966248512268066
    5. '']' → logprob: -4.596624851226807
    6. ''A' → logprob: -4.596624851226807
    7. 'x' → logprob: -6.346624851226807
    8. '+A' → logprob: -6.846624851226807
    9. ']' → logprob: -7.096624851226807
    10. '[' → logprob: -7.221624851226807

Token 156: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.431207682704553e-05
    2. 'a' → logprob: -10.125054359436035
    3. ' A' → logprob: -11.375054359436035
    4. 'str' → logprob: -13.000054359436035
    5. ''A' → logprob: -15.875054359436035
    6. '<|end|>' → logprob: -16.25005340576172
    7. '_A' → logprob: -16.87505340576172
    8. ' ' → logprob: -17.50005340576172
    9. ']' → logprob: -17.75005340576172
    10. '  ' → logprob: -17.87505340576172

Token 157: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.702754474943504e-05
    2. 'x' → logprob: -10.50003719329834
    3. '[' → logprob: -11.62503719329834
    4. '[
' → logprob: -15.50003719329834
    5. '```' → logprob: -17.000036239624023
    6. ' x' → logprob: -17.125036239624023
    7. '<|end|>' → logprob: -17.250036239624023
    8. '<x' → logprob: -17.375036239624023
    9. '	x' → logprob: -17.500036239624023
    10. ' ' → logprob: -17.875036239624023

Token 158: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015546477399766445
    2. ']+' → logprob: -4.3905463218688965
    3. '+' → logprob: -6.3905463218688965
    4. '']' → logprob: -6.6405463218688965
    5. ' ]' → logprob: -11.265546798706055
    6. '"]' → logprob: -11.265546798706055
    7. '+]' → logprob: -11.515546798706055
    8. '+"]' → logprob: -12.265546798706055
    9. ' +' → logprob: -12.765546798706055
    10. ']
' → logprob: -13.515546798706055

Token 159: ' +' (ID: 659)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.7138391733169556
    2. ']' → logprob: -1.0888391733169556
    3. '+' → logprob: -1.8388391733169556
    4. ' +' → logprob: -4.713839054107666
    5. '+"]' → logprob: -5.463839054107666
    6. '"]' → logprob: -7.713839054107666
    7. ']+' → logprob: -8.463839530944824
    8. '+]' → logprob: -8.838839530944824
    9. '+'' → logprob: -9.338839530944824
    10. '**' → logprob: -9.588839530944824

Token 160: ' ']' (ID: 98922)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0001863750658230856
    2. ']' → logprob: -9.1251859664917
    3. '"]' → logprob: -9.6251859664917
    4. ''' → logprob: -12.1251859664917
    5. ' '' → logprob: -12.7501859664917
    6. ''],' → logprob: -14.5001859664917
    7. ']'' → logprob: -14.8751859664917
    8. ''s' → logprob: -15.0001859664917
    9. '   ' → logprob: -15.1251859664917
    10. ' ']' → logprob: -15.2501859664917

Token 161: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9365856647491455
    2. '<|end|>' → logprob: -1.0615856647491455
    3. 'print' → logprob: -2.3115856647491455
    4. ' ' → logprob: -2.6865856647491455
    5. '   ' → logprob: -3.5615856647491455
    6. ')' → logprob: -4.436585426330566
    7. ']' → logprob: -4.686585426330566
    8. '    
' → logprob: -4.811585426330566
    9. '<|end|>' → logprob: -4.936585426330566
    10. '  
' → logprob: -5.311585426330566

Token 162: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13182176649570465
    2. ' print' → logprob: -2.381821870803833
    3. '   ' → logprob: -3.506821870803833
    4. '<|end|>' → logprob: -7.631821632385254
    5. '    
' → logprob: -8.131821632385254
    6. ' 
' → logprob: -9.256821632385254
    7. ' for' → logprob: -9.756821632385254
    8. '	print' → logprob: -10.256821632385254
    9. '    ' → logprob: -10.256821632385254
    10. ' ' → logprob: -10.381821632385254

Token 163: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015140273608267307
    2. ' print' → logprob: -6.501513957977295
    3. '   ' → logprob: -11.501514434814453
    4. '    
' → logprob: -14.626514434814453
    5. ' 
' → logprob: -15.001514434814453
    6. '	print' → logprob: -15.626514434814453
    7. '#print' → logprob: -15.751514434814453
    8. 'for' (adapté à ' for') → logprob: -15.751514434814453
    9. '
' → logprob: -16.001514434814453
    10. '    ' → logprob: -16.251514434814453

Token 164: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008878801949322224
    2. 'i' → logprob: -4.758878707885742
    3. '(i' → logprob: -9.258878707885742
    4. ' ' → logprob: -9.883878707885742
    5. ' e' → logprob: -10.258878707885742
    6. '(' → logprob: -10.508878707885742
    7. ' (' → logprob: -10.633878707885742
    8. '	i' → logprob: -11.633878707885742
    9. 'e' → logprob: -11.883878707885742
    10. ' _' → logprob: -12.133878707885742

Token 165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010030882433056831
    2. 'in' → logprob: -4.760030746459961
    3. ' ' → logprob: -6.635030746459961
    4. ' range' → logprob: -10.010030746459961
    5. '  ' → logprob: -11.135030746459961
    6. ',' → logprob: -11.510030746459961
    7. 'range' → logprob: -11.635030746459961
    8. '<|end|>' → logprob: -12.385030746459961
    9. ' i' → logprob: -13.010030746459961
    10. '    ' → logprob: -13.135030746459961

Token 166: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07889694720506668
    2. 'range' → logprob: -2.578896999359131
    3. ' A' → logprob: -12.953896522521973
    4. '(range' → logprob: -13.328896522521973
    5. ' ' → logprob: -13.578896522521973
    6. 'A' → logprob: -13.828896522521973
    7. '	range' → logprob: -15.078896522521973
    8. '  ' → logprob: -15.453896522521973
    9. '   ' → logprob: -15.578896522521973
    10. ' xrange' → logprob: -15.578896522521973

Token 167: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03909970819950104
    2. '(' → logprob: -3.28909969329834
    3. '(len' → logprob: -7.28909969329834
    4. ' (' → logprob: -7.91409969329834
    5. '(
' → logprob: -12.28909969329834
    6. ' n' → logprob: -13.03909969329834
    7. 'n' → logprob: -13.66409969329834
    8. '(

' → logprob: -14.41409969329834
    9. '	n' → logprob: -15.66409969329834
    10. ' ' → logprob: -16.164100646972656

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00024763107649050653
    2. '):
' → logprob: -8.875247955322266
    3. ' ):' → logprob: -9.250247955322266
    4. ')' → logprob: -12.250247955322266
    5. ':' → logprob: -12.250247955322266
    6. '   ' → logprob: -14.750247955322266
    7. '():' → logprob: -14.875247955322266
    8. '+' → logprob: -15.250247955322266
    9. '}:' → logprob: -15.250247955322266
    10. '):
' → logprob: -15.500247955322266

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09304303675889969
    2. '   ' → logprob: -2.843043088912964
    3. ' print' → logprob: -4.093042850494385
    4. '    ' → logprob: -5.093042850494385
    5. '<|end|>' → logprob: -5.468042850494385
    6. 'print' → logprob: -6.468042850494385
    7. ' ' → logprob: -6.843042850494385
    8. ' if' → logprob: -8.343043327331543
    9. '        
' → logprob: -8.968043327331543
    10. '    
' → logprob: -9.218043327331543

Token 170: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.025065230205655098
    2. ' print' → logprob: -3.7750651836395264
    3. 'if' (adapté à ' if') → logprob: -6.9000654220581055
    4. '   ' → logprob: -7.4000654220581055
    5. ' if' → logprob: -9.025065422058105
    6. '    ' → logprob: -10.025065422058105
    7. '       ' → logprob: -11.025065422058105
    8. ' ' → logprob: -12.025065422058105
    9. '    
' → logprob: -12.400065422058105
    10. '	print' → logprob: -12.900065422058105

Token 171: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20192137360572815
    2. 'i' → logprob: -1.7019213438034058
    3. ' A' → logprob: -8.576921463012695
    4. ' ' → logprob: -8.701921463012695
    5. 'A' → logprob: -9.326921463012695
    6. ' not' → logprob: -10.826921463012695
    7. ' True' → logprob: -11.326921463012695
    8. '  ' → logprob: -12.576921463012695
    9. '(i' → logprob: -12.701921463012695
    10. '	i' → logprob: -12.701921463012695

Token 172: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1667262315750122
    2. '!=' → logprob: -1.4167262315750122
    3. ' !=' → logprob: -1.4167262315750122
    4. ' ==' → logprob: -1.6667262315750122
    5. ' ' → logprob: -5.916726112365723
    6. ' >' → logprob: -5.916726112365723
    7. '=' → logprob: -6.291726112365723
    8. ' <' → logprob: -6.416726112365723
    9. '<' → logprob: -6.541726112365723
    10. '>' → logprob: -6.541726112365723

Token 173: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.030903175473213196
    2. ' x' → logprob: -4.280903339385986
    3. 'n' → logprob: -4.780903339385986
    4. '0' → logprob: -4.905903339385986
    5. ' n' → logprob: -7.405903339385986
    6. ' ' → logprob: -8.655902862548828
    7. 'len' → logprob: -11.405902862548828
    8. '	x' → logprob: -12.405902862548828
    9. '   ' → logprob: -13.155902862548828
    10. '1' → logprob: -13.655902862548828

Token 174: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002565672155469656
    2. ' -' → logprob: -6.002565860748291
    3. '1' → logprob: -9.877565383911133
    4. ' ' → logprob: -10.502565383911133
    5. '<|end|>' → logprob: -12.002565383911133
    6. 'x' → logprob: -13.877565383911133
    7. '   ' → logprob: -14.002565383911133
    8. '-
' → logprob: -14.502565383911133
    9. ''-' → logprob: -15.002565383911133
    10. '<|end|>' → logprob: -15.127565383911133

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026765360962599516
    2. ' ' → logprob: -8.37526798248291
    3. '2' → logprob: -11.50026798248291
    4. '<|end|>' → logprob: -11.50026798248291
    5. '-' → logprob: -12.62526798248291
    6. '   ' → logprob: -12.87526798248291
    7. '```' → logprob: -13.37526798248291
    8. 'x' → logprob: -13.50026798248291
    9. ')' → logprob: -13.56276798248291
    10. '0' → logprob: -13.87526798248291

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04634033143520355
    2. ':
' → logprob: -3.171340227127075
    3. ' and' → logprob: -6.296340465545654
    4. '           ' → logprob: -7.921340465545654
    5. '       ' → logprob: -8.171339988708496
    6. ' or' → logprob: -8.171339988708496
    7. '.' → logprob: -8.921339988708496
    8. '   ' → logprob: -9.421339988708496
    9. 'and' → logprob: -9.546339988708496
    10. ',' → logprob: -9.671339988708496

Token 177: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04741263389587402
    2. '       ' → logprob: -3.797412633895874
    3. ' print' → logprob: -4.547412872314453
    4. 'print' → logprob: -5.047412872314453
    5. ':' → logprob: -5.172412872314453
    6. '	       ' → logprob: -8.172412872314453
    7. '   ' → logprob: -8.547412872314453
    8. '<|end|>' → logprob: -8.922412872314453
    9. '         ' → logprob: -9.547412872314453
    10. '```' → logprob: -9.672412872314453

Token 178: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07624662667512894
    2. ' print' → logprob: -3.201246738433838
    3. '       ' → logprob: -3.451246738433838
    4. '   ' → logprob: -7.201246738433838
    5. '           ' → logprob: -8.57624626159668
    6. '
' → logprob: -10.07624626159668
    7. '	print' → logprob: -11.32624626159668
    8. '               ' → logprob: -13.45124626159668
    9. '.print' → logprob: -13.70124626159668
    10. ' ' → logprob: -13.70124626159668

Token 179: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -5.2762428822461516e-05
    2. '(' → logprob: -9.875052452087402
    3. 'A' → logprob: -14.375052452087402
    4. '('' → logprob: -15.250052452087402
    5. '()' → logprob: -16.12505340576172
    6. ' (' → logprob: -16.50005340576172
    7. '(a' → logprob: -16.62505340576172
    8. '((' → logprob: -16.75005340576172
    9. '(
' → logprob: -16.87505340576172
    10. '   ' → logprob: -18.25005340576172

Token 180: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -12.375004768371582
    3. ')' → logprob: -15.000004768371582
    4. ')[' → logprob: -16.1250057220459
    5. 'i' → logprob: -16.7500057220459
    6. '[n' → logprob: -16.8750057220459
    7. '][' → logprob: -17.3750057220459
    8. '[
' → logprob: -17.6250057220459
    9. ']' → logprob: -18.0000057220459
    10. '[x' → logprob: -18.2500057220459

Token 181: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029351349803619087
    2. ')
' → logprob: -8.375293731689453
    3. ',' → logprob: -10.500293731689453
    4. ' )' → logprob: -10.875293731689453
    5. ',end' → logprob: -12.000293731689453
    6. '))' → logprob: -12.500293731689453
    7. '')' → logprob: -12.625293731689453
    8. '   ' → logprob: -14.375293731689453
    9. ')

' → logprob: -15.000293731689453
    10. ',)' → logprob: -15.125293731689453

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05374891310930252
    2. 'else' → logprob: -3.803748846054077
    3. ' else' → logprob: -4.303749084472656
    4. ',' → logprob: -4.803749084472656
    5. '           ' → logprob: -5.928749084472656
    6. '   ' → logprob: -6.053749084472656
    7. '<|end|>' → logprob: -6.303749084472656
    8. ' ,' → logprob: -8.178749084472656
    9. 'elif' → logprob: -8.178749084472656
    10. ')' → logprob: -8.303749084472656

Token 183: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5919686555862427
    2. 'else' (adapté à ' else') → logprob: -1.0919686555862427
    3. ' else' → logprob: -2.216968536376953
    4. '   ' → logprob: -7.091968536376953
    5. 'elif' → logprob: -7.216968536376953
    6. '	else' → logprob: -7.966968536376953
    7. ' elif' → logprob: -9.216968536376953
    8. '    ' → logprob: -9.591968536376953
    9. ' ' → logprob: -9.716968536376953
    10. '	' → logprob: -10.591968536376953

Token 184: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0277886390686035
    2. ' print' → logprob: -1.6527886390686035
    3. ' ' → logprob: -1.9027886390686035
    4. ':' → logprob: -2.5277886390686035
    5. '    ' → logprob: -2.9027886390686035
    6. '            ' → logprob: -3.1527886390686035
    7. ',' → logprob: -3.1527886390686035
    8. 'print' → logprob: -3.9027886390686035
    9. '   ' → logprob: -4.1527886390686035
    10. '        ' → logprob: -4.4027886390686035

Token 185: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005281546153128147
    2. ' print' → logprob: -5.255281448364258
    3. '   ' → logprob: -11.255281448364258
    4. '    ' → logprob: -11.630281448364258
    5. '       ' → logprob: -11.630281448364258
    6. '        ' → logprob: -11.880281448364258
    7. '           ' → logprob: -12.255281448364258
    8. '	print' → logprob: -12.630281448364258
    9. ' ' → logprob: -14.255281448364258
    10. '(print' → logprob: -14.880281448364258

Token 186: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.7432603272027336e-06
    2. ' print' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.250001907348633
    4. '    ' → logprob: -17.375001907348633
    5. ' ' → logprob: -19.625001907348633
    6. '	print' → logprob: -19.750001907348633
    7. '.print' → logprob: -19.875001907348633
    8. '     ' → logprob: -20.125001907348633
    9. '       ' → logprob: -20.250001907348633
    10. '           ' → logprob: -20.500001907348633

Token 187: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.014164566993713379
    2. '(' → logprob: -4.264164447784424
    3. '('' → logprob: -14.014164924621582
    4. '((' → logprob: -16.639163970947266
    5. '(a' → logprob: -17.139163970947266
    6. '(
' → logprob: -17.264163970947266
    7. 'A' → logprob: -17.389163970947266
    8. '(f' → logprob: -17.514163970947266
    9. '()' → logprob: -17.764163970947266
    10. '(E' → logprob: -17.889163970947266

Token 188: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5834683179855347
    2. '(i' → logprob: -0.8334683179855347
    3. '(A' → logprob: -4.958468437194824
    4. 'A' → logprob: -8.458468437194824
    5. '(' → logprob: -8.583468437194824
    6. 'i' → logprob: -10.583468437194824
    7. '(I' → logprob: -11.458468437194824
    8. '('' → logprob: -12.208468437194824
    9. ',i' → logprob: -12.208468437194824
    10. ')' → logprob: -12.208468437194824

Token 189: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018447712063789368
    2. ',end' → logprob: -4.0184478759765625
    3. ' ,' → logprob: -8.143447875976562
    4. 'end' → logprob: -12.768447875976562
    5. '   ' → logprob: -13.893447875976562
    6. '),' → logprob: -14.268447875976562
    7. ',e' → logprob: -14.643447875976562
    8. ',en' → logprob: -14.643447875976562
    9. '',' → logprob: -14.893447875976562
    10. ')' → logprob: -15.143447875976562

Token 190: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.04799148440361023
    2. ' end' → logprob: -3.1729915142059326
    3. ''end' → logprob: -6.0479912757873535
    4. ''' → logprob: -6.9229912757873535
    5. ',end' → logprob: -7.0479912757873535
    6. '"' → logprob: -8.297991752624512
    7. '(end' → logprob: -8.547991752624512
    8. ')' → logprob: -8.672991752624512
    9. ' ' → logprob: -9.672991752624512
    10. ''en' → logprob: -10.547991752624512

Token 191: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.0014826052356511354
    2. '="' → logprob: -6.7514824867248535
    3. '=' → logprob: -8.126482963562012
    4. '=',' → logprob: -11.626482963562012
    5. ''' → logprob: -11.876482963562012
    6. '"' → logprob: -15.251482963562012
    7. ' ='' → logprob: -15.501482963562012
    8. '=",' → logprob: -15.626482963562012
    9. '=''' → logprob: -16.376482009887695
    10. '=('' → logprob: -17.251482009887695

Token 192: ' ')
' (ID: 49195)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16639597713947296
    2. ' ' → logprob: -1.9163960218429565
    3. ' )' → logprob: -5.291396141052246
    4. ' '' → logprob: -7.416396141052246
    5. ')' → logprob: -8.166396141052246
    6. '"' → logprob: -8.791396141052246
    7. ' ')' → logprob: -10.291396141052246
    8. ' ,' → logprob: -11.291396141052246
    9. 'space' → logprob: -11.666396141052246
    10. '')' → logprob: -12.666396141052246

Token 193: 'main' (ID: 7731)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07455214112997055
    2. 'main' → logprob: -3.324552059173584
    3. 'if' → logprob: -4.199552059173584
    4. '\n' → logprob: -4.699552059173584
    5. '<|end|>' → logprob: -4.949552059173584
    6. '  
' → logprob: -6.699552059173584
    7. ')' → logprob: -7.574552059173584
    8. '    
' → logprob: -7.949552059173584
    9. '(main' → logprob: -8.324552536010742
    10. '\' → logprob: -8.449552536010742

Token 194: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47409942746162415
    2. '(' → logprob: -0.9740993976593018
    3. '(
' → logprob: -11.724099159240723
    4. '()
' → logprob: -12.099099159240723
    5. '(

' → logprob: -13.099099159240723
    6. '();' → logprob: -13.349099159240723
    7. '()

' → logprob: -13.974099159240723
    8. ')' → logprob: -14.474099159240723
    9. '()`' → logprob: -14.474099159240723
    10. ' (' → logprob: -15.099099159240723


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 192
Tokens correctement prédits (1ère position, stricte): 85
Tokens correctement prédits (1ère position, avec adaptation): 91
Tokens correctement prédits (top 10): 165
Précision stricte (1ère position): 44.27%
Précision adaptée (1ère position): 47.40%
Précision (top 10): 85.94%
================================================================================
