================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def Partition(A,p,r):
    x = A[r]
    i = p-1
    for j in range(p,r):
        if (A[j] <= x):
            i += 1
            A[i],A[j] = A[j],A[i]
    A[i+1],A[r] = A[r],A[i+1]
    return i+1

n = int(input())
st = input()
data = list(map(int,st.split()))

mid = Partition(data,0,len(data)-1)
for i in range(0,mid):
    print(data[i],end=" ")
print("[{0}] ".format(data[mid]),end="")
for i in range(mid+1,len(data)-1):
    print(data[i],end=" ")
print(data[len(data)-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' Partition' (ID: 100394)
  → Token d'amorce (pas de prédiction)

Token 2: '(A' (ID: 10706)
  → Token d'amorce (pas de prédiction)

Token 3: ',p' (ID: 14835)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11177153140306473
    2. ')' → logprob: -2.861771583557129
    3. ',' → logprob: -3.111771583557129
    4. '(' → logprob: -6.486771583557129
    5. '<|end|>' → logprob: -7.236771583557129
    6. '):' → logprob: -7.361771583557129
    7. '[A' → logprob: -7.361771583557129
    8. '[
' → logprob: -8.611771583557129
    9. '```' → logprob: -9.486771583557129
    10. '[]' → logprob: -10.111771583557129

Token 4: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006502912845462561
    2. ',p' → logprob: -6.131503105163574
    3. ' ,' → logprob: -6.506503105163574
    4. ')' → logprob: -6.756503105163574
    5. ',a' → logprob: -7.756503105163574
    6. '[' → logprob: -8.256503105163574
    7. ',r' → logprob: -8.381503105163574
    8. '<|end|>' → logprob: -8.881503105163574
    9. ',int' → logprob: -9.256503105163574
    10. ',u' → logprob: -9.756503105163574

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030316278338432312
    2. ')' → logprob: -3.6553163528442383
    3. ':' → logprob: -5.655316352844238
    4. ',' → logprob: -8.655316352844238
    5. ''):' → logprob: -9.030316352844238
    6. '```' → logprob: -10.030316352844238
    7. '**' → logprob: -10.530316352844238
    8. '<|end|>' → logprob: -10.905316352844238
    9. '):
' → logprob: -11.155316352844238
    10. '>:' → logprob: -11.655316352844238

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30130279064178467
    2. '   ' → logprob: -1.8013027906417847
    3. ' if' → logprob: -2.926302909851074
    4. '	if' → logprob: -3.801302909851074
    5. ' :' → logprob: -5.051302909851074
    6. ' ' → logprob: -5.926302909851074
    7. 'if' → logprob: -6.301302909851074
    8. '```' → logprob: -6.301302909851074
    9. '    ' → logprob: -6.801302909851074
    10. '\' → logprob: -7.301302909851074

Token 7: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3987123668193817
    2. ' if' → logprob: -2.273712396621704
    3. '	if' → logprob: -3.023712396621704
    4. '```' → logprob: -3.023712396621704
    5. 'if' → logprob: -3.648712396621704
    6. 'i' → logprob: -4.273712158203125
    7. '\n' → logprob: -4.398712158203125
    8. '\t' → logprob: -4.398712158203125
    9. '    ' → logprob: -4.773712158203125
    10. ':' → logprob: -5.148712158203125

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5764581561088562
    2. '=' → logprob: -0.8264581561088562
    3. ',' → logprob: -8.076457977294922
    4. ')' → logprob: -9.576457977294922
    5. '[' → logprob: -10.326457977294922
    6. '<|end|>' → logprob: -10.576457977294922
    7. ' ' → logprob: -10.951457977294922
    8. ' ==' → logprob: -11.201457977294922
    9. '  ' → logprob: -11.451457977294922
    10. ' is' → logprob: -12.201457977294922

Token 9: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6931961178779602
    2. ' A' → logprob: -0.6931961178779602
    3. ' ' → logprob: -10.443196296691895
    4. '	A' → logprob: -11.193196296691895
    5. '  ' → logprob: -12.693196296691895
    6. '   ' → logprob: -13.693196296691895
    7. '(A' → logprob: -15.068196296691895
    8. '=A' → logprob: -15.193196296691895
    9. '>A' → logprob: -15.568196296691895
    10. ' ' → logprob: -15.818196296691895

Token 10: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.016136890277266502
    2. '[' → logprob: -4.14113712310791
    3. '[p' → logprob: -9.39113712310791
    4. '[m' → logprob: -12.64113712310791
    5. '[i' → logprob: -13.14113712310791
    6. 'r' → logprob: -13.14113712310791
    7. '[j' → logprob: -13.39113712310791
    8. '[q' → logprob: -13.51613712310791
    9. '[
' → logprob: -13.64113712310791
    10. ''[' → logprob: -13.64113712310791

Token 11: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004464004305191338
    2. '])' → logprob: -7.875446319580078
    3. '[' → logprob: -10.500446319580078
    4. ')' → logprob: -11.250446319580078
    5. ' ]' → logprob: -11.250446319580078
    6. ']
' → logprob: -12.625446319580078
    7. '[p' → logprob: -13.000446319580078
    8. ']==' → logprob: -13.000446319580078
    9. '[r' → logprob: -13.500446319580078
    10. '][' → logprob: -14.125446319580078

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.163142204284668
    2. ' for' → logprob: -1.288142204284668
    3. 'for' → logprob: -1.913142204284668
    4. 'i' → logprob: -2.038142204284668
    5. ' i' → logprob: -2.663142204284668
    6. '    
' → logprob: -5.038142204284668
    7. '[i' → logprob: -5.163142204284668
    8. '[' → logprob: -5.288142204284668
    9. ',i' → logprob: -5.288142204284668
    10. '
' → logprob: -5.413142204284668

Token 13: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.1295395791530609
    2. ' i' → logprob: -2.1295394897460938
    3. '   ' → logprob: -6.129539489746094
    4. ' ' → logprob: -9.379539489746094
    5. ',i' → logprob: -9.379539489746094
    6. ''i' → logprob: -9.754539489746094
    7. '	i' → logprob: -10.004539489746094
    8. '  ' → logprob: -10.504539489746094
    9. 'j' → logprob: -10.629539489746094
    10. '
' → logprob: -11.004539489746094

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02991802617907524
    2. '=' → logprob: -3.6549179553985596
    3. '<|end|>' → logprob: -6.404918193817139
    4. ' ' → logprob: -6.654918193817139
    5. '    ' → logprob: -9.02991771697998
    6. '  ' → logprob: -9.40491771697998
    7. ' +=' → logprob: -9.52991771697998
    8. '<|end|>' → logprob: -9.65491771697998
    9. ',' → logprob: -10.02991771697998
    10. '	' → logprob: -10.27991771697998

Token 15: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04859248176217079
    2. ' p' → logprob: -3.0485925674438477
    3. '   ' → logprob: -12.923592567443848
    4. ' ' → logprob: -13.673592567443848
    5. '	p' → logprob: -14.048592567443848
    6. '  ' → logprob: -15.048592567443848
    7. '(p' → logprob: -15.548592567443848
    8. '<p' → logprob: -16.29859161376953
    9. '    ' → logprob: -17.17359161376953
    10. '```' → logprob: -17.42359161376953

Token 16: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19533298909664154
    2. ' -' → logprob: -2.3203330039978027
    3. '<|end|>' → logprob: -2.5703330039978027
    4. ' ' → logprob: -6.820333003997803
    5. '<|end|>' → logprob: -6.945333003997803
    6. '   ' → logprob: -9.195332527160645
    7. '  ' → logprob: -9.445332527160645
    8. 'i' → logprob: -9.695332527160645
    9. '    ' → logprob: -9.820332527160645
    10. '```' → logprob: -9.820332527160645

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002619318547658622
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -15.000262260437012
    4. '```' → logprob: -16.000261306762695
    5. '  ' → logprob: -16.625261306762695
    6. '    ' → logprob: -17.312761306762695
    7. '１' → logprob: -17.437761306762695
    8. '<|end|>' → logprob: -17.937761306762695
    9. '۱' → logprob: -18.000261306762695
    10. '१' → logprob: -18.875261306762695

Token 18: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.237939715385437
    2. '   ' → logprob: -1.737939715385437
    3. ' for' → logprob: -1.862939715385437
    4. '
' → logprob: -1.987939715385437
    5. '```' → logprob: -2.1129398345947266
    6. '<|end|>' → logprob: -2.8629398345947266
    7. '    
' → logprob: -3.8629398345947266
    8. '	for' → logprob: -4.362939834594727
    9. 'for' → logprob: -5.487939834594727
    10. '<|end|>' → logprob: -5.737939834594727

Token 19: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2491808831691742
    2. '```' → logprob: -2.624180793762207
    3. '<|end|>' → logprob: -3.374180793762207
    4. '    
' → logprob: -3.749180793762207
    5. '\n' → logprob: -3.999180793762207
    6. ' for' → logprob: -3.999180793762207
    7. '   ' → logprob: -4.499180793762207
    8. '  
' → logprob: -4.749180793762207
    9. ' 
' → logprob: -4.874180793762207
    10. '	
' → logprob: -5.124180793762207

Token 20: ' for' (ID: 395)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9971166849136353
    2. ' for' → logprob: -1.1221166849136353
    3. '<|end|>' → logprob: -1.7471166849136353
    4. '```' → logprob: -3.3721165657043457
    5. '   ' → logprob: -3.3721165657043457
    6. '
' → logprob: -3.8721165657043457
    7. 'for' (adapté à ' for') → logprob: -4.247116565704346
    8. '<|end|>' → logprob: -5.122116565704346
    9. '	for' → logprob: -5.497116565704346
    10. '\' → logprob: -5.622116565704346

Token 21: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.006405081134289503
    2. ' ' → logprob: -5.631404876708984
    3. 'j' → logprob: -5.881404876708984
    4. '	j' → logprob: -12.881404876708984
    5. ' A' → logprob: -12.881404876708984
    6. '  ' → logprob: -13.006404876708984
    7. '   ' → logprob: -14.506404876708984
    8. ' ' → logprob: -15.006404876708984
    9. ' ‌' → logprob: -15.256404876708984
    10. '<|end|>' → logprob: -15.256404876708984

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.035398274660110474
    2. 'in' → logprob: -3.410398244857788
    3. ' ' → logprob: -6.410398483276367
    4. '<|end|>' → logprob: -10.535398483276367
    5. '  ' → logprob: -10.660398483276367
    6. '    ' → logprob: -11.160398483276367
    7. '	in' → logprob: -11.785398483276367
    8. '=' → logprob: -12.160398483276367
    9. ' j' → logprob: -12.160398483276367
    10. ' =' → logprob: -12.535398483276367

Token 23: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08518437296152115
    2. ' p' → logprob: -3.085184335708618
    3. 'range' → logprob: -3.335184335708618
    4. 'p' → logprob: -8.085184097290039
    5. ' ' → logprob: -11.335184097290039
    6. ' xrange' → logprob: -12.835184097290039
    7. '	range' → logprob: -13.585184097290039
    8. '(range' → logprob: -14.335184097290039
    9. '   ' → logprob: -14.335184097290039
    10. '	p' → logprob: -14.460184097290039

Token 24: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18620067834854126
    2. '(p' → logprob: -1.8112006187438965
    3. ' (' → logprob: -5.0612006187438965
    4. '(i' → logprob: -9.811201095581055
    5. '(
' → logprob: -11.436201095581055
    6. ' ' → logprob: -11.811201095581055
    7. ')' → logprob: -12.061201095581055
    8. '(j' → logprob: -12.186201095581055
    9. '(

' → logprob: -12.686201095581055
    10. '(P' → logprob: -12.811201095581055

Token 25: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029807081446051598
    2. ' ,' → logprob: -4.029807090759277
    3. ',r' → logprob: -4.529807090759277
    4. ',j' → logprob: -7.529807090759277
    5. ',p' → logprob: -8.904807090759277
    6. ' ' → logprob: -9.279807090759277
    7. ')' → logprob: -10.779807090759277
    8. ',
' → logprob: -13.029807090759277
    9. ',len' → logprob: -13.154807090759277
    10. ',n' → logprob: -13.279807090759277

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014377268962562084
    2. '+' → logprob: -5.264377117156982
    3. ':' → logprob: -5.639377117156982
    4. ')' → logprob: -5.889377117156982
    5. ',' → logprob: -6.389377117156982
    6. '):
' → logprob: -7.014377117156982
    7. ' ):' → logprob: -9.63937759399414
    8. '   ' → logprob: -10.13937759399414
    9. '+:' → logprob: -10.51437759399414
    10. '),' → logprob: -11.88937759399414

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04628615453839302
    2. '<|end|>' → logprob: -3.671286106109619
    3. '    ' → logprob: -5.421286106109619
    4. '   ' → logprob: -5.421286106109619
    5. ' ' → logprob: -5.796286106109619
    6. ' if' → logprob: -6.046286106109619
    7. ':' → logprob: -6.796286106109619
    8. '        
' → logprob: -7.046286106109619
    9. ':
' → logprob: -7.171286106109619
    10. 'if' → logprob: -7.421286106109619

Token 28: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0276603698730469
    2. ' if' → logprob: -1.0276603698730469
    3. 'if' (adapté à ' if') → logprob: -2.152660369873047
    4. '   ' → logprob: -3.027660369873047
    5. '           ' → logprob: -3.277660369873047
    6. '    ' → logprob: -3.402660369873047
    7. '        ' → logprob: -4.152660369873047
    8. ' ' → logprob: -4.402660369873047
    9. '<|end|>' → logprob: -4.777660369873047
    10. '```' → logprob: -6.152660369873047

Token 29: ' (' (ID: 350)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.005009598098695278
    2. 'A' → logprob: -5.505009651184082
    3. ' ' → logprob: -7.005009651184082
    4. ' ' → logprob: -11.255009651184082
    5. '	A' → logprob: -12.505009651184082
    6. '    ' → logprob: -13.505009651184082
    7. ' (' → logprob: -13.630009651184082
    8. '  ' → logprob: -13.880009651184082
    9. ')' → logprob: -14.255009651184082
    10. '(A' → logprob: -14.630009651184082

Token 30: 'A' (ID: 32)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.10029476881027222
    2. 'A' → logprob: -2.350294828414917
    3. ' ' → logprob: -10.100295066833496
    4. ')' → logprob: -10.975295066833496
    5. '	A' → logprob: -11.475295066833496
    6. '    ' → logprob: -12.100295066833496
    7. '   ' → logprob: -12.100295066833496
    8. ' ' → logprob: -12.475295066833496
    9. ' )' → logprob: -12.850295066833496
    10. '  ' → logprob: -14.850295066833496

Token 31: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004976287018507719
    2. '[' → logprob: -7.625497817993164
    3. ' [' → logprob: -12.000497817993164
    4. 'j' → logprob: -13.250497817993164
    5. '[
' → logprob: -14.250497817993164
    6. '[A' → logprob: -15.375497817993164
    7. ')' → logprob: -15.625497817993164
    8. '[i' → logprob: -15.750497817993164
    9. '[J' → logprob: -16.625497817993164
    10. '   ' → logprob: -16.875497817993164

Token 32: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26296138763427734
    2. ')' → logprob: -2.3879613876342773
    3. ' <=' → logprob: -2.3879613876342773
    4. '<=' → logprob: -3.2629613876342773
    5. ']<=' → logprob: -5.262961387634277
    6. '[' → logprob: -6.387961387634277
    7. ' ]' → logprob: -6.762961387634277
    8. '<' → logprob: -7.762961387634277
    9. ' )' → logprob: -8.137961387634277
    10. ')<=' → logprob: -8.387961387634277

Token 33: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2026650458574295
    2. '<=' → logprob: -1.952665090560913
    3. ')' → logprob: -3.452665090560913
    4. '[' → logprob: -5.077664852142334
    5. '<' → logprob: -6.577664852142334
    6. ' <' → logprob: -7.577664852142334
    7. ')<=' → logprob: -7.577664852142334
    8. ' ' → logprob: -8.077665328979492
    9. ' )' → logprob: -8.202665328979492
    10. ']<=' → logprob: -8.827665328979492

Token 34: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08917456865310669
    2. 'x' → logprob: -2.464174509048462
    3. ' ' → logprob: -9.089174270629883
    4. ')' → logprob: -9.339174270629883
    5. ' )' → logprob: -10.964174270629883
    6. ')x' → logprob: -11.839174270629883
    7. '	x' → logprob: -12.339174270629883
    8. ' ' → logprob: -12.589174270629883
    9. '  ' → logprob: -14.714174270629883
    10. '    ' → logprob: -15.089174270629883

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003531655529513955
    2. ':' → logprob: -6.503531455993652
    3. ' ):' → logprob: -6.878531455993652
    4. ')' → logprob: -7.378531455993652
    5. '):
' → logprob: -8.003531455993652
    6. ':)' → logprob: -11.503531455993652
    7. '       ' → logprob: -12.003531455993652
    8. ' )' → logprob: -12.253531455993652
    9. '):
' → logprob: -12.628531455993652
    10. '):

' → logprob: -12.753531455993652

Token 36: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45956674218177795
    2. '<|end|>' → logprob: -1.4595667123794556
    3. '
' → logprob: -2.709566831588745
    4. '<|end|>' → logprob: -3.584566831588745
    5. ' ' → logprob: -4.584566593170166
    6. ':' → logprob: -4.584566593170166
    7. '       ' → logprob: -5.334566593170166
    8. ':
' → logprob: -5.459566593170166
    9. ' 
' → logprob: -5.834566593170166
    10. '            
' → logprob: -5.959566593170166

Token 37: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.8040561079978943
    2. ' 
' → logprob: -1.304056167602539
    3. ' i' → logprob: -1.679056167602539
    4. '<|end|>' → logprob: -3.304056167602539
    5. ' ' → logprob: -3.554056167602539
    6. '
' → logprob: -4.679056167602539
    7. '	i' → logprob: -5.429056167602539
    8. '<|end|>' → logprob: -6.179056167602539
    9. '   ' → logprob: -6.429056167602539
    10. '\n' → logprob: -6.554056167602539

Token 38: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.14521414041519165
    2. ' =' → logprob: -2.395214080810547
    3. '+=' → logprob: -3.520214080810547
    4. '=' → logprob: -4.270214080810547
    5. '+' → logprob: -8.145214080810547
    6. ' ' → logprob: -9.770214080810547
    7. ' +' → logprob: -10.270214080810547
    8. '<|end|>' → logprob: -10.520214080810547
    9. '    ' → logprob: -11.645214080810547
    10. '   ' → logprob: -12.145214080810547

Token 39: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02975071594119072
    2. ' ' → logprob: -3.5297508239746094
    3. '<|end|>' → logprob: -15.52975082397461
    4. '+' → logprob: -17.02975082397461
    5. '   ' → logprob: -17.15475082397461
    6. '  ' → logprob: -17.77975082397461
    7. '```' → logprob: -18.02975082397461
    8. ' ' → logprob: -18.15475082397461
    9. '۱' → logprob: -18.40475082397461
    10. ' +' → logprob: -18.40475082397461

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '<|end|>' → logprob: -18.125030517578125
    4. '+' → logprob: -18.500030517578125
    5. '   ' → logprob: -18.625030517578125
    6. '  ' → logprob: -19.500030517578125
    7. '```' → logprob: -19.875030517578125
    8. '۱' → logprob: -20.250030517578125
    9. '１' → logprob: -21.125030517578125
    10. '१' → logprob: -21.250030517578125

Token 41: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.4287806451320648
    2. ' A' → logprob: -1.0537806749343872
    3. '           ' → logprob: -10.428780555725098
    4. ' ' → logprob: -11.303780555725098
    5. '	A' → logprob: -11.303780555725098
    6. '(A' → logprob: -12.053780555725098
    7. '   ' → logprob: -13.053780555725098
    8. '<|end|>' → logprob: -13.178780555725098
    9. '```' → logprob: -13.178780555725098
    10. 'swap' → logprob: -13.303780555725098

Token 44: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00071386230411008
    2. '[' → logprob: -7.25071382522583
    3. '[I' → logprob: -13.375714302062988
    4. '[j' → logprob: -13.875714302062988
    5. '```' → logprob: -14.250714302062988
    6. 'i' → logprob: -15.750714302062988
    7. '\[' → logprob: -16.375713348388672
    8. '[A' → logprob: -16.500713348388672
    9. '[...]' → logprob: -16.500713348388672
    10. ',' → logprob: -17.000713348388672

Token 45: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18844446539878845
    2. ',' → logprob: -1.8134444952011108
    3. '],' → logprob: -4.8134446144104
    4. ' ]' → logprob: -8.313444137573242
    5. ']=' → logprob: -8.938444137573242
    6. ' ],' → logprob: -10.438444137573242
    7. ' ,' → logprob: -10.813444137573242
    8. ')' → logprob: -10.813444137573242
    9. '<|end|>' → logprob: -10.813444137573242
    10. '],[' → logprob: -11.063444137573242

Token 46: 'A' (ID: 32)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.38726547360420227
    2. 'A' → logprob: -1.1372654438018799
    3. '<|end|>' → logprob: -7.887265682220459
    4. '	A' → logprob: -11.6372652053833
    5. ' ' → logprob: -11.8872652053833
    6. '<|end|>' → logprob: -13.3872652053833
    7. ' ' → logprob: -13.7622652053833
    8. '=A' → logprob: -15.0122652053833
    9. '_A' → logprob: -16.512266159057617
    10. '  ' → logprob: -16.512266159057617

Token 47: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004971518646925688
    2. '[' → logprob: -7.625497341156006
    3. '<|end|>' → logprob: -12.000496864318848
    4. '[i' → logprob: -13.750496864318848
    5. '[js' → logprob: -14.000496864318848
    6. '[q' → logprob: -15.250496864318848
    7. '[s' → logprob: -15.875496864318848
    8. '[
' → logprob: -16.000497817993164
    9. '[a' → logprob: -16.375497817993164
    10. '<|end|>' → logprob: -16.500497817993164

Token 48: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013114250032231212
    2. ']=' → logprob: -7.126311302185059
    3. ' ]' → logprob: -8.126311302185059
    4. ')' → logprob: -8.751311302185059
    5. '=' → logprob: -10.876311302185059
    6. '<|end|>' → logprob: -11.001311302185059
    7. ' =' → logprob: -11.251311302185059
    8. ',' → logprob: -14.376311302185059
    9. '<|end|>' → logprob: -14.376311302185059
    10. ' ' → logprob: -14.876311302185059

Token 49: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014177493751049042
    2. ' =' → logprob: -4.264177322387695
    3. '<|end|>' → logprob: -11.514177322387695
    4. '=
' → logprob: -13.764177322387695
    5. '=

' → logprob: -13.889177322387695
    6. ',' → logprob: -14.389177322387695
    7. ' ' → logprob: -14.639177322387695
    8. '=user' → logprob: -15.514177322387695
    9. ' =
' → logprob: -16.389177322387695
    10. '=}' → logprob: -16.639177322387695

Token 50: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.054899100214242935
    2. 'A' → logprob: -2.929899215698242
    3. ' ' → logprob: -11.179899215698242
    4. '<|end|>' → logprob: -13.054899215698242
    5. '	A' → logprob: -14.929899215698242
    6. ' ' → logprob: -15.304899215698242
    7. '<|end|>' → logprob: -16.054899215698242
    8. '>A' → logprob: -17.679899215698242
    9. '_A' → logprob: -17.804899215698242
    10. ' (' → logprob: -17.804899215698242

Token 51: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02663581632077694
    2. '[j' → logprob: -4.026635646820068
    3. '[' → logprob: -4.776635646820068
    4. '<|end|>' → logprob: -11.651636123657227
    5. '[
' → logprob: -12.651636123657227
    6. '[...,' → logprob: -13.026636123657227
    7. '[I' → logprob: -13.151636123657227
    8. '[s' → logprob: -13.401636123657227
    9. '```' → logprob: -13.526636123657227
    10. ' [' → logprob: -13.901636123657227

Token 52: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0321536548435688
    2. ',A' → logprob: -3.907153606414795
    3. ' ,' → logprob: -4.782153606414795
    4. '],' → logprob: -6.032153606414795
    5. ',i' → logprob: -7.782153606414795
    6. ']' → logprob: -8.282154083251953
    7. ' ],' → logprob: -10.657154083251953
    8. ' ' → logprob: -11.532154083251953
    9. ',
' → logprob: -11.907154083251953
    10. '‌,' → logprob: -11.907154083251953

Token 53: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0024758970830589533
    2. ' A' → logprob: -6.002475738525391
    3. ' ' → logprob: -16.00247573852539
    4. '	A' → logprob: -16.62747573852539
    5. '   ' → logprob: -17.00247573852539
    6. '  ' → logprob: -18.50247573852539
    7. '>A' → logprob: -19.75247573852539
    8. 'a' → logprob: -20.00247573852539
    9. 'i' → logprob: -20.25247573852539
    10. '           ' → logprob: -20.50247573852539

Token 54: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006731711328029633
    2. '[' → logprob: -5.0067315101623535
    3. '[j' → logprob: -12.256731986999512
    4. '[I' → logprob: -12.256731986999512
    5. '[
' → logprob: -13.131731986999512
    6. 'i' → logprob: -13.256731986999512
    7. ' [' → logprob: -14.006731986999512
    8. ']' → logprob: -14.131731986999512
    9. '```' → logprob: -14.256731986999512
    10. '[A' → logprob: -15.381731986999512

Token 55: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001487140398239717
    2. ']' → logprob: -9.25014877319336
    3. '}' → logprob: -10.50014877319336
    4. '<|end|>' → logprob: -11.00014877319336
    5. ')
' → logprob: -11.87514877319336
    6. '```' → logprob: -15.37514877319336
    7. '<|end|>' → logprob: -15.50014877319336
    8. '）' → logprob: -15.62514877319336
    9. ')}' → logprob: -15.75014877319336
    10. '   ' → logprob: -16.00014877319336

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7404482364654541
    2. '\n' → logprob: -2.115448236465454
    3. '	return' → logprob: -2.740448236465454
    4. '```' → logprob: -2.865448236465454
    5. '    
' → logprob: -3.115448236465454
    6. '
' → logprob: -3.115448236465454
    7. '<|end|>' → logprob: -3.365448236465454
    8. '  
' → logprob: -3.990448236465454
    9. ' return' → logprob: -3.990448236465454
    10. 'return' → logprob: -4.365447998046875

Token 57: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20128710567951202
    2. '    ' → logprob: -2.576287031173706
    3. '       ' → logprob: -3.076287031173706
    4. 'return' → logprob: -4.326287269592285
    5. '	return' → logprob: -4.451287269592285
    6. '    
' → logprob: -5.326287269592285
    7. '  ' → logprob: -5.451287269592285
    8. '<|end|>' → logprob: -5.576287269592285
    9. '\t' → logprob: -5.701287269592285
    10. ' return' → logprob: -6.076287269592285

Token 58: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00600819056853652
    2. '[' → logprob: -5.131008148193359
    3. '[I' → logprob: -9.75600814819336
    4. '[r' → logprob: -11.25600814819336
    5. '\[' → logprob: -12.88100814819336
    6. '[j' → logprob: -13.63100814819336
    7. '```' → logprob: -14.13100814819336
    8. '[A' → logprob: -14.25600814819336
    9. '[
' → logprob: -14.38100814819336
    10. ' [' → logprob: -14.63100814819336

Token 59: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00028576893964782357
    2. ' +' → logprob: -8.375286102294922
    3. '+,' → logprob: -10.375286102294922
    4. '+r' → logprob: -11.000286102294922
    5. '+]' → logprob: -12.750286102294922
    6. '+
' → logprob: -13.625286102294922
    7. '+j' → logprob: -14.250286102294922
    8. '1' → logprob: -14.375286102294922
    9. '+i' → logprob: -14.625286102294922
    10. '+k' → logprob: -15.000286102294922

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. ']' → logprob: -16.75
    4. 'r' → logprob: -17.5
    5. '<|end|>' → logprob: -17.625
    6. '  ' → logprob: -18.125
    7. ',' → logprob: -18.25
    8. '   ' → logprob: -18.5
    9. '```' → logprob: -18.5
    10. '+' → logprob: -19.625

Token 61: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1288972944021225
    2. '],' → logprob: -2.128897190093994
    3. ',' → logprob: -6.253897190093994
    4. ']=' → logprob: -10.503897666931152
    5. ' ]' → logprob: -12.128897666931152
    6. '],[' → logprob: -12.503897666931152
    7. ' ],' → logprob: -13.628897666931152
    8. '],
' → logprob: -14.378897666931152
    9. ']==' → logprob: -14.503897666931152
    10. '']' → logprob: -14.503897666931152

Token 62: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03804183006286621
    2. ' A' → logprob: -3.288041830062866
    3. '	A' → logprob: -15.413042068481445
    4. '<|end|>' → logprob: -15.663042068481445
    5. ' ' → logprob: -16.913042068481445
    6. '  ' → logprob: -18.038042068481445
    7. ' ' → logprob: -19.038042068481445
    8. '   ' → logprob: -19.413042068481445
    9. '=A' → logprob: -19.663042068481445
    10. '```' → logprob: -20.163042068481445

Token 63: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0032707606442272663
    2. '[' → logprob: -5.753270626068115
    3. '[i' → logprob: -9.378271102905273
    4. '[j' → logprob: -12.503271102905273
    5. '[q' → logprob: -13.628271102905273
    6. '[s' → logprob: -14.878271102905273
    7. '[user' → logprob: -15.128271102905273
    8. '[p' → logprob: -15.253271102905273
    9. '[
' → logprob: -15.253271102905273
    10. '<|end|>' → logprob: -15.253271102905273

Token 64: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.8312570318812504e-05
    2. ']=' → logprob: -11.000018119812012
    3. ' ]' → logprob: -13.500018119812012
    4. '],' → logprob: -15.875018119812012
    5. '']' → logprob: -17.125019073486328
    6. '=' → logprob: -17.250019073486328
    7. ')' → logprob: -17.500019073486328
    8. '<|end|>' → logprob: -17.875019073486328
    9. '`]' → logprob: -18.125019073486328
    10. ']
' → logprob: -18.250019073486328

Token 65: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020744619891047478
    2. ' =' → logprob: -3.895744562149048
    3. ',' → logprob: -8.520744323730469
    4. '=
' → logprob: -13.770744323730469
    5. '<|end|>' → logprob: -14.020744323730469
    6. '=

' → logprob: -14.395744323730469
    7. '＝' → logprob: -16.52074432373047
    8. '=}' → logprob: -16.64574432373047
    9. ' =)' → logprob: -16.77074432373047
    10. ' =
' → logprob: -16.77074432373047

Token 66: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.12692968547344208
    2. 'A' → logprob: -2.126929759979248
    3. '	A' → logprob: -13.75192928314209
    4. ' ' → logprob: -15.12692928314209
    5. ' ' → logprob: -16.001930236816406
    6. '<|end|>' → logprob: -16.001930236816406
    7. '>A' → logprob: -18.251930236816406
    8. ',A' → logprob: -19.126930236816406
    9. '_A' → logprob: -19.126930236816406
    10. '(A' → logprob: -19.501930236816406

Token 67: '[r' (ID: 33265)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014644917973782867
    2. '[' → logprob: -8.875146865844727
    3. '[r' → logprob: -12.125146865844727
    4. 'i' → logprob: -14.750146865844727
    5. '[j' → logprob: -15.625146865844727
    6. ' [' → logprob: -15.625146865844727
    7. '[
' → logprob: -15.875146865844727
    8. '[...,' → logprob: -17.000146865844727
    9. '[I' → logprob: -17.125146865844727
    10. '```' → logprob: -17.125146865844727

Token 68: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007031376590020955
    2. ',' → logprob: -7.62570333480835
    3. ',i' → logprob: -9.125702857971191
    4. ' ]' → logprob: -10.000702857971191
    5. '],' → logprob: -10.000702857971191
    6. '[i' → logprob: -12.375702857971191
    7. '   ' → logprob: -13.000702857971191
    8. '<|end|>' → logprob: -13.500702857971191
    9. ']
' → logprob: -13.750702857971191
    10. '']' → logprob: -14.000702857971191

Token 69: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0002036595979006961
    2. ' A' → logprob: -8.500204086303711
    3. '	A' → logprob: -16.12520408630371
    4. ' ' → logprob: -17.37520408630371
    5. '   ' → logprob: -17.50020408630371
    6. '  ' → logprob: -18.25020408630371
    7. '>A' → logprob: -20.50020408630371
    8. '`' → logprob: -20.62520408630371
    9. '```' → logprob: -20.62520408630371
    10. 'a' → logprob: -20.87520408630371

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.8828707804204896e-05
    2. '[' → logprob: -10.250048637390137
    3. 'i' → logprob: -11.250048637390137
    4. '[
' → logprob: -15.125048637390137
    5. '[I' → logprob: -16.625049591064453
    6. ' i' → logprob: -17.375049591064453
    7. ' [' → logprob: -17.750049591064453
    8. '[A' → logprob: -17.875049591064453
    9. '```' → logprob: -18.125049591064453
    10. '<|end|>' → logprob: -18.250049591064453

Token 71: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.60414821645827e-06
    2. ' +' → logprob: -12.375004768371582
    3. '+
' → logprob: -15.375004768371582
    4. '+]' → logprob: -16.875003814697266
    5. '+i' → logprob: -16.875003814697266
    6. '＋' → logprob: -18.500003814697266
    7. '+j' → logprob: -18.875003814697266
    8. '1' → logprob: -19.125003814697266
    9. ']+' → logprob: -19.625003814697266
    10. '+)' → logprob: -19.750003814697266

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '+' → logprob: -13.250001907348633
    3. ' ' → logprob: -15.125001907348633
    4. '```' → logprob: -17.500001907348633
    5. ']' → logprob: -18.000001907348633
    6. '<|end|>' → logprob: -18.125001907348633
    7. '   ' → logprob: -18.250001907348633
    8. ')' → logprob: -18.500001907348633
    9. '`' → logprob: -19.125001907348633
    10. '<|end|>' → logprob: -19.875001907348633

Token 73: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011783202644437551
    2. ']' → logprob: -6.75117826461792
    3. '}' → logprob: -13.001178741455078
    4. ')]' → logprob: -13.751178741455078
    5. '）' → logprob: -13.876178741455078
    6. ' )' → logprob: -14.001178741455078
    7. ')
' → logprob: -14.126178741455078
    8. '   ' → logprob: -14.626178741455078
    9. ')return' → logprob: -15.001178741455078
    10. '+' → logprob: -15.126178741455078

Token 74: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6894349455833435
    2. '   ' → logprob: -1.0644350051879883
    3. ' return' → logprob: -2.1894350051879883
    4. ':return' → logprob: -3.9394350051879883
    5. '    
' → logprob: -4.814435005187988
    6. '	return' → logprob: -4.814435005187988
    7. '
' → logprob: -6.189435005187988
    8. '```' → logprob: -6.439435005187988
    9. '<|end|>' → logprob: -7.064435005187988
    10. 'Return' → logprob: -8.189435005187988

Token 75: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08099605143070221
    2. '   ' → logprob: -2.580996036529541
    3. ' return' → logprob: -6.205996036529541
    4. ':return' → logprob: -10.0809965133667
    5. '	return' → logprob: -10.4559965133667
    6. '    
' → logprob: -11.8309965133667
    7. '{return' → logprob: -12.9559965133667
    8. '```' → logprob: -13.4559965133667
    9. '@return' → logprob: -13.4559965133667
    10. 'Return' → logprob: -13.7059965133667

Token 76: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018150994554162025
    2. 'i' → logprob: -4.018150806427002
    3. '	i' → logprob: -14.39315128326416
    4. '   ' → logprob: -15.64315128326416
    5. ' ' → logprob: -15.76815128326416
    6. '(i' → logprob: -16.643150329589844
    7. ' ' → logprob: -17.018150329589844
    8. ' (' → logprob: -17.018150329589844
    9. '  ' → logprob: -18.893150329589844
    10. '(' → logprob: -19.643150329589844

Token 77: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0564331205387134e-05
    2. ' +' → logprob: -11.50001049041748
    3. '+
' → logprob: -14.87501049041748
    4. '+i' → logprob: -17.125011444091797
    5. '+[' → logprob: -18.500011444091797
    6. '+

' → logprob: -18.625011444091797
    7. '()+' → logprob: -18.875011444091797
    8. '＋' → logprob: -19.000011444091797
    9. '1' → logprob: -19.125011444091797
    10. '+r' → logprob: -20.250011444091797

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '<|end|>' → logprob: -18.125
    3. ' ' → logprob: -18.625
    4. '```' → logprob: -19.25
    5. '۱' → logprob: -21.125
    6. '[' → logprob: -21.75
    7. '１' → logprob: -21.75
    8. '`' → logprob: -21.75
    9. '१' → logprob: -22.875
    10. '<|end|>' → logprob: -23.0

Token 79: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12328945100307465
    2. '=' → logprob: -2.2482893466949463
    3. ' ' → logprob: -4.623289585113525
    4. 'u' → logprob: -8.748289108276367
    5. '  ' → logprob: -9.123289108276367
    6. '[' → logprob: -9.873289108276367
    7. '+' → logprob: -10.123289108276367
    8. ',' → logprob: -10.248289108276367
    9. ' =
' → logprob: -10.248289108276367
    10. '<|end|>' → logprob: -10.873289108276367

Token 82: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1989295482635498
    2. ' ' → logprob: -1.8239295482635498
    3. '10' → logprob: -4.698929786682129
    4. 'int' → logprob: -4.698929786682129
    5. ' len' → logprob: -7.698929786682129
    6. '5' → logprob: -8.573929786682129
    7. '20' → logprob: -10.198929786682129
    8. 'len' → logprob: -10.323929786682129
    9. '[int' → logprob: -10.323929786682129
    10. '15' → logprob: -11.948929786682129

Token 83: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07894498109817505
    2. '(input' → logprob: -2.5789449214935303
    3. 'input' → logprob: -10.57894515991211
    4. ' (' → logprob: -11.82894515991211
    5. '('' → logprob: -11.82894515991211
    6. '()' → logprob: -11.95394515991211
    7. '(
' → logprob: -13.32894515991211
    8. '(int' → logprob: -13.45394515991211
    9. '(n' → logprob: -14.20394515991211
    10. ' input' → logprob: -14.45394515991211

Token 84: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6995992064476013
    2. '(' → logprob: -0.8245992064476013
    3. '())' → logprob: -2.824599266052246
    4. ')' → logprob: -6.449599266052246
    5. '("("' → logprob: -6.449599266052246
    6. '('' → logprob: -7.199599266052246
    7. '("")' → logprob: -7.699599266052246
    8. '("' → logprob: -8.074599266052246
    9. '(""))' → logprob: -8.324599266052246
    10. '(()' → logprob: -8.699599266052246

Token 85: 'st' (ID: 302)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2904663383960724
    2. ' A' → logprob: -1.54046630859375
    3. '<|end|>' → logprob: -3.54046630859375
    4. ' ' → logprob: -5.41546630859375
    5. ' 
' → logprob: -6.66546630859375
    6. 'a' → logprob: -6.79046630859375
    7. '  
' → logprob: -8.16546630859375
    8. 'n' → logprob: -8.29046630859375
    9. '```' → logprob: -8.29046630859375
    10. '<|end|>' → logprob: -8.41546630859375

Token 86: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6294962763786316
    2. 'rings' → logprob: -1.5044963359832764
    3. 'udents' → logprob: -2.2544963359832764
    4. 'udent' → logprob: -2.8794963359832764
    5. ' =' → logprob: -3.1294963359832764
    6. 'ring' → logprob: -4.379496097564697
    7. 'rs' → logprob: -4.879496097564697
    8. 'u' → logprob: -5.379496097564697
    9. 's' → logprob: -5.629496097564697
    10. 'd' → logprob: -6.129496097564697

Token 87: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.44868049025535583
    2. 'list' → logprob: -1.4486805200576782
    3. ' input' → logprob: -2.8236804008483887
    4. '[]' → logprob: -3.1986804008483887
    5. ' list' → logprob: -4.198680400848389
    6. ' []' → logprob: -5.323680400848389
    7. '[input' → logprob: -5.323680400848389
    8. '[' → logprob: -7.323680400848389
    9. 'set' → logprob: -7.698680400848389
    10. ' [' → logprob: -8.198680877685547

Token 88: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008522743592038751
    2. '(' → logprob: -7.125852108001709
    3. '().' → logprob: -10.875852584838867
    4. ' ()' → logprob: -11.000852584838867
    5. '())' → logprob: -12.250852584838867
    6. '("' → logprob: -13.500852584838867
    7. '()
' → logprob: -13.875852584838867
    8. '（）' → logprob: -13.875852584838867
    9. '()>' → logprob: -14.000852584838867
    10. '('' → logprob: -14.000852584838867

Token 89: 'data' (ID: 1074)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -1.089041829109192
    2. 's' → logprob: -1.589041829109192
    3. ' A' → logprob: -1.964041829109192
    4. 'A' → logprob: -1.964041829109192
    5. '.' → logprob: -2.8390417098999023
    6. '<|end|>' → logprob: -3.8390417098999023
    7. ' ' → logprob: -4.089041709899902
    8. ' =' → logprob: -4.589041709899902
    9. ' 
' → logprob: -4.714041709899902
    10. '_list' → logprob: -4.714041709899902

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17998561263084412
    2. '=' → logprob: -1.8049856424331665
    3. 's' → logprob: -9.179986000061035
    4. '=[]' → logprob: -9.679986000061035
    5. '[' → logprob: -10.804986000061035
    6. '[]' → logprob: -10.929986000061035
    7. '_list' → logprob: -11.554986000061035
    8. '_' → logprob: -11.929986000061035
    9. '[:]' → logprob: -12.179986000061035
    10. ' ' → logprob: -12.804986000061035

Token 91: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3572158217430115
    2. 'list' → logprob: -1.4822158813476562
    3. 'st' → logprob: -3.6072158813476562
    4. ' st' → logprob: -3.8572158813476562
    5. ' [' → logprob: -4.232215881347656
    6. '[' → logprob: -5.482215881347656
    7. ' []' → logprob: -5.732215881347656
    8. '[]' → logprob: -6.357215881347656
    9. '[list' → logprob: -6.982215881347656
    10. '[int' → logprob: -9.607215881347656

Token 92: '(map' (ID: 16946)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.02988898940384388
    2. '(' → logprob: -3.5298891067504883
    3. '(str' → logprob: -9.529889106750488
    4. '(s' → logprob: -10.279889106750488
    5. '()' → logprob: -11.779889106750488
    6. '(St' → logprob: -12.154889106750488
    7. '(map' → logprob: -12.404889106750488
    8. ' (' → logprob: -12.654889106750488
    9. '((' → logprob: -13.279889106750488
    10. '(ST' → logprob: -13.779889106750488

Token 93: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1971210092306137
    2. '(str' → logprob: -1.947121024131775
    3. '(' → logprob: -3.3221209049224854
    4. '(lambda' → logprob: -9.322120666503906
    5. ')' → logprob: -10.572120666503906
    6. '(
' → logprob: -11.822120666503906
    7. 'str' → logprob: -12.197120666503906
    8. 'int' → logprob: -12.697120666503906
    9. ')(' → logprob: -12.822120666503906
    10. ' (' → logprob: -12.947120666503906

Token 94: ',' (ID: 11)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.07581587880849838
    2. ',' → logprob: -3.4508159160614014
    3. '(' → logprob: -3.7008159160614014
    4. '(input' → logprob: -4.575815677642822
    5. ',input' → logprob: -5.450815677642822
    6. ',(' → logprob: -6.825815677642822
    7. ' ,' → logprob: -8.20081615447998
    8. '(str' → logprob: -9.07581615447998
    9. ' (' → logprob: -9.07581615447998
    10. '(),' → logprob: -9.32581615447998

Token 95: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.015390940010547638
    2. 'input' → logprob: -4.890390872955322
    3. '(st' → logprob: -4.890390872955322
    4. ' st' → logprob: -9.01539134979248
    5. '(input' → logprob: -9.64039134979248
    6. 'str' → logprob: -11.01539134979248
    7. ' input' → logprob: -11.26539134979248
    8. ',input' → logprob: -12.76539134979248
    9. '-st' → logprob: -13.01539134979248
    10. '_st' → logprob: -13.01539134979248

Token 96: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.6656357645988464
    2. '().' → logprob: -0.9156357645988464
    3. '.strip' → logprob: -2.665635824203491
    4. '.' → logprob: -4.290635585784912
    5. ' .' → logprob: -6.040635585784912
    6. 'split' → logprob: -9.41563606262207
    7. '()' → logprob: -10.29063606262207
    8. ' ().' → logprob: -11.54063606262207
    9. 'strip' → logprob: -12.04063606262207
    10. '.rstrip' → logprob: -12.16563606262207

Token 97: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1469406932592392
    2. '('' → logprob: -2.6469407081604004
    3. '())' → logprob: -2.8969407081604004
    4. '()' → logprob: -4.6469407081604
    5. '(' → logprob: -7.6469407081604
    6. '("' → logprob: -8.521940231323242
    7. '(','' → logprob: -8.646940231323242
    8. '(),' → logprob: -10.146940231323242
    9. '())))' → logprob: -10.146940231323242
    10. '()));' → logprob: -10.771940231323242

Token 98: 'mid' (ID: 23430)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0967977046966553
    2. 'p' → logprob: -1.3467977046966553
    3. 'q' → logprob: -1.5967977046966553
    4. 'print' → logprob: -1.7217977046966553
    5. 'pivot' → logprob: -4.096797943115234
    6. 'pi' → logprob: -5.721797943115234
    7. 'index' → logprob: -5.971797943115234
    8. 'pos' → logprob: -7.721797943115234
    9. 'idx' → logprob: -7.971797943115234
    10. 'k' → logprob: -8.221797943115234

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1963234543800354
    2. 'd' → logprob: -2.5713233947753906
    3. '_index' → logprob: -3.1963233947753906
    4. '_' → logprob: -3.6963233947753906
    5. '=' → logprob: -3.8213233947753906
    6. 'point' → logprob: -4.946323394775391
    7. '_idx' → logprob: -5.696323394775391
    8. 'le' → logprob: -6.446323394775391
    9. '_point' → logprob: -6.696323394775391
    10. 'Index' → logprob: -8.69632339477539

Token 100: ' Partition' (ID: 100394)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7278886437416077
    2. 'n' → logprob: -1.352888584136963
    3. '(len' → logprob: -1.727888584136963
    4. '(n' → logprob: -3.352888584136963
    5. 'Partition' → logprob: -4.227888584136963
    6. ' n' → logprob: -4.727888584136963
    7. ' len' → logprob: -4.852888584136963
    8. ' (' → logprob: -5.227888584136963
    9. '(' → logprob: -5.477888584136963
    10. 'data' → logprob: -6.352888584136963

Token 101: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.18179480731487274
    2. '(' → logprob: -2.4317948818206787
    3. '(A' → logprob: -2.5567948818206787
    4. '(Data' → logprob: -7.3067946434021
    5. '(
' → logprob: -9.556795120239258
    6. '<|end|>' → logprob: -10.681795120239258
    7. '(DATA' → logprob: -11.556795120239258
    8. ' (' → logprob: -12.306795120239258
    9. '(n' → logprob: -13.181795120239258
    10. '(B' → logprob: -13.306795120239258

Token 102: ',' (ID: 11)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.22331686317920685
    2. ',data' → logprob: -2.2233169078826904
    3. ',' → logprob: -2.5983169078826904
    4. '(' → logprob: -4.098316669464111
    5. '(n' → logprob: -8.09831714630127
    6. ' ,' → logprob: -8.84831714630127
    7. ')data' → logprob: -9.09831714630127
    8. ',n' → logprob: -9.09831714630127
    9. ')' → logprob: -9.59831714630127
    10. ',(' → logprob: -9.97331714630127

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '<|end|>' → logprob: -17.62500762939453
    4. '۰' → logprob: -18.62500762939453
    5. ')' → logprob: -18.87500762939453
    6. '```' → logprob: -19.75000762939453
    7. ',' → logprob: -20.12500762939453
    8. '(' → logprob: -20.50000762939453
    9. '   ' → logprob: -20.50000762939453
    10. '
' → logprob: -20.75000762939453

Token 104: ',len' (ID: 73338)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.05543980747461319
    2. ',' → logprob: -3.1804397106170654
    3. ',len' → logprob: -4.4304399490356445
    4. ' ,' → logprob: -8.055439949035645
    5. 'n' → logprob: -9.555439949035645
    6. 'len' → logprob: -10.930439949035645
    7. ',num' → logprob: -11.430439949035645
    8. ',data' → logprob: -11.930439949035645
    9. ',length' → logprob: -12.305439949035645
    10. ',r' → logprob: -12.930439949035645

Token 105: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -3.292907877039397e-06
    2. 'data' → logprob: -13.37500286102295
    3. '(' → logprob: -13.75000286102295
    4. '-' → logprob: -14.62500286102295
    5. ')data' → logprob: -16.000003814697266
    6. '(n' → logprob: -17.000003814697266
    7. ' data' → logprob: -17.625003814697266
    8. '[data' → logprob: -18.250003814697266
    9. '<data' → logprob: -19.375003814697266
    10. ')' → logprob: -19.625003814697266

Token 106: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010030409321188927
    2. ' -' → logprob: -5.260030269622803
    3. ')-' → logprob: -6.010030269622803
    4. '()-' → logprob: -6.135030269622803
    5. ')' → logprob: -8.760030746459961
    6. '-data' → logprob: -13.260030746459961
    7. '(data' → logprob: -13.635030746459961
    8. '()' → logprob: -13.885030746459961
    9. 'data' → logprob: -14.010030746459961
    10. ')data' → logprob: -14.635030746459961

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038336371653713286
    2. '2' → logprob: -8.500383377075195
    3. ' ' → logprob: -8.625383377075195
    4. '```' → logprob: -15.875383377075195
    5. '   ' → logprob: -16.500383377075195
    6. '  ' → logprob: -16.812883377075195
    7. '-' → logprob: -17.062883377075195
    8. ')' → logprob: -17.750383377075195
    9. '１' → logprob: -17.875383377075195
    10. '0' → logprob: -18.312883377075195

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. '))' → logprob: -12.500005722045898
    3. ')
' → logprob: -13.750005722045898
    4. ' )' → logprob: -15.250005722045898
    5. '),' → logprob: -17.0000057220459
    6. ')

' → logprob: -17.1250057220459
    7. ')))' → logprob: -17.1250057220459
    8. ')#' → logprob: -17.5000057220459
    9. '())' → logprob: -17.7500057220459
    10. ')}}' → logprob: -18.2500057220459

Token 109: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003075040876865387
    2. 'if' → logprob: -6.003075122833252
    3. 'for' → logprob: -7.628075122833252
    4. 'pr' → logprob: -9.878074645996094
    5. '<|end|>' → logprob: -11.253074645996094
    6. ')' → logprob: -11.378074645996094
    7. '#print' → logprob: -12.128074645996094
    8. 'p' → logprob: -12.253074645996094
    9. ' print' → logprob: -12.628074645996094
    10. 'prin' → logprob: -12.628074645996094

Token 110: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011084014549851418
    2. 'i' → logprob: -4.511084079742432
    3. ' ' → logprob: -10.386083602905273
    4. '	i' → logprob: -13.386083602905273
    5. ' ' → logprob: -14.011083602905273
    6. ' (' → logprob: -14.386083602905273
    7. ' x' → logprob: -14.511083602905273
    8. '(i' → logprob: -14.636083602905273
    9. '  ' → logprob: -14.761083602905273
    10. ' data' → logprob: -15.886083602905273

Token 111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020623289048671722
    2. 'in' → logprob: -3.895623207092285
    3. ' ' → logprob: -9.520623207092285
    4. 'range' → logprob: -12.895623207092285
    5. '  ' → logprob: -13.145623207092285
    6. ' range' → logprob: -14.270623207092285
    7. '	in' → logprob: -14.395623207092285
    8. ')' → logprob: -14.895623207092285
    9. 'n' → logprob: -14.895623207092285
    10. ',' → logprob: -15.145623207092285

Token 112: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3869044780731201
    2. ' range' → logprob: -1.1369044780731201
    3. '(range' → logprob: -11.0119047164917
    4. ' data' → logprob: -11.7619047164917
    5. 'data' → logprob: -12.0119047164917
    6. ' ' → logprob: -13.2619047164917
    7. '	range' → logprob: -14.3869047164917
    8. '(' → logprob: -15.3869047164917
    9. '  ' → logprob: -15.6369047164917
    10. ')' → logprob: -16.136903762817383

Token 113: '(' (ID: 7)
  Prédit: '(mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.09334765374660492
    2. '(' → logprob: -2.5933475494384766
    3. '(n' → logprob: -4.468347549438477
    4. '(len' → logprob: -5.968347549438477
    5. ' (' → logprob: -8.218347549438477
    6. '(m' → logprob: -10.218347549438477
    7. ' mid' → logprob: -10.968347549438477
    8. '(
' → logprob: -12.968347549438477
    9. '(i' → logprob: -14.718347549438477
    10. ' ' → logprob: -14.843347549438477

Token 114: '0' (ID: 15)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.09077828377485275
    2. ' mid' → logprob: -2.465778350830078
    3. 'n' → logprob: -7.090778350830078
    4. '0' → logprob: -8.090778350830078
    5. ' n' → logprob: -8.215778350830078
    6. 'len' → logprob: -8.340778350830078
    7. ' ' → logprob: -9.715778350830078
    8. '(mid' → logprob: -9.840778350830078
    9. 'm' → logprob: -10.090778350830078
    10. ' len' → logprob: -10.590778350830078

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6326650381088257
    2. ' mid' → logprob: -0.8826650381088257
    3. ' ,' → logprob: -3.5076651573181152
    4. 'mid' → logprob: -4.132665157318115
    5. ' n' → logprob: -5.507665157318115
    6. ' ' → logprob: -5.882665157318115
    7. ',m' → logprob: -6.757665157318115
    8. ',n' → logprob: -7.007665157318115
    9. '(mid' → logprob: -9.257664680480957
    10. ',len' → logprob: -9.882664680480957

Token 116: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.03885010629892349
    2. ' mid' → logprob: -3.2888500690460205
    3. 'len' → logprob: -7.7888503074646
    4. 'n' → logprob: -8.038849830627441
    5. ' n' → logprob: -10.288849830627441
    6. ' len' → logprob: -10.663849830627441
    7. ' ' → logprob: -11.788849830627441
    8. 'm' → logprob: -12.913849830627441
    9. '  ' → logprob: -13.663849830627441
    10. '(mid' → logprob: -13.788849830627441

Token 117: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11749818176031113
    2. '):' → logprob: -2.2424981594085693
    3. ' +' → logprob: -5.492498397827148
    4. ' ):' → logprob: -7.992498397827148
    5. ')' → logprob: -8.742498397827148
    6. '):
' → logprob: -10.617498397827148
    7. ',' → logprob: -11.242498397827148
    8. ' ' → logprob: -12.367498397827148
    9. ' )' → logprob: -12.867498397827148
    10. ':' → logprob: -13.617498397827148

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03418142721056938
    2. ' print' → logprob: -3.5341813564300537
    3. 'print' → logprob: -5.534181594848633
    4. '<|end|>' → logprob: -9.034181594848633
    5. ' ' → logprob: -9.159181594848633
    6. '    ' → logprob: -9.284181594848633
    7. '	print' → logprob: -9.284181594848633
    8. '       ' → logprob: -10.659181594848633
    9. '    
' → logprob: -11.659181594848633
    10. '  ' → logprob: -12.034181594848633

Token 119: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4766274690628052
    2. ' print' → logprob: -0.9766274690628052
    3. '   ' → logprob: -5.976627349853516
    4. '	print' → logprob: -12.351627349853516
    5. '    ' → logprob: -12.976627349853516
    6. '.print' → logprob: -13.476627349853516
    7. ' ' → logprob: -14.226627349853516
    8. '```' → logprob: -14.976627349853516
    9. '    
' → logprob: -15.976627349853516
    10. ' data' → logprob: -16.226627349853516

Token 120: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.03996932879090309
    2. 'data' → logprob: -3.2899694442749023
    3. '(' → logprob: -6.289969444274902
    4. ' data' → logprob: -9.914969444274902
    5. '("' → logprob: -12.039969444274902
    6. '   ' → logprob: -12.164969444274902
    7. ' (' → logprob: -12.289969444274902
    8. '('' → logprob: -12.789969444274902
    9. '"' → logprob: -14.039969444274902
    10. '(
' → logprob: -14.539969444274902

Token 121: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.875001907348633
    4. ' [' → logprob: -17.125001907348633
    5. ')' → logprob: -17.625001907348633
    6. 'i' → logprob: -18.000001907348633
    7. '[I' → logprob: -18.125001907348633
    8. '```' → logprob: -18.125001907348633
    9. ' ' → logprob: -18.250001907348633
    10. '[
' → logprob: -18.750001907348633

Token 122: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2063610851764679
    2. ')' → logprob: -2.2063610553741455
    3. ',end' → logprob: -2.5813610553741455
    4. ' ,' → logprob: -7.581361293792725
    5. '   ' → logprob: -9.831360816955566
    6. ',)' → logprob: -10.456360816955566
    7. '),' → logprob: -10.956360816955566
    8. ',data' → logprob: -11.331360816955566
    9. ' )' → logprob: -11.581360816955566
    10. ',i' → logprob: -11.831360816955566

Token 123: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.007326432503759861
    2. ' end' → logprob: -5.007326602935791
    3. '"' → logprob: -8.257326126098633
    4. ',end' → logprob: -8.757326126098633
    5. ''end' → logprob: -9.382326126098633
    6. ''' → logprob: -9.507326126098633
    7. '(end' → logprob: -11.007326126098633
    8. ',' → logprob: -12.132326126098633
    9. ')' → logprob: -12.257326126098633
    10. '   ' → logprob: -12.882326126098633

Token 124: '="' (ID: 580)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.03985271602869034
    2. '=' → logprob: -3.7898526191711426
    3. '="' → logprob: -4.539852619171143
    4. ''' → logprob: -5.414852619171143
    5. '"' → logprob: -7.414852619171143
    6. '('' → logprob: -7.664852619171143
    7. ')' → logprob: -8.6648530960083
    8. '=',' → logprob: -10.0398530960083
    9. '(' → logprob: -10.6648530960083
    10. ' ='' → logprob: -11.6648530960083

Token 125: ' ")
' (ID: 31232)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.24867567420005798
    2. ''' → logprob: -1.6236757040023804
    3. ' ' → logprob: -4.74867582321167
    4. ' )' → logprob: -4.99867582321167
    5. ' "' → logprob: -5.12367582321167
    6. ')' → logprob: -6.74867582321167
    7. ' '' → logprob: -7.87367582321167
    8. ' ),' → logprob: -10.748675346374512
    9. ',' → logprob: -11.498675346374512
    10. 's' → logprob: -11.748675346374512

Token 126: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0030179955065250397
    2. ')' → logprob: -6.378017902374268
    3. 'for' → logprob: -7.503017902374268
    4. ' print' → logprob: -7.878017902374268
    5. '<|end|>' → logprob: -8.503018379211426
    6. '```' → logprob: -9.878018379211426
    7. ' for' → logprob: -10.378018379211426
    8. '
' → logprob: -10.878018379211426
    9. ')
' → logprob: -11.253018379211426
    10. ' 
' → logprob: -11.378018379211426

Token 127: '("[' (ID: 21812)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7435619831085205
    2. '()' → logprob: -0.7435619831085205
    3. '(data' → logprob: -3.2435619831085205
    4. '("("' → logprob: -4.743561744689941
    5. '('' → logprob: -6.743561744689941
    6. '("' → logprob: -9.118561744689941
    7. '("")' → logprob: -9.493561744689941
    8. '((' → logprob: -10.618561744689941
    9. '()
' → logprob: -11.243561744689941
    10. '(
' → logprob: -12.493561744689941

Token 128: '{' (ID: 90)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '",' → logprob: -0.6555600166320801
    2. 'data' → logprob: -1.03056001663208
    3. '")' → logprob: -2.78056001663208
    4. ']' → logprob: -3.65556001663208
    5. 'mid' → logprob: -3.65556001663208
    6. ']",' → logprob: -4.90556001663208
    7. '"]' → logprob: -6.65556001663208
    8. 'end' → logprob: -6.90556001663208
    9. ')' → logprob: -8.655559539794922
    10. ')",' → logprob: -9.780559539794922

Token 129: '0' (ID: 15)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1288677603006363
    2. '}' → logprob: -2.7538678646087646
    3. '0' → logprob: -3.3788678646087646
    4. '}",' → logprob: -4.2538676261901855
    5. '",' → logprob: -5.3788676261901855
    6. '}]' → logprob: -6.0038676261901855
    7. 'mid' → logprob: -7.5038676261901855
    8. '}")' → logprob: -7.6288676261901855
    9. '"}' → logprob: -8.878868103027344
    10. '(data' → logprob: -9.128868103027344

Token 130: '}]' (ID: 53940)
  Prédit: '}]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}]' → logprob: -0.0032784834038466215
    2. '0' → logprob: -6.3782782554626465
    3. '}' → logprob: -7.1282782554626465
    4. '}".' → logprob: -7.6282782554626465
    5. 'data' → logprob: -9.128278732299805
    6. ':' → logprob: -9.753278732299805
    7. 'mid' → logprob: -10.753278732299805
    8. ']}' → logprob: -11.128278732299805
    9. ':d' → logprob: -11.628278732299805
    10. ']' → logprob: -11.753278732299805

Token 131: ' ".' (ID: 11730)
  Prédit: '}".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}".' → logprob: -0.5575916767120361
    2. 'data' → logprob: -0.9325916767120361
    3. '0' → logprob: -4.682591438293457
    4. '{' → logprob: -4.932591438293457
    5. '}' → logprob: -4.932591438293457
    6. ']' → logprob: -5.557591438293457
    7. '".' → logprob: -6.182591438293457
    8. '}]' → logprob: -6.682591438293457
    9. ':data' → logprob: -7.182591438293457
    10. '.data' → logprob: -7.432591438293457

Token 132: 'format' (ID: 4078)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.536105751991272
    2. 'format' → logprob: -1.411105751991272
    3. 'data' → logprob: -1.911105751991272
    4. '.format' → logprob: -3.7861056327819824
    5. '0' → logprob: -9.28610610961914
    6. ' mid' → logprob: -9.41110610961914
    7. '(mid' → logprob: -9.41110610961914
    8. 'str' → logprob: -9.53610610961914
    9. '.mid' → logprob: -9.78610610961914
    10. '.data' → logprob: -10.53610610961914

Token 133: '(data' (ID: 4819)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.00045188379590399563
    2. 'mid' → logprob: -7.750452041625977
    3. ' data' → logprob: -11.125452041625977
    4. '(data' → logprob: -12.125452041625977
    5. '	data' → logprob: -15.500452041625977
    6. ')data' → logprob: -15.500452041625977
    7. '   ' → logprob: -16.125452041625977
    8. 'A' → logprob: -16.125452041625977
    9. ' mid' → logprob: -16.250452041625977
    10. 'i' → logprob: -16.625452041625977

Token 134: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -6.635164754698053e-05
    2. 'mid' → logprob: -9.625066757202148
    3. '(mid' → logprob: -16.25006675720215
    4. ' mid' → logprob: -16.87506675720215
    5. '[m' → logprob: -19.00006675720215
    6. '_mid' → logprob: -19.25006675720215
    7. '```' → logprob: -19.62506675720215
    8. '[i' → logprob: -19.62506675720215
    9. '[' → logprob: -19.75006675720215
    10. '
' → logprob: -19.75006675720215

Token 135: ']),' (ID: 19560)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.28994157910346985
    2. ']))' → logprob: -1.4149415493011475
    3. ']),' → logprob: -5.164941787719727
    4. ')])' → logprob: -6.289941787719727
    5. ']' → logprob: -8.164941787719727
    6. ')' → logprob: -8.164941787719727
    7. '))' → logprob: -8.289941787719727
    8. '],' → logprob: -8.414941787719727
    9. '),' → logprob: -10.289941787719727
    10. ')]' → logprob: -10.664941787719727

Token 136: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.00033784625702537596
    2. ' end' → logprob: -8.000337600708008
    3. ')' → logprob: -13.750337600708008
    4. ',end' → logprob: -14.375337600708008
    5. '(end' → logprob: -15.250337600708008
    6. 'sep' → logprob: -15.500337600708008
    7. ''end' → logprob: -15.500337600708008
    8. '	end' → logprob: -16.875337600708008
    9. '*' → logprob: -17.375337600708008
    10. '[end' → logprob: -17.500337600708008

Token 137: '="")
' (ID: 154840)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0759839415550232
    2. '""' → logprob: -2.950984001159668
    3. '")' → logprob: -4.575984001159668
    4. ')' → logprob: -4.575984001159668
    5. ' "")' → logprob: -8.950984001159668
    6. '(""))' → logprob: -10.075984001159668
    7. '("")' → logprob: -10.325984001159668
    8. '"""' → logprob: -10.450984001159668
    9. ''' → logprob: -10.575984001159668
    10. '("' → logprob: -11.950984001159668

Token 138: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.25
    3. '```' → logprob: -18.375
    4. 'from' → logprob: -21.125
    5. 'print' → logprob: -21.25
    6. '
' → logprob: -22.125
    7. '<|end|>' → logprob: -22.25
    8. '[' → logprob: -22.375
    9. '	for' → logprob: -22.75
    10. 'while' → logprob: -23.0

Token 139: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.576148509979248
    2. 'i' → logprob: -0.826148509979248
    3. ' j' → logprob: -8.951148986816406
    4. 'j' → logprob: -9.576148986816406
    5. ' ' → logprob: -11.701148986816406
    6. 'x' → logprob: -15.201148986816406
    7. '	i' → logprob: -15.201148986816406
    8. 'I' → logprob: -15.326148986816406
    9. '   ' → logprob: -15.326148986816406
    10. '  ' → logprob: -15.576148986816406

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04951560124754906
    2. '(mid' → logprob: -3.17451548576355
    3. 'in' → logprob: -5.049515724182129
    4. ' mid' → logprob: -10.674515724182129
    5. ' (' → logprob: -11.174515724182129
    6. '(' → logprob: -11.174515724182129
    7. '(range' → logprob: -11.549515724182129
    8. '(in' → logprob: -11.549515724182129
    9. ' range' → logprob: -12.174515724182129
    10. 'range' → logprob: -13.174515724182129

Token 141: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16100114583969116
    2. ' range' → logprob: -1.911001205444336
    3. '(range' → logprob: -7.161001205444336
    4. '(mid' → logprob: -14.911001205444336
    5. '	range' → logprob: -17.536001205444336
    6. ' in' → logprob: -17.786001205444336
    7. 'mid' → logprob: -18.036001205444336
    8. 'in' → logprob: -18.411001205444336
    9. ' mid' → logprob: -18.536001205444336
    10. '_range' → logprob: -18.661001205444336

Token 142: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -1.282920129597187e-05
    2. '(' → logprob: -12.125012397766113
    3. ' (' → logprob: -12.375012397766113
    4. '(m' → logprob: -13.375012397766113
    5. 'mid' → logprob: -14.000012397766113
    6. '[mid' → logprob: -14.875012397766113
    7. '(mi' → logprob: -16.00001335144043
    8. '(len' → logprob: -16.50001335144043
    9. '((' → logprob: -17.12501335144043
    10. ' mid' → logprob: -17.25001335144043

Token 143: '+' (ID: 10)
  Prédit: ',len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',len' → logprob: -0.08941475301980972
    2. ',' → logprob: -3.0894148349761963
    3. '+' → logprob: -3.4644148349761963
    4. '(len' → logprob: -4.839414596557617
    5. ' ,' → logprob: -8.589414596557617
    6. ',n' → logprob: -8.839414596557617
    7. ' +' → logprob: -8.964414596557617
    8. '+,' → logprob: -9.089414596557617
    9. '(' → logprob: -9.339414596557617
    10. '<len' → logprob: -10.214414596557617

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7600625157356262
    2. 'len' → logprob: -0.7600625157356262
    3. ',len' → logprob: -3.0100624561309814
    4. ',' → logprob: -4.3850626945495605
    5. '(len' → logprob: -6.0100626945495605
    6. ' len' → logprob: -7.7600626945495605
    7. ' ' → logprob: -10.385062217712402
    8. 'n' → logprob: -10.885062217712402
    9. ' ,' → logprob: -11.135062217712402
    10. ',n' → logprob: -11.635062217712402

Token 145: ',len' (ID: 73338)
  Prédit: ',len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',len' → logprob: -0.001942918635904789
    2. ',' → logprob: -6.251943111419678
    3. ',n' → logprob: -11.62694263458252
    4. ' ,' → logprob: -12.50194263458252
    5. 'len' → logprob: -14.50194263458252
    6. ',length' → logprob: -14.75194263458252
    7. '(len' → logprob: -14.87694263458252
    8. ',to' → logprob: -16.376943588256836
    9. '<len' → logprob: -16.876943588256836
    10. '=len' → logprob: -16.876943588256836

Token 146: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -1.1994775377388578e-05
    2. 'data' → logprob: -11.375012397766113
    3. ')data' → logprob: -15.625012397766113
    4. '(' → logprob: -16.250011444091797
    5. '<data' → logprob: -16.875011444091797
    6. ' data' → logprob: -16.875011444091797
    7. '[data' → logprob: -17.000011444091797
    8. '=data' → logprob: -17.500011444091797
    9. ',data' → logprob: -18.125011444091797
    10. ' (' → logprob: -18.750011444091797

Token 147: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.630129873752594
    2. '(data' → logprob: -1.3801298141479492
    3. '):' → logprob: -1.8801298141479492
    4. ')):' → logprob: -3.255129814147949
    5. ')data' → logprob: -4.505129814147949
    6. '))' → logprob: -5.130129814147949
    7. '):
' → logprob: -5.755129814147949
    8. ')-' → logprob: -6.255129814147949
    9. ')):
' → logprob: -6.630129814147949
    10. '):

' → logprob: -7.255129814147949

Token 148: '1' (ID: 16)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0014545208541676402
    2. ' data' → logprob: -7.3764543533325195
    3. ')' → logprob: -7.8764543533325195
    4. '1' → logprob: -7.8764543533325195
    5. '(data' → logprob: -9.87645435333252
    6. ')data' → logprob: -11.87645435333252
    7. 'n' → logprob: -12.25145435333252
    8. '0' → logprob: -12.62645435333252
    9. ' ' → logprob: -14.00145435333252
    10. 'len' → logprob: -15.00145435333252

Token 149: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2878407835960388
    2. '):' → logprob: -1.4128408432006836
    3. '+' → logprob: -5.537840843200684
    4. ')' → logprob: -6.912840843200684
    5. '   ' → logprob: -7.037840843200684
    6. '():
' → logprob: -8.037840843200684
    7. ':' → logprob: -8.287840843200684
    8. '()):
' → logprob: -9.662840843200684
    9. ',' → logprob: -9.787840843200684
    10. '():' → logprob: -10.037840843200684

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1696673482656479
    2. 'print' → logprob: -1.919667363166809
    3. ' print' → logprob: -4.6696672439575195
    4. '	print' → logprob: -10.91966724395752
    5. '       ' → logprob: -12.66966724395752
    6. '.print' → logprob: -14.04466724395752
    7. '```' → logprob: -14.54466724395752
    8. '(print' → logprob: -15.66966724395752
    9. ' ' → logprob: -16.044668197631836
    10. '  ' → logprob: -16.294668197631836

Token 151: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006813881453126669
    2. ' print' → logprob: -5.006814002990723
    3. '   ' → logprob: -9.256814002990723
    4. '	print' → logprob: -13.006814002990723
    5. ' ' → logprob: -15.006814002990723
    6. '.print' → logprob: -15.256814002990723
    7. '
' → logprob: -15.881814002990723
    8. '       ' → logprob: -17.131813049316406
    9. 'printf' → logprob: -17.506813049316406
    10. '  ' → logprob: -17.506813049316406

Token 152: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.500001907348633
    3. 'data' → logprob: -16.625001907348633
    4. ' (' → logprob: -19.500001907348633
    5. '(
' → logprob: -20.250001907348633
    6. '=data' → logprob: -20.500001907348633
    7. '[data' → logprob: -20.625001907348633
    8. ',data' → logprob: -21.500001907348633
    9. '<data' → logprob: -21.625001907348633
    10. ' data' → logprob: -22.125001907348633

Token 153: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[data' → logprob: -13.875000953674316
    3. 'i' → logprob: -16.625001907348633
    4. 'data' → logprob: -16.750001907348633
    5. '[' → logprob: -17.875001907348633
    6. '```' → logprob: -18.250001907348633
    7. ')' → logprob: -18.375001907348633
    8. '[
' → logprob: -19.500001907348633
    9. '[j' → logprob: -19.500001907348633
    10. '(i' → logprob: -20.000001907348633

Token 154: '],' (ID: 2155)
  Prédit: ',end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',end' → logprob: -0.00880211777985096
    2. ',' → logprob: -4.7588019371032715
    3. 'end' → logprob: -9.50880241394043
    4. '   ' → logprob: -10.13380241394043
    5. '],' → logprob: -10.38380241394043
    6. ' ,' → logprob: -11.00880241394043
    7. '[end' → logprob: -11.13380241394043
    8. ':end' → logprob: -12.50880241394043
    9. '(end' → logprob: -12.50880241394043
    10. '),' → logprob: -13.50880241394043

Token 155: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -5.955703818472102e-05
    2. ' end' → logprob: -9.750059127807617
    3. ',end' → logprob: -13.750059127807617
    4. '(end' → logprob: -16.125059127807617
    5. ''end' → logprob: -17.500059127807617
    6. '   ' → logprob: -17.500059127807617
    7. '	end' → logprob: -18.125059127807617
    8. '=end' → logprob: -18.375059127807617
    9. '    ' → logprob: -19.000059127807617
    10. '[end' → logprob: -19.500059127807617

Token 156: '="' (ID: 580)
  Prédit: '="'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '="' → logprob: -0.2820577621459961
    2. '"' → logprob: -1.407057762145996
    3. '=' → logprob: -7.032057762145996
    4. '("' → logprob: -11.782057762145996
    5. ' ="' → logprob: -12.407057762145996
    6. '=""' → logprob: -12.782057762145996
    7. '
' → logprob: -13.032057762145996
    8. ' "' → logprob: -13.907057762145996
    9. '=",' → logprob: -13.907057762145996
    10. ',"' → logprob: -14.532057762145996

Token 157: ' ")
' (ID: 31232)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06226758286356926
    2. ' "' → logprob: -2.812267541885376
    3. ' ' → logprob: -9.062267303466797
    4. ')' → logprob: -9.312267303466797
    5. ' )' → logprob: -10.437267303466797
    6. ''' → logprob: -10.687267303466797
    7. ' ")' → logprob: -11.187267303466797
    8. '")' → logprob: -11.562267303466797
    9. '">' → logprob: -12.187267303466797
    10. 's' → logprob: -13.187267303466797

Token 158: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012057077838107944
    2. 'for' → logprob: -7.001205921173096
    3. 'len' → logprob: -8.751205444335938
    4. '[len' → logprob: -9.751205444335938
    5. ' print' → logprob: -10.251205444335938
    6. 'range' → logprob: -11.126205444335938
    7. 'data' → logprob: -12.126205444335938
    8. ')' → logprob: -12.376205444335938
    9. '(len' → logprob: -12.501205444335938
    10. ' for' → logprob: -12.751205444335938

Token 159: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.203505739569664
    2. '()' → logprob: -1.7035057544708252
    3. '(' → logprob: -6.828505516052246
    4. '("("' → logprob: -6.953505516052246
    5. '("")' → logprob: -10.578505516052246
    6. '((' → logprob: -12.328505516052246
    7. '("' → logprob: -12.328505516052246
    8. '('' → logprob: -12.328505516052246
    9. '()
' → logprob: -12.453505516052246
    10. 'data' → logprob: -13.328505516052246

Token 160: '[len' (ID: 57582)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.4740773141384125
    2. '[len' → logprob: -0.9740773439407349
    3. '[' → logprob: -15.474077224731445
    4. '[n' → logprob: -17.724077224731445
    5. 'len' → logprob: -18.099077224731445
    6. '[last' → logprob: -18.724077224731445
    7. '[length' → logprob: -19.099077224731445
    8. '[mid' → logprob: -19.224077224731445
    9. ')' → logprob: -19.974077224731445
    10. '[end' → logprob: -19.974077224731445

Token 161: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -9.372294698550832e-06
    2. 'data' → logprob: -11.750009536743164
    3. '[data' → logprob: -14.375009536743164
    4. ')data' → logprob: -14.875009536743164
    5. '-' → logprob: -16.125009536743164
    6. '(' → logprob: -16.125009536743164
    7. '=data' → logprob: -16.500009536743164
    8. ' data' → logprob: -16.875009536743164
    9. ' (' → logprob: -16.875009536743164
    10. ',data' → logprob: -17.125009536743164

Token 162: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16886326670646667
    2. ')-' → logprob: -1.918863296508789
    3. ')' → logprob: -5.418863296508789
    4. '(data' → logprob: -6.293863296508789
    5. 'data' → logprob: -7.043863296508789
    6. ' -' → logprob: -7.293863296508789
    7. ']-' → logprob: -7.793863296508789
    8. '()-' → logprob: -8.543863296508789
    9. '-data' → logprob: -10.168863296508789
    10. ')data' → logprob: -10.293863296508789

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.375015258789062
    4. '-' → logprob: -16.750015258789062
    5. '```' → logprob: -17.375015258789062
    6. '  ' → logprob: -17.625015258789062
    7. ')' → logprob: -17.812515258789062
    8. '0' → logprob: -18.250015258789062
    9. '１' → logprob: -18.562515258789062
    10. '2' → logprob: -18.687515258789062

Token 164: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000607602356467396
    2. '])' → logprob: -7.750607490539551
    3. '))' → logprob: -8.75060749053955
    4. ')])' → logprob: -12.12560749053955
    5. '})' → logprob: -12.62560749053955
    6. ' )' → logprob: -13.12560749053955
    7. ')")' → logprob: -13.37560749053955
    8. ')]' → logprob: -13.75060749053955
    9. '())' → logprob: -14.00060749053955
    10. ')
' → logprob: -14.37560749053955


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 162
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 85
Tokens correctement prédits (top 10): 140
Précision stricte (1ère position): 48.77%
Précision adaptée (1ère position): 52.47%
Précision (top 10): 86.42%
================================================================================
