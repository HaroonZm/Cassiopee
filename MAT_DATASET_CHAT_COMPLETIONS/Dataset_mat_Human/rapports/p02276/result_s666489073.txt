================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def InputData():
    
    sequence_len = int(input())
    sequence = list(map(int, input().split(" ")))

    return sequence_len, sequence

def partition(sequence, p, r):
    x = sequence[r]
    i = p - 1
    # sequence[j]
    for j in range(p, r):
        if sequence[j] <= x:
            # print(sequence[j])
            i += 1
            sequence[i], sequence[j]= sequence[j], sequence[i]
    
    sequence[i+1], sequence[r] = sequence[r], sequence[i+1]
    return i+1

def PrintOut(sequence):
    print(' '.join( map(str, sequence)))

def main():
    [sequence_len, sequence] = InputData()
    q = partition(sequence, 0, sequence_len-1)
    sequence[q] = "[" + str(sequence[q]) + "]"
    PrintOut(sequence)

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' Input' (ID: 10090)
  → Token d'amorce (pas de prédiction)

Token 2: 'Data' (ID: 1186)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007768734358251095
    2. '(:' → logprob: -8.125777244567871
    3. ':' → logprob: -8.250777244567871
    4. '():' → logprob: -9.625777244567871
    5. '```' → logprob: -9.875777244567871
    6. ' (' → logprob: -10.125777244567871
    7. '[' → logprob: -10.625777244567871
    8. '(
' → logprob: -12.375777244567871
    9. '.' → logprob: -12.625777244567871
    10. '\(' → logprob: -12.750777244567871

Token 4: '    
' (ID: 1944)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.27603450417518616
    2. '\' → logprob: -2.7760345935821533
    3. '   ' → logprob: -2.7760345935821533
    4. '(' → logprob: -2.9010345935821533
    5. '\n' → logprob: -3.7760345935821533
    6. ':' → logprob: -4.901034355163574
    7. '    
' → logprob: -5.276034355163574
    8. '(
' → logprob: -5.526034355163574
    9. '()' → logprob: -5.901034355163574
    10. '``' → logprob: -6.026034355163574

Token 5: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006888946518301964
    2. '    ' → logprob: -6.2568888664245605
    3. '\' → logprob: -6.6318888664245605
    4. 'return' → logprob: -7.0068888664245605
    5. 'r' → logprob: -7.5068888664245605
    6. ' return' → logprob: -7.7568888664245605
    7. '```' → logprob: -8.006889343261719
    8. '    
' → logprob: -8.131889343261719
    9. ' ' → logprob: -8.131889343261719
    10. '\t' → logprob: -8.381889343261719

Token 6: ' sequence' (ID: 16281)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4228772222995758
    2. 'return' → logprob: -1.7978771924972534
    3. '#' → logprob: -2.547877311706543
    4. '   ' → logprob: -3.172877311706543
    5. 'x' → logprob: -3.547877311706543
    6. 'i' → logprob: -4.922877311706543
    7. ' ' → logprob: -5.172877311706543
    8. 'input' → logprob: -5.922877311706543
    9. 'n' → logprob: -6.047877311706543
    10. 'data' → logprob: -6.172877311706543

Token 7: '_len' (ID: 13683)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9172796010971069
    2. ' =' → logprob: -1.042279601097107
    3. 's' → logprob: -1.792279601097107
    4. '_' → logprob: -3.4172797203063965
    5. '[' → logprob: -3.7922797203063965
    6. '(' → logprob: -4.5422797203063965
    7. '.' → logprob: -4.6672797203063965
    8. ')' → logprob: -6.4172797203063965
    9. '[:]' → logprob: -6.4172797203063965
    10. ' ' → logprob: -7.2922797203063965

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2715323865413666
    2. ' =' → logprob: -2.0215322971343994
    3. '_' → logprob: -2.3965322971343994
    4. ')' → logprob: -4.6465325355529785
    5. ' ' → logprob: -6.5215325355529785
    6. 'd' → logprob: -7.5215325355529785
    7. '   ' → logprob: -7.6465325355529785
    8. ',' → logprob: -7.6465325355529785
    9. '  ' → logprob: -7.8965325355529785
    10. 's' → logprob: -8.14653205871582

Token 9: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.000990295666269958
    2. '20' → logprob: -7.750990390777588
    3. '10' → logprob: -8.00098991394043
    4. '32' → logprob: -9.50098991394043
    5. '50' → logprob: -10.75098991394043
    6. '16' → logprob: -10.75098991394043
    7. '100' → logprob: -10.87598991394043
    8. '  ' → logprob: -11.25098991394043
    9. '128' → logprob: -11.37598991394043
    10. ' int' → logprob: -11.50098991394043

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07927551865577698
    2. '(input' → logprob: -2.579275608062744
    3. '('' → logprob: -8.704275131225586
    4. ' (' → logprob: -9.954275131225586
    5. '(user' → logprob: -10.079275131225586
    6. 'input' → logprob: -10.454275131225586
    7. '()' → logprob: -10.579275131225586
    8. '("' → logprob: -10.704275131225586
    9. ' ' → logprob: -10.829275131225586
    10. '(
' → logprob: -12.079275131225586

Token 11: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1355341076850891
    2. '()' → logprob: -2.2605340480804443
    3. '('' → logprob: -4.510534286499023
    4. '())' → logprob: -4.760534286499023
    5. '(""))' → logprob: -7.135534286499023
    6. '("("' → logprob: -7.260534286499023
    7. '("' → logprob: -7.635534286499023
    8. '("")' → logprob: -7.885534286499023
    9. ')' → logprob: -8.635534286499023
    10. '()))' → logprob: -9.635534286499023

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5051546692848206
    2. ')' → logprob: -1.2551546096801758
    3. '
' → logprob: -3.380154609680176
    4. '<|end|>' → logprob: -3.880154609680176
    5. '    
' → logprob: -4.130154609680176
    6. ' ' → logprob: -4.255154609680176
    7. '    ' → logprob: -4.755154609680176
    8. '\n' → logprob: -5.630154609680176
    9. '  
' → logprob: -5.630154609680176
    10. ' 
' → logprob: -6.380154609680176

Token 13: ' sequence' (ID: 16281)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4866093397140503
    2. '    
' → logprob: -2.23660945892334
    3. '\' → logprob: -2.36160945892334
    4. '\n' → logprob: -2.98660945892334
    5. 'n' → logprob: -3.48660945892334
    6. 'data' → logprob: -3.61160945892334
    7. '
' → logprob: -4.48660945892334
    8. '```' → logprob: -4.48660945892334
    9. ')' → logprob: -4.86160945892334
    10. 'return' → logprob: -4.98660945892334

Token 14: ' =' (ID: 314)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.2713643014431
    2. '_' → logprob: -1.7713643312454224
    3. '[' → logprob: -2.896364212036133
    4. '.' → logprob: -5.396364212036133
    5. '_length' → logprob: -6.146364212036133
    6. '[:]' → logprob: -6.521364212036133
    7. '[len' → logprob: -7.021364212036133
    8. ')' → logprob: -7.396364212036133
    9. '_l' → logprob: -7.521364212036133
    10. '[]' → logprob: -7.771364212036133

Token 15: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5348446369171143
    2. ' []' → logprob: -1.2848446369171143
    3. 'input' → logprob: -2.7848446369171143
    4. ' ' → logprob: -2.9098446369171143
    5. ' list' → logprob: -4.159844398498535
    6. '[]' → logprob: -5.534844398498535
    7. 'list' → logprob: -7.409844398498535
    8. '   ' → logprob: -8.159844398498535
    9. '  ' → logprob: -8.784844398498535
    10. '(input' → logprob: -8.784844398498535

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.059076499193906784
    2. '(input' → logprob: -3.0590765476226807
    3. '()' → logprob: -4.684076309204102
    4. '(int' → logprob: -7.684076309204102
    5. '(range' → logprob: -7.809076309204102
    6. '(map' → logprob: -9.684076309204102
    7. '(
' → logprob: -9.809076309204102
    8. ' (' → logprob: -9.934076309204102
    9. '(eval' → logprob: -10.684076309204102
    10. '(

' → logprob: -10.934076309204102

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.058375418186187744
    2. '(' → logprob: -3.308375358581543
    3. '(str' → logprob: -4.058375358581543
    4. '(lambda' → logprob: -6.183375358581543
    5. '(input' → logprob: -7.558375358581543
    6. '(
' → logprob: -9.433375358581543
    7. 'str' → logprob: -10.058375358581543
    8. ')' → logprob: -10.183375358581543
    9. 'int' → logprob: -10.683375358581543
    10. '(eval' → logprob: -10.808375358581543

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.025400344282388687
    2. '(' → logprob: -4.775400161743164
    3. ',input' → logprob: -4.775400161743164
    4. '))' → logprob: -5.900400161743164
    5. ')' → logprob: -6.150400161743164
    6. '<|end|>' → logprob: -6.400400161743164
    7. 'input' → logprob: -7.150400161743164
    8. ',' → logprob: -8.275400161743164
    9. '<|end|>' → logprob: -8.775400161743164
    10. '=input' → logprob: -9.150400161743164

Token 19: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5765385627746582
    2. 'input' → logprob: -0.8265385627746582
    3. '(input' → logprob: -7.451538562774658
    4. ',input' → logprob: -11.7015380859375
    5. '=input' → logprob: -12.3265380859375
    6. '	input' → logprob: -12.9515380859375
    7. ')' → logprob: -14.0765380859375
    8. '_input' → logprob: -14.3265380859375
    9. '<input' → logprob: -14.4515380859375
    10. '[input' → logprob: -14.8265380859375

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5889998078346252
    2. '()' → logprob: -1.0889997482299805
    3. '()))' → logprob: -2.3389997482299805
    4. '())' → logprob: -5.4639997482299805
    5. '())))' → logprob: -5.4639997482299805
    6. '()));' → logprob: -5.8389997482299805
    7. '()>' → logprob: -7.9639997482299805
    8. '(' → logprob: -10.21399974822998
    9. '()==' → logprob: -10.21399974822998
    10. '());' → logprob: -10.33899974822998

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007173155900090933
    2. 'strip' → logprob: -7.2507171630859375
    3. 'rstrip' → logprob: -11.875717163085938
    4. ' split' → logprob: -15.125717163085938
    5. '(split' → logprob: -16.375717163085938
    6. 'spl' → logprob: -17.125717163085938
    7. ')' → logprob: -18.250717163085938
    8. 'replace' → logprob: -19.125717163085938
    9. 's' → logprob: -19.250717163085938
    10. 'sp' → logprob: -19.375717163085938

Token 22: '("' (ID: 568)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.16930408775806427
    2. '())' → logprob: -2.919304132461548
    3. '()' → logprob: -3.044304132461548
    4. '(' → logprob: -3.169304132461548
    5. '))' → logprob: -4.794303894042969
    6. ')' → logprob: -5.794303894042969
    7. '())))' → logprob: -7.669303894042969
    8. ''))' → logprob: -9.919303894042969
    9. ')))' → logprob: -9.919303894042969
    10. '('' → logprob: -10.044303894042969

Token 23: ' "' (ID: 392)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0945391058921814
    2. ')))' → logprob: -2.469539165496826
    3. '")))' → logprob: -5.469539165496826
    4. '"' → logprob: -8.219538688659668
    5. ' "' → logprob: -8.344538688659668
    6. '")' → logprob: -8.344538688659668
    7. '()' → logprob: -8.844538688659668
    8. '())))' → logprob: -8.969538688659668
    9. ')"' → logprob: -9.469538688659668
    10. '"))' → logprob: -9.719538688659668

Token 24: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.20191523432731628
    2. ')' → logprob: -1.7019152641296387
    3. '))))' → logprob: -8.07691478729248
    4. '))' → logprob: -8.70191478729248
    5. '')))' → logprob: -11.32691478729248
    6. ')));' → logprob: -13.07691478729248
    7. '")))' → logprob: -13.20191478729248
    8. ' ' → logprob: -13.45191478729248
    9. '   ' → logprob: -13.45191478729248
    10. ' )' → logprob: -13.82691478729248

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2935376763343811
    2. ')' → logprob: -2.1685376167297363
    3. ' ' → logprob: -2.5435376167297363
    4. '
' → logprob: -3.4185376167297363
    5. '    
' → logprob: -5.293537616729736
    6. 'r' → logprob: -5.418537616729736
    7. '#' → logprob: -5.668537616729736
    8. '  ' → logprob: -6.043537616729736
    9. ' 
' → logprob: -6.168537616729736
    10. '  
' → logprob: -6.293537616729736

Token 26: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6545585989952087
    2. 'i' → logprob: -0.7795585989952087
    3. '#' → logprob: -4.5295586585998535
    4. '   ' → logprob: -5.5295586585998535
    5. 'if' → logprob: -5.6545586585998535
    6. ' ' → logprob: -6.5295586585998535
    7. 'n' → logprob: -7.5295586585998535
    8. 'return' (adapté à ' return') → logprob: -7.6545586585998535
    9. ')' → logprob: -8.154558181762695
    10. '
' → logprob: -8.904558181762695

Token 27: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.2014922797679901
    2. 'sequence' → logprob: -1.7014923095703125
    3. '(sequence' → logprob: -9.826492309570312
    4. ' ' → logprob: -11.076492309570312
    5. ' ' → logprob: -12.826492309570312
    6. 'sequ' → logprob: -13.201492309570312
    7. ' sequ' → logprob: -13.576492309570312
    8. 'space' → logprob: -14.451492309570312
    9. '_sequence' → logprob: -14.576492309570312
    10. '[' → logprob: -14.576492309570312

Token 28: '_len' (ID: 13683)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6334221363067627
    2. '[' → logprob: -1.0084221363067627
    3. '<|end|>' → logprob: -2.8834221363067627
    4. '(' → logprob: -3.6334221363067627
    5. '\n' → logprob: -5.008421897888184
    6. '
' → logprob: -5.133421897888184
    7. '#' → logprob: -6.508421897888184
    8. 'newline' → logprob: -6.633421897888184
    9. '\' → logprob: -6.758421897888184
    10. '<|end|>' → logprob: -7.258421897888184

Token 29: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.16025470197200775
    2. 'sequence' → logprob: -1.910254716873169
    3. '(sequence' → logprob: -11.16025447845459
    4. 'space' → logprob: -11.78525447845459
    5. ' ' → logprob: -12.66025447845459
    6. ' ' → logprob: -12.91025447845459
    7. ' space' → logprob: -13.28525447845459
    8. '_sequence' → logprob: -15.66025447845459
    9. ' sequences' → logprob: -15.78525447845459
    10. '<|end|>' → logprob: -15.91025447845459

Token 31: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7904343605041504
    2. '<|end|>' → logprob: -1.0404343605041504
    3. '\n' → logprob: -2.4154343605041504
    4. '' → logprob: -3.6654343605041504
    5. '[' → logprob: -4.04043436050415
    6. '.' → logprob: -4.16543436050415
    7. '```' → logprob: -4.41543436050415
    8. '\' → logprob: -4.79043436050415
    9. '#' → logprob: -5.16543436050415
    10. '

' → logprob: -5.79043436050415

Token 32: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3889525830745697
    2. '<|end|>' → logprob: -2.0139524936676025
    3. '\n' → logprob: -2.6389524936676025
    4. '#' → logprob: -3.6389524936676025
    5. 'def' → logprob: -4.013952732086182
    6. '' → logprob: -4.013952732086182
    7. '[' → logprob: -4.638952732086182
    8. '.' → logprob: -4.763952732086182
    9. '```' → logprob: -4.888952732086182
    10. 'n' → logprob: -5.138952732086182

Token 33: ' partition' (ID: 31512)
  Prédit: ' Process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Process' → logprob: -0.05830131471157074
    2. ' Space' → logprob: -3.8083012104034424
    3. ' Main' → logprob: -4.6833014488220215
    4. ' Output' → logprob: -4.6833014488220215
    5. ' Calculate' → logprob: -5.6833014488220215
    6. ' Input' → logprob: -5.6833014488220215
    7. ' process' → logprob: -6.9333014488220215
    8. ' Sequence' → logprob: -6.9333014488220215
    9. ' Data' → logprob: -7.1833014488220215
    10. ' space' → logprob: -7.3083014488220215

Token 34: '(sequence' (ID: 129991)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39265772700309753
    2. '(' → logprob: -1.14265775680542
    3. '_list' → logprob: -6.51765775680542
    4. '_(' → logprob: -6.51765775680542
    5. '```' → logprob: -6.89265775680542
    6. '_array' → logprob: -8.517657279968262
    7. '_data' → logprob: -8.517657279968262
    8. '(_)' → logprob: -8.767657279968262
    9. '_by' → logprob: -9.267657279968262
    10. '('_' → logprob: -9.392657279968262

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002754472428932786
    2. '):' → logprob: -6.5027546882629395
    3. '_,' → logprob: -7.3777546882629395
    4. ' ,' → logprob: -8.002754211425781
    5. ')' → logprob: -8.877754211425781
    6. '[' → logprob: -10.002754211425781
    7. '[],' → logprob: -10.377754211425781
    8. '_' → logprob: -11.627754211425781
    9. ',_' → logprob: -11.627754211425781
    10. '[]):' → logprob: -11.752754211425781

Token 36: ' p' (ID: 275)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.10525360703468323
    2. 'low' → logprob: -2.3552536964416504
    3. ' start' → logprob: -5.60525369644165
    4. ' left' → logprob: -7.35525369644165
    5. 'start' → logprob: -7.73025369644165
    6. 'left' → logprob: -9.230253219604492
    7. ' lo' → logprob: -9.480253219604492
    8. ' ' → logprob: -10.355253219604492
    9. 'lo' → logprob: -10.605253219604492
    10. ' pivot' → logprob: -10.980253219604492

Token 37: ',' (ID: 11)
  Prédit: 'ivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivot' → logprob: -0.04421764984726906
    2. ')' → logprob: -4.544217586517334
    3. 'art' → logprob: -4.669217586517334
    4. '[' → logprob: -4.669217586517334
    5. 'iv' → logprob: -5.169217586517334
    6. '[])' → logprob: -5.544217586517334
    7. ',' → logprob: -6.794217586517334
    8. '[]' → logprob: -7.044217586517334
    9. 'aram' → logprob: -7.419217586517334
    10. 'ar' → logprob: -8.169218063354492

Token 38: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.28359276056289673
    2. 'r' → logprob: -1.408592700958252
    3. ' q' → logprob: -7.033592700958252
    4. ' ' → logprob: -7.033592700958252
    5. 'q' → logprob: -7.533592700958252
    6. '	r' → logprob: -9.78359317779541
    7. ')' → logprob: -10.15859317779541
    8. '   ' → logprob: -10.90859317779541
    9. '  ' → logprob: -12.28359317779541
    10. '	q' → logprob: -12.40859317779541

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032304716296494007
    2. ')' → logprob: -5.753230571746826
    3. ' ):' → logprob: -10.378230094909668
    4. ':' → logprob: -11.753230094909668
    5. ',' → logprob: -12.378230094909668
    6. '):
' → logprob: -13.003230094909668
    7. ''):' → logprob: -13.003230094909668
    8. '**' → logprob: -13.378230094909668
    9. '   ' → logprob: -14.628230094909668
    10. '),' → logprob: -15.253230094909668

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2200588583946228
    2. ':' → logprob: -2.3450589179992676
    3. '<|end|>' → logprob: -2.5950589179992676
    4. '    
' → logprob: -4.345058917999268
    5. '    ' → logprob: -5.095058917999268
    6. '<|end|>' → logprob: -5.970058917999268
    7. ' :' → logprob: -6.220058917999268
    8. ' 
' → logprob: -6.970058917999268
    9. ' ' → logprob: -7.970058917999268
    10. '
' → logprob: -7.970058917999268

Token 41: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6537805199623108
    2. ' i' → logprob: -1.153780460357666
    3. 'pivot' → logprob: -2.528780460357666
    4. ' pivot' → logprob: -3.278780460357666
    5. ' piv' → logprob: -4.028780460357666
    6. '    ' → logprob: -4.528780460357666
    7. 'i' → logprob: -4.778780460357666
    8. ' if' → logprob: -5.653780460357666
    9. '     
' → logprob: -6.528780460357666
    10. '    
' → logprob: -7.028780460357666

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007656677160412073
    2. '=' → logprob: -4.882656574249268
    3. ',' → logprob: -10.882657051086426
    4. '  ' → logprob: -11.132657051086426
    5. '[' → logprob: -11.757657051086426
    6. ' ' → logprob: -13.257657051086426
    7. '   ' → logprob: -13.382657051086426
    8. ' =
' → logprob: -13.507657051086426
    9. '.' → logprob: -14.257657051086426
    10. ')' → logprob: -14.382657051086426

Token 43: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.1269354522228241
    2. 'sequence' → logprob: -2.1269354820251465
    3. '(sequence' → logprob: -11.876935005187988
    4. 'quence' → logprob: -15.501935005187988
    5. '_sequence' → logprob: -16.251935958862305
    6. '.sequence' → logprob: -16.501935958862305
    7. 'Sequence' → logprob: -17.501935958862305
    8. ' sequences' → logprob: -17.626935958862305
    9. ' sequência' → logprob: -18.251935958862305
    10. '<|end|>' → logprob: -18.876935958862305

Token 44: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.024257345125079155
    2. '[p' → logprob: -3.7742574214935303
    3. '[' → logprob: -6.899257183074951
    4. 'r' → logprob: -13.27425765991211
    5. '[q' → logprob: -14.77425765991211
    6. '[
' → logprob: -15.52425765991211
    7. 'p' → logprob: -16.39925765991211
    8. '[int' → logprob: -16.52425765991211
    9. '[m' → logprob: -16.64925765991211
    10. '[x' → logprob: -16.77425765991211

Token 45: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004713141825050116
    2. ')' → logprob: -6.12971305847168
    3. '])' → logprob: -6.12971305847168
    4. ' ]' → logprob: -8.25471305847168
    5. ']
' → logprob: -9.87971305847168
    6. '']' → logprob: -11.25471305847168
    7. ' )' → logprob: -11.87971305847168
    8. '[' → logprob: -13.00471305847168
    9. ')]' → logprob: -13.00471305847168
    10. ' ' → logprob: -13.25471305847168

Token 46: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15320169925689697
    2. 'i' (adapté à ' i') → logprob: -2.0282015800476074
    3. ' ' → logprob: -5.153201580047607
    4. '   ' → logprob: -5.778201580047607
    5. '	i' → logprob: -7.528201580047607
    6. '  ' → logprob: -7.653201580047607
    7. '    ' → logprob: -8.403202056884766
    8. '    
' → logprob: -9.528202056884766
    9. ',i' → logprob: -9.903202056884766
    10. '
' → logprob: -10.153202056884766

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14272548258304596
    2. '=' → logprob: -2.0177254676818848
    3. ' ' → logprob: -10.392725944519043
    4. 'n' → logprob: -12.017725944519043
    5. 's' → logprob: -12.392725944519043
    6. 'f' → logprob: -13.017725944519043
    7. 'nt' → logprob: -13.392725944519043
    8. 'd' → logprob: -13.892725944519043
    9. '  ' → logprob: -14.017725944519043
    10. 'p' → logprob: -14.142725944519043

Token 49: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2519315779209137
    2. ' p' → logprob: -1.5019315481185913
    3. '	p' → logprob: -13.626931190490723
    4. '   ' → logprob: -14.501931190490723
    5. ' ' → logprob: -15.001931190490723
    6. '(p' → logprob: -15.751931190490723
    7. '  ' → logprob: -16.12693214416504
    8. '<p' → logprob: -16.50193214416504
    9. '    ' → logprob: -17.12693214416504
    10. '(' → logprob: -17.62693214416504

Token 50: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28137296438217163
    2. '-' → logprob: -1.4063730239868164
    3. ' ' → logprob: -8.781373023986816
    4. '   ' → logprob: -9.906373023986816
    5. '1' → logprob: -12.156373023986816
    6. '  ' → logprob: -12.406373023986816
    7. '    ' → logprob: -12.906373023986816
    8. '=' → logprob: -13.156373023986816
    9. '<|end|>' → logprob: -13.656373023986816
    10. '−' → logprob: -14.656373023986816

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020401719666551799
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.125204086303711
    4. '```' → logprob: -16.12520408630371
    5. '  ' → logprob: -17.06270408630371
    6. '' → logprob: -18.06270408630371
    7. '۱' → logprob: -18.06270408630371
    8. '    ' → logprob: -18.31270408630371
    9. '<|end|>' → logprob: -18.62520408630371
    10. '１' → logprob: -19.18770408630371

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '<|end|>' → logprob: -16.375019073486328
    4. '```' → logprob: -17.500019073486328
    5. '   ' → logprob: -17.625019073486328
    6. '  ' → logprob: -19.625019073486328
    7. '۱' → logprob: -19.750019073486328
    8. '<|end|>' → logprob: -20.125019073486328
    9. '' → logprob: -20.937519073486328
    10. '-' → logprob: -21.250019073486328

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1520622968673706
    2. '<|end|>' → logprob: -2.40206241607666
    3. '   ' → logprob: -3.65206241607666
    4. '    
' → logprob: -4.90206241607666
    5. '\n' → logprob: -4.90206241607666
    6. '```' → logprob: -5.90206241607666
    7. '<|end|>' → logprob: -6.02706241607666
    8. '  
' → logprob: -6.65206241607666
    9. ' 
' → logprob: -6.90206241607666
    10. '	
' → logprob: -7.77706241607666

Token 54: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5346906781196594
    2. '   ' → logprob: -1.2846906185150146
    3. '    
' → logprob: -3.2846906185150146
    4. '\n' → logprob: -3.2846906185150146
    5. ' for' → logprob: -3.5346906185150146
    6. '	for' → logprob: -4.659690856933594
    7. 'for' → logprob: -5.034690856933594
    8. '<|end|>' → logprob: -5.284690856933594
    9. '	
' → logprob: -5.659690856933594
    10. '```' → logprob: -6.159690856933594

Token 55: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3041192591190338
    2. ' for' → logprob: -1.5541192293167114
    3. '
' → logprob: -3.179119348526001
    4. '	for' → logprob: -5.804119110107422
    5. '```' → logprob: -6.304119110107422
    6. '\n' → logprob: -6.429119110107422
    7. '   ' → logprob: -6.929119110107422
    8. '<|end|>' → logprob: -7.179119110107422
    9. '    
' → logprob: -7.804119110107422
    10. '	
' → logprob: -8.929119110107422

Token 56: ' sequence' (ID: 16281)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4014793336391449
    2. ' for' → logprob: -1.1514793634414673
    3. '   ' → logprob: -4.776479244232178
    4. '<|end|>' → logprob: -6.276479244232178
    5. '    ' → logprob: -7.276479244232178
    6. '	for' → logprob: -7.401479244232178
    7. 'range' → logprob: -7.401479244232178
    8. 'For' → logprob: -7.401479244232178
    9. '  ' → logprob: -7.651479244232178
    10. ' ' → logprob: -7.901479244232178

Token 57: '[j' (ID: 7895)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3655771017074585
    2. ' in' → logprob: -1.2405771017074585
    3. '<|end|>' → logprob: -5.240577220916748
    4. ' for' → logprob: -6.365577220916748
    5. '<|end|>' → logprob: -6.490577220916748
    6. 'in' → logprob: -6.490577220916748
    7. ')' → logprob: -6.740577220916748
    8. ' ' → logprob: -6.740577220916748
    9. '=' → logprob: -6.990577220916748
    10. ' ranging' → logprob: -7.365577220916748

Token 59: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7830255031585693
    2. '\n' → logprob: -1.5330255031585693
    3. 'for' (adapté à ' for') → logprob: -2.0330255031585693
    4. '<|end|>' → logprob: -2.1580255031585693
    5. '<|end|>' → logprob: -3.4080255031585693
    6. '
' → logprob: -4.408025741577148
    7. '\' → logprob: -5.033025741577148
    8. '	for' → logprob: -5.033025741577148
    9. 'j' → logprob: -5.283025741577148
    10. '```' → logprob: -5.283025741577148

Token 61: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.02262379415333271
    2. ' ' → logprob: -4.0226240158081055
    3. 'j' → logprob: -6.5226240158081055
    4. ' range' → logprob: -6.7726240158081055
    5. '<|end|>' → logprob: -7.0226240158081055
    6. ' in' → logprob: -7.3976240158081055
    7. 'range' → logprob: -8.897624015808105
    8. '<|end|>' → logprob: -9.647624015808105
    9. '	j' → logprob: -10.272624015808105
    10. ' ' → logprob: -10.397624015808105

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014282210730016232
    2. 'in' → logprob: -4.2642822265625
    3. ' ' → logprob: -9.1392822265625
    4. 'range' → logprob: -12.5142822265625
    5. '	in' → logprob: -12.8892822265625
    6. '  ' → logprob: -13.6392822265625
    7. '<|end|>' → logprob: -14.3892822265625
    8. '```' → logprob: -14.5142822265625
    9. '   ' → logprob: -14.6392822265625
    10. ',' → logprob: -15.1392822265625

Token 63: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0620250441133976
    2. 'range' → logprob: -2.8120250701904297
    3. ' ' → logprob: -10.31202507019043
    4. '	range' → logprob: -10.93702507019043
    5. ' p' → logprob: -12.81202507019043
    6. '  ' → logprob: -13.81202507019043
    7. ' xrange' → logprob: -13.81202507019043
    8. '(range' → logprob: -14.18702507019043
    9. '   ' → logprob: -14.68702507019043
    10. ' ran' → logprob: -15.31202507019043

Token 64: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0068402839824557304
    2. '(' → logprob: -5.006840229034424
    3. ' (' → logprob: -9.256840705871582
    4. ' p' → logprob: -10.506840705871582
    5. ')' → logprob: -13.631840705871582
    6. '(i' → logprob: -15.256840705871582
    7. ' ' → logprob: -15.381840705871582
    8. '(
' → logprob: -15.881840705871582
    9. 'p' → logprob: -16.131839752197266
    10. ',' → logprob: -16.756839752197266

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4741893708705902
    2. ' ,' → logprob: -0.9741894006729126
    3. ',p' → logprob: -10.474189758300781
    4. ' ' → logprob: -10.474189758300781
    5. ' ,
' → logprob: -10.599189758300781
    6. '+' → logprob: -11.474189758300781
    7. ',r' → logprob: -12.099189758300781
    8. '   ' → logprob: -12.224189758300781
    9. ',j' → logprob: -12.349189758300781
    10. ',
' → logprob: -13.599189758300781

Token 66: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.4740825295448303
    2. 'r' → logprob: -0.9740825295448303
    3. '	r' → logprob: -12.349082946777344
    4. ' ' → logprob: -13.849082946777344
    5. '   ' → logprob: -16.849082946777344
    6. ' ' → logprob: -17.099082946777344
    7. '<|end|>' → logprob: -17.724082946777344
    8. ' 
' → logprob: -17.974082946777344
    9. '	' → logprob: -18.349082946777344
    10. '    ' → logprob: -18.349082946777344

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.047470495104789734
    2. '+' → logprob: -3.1724705696105957
    3. ' ):' → logprob: -5.922470569610596
    4. ' +' → logprob: -7.047470569610596
    5. '):
' → logprob: -7.672470569610596
    6. ')' → logprob: -8.047470092773438
    7. ':' → logprob: -9.422470092773438
    8. '   ' → logprob: -11.297470092773438
    9. ',' → logprob: -11.547470092773438
    10. ' )' → logprob: -12.172470092773438

Token 68: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43469300866127014
    2. '       ' → logprob: -1.4346929788589478
    3. '<|end|>' → logprob: -2.4346930980682373
    4. '   ' → logprob: -4.309692859649658
    5. ' if' → logprob: -5.559692859649658
    6. ' :' → logprob: -5.684692859649658
    7. ':
' → logprob: -6.434692859649658
    8. ' ' → logprob: -6.684692859649658
    9. '<|end|>' → logprob: -7.184692859649658
    10. '    ' → logprob: -7.309692859649658

Token 69: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.532450258731842
    2. ' ' → logprob: -1.2824501991271973
    3. '<|end|>' → logprob: -2.6574501991271973
    4. 'if' (adapté à ' if') → logprob: -3.2824501991271973
    5. '       ' → logprob: -3.9074501991271973
    6. ' 
' → logprob: -5.782450199127197
    7. '   ' → logprob: -6.657450199127197
    8. '  ' → logprob: -7.032450199127197
    9. '    ' → logprob: -7.157450199127197
    10. '<|end|>' → logprob: -7.532450199127197

Token 70: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.02334354631602764
    2. 'sequence' → logprob: -3.773343563079834
    3. '(sequence' → logprob: -9.273343086242676
    4. ' ' → logprob: -13.648343086242676
    5. '   ' → logprob: -13.773343086242676
    6. '    ' → logprob: -14.648343086242676
    7. ' ' → logprob: -15.273343086242676
    8. 'Sequence' → logprob: -15.398343086242676
    9. '  ' → logprob: -15.773343086242676
    10. 'se' → logprob: -15.898343086242676

Token 71: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -11.750007629394531
    3. '```' → logprob: -16.75000762939453
    4. ' [' → logprob: -17.12500762939453
    5. '[
' → logprob: -17.50000762939453
    6. '[i' → logprob: -17.87500762939453
    7. 'j' → logprob: -18.62500762939453
    8. '[js' → logprob: -19.12500762939453
    9. '[r' → logprob: -19.87500762939453
    10. '[q' → logprob: -20.12500762939453

Token 72: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0547456257045269
    2. ' <=' → logprob: -3.054745674133301
    3. ']' → logprob: -5.429745674133301
    4. ']<=' → logprob: -6.679745674133301
    5. '<' → logprob: -7.929745674133301
    6. ')' → logprob: -9.5547456741333
    7. ')<=' → logprob: -10.8047456741333
    8. ' ' → logprob: -11.0547456741333
    9. '[' → logprob: -11.6797456741333
    10. ' ]' → logprob: -11.9297456741333

Token 73: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.14293010532855988
    2. '<=' → logprob: -2.017930030822754
    3. ' <' → logprob: -9.267930030822754
    4. ' ' → logprob: -9.392930030822754
    5. '<' → logprob: -10.267930030822754
    6. '[' → logprob: -11.392930030822754
    7. ']<=' → logprob: -11.517930030822754
    8. ')<=' → logprob: -11.892930030822754
    9. ' ≤' → logprob: -13.142930030822754
    10. ' ' → logprob: -13.267930030822754

Token 74: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0086202472448349
    2. 'x' → logprob: -4.758620262145996
    3. ' ' → logprob: -12.383620262145996
    4. '	x' → logprob: -13.633620262145996
    5. ' ' → logprob: -15.133620262145996
    6. '<|end|>' → logprob: -17.50861930847168
    7. '    ' → logprob: -18.13361930847168
    8. ')x' → logprob: -19.25861930847168
    9. '(x' → logprob: -19.88361930847168
    10. ',x' → logprob: -20.07111930847168

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00036382899270392954
    2. ':
' → logprob: -8.625364303588867
    3. ' :' → logprob: -9.125364303588867
    4. '):' → logprob: -9.750364303588867
    5. '<|end|>' → logprob: -11.625364303588867
    6. ':**' → logprob: -13.125364303588867
    7. '       ' → logprob: -13.375364303588867
    8. '<|end|>' → logprob: -13.625364303588867
    9. ',' → logprob: -14.000364303588867
    10. ' :
' → logprob: -15.125364303588867

Token 76: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1565836668014526
    2. '<|end|>' → logprob: -1.1565836668014526
    3. '           ' → logprob: -1.4065836668014526
    4. '       ' → logprob: -3.281583786010742
    5. '<|end|>' → logprob: -3.281583786010742
    6. ':
' → logprob: -3.656583786010742
    7. '
' → logprob: -4.906583786010742
    8. ' ' → logprob: -5.281583786010742
    9. ' :' → logprob: -5.781583786010742
    10. '   ' → logprob: -6.156583786010742

Token 77: ' #' (ID: 1069)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17610447108745575
    2. 'i' → logprob: -2.4261045455932617
    3. ' ' → logprob: -3.1761045455932617
    4. ' 
' → logprob: -3.5511045455932617
    5. '1' → logprob: -7.301104545593262
    6. '<|end|>' → logprob: -7.301104545593262
    7. '  
' → logprob: -8.426104545593262
    8. '    ' → logprob: -8.676104545593262
    9. '	i' → logprob: -9.176104545593262
    10. '
' → logprob: -9.176104545593262

Token 78: ' print' (ID: 2123)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3687538206577301
    2. '1' → logprob: -1.8687537908554077
    3. 'i' → logprob: -2.3687539100646973
    4. ' ' → logprob: -2.8687539100646973
    5. '    ' → logprob: -6.743753910064697
    6. '   ' → logprob: -7.493753910064697
    7. '<|end|>' → logprob: -8.368753433227539
    8. '  ' → logprob: -8.493753433227539
    9. '           ' → logprob: -8.743753433227539
    10. '+' → logprob: -9.118753433227539

Token 79: '(sequence' (ID: 129991)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -1.1887496709823608
    2. '()' → logprob: -1.4387496709823608
    3. '(' → logprob: -1.9387496709823608
    4. '"' → logprob: -2.4387497901916504
    5. '("' → logprob: -2.5637497901916504
    6. ' ' → logprob: -2.9387497901916504
    7. '    ' → logprob: -4.43874979019165
    8. '(i' → logprob: -4.56374979019165
    9. ' "' → logprob: -4.56374979019165
    10. ' (' → logprob: -4.81374979019165

Token 80: '[j' (ID: 7895)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5907015204429626
    2. '[i' → logprob: -0.9657015204429626
    3. '[j' → logprob: -3.0907015800476074
    4. '[' → logprob: -4.715701580047607
    5. ' )' → logprob: -5.715701580047607
    6. ')
' → logprob: -6.090701580047607
    7. '   ' → logprob: -6.840701580047607
    8. '[++' → logprob: -7.090701580047607
    9. ',' → logprob: -7.215701580047607
    10. ']' → logprob: -7.340701580047607

Token 81: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.13410143554210663
    2. ')' → logprob: -3.009101390838623
    3. '],' → logprob: -3.009101390838623
    4. ' ])' → logprob: -4.259101390838623
    5. ']' → logprob: -5.509101390838623
    6. ' )' → logprob: -5.759101390838623
    7. '),' → logprob: -6.384101390838623
    8. ',' → logprob: -7.134101390838623
    9. ')])' → logprob: -7.509101390838623
    10. '])
' → logprob: -7.509101390838623

Token 82: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4837832748889923
    2. '<|end|>' → logprob: -1.48378324508667
    3. '<|end|>' → logprob: -3.10878324508667
    4. '            
' → logprob: -3.35878324508667
    5. ' 
' → logprob: -4.10878324508667
    6. '               ' → logprob: -4.48378324508667
    7. ' i' → logprob: -4.73378324508667
    8. 'i' → logprob: -4.85878324508667
    9. ',' → logprob: -4.98378324508667
    10. '       ' → logprob: -5.10878324508667

Token 83: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6699547171592712
    2. '           ' → logprob: -1.294954776763916
    3. 'i' (adapté à ' i') → logprob: -2.294954776763916
    4. '       ' → logprob: -3.669954776763916
    5. ' 
' → logprob: -3.794954776763916
    6. '   ' → logprob: -3.919954776763916
    7. '               ' → logprob: -4.169954776763916
    8. ' ' → logprob: -4.169954776763916
    9. '<|end|>' → logprob: -5.044954776763916
    10. '            
' → logprob: -6.419954776763916

Token 84: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0017343213548883796
    2. '+=' → logprob: -7.126734256744385
    3. ' +' → logprob: -7.751734256744385
    4. ' =' → logprob: -8.126734733581543
    5. '+' → logprob: -9.251734733581543
    6. '<|end|>' → logprob: -9.751734733581543
    7. ' ' → logprob: -10.126734733581543
    8. '=' → logprob: -12.626734733581543
    9. '<|end|>' → logprob: -12.626734733581543
    10. '1' → logprob: -14.126734733581543

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04858827963471413
    2. ' ' → logprob: -3.048588275909424
    3. '<|end|>' → logprob: -14.048588752746582
    4. '    ' → logprob: -17.673587799072266
    5. ' ' → logprob: -17.923587799072266
    6. '   ' → logprob: -17.923587799072266
    7. '<|end|>' → logprob: -18.423587799072266
    8. '  ' → logprob: -18.548587799072266
    9. '```' → logprob: -18.673587799072266
    10. '۱' → logprob: -19.048587799072266

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -16.25001335144043
    4. '  ' → logprob: -18.75001335144043
    5. '```' → logprob: -19.12501335144043
    6. '   ' → logprob: -19.25001335144043
    7. '۱' → logprob: -20.50001335144043
    8. '    ' → logprob: -21.00001335144043
    9. '<|end|>' → logprob: -21.12501335144043
    10. '१' → logprob: -21.25001335144043

Token 87: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.08823425322771072
    2. 'sequence' (adapté à ' sequence') → logprob: -2.5882341861724854
    3. ' ' → logprob: -4.7132344245910645
    4. '<|end|>' → logprob: -8.463233947753906
    5. '  ' → logprob: -10.213233947753906
    6. '(sequence' → logprob: -10.963233947753906
    7. ' sequences' → logprob: -10.963233947753906
    8. '    ' → logprob: -11.338233947753906
    9. '_sequence' → logprob: -11.713233947753906
    10. '   ' → logprob: -12.088233947753906

Token 90: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006033672951161861
    2. '[' → logprob: -5.131033897399902
    3. '[j' → logprob: -9.506033897399902
    4. '[I' → logprob: -11.756033897399902
    5. '<|end|>' → logprob: -12.006033897399902
    6. '```' → logprob: -13.006033897399902
    7. '[ip' → logprob: -13.006033897399902
    8. '[user' → logprob: -13.006033897399902
    9. '[index' → logprob: -13.256033897399902
    10. '[int' → logprob: -13.631033897399902

Token 91: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13389749825000763
    2. '],' → logprob: -2.258897542953491
    3. ',' → logprob: -3.883897542953491
    4. ' ]' → logprob: -9.00889778137207
    5. ' ],' → logprob: -9.00889778137207
    6. '<|end|>' → logprob: -10.88389778137207
    7. '],[' → logprob: -12.00889778137207
    8. ' ,' → logprob: -13.38389778137207
    9. ']=' → logprob: -13.38389778137207
    10. '<|end|>' → logprob: -13.75889778137207

Token 92: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.20141801238059998
    2. 'sequence' → logprob: -1.7014180421829224
    3. '(sequence' → logprob: -12.826417922973633
    4. '<|end|>' → logprob: -13.326417922973633
    5. '.sequence' → logprob: -15.451417922973633
    6. ' ' → logprob: -16.201417922973633
    7. '_sequence' → logprob: -16.951417922973633
    8. ' sequences' → logprob: -17.201417922973633
    9. 'se' → logprob: -18.576417922973633
    10. 'Sequence' → logprob: -18.576417922973633

Token 93: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0017088521271944046
    2. '[' → logprob: -6.376708984375
    3. '[js' → logprob: -12.626708984375
    4. '```' → logprob: -13.751708984375
    5. '[
' → logprob: -14.126708984375
    6. '[s' → logprob: -14.876708984375
    7. '<|end|>' → logprob: -15.001708984375
    8. '[q' → logprob: -15.376708984375
    9. '[i' → logprob: -15.751708984375
    10. '[user' → logprob: -16.126708984375

Token 94: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00122713518794626
    2. ' ]' → logprob: -6.876226902008057
    3. ']=' → logprob: -9.251227378845215
    4. '=' → logprob: -10.126227378845215
    5. '<|end|>' → logprob: -10.501227378845215
    6. ')' → logprob: -11.126227378845215
    7. ' =' → logprob: -11.876227378845215
    8. ' ' → logprob: -13.001227378845215
    9. ',' → logprob: -13.126227378845215
    10. '']' → logprob: -13.501227378845215

Token 95: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.023284615948796272
    2. 'sequence' → logprob: -3.773284673690796
    3. '(sequence' → logprob: -10.898284912109375
    4. ' ' → logprob: -11.148284912109375
    5. '<|end|>' → logprob: -12.648284912109375
    6. ' ' → logprob: -13.898284912109375
    7. '_sequence' → logprob: -14.398284912109375
    8. '<|end|>' → logprob: -15.273284912109375
    9. ' space' → logprob: -15.398284912109375
    10. 'Sequence' → logprob: -15.523284912109375

Token 96: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0010805641068145633
    2. '[' → logprob: -7.126080513000488
    3. '[i' → logprob: -8.251080513000488
    4. '<|end|>' → logprob: -11.876080513000488
    5. '[
' → logprob: -13.001080513000488
    6. 'j' → logprob: -13.501080513000488
    7. ',j' → logprob: -13.626080513000488
    8. '[js' → logprob: -13.876080513000488
    9. '```' → logprob: -14.501080513000488
    10. '<|end|>' → logprob: -14.876080513000488

Token 97: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6647585034370422
    2. ']' → logprob: -0.7897585034370422
    3. '],' → logprob: -3.7897584438323975
    4. ' ]' → logprob: -5.039758682250977
    5. ' ,' → logprob: -6.289758682250977
    6. ' ],' → logprob: -8.039758682250977
    7. '<|end|>' → logprob: -8.789758682250977
    8. ' ' → logprob: -9.289758682250977
    9. '   ' → logprob: -10.039758682250977
    10. ',
' → logprob: -10.789758682250977

Token 98: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.25193002820014954
    2. 'sequence' → logprob: -1.5019299983978271
    3. '(sequence' → logprob: -14.001930236816406
    4. '.sequence' → logprob: -16.376930236816406
    5. '_sequence' → logprob: -17.626930236816406
    6. ' ' → logprob: -18.626930236816406
    7. '<|end|>' → logprob: -19.626930236816406
    8. 'quence' → logprob: -19.626930236816406
    9. 'Sequence' → logprob: -20.001930236816406
    10. ' sequência' → logprob: -20.376930236816406

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0015093892579898238
    2. '[' → logprob: -6.501509189605713
    3. '[
' → logprob: -12.876509666442871
    4. 'i' → logprob: -13.501509666442871
    5. '<|end|>' → logprob: -14.501509666442871
    6. '[I' → logprob: -14.876509666442871
    7. ' [' → logprob: -15.001509666442871
    8. '[]' → logprob: -15.001509666442871
    9. '```' → logprob: -15.126509666442871
    10. ']' → logprob: -15.376509666442871

Token 100: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022007079795002937
    2. ')' → logprob: -4.397006988525391
    3. '}' → logprob: -5.147006988525391
    4. '<|end|>' → logprob: -5.647006988525391
    5. '<|end|>' → logprob: -10.02200698852539
    6. '   ' → logprob: -10.14700698852539
    7. '```' → logprob: -11.89700698852539
    8. '']' → logprob: -12.89700698852539
    9. ' ]' → logprob: -12.89700698852539
    10. ']
' → logprob: -12.89700698852539

Token 101: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13928385078907013
    2. 'sequence' → logprob: -2.5142838954925537
    3. ' sequence' → logprob: -3.1392838954925537
    4. 'p' → logprob: -5.889283657073975
    5. 'i' → logprob: -6.889283657073975
    6. ' ' → logprob: -7.514283657073975
    7. '(sequence' → logprob: -8.639284133911133
    8. '  ' → logprob: -8.639284133911133
    9. 'r' → logprob: -9.139284133911133
    10. 's' → logprob: -9.389284133911133

Token 103: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' (adapté à ' sequence') → logprob: -0.0018255965551361442
    2. 'i' → logprob: -7.25182580947876
    3. ' sequence' → logprob: -7.37682580947876
    4. '   ' → logprob: -7.62682580947876
    5. '(sequence' → logprob: -13.626825332641602
    6. ' i' → logprob: -15.001825332641602
    7. '  ' → logprob: -15.876825332641602
    8. 'Sequence' → logprob: -16.1268253326416
    9. ' ' → logprob: -16.3768253326416
    10. '    
' → logprob: -17.0018253326416

Token 104: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011856284982059151
    2. '[r' → logprob: -9.250118255615234
    3. '[' → logprob: -10.750118255615234
    4. '[I' → logprob: -15.000118255615234
    5. '```' → logprob: -15.375118255615234
    6. ' ' → logprob: -16.125118255615234
    7. '(i' → logprob: -17.250118255615234
    8. '[s' → logprob: -17.250118255615234
    9. '[
' → logprob: -17.250118255615234
    10. ',i' → logprob: -17.375118255615234

Token 105: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00014048899174667895
    2. ' +' → logprob: -9.000140190124512
    3. '+,' → logprob: -11.375140190124512
    4. '+
' → logprob: -12.375140190124512
    5. '+]' → logprob: -14.000140190124512
    6. '+i' → logprob: -16.375141143798828
    7. '+

' → logprob: -16.625141143798828
    8. ',' → logprob: -16.875141143798828
    9. '+r' → logprob: -17.125141143798828
    10. ']' → logprob: -17.250141143798828

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.375004768371582
    3. '<|end|>' → logprob: -15.000004768371582
    4. '```' → logprob: -15.750004768371582
    5. ',' → logprob: -16.3750057220459
    6. '+' → logprob: -16.8750057220459
    7. ']' → logprob: -17.0000057220459
    8. '   ' → logprob: -18.1250057220459
    9. '  ' → logprob: -18.6250057220459
    10. '_' → logprob: -19.2500057220459

Token 107: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0037573284935206175
    2. '],' → logprob: -5.753757476806641
    3. ',' → logprob: -7.503757476806641
    4. ' ]' → logprob: -10.62875747680664
    5. '<|end|>' → logprob: -12.75375747680664
    6. '']' → logprob: -15.25375747680664
    7. ']
' → logprob: -15.37875747680664
    8. ' ],' → logprob: -15.87875747680664
    9. ')' → logprob: -16.12875747680664
    10. '],
' → logprob: -16.62875747680664

Token 108: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.018150178715586662
    2. 'sequence' → logprob: -4.018150329589844
    3. '(sequence' → logprob: -15.893150329589844
    4. '<|end|>' → logprob: -16.768150329589844
    5. '_sequence' → logprob: -18.893150329589844
    6. ' ' → logprob: -19.143150329589844
    7. '.sequence' → logprob: -19.768150329589844
    8. ' sequences' → logprob: -20.893150329589844
    9. ' ' → logprob: -21.018150329589844
    10. 'Sequence' → logprob: -21.393150329589844

Token 109: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00020473242329899222
    2. '[' → logprob: -8.500205039978027
    3. 'r' → logprob: -13.750205039978027
    4. '```' → logprob: -16.87520408630371
    5. '[
' → logprob: -17.12520408630371
    6. ' [' → logprob: -17.50020408630371
    7. '[s' → logprob: -17.62520408630371
    8. '[j' → logprob: -18.25020408630371
    9. '[p' → logprob: -18.62520408630371
    10. '[i' → logprob: -18.62520408630371

Token 110: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001175343873910606
    2. ']=' → logprob: -6.751175403594971
    3. '=' → logprob: -12.876174926757812
    4. ' ]' → logprob: -13.251174926757812
    5. ')' → logprob: -15.126174926757812
    6. '],' → logprob: -16.126174926757812
    7. '']' → logprob: -16.251174926757812
    8. '   ' → logprob: -16.751174926757812
    9. ']==' → logprob: -16.751174926757812
    10. '[' → logprob: -17.251174926757812

Token 111: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.9027791495318525e-05
    2. ' =' → logprob: -10.875019073486328
    3. '=

' → logprob: -17.125019073486328
    4. '=
' → logprob: -17.250019073486328
    5. '=}' → logprob: -19.125019073486328
    6. '=`' → logprob: -20.625019073486328
    7. '=s' → logprob: -20.625019073486328
    8. ',' → logprob: -20.625019073486328
    9. '＝' → logprob: -21.500019073486328
    10. ')=' → logprob: -21.625019073486328

Token 112: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.06196948140859604
    2. 'sequence' → logprob: -2.811969518661499
    3. '(sequence' → logprob: -13.436969757080078
    4. ' ' → logprob: -15.186969757080078
    5. '<|end|>' → logprob: -16.811969757080078
    6. 'Sequence' → logprob: -17.186969757080078
    7. '_sequence' → logprob: -17.561969757080078
    8. '.sequence' → logprob: -17.811969757080078
    9. 'se' → logprob: -18.186969757080078
    10. ' sequência' → logprob: -18.436969757080078

Token 113: '[r' (ID: 33265)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.1318875446449965e-05
    2. '[r' → logprob: -10.625041007995605
    3. '[' → logprob: -11.000041007995605
    4. '[j' → logprob: -16.125041961669922
    5. '[p' → logprob: -16.375041961669922
    6. '[
' → logprob: -18.000041961669922
    7. ',i' → logprob: -18.000041961669922
    8. 'i' → logprob: -18.125041961669922
    9. '[s' → logprob: -18.125041961669922
    10. ' [' → logprob: -18.250041961669922

Token 114: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031284019351005554
    2. '],' → logprob: -6.253128528594971
    3. ',' → logprob: -6.753128528594971
    4. ' ]' → logprob: -11.253128051757812
    5. ']
' → logprob: -11.878128051757812
    6. ']

' → logprob: -12.628128051757812
    7. '   ' → logprob: -13.753128051757812
    8. '[i' → logprob: -14.128128051757812
    9. ',i' → logprob: -14.253128051757812
    10. ' ' → logprob: -14.378128051757812

Token 115: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.5759413838386536
    2. 'sequence' → logprob: -0.8259413838386536
    3. '   ' → logprob: -14.07594108581543
    4. '(sequence' → logprob: -14.07594108581543
    5. ' ' → logprob: -15.70094108581543
    6. '.sequence' → logprob: -16.20094108581543
    7. '_sequence' → logprob: -17.07594108581543
    8. '  ' → logprob: -17.70094108581543
    9. 'quence' → logprob: -18.07594108581543
    10. 'Sequence' → logprob: -18.07594108581543

Token 116: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4498052223643754e-05
    2. 'i' → logprob: -11.500014305114746
    3. 'sequence' → logprob: -12.875014305114746
    4. '[' → logprob: -13.625014305114746
    5. '[
' → logprob: -15.875014305114746
    6. '(i' → logprob: -15.875014305114746
    7. '[len' → logprob: -16.000015258789062
    8. ',i' → logprob: -17.000015258789062
    9. 'len' → logprob: -17.125015258789062
    10. '```' → logprob: -17.250015258789062

Token 117: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.061054359131958e-06
    2. ' +' → logprob: -12.250007629394531
    3. '+
' → logprob: -13.250007629394531
    4. '1' → logprob: -14.750007629394531
    5. '+i' → logprob: -15.250007629394531
    6. ']+' → logprob: -15.375007629394531
    7. '+]' → logprob: -15.625007629394531
    8. '<|end|>' → logprob: -15.875007629394531
    9. '<|end|>' → logprob: -16.50000762939453
    10. ']' → logprob: -17.00000762939453

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. '<|end|>' → logprob: -12.625006675720215
    3. '+' → logprob: -13.375006675720215
    4. ' ' → logprob: -14.125006675720215
    5. '<|end|>' → logprob: -14.750006675720215
    6. '```' → logprob: -15.875006675720215
    7. 'i' → logprob: -16.6250057220459
    8. ']' → logprob: -16.6250057220459
    9. '   ' → logprob: -17.0000057220459
    10. '[' → logprob: -17.1250057220459

Token 119: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932149529457092
    2. ']' → logprob: -0.6932149529457092
    3. '+' → logprob: -10.568215370178223
    4. '}' → logprob: -11.568215370178223
    5. '<|end|>' → logprob: -11.693215370178223
    6. ')
' → logprob: -11.818215370178223
    7. ')]' → logprob: -12.443215370178223
    8. ']
' → logprob: -12.943215370178223
    9. '```' → logprob: -13.818215370178223
    10. ' )' → logprob: -13.818215370178223

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028918396681547165
    2. ' return' → logprob: -3.903918504714966
    3. '    
' → logprob: -5.278918266296387
    4. 'return' → logprob: -6.403918266296387
    5. '	return' → logprob: -6.653918266296387
    6. '
' → logprob: -9.153918266296387
    7. ' 
' → logprob: -9.278918266296387
    8. '<|end|>' → logprob: -10.528918266296387
    9. ':return' → logprob: -11.403918266296387
    10. '```' → logprob: -11.653918266296387

Token 121: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011957239359617233
    2. '   ' → logprob: -5.011957168579102
    3. ' return' → logprob: -5.261957168579102
    4. '	return' → logprob: -10.386957168579102
    5. '    
' → logprob: -12.136957168579102
    6. ':return' → logprob: -12.761957168579102
    7. '
' → logprob: -14.136957168579102
    8. ' ' → logprob: -14.511957168579102
    9. '<|end|>' → logprob: -14.636957168579102
    10. '```' → logprob: -15.011957168579102

Token 122: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.69315105676651
    2. ' i' → logprob: -0.69315105676651
    3. ' ' → logprob: -13.443151473999023
    4. '	i' → logprob: -13.693151473999023
    5. '(i' → logprob: -13.943151473999023
    6. '   ' → logprob: -15.943151473999023
    7. '  ' → logprob: -16.443151473999023
    8. ' (' → logprob: -16.818151473999023
    9. ',i' → logprob: -17.568151473999023
    10. '{i' → logprob: -17.943151473999023

Token 123: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.73052782076411e-05
    2. ' +' → logprob: -9.625067710876465
    3. '+
' → logprob: -14.625067710876465
    4. '+i' → logprob: -15.125067710876465
    5. '+

' → logprob: -16.50006675720215
    6. '1' → logprob: -16.50006675720215
    7. 'plus' → logprob: -17.37506675720215
    8. '[' → logprob: -18.00006675720215
    9. '＋' → logprob: -18.12506675720215
    10. '<|end|>' → logprob: -18.12506675720215

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '<|end|>' → logprob: -15.0
    3. ' ' → logprob: -17.125
    4. '2' → logprob: -17.5
    5. '```' → logprob: -17.5
    6. '129' → logprob: -18.625
    7. '`' → logprob: -18.75
    8. '۱' → logprob: -18.875
    9. '126' → logprob: -19.25
    10. '116' → logprob: -19.5

Token 125: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02640526182949543
    2. '
' → logprob: -4.401405334472656
    3. '<|end|>' → logprob: -4.401405334472656
    4. '

' → logprob: -6.776405334472656
    5. '<|end|>' → logprob: -8.651405334472656
    6. '```' → logprob: -9.276405334472656
    7. ' def' → logprob: -9.526405334472656
    8. '  
' → logprob: -11.276405334472656
    9. '#' → logprob: -11.776405334472656
    10. 'Def' → logprob: -12.901405334472656

Token 126: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.3915141355246305e-05
    2. '
' → logprob: -10.75002384185791
    3. ' def' → logprob: -14.00002384185791
    4. '```' → logprob: -14.12502384185791
    5. '<|end|>' → logprob: -14.87502384185791
    6. '

' → logprob: -15.50002384185791
    7. '  
' → logprob: -16.375024795532227
    8. '#' → logprob: -16.500024795532227
    9. '    
' → logprob: -17.125024795532227
    10. ':def' → logprob: -17.625024795532227

Token 127: ' Print' (ID: 13103)
  Prédit: ' quick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' quick' → logprob: -0.00791085883975029
    2. 'quick' → logprob: -5.50791072845459
    3. ' Quick' → logprob: -6.00791072845459
    4. 'qu' → logprob: -7.63291072845459
    5. 'Quick' → logprob: -7.63291072845459
    6. '_qu' → logprob: -8.13291072845459
    7. ' ' → logprob: -10.13291072845459
    8. ' q' → logprob: -11.13291072845459
    9. '_' → logprob: -11.38291072845459
    10. ' Qu' → logprob: -11.88291072845459

Token 128: 'Out' (ID: 3227)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8153917193412781
    2. 'Sequence' → logprob: -1.1903917789459229
    3. 'Array' → logprob: -1.8153917789459229
    4. '(sequence' → logprob: -3.315391778945923
    5. 'Sorted' → logprob: -3.815391778945923
    6. 'Result' → logprob: -4.065391540527344
    7. 'Partition' → logprob: -5.690391540527344
    8. 'List' → logprob: -6.440391540527344
    9. '(sorted' → logprob: -6.690391540527344
    10. 'Data' → logprob: -6.690391540527344

Token 129: '(sequence' (ID: 129991)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1977720856666565
    2. 'put' → logprob: -1.8227720260620117
    3. '(sequence' → logprob: -4.947772026062012
    4. '()' → logprob: -5.072772026062012
    5. 'Put' → logprob: -6.072772026062012
    6. '(' → logprob: -6.322772026062012
    7. 'puts' → logprob: -8.947772026062012
    8. 'Sequence' → logprob: -9.572772026062012
    9. 'sequence' → logprob: -10.197772026062012
    10. 'Data' → logprob: -10.447772026062012

Token 130: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004282851587049663
    2. ',' → logprob: -8.000428199768066
    3. ' ):' → logprob: -10.000428199768066
    4. '):
' → logprob: -10.625428199768066
    5. ')' → logprob: -11.000428199768066
    6. '():' → logprob: -13.250428199768066
    7. ':' → logprob: -13.500428199768066
    8. '   ' → logprob: -14.250428199768066
    9. '[]):' → logprob: -14.625428199768066
    10. '  ' → logprob: -15.125428199768066

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0067603676579892635
    2. '    
' → logprob: -5.381760597229004
    3. ' for' → logprob: -6.256760597229004
    4. 'for' → logprob: -8.631760597229004
    5. 'print' → logprob: -10.881760597229004
    6. ' print' → logprob: -11.756760597229004
    7. '
' → logprob: -12.256760597229004
    8. '   ' → logprob: -13.131760597229004
    9. ' 
' → logprob: -13.381760597229004
    10. '   
' → logprob: -13.631760597229004

Token 132: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14473780989646912
    2. 'print' (adapté à ' print') → logprob: -2.144737720489502
    3. '   ' → logprob: -4.269737720489502
    4. ' for' → logprob: -5.644737720489502
    5. '    
' → logprob: -9.51973819732666
    6. ' print' → logprob: -9.89473819732666
    7. 'if' → logprob: -12.89473819732666
    8. ' ' → logprob: -13.76973819732666
    9. '
' → logprob: -14.14473819732666
    10. '   
' → logprob: -14.39473819732666

Token 133: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006707551423460245
    2. '(sequence' → logprob: -5.631707668304443
    3. '(*' → logprob: -6.131707668304443
    4. '("("' → logprob: -8.256707191467285
    5. '()' → logprob: -8.631707191467285
    6. '('' → logprob: -8.756707191467285
    7. '(len' → logprob: -8.756707191467285
    8. '("' → logprob: -8.881707191467285
    9. '("")' → logprob: -12.131707191467285
    10. '(tuple' → logprob: -12.381707191467285

Token 134: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010768712498247623
    2. ' '.' → logprob: -4.885768890380859
    3. '*' → logprob: -7.260768890380859
    4. '"' → logprob: -7.385768890380859
    5. ')' → logprob: -7.635768890380859
    6. 'sequence' → logprob: -7.885768890380859
    7. ''*' → logprob: -8.76076889038086
    8. ' '' → logprob: -8.76076889038086
    9. ''.' → logprob: -8.88576889038086
    10. '',' → logprob: -8.88576889038086

Token 135: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -4.143808109802194e-05
    2. 'print' → logprob: -10.125041007995605
    3. ' join' → logprob: -14.250041007995605
    4. 'jo' → logprob: -16.125041961669922
    5. '```' → logprob: -16.125041961669922
    6. ')' → logprob: -16.500041961669922
    7. 'format' → logprob: -16.625041961669922
    8. '.' → logprob: -17.125041961669922
    9. ''' → logprob: -17.125041961669922
    10. ''.' → logprob: -17.375041961669922

Token 136: '(' (ID: 7)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0009332557674497366
    2. '(str' → logprob: -7.0009331703186035
    3. 'map' → logprob: -11.250933647155762
    4. '(list' → logprob: -12.000933647155762
    5. '(' → logprob: -12.875933647155762
    6. '([' → logprob: -16.500932693481445
    7. 'str' → logprob: -18.000932693481445
    8. ' map' → logprob: -18.125932693481445
    9. '	map' → logprob: -18.375932693481445
    10. '.map' → logprob: -19.125932693481445

Token 137: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00021951000962872058
    2. 'str' → logprob: -8.750219345092773
    3. 'list' → logprob: -10.000219345092773
    4. '(map' → logprob: -11.250219345092773
    5. ' map' → logprob: -13.375219345092773
    6. '[str' → logprob: -13.875219345092773
    7. '(str' → logprob: -16.000219345092773
    8. '	map' → logprob: -17.625219345092773
    9. '.map' → logprob: -17.875219345092773
    10. '[' → logprob: -18.125219345092773

Token 138: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00027968952781520784
    2. 'str' → logprob: -8.500279426574707
    3. '(' → logprob: -9.500279426574707
    4. '[str' → logprob: -14.625279426574707
    5. '```' → logprob: -14.625279426574707
    6. '=str' → logprob: -15.500279426574707
    7. ')' → logprob: -15.750279426574707
    8. ' str' → logprob: -15.875279426574707
    9. '	str' → logprob: -17.375280380249023
    10. '(int' → logprob: -18.000280380249023

Token 139: ',' (ID: 11)
  Prédit: '(sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.009114498272538185
    2. ',' → logprob: -4.7591142654418945
    3. '(' → logprob: -7.6341142654418945
    4. ' ,' → logprob: -11.759114265441895
    5. ',(' → logprob: -12.509114265441895
    6. ' (' → logprob: -13.134114265441895
    7. 'sequence' → logprob: -13.384114265441895
    8. ')' → logprob: -14.759114265441895
    9. '(seq' → logprob: -15.384114265441895
    10. ' sequence' → logprob: -15.634114265441895

Token 140: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.023666324093937874
    2. ' sequence' → logprob: -3.7736663818359375
    3. '(sequence' → logprob: -7.7736663818359375
    4. '   ' → logprob: -16.523666381835938
    5. '.sequence' → logprob: -19.398666381835938
    6. '(' → logprob: -19.523666381835938
    7. ' ' → logprob: -19.648666381835938
    8. '_sequence' → logprob: -20.523666381835938
    9. ')' → logprob: -20.648666381835938
    10. '  ' → logprob: -20.773666381835938

Token 141: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.3878079354763031
    2. ')' → logprob: -1.1378079652786255
    3. '))' → logprob: -7.012807846069336
    4. '))))' → logprob: -11.012807846069336
    5. ' ' → logprob: -11.387807846069336
    6. ')));' → logprob: -12.387807846069336
    7. ' )' → logprob: -13.012807846069336
    8. ')))
' → logprob: -14.762807846069336
    9. '())))' → logprob: -15.012807846069336
    10. ')))

' → logprob: -15.387807846069336

Token 142: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.584239938296378e-06
    2. 'sequence' → logprob: -13.000007629394531
    3. '#' → logprob: -13.250007629394531
    4. 'n' → logprob: -14.000007629394531
    5. '<|end|>' → logprob: -14.375007629394531
    6. 'if' → logprob: -14.750007629394531
    7. 'ndef' → logprob: -14.875007629394531
    8. '```' → logprob: -15.125007629394531
    9. ' def' → logprob: -15.250007629394531
    10. '\' → logprob: -15.875007629394531

Token 143: ' main' (ID: 2758)
  Prédit: ' quick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quick' → logprob: -0.3158489465713501
    2. ' Quick' → logprob: -1.44084894657135
    3. 'Quick' → logprob: -3.5658488273620605
    4. 'quick' → logprob: -6.0658488273620605
    5. ' main' → logprob: -6.8158488273620605
    6. ' Qu' → logprob: -7.0658488273620605
    7. '_qu' → logprob: -7.5658488273620605
    8. 'qu' → logprob: -7.8158488273620605
    9. 'Qu' → logprob: -8.190849304199219
    10. ' partition' → logprob: -9.565849304199219

Token 144: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001967650605365634
    2. '(' → logprob: -6.876967430114746
    3. '()' → logprob: -7.001967430114746
    4. ' ():' → logprob: -11.001967430114746
    5. '():
' → logprob: -12.251967430114746
    6. '()>' → logprob: -14.501967430114746
    7. '(:' → logprob: -14.501967430114746
    8. ':' → logprob: -14.626967430114746
    9. '()">' → logprob: -15.751967430114746
    10. '()(' → logprob: -15.876967430114746

Token 145: '   ' (ID: 271)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.19030657410621643
    2. ' sequence' → logprob: -2.4403066635131836
    3. '   ' → logprob: -2.5653066635131836
    4. '    
' → logprob: -4.815306663513184
    5. 'n' → logprob: -7.940306663513184
    6. '(sequence' → logprob: -8.190306663513184
    7. 'seq' → logprob: -8.690306663513184
    8. 'len' → logprob: -9.190306663513184
    9. 'length' → logprob: -9.565306663513184
    10. '_sequence' → logprob: -9.690306663513184

Token 146: ' [' (ID: 723)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0005307526444084942
    2. 'n' → logprob: -8.000531196594238
    3. 'seq' → logprob: -9.375531196594238
    4. ' sequence' → logprob: -9.375531196594238
    5. 'length' → logprob: -11.375531196594238
    6. 's' → logprob: -12.250531196594238
    7. 'len' → logprob: -13.000531196594238
    8. 'sequ' → logprob: -13.125531196594238
    9. '(sequence' → logprob: -13.625531196594238
    10. '   ' → logprob: -13.750531196594238

Token 147: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.00041970983147621155
    2. ' sequence' → logprob: -8.000419616699219
    3. 'n' → logprob: -10.000419616699219
    4. '(sequence' → logprob: -10.875419616699219
    5. 'length' → logprob: -12.250419616699219
    6. 'seq' → logprob: -12.500419616699219
    7. '   ' → logprob: -13.000419616699219
    8. ']' → logprob: -13.250419616699219
    9. 'len' → logprob: -13.625419616699219
    10. ',' → logprob: -13.875419616699219

Token 148: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -2.963691804325208e-05
    2. 'len' → logprob: -10.625029563903809
    3. '_length' → logprob: -12.750029563903809
    4. '_l' → logprob: -14.125029563903809
    5. '_' → logprob: -14.875029563903809
    6. ',' → logprob: -15.125029563903809
    7. 'Len' → logprob: -15.125029563903809
    8. ']' → logprob: -16.250030517578125
    9. 'length' → logprob: -16.625030517578125
    10. '_LEN' → logprob: -16.625030517578125

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2948405128554441e-05
    2. ' ,' → logprob: -11.87501335144043
    3. ',
' → logprob: -12.25001335144043
    4. 'sequence' → logprob: -15.12501335144043
    5. ',

' → logprob: -15.12501335144043
    6. ')' → logprob: -15.75001335144043
    7. '<|end|>' → logprob: -15.75001335144043
    8. ']' → logprob: -16.25001335144043
    9. '‌,' → logprob: -16.50001335144043
    10. ' sequence' → logprob: -17.37501335144043

Token 150: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.25214189291000366
    2. 'sequence' → logprob: -1.5021419525146484
    3. '(sequence' → logprob: -9.252141952514648
    4. '<|end|>' → logprob: -10.002141952514648
    5. ' ' → logprob: -10.752141952514648
    6. ' ]' → logprob: -10.752141952514648
    7. 'Sequence' → logprob: -11.752141952514648
    8. '_sequence' → logprob: -12.127141952514648
    9. ' ' → logprob: -12.502141952514648
    10. ']' → logprob: -12.627141952514648

Token 151: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010783452307805419
    2. ']=' → logprob: -9.750107765197754
    3. ' ]' → logprob: -10.000107765197754
    4. ')' → logprob: -13.125107765197754
    5. '=' → logprob: -13.875107765197754
    6. ')]' → logprob: -14.375107765197754
    7. ' =' → logprob: -15.625107765197754
    8. '_]' → logprob: -15.750107765197754
    9. ',' → logprob: -16.50010871887207
    10. '[' → logprob: -16.87510871887207

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016034720465540886
    2. ' =' → logprob: -4.1410346031188965
    3. ',' → logprob: -15.516035079956055
    4. '=input' → logprob: -16.141035079956055
    5. '[' → logprob: -16.391035079956055
    6. '=

' → logprob: -16.891035079956055
    7. '=}' → logprob: -17.016035079956055
    8. '=
' → logprob: -17.516035079956055
    9. ')' → logprob: -17.766035079956055
    10. '[:]' → logprob: -19.016035079956055

Token 153: ' Input' (ID: 10090)
  Prédit: ' Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Input' → logprob: -0.0011723674833774567
    2. 'Input' → logprob: -6.7511725425720215
    3. '	Input' → logprob: -13.376172065734863
    4. ' input' → logprob: -14.626172065734863
    5. '_Input' → logprob: -17.00117301940918
    6. '\Input' → logprob: -17.00117301940918
    7. '<Input' → logprob: -17.00117301940918
    8. '(Input' → logprob: -19.00117301940918
    9. ' ' → logprob: -19.00117301940918
    10. '_input' → logprob: -19.25117301940918

Token 154: 'Data' (ID: 1186)
  Prédit: 'Data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: 0.0
    2. ' Data' → logprob: -18.75
    3. '	Data' → logprob: -20.0
    4. '(Data' → logprob: -20.625
    5. '<Data' → logprob: -21.25
    6. '_Data' → logprob: -21.5
    7. '_data' → logprob: -22.25
    8. 'data' → logprob: -22.25
    9. 'Dat' → logprob: -22.875
    10. '@Data' → logprob: -23.875

Token 155: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00247981958091259
    2. '()
' → logprob: -6.0024800300598145
    3. '()

' → logprob: -13.252479553222656
    4. '()
' → logprob: -14.502479553222656
    5. '();' → logprob: -14.502479553222656
    6. '()\' → logprob: -15.127479553222656
    7. '   ' → logprob: -15.252479553222656
    8. ' ()' → logprob: -15.252479553222656
    9. '(' → logprob: -15.502479553222656
    10. '()`' → logprob: -16.252479553222656

Token 156: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4356837272644043
    2. '   ' → logprob: -1.5606837272644043
    3. 'pivot' → logprob: -1.9356837272644043
    4. ' p' → logprob: -2.3106837272644043
    5. 'pos' → logprob: -2.3106837272644043
    6. ' pivot' → logprob: -3.3106837272644043
    7. '    
' → logprob: -3.5606837272644043
    8. 'q' → logprob: -3.5606837272644043
    9. '
' → logprob: -3.6856837272644043
    10. 'pi' → logprob: -4.060683727264404

Token 157: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.564782440662384
    2. 'p' → logprob: -0.939782440662384
    3. 'def' → logprob: -3.5647823810577393
    4. 'pivot' → logprob: -5.064782619476318
    5. 'if' → logprob: -6.064782619476318
    6. 'stack' → logprob: -6.564782619476318
    7. 'index' → logprob: -7.689782619476318
    8. 'quick' → logprob: -7.689782619476318
    9. 'pi' → logprob: -8.43978214263916
    10. 'left' → logprob: -8.43978214263916

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09082259237766266
    2. '=' → logprob: -2.465822696685791
    3. 'u' → logprob: -6.465822696685791
    4. ',' → logprob: -9.215822219848633
    5. 'ual' → logprob: -9.715822219848633
    6. '=u' → logprob: -10.090822219848633
    7. '   ' → logprob: -10.840822219848633
    8. 'ue' → logprob: -10.840822219848633
    9. ' ' → logprob: -11.215822219848633
    10. '  ' → logprob: -11.465822219848633

Token 159: ' partition' (ID: 31512)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034401554614305496
    2. 'partition' → logprob: -3.6594016551971436
    3. 'sequence' → logprob: -5.9094014167785645
    4. '-' → logprob: -6.5344014167785645
    5. ' ' → logprob: -6.6594014167785645
    6. 'len' → logprob: -6.6594014167785645
    7. '[' → logprob: -7.6594014167785645
    8. '1' → logprob: -8.409401893615723
    9. ' partition' → logprob: -8.534401893615723
    10. ' sequence' → logprob: -9.159401893615723

Token 160: '(sequence' (ID: 129991)
  Prédit: '(sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.0006068871589377522
    2. '(' → logprob: -7.625607013702393
    3. '<|end|>' → logprob: -9.125606536865234
    4. '(sentence' → logprob: -13.000606536865234
    5. '(se' → logprob: -13.000606536865234
    6. '(
' → logprob: -13.250606536865234
    7. ' (' → logprob: -13.875606536865234
    8. '(seq' → logprob: -14.125606536865234
    9. '<|end|>' → logprob: -14.250606536865234
    10. ' sequence' → logprob: -14.750606536865234

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006804067641496658
    2. '(sequence' → logprob: -5.1318039894104
    3. '(' → logprob: -7.2568039894104
    4. ' ,' → logprob: -8.881804466247559
    5. 'sequence' → logprob: -11.881804466247559
    6. ')' → logprob: -12.006804466247559
    7. '0' → logprob: -12.131804466247559
    8. ',
' → logprob: -12.381804466247559
    9. '(
' → logprob: -13.506804466247559
    10. '(seq' → logprob: -13.881804466247559

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03364858031272888
    2. ' ' → logprob: -3.4086484909057617
    3. '   ' → logprob: -13.158648490905762
    4. '  ' → logprob: -15.033648490905762
    5. '<|end|>' → logprob: -15.408648490905762
    6. '1' → logprob: -15.783648490905762
    7. ' 
' → logprob: -16.658649444580078
    8. '    ' → logprob: -16.783649444580078
    9. '  
' → logprob: -17.033649444580078
    10. '
' → logprob: -17.408649444580078

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002980432182084769
    2. ' ' → logprob: -8.125298500061035
    3. '   ' → logprob: -13.375298500061035
    4. '1' → logprob: -15.125298500061035
    5. '  ' → logprob: -17.25029754638672
    6. '```' → logprob: -17.25029754638672
    7. '(' → logprob: -18.00029754638672
    8. '[' → logprob: -18.00029754638672
    9. '    ' → logprob: -18.37529754638672
    10. 'def' → logprob: -18.37529754638672

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004961982485838234
    2. ' ,' → logprob: -7.6254963874816895
    3. 'sequence' → logprob: -12.000495910644531
    4. ' sequence' → logprob: -13.875495910644531
    5. ',
' → logprob: -14.625495910644531
    6. '   ' → logprob: -15.000495910644531
    7. '(sequence' → logprob: -15.625495910644531
    8. ' ' → logprob: -17.50049591064453
    9. ',len' → logprob: -17.62549591064453
    10. ')' → logprob: -17.75049591064453

Token 165: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.07889353483915329
    2. ' sequence' → logprob: -2.5788934230804443
    3. 'len' → logprob: -12.953893661499023
    4. ' len' → logprob: -14.328893661499023
    5. '   ' → logprob: -14.828893661499023
    6. '(sequence' → logprob: -14.953893661499023
    7. ' ' → logprob: -17.328893661499023
    8. 'sequ' → logprob: -18.203893661499023
    9. 'seq' → logprob: -18.578893661499023
    10. '  ' → logprob: -18.953893661499023

Token 166: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.0280383548888494e-06
    2. 'len' → logprob: -13.875000953674316
    3. '_LEN' → logprob: -17.250001907348633
    4. '_' → logprob: -17.250001907348633
    5. 'Len' → logprob: -18.750001907348633
    6. '	len' → logprob: -18.875001907348633
    7. '_l' → logprob: -19.125001907348633
    8. '[len' → logprob: -19.250001907348633
    9. '<len' → logprob: -19.250001907348633
    10. ' len' → logprob: -19.750001907348633

Token 167: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005244072061032057
    2. ' -' → logprob: -5.255244255065918
    3. ')' → logprob: -11.630244255065918
    4. ' ' → logprob: -14.005244255065918
    5. '<|end|>' → logprob: -15.755244255065918
    6. '-)' → logprob: -16.2552433013916
    7. '   ' → logprob: -16.3802433013916
    8. ')-' → logprob: -16.6302433013916
    9. ' )' → logprob: -17.7552433013916
    10. '[' → logprob: -18.0052433013916

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038074489566497505
    2. ' ' → logprob: -7.875380516052246
    3. ')' → logprob: -14.500380516052246
    4. '   ' → logprob: -16.250381469726562
    5. '```' → logprob: -17.375381469726562
    6. '2' → logprob: -17.750381469726562
    7. '<|end|>' → logprob: -17.812881469726562
    8. '  ' → logprob: -18.187881469726562
    9. ' ' → logprob: -18.375381469726562
    10. '۱' → logprob: -18.812881469726562

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -12.750003814697266
    3. ' )' → logprob: -14.250003814697266
    4. '))' → logprob: -16.125003814697266
    5. ')

' → logprob: -17.250003814697266
    6. ')#' → logprob: -17.750003814697266
    7. '),' → logprob: -18.000003814697266
    8. ')...' → logprob: -18.125003814697266
    9. ')}' → logprob: -18.750003814697266
    10. '')' → logprob: -18.875003814697266

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017444390105083585
    2. 'Print' → logprob: -6.876744270324707
    3. 'print' → logprob: -8.001744270324707
    4. '    
' → logprob: -8.876744270324707
    5. '<|end|>' → logprob: -9.001744270324707
    6. '
' → logprob: -9.626744270324707
    7. '	Print' → logprob: -11.376744270324707
    8. ' Print' → logprob: -12.501744270324707
    9. ')' → logprob: -12.626744270324707
    10. '(Print' → logprob: -12.626744270324707

Token 171: ' sequence' (ID: 16281)
  Prédit: 'Print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Print' → logprob: -0.03432449325919151
    2. '   ' → logprob: -3.7843244075775146
    3. ' Print' → logprob: -4.784324645996094
    4. '	Print' → logprob: -6.159324645996094
    5. '
' → logprob: -8.159324645996094
    6. 'print' → logprob: -9.034324645996094
    7. '  ' → logprob: -10.409324645996094
    8. ' ' → logprob: -10.909324645996094
    9. '    
' → logprob: -10.909324645996094
    10. '(Print' → logprob: -11.034324645996094

Token 172: '[q' (ID: 99278)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7408563494682312
    2. '=' → logprob: -1.740856409072876
    3. '[' → logprob: -1.990856409072876
    4. '[q' → logprob: -2.115856409072876
    5. '[:]' → logprob: -2.740856409072876
    6. '<|end|>' → logprob: -4.615856170654297
    7. '[:' → logprob: -4.865856170654297
    8. ',q' → logprob: -5.365856170654297
    9. ' =' → logprob: -6.615856170654297
    10. '.' → logprob: -7.365856170654297

Token 173: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18177087604999542
    2. ':]' → logprob: -2.4317708015441895
    3. ']' → logprob: -2.6817708015441895
    4. '+]' → logprob: -6.0567708015441895
    5. ':' → logprob: -6.1817708015441895
    6. '=' → logprob: -6.3067708015441895
    7. ' +' → logprob: -6.9317708015441895
    8. ' ]' → logprob: -7.1817708015441895
    9. ' :]' → logprob: -7.6817708015441895
    10. ',' → logprob: -8.056771278381348

Token 174: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1011139526963234
    2. '=' → logprob: -2.47611403465271
    3. '<|end|>' → logprob: -4.601113796234131
    4. ')' → logprob: -7.726113796234131
    5. '[' → logprob: -8.101114273071289
    6. ',q' → logprob: -8.226114273071289
    7. ':' → logprob: -8.601114273071289
    8. ',
' → logprob: -8.601114273071289
    9. ' =' → logprob: -8.851114273071289
    10. 'print' → logprob: -8.976114273071289

Token 175: ' "["' (ID: 118065)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.6034812927246094
    2. '0' → logprob: -1.3534812927246094
    3. '-' → logprob: -2.6034812927246094
    4. 'q' → logprob: -3.1034812927246094
    5. ''' → logprob: -4.228481292724609
    6. 'None' → logprob: -4.728481292724609
    7. '"' → logprob: -4.978481292724609
    8. '100' → logprob: -5.353481292724609
    9. '999' → logprob: -5.603481292724609
    10. ''q' → logprob: -5.603481292724609

Token 176: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.7366635799407959
    2. 'sequence' → logprob: -1.486663579940796
    3. '[' → logprob: -1.861663579940796
    4. ''' → logprob: -2.486663579940796
    5. '"' → logprob: -3.986663579940796
    6. '+' → logprob: -4.111663818359375
    7. '[str' → logprob: -5.361663818359375
    8. '{' → logprob: -5.486663818359375
    9. '(sequence' → logprob: -5.736663818359375
    10. 'f' → logprob: -5.986663818359375

Token 177: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.004090985283255577
    2. ' str' → logprob: -5.504090785980225
    3. '(str' → logprob: -11.754091262817383
    4. 'sequence' → logprob: -12.504091262817383
    5. '"' → logprob: -14.629091262817383
    6. '	str' → logprob: -15.879091262817383
    7. '[str' → logprob: -16.629091262817383
    8. ''' → logprob: -16.754091262817383
    9. ' sequence' → logprob: -16.754091262817383
    10. '"]' → logprob: -17.129091262817383

Token 178: '(sequence' (ID: 129991)
  Prédit: '(sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -3.047134305234067e-05
    2. '(' → logprob: -10.750030517578125
    3. 'sequence' → logprob: -11.625030517578125
    4. '(
' → logprob: -17.375030517578125
    5. '(q' → logprob: -18.875030517578125
    6. '(question' → logprob: -18.875030517578125
    7. ' (' → logprob: -19.125030517578125
    8. '(expression' → logprob: -19.500030517578125
    9. '(sentence' → logprob: -20.000030517578125
    10. ' sequence' → logprob: -20.125030517578125

Token 179: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.500001907348633
    3. ')' → logprob: -15.625001907348633
    4. 'q' → logprob: -18.250001907348633
    5. '	q' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.375001907348633
    7. ')[' → logprob: -18.625001907348633
    8. '(q' → logprob: -18.750001907348633
    9. '[j' → logprob: -19.125001907348633
    10. '```' → logprob: -19.250001907348633

Token 180: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021979559678584337
    2. '])' → logprob: -6.877197742462158
    3. ')]' → logprob: -7.252197742462158
    4. ']' → logprob: -7.877197742462158
    5. ')+' → logprob: -9.752198219299316
    6. '])+' → logprob: -12.377198219299316
    7. '）' → logprob: -12.502198219299316
    8. ']+' → logprob: -13.002198219299316
    9. '})' → logprob: -13.377198219299316
    10. ' )' → logprob: -13.377198219299316

Token 181: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03787622228264809
    2. '"]' → logprob: -3.9128761291503906
    3. '+"]' → logprob: -4.287876129150391
    4. '+' → logprob: -5.912876129150391
    5. ')' → logprob: -8.28787612915039
    6. ' +' → logprob: -8.78787612915039
    7. ']+' → logprob: -8.91287612915039
    8. '']' → logprob: -9.03787612915039
    9. ' ]' → logprob: -11.03787612915039
    10. '   ' → logprob: -11.28787612915039

Token 182: ' "]' (ID: 35976)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.0001310719089815393
    2. ']' → logprob: -9.375130653381348
    3. ' "]' → logprob: -10.750130653381348
    4. '']' → logprob: -11.500130653381348
    5. ']"' → logprob: -11.750130653381348
    6. '"' → logprob: -12.375130653381348
    7. '"],' → logprob: -13.875130653381348
    8. ' ' → logprob: -14.875130653381348
    9. '   ' → logprob: -15.375130653381348
    10. '"]="' → logprob: -15.375130653381348

Token 183: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08902846276760101
    2. '"' → logprob: -2.5890283584594727
    3. ')' → logprob: -5.089028358459473
    4. '    
' → logprob: -6.839028358459473
    5. ']' → logprob: -6.964028358459473
    6. 'print' → logprob: -7.839028358459473
    7. '
' → logprob: -8.089028358459473
    8. ')"' → logprob: -8.214028358459473
    9. ')
' → logprob: -8.464028358459473
    10. '<|end|>' → logprob: -8.714028358459473

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033540434669703245
    2. '
' → logprob: -6.753354072570801
    3. '<|end|>' → logprob: -6.878354072570801
    4. '    
' → logprob: -7.003354072570801
    5. ')' → logprob: -8.6283540725708
    6. 'print' → logprob: -10.6283540725708
    7. '<|end|>' → logprob: -11.6283540725708
    8. '  
' → logprob: -11.8783540725708
    9. ' 
' → logprob: -12.7533540725708
    10. '   
' → logprob: -12.8783540725708

Token 185: ' Print' (ID: 13103)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28480032086372375
    2. 'Print' (adapté à ' Print') → logprob: -1.4098002910614014
    3. ' Print' → logprob: -6.4098005294799805
    4. '	Print' → logprob: -6.7848005294799805
    5. 'print' → logprob: -7.6598005294799805
    6. '    
' → logprob: -8.53480052947998
    7. '
' → logprob: -8.90980052947998
    8. '(Print' → logprob: -10.53480052947998
    9. ')' → logprob: -11.78480052947998
    10. ' print' → logprob: -12.15980052947998

Token 186: 'Out' (ID: 3227)
  Prédit: 'Out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Out' → logprob: -1.8624639324116288e-06
    2. 'O' → logprob: -13.750001907348633
    3. ' Out' → logprob: -14.875001907348633
    4. 'Ou' → logprob: -15.000001907348633
    5. '_Out' → logprob: -17.500001907348633
    6. '_out' → logprob: -17.625001907348633
    7. 'Output' → logprob: -18.625001907348633
    8. '(' → logprob: -19.375001907348633
    9. 'Ot' → logprob: -19.750001907348633
    10. 'Ut' → logprob: -19.875001907348633

Token 187: '(sequence' (ID: 129991)
  Prédit: '(sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.0003360582049936056
    2. '(' → logprob: -8.000335693359375
    3. '(seq' → logprob: -16.125335693359375
    4. '(se' → logprob: -16.250335693359375
    5. '(sentence' → logprob: -16.500335693359375
    6. ' (' → logprob: -16.750335693359375
    7. 'sequence' → logprob: -17.000335693359375
    8. '(
' → logprob: -18.000335693359375
    9. '(schedule' → logprob: -18.875335693359375
    10. '(expression' → logprob: -19.250335693359375

Token 188: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ')
' → logprob: -13.25000286102295
    3. ' )' → logprob: -13.75000286102295
    4. '   ' → logprob: -16.750003814697266
    5. '())' → logprob: -16.875003814697266
    6. ')

' → logprob: -17.125003814697266
    7. '()' → logprob: -17.250003814697266
    8. ')`' → logprob: -17.500003814697266
    9. ')#' → logprob: -17.625003814697266
    10. '))' → logprob: -18.250003814697266

Token 189: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3252485990524292
    2. '<|end|>' → logprob: -1.9502485990524292
    3. '#' → logprob: -2.7002487182617188
    4. '(' → logprob: -3.8252487182617188
    5. '
' → logprob: -4.075248718261719
    6. '```' → logprob: -4.575248718261719
    7. '[' → logprob: -5.325248718261719
    8. '\n' → logprob: -5.700248718261719
    9. 'main' → logprob: -6.325248718261719
    10. ']' → logprob: -6.575248718261719

Token 190: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.41817545890808105
    2. '__' → logprob: -1.168175458908081
    3. ' ' → logprob: -3.918175458908081
    4. '_' → logprob: -4.54317569732666
    5. ' _' → logprob: -9.16817569732666
    6. '_name' → logprob: -9.66817569732666
    7. ' ' → logprob: -9.79317569732666
    8. '___' → logprob: -10.79317569732666
    9. '_main' → logprob: -11.29317569732666
    10. '<|end|>' → logprob: -11.54317569732666

Token 191: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02656070701777935
    2. ' __' → logprob: -3.6515607833862305
    3. ' ==' → logprob: -9.40156078338623
    4. '__.__' → logprob: -9.40156078338623
    5. '__.' → logprob: -10.15156078338623
    6. '_' → logprob: -11.02656078338623
    7. '.__' → logprob: -11.15156078338623
    8. '__["' → logprob: -11.90156078338623
    9. '==' → logprob: -12.77656078338623
    10. '__[' → logprob: -12.90156078338623

Token 192: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.054500666621607e-06
    2. '__.__' → logprob: -13.50000286102295
    3. '==' → logprob: -14.00000286102295
    4. '___' → logprob: -15.12500286102295
    5. '__.' → logprob: -15.50000286102295
    6. '____' → logprob: -15.75000286102295
    7. '__

' → logprob: -17.250003814697266
    8. '__["' → logprob: -17.250003814697266
    9. '__
' → logprob: -17.500003814697266
    10. '_' → logprob: -17.875003814697266

Token 193: '=="' (ID: 24027)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8012600541114807
    2. '__' → logprob: -1.176259994506836
    3. '==' → logprob: -1.426259994506836
    4. '=="' → logprob: -6.301259994506836
    5. '_' → logprob: -8.176259994506836
    6. '=' → logprob: -8.426259994506836
    7. '"' → logprob: -9.551259994506836
    8. ' =' → logprob: -10.176259994506836
    9. '___' → logprob: -10.176259994506836
    10. '=='' → logprob: -10.301259994506836

Token 194: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.869017852295656e-06
    2. ''' → logprob: -12.375006675720215
    3. '"' → logprob: -13.750006675720215
    4. ' __' → logprob: -13.750006675720215
    5. '___' → logprob: -15.250006675720215
    6. ' "__' → logprob: -16.00000762939453
    7. '_main' → logprob: -16.75000762939453
    8. '_' → logprob: -17.37500762939453
    9. 'main' → logprob: -17.50000762939453
    10. '____' → logprob: -18.00000762939453

Token 195: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008357948623597622
    2. '"' → logprob: -5.883358001708984
    3. '__' → logprob: -6.258358001708984
    4. 'name' → logprob: -6.633358001708984
    5. '_main' → logprob: -7.008358001708984
    6. ''' → logprob: -8.008358001708984
    7. 'python' → logprob: -8.508358001708984
    8. '__':
' → logprob: -8.758358001708984
    9. '__":
' → logprob: -8.883358001708984
    10. '```' → logprob: -9.008358001708984

Token 196: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06423293054103851
    2. '__":
' → logprob: -2.81423282623291
    3. '_' → logprob: -6.18923282623291
    4. '__:' → logprob: -8.56423282623291
    5. '_"' → logprob: -11.06423282623291
    6. '__["' → logprob: -13.68923282623291
    7. '__':
' → logprob: -14.06423282623291
    8. '___' → logprob: -14.31423282623291
    9. '__",' → logprob: -14.31423282623291
    10. ':' → logprob: -14.56423282623291

Token 197: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7852964997291565
    2. '   ' → logprob: -1.4102964401245117
    3. '	main' → logprob: -1.5352964401245117
    4. '    
' → logprob: -2.9102964401245117
    5. 'main' → logprob: -3.7852964401245117
    6. '_main' → logprob: -6.035296440124512
    7. '
' → logprob: -6.285296440124512
    8. ' 
' → logprob: -6.660296440124512
    9. '	
' → logprob: -7.910296440124512
    10. '<|end|>' → logprob: -8.035296440124512

Token 198: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.011066329665482044
    2. ' main' → logprob: -4.511066436767578
    3. '	main' → logprob: -11.011066436767578
    4. '   ' → logprob: -13.886066436767578
    5. '_main' → logprob: -14.511066436767578
    6. 'm' → logprob: -15.511066436767578
    7. 'mai' → logprob: -16.636066436767578
    8. '    
' → logprob: -16.761066436767578
    9. '(main' → logprob: -16.761066436767578
    10. ' ' → logprob: -17.261066436767578

Token 199: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 197
Tokens correctement prédits (1ère position, stricte): 89
Tokens correctement prédits (1ère position, avec adaptation): 93
Tokens correctement prédits (top 10): 161
Précision stricte (1ère position): 45.18%
Précision adaptée (1ère position): 47.21%
Précision (top 10): 81.73%
================================================================================
