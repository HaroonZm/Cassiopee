================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def partition(arr, p, r):
    x = arr[r]
    i = p - 1
    for j in range(p, r):
        if arr[j] <= x:
            i += 1
            arr[i], arr[j] = arr[j], arr[i]

    arr[i+1], arr[r] = arr[r], arr[i+1]
    return i+1

num = int(input())
num_list = [int(s) for s in input().split()]

idx = partition(num_list, 0, len(num_list) - 1)

print(*num_list[:idx], end="")
print(" [" + str(num_list[idx]) + "] ", end="")
print(*num_list[idx+1:])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' partition' (ID: 31512)
  → Token d'amorce (pas de prédiction)

Token 2: '(arr' (ID: 19646)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05811585485935211
    2. ')' → logprob: -2.9331159591674805
    3. ',' → logprob: -6.6831159591674805
    4. '[
' → logprob: -7.1831159591674805
    5. '):' → logprob: -8.18311595916748
    6. '<|end|>' → logprob: -8.30811595916748
    7. '```' → logprob: -8.93311595916748
    8. '(' → logprob: -9.18311595916748
    9. '[]' → logprob: -9.93311595916748
    10. '[...,' → logprob: -10.43311595916748

Token 4: ' p' (ID: 275)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.1985209882259369
    2. 'arr' → logprob: -1.8235210180282593
    3. ' space' → logprob: -5.198521137237549
    4. '```' → logprob: -5.698521137237549
    5. ')' → logprob: -5.823521137237549
    6. 'space' → logprob: -6.323521137237549
    7. '[' → logprob: -6.448521137237549
    8. '[arr' → logprob: -7.198521137237549
    9. '<|end|>' → logprob: -7.948521137237549
    10. ' )' → logprob: -8.32352066040039

Token 5: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048431213945150375
    2. '):' → logprob: -3.673431158065796
    3. 'art' → logprob: -4.798431396484375
    4. ')' → logprob: -5.798431396484375
    5. 'os' → logprob: -6.173431396484375
    6. 'ivot' → logprob: -6.298431396484375
    7. 'ython' → logprob: -7.048431396484375
    8. '[' → logprob: -7.298431396484375
    9. ',r' → logprob: -7.423431396484375
    10. 'ar' → logprob: -7.548431396484375

Token 6: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.47999483346939087
    2. 'r' → logprob: -0.9799948334693909
    3. ' q' → logprob: -5.479994773864746
    4. 'q' → logprob: -6.479994773864746
    5. ',r' → logprob: -10.104994773864746
    6. ' ' → logprob: -10.729994773864746
    7. 'ivot' → logprob: -10.854994773864746
    8. '<|end|>' → logprob: -10.854994773864746
    9. '```' → logprob: -11.104994773864746
    10. ',' → logprob: -11.104994773864746

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006749835796654224
    2. ':' → logprob: -5.506749629974365
    3. ')' → logprob: -6.006749629974365
    4. ''):' → logprob: -9.006750106811523
    5. '```' → logprob: -10.381750106811523
    6. '**' → logprob: -11.006750106811523
    7. '"):' → logprob: -12.006750106811523
    8. '`:' → logprob: -12.256750106811523
    9. '):
' → logprob: -12.381750106811523
    10. ',' → logprob: -12.381750106811523

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011666715145111084
    2. '   ' → logprob: -4.636666774749756
    3. '```' → logprob: -6.886666774749756
    4. '':' → logprob: -8.511666297912598
    5. ':
' → logprob: -9.011666297912598
    6. ' :' → logprob: -9.136666297912598
    7. '':'' → logprob: -9.386666297912598
    8. '":' → logprob: -9.636666297912598
    9. '[:]' → logprob: -9.886666297912598
    10. '`:' → logprob: -9.886666297912598

Token 9: ' x' (ID: 1215)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1710740178823471
    2. '   ' → logprob: -2.6710739135742188
    3. '```' → logprob: -2.7960739135742188
    4. '\t' → logprob: -4.921073913574219
    5. '``' → logprob: -5.296073913574219
    6. '`' → logprob: -5.296073913574219
    7. '	if' → logprob: -6.546073913574219
    8. '    ' → logprob: -7.046073913574219
    9. '`:' → logprob: -7.171073913574219
    10. ':return' → logprob: -7.296073913574219

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35118505358695984
    2. '=' → logprob: -1.2261850833892822
    3. ',' → logprob: -6.476184844970703
    4. ')' → logprob: -7.601184844970703
    5. ' ==' → logprob: -8.101184844970703
    6. '<|end|>' → logprob: -8.851184844970703
    7. '  ' → logprob: -9.601184844970703
    8. '[' → logprob: -10.476184844970703
    9. ' ' → logprob: -10.601184844970703
    10. '==' → logprob: -11.226184844970703

Token 11: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.5759586691856384
    2. 'arr' → logprob: -0.8259586691856384
    3. ' ' → logprob: -11.700958251953125
    4. '	arr' → logprob: -11.700958251953125
    5. '(arr' → logprob: -13.825958251953125
    6. '   ' → logprob: -14.450958251953125
    7. '  ' → logprob: -15.450958251953125
    8. 'a' → logprob: -15.450958251953125
    9. '<arr' → logprob: -15.450958251953125
    10. '[arr' → logprob: -15.575958251953125

Token 12: '[r' (ID: 33265)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.32663318514823914
    2. '[r' → logprob: -1.3266332149505615
    3. '[' → logprob: -4.326632976531982
    4. '[q' → logprob: -10.70163345336914
    5. '[m' → logprob: -11.20163345336914
    6. '```' → logprob: -11.95163345336914
    7. ' [' → logprob: -12.07663345336914
    8. '[l' → logprob: -12.57663345336914
    9. '[
' → logprob: -12.95163345336914
    10. '[i' → logprob: -12.95163345336914

Token 13: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00035143180866725743
    2. ')' → logprob: -8.750351905822754
    3. '])' → logprob: -8.750351905822754
    4. ']
' → logprob: -10.625351905822754
    5. ' ]' → logprob: -11.875351905822754
    6. '[' → logprob: -13.375351905822754
    7. '']' → logprob: -15.000351905822754
    8. ']

' → logprob: -15.125351905822754
    9. ']
' → logprob: -15.500351905822754
    10. '```' → logprob: -15.625351905822754

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18555527925491333
    2. 'i' → logprob: -3.1855552196502686
    3. '  ' → logprob: -3.9355552196502686
    4. '    
' → logprob: -4.060555458068848
    5. '<|end|>' → logprob: -4.060555458068848
    6. ' ' → logprob: -4.685555458068848
    7. '	i' → logprob: -4.685555458068848
    8. '  
' → logprob: -4.810555458068848
    9. ' i' → logprob: -4.935555458068848
    10. '
' → logprob: -5.060555458068848

Token 15: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.24108675122261047
    2. ' i' → logprob: -1.616086721420288
    3. '   ' → logprob: -4.366086959838867
    4. '```' → logprob: -7.491086959838867
    5. '	i' → logprob: -7.616086959838867
    6. '`' → logprob: -7.866086959838867
    7. ' for' → logprob: -8.366086959838867
    8. '    
' → logprob: -8.616086959838867
    9. '[i' → logprob: -8.866086959838867
    10. '    ' → logprob: -8.991086959838867

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03245535492897034
    2. '=' → logprob: -3.6574554443359375
    3. ' ' → logprob: -5.9074554443359375
    4. '<|end|>' → logprob: -5.9074554443359375
    5. '<|end|>' → logprob: -9.032455444335938
    6. ' +=' → logprob: -9.157455444335938
    7. '  ' → logprob: -9.532455444335938
    8. ',' → logprob: -9.657455444335938
    9. '    ' → logprob: -9.782455444335938
    10. '	' → logprob: -9.907455444335938

Token 17: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.2254280298948288
    2. 'p' → logprob: -1.6004279851913452
    3. ' ' → logprob: -11.475427627563477
    4. '	p' → logprob: -13.725427627563477
    5. '(p' → logprob: -14.225427627563477
    6. '-' → logprob: -14.600427627563477
    7. '<p' → logprob: -14.600427627563477
    8. '   ' → logprob: -14.662927627563477
    9. '  ' → logprob: -14.725427627563477
    10. ' (' → logprob: -14.787927627563477

Token 18: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.998737096786499
    2. '-' → logprob: -1.123737096786499
    3. '<|end|>' → logprob: -1.248737096786499
    4. ' ' → logprob: -4.748737335205078
    5. '<|end|>' → logprob: -4.873737335205078
    6. '   ' → logprob: -7.248737335205078
    7. '    ' → logprob: -7.498737335205078
    8. '+' → logprob: -7.498737335205078
    9. '```' → logprob: -7.998737335205078
    10. '  ' → logprob: -8.123737335205078

Token 19: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010950337309623137
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -14.875109672546387
    4. '```' → logprob: -16.25010871887207
    5. '  ' → logprob: -17.25010871887207
    6. '    ' → logprob: -18.37510871887207
    7. '۱' → logprob: -19.06260871887207
    8. '' → logprob: -19.37510871887207
    9. '１' → logprob: -19.37510871887207
    10. '0' → logprob: -19.87510871887207

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -17.125
    4. '   ' → logprob: -17.625
    5. '  ' → logprob: -20.375
    6. '۱' → logprob: -20.5
    7. '１' → logprob: -21.125
    8. '' → logprob: -21.3125
    9. '१' → logprob: -21.5
    10. '-' → logprob: -22.125

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3173319399356842
    2. '\n' → logprob: -2.0673320293426514
    3. '```' → logprob: -2.9423320293426514
    4. '   ' → logprob: -3.1923320293426514
    5. ' for' → logprob: -3.9423320293426514
    6. '<|end|>' → logprob: -4.317331790924072
    7. '    
' → logprob: -4.942331790924072
    8. 'newline' → logprob: -5.692331790924072
    9. '<|end|>' → logprob: -6.192331790924072
    10. '\' → logprob: -6.692331790924072

Token 22: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3193141222000122
    2. '\n' → logprob: -2.3193140029907227
    3. '```' → logprob: -2.3193140029907227
    4. '   ' → logprob: -3.6943140029907227
    5. ' for' → logprob: -3.9443140029907227
    6. '    
' → logprob: -4.444314002990723
    7. ''\' → logprob: -5.444314002990723
    8. '``' → logprob: -5.944314002990723
    9. 'newline' → logprob: -5.944314002990723
    10. '\' → logprob: -6.069314002990723

Token 23: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.9076843857765198
    2. '
' → logprob: -1.532684326171875
    3. ' for' → logprob: -1.532684326171875
    4. '\n' → logprob: -2.657684326171875
    5. '```' → logprob: -3.282684326171875
    6. '<|end|>' → logprob: -3.282684326171875
    7. '    
' → logprob: -5.782684326171875
    8. '	for' → logprob: -5.907684326171875
    9. '   ' → logprob: -6.157684326171875
    10. '  
' → logprob: -6.282684326171875

Token 24: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.007750367745757103
    2. 'j' → logprob: -4.882750511169434
    3. ' ' → logprob: -9.132750511169434
    4. '   ' → logprob: -11.257750511169434
    5. '	j' → logprob: -11.632750511169434
    6. '  ' → logprob: -12.257750511169434
    7. '    ' → logprob: -12.382750511169434
    8. ' ' → logprob: -13.382750511169434
    9. '```' → logprob: -13.757750511169434
    10. ' )' → logprob: -15.007750511169434

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014492657966911793
    2. 'in' → logprob: -4.389492511749268
    3. ' ' → logprob: -6.264492511749268
    4. '<|end|>' → logprob: -10.514492988586426
    5. '	in' → logprob: -11.014492988586426
    6. '  ' → logprob: -11.014492988586426
    7. '    ' → logprob: -12.264492988586426
    8. ' j' → logprob: -13.264492988586426
    9. ' =' → logprob: -13.264492988586426
    10. '=' → logprob: -13.514492988586426

Token 26: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5766577124595642
    2. ' range' → logprob: -0.8266577124595642
    3. ' p' → logprob: -7.701657772064209
    4. 'p' → logprob: -8.32665729522705
    5. ' ' → logprob: -11.20165729522705
    6. ' xrange' → logprob: -12.57665729522705
    7. '	range' → logprob: -12.95165729522705
    8. '   ' → logprob: -13.07665729522705
    9. '(range' → logprob: -14.45165729522705
    10. '  ' → logprob: -14.57665729522705

Token 27: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.13289904594421387
    2. '(' → logprob: -2.132899045944214
    3. ' (' → logprob: -5.132899284362793
    4. '(i' → logprob: -10.382899284362793
    5. ' ' → logprob: -11.632899284362793
    6. ' p' → logprob: -12.007899284362793
    7. ')' → logprob: -12.632899284362793
    8. 'p' → logprob: -14.382899284362793
    9. '(
' → logprob: -14.382899284362793
    10. ',' → logprob: -14.882899284362793

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031947086099535227
    2. ' ,' → logprob: -5.753194808959961
    3. '+' → logprob: -12.628194808959961
    4. ',j' → logprob: -12.753194808959961
    5. ',r' → logprob: -12.878194808959961
    6. ')' → logprob: -13.003194808959961
    7. ',p' → logprob: -13.128194808959961
    8. ' ' → logprob: -13.753194808959961
    9. '‌,' → logprob: -14.253194808959961
    10. '   ' → logprob: -14.753194808959961

Token 29: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4740804135799408
    2. ' r' → logprob: -0.9740804433822632
    3. ' ' → logprob: -12.849080085754395
    4. '	r' → logprob: -14.474080085754395
    5. '   ' → logprob: -15.849080085754395
    6. '_r' → logprob: -16.59908103942871
    7. '    ' → logprob: -17.72408103942871
    8. '```' → logprob: -18.22408103942871
    9. '  ' → logprob: -18.34908103942871
    10. ',r' → logprob: -18.59908103942871

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.131255641579628
    2. '+' → logprob: -2.131255626678467
    3. ' +' → logprob: -6.381255626678467
    4. '):
' → logprob: -7.006255626678467
    5. ':' → logprob: -7.381255626678467
    6. ')' → logprob: -7.506255626678467
    7. '   ' → logprob: -8.381256103515625
    8. ' ):' → logprob: -8.381256103515625
    9. '+:' → logprob: -10.381256103515625
    10. ',' → logprob: -10.881256103515625

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026350347325205803
    2. '<|end|>' → logprob: -4.526350498199463
    3. '   ' → logprob: -4.901350498199463
    4. ' ' → logprob: -6.026350498199463
    5. '    ' → logprob: -6.526350498199463
    6. '        
' → logprob: -7.026350498199463
    7. '
' → logprob: -7.151350498199463
    8. ' if' → logprob: -8.026350021362305
    9. '    
' → logprob: -8.151350021362305
    10. ' 
' → logprob: -8.526350021362305

Token 32: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7528124451637268
    2. '<|end|>' → logprob: -1.127812385559082
    3. '       ' → logprob: -3.002812385559082
    4. ' if' → logprob: -3.127812385559082
    5. '           ' → logprob: -3.252812385559082
    6. '   ' → logprob: -3.877812385559082
    7. '    ' → logprob: -4.002812385559082
    8. 'if' (adapté à ' if') → logprob: -4.377812385559082
    9. '<|end|>' → logprob: -4.877812385559082
    10. ' 
' → logprob: -5.752812385559082

Token 33: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.0015258101047948003
    2. 'arr' → logprob: -6.50152587890625
    3. ' ' → logprob: -11.12652587890625
    4. '	arr' → logprob: -12.25152587890625
    5. '(arr' → logprob: -13.12652587890625
    6. '<arr' → logprob: -14.75152587890625
    7. '[arr' → logprob: -14.75152587890625
    8. ' ' → logprob: -15.00152587890625
    9. ' (' → logprob: -15.87652587890625
    10. '$arr' → logprob: -16.25152587890625

Token 34: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00020616286201402545
    2. '[' → logprob: -8.500205993652344
    3. ' [' → logprob: -13.875205993652344
    4. '[i' → logprob: -14.750205993652344
    5. '[
' → logprob: -14.750205993652344
    6. '```' → logprob: -15.250205993652344
    7. '[q' → logprob: -15.750205993652344
    8. '[js' → logprob: -16.125205993652344
    9. '[r' → logprob: -17.250205993652344
    10. 'j' → logprob: -17.250205993652344

Token 35: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.006143511272966862
    2. '<=' → logprob: -5.381143569946289
    3. ']' → logprob: -7.506143569946289
    4. ')' → logprob: -8.131143569946289
    5. ']<=' → logprob: -8.381143569946289
    6. ' <' → logprob: -9.006143569946289
    7. ' ' → logprob: -9.256143569946289
    8. '[' → logprob: -9.256143569946289
    9. ' ]' → logprob: -9.756143569946289
    10. ')<=' → logprob: -10.131143569946289

Token 36: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0035940175876021385
    2. '<=' → logprob: -5.753593921661377
    3. ' ' → logprob: -8.503594398498535
    4. ' <' → logprob: -8.878594398498535
    5. '[' → logprob: -10.628594398498535
    6. '<|end|>' → logprob: -11.753594398498535
    7. '<' → logprob: -12.003594398498535
    8. ')' → logprob: -12.253594398498535
    9. ')<=' → logprob: -12.253594398498535
    10. '```' → logprob: -12.316094398498535

Token 37: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02269778959453106
    2. 'x' → logprob: -4.022697925567627
    3. ' ' → logprob: -5.397697925567627
    4. ''' → logprob: -13.147697448730469
    5. ')' → logprob: -13.397697448730469
    6. '	x' → logprob: -13.397697448730469
    7. '  ' → logprob: -13.522697448730469
    8. ' ' → logprob: -14.272697448730469
    9. ' ,' → logprob: -14.397697448730469
    10. '"' → logprob: -14.397697448730469

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016754455282352865
    2. ':
' → logprob: -9.125167846679688
    3. ' :' → logprob: -10.125167846679688
    4. '):' → logprob: -11.625167846679688
    5. ':**' → logprob: -12.500167846679688
    6. '<|end|>' → logprob: -13.125167846679688
    7. '       ' → logprob: -13.875167846679688
    8. '           ' → logprob: -14.750167846679688
    9. ',' → logprob: -14.875167846679688
    10. '<|end|>' → logprob: -15.125167846679688

Token 39: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11309244483709335
    2. '<|end|>' → logprob: -3.1130924224853516
    3. '
' → logprob: -3.3630924224853516
    4. '<|end|>' → logprob: -4.863092422485352
    5. '       ' → logprob: -5.238092422485352
    6. ':' → logprob: -5.363092422485352
    7. ':
' → logprob: -5.363092422485352
    8. '            
' → logprob: -6.613092422485352
    9. '   ' → logprob: -7.363092422485352
    10. '               ' → logprob: -7.613092422485352

Token 40: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6342475414276123
    2. ' 
' → logprob: -1.7592475414276123
    3. ' i' → logprob: -2.2592475414276123
    4. 'i' (adapté à ' i') → logprob: -2.3842475414276123
    5. '<|end|>' → logprob: -2.8842475414276123
    6. '               ' → logprob: -4.509247779846191
    7. '
' → logprob: -4.884247779846191
    8. '       ' → logprob: -5.009247779846191
    9. '            
' → logprob: -5.884247779846191
    10. '                
' → logprob: -6.009247779846191

Token 41: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008741267025470734
    2. ' +' → logprob: -5.38374137878418
    3. '+' → logprob: -6.00874137878418
    4. ' =' → logprob: -6.88374137878418
    5. '+=' → logprob: -7.88374137878418
    6. '<|end|>' → logprob: -8.75874137878418
    7. '=' → logprob: -10.75874137878418
    8. ' ' → logprob: -11.13374137878418
    9. '    ' → logprob: -11.13374137878418
    10. '```' → logprob: -11.63374137878418

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.179745614528656
    2. ' ' → logprob: -1.8047456741333008
    3. '<|end|>' → logprob: -14.9297456741333
    4. ' ' → logprob: -15.4297456741333
    5. '```' → logprob: -15.6797456741333
    6. '   ' → logprob: -16.179744720458984
    7. '    ' → logprob: -17.304744720458984
    8. '  ' → logprob: -17.429744720458984
    9. '+' → logprob: -17.929744720458984
    10. ' +' → logprob: -18.617244720458984

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '<|end|>' → logprob: -17.37504005432129
    4. '   ' → logprob: -18.25004005432129
    5. '  ' → logprob: -19.12504005432129
    6. '```' → logprob: -19.75004005432129
    7. '+' → logprob: -19.87504005432129
    8. '۱' → logprob: -20.62504005432129
    9. '    ' → logprob: -21.12504005432129
    10. '१' → logprob: -21.31254005432129

Token 44: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.4289083480834961
    2. 'arr' (adapté à ' arr') → logprob: -1.053908348083496
    3. '	arr' → logprob: -9.928908348083496
    4. ' ' → logprob: -10.053908348083496
    5. '[arr' → logprob: -10.303908348083496
    6. '(arr' → logprob: -10.428908348083496
    7. '<arr' → logprob: -11.803908348083496
    8. '    ' → logprob: -12.053908348083496
    9. '           ' → logprob: -12.053908348083496
    10. '```' → logprob: -12.303908348083496

Token 47: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003087678924202919
    2. '[' → logprob: -8.125308990478516
    3. '[I' → logprob: -11.500308990478516
    4. '[j' → logprob: -13.875308990478516
    5. '<|end|>' → logprob: -14.500308990478516
    6. '```' → logprob: -15.500308990478516
    7. '[...]' → logprob: -15.625308990478516
    8. 'i' → logprob: -16.125308990478516
    9. '\[' → logprob: -16.375308990478516
    10. '[index' → logprob: -16.625308990478516

Token 48: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024842156562954187
    2. ' ]' → logprob: -6.752484321594238
    3. '],' → logprob: -7.127484321594238
    4. ',' → logprob: -7.627484321594238
    5. ']=' → logprob: -11.752484321594238
    6. ' ],' → logprob: -12.127484321594238
    7. '[' → logprob: -13.502484321594238
    8. '<|end|>' → logprob: -13.502484321594238
    9. ']]' → logprob: -13.627484321594238
    10. ']==' → logprob: -13.627484321594238

Token 49: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.16036772727966309
    2. 'arr' → logprob: -1.910367727279663
    3. '<|end|>' → logprob: -9.410367965698242
    4. '	arr' → logprob: -10.035367965698242
    5. ' ' → logprob: -11.910367965698242
    6. '[arr' → logprob: -12.160367965698242
    7. '(arr' → logprob: -12.660367965698242
    8. '<arr' → logprob: -13.660367965698242
    9. '$arr' → logprob: -14.285367965698242
    10. ' ' → logprob: -14.910367965698242

Token 50: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00016337241686414927
    2. '[' → logprob: -9.000163078308105
    3. '[i' → logprob: -10.250163078308105
    4. '```' → logprob: -13.625163078308105
    5. '[
' → logprob: -14.125163078308105
    6. '<|end|>' → logprob: -14.250163078308105
    7. '[js' → logprob: -14.625163078308105
    8. ']' → logprob: -15.000163078308105
    9. '][' → logprob: -15.125163078308105
    10. '\[' → logprob: -15.500163078308105

Token 51: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001317871210630983
    2. ' ]' → logprob: -9.125131607055664
    3. ']=' → logprob: -10.750131607055664
    4. '<|end|>' → logprob: -14.750131607055664
    5. '=' → logprob: -15.000131607055664
    6. '],' → logprob: -15.500131607055664
    7. ')' → logprob: -16.250131607055664
    8. ' =' → logprob: -16.500131607055664
    9. '']' → logprob: -17.000131607055664
    10. ']]' → logprob: -17.125131607055664

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10041994601488113
    2. '=' → logprob: -2.3504199981689453
    3. '<|end|>' → logprob: -8.725419998168945
    4. ',' → logprob: -10.350419998168945
    5. ' ' → logprob: -11.475419998168945
    6. ' =
' → logprob: -12.100419998168945
    7. ' =)' → logprob: -14.475419998168945
    8. ')' → logprob: -15.100419998168945
    9. '=
' → logprob: -15.225419998168945
    10. '<|end|>' → logprob: -15.225419998168945

Token 53: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.029756393283605576
    2. 'arr' → logprob: -3.5297563076019287
    3. '	arr' → logprob: -12.404756546020508
    4. '(arr' → logprob: -14.529756546020508
    5. '[arr' → logprob: -14.529756546020508
    6. '<arr' → logprob: -14.654756546020508
    7. ' ' → logprob: -15.654756546020508
    8. '$arr' → logprob: -15.654756546020508
    9. ' ' → logprob: -16.279756546020508
    10. '_arr' → logprob: -17.279756546020508

Token 54: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.31507840752601624
    2. '[j' → logprob: -1.3150783777236938
    3. '[' → logprob: -6.315078258514404
    4. '[
' → logprob: -12.940078735351562
    5. '```' → logprob: -13.440078735351562
    6. ' [' → logprob: -14.440078735351562
    7. 'i' → logprob: -14.690078735351562
    8. '   ' → logprob: -15.065078735351562
    9. '[js' → logprob: -15.565078735351562
    10. '[I' → logprob: -16.190078735351562

Token 55: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00334037933498621
    2. ' ,' → logprob: -6.003340244293213
    3. ']' → logprob: -7.503340244293213
    4. '],' → logprob: -8.253340721130371
    5. ',i' → logprob: -11.128340721130371
    6. '‌,' → logprob: -11.753340721130371
    7. ' ]' → logprob: -11.878340721130371
    8. '<|end|>' → logprob: -11.878340721130371
    9. ' ],' → logprob: -12.753340721130371
    10. 'arr' → logprob: -13.003340721130371

Token 56: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.25193095207214355
    2. ' arr' → logprob: -1.5019309520721436
    3. '	arr' → logprob: -13.626931190490723
    4. '(arr' → logprob: -15.626931190490723
    5. 'i' → logprob: -15.751931190490723
    6. '[arr' → logprob: -16.376930236816406
    7. ' ' → logprob: -16.626930236816406
    8. '           ' → logprob: -17.001930236816406
    9. '   ' → logprob: -17.376930236816406
    10. 'a' → logprob: -17.376930236816406

Token 57: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001175343873910606
    2. '[' → logprob: -6.751175403594971
    3. 'i' → logprob: -12.751174926757812
    4. '[
' → logprob: -14.001174926757812
    5. '[I' → logprob: -14.501174926757812
    6. '[j' → logprob: -14.876174926757812
    7. '```' → logprob: -15.626174926757812
    8. ' [' → logprob: -16.001174926757812
    9. '\[' → logprob: -16.751174926757812
    10. '<|end|>' → logprob: -17.751174926757812

Token 58: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01638096012175083
    2. ']' → logprob: -4.391380786895752
    3. '}' → logprob: -5.766380786895752
    4. '<|end|>' → logprob: -7.266380786895752
    5. '<|end|>' → logprob: -11.64138126373291
    6. ')}' → logprob: -12.14138126373291
    7. ')
' → logprob: -12.26638126373291
    8. '```' → logprob: -12.26638126373291
    9. ')]' → logprob: -12.89138126373291
    10. '   ' → logprob: -13.01638126373291

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43666672706604004
    2. '\n' → logprob: -1.81166672706604
    3. '
' → logprob: -2.06166672706604
    4. '    
' → logprob: -3.56166672706604
    5. '  
' → logprob: -4.311666488647461
    6. '```' → logprob: -4.936666488647461
    7. '\' → logprob: -6.061666488647461
    8. ' 
' → logprob: -6.436666488647461
    9. '\r' → logprob: -6.436666488647461
    10. '   
' → logprob: -6.561666488647461

Token 60: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.4522217810153961
    2. '   ' → logprob: -1.0772217512130737
    3. 'return' → logprob: -4.077221870422363
    4. '       ' → logprob: -6.577221870422363
    5. '    ' → logprob: -6.702221870422363
    6. '           ' → logprob: -6.952221870422363
    7. 'swap' → logprob: -7.077221870422363
    8. '```' → logprob: -7.952221870422363
    9. '    
' → logprob: -8.202221870422363
    10. ' return' → logprob: -8.577221870422363

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -11.625009536743164
    3. '[I' → logprob: -14.625009536743164
    4. '\[' → logprob: -16.625009536743164
    5. '[s' → logprob: -17.375009536743164
    6. '[r' → logprob: -17.625009536743164
    7. '```' → logprob: -18.000009536743164
    8. '[...,' → logprob: -18.375009536743164
    9. ' ' → logprob: -18.625009536743164
    10. '[++' → logprob: -18.750009536743164

Token 62: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015158153837546706
    2. ' +' → logprob: -6.501515865325928
    3. '+,' → logprob: -11.37651538848877
    4. ',' → logprob: -14.50151538848877
    5. '+i' → logprob: -14.62651538848877
    6. '+]' → logprob: -14.75151538848877
    7. '+r' → logprob: -15.50151538848877
    8. '+j' → logprob: -16.001516342163086
    9. '+
' → logprob: -16.126516342163086
    10. '+k' → logprob: -16.251516342163086

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. '+' → logprob: -12.125011444091797
    3. ' ' → logprob: -12.250011444091797
    4. ']' → logprob: -14.500011444091797
    5. '```' → logprob: -15.125011444091797
    6. '<|end|>' → logprob: -15.500011444091797
    7. ',' → logprob: -16.000011444091797
    8. '   ' → logprob: -16.375011444091797
    9. '  ' → logprob: -17.500011444091797
    10. 'r' → logprob: -18.000011444091797

Token 64: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004420505370944738
    2. '],' → logprob: -5.504420280456543
    3. ',' → logprob: -8.129420280456543
    4. ' ]' → logprob: -10.004420280456543
    5. '']' → logprob: -13.754420280456543
    6. ' ],' → logprob: -15.129420280456543
    7. '`]' → logprob: -15.504420280456543
    8. ']
' → logprob: -16.37942123413086
    9. '"]' → logprob: -16.50442123413086
    10. '<|end|>' → logprob: -16.50442123413086

Token 65: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.014168326742947102
    2. 'arr' → logprob: -4.2641682624816895
    3. '	arr' → logprob: -12.389168739318848
    4. ' ' → logprob: -15.764168739318848
    5. '<|end|>' → logprob: -15.764168739318848
    6. '(arr' → logprob: -16.01416778564453
    7. ' ' → logprob: -16.13916778564453
    8. '[arr' → logprob: -16.63916778564453
    9. '<arr' → logprob: -17.38916778564453
    10. '$arr' → logprob: -17.88916778564453

Token 66: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -8.08944896562025e-05
    2. '[' → logprob: -9.500081062316895
    3. '[arr' → logprob: -12.875081062316895
    4. '<|end|>' → logprob: -13.500081062316895
    5. '[i' → logprob: -14.750081062316895
    6. 'r' → logprob: -14.875081062316895
    7. '[
' → logprob: -15.125081062316895
    8. '[j' → logprob: -15.500081062316895
    9. '[a' → logprob: -15.625081062316895
    10. '	r' → logprob: -16.125080108642578

Token 67: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.935296834039036e-06
    2. ' ]' → logprob: -13.25000286102295
    3. ']=' → logprob: -14.00000286102295
    4. '   ' → logprob: -16.125003814697266
    5. '']' → logprob: -16.750003814697266
    6. '],' → logprob: -17.250003814697266
    7. ')' → logprob: -17.750003814697266
    8. '=' → logprob: -18.125003814697266
    9. '[' → logprob: -18.500003814697266
    10. '`]' → logprob: -18.500003814697266

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004640049301087856
    2. ' =' → logprob: -5.379640102386475
    3. ',' → logprob: -10.879639625549316
    4. '=
' → logprob: -14.629639625549316
    5. '=

' → logprob: -14.754639625549316
    6. '<|end|>' → logprob: -15.879639625549316
    7. '=}' → logprob: -17.879640579223633
    8. '＝' → logprob: -18.129640579223633
    9. '   ' → logprob: -18.129640579223633
    10. ')' → logprob: -18.504640579223633

Token 69: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.023251185193657875
    2. 'arr' → logprob: -3.7732512950897217
    3. '	arr' → logprob: -13.0232515335083
    4. ' ' → logprob: -13.6482515335083
    5. ' ' → logprob: -13.6482515335083
    6. '(arr' → logprob: -14.6482515335083
    7. '[arr' → logprob: -14.7732515335083
    8. '<arr' → logprob: -15.6482515335083
    9. '$arr' → logprob: -17.273250579833984
    10. 'r' → logprob: -17.398250579833984

Token 70: '[r' (ID: 33265)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00024096666311379522
    2. '[' → logprob: -8.37524127960205
    3. '[r' → logprob: -11.62524127960205
    4. 'i' → logprob: -13.87524127960205
    5. ' [' → logprob: -15.87524127960205
    6. '[I' → logprob: -16.125240325927734
    7. '[j' → logprob: -16.750240325927734
    8. '[
' → logprob: -17.000240325927734
    9. '[s' → logprob: -17.125240325927734
    10. '```' → logprob: -17.375240325927734

Token 71: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.958325295476243e-05
    2. ',' → logprob: -10.125079154968262
    3. '],' → logprob: -10.875079154968262
    4. ' ]' → logprob: -11.250079154968262
    5. ']
' → logprob: -13.000079154968262
    6. '']' → logprob: -13.375079154968262
    7. '   ' → logprob: -14.000079154968262
    8. '[i' → logprob: -14.375079154968262
    9. ']

' → logprob: -14.375079154968262
    10. '`]' → logprob: -15.250079154968262

Token 72: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.20142309367656708
    2. ' arr' → logprob: -1.7014230489730835
    3. '	arr' → logprob: -11.951422691345215
    4. '   ' → logprob: -12.826422691345215
    5. ' ' → logprob: -14.701422691345215
    6. '  ' → logprob: -16.57642364501953
    7. '[arr' → logprob: -17.45142364501953
    8. ' ' → logprob: -17.57642364501953
    9. '(arr' → logprob: -17.70142364501953
    10. '$arr' → logprob: -18.07642364501953

Token 73: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011989205377176404
    2. '[' → logprob: -7.001198768615723
    3. 'i' → logprob: -8.251198768615723
    4. ',i' → logprob: -11.626198768615723
    5. ']' → logprob: -12.376198768615723
    6. ' i' → logprob: -12.626198768615723
    7. '[I' → logprob: -12.626198768615723
    8. '`' → logprob: -13.501198768615723
    9. '(i' → logprob: -13.751198768615723
    10. '   ' → logprob: -14.251198768615723

Token 74: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.896309739408025e-07
    2. ' +' → logprob: -14.250000953674316
    3. '+
' → logprob: -15.875000953674316
    4. '+]' → logprob: -17.75
    5. '+i' → logprob: -19.125
    6. ']+' → logprob: -19.25
    7. '1' → logprob: -19.5
    8. '+

' → logprob: -19.625
    9. '＋' → logprob: -19.625
    10. '<|end|>' → logprob: -20.125

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. ']' → logprob: -17.125
    4. '+' → logprob: -17.5
    5. '```' → logprob: -18.5
    6. '１' → logprob: -20.25
    7. '   ' → logprob: -20.25
    8. '`' → logprob: -21.125
    9. ')' → logprob: -21.125
    10. '۱' → logprob: -21.25

Token 76: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005243360530585051
    2. ']' → logprob: -5.255243301391602
    3. ' )' → logprob: -13.005243301391602
    4. '+' → logprob: -13.255243301391602
    5. '[' → logprob: -13.630243301391602
    6. ')]' → logprob: -13.630243301391602
    7. '   ' → logprob: -14.005243301391602
    8. '}' → logprob: -14.255243301391602
    9. ')
' → logprob: -14.255243301391602
    10. '])' → logprob: -15.505243301391602

Token 77: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5261169075965881
    2. '   ' → logprob: -1.2761168479919434
    3. 'return' → logprob: -2.1511168479919434
    4. '
' → logprob: -4.901116847991943
    5. '    
' → logprob: -5.776116847991943
    6. '	return' → logprob: -6.401116847991943
    7. '```' → logprob: -7.901116847991943
    8. ':return' → logprob: -8.026117324829102
    9. '<|end|>' → logprob: -8.276117324829102
    10. '  
' → logprob: -8.901117324829102

Token 78: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.025118231773376465
    2. '   ' → logprob: -4.275118350982666
    3. ' return' → logprob: -4.525118350982666
    4. '	return' → logprob: -10.025117874145508
    5. ':return' → logprob: -11.525117874145508
    6. '    
' → logprob: -12.775117874145508
    7. '```' → logprob: -13.275117874145508
    8. ' ' → logprob: -13.900117874145508
    9. '  ' → logprob: -14.900117874145508
    10. 'Return' → logprob: -15.150117874145508

Token 79: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931478977203369
    2. ' i' → logprob: -0.6931478977203369
    3. '	i' → logprob: -14.193147659301758
    4. ' ' → logprob: -16.318147659301758
    5. '   ' → logprob: -17.443147659301758
    6. '```' → logprob: -17.568147659301758
    7. '(i' → logprob: -17.943147659301758
    8. '`' → logprob: -18.818147659301758
    9. ' ' → logprob: -19.068147659301758
    10. '  ' → logprob: -19.318147659301758

Token 80: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.1054253011243418e-05
    2. ' +' → logprob: -10.875020980834961
    3. '+
' → logprob: -13.125020980834961
    4. '+i' → logprob: -18.00002098083496
    5. '＋' → logprob: -19.12502098083496
    6. '+

' → logprob: -19.25002098083496
    7. ' +
' → logprob: -19.75002098083496
    8. '+[' → logprob: -19.75002098083496
    9. '1' → logprob: -20.00002098083496
    10. '<|end|>' → logprob: -20.12502098083496

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '<|end|>' → logprob: -18.5
    4. '```' → logprob: -19.125
    5. '۱' → logprob: -21.125
    6. '`' → logprob: -21.25
    7. '2' → logprob: -22.0
    8. '[' → logprob: -22.125
    9. '１' → logprob: -22.375
    10. 'def' → logprob: -23.0

Token 82: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: 'num' (ID: 4571)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8102614879608154
    2. '<|end|>' → logprob: -1.5602614879608154
    3. '#' → logprob: -1.9352614879608154
    4. '```' → logprob: -2.3102614879608154
    5. 'def' → logprob: -3.3102614879608154
    6. '' → logprob: -4.1852617263793945
    7. '\n' → logprob: -4.3102617263793945
    8. 'n' → logprob: -5.0602617263793945
    9. '

' → logprob: -5.3102617263793945
    10. '\' → logprob: -5.3102617263793945

Token 84: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020524142310023308
    2. '_' → logprob: -4.020524024963379
    3. '_items' → logprob: -7.270524024963379
    4. '[' → logprob: -8.145524024963379
    5. ')' → logprob: -8.395524024963379
    6. '_array' → logprob: -8.520524024963379
    7. '_arr' → logprob: -8.645524024963379
    8. '_s' → logprob: -9.145524024963379
    9. '[]' → logprob: -9.145524024963379
    10. '_numbers' → logprob: -9.770524024963379

Token 85: ' int' (ID: 677)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8179575204849243
    2. ' ' → logprob: -1.1929575204849243
    3. '[int' → logprob: -1.8179575204849243
    4. '10' → logprob: -2.9429574012756348
    5. ' int' → logprob: -3.8179574012756348
    6. '[' → logprob: -4.317957401275635
    7. 'int' → logprob: -5.442957401275635
    8. ' []' → logprob: -8.067957878112793
    9. '20' → logprob: -9.442957878112793
    10. '100' → logprob: -9.567957878112793

Token 86: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010960459476336837
    2. '('' → logprob: -7.001096248626709
    3. '("' → logprob: -9.62609577178955
    4. ' (' → logprob: -10.12609577178955
    5. '(input' → logprob: -11.25109577178955
    6. '(`' → logprob: -11.50109577178955
    7. '("("' → logprob: -11.50109577178955
    8. ' ' → logprob: -11.75109577178955
    9. '()' → logprob: -12.12609577178955
    10. '(
' → logprob: -12.25109577178955

Token 87: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20697468519210815
    2. '('' → logprob: -2.081974744796753
    3. '("("' → logprob: -3.081974744796753
    4. '()' → logprob: -4.331974506378174
    5. '("' → logprob: -6.831974506378174
    6. ')' → logprob: -7.206974506378174
    7. '("")' → logprob: -7.456974506378174
    8. '())' → logprob: -8.206974983215332
    9. '(""))' → logprob: -8.456974983215332
    10. '("(' → logprob: -9.331974983215332

Token 88: 'num' (ID: 4571)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.05491207167506218
    2. ' arr' → logprob: -3.3049120903015137
    3. '
' → logprob: -5.679912090301514
    4. '<|end|>' → logprob: -5.929912090301514
    5. ' 
' → logprob: -6.054912090301514
    6. 'n' → logprob: -6.429912090301514
    7. '	arr' → logprob: -6.929912090301514
    8. '[arr' → logprob: -7.179912090301514
    9. 'a' → logprob: -7.304912090301514
    10. ' ' → logprob: -7.554912090301514

Token 89: '_list' (ID: 4162)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.677998960018158
    2. ' =' → logprob: -0.802998960018158
    3. '.' → logprob: -3.5529990196228027
    4. '[' → logprob: -4.802999019622803
    5. '[:]' → logprob: -5.302999019622803
    6. '.append' → logprob: -6.427999019622803
    7. ')' → logprob: -8.427998542785645
    8. '.setdefault' → logprob: -9.177998542785645
    9. '(' → logprob: -9.427998542785645
    10. '<|end|>' → logprob: -9.677998542785645

Token 91: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.14261406660079956
    2. ' []' → logprob: -2.6426141262054443
    3. 'list' → logprob: -3.1426141262054443
    4. ' [' → logprob: -4.142613887786865
    5. '[list' → logprob: -6.642613887786865
    6. '[]' → logprob: -7.267613887786865
    7. '[' → logprob: -8.017614364624023
    8. '[input' → logprob: -8.142614364624023
    9. ' input' → logprob: -10.642614364624023
    10. '[int' → logprob: -10.892614364624023

Token 92: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0008607231429778039
    2. ' int' → logprob: -7.750860691070557
    3. 'num' → logprob: -7.875860691070557
    4. '0' → logprob: -10.375861167907715
    5. ')' → logprob: -12.000861167907715
    6. ']int' → logprob: -12.000861167907715
    7. '(int' → logprob: -13.000861167907715
    8. 'i' → logprob: -13.375861167907715
    9. ']' → logprob: -14.125861167907715
    10. ' num' → logprob: -14.875861167907715

Token 93: '(s' (ID: 1858)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07171158492565155
    2. '(' → logprob: -2.696711540222168
    3. '(x' → logprob: -6.446711540222168
    4. '(i' → logprob: -10.196711540222168
    5. '()]' → logprob: -10.321711540222168
    6. '()' → logprob: -10.696711540222168
    7. '(
' → logprob: -10.821711540222168
    8. ' (' → logprob: -10.946711540222168
    9. 'input' → logprob: -11.321711540222168
    10. '(

' → logprob: -11.821711540222168

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3168032467365265
    2. '(input' → logprob: -1.441803216934204
    3. 'or' → logprob: -3.566803216934204
    4. '(x' → logprob: -6.066803455352783
    5. '())' → logprob: -6.691803455352783
    6. 'input' → logprob: -7.191803455352783
    7. '(' → logprob: -7.191803455352783
    8. '(i' → logprob: -7.191803455352783
    9. '(s' → logprob: -8.691802978515625
    10. 'for' → logprob: -8.691802978515625

Token 95: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6301952004432678
    2. 'input' → logprob: -1.505195140838623
    3. '(input' → logprob: -2.130195140838623
    4. ')' → logprob: -2.505195140838623
    5. ' for' → logprob: -3.255195140838623
    6. ' input' → logprob: -5.755195140838623
    7. '(' → logprob: -6.630195140838623
    8. '=input' → logprob: -7.505195140838623
    9. '()' → logprob: -7.755195140838623
    10. ' ' → logprob: -8.380195617675781

Token 96: ' s' (ID: 265)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03638676181435585
    2. 'input' → logprob: -4.036386966705322
    3. ' ' → logprob: -4.411386966705322
    4. ' s' → logprob: -5.161386966705322
    5. 's' → logprob: -9.411386489868164
    6. '  ' → logprob: -9.536386489868164
    7. ' in' → logprob: -10.536386489868164
    8. ' ' → logprob: -12.161386489868164
    9. '_' → logprob: -12.661386489868164
    10. '(input' → logprob: -12.786386489868164

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25393494963645935
    2. 'in' → logprob: -1.5039349794387817
    3. 's' → logprob: -7.253934860229492
    4. '_' → logprob: -7.878934860229492
    5. ' ' → logprob: -8.503934860229492
    6. '(' → logprob: -8.753934860229492
    7. '(s' → logprob: -8.878934860229492
    8. ')' → logprob: -9.128934860229492
    9. ' s' → logprob: -9.753934860229492
    10. 'input' → logprob: -9.878934860229492

Token 98: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022859513759613
    2. ' input' → logprob: -1.9102286100387573
    3. 'range' → logprob: -13.285228729248047
    4. '(input' → logprob: -13.535228729248047
    5. ' ' → logprob: -14.035228729248047
    6. ' range' → logprob: -15.285228729248047
    7. '=input' → logprob: -16.285228729248047
    8. '<input' → logprob: -16.785228729248047
    9. '	input' → logprob: -16.785228729248047
    10. ')' → logprob: -17.535228729248047

Token 99: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004701157100498676
    2. '()' → logprob: -5.504701137542725
    3. '(' → logprob: -7.754701137542725
    4. '()]' → logprob: -8.879701614379883
    5. '('' → logprob: -10.004701614379883
    6. '())' → logprob: -12.504701614379883
    7. '("' → logprob: -12.504701614379883
    8. ' ().' → logprob: -14.629701614379883
    9. '()].' → logprob: -14.879701614379883
    10. '("("' → logprob: -15.254701614379883

Token 100: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004088966641575098
    2. 'strip' → logprob: -5.504088878631592
    3. 'rstrip' → logprob: -11.50408935546875
    4. ' split' → logprob: -14.87908935546875
    5. 'replace' → logprob: -17.00408935546875
    6. '(split' → logprob: -17.00408935546875
    7. '.split' → logprob: -18.25408935546875
    8. 'spl' → logprob: -18.50408935546875
    9. ' strip' → logprob: -18.75408935546875
    10. 'plit' → logprob: -19.75408935546875

Token 101: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0042121936567127705
    2. '()' → logprob: -6.004212379455566
    3. '(' → logprob: -7.254212379455566
    4. '('' → logprob: -7.629212379455566
    5. '())' → logprob: -7.629212379455566
    6. ')]' → logprob: -10.629212379455566
    7. ']' → logprob: -10.879212379455566
    8. '()]
' → logprob: -11.879212379455566
    9. '("' → logprob: -12.629212379455566
    10. '')]' → logprob: -14.629212379455566

Token 102: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025064177811145782
    2. ')]' → logprob: -3.77506422996521
    3. '()]' → logprob: -6.525063991546631
    4. ')' → logprob: -8.900064468383789
    5. ' ]' → logprob: -9.150064468383789
    6. '])' → logprob: -9.400064468383789
    7. ']
' → logprob: -11.900064468383789
    8. '`]' → logprob: -12.275064468383789
    9. '']' → logprob: -12.400064468383789
    10. '"]' → logprob: -13.150064468383789

Token 103: 'idx' (ID: 13196)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1310597062110901
    2. 'p' → logprob: -3.1310596466064453
    3. 'pivot' → logprob: -3.2560596466064453
    4. 'q' → logprob: -4.006059646606445
    5. 'k' → logprob: -4.506059646606445
    6. 'low' → logprob: -5.756059646606445
    7. 'quick' → logprob: -6.506059646606445
    8. 'for' → logprob: -6.506059646606445
    9. 'l' → logprob: -6.631059646606445
    10. 'if' → logprob: -6.631059646606445

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9459389448165894
    2. '=' → logprob: -1.0709389448165894
    3. '_' → logprob: -1.3209389448165894
    4. '_=' → logprob: -6.445939064025879
    5. 's' → logprob: -8.820939064025879
    6. '(' → logprob: -9.445939064025879
    7. 'ex' → logprob: -9.445939064025879
    8. ' ' → logprob: -9.570939064025879
    9. ',' → logprob: -9.570939064025879
    10. ')' → logprob: -11.195939064025879

Token 105: ' partition' (ID: 31512)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5348874926567078
    2. 'partition' → logprob: -0.9098874926567078
    3. ' ' → logprob: -5.034887313842773
    4. ' partition' → logprob: -5.909887313842773
    5. 'len' → logprob: -6.159887313842773
    6. 'num' → logprob: -8.784887313842773
    7. ' len' → logprob: -9.534887313842773
    8. 'part' → logprob: -10.659887313842773
    9. 'pivot' → logprob: -10.784887313842773
    10. '.partition' → logprob: -10.909887313842773

Token 106: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.02338279038667679
    2. '(' → logprob: -3.7733829021453857
    3. '(arr' → logprob: -9.398383140563965
    4. '(
' → logprob: -10.398383140563965
    5. '(nums' → logprob: -11.148383140563965
    6. ' (' → logprob: -12.023383140563965
    7. '(

' → logprob: -13.398383140563965
    8. '(len' → logprob: -14.773383140563965
    9. '<num' → logprob: -15.273383140563965
    10. '(n' → logprob: -15.398383140563965

Token 107: '_list' (ID: 4162)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.05693651735782623
    2. ',num' → logprob: -3.181936502456665
    3. 'num' → logprob: -4.806936740875244
    4. ',' → logprob: -5.931936740875244
    5. '_list' → logprob: -6.681936740875244
    6. '(' → logprob: -7.681936740875244
    7. ')' → logprob: -7.931936740875244
    8. '_num' → logprob: -8.306936264038086
    9. '=num' → logprob: -8.431936264038086
    10. '<num' → logprob: -8.931936264038086

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13468170166015625
    2. '(' → logprob: -2.1346817016601562
    3. ',num' → logprob: -5.384681701660156
    4. '(num' → logprob: -6.259681701660156
    5. ' ,' → logprob: -7.009681701660156
    6. '0' → logprob: -8.384681701660156
    7. '(
' → logprob: -10.134681701660156
    8. ')' → logprob: -10.884681701660156
    9. ' (' → logprob: -11.134681701660156
    10. ',
' → logprob: -12.509681701660156

Token 109: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008054602658376098
    2. ' ' → logprob: -7.125805377960205
    3. '<|end|>' → logprob: -14.750805854797363
    4. ')' → logprob: -15.375805854797363
    5. ' 
' → logprob: -16.625804901123047
    6. '۰' → logprob: -16.875804901123047
    7. '```' → logprob: -17.250804901123047
    8. '
' → logprob: -17.625804901123047
    9. '1' → logprob: -17.750804901123047
    10. '   ' → logprob: -17.750804901123047

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -17.62502098083496
    4. ')' → logprob: -17.75002098083496
    5. '
' → logprob: -17.87502098083496
    6. '۰' → logprob: -18.12502098083496
    7. '```' → logprob: -18.37502098083496
    8. '1' → logprob: -18.50002098083496
    9. ',' → logprob: -19.00002098083496
    10. ' 
' → logprob: -19.25002098083496

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022079506888985634
    2. ',num' → logprob: -6.7522077560424805
    3. ' ,' → logprob: -6.8772077560424805
    4. ',len' → logprob: -12.87720775604248
    5. '‌,' → logprob: -13.37720775604248
    6. ',
' → logprob: -14.87720775604248
    7. ' ' → logprob: -15.37720775604248
    8. '0' → logprob: -15.75220775604248
    9. '1' → logprob: -15.87720775604248
    10. '`,' → logprob: -16.002208709716797

Token 112: ' len' (ID: 4631)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.00257328269071877
    2. ' num' → logprob: -6.002573490142822
    3. 'len' → logprob: -9.252573013305664
    4. ' len' → logprob: -13.502573013305664
    5. ' ' → logprob: -16.377573013305664
    6. '	num' → logprob: -16.752573013305664
    7. '[num' → logprob: -17.127573013305664
    8. '<num' → logprob: -17.127573013305664
    9. '(num' → logprob: -17.627573013305664
    10. '   ' → logprob: -18.752573013305664

Token 113: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -4.930552313453518e-05
    2. '(' → logprob: -10.000049591064453
    3. 'num' → logprob: -12.625049591064453
    4. '-' → logprob: -16.375049591064453
    5. '=num' → logprob: -16.375049591064453
    6. '<num' → logprob: -16.500049591064453
    7. '-num' → logprob: -16.625049591064453
    8. '	num' → logprob: -16.750049591064453
    9. ',num' → logprob: -17.000049591064453
    10. ' num' → logprob: -17.250049591064453

Token 114: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0328100323677063
    2. '-' → logprob: -3.7828099727630615
    3. ')' → logprob: -5.157810211181641
    4. ' -' → logprob: -6.282810211181641
    5. ')-' → logprob: -6.407810211181641
    6. 'List' → logprob: -9.65781021118164
    7. '-list' → logprob: -10.03281021118164
    8. '_num' → logprob: -10.15781021118164
    9. '_' → logprob: -10.65781021118164
    10. '_lst' → logprob: -10.78281021118164

Token 115: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0910097137093544
    2. ' -' → logprob: -2.5910096168518066
    3. ')' → logprob: -4.466009616851807
    4. ')-' → logprob: -7.591009616851807
    5. '()-' → logprob: -10.841010093688965
    6. ' ' → logprob: -10.966010093688965
    7. '1' → logprob: -12.716010093688965
    8. ' )' → logprob: -12.966010093688965
    9. '```' → logprob: -13.466010093688965
    10. '<|end|>' → logprob: -13.841010093688965

Token 116: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0022357820998877287
    2. ' -' → logprob: -6.1272358894348145
    3. ')' → logprob: -10.002235412597656
    4. ')-' → logprob: -12.252235412597656
    5. '()-' → logprob: -15.252235412597656
    6. ' ' → logprob: -16.002235412597656
    7. '–' → logprob: -16.377235412597656
    8. '<|end|>' → logprob: -16.752235412597656
    9. '-)' → logprob: -17.127235412597656
    10. '```' → logprob: -17.127235412597656

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029753733426332474
    2. ' ' → logprob: -3.5297536849975586
    3. ')' → logprob: -13.404753684997559
    4. '```' → logprob: -14.279753684997559
    5. '   ' → logprob: -14.904753684997559
    6. '  ' → logprob: -15.529753684997559
    7. '<|end|>' → logprob: -15.529753684997559
    8. ' ' → logprob: -16.404754638671875
    9. '
' → logprob: -16.967254638671875
    10. ' )' → logprob: -17.592254638671875

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. ')' → logprob: -16.87500762939453
    4. '```' → logprob: -17.50000762939453
    5. '   ' → logprob: -18.00000762939453
    6. '2' → logprob: -18.25000762939453
    7. '  ' → logprob: -20.00000762939453
    8. '۱' → logprob: -20.62500762939453
    9. '１' → logprob: -20.75000762939453
    10. '<|end|>' → logprob: -20.87500762939453

Token 119: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -13.875000953674316
    3. '))' → logprob: -16.000001907348633
    4. ' )' → logprob: -16.750001907348633
    5. ')#' → logprob: -17.625001907348633
    6. ')`' → logprob: -18.750001907348633
    7. ')

' → logprob: -19.375001907348633
    8. '),' → logprob: -19.625001907348633
    9. '())' → logprob: -19.875001907348633
    10. ')...' → logprob: -19.875001907348633

Token 120: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4855663721391466e-05
    2. 'for' → logprob: -11.500015258789062
    3. 'pr' → logprob: -13.625015258789062
    4. 'prin' → logprob: -13.625015258789062
    5. 'if' → logprob: -13.875015258789062
    6. '
' → logprob: -14.000015258789062
    7. '#print' → logprob: -15.500015258789062
    8. 'pri' → logprob: -16.000015258789062
    9. ' print' → logprob: -16.125015258789062
    10. '```' → logprob: -17.500015258789062

Token 121: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08759384602308273
    2. '(num' → logprob: -2.5875937938690186
    3. '(idx' → logprob: -4.962594032287598
    4. '("("' → logprob: -6.712594032287598
    5. '('' → logprob: -8.462594032287598
    6. '((' → logprob: -9.087594032287598
    7. '(len' → logprob: -10.087594032287598
    8. '(nums' → logprob: -10.962594032287598
    9. '(x' → logprob: -10.962594032287598
    10. '(index' → logprob: -11.587594032287598

Token 122: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -4.751746746478602e-05
    2. ' num' → logprob: -10.00004768371582
    3. '(num' → logprob: -13.50004768371582
    4. '[num' → logprob: -14.37504768371582
    5. '	num' → logprob: -19.37504768371582
    6. 'nums' → logprob: -19.62504768371582
    7. '<num' → logprob: -19.62504768371582
    8. ')' → logprob: -19.87504768371582
    9. ',num' → logprob: -20.50004768371582
    10. 'idx' → logprob: -21.12504768371582

Token 123: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.125000953674316
    3. '_lst' → logprob: -15.250000953674316
    4. '_idx' → logprob: -17.25
    5. '_lists' → logprob: -18.75
    6. ' _' → logprob: -19.0
    7. '_l' → logprob: -20.0
    8. '_List' → logprob: -20.875
    9. '_ls' → logprob: -20.875
    10. 'List' → logprob: -21.0

Token 124: '[:' (ID: 7808)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035880717914551497
    2. ',)' → logprob: -6.2535881996154785
    3. ',' → logprob: -6.5035881996154785
    4. '[:' → logprob: -8.87858772277832
    5. '[idx' → logprob: -12.00358772277832
    6. '[' → logprob: -12.25358772277832
    7. ',:)' → logprob: -12.50358772277832
    8. ',index' → logprob: -13.62858772277832
    9. ' )' → logprob: -13.87858772277832
    10. ',end' → logprob: -14.00358772277832

Token 125: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.60414821645827e-06
    2. ' idx' → logprob: -12.625004768371582
    3. '(idx' → logprob: -14.000004768371582
    4. '	idx' → logprob: -14.750004768371582
    5. 'index' → logprob: -17.250003814697266
    6. '_idx' → logprob: -17.750003814697266
    7. '   ' → logprob: -18.375003814697266
    8. '(' → logprob: -18.375003814697266
    9. '[idx' → logprob: -18.625003814697266
    10. '.idx' → logprob: -19.500003814697266

Token 126: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.032643791288137436
    2. '])' → logprob: -4.157643795013428
    3. '],' → logprob: -4.657643795013428
    4. ' +' → logprob: -5.032643795013428
    5. ',' → logprob: -8.03264331817627
    6. ' ])' → logprob: -9.65764331817627
    7. ']' → logprob: -10.53264331817627
    8. ' ],' → logprob: -10.78264331817627
    9. ')' → logprob: -11.65764331817627
    10. '1' → logprob: -12.03264331817627

Token 127: ' end' (ID: 1268)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.07267090678215027
    2. ' num' → logprob: -3.3226709365844727
    3. '*num' → logprob: -3.6976709365844727
    4. '*' → logprob: -4.822670936584473
    5. ' *' → logprob: -6.947670936584473
    6. 'arr' → logprob: -9.072670936584473
    7. 'idx' → logprob: -9.572670936584473
    8. '[num' → logprob: -11.072670936584473
    9. ',num' → logprob: -11.447670936584473
    10. 'end' → logprob: -11.447670936584473

Token 128: '="")
' (ID: 154840)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '='' → logprob: -0.2180095762014389
    2. '=',' → logprob: -2.5930094718933105
    3. ')' → logprob: -3.4680094718933105
    4. ''' → logprob: -3.8430094718933105
    5. '=' → logprob: -4.0930094718933105
    6. '',' → logprob: -4.0930094718933105
    7. '=",' → logprob: -4.0930094718933105
    8. '="' → logprob: -4.9680094718933105
    9. ',' → logprob: -5.2180094718933105
    10. '"' → logprob: -5.5930094718933105

Token 129: 'print' (ID: 1598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9484941363334656
    2. '"' → logprob: -1.0734941959381104
    3. ')' → logprob: -1.9484941959381104
    4. ''' → logprob: -2.4484941959381104
    5. ' ,' → logprob: -4.573493957519531
    6. ' )' → logprob: -4.573493957519531
    7. ' ' → logprob: -4.698493957519531
    8. '+' → logprob: -5.323493957519531
    9. 'print' → logprob: -6.573493957519531
    10. '<|end|>' → logprob: -6.698493957519531

Token 130: '("' (ID: 568)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.28679874539375305
    2. '(' → logprob: -1.7867987155914307
    3. '("' → logprob: -3.0367987155914307
    4. '()' → logprob: -4.41179895401001
    5. '(",' → logprob: -4.66179895401001
    6. '('' → logprob: -4.66179895401001
    7. '(*)' → logprob: -6.91179895401001
    8. '(',' → logprob: -7.53679895401001
    9. '(","' → logprob: -7.66179895401001
    10. '(','' → logprob: -8.661798477172852

Token 131: ' ["' (ID: 9129)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18368008732795715
    2. ',num' → logprob: -2.9336800575256348
    3. '"' → logprob: -3.0586800575256348
    4. ')' → logprob: -3.1836800575256348
    5. 'num' → logprob: -4.933680057525635
    6. ' )' → logprob: -5.058680057525635
    7. ' ,' → logprob: -5.683680057525635
    8. '*num' → logprob: -5.933680057525635
    9. ''' → logprob: -6.683680057525635
    10. 'idx' → logprob: -6.933680057525635

Token 132: ' +' (ID: 659)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.23831772804260254
    2. '+' → logprob: -2.3633177280426025
    3. ',num' → logprob: -2.8633177280426025
    4. 'arr' → logprob: -3.2383177280426025
    5. ',' → logprob: -4.363317489624023
    6. ')' → logprob: -5.738317489624023
    7. '*num' → logprob: -6.488317489624023
    8. '{' → logprob: -6.738317489624023
    9. 'print' → logprob: -7.238317489624023
    10. '<num' → logprob: -7.363317489624023

Token 133: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -7.97024549683556e-05
    2. ' str' → logprob: -9.500080108642578
    3. 'f' → logprob: -12.375080108642578
    4. '(str' → logprob: -15.125080108642578
    5. 'num' → logprob: -15.875080108642578
    6. ' ' → logprob: -16.875080108642578
    7. '   ' → logprob: -17.000080108642578
    8. '  ' → logprob: -17.125080108642578
    9. 'arr' → logprob: -17.250080108642578
    10. '	str' → logprob: -17.625080108642578

Token 134: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.001674587489105761
    2. '(idx' → logprob: -6.751674652099609
    3. 'num' → logprob: -7.626674652099609
    4. 'idx' → logprob: -11.62667465209961
    5. '(' → logprob: -12.37667465209961
    6. '(arr' → logprob: -13.25167465209961
    7. ' num' → logprob: -14.25167465209961
    8. ',num' → logprob: -14.87667465209961
    9. '	num' → logprob: -15.12667465209961
    10. '=num' → logprob: -15.75167465209961

Token 135: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.10491866618394852
    2. '+' → logprob: -2.4799187183380127
    3. ')' → logprob: -4.604918479919434
    4. '[idx' → logprob: -6.104918479919434
    5. '1' → logprob: -6.854918479919434
    6. 'idx' → logprob: -6.979918479919434
    7. '(idx' → logprob: -8.229918479919434
    8. ']' → logprob: -8.729918479919434
    9. '])' → logprob: -8.979918479919434
    10. ' +' → logprob: -9.229918479919434

Token 136: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.531315314830863e-06
    2. 'idx' → logprob: -13.250003814697266
    3. '[' → logprob: -13.625003814697266
    4. '[i' → logprob: -15.250003814697266
    5. '[index' → logprob: -16.625003814697266
    6. ' idx' → logprob: -16.750003814697266
    7. '	idx' → logprob: -17.000003814697266
    8. '[
' → logprob: -17.375003814697266
    9. '(idx' → logprob: -17.500003814697266
    10. '_idx' → logprob: -19.875003814697266

Token 137: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00047094907495193183
    2. ')' → logprob: -8.750471115112305
    3. ']' → logprob: -8.875471115112305
    4. '])+' → logprob: -9.125471115112305
    5. '"])' → logprob: -10.000471115112305
    6. ''])' → logprob: -12.000471115112305
    7. ']),' → logprob: -13.000471115112305
    8. ']+' → logprob: -13.125471115112305
    9. ')])' → logprob: -13.125471115112305
    10. ' ])' → logprob: -13.125471115112305

Token 138: ' +' (ID: 659)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.03481622412800789
    2. ']' → logprob: -3.409816265106201
    3. ')' → logprob: -7.534816265106201
    4. '+"]' → logprob: -8.034815788269043
    5. '']' → logprob: -8.909815788269043
    6. '"],' → logprob: -9.034815788269043
    7. '],' → logprob: -11.534815788269043
    8. ' "]' → logprob: -11.659815788269043
    9. '")' → logprob: -11.909815788269043
    10. ',' → logprob: -11.909815788269043

Token 139: ' "]' (ID: 35976)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.0009115827269852161
    2. '"],' → logprob: -7.125911712646484
    3. ']' → logprob: -9.375911712646484
    4. '']' → logprob: -11.375911712646484
    5. ' "]' → logprob: -11.750911712646484
    6. '"' → logprob: -13.125911712646484
    7. '],' → logprob: -15.375911712646484
    8. ']"' → logprob: -15.375911712646484
    9. '`]' → logprob: -15.875911712646484
    10. '"]
' → logprob: -16.375911712646484

Token 140: ' ",' (ID: 6813)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.023500405251979828
    2. ')")' → logprob: -4.398500442504883
    3. ')' → logprob: -4.523500442504883
    4. '",' → logprob: -10.023500442504883
    5. ')"' → logprob: -12.023500442504883
    6. '}")' → logprob: -12.148500442504883
    7. ',' → logprob: -12.273500442504883
    8. '"' → logprob: -12.273500442504883
    9. ')",' → logprob: -12.648500442504883
    10. '+")' → logprob: -13.023500442504883

Token 141: ' end' (ID: 1268)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1367184817790985
    2. 'end' → logprob: -2.136718511581421
    3. 'print' → logprob: -4.636718273162842
    4. '*num' → logprob: -11.01171875
    5. '*i' → logprob: -11.38671875
    6. '*p' → logprob: -11.88671875
    7. '*(' → logprob: -12.76171875
    8. ')' → logprob: -12.76171875
    9. ' *' → logprob: -12.76171875
    10. ',end' → logprob: -13.01171875

Token 142: '="")
' (ID: 154840)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.027274498715996742
    2. '""' → logprob: -4.0272746086120605
    3. ')' → logprob: -5.0272746086120605
    4. '")' → logprob: -6.1522746086120605
    5. '",' → logprob: -8.402274131774902
    6. '"+' → logprob: -9.277274131774902
    7. '"",' → logprob: -10.277274131774902
    8. ' "")' → logprob: -10.902274131774902
    9. ''' → logprob: -11.277274131774902
    10. '"""' → logprob: -12.402274131774902

Token 143: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.5
    3. 'for' → logprob: -18.25
    4. '#print' → logprob: -19.25
    5. '```' → logprob: -20.125
    6. 'prints' → logprob: -21.0
    7. '.print' → logprob: -21.25
    8. 'end' → logprob: -22.125
    9. 'printf' → logprob: -23.125
    10. '	print' → logprob: -23.375

Token 144: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -1.8312570318812504e-05
    2. '(' → logprob: -11.125018119812012
    3. '(*(' → logprob: -12.875018119812012
    4. '(*)' → logprob: -14.750018119812012
    5. '*' → logprob: -14.875018119812012
    6. ' (*' → logprob: -16.125019073486328
    7. '()' → logprob: -17.500019073486328
    8. '*num' → logprob: -17.750019073486328
    9. '(num' → logprob: -17.875019073486328
    10. '("*' → logprob: -18.125019073486328

Token 145: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -4.961759259458631e-06
    2. ' num' → logprob: -12.750004768371582
    3. '(num' → logprob: -13.250004768371582
    4. '[num' → logprob: -15.750004768371582
    5. '	num' → logprob: -20.1250057220459
    6. ',num' → logprob: -20.3750057220459
    7. '<num' → logprob: -20.3750057220459
    8. '*num' → logprob: -20.8750057220459
    9. '$num' → logprob: -21.1250057220459
    10. ':num' → logprob: -21.6250057220459

Token 146: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.1008713702030946e-06
    2. 'List' → logprob: -13.750001907348633
    3. 'num' → logprob: -14.625001907348633
    4. 'list' → logprob: -14.750001907348633
    5. '[num' → logprob: -15.750001907348633
    6. '_LIST' → logprob: -17.875001907348633
    7. '[' → logprob: -18.875001907348633
    8. '_num' → logprob: -19.875001907348633
    9. 's' → logprob: -20.250001907348633
    10. '_List' → logprob: -20.375001907348633

Token 147: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.082895273109898e-05
    2. 'idx' → logprob: -10.875030517578125
    3. '[' → logprob: -11.875030517578125
    4. '[i' → logprob: -13.750030517578125
    5. '(idx' → logprob: -14.500030517578125
    6. ')[' → logprob: -14.500030517578125
    7. '```' → logprob: -14.500030517578125
    8. '[index' → logprob: -14.750030517578125
    9. '[id' → logprob: -14.875030517578125
    10. '	idx' → logprob: -15.125030517578125

Token 148: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001105762057704851
    2. ' +' → logprob: -9.375110626220703
    3. '1' → logprob: -10.750110626220703
    4. ':' → logprob: -13.500110626220703
    5. '+:' → logprob: -13.875110626220703
    6. '+]' → logprob: -14.000110626220703
    7. '+)' → logprob: -14.625110626220703
    8. ':]' → logprob: -15.000110626220703
    9. '2' → logprob: -16.375110626220703
    10. '+
' → logprob: -16.625110626220703

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002229594625532627
    2. ':' → logprob: -6.252229690551758
    3. ':]' → logprob: -8.627229690551758
    4. ':end' → logprob: -9.252229690551758
    5. 'None' → logprob: -11.877229690551758
    6. ':])
' → logprob: -12.252229690551758
    7. '```' → logprob: -12.627229690551758
    8. ':],' → logprob: -12.877229690551758
    9. 'len' → logprob: -13.252229690551758
    10. ' ' → logprob: -14.002229690551758

Token 150: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021239692345261574
    2. ':],' → logprob: -3.896239757537842
    3. ':]' → logprob: -7.646239757537842
    4. ':)' → logprob: -9.396239280700684
    5. '])' → logprob: -10.146239280700684
    6. ',' → logprob: -10.271239280700684
    7. '],' → logprob: -10.771239280700684
    8. ':])
' → logprob: -11.271239280700684
    9. ')' → logprob: -11.521239280700684
    10. ':,' → logprob: -11.521239280700684

Token 151: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.252003937959671
    2. '],' → logprob: -1.5020039081573486
    3. ']' → logprob: -10.12700366973877
    4. ')' → logprob: -11.37700366973877
    5. ' ])' → logprob: -11.50200366973877
    6. '),' → logprob: -12.62700366973877
    7. '])
' → logprob: -12.87700366973877
    8. ',' → logprob: -13.00200366973877
    9. ')])' → logprob: -13.87700366973877
    10. ']])' → logprob: -14.12700366973877


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 149
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 77
Tokens correctement prédits (top 10): 125
Précision stricte (1ère position): 48.99%
Précision adaptée (1ère position): 51.68%
Précision (top 10): 83.89%
================================================================================
