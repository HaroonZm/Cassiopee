================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    s_length = raw_input()
    s = set(raw_input().strip().split(' '))
    t_length = raw_input()
    t = set(raw_input().strip().split(' '))

    print len(s & t)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.27454787492752075
    2. '\n' → logprob: -1.774547815322876
    3. '   ' → logprob: -3.524547815322876
    4. '(' → logprob: -4.399548053741455
    5. ' 
' → logprob: -5.149548053741455
    6. '    
' → logprob: -5.274548053741455
    7. ' ' → logprob: -5.524548053741455
    8. ''' → logprob: -5.649548053741455
    9. '```' → logprob: -6.274548053741455
    10. '    ' → logprob: -6.399548053741455

Token 4: ' s' (ID: 265)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5843620896339417
    2. '   ' → logprob: -1.4593620300292969
    3. 'pass' → logprob: -2.209362030029297
    4. 'return' → logprob: -2.834362030029297
    5. '#' → logprob: -4.209362030029297
    6. 'p' → logprob: -5.209362030029297
    7. '```' → logprob: -5.709362030029297
    8. 'r' → logprob: -5.709362030029297
    9. '\' → logprob: -5.959362030029297
    10. 'a' → logprob: -6.084362030029297

Token 5: '_length' (ID: 11514)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5515060424804688
    2. ':' → logprob: -2.0515060424804688
    3. '=' → logprob: -2.3015060424804688
    4. '.' → logprob: -2.5515060424804688
    5. ' =' → logprob: -3.0515060424804688
    6. 'tr' → logprob: -3.5515060424804688
    7. 'u' → logprob: -4.676506042480469
    8. 'a' → logprob: -5.051506042480469
    9. 's' → logprob: -5.176506042480469
    10. ',' → logprob: -5.426506042480469

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1959942728281021
    2. '=' → logprob: -2.0709943771362305
    3. ' =' → logprob: -3.5709943771362305
    4. '(' → logprob: -4.3209943771362305
    5. ')' → logprob: -5.5709943771362305
    6. 's' → logprob: -5.8209943771362305
    7. ',' → logprob: -7.0709943771362305
    8. ' _' → logprob: -7.4459943771362305
    9. '+' → logprob: -7.5709943771362305
    10. ' ' → logprob: -8.19599437713623

Token 7: ' raw' (ID: 11428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0708419531583786
    2. ' int' → logprob: -3.1958420276641846
    3. ' len' → logprob: -3.8208420276641846
    4. '10' → logprob: -6.1958417892456055
    5. '0' → logprob: -6.6958417892456055
    6. 'int' → logprob: -6.9458417892456055
    7. ' input' → logprob: -8.320841789245605
    8. ' s' → logprob: -8.320841789245605
    9. '20' → logprob: -8.445841789245605
    10. 'len' → logprob: -8.445841789245605

Token 8: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20253627002239227
    2. '_input' → logprob: -1.7025362253189087
    3. '_in' → logprob: -7.077536106109619
    4. '_i' → logprob: -8.702536582946777
    5. ' _' → logprob: -9.577536582946777
    6. 'input' → logprob: -11.952536582946777
    7. '```' → logprob: -12.077536582946777
    8. '   ' → logprob: -12.452536582946777
    9. '__' → logprob: -12.702536582946777
    10. 'in' → logprob: -12.827536582946777

Token 9: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006413251161575317
    2. '('' → logprob: -5.756413459777832
    3. ''' → logprob: -6.131413459777832
    4. '("("' → logprob: -7.631413459777832
    5. '"' → logprob: -8.131413459777832
    6. '(
' → logprob: -9.006413459777832
    7. 's' → logprob: -10.006413459777832
    8. ' ' → logprob: -10.881413459777832
    9. '   ' → logprob: -11.006413459777832
    10. ')' → logprob: -11.381413459777832

Token 10: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5526556372642517
    2. ')' → logprob: -0.9276556372642517
    3. '()' → logprob: -5.1776556968688965
    4. '(' → logprob: -5.4276556968688965
    5. '=' → logprob: -5.8026556968688965
    6. ' ' → logprob: -6.0526556968688965
    7. '>' → logprob: -6.3026556968688965
    8. '.strip' → logprob: -6.5526556968688965
    9. ',' → logprob: -6.6776556968688965
    10. '```' → logprob: -6.9276556968688965

Token 11: ' s' (ID: 265)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15777966380119324
    2. ')' → logprob: -2.1577796936035156
    3. ' ' → logprob: -5.282779693603516
    4. '=' → logprob: -5.532779693603516
    5. '()' → logprob: -5.782779693603516
    6. ''' → logprob: -6.032779693603516
    7. 's' (adapté à ' s') → logprob: -6.282779693603516
    8. '[' → logprob: -6.407779693603516
    9. '(' → logprob: -6.407779693603516
    10. '>' → logprob: -6.657779693603516

Token 12: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7147747874259949
    2. '_' → logprob: -0.9647747874259949
    3. '[' → logprob: -2.4647748470306396
    4. ' =' → logprob: -4.2147746086120605
    5. '_length' → logprob: -4.4647746086120605
    6. '[:]' → logprob: -4.9647746086120605
    7. '=' → logprob: -6.0897746086120605
    8. '._' → logprob: -6.3397746086120605
    9. '[]' → logprob: -6.8397746086120605
    10. '<|end|>' → logprob: -6.9647746086120605

Token 13: ' set' (ID: 920)
  Prédit: ' raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.027487456798553467
    2. 'raw' → logprob: -3.6524875164031982
    3. ' ' → logprob: -6.902487277984619
    4. ' s' → logprob: -9.777487754821777
    5. '	raw' → logprob: -9.902487754821777
    6. ' input' → logprob: -10.402487754821777
    7. '(raw' → logprob: -11.277487754821777
    8. ' str' → logprob: -11.777487754821777
    9. 's' → logprob: -12.402487754821777
    10. 'input' → logprob: -12.652487754821777

Token 14: '(raw' (ID: 46707)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009056854993104935
    2. '()' → logprob: -5.38405704498291
    3. '(s' → logprob: -6.00905704498291
    4. '('' → logprob: -6.50905704498291
    5. '("("' → logprob: -9.38405704498291
    6. '((' → logprob: -9.75905704498291
    7. '(range' → logprob: -9.88405704498291
    8. 's' → logprob: -10.00905704498291
    9. '(raw' → logprob: -10.63405704498291
    10. '(input' → logprob: -10.75905704498291

Token 15: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.010156565345823765
    2. '_' → logprob: -4.635156631469727
    3. '_in' → logprob: -9.260156631469727
    4. ')' → logprob: -9.760156631469727
    5. '_inputs' → logprob: -10.135156631469727
    6. '_s' → logprob: -10.260156631469727
    7. ')_' → logprob: -10.385156631469727
    8. ' _' → logprob: -10.385156631469727
    9. '```' → logprob: -10.385156631469727
    10. '_raw' → logprob: -10.760156631469727

Token 16: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4749707579612732
    2. '()' → logprob: -0.9749707579612732
    3. ')' → logprob: -7.224970817565918
    4. '()))' → logprob: -9.599970817565918
    5. ' ())' → logprob: -10.724970817565918
    6. '(' → logprob: -10.849970817565918
    7. '().' → logprob: -10.974970817565918
    8. '();)' → logprob: -11.224970817565918
    9. '()]' → logprob: -11.724970817565918
    10. '());' → logprob: -12.849970817565918

Token 17: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04868444800376892
    2. 'strip' → logprob: -3.0486843585968018
    3. 'rstrip' → logprob: -10.673684120178223
    4. ')' → logprob: -10.923684120178223
    5. 'add' → logprob: -11.048684120178223
    6. 'replace' → logprob: -11.548684120178223
    7. ' split' → logprob: -11.673684120178223
    8. 'lower' → logprob: -12.298684120178223
    9. 'spl' → logprob: -12.298684120178223
    10. 'startswith' → logprob: -12.548684120178223

Token 18: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1201254203915596
    2. '()' → logprob: -2.3701255321502686
    3. '()))' → logprob: -4.4951252937316895
    4. ')' → logprob: -5.9951252937316895
    5. '(' → logprob: -6.1201252937316895
    6. '('' → logprob: -6.3701252937316895
    7. '().' → logprob: -6.7451252937316895
    8. ' ())' → logprob: -7.2451252937316895
    9. '))' → logprob: -9.995125770568848
    10. '())))' → logprob: -10.870125770568848

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.043078898685053e-05
    2. 'lower' → logprob: -9.875090599060059
    3. ' split' → logprob: -10.875090599060059
    4. 'strip' → logprob: -11.500090599060059
    5. 'replace' → logprob: -12.875090599060059
    6. 'spl' → logprob: -13.000090599060059
    7. 's' → logprob: -13.375090599060059
    8. '(split' → logprob: -14.000090599060059
    9. 'rstrip' → logprob: -14.000090599060059
    10. ')' → logprob: -14.250090599060059

Token 20: '('' (ID: 706)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3374412953853607
    2. '('' → logprob: -1.837441325187683
    3. '(' → logprob: -2.7124412059783936
    4. '()' → logprob: -3.0874412059783936
    5. '()))' → logprob: -4.337441444396973
    6. ')' → logprob: -6.587441444396973
    7. '(','' → logprob: -8.337441444396973
    8. '("' → logprob: -8.587441444396973
    9. '))' → logprob: -9.712441444396973
    10. ' ())' → logprob: -9.837441444396973

Token 21: ' '))
' (ID: 142598)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13239920139312744
    2. '()))' → logprob: -2.882399082183838
    3. ')' → logprob: -3.257399082183838
    4. ' ))' → logprob: -4.007399082183838
    5. '()' → logprob: -5.132399082183838
    6. ''))' → logprob: -5.757399082183838
    7. ' ' → logprob: -6.882399082183838
    8. '(' → logprob: -8.132399559020996
    9. ' )' → logprob: -8.632399559020996
    10. '())' → logprob: -9.007399559020996

Token 22: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7141786217689514
    2. '.' → logprob: -2.0891785621643066
    3. 'if' → logprob: -2.9641785621643066
    4. '[' → logprob: -3.0891785621643066
    5. '   ' → logprob: -3.3391785621643066
    6. '
' → logprob: -3.4641785621643066
    7. '\' → logprob: -3.5891785621643066
    8. 'for' → logprob: -3.5891785621643066
    9. '\n' → logprob: -3.8391785621643066
    10. ' if' → logprob: -4.089178562164307

Token 23: ' t' (ID: 260)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0068402290344238
    2. 'if' → logprob: -1.8818402290344238
    3. ' ' → logprob: -1.8818402290344238
    4. '
' → logprob: -2.631840229034424
    5. '.' → logprob: -2.881840229034424
    6. ' if' → logprob: -3.006840229034424
    7. '   ' → logprob: -3.506840229034424
    8. 'i' → logprob: -3.506840229034424
    9. '#' → logprob: -4.381840229034424
    10. '<|end|>' → logprob: -4.631840229034424

Token 24: '_length' (ID: 11514)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39320108294487
    2. ' =' → logprob: -1.5182011127471924
    3. '=' → logprob: -2.6432011127471924
    4. '_length' → logprob: -4.143200874328613
    5. 's' → logprob: -5.768200874328613
    6. '_s' → logprob: -5.893200874328613
    7. 'arget' → logprob: -6.018200874328613
    8. '.' → logprob: -6.268200874328613
    9. 'e' → logprob: -6.768200874328613
    10. 'o' → logprob: -7.018200874328613

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018986253067851067
    2. '=' → logprob: -4.018986225128174
    3. ' ' → logprob: -7.268986225128174
    4. 's' → logprob: -9.768986701965332
    5. '_' → logprob: -10.518986701965332
    6. '<|end|>' → logprob: -11.018986701965332
    7. ')' → logprob: -11.268986701965332
    8. '    ' → logprob: -12.393986701965332
    9. ' s' → logprob: -12.393986701965332
    10. '   ' → logprob: -12.643986701965332

Token 26: ' raw' (ID: 11428)
  Prédit: ' raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.007670506834983826
    2. 'raw' → logprob: -4.8826704025268555
    3. ' ' → logprob: -10.257670402526855
    4. ' int' → logprob: -11.382670402526855
    5. '	raw' → logprob: -11.382670402526855
    6. 'int' → logprob: -13.382670402526855
    7. '(raw' → logprob: -13.382670402526855
    8. '_raw' → logprob: -14.257670402526855
    9. '  ' → logprob: -14.507670402526855
    10. ' raws' → logprob: -14.882670402526855

Token 27: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.018405692651867867
    2. '_' → logprob: -4.018405914306641
    3. '_in' → logprob: -8.64340591430664
    4. '_i' → logprob: -10.51840591430664
    5. '_p' → logprob: -11.14340591430664
    6. ' _' → logprob: -11.26840591430664
    7. '_output' → logprob: -11.89340591430664
    8. '_ip' → logprob: -12.51840591430664
    9. '_inputs' → logprob: -12.51840591430664
    10. '_user' → logprob: -13.01840591430664

Token 28: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015900811413303018
    2. '(' → logprob: -6.501590251922607
    3. '()
' → logprob: -10.00158977508545
    4. ' ()' → logprob: -11.12658977508545
    5. '()

' → logprob: -12.62658977508545
    6. '```' → logprob: -12.75158977508545
    7. '()(' → logprob: -12.87658977508545
    8. '();' → logprob: -13.12658977508545
    9. '()<' → logprob: -13.12658977508545
    10. ' ' → logprob: -13.37658977508545

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09548885375261307
    2. 't' → logprob: -2.7204887866973877
    3. 's' → logprob: -4.970489025115967
    4. '<|end|>' → logprob: -5.720489025115967
    5. '    
' → logprob: -5.845489025115967
    6. ' ' → logprob: -5.845489025115967
    7. '
' → logprob: -6.595489025115967
    8. '()' → logprob: -6.845489025115967
    9. '	t' → logprob: -6.845489025115967
    10. '  ' → logprob: -6.970489025115967

Token 30: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.14635194838047028
    2. '   ' → logprob: -2.1463520526885986
    3. 's' → logprob: -4.2713518142700195
    4. ' t' → logprob: -6.2713518142700195
    5. ' ' → logprob: -6.7713518142700195
    6. '	t' → logprob: -6.8963518142700195
    7. '  ' → logprob: -7.7713518142700195
    8. '<|end|>' → logprob: -8.64635181427002
    9. '    ' → logprob: -8.77135181427002
    10. '    
' → logprob: -9.27135181427002

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31817981600761414
    2. '=' → logprob: -1.3181798458099365
    3. '_' → logprob: -5.568179607391357
    4. 's' → logprob: -7.068179607391357
    5. ' ' → logprob: -8.443180084228516
    6. '  ' → logprob: -12.318180084228516
    7. '_s' → logprob: -12.318180084228516
    8. '   ' → logprob: -12.818180084228516
    9. '_=' → logprob: -12.818180084228516
    10. ' s' → logprob: -13.318180084228516

Token 32: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.1813276708126068
    2. 'set' → logprob: -1.8063277006149292
    3. ' raw' → logprob: -6.931327819824219
    4. 'raw' → logprob: -7.556327819824219
    5. ' ' → logprob: -9.681327819824219
    6. '   ' → logprob: -12.556327819824219
    7. '  ' → logprob: -12.993827819824219
    8. '	set' → logprob: -13.056327819824219
    9. 's' → logprob: -13.118827819824219
    10. ' ' → logprob: -13.618827819824219

Token 33: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.029757089912891388
    2. '(' → logprob: -3.529757022857666
    3. ' (' → logprob: -12.529757499694824
    4. 'raw' → logprob: -14.904757499694824
    5. '(
' → logprob: -15.029757499694824
    6. '((' → logprob: -15.029757499694824
    7. ' raw' → logprob: -15.154757499694824
    8. '(r' → logprob: -15.404757499694824
    9. '(read' → logprob: -15.404757499694824
    10. '(

' → logprob: -15.404757499694824

Token 34: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0012828527251258492
    2. '_' → logprob: -7.751282691955566
    3. '_user' → logprob: -7.876282691955566
    4. '._' → logprob: -8.751282691955566
    5. '_output' → logprob: -9.376282691955566
    6. '.' → logprob: -9.751282691955566
    7. '_inputs' → logprob: -10.626282691955566
    8. '```' → logprob: -10.751282691955566
    9. '()' → logprob: -11.001282691955566
    10. '_raw' → logprob: -11.251282691955566

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009882282465696335
    2. '()' → logprob: -4.63488245010376
    3. '())' → logprob: -9.634881973266602
    4. '().'' → logprob: -10.384881973266602
    5. '(' → logprob: -11.009881973266602
    6. '.' → logprob: -12.759881973266602
    7. ')' → logprob: -13.384881973266602
    8. '().__' → logprob: -13.509881973266602
    9. '()).' → logprob: -13.634881973266602
    10. '().
' → logprob: -14.009881973266602

Token 36: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.7491250875755213e-05
    2. '(strip' → logprob: -11.125027656555176
    3. '.strip' → logprob: -12.000027656555176
    4. ' strip' → logprob: -13.125027656555176
    5. 'rstrip' → logprob: -13.375027656555176
    6. 'split' → logprob: -13.750027656555176
    7. '().' → logprob: -14.000027656555176
    8. ')' → logprob: -14.750027656555176
    9. '-strip' → logprob: -15.375027656555176
    10. '()' → logprob: -15.750027656555176

Token 37: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004124942235648632
    2. '()' → logprob: -5.504125118255615
    3. '(' → logprob: -10.504124641418457
    4. '())' → logprob: -11.504124641418457
    5. '().'' → logprob: -12.254124641418457
    6. '()(' → logprob: -14.129124641418457
    7. '.' → logprob: -14.379124641418457
    8. ' ().' → logprob: -14.504124641418457
    9. '()).' → logprob: -14.879124641418457
    10. '()<' → logprob: -15.379124641418457

Token 38: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.9153885558771435e-06
    2. ' split' → logprob: -12.250005722045898
    3. 'strip' → logprob: -13.875005722045898
    4. '(split' → logprob: -16.0000057220459
    5. 'spl' → logprob: -17.8750057220459
    6. ')' → logprob: -18.0000057220459
    7. '```' → logprob: -18.3750057220459
    8. 'decode' → logprob: -18.6250057220459
    9. ' ' → logprob: -18.7500057220459
    10. '.split' → logprob: -19.0000057220459

Token 39: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00027015688829123974
    2. '(' → logprob: -8.625269889831543
    3. '("' → logprob: -10.375269889831543
    4. '("("' → logprob: -10.750269889831543
    5. ''' → logprob: -10.875269889831543
    6. ' ' → logprob: -12.000269889831543
    7. ' ('' → logprob: -12.250269889831543
    8. ')' → logprob: -12.750269889831543
    9. ' (' → logprob: -14.125269889831543
    10. '(('' → logprob: -14.625269889831543

Token 40: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.030960384756326675
    2. ''))' → logprob: -3.9059603214263916
    3. ' '' → logprob: -5.280960559844971
    4. '('' → logprob: -6.030960559844971
    5. ')' → logprob: -6.780960559844971
    6. '')' → logprob: -7.155960559844971
    7. '(' → logprob: -7.905960559844971
    8. ' ')' → logprob: -8.780960083007812
    9. ' '))
' → logprob: -9.155960083007812
    10. ' ' → logprob: -9.280960083007812

Token 41: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06215142086148262
    2. '))' → logprob: -2.8121514320373535
    3. ')))' → logprob: -9.562150955200195
    4. ''))' → logprob: -9.687150955200195
    5. '')' → logprob: -11.187150955200195
    6. ' )' → logprob: -11.437150955200195
    7. '()' → logprob: -11.437150955200195
    8. '   ' → logprob: -12.562150955200195
    9. '()))' → logprob: -12.937150955200195
    10. '())' → logprob: -13.062150955200195

Token 42: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21314984560012817
    2. 'for' → logprob: -2.7131497859954834
    3. '   ' → logprob: -3.4631497859954834
    4. ' for' → logprob: -3.8381497859954834
    5. '\n' → logprob: -4.0881500244140625
    6. '#' → logprob: -4.2131500244140625
    7. '```' → logprob: -4.9631500244140625
    8. 's' → logprob: -5.3381500244140625
    9. ' ' → logprob: -5.3381500244140625
    10. 'n' → logprob: -5.5881500244140625

Token 43: ' print' (ID: 2123)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7854145765304565
    2. 'f' → logprob: -1.7854145765304565
    3. 'for' → logprob: -1.9104145765304565
    4. 'n' → logprob: -2.910414695739746
    5. 's' → logprob: -3.160414695739746
    6. 'h' → logprob: -3.285414695739746
    7. '#' → logprob: -4.160414695739746
    8. 'c' → logprob: -4.285414695739746
    9. 'r' → logprob: -4.285414695739746
    10. 'result' → logprob: -4.410414695739746

Token 44: ' len' (ID: 4631)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013346440391615033
    2. '(s' → logprob: -8.001334190368652
    3. 's' → logprob: -8.501334190368652
    4. '(len' → logprob: -8.626334190368652
    5. '(sum' → logprob: -8.751334190368652
    6. '('' → logprob: -8.876334190368652
    7. '()' → logprob: -9.376334190368652
    8. '(
' → logprob: -9.501334190368652
    9. ' (' → logprob: -10.376334190368652
    10. 'sum' → logprob: -10.626334190368652

Token 45: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04879129305481911
    2. '(s' → logprob: -3.0487914085388184
    3. ' (' → logprob: -9.29879093170166
    4. '(t' → logprob: -9.67379093170166
    5. '('' → logprob: -10.67379093170166
    6. 's' → logprob: -11.29879093170166
    7. '()' → logprob: -12.79879093170166
    8. '(
' → logprob: -12.79879093170166
    9. '(space' → logprob: -13.29879093170166
    10. '(len' → logprob: -14.04879093170166

Token 46: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08118193596601486
    2. ' )' → logprob: -3.3311820030212402
    3. ' -' → logprob: -4.08118200302124
    4. ' ' → logprob: -4.95618200302124
    5. '.inter' → logprob: -4.95618200302124
    6. '-' → logprob: -5.83118200302124
    7. '.union' → logprob: -5.83118200302124
    8. '.' → logprob: -6.83118200302124
    9. 's' → logprob: -6.83118200302124
    10. ' |' → logprob: -7.33118200302124

Token 47: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3132757246494293
    2. 't' → logprob: -1.313275694847107
    3. ' ' → logprob: -11.938275337219238
    4. '	t' → logprob: -12.438275337219238
    5. ' ' → logprob: -13.313275337219238
    6. '`t' → logprob: -15.063275337219238
    7. 's' → logprob: -15.188275337219238
    8. ')t' → logprob: -15.688275337219238
    9. ')' → logprob: -15.938275337219238
    10. '<|end|>' → logprob: -16.063276290893555

Token 48: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016957100888248533
    2. '))' → logprob: -8.75016975402832
    3. '()' → logprob: -12.37516975402832
    4. '())' → logprob: -12.62516975402832
    5. ' )' → logprob: -13.50016975402832
    6. ')))' → logprob: -14.25016975402832
    7. ')
' → logprob: -15.00016975402832
    8. ')`' → logprob: -15.12516975402832
    9. ')s' → logprob: -16.00016975402832
    10. '')' → logprob: -16.25016975402832

Token 49: 'if' (ID: 366)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003013953333720565
    2. ')' → logprob: -6.003014087677002
    3. '#' → logprob: -8.503013610839844
    4. '(
' → logprob: -8.878013610839844
    5. '()' → logprob: -9.503013610839844
    6. '[' → logprob: -10.628013610839844
    7. '<|end|>' → logprob: -10.628013610839844
    8. ' ' → logprob: -11.128013610839844
    9. ' (' → logprob: -11.628013610839844
    10. '\' → logprob: -11.753013610839844

Token 50: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.000329386442899704
    2. '__' → logprob: -8.25032901763916
    3. ' ' → logprob: -10.25032901763916
    4. '_' → logprob: -11.25032901763916
    5. ' ' → logprob: -11.25032901763916
    6. ' _' → logprob: -12.25032901763916
    7. ' ___' → logprob: -13.75032901763916
    8. '  ' → logprob: -14.50032901763916
    9. ' ‌' → logprob: -16.625329971313477
    10. ' ▁' → logprob: -16.750329971313477

Token 51: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0812457948923111
    2. ' __' → logprob: -2.7062458992004395
    3. ' ==' → logprob: -4.9562458992004395
    4. '.' → logprob: -6.8312458992004395
    5. ' .' → logprob: -6.9562458992004395
    6. '_' → logprob: -7.4562458992004395
    7. ' ' → logprob: -7.7062458992004395
    8. '[' → logprob: -8.081245422363281
    9. '__.__' → logprob: -8.456245422363281
    10. '==' → logprob: -8.831245422363281

Token 52: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00011570196511456743
    2. '_' → logprob: -9.250115394592285
    3. '___' → logprob: -11.625115394592285
    4. '__.__' → logprob: -12.000115394592285
    5. '==' → logprob: -12.875115394592285
    6. '__.' → logprob: -14.125115394592285
    7. '____' → logprob: -14.625115394592285
    8. ' ==' → logprob: -15.750115394592285
    9. '"' → logprob: -15.875115394592285
    10. '__('' → logprob: -16.7501163482666

Token 53: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18334680795669556
    2. '__' → logprob: -1.8083467483520508
    3. '==' → logprob: -5.808346748352051
    4. '=="' → logprob: -8.80834674835205
    5. ' __' → logprob: -9.18334674835205
    6. '"' → logprob: -9.68334674835205
    7. '_' → logprob: -9.80834674835205
    8. ' =="' → logprob: -10.05834674835205
    9. ' =' → logprob: -10.30834674835205
    10. '=='' → logprob: -10.43334674835205

Token 54: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20477387309074402
    2. '"' → logprob: -1.7047739028930664
    3. ' '' → logprob: -6.204773902893066
    4. ' "' → logprob: -6.704773902893066
    5. ' "__' → logprob: -9.954773902893066
    6. ' '__' → logprob: -10.079773902893066
    7. ' __' → logprob: -12.079773902893066
    8. ' ' → logprob: -12.329773902893066
    9. '__' → logprob: -12.579773902893066
    10. ''s' → logprob: -12.954773902893066

Token 55: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0004354373668320477
    2. 'name' → logprob: -7.7504353523254395
    3. '__' → logprob: -12.750435829162598
    4. 'm' → logprob: -14.250435829162598
    5. 'built' → logprob: -15.000435829162598
    6. '__':
' → logprob: -15.250435829162598
    7. 'ma' → logprob: -15.250435829162598
    8. '_main' → logprob: -15.875435829162598
    9. ' main' → logprob: -17.25043487548828
    10. ' "__' → logprob: -17.75043487548828

Token 56: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004390001762658358
    2. '__':
' → logprob: -5.504390239715576
    3. '_' → logprob: -8.129389762878418
    4. '__:' → logprob: -11.754389762878418
    5. '__.' → logprob: -12.254389762878418
    6. '_'' → logprob: -12.879389762878418
    7. '__('' → logprob: -14.629389762878418
    8. ''' → logprob: -14.754389762878418
    9. '___' → logprob: -15.004389762878418
    10. '':' → logprob: -15.754389762878418

Token 57: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.009719845838844776
    2. '   ' → logprob: -5.5097198486328125
    3. '	main' → logprob: -6.0097198486328125
    4. 'main' → logprob: -6.3847198486328125
    5. '    
' → logprob: -7.8847198486328125
    6. '(main' → logprob: -8.009719848632812
    7. '<|end|>' → logprob: -8.009719848632812
    8. ' ' → logprob: -9.509719848632812
    9. ' 
' → logprob: -9.634719848632812
    10. '    ' → logprob: -9.759719848632812

Token 58: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.005983307957649231
    2. 'main' (adapté à ' main') → logprob: -5.130983352661133
    3. '	main' → logprob: -9.880983352661133
    4. ' ' → logprob: -13.380983352661133
    5. ' ma' → logprob: -14.380983352661133
    6. ' m' → logprob: -14.880983352661133
    7. '(main' → logprob: -15.380983352661133
    8. ' mains' → logprob: -15.755983352661133
    9. ' ' → logprob: -16.255983352661133
    10. ' mai' → logprob: -16.255983352661133

Token 59: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00869812723249197
    2. '(' → logprob: -4.758697986602783
    3. ')' → logprob: -10.383698463439941
    4. ']()' → logprob: -11.633698463439941
    5. '`()' → logprob: -12.008698463439941
    6. '(
' → logprob: -12.133698463439941
    7. '()
' → logprob: -12.258698463439941
    8. '().' → logprob: -12.508698463439941
    9. '```' → logprob: -12.633698463439941
    10. '()`' → logprob: -12.883698463439941


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 57
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 42
Précision stricte (1ère position): 38.60%
Précision adaptée (1ère position): 40.35%
Précision (top 10): 73.68%
================================================================================
