================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
S=input().split()
S=[int(s) for s in S]

q=int(input())
T=input().split()
T=[int(t) for t in T]

#線型探索　計算時間O(qn)
def lineresearch(key):
    i = 0
    while S[i]!=key:
        i = i+1
        if i==n:
            #result = 0
            return 0
    #result = 1
    return 1

count = 0

for i in range(q):
    S.append(0)
    S[n]=T[i]   #Tの要素を番兵としておく
    count += lineresearch(S[n])
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2951568067073822
    2. '(' → logprob: -1.4201568365097046
    3. '())' → logprob: -5.295156955718994
    4. '()' → logprob: -5.545156955718994
    5. '```' → logprob: -6.170156955718994
    6. '<|end|>' → logprob: -7.295156955718994
    7. '(
' → logprob: -7.670156955718994
    8. '")' → logprob: -7.920156955718994
    9. '`)' → logprob: -8.545156478881836
    10. '')' → logprob: -8.670156478881836

Token 4: 'S' (ID: 50)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.5210232734680176
    2. '+' → logprob: -1.5210232734680176
    3. '#' → logprob: -2.0210232734680176
    4. ')' → logprob: -2.1460232734680176
    5. ' ' → logprob: -2.3960232734680176
    6. ''' → logprob: -2.7710232734680176
    7. 'i' → logprob: -3.0210232734680176
    8. 's' → logprob: -3.8960232734680176
    9. 'a' → logprob: -4.521023273468018
    10. '\n' → logprob: -4.521023273468018

Token 5: '=input' (ID: 87911)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.37035831809043884
    2. '[' → logprob: -1.2453583478927612
    3. '=' → logprob: -4.120358467102051
    4. 'u' → logprob: -5.870358467102051
    5. 't' → logprob: -7.495358467102051
    6. '(' → logprob: -8.24535846710205
    7. ')' → logprob: -8.37035846710205
    8. '+' → logprob: -8.74535846710205
    9. ' =' → logprob: -8.74535846710205
    10. ''' → logprob: -8.87035846710205

Token 6: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003916680347174406
    2. '()' → logprob: -5.8789167404174805
    3. ')' → logprob: -7.6289167404174805
    4. '('' → logprob: -8.50391674041748
    5. '(
' → logprob: -8.62891674041748
    6. '(

' → logprob: -8.87891674041748
    7. ' (' → logprob: -10.37891674041748
    8. ''' → logprob: -10.87891674041748
    9. '("("' → logprob: -11.62891674041748
    10. '"' → logprob: -11.75391674041748

Token 7: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7574017643928528
    2. 's' → logprob: -1.132401704788208
    3. ' ' → logprob: -2.757401704788208
    4. 'a' → logprob: -3.132401704788208
    5. '[' → logprob: -3.507401704788208
    6. '_' → logprob: -4.757401943206787
    7. 't' → logprob: -4.882401943206787
    8. 'r' → logprob: -4.882401943206787
    9. 'i' → logprob: -5.132401943206787
    10. '.split' → logprob: -5.257401943206787

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018953178077936172
    2. '()' → logprob: -6.626895427703857
    3. '('' → logprob: -8.5018949508667
    4. '"' → logprob: -9.1268949508667
    5. '(
' → logprob: -9.2518949508667
    6. ''' → logprob: -9.6268949508667
    7. '("("' → logprob: -10.1268949508667
    8. '`' → logprob: -11.2518949508667
    9. ' (' → logprob: -11.3768949508667
    10. '(

' → logprob: -11.6268949508667

Token 9: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021550774574279785
    2. '[' → logprob: -4.77155065536499
    3. 'f' → logprob: -5.39655065536499
    4. 'i' → logprob: -6.27155065536499
    5. 's' → logprob: -6.64655065536499
    6. 'c' → logprob: -7.02155065536499
    7. 'a' → logprob: -7.02155065536499
    8. 'r' → logprob: -7.52155065536499
    9. 'n' → logprob: -7.89655065536499
    10. 'if' → logprob: -7.89655065536499

Token 10: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0540219321846962
    2. '.' → logprob: -3.3040218353271484
    3. '<|end|>' → logprob: -4.429021835327148
    4. '```' → logprob: -6.929021835327148
    5. '[
' → logprob: -7.179021835327148
    6. '\[' → logprob: -7.429021835327148
    7. '<|end|>' → logprob: -8.429021835327148
    8. '#' → logprob: -8.554021835327148
    9. '[:]' → logprob: -8.554021835327148
    10. ')' → logprob: -9.054021835327148

Token 11: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.081584716506768e-05
    2. ' int' → logprob: -11.625020980834961
    3. 'float' → logprob: -12.250020980834961
    4. 's' → logprob: -13.125020980834961
    5. '(int' → logprob: -13.125020980834961
    6. 'n' → logprob: -13.750020980834961
    7. 'i' → logprob: -14.375020980834961
    8. 'str' → logprob: -14.875020980834961
    9. ''int' → logprob: -15.000020980834961
    10. 'x' → logprob: -15.125020980834961

Token 12: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15057627856731415
    2. '(x' → logprob: -2.77557635307312
    3. '(S' → logprob: -3.15057635307312
    4. '(i' → logprob: -3.90057635307312
    5. '(s' → logprob: -4.275576114654541
    6. '(item' → logprob: -8.7755765914917
    7. '(a' → logprob: -9.1505765914917
    8. '(
' → logprob: -10.4005765914917
    9. '(`' → logprob: -10.4005765914917
    10. '(token' → logprob: -10.7755765914917

Token 13: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026574634830467403
    2. '(s' → logprob: -8.875266075134277
    3. ')]' → logprob: -9.750266075134277
    4. ')s' → logprob: -9.875266075134277
    5. ' )' → logprob: -11.625266075134277
    6. ')])' → logprob: -13.250266075134277
    7. '())' → logprob: -13.875266075134277
    8. ')+' → logprob: -13.875266075134277
    9. '))' → logprob: -14.000266075134277
    10. 's' → logprob: -14.375266075134277

Token 14: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005247961380518973
    2. 'for' → logprob: -8.500524520874023
    3. '(s' → logprob: -9.000524520874023
    4. ')s' → logprob: -9.375524520874023
    5. ')]' → logprob: -9.750524520874023
    6. 's' → logprob: -10.750524520874023
    7. ' for' → logprob: -11.125524520874023
    8. ']' → logprob: -12.000524520874023
    9. '*' → logprob: -13.000524520874023
    10. '+' → logprob: -13.375524520874023

Token 15: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0026852793525904417
    2. 's' → logprob: -6.127685070037842
    3. ' ' → logprob: -8.002685546875
    4. ' S' → logprob: -8.877685546875
    5. '(s' → logprob: -11.002685546875
    6. '_s' → logprob: -12.752685546875
    7. 'S' → logprob: -12.877685546875
    8. '  ' → logprob: -13.502685546875
    9. '(' → logprob: -14.252685546875
    10. '	s' → logprob: -14.752685546875

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017262301407754421
    2. 'in' → logprob: -6.376726150512695
    3. ' ' → logprob: -11.251726150512695
    4. 's' → logprob: -12.251726150512695
    5. ' s' → logprob: -12.251726150512695
    6. '(s' → logprob: -14.126726150512695
    7. '	in' → logprob: -15.626726150512695
    8. ']' → logprob: -16.251726150512695
    9. '<|end|>' → logprob: -16.751726150512695
    10. ')' → logprob: -16.751726150512695

Token 17: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.006716674659401178
    2. ' S' → logprob: -5.006716728210449
    3. ' ' → logprob: -14.50671672821045
    4. 'range' → logprob: -14.75671672821045
    5. ' range' → logprob: -15.00671672821045
    6. 's' → logprob: -16.131715774536133
    7. '(S' → logprob: -16.881715774536133
    8. '  ' → logprob: -17.881715774536133
    9. '[S' → logprob: -17.881715774536133
    10. '<S' → logprob: -18.131715774536133

Token 18: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007394956424832344
    2. '])' → logprob: -5.507394790649414
    3. ')]' → logprob: -5.882394790649414
    4. ')' → logprob: -7.632394790649414
    5. '])]' → logprob: -10.882394790649414
    6. '`]' → logprob: -11.757394790649414
    7. ')])' → logprob: -12.757394790649414
    8. ']
' → logprob: -12.882394790649414
    9. ' ]' → logprob: -13.257394790649414
    10. '']' → logprob: -13.382394790649414

Token 19: 'q' (ID: 80)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7370972037315369
    2. 'd' → logprob: -2.1120972633361816
    3. 'a' → logprob: -2.6120972633361816
    4. 's' → logprob: -2.8620972633361816
    5. 'm' → logprob: -2.9870972633361816
    6. 'r' → logprob: -3.4870972633361816
    7. 'S' → logprob: -3.4870972633361816
    8. 'for' → logprob: -3.6120972633361816
    9. 'f' → logprob: -3.8620972633361816
    10. 'max' → logprob: -3.9870972633361816

Token 20: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09838636219501495
    2. ' =' → logprob: -2.848386287689209
    3. '=int' → logprob: -3.473386287689209
    4. '=query' → logprob: -6.723386287689209
    5. 'u' → logprob: -6.973386287689209
    6. ' ' → logprob: -6.973386287689209
    7. '=input' → logprob: -7.098386287689209
    8. '.' → logprob: -8.348386764526367
    9. '=[]' → logprob: -8.723386764526367
    10. ',' → logprob: -9.348386764526367

Token 21: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0001825642102630809
    2. '(' → logprob: -8.625182151794434
    3. '()' → logprob: -13.250182151794434
    4. ' (' → logprob: -15.000182151794434
    5. 'input' → logprob: -15.000182151794434
    6. '=input' → logprob: -15.500182151794434
    7. '(in' → logprob: -15.750182151794434
    8. '(
' → logprob: -17.00018310546875
    9. ',input' → logprob: -17.50018310546875
    10. '(inp' → logprob: -17.87518310546875

Token 22: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20439857244491577
    2. '()' → logprob: -1.7043986320495605
    3. ')' → logprob: -5.8293986320495605
    4. '())
' → logprob: -11.204398155212402
    5. ' ())' → logprob: -11.454398155212402
    6. '()
' → logprob: -11.704398155212402
    7. '(' → logprob: -12.829398155212402
    8. '();)' → logprob: -13.204398155212402
    9. '()]' → logprob: -14.079398155212402
    10. '`)' → logprob: -14.579398155212402

Token 23: 'T' (ID: 51)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001965031959116459
    2. 'r' → logprob: -7.376965045928955
    3. 'q' → logprob: -8.001964569091797
    4. 'f' → logprob: -8.876964569091797
    5. 'query' → logprob: -8.876964569091797
    6. ' for' → logprob: -9.001964569091797
    7. 's' → logprob: -9.001964569091797
    8. 'result' → logprob: -9.501964569091797
    9. 'queries' → logprob: -9.501964569091797
    10. 't' → logprob: -9.626964569091797

Token 24: '=input' (ID: 87911)
  Prédit: '=input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=input' → logprob: -0.32211121916770935
    2. '=' → logprob: -1.3221112489700317
    3. '=[]' → logprob: -5.322111129760742
    4. ' =' → logprob: -6.197111129760742
    5. '=int' → logprob: -6.947111129760742
    6. '=[' → logprob: -7.197111129760742
    7. '[]=' → logprob: -10.072111129760742
    8. '=i' → logprob: -10.822111129760742
    9. '=[]
' → logprob: -10.822111129760742
    10. '=s' → logprob: -11.572111129760742

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008186809136532247
    2. '()' → logprob: -7.125818729400635
    3. ' ().' → logprob: -11.500818252563477
    4. '.' → logprob: -12.750818252563477
    5. '(' → logprob: -14.500818252563477
    6. ' .' → logprob: -15.750818252563477
    7. '())' → logprob: -16.625818252563477
    8. '()).' → logprob: -16.625818252563477
    9. '()<' → logprob: -17.500818252563477
    10. ' ()' → logprob: -17.625818252563477

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1398757123970427e-05
    2. 'strip' → logprob: -11.500011444091797
    3. ' split' → logprob: -14.125011444091797
    4. 'spl' → logprob: -15.125011444091797
    5. 'rstrip' → logprob: -15.875011444091797
    6. '(split' → logprob: -16.625011444091797
    7. 'plit' → logprob: -17.125011444091797
    8. '.split' → logprob: -18.625011444091797
    9. 's' → logprob: -18.750011444091797
    10. 'replace' → logprob: -18.875011444091797

Token 27: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009685108088888228
    2. '(' → logprob: -7.1259684562683105
    3. '()[' → logprob: -9.500968933105469
    4. '()
' → logprob: -10.125968933105469
    5. '()

' → logprob: -11.375968933105469
    6. '()]' → logprob: -11.750968933105469
    7. '())' → logprob: -12.250968933105469
    8. '()(' → logprob: -12.625968933105469
    9. '().' → logprob: -12.875968933105469
    10. '<|end|>' → logprob: -13.125968933105469

Token 28: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.01200270839035511
    2. 'S' → logprob: -4.887002944946289
    3. '<|end|>' → logprob: -5.637002944946289
    4. '[' → logprob: -8.137002944946289
    5. 's' → logprob: -8.512002944946289
    6. 't' → logprob: -8.762002944946289
    7. 'q' → logprob: -9.512002944946289
    8. '```' → logprob: -10.637002944946289
    9. '<|end|>' → logprob: -11.012002944946289
    10. '#' → logprob: -11.637002944946289

Token 29: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1209266260266304
    2. '[q' → logprob: -2.24592661857605
    3. '=[' → logprob: -5.620926856994629
    4. '=' → logprob: -6.120926856994629
    5. '<|end|>' → logprob: -7.370926856994629
    6. '[int' → logprob: -7.495926856994629
    7. '[T' → logprob: -7.745926856994629
    8. '[
' → logprob: -9.370926856994629
    9. '[t' → logprob: -9.495926856994629
    10. '\[' → logprob: -9.620926856994629

Token 30: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.180258191714529e-06
    2. ' int' → logprob: -11.875008583068848
    3. '[int' → logprob: -15.000008583068848
    4. 'i' → logprob: -15.375008583068848
    5. '(int' → logprob: -15.625008583068848
    6. 'in' → logprob: -15.875008583068848
    7. ']int' → logprob: -16.12500762939453
    8. '<int' → logprob: -16.62500762939453
    9. '   ' → logprob: -16.62500762939453
    10. '=int' → logprob: -17.50000762939453

Token 31: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0002941095153801143
    2. '(' → logprob: -8.750293731689453
    3. ' (' → logprob: -9.000293731689453
    4. '(s' → logprob: -11.625293731689453
    5. 't' → logprob: -13.125293731689453
    6. ' ' → logprob: -14.125293731689453
    7. '(x' → logprob: -16.250293731689453
    8. ' t' → logprob: -16.375293731689453
    9. '（' → logprob: -17.125293731689453
    10. '(tc' → logprob: -17.250293731689453

Token 32: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5181348919868469
    2. ')' → logprob: -1.3931348323822021
    3. '(t' → logprob: -2.518134832382202
    4. ' for' → logprob: -2.643134832382202
    5. '(s' → logprob: -6.018135070800781
    6. ' ' → logprob: -7.018135070800781
    7. 's' → logprob: -8.018135070800781
    8. 't' → logprob: -8.143135070800781
    9. '   ' → logprob: -9.518135070800781
    10. '(' → logprob: -9.893135070800781

Token 33: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4741576015949249
    2. ' for' → logprob: -0.9741575717926025
    3. ')' → logprob: -9.724157333374023
    4. ' t' → logprob: -11.474157333374023
    5. 't' → logprob: -12.099157333374023
    6. ' ' → logprob: -12.474157333374023
    7. '	for' → logprob: -15.849157333374023
    8. ' in' → logprob: -15.974157333374023
    9. '(t' → logprob: -15.974157333374023
    10. ')t' → logprob: -15.974157333374023

Token 34: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.2254556268453598
    2. 't' → logprob: -1.600455641746521
    3. ' T' → logprob: -11.225455284118652
    4. '(t' → logprob: -11.725455284118652
    5. 'T' → logprob: -11.975455284118652
    6. ' in' → logprob: -12.225455284118652
    7. ' ' → logprob: -12.350455284118652
    8. 's' → logprob: -12.350455284118652
    9. ' s' → logprob: -15.350455284118652
    10. ')t' → logprob: -15.350455284118652

Token 35: ' in' (ID: 306)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5363560914993286
    2. ' in' → logprob: -1.6613560914993286
    3. ' ' → logprob: -2.036355972290039
    4. 't' → logprob: -3.036355972290039
    5. '(t' → logprob: -3.411355972290039
    6. '(' → logprob: -5.286355972290039
    7. '(s' → logprob: -6.161355972290039
    8. ' s' → logprob: -6.286355972290039
    9. ' (' → logprob: -6.411355972290039
    10. 's' → logprob: -6.411355972290039

Token 36: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.34847718477249146
    2. ' T' → logprob: -1.2234771251678467
    3. ' ' → logprob: -10.973477363586426
    4. 't' → logprob: -11.848477363586426
    5. ' t' → logprob: -11.973477363586426
    6. 's' → logprob: -14.473477363586426
    7. 'S' → logprob: -14.473477363586426
    8. ')' → logprob: -14.973477363586426
    9. 'q' → logprob: -16.28597640991211
    10. '	T' → logprob: -16.28597640991211

Token 37: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5990760326385498
    2. ']' → logprob: -0.9740760326385498
    3. ')]' → logprob: -2.84907603263855
    4. '])' → logprob: -4.224076271057129
    5. ')])' → logprob: -8.224076271057129
    6. '']' → logprob: -9.599076271057129
    7. '])]' → logprob: -9.599076271057129
    8. '）' → logprob: -9.724076271057129
    9. '`]' → logprob: -10.599076271057129
    10. ')
' → logprob: -10.724076271057129

Token 38: '#' (ID: 2)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.045777417719364166
    2. 'r' → logprob: -3.4207773208618164
    3. 'f' → logprob: -5.670777320861816
    4. 'a' → logprob: -5.670777320861816
    5. 'count' → logprob: -5.795777320861816
    6. 's' → logprob: -6.920777320861816
    7. 'ans' → logprob: -7.795777320861816
    8. 'for' → logprob: -9.170777320861816
    9. 'p' → logprob: -9.170777320861816
    10. 'b' → logprob: -9.545777320861816

Token 39: '線' (ID: 29948)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07723350822925568
    2. 'count' → logprob: -2.7022335529327393
    3. 'a' → logprob: -5.32723331451416
    4. 'ans' → logprob: -6.95223331451416
    5. 'r' → logprob: -7.82723331451416
    6. 'answer' → logprob: -7.82723331451416
    7. 'cnt' → logprob: -8.32723331451416
    8. 'co' → logprob: -9.32723331451416
    9. 'cou' → logprob: -9.70223331451416
    10. 's' → logprob: -10.20223331451416

Token 40: '型' (ID: 14951)
  Prédit: '形'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '形' → logprob: -0.012400982901453972
    2. '#' → logprob: -5.512401103973389
    3. '分' → logprob: -5.887401103973389
    4. '性' → logprob: -6.512401103973389
    5. ' ' → logprob: -7.137401103973389
    6. ' #' → logprob: -7.762401103973389
    7. '切' → logprob: -8.26240062713623
    8. '=' → logprob: -8.38740062713623
    9. 'a' → logprob: -8.63740062713623
    10. 's' → logprob: -8.76240062713623

Token 41: '探索' (ID: 191406)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.5256326198577881
    2. 's' → logprob: -1.275632619857788
    3. '検索' → logprob: -2.775632619857788
    4. '_search' → logprob: -3.025632619857788
    5. '探索' → logprob: -4.400632858276367
    6. ' search' → logprob: -6.025632858276367
    7. '_' → logprob: -6.275632858276367
    8. 'サ' → logprob: -7.525632858276367
    9. 'Search' → logprob: -8.400632858276367
    10. '搜索' → logprob: -8.900632858276367

Token 42: '　' (ID: 1397)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13041508197784424
    2. 'count' → logprob: -2.2554149627685547
    3. 'cnt' → logprob: -4.380414962768555
    4. 'ans' → logprob: -5.880414962768555
    5. 'a' → logprob: -7.005414962768555
    6. 'r' → logprob: -7.630414962768555
    7. 'm' → logprob: -9.005414962768555
    8. 'x' → logprob: -9.380414962768555
    9. 'for' → logprob: -9.380414962768555
    10. 'result' → logprob: -9.505414962768555

Token 43: '計' (ID: 37662)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10658472776412964
    2. 'count' → logprob: -2.4815847873687744
    3. 'cnt' → logprob: -4.231584548950195
    4. 'ans' → logprob: -6.606584548950195
    5. 'a' → logprob: -7.606584548950195
    6. 'r' → logprob: -7.731584548950195
    7. 'result' → logprob: -9.231584548950195
    8. 'i' → logprob: -9.356584548950195
    9. 'for' → logprob: -9.606584548950195
    10. 'x' → logprob: -9.606584548950195

Token 44: '算' (ID: 16727)
  Prédit: '算'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '算' → logprob: -0.08183076977729797
    2. '数' → logprob: -2.7068307399749756
    3. 's' → logprob: -5.206830978393555
    4. 'count' → logprob: -5.831830978393555
    5. '測' → logprob: -6.331830978393555
    6. '```' → logprob: -7.956830978393555
    7. '上' → logprob: -8.206830978393555
    8. 'す' → logprob: -8.331830978393555
    9. 'q' → logprob: -8.956830978393555
    10. '=' → logprob: -9.456830978393555

Token 45: '時間' (ID: 31402)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.45022112131118774
    2. 'c' → logprob: -1.075221061706543
    3. 'cnt' → logprob: -3.950221061706543
    4. 'ans' → logprob: -6.575221061706543
    5. 'counter' → logprob: -8.575221061706543
    6. 'a' → logprob: -9.200221061706543
    7. 'result' → logprob: -9.200221061706543
    8. ' count' → logprob: -9.700221061706543
    9. 'r' → logprob: -10.825221061706543
    10. 'sum' → logprob: -10.950221061706543

Token 46: 'O' (ID: 46)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.48875534534454346
    2. 'c' → logprob: -1.3637553453445435
    3. 'cnt' → logprob: -2.488755226135254
    4. ' count' → logprob: -3.738755226135254
    5. ' ans' → logprob: -5.113755226135254
    6. ' c' → logprob: -5.363755226135254
    7. 'ans' → logprob: -5.988755226135254
    8. ' cnt' → logprob: -6.238755226135254
    9. ' ' → logprob: -6.488755226135254
    10. '=' → logprob: -6.488755226135254

Token 47: '(q' (ID: 21479)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05071031302213669
    2. '(N' → logprob: -3.3007102012634277
    3. '(' → logprob: -4.425710201263428
    4. '（' → logprob: -8.175710678100586
    5. '(q' → logprob: -8.675710678100586
    6. '(len' → logprob: -9.675710678100586
    7. '(Q' → logprob: -10.175710678100586
    8. '(
' → logprob: -10.800710678100586
    9. '(m' → logprob: -11.300710678100586
    10. '(M' → logprob: -11.550710678100586

Token 48: 'n' (ID: 77)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5785720348358154
    2. ')' → logprob: -1.0785720348358154
    3. '*n' → logprob: -2.4535720348358154
    4. ' *' → logprob: -5.3285722732543945
    5. '*(' → logprob: -5.7035722732543945
    6. ' )' → logprob: -5.9535722732543945
    7. '*N' → logprob: -6.8285722732543945
    8. '*)' → logprob: -7.4535722732543945
    9. 'n' → logprob: -8.328572273254395
    10. '*num' → logprob: -8.578572273254395

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015264409012161195
    2. '）' → logprob: -9.000152587890625
    3. '#' → logprob: -10.750152587890625
    4. '`)' → logprob: -13.250152587890625
    5. '')' → logprob: -13.625152587890625
    6. ' )' → logprob: -14.125152587890625
    7. ')
' → logprob: -14.125152587890625
    8. ']' → logprob: -14.625152587890625
    9. 'for' → logprob: -14.625152587890625
    10. '")' → logprob: -15.000152587890625

Token 50: 'def' (ID: 1314)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4546692371368408
    2. 'c' → logprob: -1.2046692371368408
    3. 'cnt' → logprob: -2.829669237136841
    4. 'ans' → logprob: -5.329668998718262
    5. 'a' → logprob: -7.579668998718262
    6. 'x' → logprob: -7.954668998718262
    7. 'counter' → logprob: -8.079668998718262
    8. 'answer' → logprob: -9.579668998718262
    9. 'sum' → logprob: -9.829668998718262
    10. 'r' → logprob: -9.954668998718262

Token 51: ' liner' (ID: 72024)
  Prédit: ' linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' linear' → logprob: -0.1809273511171341
    2. 'linear' → logprob: -1.8059273958206177
    3. ' sequential' → logprob: -8.055927276611328
    4. '線' → logprob: -8.430927276611328
    5. ' search' → logprob: -8.930927276611328
    6. ' ' → logprob: -9.305927276611328
    7. ' liner' → logprob: -9.430927276611328
    8. 'search' → logprob: -9.555927276611328
    9. ' lin' → logprob: -9.680927276611328
    10. 'line' → logprob: -10.055927276611328

Token 52: 'es' (ID: 268)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7978435754776001
    2. 'al' → logprob: -1.0478435754776
    3. '_search' → logprob: -1.7978435754776
    4. 'search' → logprob: -4.2978434562683105
    5. 'ar' → logprob: -4.2978434562683105
    6. '_' → logprob: -5.4228434562683105
    7. '_linear' → logprob: -8.172843933105469
    8. '_a' → logprob: -8.172843933105469
    9. 's' → logprob: -8.422843933105469
    10. 'linear' → logprob: -9.172843933105469

Token 53: 'earch' (ID: 3430)
  Prédit: 'earch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'earch' → logprob: -0.11635962128639221
    2. 'ch' → logprob: -2.7413597106933594
    3. 'search' → logprob: -3.7413597106933594
    4. 'arch' → logprob: -4.366359710693359
    5. 'rch' → logprob: -5.991359710693359
    6. 'a' → logprob: -6.866359710693359
    7. 'c' → logprob: -6.866359710693359
    8. '_search' → logprob: -7.116359710693359
    9. 's' → logprob: -7.491359710693359
    10. 't' → logprob: -7.741359710693359

Token 54: '(key' (ID: 8932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002892013406381011
    2. '_' → logprob: -6.502892017364502
    3. '_(' → logprob: -7.252892017364502
    4. '(_' → logprob: -8.752891540527344
    5. '(s' → logprob: -9.002891540527344
    6. '(S' → logprob: -9.377891540527344
    7. '(a' → logprob: -9.502891540527344
    8. '(x' → logprob: -9.752891540527344
    9. '(n' → logprob: -10.002891540527344
    10. ' (' → logprob: -11.127891540527344

Token 55: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003317569149658084
    2. ',n' → logprob: -6.128317356109619
    3. ',key' → logprob: -7.878317356109619
    4. ' ,' → logprob: -8.378317832946777
    5. ',S' → logprob: -8.753317832946777
    6. ',i' → logprob: -9.003317832946777
    7. ',k' → logprob: -9.378317832946777
    8. '):' → logprob: -9.753317832946777
    9. ',array' → logprob: -11.128317832946777
    10. ',list' → logprob: -11.503317832946777

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48545557260513306
    2. ' ' → logprob: -1.1104555130004883
    3. ' for' → logprob: -3.3604555130004883
    4. ')' → logprob: -4.985455513000488
    5. '<|end|>' → logprob: -4.985455513000488
    6. '  ' → logprob: -5.735455513000488
    7. '    ' → logprob: -6.860455513000488
    8. ' i' → logprob: -7.360455513000488
    9. ':' → logprob: -7.360455513000488
    10. '	for' → logprob: -7.985455513000488

Token 57: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.028433846309781075
    2. 'for' → logprob: -3.6534337997436523
    3. '   ' → logprob: -6.278433799743652
    4. ' ' → logprob: -8.403433799743652
    5. ' i' → logprob: -10.903433799743652
    6. '  ' → logprob: -12.528433799743652
    7. ' n' → logprob: -13.153433799743652
    8. ' global' → logprob: -13.403433799743652
    9. '    ' → logprob: -13.528433799743652
    10. 'n' → logprob: -13.653433799743652

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6409249305725098
    2. '=' → logprob: -0.7659249305725098
    3. ' ' → logprob: -4.89092493057251
    4. ' in' → logprob: -7.39092493057251
    5. ' n' → logprob: -10.265924453735352
    6. 's' → logprob: -10.515924453735352
    7. ' +=' → logprob: -11.140924453735352
    8. '  ' → logprob: -11.390924453735352
    9. '0' → logprob: -11.390924453735352
    10. 'n' → logprob: -11.515924453735352

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '０' → logprob: -17.125625610351562
    4. '   ' → logprob: -18.750625610351562
    5. '۰' → logprob: -18.750625610351562
    6. '  ' → logprob: -19.250625610351562
    7. '[' → logprob: -19.250625610351562
    8. '-' → logprob: -19.375625610351562
    9. '<|end|>' → logprob: -19.375625610351562
    10. ' ' → logprob: -20.000625610351562

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '０' → logprob: -18.125045776367188
    4. 'n' → logprob: -18.750045776367188
    5. 'len' → logprob: -19.250045776367188
    6. '1' → logprob: -19.375045776367188
    7. '۰' → logprob: -19.500045776367188
    8. '[' → logprob: -19.750045776367188
    9. 's' → logprob: -20.125045776367188
    10. '   ' → logprob: -20.625045776367188

Token 61: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.47614529728889465
    2. 'while' (adapté à ' while') → logprob: -0.9761452674865723
    3. 'n' → logprob: -6.601145267486572
    4. 'i' → logprob: -8.35114574432373
    5. ' n' → logprob: -8.47614574432373
    6. '   ' → logprob: -9.10114574432373
    7. ' i' → logprob: -9.60114574432373
    8. '	while' → logprob: -10.22614574432373
    9. '<|end|>' → logprob: -11.10114574432373
    10. ' ' → logprob: -11.22614574432373

Token 64: ' S' (ID: 336)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25194188952445984
    2. 'i' → logprob: -1.5019419193267822
    3. '	i' → logprob: -12.126941680908203
    4. ' ' → logprob: -12.751941680908203
    5. '(i' → logprob: -13.001941680908203
    6. 'True' → logprob: -14.626941680908203
    7. ' ' → logprob: -14.751941680908203
    8. ' True' → logprob: -15.126941680908203
    9. '(' → logprob: -15.251941680908203
    10. '  ' → logprob: -15.501941680908203

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0075171771459281445
    2. '[' → logprob: -5.382517337799072
    3. 'i' → logprob: -6.507517337799072
    4. ' i' → logprob: -7.007517337799072
    5. ')' → logprob: -8.882516860961914
    6. ' ' → logprob: -9.507516860961914
    7. '.' → logprob: -10.382516860961914
    8. 'len' → logprob: -10.632516860961914
    9. ' and' → logprob: -10.757516860961914
    10. '[int' → logprob: -11.007516860961914

Token 66: ']!=' (ID: 85780)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6954293847084045
    2. '!=' → logprob: -0.6954293847084045
    3. ']' → logprob: -6.94542932510376
    4. ']!=' → logprob: -7.07042932510376
    5. '<' → logprob: -8.320429801940918
    6. ' ' → logprob: -9.945429801940918
    7. '()!=' → logprob: -10.195429801940918
    8. '<=' → logprob: -10.445429801940918
    9. ')!=' → logprob: -10.820429801940918
    10. ')' → logprob: -10.945429801940918

Token 67: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.007608278188854456
    2. ' key' → logprob: -4.882608413696289
    3. 'k' → logprob: -13.757608413696289
    4. '	key' → logprob: -14.007608413696289
    5. ' ' → logprob: -16.50760841369629
    6. '_key' → logprob: -17.13260841369629
    7. 'キー' → logprob: -17.75760841369629
    8. '-key' → logprob: -17.88260841369629
    9. 'Key' → logprob: -18.00760841369629
    10. '(key' → logprob: -18.00760841369629

Token 68: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04375278204679489
    2. ':' → logprob: -3.793752670288086
    3. 'and' → logprob: -3.918752670288086
    4. ':
' → logprob: -8.418752670288086
    5. ' ' → logprob: -9.293752670288086
    6. ' i' → logprob: -10.168752670288086
    7. ':i' → logprob: -10.293752670288086
    8. ' :' → logprob: -10.668752670288086
    9. '   ' → logprob: -11.543752670288086
    10. '	and' → logprob: -12.293752670288086

Token 69: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3132871389389038
    2. 'i' (adapté à ' i') → logprob: -1.3132871389389038
    3. '	i' → logprob: -10.813286781311035
    4. '<|end|>' → logprob: -13.813286781311035
    5. ' if' → logprob: -13.938286781311035
    6. '   ' → logprob: -13.938286781311035
    7. '```' → logprob: -13.938286781311035
    8. ' ' → logprob: -14.438286781311035
    9. '    ' → logprob: -14.813286781311035
    10. '_i' → logprob: -15.938286781311035

Token 71: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6709824800491333
    2. '+' → logprob: -0.7959824800491333
    3. ' +=' → logprob: -3.2959823608398438
    4. ' +' → logprob: -7.545982360839844
    5. ' ' → logprob: -10.170982360839844
    6. '<|end|>' → logprob: -10.545982360839844
    7. '++' → logprob: -11.795982360839844
    8. '+='' → logprob: -12.170982360839844
    9. ']+=' → logprob: -12.420982360839844
    10. '=' → logprob: -12.795982360839844

Token 72: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759546160697937
    2. ' i' → logprob: -0.8259546160697937
    3. '	i' → logprob: -11.70095443725586
    4. ' ' → logprob: -12.32595443725586
    5. '+' → logprob: -13.57595443725586
    6. '1' → logprob: -14.07595443725586
    7. '0' → logprob: -14.95095443725586
    8. '   ' → logprob: -16.95095443725586
    9. '    ' → logprob: -17.70095443725586
    10. '  ' → logprob: -17.70095443725586

Token 73: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00014776040916331112
    2. ' +' → logprob: -8.875147819519043
    3. '+
' → logprob: -12.500147819519043
    4. '+i' → logprob: -13.250147819519043
    5. '1' → logprob: -13.625147819519043
    6. '＋' → logprob: -13.875147819519043
    7. '+[' → logprob: -16.125146865844727
    8. '+)' → logprob: -17.125146865844727
    9. '()+' → logprob: -17.500146865844727
    10. ' plus' → logprob: -17.500146865844727

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '１' → logprob: -17.375
    4. '   ' → logprob: -18.75
    5. '<|end|>' → logprob: -18.75
    6. '```' → logprob: -19.25
    7. '۱' → logprob: -19.625
    8. '11' → logprob: -19.625
    9. '  ' → logprob: -20.125
    10. '116' → logprob: -20.375

Token 75: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6641741991043091
    2. '       ' → logprob: -1.664174199104309
    3. '<|end|>' → logprob: -2.0391740798950195
    4. 'if' → logprob: -2.9141740798950195
    5. '   ' → logprob: -3.5391740798950195
    6. ' and' → logprob: -3.6641740798950195
    7. '
' → logprob: -4.1641740798950195
    8. ' i' → logprob: -4.6641740798950195
    9. ' ' → logprob: -4.6641740798950195
    10. '<|end|>' → logprob: -4.9141740798950195

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02721916139125824
    2. ' if' → logprob: -4.652219295501709
    3. 'if' → logprob: -5.027219295501709
    4. '<|end|>' → logprob: -5.027219295501709
    5. '   ' → logprob: -5.652219295501709
    6. ' ' → logprob: -7.777219295501709
    7. '<|end|>' → logprob: -9.52721881866455
    8. '	if' → logprob: -9.90221881866455
    9. '    ' → logprob: -10.40221881866455
    10. '+' → logprob: -10.77721881866455

Token 77: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.380904672667384e-05
    2. 'i' → logprob: -11.125033378601074
    3. ' if' → logprob: -11.375033378601074
    4. '   ' → logprob: -12.250033378601074
    5. '       ' → logprob: -12.875033378601074
    6. '
' → logprob: -16.37503433227539
    7. '    ' → logprob: -17.12503433227539
    8. ' ' → logprob: -17.50003433227539
    9. '```' → logprob: -17.75003433227539
    10. '  ' → logprob: -18.12503433227539

Token 78: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011714138090610504
    2. ' i' → logprob: -6.751171588897705
    3. '   ' → logprob: -14.001171112060547
    4. ' ' → logprob: -15.376171112060547
    5. '  ' → logprob: -16.376171112060547
    6. '	i' → logprob: -17.001171112060547
    7. '<|end|>' → logprob: -17.251171112060547
    8. '    ' → logprob: -18.626171112060547
    9. 'len' → logprob: -18.751171112060547
    10. '(i' → logprob: -19.126171112060547

Token 79: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1847337484359741
    2. 'len' → logprob: -1.3097337484359741
    3. ' ==' → logprob: -1.8097337484359741
    4. ' len' → logprob: -2.3097338676452637
    5. 'n' → logprob: -2.8097338676452637
    6. '>=' → logprob: -3.1847338676452637
    7. ' n' → logprob: -3.6847338676452637
    8. ' >=' → logprob: -4.059733867645264
    9. ' ' → logprob: -4.559733867645264
    10. '=len' → logprob: -5.434733867645264

Token 80: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010002555325627327
    2. 'len' → logprob: -4.635002613067627
    3. ' n' → logprob: -8.385002136230469
    4. ' len' → logprob: -11.135002136230469
    5. '	n' → logprob: -13.510002136230469
    6. '	len' → logprob: -14.510002136230469
    7. ' ' → logprob: -14.885002136230469
    8. ')n' → logprob: -15.385002136230469
    9. '   ' → logprob: -15.760002136230469
    10. '=len' → logprob: -16.01000213623047

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024078846909105778
    2. ':return' → logprob: -6.252408027648926
    3. '):' → logprob: -8.252408027648926
    4. ':
' → logprob: -9.002408027648926
    5. ')' → logprob: -9.377408027648926
    6. '   ' → logprob: -12.627408027648926
    7. '):
' → logprob: -13.252408027648926
    8. ' or' → logprob: -13.877408027648926
    9. ')return' → logprob: -14.377408027648926
    10. ' ' → logprob: -14.502408027648926

Token 82: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04817609488964081
    2. ' return' → logprob: -3.1731760501861572
    3. '           ' → logprob: -5.298176288604736
    4. '       ' → logprob: -9.548175811767578
    5. '	return' → logprob: -10.173175811767578
    6. ':return' → logprob: -10.923175811767578
    7. '   ' → logprob: -11.173175811767578
    8. 'break' → logprob: -11.673175811767578
    9. '{return' → logprob: -12.423175811767578
    10. ' ' → logprob: -12.423175811767578

Token 83: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01819911040365696
    2. ' return' → logprob: -4.0181989669799805
    3. 'break' → logprob: -10.26819896697998
    4. '           ' → logprob: -12.39319896697998
    5. ' break' → logprob: -12.64319896697998
    6. '	return' → logprob: -13.01819896697998
    7. ':return' → logprob: -13.51819896697998
    8. ' ' → logprob: -13.64319896697998
    9. '   ' → logprob: -13.76819896697998
    10. '{return' → logprob: -14.64319896697998

Token 84: 'result' (ID: 2521)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0036313117016106844
    2. ' return' → logprob: -5.628631114959717
    3. 'break' → logprob: -10.503631591796875
    4. '   ' → logprob: -13.253631591796875
    5. ' ' → logprob: -14.628631591796875
    6. '	return' → logprob: -15.128631591796875
    7. ' break' → logprob: -15.253631591796875
    8. ':return' → logprob: -15.253631591796875
    9. '  ' → logprob: -15.753631591796875
    10. 'eturn' → logprob: -15.878631591796875

Token 85: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.654767632484436
    2. 'return' → logprob: -1.154767632484436
    3. ' =' → logprob: -1.904767632484436
    4. ' return' → logprob: -4.5297675132751465
    5. ':return' → logprob: -6.4047675132751465
    6. '	return' → logprob: -6.6547675132751465
    7. ' ' → logprob: -7.2797675132751465
    8. '    ' → logprob: -7.6547675132751465
    9. '@return' → logprob: -8.529767990112305
    10. '<|end|>' → logprob: -8.779767990112305

Token 86: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.28829795122146606
    2. '-' → logprob: -1.5382978916168213
    3. ' False' → logprob: -4.1632981300354
    4. '0' → logprob: -4.5382981300354
    5. ' -' → logprob: -5.1632981300354
    6. ' ' → logprob: -6.1632981300354
    7. '-F' → logprob: -6.9132981300354
    8. '-f' → logprob: -8.038297653198242
    9. '"' → logprob: -8.913297653198242
    10. 'None' → logprob: -10.413297653198242

Token 87: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.06273377686738968
    2. '0' → logprob: -3.3127338886260986
    3. '-' → logprob: -4.0627336502075195
    4. '-F' → logprob: -5.4377336502075195
    5. ' False' → logprob: -6.3127336502075195
    6. '-f' → logprob: -8.18773365020752
    7. ' ' → logprob: -8.18773365020752
    8. 'F' → logprob: -9.06273365020752
    9. '"' → logprob: -9.06273365020752
    10. ' -' → logprob: -9.56273365020752

Token 88: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4410521686077118
    2. 'return' → logprob: -1.0660521984100342
    3. ' return' → logprob: -4.441051959991455
    4. '   ' → logprob: -8.941052436828613
    5. '       ' → logprob: -9.441052436828613
    6. ':return' → logprob: -9.441052436828613
    7. ' ' → logprob: -9.566052436828613
    8. '	return' → logprob: -9.816052436828613
    9. '               ' → logprob: -10.566052436828613
    10. '{return' → logprob: -11.191052436828613

Token 89: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10210081934928894
    2. 'return' → logprob: -2.4771008491516113
    3. ' return' → logprob: -4.352100849151611
    4. '       ' → logprob: -9.727100372314453
    5. ' ' → logprob: -10.227100372314453
    6. '   ' → logprob: -10.227100372314453
    7. ':return' → logprob: -10.977100372314453
    8. '<|end|>' → logprob: -11.602100372314453
    9. '	return' → logprob: -11.852100372314453
    10. '          ' → logprob: -12.227100372314453

Token 90: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0035285637713968754
    2. ' return' → logprob: -5.753528594970703
    3. ' ' → logprob: -9.003528594970703
    4. '   ' → logprob: -9.378528594970703
    5. '           ' → logprob: -10.003528594970703
    6. 'break' → logprob: -10.253528594970703
    7. '    ' → logprob: -10.503528594970703
    8. '       ' → logprob: -11.753528594970703
    9. 'r' → logprob: -11.753528594970703
    10. 're' → logprob: -12.628528594970703

Token 91: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19367827475070953
    2. 'False' → logprob: -2.068678379058838
    3. ' ' → logprob: -3.443678379058838
    4. ' False' → logprob: -4.068678379058838
    5. 'None' → logprob: -7.818678379058838
    6. ' None' → logprob: -8.69367790222168
    7. '-' → logprob: -10.19367790222168
    8. 'F' → logprob: -10.69367790222168
    9. '  ' → logprob: -11.94367790222168
    10. 'false' → logprob: -12.00617790222168

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08906052261590958
    2. 'False' → logprob: -2.4640605449676514
    3. '-' → logprob: -9.33906078338623
    4. ' False' → logprob: -10.96406078338623
    5. ' ' → logprob: -11.96406078338623
    6. 'None' → logprob: -12.33906078338623
    7. 'F' → logprob: -13.08906078338623
    8. '-F' → logprob: -13.58906078338623
    9. '"' → logprob: -15.08906078338623
    10. '-f' → logprob: -15.21406078338623

Token 93: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037416485138237476
    2. '       ' → logprob: -5.75374174118042
    3. '<|end|>' → logprob: -8.253741264343262
    4. '    ' → logprob: -9.628741264343262
    5. '  ' → logprob: -9.753741264343262
    6. ' ' → logprob: -9.878741264343262
    7. ')' → logprob: -10.878741264343262
    8. '
' → logprob: -11.003741264343262
    9. ' return' → logprob: -11.128741264343262
    10. 'return' → logprob: -11.378741264343262

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001773192489054054
    2. 'return' → logprob: -9.500177383422852
    3. '       ' → logprob: -9.750177383422852
    4. '  ' → logprob: -11.375177383422852
    5. ' return' → logprob: -11.625177383422852
    6. '<|end|>' → logprob: -11.750177383422852
    7. ' ' → logprob: -12.750177383422852
    8. '    ' → logprob: -13.125177383422852
    9. '    
' → logprob: -13.250177383422852
    10. ')' → logprob: -13.500177383422852

Token 95: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16369196772575378
    2. '   ' → logprob: -1.9136919975280762
    3. '1' → logprob: -5.913691997528076
    4. ' return' → logprob: -7.413691997528076
    5. ' ' → logprob: -9.788691520690918
    6. '  ' → logprob: -10.038691520690918
    7. '    
' → logprob: -11.538691520690918
    8. '#' (adapté à ' #') → logprob: -11.788691520690918
    9. '
' → logprob: -12.038691520690918
    10. '	return' → logprob: -12.288691520690918

Token 96: 'result' (ID: 2521)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0011695101857185364
    2. 'result' → logprob: -7.001169681549072
    3. ' return' → logprob: -8.751169204711914
    4. '   ' → logprob: -9.376169204711914
    5. '#' → logprob: -12.001169204711914
    6. '
' → logprob: -12.626169204711914
    7. ' ' → logprob: -13.501169204711914
    8. '  ' → logprob: -13.876169204711914
    9. '       ' → logprob: -14.251169204711914
    10. '1' → logprob: -14.251169204711914

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.386934757232666
    2. '=' → logprob: -1.136934757232666
    3. '   ' → logprob: -10.511934280395508
    4. ' ' → logprob: -10.886934280395508
    5. ' +=' → logprob: -11.761934280395508
    6. '＝' → logprob: -12.261934280395508
    7. '+=' → logprob: -13.386934280395508
    8. 'return' → logprob: -14.386934280395508
    9. '    ' → logprob: -14.511934280395508
    10. '=
' → logprob: -14.761934280395508

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003607436316087842
    2. ' ' → logprob: -5.628607273101807
    3. 'i' → logprob: -12.628607749938965
    4. '   ' → logprob: -13.003607749938965
    5. '  ' → logprob: -14.128607749938965
    6. ' i' → logprob: -14.378607749938965
    7. '１' → logprob: -14.878607749938965
    8. '    ' → logprob: -16.94110679626465
    9. '　' → logprob: -17.00360679626465
    10. ' ' → logprob: -17.75360679626465

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005301565979607403
    2. ' ' → logprob: -7.625530242919922
    3. 'i' → logprob: -10.125530242919922
    4. ' i' → logprob: -13.625530242919922
    5. '   ' → logprob: -14.375530242919922
    6. '  ' → logprob: -15.875530242919922
    7. '１' → logprob: -15.875530242919922
    8. '(i' → logprob: -17.625530242919922
    9. '    ' → logprob: -18.375530242919922
    10. 's' → logprob: -18.750530242919922

Token 100: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011787971016019583
    2. 'return' → logprob: -6.751178741455078
    3. ' return' → logprob: -12.251178741455078
    4. '	return' → logprob: -12.751178741455078
    5. '       ' → logprob: -14.751178741455078
    6. '  ' → logprob: -15.376178741455078
    7. '<|end|>' → logprob: -15.626178741455078
    8. ' ' → logprob: -16.376178741455078
    9. '   ' → logprob: -17.876178741455078
    10. '    ' → logprob: -17.876178741455078

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008183232857845724
    2. 'return' → logprob: -7.125818252563477
    3. ' return' → logprob: -11.875818252563477
    4. '	return' → logprob: -12.750818252563477
    5. '       ' → logprob: -13.000818252563477
    6. '  ' → logprob: -14.000818252563477
    7. '<|end|>' → logprob: -15.000818252563477
    8. ' ' → logprob: -15.375818252563477
    9. '    ' → logprob: -16.000818252563477
    10. '    
' → logprob: -16.875818252563477

Token 102: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003258876968175173
    2. '   ' → logprob: -5.75325870513916
    3. ' return' → logprob: -9.62825870513916
    4. '1' → logprob: -11.50325870513916
    5. '	return' → logprob: -12.50325870513916
    6. '  ' → logprob: -14.00325870513916
    7. ' ' → logprob: -14.87825870513916
    8. '       ' → logprob: -16.753259658813477
    9. '7' → logprob: -16.878259658813477
    10. '    ' → logprob: -17.628259658813477

Token 103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.250051498413086
    4. '１' → logprob: -18.500051498413086
    5. '  ' → logprob: -19.000051498413086
    6. ' ' → logprob: -20.875051498413086
    7. '　' → logprob: -21.875051498413086
    8. '    ' → logprob: -21.875051498413086
    9. '۱' → logprob: -22.250051498413086
    10. '  
' → logprob: -22.625051498413086

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '１' → logprob: -19.0
    4. '   ' → logprob: -20.125
    5. '<|end|>' → logprob: -20.375
    6. '  ' → logprob: -20.75
    7. '۱' → logprob: -22.25
    8. '১' → logprob: -22.5
    9. '१' → logprob: -22.875
    10. '    ' → logprob: -23.125

Token 105: '

' (ID: 279)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9046916961669922
    2. 'c' → logprob: -1.2796916961669922
    3. 'n' → logprob: -2.279691696166992
    4. 'total' → logprob: -2.904691696166992
    5. 's' → logprob: -3.154691696166992
    6. ' ' → logprob: -3.404691696166992
    7. 'sum' → logprob: -3.654691696166992
    8. '
' → logprob: -4.779691696166992
    9. ' 
' → logprob: -4.779691696166992
    10. 'cnt' → logprob: -4.904691696166992

Token 106: 'count' (ID: 5420)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6887040734291077
    2. 'count' → logprob: -0.9387040734291077
    3. 'ans' → logprob: -2.938704013824463
    4. 'cnt' → logprob: -3.563704013824463
    5. 'result' → logprob: -4.563704013824463
    6. 'r' → logprob: -5.563704013824463
    7. 'answer' → logprob: -5.938704013824463
    8. 'sum' → logprob: -6.188704013824463
    9. 'res' → logprob: -6.688704013824463
    10. 'a' → logprob: -6.688704013824463

Token 107: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1257604360580444
    2. ' =' → logprob: -1.2507604360580444
    3. '=' → logprob: -1.3757604360580444
    4. ' ' → logprob: -2.250760555267334
    5. ' +=' → logprob: -4.375760555267334
    6. '<|end|>' → logprob: -4.875760555267334
    7. ')' → logprob: -5.250760555267334
    8. '_' → logprob: -6.500760555267334
    9. ' (' → logprob: -6.750760555267334
    10. '(count' → logprob: -7.500760555267334

Token 108: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008049834286794066
    2. ' ' → logprob: -7.125804901123047
    3. 'sum' → logprob: -14.500804901123047
    4. ' sum' → logprob: -17.875804901123047
    5. '０' → logprob: -19.750804901123047
    6. '۰' → logprob: -20.375804901123047
    7. '```' → logprob: -20.750804901123047
    8. ' ' → logprob: -21.125804901123047
    9. '=' → logprob: -21.250804901123047
    10. '  ' → logprob: -21.438304901123047

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.632542913896032e-05
    2. ' ' → logprob: -10.125046730041504
    3. 'sum' → logprob: -12.000046730041504
    4. ' sum' → logprob: -17.375045776367188
    5. '０' → logprob: -18.625045776367188
    6. '   ' → logprob: -19.500045776367188
    7. '  ' → logprob: -19.625045776367188
    8. '۰' → logprob: -20.312545776367188
    9. '=' → logprob: -20.375045776367188
    10. 'summ' → logprob: -20.812545776367188

Token 110: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020270596724003553
    2. ' for' → logprob: -8.750203132629395
    3. '<|end|>' → logprob: -10.375203132629395
    4. '
' → logprob: -11.500203132629395
    5. 'i' → logprob: -13.375203132629395
    6. '<|end|>' → logprob: -14.500203132629395
    7. '\n' → logprob: -16.000202178955078
    8. '```' → logprob: -16.375202178955078
    9. '	for' → logprob: -16.625202178955078
    10. '#' → logprob: -16.875202178955078

Token 111: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.375
    3. 'i' → logprob: -20.625
    4. '	for' → logprob: -21.5
    5. '<|end|>' → logprob: -22.75
    6. '```' → logprob: -23.125
    7. '
' → logprob: -23.5
    8. 'f' → logprob: -23.5
    9. 'For' → logprob: -24.25
    10. '#' → logprob: -24.25

Token 112: ' i' (ID: 575)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.044812921434640884
    2. 't' → logprob: -3.1698129177093506
    3. ' i' → logprob: -6.54481315612793
    4. 'i' → logprob: -8.41981315612793
    5. ' key' → logprob: -9.16981315612793
    6. ' ' → logprob: -10.54481315612793
    7. ' T' → logprob: -11.54481315612793
    8. 'key' → logprob: -12.79481315612793
    9. ' x' → logprob: -13.29481315612793
    10. ' q' → logprob: -13.54481315612793

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029783355072140694
    2. 'in' → logprob: -3.529783248901367
    3. ' ' → logprob: -10.904783248901367
    4. '　' → logprob: -12.654783248901367
    5. 'range' → logprob: -12.779783248901367
    6. 'n' → logprob: -13.404783248901367
    7. '  ' → logprob: -13.404783248901367
    8. '	in' → logprob: -13.529783248901367
    9. ' i' → logprob: -13.904783248901367
    10. 's' → logprob: -14.279783248901367

Token 114: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3150343894958496
    2. ' range' → logprob: -1.5650343894958496
    3. 'T' → logprob: -2.8150343894958496
    4. ' T' → logprob: -6.69003438949585
    5. '(range' → logprob: -12.690034866333008
    6. ' ' → logprob: -12.940034866333008
    7. '	range' → logprob: -13.940034866333008
    8. 'Range' → logprob: -14.190034866333008
    9. 't' → logprob: -14.565034866333008
    10. '   ' → logprob: -14.940034866333008

Token 115: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00034774013329297304
    2. '(' → logprob: -8.000348091125488
    3. 'q' → logprob: -11.750348091125488
    4. '(len' → logprob: -12.750348091125488
    5. ' (' → logprob: -13.750348091125488
    6. '(
' → logprob: -15.125348091125488
    7. '(n' → logprob: -16.750347137451172
    8. '(m' → logprob: -17.125347137451172
    9. '(qu' → logprob: -18.375347137451172
    10. '((' → logprob: -18.500347137451172

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007765158079564571
    2. ' ):' → logprob: -7.875776290893555
    3. '):
' → logprob: -7.875776290893555
    4. ')' → logprob: -11.125776290893555
    5. ':' → logprob: -13.875776290893555
    6. ')：' → logprob: -15.250776290893555
    7. '   ' → logprob: -16.250776290893555
    8. ' ):
' → logprob: -16.375776290893555
    9. '):
' → logprob: -16.625776290893555
    10. '）：' → logprob: -16.625776290893555

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18763551115989685
    2. ' count' → logprob: -2.3126354217529297
    3. ' if' → logprob: -3.1876354217529297
    4. 'count' → logprob: -3.6876354217529297
    5. 'if' → logprob: -5.43763542175293
    6. '	count' → logprob: -6.68763542175293
    7. ' ' → logprob: -9.31263542175293
    8. '[count' → logprob: -11.06263542175293
    9. ',count' → logprob: -11.06263542175293
    10. '  ' → logprob: -11.18763542175293

Token 118: ' S' (ID: 336)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0829600989818573
    2. 'if' → logprob: -2.5829601287841797
    3. ' count' → logprob: -5.83296012878418
    4. ' if' → logprob: -6.83296012878418
    5. '   ' → logprob: -10.45796012878418
    6. 'c' → logprob: -11.58296012878418
    7. 'key' → logprob: -11.95796012878418
    8. '	count' → logprob: -12.08296012878418
    9. 'result' → logprob: -13.95796012878418
    10. ' ' → logprob: -14.58296012878418

Token 119: '.append' (ID: 3709)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8733221292495728
    2. ')' → logprob: -1.6233221292495728
    3. '[count' → logprob: -2.123322010040283
    4. '[i' → logprob: -2.373322010040283
    5. '[' → logprob: -3.123322010040283
    6. 'if' → logprob: -3.748322010040283
    7. 'key' → logprob: -4.248322010040283
    8. '.count' → logprob: -4.623322010040283
    9. 'S' → logprob: -4.873322010040283
    10. '[key' → logprob: -4.998322010040283

Token 120: '(' (ID: 7)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.002060330705717206
    2. '(' → logprob: -6.252060413360596
    3. 'T' → logprob: -10.252059936523438
    4. '(-' → logprob: -10.627059936523438
    5. '(int' → logprob: -11.002059936523438
    6. '(S' → logprob: -11.252059936523438
    7. '(l' → logprob: -11.252059936523438
    8. '(t' → logprob: -11.502059936523438
    9. '(
' → logprob: -12.002059936523438
    10. '((' → logprob: -12.877059936523438

Token 121: '0' (ID: 15)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0003131784324068576
    2. ' T' → logprob: -8.125312805175781
    3. 'int' → logprob: -11.500312805175781
    4. ')' → logprob: -13.125312805175781
    5. '   ' → logprob: -13.625312805175781
    6. ' ' → logprob: -14.125312805175781
    7. '(T' → logprob: -14.375312805175781
    8. '-' → logprob: -14.625312805175781
    9. '	T' → logprob: -15.000312805175781
    10. ' -' → logprob: -15.250312805175781

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1586708128452301
    2. ')
' → logprob: -2.5336709022521973
    3. '   ' → logprob: -2.9086709022521973
    4. ' if' → logprob: -5.033670902252197
    5. '
' → logprob: -5.908670902252197
    6. ' )' → logprob: -6.533670902252197
    7. 'if' → logprob: -7.158670902252197
    8. ' )
' → logprob: -7.658670902252197
    9. ' ' → logprob: -7.908670902252197
    10. '    
' → logprob: -9.033670425415039

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04683630168437958
    2. ' if' → logprob: -3.1718363761901855
    3. 'if' → logprob: -6.0468363761901855
    4. '
' → logprob: -7.4218363761901855
    5. '    
' → logprob: -7.5468363761901855
    6. ' result' → logprob: -9.046835899353027
    7. ' count' → logprob: -9.296835899353027
    8. 'result' → logprob: -10.296835899353027
    9. 'count' → logprob: -10.671835899353027
    10. ' 
' → logprob: -11.171835899353027

Token 124: ' S' (ID: 336)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6047409772872925
    2. 'count' → logprob: -0.8547409772872925
    3. ' if' → logprob: -4.854741096496582
    4. 'key' → logprob: -4.854741096496582
    5. 'result' → logprob: -5.354741096496582
    6. '   ' → logprob: -6.104741096496582
    7. ' count' → logprob: -6.229741096496582
    8. 'res' → logprob: -6.729741096496582
    9. 'x' → logprob: -6.979741096496582
    10. 't' → logprob: -7.854741096496582

Token 125: '[n' (ID: 15433)
  Prédit: '[len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[len' → logprob: -1.3518191576004028
    2. '[count' → logprob: -1.6018191576004028
    3. '[i' → logprob: -1.8518191576004028
    4. '[' → logprob: -1.8518191576004028
    5. '[-' → logprob: -2.4768190383911133
    6. '.append' → logprob: -3.7268190383911133
    7. 'count' → logprob: -3.9768190383911133
    8. '=' → logprob: -4.226819038391113
    9. '[S' → logprob: -4.226819038391113
    10. 'search' → logprob: -4.476819038391113

Token 126: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07819825410842896
    2. '+' → logprob: -3.953198194503784
    3. ']>' → logprob: -4.328198432922363
    4. ')' → logprob: -4.578198432922363
    5. '])' → logprob: -5.578198432922363
    6. '-' → logprob: -5.703198432922363
    7. ' ]' → logprob: -5.953198432922363
    8. ']==' → logprob: -6.078198432922363
    9. '[i' → logprob: -6.328198432922363
    10. ' +' → logprob: -6.578198432922363

Token 127: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00023035754566080868
    2. ' T' → logprob: -8.87523078918457
    3. 'int' → logprob: -9.37523078918457
    4. '   ' → logprob: -13.37523078918457
    5. ' ' → logprob: -13.87523078918457
    6. '  ' → logprob: -14.75023078918457
    7. '	T' → logprob: -14.93773078918457
    8. 'lin' → logprob: -15.18773078918457
    9. '(T' → logprob: -15.37523078918457
    10. ' int' → logprob: -15.43773078918457

Token 128: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.745069499127567e-05
    2. '[' → logprob: -9.37508773803711
    3. ' [' → logprob: -13.62508773803711
    4. '[q' → logprob: -15.37508773803711
    5. '[int' → logprob: -15.50008773803711
    6. '[I' → logprob: -16.12508773803711
    7. '[s' → logprob: -16.37508773803711
    8. '[j' → logprob: -16.37508773803711
    9. '[a' → logprob: -16.50008773803711
    10. ' ' → logprob: -16.62508773803711

Token 129: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03205818310379982
    2. ')
' → logprob: -3.9070582389831543
    3. ']' → logprob: -4.782058238983154
    4. ' )' → logprob: -6.032058238983154
    5. ' )
' → logprob: -8.532057762145996
    6. '])' → logprob: -9.157057762145996
    7. '   ' → logprob: -9.532057762145996
    8. '
' → logprob: -10.032057762145996
    9. ']
' → logprob: -10.032057762145996
    10. '）' → logprob: -10.282057762145996

Token 130: '  ' (ID: 256)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39980337023735046
    2. ' if' → logprob: -1.3998034000396729
    3. '   ' → logprob: -2.774803400039673
    4. 'count' → logprob: -4.274803161621094
    5. '
' → logprob: -6.149803161621094
    6. '    
' → logprob: -6.899803161621094
    7. ' ' → logprob: -7.024803161621094
    8. ' count' → logprob: -7.024803161621094
    9. ' 
' → logprob: -7.149803161621094
    10. '<|end|>' → logprob: -8.274803161621094

Token 131: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12149043381214142
    2. '   ' → logprob: -2.371490478515625
    3. ' if' → logprob: -4.871490478515625
    4. ' 
' → logprob: -4.996490478515625
    5. ' ' → logprob: -5.996490478515625
    6. '<|end|>' → logprob: -6.746490478515625
    7. '  
' → logprob: -6.996490478515625
    8. '    
' → logprob: -7.121490478515625
    9. 'if' → logprob: -8.246490478515625
    10. '   
' → logprob: -8.496490478515625

Token 132: 'T' (ID: 51)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4591943323612213
    2. 'if' → logprob: -1.334194302558899
    3. 'count' → logprob: -2.5841944217681885
    4. ' ' → logprob: -4.334194183349609
    5. ' count' → logprob: -4.584194183349609
    6. ' 
' → logprob: -5.834194183349609
    7. '
' → logprob: -7.209194183349609
    8. 'result' → logprob: -7.334194183349609
    9. '<|end|>' → logprob: -7.584194183349609
    10. '    
' → logprob: -8.45919418334961

Token 133: 'の' (ID: 3385)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11730559170246124
    2. 'の' → logprob: -3.9923055171966553
    3. ')' → logprob: -4.117305755615234
    4. ''s' → logprob: -4.117305755615234
    5. '<|end|>' → logprob: -4.242305755615234
    6. 'に' → logprob: -5.492305755615234
    7. ' ' → logprob: -5.492305755615234
    8. ']' → logprob: -5.617305755615234
    9. 'を' → logprob: -5.617305755615234
    10. '[' → logprob: -5.742305755615234

Token 134: '要' (ID: 7724)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5326284766197205
    2. 'if' → logprob: -1.5326285362243652
    3. 'key' → logprob: -3.0326285362243652
    4. ')' → logprob: -3.6576285362243652
    5. 'len' → logprob: -4.157628536224365
    6. 'i' → logprob: -4.407628536224365
    7. ' if' → logprob: -4.532628536224365
    8. 'n' → logprob: -4.657628536224365
    9. ' key' → logprob: -4.657628536224365
    10. ' ' → logprob: -4.657628536224365

Token 135: '素' (ID: 31399)
  Prédit: '素'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '素' → logprob: -4.60414821645827e-06
    2. '索' → logprob: -12.625004768371582
    3. '目' → logprob: -14.875004768371582
    4. 'す' → logprob: -15.375004768371582
    5. '所' → logprob: -15.875004768371582
    6. '数' → logprob: -16.250003814697266
    7. '```' → logprob: -16.625003814697266
    8. '点' → logprob: -17.000003814697266
    9. '#' → logprob: -17.000003814697266
    10. 'ン' → logprob: -17.125003814697266

Token 136: 'を' (ID: 7277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07734440267086029
    2. '<|end|>' → logprob: -3.5773444175720215
    3. ' if' → logprob: -3.9523444175720215
    4. '
' → logprob: -4.5773444175720215
    5. ' ' → logprob: -4.8273444175720215
    6. '  ' → logprob: -6.3273444175720215
    7. '    
' → logprob: -6.4523444175720215
    8. '<|end|>' → logprob: -6.9523444175720215
    9. ' 
' → logprob: -7.0773444175720215
    10. 'if' → logprob: -7.3273444175720215

Token 137: '番' (ID: 30357)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.6930045485496521
    2. 'S' → logprob: -1.6930046081542969
    3. 'liner' → logprob: -1.9430046081542969
    4. 'lin' → logprob: -2.693004608154297
    5. '検索' → logprob: -3.568004608154297
    6. 'キー' → logprob: -4.193004608154297
    7. '1' → logprob: -4.693004608154297
    8. '探' → logprob: -5.193004608154297
    9. '判' → logprob: -5.193004608154297
    10. 'search' → logprob: -5.443004608154297

Token 138: '兵' (ID: 44902)
  Prédit: '号'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '号' → logprob: -0.034786637872457504
    2. 'n' → logprob: -3.7847867012023926
    3. '兵' → logprob: -5.659786701202393
    4. '目' → logprob: -6.159786701202393
    5. 'i' → logprob: -6.534786701202393
    6. '外' → logprob: -6.659786701202393
    7. '0' → logprob: -7.409786701202393
    8. '地' → logprob: -8.159786224365234
    9. '
' → logprob: -8.284786224365234
    10. 'g' → logprob: -8.659786224365234

Token 139: 'として' (ID: 176315)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03926672041416168
    2. ' if' → logprob: -3.91426682472229
    3. 'if' → logprob: -4.039266586303711
    4. ' ' → logprob: -8.039266586303711
    5. '  ' → logprob: -8.789266586303711
    6. 'count' → logprob: -8.789266586303711
    7. '
' → logprob: -9.539266586303711
    8. '    
' → logprob: -9.664266586303711
    9. '	if' → logprob: -10.039266586303711
    10. '<|end|>' → logprob: -10.164266586303711

Token 140: 'お' (ID: 8930)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6566510200500488
    2. ' if' → logprob: -0.7816510200500488
    3. '   ' → logprob: -4.531651020050049
    4. 'count' → logprob: -4.656651020050049
    5. ' count' → logprob: -5.781651020050049
    6. ' ' → logprob: -8.40665054321289
    7. 'result' → logprob: -9.90665054321289
    8. '
' → logprob: -10.53165054321289
    9. '  ' → logprob: -10.78165054321289
    10. '    ' → logprob: -11.03165054321289

Token 141: 'く' (ID: 10459)
  Prédit: 'く'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'く' → logprob: -0.061427488923072815
    2. 'き' → logprob: -3.186427593231201
    3. 'いて' → logprob: -4.061427593231201
    4. 'か' → logprob: -7.936427593231201
    5. 'け' → logprob: -9.061427116394043
    6. 'いた' → logprob: -9.311427116394043
    7. '守' → logprob: -9.561427116394043
    8. '#' → logprob: -9.686427116394043
    9. 'k' → logprob: -10.311427116394043
    10. 'い' → logprob: -10.436427116394043

Token 142: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002864900976419449
    2. ' if' → logprob: -6.502864837646484
    3. 'if' → logprob: -6.627864837646484
    4. '
' → logprob: -11.377864837646484
    5. '    
' → logprob: -11.752864837646484
    6. ' ' → logprob: -11.877864837646484
    7. '  ' → logprob: -11.877864837646484
    8. '<|end|>' → logprob: -13.127864837646484
    9. '	if' → logprob: -13.877864837646484
    10. '    ' → logprob: -14.127864837646484

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03201615810394287
    2. ' if' → logprob: -4.282016277313232
    3. 'if' → logprob: -4.282016277313232
    4. 'count' → logprob: -6.282016277313232
    5. ' count' → logprob: -7.032016277313232
    6. ' ' → logprob: -7.407016277313232
    7. '
' → logprob: -8.907015800476074
    8. '    
' → logprob: -8.907015800476074
    9. '  ' → logprob: -9.282015800476074
    10. '    ' → logprob: -9.657015800476074

Token 144: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.28478094935417175
    2. 'if' → logprob: -1.4097809791564941
    3. ' count' → logprob: -6.284780979156494
    4. ' if' → logprob: -6.534780979156494
    5. '
' → logprob: -8.909780502319336
    6. 'result' → logprob: -10.034780502319336
    7. '   ' → logprob: -10.284780502319336
    8. '    
' → logprob: -10.784780502319336
    9. 'res' → logprob: -10.909780502319336
    10. 'print' → logprob: -12.034780502319336

Token 145: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10128524899482727
    2. '+=' → logprob: -2.351285219192505
    3. '=' → logprob: -7.476285457611084
    4. '+' → logprob: -8.226284980773926
    5. ' =' → logprob: -8.476284980773926
    6. ' ' → logprob: -11.226284980773926
    7. ' +' → logprob: -11.601284980773926
    8. '=count' → logprob: -12.226284980773926
    9. '+=(' → logprob: -12.351284980773926
    10. ' ' → logprob: -13.851284980773926

Token 146: ' liner' (ID: 72024)
  Prédit: 'lin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lin' → logprob: -0.05494682863354683
    2. 'liner' → logprob: -3.1799468994140625
    3. 'line' → logprob: -4.5549468994140625
    4. ' liner' → logprob: -7.5549468994140625
    5. 'linear' → logprob: -8.804946899414062
    6. '```' → logprob: -8.929946899414062
    7. 'l' → logprob: -9.554946899414062
    8. 'list' → logprob: -10.242446899414062
    9. 'ly' → logprob: -10.304946899414062
    10. 'link' → logprob: -10.304946899414062

Token 147: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00010354319238103926
    2. 'search' → logprob: -9.250103950500488
    3. 'earch' → logprob: -12.250103950500488
    4. ' es' → logprob: -14.125103950500488
    5. '```' → logprob: -15.250103950500488
    6. 'ес' → logprob: -15.500103950500488
    7. 'res' → logprob: -16.375102996826172
    8. 'se' → logprob: -16.437602996826172
    9. ' ' → logprob: -16.437602996826172
    10. '_search' → logprob: -16.500102996826172

Token 148: 'earch' (ID: 3430)
  Prédit: 'arch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arch' → logprob: -0.02991444244980812
    2. 'earch' → logprob: -3.779914379119873
    3. 'search' → logprob: -5.029914379119873
    4. 'ar' → logprob: -10.779914855957031
    5. 'a' → logprob: -11.279914855957031
    6. ' arch' → logprob: -11.779914855957031
    7. 'arching' → logprob: -11.904914855957031
    8. 'Search' → logprob: -12.404914855957031
    9. 'ach' → logprob: -12.404914855957031
    10. '
' → logprob: -12.654914855957031

Token 149: '(S' (ID: 6181)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.004206259269267321
    2. '(' → logprob: -5.50420618057251
    3. ' (' → logprob: -9.129206657409668
    4. '(
' → logprob: -11.629206657409668
    5. '(t' → logprob: -12.004206657409668
    6. '((' → logprob: -12.629206657409668
    7. '(

' → logprob: -14.879206657409668
    8. '(S' → logprob: -15.004206657409668
    9. '(s' → logprob: -16.50420570373535
    10. '（' → logprob: -16.62920570373535

Token 150: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.5928495486150496e-05
    2. '(n' → logprob: -11.750016212463379
    3. '[' → logprob: -12.625016212463379
    4. '[i' → logprob: -13.125016212463379
    5. 'n' → logprob: -14.500016212463379
    6. ')' → logprob: -14.625016212463379
    7. ' [' → logprob: -14.875016212463379
    8. '[m' → logprob: -15.000016212463379
    9. '
' → logprob: -15.625016212463379
    10. '[T' → logprob: -16.125015258789062

Token 151: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.022008949890732765
    2. ')' → logprob: -3.8970088958740234
    3. ' ])' → logprob: -7.522008895874023
    4. '])
' → logprob: -8.022008895874023
    5. ']' → logprob: -8.522008895874023
    6. ' )' → logprob: -9.522008895874023
    7. '))' → logprob: -9.647008895874023
    8. ' ' → logprob: -10.147008895874023
    9. ')]' → logprob: -10.397008895874023
    10. ')
' → logprob: -10.397008895874023

Token 152: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.250000953674316
    3. 'for' → logprob: -16.75
    4. '#print' → logprob: -17.75
    5. '```' → logprob: -17.875
    6. '
' → logprob: -18.25
    7. '    
' → logprob: -19.5
    8. '<|end|>' → logprob: -19.5
    9. 'del' → logprob: -20.5
    10. '   ' → logprob: -20.625

Token 153: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.011050059460103512
    2. '(' → logprob: -4.511050224304199
    3. 'count' → logprob: -13.8860502243042
    4. '((' → logprob: -15.3860502243042
    5. '("("' → logprob: -15.3860502243042
    6. '(
' → logprob: -15.6360502243042
    7. '(cnt' → logprob: -15.6360502243042
    8. ' (' → logprob: -15.7610502243042
    9. '(sum' → logprob: -16.261049270629883
    10. '(c' → logprob: -16.261049270629883

Token 154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ' )' → logprob: -13.37500286102295
    3. ')
' → logprob: -14.00000286102295
    4. ')#' → logprob: -15.87500286102295
    5. '）' → logprob: -16.500001907348633
    6. '())' → logprob: -16.875001907348633
    7. '*' → logprob: -17.250001907348633
    8. '))' → logprob: -17.500001907348633
    9. '+' → logprob: -17.500001907348633
    10. ')`' → logprob: -17.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 152
Tokens correctement prédits (1ère position, stricte): 50
Tokens correctement prédits (1ère position, avec adaptation): 54
Tokens correctement prédits (top 10): 104
Précision stricte (1ère position): 32.89%
Précision adaptée (1ère position): 35.53%
Précision (top 10): 68.42%
================================================================================
