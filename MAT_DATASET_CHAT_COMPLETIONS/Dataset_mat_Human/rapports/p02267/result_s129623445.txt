================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
S = [int(_) for _ in input().split()]
q = int(input())
T = [int(_) for _ in input().split()]

cnt = 0

for t in T:
    if t in S:
        cnt += 1

print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'S' (ID: 50)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19768550992012024
    2. '[' → logprob: -2.072685480117798
    3. '=' → logprob: -3.072685480117798
    4. ' =' → logprob: -5.447685718536377
    5. 't' → logprob: -7.447685718536377
    6. 'um' → logprob: -8.197685241699219
    7. ')' → logprob: -8.322685241699219
    8. '[i' → logprob: -8.322685241699219
    9. 'u' → logprob: -8.697685241699219
    10. '(' → logprob: -8.697685241699219

Token 7: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5784480571746826
    2. ' input' → logprob: -0.8284480571746826
    3. '"' → logprob: -7.203448295593262
    4. '""' → logprob: -7.453448295593262
    5. ' ' → logprob: -8.078448295593262
    6. ' []' → logprob: -8.703448295593262
    7. ''' → logprob: -9.078448295593262
    8. ' "' → logprob: -9.078448295593262
    9. '[]' → logprob: -9.578448295593262
    10. '(input' → logprob: -9.578448295593262

Token 8: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6058171987533569
    2. 'input' → logprob: -0.8558171987533569
    3. '0' → logprob: -3.8558173179626465
    4. ']' → logprob: -5.4808173179626465
    5. 'list' → logprob: -6.2308173179626465
    6. 'i' → logprob: -7.9808173179626465
    7. '[]' → logprob: -8.105816841125488
    8. '(int' → logprob: -8.230816841125488
    9. '()]' → logprob: -8.230816841125488
    10. ']int' → logprob: -8.230816841125488

Token 9: '(_)' (ID: 108255)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07253554463386536
    2. '(input' → logprob: -2.697535514831543
    3. '(x' → logprob: -6.322535514831543
    4. '(i' → logprob: -7.822535514831543
    5. '()' → logprob: -9.447535514831543
    6. '(a' → logprob: -9.822535514831543
    7. '(s' → logprob: -10.072535514831543
    8. '(S' → logprob: -10.197535514831543
    9. '('' → logprob: -10.322535514831543
    10. '(user' → logprob: -10.822535514831543

Token 10: ' for' (ID: 395)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12069125473499298
    2. '(input' → logprob: -2.6206912994384766
    3. 'for' → logprob: -3.6206912994384766
    4. ')' → logprob: -4.370691299438477
    5. ' input' → logprob: -7.245691299438477
    6. ' for' → logprob: -8.120691299438477
    7. '(' → logprob: -8.870691299438477
    8. ']' → logprob: -8.995691299438477
    9. 'x' → logprob: -9.495691299438477
    10. '(x' → logprob: -10.120691299438477

Token 11: ' _' (ID: 1175)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04330722987651825
    2. 'input' → logprob: -3.168307304382324
    3. ' ' → logprob: -8.793307304382324
    4. '(input' → logprob: -9.043307304382324
    5. '_' → logprob: -11.168307304382324
    6. '(' → logprob: -11.543307304382324
    7. ' range' → logprob: -11.793307304382324
    8. '_input' → logprob: -13.043307304382324
    9. ' (' → logprob: -13.418307304382324
    10. '=input' → logprob: -13.918307304382324

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0026956244837492704
    2. 'input' → logprob: -7.002695560455322
    3. 'in' → logprob: -7.377695560455322
    4. '(' → logprob: -7.752695560455322
    5. ' ' → logprob: -8.00269603729248
    6. ' input' → logprob: -8.12769603729248
    7. ' (' → logprob: -10.87769603729248
    8. '<|end|>' → logprob: -11.37769603729248
    9. '(input' → logprob: -11.62769603729248
    10. ']' → logprob: -12.06519603729248

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023106414824724197
    2. ' input' → logprob: -3.898106336593628
    3. 'range' → logprob: -6.023106575012207
    4. ' range' → logprob: -8.898106575012207
    5. '(input' → logprob: -13.273106575012207
    6. 'list' → logprob: -16.14810562133789
    7. '=input' → logprob: -16.39810562133789
    8. 'in' → logprob: -16.39810562133789
    9. '[input' → logprob: -16.64810562133789
    10. '<input' → logprob: -16.77310562133789

Token 14: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.14493685960769653
    2. '()]' → logprob: -2.3949368000030518
    3. '()' → logprob: -3.1449368000030518
    4. '())' → logprob: -7.394937038421631
    5. '()].' → logprob: -10.019936561584473
    6. '()][' → logprob: -11.894936561584473
    7. '(' → logprob: -13.144936561584473
    8. '()>' → logprob: -13.394936561584473
    9. '()],' → logprob: -13.519936561584473
    10. '()`' → logprob: -14.519936561584473

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003815756645053625
    2. 'strip' → logprob: -8.000381469726562
    3. 'rstrip' → logprob: -10.000381469726562
    4. ' split' → logprob: -14.125381469726562
    5. '(split' → logprob: -17.250381469726562
    6. 'spl' → logprob: -17.625381469726562
    7. 's' → logprob: -18.875381469726562
    8. 'read' → logprob: -19.750381469726562
    9. ')' → logprob: -20.375381469726562
    10. 'replace' → logprob: -20.500381469726562

Token 16: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.06321632117033005
    2. '())' → logprob: -3.063216209411621
    3. '()' → logprob: -4.313216209411621
    4. '(' → logprob: -6.938216209411621
    5. ')]' → logprob: -8.938216209411621
    6. ']' → logprob: -11.188216209411621
    7. '('' → logprob: -12.063216209411621
    8. '(),' → logprob: -13.563216209411621
    9. '()]
' → logprob: -13.688216209411621
    10. '()][' → logprob: -13.688216209411621

Token 17: 'q' (ID: 80)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.9929446578025818
    2. 'c' → logprob: -1.4929447174072266
    3. 's' → logprob: -1.8679447174072266
    4. 'a' → logprob: -3.1179447174072266
    5. 'm' → logprob: -3.2429447174072266
    6. 'd' → logprob: -3.2429447174072266
    7. 'M' → logprob: -3.9929447174072266
    8. 'r' → logprob: -3.9929447174072266
    9. 'for' → logprob: -3.9929447174072266
    10. 'count' → logprob: -4.117944717407227

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7070697546005249
    2. 'u' → logprob: -1.082069754600525
    3. '=' → logprob: -1.832069754600525
    4. ' ' → logprob: -5.4570698738098145
    5. '.' → logprob: -6.3320698738098145
    6. '_' → logprob: -7.2070698738098145
    7. ',' → logprob: -7.5820698738098145
    8. 'ue' → logprob: -8.957069396972656
    9. 's' → logprob: -9.332069396972656
    10. '[' → logprob: -9.457069396972656

Token 19: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04863482713699341
    2. ' int' → logprob: -3.0486347675323486
    3. '0' → logprob: -10.17363452911377
    4. '[int' → logprob: -12.29863452911377
    5. ' ' → logprob: -12.92363452911377
    6. '=int' → logprob: -14.67363452911377
    7. '<int' → logprob: -14.79863452911377
    8. '10' → logprob: -14.92363452911377
    9. '1' → logprob: -15.17363452911377
    10. '  ' → logprob: -15.67363452911377

Token 20: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14587031304836273
    2. '(input' → logprob: -2.0208702087402344
    3. '()' → logprob: -5.770870208740234
    4. 'input' → logprob: -10.770870208740234
    5. '(
' → logprob: -10.895870208740234
    6. ' (' → logprob: -12.145870208740234
    7. '('' → logprob: -12.270870208740234
    8. '("("' → logprob: -12.270870208740234
    9. '(in' → logprob: -12.770870208740234
    10. '(

' → logprob: -13.020870208740234

Token 21: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.39928823709487915
    2. '()' → logprob: -1.1492881774902344
    3. ')' → logprob: -4.399288177490234
    4. '()
' → logprob: -11.024288177490234
    5. '())
' → logprob: -11.024288177490234
    6. ' ())' → logprob: -12.274288177490234
    7. '(' → logprob: -12.399288177490234
    8. '`)' → logprob: -12.524288177490234
    9. '();)' → logprob: -12.774288177490234
    10. '()]' → logprob: -13.149288177490234

Token 22: 'T' (ID: 51)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06489429622888565
    2. 'r' → logprob: -3.189894199371338
    3. 't' → logprob: -5.314894199371338
    4. 'f' → logprob: -6.189894199371338
    5. 's' → logprob: -6.189894199371338
    6. 'q' → logprob: -6.314894199371338
    7. 'result' → logprob: -6.439894199371338
    8. 'a' → logprob: -6.439894199371338
    9. 'd' → logprob: -6.939894199371338
    10. 'results' → logprob: -6.939894199371338

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025838512927293777
    2. '=' → logprob: -3.775838613510132
    3. ' ' → logprob: -6.400838375091553
    4. '[' → logprob: -7.275838375091553
    5. '_' → logprob: -9.150838851928711
    6. 's' → logprob: -9.775838851928711
    7. ' =[' → logprob: -10.650838851928711
    8. '[]' → logprob: -11.150838851928711
    9. '=[]' → logprob: -11.650838851928711
    10. ')' → logprob: -11.775838851928711

Token 24: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6494297385215759
    2. '[' → logprob: -0.8994297385215759
    3. ' [' → logprob: -2.6494297981262207
    4. '[input' → logprob: -8.899429321289062
    5. '[Int' → logprob: -11.649429321289062
    6. '[i' → logprob: -12.274429321289062
    7. ' ' → logprob: -13.024429321289062
    8. '[str' → logprob: -13.149429321289062
    9. '[ind' → logprob: -13.399429321289062
    10. '[in' → logprob: -13.649429321289062

Token 25: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3544423381972592e-05
    2. ' int' → logprob: -11.75001335144043
    3. '(int' → logprob: -12.75001335144043
    4. ']int' → logprob: -13.75001335144043
    5. '[int' → logprob: -13.75001335144043
    6. '<int' → logprob: -15.50001335144043
    7. 'i' → logprob: -16.12501335144043
    8. '=int' → logprob: -16.62501335144043
    9. '	int' → logprob: -16.75001335144043
    10. 'in' → logprob: -17.12501335144043

Token 26: '(_)' (ID: 108255)
  Prédit: '(_)'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_)' → logprob: -0.0009962485637515783
    2. '(' → logprob: -7.375996112823486
    3. '_]' → logprob: -8.750996589660645
    4. '(_' → logprob: -9.000996589660645
    5. '()]' → logprob: -10.000996589660645
    6. ']' → logprob: -10.875996589660645
    7. '_' → logprob: -11.375996589660645
    8. '(x' → logprob: -12.750996589660645
    9. ' (_)' → logprob: -13.000996589660645
    10. '(q' → logprob: -13.625996589660645

Token 27: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22418613731861115
    2. '(_)' → logprob: -2.0991861820220947
    3. ' for' → logprob: -2.8491861820220947
    4. '(' → logprob: -4.099185943603516
    5. '()' → logprob: -6.724185943603516
    6. ')' → logprob: -6.849185943603516
    7. '(x' → logprob: -8.099185943603516
    8. '(input' → logprob: -8.224185943603516
    9. '(for' → logprob: -8.349185943603516
    10. ']' → logprob: -8.599185943603516

Token 28: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1388152837753296
    2. ' input' → logprob: -2.263815402984619
    3. ' _' → logprob: -3.763815402984619
    4. 'input' → logprob: -6.263815402984619
    5. ' ' → logprob: -7.638815402984619
    6. '_input' → logprob: -10.013814926147461
    7. ' range' → logprob: -11.638814926147461
    8. '(input' → logprob: -12.138814926147461
    9. ' ' → logprob: -12.388814926147461
    10. '=input' → logprob: -13.263814926147461

Token 29: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5237008333206177
    2. 'input' → logprob: -0.8987008333206177
    3. '_' → logprob: -7.898700714111328
    4. '(input' → logprob: -9.398700714111328
    5. ' in' → logprob: -9.898700714111328
    6. 'in' → logprob: -10.273700714111328
    7. '_input' → logprob: -11.273700714111328
    8. '=input' → logprob: -11.398700714111328
    9. '	input' → logprob: -12.898700714111328
    10. ' ' → logprob: -12.898700714111328

Token 30: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.42871445417404175
    2. 'input' → logprob: -1.0537145137786865
    3. '(input' → logprob: -11.803714752197266
    4. ' ' → logprob: -13.428714752197266
    5. '=input' → logprob: -13.553714752197266
    6. '[input' → logprob: -13.928714752197266
    7. 'range' → logprob: -14.428714752197266
    8. '_input' → logprob: -14.928714752197266
    9. '<input' → logprob: -15.053714752197266
    10. ' range' → logprob: -15.178714752197266

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.45848218582978e-06
    2. '()' → logprob: -13.00000286102295
    3. '()].' → logprob: -16.250001907348633
    4. '(' → logprob: -16.875001907348633
    5. ' ().' → logprob: -17.750001907348633
    6. '()]' → logprob: -18.875001907348633
    7. '().__' → logprob: -20.125001907348633
    8. '].' → logprob: -20.500001907348633
    9. '(.' → logprob: -20.625001907348633
    10. '>().' → logprob: -21.250001907348633

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. 'strip' → logprob: -13.750001907348633
    3. ' split' → logprob: -15.375001907348633
    4. ')' → logprob: -16.500001907348633
    5. 'rstrip' → logprob: -16.750001907348633
    6. '(split' → logprob: -17.875001907348633
    7. 'plit' → logprob: -18.250001907348633
    8. 'spl' → logprob: -18.750001907348633
    9. '```' → logprob: -19.125001907348633
    10. 's' → logprob: -19.250001907348633

Token 33: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0003646633995231241
    2. '()' → logprob: -8.750364303588867
    3. ']' → logprob: -8.875364303588867
    4. ')]' → logprob: -9.750364303588867
    5. '())' → logprob: -12.250364303588867
    6. ']()' → logprob: -13.875364303588867
    7. '()][' → logprob: -14.000364303588867
    8. '()]
' → logprob: -14.375364303588867
    9. '`]' → logprob: -14.750364303588867
    10. '(' → logprob: -15.250364303588867

Token 34: ']

' (ID: 3144)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.41708487272262573
    2. ']' → logprob: -1.1670849323272705
    3. ')' → logprob: -3.5420849323272705
    4. '])' → logprob: -7.667084693908691
    5. '])]' → logprob: -9.167084693908691
    6. ')])' → logprob: -9.292084693908691
    7. '']' → logprob: -9.917084693908691
    8. '`]' → logprob: -10.292084693908691
    9. '()]' → logprob: -10.667084693908691
    10. '）' → logprob: -11.167084693908691

Token 35: 'cnt' (ID: 33160)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.046971097588539124
    2. 'count' → logprob: -3.546971082687378
    3. 'r' → logprob: -4.546971321105957
    4. 'ans' → logprob: -6.046971321105957
    5. 'cnt' → logprob: -6.421971321105957
    6. 's' → logprob: -6.921971321105957
    7. 'result' → logprob: -7.796971321105957
    8. 'a' → logprob: -8.046971321105957
    9. 'answer' → logprob: -8.421971321105957
    10. 'res' → logprob: -9.046971321105957

Token 36: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7802023887634277
    2. '=' → logprob: -1.4052023887634277
    3. '(' → logprob: -1.6552023887634277
    4. ' =' → logprob: -2.4052023887634277
    5. '[' → logprob: -5.030202388763428
    6. 's' → logprob: -5.405202388763428
    7. ' ' → logprob: -5.780202388763428
    8. ' (' → logprob: -8.655202865600586
    9. '_=' → logprob: -9.155202865600586
    10. '_space' → logprob: -9.405202865600586

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12692894041538239
    2. ' ' → logprob: -2.1269290447235107
    3. 'sum' → logprob: -15.25192928314209
    4. '{}' → logprob: -15.62692928314209
    5. ' ' → logprob: -15.87692928314209
    6. '  ' → logprob: -16.501928329467773
    7. ' sum' → logprob: -16.751928329467773
    8. 's' → logprob: -17.126928329467773
    9. ' {}' → logprob: -17.751928329467773
    10. '{' → logprob: -17.876928329467773

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.625004768371582
    3. 'sum' → logprob: -13.875004768371582
    4. '{}' → logprob: -15.500004768371582
    5. '{' → logprob: -17.375003814697266
    6. '1' → logprob: -18.500003814697266
    7. '[' → logprob: -18.625003814697266
    8. '```' → logprob: -18.750003814697266
    9. 'len' → logprob: -19.375003814697266
    10. '100' → logprob: -19.500003814697266

Token 39: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008764470112510026
    2. ' for' → logprob: -7.750876426696777
    3. '
' → logprob: -8.000876426696777
    4. '\n' → logprob: -9.875876426696777
    5. '\' → logprob: -10.750876426696777
    6. '<|end|>' → logprob: -11.000876426696777
    7. '```' → logprob: -11.250876426696777
    8. '' → logprob: -12.750876426696777
    9. '	for' → logprob: -13.125876426696777
    10. 'For' → logprob: -14.500876426696777

Token 40: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.60414821645827e-06
    2. 'i' → logprob: -12.375004768371582
    3. ' for' → logprob: -15.625004768371582
    4. 'f' → logprob: -17.000003814697266
    5. '```' → logprob: -18.000003814697266
    6. 'fo' → logprob: -18.125003814697266
    7. 'j' → logprob: -18.250003814697266
    8. 'idx' → logprob: -18.625003814697266
    9. '	for' → logprob: -19.000003814697266
    10. 'index' → logprob: -19.625003814697266

Token 41: ' t' (ID: 260)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3834138810634613
    2. ' ' → logprob: -1.8834139108657837
    3. ' s' → logprob: -3.008413791656494
    4. '_' → logprob: -3.133413791656494
    5. ' _' → logprob: -3.133413791656494
    6. ' S' → logprob: -4.383413791656494
    7. ' x' → logprob: -4.383413791656494
    8. ' v' → logprob: -6.258413791656494
    9. ' t' → logprob: -6.383413791656494
    10. 'i' → logprob: -7.883413791656494

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0062475306913256645
    2. 'in' → logprob: -5.256247520446777
    3. ' ' → logprob: -7.006247520446777
    4. ' i' → logprob: -9.881247520446777
    5. '  ' → logprob: -10.131247520446777
    6. '	in' → logprob: -13.006247520446777
    7. 's' → logprob: -13.256247520446777
    8. '_' → logprob: -13.381247520446777
    9. 'i' → logprob: -13.506247520446777
    10. ' ,' → logprob: -13.631247520446777

Token 43: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.47446736693382263
    2. ' T' → logprob: -0.974467396736145
    3. 'S' → logprob: -8.224467277526855
    4. ' S' → logprob: -9.349467277526855
    5. ' ' → logprob: -10.349467277526855
    6. 't' → logprob: -13.974467277526855
    7. ' ' → logprob: -14.599467277526855
    8. '  ' → logprob: -14.849467277526855
    9. ' range' → logprob: -14.974467277526855
    10. ' t' → logprob: -15.099467277526855

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015407454338856041
    2. ':
' → logprob: -8.875154495239258
    3. ' :' → logprob: -12.000154495239258
    4. '   ' → logprob: -13.125154495239258
    5. ':**' → logprob: -13.750154495239258
    6. ' if' → logprob: -13.875154495239258
    7. '):' → logprob: -14.000154495239258
    8. 'if' → logprob: -14.500154495239258
    9. '>' → logprob: -14.500154495239258
    10. '<|end|>' → logprob: -15.125154495239258

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019599171355366707
    2. ' ' → logprob: -7.251959800720215
    3. '    ' → logprob: -7.501959800720215
    4. '    
' → logprob: -8.501959800720215
    5. ' if' → logprob: -8.751959800720215
    6. '```' → logprob: -9.001959800720215
    7. '  ' → logprob: -10.126959800720215
    8. 'if' → logprob: -10.251959800720215
    9. '<|end|>' → logprob: -10.626959800720215
    10. '[' → logprob: -10.626959800720215

Token 46: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2321518361568451
    2. 'if' (adapté à ' if') → logprob: -1.7321518659591675
    3. ' for' → logprob: -4.357151985168457
    4. ' i' → logprob: -5.107151985168457
    5. '   ' → logprob: -5.357151985168457
    6. ' cnt' → logprob: -5.982151985168457
    7. 'for' → logprob: -7.107151985168457
    8. ' try' → logprob: -7.357151985168457
    9. 'i' → logprob: -7.607151985168457
    10. 'cnt' → logprob: -7.857151985168457

Token 47: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.04865878447890282
    2. 't' → logprob: -3.048658847808838
    3. ' ' → logprob: -9.79865837097168
    4. '  ' → logprob: -12.04865837097168
    5. ' S' → logprob: -13.54865837097168
    6. ')' → logprob: -13.86115837097168
    7. ' ' → logprob: -14.04865837097168
    8. '"' → logprob: -14.17365837097168
    9. '   ' → logprob: -14.36115837097168
    10. '_' → logprob: -14.61115837097168

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004639691673219204
    2. 'in' → logprob: -5.379639625549316
    3. ' ' → logprob: -11.504639625549316
    4. ' i' → logprob: -12.504639625549316
    5. 'n' → logprob: -14.004639625549316
    6. ' not' → logprob: -14.129639625549316
    7. 's' → logprob: -14.129639625549316
    8. '  ' → logprob: -14.692139625549316
    9. ')' → logprob: -14.692139625549316
    10. '<|end|>' → logprob: -14.817139625549316

Token 49: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.16022473573684692
    2. ' S' → logprob: -1.9102246761322021
    3. ' ' → logprob: -14.785224914550781
    4. ')' → logprob: -16.28522491455078
    5. '(S' → logprob: -17.91022491455078
    6. '   ' → logprob: -18.28522491455078
    7. '_S' → logprob: -18.41022491455078
    8. ' set' → logprob: -18.47272491455078
    9. 's' → logprob: -18.53522491455078
    10. '	S' → logprob: -18.66022491455078

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017600801947992295
    2. ':
' → logprob: -8.750176429748535
    3. '):' → logprob: -11.375176429748535
    4. '   ' → logprob: -13.250176429748535
    5. ' :' → logprob: -13.375176429748535
    6. ':**' → logprob: -13.375176429748535
    7. ')' → logprob: -15.125176429748535
    8. '       ' → logprob: -16.00017547607422
    9. '=' → logprob: -16.37517547607422
    10. '):
' → logprob: -16.50017547607422

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016754455282352865
    2. '   ' → logprob: -9.500167846679688
    3. '      ' → logprob: -10.625167846679688
    4. 'cnt' → logprob: -11.375167846679688
    5. '        
' → logprob: -11.625167846679688
    6. '    ' → logprob: -11.625167846679688
    7. '     ' → logprob: -11.875167846679688
    8. ' cnt' → logprob: -11.875167846679688
    9. '    ' → logprob: -12.750167846679688
    10. '```' → logprob: -12.875167846679688

Token 52: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.3136994540691376
    2. '       ' → logprob: -1.93869948387146
    3. ' cnt' → logprob: -2.18869948387146
    4. '   ' → logprob: -4.438699245452881
    5. '	cnt' → logprob: -7.188699245452881
    6. 'count' → logprob: -7.813699245452881
    7. '(cnt' → logprob: -9.563699722290039
    8. '[cnt' → logprob: -9.813699722290039
    9. ' ' → logprob: -10.063699722290039
    10. '    ' → logprob: -10.313699722290039

Token 53: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6932964324951172
    2. '+=' → logprob: -0.6932964324951172
    3. '+' → logprob: -9.068296432495117
    4. '=' → logprob: -10.693296432495117
    5. '   ' → logprob: -11.693296432495117
    6. ']+=' → logprob: -13.693296432495117
    7. ' =' → logprob: -14.818296432495117
    8. '+="' → logprob: -15.193296432495117
    9. '    ' → logprob: -15.318296432495117
    10. ' +' → logprob: -15.443296432495117

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.750019073486328
    4. '１' → logprob: -20.250019073486328
    5. '```' → logprob: -20.375019073486328
    6. '+' → logprob: -21.250019073486328
    7. '  ' → logprob: -21.812519073486328
    8. '0' → logprob: -21.875019073486328
    9. '<|end|>' → logprob: -22.187519073486328
    10. 's' → logprob: -22.250019073486328

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '１' → logprob: -20.375001907348633
    4. '   ' → logprob: -20.750001907348633
    5. '```' → logprob: -21.625001907348633
    6. '+' → logprob: -22.250001907348633
    7. '0' → logprob: -22.812501907348633
    8. '  ' → logprob: -22.875001907348633
    9. '`' → logprob: -22.937501907348633
    10. ')' → logprob: -23.187501907348633

Token 56: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.73314929776825e-05
    2. '
' → logprob: -9.62508773803711
    3. ' print' → logprob: -11.12508773803711
    4. '<|end|>' → logprob: -13.00008773803711
    5. '```' → logprob: -13.00008773803711
    6. '\n' → logprob: -14.12508773803711
    7. '#print' → logprob: -15.25008773803711
    8. '(print' → logprob: -15.50008773803711
    9. ')' → logprob: -16.00008773803711
    10. 'prin' → logprob: -16.25008773803711

Token 57: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. ' print' → logprob: -13.875001907348633
    3. '
' → logprob: -14.625001907348633
    4. 'pr' → logprob: -16.375001907348633
    5. 'prin' → logprob: -18.000001907348633
    6. ')' → logprob: -18.125001907348633
    7. '```' → logprob: -18.500001907348633
    8. '#print' → logprob: -18.625001907348633
    9. '<|end|>' → logprob: -18.875001907348633
    10. '(print' → logprob: -19.125001907348633

Token 58: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014172682538628578
    2. '(cnt' → logprob: -4.264172554016113
    3. '(count' → logprob: -12.889172554016113
    4. '(`' → logprob: -13.764172554016113
    5. '("("' → logprob: -13.764172554016113
    6. '()' → logprob: -13.889172554016113
    7. '(

' → logprob: -14.264172554016113
    8. '(
' → logprob: -14.264172554016113
    9. '('' → logprob: -14.514172554016113
    10. '(c' → logprob: -15.139172554016113

Token 59: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.375
    3. '))' → logprob: -16.75
    4. ')`' → logprob: -18.875
    5. ')
' → logprob: -19.0
    6. '')' → logprob: -19.125
    7. '）' → logprob: -19.625
    8. '`)' → logprob: -19.75
    9. '()' → logprob: -20.625
    10. ')}' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 57
Tokens correctement prédits (1ère position, stricte): 23
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 40.35%
Précision adaptée (1ère position): 42.11%
Précision (top 10): 80.70%
================================================================================
