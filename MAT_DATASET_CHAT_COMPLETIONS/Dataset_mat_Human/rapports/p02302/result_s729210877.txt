================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/python3

import array
from fractions import Fraction
import functools
import itertools
import math
import os
import sys

def main():
    N = read_int()
    P = [Vec(*read_ints()) for _ in range(N)]
    Q = read_int()
    for _ in range(Q):
        x1, y1, x2, y2 = read_ints()
        print(solve(N, P, Vec(x1, y1), Vec(x2, y2)))

def solve(N, P, A, B):
    b = B - A
    P = [p - A for p in P]

    ccw = 0
    cw = 0
    for p in P:
        c = b.cross(p)
        if c >= 0:
            ccw += 1
        if c <= 0:
            cw += 1

    if ccw == N:
        return float(poly_area(P))
    if cw == N:
        return 0

    cross_points = []

    for i in range(N):
        j = (i + 1) % N
        p = P[i]
        q = P[j]
        qp = q - p

        cross_qp_b = qp.cross(b)
        if cross_qp_b == 0:
            continue
        k = Fraction(b.cross(p), cross_qp_b)
        if 0 < k <= 1:
            t = Fraction(p.cross(qp), b.cross(qp))
            cross_points.append((t, i, k))

    cross_points.sort()
    _, i1, k1 = cross_points[0]
    _, i2, k2 = cross_points[1]

    x1 = P[i1] + k1 * (P[(i1 + 1) % N] - P[i1])
    x2 = P[i2] + k2 * (P[(i2 + 1) % N] - P[i2])
    Q = [x2]
    j = (i2 + 1) % N
    while j != i1:
        Q.append(P[j])
        j = (j + 1) % N
    Q.append(P[i1])
    Q.append(x1)

    return float(poly_area(Q))

def poly_area(P):
    N = len(P)
    a = 0
    for i in range(1, N - 1):
        a += Fraction((P[i + 1] - P[i]).cross(P[0] - P[i + 1]), 2)
    return a

###############################################################################
# AUXILIARY FUNCTIONS

class Vec(object):
    def __init__(self, x, y):
        self.x = x
        self.y = y
        super().__init__()

    def __add__(self, other):
        return Vec(self.x + other.x, self.y + other.y)

    def __sub__(self, other):
        return Vec(self.x - other.x, self.y - other.y)

    def __mul__(self, scalar):
        return Vec(self.x * scalar, self.y * scalar)

    def __rmul__(self, scalar):
        return Vec(self.x * scalar, self.y * scalar)

    def __truediv__(self, scalar):
        return Vec(self.x / scalar, self.y / scalar)

    def __iadd__(self, other):
        self.x += other.x
        self.y += other.y
        return self

    def __isub__(self, other):
        self.x -= other.x
        self.y -= other.y
        return self

    def __imul__(self, scalar):
        self.x *= scalar
        self.y *= scalar
        return self

    def __idiv__(self, scalar):
        self.x /= scalar
        self.y /= scalar
        return self

    def __neg__(self):
        return Vec(-self.x, -self.y)

    def __eq__(self, other):
        return self.x == other.x and self.y == other.y

    def __ne__(self, other):
        return not self.__eq__(other)

    def __hash__(self):
        return hash('Vec', self.x, self.y)

    def dot(self, other):
        return self.x * other.x + self.y * other.y

    def cross(self, other):
        return self.x * other.y - self.y * other.x

    def abs2(self):
        return self.x * self.x + self.y * self.y

    def __abs__(self):
        return math.sqrt(float(self.abs2()))

    def __repr__(self):
        return '({}, {})'.format(self.x, self.y)

DEBUG = 'DEBUG' in os.environ

def inp():
    return sys.stdin.readline().rstrip()

def read_int():
    return int(inp())

def read_ints():
    return [int(e) for e in inp().split()]

def dprint(*value, sep=' ', end='\n'):
    if DEBUG:
        print(*value, sep=sep, end=end)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/python' (ID: 56900)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4815128743648529
    2. '/env' → logprob: -1.2315129041671753
    3. '/python' → logprob: -2.4815127849578857
    4. '/bash' → logprob: -5.231513023376465
    5. '/bin' → logprob: -6.731513023376465
    6. 'python' → logprob: -9.356513023376465
    7. '#!/' → logprob: -11.106513023376465
    8. 'env' → logprob: -11.481513023376465
    9. '/b' → logprob: -11.481513023376465
    10. '/per' → logprob: -12.481513023376465

Token 4: '3' (ID: 18)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.14125914871692657
    2. '3' → logprob: -2.89125919342041
    3. '\' → logprob: -4.01625919342041
    4. 'import' → logprob: -4.14125919342041
    5. ' 
' → logprob: -4.39125919342041
    6. '  
' → logprob: -4.64125919342041
    7. '
' → logprob: -5.39125919342041
    8. 'newline' → logprob: -5.64125919342041
    9. '```' → logprob: -5.76625919342041
    10. '#!/' → logprob: -5.89125919342041

Token 5: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.034527555108070374
    2. '
' → logprob: -4.534527778625488
    3. '  
' → logprob: -5.034527778625488
    4. '\' → logprob: -5.284527778625488
    5. ' 
' → logprob: -5.784527778625488
    6. 'import' → logprob: -6.034527778625488
    7. '```' → logprob: -6.409527778625488
    8. 'newline' → logprob: -6.409527778625488
    9. '' → logprob: -6.659527778625488
    10. '<|end|>' → logprob: -7.284527778625488

Token 6: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1966870129108429
    2. '\n' → logprob: -1.9466869831085205
    3. 'print' → logprob: -3.4466869831085205
    4. '#!/' → logprob: -7.3216872215271
    5. '\' → logprob: -7.5716872215271
    6. 'im' → logprob: -7.6966872215271
    7. '' → logprob: -7.9466872215271
    8. '```' → logprob: -8.071686744689941
    9. '  
' → logprob: -8.321686744689941
    10. '
' → logprob: -8.321686744689941

Token 7: ' array' (ID: 2644)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006798379123210907
    2. ' ' → logprob: -6.006798267364502
    3. ' sys' → logprob: -6.006798267364502
    4. ' json' → logprob: -7.506798267364502
    5. ' requests' → logprob: -8.00679874420166
    6. ' math' → logprob: -8.88179874420166
    7. ' import' → logprob: -9.38179874420166
    8. '<|end|>' → logprob: -9.38179874420166
    9. ' collections' → logprob: -9.50679874420166
    10. ' space' → logprob: -9.50679874420166

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23567049205303192
    2. '<|end|>' → logprob: -1.9856704473495483
    3. '[' → logprob: -3.485670566558838
    4. 'a' → logprob: -4.360670566558838
    5. '
' → logprob: -5.110670566558838
    6. '<|end|>' → logprob: -5.235670566558838
    7. '```' → logprob: -5.610670566558838
    8. 'newline' → logprob: -5.860670566558838
    9. 'import' → logprob: -5.985670566558838
    10. '\' → logprob: -6.610670566558838

Token 9: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04902446269989014
    2. '<|end|>' → logprob: -4.04902458190918
    3. 'a' → logprob: -4.67402458190918
    4. 'import' → logprob: -5.17402458190918
    5. '_' → logprob: -5.79902458190918
    6. '[' → logprob: -5.79902458190918
    7. '<|end|>' → logprob: -6.29902458190918
    8. '
' → logprob: -6.92402458190918
    9. ' ' → logprob: -7.04902458190918
    10. 's' → logprob: -7.17402458190918

Token 10: ' fractions' (ID: 110523)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.9411391615867615
    2. ' collections' → logprob: -0.9411391615867615
    3. ' sys' → logprob: -2.0661392211914062
    4. ' math' → logprob: -2.8161392211914062
    5. ' os' → logprob: -4.566139221191406
    6. ' typing' → logprob: -4.816139221191406
    7. ' itertools' → logprob: -5.316139221191406
    8. ' ' → logprob: -6.191139221191406
    9. 'collections' → logprob: -6.191139221191406
    10. ' arrays' → logprob: -6.441139221191406

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02077415958046913
    2. 'import' → logprob: -3.8957741260528564
    3. ' ' → logprob: -9.145773887634277
    4. '	import' → logprob: -10.270773887634277
    5. '_import' → logprob: -10.270773887634277
    6. '.' → logprob: -10.520773887634277
    7. '<|end|>' → logprob: -11.395773887634277
    8. '.import' → logprob: -12.270773887634277
    9. '-import' → logprob: -12.520773887634277
    10. ' Import' → logprob: -13.770773887634277

Token 12: ' Fraction' (ID: 112108)
  Prédit: ' Fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.043071016669273376
    2. 'Fraction' → logprob: -3.1680710315704346
    3. ' gcd' → logprob: -9.793070793151855
    4. ' fractions' → logprob: -11.543070793151855
    5. '_fraction' → logprob: -13.543070793151855
    6. 'Fra' → logprob: -13.793070793151855
    7. ' fraction' → logprob: -13.918070793151855
    8. ' Fra' → logprob: -13.918070793151855
    9. ' Rational' → logprob: -14.043070793151855
    10. ' ' → logprob: -14.793070793151855

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0096505880355835
    2. '\n' → logprob: -1.2596505880355835
    3. '<|end|>' → logprob: -2.384650707244873
    4. '

' → logprob: -2.634650707244873
    5. 'import' → logprob: -3.009650707244873
    6. 'a' → logprob: -3.509650707244873
    7. '\' → logprob: -3.634650707244873
    8. '' → logprob: -3.884650707244873
    9. '#' → logprob: -4.384650707244873
    10. '[' → logprob: -5.009650707244873

Token 14: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.4683754444122314
    2. '\n' → logprob: -1.4683754444122314
    3. '
' → logprob: -2.0933754444122314
    4. 'a' → logprob: -2.3433754444122314
    5. '<|end|>' → logprob: -2.8433754444122314
    6. '\' → logprob: -2.9683754444122314
    7. '' → logprob: -3.2183754444122314
    8. '

' → logprob: -3.2183754444122314
    9. 'def' → logprob: -3.7183754444122314
    10. '#' → logprob: -4.218375205993652

Token 15: ' functools' (ID: 142636)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.02684137597680092
    2. ' sys' → logprob: -3.776841402053833
    3. ' itertools' → logprob: -6.401841163635254
    4. ' collections' → logprob: -7.026841163635254
    5. ' os' → logprob: -7.651841163635254
    6. ' random' → logprob: -8.151841163635254
    7. ' numpy' → logprob: -9.776841163635254
    8. 'math' → logprob: -9.901841163635254
    9. ' functools' → logprob: -9.901841163635254
    10. ' decimal' → logprob: -10.401841163635254

Token 16: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.003838062286377
    2. '
' → logprob: -1.503838062286377
    3. '.' → logprob: -2.128838062286377
    4. '<|end|>' → logprob: -2.253838062286377
    5. 'def' → logprob: -2.753838062286377
    6. '\' → logprob: -2.753838062286377
    7. '_' → logprob: -4.378838062286377
    8. '#' → logprob: -4.878838062286377
    9. '\n' → logprob: -5.378838062286377
    10. '

' → logprob: -5.503838062286377

Token 17: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9493837356567383
    2. '@' → logprob: -1.1993837356567383
    3. 'import' → logprob: -2.6993837356567383
    4. 'd' → logprob: -2.6993837356567383
    5. '
' → logprob: -3.3243837356567383
    6. '#' → logprob: -3.3243837356567383
    7. '\' → logprob: -3.5743837356567383
    8. '_' → logprob: -3.8243837356567383
    9. '\n' → logprob: -4.824383735656738
    10. ' 
' → logprob: -5.324383735656738

Token 18: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.08109235763549805
    2. ' itertools' → logprob: -3.206092357635498
    3. ' operator' → logprob: -3.456092357635498
    4. ' sys' → logprob: -5.706092357635498
    5. ' heap' → logprob: -7.081092357635498
    6. ' hashlib' → logprob: -7.831092357635498
    7. 'math' → logprob: -8.206092834472656
    8. ' collections' → logprob: -8.206092834472656
    9. ' os' → logprob: -8.331092834472656
    10. 'operator' → logprob: -9.081092834472656

Token 19: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.961868941783905
    2. '<|end|>' → logprob: -1.0868690013885498
    3. '.' → logprob: -1.9618690013885498
    4. '
' → logprob: -2.33686900138855
    5. 'def' → logprob: -4.461868762969971
    6. '

' → logprob: -5.086868762969971
    7. '\n' → logprob: -5.586868762969971
    8. '#' → logprob: -5.586868762969971
    9. '_' → logprob: -5.711868762969971
    10. '\' → logprob: -5.711868762969971

Token 20: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.20570120215415955
    2. '
' → logprob: -2.3307011127471924
    3. 'def' → logprob: -3.0807011127471924
    4. '<|end|>' → logprob: -4.5807013511657715
    5. '

' → logprob: -5.0807013511657715
    6. ',' → logprob: -5.5807013511657715
    7. '\n' → logprob: -5.7057013511657715
    8. 'from' → logprob: -5.9557013511657715
    9. '```' → logprob: -6.2057013511657715
    10. '\' → logprob: -6.2057013511657715

Token 21: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.010129543021321297
    2. ' operator' → logprob: -5.010129451751709
    3. ' json' → logprob: -6.635129451751709
    4. ' collections' → logprob: -7.135129451751709
    5. 'math' → logprob: -7.635129451751709
    6. ' sys' → logprob: -7.635129451751709
    7. ' os' → logprob: -9.010129928588867
    8. ' ' → logprob: -9.635129928588867
    9. 'operator' → logprob: -10.010129928588867
    10. ' random' → logprob: -10.260129928588867

Token 22: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5107725858688354
    2. '<|end|>' → logprob: -1.5107725858688354
    3. '.' → logprob: -2.635772705078125
    4. '#' → logprob: -3.510772705078125
    5. '_' → logprob: -3.885772705078125
    6. '
' → logprob: -4.385772705078125
    7. 'def' → logprob: -4.510772705078125
    8. '\' → logprob: -5.010772705078125
    9. ',' → logprob: -5.385772705078125
    10. '```' → logprob: -5.635772705078125

Token 23: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1676781177520752
    2. '#' → logprob: -1.2926781177520752
    3. '\' → logprob: -2.417678117752075
    4. '_' → logprob: -2.417678117752075
    5. '\n' → logprob: -2.792678117752075
    6. 'def' → logprob: -2.917678117752075
    7. '.' → logprob: -3.417678117752075
    8. '
' → logprob: -3.542678117752075
    9. '```' → logprob: -4.667677879333496
    10. ',' → logprob: -4.917677879333496

Token 24: ' os' (ID: 1994)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.20332956314086914
    2. ' os' → logprob: -2.953329563140869
    3. ' sys' → logprob: -2.953329563140869
    4. 'operator' → logprob: -3.203329563140869
    5. ' random' → logprob: -4.203329563140869
    6. ' collections' → logprob: -5.203329563140869
    7. ' re' → logprob: -5.578329563140869
    8. 'random' → logprob: -5.703329563140869
    9. 'os' → logprob: -5.953329563140869
    10. 'sys' → logprob: -5.953329563140869

Token 25: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1724531501531601
    2. '<|end|>' → logprob: -2.0474531650543213
    3. '
' → logprob: -3.6724531650543213
    4. '```' → logprob: -6.297452926635742
    5. '\n' → logprob: -7.672452926635742
    6. ',' → logprob: -7.672452926635742
    7. '<|end|>' → logprob: -8.172452926635742
    8. ' 
' → logprob: -8.922452926635742
    9. '

' → logprob: -8.922452926635742
    10. ' import' → logprob: -8.922452926635742

Token 26: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.022311056032776833
    2. '<|end|>' → logprob: -4.272311210632324
    3. '
' → logprob: -5.772311210632324
    4. '```' → logprob: -6.147311210632324
    5. '#' → logprob: -6.897311210632324
    6. '\n' → logprob: -7.022311210632324
    7. ',' → logprob: -8.022311210632324
    8. 'from' → logprob: -9.022311210632324
    9. '

' → logprob: -9.147311210632324
    10. '' → logprob: -9.897311210632324

Token 27: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.34894105792045593
    2. 'sys' → logprob: -1.2239410877227783
    3. ' re' → logprob: -8.7239408493042
    4. 're' → logprob: -8.9739408493042
    5. ' pathlib' → logprob: -9.7239408493042
    6. 'random' → logprob: -9.8489408493042
    7. ' random' → logprob: -10.0989408493042
    8. 'stat' → logprob: -11.0989408493042
    9. 'signal' → logprob: -12.0989408493042
    10. ' stat' → logprob: -12.3489408493042

Token 28: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1388604640960693
    2. '
' → logprob: -1.2638604640960693
    3. '<|end|>' → logprob: -1.5138604640960693
    4. '

' → logprob: -2.6388604640960693
    5. 'import' → logprob: -2.8888604640960693
    6. '#' → logprob: -3.7638604640960693
    7. '\' → logprob: -4.888860702514648
    8. 'newline' → logprob: -5.513860702514648
    9. '_' → logprob: -5.888860702514648
    10. 'def' → logprob: -6.013860702514648

Token 29: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5853576064109802
    2. 'def' → logprob: -1.085357666015625
    3. '#' → logprob: -3.210357666015625
    4. '\' → logprob: -3.335357666015625
    5. '\n' → logprob: -5.085357666015625
    6. 'import' → logprob: -5.210357666015625
    7. '
' → logprob: -5.210357666015625
    8. 'n' → logprob: -6.210357666015625
    9. '<|end|>' → logprob: -6.335357666015625
    10. 'class' → logprob: -6.835357666015625

Token 30: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010993468575179577
    2. '_' → logprob: -5.010993480682373
    3. ' _' → logprob: -7.135993480682373
    4. ' calculate' → logprob: -7.135993480682373
    5. ' space' → logprob: -8.010993003845215
    6. ' factorial' → logprob: -8.010993003845215
    7. ' process' → logprob: -8.385993003845215
    8. ' main' → logprob: -8.510993003845215
    9. '_space' → logprob: -8.760993003845215
    10. ' compute' → logprob: -8.760993003845215

Token 31: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009376360103487968
    2. '():' → logprob: -4.759376525878906
    3. '(:' → logprob: -7.384376525878906
    4. ':' → logprob: -9.509376525878906
    5. '(":' → logprob: -11.384376525878906
    6. '(`' → logprob: -11.509376525878906
    7. ' (' → logprob: -11.509376525878906
    8. '(
' → logprob: -11.634376525878906
    9. '()' → logprob: -11.884376525878906
    10. '```' → logprob: -13.134376525878906

Token 32: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4230278432369232
    2. '   ' → logprob: -1.1730278730392456
    3. '    ' → logprob: -4.173027992248535
    4. '(' → logprob: -4.423027992248535
    5. ':' → logprob: -6.048027992248535
    6. '  ' → logprob: -6.923027992248535
    7. 'n' → logprob: -6.923027992248535
    8. ' (' → logprob: -7.298027992248535
    9. '(n' → logprob: -7.923027992248535
    10. ' 
' → logprob: -8.048027992248535

Token 33: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10703404247760773
    2. 'n' → logprob: -3.2320339679718018
    3. '#' → logprob: -3.9820339679718018
    4. '   ' → logprob: -4.732034206390381
    5. '    ' → logprob: -4.857034206390381
    6. 'r' → logprob: -5.232034206390381
    7. 'x' → logprob: -5.482034206390381
    8. 'a' → logprob: -6.107034206390381
    9. 'i' → logprob: -6.232034206390381
    10. ' #' → logprob: -6.607034206390381

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020843621343374252
    2. '=' → logprob: -4.270843505859375
    3. ' ' → logprob: -5.270843505859375
    4. ',' → logprob: -7.145843505859375
    5. '=int' → logprob: -8.645843505859375
    6. ')' → logprob: -8.770843505859375
    7. '<|end|>' → logprob: -9.270843505859375
    8. '  ' → logprob: -9.645843505859375
    9. '_space' → logprob: -10.145843505859375
    10. ' ,' → logprob: -10.270843505859375

Token 35: ' read' (ID: 1729)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.010868833400309086
    2. 'int' → logprob: -4.635869026184082
    3. ' ' → logprob: -7.135869026184082
    4. '10' → logprob: -8.635869026184082
    5. ' len' → logprob: -9.885869026184082
    6. '20' → logprob: -10.510869026184082
    7. ' input' → logprob: -11.385869026184082
    8. '40' → logprob: -12.260869026184082
    9. '5' → logprob: -12.510869026184082
    10. '15' → logprob: -12.635869026184082

Token 36: '_int' (ID: 12285)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3096146285533905
    2. '_line' → logprob: -1.434614658355713
    3. '_input' → logprob: -4.309614658355713
    4. 'line' → logprob: -5.434614658355713
    5. 'int' → logprob: -5.934614658355713
    6. '())' → logprob: -6.309614658355713
    7. '(' → logprob: -6.309614658355713
    8. '_' → logprob: -6.684614658355713
    9. '_int' → logprob: -7.434614658355713
    10. ' ()' → logprob: -7.684614658355713

Token 37: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -9.198043699143454e-05
    2. 's' → logprob: -10.375091552734375
    3. '(' → logprob: -10.750091552734375
    4. ' ()' → logprob: -11.250091552734375
    5. '('' → logprob: -12.625091552734375
    6. '().' → logprob: -13.000091552734375
    7. '32' → logprob: -13.125091552734375
    8. '（）' → logprob: -13.375091552734375
    9. '()(' → logprob: -13.625091552734375
    10. '()`' → logprob: -13.625091552734375

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29326531291007996
    2. '<|end|>' → logprob: -2.0432653427124023
    3. '()' → logprob: -3.0432653427124023
    4. ')' → logprob: -3.7932653427124023
    5. ' ' → logprob: -3.9182653427124023
    6. '    
' → logprob: -4.793265342712402
    7. '(' → logprob: -5.043265342712402
    8. '
' → logprob: -5.418265342712402
    9. '    ' → logprob: -5.418265342712402
    10. '  ' → logprob: -6.168265342712402

Token 39: ' P' (ID: 398)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5230202078819275
    2. ')' → logprob: -2.2730202674865723
    3. 's' → logprob: -2.5230202674865723
    4. '<|end|>' → logprob: -2.5230202674865723
    5. 'data' → logprob: -3.7730202674865723
    6. '   ' → logprob: -3.8980202674865723
    7. 'n' → logprob: -4.273020267486572
    8. '#' → logprob: -4.648020267486572
    9. '<|end|>' → logprob: -4.898020267486572
    10. '    ' → logprob: -4.898020267486572

Token 40: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7533767819404602
    2. ' =' → logprob: -0.7533767819404602
    3. 's' → logprob: -3.7533767223358154
    4. 'r' → logprob: -5.2533769607543945
    5. 'ro' → logprob: -5.5033769607543945
    6. '=[]' → logprob: -5.6283769607543945
    7. 'os' → logprob: -6.0033769607543945
    8. 'er' → logprob: -6.1283769607543945
    9. '_list' → logprob: -6.3783769607543945
    10. '_' → logprob: -6.6283769607543945

Token 41: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.9684536457061768
    2. ' read' → logprob: -1.5934536457061768
    3. ' list' → logprob: -1.7184536457061768
    4. 'read' → logprob: -2.7184536457061768
    5. 'list' → logprob: -2.9684536457061768
    6. ' []' → logprob: -2.9684536457061768
    7. '[' → logprob: -3.3434536457061768
    8. '[]' → logprob: -3.5934536457061768
    9. '[int' → logprob: -7.093453407287598
    10. '[list' → logprob: -7.218453407287598

Token 42: 'Vec' (ID: 18136)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.2519647777080536
    2. 'Fraction' → logprob: -1.751964807510376
    3. 'int' → logprob: -3.626964807510376
    4. ' read' → logprob: -4.251964569091797
    5. ' Fraction' → logprob: -5.876964569091797
    6. 'float' → logprob: -6.376964569091797
    7. 'tuple' → logprob: -6.751964569091797
    8. ']' → logprob: -7.001964569091797
    9. '0' → logprob: -7.501964569091797
    10. '(read' → logprob: -7.876964569091797

Token 43: '(*' (ID: 9000)
  Prédit: 'tor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tor' → logprob: -0.003613497130572796
    2. '3' → logprob: -5.753613471984863
    3. '2' → logprob: -8.128613471984863
    4. '(' → logprob: -9.628613471984863
    5. 'Tor' → logprob: -11.003613471984863
    6. 'or' → logprob: -11.628613471984863
    7. 'tors' → logprob: -11.628613471984863
    8. 'ctor' → logprob: -12.378613471984863
    9. ' tor' → logprob: -12.378613471984863
    10. '(P' → logprob: -12.503613471984863

Token 44: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.015068317763507366
    2. 'map' → logprob: -4.265068531036377
    3. '(read' → logprob: -7.890068531036377
    4. ' read' → logprob: -8.140068054199219
    5. ')' → logprob: -9.890068054199219
    6. '(map' → logprob: -10.015068054199219
    7. 'list' → logprob: -10.015068054199219
    8. '[' → logprob: -10.265068054199219
    9. 'sys' → logprob: -10.765068054199219
    10. ' map' → logprob: -11.015068054199219

Token 45: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.06485585868358612
    2. '_float' → logprob: -3.0648558139801025
    3. 'int' → logprob: -4.564856052398682
    4. '_f' → logprob: -6.314856052398682
    5. '_tuple' → logprob: -7.064856052398682
    6. '(int' → logprob: -7.814856052398682
    7. '_map' → logprob: -8.064855575561523
    8. 'float' → logprob: -8.189855575561523
    9. '_vec' → logprob: -8.439855575561523
    10. '_in' → logprob: -8.439855575561523

Token 46: 's' (ID: 82)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0943947434425354
    2. 's' → logprob: -2.4693946838378906
    3. '()' → logprob: -5.719394683837891
    4. '()]' → logprob: -6.844394683837891
    5. '(' → logprob: -7.219394683837891
    6. '()),' → logprob: -9.34439468383789
    7. ')' → logprob: -9.84439468383789
    8. ' ())' → logprob: -10.09439468383789
    9. '().' → logprob: -10.59439468383789
    10. '()))' → logprob: -11.09439468383789

Token 47: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0008421457023359835
    2. '()' → logprob: -7.375842094421387
    3. '()]' → logprob: -9.500842094421387
    4. ' ())' → logprob: -9.750842094421387
    5. '())
' → logprob: -10.625842094421387
    6. '(' → logprob: -10.750842094421387
    7. '()))' → logprob: -11.125842094421387
    8. '()),' → logprob: -11.875842094421387
    9. '());' → logprob: -12.500842094421387
    10. '();)' → logprob: -13.125842094421387

Token 48: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4425484240055084
    2. ')]' → logprob: -1.192548394203186
    3. ']' → logprob: -2.9425485134124756
    4. ' for' → logprob: -7.6925482749938965
    5. '()]' → logprob: -8.692548751831055
    6. ' )' → logprob: -9.192548751831055
    7. '   ' → logprob: -9.192548751831055
    8. '()' → logprob: -9.567548751831055
    9. '])' → logprob: -9.567548751831055
    10. 'for' → logprob: -9.567548751831055

Token 49: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09758394956588745
    2. ' _' → logprob: -2.5975840091705322
    3. ' range' → logprob: -4.097583770751953
    4. 'range' → logprob: -6.847583770751953
    5. '_range' → logprob: -7.347583770751953
    6. '_i' → logprob: -9.347583770751953
    7. ' in' → logprob: -10.097583770751953
    8. ' ' → logprob: -10.722583770751953
    9. '<|end|>' → logprob: -11.722583770751953
    10. ' i' → logprob: -11.847583770751953

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0047857495956122875
    2. 'range' → logprob: -5.504785537719727
    3. 'in' → logprob: -7.504785537719727
    4. 'import' → logprob: -10.004785537719727
    5. ' range' → logprob: -10.004785537719727
    6. ' ' → logprob: -10.254785537719727
    7. '<|end|>' → logprob: -11.504785537719727
    8. '<|end|>' → logprob: -12.254785537719727
    9. '<' → logprob: -13.629785537719727
    10. 'i' → logprob: -13.629785537719727

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003605297766625881
    2. ' range' → logprob: -5.628605365753174
    3. '	range' → logprob: -13.503604888916016
    4. 'ran' → logprob: -13.753604888916016
    5. 'rang' → logprob: -14.253604888916016
    6. 'ra' → logprob: -14.253604888916016
    7. '[' → logprob: -14.753604888916016
    8. '(range' → logprob: -15.128604888916016
    9. '   ' → logprob: -15.628604888916016
    10. ' ' → logprob: -16.003604888916016

Token 52: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003818140830844641
    2. '(' → logprob: -7.875381946563721
    3. '(n' → logprob: -14.000381469726562
    4. '(
' → logprob: -15.125381469726562
    5. 'N' → logprob: -15.375381469726562
    6. ' (' → logprob: -15.500381469726562
    7. '(

' → logprob: -17.375381469726562
    8. '   ' → logprob: -17.500381469726562
    9. ')' → logprob: -17.750381469726562
    10. '(int' → logprob: -18.125381469726562

Token 53: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.779520092299208e-05
    2. ')' → logprob: -9.625078201293945
    3. ']' → logprob: -12.375078201293945
    4. ')])' → logprob: -13.000078201293945
    5. ')]
' → logprob: -13.125078201293945
    6. '))' → logprob: -14.000078201293945
    7. '   ' → logprob: -14.625078201293945
    8. '])]' → logprob: -14.750078201293945
    9. ')],' → logprob: -14.875078201293945
    10. ' )' → logprob: -15.750078201293945

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6668127179145813
    2. '
' → logprob: -1.2918126583099365
    3. ':' → logprob: -2.5418126583099365
    4. '<|end|>' → logprob: -3.5418126583099365
    5. ' ' → logprob: -3.6668126583099365
    6. '    
' → logprob: -3.9168126583099365
    7. '#' → logprob: -4.166812896728516
    8. 'def' → logprob: -5.041812896728516
    9. '' → logprob: -5.041812896728516
    10. ')' → logprob: -5.166812896728516

Token 55: ' Q' (ID: 1486)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4357260465621948
    2. '   ' → logprob: -1.5607260465621948
    3. '#' → logprob: -1.8107260465621948
    4. '<|end|>' → logprob: -2.0607261657714844
    5. '.' → logprob: -2.1857261657714844
    6. ')' → logprob: -3.1857261657714844
    7. '
' → logprob: -3.8107261657714844
    8. '    
' → logprob: -4.185726165771484
    9. ' 
' → logprob: -4.685726165771484
    10. '    ' → logprob: -4.810726165771484

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009077763184905052
    2. '=' → logprob: -4.759077548980713
    3. '.' → logprob: -7.884077548980713
    4. ',' → logprob: -10.384078025817871
    5. '[' → logprob: -11.134078025817871
    6. ' ' → logprob: -11.884078025817871
    7. '  ' → logprob: -12.259078025817871
    8. '[:]' → logprob: -12.259078025817871
    9. '=[]' → logprob: -12.509078025817871
    10. ' .' → logprob: -12.634078025817871

Token 57: ' read' (ID: 1729)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14374248683452606
    2. ' [' → logprob: -2.518742561340332
    3. 'sorted' → logprob: -3.643742561340332
    4. '[]' → logprob: -4.643742561340332
    5. '[P' → logprob: -5.268742561340332
    6. ' sorted' → logprob: -6.018742561340332
    7. 'Vec' → logprob: -6.018742561340332
    8. '[int' → logprob: -6.643742561340332
    9. ' Vec' → logprob: -6.768742561340332
    10. 'P' → logprob: -7.518742561340332

Token 58: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.001484747277572751
    2. '_' → logprob: -6.8764848709106445
    3. 'int' → logprob: -8.751484870910645
    4. '_vec' → logprob: -9.626484870910645
    5. 's' → logprob: -10.626484870910645
    6. '_float' → logprob: -10.626484870910645
    7. 'Ints' → logprob: -10.626484870910645
    8. '_Int' → logprob: -10.751484870910645
    9. 'Int' → logprob: -10.876484870910645
    10. '_array' → logprob: -10.876484870910645

Token 59: '()
' (ID: 1234)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4747486114501953
    2. '()' → logprob: -0.9747486114501953
    3. '(' → logprob: -7.724748611450195
    4. '()]' → logprob: -10.599748611450195
    5. '<|end|>' → logprob: -10.599748611450195
    6. ' ()' → logprob: -10.724748611450195
    7. '())' → logprob: -10.974748611450195
    8. '()<' → logprob: -10.974748611450195
    9. '()>' → logprob: -11.224748611450195
    10. '()[' → logprob: -11.474748611450195

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5835918188095093
    2. '<|end|>' → logprob: -0.8335918188095093
    3. ')' → logprob: -6.208591938018799
    4. '    ' → logprob: -6.958591938018799
    5. '<|end|>' → logprob: -7.083591938018799
    6. ' ' → logprob: -7.083591938018799
    7. '(' → logprob: -7.458591938018799
    8. '#' → logprob: -7.458591938018799
    9. '
' → logprob: -7.833591938018799
    10. '    
' → logprob: -8.08359146118164

Token 61: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43290337920188904
    2. ' for' → logprob: -1.9329034090042114
    3. 'for' (adapté à ' for') → logprob: -2.057903289794922
    4. 'R' → logprob: -3.057903289794922
    5. ' R' → logprob: -4.182903289794922
    6. 'A' → logprob: -5.432903289794922
    7. ' queries' → logprob: -6.682903289794922
    8. '  ' → logprob: -6.682903289794922
    9. 'L' → logprob: -6.932903289794922
    10. 'Q' → logprob: -6.932903289794922

Token 62: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.05403243377804756
    2. ' i' → logprob: -3.179032325744629
    3. '_' → logprob: -4.929032325744629
    4. ' ' → logprob: -6.304032325744629
    5. ' q' → logprob: -6.304032325744629
    6. ' p' → logprob: -10.429032325744629
    7. '_i' → logprob: -11.054032325744629
    8. 'i' → logprob: -11.429032325744629
    9. ' j' → logprob: -12.804032325744629
    10. '_q' → logprob: -12.929032325744629

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5372053980827332
    2. 'in' → logprob: -1.662205457687378
    3. ' ' → logprob: -1.787205457687378
    4. '_' → logprob: -3.787205457687378
    5. ' _' → logprob: -3.912205457687378
    6. ' i' → logprob: -5.162205219268799
    7. '  ' → logprob: -5.537205219268799
    8. 'range' → logprob: -6.912205219268799
    9. '<|end|>' → logprob: -7.162205219268799
    10. 'i' → logprob: -7.287205219268799

Token 64: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5242586135864258
    2. ' range' → logprob: -0.8992586135864258
    3. '(range' → logprob: -7.399258613586426
    4. ' xrange' → logprob: -8.524258613586426
    5. 'P' → logprob: -9.274258613586426
    6. '<|end|>' → logprob: -9.524258613586426
    7. '	range' → logprob: -9.899258613586426
    8. 'Q' → logprob: -10.399258613586426
    9. '_range' → logprob: -10.899258613586426
    10. 'read' → logprob: -11.524258613586426

Token 65: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.002754472428932786
    2. '(' → logprob: -6.0027546882629395
    3. ' (' → logprob: -8.252754211425781
    4. '(q' → logprob: -11.127754211425781
    5. ' Q' → logprob: -14.002754211425781
    6. '()' → logprob: -14.127754211425781
    7. 'Q' → logprob: -14.502754211425781
    8. ' ' → logprob: -14.502754211425781
    9. '(QWidget' → logprob: -15.627754211425781
    10. '(int' → logprob: -16.00275421142578

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030302047729492188
    2. ')' → logprob: -3.780302047729492
    3. ':' → logprob: -5.030302047729492
    4. ' ):' → logprob: -8.530302047729492
    5. '():' → logprob: -8.905302047729492
    6. ',' → logprob: -9.405302047729492
    7. ' )' → logprob: -10.530302047729492
    8. '):
' → logprob: -10.780302047729492
    9. '   ' → logprob: -11.155302047729492
    10. ':)' → logprob: -12.405302047729492

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.626264750957489
    2. '    ' → logprob: -1.3762648105621338
    3. '   ' → logprob: -1.6262648105621338
    4. '<|end|>' → logprob: -5.501264572143555
    5. ' ' → logprob: -6.126264572143555
    6. '     ' → logprob: -6.501264572143555
    7. '        
' → logprob: -6.626264572143555
    8. '	   ' → logprob: -6.751264572143555
    9. '<|end|>' → logprob: -7.001264572143555
    10. '    
' → logprob: -7.126264572143555

Token 68: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.6542462706565857
    2. ' x' → logprob: -1.7792463302612305
    3. 'query' → logprob: -2.7792463302612305
    4. ' query' → logprob: -2.9042463302612305
    5. 'a' → logprob: -3.6542463302612305
    6. 'k' → logprob: -3.9042463302612305
    7. 'q' → logprob: -4.2792463302612305
    8. ' k' → logprob: -4.4042463302612305
    9. '   ' → logprob: -4.5292463302612305
    10. ' a' → logprob: -4.7792463302612305

Token 69: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06772506237030029
    2. ',y' → logprob: -3.06772518157959
    3. ' ,' → logprob: -4.94272518157959
    4. '1' → logprob: -4.94272518157959
    5. '_,' → logprob: -6.31772518157959
    6. '0' → logprob: -6.94272518157959
    7. 'y' → logprob: -7.31772518157959
    8. ',i' → logprob: -8.94272518157959
    9. ' =' → logprob: -8.94272518157959
    10. ',Y' → logprob: -9.06772518157959

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018805658910423517
    2. ',y' → logprob: -6.876880645751953
    3. ' ,' → logprob: -7.376880645751953
    4. ',x' → logprob: -9.251880645751953
    5. '1' → logprob: -9.876880645751953
    6. '<|end|>' → logprob: -11.626880645751953
    7. ',n' → logprob: -11.751880645751953
    8. '=' → logprob: -11.751880645751953
    9. 'y' → logprob: -11.876880645751953
    10. ',Q' → logprob: -12.376880645751953

Token 71: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.31419864296913147
    2. 'y' → logprob: -1.314198613166809
    3. 'x' → logprob: -8.06419849395752
    4. '<|end|>' → logprob: -8.18919849395752
    5. '	y' → logprob: -8.81419849395752
    6. ' ' → logprob: -9.81419849395752
    7. ' x' → logprob: -9.81419849395752
    8. ',y' → logprob: -10.93919849395752
    9. '<|end|>' → logprob: -11.43919849395752
    10. '_y' → logprob: -11.68919849395752

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5120287066092715e-05
    2. ',' → logprob: -10.375035285949707
    3. '<|end|>' → logprob: -13.500035285949707
    4. '2' → logprob: -13.875035285949707
    5. '0' → logprob: -14.250035285949707
    6. ' ' → logprob: -15.375035285949707
    7. ')' → logprob: -16.12503433227539
    8. '<|end|>' → logprob: -16.25003433227539
    9. '=' → logprob: -16.37503433227539
    10. '_' → logprob: -16.50003433227539

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021927160560153425
    2. '=' → logprob: -9.375219345092773
    3. ' ,' → logprob: -9.500219345092773
    4. ' =' → logprob: -10.000219345092773
    5. ',x' → logprob: -11.500219345092773
    6. '<|end|>' → logprob: -13.375219345092773
    7. ',y' → logprob: -15.125219345092773
    8. ',user' → logprob: -15.250219345092773
    9. ')' → logprob: -15.500219345092773
    10. '<|end|>' → logprob: -15.625219345092773

Token 74: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.576168954372406
    2. 'x' → logprob: -0.826168954372406
    3. '  ' → logprob: -9.82616901397705
    4. ',x' → logprob: -9.95116901397705
    5. ' ' → logprob: -10.07616901397705
    6. '	x' → logprob: -10.32616901397705
    7. ',' → logprob: -11.20116901397705
    8. '   ' → logprob: -12.20116901397705
    9. 'z' → logprob: -12.32616901397705
    10. '    ' → logprob: -12.82616901397705

Token 75: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14301525056362152
    2. '2' → logprob: -2.018015146255493
    3. '0' → logprob: -8.393014907836914
    4. ',' → logprob: -9.143014907836914
    5. '```' → logprob: -13.268014907836914
    6. '   ' → logprob: -14.018014907836914
    7. ')' → logprob: -14.143014907836914
    8. '<|end|>' → logprob: -14.893014907836914
    9. ' ,' → logprob: -14.955514907836914
    10. '3' → logprob: -15.330514907836914

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.750436007976532e-05
    2. '<|end|>' → logprob: -10.75003719329834
    3. ' ,' → logprob: -12.12503719329834
    4. '1' → logprob: -12.37503719329834
    5. ',y' → logprob: -12.75003719329834
    6. ',user' → logprob: -13.62503719329834
    7. '‌,' → logprob: -14.50003719329834
    8. '<|end|>' → logprob: -14.75003719329834
    9. ',x' → logprob: -15.37503719329834
    10. '0' → logprob: -15.62503719329834

Token 77: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.056392233818769455
    2. 'y' → logprob: -2.931392192840576
    3. '<|end|>' → logprob: -7.306392192840576
    4. ' x' → logprob: -7.806392192840576
    5. 'x' → logprob: -8.431392669677734
    6. ' ' → logprob: -8.681392669677734
    7. 'z' → logprob: -11.556392669677734
    8. ',' → logprob: -11.681392669677734
    9. ' =' → logprob: -12.056392669677734
    10. ',y' → logprob: -12.681392669677734

Token 78: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0915786549448967
    2. '<|end|>' → logprob: -2.716578722000122
    3. '2' → logprob: -3.966578722000122
    4. ',' → logprob: -6.341578483581543
    5. '<|end|>' → logprob: -7.966578483581543
    6. '```' → logprob: -8.841578483581543
    7. '=' → logprob: -9.591578483581543
    8. '  ' → logprob: -10.341578483581543
    9. ' ' → logprob: -10.591578483581543
    10. ')' → logprob: -10.841578483581543

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05511098355054855
    2. '=' → logprob: -2.9301109313964844
    3. ',' → logprob: -8.805110931396484
    4. '<|end|>' → logprob: -9.805110931396484
    5. ' ' → logprob: -11.180110931396484
    6. ')' → logprob: -12.805110931396484
    7. ' =)' → logprob: -13.430110931396484
    8. '<|end|>' → logprob: -13.555110931396484
    9. ' =
' → logprob: -13.805110931396484
    10. ' ,' → logprob: -14.055110931396484

Token 80: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.008663260377943516
    2. 'read' → logprob: -4.758663177490234
    3. '	read' → logprob: -10.508663177490234
    4. ' ' → logprob: -11.008663177490234
    5. '<|end|>' → logprob: -13.508663177490234
    6. ' ' → logprob: -13.633663177490234
    7. '_read' → logprob: -14.008663177490234
    8. '(read' → logprob: -14.508663177490234
    9. ' readline' → logprob: -14.758663177490234
    10. 'Read' → logprob: -15.633663177490234

Token 81: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.02018539048731327
    2. '_' → logprob: -5.020185470581055
    3. '_in' → logprob: -5.895185470581055
    4. 'ints' → logprob: -6.020185470581055
    5. 'int' → logprob: -6.520185470581055
    6. 'Ints' → logprob: -6.645185470581055
    7. '_s' → logprob: -6.770185470581055
    8. 's' → logprob: -6.895185470581055
    9. '_tokens' → logprob: -7.770185470581055
    10. '_ids' → logprob: -7.770185470581055

Token 82: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9361264946837764e-07
    2. ' s' → logprob: -16.625
    3. '_s' → logprob: -18.375
    4. '()' → logprob: -18.5
    5. ''s' → logprob: -20.0
    6. 'S' → logprob: -20.5
    7. ')s' → logprob: -21.25
    8. 'sx' → logprob: -21.375
    9. '(s' → logprob: -21.625
    10. '```' → logprob: -21.875

Token 83: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.098748053773306e-05
    2. '()
' → logprob: -10.62506103515625
    3. '()]' → logprob: -11.12506103515625
    4. '(' → logprob: -11.25006103515625
    5. '()`' → logprob: -13.12506103515625
    6. '())' → logprob: -13.75006103515625
    7. ' ()' → logprob: -13.87506103515625
    8. '(),' → logprob: -14.12506103515625
    9. '()

' → logprob: -14.25006103515625
    10. '()>' → logprob: -14.62506103515625

Token 84: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3903566598892212
    2. '<|end|>' → logprob: -1.7653566598892212
    3. ' #' → logprob: -2.0153565406799316
    4. ' ' → logprob: -2.1403565406799316
    5. '        ' → logprob: -2.3903565406799316
    6. ' if' → logprob: -3.2653565406799316
    7. '#' → logprob: -3.3903565406799316
    8. ' pass' → logprob: -3.6403565406799316
    9. ' 
' → logprob: -4.265356540679932
    10. 'v' → logprob: -4.390356540679932

Token 86: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4051375091075897
    2. '()' → logprob: -1.655137538909912
    3. '("' → logprob: -3.280137538909912
    4. '('' → logprob: -3.280137538909912
    5. '((' → logprob: -4.155137538909912
    6. '(f' → logprob: -4.405137538909912
    7. '(P' → logprob: -4.530137538909912
    8. '(Vec' → logprob: -4.905137538909912
    9. '(math' → logprob: -5.280137538909912
    10. '(abs' → logprob: -5.905137538909912

Token 87: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -1.058171033859253
    2. 'um' → logprob: -1.433171033859253
    3. 'eg' → logprob: -1.933171033859253
    4. 'egment' → logprob: -2.558171033859253
    5. 't' → logprob: -3.433171033859253
    6. 'ub' → logprob: -3.558171033859253
    7. 'qrt' → logprob: -3.683171033859253
    8. 'hort' → logprob: -4.183171272277832
    9. 'quare' → logprob: -4.308171272277832
    10. 'eq' → logprob: -5.183171272277832

Token 88: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5377669334411621
    2. '(x' → logprob: -0.9127669334411621
    3. '(P' → logprob: -4.912766933441162
    4. ' (' → logprob: -5.787766933441162
    5. '((' → logprob: -5.912766933441162
    6. '(N' → logprob: -7.662766933441162
    7. '(Q' → logprob: -8.16276741027832
    8. '('' → logprob: -9.28776741027832
    9. ')' → logprob: -9.41276741027832
    10. '()' → logprob: -9.53776741027832

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.329167369287461e-05
    2. ' ,' → logprob: -9.750093460083008
    3. ',P' → logprob: -11.000093460083008
    4. ',x' → logprob: -11.375093460083008
    5. ',
' → logprob: -12.625093460083008
    6. ',Q' → logprob: -13.875093460083008
    7. ')' → logprob: -14.000093460083008
    8. ' ' → logprob: -15.375093460083008
    9. ',

' → logprob: -15.375093460083008
    10. '   ' → logprob: -16.000093460083008

Token 90: ' P' (ID: 398)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5556784272193909
    2. ' x' → logprob: -1.055678367614746
    3. ' Vec' → logprob: -3.055678367614746
    4. 'Vec' → logprob: -4.055678367614746
    5. 'P' → logprob: -4.680678367614746
    6. ' P' → logprob: -5.555678367614746
    7. ' ' → logprob: -8.555678367614746
    8. '(Vec' → logprob: -9.055678367614746
    9. '(x' → logprob: -9.430678367614746
    10. ' (' → logprob: -9.743178367614746

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001519325451226905
    2. ',x' → logprob: -9.000151634216309
    3. ' ,' → logprob: -10.750151634216309
    4. '   ' → logprob: -13.625151634216309
    5. ',[' → logprob: -13.625151634216309
    6. '[' → logprob: -13.625151634216309
    7. ',
' → logprob: -14.125151634216309
    8. '[x' → logprob: -14.500151634216309
    9. '),' → logprob: -14.875151634216309
    10. ')' → logprob: -15.250151634216309

Token 92: ' Vec' (ID: 22915)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.32354214787483215
    2. 'x' → logprob: -1.3235421180725098
    3. ' Vec' → logprob: -4.94854211807251
    4. 'Vec' → logprob: -6.82354211807251
    5. '(x' → logprob: -6.94854211807251
    6. ' (' → logprob: -7.07354211807251
    7. '(' → logprob: -9.698542594909668
    8. ' ' → logprob: -9.823542594909668
    9. '(Vec' → logprob: -10.198542594909668
    10. ' Vector' → logprob: -11.698542594909668

Token 93: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002836015075445175
    2. '(' → logprob: -5.877836227416992
    3. 'x' → logprob: -10.502836227416992
    4. '(
' → logprob: -13.252836227416992
    5. ')(' → logprob: -14.252836227416992
    6. ' (' → logprob: -14.752836227416992
    7. ')' → logprob: -14.877836227416992
    8. '((' → logprob: -15.502836227416992
    9. ')x' → logprob: -15.877836227416992
    10. '(y' → logprob: -16.002836227416992

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00047809764510020614
    2. '2' → logprob: -7.875478267669678
    3. ',' → logprob: -9.62547779083252
    4. ' ' → logprob: -11.12547779083252
    5. '=' → logprob: -12.12547779083252
    6. '   ' → logprob: -13.37547779083252
    7. '(' → logprob: -13.62547779083252
    8. ')' → logprob: -13.87547779083252
    9. 'y' → logprob: -14.00047779083252
    10. '_' → logprob: -14.37547779083252

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017162315780296922
    2. ',y' → logprob: -6.501716136932373
    3. ' ,' → logprob: -8.501716613769531
    4. 'y' → logprob: -12.501716613769531
    5. '<|end|>' → logprob: -13.376716613769531
    6. ',
' → logprob: -13.626716613769531
    7. ')' → logprob: -14.001716613769531
    8. ' ' → logprob: -14.501716613769531
    9. ',

' → logprob: -14.751716613769531
    10. '‌,' → logprob: -14.876716613769531

Token 96: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0028185509145259857
    2. ' y' → logprob: -5.877818584442139
    3. '	y' → logprob: -12.12781810760498
    4. '<|end|>' → logprob: -12.75281810760498
    5. '   ' → logprob: -12.87781810760498
    6. ' ' → logprob: -13.37781810760498
    7. '  ' → logprob: -14.75281810760498
    8. '    ' → logprob: -15.00281810760498
    9. ''y' → logprob: -16.502819061279297
    10. ')y' → logprob: -16.752819061279297

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013885662192478776
    2. '2' → logprob: -6.8763885498046875
    3. '))' → logprob: -8.626388549804688
    4. ')' → logprob: -9.251388549804688
    5. '),' → logprob: -10.501388549804688
    6. ' ' → logprob: -10.876388549804688
    7. ',' → logprob: -12.126388549804688
    8. ')))' → logprob: -12.188888549804688
    9. '_' → logprob: -12.376388549804688
    10. '```' → logprob: -12.438888549804688

Token 98: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00720643624663353
    2. ',' → logprob: -5.507206439971924
    3. ')' → logprob: -6.132206439971924
    4. ' ),' → logprob: -7.007206439971924
    5. ' ,' → logprob: -11.132205963134766
    6. ')))' → logprob: -11.382205963134766
    7. '))' → logprob: -11.757205963134766
    8. ' )' → logprob: -12.507205963134766
    9. ' ' → logprob: -13.382205963134766
    10. ',),' → logprob: -13.382205963134766

Token 99: ' Vec' (ID: 22915)
  Prédit: ' Vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vec' → logprob: -0.5761570930480957
    2. 'Vec' → logprob: -0.8261570930480957
    3. '	Vec' → logprob: -8.951156616210938
    4. ' ' → logprob: -10.451156616210938
    5. 'Vector' → logprob: -11.326156616210938
    6. '    ' → logprob: -11.326156616210938
    7. '(Vec' → logprob: -11.701156616210938
    8. ' ' → logprob: -12.326156616210938
    9. '   ' → logprob: -12.326156616210938
    10. '<Vec' → logprob: -12.701156616210938

Token 100: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.007754622492939234
    2. '(' → logprob: -4.882754802703857
    3. ' (' → logprob: -8.8827543258667
    4. '<|end|>' → logprob: -12.5077543258667
    5. 'x' → logprob: -13.1327543258667
    6. ')' → logprob: -13.2577543258667
    7. ' x' → logprob: -13.6327543258667
    8. '(
' → logprob: -14.2577543258667
    9. ' ' → logprob: -16.007755279541016
    10. '(y' → logprob: -16.382755279541016

Token 101: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007711919490247965
    2. ',' → logprob: -4.882711887359619
    3. ' ,' → logprob: -9.757712364196777
    4. ' ' → logprob: -10.382712364196777
    5. '1' → logprob: -12.007712364196777
    6. '<|end|>' → logprob: -12.632712364196777
    7. '   ' → logprob: -13.382712364196777
    8. 'x' → logprob: -13.757712364196777
    9. '```' → logprob: -13.882712364196777
    10. ',x' → logprob: -14.257712364196777

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.913265239447355e-05
    2. ' ,' → logprob: -9.500099182128906
    3. '<|end|>' → logprob: -11.375099182128906
    4. ')' → logprob: -12.125099182128906
    5. ',y' → logprob: -12.375099182128906
    6. '),' → logprob: -13.625099182128906
    7. '‌,' → logprob: -14.500099182128906
    8. '))' → logprob: -15.250099182128906
    9. ',x' → logprob: -16.000099182128906
    10. '<|end|>' → logprob: -16.250099182128906

Token 103: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12696778774261475
    2. ' y' → logprob: -2.1269679069519043
    3. '<|end|>' → logprob: -10.626967430114746
    4. ' ' → logprob: -11.376967430114746
    5. '	y' → logprob: -13.376967430114746
    6. '   ' → logprob: -14.626967430114746
    7. '    ' → logprob: -14.876967430114746
    8. '  ' → logprob: -15.126967430114746
    9. 'x' → logprob: -15.251967430114746
    10. '
' → logprob: -15.751967430114746

Token 104: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1706838458776474
    2. '2' → logprob: -1.9206838607788086
    3. ')))' → logprob: -4.795683860778809
    4. '))' → logprob: -6.670683860778809
    5. ')' → logprob: -7.670683860778809
    6. ',' → logprob: -8.545683860778809
    7. '```' → logprob: -9.170683860778809
    8. '),' → logprob: -10.795683860778809
    9. ']))' → logprob: -11.170683860778809
    10. ' ' → logprob: -11.170683860778809

Token 105: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009804255329072475
    2. ')' → logprob: -4.8848042488098145
    3. ')))' → logprob: -6.1348042488098145
    4. '))
' → logprob: -11.134804725646973
    5. ' ))' → logprob: -11.634804725646973
    6. '),' → logprob: -13.009804725646973
    7. '   ' → logprob: -14.134804725646973
    8. '))))' → logprob: -14.509804725646973
    9. ' ' → logprob: -14.884804725646973
    10. ',' → logprob: -14.884804725646973

Token 106: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3191205859184265
    2. 'class' → logprob: -1.5691206455230713
    3. 'def' → logprob: -3.0691206455230713
    4. '

' → logprob: -4.319120407104492
    5. '    
' → logprob: -7.069120407104492
    6. ' 
' → logprob: -7.194120407104492
    7. '  
' → logprob: -7.319120407104492
    8. '<|end|>' → logprob: -7.444120407104492
    9. 'd' → logprob: -7.819120407104492
    10. '' → logprob: -8.069120407104492

Token 107: ' solve' (ID: 17722)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.4887312948703766
    2. ' solve' → logprob: -0.9887312650680542
    3. 'solve' → logprob: -5.113731384277344
    4. 'read' → logprob: -5.363731384277344
    5. ' Vec' → logprob: -5.738731384277344
    6. ' readline' → logprob: -8.738731384277344
    7. ' main' → logprob: -9.238731384277344
    8. 'Vec' → logprob: -9.363731384277344
    9. ' ' → logprob: -9.363731384277344
    10. ' resolve' → logprob: -10.113731384277344

Token 108: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741220474243164
    2. '(N' → logprob: -0.9741220474243164
    3. '(
' → logprob: -11.349122047424316
    4. ' (' → logprob: -11.349122047424316
    5. '(n' → logprob: -11.849122047424316
    6. '```' → logprob: -12.599122047424316
    7. '("("' → logprob: -13.224122047424316
    8. '\(' → logprob: -13.724122047424316
    9. '(`' → logprob: -13.849122047424316
    10. '((' → logprob: -13.849122047424316

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0683535037969705e-05
    2. ',P' → logprob: -12.00001049041748
    3. ' ,' → logprob: -12.50001049041748
    4. ',
' → logprob: -15.87501049041748
    5. 'P' → logprob: -16.750011444091797
    6. ',N' → logprob: -17.062511444091797
    7. ',p' → logprob: -17.125011444091797
    8. '_,' → logprob: -17.125011444091797
    9. '   ' → logprob: -17.312511444091797
    10. '):' → logprob: -17.437511444091797

Token 110: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.026325728744268417
    2. ' P' → logprob: -3.6513257026672363
    3. 'points' → logprob: -11.901326179504395
    4. ')' → logprob: -12.151326179504395
    5. ' points' → logprob: -12.401326179504395
    6. '```' → logprob: -13.526326179504395
    7. ' ' → logprob: -13.963826179504395
    8. '   ' → logprob: -14.151326179504395
    9. 'p' → logprob: -14.338826179504395
    10. ',' → logprob: -14.401326179504395

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.00000286102295
    3. '   ' → logprob: -17.375001907348633
    4. ',
' → logprob: -17.500001907348633
    5. ',x' → logprob: -18.000001907348633
    6. '_,' → logprob: -18.625001907348633
    7. '‌,' → logprob: -18.875001907348633
    8. ',P' → logprob: -19.000001907348633
    9. ',p' → logprob: -19.125001907348633
    10. ',

' → logprob: -19.250001907348633

Token 112: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.100327730178833
    2. 'L' → logprob: -1.350327730178833
    3. 'p' → logprob: -2.350327730178833
    4. 'l' → logprob: -2.475327730178833
    5. 'v' → logprob: -2.600327730178833
    6. 'a' → logprob: -3.100327730178833
    7. 'V' → logprob: -3.600327730178833
    8. 's' → logprob: -3.975327730178833
    9. 'line' → logprob: -4.225327491760254
    10. 'start' → logprob: -5.100327491760254

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.822646693966817e-06
    2. ' ,' → logprob: -11.875007629394531
    3. '):' → logprob: -15.000007629394531
    4. ',A' → logprob: -15.625007629394531
    5. '_,' → logprob: -16.87500762939453
    6. ',B' → logprob: -17.37500762939453
    7. ',
' → logprob: -17.50000762939453
    8. ':' → logprob: -17.87500762939453
    9. '1' → logprob: -18.00000762939453
    10. ',Q' → logprob: -18.25000762939453

Token 114: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07890179008245468
    2. ' B' → logprob: -2.578901767730713
    3. ' ' → logprob: -11.953902244567871
    4. 'D' → logprob: -13.328902244567871
    5. ')' → logprob: -13.703902244567871
    6. 'C' → logprob: -14.891402244567871
    7. 'V' → logprob: -15.141402244567871
    8. ' ' → logprob: -15.203902244567871
    9. 'Q' → logprob: -15.266402244567871
    10. 'b' → logprob: -15.766402244567871

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.347765181795694e-05
    2. ')' → logprob: -10.375053405761719
    3. '):
' → logprob: -10.875053405761719
    4. ' ):' → logprob: -13.375053405761719
    5. ':' → logprob: -13.750053405761719
    6. ',' → logprob: -15.375053405761719
    7. '   ' → logprob: -15.625053405761719
    8. '):
' → logprob: -16.12505340576172
    9. ')：' → logprob: -17.62505340576172
    10. ' ' → logprob: -17.75005340576172

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010251892963424325
    2. ':' → logprob: -7.251025199890137
    3. '    ' → logprob: -8.876025199890137
    4. ')' → logprob: -10.251025199890137
    5. '    
' → logprob: -10.251025199890137
    6. ' #' → logprob: -11.001025199890137
    7. '<|end|>' → logprob: -11.126025199890137
    8. '#' → logprob: -11.251025199890137
    9. ' return' → logprob: -11.751025199890137
    10. ' line' → logprob: -12.251025199890137

Token 117: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.285798043012619
    2. 'dp' → logprob: -3.0357980728149414
    3. 'res' → logprob: -3.1607980728149414
    4. ' res' → logprob: -3.2857980728149414
    5. 'result' → logprob: -4.410798072814941
    6. 'count' → logprob: -4.410798072814941
    7. 's' → logprob: -4.535798072814941
    8. 'v' → logprob: -4.785798072814941
    9. 'dist' → logprob: -4.910798072814941
    10. 'd' → logprob: -5.035798072814941

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5310210585594177
    2. 'r' → logprob: -2.4060211181640625
    3. 'est' → logprob: -2.7810211181640625
    4. 'ase' → logprob: -2.9060211181640625
    5. '=' → logprob: -3.0310211181640625
    6. 'y' → logprob: -3.2810211181640625
    7. 'e' → logprob: -4.2810211181640625
    8. 'vec' → logprob: -4.5310211181640625
    9. '_vec' → logprob: -4.6560211181640625
    10. 'ack' → logprob: -4.7810211181640625

Token 119: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11888854205608368
    2. '(B' → logprob: -3.1188886165618896
    3. '[' → logprob: -4.1188883781433105
    4. ' B' → logprob: -4.7438883781433105
    5. '(A' → logprob: -4.9938883781433105
    6. '0' → logprob: -5.2438883781433105
    7. 'A' → logprob: -5.4938883781433105
    8. '(' → logprob: -5.4938883781433105
    9. '[B' → logprob: -5.4938883781433105
    10. ' (' → logprob: -5.8688883781433105

Token 120: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5330742001533508
    2. '-' → logprob: -0.9080742001533508
    3. '-A' → logprob: -4.908074378967285
    4. '.subtract' → logprob: -7.283074378967285
    5. '-P' → logprob: -7.658074378967285
    6. '-V' → logprob: -8.533074378967285
    7. 'sub' → logprob: -8.533074378967285
    8. 'subtract' → logprob: -8.533074378967285
    9. ' ' → logprob: -8.533074378967285
    10. '.minus' → logprob: -9.283074378967285

Token 121: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003365350130479783
    2. ' A' → logprob: -8.000336647033691
    3. '	A' → logprob: -14.500336647033691
    4. '<|end|>' → logprob: -14.875336647033691
    5. '>A' → logprob: -15.625336647033691
    6. ' ' → logprob: -16.875335693359375
    7. '  ' → logprob: -17.125335693359375
    8. '   ' → logprob: -18.625335693359375
    9. '=A' → logprob: -18.875335693359375
    10. '_A' → logprob: -19.000335693359375

Token 122: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011204734444618225
    2. 'def' → logprob: -5.386204719543457
    3. '   ' → logprob: -6.511204719543457
    4. '#' → logprob: -6.636204719543457
    5. '
' → logprob: -6.636204719543457
    6. '<|end|>' → logprob: -7.886204719543457
    7. '0' → logprob: -8.511204719543457
    8. '    
' → logprob: -8.511204719543457
    9. '.' → logprob: -8.761204719543457
    10. ',' → logprob: -9.011204719543457

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018359119072556496
    2. 's' → logprob: -5.768359184265137
    3. '    
' → logprob: -6.143359184265137
    4. '
' → logprob: -6.518359184265137
    5. ' s' → logprob: -6.518359184265137
    6. 'result' → logprob: -6.643359184265137
    7. 'res' → logprob: -6.768359184265137
    8. 'def' → logprob: -7.018359184265137
    9. 'n' → logprob: -7.393359184265137
    10. 'm' → logprob: -7.518359184265137

Token 124: ' P' (ID: 398)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.1340487003326416
    2. 'c' → logprob: -2.5090487003326416
    3. 'ans' → logprob: -2.5090487003326416
    4. 'def' → logprob: -2.6340487003326416
    5. 'count' → logprob: -2.8840487003326416
    6. 'dire' → logprob: -3.3840487003326416
    7. 'prefix' → logprob: -3.5090487003326416
    8. 's' → logprob: -3.5090487003326416
    9. 'result' → logprob: -3.5090487003326416
    10. 'v' → logprob: -3.5090487003326416

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.026015281677246
    2. '.' → logprob: -1.526015281677246
    3. '=' → logprob: -1.651015281677246
    4. '_' → logprob: -2.526015281677246
    5. '_sorted' → logprob: -2.776015281677246
    6. 'sorted' → logprob: -3.776015281677246
    7. '_filtered' → logprob: -4.901015281677246
    8. '_sum' → logprob: -5.526015281677246
    9. 'sum' → logprob: -5.776015281677246
    10. '_count' → logprob: -5.901015281677246

Token 126: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6897724270820618
    2. 'sorted' → logprob: -1.439772367477417
    3. '[P' → logprob: -2.064772367477417
    4. ' [' → logprob: -2.439772367477417
    5. ' sorted' → logprob: -3.814772367477417
    6. '[list' → logprob: -5.439772605895996
    7. '[A' → logprob: -5.439772605895996
    8. 'list' → logprob: -5.814772605895996
    9. '[p' → logprob: -5.814772605895996
    10. '[f' → logprob: -6.064772605895996

Token 127: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3605656325817108
    2. '(p' → logprob: -1.2355656623840332
    3. '((' → logprob: -5.860565662384033
    4. ' p' → logprob: -6.110565662384033
    5. ' (' → logprob: -6.235565662384033
    6. '(v' → logprob: -6.860565662384033
    7. '(x' → logprob: -7.235565662384033
    8. '(a' → logprob: -7.360565662384033
    9. '(b' → logprob: -7.735565662384033
    10. '(A' → logprob: -7.860565662384033

Token 128: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.051129844039678574
    2. ' for' → logprob: -3.3011298179626465
    3. '-' → logprob: -4.6761298179626465
    4. ' ' → logprob: -5.8011298179626465
    5. 'for' → logprob: -7.4261298179626465
    6. ' +' → logprob: -11.176130294799805
    7. ' p' → logprob: -11.676130294799805
    8. ' if' → logprob: -11.676130294799805
    9. '   ' → logprob: -12.363630294799805
    10. '  ' → logprob: -12.363630294799805

Token 129: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0789109393954277
    2. ' A' → logprob: -2.5789108276367188
    3. '	A' → logprob: -12.078910827636719
    4. ' ' → logprob: -12.078910827636719
    5. '   ' → logprob: -12.703910827636719
    6. 'B' → logprob: -13.078910827636719
    7. 'b' → logprob: -13.578910827636719
    8. 'a' → logprob: -13.703910827636719
    9. '(A' → logprob: -14.578910827636719
    10. '<|end|>' → logprob: -14.953910827636719

Token 130: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0053847068920731544
    2. 'for' → logprob: -5.255384922027588
    3. ' ' → logprob: -9.75538444519043
    4. ']' → logprob: -9.88038444519043
    5. '	for' → logprob: -10.88038444519043
    6. ')' → logprob: -11.75538444519043
    7. '<|end|>' → logprob: -12.50538444519043
    8. '   ' → logprob: -12.75538444519043
    9. ' if' → logprob: -13.25538444519043
    10. ' ]' → logprob: -13.25538444519043

Token 131: ' p' (ID: 275)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.5425543189048767
    2. 'p' → logprob: -1.1675543785095215
    3. ' P' → logprob: -2.5425543785095215
    4. ' p' → logprob: -3.5425543785095215
    5. ' ' → logprob: -12.667553901672363
    6. '_p' → logprob: -13.542553901672363
    7. ',' → logprob: -14.917553901672363
    8. '_' → logprob: -15.292553901672363
    9. '_P' → logprob: -15.417553901672363
    10. ' ' → logprob: -16.04255485534668

Token 132: ' in' (ID: 306)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.25257760286331177
    2. ' P' → logprob: -1.502577543258667
    3. ' in' → logprob: -7.502577781677246
    4. 'p' → logprob: -10.502577781677246
    5. '(P' → logprob: -10.627577781677246
    6. ' p' → logprob: -11.627577781677246
    7. ']' → logprob: -12.002577781677246
    8. ' ' → logprob: -12.627577781677246
    9. '
' → logprob: -12.627577781677246
    10. ',P' → logprob: -12.877577781677246

Token 133: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0548846572637558
    2. ' P' → logprob: -2.929884672164917
    3. ' ' → logprob: -13.804884910583496
    4. 'p' → logprob: -14.804884910583496
    5. '[P' → logprob: -15.429884910583496
    6. '
' → logprob: -15.679884910583496
    7. '(P' → logprob: -15.804884910583496
    8. '	P' → logprob: -16.17988395690918
    9. '\P' → logprob: -16.42988395690918
    10. '_P' → logprob: -16.55488395690918

Token 134: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004474985413253307
    2. ']
' → logprob: -6.004475116729736
    3. '   ' → logprob: -6.504475116729736
    4. ' ]' → logprob: -7.754475116729736
    5. ' if' → logprob: -10.879474639892578
    6. ']
' → logprob: -10.879474639892578
    7. ')' → logprob: -11.629474639892578
    8. ' ' → logprob: -11.879474639892578
    9. ']

' → logprob: -12.254474639892578
    10. ' ]
' → logprob: -12.629474639892578

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13556919991970062
    2. '
' → logprob: -2.2605690956115723
    3. ')' → logprob: -5.135569095611572
    4. 'def' → logprob: -5.260569095611572
    5. '    
' → logprob: -5.385569095611572
    6. '#' → logprob: -6.510569095611572
    7. '<|end|>' → logprob: -7.135569095611572
    8. 'result' → logprob: -7.385569095611572
    9. 'return' → logprob: -7.385569095611572
    10. ',' → logprob: -7.510569095611572

Token 136: ' cc' (ID: 22988)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.6195387840270996
    2. 'res' → logprob: -2.3695387840270996
    3. 'cross' → logprob: -2.6195387840270996
    4. 'left' → logprob: -2.9945387840270996
    5. 'count' → logprob: -3.1195387840270996
    6. 'def' → logprob: -3.2445387840270996
    7. 's' → logprob: -3.2445387840270996
    8. 'prefix' → logprob: -3.6195387840270996
    9. 'c' → logprob: -3.6195387840270996
    10. 'ans' → logprob: -3.7445387840270996

Token 137: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.09340585768222809
    2. ' =' → logprob: -3.0934059619903564
    3. '=' → logprob: -3.5934059619903564
    4. '   ' → logprob: -5.093405723571777
    5. 'ount' → logprob: -5.718405723571777
    6. 'c' → logprob: -6.093405723571777
    7. 'def' → logprob: -6.968405723571777
    8. 'd' → logprob: -8.093405723571777
    9. '=[]' → logprob: -8.093405723571777
    10. '  ' → logprob: -8.218405723571777

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34268301725387573
    2. '(p' → logprob: -2.0926830768585205
    3. '(' → logprob: -2.2176830768585205
    4. '=' → logprob: -3.5926830768585205
    5. 'def' → logprob: -5.092682838439941
    6. '(P' → logprob: -5.467682838439941
    7. ',' → logprob: -5.592682838439941
    8. '_' → logprob: -5.842682838439941
    9. ' (' → logprob: -5.967682838439941
    10. '_count' → logprob: -5.967682838439941

Token 139: ' ' (ID: 220)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.6821117401123047
    2. 'lambda' → logprob: -1.9321117401123047
    3. ' lambda' → logprob: -2.5571117401123047
    4. '[' → logprob: -2.5571117401123047
    5. '[]' → logprob: -2.5571117401123047
    6. 'fun' → logprob: -3.3071117401123047
    7. ' [' → logprob: -3.4321117401123047
    8. '0' → logprob: -4.307111740112305
    9. '[]
' → logprob: -4.682111740112305
    10. '(lambda' → logprob: -4.807111740112305

Token 140: '0' (ID: 15)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.0143965482711792
    2. '[' → logprob: -1.7643965482711792
    3. '0' → logprob: -1.8893965482711792
    4. 'fun' → logprob: -2.6393966674804688
    5. 'cc' → logprob: -2.7643966674804688
    6. 'counter' → logprob: -2.8893966674804688
    7. '[]' → logprob: -3.3893966674804688
    8. 'cmp' → logprob: -3.6393966674804688
    9. 'Counter' → logprob: -4.139396667480469
    10. 'cross' → logprob: -5.389396667480469

Token 141: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4867670238018036
    2. '<|end|>' → logprob: -0.986767053604126
    3. '
' → logprob: -5.611766815185547
    4. ' for' → logprob: -5.736766815185547
    5. '<|end|>' → logprob: -6.236766815185547
    6. ' ' → logprob: -6.611766815185547
    7. ')' → logprob: -7.361766815185547
    8. 'for' → logprob: -7.361766815185547
    9. '  ' → logprob: -8.111766815185547
    10. ',' → logprob: -8.111766815185547

Token 143: ' cw' (ID: 72592)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.059307508170604706
    2. ' for' → logprob: -3.05930757522583
    3. '   ' → logprob: -4.68430757522583
    4. 'n' → logprob: -6.80930757522583
    5. 'N' → logprob: -9.809307098388672
    6. 'result' → logprob: -10.434307098388672
    7. 'def' → logprob: -10.434307098388672
    8. 'i' → logprob: -10.684307098388672
    9. '	for' → logprob: -11.184307098388672
    10. 'm' → logprob: -11.184307098388672

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2286386638879776
    2. '=' → logprob: -1.6036386489868164
    3. ',' → logprob: -6.103638648986816
    4. ' ' → logprob: -7.853638648986816
    5. '   ' → logprob: -8.103638648986816
    6. '<|end|>' → logprob: -8.603638648986816
    7. '    ' → logprob: -10.228638648986816
    8. '  ' → logprob: -10.978638648986816
    9. ')' → logprob: -11.103638648986816
    10. ' ,' → logprob: -11.978638648986816

Token 145: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07900567352771759
    2. ' ' → logprob: -2.579005718231201
    3. '   ' → logprob: -9.329005241394043
    4. '  ' → logprob: -11.329005241394043
    5. '1' → logprob: -12.579005241394043
    6. '<|end|>' → logprob: -12.641505241394043
    7. 'len' → logprob: -13.391505241394043
    8. '=' → logprob: -13.891505241394043
    9. '    ' → logprob: -14.204005241394043
    10. '[' → logprob: -14.329005241394043

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004329341172706336
    2. ' ' → logprob: -7.750432968139648
    3. '1' → logprob: -13.375432968139648
    4. 'len' → logprob: -15.875432968139648
    5. '   ' → logprob: -16.37543296813965
    6. 'False' → logprob: -16.50043296813965
    7. '  ' → logprob: -16.81293296813965
    8. 'N' → logprob: -17.12543296813965
    9. '[' → logprob: -17.37543296813965
    10. '[]' → logprob: -17.43793296813965

Token 147: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2428434044122696
    2. '   ' → logprob: -2.1178433895111084
    3. ' for' → logprob: -2.9928433895111084
    4. 'for' → logprob: -3.3678433895111084
    5. '<|end|>' → logprob: -4.8678436279296875
    6. '    
' → logprob: -6.7428436279296875
    7. ' 
' → logprob: -7.6178436279296875
    8. ' ' → logprob: -7.9928436279296875
    9. '  
' → logprob: -8.242843627929688
    10. '<|end|>' → logprob: -8.867843627929688

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2830424904823303
    2. ' for' → logprob: -1.5330424308776855
    3. 'for' → logprob: -3.6580424308776855
    4. '
' → logprob: -5.9080424308776855
    5. '<|end|>' → logprob: -6.7830424308776855
    6. ' ' → logprob: -8.283042907714844
    7. '    
' → logprob: -8.408042907714844
    8. '  ' → logprob: -8.908042907714844
    9. ',' → logprob: -8.908042907714844
    10. ' 
' → logprob: -9.783042907714844

Token 149: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08156096190214157
    2. ' for' → logprob: -2.5815608501434326
    3. '   ' → logprob: -6.081561088562012
    4. 'n' → logprob: -8.206561088562012
    5. '	for' → logprob: -11.206561088562012
    6. ' n' → logprob: -11.456561088562012
    7. ' ' → logprob: -11.581561088562012
    8. 'i' → logprob: -11.706561088562012
    9. 'count' → logprob: -11.706561088562012
    10. 'inside' → logprob: -12.331561088562012

Token 150: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.12717598676681519
    2. 'p' → logprob: -2.12717604637146
    3. 'i' → logprob: -9.252176284790039
    4. ' i' → logprob: -9.377176284790039
    5. ' ' → logprob: -11.127176284790039
    6. '   ' → logprob: -11.627176284790039
    7. 'P' → logprob: -11.627176284790039
    8. 'v' → logprob: -12.377176284790039
    9. ' P' → logprob: -12.564676284790039
    10. ')' → logprob: -12.564676284790039

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014259527437388897
    2. 'in' → logprob: -4.264259338378906
    3. ' ' → logprob: -9.514259338378906
    4. '  ' → logprob: -12.264259338378906
    5. 's' → logprob: -12.514259338378906
    6. '   ' → logprob: -12.764259338378906
    7. '<|end|>' → logprob: -13.139259338378906
    8. '    ' → logprob: -13.389259338378906
    9. ',' → logprob: -13.639259338378906
    10. '	in' → logprob: -13.951759338378906

Token 152: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.002809275174513459
    2. ' P' → logprob: -5.877809047698975
    3. ' ' → logprob: -13.502809524536133
    4. '<|end|>' → logprob: -14.002809524536133
    5. '[P' → logprob: -14.502809524536133
    6. '(P' → logprob: -14.502809524536133
    7. '[' → logprob: -15.377809524536133
    8. '   ' → logprob: -16.127809524536133
    9. 'p' → logprob: -16.252809524536133
    10. '  ' → logprob: -16.377809524536133

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002231140388175845
    2. ':
' → logprob: -6.127231121063232
    3. '       ' → logprob: -11.00223159790039
    4. '<|end|>' → logprob: -11.25223159790039
    5. '):' → logprob: -12.12723159790039
    6. ',' → logprob: -12.50223159790039
    7. ' :' → logprob: -13.37723159790039
    8. '<|end|>' → logprob: -13.50223159790039
    9. '):
' → logprob: -14.12723159790039
    10. ':

' → logprob: -14.62723159790039

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023894449695944786
    2. ' if' → logprob: -6.877389430999756
    3. '   ' → logprob: -8.627389907836914
    4. '<|end|>' → logprob: -8.627389907836914
    5. ' ' → logprob: -8.752389907836914
    6. '
' → logprob: -8.877389907836914
    7. '    ' → logprob: -9.002389907836914
    8. ',' → logprob: -9.127389907836914
    9. ' 
' → logprob: -9.377389907836914
    10. 'if' → logprob: -9.502389907836914

Token 155: ' c' (ID: 274)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.8236889243125916
    2. 'cross' → logprob: -1.0736889839172363
    3. 'c' (adapté à ' c') → logprob: -2.4486889839172363
    4. ' c' → logprob: -3.6986889839172363
    5. 'd' → logprob: -4.073688983917236
    6. 'cp' → logprob: -4.198688983917236
    7. 'v' → logprob: -4.323688983917236
    8. ' cp' → logprob: -4.823688983917236
    9. ' d' → logprob: -5.198688983917236
    10. 'if' → logprob: -5.448688983917236

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2670682668685913
    2. 'ross' → logprob: -2.392068386077881
    3. '=' → logprob: -2.892068386077881
    4. 'cross' → logprob: -3.892068386077881
    5. 'c' → logprob: -4.017068386077881
    6. 'w' → logprob: -4.767068386077881
    7. 'r' → logprob: -5.017068386077881
    8. 'omp' → logprob: -5.142068386077881
    9. 'p' → logprob: -5.642068386077881
    10. 'cp' → logprob: -5.892068386077881

Token 157: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.43840402364730835
    2. 'cross' → logprob: -2.563404083251953
    3. 'cc' → logprob: -2.688404083251953
    4. '(b' → logprob: -2.813404083251953
    5. '(p' → logprob: -3.188404083251953
    6. 'p' → logprob: -3.688404083251953
    7. ' cross' → logprob: -3.688404083251953
    8. 'math' → logprob: -3.813404083251953
    9. ' b' → logprob: -4.438404083251953
    10. ' (' → logprob: -4.813404083251953

Token 158: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -0.046050529927015305
    2. '.' → logprob: -3.296050548553467
    3. '.x' → logprob: -5.046050548553467
    4. '.p' → logprob: -8.546050071716309
    5. '.vector' → logprob: -8.796050071716309
    6. '.cc' → logprob: -9.046050071716309
    7. '.Cross' → logprob: -9.046050071716309
    8. '.det' → logprob: -9.171050071716309
    9. ' .' → logprob: -9.171050071716309
    10. '.vec' → logprob: -9.296050071716309

Token 159: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.481510692741722e-05
    2. '(' → logprob: -10.25007438659668
    3. 'p' → logprob: -10.25007438659668
    4. 'product' → logprob: -13.62507438659668
    5. '(product' → logprob: -14.12507438659668
    6. '(P' → logprob: -14.50007438659668
    7. '(
' → logprob: -15.37507438659668
    8. '(point' → logprob: -15.62507438659668
    9. '()' → logprob: -15.87507438659668
    10. '(Vector' → logprob: -16.25007438659668

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0049747284501791
    2. ')
' → logprob: -5.754974842071533
    3. '())' → logprob: -6.504974842071533
    4. ' )' → logprob: -8.379974365234375
    5. '())
' → logprob: -10.629974365234375
    6. ')>' → logprob: -11.754974365234375
    7. '()' → logprob: -12.129974365234375
    8. '<|end|>' → logprob: -12.379974365234375
    9. ')#' → logprob: -12.504974365234375
    10. ')<' → logprob: -12.754974365234375

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00862414762377739
    2. '
' → logprob: -4.883624076843262
    3. '<|end|>' → logprob: -7.258624076843262
    4. ' if' → logprob: -8.758624076843262
    5. ',' → logprob: -10.508624076843262
    6. '   ' → logprob: -10.508624076843262
    7. 'if' → logprob: -10.883624076843262
    8. '
' → logprob: -11.383624076843262
    9. '<|end|>' → logprob: -11.508624076843262
    10. ' ' → logprob: -11.508624076843262

Token 162: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5810514092445374
    2. ' if' → logprob: -0.8310514092445374
    3. '       ' → logprob: -5.331051349639893
    4. '
' → logprob: -8.58105182647705
    5. ' ' → logprob: -10.45605182647705
    6. '        ' → logprob: -11.08105182647705
    7. 'If' → logprob: -11.83105182647705
    8. '<|end|>' → logprob: -12.83105182647705
    9. ' 
' → logprob: -13.08105182647705
    10. '	if' → logprob: -13.20605182647705

Token 163: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.016114721074700356
    2. 'c' → logprob: -4.141114711761475
    3. ' ' → logprob: -9.641115188598633
    4. '>' → logprob: -11.891115188598633
    5. '0' → logprob: -12.141115188598633
    6. '  ' → logprob: -13.891115188598633
    7. ' >' → logprob: -14.766115188598633
    8. ' ' → logprob: -14.891115188598633
    9. '   ' → logprob: -15.078615188598633
    10. '    ' → logprob: -15.453615188598633

Token 164: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.43177559971809387
    2. ' >' → logprob: -1.0567755699157715
    3. '0' → logprob: -6.6817755699157715
    4. ' ' → logprob: -7.0567755699157715
    5. '<' → logprob: -8.30677604675293
    6. ')' → logprob: -9.18177604675293
    7. ' <' → logprob: -9.30677604675293
    8. '<|end|>' → logprob: -9.30677604675293
    9. ')>' → logprob: -9.55677604675293
    10. '()>' → logprob: -9.68177604675293

Token 165: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13219471275806427
    2. ' ' → logprob: -2.132194757461548
    3. '1' → logprob: -5.257194519042969
    4. 'Fraction' → logprob: -10.382194519042969
    5. ' Fraction' → logprob: -12.382194519042969
    6. '   ' → logprob: -13.882194519042969
    7. '2' → logprob: -14.257194519042969
    8. '```' → logprob: -14.507194519042969
    9. 'math' → logprob: -14.569694519042969
    10. '  ' → logprob: -14.694694519042969

Token 166: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004030314274132252
    2. ' ' → logprob: -5.879030227661133
    3. '1' → logprob: -6.879030227661133
    4. 'Fraction' → logprob: -8.629030227661133
    5. ' Fraction' → logprob: -12.941530227661133
    6. 'math' → logprob: -13.316530227661133
    7. '```' → logprob: -13.379030227661133
    8. 'F' → logprob: -13.566530227661133
    9. '

' → logprob: -13.816530227661133
    10. '   ' → logprob: -13.816530227661133

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09193745255470276
    2. ':
' → logprob: -2.46693754196167
    3. '       ' → logprob: -5.96693754196167
    4. '           ' → logprob: -8.466937065124512
    5. ' :' → logprob: -9.341937065124512
    6. ' and' → logprob: -10.591937065124512
    7. ' :
' → logprob: -10.716937065124512
    8. '):' → logprob: -10.841937065124512
    9. '<|end|>' → logprob: -10.966937065124512
    10. '):
' → logprob: -11.341937065124512

Token 168: '           ' (ID: 352)
  Prédit: ' cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cw' → logprob: -0.5638337731361389
    2. '           ' → logprob: -1.9388337135314941
    3. '       ' → logprob: -2.188833713531494
    4. ' cc' → logprob: -2.688833713531494
    5. 'cc' → logprob: -3.188833713531494
    6. '1' → logprob: -3.313833713531494
    7. 'cw' → logprob: -4.313833713531494
    8. '
' → logprob: -5.188833713531494
    9. '0' → logprob: -5.438833713531494
    10. '               ' → logprob: -6.313833713531494

Token 169: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' (adapté à ' cc') → logprob: -0.07943341881036758
    2. ' cc' → logprob: -2.5794334411621094
    3. '           ' → logprob: -8.07943344116211
    4. '       ' → logprob: -9.95443344116211
    5. '
' → logprob: -10.07943344116211
    6. '_cc' → logprob: -10.45443344116211
    7. '1' → logprob: -10.45443344116211
    8. '	cc' → logprob: -10.45443344116211
    9. '0' → logprob: -11.45443344116211
    10. '   ' → logprob: -11.70443344116211

Token 170: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00022773505770601332
    2. '+=' → logprob: -8.500227928161621
    3. 'cw' → logprob: -11.500227928161621
    4. ' +=' → logprob: -12.125227928161621
    5. '++' → logprob: -12.500227928161621
    6. '+' → logprob: -13.250227928161621
    7. 'wc' → logprob: -13.750227928161621
    8. 'W' → logprob: -14.500227928161621
    9. 'c' → logprob: -14.875227928161621
    10. '       ' → logprob: -15.375227928161621

Token 171: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20150719583034515
    2. '+=' → logprob: -1.7015072107315063
    3. '           ' → logprob: -10.326507568359375
    4. '+' → logprob: -10.451507568359375
    5. '       ' → logprob: -11.451507568359375
    6. ']+=' → logprob: -11.826507568359375
    7. '   ' → logprob: -12.576507568359375
    8. ' +' → logprob: -12.826507568359375
    9. '        ' → logprob: -13.326507568359375
    10. '    ' → logprob: -13.451507568359375

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00975868571549654
    2. ' ' → logprob: -4.634758472442627
    3. 'c' → logprob: -14.134758949279785
    4. 'p' → logprob: -14.384758949279785
    5. ' p' → logprob: -14.634758949279785
    6. ' c' → logprob: -15.447258949279785
    7. '0' → logprob: -15.634758949279785
    8. ' ' → logprob: -16.00975799560547
    9. '   ' → logprob: -16.32225799560547
    10. '  ' → logprob: -16.69725799560547

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.106736039626412e-05
    2. ' ' → logprob: -10.750031471252441
    3. 'c' → logprob: -12.000031471252441
    4. 'p' → logprob: -13.000031471252441
    5. '0' → logprob: -14.250031471252441
    6. '
' → logprob: -17.000030517578125
    7. '2' → logprob: -17.000030517578125
    8. '```' → logprob: -17.250030517578125
    9. '10' → logprob: -17.437530517578125
    10. '   ' → logprob: -17.500030517578125

Token 174: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3233729600906372
    2. '
' → logprob: -1.5733729600906372
    3. ' else' → logprob: -3.1983728408813477
    4. 'else' → logprob: -4.448372840881348
    5. '<|end|>' → logprob: -4.698372840881348
    6. 'elif' → logprob: -5.823372840881348
    7. ' elif' → logprob: -5.948372840881348
    8. ' 
' → logprob: -7.198372840881348
    9. '  
' → logprob: -8.448372840881348
    10. '<|end|>' → logprob: -8.573372840881348

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027937110513448715
    2. ' else' → logprob: -4.027936935424805
    3. 'else' → logprob: -5.652936935424805
    4. '<|end|>' → logprob: -6.152936935424805
    5. 'elif' → logprob: -6.277936935424805
    6. ' elif' → logprob: -6.277936935424805
    7. '   ' → logprob: -9.277936935424805
    8. ' ' → logprob: -9.902936935424805
    9. '<|end|>' → logprob: -10.027936935424805
    10. '    ' → logprob: -10.277936935424805

Token 176: ' if' (ID: 538)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.05802755802869797
    2. 'else' → logprob: -2.933027505874634
    3. ' elif' → logprob: -5.933027744293213
    4. 'elif' → logprob: -8.433027267456055
    5. '       ' → logprob: -8.558027267456055
    6. '   ' → logprob: -9.558027267456055
    7. '    ' → logprob: -12.308027267456055
    8. ' ' → logprob: -13.183027267456055
    9. '	else' → logprob: -14.058027267456055
    10. ' if' → logprob: -14.058027267456055

Token 177: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0028683508280664682
    2. 'c' → logprob: -6.002868175506592
    3. ' ' → logprob: -7.877868175506592
    4. '  ' → logprob: -12.75286865234375
    5. ' not' → logprob: -13.00286865234375
    6. '0' → logprob: -13.37786865234375
    7. '   ' → logprob: -13.50286865234375
    8. ' p' → logprob: -13.62786865234375
    9. ' ' → logprob: -13.75286865234375
    10. '    ' → logprob: -14.06536865234375

Token 178: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3177036941051483
    2. ' <' → logprob: -1.9427037239074707
    3. '<=' → logprob: -2.4427037239074707
    4. '<' → logprob: -3.1927037239074707
    5. ' ' → logprob: -7.192703723907471
    6. '0' → logprob: -10.317703247070312
    7. ' >' → logprob: -10.567703247070312
    8. '>' → logprob: -10.942703247070312
    9. '<|end|>' → logprob: -11.942703247070312
    10. ')' → logprob: -12.130203247070312

Token 179: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029753848910331726
    2. '0' → logprob: -3.5297539234161377
    3. '1' → logprob: -13.779753684997559
    4. ' ' → logprob: -13.904753684997559
    5. '  ' → logprob: -14.904753684997559
    6. '   ' → logprob: -15.217253684997559
    7. '```' → logprob: -15.592253684997559
    8. '<|end|>' → logprob: -16.154754638671875
    9. ')' → logprob: -16.592254638671875
    10. ' 
' → logprob: -16.654754638671875

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12693776190280914
    2. ' ' → logprob: -2.1269378662109375
    3. '-' → logprob: -12.376937866210938
    4. ' -' → logprob: -13.001937866210938
    5. '1' → logprob: -13.251937866210938
    6. '   ' → logprob: -14.751937866210938
    7. '  ' → logprob: -15.376937866210938
    8. ' ' → logprob: -15.876937866210938
    9. '```' → logprob: -15.939437866210938
    10. '
' → logprob: -16.064437866210938

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2425166517496109
    2. ':
' → logprob: -1.6175166368484497
    3. '           ' → logprob: -4.61751651763916
    4. '<|end|>' → logprob: -5.11751651763916
    5. '       ' → logprob: -7.49251651763916
    6. '<|end|>' → logprob: -8.99251651763916
    7. '):
' → logprob: -9.11751651763916
    8. ',' → logprob: -9.36751651763916
    9. '          ' → logprob: -10.74251651763916
    10. '   ' → logprob: -10.74251651763916

Token 182: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006449847016483545
    2. ':' → logprob: -5.2564496994018555
    3. ' cw' → logprob: -7.5064496994018555
    4. ':
' → logprob: -8.756449699401855
    5. '       ' → logprob: -9.006449699401855
    6. 'cw' → logprob: -9.381449699401855
    7. ',' → logprob: -9.506449699401855
    8. '          ' → logprob: -9.756449699401855
    9. '```' → logprob: -10.756449699401855
    10. '               ' → logprob: -10.881449699401855

Token 183: ' cw' (ID: 72592)
  Prédit: ' cw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cw' → logprob: -0.1602984517812729
    2. 'cw' (adapté à ' cw') → logprob: -1.910298466682434
    3. '   ' → logprob: -10.785298347473145
    4. '       ' → logprob: -10.785298347473145
    5. '           ' → logprob: -10.910298347473145
    6. '
' → logprob: -12.410298347473145
    7. ' ' → logprob: -12.535298347473145
    8. '	c' → logprob: -13.035298347473145
    9. '1' → logprob: -13.160298347473145
    10. '    ' → logprob: -14.035298347473145

Token 184: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.014225916005671024
    2. '+=' → logprob: -4.264225959777832
    3. '            ' → logprob: -10.264225959777832
    4. '           ' → logprob: -10.764225959777832
    5. '        ' → logprob: -13.264225959777832
    6. '    ' → logprob: -13.889225959777832
    7. ' ' → logprob: -14.014225959777832
    8. ' ' → logprob: -14.389225959777832
    9. ']+=' → logprob: -14.389225959777832
    10. '+' → logprob: -14.639225959777832

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2519303858280182
    2. ' ' → logprob: -1.5019303560256958
    3. '   ' → logprob: -14.376930236816406
    4. ' ' → logprob: -15.751930236816406
    5. '0' → logprob: -16.251930236816406
    6. '-' → logprob: -16.501930236816406
    7. '```' → logprob: -16.501930236816406
    8. '
' → logprob: -16.751930236816406
    9. '  ' → logprob: -16.939430236816406
    10. '       ' → logprob: -17.314430236816406

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620353225618601
    2. ' ' → logprob: -5.379620552062988
    3. '   ' → logprob: -16.879619598388672
    4. '0' → logprob: -17.692119598388672
    5. '```' → logprob: -18.067119598388672
    6. '-' → logprob: -18.442119598388672
    7. '
' → logprob: -18.504619598388672
    8. ' ' → logprob: -18.754619598388672
    9. '１' → logprob: -18.879619598388672
    10. '  ' → logprob: -19.254619598388672

Token 187: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5752813816070557
    2. '   ' → logprob: -1.3252813816070557
    3. '<|end|>' → logprob: -1.9502813816070557
    4. '    
' → logprob: -3.7002813816070557
    5. '<|end|>' → logprob: -6.700281143188477
    6. ',' → logprob: -6.950281143188477
    7. '  
' → logprob: -7.325281143188477
    8. '       ' → logprob: -7.575281143188477
    9. '	return' → logprob: -8.200281143188477
    10. ' return' → logprob: -8.575281143188477

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0072520035319030285
    2. '
' → logprob: -5.132252216339111
    3. '    
' → logprob: -7.007252216339111
    4. ' return' → logprob: -9.257251739501953
    5. '<|end|>' → logprob: -9.507251739501953
    6. ' if' → logprob: -9.632251739501953
    7. 'return' → logprob: -9.757251739501953
    8. '       ' → logprob: -10.007251739501953
    9. ',' → logprob: -11.257251739501953
    10. 'if' → logprob: -11.382251739501953

Token 189: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8404614329338074
    2. '   ' → logprob: -1.0904614925384521
    3. 'return' → logprob: -1.4654614925384521
    4. ' if' → logprob: -6.840461254119873
    5. ' return' → logprob: -8.090461730957031
    6. 'for' → logprob: -11.590461730957031
    7. 'result' → logprob: -11.840461730957031
    8. '
' → logprob: -11.840461730957031
    9. '#' → logprob: -11.965461730957031
    10. 'diff' → logprob: -12.090461730957031

Token 190: ' cc' (ID: 22988)
  Prédit: ' cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cc' → logprob: -0.007486660964787006
    2. 'cc' → logprob: -5.632486820220947
    3. ' cw' → logprob: -6.257486820220947
    4. ' ' → logprob: -7.382486820220947
    5. ' (' → logprob: -8.007486343383789
    6. ' len' → logprob: -8.257486343383789
    7. ' min' → logprob: -8.757486343383789
    8. '(cc' → logprob: -9.132486343383789
    9. ' not' → logprob: -9.257486343383789
    10. ' max' → logprob: -9.632486343383789

Token 191: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.011079414747655392
    2. 'W' → logprob: -4.63607931137085
    3. '==' → logprob: -7.01107931137085
    4. ' ==' → logprob: -9.636079788208008
    5. 'q' → logprob: -9.886079788208008
    6. '   ' → logprob: -10.136079788208008
    7. '=' → logprob: -10.386079788208008
    8. '
' → logprob: -10.511079788208008
    9. '```' → logprob: -10.761079788208008
    10. '       ' → logprob: -11.011079788208008

Token 192: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13437148928642273
    2. '==' → logprob: -2.134371519088745
    3. ' <' → logprob: -5.259371280670166
    4. '<' → logprob: -7.134371280670166
    5. ' ' → logprob: -7.759371280670166
    6. ' !=' → logprob: -8.134371757507324
    7. ' >=' → logprob: -8.759371757507324
    8. ' <=' → logprob: -8.884371757507324
    9. '=' → logprob: -9.509371757507324
    10. ' >' → logprob: -9.759371757507324

Token 193: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9598321914672852
    2. '0' → logprob: -1.2098321914672852
    3. 'len' → logprob: -1.8348321914672852
    4. ' N' → logprob: -2.084832191467285
    5. ' len' → logprob: -3.959832191467285
    6. ' ' → logprob: -4.209832191467285
    7. '1' → logprob: -7.709832191467285
    8. '   ' → logprob: -8.584832191467285
    9. 'n' → logprob: -9.084832191467285
    10. '2' → logprob: -10.709832191467285

Token 194: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07899730652570724
    2. ' and' → logprob: -2.8289973735809326
    3. ':' → logprob: -4.5789971351623535
    4. 'or' → logprob: -5.5789971351623535
    5. 'and' → logprob: -6.3289971351623535
    6. ':
' → logprob: -8.078997611999512
    7. '   ' → logprob: -8.078997611999512
    8. ' ' → logprob: -8.203997611999512
    9. ':return' → logprob: -9.453997611999512
    10. ' :' → logprob: -9.703997611999512

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021234957966953516
    2. ' return' → logprob: -6.3771233558654785
    3. 'return' → logprob: -7.8771233558654785
    4. '   ' → logprob: -11.252123832702637
    5. ':' → logprob: -12.377123832702637
    6. '           ' → logprob: -12.377123832702637
    7. '
' → logprob: -12.502123832702637
    8. ',' → logprob: -12.502123832702637
    9. ' and' → logprob: -12.752123832702637
    10. ' or' → logprob: -12.752123832702637

Token 196: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.025736158713698387
    2. '       ' → logprob: -3.775736093521118
    3. ' return' → logprob: -6.775736331939697
    4. '   ' → logprob: -6.775736331939697
    5. '
' → logprob: -8.775735855102539
    6. '	return' → logprob: -11.525735855102539
    7. 'if' → logprob: -11.650735855102539
    8. 'for' → logprob: -12.275735855102539
    9. 'raise' → logprob: -12.400735855102539
    10. ' ' → logprob: -13.025735855102539

Token 197: ' float' (ID: 4428)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.23985475301742554
    2. '"B' → logprob: -2.1148548126220703
    3. '"A' → logprob: -2.7398548126220703
    4. 'True' → logprob: -4.73985481262207
    5. ''' → logprob: -5.23985481262207
    6. '1' → logprob: -5.36485481262207
    7. '"C' → logprob: -6.23985481262207
    8. ''A' → logprob: -6.48985481262207
    9. ' "' → logprob: -6.48985481262207
    10. '0' → logprob: -7.11485481262207

Token 198: '(poly' (ID: 175644)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.048959530889987946
    2. '("' → logprob: -3.173959493637085
    3. '(' → logprob: -5.423959732055664
    4. '(A' → logprob: -7.548959732055664
    5. '('-' → logprob: -8.423959732055664
    6. '(B' → logprob: -8.423959732055664
    7. '(in' → logprob: -8.798959732055664
    8. '(b' → logprob: -8.923959732055664
    9. '(P' → logprob: -9.673959732055664
    10. '("-' → logprob: -10.298959732055664

Token 199: '_area' (ID: 34097)
  Prédit: 'gon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gon' → logprob: -0.06760764122009277
    2. 'area' → logprob: -3.1926076412200928
    3. '_area' → logprob: -3.9426076412200928
    4. 'go' → logprob: -6.692607879638672
    5. 'g' → logprob: -7.567607879638672
    6. '_contains' → logprob: -7.567607879638672
    7. '_g' → logprob: -8.192607879638672
    8. 'gone' → logprob: -8.192607879638672
    9. 'nom' → logprob: -8.442607879638672
    10. 'gom' → logprob: -8.567607879638672

Token 200: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0014280942268669605
    2. ')' → logprob: -7.876428127288818
    3. '(p' → logprob: -7.876428127288818
    4. ')(' → logprob: -8.75142765045166
    5. '([' → logprob: -8.75142765045166
    6. '(' → logprob: -9.25142765045166
    7. '(
' → logprob: -9.37642765045166
    8. ' (' → logprob: -10.00142765045166
    9. '[P' → logprob: -10.62642765045166
    10. '((' → logprob: -11.25142765045166

Token 201: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008035274222493172
    2. ')' → logprob: -4.883035182952881
    3. ')+' → logprob: -8.758035659790039
    4. '))
' → logprob: -9.008035659790039
    5. ' ))' → logprob: -9.758035659790039
    6. '[:-' → logprob: -10.883035659790039
    7. '))+' → logprob: -11.008035659790039
    8. '[' → logprob: -11.383035659790039
    9. ')))' → logprob: -11.883035659790039
    10. ' )' → logprob: -12.008035659790039

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003445216570980847
    2. '    
' → logprob: -8.750344276428223
    3. ')' → logprob: -9.625344276428223
    4. 'elif' → logprob: -10.250344276428223
    5. '
' → logprob: -10.875344276428223
    6. ' elif' → logprob: -11.375344276428223
    7. '.' → logprob: -11.500344276428223
    8. ' if' → logprob: -11.625344276428223
    9. '<|end|>' → logprob: -11.750344276428223
    10. '       ' → logprob: -12.000344276428223

Token 203: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15976577997207642
    2. 'if' (adapté à ' if') → logprob: -2.6597657203674316
    3. 'elif' → logprob: -2.9097657203674316
    4. ' if' → logprob: -4.034765720367432
    5. ' elif' → logprob: -5.409765720367432
    6. '
' → logprob: -7.659765720367432
    7. '    
' → logprob: -8.28476619720459
    8. 'return' → logprob: -9.28476619720459
    9. 'else' → logprob: -9.53476619720459
    10. ')' → logprob: -10.15976619720459

Token 204: ' cw' (ID: 72592)
  Prédit: ' cw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cw' → logprob: -0.02069159969687462
    2. 'cw' → logprob: -3.8956916332244873
    3. ' cc' → logprob: -9.645691871643066
    4. ' ' → logprob: -10.145691871643066
    5. '   ' → logprob: -11.520691871643066
    6. 'cc' → logprob: -11.520691871643066
    7. '0' → logprob: -12.145691871643066
    8. '  ' → logprob: -12.395691871643066
    9. '(c' → logprob: -12.520691871643066
    10. 'c' → logprob: -13.020691871643066

Token 205: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31733769178390503
    2. '==' → logprob: -1.3173377513885498
    3. ' !=' → logprob: -5.817337512969971
    4. '!=' → logprob: -7.192337512969971
    5. ' <' → logprob: -8.942337989807129
    6. '<' → logprob: -9.067337989807129
    7. ' ' → logprob: -9.942337989807129
    8. '   ' → logprob: -11.067337989807129
    9. '<|end|>' → logprob: -11.192337989807129
    10. '=' → logprob: -12.067337989807129

Token 206: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.28120920062065125
    2. ' N' → logprob: -1.4062092304229736
    3. ' ' → logprob: -10.781208992004395
    4. '0' → logprob: -10.781208992004395
    5. '   ' → logprob: -11.406208992004395
    6. '	N' → logprob: -13.156208992004395
    7. '    ' → logprob: -13.406208992004395
    8. 'n' → logprob: -13.656208992004395
    9. '  ' → logprob: -14.906208992004395
    10. '
' → logprob: -16.15620994567871

Token 207: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0077353427186608315
    2. ':
' → logprob: -4.882735252380371
    3. '==' → logprob: -10.007735252380371
    4. '   ' → logprob: -10.507735252380371
    5. ':return' → logprob: -10.757735252380371
    6. ' ==' → logprob: -11.382735252380371
    7. ' :' → logprob: -11.507735252380371
    8. '       ' → logprob: -11.757735252380371
    9. '):' → logprob: -13.507735252380371
    10. ':

' → logprob: -13.632735252380371

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030953219160437584
    2. ':' → logprob: -3.7809531688690186
    3. '   ' → logprob: -5.530953407287598
    4. ':
' → logprob: -5.655953407287598
    5. ',' → logprob: -10.030953407287598
    6. ':return' → logprob: -10.405953407287598
    7. '    ' → logprob: -11.030953407287598
    8. ' return' → logprob: -11.280953407287598
    9. '):
' → logprob: -11.405953407287598
    10. '      ' → logprob: -11.405953407287598

Token 209: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06206672638654709
    2. 'return' (adapté à ' return') → logprob: -2.8120667934417725
    3. '   ' → logprob: -9.562067031860352
    4. '       ' → logprob: -10.687067031860352
    5. '	return' → logprob: -12.437067031860352
    6. ':return' → logprob: -14.812067031860352
    7. '    ' → logprob: -15.062067031860352
    8. 'eturn' → logprob: -15.062067031860352
    9. ' ' → logprob: -15.437067031860352
    10. ' ' → logprob: -15.562067031860352

Token 210: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.7332672476768494
    2. '-f' → logprob: -1.3582673072814941
    3. ' -' → logprob: -1.6082673072814941
    4. 'float' → logprob: -2.858267307281494
    5. '-' → logprob: -5.358267307281494
    6. '-fl' → logprob: -9.358266830444336
    7. ',float' → logprob: -10.608266830444336
    8. ' ' → logprob: -10.858266830444336
    9. '0' → logprob: -10.858266830444336
    10. '	float' → logprob: -11.233266830444336

Token 211: '0' (ID: 15)
  Prédit: '-f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-f' → logprob: -0.16575987637043
    2. ' -' → logprob: -2.540759801864624
    3. 'float' → logprob: -2.790759801864624
    4. ' float' → logprob: -4.790760040283203
    5. '-' → logprob: -5.665760040283203
    6. '-poly' → logprob: -7.665760040283203
    7. '-fl' → logprob: -9.290760040283203
    8. '0' → logprob: -9.665760040283203
    9. '=float' → logprob: -10.915760040283203
    10. ',float' → logprob: -11.165760040283203

Token 212: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01674278825521469
    2. '   ' → logprob: -4.141742706298828
    3. '
' → logprob: -7.891742706298828
    4. '0' → logprob: -9.516742706298828
    5. '    
' → logprob: -9.766742706298828
    6. ' ' → logprob: -9.891742706298828
    7. '<|end|>' → logprob: -9.891742706298828
    8. ')' → logprob: -10.016742706298828
    9. '  
' → logprob: -11.891742706298828
    10. 'return' → logprob: -11.891742706298828

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013110226951539516
    2. '0' → logprob: -5.763110160827637
    3. '    ' → logprob: -6.013110160827637
    4. '(' → logprob: -6.138110160827637
    5. ')' → logprob: -6.888110160827637
    6. ' ' → logprob: -6.888110160827637
    7. '    
' → logprob: -7.138110160827637
    8. '.' → logprob: -8.263110160827637
    9. ' (' → logprob: -8.263110160827637
    10. '  ' → logprob: -8.388110160827637

Token 214: ' cross' (ID: 8088)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9272911548614502
    2. 'res' → logprob: -1.9272911548614502
    3. 'idx' → logprob: -2.67729115486145
    4. 'inter' → logprob: -2.80229115486145
    5. 'l' → logprob: -2.92729115486145
    6. 'cut' → logprob: -3.55229115486145
    7. 's' → logprob: -3.67729115486145
    8. 'line' → logprob: -3.80229115486145
    9. '#' → logprob: -3.92729115486145
    10. 'def' → logprob: -4.177290916442871

Token 215: '_points' (ID: 30070)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35396093130111694
    2. ' =' → logprob: -1.6039609909057617
    3. 's' → logprob: -3.6039609909057617
    4. '(' → logprob: -4.228960990905762
    5. '=' → logprob: -4.228960990905762
    6. 'es' → logprob: -4.478960990905762
    7. '_product' → logprob: -5.353960990905762
    8. ' ' → logprob: -5.603960990905762
    9. '_products' → logprob: -5.603960990905762
    10. '_sum' → logprob: -5.853960990905762

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015379542019218206
    2. '=' → logprob: -6.501537799835205
    3. ',' → logprob: -11.251538276672363
    4. 's' → logprob: -12.376538276672363
    5. ' ' → logprob: -12.376538276672363
    6. '_' → logprob: -12.501538276672363
    7. '=[]' → logprob: -12.626538276672363
    8. ')' → logprob: -12.751538276672363
    9. ':' → logprob: -13.626538276672363
    10. ' ,' → logprob: -14.626538276672363

Token 217: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.007263246923685074
    2. ' []' → logprob: -5.00726318359375
    3. '[]
' → logprob: -8.00726318359375
    4. 'set' → logprob: -9.00726318359375
    5. '[' → logprob: -10.00726318359375
    6. '[]

' → logprob: -11.50726318359375
    7. '[]}' → logprob: -11.63226318359375
    8. ' set' → logprob: -12.13226318359375
    9. 'find' → logprob: -12.63226318359375
    10. ' [' → logprob: -12.88226318359375

Token 218: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23666583001613617
    2. 'for' → logprob: -1.8616658449172974
    3. '   ' → logprob: -3.486665725708008
    4. '<|end|>' → logprob: -4.611665725708008
    5. 'def' → logprob: -5.736665725708008
    6. ' ' → logprob: -5.861665725708008
    7. '#' → logprob: -6.861665725708008
    8. ' def' → logprob: -7.236665725708008
    9. ':' → logprob: -7.361665725708008
    10. '[' → logprob: -7.361665725708008

Token 219: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014345195144414902
    2. ' for' → logprob: -4.264345169067383
    3. 'i' → logprob: -9.764345169067383
    4. '   ' → logprob: -9.889345169067383
    5. 'def' → logprob: -10.764345169067383
    6. 'prev' → logprob: -11.014345169067383
    7. 'class' → logprob: -12.639345169067383
    8. 'segment' → logprob: -12.764345169067383
    9. 'return' → logprob: -12.889345169067383
    10. 'line' → logprob: -12.889345169067383

Token 220: ' i' (ID: 575)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8249556422233582
    2. ' i' → logprob: -0.9499556422233582
    3. 'p' → logprob: -2.324955701828003
    4. 'i' → logprob: -2.574955701828003
    5. ' edge' → logprob: -8.199955940246582
    6. ' seg' → logprob: -8.449955940246582
    7. ' line' → logprob: -9.574955940246582
    8. 'seg' → logprob: -9.887455940246582
    9. ' idx' → logprob: -9.887455940246582
    10. ' segment' → logprob: -9.887455940246582

Token 221: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062462009489536285
    2. 'in' → logprob: -2.812462091445923
    3. ',' → logprob: -7.812461853027344
    4. ' ' → logprob: -9.812461853027344
    5. ' ,' → logprob: -10.687461853027344
    6. 'In' → logprob: -13.312461853027344
    7. '_' → logprob: -13.312461853027344
    8. '	in' → logprob: -13.562461853027344
    9. '_in' → logprob: -13.687461853027344
    10. ' i' → logprob: -14.187461853027344

Token 222: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005235887598246336
    2. ' range' → logprob: -5.25523567199707
    3. '   ' → logprob: -13.88023567199707
    4. ' ' → logprob: -14.00523567199707
    5. '  ' → logprob: -15.63023567199707
    6. 'P' → logprob: -16.88023567199707
    7. '(range' → logprob: -17.00523567199707
    8. '	range' → logprob: -17.00523567199707
    9. 'r' → logprob: -17.75523567199707
    10. '    ' → logprob: -18.13023567199707

Token 223: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.011772755533456802
    2. '(' → logprob: -4.511772632598877
    3. '(len' → logprob: -7.386772632598877
    4. 'N' → logprob: -9.511773109436035
    5. ' N' → logprob: -11.136773109436035
    6. '(n' → logprob: -12.386773109436035
    7. '1' → logprob: -12.511773109436035
    8. 'len' → logprob: -13.136773109436035
    9. '(
' → logprob: -13.136773109436035
    10. '   ' → logprob: -13.511773109436035

Token 224: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.576367974281311
    2. '):
' → logprob: -0.826367974281311
    3. '-' → logprob: -8.07636833190918
    4. ' -' → logprob: -10.07636833190918
    5. '   ' → logprob: -10.57636833190918
    6. '):
' → logprob: -10.70136833190918
    7. ')' → logprob: -11.20136833190918
    8. ' ):' → logprob: -12.57636833190918
    9. ':' → logprob: -12.70136833190918
    10. ' ):
' → logprob: -12.95136833190918

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5857023000717163
    2. ' j' → logprob: -0.8357023000717163
    3. 'j' → logprob: -5.835702419281006
    4. ' p' → logprob: -5.960702419281006
    5. ' next' → logprob: -6.210702419281006
    6. '   ' → logprob: -6.460702419281006
    7. 'next' → logprob: -8.210701942443848
    8. '    ' → logprob: -9.710701942443848
    9. '	j' → logprob: -10.085701942443848
    10. ',' → logprob: -10.460701942443848

Token 226: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.7594904899597168
    2. 'p' → logprob: -0.7594904899597168
    3. 'a' → logprob: -3.384490489959717
    4. ' j' → logprob: -4.134490489959717
    5. ' p' → logprob: -4.759490489959717
    6. '   ' → logprob: -6.759490489959717
    7. '       ' → logprob: -6.759490489959717
    8. 'next' → logprob: -7.134490489959717
    9. 'curr' → logprob: -7.384490489959717
    10. ' a' → logprob: -7.759490489959717

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25196316838264465
    2. '=' → logprob: -1.5019631385803223
    3. '=i' → logprob: -10.37696361541748
    4. ' ' → logprob: -13.62696361541748
    5. ',' → logprob: -14.62696361541748
    6. '=
' → logprob: -15.37696361541748
    7. ' =(' → logprob: -15.37696361541748
    8. '=(' → logprob: -15.62696361541748
    9. ' =
' → logprob: -15.87696361541748
    10. '=int' → logprob: -16.001962661743164

Token 228: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0620085746049881
    2. ' (' → logprob: -2.8120086193084717
    3. 'i' → logprob: -10.43700885772705
    4. ' i' → logprob: -11.43700885772705
    5. '   ' → logprob: -15.06200885772705
    6. '(' → logprob: -15.68700885772705
    7. '(I' → logprob: -15.68700885772705
    8. ' ' → logprob: -16.187007904052734
    9. '       ' → logprob: -17.437007904052734
    10. '
' → logprob: -17.687007904052734

Token 229: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00015335931675508618
    2. ' i' → logprob: -8.875153541564941
    3. '(i' → logprob: -11.250153541564941
    4. '   ' → logprob: -15.250153541564941
    5. ' (' → logprob: -16.250152587890625
    6. ' ' → logprob: -16.250152587890625
    7. '
' → logprob: -17.250152587890625
    8. '{i' → logprob: -17.625152587890625
    9. '	i' → logprob: -17.875152587890625
    10. '_i' → logprob: -17.875152587890625

Token 230: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01571359857916832
    2. ' +' → logprob: -4.265713691711426
    3. '+i' → logprob: -6.640713691711426
    4. '(i' → logprob: -9.140713691711426
    5. 'i' → logprob: -9.140713691711426
    6. ' i' → logprob: -11.140713691711426
    7. '1' → logprob: -11.515713691711426
    8. ')' → logprob: -13.390713691711426
    9. ' ' → logprob: -14.015713691711426
    10. '+
' → logprob: -15.140713691711426

Token 231: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. 'i' → logprob: -16.25009536743164
    4. '   ' → logprob: -18.12509536743164
    5. ')' → logprob: -19.25009536743164
    6. '
' → logprob: -19.50009536743164
    7. ' i' → logprob: -20.00009536743164
    8. '```' → logprob: -20.37509536743164
    9. '  ' → logprob: -20.62509536743164
    10. 'def' → logprob: -21.37509536743164

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. 'i' → logprob: -15.000009536743164
    4. '   ' → logprob: -18.000009536743164
    5. '
' → logprob: -18.250009536743164
    6. '```' → logprob: -18.312509536743164
    7. '2' → logprob: -19.437509536743164
    8. ')' → logprob: -19.625009536743164
    9. '[i' → logprob: -20.000009536743164
    10. ' i' → logprob: -20.000009536743164

Token 233: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.709308167453855e-05
    2. ' )' → logprob: -9.875086784362793
    3. ')%' → logprob: -10.250086784362793
    4. '%' → logprob: -16.12508773803711
    5. ' %' → logprob: -17.37508773803711
    6. ' ' → logprob: -17.75008773803711
    7. ')
' → logprob: -18.12508773803711
    8. '）' → logprob: -18.37508773803711
    9. ')

' → logprob: -19.00008773803711
    10. '}' → logprob: -19.75008773803711

Token 234: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04858850687742233
    2. '%' → logprob: -3.048588514328003
    3. ' ' → logprob: -14.423588752746582
    4. ' %
' → logprob: -15.548588752746582
    5. '%n' → logprob: -16.173587799072266
    6. ')' → logprob: -16.423587799072266
    7. ' %=' → logprob: -16.798587799072266
    8. ')%' → logprob: -16.923587799072266
    9. '%i' → logprob: -17.048587799072266
    10. '
' → logprob: -17.298587799072266

Token 235: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.339278580620885e-06
    2. ' N' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '	N' → logprob: -21.500001907348633
    5. 'n' → logprob: -22.125001907348633
    6. ' ' → logprob: -22.250001907348633
    7. '  ' → logprob: -22.875001907348633
    8. '```' → logprob: -23.375001907348633
    9. '
' → logprob: -23.875001907348633
    10. '#' → logprob: -24.000001907348633

Token 236: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06748964637517929
    2. '
' → logprob: -3.3174896240234375
    3. '<|end|>' → logprob: -4.0674896240234375
    4. '        
' → logprob: -5.0674896240234375
    5. '   ' → logprob: -6.4424896240234375
    6. '  
' → logprob: -6.9424896240234375
    7. ',' → logprob: -7.1924896240234375
    8. '<|end|>' → logprob: -7.4424896240234375
    9. ' if' → logprob: -8.192489624023438
    10. ' ' → logprob: -8.692489624023438

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059645600616931915
    2. ' p' → logprob: -3.059645652770996
    3. 'p' → logprob: -5.059645652770996
    4. ' if' → logprob: -6.434645652770996
    5. '
' → logprob: -7.309645652770996
    6. ',' → logprob: -7.684645652770996
    7. 'if' → logprob: -8.059645652770996
    8. '   ' → logprob: -8.059645652770996
    9. '        
' → logprob: -8.184645652770996
    10. ' line' → logprob: -8.809645652770996

Token 238: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.23700553178787231
    2. 'v' → logprob: -2.3620054721832275
    3. 'c' → logprob: -2.8620054721832275
    4. 'd' → logprob: -3.7370054721832275
    5. 'u' → logprob: -4.612005710601807
    6. 'a' → logprob: -4.862005710601807
    7. 'ab' → logprob: -5.112005710601807
    8. 'l' → logprob: -6.487005710601807
    9. 's' → logprob: -6.737005710601807
    10. '       ' → logprob: -6.862005710601807

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07715725153684616
    2. '=' → logprob: -2.8271572589874268
    3. ',' → logprob: -4.702157020568848
    4. ' ' → logprob: -6.202157020568848
    5. '<|end|>' → logprob: -6.327157020568848
    6. '0' → logprob: -6.702157020568848
    7. '1' → logprob: -7.452157020568848
    8. ' p' → logprob: -9.827157020568848
    9. 'b' → logprob: -9.952157020568848
    10. 's' → logprob: -10.077157020568848

Token 240: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -5.967624019831419e-05
    2. ' P' → logprob: -9.750060081481934
    3. 'p' → logprob: -14.375060081481934
    4. '   ' → logprob: -14.750060081481934
    5. ' ' → logprob: -15.750060081481934
    6. '(P' → logprob: -15.875060081481934
    7. '	P' → logprob: -17.250059127807617
    8. '[P' → logprob: -17.250059127807617
    9. '  ' → logprob: -17.500059127807617
    10. 'solve' → logprob: -17.625059127807617

Token 241: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012455896940082312
    2. '[j' → logprob: -7.126245498657227
    3. 'i' → logprob: -8.751245498657227
    4. 'p' → logprob: -9.376245498657227
    5. ' p' → logprob: -9.501245498657227
    6. ' i' → logprob: -9.501245498657227
    7. '[' → logprob: -11.501245498657227
    8. '
' → logprob: -11.626245498657227
    9. '(i' → logprob: -12.501245498657227
    10. 'j' → logprob: -12.626245498657227

Token 242: ']
' (ID: 1592)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6360965967178345
    2. '-' → logprob: -1.1360965967178345
    3. '
' → logprob: -2.636096477508545
    4. 'b' → logprob: -4.136096477508545
    5. ' p' → logprob: -4.511096477508545
    6. ']' → logprob: -4.511096477508545
    7. ')' → logprob: -5.261096477508545
    8. '<|end|>' → logprob: -5.636096477508545
    9. '-B' → logprob: -5.761096477508545
    10. 'p' → logprob: -6.011096477508545

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06328077614307404
    2. 'q' → logprob: -3.5632808208465576
    3. ' q' → logprob: -3.6882808208465576
    4. 'v' → logprob: -5.5632805824279785
    5. ' v' → logprob: -6.1882805824279785
    6. ',' → logprob: -7.6882805824279785
    7. '
' → logprob: -8.188281059265137
    8. ' s' → logprob: -8.688281059265137
    9. 's' → logprob: -8.813281059265137
    10. ' =' → logprob: -9.313281059265137

Token 244: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.00024382755509577692
    2. ' q' → logprob: -9.000244140625
    3. 'p' → logprob: -9.500244140625
    4. 'v' → logprob: -11.000244140625
    5. 'c' → logprob: -11.125244140625
    6. '   ' → logprob: -12.375244140625
    7. '       ' → logprob: -13.625244140625
    8. 'r' → logprob: -14.000244140625
    9. 'next' → logprob: -14.625244140625
    10. 'vec' → logprob: -14.625244140625

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575942873954773
    2. '=' → logprob: -0.825942873954773
    3. ' ' → logprob: -13.075942993164062
    4. ',' → logprob: -14.700942993164062
    5. '=P' → logprob: -15.075942993164062
    6. '<|end|>' → logprob: -15.700942993164062
    7. 's' → logprob: -15.950942993164062
    8. 'p' → logprob: -16.825942993164062
    9. ')' → logprob: -17.200942993164062
    10. '.' → logprob: -17.325942993164062

Token 246: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.1602296084165573
    2. ' P' → logprob: -1.9102295637130737
    3. ' ' → logprob: -12.910229682922363
    4. '	P' → logprob: -14.035229682922363
    5. '   ' → logprob: -14.160229682922363
    6. 'p' → logprob: -15.285229682922363
    7. '(P' → logprob: -15.410229682922363
    8. '       ' → logprob: -15.785229682922363
    9. '[' → logprob: -15.910229682922363
    10. '
' → logprob: -16.035228729248047

Token 247: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.4391956685576588e-05
    2. '[i' → logprob: -10.875024795532227
    3. '[q' → logprob: -12.500024795532227
    4. '[' → logprob: -13.625024795532227
    5. 'j' → logprob: -15.500024795532227
    6. '[
' → logprob: -16.125024795532227
    7. '[(' → logprob: -16.750024795532227
    8. ' [' → logprob: -17.250024795532227
    9. '```' → logprob: -17.375024795532227
    10. ' j' → logprob: -18.625024795532227

Token 248: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1110410690307617
    2. '       ' → logprob: -1.1110410690307617
    3. ')' → logprob: -1.4860410690307617
    4. '
' → logprob: -3.4860410690307617
    5. '<|end|>' → logprob: -4.361041069030762
    6. '   ' → logprob: -4.486041069030762
    7. ' ' → logprob: -4.611041069030762
    8. '=' → logprob: -4.861041069030762
    9. ' p' → logprob: -5.111041069030762
    10. '        ' → logprob: -5.111041069030762

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006928373593837023
    2. ' c' → logprob: -5.756928443908691
    3. ' if' → logprob: -6.631928443908691
    4. '   ' → logprob: -7.756928443908691
    5. ' s' → logprob: -7.881928443908691
    6. 'c' → logprob: -8.006928443908691
    7. ',' → logprob: -8.131928443908691
    8. 's' → logprob: -9.006928443908691
    9. 'if' → logprob: -9.006928443908691
    10. ' cross' → logprob: -9.006928443908691

Token 250: ' qp' (ID: 145994)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3128691017627716
    2. 'd' → logprob: -1.9378690719604492
    3. 'ab' → logprob: -3.312869071960449
    4. 'r' → logprob: -3.687869071960449
    5. 'v' → logprob: -3.687869071960449
    6. 'b' → logprob: -4.312869071960449
    7. 'cross' → logprob: -4.437869071960449
    8. 'bp' → logprob: -5.812869071960449
    9. 'vec' → logprob: -6.062869071960449
    10. 'cp' → logprob: -6.687869071960449

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4759247601032257
    2. '=' → logprob: -0.9759247303009033
    3. '-' → logprob: -7.475924968719482
    4. ' -' → logprob: -8.100924491882324
    5. 'v' → logprob: -8.475924491882324
    6. 'p' → logprob: -8.850924491882324
    7. '_diff' → logprob: -9.100924491882324
    8. 'diff' → logprob: -9.225924491882324
    9. 'b' → logprob: -9.600924491882324
    10. ' ' → logprob: -10.100924491882324

Token 252: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.007921624928712845
    2. 'p' → logprob: -5.5079216957092285
    3. ' q' → logprob: -5.6329216957092285
    4. 'B' → logprob: -9.88292121887207
    5. '(q' → logprob: -9.88292121887207
    6. ' p' → logprob: -10.38292121887207
    7. 'b' → logprob: -10.38292121887207
    8. 'Vec' → logprob: -10.50792121887207
    9. 'Q' → logprob: -11.25792121887207
    10. 'P' → logprob: -11.38292121887207

Token 253: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16039898991584778
    2. '-' → logprob: -1.9103989601135254
    3. ' ' → logprob: -9.535399436950684
    4. 'p' → logprob: -9.785399436950684
    5. '-p' → logprob: -10.285399436950684
    6. ' p' → logprob: -12.035399436950684
    7. '.' → logprob: -14.035399436950684
    8. '-
' → logprob: -14.285399436950684
    9. ' -
' → logprob: -14.285399436950684
    10. '-q' → logprob: -14.410399436950684

Token 254: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019288709154352546
    2. ' p' → logprob: -6.251928806304932
    3. 'q' → logprob: -15.62692928314209
    4. 'P' → logprob: -16.876928329467773
    5. ' ' → logprob: -17.001928329467773
    6. '	p' → logprob: -18.501928329467773
    7. '<p' → logprob: -18.751928329467773
    8. '<|end|>' → logprob: -18.876928329467773
    9. 'A' → logprob: -19.376928329467773
    10. '&p' → logprob: -20.001928329467773

Token 255: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6502714157104492
    2. '       ' → logprob: -1.0252714157104492
    3. '<|end|>' → logprob: -2.775271415710449
    4. 'b' → logprob: -3.525271415710449
    5. ' cross' → logprob: -4.775271415710449
    6. '        
' → logprob: -5.775271415710449
    7. ' b' → logprob: -5.775271415710449
    8. ' 
' → logprob: -6.150271415710449
    9. '
' → logprob: -6.900271415710449
    10. ',' → logprob: -6.900271415710449

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033741232473403215
    2. ' if' → logprob: -7.128374099731445
    3. ' c' → logprob: -7.628374099731445
    4. 't' → logprob: -7.753374099731445
    5. ' t' → logprob: -8.003374099731445
    6. 'if' → logprob: -8.128374099731445
    7. '   ' → logprob: -8.503374099731445
    8. ' cross' → logprob: -9.003374099731445
    9. 'c' → logprob: -9.128374099731445
    10. ',' → logprob: -9.253374099731445

Token 257: ' cross' (ID: 8088)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.5725728869438171
    2. 'c' → logprob: -1.197572946548462
    3. 'd' → logprob: -2.572572946548462
    4. 'ab' → logprob: -4.197572708129883
    5. 'cross' (adapté à ' cross') → logprob: -4.572572708129883
    6. 'dp' → logprob: -5.072572708129883
    7. 'cp' → logprob: -5.197572708129883
    8. 'bp' → logprob: -5.447572708129883
    9. 'b' → logprob: -5.572572708129883
    10. ' denom' → logprob: -5.947572708129883

Token 258: '_q' (ID: 19384)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.15133850276470184
    2. '_pts' → logprob: -2.651338577270508
    3. ' =' → logprob: -4.276338577270508
    4. '_point' → logprob: -4.526338577270508
    5. '_tokens' → logprob: -4.901338577270508
    6. '=' → logprob: -5.276338577270508
    7. '_p' → logprob: -5.276338577270508
    8. '_val' → logprob: -5.401338577270508
    9. '_pt' → logprob: -5.526338577270508
    10. 's' → logprob: -5.651338577270508

Token 259: 'p' (ID: 79)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7532142400741577
    2. ' =' → logprob: -0.8782142400741577
    3. '_points' → logprob: -3.0032143592834473
    4. 'p' → logprob: -3.8782143592834473
    5. 'oints' → logprob: -4.253214359283447
    6. 'u' → logprob: -4.378214359283447
    7. 'points' → logprob: -5.253214359283447
    8. 't' → logprob: -6.628214359283447
    9. '=q' → logprob: -6.628214359283447
    10. '=u' → logprob: -7.128214359283447

Token 260: '_b' (ID: 1535)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4789544939994812
    2. '=' → logprob: -1.103954553604126
    3. '.' → logprob: -4.103954315185547
    4. 's' → logprob: -4.603954315185547
    5. ',' → logprob: -5.978954315185547
    6. '_cross' → logprob: -6.103954315185547
    7. ' ' → logprob: -6.353954315185547
    8. '_fraction' → logprob: -6.478954315185547
    9. '.cross' → logprob: -6.478954315185547
    10. '_frac' → logprob: -6.603954315185547

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25364381074905396
    2. '=' → logprob: -1.5036437511444092
    3. ',' → logprob: -7.378643989562988
    4. ' ' → logprob: -8.003643989562988
    5. '.' → logprob: -8.378643989562988
    6. '.cross' → logprob: -9.253643989562988
    7. '   ' → logprob: -9.753643989562988
    8. '  ' → logprob: -9.878643989562988
    9. ')' → logprob: -9.878643989562988
    10. '_cross' → logprob: -10.003643989562988

Token 262: ' qp' (ID: 145994)
  Prédit: 'qp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qp' → logprob: -0.1273401379585266
    2. ' qp' → logprob: -2.127340078353882
    3. 'b' → logprob: -8.127340316772461
    4. ' ' → logprob: -10.252340316772461
    5. ' b' → logprob: -10.252340316772461
    6. 'q' → logprob: -11.127340316772461
    7. '   ' → logprob: -11.752340316772461
    8. '  ' → logprob: -12.502340316772461
    9. ' q' → logprob: -12.627340316772461
    10. '
' → logprob: -12.877340316772461

Token 263: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -7.941850526549388e-06
    2. '.' → logprob: -12.500007629394531
    3. ' .' → logprob: -12.875007629394531
    4. '.dot' → logprob: -14.625007629394531
    5. '.vector' → logprob: -14.750007629394531
    6. '.Cross' → logprob: -15.375007629394531
    7. 'cross' → logprob: -16.25000762939453
    8. ' ' → logprob: -16.37500762939453
    9. '.c' → logprob: -16.50000762939453
    10. '.x' → logprob: -16.50000762939453

Token 264: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006767706945538521
    2. ' b' → logprob: -5.006767749786377
    3. '(b' → logprob: -9.881767272949219
    4. '   ' → logprob: -14.756767272949219
    5. '	b' → logprob: -15.006767272949219
    6. ' ' → logprob: -15.506767272949219
    7. ')b' → logprob: -15.631767272949219
    8. '_b' → logprob: -16.38176727294922
    9. '(' → logprob: -17.00676727294922
    10. '*b' → logprob: -17.88176727294922

Token 265: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020436751656234264
    2. ')
' → logprob: -6.252043724060059
    3. ' )' → logprob: -9.127043724060059
    4. ')

' → logprob: -12.877043724060059
    5. ' )
' → logprob: -13.252043724060059
    6. ')
' → logprob: -14.377043724060059
    7. '())' → logprob: -15.127043724060059
    8. ')#' → logprob: -15.127043724060059
    9. '<|end|>' → logprob: -16.252042770385742
    10. ' ' → logprob: -16.377042770385742

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007563914638012648
    2. ' if' → logprob: -5.632564067840576
    3. '<|end|>' → logprob: -5.757564067840576
    4. ',' → logprob: -8.507563591003418
    5. 'if' → logprob: -8.507563591003418
    6. '<|end|>' → logprob: -9.507563591003418
    7. '=' → logprob: -9.632563591003418
    8. ')' → logprob: -9.757563591003418
    9. '
' → logprob: -10.257563591003418
    10. ')
' → logprob: -10.882563591003418

Token 267: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22077329456806183
    2. '       ' → logprob: -2.095773220062256
    3. ' if' → logprob: -2.720773220062256
    4. 'd' → logprob: -5.220773220062256
    5. 't' → logprob: -6.845773220062256
    6. 'p' → logprob: -7.470773220062256
    7. 'dp' → logprob: -7.470773220062256
    8. 'cross' → logprob: -8.095773696899414
    9. 'x' → logprob: -8.595773696899414
    10. ' cross' → logprob: -8.970773696899414

Token 268: ' cross' (ID: 8088)
  Prédit: ' cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.2901644706726074
    2. 'cross' → logprob: -1.4151644706726074
    3. ' abs' → logprob: -5.040164470672607
    4. 'abs' → logprob: -6.165164470672607
    5. '   ' → logprob: -8.790164947509766
    6. ' math' → logprob: -9.415164947509766
    7. ' ' → logprob: -9.665164947509766
    8. ' not' → logprob: -10.165164947509766
    9. 'math' → logprob: -11.915164947509766
    10. '  ' → logprob: -12.165164947509766

Token 269: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -1.2352385965641588e-05
    2. '_points' → logprob: -12.000012397766113
    3. '_p' → logprob: -12.125012397766113
    4. '
' → logprob: -15.500012397766113
    5. 'q' → logprob: -15.750012397766113
    6. '_' → logprob: -16.125011444091797
    7. '_pts' → logprob: -17.000011444091797
    8. 'points' → logprob: -17.250011444091797
    9. '_b' → logprob: -17.250011444091797
    10. '\' → logprob: -17.500011444091797

Token 270: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.037835580878891e-05
    2. '_p' → logprob: -10.00005054473877
    3. '==' → logprob: -13.62505054473877
    4. '=' → logprob: -14.00005054473877
    5. '```' → logprob: -14.75005054473877
    6. ' p' → logprob: -15.12505054473877
    7. '_q' → logprob: -15.12505054473877
    8. 'п' → logprob: -15.12505054473877
    9. 'pb' → logprob: -15.75005054473877
    10. 'b' → logprob: -15.87505054473877

Token 271: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.07515871524810791
    2. 'b' → logprob: -2.9501585960388184
    3. '==' → logprob: -4.325158596038818
    4. ' ==' → logprob: -5.325158596038818
    5. ' b' → logprob: -7.450158596038818
    6. ' ' → logprob: -8.075159072875977
    7. '!=' → logprob: -8.075159072875977
    8. '=' → logprob: -8.450159072875977
    9. '(b' → logprob: -8.575159072875977
    10. ' !=' → logprob: -9.200159072875977

Token 272: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.920390784740448
    2. ' ==' → logprob: -1.4203908443450928
    3. '!=' → logprob: -1.5453908443450928
    4. '==' → logprob: -1.9203908443450928
    5. '=' → logprob: -8.670391082763672
    6. ':' → logprob: -10.545391082763672
    7. ' ' → logprob: -11.045391082763672
    8. '()!=' → logprob: -12.420391082763672
    9. ' not' → logprob: -12.545391082763672
    10. ')' → logprob: -12.670391082763672

Token 273: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05488375201821327
    2. ' ' → logprob: -2.9298837184906006
    3. '   ' → logprob: -14.17988395690918
    4. '  ' → logprob: -15.17988395690918
    5. '=' → logprob: -15.55488395690918
    6. '<|end|>' → logprob: -16.86738395690918
    7. 'zero' → logprob: -17.17988395690918
    8. '۰' → logprob: -17.17988395690918
    9. '```' → logprob: -17.17988395690918
    10. '    ' → logprob: -17.24238395690918

Token 274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '=' → logprob: -17.62523078918457
    4. '   ' → logprob: -17.62523078918457
    5. 'zero' → logprob: -18.37523078918457
    6. '  ' → logprob: -18.43773078918457
    7. '<|end|>' → logprob: -18.75023078918457
    8. '۰' → logprob: -18.81273078918457
    9. '```' → logprob: -18.93773078918457
    10. 'None' → logprob: -19.37523078918457

Token 275: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1003652885556221
    2. ':
' → logprob: -3.100365400314331
    3. ' or' → logprob: -3.350365400314331
    4. ' and' → logprob: -4.350365161895752
    5. '           ' → logprob: -6.225365161895752
    6. '       ' → logprob: -8.72536563873291
    7. '<|end|>' → logprob: -9.10036563873291
    8. ' continue' → logprob: -9.47536563873291
    9. ',' → logprob: -10.22536563873291
    10. ' continues' → logprob: -10.72536563873291

Token 276: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02634674683213234
    2. ' continue' → logprob: -4.026346683502197
    3. 'continue' → logprob: -4.901346683502197
    4. '       ' → logprob: -7.276346683502197
    5. '	continue' → logprob: -11.651347160339355
    6. ' continues' → logprob: -11.901347160339355
    7. ' if' → logprob: -12.026347160339355
    8. '	       ' → logprob: -13.276347160339355
    9. 'Continue' → logprob: -13.526347160339355
    10. '               ' → logprob: -13.651347160339355

Token 277: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2930058240890503
    2. ' continue' → logprob: -1.9180058240890503
    3. '           ' → logprob: -2.29300594329834
    4. '       ' → logprob: -5.41800594329834
    5. 'if' → logprob: -6.66800594329834
    6. ' if' → logprob: -8.16800594329834
    7. '   ' → logprob: -9.91800594329834
    8. '	continue' → logprob: -10.29300594329834
    9. '               ' → logprob: -11.16800594329834
    10. '#' → logprob: -11.91800594329834

Token 278: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003681313246488571
    2. '        
' → logprob: -6.378681182861328
    3. '<|end|>' → logprob: -6.378681182861328
    4. '
' → logprob: -9.753681182861328
    5. ',' → logprob: -9.878681182861328
    6. '  
' → logprob: -10.128681182861328
    7. ' if' → logprob: -10.503681182861328
    8. '   ' → logprob: -10.753681182861328
    9. '<|end|>' → logprob: -11.003681182861328
    10. ')' → logprob: -11.378681182861328

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002195933135226369
    2. '<|end|>' → logprob: -6.252195835113525
    3. '        
' → logprob: -8.877196311950684
    4. ' if' → logprob: -10.002196311950684
    5. '```' → logprob: -11.002196311950684
    6. ',' → logprob: -11.627196311950684
    7. '<|end|>' → logprob: -11.877196311950684
    8. ')' → logprob: -12.002196311950684
    9. 'token' → logprob: -12.127196311950684
    10. '   ' → logprob: -12.502196311950684

Token 280: ' k' (ID: 372)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04869523644447327
    2. '       ' → logprob: -3.5486953258514404
    3. ' t' → logprob: -4.423695087432861
    4. 's' → logprob: -5.548695087432861
    5. 'd' → logprob: -6.173695087432861
    6. 'r' → logprob: -8.54869556427002
    7. '   ' → logprob: -8.92369556427002
    8. 'k' (adapté à ' k') → logprob: -9.17369556427002
    9. 'u' → logprob: -9.79869556427002
    10. ' s' → logprob: -10.54869556427002

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194233655929565
    2. '=' → logprob: -1.5019423961639404
    3. ',' → logprob: -12.37694263458252
    4. ' ' → logprob: -12.62694263458252
    5. '    ' → logprob: -14.25194263458252
    6. ')' → logprob: -14.25194263458252
    7. '.' → logprob: -14.50194263458252
    8. 'space' → logprob: -14.87694263458252
    9. '=int' → logprob: -15.00194263458252
    10. '<|end|>' → logprob: -15.00194263458252

Token 282: ' Fraction' (ID: 112108)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4381064176559448
    2. '-p' → logprob: -1.4381064176559448
    3. '(p' → logprob: -3.3131065368652344
    4. '-' → logprob: -3.9381065368652344
    5. 'Fraction' → logprob: -4.063106536865234
    6. '(-' → logprob: -4.563106536865234
    7. 'b' → logprob: -4.938106536865234
    8. '-(' → logprob: -4.938106536865234
    9. '(q' → logprob: -5.688106536865234
    10. '(' → logprob: -5.688106536865234

Token 283: '(b' (ID: 3229)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.5789247155189514
    2. 'b' → logprob: -1.4539246559143066
    3. '-b' → logprob: -1.9539246559143066
    4. '(b' → logprob: -3.0789246559143066
    5. '(' → logprob: -5.453924655914307
    6. '-' → logprob: -5.703924655914307
    7. 'cross' → logprob: -6.328924655914307
    8. '(q' → logprob: -6.328924655914307
    9. '-cross' → logprob: -6.578924655914307
    10. '-p' → logprob: -6.703924655914307

Token 284: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -0.00016921341011766344
    2. '.' → logprob: -9.125168800354004
    3. 'cross' → logprob: -10.375168800354004
    4. ').' → logprob: -11.750168800354004
    5. '.q' → logprob: -12.125168800354004
    6. ' .' → logprob: -12.125168800354004
    7. ' cross' → logprob: -13.375168800354004
    8. '.dot' → logprob: -13.375168800354004
    9. '.y' → logprob: -13.625168800354004
    10. '.x' → logprob: -13.750168800354004

Token 285: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.43003296852111816
    2. '(p' → logprob: -1.0550329685211182
    3. '(q' → logprob: -7.055032730102539
    4. ' p' → logprob: -8.680032730102539
    5. ')' → logprob: -9.305032730102539
    6. '(' → logprob: -9.555032730102539
    7. ' (' → logprob: -10.055032730102539
    8. 'q' → logprob: -10.680032730102539
    9. 'pq' → logprob: -11.180032730102539
    10. '-p' → logprob: -11.555032730102539

Token 286: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11112252622842789
    2. ',q' → logprob: -2.3611226081848145
    3. '),' → logprob: -5.2361226081848145
    4. ')' → logprob: -5.3611226081848145
    5. 'q' → logprob: -8.111122131347656
    6. ' ,' → logprob: -8.361122131347656
    7. 'qp' → logprob: -8.861122131347656
    8. '(),' → logprob: -10.361122131347656
    9. ',k' → logprob: -10.736122131347656
    10. ' qp' → logprob: -10.861122131347656

Token 287: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0008146316395141184
    2. ' cross' → logprob: -7.125814437866211
    3. 'qp' → logprob: -12.500814437866211
    4. '   ' → logprob: -13.125814437866211
    5. '-cross' → logprob: -13.375814437866211
    6. '.cross' → logprob: -14.500814437866211
    7. 'q' → logprob: -14.750814437866211
    8. '           ' → logprob: -15.000814437866211
    9. '       ' → logprob: -15.250814437866211
    10. ')' → logprob: -15.250814437866211

Token 288: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -2.4153549020411447e-05
    2. 'q' → logprob: -10.75002384185791
    3. 'qp' → logprob: -12.87502384185791
    4. '
' → logprob: -17.250024795532227
    5. '_p' → logprob: -17.375024795532227
    6. '	q' → logprob: -18.625024795532227
    7. '```' → logprob: -19.250024795532227
    8. '-q' → logprob: -19.375024795532227
    9. '\' → logprob: -19.625024795532227
    10. ' q' → logprob: -19.750024795532227

Token 289: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0069237579591572285
    2. 'q' → logprob: -5.256923675537109
    3. '_q' → logprob: -6.631923675537109
    4. 'b' → logprob: -8.75692367553711
    5. '_p' → logprob: -9.38192367553711
    6. 'qb' → logprob: -9.88192367553711
    7. '_b' → logprob: -10.13192367553711
    8. 'qp' → logprob: -10.63192367553711
    9. 'pb' → logprob: -12.13192367553711
    10. 'п' → logprob: -12.13192367553711

Token 290: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.7432603272027336e-06
    2. 'b' → logprob: -13.375001907348633
    3. 'q' → logprob: -17.125001907348633
    4. '_q' → logprob: -17.500001907348633
    5. '-b' → logprob: -17.500001907348633
    6. '```' → logprob: -18.625001907348633
    7. '_' → logprob: -19.125001907348633
    8. ')' → logprob: -19.625001907348633
    9. 'qb' → logprob: -20.125001907348633
    10. '_a' → logprob: -20.125001907348633

Token 291: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5690089639974758e-05
    2. ')
' → logprob: -11.375015258789062
    3. ' )' → logprob: -13.125015258789062
    4. '<|end|>' → logprob: -13.625015258789062
    5. ')

' → logprob: -15.000015258789062
    6. '[' → logprob: -16.125015258789062
    7. '),' → logprob: -16.125015258789062
    8. ').' → logprob: -16.500015258789062
    9. '<|end|>' → logprob: -16.500015258789062
    10. ' ' → logprob: -16.875015258789062

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009204629808664322
    2. '<|end|>' → logprob: -4.884204864501953
    3. '        
' → logprob: -7.634204864501953
    4. ' if' → logprob: -8.259204864501953
    5. ')' → logprob: -8.384204864501953
    6. ' ' → logprob: -8.634204864501953
    7. '   ' → logprob: -9.634204864501953
    8. '	' → logprob: -9.759204864501953
    9. '<|end|>' → logprob: -10.009204864501953
    10. '\n' → logprob: -10.384204864501953

Token 293: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.000566137779969722
    2. ' if' → logprob: -7.500566005706787
    3. '       ' → logprob: -11.500566482543945
    4. 't' → logprob: -13.750566482543945
    5. 's' → logprob: -14.500566482543945
    6. 'x' → logprob: -15.125566482543945
    7. 'If' → logprob: -15.375566482543945
    8. '#' → logprob: -15.500566482543945
    9. 'l' → logprob: -16.125566482543945
    10. '0' → logprob: -16.250566482543945

Token 294: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1413537561893463
    2. ' ' → logprob: -2.2663538455963135
    3. 'k' → logprob: -4.016353607177734
    4. ' k' → logprob: -4.891353607177734
    5. ' not' → logprob: -6.266353607177734
    6. 'not' → logprob: -8.016353607177734
    7. 'Fraction' → logprob: -8.266353607177734
    8. ' Fraction' → logprob: -9.891353607177734
    9. '  ' → logprob: -11.016353607177734
    10. '   ' → logprob: -11.016353607177734

Token 295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02773028425872326
    2. 'k' → logprob: -3.7777302265167236
    3. ' ' → logprob: -5.777730464935303
    4. 'not' → logprob: -7.277730464935303
    5. ' k' → logprob: -8.277729988098145
    6. 'Fraction' → logprob: -8.527729988098145
    7. ' not' → logprob: -8.902729988098145
    8. '-' → logprob: -10.527729988098145
    9. '(' → logprob: -10.652729988098145
    10. '-k' → logprob: -10.777729988098145

Token 296: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.012650790624320507
    2. '<=' → logprob: -4.637650966644287
    3. ' <' → logprob: -5.887650966644287
    4. ' ' → logprob: -9.512650489807129
    5. '<' → logprob: -10.137650489807129
    6. '.' → logprob: -14.137650489807129
    7. '0' → logprob: -14.262650489807129
    8. '  ' → logprob: -15.012650489807129
    9. '[' → logprob: -15.262650489807129
    10. '=' → logprob: -15.387650489807129

Token 297: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.018150178715586662
    2. ' k' → logprob: -4.018150329589844
    3. ' ' → logprob: -16.268150329589844
    4. '	k' → logprob: -16.393150329589844
    5. '=k' → logprob: -16.643150329589844
    6. 'Fraction' → logprob: -17.518150329589844
    7. ' ' → logprob: -18.268150329589844
    8. '{k' → logprob: -18.393150329589844
    9. '=' → logprob: -18.518150329589844
    10. '_k' → logprob: -18.893150329589844

Token 298: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05137299746274948
    2. '<' → logprob: -3.30137300491333
    3. ' and' → logprob: -4.42637300491333
    4. ' ' → logprob: -7.17637300491333
    5. 'and' → logprob: -7.92637300491333
    6. '<|end|>' → logprob: -8.926372528076172
    7. '<|end|>' → logprob: -11.926372528076172
    8. ' <=' → logprob: -12.301372528076172
    9. ' <",' → logprob: -12.801372528076172
    10. ' <
' → logprob: -13.426372528076172

Token 299: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. 'Fraction' → logprob: -12.875003814697266
    3. ' ' → logprob: -13.500003814697266
    4. '   ' → logprob: -19.125003814697266
    5. '  ' → logprob: -20.625003814697266
    6. '```' → logprob: -20.750003814697266
    7. ' Fraction' → logprob: -21.125003814697266
    8. 'Fra' → logprob: -21.125003814697266
    9. 'fraction' → logprob: -21.750003814697266
    10. '۱' → logprob: -22.625003814697266

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029828163678757846
    2. 'Fraction' → logprob: -8.125298500061035
    3. ' ' → logprob: -13.125298500061035
    4. '   ' → logprob: -17.25029754638672
    5. ' Fraction' → logprob: -17.50029754638672
    6. 'k' → logprob: -17.87529754638672
    7. '```' → logprob: -17.87529754638672
    8. 'Fra' → logprob: -18.12529754638672
    9. 'Frac' → logprob: -18.25029754638672
    10. '
' → logprob: -19.00029754638672

Token 301: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001662324066273868
    2. ':
' → logprob: -6.751662254333496
    3. ' and' → logprob: -7.751662254333496
    4. ' :' → logprob: -9.876662254333496
    5. '):' → logprob: -12.001662254333496
    6. '<|end|>' → logprob: -14.001662254333496
    7. ' :
' → logprob: -14.376662254333496
    8. ':

' → logprob: -14.501662254333496
    9. ',' → logprob: -14.751662254333496
    10. 'and' → logprob: -14.751662254333496

Token 302: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002320106839761138
    2. ' cross' → logprob: -6.127320289611816
    3. 'cross' → logprob: -10.252320289611816
    4. '       ' → logprob: -10.752320289611816
    5. '          ' → logprob: -10.752320289611816
    6. '               ' → logprob: -10.752320289611816
    7. ',' → logprob: -11.627320289611816
    8. '<|end|>' → logprob: -12.627320289611816
    9. '            
' → logprob: -12.877320289611816
    10. ' continue' → logprob: -13.127320289611816

Token 303: ' t' (ID: 260)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.6171432733535767
    2. 'cross' → logprob: -0.8671432733535767
    3. 'r' → logprob: -3.992143154144287
    4. 't' (adapté à ' t') → logprob: -5.117143154144287
    5. ' r' → logprob: -5.492143154144287
    6. '           ' → logprob: -5.992143154144287
    7. 's' → logprob: -6.492143154144287
    8. 'inter' → logprob: -6.492143154144287
    9. ' t' → logprob: -6.617143154144287
    10. 'c' → logprob: -6.867143154144287

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048666391521692276
    2. '=' → logprob: -3.048666477203369
    3. ' ' → logprob: -9.923666000366211
    4. '<|end|>' → logprob: -10.798666000366211
    5. 'okens' → logprob: -13.173666000366211
    6. 's' → logprob: -13.798666000366211
    7. '<|end|>' → logprob: -14.048666000366211
    8. 'oken' → logprob: -14.298666000366211
    9. '    ' → logprob: -14.423666000366211
    10. ',' → logprob: -14.423666000366211

Token 305: ' Fraction' (ID: 112108)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.019350536167621613
    2. 'Fraction' → logprob: -4.519350528717041
    3. 'qp' → logprob: -5.144350528717041
    4. 'q' → logprob: -6.644350528717041
    5. '1' → logprob: -8.1443510055542
    6. ' p' → logprob: -8.2693510055542
    7. 'fraction' → logprob: -9.3943510055542
    8. '(' → logprob: -9.6443510055542
    9. ' qp' → logprob: -9.7693510055542
    10. 'pq' → logprob: -10.0193510055542

Token 306: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6634628772735596
    2. 'b' → logprob: -1.4134628772735596
    3. 'qp' → logprob: -2.1634628772735596
    4. '(q' → logprob: -3.2884628772735596
    5. 'cross' → logprob: -3.9134628772735596
    6. 'q' → logprob: -3.9134628772735596
    7. '-' → logprob: -4.7884626388549805
    8. '-b' → logprob: -5.0384626388549805
    9. '-p' → logprob: -5.1634626388549805
    10. '(-' → logprob: -5.1634626388549805

Token 307: '.cross' (ID: 108957)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.6831839084625244
    2. '.cross' → logprob: -0.9331839084625244
    3. '.x' → logprob: -3.0581839084625244
    4. 'cross' → logprob: -3.9331839084625244
    5. 'y' → logprob: -4.933183670043945
    6. '-' → logprob: -5.183183670043945
    7. '.' → logprob: -5.433183670043945
    8. ',' → logprob: -5.558183670043945
    9. ')' → logprob: -5.558183670043945
    10. '+' → logprob: -6.558183670043945

Token 308: '(q' (ID: 21479)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005180051666684449
    2. '(b' → logprob: -7.875517845153809
    3. 'q' → logprob: -9.375517845153809
    4. ' b' → logprob: -11.125517845153809
    5. 'qp' → logprob: -11.250517845153809
    6. '	b' → logprob: -11.750517845153809
    7. 'p' → logprob: -12.125517845153809
    8. '(q' → logprob: -12.125517845153809
    9. '   ' → logprob: -13.750517845153809
    10. '(-' → logprob: -13.875517845153809

Token 309: 'p' (ID: 79)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9469242691993713
    2. 'p' → logprob: -1.1969242095947266
    3. '),' → logprob: -1.3219242095947266
    4. ' -' → logprob: -3.8219242095947266
    5. '-' → logprob: -4.196924209594727
    6. ')' → logprob: -6.571924209594727
    7. '-p' → logprob: -7.071924209594727
    8. 'q' → logprob: -7.196924209594727
    9. ',p' → logprob: -7.196924209594727
    10. ' ,' → logprob: -7.821924209594727

Token 310: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.43152451515197754
    2. ',' → logprob: -1.0565245151519775
    3. ')' → logprob: -6.056524276733398
    4. '(),' → logprob: -8.806524276733398
    5. ',b' → logprob: -9.181524276733398
    6. ' ),' → logprob: -9.306524276733398
    7. ' ,' → logprob: -9.431524276733398
    8. ',k' → logprob: -10.431524276733398
    9. '()),' → logprob: -11.681524276733398
    10. 'b' → logprob: -12.556524276733398

Token 311: ' b' (ID: 287)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.2584744989871979
    2. ' cross' → logprob: -2.008474588394165
    3. 'b' → logprob: -2.383474588394165
    4. ' b' → logprob: -6.758474349975586
    5. ')' → logprob: -9.508474349975586
    6. '.cross' → logprob: -10.258474349975586
    7. '_cross' → logprob: -11.008474349975586
    8. '           ' → logprob: -11.258474349975586
    9. 'c' → logprob: -11.633474349975586
    10. '   ' → logprob: -12.133474349975586

Token 312: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -0.00167161098215729
    2. 'cross' → logprob: -6.87667179107666
    3. ')' → logprob: -7.75167179107666
    4. '_cross' → logprob: -8.75167179107666
    5. ' cross' → logprob: -10.00167179107666
    6. '.' → logprob: -13.62667179107666
    7. 'Cross' → logprob: -13.87667179107666
    8. ')
' → logprob: -14.12667179107666
    9. '   ' → logprob: -14.75167179107666
    10. ').' → logprob: -14.87667179107666

Token 313: '(q' (ID: 21479)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01931406371295452
    2. 'qp' → logprob: -4.519314289093018
    3. 'p' → logprob: -4.894314289093018
    4. 'q' → logprob: -7.644314289093018
    5. ')' → logprob: -9.39431381225586
    6. ' b' → logprob: -9.51931381225586
    7. ' qp' → logprob: -9.89431381225586
    8. '(q' → logprob: -11.39431381225586
    9. '(b' → logprob: -11.64431381225586
    10. '(p' → logprob: -12.14431381225586

Token 314: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0011445031268522143
    2. ')' → logprob: -7.3761444091796875
    3. '))' → logprob: -7.7511444091796875
    4. 'b' → logprob: -9.751144409179688
    5. '_p' → logprob: -11.376144409179688
    6. ')))' → logprob: -12.001144409179688
    7. 'q' → logprob: -12.501144409179688
    8. ')p' → logprob: -12.501144409179688
    9. ' p' → logprob: -12.876144409179688
    10. '<|end|>' → logprob: -15.626144409179688

Token 315: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010513884481042624
    2. ')
' → logprob: -6.876051425933838
    3. ' )' → logprob: -11.50105094909668
    4. '))' → logprob: -12.37605094909668
    5. ')}' → logprob: -13.50105094909668
    6. ')

' → logprob: -14.12605094909668
    7. '())' → logprob: -14.75105094909668
    8. '),' → logprob: -14.87605094909668
    9. ')`' → logprob: -15.25105094909668
    10. ')
' → logprob: -15.50105094909668

Token 316: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18489131331443787
    2. '<|end|>' → logprob: -2.0598912239074707
    3. ')' → logprob: -3.5598912239074707
    4. '
' → logprob: -4.809891223907471
    5. '            
' → logprob: -7.059891223907471
    6. '               ' → logprob: -7.059891223907471
    7. '<|end|>' → logprob: -7.309891223907471
    8. ')
' → logprob: -7.559891223907471
    9. '       ' → logprob: -7.684891223907471
    10. ' ' → logprob: -8.184891700744629

Token 317: ' cross' (ID: 8088)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19464124739170074
    2. ' if' → logprob: -2.069641351699829
    3. ' cross' → logprob: -3.819641351699829
    4. 'if' → logprob: -4.06964111328125
    5. 'cross' (adapté à ' cross') → logprob: -4.69464111328125
    6. '       ' → logprob: -7.19464111328125
    7. '<|end|>' → logprob: -7.44464111328125
    8. '               ' → logprob: -8.06964111328125
    9. 'continue' → logprob: -8.81964111328125
    10. '   ' → logprob: -9.56964111328125

Token 318: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -3.047134305234067e-05
    2. 'points' → logprob: -10.500030517578125
    3. '_' → logprob: -14.625030517578125
    4. 'Points' → logprob: -14.750030517578125
    5. '_positions' → logprob: -14.750030517578125
    6. '_point' → logprob: -15.125030517578125
    7. ')_' → logprob: -15.625030517578125
    8. '_POINTS' → logprob: -15.750030517578125
    9. '_q' → logprob: -15.875030517578125
    10. ' points' → logprob: -16.125030517578125

Token 319: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.018251318484544754
    2. '.' → logprob: -4.018251419067383
    3. ' .' → logprob: -9.893251419067383
    4. '.app' → logprob: -10.893251419067383
    5. '.extend' → logprob: -11.018251419067383
    6. '.ap' → logprob: -11.268251419067383
    7. '.add' → logprob: -13.518251419067383
    8. '.setdefault' → logprob: -14.268251419067383
    9. '.push' → logprob: -14.893251419067383
    10. '+.' → logprob: -16.018251419067383

Token 320: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.006551951635628939
    2. '(k' → logprob: -5.881551742553711
    3. '(' → logprob: -6.131551742553711
    4. '(t' → logprob: -6.506551742553711
    5. '(((' → logprob: -10.256551742553711
    6. '(p' → logprob: -10.506551742553711
    7. '(b' → logprob: -13.006551742553711
    8. '(F' → logprob: -13.006551742553711
    9. '(q' → logprob: -13.131551742553711
    10. '(
' → logprob: -14.131551742553711

Token 321: 't' (ID: 83)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.14541958272457123
    2. 't' → logprob: -2.2704195976257324
    3. 'float' → logprob: -3.6454195976257324
    4. ' k' → logprob: -6.270419597625732
    5. 'p' → logprob: -6.520419597625732
    6. ' t' → logprob: -7.145419597625732
    7. ' float' → logprob: -7.145419597625732
    8. '(k' → logprob: -8.645419120788574
    9. 'b' → logprob: -8.770419120788574
    10. 'Fraction' → logprob: -9.270419120788574

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041982904076576233
    2. ')' → logprob: -8.250419616699219
    3. '<|end|>' → logprob: -9.625419616699219
    4. ',
' → logprob: -10.625419616699219
    5. ',)' → logprob: -10.625419616699219
    6. ' ,' → logprob: -11.250419616699219
    7. ',k' → logprob: -11.375419616699219
    8. ',p' → logprob: -12.125419616699219
    9. ',x' → logprob: -13.250419616699219
    10. '<|end|>' → logprob: -13.375419616699219

Token 323: ' i' (ID: 575)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08384602516889572
    2. 'q' → logprob: -4.208846092224121
    3. 'qp' → logprob: -4.458846092224121
    4. 'i' → logprob: -4.708846092224121
    5. '(p' → logprob: -4.708846092224121
    6. 'A' → logprob: -4.708846092224121
    7. '(q' → logprob: -5.083846092224121
    8. ' p' → logprob: -5.458846092224121
    9. 'k' → logprob: -5.958846092224121
    10. 'b' → logprob: -5.958846092224121

Token 324: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12757207453250885
    2. ',' → logprob: -2.1275720596313477
    3. ')' → logprob: -8.002572059631348
    4. ' ))' → logprob: -8.877572059631348
    5. '))
' → logprob: -9.877572059631348
    6. '+' → logprob: -10.127572059631348
    7. '       ' → logprob: -10.502572059631348
    8. ',
' → logprob: -10.877572059631348
    9. ' ,' → logprob: -11.877572059631348
    10. '   ' → logprob: -12.252572059631348

Token 325: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3609153628349304
    2. 'p' → logprob: -1.2359154224395752
    3. 'Fraction' → logprob: -5.235915184020996
    4. 'q' → logprob: -6.485915184020996
    5. 'float' → logprob: -7.235915184020996
    6. 'b' → logprob: -7.235915184020996
    7. 'qp' → logprob: -7.485915184020996
    8. '1' → logprob: -7.735915184020996
    9. 'None' → logprob: -7.735915184020996
    10. '0' → logprob: -7.985915184020996

Token 326: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018298253417015076
    2. ')' → logprob: -4.018298149108887
    3. '))
' → logprob: -9.393298149108887
    4. ' ))' → logprob: -10.143298149108887
    5. ',' → logprob: -11.268298149108887
    6. ')
' → logprob: -12.393298149108887
    7. ' )' → logprob: -12.768298149108887
    8. ')))' → logprob: -12.768298149108887
    9. '))

' → logprob: -13.768298149108887
    10. '),' → logprob: -14.643298149108887

Token 327: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21558143198490143
    2. ' ' → logprob: -2.0905814170837402
    3. ' )' → logprob: -3.5905814170837402
    4. '<|end|>' → logprob: -3.8405814170837402
    5. ',' → logprob: -4.34058141708374
    6. ']' → logprob: -6.59058141708374
    7. '    ' → logprob: -6.96558141708374
    8. ' ]' → logprob: -6.96558141708374
    9. ' 
' → logprob: -7.09058141708374
    10. '       ' → logprob: -7.34058141708374

Token 328: ' cross' (ID: 8088)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8504523634910583
    2. '.sort' → logprob: -1.4754524230957031
    3. ')' → logprob: -1.7254524230957031
    4. '   ' → logprob: -3.100452423095703
    5. ' sort' → logprob: -3.475452423095703
    6. 'sort' → logprob: -3.600452423095703
    7. '    
' → logprob: -3.725452423095703
    8. ' 
' → logprob: -5.100452423095703
    9. '       ' → logprob: -5.225452423095703
    10. ']' → logprob: -5.600452423095703

Token 329: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.00014323067443910986
    2. '_' → logprob: -9.000143051147461
    3. '_positions' → logprob: -11.375143051147461
    4. '_pts' → logprob: -13.375143051147461
    5. '_POINTS' → logprob: -13.500143051147461
    6. '```' → logprob: -14.000143051147461
    7. ' _' → logprob: -14.250143051147461
    8. '_tokens' → logprob: -14.500143051147461
    9. 'Points' → logprob: -14.625143051147461
    10. '_targets' → logprob: -15.000143051147461

Token 330: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0011722482740879059
    2. '.' → logprob: -6.751172065734863
    3. ' .' → logprob: -13.501172065734863
    4. '=' → logprob: -15.501172065734863
    5. 'sort' → logprob: -15.501172065734863
    6. '.append' → logprob: -16.25117301940918
    7. ' =' → logprob: -17.87617301940918
    8. '	sort' → logprob: -17.87617301940918
    9. '.reverse' → logprob: -18.00117301940918
    10. ' sort' → logprob: -18.00117301940918

Token 331: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0028269849717617035
    2. '(' → logprob: -6.252827167510986
    3. '(reverse' → logprob: -7.627827167510986
    4. '()
' → logprob: -8.627826690673828
    5. '(key' → logprob: -8.752826690673828
    6. '(
' → logprob: -10.127826690673828
    7. '(lambda' → logprob: -11.502826690673828
    8. '<|end|>' → logprob: -12.627826690673828
    9. ')' → logprob: -12.752826690673828
    10. '();' → logprob: -13.127826690673828

Token 332: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7504661083221436
    2. ',' → logprob: -1.7504661083221436
    3. ':' → logprob: -1.8754661083221436
    4. '   ' → logprob: -2.0004661083221436
    5. '<|end|>' → logprob: -2.0004661083221436
    6. '
' → logprob: -2.5004661083221436
    7. '[' → logprob: -2.6254661083221436
    8. ' ' → logprob: -4.000466346740723
    9. ',
' → logprob: -4.875466346740723
    10. '[
' → logprob: -5.000466346740723

Token 333: ' _,' (ID: 18042)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.5402311086654663
    2. 'result' → logprob: -1.6652311086654663
    3. 'if' → logprob: -2.165231227874756
    4. ' res' → logprob: -2.415231227874756
    5. ' if' → logprob: -3.165231227874756
    6. 'inside' → logprob: -3.165231227874756
    7. 'cut' → logprob: -3.290231227874756
    8. 'ret' → logprob: -3.915231227874756
    9. 'answer' → logprob: -4.290231227874756
    10. 's' → logprob: -4.415231227874756

Token 334: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16808202862739563
    2. ' i' → logprob: -1.9180819988250732
    3. '_,' → logprob: -5.793082237243652
    4. 'idx' → logprob: -6.043082237243652
    5. ' idx' → logprob: -6.918082237243652
    6. 'index' → logprob: -8.293082237243652
    7. '_' → logprob: -8.918082237243652
    8. '_i' → logprob: -9.043082237243652
    9. ' ' → logprob: -9.168082237243652
    10. ' _,' → logprob: -9.168082237243652

Token 335: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005454073543660343
    2. '_,' → logprob: -8.250545501708984
    3. ' ,' → logprob: -8.250545501708984
    4. ',i' → logprob: -11.500545501708984
    5. '=' → logprob: -12.500545501708984
    6. '__,' → logprob: -13.500545501708984
    7. '<|end|>' → logprob: -13.750545501708984
    8. ',j' → logprob: -14.375545501708984
    9. '1' → logprob: -14.500545501708984
    10. '...,' → logprob: -14.750545501708984

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004989399458281696
    2. '=' → logprob: -8.37549877166748
    3. ' ,' → logprob: -8.37549877166748
    4. ',i' → logprob: -10.87549877166748
    5. ' =' → logprob: -11.25049877166748
    6. '_,' → logprob: -12.87549877166748
    7. '<|end|>' → logprob: -13.37549877166748
    8. ',
' → logprob: -15.50049877166748
    9. ',j' → logprob: -15.50049877166748
    10. ' ' → logprob: -15.50049877166748

Token 337: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4289233088493347
    2. 'k' → logprob: -1.0539233684539795
    3. ' i' → logprob: -9.178923606872559
    4. 'i' → logprob: -10.053923606872559
    5. ' _' → logprob: -10.553923606872559
    6. ' ' → logprob: -10.928923606872559
    7. '_' → logprob: -10.928923606872559
    8. '_k' → logprob: -11.303923606872559
    9. '	k' → logprob: -14.303923606872559
    10. '  ' → logprob: -15.366423606872559

Token 338: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11044822633266449
    2. '1' → logprob: -2.485448122024536
    3. ' =' → logprob: -3.860448122024536
    4. '<|end|>' → logprob: -9.235447883605957
    5. ' ' → logprob: -9.985447883605957
    6. ',' → logprob: -10.485447883605957
    7. '=
' → logprob: -10.860447883605957
    8. '<|end|>' → logprob: -12.110447883605957
    9. '_' → logprob: -12.485447883605957
    10. '```' → logprob: -12.985447883605957

Token 339: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6158663034439087
    2. '=' → logprob: -0.8658663034439087
    3. ',' → logprob: -3.240866184234619
    4. ' ,' → logprob: -12.740866661071777
    5. ' ' → logprob: -13.240866661071777
    6. ',k' → logprob: -13.365866661071777
    7. '   ' → logprob: -13.615866661071777
    8. ',_' → logprob: -14.740866661071777
    9. '=k' → logprob: -14.740866661071777
    10. ')' → logprob: -14.990866661071777

Token 340: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.07889056205749512
    2. ' cross' → logprob: -2.578890562057495
    3. ' ' → logprob: -15.328890800476074
    4. '   ' → logprob: -15.328890800476074
    5. '_cross' → logprob: -15.703890800476074
    6. '
' → logprob: -16.328889846801758
    7. '  ' → logprob: -16.703889846801758
    8. 'c' → logprob: -17.203889846801758
    9. '.cross' → logprob: -17.328889846801758
    10. 'Cross' → logprob: -17.578889846801758

Token 341: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -2.2246291337069124e-05
    2. 'points' → logprob: -11.250021934509277
    3. '_' → logprob: -12.625021934509277
    4. 'Points' → logprob: -12.875021934509277
    5. '_POINTS' → logprob: -13.625021934509277
    6. '_tokens' → logprob: -14.250021934509277
    7. '_p' → logprob: -14.375021934509277
    8. ' points' → logprob: -15.125021934509277
    9. '_positions' → logprob: -15.375021934509277
    10. '_point' → logprob: -15.875021934509277

Token 342: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07260439544916153
    2. '0' → logprob: -2.6976044178009033
    3. '<|end|>' → logprob: -6.947604179382324
    4. '.pop' → logprob: -7.947604179382324
    5. '[-' → logprob: -8.072604179382324
    6. 'pop' → logprob: -8.322604179382324
    7. '1' → logprob: -8.572604179382324
    8. ' ' → logprob: -8.572604179382324
    9. '
' → logprob: -8.822604179382324
    10. '   ' → logprob: -9.697604179382324

Token 343: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.368984107510187e-05
    2. ' ' → logprob: -10.875033378601074
    3. '1' → logprob: -12.000033378601074
    4. '-' → logprob: -12.250033378601074
    5. '[' → logprob: -13.625033378601074
    6. '...' → logprob: -14.750033378601074
    7. '```' → logprob: -14.812533378601074
    8. '(' → logprob: -15.000033378601074
    9. '
' → logprob: -15.625033378601074
    10. ':' → logprob: -15.625033378601074

Token 344: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07749124616384506
    2. ',' → logprob: -3.327491283416748
    3. ')' → logprob: -3.452491283416748
    4. '<|end|>' → logprob: -5.077491283416748
    5. '],' → logprob: -7.827491283416748
    6. ']
' → logprob: -9.20249080657959
    7. '<|end|>' → logprob: -9.82749080657959
    8. ' ]' → logprob: -9.82749080657959
    9. '}' → logprob: -10.20249080657959
    10. ')]' → logprob: -10.70249080657959

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8528947234153748
    2. '
' → logprob: -1.1028947830200195
    3. ',' → logprob: -2.1028947830200195
    4. ' i' → logprob: -3.2278947830200195
    5. '_,' → logprob: -3.6028947830200195
    6. 'i' → logprob: -4.1028947830200195
    7. '    
' → logprob: -4.2278947830200195
    8. 't' → logprob: -6.3528947830200195
    9. ',
' → logprob: -6.4778947830200195
    10. 'j' → logprob: -6.6028947830200195

Token 346: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' (adapté à ' _,') → logprob: -0.0001370320824207738
    2. ',' → logprob: -9.625137329101562
    3. ' _,' → logprob: -10.375137329101562
    4. 'i' → logprob: -11.000137329101562
    5. '   ' → logprob: -11.500137329101562
    6. 'if' → logprob: -12.750137329101562
    7. '__,' → logprob: -12.750137329101562
    8. 'k' → logprob: -13.250137329101562
    9. '_' → logprob: -13.625137329101562
    10. 't' → logprob: -14.000137329101562

Token 347: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10021507740020752
    2. 'i' → logprob: -2.350214958190918
    3. ' ' → logprob: -12.475214958190918
    4. '	i' → logprob: -13.100214958190918
    5. 'j' → logprob: -13.725214958190918
    6. ' j' → logprob: -14.850214958190918
    7. '<|end|>' → logprob: -14.850214958190918
    8. '   ' → logprob: -15.912714958190918
    9. '_i' → logprob: -16.037715911865234
    10. '    ' → logprob: -16.225215911865234

Token 348: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001375089050270617
    2. ',' → logprob: -9.125137329101562
    3. '0' → logprob: -11.250137329101562
    4. '1' → logprob: -11.500137329101562
    5. ' ' → logprob: -12.500137329101562
    6. '3' → logprob: -13.625137329101562
    7. ' ,' → logprob: -15.750137329101562
    8. '```' → logprob: -16.125137329101562
    9. '_,' → logprob: -16.375137329101562
    10. '=' → logprob: -16.875137329101562

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010199354437645525
    2. ' ,' → logprob: -9.250102043151855
    3. '<|end|>' → logprob: -12.500102043151855
    4. ',
' → logprob: -14.750102043151855
    5. ' ' → logprob: -14.750102043151855
    6. '=' → logprob: -15.000102043151855
    7. ',i' → logprob: -15.250102043151855
    8. '_,' → logprob: -15.750102043151855
    9. '‌,' → logprob: -15.875102043151855
    10. '<|end|>' → logprob: -16.25010108947754

Token 350: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6931514739990234
    2. ' k' → logprob: -0.6931514739990234
    3. ' ' → logprob: -13.068151473999023
    4. '   ' → logprob: -13.943151473999023
    5. '	k' → logprob: -14.318151473999023
    6. '    ' → logprob: -14.943151473999023
    7. '  ' → logprob: -15.318151473999023
    8. ' к' → logprob: -16.568151473999023
    9. 'i' → logprob: -17.443151473999023
    10. '     ' → logprob: -17.943151473999023

Token 351: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.250006675720215
    3. '<|end|>' → logprob: -14.625006675720215
    4. ',' → logprob: -15.125006675720215
    5. '=' → logprob: -15.250006675720215
    6. ' =' → logprob: -15.750006675720215
    7. '<|end|>' → logprob: -16.5000057220459
    8. '1' → logprob: -16.8750057220459
    9. '   ' → logprob: -17.0000057220459
    10. '  ' → logprob: -17.0000057220459

Token 352: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2521962821483612
    2. ' =' → logprob: -1.5021963119506836
    3. ',' → logprob: -8.252196311950684
    4. '   ' → logprob: -12.252196311950684
    5. ' ' → logprob: -13.627196311950684
    6. '  ' → logprob: -15.752196311950684
    7. ' ,' → logprob: -16.627195358276367
    8. '    ' → logprob: -16.752195358276367
    9. ')' → logprob: -16.877195358276367
    10. ',c' → logprob: -17.877195358276367

Token 353: ' cross' (ID: 8088)
  Prédit: ' cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.5759599208831787
    2. 'cross' → logprob: -0.8259599208831787
    3. '   ' → logprob: -11.075960159301758
    4. ' ' → logprob: -12.950960159301758
    5. '_cross' → logprob: -13.450960159301758
    6. '.cross' → logprob: -14.825960159301758
    7. '  ' → logprob: -15.075960159301758
    8. '    ' → logprob: -15.450960159301758
    9. '       ' → logprob: -16.450960159301758
    10. 'c' → logprob: -16.575960159301758

Token 354: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.001042574760504067
    2. 'points' → logprob: -6.876042366027832
    3. 'cross' → logprob: -11.876042366027832
    4. 'Points' → logprob: -13.751042366027832
    5. '_POINTS' → logprob: -13.751042366027832
    6. '1' → logprob: -14.876042366027832
    7. ' points' → logprob: -16.00104331970215
    8. 'point' → logprob: -16.25104331970215
    9. '	points' → logprob: -17.12604331970215
    10. 'oints' → logprob: -17.25104331970215

Token 355: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.39004087448120117
    2. '[' → logprob: -1.1400408744812012
    3. '-' → logprob: -5.890040874481201
    4. '1' → logprob: -7.890040874481201
    5. '```' → logprob: -11.39004135131836
    6. '0' → logprob: -12.14004135131836
    7. '[len' → logprob: -12.76504135131836
    8. ' ' → logprob: -13.14004135131836
    9. '[
' → logprob: -14.64004135131836
    10. '   ' → logprob: -14.76504135131836

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4706137478351593
    2. '-' → logprob: -1.095613718032837
    3. '0' → logprob: -3.220613718032837
    4. 'len' → logprob: -7.720613956451416
    5. 'cross' → logprob: -7.845613956451416
    6. ' -' → logprob: -8.845613479614258
    7. ' ' → logprob: -10.095613479614258
    8. '[-' → logprob: -11.095613479614258
    9. '...' → logprob: -11.345613479614258
    10. ' cross' → logprob: -11.470613479614258

Token 357: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11782466620206833
    2. '<|end|>' → logprob: -2.2428245544433594
    3. ')' → logprob: -6.617824554443359
    4. '   ' → logprob: -6.867824554443359
    5. '<|end|>' → logprob: -7.242824554443359
    6. '
' → logprob: -7.242824554443359
    7. ' ]' → logprob: -7.992824554443359
    8. ']
' → logprob: -8.61782455444336
    9. '}' → logprob: -8.86782455444336
    10. ' ' → logprob: -9.11782455444336

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30140581727027893
    2. '
' → logprob: -1.8014057874679565
    3. '    
' → logprob: -4.176405906677246
    4. ' p' → logprob: -4.426405906677246
    5. ' if' → logprob: -4.926405906677246
    6. 'result' → logprob: -5.301405906677246
    7. '#' → logprob: -5.551405906677246
    8. ' s' → logprob: -5.676405906677246
    9. ' area' → logprob: -5.676405906677246
    10. 'p' → logprob: -5.801405906677246

Token 359: ' x' (ID: 1215)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3318925201892853
    2. 'p' → logprob: -2.831892490386963
    3. 'v' → logprob: -2.956892490386963
    4. 'r' → logprob: -3.706892490386963
    5. 'result' → logprob: -3.706892490386963
    6. 'if' → logprob: -3.831892490386963
    7. 's' → logprob: -4.081892490386963
    8. 'def' → logprob: -4.331892490386963
    9. 'R' → logprob: -4.581892490386963
    10. 'cut' → logprob: -4.581892490386963

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.047661129385232925
    2. ' =' → logprob: -3.172661066055298
    3. '=' → logprob: -6.047661304473877
    4. '0' → logprob: -6.672661304473877
    5. ',' → logprob: -7.922661304473877
    6. 's' → logprob: -8.047660827636719
    7. '_points' → logprob: -10.047660827636719
    8. 'a' → logprob: -10.672660827636719
    9. '_' → logprob: -10.672660827636719
    10. 'p' → logprob: -10.922660827636719

Token 361: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.680472195148468
    2. ',' → logprob: -1.0554721355438232
    3. '=' → logprob: -1.9304721355438232
    4. ',y' → logprob: -8.555472373962402
    5. ' ,' → logprob: -9.680472373962402
    6. '1' → logprob: -10.180472373962402
    7. 'y' → logprob: -10.180472373962402
    8. ')' → logprob: -10.305472373962402
    9. 's' → logprob: -10.680472373962402
    10. '0' → logprob: -11.555472373962402

Token 362: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.03738943487405777
    2. 'p' → logprob: -4.037389278411865
    3. 'i' → logprob: -5.662389278411865
    4. ' P' → logprob: -5.662389278411865
    5. 'A' → logprob: -5.787389278411865
    6. '(' → logprob: -6.037389278411865
    7. '(P' → logprob: -7.037389278411865
    8. 'B' → logprob: -7.037389278411865
    9. 'Vec' → logprob: -7.162389278411865
    10. 'inter' → logprob: -7.287389278411865

Token 363: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. 'i' → logprob: -12.625007629394531
    3. '[' → logprob: -12.875007629394531
    4. '[x' → logprob: -13.750007629394531
    5. '[
' → logprob: -17.12500762939453
    6. '[j' → logprob: -17.62500762939453
    7. 'x' → logprob: -17.75000762939453
    8. '[I' → logprob: -17.87500762939453
    9. '[]' → logprob: -18.25000762939453
    10. '[k' → logprob: -18.37500762939453

Token 364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019480334594845772
    2. '[' → logprob: -6.87694787979126
    3. 'i' → logprob: -8.251948356628418
    4. 'x' → logprob: -8.626948356628418
    5. ']' → logprob: -8.751948356628418
    6. '][' → logprob: -9.001948356628418
    7. '2' → logprob: -10.501948356628418
    8. '(' → logprob: -10.626948356628418
    9. '_' → logprob: -10.751948356628418
    10. '[i' → logprob: -11.001948356628418

Token 365: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07917607575654984
    2. ' +' → logprob: -2.579176187515259
    3. ']' → logprob: -9.45417594909668
    4. '+(' → logprob: -9.82917594909668
    5. '*' → logprob: -9.95417594909668
    6. '(' → logprob: -10.32917594909668
    7. ')' → logprob: -10.45417594909668
    8. 'x' → logprob: -12.57917594909668
    9. '.interpolate' → logprob: -12.57917594909668
    10. ' plus' → logprob: -12.82917594909668

Token 366: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007642117794603109
    2. ' +' → logprob: -4.8826422691345215
    3. '+(' → logprob: -10.632641792297363
    4. '+k' → logprob: -12.882641792297363
    5. '(' → logprob: -13.382641792297363
    6. 'x' → logprob: -13.757641792297363
    7. '+x' → logprob: -13.757641792297363
    8. '.interpolate' → logprob: -14.132641792297363
    9. '*' → logprob: -14.257641792297363
    10. '   ' → logprob: -14.382641792297363

Token 367: ' k' (ID: 372)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.3244578540325165
    2. '(B' → logprob: -1.6994578838348389
    3. '(P' → logprob: -2.824457883834839
    4. '(b' → logprob: -4.69945764541626
    5. '(k' → logprob: -4.69945764541626
    6. 'qp' → logprob: -5.19945764541626
    7. '(Q' → logprob: -6.19945764541626
    8. '(' → logprob: -6.19945764541626
    9. ' (' → logprob: -6.57445764541626
    10. 'q' → logprob: -7.19945764541626

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01465936191380024
    2. 'qp' → logprob: -4.264659404754639
    3. 'q' → logprob: -8.01465892791748
    4. ' qp' → logprob: -10.01465892791748
    5. '(q' → logprob: -10.01465892791748
    6. '(' → logprob: -11.26465892791748
    7. '`' → logprob: -11.38965892791748
    8. 'QP' → logprob: -12.01465892791748
    9. '_q' → logprob: -12.13965892791748
    10. '```' → logprob: -12.13965892791748

Token 369: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20239996910095215
    2. ' *' → logprob: -1.7023999691009521
    3. '*q' → logprob: -6.952400207519531
    4. '*(' → logprob: -10.452400207519531
    5. 'q' → logprob: -15.202400207519531
    6. '*p' → logprob: -15.827400207519531
    7. '*object' → logprob: -15.827400207519531
    8. '(q' → logprob: -16.20240020751953
    9. 'qp' → logprob: -16.57740020751953
    10. ' ' → logprob: -16.82740020751953

Token 370: ' (' (ID: 350)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.23399880528450012
    2. '(P' → logprob: -2.1089987754821777
    3. '(Q' → logprob: -2.9839987754821777
    4. ' (' → logprob: -3.6089987754821777
    5. '(j' → logprob: -4.983998775482178
    6. '(p' → logprob: -6.983998775482178
    7. '(' → logprob: -7.233998775482178
    8. '((' → logprob: -7.483998775482178
    9. '   ' → logprob: -9.233999252319336
    10. '(B' → logprob: -9.233999252319336

Token 371: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.03209223598241806
    2. '(P' → logprob: -4.032092094421387
    3. ' P' → logprob: -4.532092094421387
    4. ' (' → logprob: -6.157092094421387
    5. '   ' → logprob: -7.657092094421387
    6. ')' → logprob: -8.407092094421387
    7. ' ' → logprob: -9.407092094421387
    8. '(' → logprob: -9.907092094421387
    9. 'Vec' → logprob: -9.907092094421387
    10. 'Q' → logprob: -11.032092094421387

Token 372: '[(' (ID: 20542)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08875579386949539
    2. '[(' → logprob: -2.7137558460235596
    3. 'i' → logprob: -4.0887556076049805
    4. '(i' → logprob: -6.4637556076049805
    5. '[
' → logprob: -9.33875560760498
    6. '[' → logprob: -9.33875560760498
    7. '((' → logprob: -9.71375560760498
    8. ' (' → logprob: -10.83875560760498
    9. '[j' → logprob: -10.83875560760498
    10. '[((' → logprob: -11.08875560760498

Token 373: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.353008499601856e-05
    2. '(i' → logprob: -10.000093460083008
    3. ' i' → logprob: -10.375093460083008
    4. '   ' → logprob: -11.375093460083008
    5. '[i' → logprob: -12.625093460083008
    6. ' (' → logprob: -14.250093460083008
    7. ' ' → logprob: -14.875093460083008
    8. '  ' → logprob: -15.375093460083008
    9. '{i' → logprob: -15.500093460083008
    10. '	i' → logprob: -15.875093460083008

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. 'i' → logprob: -11.125019073486328
    3. '(i' → logprob: -12.625019073486328
    4. '[i' → logprob: -14.750019073486328
    5. '   ' → logprob: -15.500019073486328
    6. ' ' → logprob: -15.625019073486328
    7. '(' → logprob: -15.875019073486328
    8. '```' → logprob: -16.000019073486328
    9. ' i' → logprob: -16.500019073486328
    10. ' (' → logprob: -16.750019073486328

Token 375: ' +' (ID: 659)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0033982445020228624
    2. '(i' → logprob: -6.503398418426514
    3. ' i' → logprob: -7.628398418426514
    4. '+' → logprob: -7.753398418426514
    5. '[i' → logprob: -7.753398418426514
    6. '1' → logprob: -8.128397941589355
    7. '[' → logprob: -9.503397941589355
    8. '   ' → logprob: -10.128397941589355
    9. '(' → logprob: -10.378397941589355
    10. ' +' → logprob: -10.753397941589355

Token 376: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.125008583068848
    4. 'i' → logprob: -15.375008583068848
    5. '(i' → logprob: -19.00000762939453
    6. '  ' → logprob: -19.37500762939453
    7. '```' → logprob: -19.62500762939453
    8. '`' → logprob: -20.12500762939453
    9. '``' → logprob: -20.50000762939453
    10. '
' → logprob: -20.75000762939453

Token 377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.250003814697266
    4. '  ' → logprob: -20.250003814697266
    5. '```' → logprob: -21.000003814697266
    6. 'i' → logprob: -21.125003814697266
    7. '+' → logprob: -21.500003814697266
    8. '     ' → logprob: -21.875003814697266
    9. '
' → logprob: -22.000003814697266
    10. '-' → logprob: -22.375003814697266

Token 378: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07705307006835938
    2. 'i' → logprob: -3.4520530700683594
    3. ')%' → logprob: -4.077053070068359
    4. ')]' → logprob: -4.577053070068359
    5. ')i' → logprob: -4.702053070068359
    6. '[i' → logprob: -6.452053070068359
    7. ')])' → logprob: -6.577053070068359
    8. '1' → logprob: -6.827053070068359
    9. ']' → logprob: -7.202053070068359
    10. '(i' → logprob: -7.452053070068359

Token 379: ' %' (ID: 1851)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16044914722442627
    2. ']%' → logprob: -2.0354490280151367
    3. ')%' → logprob: -5.160449028015137
    4. '%' → logprob: -5.535449028015137
    5. '])' → logprob: -5.785449028015137
    6. ')]' → logprob: -6.035449028015137
    7. ')' → logprob: -6.160449028015137
    8. ')])' → logprob: -9.160449028015137
    9. '%i' → logprob: -9.160449028015137
    10. '])]' → logprob: -10.410449028015137

Token 380: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.8074162653647363e-05
    2. ' N' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.750018119812012
    4. ')' → logprob: -14.750018119812012
    5. 'len' → logprob: -15.875018119812012
    6. '```' → logprob: -16.250017166137695
    7. ']' → logprob: -16.750017166137695
    8. 'i' → logprob: -16.750017166137695
    9. ' ' → logprob: -16.750017166137695
    10. 'n' → logprob: -17.250017166137695

Token 381: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3870740830898285
    2. '])' → logprob: -1.1370741128921509
    3. ')]' → logprob: -9.51207447052002
    4. ']-' → logprob: -9.63707447052002
    5. ')' → logprob: -10.63707447052002
    6. ' ]' → logprob: -11.63707447052002
    7. '])
' → logprob: -11.88707447052002
    8. ' ])' → logprob: -12.13707447052002
    9. ']
' → logprob: -12.76207447052002
    10. '])

' → logprob: -13.01207447052002

Token 382: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06205451115965843
    2. '-' → logprob: -2.812054395675659
    3. ')' → logprob: -9.562054634094238
    4. ' ' → logprob: -11.437054634094238
    5. '<|end|>' → logprob: -13.687054634094238
    6. '-)' → logprob: -14.437054634094238
    7. '   ' → logprob: -14.562054634094238
    8. ' -
' → logprob: -14.812054634094238
    9. '-p' → logprob: -14.937054634094238
    10. '  ' → logprob: -15.312054634094238

Token 383: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0006284446571953595
    2. ' P' → logprob: -7.375628471374512
    3. '   ' → logprob: -13.625628471374512
    4. '	P' → logprob: -14.500628471374512
    5. ' ' → logprob: -16.500627517700195
    6. ')' → logprob: -16.500627517700195
    7. '  ' → logprob: -17.375627517700195
    8. '>P' → logprob: -17.500627517700195
    9. '_P' → logprob: -17.750627517700195
    10. '=P' → logprob: -18.500627517700195

Token 384: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007130279554985464
    2. ' i' → logprob: -7.250712871551514
    3. '[i' → logprob: -13.125713348388672
    4. '(i' → logprob: -14.750713348388672
    5. '   ' → logprob: -15.125713348388672
    6. ')i' → logprob: -16.000713348388672
    7. ' ' → logprob: -16.250713348388672
    8. '	i' → logprob: -17.250713348388672
    9. ')' → logprob: -17.375713348388672
    10. '{i' → logprob: -17.500713348388672

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '   ' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.750000953674316
    4. 'i' → logprob: -16.0
    5. ')' → logprob: -16.25
    6. '[' → logprob: -16.875
    7. '2' → logprob: -17.125
    8. '```' → logprob: -17.375
    9. '(i' → logprob: -18.375
    10. ']' → logprob: -18.4375

Token 386: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6656825866666622e-05
    2. '])' → logprob: -11.37502670288086
    3. ')
' → logprob: -12.12502670288086
    4. ' )' → logprob: -12.50002670288086
    5. '})' → logprob: -12.75002670288086
    6. '）' → logprob: -14.12502670288086
    7. '))' → logprob: -14.12502670288086
    8. '<|end|>' → logprob: -14.62502670288086
    9. ')

' → logprob: -14.87502670288086
    10. '`)' → logprob: -15.12502670288086

Token 387: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004833684302866459
    2. '   ' → logprob: -6.004833698272705
    3. ' x' → logprob: -6.129833698272705
    4. '
' → logprob: -8.879833221435547
    5. ' ' → logprob: -11.504833221435547
    6. '<|end|>' → logprob: -12.254833221435547
    7. ',' → logprob: -12.504833221435547
    8. 't' → logprob: -12.879833221435547
    9. '+' → logprob: -13.129833221435547
    10. '
' → logprob: -13.504833221435547

Token 388: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.023747354745864868
    2. ' x' → logprob: -3.773747444152832
    3. '   ' → logprob: -8.898747444152832
    4. '+
' → logprob: -9.523747444152832
    5. '
' → logprob: -10.273747444152832
    6. 'y' → logprob: -10.648747444152832
    7. 'b' → logprob: -10.898747444152832
    8. '    
' → logprob: -11.023747444152832
    9. 's' → logprob: -11.273747444152832
    10. 't' → logprob: -11.398747444152832

Token 389: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' =' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.875001907348633
    4. '=' → logprob: -16.250001907348633
    5. '_' → logprob: -16.375001907348633
    6. '```' → logprob: -16.750001907348633
    7. '
' → logprob: -17.625001907348633
    8. '２' → logprob: -17.875001907348633
    9. '₂' → logprob: -18.000001907348633
    10. '1' → logprob: -18.625001907348633

Token 390: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407740354537964
    2. '=' → logprob: -0.9740774035453796
    3. ' ' → logprob: -14.974077224731445
    4. ')' → logprob: -16.349077224731445
    5. '.' → logprob: -17.974077224731445
    6. '=}' → logprob: -18.099077224731445
    7. '<|end|>' → logprob: -18.349077224731445
    8. ' =)' → logprob: -18.724077224731445
    9. 's' → logprob: -18.974077224731445
    10. '＝' → logprob: -19.224077224731445

Token 391: ' P' (ID: 398)
  Prédit: ' P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.3135039508342743
    2. 'P' → logprob: -1.3135039806365967
    3. '   ' → logprob: -8.813504219055176
    4. ' ' → logprob: -9.438504219055176
    5. '    ' → logprob: -12.438504219055176
    6. '  ' → logprob: -12.688504219055176
    7. '	P' → logprob: -12.813504219055176
    8. ' ' → logprob: -14.063504219055176
    9. '       ' → logprob: -14.563504219055176
    10. ' cross' → logprob: -14.876004219055176

Token 392: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. '[' → logprob: -12.125006675720215
    3. 'i' → logprob: -14.625006675720215
    4. '[(' → logprob: -14.625006675720215
    5. '[x' → logprob: -16.3750057220459
    6. ' [' → logprob: -17.0000057220459
    7. '   ' → logprob: -17.7500057220459
    8. '[
' → logprob: -18.0000057220459
    9. '(i' → logprob: -18.3750057220459
    10. ' ' → logprob: -18.8750057220459

Token 393: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -18.25
    4. '(' → logprob: -18.25
    5. 'i' → logprob: -18.75
    6. '[' → logprob: -19.0
    7. '+' → logprob: -20.125
    8. '
' → logprob: -20.25
    9. '۲' → logprob: -20.375
    10. '₂' → logprob: -20.375

Token 394: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00028993739397265017
    2. '+' → logprob: -8.875289916992188
    3. ']+' → logprob: -9.250289916992188
    4. ')' → logprob: -10.375289916992188
    5. ' +' → logprob: -11.000289916992188
    6. ' ]' → logprob: -12.375289916992188
    7. '+]' → logprob: -15.000289916992188
    8. '']' → logprob: -15.125289916992188
    9. '"]' → logprob: -15.125289916992188
    10. '])' → logprob: -15.375289916992188

Token 395: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519477903842926
    2. ' +' → logprob: -1.5019477605819702
    3. '+k' → logprob: -11.126947402954102
    4. ')' → logprob: -14.251947402954102
    5. '+x' → logprob: -14.251947402954102
    6. '+
' → logprob: -14.751947402954102
    7. ' ' → logprob: -15.001947402954102
    8. '[' → logprob: -15.251947402954102
    9. '+i' → logprob: -15.251947402954102
    10. '＋' → logprob: -15.626947402954102

Token 396: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.0699397623538971
    2. 'k' → logprob: -2.6949398517608643
    3. ' ' → logprob: -13.069939613342285
    4. ' ' → logprob: -15.319939613342285
    5. '	k' → logprob: -15.444939613342285
    6. ' x' → logprob: -15.694939613342285
    7. 'x' → logprob: -16.0699405670166
    8. '(k' → logprob: -16.3199405670166
    9. '"' → logprob: -16.6949405670166
    10. ' 
' → logprob: -16.7574405670166

Token 397: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '２' → logprob: -18.375
    4. '```' → logprob: -18.625
    5. '   ' → logprob: -18.75
    6. '۲' → logprob: -18.75
    7. '₂' → logprob: -18.875
    8. '২' → logprob: -20.9375
    9. '_' → logprob: -20.9375
    10. '1' → logprob: -21.0625

Token 398: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2519310414791107
    2. '*' → logprob: -1.501931071281433
    3. '*(' → logprob: -14.001931190490723
    4. '**' → logprob: -14.751931190490723
    5. ' ' → logprob: -15.751931190490723
    6. '<|end|>' → logprob: -15.876931190490723
    7. '*object' → logprob: -15.876931190490723
    8. '*[' → logprob: -16.126930236816406
    9. '```' → logprob: -17.001930236816406
    10. '`' → logprob: -17.251930236816406

Token 399: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4742954671382904
    2. '(P' → logprob: -0.9742954969406128
    3. '(' → logprob: -8.849295616149902
    4. '((' → logprob: -10.224295616149902
    5. '(Q' → logprob: -11.099295616149902
    6. ' ((' → logprob: -12.349295616149902
    7. ' ' → logprob: -12.474295616149902
    8. '   ' → logprob: -12.974295616149902
    9. '*(' → logprob: -12.974295616149902
    10. '(T' → logprob: -13.224295616149902

Token 400: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.1144820898771286
    2. '(P' → logprob: -2.2394821643829346
    3. ' (' → logprob: -6.9894819259643555
    4. ' P' → logprob: -7.3644819259643555
    5. '   ' → logprob: -9.739481925964355
    6. ')' → logprob: -10.864481925964355
    7. '(' → logprob: -11.614481925964355
    8. '_P' → logprob: -13.114481925964355
    9. ' ' → logprob: -13.114481925964355
    10. '[P' → logprob: -13.239481925964355

Token 401: '[(' (ID: 20542)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6481022834777832
    2. ' *' → logprob: -0.7731022834777832
    3. '[(' → logprob: -4.273102283477783
    4. '   ' → logprob: -7.523102283477783
    5. '[i' → logprob: -7.898102283477783
    6. '[' → logprob: -8.398101806640625
    7. ')' → logprob: -9.523101806640625
    8. ' ' → logprob: -9.898101806640625
    9. '%' → logprob: -9.898101806640625
    10. '*(' → logprob: -10.148101806640625

Token 402: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008638204075396061
    2. '(i' → logprob: -4.758638381958008
    3. '   ' → logprob: -11.133638381958008
    4. ' i' → logprob: -12.258638381958008
    5. ' (' → logprob: -13.258638381958008
    6. '(' → logprob: -14.258638381958008
    7. '{i' → logprob: -15.133638381958008
    8. '
' → logprob: -15.258638381958008
    9. '[i' → logprob: -15.383638381958008
    10. '_i' → logprob: -15.508638381958008

Token 403: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4736459888808895e-05
    2. '1' → logprob: -11.375014305114746
    3. ' ' → logprob: -13.250014305114746
    4. '   ' → logprob: -14.375014305114746
    5. '+' → logprob: -15.250014305114746
    6. '(' → logprob: -15.875014305114746
    7. '```' → logprob: -15.875014305114746
    8. '
' → logprob: -16.750015258789062
    9. ' +' → logprob: -17.062515258789062
    10. 'i' → logprob: -17.187515258789062

Token 404: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06594044715166092
    2. ' +' → logprob: -2.8159403800964355
    3. '1' → logprob: -6.3159403800964355
    4. ')' → logprob: -6.8159403800964355
    5. '   ' → logprob: -7.0659403800964355
    6. ' ' → logprob: -9.190940856933594
    7. ')]' → logprob: -10.440940856933594
    8. ']' → logprob: -10.690940856933594
    9. '%' → logprob: -11.065940856933594
    10. '  ' → logprob: -11.940940856933594

Token 405: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000181372175575234
    2. ' ' → logprob: -8.625181198120117
    3. '   ' → logprob: -13.625181198120117
    4. ')' → logprob: -15.250181198120117
    5. '  ' → logprob: -16.375181198120117
    6. '```' → logprob: -16.375181198120117
    7. '...' → logprob: -16.937681198120117
    8. '0' → logprob: -17.125181198120117
    9. '     ' → logprob: -17.500181198120117
    10. '    ' → logprob: -17.750181198120117

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.125011444091797
    4. '
' → logprob: -15.250011444091797
    5. '(' → logprob: -16.000011444091797
    6. ')' → logprob: -16.375011444091797
    7. '+' → logprob: -16.500011444091797
    8. '  ' → logprob: -16.625011444091797
    9. '0' → logprob: -16.750011444091797
    10. '-' → logprob: -17.062511444091797

Token 407: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001359997782856226
    2. ')%' → logprob: -6.626359939575195
    3. '   ' → logprob: -11.376359939575195
    4. '%' → logprob: -12.126359939575195
    5. ']' → logprob: -12.376359939575195
    6. '1' → logprob: -12.876359939575195
    7. 'i' → logprob: -13.376359939575195
    8. ')]' → logprob: -13.376359939575195
    9. ' )' → logprob: -13.751359939575195
    10. ' ' → logprob: -13.876359939575195

Token 408: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2633019685745239
    2. ')' → logprob: -1.763301968574524
    3. ')%' → logprob: -3.2633018493652344
    4. ' %' → logprob: -3.8883018493652344
    5. '%i' → logprob: -7.638301849365234
    6. ']' → logprob: -7.888301849365234
    7. ']%' → logprob: -8.888301849365234
    8. ')]' → logprob: -10.388301849365234
    9. '%d' → logprob: -10.513301849365234
    10. '%s' → logprob: -10.513301849365234

Token 409: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006761436816304922
    2. ' N' → logprob: -5.00676155090332
    3. 'i' → logprob: -10.50676155090332
    4. ' ' → logprob: -11.75676155090332
    5. '1' → logprob: -12.63176155090332
    6. '%' → logprob: -13.00676155090332
    7. ' i' → logprob: -13.13176155090332
    8. '_N' → logprob: -14.25676155090332
    9. ')' → logprob: -14.63176155090332
    10. '   ' → logprob: -14.75676155090332

Token 410: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001366744691040367
    2. ')' → logprob: -9.750136375427246
    3. '])' → logprob: -10.250136375427246
    4. ')]' → logprob: -10.625136375427246
    5. ' ]' → logprob: -11.750136375427246
    6. ']%' → logprob: -12.000136375427246
    7. ']-' → logprob: -13.500136375427246
    8. '%' → logprob: -13.500136375427246
    9. ']
' → logprob: -14.375136375427246
    10. '0' → logprob: -15.375136375427246

Token 411: ' -' (ID: 533)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4185424745082855
    2. ']' → logprob: -1.168542504310608
    3. ')' → logprob: -4.043542385101318
    4. ' %' → logprob: -5.293542385101318
    5. ' ' → logprob: -6.043542385101318
    6. '-' → logprob: -6.168542385101318
    7. ' -' → logprob: -6.168542385101318
    8. ']%' → logprob: -7.668542385101318
    9. '%i' → logprob: -7.918542385101318
    10. '  ' → logprob: -8.543542861938477

Token 412: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0028071331325918436
    2. ' P' → logprob: -5.877807140350342
    3. ' ' → logprob: -13.752806663513184
    4. '   ' → logprob: -14.002806663513184
    5. ')' → logprob: -15.502806663513184
    6. '  ' → logprob: -16.0028076171875
    7. 'x' → logprob: -16.8778076171875
    8. '	P' → logprob: -17.3778076171875
    9. '_P' → logprob: -18.3778076171875
    10. ' x' → logprob: -18.5028076171875

Token 413: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0052464487962424755
    2. '[i' → logprob: -5.255246639251709
    3. ' i' → logprob: -11.63024616241455
    4. '(i' → logprob: -13.50524616241455
    5. '{i' → logprob: -13.75524616241455
    6. ')' → logprob: -14.50524616241455
    7. '2' → logprob: -15.38024616241455
    8. '   ' → logprob: -15.38024616241455
    9. 'x' → logprob: -15.75524616241455
    10. ')i' → logprob: -16.005247116088867

Token 414: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.52919222577475e-05
    2. '1' → logprob: -9.500075340270996
    3. '(' → logprob: -15.250075340270996
    4. ' ' → logprob: -15.750075340270996
    5. '])' → logprob: -17.50007438659668
    6. '[' → logprob: -17.50007438659668
    7. '```' → logprob: -17.50007438659668
    8. '   ' → logprob: -18.12507438659668
    9. 'i' → logprob: -18.43757438659668
    10. ']' → logprob: -18.50007438659668

Token 415: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16031815111637115
    2. '])' → logprob: -1.91031813621521
    3. ']' → logprob: -10.160318374633789
    4. ')]' → logprob: -11.160318374633789
    5. '）' → logprob: -11.285318374633789
    6. ' )' → logprob: -11.535318374633789
    7. ')
' → logprob: -11.910318374633789
    8. ')])' → logprob: -12.660318374633789
    9. '))' → logprob: -13.160318374633789
    10. '`)' → logprob: -13.285318374633789

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023955097422003746
    2. '    
' → logprob: -6.8773956298828125
    3. 'result' → logprob: -7.2523956298828125
    4. 'v' → logprob: -9.127395629882812
    5. '
' → logprob: -9.127395629882812
    6. 's' → logprob: -9.502395629882812
    7. 'segment' → logprob: -9.752395629882812
    8. 'idx' → logprob: -10.127395629882812
    9. 'p' → logprob: -10.502395629882812
    10. 'res' → logprob: -10.627395629882812

Token 417: ' Q' (ID: 1486)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1171621084213257
    2. 'res' → logprob: -1.4921621084213257
    3. 'v' → logprob: -2.3671622276306152
    4. 's' → logprob: -2.7421622276306152
    5. 'result' → logprob: -2.7421622276306152
    6. 'R' → logprob: -3.4921622276306152
    7. 'segment' → logprob: -3.6171622276306152
    8. 'r' → logprob: -3.8671622276306152
    9. 'S' → logprob: -3.8671622276306152
    10. 'C' → logprob: -3.9921622276306152

Token 418: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04989558085799217
    2. '=' → logprob: -3.1748955249786377
    3. '1' → logprob: -5.299895763397217
    4. '.' → logprob: -7.674895763397217
    5. ',' → logprob: -8.549895286560059
    6. ' +=' → logprob: -8.924895286560059
    7. ' ' → logprob: -8.924895286560059
    8. '<|end|>' → logprob: -9.174895286560059
    9. 'u' → logprob: -9.299895286560059
    10. '.append' → logprob: -9.299895286560059

Token 419: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7389211654663086
    2. '[x' → logprob: -1.6139211654663086
    3. '[B' → logprob: -1.9889211654663086
    4. '[b' → logprob: -2.7389211654663086
    5. ' [' → logprob: -2.9889211654663086
    6. '[P' → logprob: -4.113921165466309
    7. '[A' → logprob: -4.613921165466309
    8. '[i' → logprob: -4.738921165466309
    9. '[]' → logprob: -4.988921165466309
    10. '[]
' → logprob: -5.488921165466309

Token 420: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03555566444993019
    2. ']' → logprob: -3.785555601119995
    3. 'Vec' → logprob: -4.910555839538574
    4. 'A' → logprob: -6.285555839538574
    5. 'B' → logprob: -6.785555839538574
    6. 'p' → logprob: -7.035555839538574
    7. 'b' → logprob: -7.785555839538574
    8. '])' → logprob: -8.785555839538574
    9. '(x' → logprob: -9.785555839538574
    10. ' x' → logprob: -10.035555839538574

Token 421: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5235899686813354
    2. '2' → logprob: -0.8985899686813354
    3. ']' → logprob: -7.773590087890625
    4. 'x' → logprob: -10.398590087890625
    5. ' x' → logprob: -11.898590087890625
    6. ' for' → logprob: -13.836090087890625
    7. '#' → logprob: -13.898590087890625
    8. ',' → logprob: -14.086090087890625
    9. ' ]' → logprob: -14.273590087890625
    10. '(x' → logprob: -14.398590087890625

Token 422: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20367202162742615
    2. ',' → logprob: -1.7036720514297485
    3. ']+' → logprob: -6.953671932220459
    4. ',x' → logprob: -7.328671932220459
    5. 'x' → logprob: -8.328672409057617
    6. ']
' → logprob: -9.203672409057617
    7. ' ]' → logprob: -9.703672409057617
    8. ',
' → logprob: -10.078672409057617
    9. ' ,' → logprob: -10.578672409057617
    10. '   ' → logprob: -10.953672409057617

Token 423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14021660387516022
    2. '<|end|>' → logprob: -2.890216588973999
    3. '```' → logprob: -4.265216827392578
    4. ']' → logprob: -4.515216827392578
    5. ' for' → logprob: -4.515216827392578
    6. ',' → logprob: -4.765216827392578
    7. 'Q' → logprob: -5.390216827392578
    8. '
' → logprob: -5.390216827392578
    9. 'x' → logprob: -5.515216827392578
    10. 'for' → logprob: -5.890216827392578

Token 424: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.852540910243988
    2. '   ' → logprob: -1.9775409698486328
    3. 'idx' → logprob: -2.227540969848633
    4. 'k' → logprob: -2.477540969848633
    5. 'index' → logprob: -2.977540969848633
    6. ' idx' → logprob: -3.102540969848633
    7. 'j' (adapté à ' j') → logprob: -3.227540969848633
    8. ' i' → logprob: -3.352540969848633
    9. ' j' → logprob: -4.352540969848633
    10. 'Q' → logprob: -4.477540969848633

Token 425: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38705068826675415
    2. ' =' → logprob: -1.1370506286621094
    3. '=j' → logprob: -9.13705062866211
    4. '=i' → logprob: -9.63705062866211
    5. ',' → logprob: -12.88705062866211
    6. '=index' → logprob: -14.38705062866211
    7. '=
' → logprob: -14.51205062866211
    8. '   ' → logprob: -14.76205062866211
    9. ' ' → logprob: -14.76205062866211
    10. '=int' → logprob: -14.88705062866211

Token 426: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9513858556747437
    2. 'i' → logprob: -1.0763858556747437
    3. ' (' → logprob: -1.8263858556747437
    4. ' i' → logprob: -2.201385974884033
    5. '(' → logprob: -6.701385974884033
    6. ' ' → logprob: -10.451385498046875
    7. '   ' → logprob: -10.826385498046875
    8. ',i' → logprob: -12.013885498046875
    9. '	i' → logprob: -12.076385498046875
    10. '_i' → logprob: -12.638885498046875

Token 427: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5954633355140686
    2. '(i' → logprob: -0.8454633355140686
    3. ' i' → logprob: -4.345463275909424
    4. ' (' → logprob: -5.220463275909424
    5. '   ' → logprob: -7.220463275909424
    6. '(' → logprob: -9.095463752746582
    7. ' ' → logprob: -9.720463752746582
    8. '	i' → logprob: -11.095463752746582
    9. '  ' → logprob: -11.657963752746582
    10. '_i' → logprob: -12.220463752746582

Token 428: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009759632870554924
    2. '2' → logprob: -4.634759426116943
    3. ' ' → logprob: -13.384759902954102
    4. '+' → logprob: -14.134759902954102
    5. '   ' → logprob: -15.009759902954102
    6. '```' → logprob: -15.322259902954102
    7. '(' → logprob: -15.447259902954102
    8. '``' → logprob: -16.3222599029541
    9. '
' → logprob: -16.5097599029541
    10. ')' → logprob: -17.0097599029541

Token 429: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029768195003271103
    2. ' +' → logprob: -3.529768228530884
    3. '1' → logprob: -11.904767990112305
    4. ')' → logprob: -12.529767990112305
    5. '+
' → logprob: -13.029767990112305
    6. '```' → logprob: -13.654767990112305
    7. '+)' → logprob: -13.779767990112305
    8. '   ' → logprob: -14.154767990112305
    9. '-' → logprob: -14.279767990112305
    10. ' ' → logprob: -14.654767990112305

Token 430: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.875024795532227
    4. '2' → logprob: -19.375024795532227
    5. '```' → logprob: -20.125024795532227
    6. '  ' → logprob: -20.250024795532227
    7. '+' → logprob: -20.625024795532227
    8. '3' → logprob: -21.000024795532227
    9. '0' → logprob: -21.187524795532227
    10. '
' → logprob: -21.375024795532227

Token 431: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '2' → logprob: -18.75
    4. '0' → logprob: -19.625
    5. '１' → logprob: -21.875
    6. '   ' → logprob: -21.875
    7. '```' → logprob: -21.875
    8. '3' → logprob: -22.0
    9. '``' → logprob: -22.25
    10. '
' → logprob: -22.3125

Token 432: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003062646137550473
    2. ')%' → logprob: -8.125306129455566
    3. '%' → logprob: -11.625306129455566
    4. ' )' → logprob: -14.625306129455566
    5. ')
' → logprob: -14.875306129455566
    6. '%)' → logprob: -15.375306129455566
    7. '）' → logprob: -16.750307083129883
    8. ' %' → logprob: -16.875307083129883
    9. '```' → logprob: -16.875307083129883
    10. '`)' → logprob: -17.125307083129883

Token 433: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03389648348093033
    2. ' %' → logprob: -3.4088964462280273
    3. ')' → logprob: -8.658896446228027
    4. ')%' → logprob: -9.658896446228027
    5. '()%' → logprob: -12.408896446228027
    6. '%i' → logprob: -12.908896446228027
    7. '%n' → logprob: -13.408896446228027
    8. '<|end|>' → logprob: -13.658896446228027
    9. '
' → logprob: -13.908896446228027
    10. '```' → logprob: -14.158896446228027

Token 434: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.339278580620885e-06
    2. ' N' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.125001907348633
    4. '```' → logprob: -20.875001907348633
    5. '>N' → logprob: -22.125001907348633
    6. 'n' → logprob: -22.250001907348633
    7. ' ' → logprob: -22.500001907348633
    8. '	N' → logprob: -22.500001907348633
    9. '`' → logprob: -22.750001907348633
    10. '_N' → logprob: -23.375001907348633

Token 435: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6381216645240784
    2. '   ' → logprob: -0.7631216645240784
    3. ' while' → logprob: -5.263121604919434
    4. '<|end|>' → logprob: -8.763121604919434
    5. '	while' → logprob: -9.513121604919434
    6. '
' → logprob: -10.138121604919434
    7. '```' → logprob: -11.013121604919434
    8. '    
' → logprob: -11.513121604919434
    9. '  ' → logprob: -11.763121604919434
    10. ' ' → logprob: -11.763121604919434

Token 436: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07337988913059235
    2. '   ' → logprob: -2.9483799934387207
    3. ' while' → logprob: -4.198379993438721
    4. '```' → logprob: -5.823379993438721
    5. '
' → logprob: -8.573379516601562
    6. '	while' → logprob: -9.698379516601562
    7. '<|end|>' → logprob: -9.698379516601562
    8. '``' → logprob: -10.948379516601562
    9. 'While' → logprob: -12.073379516601562
    10. '  ' → logprob: -12.573379516601562

Token 437: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.002492779865860939
    2. '   ' → logprob: -6.252492904663086
    3. ' while' → logprob: -7.502492904663086
    4. '
' → logprob: -12.002492904663086
    5. '	while' → logprob: -12.377492904663086
    6. '```' → logprob: -13.877492904663086
    7. 'While' → logprob: -14.127492904663086
    8. '    
' → logprob: -16.377492904663086
    9. '  ' → logprob: -16.627492904663086
    10. '``' → logprob: -16.877492904663086

Token 438: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009811576455831528
    2. ' j' → logprob: -4.6348114013671875
    3. '   ' → logprob: -9.884811401367188
    4. ' ' → logprob: -13.134811401367188
    5. '	j' → logprob: -13.509811401367188
    6. '  ' → logprob: -14.759811401367188
    7. '    ' → logprob: -15.259811401367188
    8. 'True' → logprob: -15.384811401367188
    9. '```' → logprob: -15.509811401367188
    10. '       ' → logprob: -16.384811401367188

Token 439: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.143185093998909
    2. ' !=' → logprob: -2.0181851387023926
    3. '!=(' → logprob: -7.893185138702393
    4. ')!=' → logprob: -9.393184661865234
    5. '()!=' → logprob: -11.018184661865234
    6. '!='' → logprob: -11.393184661865234
    7. ']!=' → logprob: -11.518184661865234
    8. '```' → logprob: -12.018184661865234
    9. '!==' → logprob: -13.018184661865234
    10. '!' → logprob: -13.768184661865234

Token 440: ' i' (ID: 575)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.014142822474241257
    2. ' (' → logprob: -4.389142990112305
    3. 'i' → logprob: -6.889142990112305
    4. '((' → logprob: -7.889142990112305
    5. '   ' → logprob: -8.639142990112305
    6. '(' → logprob: -10.639142990112305
    7. ' i' → logprob: -10.639142990112305
    8. ' ' → logprob: -13.014142990112305
    9. '       ' → logprob: -13.139142990112305
    10. '
' → logprob: -13.264142990112305

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.25
    3. ' ' → logprob: -18.875
    4. '(' → logprob: -19.5
    5. '１' → logprob: -20.125
    6. '
' → logprob: -20.375
    7. '```' → logprob: -21.0
    8. '   ' → logprob: -21.25
    9. '``' → logprob: -21.4375
    10. '{' → logprob: -21.5

Token 442: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2537822723388672
    2. ':' → logprob: -1.5037822723388672
    3. ' and' → logprob: -7.378782272338867
    4. '   ' → logprob: -7.378782272338867
    5. '):
' → logprob: -8.003782272338867
    6. '       ' → logprob: -10.253782272338867
    7. '():
' → logprob: -10.253782272338867
    8. ' :
' → logprob: -10.253782272338867
    9. '):' → logprob: -10.378782272338867
    10. 'and' → logprob: -10.503782272338867

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04298320785164833
    2. 'Q' → logprob: -3.292983293533325
    3. ' Q' → logprob: -5.917983055114746
    4. '```' → logprob: -6.417983055114746
    5. '   ' → logprob: -7.792983055114746
    6. '``' → logprob: -9.542983055114746
    7. '
' → logprob: -10.292983055114746
    8. '[' → logprob: -10.417983055114746
    9. '        
' → logprob: -11.417983055114746
    10. '{
' → logprob: -11.917983055114746

Token 444: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.08739963173866272
    2. ' Q' → logprob: -2.71239972114563
    3. '       ' → logprob: -4.087399482727051
    4. '   ' → logprob: -7.587399482727051
    5. '	Q' → logprob: -11.21239948272705
    6. '
' → logprob: -12.96239948272705
    7. '```' → logprob: -13.33739948272705
    8. ' ' → logprob: -13.46239948272705
    9. '           ' → logprob: -13.71239948272705
    10. ',Q' → logprob: -14.71239948272705

Token 445: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014717863872647285
    2. '+=' → logprob: -4.889718055725098
    3. '.' → logprob: -5.014718055725098
    4. '=' → logprob: -9.014718055725098
    5. 'append' → logprob: -9.389718055725098
    6. ' +=' → logprob: -9.764718055725098
    7. ')' → logprob: -10.264718055725098
    8. ').' → logprob: -10.389718055725098
    9. '.add' → logprob: -10.764718055725098
    10. '].' → logprob: -11.264718055725098

Token 446: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0036259624175727367
    2. 'P' → logprob: -5.628625869750977
    3. '(' → logprob: -11.253625869750977
    4. ' P' → logprob: -11.378625869750977
    5. ' (' → logprob: -14.503625869750977
    6. '(
' → logprob: -15.003625869750977
    7. '	P' → logprob: -15.378625869750977
    8. '   ' → logprob: -15.753625869750977
    9. '(Q' → logprob: -17.003625869750977
    10. '((' → logprob: -17.003625869750977

Token 447: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.9623810658231378e-05
    2. 'j' → logprob: -10.875020027160645
    3. '[' → logprob: -15.000020027160645
    4. '[
' → logprob: -15.625020027160645
    5. ' [' → logprob: -16.875019073486328
    6. ' j' → logprob: -17.250019073486328
    7. '   ' → logprob: -17.375019073486328
    8. '[i' → logprob: -18.125019073486328
    9. '(j' → logprob: -18.250019073486328
    10. '	j' → logprob: -18.375019073486328

Token 448: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.80671226978302
    2. ')' → logprob: -1.05671226978302
    3. ')
' → logprob: -2.0567121505737305
    4. '])
' → logprob: -2.5567121505737305
    5. 'j' → logprob: -8.05671215057373
    6. ']' → logprob: -9.05671215057373
    7. '   ' → logprob: -9.80671215057373
    8. '))' → logprob: -10.05671215057373
    9. '       ' → logprob: -10.55671215057373
    10. ' )' → logprob: -11.05671215057373

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009813584387302399
    2. '   ' → logprob: -4.6348137855529785
    3. ' ' → logprob: -10.50981330871582
    4. 'j' → logprob: -11.50981330871582
    5. ' j' → logprob: -12.50981330871582
    6. '           ' → logprob: -12.63481330871582
    7. '```' → logprob: -13.13481330871582
    8. '     ' → logprob: -13.25981330871582
    9. '      ' → logprob: -13.38481330871582
    10. '        
' → logprob: -13.38481330871582

Token 450: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.0016345973126590252
    2. '       ' → logprob: -6.50163459777832
    3. '   ' → logprob: -9.37663459777832
    4. ' j' → logprob: -10.00163459777832
    5. '           ' → logprob: -14.00163459777832
    6. '	j' → logprob: -14.50163459777832
    7. '
' → logprob: -14.75163459777832
    8. '  ' → logprob: -15.62663459777832
    9. '```' → logprob: -16.00163459777832
    10. ' ' → logprob: -16.00163459777832

Token 451: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015024791937321424
    2. ' =' → logprob: -6.501502513885498
    3. '+=' → logprob: -15.75150203704834
    4. '=(' → logprob: -18.626502990722656
    5. '=
' → logprob: -18.751502990722656
    6. ' ' → logprob: -19.751502990722656
    7. '.=' → logprob: -19.876502990722656
    8. '＝' → logprob: -20.126502990722656
    9. ' +=' → logprob: -21.126502990722656
    10. '%=' → logprob: -21.126502990722656

Token 452: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.10026371479034424
    2. ' (' → logprob: -2.3502635955810547
    3. '(' → logprob: -10.225263595581055
    4. '(q' → logprob: -11.475263595581055
    5. '(J' → logprob: -11.975263595581055
    6. '(Q' → logprob: -13.100263595581055
    7. '(P' → logprob: -13.600263595581055
    8. '(v' → logprob: -15.475263595581055
    9. ' ' → logprob: -15.725263595581055
    10. '(p' → logprob: -16.475263595581055

Token 453: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.5759830474853516
    2. 'j' → logprob: -0.8259830474853516
    3. ' (' → logprob: -10.950983047485352
    4. ' j' → logprob: -10.950983047485352
    5. '(' → logprob: -12.200983047485352
    6. '   ' → logprob: -13.700983047485352
    7. '	j' → logprob: -13.700983047485352
    8. '_j' → logprob: -14.700983047485352
    9. '[j' → logprob: -15.325983047485352
    10. '$j' → logprob: -15.825983047485352

Token 454: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029957585036754608
    2. ' +' → logprob: -3.5299575328826904
    3. '+j' → logprob: -8.65495777130127
    4. '1' → logprob: -10.77995777130127
    5. 'j' → logprob: -11.65495777130127
    6. ' j' → logprob: -13.15495777130127
    7. ' ' → logprob: -13.77995777130127
    8. '   ' → logprob: -16.029956817626953
    9. '(j' → logprob: -16.404956817626953
    10. ' ' → logprob: -17.029956817626953

Token 455: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.375158309936523
    4. ')' → logprob: -17.625158309936523
    5. '  ' → logprob: -19.250158309936523
    6. '```' → logprob: -19.625158309936523
    7. '+' → logprob: -19.875158309936523
    8. '１' → logprob: -20.687658309936523
    9. '۱' → logprob: -20.750158309936523
    10. '    ' → logprob: -20.750158309936523

Token 456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -19.250003814697266
    4. ')' → logprob: -19.750003814697266
    5. '```' → logprob: -20.125003814697266
    6. '
' → logprob: -21.187503814697266
    7. '۱' → logprob: -21.500003814697266
    8. '１' → logprob: -21.687503814697266
    9. '  ' → logprob: -21.812503814697266
    10. '১' → logprob: -22.812503814697266

Token 457: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.837811088189483e-05
    2. ')%' → logprob: -9.625068664550781
    3. ' )' → logprob: -13.000068664550781
    4. '%' → logprob: -16.87506866455078
    5. '）' → logprob: -19.25006866455078
    6. '%)' → logprob: -19.50006866455078
    7. '   ' → logprob: -19.75006866455078
    8. '}' → logprob: -20.00006866455078
    9. ')
' → logprob: -20.37506866455078
    10. ' ' → logprob: -20.37506866455078

Token 458: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03010299988090992
    2. ' %' → logprob: -3.6551029682159424
    3. '1' → logprob: -5.6551032066345215
    4. ')' → logprob: -8.905102729797363
    5. ')%' → logprob: -9.530102729797363
    6. ' ' → logprob: -10.155102729797363
    7. ' ' → logprob: -11.405102729797363
    8. '2' → logprob: -11.530102729797363
    9. '```' → logprob: -11.655102729797363
    10. '%i' → logprob: -12.155102729797363

Token 459: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.306760805164231e-05
    2. ' N' → logprob: -11.25001335144043
    3. '```' → logprob: -18.87501335144043
    4. '   ' → logprob: -19.62501335144043
    5. ' ' → logprob: -20.00001335144043
    6. 'n' → logprob: -21.12501335144043
    7. '	N' → logprob: -21.25001335144043
    8. 'len' → logprob: -21.50001335144043
    9. '`' → logprob: -22.25001335144043
    10. '1' → logprob: -22.25001335144043

Token 460: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3452097773551941
    2. 'Q' → logprob: -1.5952098369598389
    3. '
' → logprob: -2.470209836959839
    4. ' Q' → logprob: -6.34520959854126
    5. '```' → logprob: -6.97020959854126
    6. '	Q' → logprob: -7.09520959854126
    7. '    
' → logprob: -7.97020959854126
    8. ' 
' → logprob: -9.095210075378418
    9. '
' → logprob: -9.345210075378418
    10. ' ' → logprob: -9.345210075378418

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1406749039888382
    2. 'Q' → logprob: -2.1406748294830322
    3. ' Q' → logprob: -4.390675067901611
    4. '```' → logprob: -7.765675067901611
    5. '
' → logprob: -8.015674591064453
    6. '	Q' → logprob: -8.390674591064453
    7. ' ' → logprob: -9.015674591064453
    8. '    
' → logprob: -9.640674591064453
    9. '``' → logprob: -11.390674591064453
    10. '  ' → logprob: -11.390674591064453

Token 462: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.0027139303274452686
    2. ' Q' → logprob: -6.002714157104492
    3. '   ' → logprob: -8.377714157104492
    4. '	Q' → logprob: -12.502714157104492
    5. '```' → logprob: -12.877714157104492
    6. '
' → logprob: -13.627714157104492
    7. ' ' → logprob: -14.252714157104492
    8. '  ' → logprob: -17.002714157104492
    9. '.Q' → logprob: -17.127714157104492
    10. '    
' → logprob: -17.502714157104492

Token 463: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.688212614681106e-05
    2. '.' → logprob: -11.000017166137695
    3. 'append' → logprob: -16.000017166137695
    4. '.app' → logprob: -19.375017166137695
    5. '.extend' → logprob: -19.500017166137695
    6. ' .' → logprob: -19.500017166137695
    7. '.insert' → logprob: -19.875017166137695
    8. '.Append' → logprob: -21.125017166137695
    9. '.ap' → logprob: -21.500017166137695
    10. 'Append' → logprob: -22.000017166137695

Token 464: '(P' (ID: 8952)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008629118092358112
    2. 'x' → logprob: -4.758629322052002
    3. ' x' → logprob: -11.633628845214844
    4. '(' → logprob: -12.133628845214844
    5. ' (' → logprob: -15.758628845214844
    6. '   ' → logprob: -16.133628845214844
    7. '(
' → logprob: -16.508628845214844
    8. '	x' → logprob: -16.883628845214844
    9. ',x' → logprob: -18.133628845214844
    10. ' ' → logprob: -18.258628845214844

Token 465: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.875
    3. '(i' → logprob: -16.625
    4. '[' → logprob: -18.0
    5. '[x' → logprob: -19.125
    6. '[(' → logprob: -19.5
    7. '[j' → logprob: -19.75
    8. '[
' → logprob: -21.25
    9. '   ' → logprob: -22.25
    10. '{i' → logprob: -22.5

Token 466: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -17.5
    3. '
' → logprob: -17.625
    4. '[' → logprob: -19.0
    5. ' ' → logprob: -19.625
    6. '１' → logprob: -19.75
    7. '۱' → logprob: -20.0
    8. '```' → logprob: -20.125
    9. '(' → logprob: -20.1875
    10. ']' → logprob: -20.4375

Token 467: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.010491527616977692
    2. ']' → logprob: -4.885491371154785
    3. ')' → logprob: -5.885491371154785
    4. '])
' → logprob: -9.635491371154785
    5. ')]' → logprob: -10.510491371154785
    6. ']+' → logprob: -12.760491371154785
    7. ' ])' → logprob: -12.885491371154785
    8. ')])' → logprob: -14.260491371154785
    9. '])

' → logprob: -14.385491371154785
    10. ')
' → logprob: -14.510491371154785

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10684444010257721
    2. 'Q' → logprob: -2.481844425201416
    3. ' Q' → logprob: -4.981844425201416
    4. 'return' → logprob: -5.481844425201416
    5. '
' → logprob: -5.606844425201416
    6. ' return' → logprob: -6.606844425201416
    7. '    
' → logprob: -6.731844425201416
    8. '	Q' → logprob: -8.106844902038574
    9. '  
' → logprob: -9.856844902038574
    10. ' 
' → logprob: -10.356844902038574

Token 469: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.07439668476581573
    2. '   ' → logprob: -2.9493966102600098
    3. ' Q' → logprob: -4.32439661026001
    4. 'return' → logprob: -5.19939661026001
    5. ' return' → logprob: -7.82439661026001
    6. '	Q' → logprob: -9.324397087097168
    7. ' ' → logprob: -10.574397087097168
    8. '    
' → logprob: -11.699397087097168
    9. 'result' → logprob: -11.824397087097168
    10. '  ' → logprob: -12.324397087097168

Token 470: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005757896578870714
    2. '.insert' → logprob: -7.625576019287109
    3. '.reverse' → logprob: -10.25057601928711
    4. 'append' → logprob: -10.62557601928711
    5. 'return' → logprob: -11.75057601928711
    6. ' =' → logprob: -12.00057601928711
    7. '.sort' → logprob: -12.50057601928711
    8. '.extend' → logprob: -12.62557601928711
    9. '=' → logprob: -12.75057601928711
    10. 'Q' → logprob: -13.37557601928711

Token 471: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00043400691356509924
    2. 'x' → logprob: -7.750433921813965
    3. ' x' → logprob: -13.375433921813965
    4. '(' → logprob: -14.125433921813965
    5. '	x' → logprob: -15.250433921813965
    6. 'left' → logprob: -15.875433921813965
    7. ',x' → logprob: -16.12543487548828
    8. ' (' → logprob: -16.87543487548828
    9. ' ' → logprob: -17.12543487548828
    10. ')x' → logprob: -17.12543487548828

Token 472: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -15.625
    3. '
' → logprob: -17.125
    4. '１' → logprob: -18.875
    5. '```' → logprob: -18.875
    6. '۱' → logprob: -19.25
    7. '১' → logprob: -20.125
    8. '

' → logprob: -20.375
    9. '``' → logprob: -20.5
    10. ')' → logprob: -20.5

Token 473: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01732313260436058
    2. '   ' → logprob: -4.267323017120361
    3. ')
' → logprob: -5.767323017120361
    4. '
' → logprob: -11.76732349395752
    5. ')

' → logprob: -12.01732349395752
    6. ')return' → logprob: -12.14232349395752
    7. ' )' → logprob: -12.89232349395752
    8. '<|end|>' → logprob: -13.51732349395752
    9. '    
' → logprob: -14.51732349395752
    10. ']' → logprob: -14.76732349395752

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011441408656537533
    2. 'return' → logprob: -4.886441230773926
    3. '    
' → logprob: -6.386441230773926
    4. '
' → logprob: -6.386441230773926
    5. ' return' → logprob: -8.011441230773926
    6. ')' → logprob: -9.511441230773926
    7. '<|end|>' → logprob: -11.136441230773926
    8. 'def' → logprob: -12.011441230773926
    9. ' 
' → logprob: -12.011441230773926
    10. '    ' → logprob: -12.386441230773926

Token 475: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0018840155098587275
    2. '   ' → logprob: -6.3768839836120605
    3. ' return' → logprob: -9.126884460449219
    4. 'area' → logprob: -10.251884460449219
    5. '
' → logprob: -11.001884460449219
    6. 'def' → logprob: -11.001884460449219
    7. 'result' → logprob: -13.251884460449219
    8. '	return' → logprob: -14.501884460449219
    9. 's' → logprob: -14.751884460449219
    10. 'total' → logprob: -15.001884460449219

Token 476: ' float' (ID: 4428)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.25719761848449707
    2. 'float' → logprob: -1.507197618484497
    3. '0' → logprob: -6.007197380065918
    4. 'abs' → logprob: -6.882197380065918
    5. ' poly' → logprob: -7.132197380065918
    6. ' float' → logprob: -7.632197380065918
    7. 'polygon' → logprob: -7.882197380065918
    8. 'pol' → logprob: -10.132197380065918
    9. 'fabs' → logprob: -11.382197380065918
    10. 'frac' → logprob: -12.007197380065918

Token 477: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.006644918117672205
    2. 'poly' → logprob: -5.1316447257995605
    3. '(p' → logprob: -7.3816447257995605
    4. '(' → logprob: -10.256645202636719
    5. '(pol' → logprob: -11.256645202636719
    6. '(f' → logprob: -11.506645202636719
    7. '(conv' → logprob: -11.631645202636719
    8. 'polygon' → logprob: -11.881645202636719
    9. '_poly' → logprob: -12.756645202636719
    10. ' poly' → logprob: -12.756645202636719

Token 478: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -1.0564331205387134e-05
    2. 'area' → logprob: -11.50001049041748
    3. 'Area' → logprob: -16.000011444091797
    4. '_poly' → logprob: -16.250011444091797
    5. '_polygon' → logprob: -16.375011444091797
    6. ' area' → logprob: -17.875011444091797
    7. '_AREA' → logprob: -18.000011444091797
    8. 'poly' → logprob: -18.000011444091797
    9. '   ' → logprob: -18.125011444091797
    10. '_volume' → logprob: -18.250011444091797

Token 479: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: 0.0
    2. ')' → logprob: -17.875
    3. ' (' → logprob: -18.0
    4. '(Qt' → logprob: -19.0
    5. '((' → logprob: -20.0
    6. 'Q' → logprob: -20.375
    7. ')(' → logprob: -20.75
    8. '(' → logprob: -21.0
    9. '[' → logprob: -21.125
    10. '```' → logprob: -21.125

Token 480: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024832691997289658
    2. '))' → logprob: -6.002483367919922
    3. '())' → logprob: -12.127483367919922
    4. ')
' → logprob: -13.502483367919922
    5. ' )' → logprob: -15.127483367919922
    6. ')))' → logprob: -15.752483367919922
    7. ')#' → logprob: -16.252483367919922
    8. ')}' → logprob: -16.502483367919922
    9. '()' → logprob: -16.752483367919922
    10. ')`' → logprob: -16.877483367919922

Token 481: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00018411019118502736
    2. '@dat' → logprob: -9.250184059143066
    3. ' class' → logprob: -10.500184059143066
    4. '
' → logprob: -10.875184059143066
    5. '#' → logprob: -11.000184059143066
    6. 'import' → logprob: -11.875184059143066
    7. '0' → logprob: -12.625184059143066
    8. ']' → logprob: -12.875184059143066
    9. 'def' → logprob: -13.125184059143066
    10. '```' → logprob: -13.250184059143066

Token 482: ' poly' (ID: 14600)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.546843945980072
    2. 'read' → logprob: -1.7968440055847168
    3. ' read' → logprob: -2.671844005584717
    4. 'poly' → logprob: -2.921844005584717
    5. ' class' → logprob: -3.296844005584717
    6. ' poly' → logprob: -3.671844005584717
    7. ' area' → logprob: -4.046844005584717
    8. '
' → logprob: -4.671844005584717
    9. 'area' → logprob: -4.671844005584717
    10. ' cross' → logprob: -5.796844005584717

Token 483: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: 0.0
    2. '_array' → logprob: -19.375
    3. '_points' → logprob: -19.375
    4. 'area' → logprob: -19.625
    5. '_AREA' → logprob: -19.625
    6. '_are' → logprob: -19.875
    7. '_point' → logprob: -20.5
    8. '_angle' → logprob: -20.875
    9. '_a' → logprob: -21.625
    10. '_size' → logprob: -21.75

Token 484: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.009615008719265461
    2. '(poly' → logprob: -4.759614944458008
    3. '(p' → logprob: -7.634614944458008
    4. '(points' → logprob: -8.259614944458008
    5. '(' → logprob: -8.509614944458008
    6. '(pol' → logprob: -10.009614944458008
    7. '(ps' → logprob: -12.259614944458008
    8. '(vertices' → logprob: -13.384614944458008
    9. '(lst' → logprob: -13.884614944458008
    10. 'poly' → logprob: -14.009614944458008

Token 485: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010431708069518209
    2. '):
' → logprob: -6.876043319702148
    3. ')' → logprob: -11.876043319702148
    4. ' ):' → logprob: -13.376043319702148
    5. ':' → logprob: -14.001043319702148
    6. '):
' → logprob: -14.376043319702148
    7. '):

' → logprob: -14.751043319702148
    8. '[]):' → logprob: -16.75104331970215
    9. '():' → logprob: -17.25104331970215
    10. '   ' → logprob: -17.75104331970215

Token 486: '   ' (ID: 271)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.12894006073474884
    2. '   ' → logprob: -2.1289401054382324
    3. '0' → logprob: -6.878940105438232
    4. 'abs' → logprob: -8.128939628601074
    5. ' area' → logprob: -8.253939628601074
    6. 's' → logprob: -8.378939628601074
    7. 'def' → logprob: -9.378939628601074
    8. 'result' → logprob: -9.878939628601074
    9. 'res' → logprob: -10.628939628601074
    10. 'a' → logprob: -11.878939628601074

Token 487: ' N' (ID: 478)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.0011174732353538275
    2. 's' → logprob: -7.501117706298828
    3. '   ' → logprob: -8.251117706298828
    4. 'res' → logprob: -8.751117706298828
    5. 'a' → logprob: -9.376117706298828
    6. ' area' → logprob: -10.751117706298828
    7. 'A' → logprob: -11.251117706298828
    8. 'return' → logprob: -11.501117706298828
    9. 'result' → logprob: -12.001117706298828
    10. 'S' → logprob: -12.876117706298828

Token 488: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20161761343479156
    2. '=' → logprob: -1.7016175985336304
    3. '   ' → logprob: -8.826617240905762
    4. '=len' → logprob: -9.826617240905762
    5. ' ' → logprob: -13.951617240905762
    6. ')' → logprob: -14.076617240905762
    7. '=sum' → logprob: -14.576617240905762
    8. 'def' → logprob: -14.951617240905762
    9. '=P' → logprob: -15.576617240905762
    10. ',' → logprob: -15.576617240905762

Token 489: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018150296062231064
    2. ' len' → logprob: -4.018150329589844
    3. '(len' → logprob: -14.893150329589844
    4. '[len' → logprob: -17.393150329589844
    5. '=len' → logprob: -17.518150329589844
    6. '   ' → logprob: -19.018150329589844
    7. '	len' → logprob: -19.143150329589844
    8. ',len' → logprob: -20.393150329589844
    9. 'Len' → logprob: -21.768150329589844
    10. ' ' → logprob: -21.768150329589844

Token 490: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0009115827269852161
    2. 'P' → logprob: -7.000911712646484
    3. '(' → logprob: -16.750911712646484
    4. '[P' → logprob: -17.750911712646484
    5. ' P' → logprob: -18.875911712646484
    6. '```' → logprob: -19.625911712646484
    7. '(
' → logprob: -19.750911712646484
    8. '	P' → logprob: -20.250911712646484
    9. ' (' → logprob: -20.500911712646484
    10. '=P' → logprob: -20.875911712646484

Token 491: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0619877465069294
    2. ')' → logprob: -2.8119876384735107
    3. ' )
' → logprob: -11.31198787689209
    4. '   ' → logprob: -12.43698787689209
    5. ')
' → logprob: -13.18698787689209
    6. ')

' → logprob: -13.93698787689209
    7. ' )' → logprob: -14.31198787689209
    8. 'def' → logprob: -15.18698787689209
    9. '())
' → logprob: -16.811986923217773
    10. ')#' → logprob: -16.811986923217773

Token 492: '   ' (ID: 271)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.476281076669693
    2. '   ' → logprob: -0.9762810468673706
    3. ' area' → logprob: -7.10128116607666
    4. 's' → logprob: -7.22628116607666
    5. 'a' → logprob: -7.47628116607666
    6. 'res' → logprob: -10.22628116607666
    7. 'A' → logprob: -11.60128116607666
    8. '_area' → logprob: -11.72628116607666
    9. '    
' → logprob: -11.85128116607666
    10. 'result' → logprob: -12.22628116607666

Token 493: ' a' (ID: 261)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.0007920012576505542
    2. 's' → logprob: -7.875792026519775
    3. 'a' (adapté à ' a') → logprob: -8.375791549682617
    4. 'res' → logprob: -9.125791549682617
    5. '   ' → logprob: -10.375791549682617
    6. 'A' → logprob: -11.250791549682617
    7. ' area' → logprob: -11.250791549682617
    8. 'S' → logprob: -11.750791549682617
    9. '_area' → logprob: -13.125791549682617
    10. 'acc' → logprob: -13.375791549682617

Token 494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3900994658470154
    2. ' =' → logprob: -1.1400995254516602
    3. 'rea' → logprob: -5.76509952545166
    4. '   ' → logprob: -10.26509952545166
    5. 'reas' → logprob: -10.76509952545166
    6. ' ' → logprob: -11.39009952545166
    7. 'area' → logprob: -11.76509952545166
    8. 'res' → logprob: -12.76509952545166
    9. '=sum' → logprob: -13.14009952545166
    10. '_=' → logprob: -13.51509952545166

Token 495: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011872532777488232
    2. 'Fraction' → logprob: -6.751187324523926
    3. ' ' → logprob: -11.126187324523926
    4. 'Frac' → logprob: -14.126187324523926
    5. ' Fraction' → logprob: -14.626187324523926
    6. 'sum' → logprob: -15.126187324523926
    7. 'Vec' → logprob: -15.501187324523926
    8. 'abs' → logprob: -15.751187324523926
    9. 'Fra' → logprob: -15.876187324523926
    10. 'Decimal' → logprob: -15.876187324523926

Token 496: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026087139267474413
    2. 'Fraction' → logprob: -6.002608776092529
    3. 'sum' → logprob: -9.002608299255371
    4. 'abs' → logprob: -12.502608299255371
    5. 'Frac' → logprob: -13.127608299255371
    6. ' ' → logprob: -13.627608299255371
    7. 'Decimal' → logprob: -14.377608299255371
    8. 'Fra' → logprob: -14.752608299255371
    9. 'Vec' → logprob: -14.752608299255371
    10. 'fraction' → logprob: -15.252608299255371

Token 497: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018820149824023247
    2. 'for' → logprob: -4.268820285797119
    3. '   ' → logprob: -5.768820285797119
    4. '<|end|>' → logprob: -7.393820285797119
    5. '
' → logprob: -7.893820285797119
    6. '    
' → logprob: -8.643819808959961
    7. ' for' → logprob: -8.643819808959961
    8. '  
' → logprob: -10.268819808959961
    9. ' ' → logprob: -10.393819808959961
    10. '  ' → logprob: -10.643819808959961

Token 498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08558705449104309
    2. 'for' → logprob: -2.5855870246887207
    3. ' for' → logprob: -5.085587024688721
    4. ' ' → logprob: -7.960587024688721
    5. '
' → logprob: -9.835587501525879
    6. '  ' → logprob: -10.085587501525879
    7. '	for' → logprob: -10.460587501525879
    8. '    
' → logprob: -11.835587501525879
    9. '<|end|>' → logprob: -12.960587501525879
    10. '       ' → logprob: -13.835587501525879

Token 499: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.031684186309576035
    2. ' for' → logprob: -3.781684160232544
    3. '   ' → logprob: -4.781684398651123
    4. 'i' → logprob: -11.281683921813965
    5. '	for' → logprob: -12.406683921813965
    6. ' i' → logprob: -13.031683921813965
    7. ' ' → logprob: -13.781683921813965
    8. 'range' → logprob: -14.031683921813965
    9. '  ' → logprob: -14.406683921813965
    10. ' range' → logprob: -17.15668487548828

Token 500: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002614550176076591
    2. ' i' → logprob: -8.250261306762695
    3. '	i' → logprob: -16.000261306762695
    4. '   ' → logprob: -16.875261306762695
    5. ' ' → logprob: -17.250261306762695
    6. '_i' → logprob: -18.500261306762695
    7. 'k' → logprob: -19.375261306762695
    8. '_' → logprob: -19.375261306762695
    9. '  ' → logprob: -19.625261306762695
    10. '0' → logprob: -20.125261306762695

Token 501: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006725549232214689
    2. 'in' → logprob: -5.006725311279297
    3. ' ' → logprob: -12.381725311279297
    4. ',' → logprob: -13.381725311279297
    5. '   ' → logprob: -13.381725311279297
    6. '  ' → logprob: -13.881725311279297
    7. '_' → logprob: -15.006725311279297
    8. 'i' → logprob: -15.256725311279297
    9. '0' → logprob: -15.506725311279297
    10. ' i' → logprob: -15.631725311279297

Token 502: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. ' ' → logprob: -17.875553131103516
    4. '   ' → logprob: -19.625553131103516
    5. '	range' → logprob: -19.875553131103516
    6. '  ' → logprob: -20.125553131103516
    7. '(range' → logprob: -20.250553131103516
    8. '
' → logprob: -21.250553131103516
    9. '0' → logprob: -21.875553131103516
    10. '```' → logprob: -22.500553131103516

Token 503: '(' (ID: 7)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.15441757265944e-05
    2. '(N' → logprob: -10.875031471252441
    3. ' N' → logprob: -11.375031471252441
    4. '(' → logprob: -14.000031471252441
    5. '1' → logprob: -15.125031471252441
    6. '	N' → logprob: -17.875032424926758
    7. '   ' → logprob: -18.375032424926758
    8. ' ' → logprob: -19.250032424926758
    9. ' (' → logprob: -20.750032424926758
    10. '_N' → logprob: -20.875032424926758

Token 504: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.25
    3. ' N' → logprob: -16.125
    4. '(N' → logprob: -19.25
    5. '   ' → logprob: -20.375
    6. '	N' → logprob: -20.375
    7. '0' → logprob: -20.5
    8. 'len' → logprob: -21.125
    9. '_N' → logprob: -22.25
    10. ' ' → logprob: -22.5

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11248317360877991
    2. 'N' → logprob: -2.362483263015747
    3. ',N' → logprob: -4.487483024597168
    4. ' N' → logprob: -7.487483024597168
    5. '   ' → logprob: -8.612483024597168
    6. ' ,' → logprob: -8.612483024597168
    7. ' ' → logprob: -11.362483024597168
    8. '  ' → logprob: -11.612483024597168
    9. '    ' → logprob: -13.612483024597168
    10. '1' → logprob: -13.862483024597168

Token 506: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0683535037969705e-05
    2. ' N' → logprob: -11.50001049041748
    3. ' ' → logprob: -14.87501049041748
    4. '   ' → logprob: -15.87501049041748
    5. 'len' → logprob: -16.750011444091797
    6. '	N' → logprob: -16.750011444091797
    7. '1' → logprob: -18.000011444091797
    8. '  ' → logprob: -18.250011444091797
    9. '
' → logprob: -18.500011444091797
    10. '    ' → logprob: -20.375011444091797

Token 507: ' -' (ID: 533)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16154585778713226
    2. '):' → logprob: -1.9115458726882935
    3. '+' → logprob: -7.536545753479004
    4. '   ' → logprob: -7.661545753479004
    5. '-' → logprob: -8.411545753479004
    6. '
' → logprob: -10.911545753479004
    7. ' ' → logprob: -10.911545753479004
    8. ' ):
' → logprob: -11.536545753479004
    9. '  ' → logprob: -11.911545753479004
    10. ')' → logprob: -12.036545753479004

Token 508: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -20.625
    3. '0' → logprob: -21.875
    4. ' ' → logprob: -22.0
    5. '１' → logprob: -22.0
    6. '   ' → logprob: -22.375
    7. '
' → logprob: -23.75
    8. '2' → logprob: -23.75
    9. '۱' → logprob: -24.375
    10. '```' → logprob: -24.375

Token 509: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.625
    3. ' ' → logprob: -17.625
    4. '-' → logprob: -19.375
    5. '   ' → logprob: -20.625
    6. '  ' → logprob: -21.875
    7. '１' → logprob: -22.125
    8. '```' → logprob: -22.125
    9. '2' → logprob: -22.375
    10. '
' → logprob: -22.625

Token 510: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3870222568511963
    2. '):
' → logprob: -1.1370222568511963
    3. ' ):' → logprob: -9.887022018432617
    4. ':' → logprob: -10.137022018432617
    5. ' ):
' → logprob: -10.512022018432617
    6. '):
' → logprob: -10.762022018432617
    7. '):

' → logprob: -12.262022018432617
    8. '   ' → logprob: -12.637022018432617
    9. ')' → logprob: -13.887022018432617
    10. '}:' → logprob: -14.387022018432617

Token 511: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03030320629477501
    2. '       ' → logprob: -3.7803032398223877
    3. '   ' → logprob: -5.155303001403809
    4. ' a' → logprob: -6.780303001403809
    5. '	a' → logprob: -9.030303001403809
    6. '    ' → logprob: -13.530303001403809
    7. '  ' → logprob: -13.655303001403809
    8. '```' → logprob: -13.655303001403809
    9. '[a' → logprob: -13.905303001403809
    10. ' ' → logprob: -14.030303001403809

Token 512: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -3.9292415749514475e-05
    2. '   ' → logprob: -10.250039100646973
    3. ' a' → logprob: -12.625039100646973
    4. '	a' → logprob: -14.875039100646973
    5. '       ' → logprob: -15.375039100646973
    6. 'return' → logprob: -17.50004005432129
    7. '  ' → logprob: -18.12504005432129
    8. '#a' → logprob: -18.25004005432129
    9. '    ' → logprob: -18.62504005432129
    10. '    
' → logprob: -19.00004005432129

Token 513: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4741494953632355
    2. ' +=' → logprob: -0.9741494655609131
    3. ']+=' → logprob: -10.474149703979492
    4. '   ' → logprob: -10.974149703979492
    5. '=' → logprob: -11.474149703979492
    6. '+=(' → logprob: -11.599149703979492
    7. '+' → logprob: -12.599149703979492
    8. '       ' → logprob: -14.224149703979492
    9. '    ' → logprob: -14.599149703979492
    10. ' =' → logprob: -14.849149703979492

Token 514: ' Fraction' (ID: 112108)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.5250494480133057
    2. '(P' → logprob: -0.9000494480133057
    3. ' (' → logprob: -6.650049209594727
    4. ' P' → logprob: -7.775049209594727
    5. 'abs' → logprob: -9.525049209594727
    6. '(' → logprob: -10.150049209594727
    7. '   ' → logprob: -10.150049209594727
    8. 'Vec' → logprob: -11.275049209594727
    9. ' ' → logprob: -11.775049209594727
    10. 'cross' → logprob: -12.150049209594727

Token 515: '((' (ID: 2054)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.16237203776836395
    2. 'P' → logprob: -1.9123719930648804
    3. 'abs' → logprob: -7.16237211227417
    4. '((' → logprob: -7.66237211227417
    5. '(
' → logprob: -7.91237211227417
    6. '(' → logprob: -8.037371635437012
    7. '(abs' → logprob: -9.162371635437012
    8. ' (' → logprob: -9.412371635437012
    9. '   ' → logprob: -11.912371635437012
    10. ' P' → logprob: -12.037371635437012

Token 516: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -3.214019307051785e-05
    2. '(P' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.375032424926758
    4. ' P' → logprob: -15.250032424926758
    5. ' ' → logprob: -17.875032424926758
    6. ' (' → logprob: -18.250032424926758
    7. '  ' → logprob: -18.250032424926758
    8. '	P' → logprob: -18.500032424926758
    9. '(' → logprob: -19.375032424926758
    10. '_P' → logprob: -20.625032424926758

Token 517: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011137432418763638
    2. 'i' → logprob: -4.51113748550415
    3. '(i' → logprob: -10.386137008666992
    4. '
' → logprob: -10.636137008666992
    5. '   ' → logprob: -10.636137008666992
    6. '{i' → logprob: -12.761137008666992
    7. '[(' → logprob: -13.636137008666992
    8. ' [' → logprob: -13.761137008666992
    9. '

' → logprob: -14.261137008666992
    10. '[' → logprob: -14.261137008666992

Token 518: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00493083568289876
    2. ' -' → logprob: -5.7549309730529785
    3. '   ' → logprob: -7.0049309730529785
    4. '.x' → logprob: -8.50493049621582
    5. '.' → logprob: -8.62993049621582
    6. ').' → logprob: -8.87993049621582
    7. ' ' → logprob: -9.37993049621582
    8. ')' → logprob: -9.62993049621582
    9. '.y' → logprob: -9.62993049621582
    10. ']' → logprob: -10.12993049621582

Token 519: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6455513834953308
    2. '].' → logprob: -1.3955514430999756
    3. ').' → logprob: -2.3955514430999756
    4. ' ' → logprob: -2.7705514430999756
    5. '   ' → logprob: -4.0205512046813965
    6. 'i' → logprob: -4.1455512046813965
    7. 'vec' → logprob: -4.8955512046813965
    8. 'x' → logprob: -5.1455512046813965
    9. '  ' → logprob: -5.2705512046813965
    10. '}.' → logprob: -5.2705512046813965

Token 520: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16416937112808228
    2. ').' → logprob: -2.9141693115234375
    3. '].' → logprob: -3.6641693115234375
    4. '-' → logprob: -4.0391693115234375
    5. 'P' → logprob: -4.0391693115234375
    6. 'i' → logprob: -4.9141693115234375
    7. ' ' → logprob: -5.2891693115234375
    8. 'vec' → logprob: -5.6641693115234375
    9. '1' → logprob: -5.7891693115234375
    10. 'x' → logprob: -5.7891693115234375

Token 521: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22781868278980255
    2. ']' → logprob: -2.227818727493286
    3. '].' → logprob: -2.477818727493286
    4. ' -' → logprob: -4.852818489074707
    5. ']-' → logprob: -5.727818489074707
    6. ').' → logprob: -7.977818489074707
    7. ')' → logprob: -8.977818489074707
    8. '   ' → logprob: -9.352818489074707
    9. ' ' → logprob: -9.352818489074707
    10. '}.' → logprob: -9.477818489074707

Token 522: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016196712851524353
    2. ' -' → logprob: -4.1411967277526855
    3. '.' → logprob: -9.641196250915527
    4. ')' → logprob: -10.016196250915527
    5. '-P' → logprob: -11.141196250915527
    6. ').' → logprob: -11.766196250915527
    7. '.y' → logprob: -12.141196250915527
    8. ' ' → logprob: -12.391196250915527
    9. '-
' → logprob: -12.891196250915527
    10. '-p' → logprob: -12.891196250915527

Token 523: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00020628207130357623
    2. ' P' → logprob: -8.500205993652344
    3. '	P' → logprob: -13.500205993652344
    4. '   ' → logprob: -14.625205993652344
    5. '       ' → logprob: -15.000205993652344
    6. '(P' → logprob: -15.750205993652344
    7. '[P' → logprob: -16.125205993652344
    8. '>P' → logprob: -16.250205993652344
    9. '\P' → logprob: -16.500205993652344
    10. ' ' → logprob: -16.750205993652344

Token 524: '[i' (ID: 1768)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0005930667975917459
    2. ' P' → logprob: -7.500593185424805
    3. '0' → logprob: -10.875593185424805
    4. '   ' → logprob: -11.750593185424805
    5. ' ' → logprob: -12.750593185424805
    6. '	P' → logprob: -12.750593185424805
    7. 'i' → logprob: -13.000593185424805
    8. '[' → logprob: -13.250593185424805
    9. '[P' → logprob: -13.250593185424805
    10. '[i' → logprob: -14.500593185424805

Token 525: ']).' (ID: 21953)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.015286688692867756
    2. ')' → logprob: -4.515286922454834
    3. ' ).' → logprob: -6.265286922454834
    4. ']).' → logprob: -6.640286922454834
    5. ')).' → logprob: -8.140286445617676
    6. '   ' → logprob: -8.140286445617676
    7. '0' → logprob: -9.265286445617676
    8. ' ' → logprob: -9.890286445617676
    9. '),' → logprob: -10.140286445617676
    10. ' )' → logprob: -10.265286445617676

Token 526: 'cross' (ID: 52400)
  Prédit: 'cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0003558423195499927
    2. ' cross' → logprob: -8.12535572052002
    3. '.cross' → logprob: -9.75035572052002
    4. 'x' → logprob: -14.12535572052002
    5. 'c' → logprob: -15.50035572052002
    6. 'y' → logprob: -16.125356674194336
    7. '0' → logprob: -16.375356674194336
    8. 'dot' → logprob: -16.500356674194336
    9. 'b' → logprob: -16.625356674194336
    10. ' ' → logprob: -16.750356674194336

Token 527: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.010429009795188904
    2. 'P' → logprob: -4.6354289054870605
    3. ' (' → logprob: -7.5104289054870605
    4. '(' → logprob: -9.635429382324219
    5. ' P' → logprob: -10.010429382324219
    6. '   ' → logprob: -12.135429382324219
    7. '(
' → logprob: -12.510429382324219
    8. ' ' → logprob: -13.010429382324219
    9. '	P' → logprob: -14.010429382324219
    10. '
' → logprob: -14.135429382324219

Token 528: '[' (ID: 58)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.2835921347141266
    2. 'P' → logprob: -1.4085921049118042
    3. ' (' → logprob: -6.783592224121094
    4. ' P' → logprob: -6.908592224121094
    5. '(' → logprob: -9.033592224121094
    6. '   ' → logprob: -9.158592224121094
    7. '	P' → logprob: -11.033592224121094
    8. ' ' → logprob: -11.033592224121094
    9. '  ' → logprob: -11.408592224121094
    10. '(
' → logprob: -11.658592224121094

Token 529: '0' (ID: 15)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0003673940955195576
    2. 'i' → logprob: -8.000367164611816
    3. ' P' → logprob: -10.875367164611816
    4. ' ' → logprob: -12.375367164611816
    5. '   ' → logprob: -12.375367164611816
    6. '(' → logprob: -13.750367164611816
    7. '  ' → logprob: -14.500367164611816
    8. '           ' → logprob: -14.500367164611816
    9. '(i' → logprob: -14.500367164611816
    10. '[i' → logprob: -14.625367164611816

Token 530: ']' (ID: 60)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.2705466151237488
    2. ']),' → logprob: -2.1455466747283936
    3. '))' → logprob: -3.0205466747283936
    4. '])' → logprob: -3.3955466747283936
    5. ']' → logprob: -4.7705464363098145
    6. ')),' → logprob: -5.3955464363098145
    7. ')' → logprob: -5.6455464363098145
    8. ',' → logprob: -5.8955464363098145
    9. '),' → logprob: -6.0205464363098145
    10. ' -' → logprob: -6.1455464363098145

Token 531: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24700719118118286
    2. ',P' → logprob: -2.372007131576538
    3. '-' → logprob: -2.872007131576538
    4. ' -' → logprob: -3.747007131576538
    5. '))' → logprob: -4.122007369995117
    6. 'P' → logprob: -4.497007369995117
    7. ')' → logprob: -5.122007369995117
    8. '),' → logprob: -5.622007369995117
    9. '-P' → logprob: -6.247007369995117
    10. ' ,' → logprob: -6.497007369995117

Token 532: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00044377794256433845
    2. ' P' → logprob: -7.750443935394287
    3. '   ' → logprob: -11.875443458557129
    4. ' ' → logprob: -13.125443458557129
    5. 'i' → logprob: -13.500443458557129
    6. '	P' → logprob: -14.000443458557129
    7. '  ' → logprob: -14.250443458557129
    8. 'Pi' → logprob: -14.375443458557129
    9. ')' → logprob: -15.750443458557129
    10. '
' → logprob: -16.000444412231445

Token 533: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006277294596657157
    2. '[i' → logprob: -8.375627517700195
    3. '))' → logprob: -8.750627517700195
    4. ' i' → logprob: -8.750627517700195
    5. ')' → logprob: -10.000627517700195
    6. ')i' → logprob: -11.000627517700195
    7. '0' → logprob: -12.000627517700195
    8. '   ' → logprob: -12.750627517700195
    9. '1' → logprob: -12.750627517700195
    10. '(i' → logprob: -13.375627517700195

Token 534: ' +' (ID: 659)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1787477433681488
    2. '])' → logprob: -2.3037476539611816
    3. ')' → logprob: -3.3037476539611816
    4. ']))' → logprob: -3.6787476539611816
    5. ')))' → logprob: -7.678747653961182
    6. '),' → logprob: -7.928747653961182
    7. ')])' → logprob: -7.928747653961182
    8. ')]' → logprob: -8.92874813079834
    9. '))
' → logprob: -8.92874813079834
    10. ' ))' → logprob: -9.17874813079834

Token 535: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.081584716506768e-05
    2. ' ' → logprob: -11.125020980834961
    3. '0' → logprob: -12.125020980834961
    4. '```' → logprob: -15.750020980834961
    5. '   ' → logprob: -16.25002098083496
    6. '])' → logprob: -17.00002098083496
    7. '  ' → logprob: -17.75002098083496
    8. ')' → logprob: -17.87502098083496
    9. '#' → logprob: -17.87502098083496
    10. '
' → logprob: -18.00002098083496

Token 536: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.558399319241289e-05
    2. ' ' → logprob: -11.000025749206543
    3. '0' → logprob: -11.875025749206543
    4. '   ' → logprob: -14.750025749206543
    5. '```' → logprob: -14.875025749206543
    6. '])' → logprob: -15.562525749206543
    7. ']))' → logprob: -15.687525749206543
    8. '  ' → logprob: -15.937525749206543
    9. '-' → logprob: -16.250024795532227
    10. 'i' → logprob: -16.312524795532227

Token 537: ']),' (ID: 19560)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.016515925526618958
    2. ')' → logprob: -4.141515731811523
    3. ' ))' → logprob: -9.141515731811523
    4. '))
' → logprob: -9.516515731811523
    5. '])' → logprob: -9.516515731811523
    6. ']))' → logprob: -9.641515731811523
    7. ')))' → logprob: -9.641515731811523
    8. '),' → logprob: -10.016515731811523
    9. '()))' → logprob: -11.016515731811523
    10. ' ' → logprob: -11.891515731811523

Token 538: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1748874932527542
    2. ')' → logprob: -2.6748874187469482
    3. '2' → logprob: -3.0498874187469482
    4. ' ' → logprob: -4.424887657165527
    5. 'den' → logprob: -5.549887657165527
    6. ')
' → logprob: -5.549887657165527
    7. 'i' → logprob: -5.549887657165527
    8. '3' → logprob: -5.924887657165527
    9. '
' → logprob: -5.924887657165527
    10. 'exact' → logprob: -6.174887657165527

Token 539: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025113318115472794
    2. '2' → logprob: -6.002511501312256
    3. ' ' → logprob: -10.252511024475098
    4. ')' → logprob: -15.877511024475098
    5. '  ' → logprob: -17.002511978149414
    6. '
' → logprob: -17.002511978149414
    7. '   ' → logprob: -17.002511978149414
    8. '

' → logprob: -18.127511978149414
    9. '    ' → logprob: -18.502511978149414
    10. '3' → logprob: -18.627511978149414

Token 540: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8670179997570813e-05
    2. ' )' → logprob: -11.500019073486328
    3. ')
' → logprob: -11.750019073486328
    4. '))' → logprob: -16.375019073486328
    5. '())' → logprob: -17.000019073486328
    6. '   ' → logprob: -17.250019073486328
    7. ')#' → logprob: -17.250019073486328
    8. '0' → logprob: -17.375019073486328
    9. ')`' → logprob: -17.625019073486328
    10. ')return' → logprob: -17.750019073486328

Token 541: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011108051985502243
    2. 'return' → logprob: -7.251111030578613
    3. ' return' → logprob: -7.876111030578613
    4. '	return' → logprob: -11.626111030578613
    5. ' ' → logprob: -12.876111030578613
    6. '    
' → logprob: -12.876111030578613
    7. '
' → logprob: -13.251111030578613
    8. 'a' → logprob: -13.501111030578613
    9. '   ' → logprob: -14.251111030578613
    10. '       ' → logprob: -14.376111030578613

Token 542: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031639255583286285
    2. ' return' → logprob: -3.906639337539673
    3. 'return' (adapté à ' return') → logprob: -4.531639099121094
    4. '	return' → logprob: -8.531639099121094
    5. ' ' → logprob: -9.906639099121094
    6. '  ' → logprob: -11.656639099121094
    7. '    ' → logprob: -12.656639099121094
    8. 'a' → logprob: -12.906639099121094
    9. '    
' → logprob: -13.031639099121094
    10. ')' → logprob: -13.281639099121094

Token 543: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16046224534511566
    2. 'abs' → logprob: -1.9104622602462769
    3. ' abs' → logprob: -8.535462379455566
    4. ' a' → logprob: -10.160462379455566
    5. 'float' → logprob: -13.660462379455566
    6. 'Fraction' → logprob: -14.285462379455566
    7. '(abs' → logprob: -14.785462379455566
    8. 'poly' → logprob: -15.910462379455566
    9. 'Abs' → logprob: -16.03546142578125
    10. 'math' → logprob: -16.03546142578125

Token 544: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24233196675777435
    2. 'class' → logprob: -2.1173319816589355
    3. '<|end|>' → logprob: -2.3673319816589355
    4. '

' → logprob: -7.6173319816589355
    5. ' class' → logprob: -8.242331504821777
    6. '<|end|>' → logprob: -9.367331504821777
    7. '```' → logprob: -9.992331504821777
    8. 'from' → logprob: -10.117331504821777
    9. ')' → logprob: -10.242331504821777
    10. '  
' → logprob: -10.742331504821777

Token 545: '############################################################################' (ID: 81787)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.055073194205760956
    2. '
' → logprob: -2.9300732612609863
    3. '

' → logprob: -9.180072784423828
    4. ' class' → logprob: -10.055072784423828
    5. 'from' → logprob: -11.305072784423828
    6. '<class' → logprob: -12.305072784423828
    7. '<|end|>' → logprob: -12.305072784423828
    8. 'import' → logprob: -12.680072784423828
    9. '```' → logprob: -12.680072784423828
    10. '    
' → logprob: -12.805072784423828

Token 546: '###
' (ID: 66015)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01825799234211445
    2. '
' → logprob: -4.018258094787598
    3. 'from' → logprob: -10.143258094787598
    4. '@dat' → logprob: -10.643258094787598
    5. '

' → logprob: -11.643258094787598
    6. ' class' → logprob: -11.893258094787598
    7. '<class' → logprob: -12.268258094787598
    8. '#' → logprob: -12.518258094787598
    9. '
' → logprob: -12.643258094787598
    10. '############################################################################' → logprob: -13.268258094787598

Token 547: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00012190054985694587
    2. 'from' → logprob: -9.7501220703125
    3. '
' → logprob: -10.2501220703125
    4. ' class' → logprob: -11.3751220703125
    5. 'import' → logprob: -11.5001220703125
    6. '@dat' → logprob: -12.1251220703125
    7. '<class' → logprob: -15.0001220703125
    8. '```' → logprob: -15.2501220703125
    9. '#' → logprob: -16.1251220703125
    10. 'Vec' → logprob: -16.1251220703125

Token 548: ' AUX' (ID: 140687)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0006308287265710533
    2. '
' → logprob: -8.000630378723145
    3. 'from' → logprob: -8.375630378723145
    4. ' class' → logprob: -9.875630378723145
    5. 'Vec' → logprob: -12.375630378723145
    6. 'import' → logprob: -12.500630378723145
    7. '#' → logprob: -13.625630378723145
    8. '```' → logprob: -13.625630378723145
    9. '<class' → logprob: -14.000630378723145
    10. ' 
' → logprob: -14.375630378723145

Token 549: 'ILI' (ID: 89829)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004128861241042614
    2. 'iliary' → logprob: -6.129128932952881
    3. 'def' → logprob: -6.629128932952881
    4. '
' → logprob: -7.879128932952881
    5. '#' → logprob: -9.129128456115723
    6. '

' → logprob: -10.129128456115723
    7. ' class' → logprob: -10.129128456115723
    8. 'ILI' → logprob: -11.254128456115723
    9. 'import' → logprob: -11.879128456115723
    10. '__' → logprob: -12.004128456115723

Token 550: 'ARY' (ID: 15810)
  Prédit: 'ARY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARY' → logprob: -0.007635020650923252
    2. 'L' → logprob: -5.257635116577148
    3. 'LI' → logprob: -6.507635116577148
    4. 'ary' → logprob: -7.257635116577148
    5. 'AL' → logprob: -9.257635116577148
    6. 'RARY' → logprob: -10.132635116577148
    7. 'lary' → logprob: -10.382635116577148
    8. 'LL' → logprob: -11.632635116577148
    9. 'AR' → logprob: -11.632635116577148
    10. 'I' → logprob: -12.507635116577148

Token 551: ' FUNCTIONS' (ID: 126738)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0026893247850239277
    2. '
' → logprob: -6.002689361572266
    3. 'from' → logprob: -9.252689361572266
    4. '#' → logprob: -10.127689361572266
    5. 'Vec' → logprob: -10.252689361572266
    6. '@dat' → logprob: -11.252689361572266
    7. 'def' → logprob: -11.627689361572266
    8. 'import' → logprob: -12.377689361572266
    9. '

' → logprob: -12.377689361572266
    10. 'vec' → logprob: -12.877689361572266

Token 552: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0016797020798549056
    2. '
' → logprob: -6.62667989730835
    3. 'def' → logprob: -8.251679420471191
    4. '@dat' → logprob: -10.751679420471191
    5. '#' → logprob: -10.876679420471191
    6. 'import' → logprob: -11.751679420471191
    7. '```' → logprob: -12.001679420471191
    8. '############################################################################' → logprob: -12.001679420471191
    9. 'from' → logprob: -12.126679420471191
    10. 'Vec' → logprob: -12.251679420471191

Token 553: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.002507762983441353
    2. 'def' → logprob: -6.00250768661499
    3. 'from' → logprob: -11.252508163452148
    4. '#' → logprob: -12.127508163452148
    5. 'Vec' → logprob: -12.377508163452148
    6. ' class' → logprob: -12.752508163452148
    7. 'import' → logprob: -13.002508163452148
    8. '@dat' → logprob: -13.127508163452148
    9. 'Vector' → logprob: -14.002508163452148
    10. '
' → logprob: -14.127508163452148

Token 554: ' Vec' (ID: 22915)
  Prédit: 'Vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vec' → logprob: -0.10020796209573746
    2. ' Vec' → logprob: -2.350208044052124
    3. '	Vec' → logprob: -14.225208282470703
    4. 'Vector' → logprob: -14.975208282470703
    5. '_vec' → logprob: -16.475208282470703
    6. ' ' → logprob: -16.600208282470703
    7. '<Vec' → logprob: -16.600208282470703
    8. 'vec' → logprob: -16.850208282470703
    9. '(Vec' → logprob: -16.975208282470703
    10. '_VEC' → logprob: -18.975208282470703

Token 555: '(object' (ID: 9750)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005076379980891943
    2. '(object' → logprob: -5.3800764083862305
    3. ':
' → logprob: -8.00507640838623
    4. '():' → logprob: -9.75507640838623
    5. '<|end|>' → logprob: -10.25507640838623
    6. '(' → logprob: -11.63007640838623
    7. '(Vector' → logprob: -12.00507640838623
    8. '):' → logprob: -13.00507640838623
    9. ' :' → logprob: -13.25507640838623
    10. '(vector' → logprob: -13.50507640838623

Token 556: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016202230006456375
    2. '):
' → logprob: -4.141202449798584
    3. ':' → logprob: -8.766201972961426
    4. '):

' → logprob: -12.641201972961426
    5. ' ):' → logprob: -12.766201972961426
    6. '):
' → logprob: -13.016201972961426
    7. ')' → logprob: -13.016201972961426
    8. ':
' → logprob: -14.891201972961426
    9. '[]):' → logprob: -15.266201972961426
    10. '<|end|>' → logprob: -15.766201972961426

Token 557: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005186439957469702
    2. 'def' → logprob: -5.880186557769775
    3. ' def' → logprob: -6.130186557769775
    4. ' __' → logprob: -9.380186080932617
    5. '__' → logprob: -9.505186080932617
    6. '    ' → logprob: -11.005186080932617
    7. '	def' → logprob: -11.130186080932617
    8. ' ' → logprob: -12.380186080932617
    9. '    
' → logprob: -12.380186080932617
    10. '  ' → logprob: -12.880186080932617

Token 558: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.13833382725715637
    2. '__' → logprob: -2.388333797454834
    3. ' def' → logprob: -3.388333797454834
    4. ' __' → logprob: -6.013333797454834
    5. '   ' → logprob: -6.763333797454834
    6. '	def' → logprob: -10.638334274291992
    7. 'x' → logprob: -11.263334274291992
    8. ' ' → logprob: -12.638334274291992
    9. '___' → logprob: -14.138334274291992
    10. '    
' → logprob: -14.388334274291992

Token 559: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.030521299690008163
    2. ' __' → logprob: -3.9055213928222656
    3. ' init' → logprob: -5.280521392822266
    4. '__' → logprob: -5.655521392822266
    5. '_init' → logprob: -6.655521392822266
    6. ' ' → logprob: -10.655521392822266
    7. '
' → logprob: -11.655521392822266
    8. '```' → logprob: -12.155521392822266
    9. 'int' → logprob: -13.405521392822266
    10. 'slots' → logprob: -13.530521392822266

Token 560: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -15.25
    3. '_init' → logprob: -19.25
    4. '
' → logprob: -20.0
    5. 'ini' → logprob: -20.875
    6. 'int' → logprob: -21.25
    7. '	init' → logprob: -21.5
    8. '```' → logprob: -21.75
    9. 'new' → logprob: -22.375
    10. 'inite' → logprob: -22.5

Token 561: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07054761797189713
    2. '__(' → logprob: -2.695547580718994
    3. '(' → logprob: -8.195548057556152
    4. ' (' → logprob: -8.320548057556152
    5. 'self' → logprob: -10.070548057556152
    6. '__' → logprob: -10.195548057556152
    7. '_(' → logprob: -12.570548057556152
    8. '__(
' → logprob: -13.195548057556152
    9. '__((' → logprob: -13.445548057556152
    10. ' self' → logprob: -13.945548057556152

Token 562: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.955703818472102e-05
    2. ' self' → logprob: -9.750059127807617
    3. 'x' → logprob: -14.125059127807617
    4. '0' → logprob: -15.000059127807617
    5. '(self' → logprob: -16.875059127807617
    6. '   ' → logprob: -17.125059127807617
    7. ',' → logprob: -18.250059127807617
    8. '	self' → logprob: -18.500059127807617
    9. ',self' → logprob: -18.625059127807617
    10. ' ' → logprob: -19.875059127807617

Token 563: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06664307415485382
    2. ',' → logprob: -3.316642999649048
    3. ' self' → logprob: -4.066643238067627
    4. '(self' → logprob: -4.566643238067627
    5. ',self' → logprob: -7.691643238067627
    6. '__(' → logprob: -9.566642761230469
    7. ' ,' → logprob: -9.816642761230469
    8. '   ' → logprob: -10.441642761230469
    9. ' (' → logprob: -11.066642761230469
    10. '_,' → logprob: -11.566642761230469

Token 564: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002637199067976326
    2. ' x' → logprob: -8.250264167785645
    3. 'self' → logprob: -13.000264167785645
    4. '	x' → logprob: -16.250263214111328
    5. ' ' → logprob: -17.000263214111328
    6. '   ' → logprob: -17.500263214111328
    7. 'a' → logprob: -18.000263214111328
    8. ' self' → logprob: -18.375263214111328
    9. '_x' → logprob: -18.625263214111328
    10. '0' → logprob: -19.000263214111328

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009974405402317643
    2. ' ,' → logprob: -7.000997543334961
    3. ',x' → logprob: -9.500997543334961
    4. ',int' → logprob: -12.125997543334961
    5. ',y' → logprob: -13.125997543334961
    6. '=' → logprob: -13.250997543334961
    7. '0' → logprob: -14.375997543334961
    8. ',float' → logprob: -15.000997543334961
    9. ',v' → logprob: -15.250997543334961
    10. '_,' → logprob: -16.12599754333496

Token 566: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0015023599844425917
    2. ' y' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.001502990722656
    4. ' ' → logprob: -18.626502990722656
    5. '	y' → logprob: -19.001502990722656
    6. '  ' → logprob: -20.751502990722656
    7. '    ' → logprob: -21.501502990722656
    8. 'x' → logprob: -21.626502990722656
    9. '0' → logprob: -22.251502990722656
    10. 'Y' → logprob: -22.501502990722656

Token 567: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011411004699766636
    2. '):
' → logprob: -4.511411190032959
    3. ',' → logprob: -8.2614107131958
    4. ':' → logprob: -9.7614107131958
    5. '=' → logprob: -10.8864107131958
    6. '   ' → logprob: -11.5114107131958
    7. ' ):' → logprob: -11.7614107131958
    8. ')' → logprob: -12.2614107131958
    9. '=None' → logprob: -13.2614107131958
    10. '):
' → logprob: -13.7614107131958

Token 568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010596864856779575
    2. 'x' → logprob: -5.010596752166748
    3. '   ' → logprob: -6.260596752166748
    4. 'self' → logprob: -6.885596752166748
    5. ' x' → logprob: -7.760596752166748
    6. ' self' → logprob: -8.010597229003906
    7. '    ' → logprob: -9.260597229003906
    8. '<|end|>' → logprob: -10.885597229003906
    9. '      ' → logprob: -11.260597229003906
    10. ' ' → logprob: -11.260597229003906

Token 569: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.45352572202682495
    2. '       ' → logprob: -1.7035257816314697
    3. ' self' → logprob: -1.7035257816314697
    4. '   ' → logprob: -7.828525543212891
    5. '	self' → logprob: -8.95352554321289
    6. ' ' → logprob: -12.07852554321289
    7. '	' → logprob: -13.95352554321289
    8. '	   ' → logprob: -15.20352554321289
    9. '(self' → logprob: -15.95352554321289
    10. 'x' → logprob: -16.32852554321289

Token 570: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17232292890548706
    2. '.x' → logprob: -1.9223229885101318
    3. '=' → logprob: -4.672322750091553
    4. ' =' → logprob: -7.047322750091553
    5. ',' → logprob: -7.422322750091553
    6. '   ' → logprob: -7.672322750091553
    7. ' ' → logprob: -8.047323226928711
    8. ' .' → logprob: -9.172323226928711
    9. 'x' → logprob: -9.297323226928711
    10. '._' → logprob: -9.672323226928711

Token 571: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06462334096431732
    2. ' =' → logprob: -2.8146233558654785
    3. ',' → logprob: -5.9396233558654785
    4. '<|end|>' → logprob: -11.43962287902832
    5. '=x' → logprob: -12.68962287902832
    6. ' ' → logprob: -12.93962287902832
    7. ' ,' → logprob: -14.06462287902832
    8. ',x' → logprob: -14.43962287902832
    9. 'x' → logprob: -15.31462287902832
    10. '<|end|>' → logprob: -15.56462287902832

Token 572: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.836499985889532e-05
    2. ' x' → logprob: -9.7500581741333
    3. 'Fraction' → logprob: -18.875059127807617
    4. '	x' → logprob: -19.500059127807617
    5. '(x' → logprob: -22.375059127807617
    6. '   ' → logprob: -23.000059127807617
    7. '$x' → logprob: -23.000059127807617
    8. ' Fraction' → logprob: -23.250059127807617
    9. 'int' → logprob: -23.375059127807617
    10. ' ' → logprob: -23.500059127807617

Token 573: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.36466747522354126
    2. '<|end|>' → logprob: -1.8646674156188965
    3. ' x' → logprob: -2.1146674156188965
    4. '       ' → logprob: -4.6146674156188965
    5. ' ' → logprob: -4.7396674156188965
    6. '
' → logprob: -5.3646674156188965
    7. ' 
' → logprob: -6.6146674156188965
    8. 'self' → logprob: -6.7396674156188965
    9. '<|end|>' → logprob: -7.2396674156188965
    10. '   ' → logprob: -7.3646674156188965

Token 574: '       ' (ID: 309)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6276962757110596
    2. 'y' → logprob: -0.8776962757110596
    3. 'self' → logprob: -3.6276962757110596
    4. '       ' → logprob: -4.1276960372924805
    5. ' self' → logprob: -5.0026960372924805
    6. ',y' → logprob: -7.7526960372924805
    7. '   ' → logprob: -8.37769603729248
    8. 'x' → logprob: -8.62769603729248
    9. ',' → logprob: -9.37769603729248
    10. ' ' → logprob: -10.37769603729248

Token 575: ' self' (ID: 1051)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008655699901282787
    2. 'self' (adapté à ' self') → logprob: -4.758655548095703
    3. ' y' → logprob: -10.258655548095703
    4. ' self' → logprob: -12.008655548095703
    5. '   ' → logprob: -17.883655548095703
    6. '       ' → logprob: -18.758655548095703
    7. '	y' → logprob: -20.133655548095703
    8. ' ' → logprob: -21.383655548095703
    9. 'float' → logprob: -22.008655548095703
    10. '    ' → logprob: -22.258655548095703

Token 576: '.y' (ID: 4486)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7014808654785156
    2. ' x' → logprob: -0.9514808654785156
    3. 'y' → logprob: -3.4514808654785156
    4. ',' → logprob: -3.8264808654785156
    5. ' ' → logprob: -4.326480865478516
    6. '<|end|>' → logprob: -4.326480865478516
    7. '.' → logprob: -4.576480865478516
    8. '.x' → logprob: -4.701480865478516
    9. ' y' → logprob: -4.701480865478516
    10. ' ,' → logprob: -6.201480865478516

Token 577: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 578: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008614808320999146
    2. ' y' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.883614540100098
    4. 'x' → logprob: -16.008615493774414
    5. '	y' → logprob: -17.133615493774414
    6. '   ' → logprob: -17.258615493774414
    7. '  ' → logprob: -19.508615493774414
    8. 'Fraction' → logprob: -20.508615493774414
    9. '0' → logprob: -20.633615493774414
    10. '
' → logprob: -21.258615493774414

Token 579: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 580: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6423414945602417
    2. '<|end|>' → logprob: -0.8923414945602417
    3. ' def' → logprob: -3.5173416137695312
    4. 'def' → logprob: -3.8923416137695312
    5. '    
' → logprob: -5.517341613769531
    6. '	def' → logprob: -5.767341613769531
    7. ' ' → logprob: -5.892341613769531
    8. '       ' → logprob: -6.267341613769531
    9. '<|end|>' → logprob: -7.767341613769531
    10. '```' → logprob: -7.892341613769531

Token 581: ' super' (ID: 2539)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015062900492921472
    2. ' def' → logprob: -6.501506328582764
    3. '   ' → logprob: -13.751505851745605
    4. '<|end|>' → logprob: -13.751505851745605
    5. 'self' → logprob: -14.001505851745605
    6. '__' → logprob: -15.376505851745605
    7. '	def' → logprob: -15.501505851745605
    8. 'return' → logprob: -15.501505851745605
    9. ' ' → logprob: -16.251506805419922
    10. '
' → logprob: -16.376506805419922

Token 582: '().__' (ID: 57377)
  Prédit: '().__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().__' → logprob: -0.06322751939296722
    2. '()' → logprob: -2.813227415084839
    3. '().' → logprob: -6.688227653503418
    4. '(' → logprob: -11.938227653503418
    5. '()<' → logprob: -13.563227653503418
    6. '()>' → logprob: -13.688227653503418
    7. '();' → logprob: -14.063227653503418
    8. '()-' → logprob: -14.563227653503418
    9. '()</' → logprob: -14.688227653503418
    10. '()
' → logprob: -14.813227653503418

Token 583: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -8.41866585687967e-06
    2. '_init' → logprob: -12.250008583068848
    3. 'new' → logprob: -13.375008583068848
    4. '__' → logprob: -13.750008583068848
    5. ' init' → logprob: -14.625008583068848
    6. 'class' → logprob: -15.500008583068848
    7. '```' → logprob: -15.500008583068848
    8. 'ini' → logprob: -15.875008583068848
    9. '(init' → logprob: -17.87500762939453
    10. '().__' → logprob: -18.75000762939453

Token 584: '__()

' (ID: 165037)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11464249342679977
    2. '__' → logprob: -2.239642381668091
    3. ']()' → logprob: -6.48964262008667
    4. '_' → logprob: -9.114642143249512
    5. '`()' → logprob: -9.614642143249512
    6. '().__' → logprob: -9.864642143249512
    7. '>()' → logprob: -10.739642143249512
    8. '__()
' → logprob: -11.114642143249512
    9. '|()
' → logprob: -11.614642143249512
    10. '__()

' → logprob: -11.864642143249512

Token 585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2755383551120758
    2. ' def' → logprob: -1.9005383253097534
    3. 'def' → logprob: -2.900538444519043
    4. '<|end|>' → logprob: -3.900538444519043
    5. ' ' → logprob: -4.400538444519043
    6. '  ' → logprob: -6.525538444519043
    7. '+' → logprob: -6.775538444519043
    8. '    ' → logprob: -7.775538444519043
    9. '	def' → logprob: -8.025538444519043
    10. '    
' → logprob: -8.650538444519043

Token 586: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006264831870794296
    2. ' def' → logprob: -5.506264686584473
    3. '   ' → logprob: -6.131264686584473
    4. '	def' → logprob: -12.506264686584473
    5. '<|end|>' → logprob: -12.881264686584473
    6. ' ' → logprob: -13.131264686584473
    7. '  ' → logprob: -14.006264686584473
    8. '    
' → logprob: -14.506264686584473
    9. '```' → logprob: -16.50626564025879
    10. '_def' → logprob: -16.50626564025879

Token 587: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.026782648637890816
    2. ' __' → logprob: -3.651782751083374
    3. 'repr' → logprob: -8.276782989501953
    4. 'def' → logprob: -8.651782989501953
    5. 'add' → logprob: -11.526782989501953
    6. 'x' → logprob: -11.526782989501953
    7. ' ' → logprob: -11.651782989501953
    8. 'sub' → logprob: -11.776782989501953
    9. '```' → logprob: -11.776782989501953
    10. '.__' → logprob: -13.401782989501953

Token 588: 'add' (ID: 964)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.02326492965221405
    2. 'add' → logprob: -3.7732648849487305
    3. 'mul' → logprob: -11.02326488494873
    4. 'eq' → logprob: -13.27326488494873
    5. 'repr' → logprob: -14.27326488494873
    6. 'neg' → logprob: -14.52326488494873
    7. 'init' → logprob: -15.27326488494873
    8. ' sub' → logprob: -18.648265838623047
    9. 'pos' → logprob: -19.148265838623047
    10. '_sub' → logprob: -19.398265838623047

Token 589: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.002341281156986952
    2. '__' → logprob: -6.502341270446777
    3. '(self' → logprob: -7.127341270446777
    4. '(' → logprob: -10.877341270446777
    5. '__((' → logprob: -12.252341270446777
    6. '__(
' → logprob: -12.252341270446777
    7. '__('' → logprob: -13.002341270446777
    8. '_(' → logprob: -13.127341270446777
    9. '__(*' → logprob: -14.002341270446777
    10. ' (' → logprob: -14.127341270446777

Token 590: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.829823102336377e-05
    2. ' self' → logprob: -9.25009822845459
    3. 'def' → logprob: -13.87509822845459
    4. 'other' → logprob: -14.75009822845459
    5. '(self' → logprob: -15.12509822845459
    6. ' ' → logprob: -15.50009822845459
    7. '0' → logprob: -16.125099182128906
    8. '   ' → logprob: -16.250099182128906
    9. '1' → logprob: -16.375099182128906
    10. 's' → logprob: -17.000099182128906

Token 591: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.026877928525209427
    2. ' (' → logprob: -4.1518778800964355
    3. '(' → logprob: -5.2768778800964355
    4. ',' → logprob: -5.9018778800964355
    5. 'self' → logprob: -6.1518778800964355
    6. '<|end|>' → logprob: -7.9018778800964355
    7. ')' → logprob: -8.651878356933594
    8. ' ' → logprob: -9.651878356933594
    9. ')(' → logprob: -10.151878356933594
    10. '__(' → logprob: -10.151878356933594

Token 592: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.01815205067396164
    2. ' other' → logprob: -4.018152236938477
    3. 'self' → logprob: -13.893152236938477
    4. 'Other' → logprob: -14.393152236938477
    5. '_other' → logprob: -14.768152236938477
    6. '(other' → logprob: -16.518152236938477
    7. 'o' → logprob: -16.893152236938477
    8. '.other' → logprob: -17.143152236938477
    9. ' ' → logprob: -17.518152236938477
    10. 'oth' → logprob: -18.643152236938477

Token 593: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1052134707570076
    2. '):' → logprob: -2.6052134037017822
    3. '):
' → logprob: -4.230213642120361
    4. '<|end|>' → logprob: -5.230213642120361
    5. ':
' → logprob: -6.230213642120361
    6. '<|end|>' → logprob: -6.480213642120361
    7. '       ' → logprob: -6.730213642120361
    8. ',' → logprob: -8.480213165283203
    9. '   ' → logprob: -8.605213165283203
    10. ' :' → logprob: -8.730213165283203

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1126346588134766
    2. 'Vec' → logprob: -1.1126346588134766
    3. ' return' → logprob: -1.2376346588134766
    4. 'return' → logprob: -3.1126346588134766
    5. ' Vec' → logprob: -4.862634658813477
    6. '(Vec' → logprob: -9.612634658813477
    7. '   ' → logprob: -9.612634658813477
    8. 'Vector' → logprob: -9.862634658813477
    9. '	Vec' → logprob: -10.487634658813477
    10. '<Vec' → logprob: -10.612634658813477

Token 595: ' return' (ID: 622)
  Prédit: 'Vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vec' → logprob: -0.006736215204000473
    2. ' Vec' → logprob: -5.0067362785339355
    3. 'return' (adapté à ' return') → logprob: -11.006735801696777
    4. ' return' → logprob: -13.131735801696777
    5. 'Vector' → logprob: -14.006735801696777
    6. '(Vec' → logprob: -14.381735801696777
    7. '<Vec' → logprob: -14.631735801696777
    8. '	Vec' → logprob: -15.381735801696777
    9. '_vec' → logprob: -15.631735801696777
    10. 'vec' → logprob: -16.506736755371094

Token 596: ' Vec' (ID: 22915)
  Prédit: 'Vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vec' → logprob: -0.03804252669215202
    2. ' Vec' → logprob: -3.2880425453186035
    3. '	Vec' → logprob: -14.038042068481445
    4. 'Vector' → logprob: -16.413042068481445
    5. '(Vec' → logprob: -16.538042068481445
    6. '<Vec' → logprob: -17.163042068481445
    7. ' ' → logprob: -17.538042068481445
    8. 'Ve' → logprob: -18.163042068481445
    9. 'self' → logprob: -18.163042068481445
    10. '   ' → logprob: -18.663042068481445

Token 597: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.24179228907451e-05
    2. 'self' → logprob: -10.000061988830566
    3. '(' → logprob: -11.000061988830566
    4. '(
' → logprob: -15.500061988830566
    5. ' self' → logprob: -18.000062942504883
    6. '   ' → logprob: -20.125062942504883
    7. '	self' → logprob: -21.000062942504883
    8. '(this' → logprob: -21.250062942504883
    9. '((' → logprob: -21.375062942504883
    10. ' (' → logprob: -21.375062942504883

Token 598: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00023572170175611973
    2. '.' → logprob: -8.500235557556152
    3. 'x' → logprob: -10.375235557556152
    4. ' .' → logprob: -13.875235557556152
    5. ' ' → logprob: -17.87523651123047
    6. ').' → logprob: -18.25023651123047
    7. ' x' → logprob: -18.87523651123047
    8. '0' → logprob: -19.50023651123047
    9. '1' → logprob: -20.62523651123047
    10. '	x' → logprob: -20.62523651123047

Token 599: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16023021936416626
    2. '+' → logprob: -1.9102301597595215
    3. ',' → logprob: -12.16023063659668
    4. '+,' → logprob: -15.41023063659668
    5. ' ' → logprob: -15.66023063659668
    6. ' ,' → logprob: -15.91023063659668
    7. ' plus' → logprob: -16.41023063659668
    8. 'other' → logprob: -16.66023063659668
    9. ' other' → logprob: -16.66023063659668
    10. '+self' → logprob: -17.28523063659668

Token 600: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00861456897109747
    2. ' other' → logprob: -4.758614540100098
    3. ' ' → logprob: -20.133615493774414
    4. '(other' → logprob: -20.258615493774414
    5. '.other' → logprob: -20.383615493774414
    6. 'Other' → logprob: -22.133615493774414
    7. '_other' → logprob: -22.508615493774414
    8. '   ' → logprob: -23.508615493774414
    9. 'OTHER' → logprob: -24.508615493774414
    10. 'others' → logprob: -24.633615493774414

Token 601: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0001605115394340828
    2. '.' → logprob: -8.750160217285156
    3. 'x' → logprob: -13.625160217285156
    4. ' .' → logprob: -14.125160217285156
    5. ',' → logprob: -18.125160217285156
    6. '.
' → logprob: -18.875160217285156
    7. ',x' → logprob: -20.000160217285156
    8. ' ' → logprob: -20.125160217285156
    9. '	x' → logprob: -20.250160217285156
    10. '.gridx' → logprob: -20.375160217285156

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.2987729102605954e-05
    2. ' ,' → logprob: -10.125042915344238
    3. ',self' → logprob: -13.125042915344238
    4. ',
' → logprob: -14.000042915344238
    5. ',

' → logprob: -20.125043869018555
    6. 'self' → logprob: -20.250043869018555
    7. '       ' → logprob: -20.250043869018555
    8. '   ' → logprob: -20.625043869018555
    9. ',y' → logprob: -20.750043869018555
    10. '‌,' → logprob: -20.875043869018555

Token 603: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5760966539382935
    2. 'self' → logprob: -0.8260966539382935
    3. ' other' → logprob: -8.826096534729004
    4. 'other' → logprob: -11.576096534729004
    5. '        ' → logprob: -15.201096534729004
    6. '       ' → logprob: -15.201096534729004
    7. ' ' → logprob: -15.326096534729004
    8. '(self' → logprob: -16.20109748840332
    9. '	self' → logprob: -16.45109748840332
    10. '    ' → logprob: -16.95109748840332

Token 604: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0020044150296598673
    2. 'y' → logprob: -6.252004623413086
    3. '.' → logprob: -9.502004623413086
    4. ' y' → logprob: -14.252004623413086
    5. '	y' → logprob: -15.752004623413086
    6. ' .' → logprob: -15.877004623413086
    7. ' ' → logprob: -17.002004623413086
    8. ''y' → logprob: -17.502004623413086
    9. '.x' → logprob: -17.627004623413086
    10. '_y' → logprob: -17.877004623413086

Token 605: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740805923938751
    2. '+' → logprob: -0.9740805625915527
    3. '+y' → logprob: -12.724081039428711
    4. '+self' → logprob: -14.974081039428711
    5. ' other' → logprob: -15.974081039428711
    6. ' ' → logprob: -16.09908103942871
    7. 'y' → logprob: -17.72408103942871
    8. '+
' → logprob: -17.72408103942871
    9. ' +
' → logprob: -18.09908103942871
    10. '   ' → logprob: -18.34908103942871

Token 606: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0019287518225610256
    2. ' other' → logprob: -6.251928806304932
    3. '(other' → logprob: -16.501928329467773
    4. '.other' → logprob: -19.376928329467773
    5. 'Other' → logprob: -19.626928329467773
    6. 'self' → logprob: -19.876928329467773
    7. '_other' → logprob: -20.751928329467773
    8. ' ' → logprob: -21.501928329467773
    9. '   ' → logprob: -21.876928329467773
    10. '       ' → logprob: -22.626928329467773

Token 607: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.31352242827415466
    2. '.y' → logprob: -1.313522458076477
    3. ' y' → logprob: -8.438522338867188
    4. 'other' → logprob: -11.188522338867188
    5. ')' → logprob: -11.438522338867188
    6. '.' → logprob: -11.813522338867188
    7. '.x' → logprob: -13.063522338867188
    8. ' ' → logprob: -13.438522338867188
    9. ' other' → logprob: -13.563522338867188
    10. 'x' → logprob: -13.688522338867188

Token 608: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ')
' → logprob: -12.125007629394531
    3. '   ' → logprob: -13.875007629394531
    4. ')

' → logprob: -14.625007629394531
    5. ' )' → logprob: -15.125007629394531
    6. '<|end|>' → logprob: -17.25000762939453
    7. '       ' → logprob: -17.62500762939453
    8. '),' → logprob: -17.62500762939453
    9. ')return' → logprob: -18.75000762939453
    10. ').' → logprob: -19.87500762939453

Token 609: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020473919808864594
    2. '```' → logprob: -4.520473957061768
    3. '<|end|>' → logprob: -5.145473957061768
    4. ' ' → logprob: -6.145473957061768
    5. '  ' → logprob: -7.520473957061768
    6. 'def' → logprob: -8.02047348022461
    7. '    ' → logprob: -9.02047348022461
    8. ' def' → logprob: -9.64547348022461
    9. '  
' → logprob: -9.89547348022461
    10. '
' → logprob: -10.02047348022461

Token 610: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.19256530702114105
    2. '   ' → logprob: -2.0675652027130127
    3. ' def' → logprob: -3.5675652027130127
    4. ' ' → logprob: -4.317565441131592
    5. '```' → logprob: -5.817565441131592
    6. '
' → logprob: -6.442565441131592
    7. '<|end|>' → logprob: -6.567565441131592
    8. '    
' → logprob: -7.817565441131592
    9. '  
' → logprob: -8.317564964294434
    10. '  ' → logprob: -8.817564964294434

Token 611: ' __' (ID: 2516)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.29036441445350647
    2. '__' → logprob: -1.540364384651184
    3. ' __' → logprob: -3.2903645038604736
    4. '_sub' → logprob: -7.9153642654418945
    5. 'def' → logprob: -9.540364265441895
    6. ' sub' → logprob: -10.790364265441895
    7. ' ' → logprob: -12.415364265441895
    8. ' def' → logprob: -14.040364265441895
    9. '   ' → logprob: -14.040364265441895
    10. 'subtract' → logprob: -14.290364265441895

Token 612: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.000553151941858232
    2. 'mul' → logprob: -7.500553131103516
    3. 'neg' → logprob: -15.875553131103516
    4. '_sub' → logprob: -16.875553131103516
    5. 'r' → logprob: -17.500553131103516
    6. 'eq' → logprob: -17.625553131103516
    7. 'rm' → logprob: -17.875553131103516
    8. 'Sub' → logprob: -18.875553131103516
    9. ' sub' → logprob: -19.250553131103516
    10. 'mult' → logprob: -20.000553131103516

Token 613: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.000685391016304493
    2. '__' → logprob: -7.625685214996338
    3. '(' → logprob: -9.000685691833496
    4. '(self' → logprob: -10.250685691833496
    5. '__(
' → logprob: -10.875685691833496
    6. '__((' → logprob: -11.000685691833496
    7. '__('' → logprob: -13.125685691833496
    8. '__("' → logprob: -14.500685691833496
    9. '__(*' → logprob: -14.750685691833496
    10. 'self' → logprob: -16.50068473815918

Token 614: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011081892065703869
    2. 'other' → logprob: -4.511081695556641
    3. ' self' → logprob: -11.01108169555664
    4. '(self' → logprob: -11.76108169555664
    5. ' other' → logprob: -11.88608169555664
    6. '(other' → logprob: -13.01108169555664
    7. 'Other' → logprob: -14.38608169555664
    8. '(' → logprob: -15.63608169555664
    9. '_other' → logprob: -19.01108169555664
    10. '__(' → logprob: -19.51108169555664

Token 615: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3870932459831238
    2. ',' → logprob: -1.5120933055877686
    3. '(' → logprob: -2.5120933055877686
    4. '__(' → logprob: -4.0120930671691895
    5. 'self' → logprob: -7.1370930671691895
    6. ' (' → logprob: -8.137093544006348
    7. '__' → logprob: -9.262093544006348
    8. '(other' → logprob: -9.762093544006348
    9. '__,' → logprob: -10.137093544006348
    10. ')(' → logprob: -11.387093544006348

Token 616: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.47407814860343933
    2. ' other' → logprob: -0.9740781784057617
    3. 'Other' → logprob: -14.474078178405762
    4. 'self' → logprob: -14.474078178405762
    5. '(other' → logprob: -16.224077224731445
    6. ' self' → logprob: -19.224077224731445
    7. '_other' → logprob: -19.849077224731445
    8. '.other' → logprob: -19.974077224731445
    9. '其他' → logprob: -22.599077224731445
    10. ' Other' → logprob: -23.224077224731445

Token 617: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039706481038592756
    2. ' ,' → logprob: -8.375396728515625
    3. '(' → logprob: -10.250396728515625
    4. '       ' → logprob: -10.375396728515625
    5. ')' → logprob: -10.500396728515625
    6. '):
' → logprob: -11.000396728515625
    7. '<|end|>' → logprob: -11.375396728515625
    8. '   ' → logprob: -11.625396728515625
    9. ',
' → logprob: -11.750396728515625
    10. '):' → logprob: -11.875396728515625

Token 618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016594598069787025
    2. ' return' → logprob: -4.141594409942627
    3. 'return' → logprob: -7.516594409942627
    4. '   ' → logprob: -11.516594886779785
    5. ' ' → logprob: -13.516594886779785
    6. '{return' → logprob: -14.266594886779785
    7. '<|end|>' → logprob: -14.266594886779785
    8. 'Vec' → logprob: -14.391594886779785
    9. '      ' → logprob: -14.391594886779785
    10. '	return' → logprob: -14.516594886779785

Token 619: ' return' (ID: 622)
  Prédit: 'Vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vec' → logprob: -0.8144511580467224
    2. 'return' (adapté à ' return') → logprob: -1.0644512176513672
    3. ' return' → logprob: -1.5644512176513672
    4. ' Vec' → logprob: -5.814451217651367
    5. 'Return' → logprob: -12.064451217651367
    6. 'Vector' → logprob: -12.439451217651367
    7. '       ' → logprob: -13.064451217651367
    8. ' ' → logprob: -14.064451217651367
    9. '   ' → logprob: -14.189451217651367
    10. '	Vec' → logprob: -16.314451217651367

Token 620: ' Vec' (ID: 22915)
  Prédit: 'Vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vec' → logprob: -0.0004306692280806601
    2. ' Vec' → logprob: -7.750430583953857
    3. '	Vec' → logprob: -17.250431060791016
    4. 'Vector' → logprob: -20.125431060791016
    5. '(Vec' → logprob: -20.750431060791016
    6. ' ' → logprob: -21.625431060791016
    7. '<Vec' → logprob: -21.750431060791016
    8. '_vec' → logprob: -22.500431060791016
    9. 'Ve' → logprob: -23.375431060791016
    10. 'vec' → logprob: -24.000431060791016

Token 621: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1756367712223437e-05
    2. 'self' → logprob: -11.750011444091797
    3. '(' → logprob: -12.500011444091797
    4. '(
' → logprob: -18.375011444091797
    5. '(Self' → logprob: -18.500011444091797
    6. ' self' → logprob: -19.500011444091797
    7. '(this' → logprob: -19.875011444091797
    8. '[self' → logprob: -19.875011444091797
    9. '(other' → logprob: -20.000011444091797
    10. ' (' → logprob: -20.500011444091797

Token 622: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.018430152907967567
    2. '.' → logprob: -4.018430233001709
    3. 'x' → logprob: -8.39342975616455
    4. ' .' → logprob: -9.89342975616455
    5. '<|end|>' → logprob: -14.01842975616455
    6. ' x' → logprob: -14.64342975616455
    7. ' ' → logprob: -15.26842975616455
    8. '   ' → logprob: -15.26842975616455
    9. ',' → logprob: -15.26842975616455
    10. '.py' → logprob: -15.39342975616455

Token 623: ' -' (ID: 533)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.12218073755502701
    2. '.' → logprob: -2.747180700302124
    3. '-' → logprob: -3.872180700302124
    4. ' -' → logprob: -4.372180938720703
    5. '.other' → logprob: -5.122180938720703
    6. 'x' → logprob: -5.747180938720703
    7. ' .' → logprob: -6.122180938720703
    8. 'other' → logprob: -6.247180938720703
    9. '.y' → logprob: -6.497180938720703
    10. ' other' → logprob: -6.622180938720703

Token 624: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.029750604182481766
    2. ' other' → logprob: -3.5297505855560303
    3. '(other' → logprob: -16.52975082397461
    4. 'Other' → logprob: -18.27975082397461
    5. '.other' → logprob: -18.52975082397461
    6. '_other' → logprob: -19.77975082397461
    7. 'self' → logprob: -22.15475082397461
    8. '其他' → logprob: -23.40475082397461
    9. 'OTHER' → logprob: -23.90475082397461
    10. '-other' → logprob: -24.77975082397461

Token 625: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0019869250245392323
    2. '.' → logprob: -6.251986980438232
    3. '.other' → logprob: -10.751986503601074
    4. 'x' → logprob: -10.876986503601074
    5. ' .' → logprob: -11.376986503601074
    6. 'other' → logprob: -12.001986503601074
    7. ' other' → logprob: -15.501986503601074
    8. ' ' → logprob: -16.62698745727539
    9. ' x' → logprob: -16.87698745727539
    10. 'Other' → logprob: -16.87698745727539

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002700377081055194
    2. ' ,' → logprob: -8.250269889831543
    3. '.x' → logprob: -11.875269889831543
    4. '.' → logprob: -14.250269889831543
    5. ')' → logprob: -14.625269889831543
    6. ',
' → logprob: -16.00027084350586
    7. '),' → logprob: -16.50027084350586
    8. 'x' → logprob: -16.50027084350586
    9. ' .' → logprob: -16.62527084350586
    10. ',x' → logprob: -16.62527084350586

Token 627: ' self' (ID: 1051)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.029750484973192215
    2. ' other' → logprob: -3.5297505855560303
    3. '(other' → logprob: -17.77975082397461
    4. 'Other' → logprob: -18.40475082397461
    5. 'self' → logprob: -19.02975082397461
    6. '.other' → logprob: -20.02975082397461
    7. '_other' → logprob: -20.77975082397461
    8. ' ' → logprob: -23.27975082397461
    9. ' self' → logprob: -23.90475082397461
    10. 'OTHER' → logprob: -24.15475082397461

Token 628: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.000742207164876163
    2. '.' → logprob: -7.250742435455322
    3. '.x' → logprob: -10.875741958618164
    4. 'y' → logprob: -11.375741958618164
    5. ' .' → logprob: -13.875741958618164
    6. '1' → logprob: -15.500741958618164
    7. '..' → logprob: -15.500741958618164
    8. '```' → logprob: -16.000741958618164
    9. '-' → logprob: -16.375741958618164
    10. '[' → logprob: -16.500741958618164

Token 629: ' -' (ID: 533)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.01731012389063835
    2. 'y' → logprob: -4.14231014251709
    3. '.' → logprob: -6.89231014251709
    4. ')' → logprob: -9.26731014251709
    5. '-' → logprob: -10.01731014251709
    6. ' ' → logprob: -10.14231014251709
    7. ' y' → logprob: -10.14231014251709
    8. '<|end|>' → logprob: -11.14231014251709
    9. ',' → logprob: -12.01731014251709
    10. 'Y' → logprob: -12.26731014251709

Token 630: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0009114635176956654
    2. ' other' → logprob: -7.000911235809326
    3. '(other' → logprob: -19.375911712646484
    4. '.other' → logprob: -20.625911712646484
    5. 'Other' → logprob: -21.000911712646484
    6. 'self' → logprob: -22.750911712646484
    7. '_other' → logprob: -23.500911712646484
    8. ' ' → logprob: -24.125911712646484
    9. 'OTHER' → logprob: -24.250911712646484
    10. '其他' → logprob: -25.250911712646484

Token 631: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00010926496179308742
    2. '.x' → logprob: -9.875109672546387
    3. 'y' → logprob: -10.125109672546387
    4. '.' → logprob: -11.000109672546387
    5. ' .' → logprob: -14.750109672546387
    6. ' y' → logprob: -16.25010871887207
    7. '1' → logprob: -16.50010871887207
    8. '	y' → logprob: -16.62510871887207
    9. 'other' → logprob: -17.00010871887207
    10. ' ' → logprob: -17.25010871887207

Token 632: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001421068562194705
    2. '<|end|>' → logprob: -6.751420974731445
    3. '       ' → logprob: -9.001420974731445
    4. '   ' → logprob: -10.251420974731445
    5. ')return' → logprob: -10.376420974731445
    6. '(' → logprob: -10.876420974731445
    7. '<|end|>' → logprob: -11.751420974731445
    8. ')
' → logprob: -12.001420974731445
    9. '())' → logprob: -12.626420974731445
    10. 'def' → logprob: -12.751420974731445

Token 633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004230004735291004
    2. '```' → logprob: -6.12923002243042
    3. 'def' → logprob: -7.50423002243042
    4. ':' → logprob: -8.254229545593262
    5. '  ' → logprob: -8.379229545593262
    6. '<|end|>' → logprob: -8.379229545593262
    7. ' ' → logprob: -8.504229545593262
    8. ' def' → logprob: -8.504229545593262
    9. '
' → logprob: -9.004229545593262
    10. '    
' → logprob: -9.129229545593262

Token 634: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.09213794767856598
    2. '   ' → logprob: -2.4671380519866943
    3. ' def' → logprob: -6.467137813568115
    4. ' ' → logprob: -7.217137813568115
    5. '```' → logprob: -7.342137813568115
    6. '  ' → logprob: -8.592138290405273
    7. '__' → logprob: -10.967138290405273
    8. '	def' → logprob: -11.217138290405273
    9. '    
' → logprob: -11.967138290405273
    10. '*' → logprob: -12.092138290405273

Token 635: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005592276575043797
    2. ' __' → logprob: -7.500559329986572
    3. 'cross' → logprob: -12.125558853149414
    4. '.__' → logprob: -14.375558853149414
    5. ' ' → logprob: -16.000558853149414
    6. 'mul' → logprob: -17.750558853149414
    7. '___' → logprob: -18.000558853149414
    8. ' cross' → logprob: -18.125558853149414
    9. 'def' → logprob: -18.500558853149414
    10. '_cross' → logprob: -18.625558853149414

Token 636: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.000158842682139948
    2. 'rm' → logprob: -8.75015926361084
    3. 'eq' → logprob: -14.75015926361084
    4. 'neg' → logprob: -17.125158309936523
    5. 'repr' → logprob: -18.125158309936523
    6. ' mul' → logprob: -18.625158309936523
    7. 'multip' → logprob: -18.875158309936523
    8. 'mult' → logprob: -19.000158309936523
    9. 'abs' → logprob: -20.000158309936523
    10. 'Mul' → logprob: -20.375158309936523

Token 637: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07122402638196945
    2. '__(' → logprob: -2.9462239742279053
    3. '(' → logprob: -4.446224212646484
    4. ' (' → logprob: -5.446224212646484
    5. 'self' → logprob: -9.446224212646484
    6. ' ' → logprob: -10.696224212646484
    7. '__' → logprob: -10.821224212646484
    8. '_(' → logprob: -11.071224212646484
    9. '<|end|>' → logprob: -11.196224212646484
    10. '```' → logprob: -12.446224212646484

Token 638: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.490809417096898e-05
    2. ' self' → logprob: -10.000055313110352
    3. '(self' → logprob: -12.000055313110352
    4. '1' → logprob: -13.875055313110352
    5. ' ' → logprob: -14.250055313110352
    6. 'fraction' → logprob: -14.625055313110352
    7. '0' → logprob: -15.125055313110352
    8. '
' → logprob: -15.375055313110352
    9. '   ' → logprob: -15.750055313110352
    10. 's' → logprob: -16.37505531311035

Token 639: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.028840109705924988
    2. '(' → logprob: -3.6538400650024414
    3. ' (' → logprob: -6.653840065002441
    4. 'self' → logprob: -6.903840065002441
    5. '__(' → logprob: -8.528840065002441
    6. '```' → logprob: -11.653840065002441
    7. '<|end|>' → logprob: -11.778840065002441
    8. '(s' → logprob: -12.153840065002441
    9. '
' → logprob: -12.278840065002441
    10. ' self' → logprob: -12.528840065002441

Token 640: ' scalar' (ID: 35065)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.017757000401616096
    2. 'self' → logprob: -4.517756938934326
    3. ' other' → logprob: -5.017756938934326
    4. ' self' → logprob: -9.642757415771484
    5. 'scalar' → logprob: -13.642757415771484
    6. ' ' → logprob: -14.142757415771484
    7. 'fraction' → logprob: -15.642757415771484
    8. 'Other' → logprob: -15.892757415771484
    9. ' scalar' → logprob: -16.267757415771484
    10. 'int' → logprob: -16.517757415771484

Token 641: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4443094730377197
    2. ',' → logprob: -1.1943094730377197
    3. 'self' → logprob: -3.6943094730377197
    4. '<|end|>' → logprob: -4.444309234619141
    5. ' (' → logprob: -4.944309234619141
    6. ' self' → logprob: -5.194309234619141
    7. '(' → logprob: -5.319309234619141
    8. ')' → logprob: -6.944309234619141
    9. ',self' → logprob: -8.94430923461914
    10. ' ,' → logprob: -9.06930923461914

Token 642: '       ' (ID: 309)
  Prédit: 'Vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vec' → logprob: -0.09860315918922424
    2. 'return' → logprob: -2.5986032485961914
    3. ' return' → logprob: -4.098603248596191
    4. ' Vec' → logprob: -5.848603248596191
    5. '   ' → logprob: -10.723603248596191
    6. '       ' → logprob: -12.098603248596191
    7. '	Vec' → logprob: -12.098603248596191
    8. '(Vec' → logprob: -12.348603248596191
    9. 'Vector' → logprob: -13.098603248596191
    10. 'Return' → logprob: -14.848603248596191

Token 643: ' return' (ID: 622)
  Prédit: 'Vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vec' → logprob: -0.04952149838209152
    2. 'return' (adapté à ' return') → logprob: -3.0495214462280273
    3. ' Vec' → logprob: -7.674521446228027
    4. ' return' → logprob: -7.674521446228027
    5. 'Vector' → logprob: -13.549521446228027
    6. '   ' → logprob: -13.674521446228027
    7. '       ' → logprob: -14.049521446228027
    8. '	Vec' → logprob: -14.049521446228027
    9. 'Return' → logprob: -14.799521446228027
    10. 'vec' → logprob: -16.299522399902344

Token 644: ' Vec' (ID: 22915)
  Prédit: 'Vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vec' → logprob: -0.006717863027006388
    2. ' Vec' → logprob: -5.006717681884766
    3. '	Vec' → logprob: -13.131717681884766
    4. '(Vec' → logprob: -15.131717681884766
    5. 'Vector' → logprob: -15.881717681884766
    6. ' ' → logprob: -17.131717681884766
    7. '   ' → logprob: -17.506717681884766
    8. '<Vec' → logprob: -17.631717681884766
    9. 'vec' → logprob: -18.256717681884766
    10. 'Ve' → logprob: -18.631717681884766

Token 645: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014212163165211678
    2. 'self' → logprob: -4.264212131500244
    3. 'int' → logprob: -10.514212608337402
    4. '(int' → logprob: -11.389212608337402
    5. '(' → logprob: -11.514212608337402
    6. ' self' → logprob: -15.889212608337402
    7. '(
' → logprob: -16.014211654663086
    8. '(round' → logprob: -17.139211654663086
    9. '   ' → logprob: -17.639211654663086
    10. '       ' → logprob: -17.764211654663086

Token 646: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00019901065388694406
    2. '.' → logprob: -8.875199317932129
    3. 'x' → logprob: -9.750199317932129
    4. ' .' → logprob: -14.250199317932129
    5. ' ' → logprob: -16.750198364257812
    6. '0' → logprob: -18.125198364257812
    7. ' x' → logprob: -18.250198364257812
    8. '.s' → logprob: -18.750198364257812
    9. 'scalar' → logprob: -19.000198364257812
    10. '.scalar' → logprob: -19.000198364257812

Token 647: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10020678490400314
    2. '*' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.60020637512207
    4. '*object' → logprob: -17.10020637512207
    5. ' scalar' → logprob: -18.47520637512207
    6. 'scalar' → logprob: -19.47520637512207
    7. ' ' → logprob: -19.72520637512207
    8. ')' → logprob: -20.10020637512207
    9. '*s' → logprob: -20.47520637512207
    10. '**' → logprob: -20.97520637512207

Token 648: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.00033546582562848926
    2. ' scalar' → logprob: -8.000335693359375
    3. '.scalar' → logprob: -20.000335693359375
    4. 'scale' → logprob: -20.500335693359375
    5. 'sc' → logprob: -20.625335693359375
    6. 'static' → logprob: -21.000335693359375
    7. 'scala' → logprob: -21.000335693359375
    8. 'symbol' → logprob: -21.375335693359375
    9. 'scaled' → logprob: -21.375335693359375
    10. 's' → logprob: -21.375335693359375

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.165027217415627e-05
    2. ' ,' → logprob: -10.750021934509277
    3. 'scalar' → logprob: -16.50002098083496
    4. ',
' → logprob: -17.12502098083496
    5. ',s' → logprob: -17.50002098083496
    6. ')' → logprob: -17.50002098083496
    7. ',float' → logprob: -17.62502098083496
    8. '.scalar' → logprob: -18.00002098083496
    9. ',y' → logprob: -18.12502098083496
    10. ',int' → logprob: -18.25002098083496

Token 650: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003357006062287837
    2. ' self' → logprob: -8.000335693359375
    3. '       ' → logprob: -15.750335693359375
    4. 'int' → logprob: -17.375335693359375
    5. '   ' → logprob: -17.875335693359375
    6. '	self' → logprob: -19.250335693359375
    7. ' ' → logprob: -19.500335693359375
    8. '(self' → logprob: -19.625335693359375
    9. '     ' → logprob: -20.625335693359375
    10. 'scalar' → logprob: -20.875335693359375

Token 651: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07893253117799759
    2. '.y' → logprob: -2.578932523727417
    3. ' y' → logprob: -10.453932762145996
    4. 'scalar' → logprob: -11.703932762145996
    5. '.' → logprob: -12.953932762145996
    6. 's' → logprob: -13.453932762145996
    7. 'Y' → logprob: -13.953932762145996
    8. '	y' → logprob: -14.828932762145996
    9. '_y' → logprob: -15.453932762145996
    10. ' ' → logprob: -16.07893180847168

Token 652: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.75990891456604
    2. '*' → logprob: -0.88490891456604
    3. 'y' → logprob: -2.50990891456604
    4. ' y' → logprob: -3.50990891456604
    5. '*y' → logprob: -5.259908676147461
    6. ' ' → logprob: -6.009908676147461
    7. '.y' → logprob: -7.384908676147461
    8. ' scalar' → logprob: -10.259908676147461
    9. 'scalar' → logprob: -11.259908676147461
    10. ')' → logprob: -11.509908676147461

Token 653: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.0005532711511477828
    2. ' scalar' → logprob: -7.500553131103516
    3. '.scalar' → logprob: -15.375553131103516
    4. 'y' → logprob: -17.875553131103516
    5. ' ' → logprob: -18.375553131103516
    6. '   ' → logprob: -18.750553131103516
    7. 's' → logprob: -19.125553131103516
    8. 'x' → logprob: -20.250553131103516
    9. 'scaled' → logprob: -20.500553131103516
    10. 'symbol' → logprob: -20.500553131103516

Token 654: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013598784571513534
    2. ',' → logprob: -6.626359939575195
    3. '<|end|>' → logprob: -10.501359939575195
    4. ' )' → logprob: -13.001359939575195
    5. ')
' → logprob: -13.501359939575195
    6. '),' → logprob: -13.876359939575195
    7. '<|end|>' → logprob: -14.876359939575195
    8. '*' → logprob: -15.251359939575195
    9. ',)' → logprob: -15.376359939575195
    10. '}' → logprob: -15.501359939575195

Token 655: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01168380118906498
    2. 'def' → logprob: -4.636683940887451
    3. ' def' → logprob: -6.511683940887451
    4. ' ' → logprob: -7.886683940887451
    5. '```' → logprob: -9.886683464050293
    6. '  ' → logprob: -11.886683464050293
    7. '	def' → logprob: -13.136683464050293
    8. '       ' → logprob: -14.011683464050293
    9. '[' → logprob: -14.136683464050293
    10. '(' → logprob: -14.636683464050293

Token 656: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00034702493576332927
    2. '   ' → logprob: -8.625347137451172
    3. ' def' → logprob: -8.750347137451172
    4. ' ' → logprob: -12.125347137451172
    5. '__' → logprob: -12.875347137451172
    6. '```' → logprob: -15.000347137451172
    7. '  ' → logprob: -15.750347137451172
    8. '	def' → logprob: -15.750347137451172
    9. '<|end|>' → logprob: -15.750347137451172
    10. 'return' → logprob: -15.875347137451172

Token 657: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06197340786457062
    2. ' __' → logprob: -2.8119733333587646
    3. ' ' → logprob: -12.436973571777344
    4. '.__' → logprob: -13.936973571777344
    5. '   ' → logprob: -15.186973571777344
    6. '/__' → logprob: -15.561973571777344
    7. '___' → logprob: -15.686973571777344
    8. '```' → logprob: -15.936973571777344
    9. 'def' → logprob: -16.061973571777344
    10. 'mul' → logprob: -16.561973571777344

Token 658: 'rm' (ID: 21373)
  Prédit: 'rm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -2.951771421066951e-05
    2. 'tr' → logprob: -10.750029563903809
    3. 'mul' → logprob: -12.125029563903809
    4. 'eq' → logprob: -13.250029563903809
    5. 'flo' → logprob: -15.375029563903809
    6. 'imul' → logprob: -15.500029563903809
    7. 'repr' → logprob: -15.750029563903809
    8. 'rf' → logprob: -16.625028610229492
    9. 'neg' → logprob: -16.875028610229492
    10. ' rm' → logprob: -17.625028610229492

Token 659: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.1472419600977446e-06
    2. 'ult' → logprob: -13.750000953674316
    3. 'ultiply' → logprob: -18.750001907348633
    4. 'ulit' → logprob: -19.500001907348633
    5. 'u' → logprob: -20.375001907348633
    6. 'at' → logprob: -21.750001907348633
    7. 'ул' → logprob: -22.125001907348633
    8. 'ulf' → logprob: -22.875001907348633
    9. '<ul' → logprob: -23.000001907348633
    10. 'ull' → logprob: -23.000001907348633

Token 660: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.023255378007888794
    2. '__' → logprob: -3.7732553482055664
    3. '(' → logprob: -11.898255348205566
    4. '(self' → logprob: -14.023255348205566
    5. '__((' → logprob: -14.148255348205566
    6. '__(
' → logprob: -14.273255348205566
    7. '__(*' → logprob: -14.648255348205566
    8. '__('' → logprob: -15.148255348205566
    9. 'self' → logprob: -16.398256301879883
    10. '_(' → logprob: -16.523256301879883

Token 661: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.8325677703833207e-05
    2. ' self' → logprob: -10.625028610229492
    3. 'def' → logprob: -12.625028610229492
    4. 'scalar' → logprob: -14.500028610229492
    5. '(self' → logprob: -16.500028610229492
    6. '   ' → logprob: -16.750028610229492
    7. ' ' → logprob: -17.500028610229492
    8. '1' → logprob: -18.000028610229492
    9. 's' → logprob: -18.625028610229492
    10. '0' → logprob: -20.125028610229492

Token 662: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01899280585348606
    2. 'self' → logprob: -4.518992900848389
    3. '(self' → logprob: -5.268992900848389
    4. '__' → logprob: -6.518992900848389
    5. '(' → logprob: -6.893992900848389
    6. '__,' → logprob: -9.26899242401123
    7. ',' → logprob: -9.26899242401123
    8. '__(
' → logprob: -10.26899242401123
    9. '__(*' → logprob: -11.26899242401123
    10. '_(' → logprob: -11.64399242401123

Token 663: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.030016480013728142
    2. ' scalar' → logprob: -4.1550164222717285
    3. 'self' → logprob: -4.2800164222717285
    4. ' self' → logprob: -10.655016899108887
    5. 'other' → logprob: -11.030016899108887
    6. 'Scalar' → logprob: -13.905016899108887
    7. '.scalar' → logprob: -14.405016899108887
    8. ' other' → logprob: -15.030016899108887
    9. '_scalar' → logprob: -15.405016899108887
    10. 's' → logprob: -15.780016899108887

Token 664: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7080626487731934
    2. '(self' → logprob: -0.8330626487731934
    3. 'self' → logprob: -3.2080626487731934
    4. ')' → logprob: -3.7080626487731934
    5. '   ' → logprob: -5.958062648773193
    6. ' self' → logprob: -6.333062648773193
    7. '       ' → logprob: -7.333062648773193
    8. ' (' → logprob: -7.458062648773193
    9. '):
' → logprob: -7.583062648773193
    10. '(' → logprob: -8.083063125610352

Token 665: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5646934509277344
    2. '       ' → logprob: -1.3146934509277344
    3. 'return' → logprob: -1.8146934509277344
    4. '	return' → logprob: -11.814693450927734
    5. '   ' → logprob: -12.064693450927734
    6. 'def' → logprob: -12.564693450927734
    7. '{return' → logprob: -12.939693450927734
    8. ':return' → logprob: -13.939693450927734
    9. ' def' → logprob: -15.064693450927734
    10. '```' → logprob: -15.064693450927734

Token 666: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.029753616079688072
    2. ' return' → logprob: -3.5297536849975586
    3. 'def' → logprob: -12.779753684997559
    4. '   ' → logprob: -14.904753684997559
    5. '       ' → logprob: -18.029752731323242
    6. '	return' → logprob: -18.779752731323242
    7. ' def' → logprob: -19.404752731323242
    8. 'self' → logprob: -20.279752731323242
    9. '{return' → logprob: -20.404752731323242
    10. ':return' → logprob: -20.654752731323242

Token 667: ' Vec' (ID: 22915)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6652719378471375
    2. 'Vec' → logprob: -0.7902719378471375
    3. ' self' → logprob: -3.6652719974517822
    4. ' Vec' → logprob: -5.040271759033203
    5. 'Vector' → logprob: -10.040271759033203
    6. '(self' → logprob: -12.165271759033203
    7. '__' → logprob: -12.415271759033203
    8. '_vec' → logprob: -12.415271759033203
    9. 'vec' → logprob: -12.540271759033203
    10. '	Vec' → logprob: -12.540271759033203

Token 668: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31391075253486633
    2. '(self' → logprob: -1.313910722732544
    3. ' self' → logprob: -7.813910961151123
    4. '__' → logprob: -8.563910484313965
    5. 'def' → logprob: -10.188910484313965
    6. '*self' → logprob: -12.063910484313965
    7. '(' → logprob: -12.813910484313965
    8. '.__' → logprob: -13.188910484313965
    9. '	self' → logprob: -13.438910484313965
    10. '   ' → logprob: -13.813910484313965

Token 669: '.x' (ID: 3700)
  Prédit: '.__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.013709614984691143
    2. '.x' → logprob: -4.763709545135498
    3. '__' → logprob: -5.513709545135498
    4. 'x' → logprob: -7.138709545135498
    5. '*' → logprob: -8.513710021972656
    6. '.' → logprob: -10.888710021972656
    7. ' __' → logprob: -11.638710021972656
    8. '   ' → logprob: -12.263710021972656
    9. ').__' → logprob: -12.263710021972656
    10. ' ' → logprob: -12.638710021972656

Token 670: ' *' (ID: 425)
  Prédit: '.__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.7857854962348938
    2. '*' → logprob: -1.160785436630249
    3. ' __' → logprob: -2.910785436630249
    4. 'x' → logprob: -2.910785436630249
    5. ' *' → logprob: -3.035785436630249
    6. '__' → logprob: -3.285785436630249
    7. '.x' → logprob: -3.660785436630249
    8. ' x' → logprob: -5.410785675048828
    9. ' ' → logprob: -6.785785675048828
    10. 'mul' → logprob: -7.035785675048828

Token 671: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.029750484973192215
    2. ' scalar' → logprob: -3.5297505855560303
    3. '.scalar' → logprob: -17.52975082397461
    4. '_scalar' → logprob: -20.52975082397461
    5. 'sc' → logprob: -20.77975082397461
    6. 'self' → logprob: -21.02975082397461
    7. 's' → logprob: -21.65475082397461
    8. 'scale' → logprob: -21.77975082397461
    9. 'Scalar' → logprob: -22.15475082397461
    10. ' ' → logprob: -22.27975082397461

Token 672: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044032474397681653
    2. ' scalar' → logprob: -8.12544059753418
    3. 'scalar' → logprob: -9.50044059753418
    4. ' ,' → logprob: -9.75044059753418
    5. ')' → logprob: -12.25044059753418
    6. ',s' → logprob: -12.50044059753418
    7. '.scalar' → logprob: -14.25044059753418
    8. '_scalar' → logprob: -14.37544059753418
    9. '(' → logprob: -15.25044059753418
    10. '),' → logprob: -15.75044059753418

Token 673: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.48347944021224976
    2. 'scalar' → logprob: -0.9834794402122498
    3. ' scalar' → logprob: -4.7334794998168945
    4. ' self' → logprob: -7.4834794998168945
    5. '.scalar' → logprob: -16.608478546142578
    6. 'y' → logprob: -16.858478546142578
    7. 'Scalar' → logprob: -16.983478546142578
    8. '   ' → logprob: -17.358478546142578
    9. 'sc' → logprob: -17.483478546142578
    10. ' ' → logprob: -17.608478546142578

Token 674: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001681405701674521
    2. ' y' → logprob: -9.250167846679688
    3. '.y' → logprob: -10.375167846679688
    4. 'scalar' → logprob: -10.375167846679688
    5. ')' → logprob: -12.375167846679688
    6. 'x' → logprob: -13.875167846679688
    7. ',y' → logprob: -14.125167846679688
    8. ' ' → logprob: -14.125167846679688
    9. '<|end|>' → logprob: -14.125167846679688
    10. ' scalar' → logprob: -14.500167846679688

Token 675: ' *' (ID: 425)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4111606478691101
    2. ')' → logprob: -1.2861607074737549
    3. 'scalar' → logprob: -3.411160707473755
    4. ' scalar' → logprob: -4.286160469055176
    5. '.y' → logprob: -4.911160469055176
    6. '.scalar' → logprob: -5.786160469055176
    7. ' y' → logprob: -6.161160469055176
    8. '_scalar' → logprob: -6.786160469055176
    9. '<|end|>' → logprob: -9.536160469055176
    10. ')y' → logprob: -10.161160469055176

Token 676: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.0004378214362077415
    2. ' scalar' → logprob: -7.7504377365112305
    3. 'other' → logprob: -11.87543773651123
    4. '.scalar' → logprob: -16.625438690185547
    5. 'x' → logprob: -17.125438690185547
    6. 'sc' → logprob: -19.375438690185547
    7. '_scalar' → logprob: -19.625438690185547
    8. '0' → logprob: -20.250438690185547
    9. '```' → logprob: -20.250438690185547
    10. ' other' → logprob: -20.500438690185547

Token 677: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046451209345832467
    2. '<|end|>' → logprob: -7.75046443939209
    3. ',' → logprob: -10.87546443939209
    4. ' ' → logprob: -13.25046443939209
    5. '   ' → logprob: -13.50046443939209
    6. 'def' → logprob: -13.50046443939209
    7. ')return' → logprob: -13.62546443939209
    8. ')
' → logprob: -13.75046443939209
    9. 'scalar' → logprob: -14.00046443939209
    10. 's' → logprob: -14.00046443939209

Token 678: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01920917257666588
    2. 'def' → logprob: -4.019209384918213
    3. ' def' → logprob: -6.894209384918213
    4. '```' → logprob: -10.144208908081055
    5. '	def' → logprob: -13.519208908081055
    6. ' ' → logprob: -13.894208908081055
    7. '    
' → logprob: -13.894208908081055
    8. '``' → logprob: -14.269208908081055
    9. '
' → logprob: -14.394208908081055
    10. '>' → logprob: -15.269208908081055

Token 679: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.022073788568377495
    2. '   ' → logprob: -4.022073745727539
    3. ' def' → logprob: -5.772073745727539
    4. '```' → logprob: -7.147073745727539
    5. '	def' → logprob: -11.897073745727539
    6. ' ' → logprob: -12.522073745727539
    7. '``' → logprob: -12.522073745727539
    8. ':def' → logprob: -14.772073745727539
    9. '  ' → logprob: -15.897073745727539
    10. '>' → logprob: -15.897073745727539

Token 680: ' __' (ID: 2516)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.1798430234193802
    2. ' cross' → logprob: -1.8048430681228638
    3. 'def' → logprob: -9.804842948913574
    4. ' def' → logprob: -10.554842948913574
    5. 'dot' → logprob: -11.929842948913574
    6. '__' → logprob: -12.304842948913574
    7. '.cross' → logprob: -13.679842948913574
    8. '_cross' → logprob: -13.804842948913574
    9. ' ' → logprob: -13.929842948913574
    10. ' __' → logprob: -14.304842948913574

Token 681: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.5880793333053589
    2. 'eq' → logprob: -0.8380793333053589
    3. 'repr' → logprob: -4.588079452514648
    4. 'str' → logprob: -6.838079452514648
    5. 'neg' → logprob: -7.838079452514648
    6. 'abs' → logprob: -8.713079452514648
    7. 'flo' → logprob: -8.838079452514648
    8. 'lt' → logprob: -9.588079452514648
    9. 'float' → logprob: -10.088079452514648
    10. 'bool' → logprob: -12.588079452514648

Token 682: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -1.318681188422488e-05
    2. 'ue' → logprob: -11.50001335144043
    3. 'u' → logprob: -12.87501335144043
    4. 'ud' → logprob: -14.75001335144043
    5. 'ed' → logprob: -19.12501335144043
    6. 'ues' → logprob: -19.50001335144043
    7. 'uen' → logprob: -20.37501335144043
    8. 'uf' → logprob: -20.37501335144043
    9. 'uem' → logprob: -20.75001335144043
    10. 'e' → logprob: -20.87501335144043

Token 683: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -6.034592388459714e-06
    2. 'ived' → logprob: -13.125005722045898
    3. '__' → logprob: -13.375005722045898
    4. 'ef' → logprob: -14.375005722045898
    5. 'ivi' → logprob: -14.500005722045898
    6. 'ued' → logprob: -14.625005722045898
    7. 'div' → logprob: -15.000005722045898
    8. 'ivid' → logprob: -15.500005722045898
    9. 'IV' → logprob: -15.750005722045898
    10. 'r' → logprob: -15.875005722045898

Token 684: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3286576271057129
    2. '(' → logprob: -1.453657627105713
    3. '__(' → logprob: -3.078657627105713
    4. '_(' → logprob: -8.078657150268555
    5. ' (' → logprob: -10.578657150268555
    6. 'self' → logprob: -10.953657150268555
    7. '<|end|>' → logprob: -11.953657150268555
    8. '__' → logprob: -12.703657150268555
    9. '```' → logprob: -12.953657150268555
    10. '<>(' → logprob: -13.703657150268555

Token 685: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00021807955636177212
    2. ' self' → logprob: -8.500218391418457
    3. '(self' → logprob: -11.250218391418457
    4. 'def' → logprob: -14.750218391418457
    5. 's' → logprob: -15.750218391418457
    6. '1' → logprob: -16.25021743774414
    7. '
' → logprob: -16.25021743774414
    8. '   ' → logprob: -16.25021743774414
    9. ' ' → logprob: -16.37521743774414
    10. '	self' → logprob: -16.37521743774414

Token 686: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06288054585456848
    2. 'self' → logprob: -3.187880516052246
    3. '(' → logprob: -4.062880516052246
    4. ' (' → logprob: -6.562880516052246
    5. ' self' → logprob: -7.312880516052246
    6. ',' → logprob: -9.312880516052246
    7. '   ' → logprob: -9.562880516052246
    8. '__(' → logprob: -9.812880516052246
    9. 'def' → logprob: -9.937880516052246
    10. ' ' → logprob: -10.562880516052246

Token 687: ' scalar' (ID: 35065)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.025417428463697433
    2. ' self' → logprob: -3.9004173278808594
    3. ' scalar' → logprob: -6.025417327880859
    4. 'scalar' → logprob: -6.025417327880859
    5. '_scalar' → logprob: -11.77541732788086
    6. 'Scalar' → logprob: -12.40041732788086
    7. ' other' → logprob: -12.52541732788086
    8. 'other' → logprob: -12.65041732788086
    9. '```' → logprob: -12.65041732788086
    10. ' ' → logprob: -12.90041732788086

Token 688: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06020952761173248
    2. '):' → logprob: -3.3102095127105713
    3. '<|end|>' → logprob: -4.81020975112915
    4. 'self' → logprob: -5.06020975112915
    5. '):
' → logprob: -5.81020975112915
    6. '(self' → logprob: -6.06020975112915
    7. '(' → logprob: -7.68520975112915
    8. ':' → logprob: -8.310209274291992
    9. ')' → logprob: -8.435209274291992
    10. ' self' → logprob: -8.560209274291992

Token 689: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011150039732456207
    2. 'return' → logprob: -5.136149883270264
    3. ' return' → logprob: -5.261149883270264
    4. ':return' → logprob: -12.011150360107422
    5. '   ' → logprob: -12.636150360107422
    6. 'Vec' → logprob: -13.011150360107422
    7. '	return' → logprob: -13.261150360107422
    8. '{return' → logprob: -13.636150360107422
    9. ':' → logprob: -14.261150360107422
    10. 'x' → logprob: -14.636150360107422

Token 690: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014213105663657188
    2. 'Vec' → logprob: -4.2642130851745605
    3. ' return' → logprob: -10.014213562011719
    4. '       ' → logprob: -12.389213562011719
    5. '   ' → logprob: -14.889213562011719
    6. 'Vector' → logprob: -15.639213562011719
    7. '	return' → logprob: -16.51421356201172
    8. ' Vec' → logprob: -17.51421356201172
    9. 'Return' → logprob: -18.51421356201172
    10. 'vec' → logprob: -18.76421356201172

Token 691: ' Vec' (ID: 22915)
  Prédit: 'Vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vec' → logprob: -0.001506528351455927
    2. ' Vec' → logprob: -6.501506328582764
    3. '	Vec' → logprob: -12.501506805419922
    4. 'self' → logprob: -15.376506805419922
    5. '(Vec' → logprob: -15.876506805419922
    6. '<Vec' → logprob: -16.626506805419922
    7. 'Vector' → logprob: -17.251506805419922
    8. ' ' → logprob: -17.501506805419922
    9. '_vec' → logprob: -18.001506805419922
    10. 'vec' → logprob: -18.126506805419922

Token 692: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001117234816774726
    2. '(Vec' → logprob: -6.87611722946167
    3. 'self' → logprob: -10.126117706298828
    4. '(Vector' → logprob: -10.251117706298828
    5. 'Vec' → logprob: -12.501117706298828
    6. '(' → logprob: -12.501117706298828
    7. '(
' → logprob: -14.251117706298828
    8. '(vec' → logprob: -15.251117706298828
    9. '(View' → logprob: -15.501117706298828
    10. '(Self' → logprob: -15.751117706298828

Token 693: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.5777827501296997
    2. 'x' → logprob: -0.8277827501296997
    3. ' ' → logprob: -7.57778263092041
    4. ' x' → logprob: -8.07778263092041
    5. ')' → logprob: -8.32778263092041
    6. '.' → logprob: -8.70278263092041
    7. 'self' → logprob: -8.82778263092041
    8. '.__' → logprob: -9.82778263092041
    9. '1' → logprob: -10.20278263092041
    10. '(x' → logprob: -10.32778263092041

Token 694: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3089498281478882
    2. '/' → logprob: -1.4339498281478882
    3. '<|end|>' → logprob: -4.933949947357178
    4. '/self' → logprob: -5.433949947357178
    5. '/sc' → logprob: -5.933949947357178
    6. ')' → logprob: -6.183949947357178
    7. ' self' → logprob: -6.433949947357178
    8. ' ' → logprob: -6.433949947357178
    9. '(self' → logprob: -6.683949947357178
    10. 'self' → logprob: -6.933949947357178

Token 695: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.003178544342517853
    2. ' scalar' → logprob: -5.753178596496582
    3. 'self' → logprob: -14.628178596496582
    4. 'other' → logprob: -15.003178596496582
    5. '.scalar' → logprob: -17.378177642822266
    6. ' other' → logprob: -19.003177642822266
    7. '_scalar' → logprob: -19.628177642822266
    8. 'sc' → logprob: -19.628177642822266
    9. '   ' → logprob: -19.878177642822266
    10. ' ' → logprob: -20.628177642822266

Token 696: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.566264295950532e-05
    2. ' ,' → logprob: -9.625085830688477
    3. ')' → logprob: -10.875085830688477
    4. '<|end|>' → logprob: -15.250085830688477
    5. '(' → logprob: -16.500085830688477
    6. ' ' → logprob: -16.750085830688477
    7. '),' → logprob: -17.000085830688477
    8. ',
' → logprob: -17.125085830688477
    9. ',s' → logprob: -17.375085830688477
    10. 'import' → logprob: -18.000085830688477

Token 697: ' self' (ID: 1051)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.001935661886818707
    2. ' scalar' → logprob: -6.2519354820251465
    3. 'self' → logprob: -11.876935958862305
    4. 'float' → logprob: -16.251935958862305
    5. '   ' → logprob: -17.626935958862305
    6. '.scalar' → logprob: -18.001935958862305
    7. ' ' → logprob: -18.751935958862305
    8. 'vector' → logprob: -19.251935958862305
    9. 'sc' → logprob: -19.626935958862305
    10. ' self' → logprob: -19.876935958862305

Token 698: '.y' (ID: 4486)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9677894115447998
    2. 'scalar' → logprob: -0.9677894115447998
    3. 'y' → logprob: -2.3427894115448
    4. '2' → logprob: -2.9677894115448
    5. ' scalar' → logprob: -3.0927894115448
    6. '.scalar' → logprob: -3.7177894115448
    7. ')' → logprob: -4.342789649963379
    8. ' ' → logprob: -6.092789649963379
    9. '.x' → logprob: -6.342789649963379
    10. '1' → logprob: -6.342789649963379

Token 699: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09180368483066559
    2. '<|end|>' → logprob: -3.091803789138794
    3. ' ' → logprob: -4.091803550720215
    4. ' scalar' → logprob: -4.091803550720215
    5. 'scalar' → logprob: -5.216803550720215
    6. '.scalar' → logprob: -7.216803550720215
    7. '   ' → logprob: -7.841803550720215
    8. '1' → logprob: -7.841803550720215
    9. ',' → logprob: -7.966803550720215
    10. '_scalar' → logprob: -7.966803550720215

Token 700: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.0015042672166600823
    2. ' scalar' → logprob: -6.501504421234131
    3. 'other' → logprob: -13.251503944396973
    4. '2' → logprob: -16.00150489807129
    5. ' ' → logprob: -17.12650489807129
    6. '.scalar' → logprob: -17.50150489807129
    7. ' other' → logprob: -18.37650489807129
    8. 'float' → logprob: -18.87650489807129
    9. 'Scalar' → logprob: -19.12650489807129
    10. 'sc' → logprob: -19.87650489807129

Token 701: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ')
' → logprob: -12.625004768371582
    3. '<|end|>' → logprob: -13.625004768371582
    4. ')

' → logprob: -14.875004768371582
    5. ' )' → logprob: -16.2500057220459
    6. 'def' → logprob: -16.5000057220459
    7. ')return' → logprob: -17.0000057220459
    8. '   ' → logprob: -17.2500057220459
    9. '),' → logprob: -17.6250057220459
    10. 'import' → logprob: -18.5000057220459

Token 702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044137924909591675
    2. 'def' → logprob: -3.169137954711914
    3. '```' → logprob: -7.044137954711914
    4. ' def' → logprob: -8.294137954711914
    5. ' ' → logprob: -12.669137954711914
    6. '	def' → logprob: -12.919137954711914
    7. '    
' → logprob: -12.919137954711914
    8. '``' → logprob: -13.044137954711914
    9. '(' → logprob: -13.294137954711914
    10. '@property' → logprob: -13.544137954711914

Token 703: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014364934526383877
    2. '   ' → logprob: -4.264364719390869
    3. ' def' → logprob: -8.514365196228027
    4. '```' → logprob: -14.389365196228027
    5. '	def' → logprob: -15.764365196228027
    6. ' ' → logprob: -17.38936424255371
    7. '@property' → logprob: -17.51436424255371
    8. 'class' → logprob: -18.26436424255371
    9. '    
' → logprob: -18.88936424255371
    10. '``' → logprob: -18.88936424255371

Token 704: ' __' (ID: 2516)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.38708242774009705
    2. ' cross' → logprob: -1.1370824575424194
    3. 'def' → logprob: -9.01208209991455
    4. ' def' → logprob: -9.38708209991455
    5. 'dot' → logprob: -13.13708209991455
    6. ' ' → logprob: -14.01208209991455
    7. '__' → logprob: -14.38708209991455
    8. ' dot' → logprob: -14.51208209991455
    9. '.cross' → logprob: -15.01208209991455
    10. ' __' → logprob: -15.13708209991455

Token 705: 'i' (ID: 72)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.21889042854309082
    2. 'repr' → logprob: -1.7188904285430908
    3. 'flo' → logprob: -4.718890190124512
    4. 'neg' → logprob: -5.218890190124512
    5. 'abs' → logprob: -6.468890190124512
    6. 'str' → logprob: -6.718890190124512
    7. 'lt' → logprob: -8.593890190124512
    8. 'mul' → logprob: -10.968890190124512
    9. 'float' → logprob: -11.218890190124512
    10. 'xor' → logprob: -12.218890190124512

Token 706: 'add' (ID: 964)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.014365755021572113
    2. 'add' → logprob: -4.2643656730651855
    3. 'mult' → logprob: -9.389366149902344
    4. 'tr' → logprob: -9.514366149902344
    5. 'm' → logprob: -10.389366149902344
    6. 'sub' → logprob: -12.639366149902344
    7. 'a' → logprob: -13.014366149902344
    8. 'Mul' → logprob: -13.264366149902344
    9. 'n' → logprob: -13.764366149902344
    10. 'nit' → logprob: -14.014366149902344

Token 707: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0029674768447875977
    2. '(' → logprob: -6.377967357635498
    3. '__(' → logprob: -6.752967357635498
    4. ' (' → logprob: -9.502967834472656
    5. '<|end|>' → logprob: -11.377967834472656
    6. 'self' → logprob: -12.002967834472656
    7. '_(' → logprob: -13.377967834472656
    8. '(this' → logprob: -13.752967834472656
    9. ' self' → logprob: -14.752967834472656
    10. '(s' → logprob: -15.127967834472656

Token 708: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.615255839889869e-05
    2. ' self' → logprob: -9.375096321105957
    3. '(self' → logprob: -11.750096321105957
    4. ' ' → logprob: -13.500096321105957
    5. '   ' → logprob: -13.625096321105957
    6. 's' → logprob: -15.500096321105957
    7. 'def' → logprob: -15.500096321105957
    8. '0' → logprob: -16.75009536743164
    9. '  ' → logprob: -17.00009536743164
    10. '<|end|>' → logprob: -17.00009536743164

Token 709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03297948092222214
    2. '(self' → logprob: -3.5329794883728027
    3. 'self' → logprob: -6.282979488372803
    4. '__(' → logprob: -7.407979488372803
    5. '(' → logprob: -8.282979011535645
    6. ',self' → logprob: -8.532979011535645
    7. ' (' → logprob: -8.782979011535645
    8. ')(' → logprob: -9.657979011535645
    9. ' ,' → logprob: -10.282979011535645
    10. ' self' → logprob: -11.157979011535645

Token 710: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.47540828585624695
    2. 'self' → logprob: -0.9754083156585693
    3. ' other' → logprob: -6.72540807723999
    4. ' self' → logprob: -8.975408554077148
    5. 'Other' → logprob: -13.350408554077148
    6. 'def' → logprob: -13.475408554077148
    7. '_other' → logprob: -14.975408554077148
    8. ' ' → logprob: -15.350408554077148
    9. '0' → logprob: -16.35040855407715
    10. '(other' → logprob: -16.60040855407715

Token 711: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036067210603505373
    2. '):' → logprob: -5.878606796264648
    3. 'self' → logprob: -8.003606796264648
    4. '(self' → logprob: -8.503606796264648
    5. '):
' → logprob: -9.378606796264648
    6. ' ,' → logprob: -9.628606796264648
    7. '       ' → logprob: -10.253606796264648
    8. '   ' → logprob: -10.378606796264648
    9. ',self' → logprob: -10.378606796264648
    10. ' self' → logprob: -12.503606796264648

Token 712: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005094880238175392
    2. 'self' → logprob: -5.7550950050354
    3. '   ' → logprob: -7.5050950050354
    4. 'return' → logprob: -7.8800950050354
    5. 'def' → logprob: -8.005094528198242
    6. '<|end|>' → logprob: -8.755094528198242
    7. ':' → logprob: -9.505094528198242
    8. ' self' → logprob: -9.755094528198242
    9. ':return' → logprob: -9.755094528198242
    10. ' return' → logprob: -9.880094528198242

Token 713: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004822414834052324
    2. '   ' → logprob: -5.879822254180908
    3. '       ' → logprob: -6.754822254180908
    4. ' self' → logprob: -7.254822254180908
    5. '
' → logprob: -9.879822731018066
    6. '	self' → logprob: -10.629822731018066
    7. '```' → logprob: -10.629822731018066
    8. 'return' → logprob: -10.754822731018066
    9. 'x' → logprob: -11.879822731018066
    10. 'def' → logprob: -13.129822731018066

Token 714: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.03375577554106712
    2. '.' → logprob: -3.4087557792663574
    3. '<|end|>' → logprob: -9.7837553024292
    4. ' .' → logprob: -10.2837553024292
    5. ':' → logprob: -12.6587553024292
    6. '.__' → logprob: -13.0337553024292
    7. ' ' → logprob: -13.5337553024292
    8. ' =' → logprob: -13.5337553024292
    9. ',' → logprob: -13.6587553024292
    10. '.py' → logprob: -13.6587553024292

Token 715: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12696287035942078
    2. '+=' → logprob: -2.126962900161743
    3. '+' → logprob: -10.626962661743164
    4. '=' → logprob: -12.001962661743164
    5. ' +' → logprob: -12.501962661743164
    6. ' =' → logprob: -15.126962661743164
    7. ']+=' → logprob: -15.501962661743164
    8. '   ' → logprob: -15.626962661743164
    9. '+=(' → logprob: -17.126962661743164
    10. ' ' → logprob: -17.251962661743164

Token 716: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.029750484973192215
    2. ' other' → logprob: -3.5297505855560303
    3. '(other' → logprob: -17.02975082397461
    4. ' ' → logprob: -18.90475082397461
    5. '.other' → logprob: -19.02975082397461
    6. '_other' → logprob: -19.40475082397461
    7. 'Other' → logprob: -19.77975082397461
    8. '   ' → logprob: -20.52975082397461
    9. '  ' → logprob: -23.40475082397461
    10. '其他' → logprob: -23.40475082397461

Token 717: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.004089678172022104
    2. '.' → logprob: -5.504089832305908
    3. ' .' → logprob: -11.50408935546875
    4. 'x' → logprob: -14.12908935546875
    5. '<|end|>' → logprob: -15.25408935546875
    6. '```' → logprob: -16.75408935546875
    7. ' ' → logprob: -17.25408935546875
    8. '[' → logprob: -17.37908935546875
    9. '.xaml' → logprob: -17.75408935546875
    10. '.gridx' → logprob: -17.75408935546875

Token 718: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04165918007493019
    2. '
' → logprob: -3.291659116744995
    3. '<|end|>' → logprob: -5.666659355163574
    4. '<|end|>' → logprob: -10.541659355163574
    5. '   ' → logprob: -10.791659355163574
    6. ';' → logprob: -10.916659355163574
    7. 'self' → logprob: -11.041659355163574
    8. 'return' → logprob: -11.291659355163574
    9. '	' → logprob: -11.291659355163574
    10. '
' → logprob: -11.666659355163574

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033200893085449934
    2. '
' → logprob: -9.00033187866211
    3. 'self' → logprob: -9.37533187866211
    4. '<|end|>' → logprob: -9.87533187866211
    5. ',' → logprob: -10.50033187866211
    6. 'return' → logprob: -10.62533187866211
    7. ';' → logprob: -11.62533187866211
    8. '   ' → logprob: -12.87533187866211
    9. ' self' → logprob: -13.00033187866211
    10. ' return' → logprob: -13.62533187866211

Token 720: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.130362868309021
    2. '       ' → logprob: -2.1303629875183105
    3. 'other' → logprob: -5.8803629875183105
    4. ' self' → logprob: -7.3803629875183105
    5. ' other' → logprob: -11.630362510681152
    6. '   ' → logprob: -13.380362510681152
    7. '	self' → logprob: -14.380362510681152
    8. ' ' → logprob: -15.005362510681152
    9. 'return' → logprob: -15.255362510681152
    10. '      ' → logprob: -16.75536346435547

Token 721: '.y' (ID: 4486)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.47153952717781067
    2. 'y' → logprob: -1.5965394973754883
    3. '.y' → logprob: -1.9715394973754883
    4. '       ' → logprob: -4.346539497375488
    5. ' ' → logprob: -4.846539497375488
    6. '<|end|>' → logprob: -5.221539497375488
    7. '   ' → logprob: -5.721539497375488
    8. 'x' → logprob: -6.721539497375488
    9. '```' → logprob: -7.221539497375488
    10. ',' → logprob: -7.471539497375488

Token 722: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03164365142583847
    2. '+=' → logprob: -3.6566436290740967
    3. '<|end|>' → logprob: -5.531643867492676
    4. '+' → logprob: -7.531643867492676
    5. ' +' → logprob: -7.531643867492676
    6. '<|end|>' → logprob: -9.656643867492676
    7. '```' → logprob: -9.906643867492676
    8. '       ' → logprob: -10.156643867492676
    9. ' ' → logprob: -10.281643867492676
    10. ']+=' → logprob: -11.156643867492676

Token 723: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.12692873179912567
    2. ' other' → logprob: -2.1269288063049316
    3. '(other' → logprob: -14.501928329467773
    4. '.other' → logprob: -16.251928329467773
    5. ' ' → logprob: -17.001928329467773
    6. '_other' → logprob: -17.251928329467773
    7. 'Other' → logprob: -17.501928329467773
    8. '   ' → logprob: -19.126928329467773
    9. 'others' → logprob: -20.376928329467773
    10. '其他' → logprob: -20.751928329467773

Token 724: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -5.431207682704553e-05
    2. 'y' → logprob: -10.500054359436035
    3. '.' → logprob: -10.625054359436035
    4. '.x' → logprob: -13.000054359436035
    5. ' .' → logprob: -16.00005340576172
    6. '.py' → logprob: -17.25005340576172
    7. '```' → logprob: -17.25005340576172
    8. '.ylabel' → logprob: -18.75005340576172
    9. '   ' → logprob: -19.00005340576172
    10. '<|end|>' → logprob: -19.12505340576172

Token 725: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001603771117515862
    2. '
' → logprob: -6.876603603363037
    3. '   ' → logprob: -8.751604080200195
    4. ' return' → logprob: -8.876604080200195
    5. '	' → logprob: -9.251604080200195
    6. 'return' → logprob: -9.626604080200195
    7. '<|end|>' → logprob: -9.626604080200195
    8. '	return' → logprob: -11.126604080200195
    9. ',' → logprob: -12.001604080200195
    10. '        
' → logprob: -12.126604080200195

Token 726: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01216312125325203
    2. 'return' → logprob: -4.512163162231445
    3. ' return' → logprob: -7.012163162231445
    4. '   ' → logprob: -8.887163162231445
    5. '
' → logprob: -10.012163162231445
    6. '	return' → logprob: -11.012163162231445
    7. '	' → logprob: -11.387163162231445
    8. 'self' → logprob: -14.012163162231445
    9. '        
' → logprob: -14.637163162231445
    10. '```' → logprob: -15.387163162231445

Token 727: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03217547386884689
    2. '       ' → logprob: -3.5321755409240723
    3. ' return' → logprob: -6.032175540924072
    4. '   ' → logprob: -10.782175064086914
    5. '	return' → logprob: -14.157175064086914
    6. '
' → logprob: -16.532175064086914
    7. '{return' → logprob: -16.782175064086914
    8. '      ' → logprob: -17.782175064086914
    9. ' ' → logprob: -18.157175064086914
    10. '     ' → logprob: -18.407175064086914

Token 728: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006715370807796717
    2. ' self' → logprob: -5.006715297698975
    3. ' ' → logprob: -19.631715774536133
    4. '	self' → logprob: -20.881715774536133
    5. 'sel' → logprob: -21.006715774536133
    6. 's' → logprob: -21.256715774536133
    7. 'se' → logprob: -21.381715774536133
    8. '(self' → logprob: -21.506715774536133
    9. 'Self' → logprob: -22.381715774536133
    10. '_self' → logprob: -23.131715774536133

Token 729: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 730: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015186689561232924
    2. '```' → logprob: -7.376518726348877
    3. '<|end|>' → logprob: -7.501518726348877
    4. 'def' → logprob: -8.251518249511719
    5. '    
' → logprob: -10.251518249511719
    6. '
' → logprob: -10.376518249511719
    7. ' def' → logprob: -13.001518249511719
    8. '<|end|>' → logprob: -13.126518249511719
    9. '>' → logprob: -13.376518249511719
    10. '``' → logprob: -14.001518249511719

Token 731: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.044903870671987534
    2. '   ' → logprob: -3.1699037551879883
    3. ' def' → logprob: -6.294903755187988
    4. '```' → logprob: -10.544903755187988
    5. '<|end|>' → logprob: -11.169903755187988
    6. ' ' → logprob: -12.169903755187988
    7. '	def' → logprob: -12.169903755187988
    8. '  ' → logprob: -13.044903755187988
    9. '
' → logprob: -13.919903755187988
    10. ')' → logprob: -14.419903755187988

Token 732: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.23207084834575653
    2. 'def' → logprob: -1.607070803642273
    3. ' __' → logprob: -5.4820709228515625
    4. ' def' → logprob: -6.2320709228515625
    5. '   ' → logprob: -8.107070922851562
    6. '```' → logprob: -8.732070922851562
    7. ' ' → logprob: -10.857070922851562
    8. '
' → logprob: -12.232070922851562
    9. '``' → logprob: -12.607070922851562
    10. 'i' → logprob: -12.732070922851562

Token 733: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0009176511666737497
    2. 'imul' → logprob: -7.000917434692383
    3. 'mul' → logprob: -12.875917434692383
    4. 'eq' → logprob: -14.125917434692383
    5. 'sub' → logprob: -14.375917434692383
    6. 'im' → logprob: -14.625917434692383
    7. 'i' → logprob: -14.875917434692383
    8. 'repr' → logprob: -15.000917434692383
    9. '```' → logprob: -15.500917434692383
    10. 'init' → logprob: -16.000917434692383

Token 734: 'ub' (ID: 431)
  Prédit: 'ub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: 0.0
    2. 'u' → logprob: -18.25
    3. 'ubh' → logprob: -19.75
    4. 'ubb' → logprob: -20.0
    5. ' ub' → logprob: -20.375
    6. 'уб' → logprob: -20.5
    7. 'ubit' → logprob: -20.875
    8. 'ubmit' → logprob: -21.125
    9. 'ubi' → logprob: -21.5
    10. 'ubr' → logprob: -21.875

Token 735: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.11368430405855179
    2. '(' → logprob: -2.6136844158172607
    3. '__' → logprob: -3.4886844158172607
    4. '(self' → logprob: -6.238684177398682
    5. '__((' → logprob: -7.363684177398682
    6. '(other' → logprob: -7.613684177398682
    7. '<|end|>' → logprob: -8.48868465423584
    8. '__('' → logprob: -9.48868465423584
    9. '__(
' → logprob: -9.48868465423584
    10. ' (' → logprob: -10.23868465423584

Token 736: 'self' (ID: 1156)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.4742167890071869
    2. 'self' → logprob: -0.9742168188095093
    3. ' other' → logprob: -8.97421646118164
    4. 'Other' → logprob: -12.22421646118164
    5. ' self' → logprob: -12.72421646118164
    6. '(other' → logprob: -12.97421646118164
    7. '   ' → logprob: -13.22421646118164
    8. '_other' → logprob: -14.22421646118164
    9. '.other' → logprob: -15.59921646118164
    10. '(self' → logprob: -15.72421646118164

Token 737: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.25320273637771606
    2. '(other' → logprob: -1.6282026767730713
    3. '(' → logprob: -4.12820291519165
    4. ',' → logprob: -5.12820291519165
    5. 'self' → logprob: -5.62820291519165
    6. ' (' → logprob: -7.62820291519165
    7. '   ' → logprob: -8.003202438354492
    8. 'other' → logprob: -8.128202438354492
    9. ' other' → logprob: -8.253202438354492
    10. '       ' → logprob: -8.878202438354492

Token 738: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.20141372084617615
    2. ' other' → logprob: -1.7014137506484985
    3. 'Other' → logprob: -15.326414108276367
    4. '(other' → logprob: -15.701414108276367
    5. '_other' → logprob: -17.076414108276367
    6. 'self' → logprob: -17.701414108276367
    7. '.other' → logprob: -18.326414108276367
    8. ' ' → logprob: -20.076414108276367
    9. 'others' → logprob: -21.451414108276367
    10. '-other' → logprob: -21.576414108276367

Token 739: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.658986508846283
    2. '       ' → logprob: -0.908986508846283
    3. ',' → logprob: -3.4089865684509277
    4. '):' → logprob: -3.6589865684509277
    5. '   ' → logprob: -4.158986568450928
    6. 'self' → logprob: -6.533986568450928
    7. '<|end|>' → logprob: -6.908986568450928
    8. ')' → logprob: -7.033986568450928
    9. ':
' → logprob: -7.658986568450928
    10. 'other' → logprob: -8.90898609161377

Token 740: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034230698365718126
    2. 'self' → logprob: -6.37842321395874
    3. '   ' → logprob: -6.75342321395874
    4. ' self' → logprob: -7.50342321395874
    5. '	self' → logprob: -14.378422737121582
    6. ' ' → logprob: -15.003422737121582
    7. '```' → logprob: -15.753422737121582
    8. '(self' → logprob: -16.6284236907959
    9. '           ' → logprob: -16.6284236907959
    10. '      ' → logprob: -16.7534236907959

Token 741: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.016110852360725403
    2. '       ' → logprob: -4.266110897064209
    3. ' self' → logprob: -6.266110897064209
    4. '   ' → logprob: -10.01611042022705
    5. '	self' → logprob: -13.89111042022705
    6. ' ' → logprob: -16.891111373901367
    7. '
' → logprob: -17.016111373901367
    8. '```' → logprob: -17.141111373901367
    9. '           ' → logprob: -17.266111373901367
    10. '(self' → logprob: -17.391111373901367

Token 742: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -5.438573680294212e-06
    2. '.' → logprob: -12.250005722045898
    3. 'x' → logprob: -14.500005722045898
    4. ' .' → logprob: -17.3750057220459
    5. '=' → logprob: -17.8750057220459
    6. '       ' → logprob: -18.7500057220459
    7. '.y' → logprob: -19.0000057220459
    8. '   ' → logprob: -19.8750057220459
    9. ' x' → logprob: -19.8750057220459
    10. ',x' → logprob: -21.0000057220459

Token 743: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.10025552660226822
    2. '-=' → logprob: -2.3502554893493652
    3. '-' → logprob: -9.975255966186523
    4. ' -' → logprob: -14.100255966186523
    5. ' +=' → logprob: -14.600255966186523
    6. '   ' → logprob: -14.600255966186523
    7. '=' → logprob: -15.600255966186523
    8. '    ' → logprob: -15.725255966186523
    9. '+=' → logprob: -16.350255966186523
    10. ' ' → logprob: -16.350255966186523

Token 744: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.5759395956993103
    2. 'other' → logprob: -0.8259395956993103
    3. '(other' → logprob: -16.200939178466797
    4. 'Other' → logprob: -16.700939178466797
    5. '.other' → logprob: -17.575939178466797
    6. '_other' → logprob: -17.575939178466797
    7. ' ' → logprob: -22.825939178466797
    8. '-other' → logprob: -22.950939178466797
    9. 'OTHER' → logprob: -23.075939178466797
    10. ' andere' → logprob: -23.075939178466797

Token 745: '.x' (ID: 3700)
  Prédit: '.other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.other' → logprob: -0.08033797889947891
    2. '.x' → logprob: -2.5803380012512207
    3. 'other' → logprob: -6.830338001251221
    4. '.' → logprob: -8.080337524414062
    5. ' other' → logprob: -10.080337524414062
    6. '.y' → logprob: -11.705337524414062
    7. '(other' → logprob: -12.330337524414062
    8. 'Other' → logprob: -14.205337524414062
    9. ' .' → logprob: -14.330337524414062
    10. 'x' → logprob: -14.705337524414062

Token 746: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004521222144830972
    2. ' other' → logprob: -7.875452041625977
    3. '
' → logprob: -11.000452041625977
    4. 'other' → logprob: -11.250452041625977
    5. ' return' → logprob: -11.250452041625977
    6. '        ' → logprob: -11.750452041625977
    7. '   ' → logprob: -12.250452041625977
    8. ',' → logprob: -12.500452041625977
    9. 'return' → logprob: -12.500452041625977
    10. '      ' → logprob: -12.625452041625977

Token 747: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2989809215068817
    2. 'other' → logprob: -2.048980951309204
    3. ' other' → logprob: -2.048980951309204
    4. 'return' → logprob: -7.673980712890625
    5. '(other' → logprob: -8.923980712890625
    6. ' return' → logprob: -9.423980712890625
    7. '.other' → logprob: -11.798980712890625
    8. '   ' → logprob: -12.798980712890625
    9. 'Other' → logprob: -13.548980712890625
    10. ',' → logprob: -14.173980712890625

Token 748: ' self' (ID: 1051)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.005233763717114925
    2. ' other' → logprob: -5.2552337646484375
    3. '(other' → logprob: -18.255233764648438
    4. 'Other' → logprob: -19.005233764648438
    5. '.other' → logprob: -19.755233764648438
    6. '_other' → logprob: -21.380233764648438
    7. '       ' → logprob: -22.880233764648438
    8. '其他' → logprob: -24.130233764648438
    9. '-other' → logprob: -24.755233764648438
    10. 'OTHER' → logprob: -25.880233764648438

Token 749: '.y' (ID: 4486)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.014181245118379593
    2. ' other' → logprob: -4.514181137084961
    3. 'y' → logprob: -6.264181137084961
    4. '.other' → logprob: -6.764181137084961
    5. '.y' → logprob: -9.764181137084961
    6. ' y' → logprob: -11.764181137084961
    7. '(other' → logprob: -12.139181137084961
    8. 'Other' → logprob: -15.889181137084961
    9. '_other' → logprob: -15.889181137084961
    10. ' ' → logprob: -17.88918113708496

Token 750: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4982621371746063
    2. '-=' → logprob: -1.8732621669769287
    3. ' other' → logprob: -2.1232621669769287
    4. 'other' → logprob: -2.6232621669769287
    5. ' +=' → logprob: -3.6232621669769287
    6. '+=' → logprob: -5.12326192855835
    7. '       ' → logprob: -5.24826192855835
    8. '=' → logprob: -5.49826192855835
    9. 'import' → logprob: -7.12326192855835
    10. ' ' → logprob: -7.12326192855835

Token 751: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.029750604182481766
    2. ' other' → logprob: -3.5297505855560303
    3. '(other' → logprob: -16.15475082397461
    4. '.other' → logprob: -17.52975082397461
    5. 'Other' → logprob: -18.40475082397461
    6. '_other' → logprob: -18.52975082397461
    7. '<|end|>' → logprob: -20.02975082397461
    8. ' ' → logprob: -20.52975082397461
    9. '       ' → logprob: -22.02975082397461
    10. 'others' → logprob: -22.27975082397461

Token 752: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.8290047645568848
    2. '.y' → logprob: -1.2040047645568848
    3. 'other' → logprob: -1.9540047645568848
    4. '.other' → logprob: -2.5790047645568848
    5. '       ' → logprob: -3.7040047645568848
    6. ' other' → logprob: -4.829004764556885
    7. ' y' → logprob: -5.954004764556885
    8. '.' → logprob: -6.079004764556885
    9. '   ' → logprob: -6.579004764556885
    10. 'import' → logprob: -7.079004764556885

Token 753: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.599403423024341e-05
    2. 'return' → logprob: -9.750065803527832
    3. ' return' → logprob: -12.500065803527832
    4. '
' → logprob: -12.750065803527832
    5. '   ' → logprob: -14.625065803527832
    6. '```' → logprob: -15.875065803527832
    7. '      ' → logprob: -16.25006675720215
    8. ',' → logprob: -16.50006675720215
    9. 'import' → logprob: -16.75006675720215
    10. '           ' → logprob: -17.25006675720215

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005604196921922266
    2. 'return' → logprob: -7.500560283660889
    3. ' return' → logprob: -11.875560760498047
    4. '   ' → logprob: -15.000560760498047
    5. '
' → logprob: -17.375560760498047
    6. '           ' → logprob: -17.625560760498047
    7. '```' → logprob: -17.625560760498047
    8. '      ' → logprob: -17.750560760498047
    9. ':return' → logprob: -18.000560760498047
    10. '               ' → logprob: -18.125560760498047

Token 755: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01194958295673132
    2. '       ' → logprob: -4.51194953918457
    3. ' return' → logprob: -7.01194953918457
    4. '   ' → logprob: -15.38694953918457
    5. '	return' → logprob: -16.01194953918457
    6. '               ' → logprob: -18.01194953918457
    7. '{return' → logprob: -18.13694953918457
    8. '           ' → logprob: -18.38694953918457
    9. '
' → logprob: -18.38694953918457
    10. ' ' → logprob: -18.76194953918457

Token 756: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002036595979006961
    2. ' self' → logprob: -8.500204086303711
    3. '       ' → logprob: -15.875204086303711
    4. '   ' → logprob: -18.75020408630371
    5. '(self' → logprob: -20.00020408630371
    6. '	self' → logprob: -20.50020408630371
    7. '
' → logprob: -21.12520408630371
    8. 's' → logprob: -21.25020408630371
    9. '           ' → logprob: -21.62520408630371
    10. ' ' → logprob: -22.50020408630371

Token 757: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003231067443266511
    2. 'def' → logprob: -6.003231048583984
    3. 'return' → logprob: -7.503231048583984
    4. '       ' → logprob: -9.128231048583984
    5. ' def' → logprob: -10.253231048583984
    6. ' return' → logprob: -10.503231048583984
    7. ' ' → logprob: -11.128231048583984
    8. '  ' → logprob: -11.878231048583984
    9. '
' → logprob: -12.003231048583984
    10. '    
' → logprob: -13.503231048583984

Token 758: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011054890230298042
    2. 'def' → logprob: -4.511054992675781
    3. '```' → logprob: -12.511054992675781
    4. ' def' → logprob: -12.636054992675781
    5. '
' → logprob: -16.26105499267578
    6. '	def' → logprob: -17.13605499267578
    7. '@property' → logprob: -17.88605499267578
    8. '    
' → logprob: -18.13605499267578
    9. '   ' → logprob: -18.88605499267578
    10. '``' → logprob: -18.88605499267578

Token 759: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.062304992228746414
    2. '   ' → logprob: -2.812304973602295
    3. ' def' → logprob: -8.312305450439453
    4. '```' → logprob: -9.312305450439453
    5. '	def' → logprob: -14.437305450439453
    6. '@property' → logprob: -15.312305450439453
    7. ' ' → logprob: -15.687305450439453
    8. '    
' → logprob: -15.812305450439453
    9. '  ' → logprob: -15.937305450439453
    10. '<|end|>' → logprob: -16.187305450439453

Token 760: ' __' (ID: 2516)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.38918712735176086
    2. 'cross' → logprob: -1.2641870975494385
    3. 'def' → logprob: -3.3891870975494385
    4. ' def' → logprob: -5.139187335968018
    5. '__' → logprob: -8.26418685913086
    6. ' __' → logprob: -10.51418685913086
    7. 'dot' → logprob: -11.13918685913086
    8. '.cross' → logprob: -12.01418685913086
    9. 'copy' → logprob: -12.51418685913086
    10. ' dot' → logprob: -12.51418685913086

Token 761: 'imul' (ID: 114696)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.009934810921549797
    2. 'repr' → logprob: -5.259934902191162
    3. 'neg' → logprob: -6.009934902191162
    4. 'mul' → logprob: -6.509934902191162
    5. 'lt' → logprob: -7.634934902191162
    6. 'abs' → logprob: -9.009934425354004
    7. 'str' → logprob: -9.509934425354004
    8. 'flo' → logprob: -10.134934425354004
    9. 'xor' → logprob: -11.259934425354004
    10. 'imul' → logprob: -12.134934425354004

Token 762: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007257912307977676
    2. '__(' → logprob: -5.50725793838501
    3. '(' → logprob: -5.75725793838501
    4. ' (' → logprob: -11.507257461547852
    5. 'self' → logprob: -13.132257461547852
    6. '_(' → logprob: -13.757257461547852
    7. '__' → logprob: -14.132257461547852
    8. '(s' → logprob: -15.507257461547852
    9. ' self' → logprob: -15.757257461547852
    10. '   ' → logprob: -16.25725746154785

Token 763: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12726183235645294
    2. '(self' → logprob: -2.1272618770599365
    3. ' self' → logprob: -8.127262115478516
    4. 'def' → logprob: -11.002262115478516
    5. '(' → logprob: -11.127262115478516
    6. ' (' → logprob: -12.627262115478516
    7. '   ' → logprob: -13.752262115478516
    8. '
' → logprob: -14.377262115478516
    9. '=self' → logprob: -14.752262115478516
    10. ' ' → logprob: -14.752262115478516

Token 764: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00017708084487821907
    2. '(' → logprob: -9.000177383422852
    3. ' (' → logprob: -9.875177383422852
    4. '(s' → logprob: -13.250177383422852
    5. 'self' → logprob: -15.000177383422852
    6. '   ' → logprob: -17.00017738342285
    7. '__(' → logprob: -17.50017738342285
    8. ' ' → logprob: -17.87517738342285
    9. ' self' → logprob: -17.87517738342285
    10. '(se' → logprob: -18.00017738342285

Token 765: ' scalar' (ID: 35065)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1164929866790771
    2. 'scalar' → logprob: -1.3664929866790771
    3. 'other' → logprob: -1.8664929866790771
    4. ' scalar' → logprob: -1.8664929866790771
    5. ' other' → logprob: -2.366492986679077
    6. ' self' → logprob: -4.241493225097656
    7. 'Other' → logprob: -11.116493225097656
    8. 'Scalar' → logprob: -11.366493225097656
    9. ' ' → logprob: -12.241493225097656
    10. '_scalar' → logprob: -12.366493225097656

Token 766: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.28789013624191284
    2. ',' → logprob: -1.4128901958465576
    3. 'self' → logprob: -6.4128899574279785
    4. '(' → logprob: -6.4128899574279785
    5. ' (' → logprob: -6.5378899574279785
    6. '   ' → logprob: -6.6628899574279785
    7. '       ' → logprob: -7.9128899574279785
    8. ' self' → logprob: -8.537890434265137
    9. ',self' → logprob: -9.412890434265137
    10. ' ' → logprob: -10.537890434265137

Token 767: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16303116083145142
    2. '   ' → logprob: -2.2880311012268066
    3. 'self' → logprob: -3.0380311012268066
    4. ' self' → logprob: -7.913031101226807
    5. '```' → logprob: -8.038031578063965
    6. '	self' → logprob: -8.413031578063965
    7. '``' → logprob: -9.538031578063965
    8. '{
' → logprob: -10.663031578063965
    9. '(self' → logprob: -11.913031578063965
    10. ' ' → logprob: -12.288031578063965

Token 768: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03823162615299225
    2. 'Vec' → logprob: -3.288231611251831
    3. '   ' → logprob: -9.28823184967041
    4. ' self' → logprob: -9.78823184967041
    5. '       ' → logprob: -10.66323184967041
    6. 'Vector' → logprob: -11.66323184967041
    7. ' Vec' → logprob: -12.16323184967041
    8. 'vec' → logprob: -14.03823184967041
    9. 'def' → logprob: -14.28823184967041
    10. '
' → logprob: -14.66323184967041

Token 769: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.003621927695348859
    2. 'x' → logprob: -6.253622055053711
    3. '=' → logprob: -7.378622055053711
    4. '.' → logprob: -7.503622055053711
    5. 'self' → logprob: -8.003622055053711
    6. '   ' → logprob: -9.753622055053711
    7. ' =' → logprob: -10.378622055053711
    8. ',' → logprob: -10.878622055053711
    9. 'def' → logprob: -11.253622055053711
    10. ':' → logprob: -11.378622055053711

Token 770: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.12717409431934357
    2. ' *=' → logprob: -2.127174139022827
    3. '*' → logprob: -8.627174377441406
    4. '=' → logprob: -9.877174377441406
    5. ' ' → logprob: -12.002174377441406
    6. '   ' → logprob: -12.502174377441406
    7. ' *' → logprob: -13.252174377441406
    8. ' ' → logprob: -13.377174377441406
    9. ' =' → logprob: -13.877174377441406
    10. '  ' → logprob: -14.752174377441406

Token 771: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.029750604182481766
    2. ' scalar' → logprob: -3.5297505855560303
    3. 'sc' → logprob: -16.52975082397461
    4. '.scalar' → logprob: -17.65475082397461
    5. 'scala' → logprob: -18.52975082397461
    6. 's' → logprob: -18.52975082397461
    7. '_scalar' → logprob: -18.52975082397461
    8. ' ' → logprob: -18.65475082397461
    9. 'scale' → logprob: -19.02975082397461
    10. '   ' → logprob: -19.02975082397461

Token 772: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032381978817284107
    2. ',' → logprob: -5.878238201141357
    3. '
' → logprob: -8.1282377243042
    4. 'self' → logprob: -9.8782377243042
    5. '<|end|>' → logprob: -10.0032377243042
    6. '   ' → logprob: -11.8782377243042
    7. 'scalar' → logprob: -12.0032377243042
    8. ' scalar' → logprob: -12.2532377243042
    9. ',self' → logprob: -12.7532377243042
    10. ',s' → logprob: -12.7532377243042

Token 773: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010640407708706334
    2. 'return' → logprob: -9.625106811523438
    3. 'scalar' → logprob: -10.500106811523438
    4. 'self' → logprob: -12.250106811523438
    5. '   ' → logprob: -12.500106811523438
    6. ' scalar' → logprob: -13.375106811523438
    7. '
' → logprob: -13.875106811523438
    8. 'def' → logprob: -15.000106811523438
    9. '      ' → logprob: -15.250106811523438
    10. ' ' → logprob: -15.500106811523438

Token 774: ' self' (ID: 1051)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.00020413640595506877
    2. ' scalar' → logprob: -8.500204086303711
    3. 'self' (adapté à ' self') → logprob: -14.750204086303711
    4. '       ' → logprob: -15.500204086303711
    5. '   ' → logprob: -18.12520408630371
    6. 'scale' → logprob: -19.62520408630371
    7. '.scalar' → logprob: -19.62520408630371
    8. 'sc' → logprob: -19.87520408630371
    9. 's' → logprob: -20.87520408630371
    10. 'scala' → logprob: -21.12520408630371

Token 775: '.y' (ID: 4486)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.06255126744508743
    2. ' scalar' → logprob: -2.812551259994507
    3. 'x' → logprob: -7.687551498413086
    4. '.scalar' → logprob: -9.312551498413086
    5. '_scalar' → logprob: -10.562551498413086
    6. '<|end|>' → logprob: -12.937551498413086
    7. 'return' → logprob: -13.312551498413086
    8. 'y' → logprob: -14.062551498413086
    9. 'calar' → logprob: -14.187551498413086
    10. ' ' → logprob: -14.312551498413086

Token 776: ' *=' (ID: 25253)
  Prédit: ' scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scalar' → logprob: -0.2828376889228821
    2. ' *=' → logprob: -1.7828376293182373
    3. 'scalar' → logprob: -3.4078376293182373
    4. '*=' → logprob: -3.4078376293182373
    5. '       ' → logprob: -4.782837867736816
    6. ' ' → logprob: -7.157837867736816
    7. '=' → logprob: -7.157837867736816
    8. '*' → logprob: -7.782837867736816
    9. ' ' → logprob: -8.282837867736816
    10. '   ' → logprob: -8.532837867736816

Token 777: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.0380416102707386
    2. ' scalar' → logprob: -3.288041591644287
    3. '.scalar' → logprob: -16.038042068481445
    4. '_scalar' → logprob: -17.788042068481445
    5. '```' → logprob: -19.038042068481445
    6. ' ' → logprob: -19.163042068481445
    7. 's' → logprob: -19.413042068481445
    8. 'sc' → logprob: -19.788042068481445
    9. 'scala' → logprob: -20.038042068481445
    10. 'scale' → logprob: -20.288042068481445

Token 778: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003784631844609976
    2. 'return' → logprob: -5.628784656524658
    3. ' return' → logprob: -8.6287841796875
    4. 'self' → logprob: -13.1287841796875
    5. ' scalar' → logprob: -13.3787841796875
    6. 'scalar' → logprob: -14.0037841796875
    7. '      ' → logprob: -14.6287841796875
    8. '   ' → logprob: -15.3787841796875
    9. ' ' → logprob: -16.2537841796875
    10. ' self' → logprob: -16.2537841796875

Token 779: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18599383533000946
    2. 'return' → logprob: -1.9359937906265259
    3. 'scalar' → logprob: -3.6859939098358154
    4. ' scalar' → logprob: -8.185994148254395
    5. ' return' → logprob: -9.435994148254395
    6. '   ' → logprob: -12.060994148254395
    7. 'self' → logprob: -13.060994148254395
    8. '	return' → logprob: -14.435994148254395
    9. '      ' → logprob: -14.810994148254395
    10. '.scalar' → logprob: -15.060994148254395

Token 780: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0899563655257225
    2. '       ' → logprob: -2.839956283569336
    3. ' return' → logprob: -3.589956283569336
    4. '	return' → logprob: -14.589956283569336
    5. '   ' → logprob: -14.964956283569336
    6. '      ' → logprob: -16.089956283569336
    7. ' ' → logprob: -16.339956283569336
    8. 'eturn' → logprob: -16.964956283569336
    9. ':return' → logprob: -17.464956283569336
    10. '```' → logprob: -17.589956283569336

Token 781: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.2729995988775045e-06
    2. ' self' → logprob: -12.000006675720215
    3. '       ' → logprob: -18.3750057220459
    4. 's' → logprob: -20.2500057220459
    5. '   ' → logprob: -20.2500057220459
    6. '(self' → logprob: -20.6250057220459
    7. '	self' → logprob: -21.2500057220459
    8. '
' → logprob: -21.6250057220459
    9. ' ' → logprob: -22.2500057220459
    10. 'sel' → logprob: -22.5000057220459

Token 782: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09277426451444626
    2. '<|end|>' → logprob: -2.4677741527557373
    3. 'def' → logprob: -6.467774391174316
    4. ' def' → logprob: -7.092774391174316
    5. ' ' → logprob: -7.342774391174316
    6. '```' → logprob: -7.717774391174316
    7. '  ' → logprob: -9.217774391174316
    8. '#' → logprob: -9.717774391174316
    9. ')' → logprob: -10.342774391174316
    10. '<|end|>' → logprob: -10.467774391174316

Token 783: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015322738327085972
    2. 'def' → logprob: -4.265322685241699
    3. '```' → logprob: -6.890322685241699
    4. ' def' → logprob: -9.8903226852417
    5. '@property' → logprob: -10.2653226852417
    6. '<|end|>' → logprob: -10.6403226852417
    7. '    
' → logprob: -11.8903226852417
    8. ' ' → logprob: -12.0153226852417
    9. '``' → logprob: -12.3903226852417
    10. '  ' → logprob: -12.8903226852417

Token 784: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03851785883307457
    2. '   ' → logprob: -3.288517951965332
    3. ' def' → logprob: -7.663517951965332
    4. '```' → logprob: -12.163517951965332
    5. ' ' → logprob: -14.413517951965332
    6. '	def' → logprob: -14.913517951965332
    7. '@property' → logprob: -15.413517951965332
    8. '    
' → logprob: -16.288516998291016
    9. '  ' → logprob: -16.538516998291016
    10. ':def' → logprob: -17.163516998291016

Token 785: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001249281340278685
    2. ' __' → logprob: -6.876249313354492
    3. 'def' → logprob: -8.501249313354492
    4. '```' → logprob: -12.376249313354492
    5. ' def' → logprob: -12.501249313354492
    6. '.__' → logprob: -13.501249313354492
    7. '...' → logprob: -13.876249313354492
    8. '@' → logprob: -14.501249313354492
    9. 'de' → logprob: -14.876249313354492
    10. ' ' → logprob: -15.001249313354492

Token 786: 'id' (ID: 315)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.12790191173553467
    2. 'id' → logprob: -2.127902030944824
    3. 'imul' → logprob: -7.377902030944824
    4. 'im' → logprob: -8.127902030944824
    5. 'if' → logprob: -11.127902030944824
    6. 'div' → logprob: -11.252902030944824
    7. '``' → logprob: -11.752902030944824
    8. 'ip' → logprob: -12.502902030944824
    9. 'is' → logprob: -13.002902030944824
    10. '```' → logprob: -13.252902030944824

Token 787: 'iv' (ID: 349)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.2930630147457123
    2. 'iv' → logprob: -1.4180630445480347
    3. 'ul' → logprob: -5.168063163757324
    4. 'um' → logprob: -6.043063163757324
    5. 'u' → logprob: -6.793063163757324
    6. 'i' → logprob: -7.418063163757324
    7. '_mul' → logprob: -7.918063163757324
    8. 'ef' → logprob: -8.168063163757324
    9. ' mul' → logprob: -8.293063163757324
    10. 'imul' → logprob: -8.918063163757324

Token 788: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10175330936908722
    2. '__' → logprob: -2.9767532348632812
    3. '(' → logprob: -3.4767532348632812
    4. '(self' → logprob: -5.226753234863281
    5. '_(' → logprob: -5.351753234863281
    6. '_' → logprob: -5.476753234863281
    7. '(s' → logprob: -8.226753234863281
    8. '__((' → logprob: -9.351753234863281
    9. '__(
' → logprob: -9.476753234863281
    10. 'self' → logprob: -9.601753234863281

Token 789: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005131407640874386
    2. 'scalar' → logprob: -5.630131244659424
    3. ' self' → logprob: -6.630131244659424
    4. ' scalar' → logprob: -9.005131721496582
    5. 'def' → logprob: -10.505131721496582
    6. '(self' → logprob: -10.505131721496582
    7. '__' → logprob: -11.880131721496582
    8. '   ' → logprob: -12.255131721496582
    9. '_scalar' → logprob: -12.380131721496582
    10. ')' → logprob: -12.630131721496582

Token 790: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009558336809277534
    2. '(' → logprob: -5.384558200836182
    3. '__(' → logprob: -5.884558200836182
    4. '(s' → logprob: -6.384558200836182
    5. '_(' → logprob: -8.63455867767334
    6. ' (' → logprob: -8.63455867767334
    7. 'self' → logprob: -10.13455867767334
    8. '   ' → logprob: -10.75955867767334
    9. '<|end|>' → logprob: -11.13455867767334
    10. ' ' → logprob: -12.25955867767334

Token 791: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.47408050298690796
    2. ' scalar' → logprob: -0.974080502986908
    3. 'self' → logprob: -12.974080085754395
    4. 'Scalar' → logprob: -14.849080085754395
    5. '_scalar' → logprob: -15.099080085754395
    6. '.scalar' → logprob: -15.349080085754395
    7. 's' → logprob: -16.34908103942871
    8. 'sc' → logprob: -16.59908103942871
    9. ' ' → logprob: -16.97408103942871
    10. ' self' → logprob: -17.22408103942871

Token 792: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6910566687583923
    2. ')' → logprob: -1.941056728363037
    3. 'self' → logprob: -2.066056728363037
    4. '   ' → logprob: -2.691056728363037
    5. '       ' → logprob: -2.816056728363037
    6. '(' → logprob: -3.191056728363037
    7. ' (' → logprob: -3.691056728363037
    8. '):
' → logprob: -4.566056728363037
    9. ' self' → logprob: -4.566056728363037
    10. ',' → logprob: -4.941056728363037

Token 793: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035947179421782494
    2. 'self' → logprob: -5.878594875335693
    3. '   ' → logprob: -7.753594875335693
    4. 'def' → logprob: -9.378594398498535
    5. ' self' → logprob: -9.378594398498535
    6. '/' → logprob: -9.503594398498535
    7. '(' → logprob: -11.003594398498535
    8. 'return' → logprob: -11.128594398498535
    9. 'Trace' → logprob: -11.253594398498535
    10. 'raise' → logprob: -11.753594398498535

Token 794: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07832017540931702
    2. 'def' → logprob: -2.703320264816284
    3. '/' → logprob: -6.078320026397705
    4. '   ' → logprob: -6.203320026397705
    5. '       ' → logprob: -6.453320026397705
    6. 'return' → logprob: -6.703320026397705
    7. ' self' → logprob: -6.828320026397705
    8. '/self' → logprob: -10.078320503234863
    9. '__' → logprob: -10.453320503234863
    10. 'raise' → logprob: -10.578320503234863

Token 795: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25298431515693665
    2. '.x' → logprob: -1.5029842853546143
    3. ' x' → logprob: -7.002984523773193
    4. '=' → logprob: -9.002984046936035
    5. '/' → logprob: -12.252984046936035
    6. '	x' → logprob: -12.377984046936035
    7. '__' → logprob: -13.002984046936035
    8. '/x' → logprob: -13.127984046936035
    9. ' /' → logprob: -13.252984046936035
    10. '/=' → logprob: -13.502984046936035

Token 796: ' /=' (ID: 37808)
  Prédit: '/='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/=' → logprob: -0.0017249188385903835
    2. '/' → logprob: -7.001724720001221
    3. ' /=' → logprob: -7.126724720001221
    4. '=' → logprob: -12.001725196838379
    5. '//=' → logprob: -12.751725196838379
    6. 'div' → logprob: -15.376725196838379
    7. '   ' → logprob: -16.001724243164062
    8. '/__' → logprob: -16.001724243164062
    9. '```' → logprob: -16.501724243164062
    10. ' /' → logprob: -16.501724243164062

Token 797: ' scalar' (ID: 35065)
  Prédit: ' scalar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scalar' → logprob: -0.6931471824645996
    2. 'scalar' → logprob: -0.6931471824645996
    3. '.scalar' → logprob: -17.068147659301758
    4. 'sc' → logprob: -18.068147659301758
    5. '_scalar' → logprob: -18.318147659301758
    6. 'Scalar' → logprob: -19.943147659301758
    7. '       ' → logprob: -20.193147659301758
    8. '   ' → logprob: -20.568147659301758
    9. 'self' → logprob: -20.818147659301758
    10. '```' → logprob: -20.943147659301758

Token 798: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.172891830326989e-05
    2. '<|end|>' → logprob: -10.500082015991211
    3. ',' → logprob: -10.625082015991211
    4. 'return' → logprob: -11.250082015991211
    5. '   ' → logprob: -12.625082015991211
    6. ' return' → logprob: -13.000082015991211
    7. '	' → logprob: -13.000082015991211
    8. '/' → logprob: -13.625082015991211
    9. '      ' → logprob: -13.750082015991211
    10. 'import' → logprob: -14.125082015991211

Token 799: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.246537173457909e-06
    2. 'return' → logprob: -12.750003814697266
    3. '<|end|>' → logprob: -14.625003814697266
    4. '   ' → logprob: -15.250003814697266
    5. '      ' → logprob: -16.375003814697266
    6. 'import' → logprob: -16.625003814697266
    7. ' and' → logprob: -16.625003814697266
    8. 'self' → logprob: -17.000003814697266
    9. '     ' → logprob: -17.125003814697266
    10. '           ' → logprob: -17.125003814697266

Token 800: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.954393079970032e-05
    2. '       ' → logprob: -10.250049591064453
    3. 'scalar' → logprob: -11.500049591064453
    4. ' self' → logprob: -12.500049591064453
    5. 'return' → logprob: -15.250049591064453
    6. '   ' → logprob: -18.125049591064453
    7. ' scalar' → logprob: -19.250049591064453
    8. '	self' → logprob: -19.625049591064453
    9. '0' → logprob: -21.000049591064453
    10. '(self' → logprob: -21.125049591064453

Token 801: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.007919847965240479
    2. ' y' → logprob: -5.507919788360596
    3. '.y' → logprob: -5.632919788360596
    4. '   ' → logprob: -9.132920265197754
    5. '       ' → logprob: -9.382920265197754
    6. ' ' → logprob: -10.632920265197754
    7. ',y' → logprob: -11.382920265197754
    8. '_y' → logprob: -12.382920265197754
    9. ',' → logprob: -12.507920265197754
    10. 'x' → logprob: -12.757920265197754

Token 802: ' /=' (ID: 37808)
  Prédit: ' /='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /=' → logprob: -0.3158450424671173
    2. '/=' → logprob: -1.315845012664795
    3. '/' → logprob: -6.190845012664795
    4. '=' → logprob: -8.565845489501953
    5. '*=' → logprob: -8.940845489501953
    6. ' /' → logprob: -9.190845489501953
    7. ' *=' → logprob: -9.440845489501953
    8. ' =' → logprob: -11.440845489501953
    9. '   ' → logprob: -12.065845489501953
    10. '       ' → logprob: -12.190845489501953

Token 803: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.0015023599844425917
    2. ' scalar' → logprob: -6.501502513885498
    3. '.scalar' → logprob: -18.501502990722656
    4. 'scala' → logprob: -20.501502990722656
    5. ' ' → logprob: -20.626502990722656
    6. '   ' → logprob: -21.126502990722656
    7. '_scalar' → logprob: -21.126502990722656
    8. 'sc' → logprob: -22.126502990722656
    9. '```' → logprob: -22.376502990722656
    10. 'Scalar' → logprob: -23.626502990722656

Token 804: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003613256849348545
    2. 'return' → logprob: -8.000361442565918
    3. ' return' → logprob: -11.750361442565918
    4. '
' → logprob: -12.000361442565918
    5. '<|end|>' → logprob: -12.375361442565918
    6. ',' → logprob: -13.250361442565918
    7. '	' → logprob: -13.625361442565918
    8. '	return' → logprob: -14.000361442565918
    9. '   ' → logprob: -14.125361442565918
    10. 's' → logprob: -15.375361442565918

Token 805: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.537180211627856e-05
    2. 'return' → logprob: -10.125045776367188
    3. '   ' → logprob: -13.125045776367188
    4. ' return' → logprob: -13.750045776367188
    5. '	' → logprob: -14.375045776367188
    6. '      ' → logprob: -14.500045776367188
    7. ' ' → logprob: -14.750045776367188
    8. '     ' → logprob: -15.125045776367188
    9. '	return' → logprob: -16.000045776367188
    10. '           ' → logprob: -16.125045776367188

Token 806: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10037186741828918
    2. '       ' → logprob: -2.350371837615967
    3. ' return' → logprob: -8.725372314453125
    4. '   ' → logprob: -13.725372314453125
    5. 'Return' → logprob: -13.850372314453125
    6. ':return' → logprob: -15.100372314453125
    7. '	return' → logprob: -16.350372314453125
    8. 'self' → logprob: -16.475372314453125
    9. '```' → logprob: -16.475372314453125
    10. '0' → logprob: -16.850372314453125

Token 807: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.088346359931165e-07
    2. ' self' → logprob: -14.000000953674316
    3. '       ' → logprob: -19.875
    4. '   ' → logprob: -20.5
    5. '	self' → logprob: -21.875
    6. '(self' → logprob: -21.875
    7. '```' → logprob: -22.875
    8. 's' → logprob: -23.625
    9. '     ' → logprob: -24.0
    10. '  ' → logprob: -24.125

Token 808: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9589524865150452
    2. 'def' → logprob: -1.0839524269104004
    3. '<|end|>' → logprob: -1.7089524269104004
    4. ' def' → logprob: -2.7089524269104004
    5. ' ' → logprob: -3.7089524269104004
    6. '[' → logprob: -6.7089524269104
    7. '  ' → logprob: -6.9589524269104
    8. '...' → logprob: -7.0839524269104
    9. '```' → logprob: -7.4589524269104
    10. '(' → logprob: -7.4589524269104

Token 809: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47434189915657043
    2. 'def' → logprob: -0.974341869354248
    3. '@property' → logprob: -8.974342346191406
    4. '@' → logprob: -9.724342346191406
    5. ' def' → logprob: -9.849342346191406
    6. '    
' → logprob: -11.099342346191406
    7. '#' → logprob: -12.849342346191406
    8. '```' → logprob: -12.974342346191406
    9. ')' → logprob: -13.849342346191406
    10. '	def' → logprob: -13.974342346191406

Token 810: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018517737044021487
    2. 'def' (adapté à ' def') → logprob: -6.501851558685303
    3. '    
' → logprob: -9.126852035522461
    4. ' def' → logprob: -9.126852035522461
    5. '(' → logprob: -9.876852035522461
    6. ')' → logprob: -10.751852035522461
    7. '@' → logprob: -11.126852035522461
    8. ' ' → logprob: -11.376852035522461
    9. '@property' → logprob: -11.626852035522461
    10. '  ' → logprob: -12.751852035522461

Token 811: ' __' (ID: 2516)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.006719163153320551
    2. ' cross' → logprob: -5.00671911239624
    3. 'def' → logprob: -13.256719589233398
    4. 'dot' → logprob: -13.756719589233398
    5. 'copy' → logprob: -14.006719589233398
    6. '.cross' → logprob: -16.3817195892334
    7. '__' → logprob: -17.5067195892334
    8. ' ' → logprob: -18.0067195892334
    9. '```' → logprob: -18.3817195892334
    10. '_cross' → logprob: -18.3817195892334

Token 812: 'neg' (ID: 18775)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.059344582259655
    2. 'repr' → logprob: -3.559344530105591
    3. 'neg' → logprob: -4.30934476852417
    4. 'str' → logprob: -5.05934476852417
    5. 'mul' → logprob: -5.30934476852417
    6. 'abs' → logprob: -6.30934476852417
    7. 'lt' → logprob: -6.55934476852417
    8. 'flo' → logprob: -6.80934476852417
    9. 'tr' → logprob: -9.934344291687012
    10. 'xor' → logprob: -10.809344291687012

Token 813: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.030160611495375633
    2. '(self' → logprob: -3.655160665512085
    3. '(' → logprob: -6.155160427093506
    4. '__' → logprob: -6.405160427093506
    5. '__(
' → logprob: -10.405160903930664
    6. 'self' → logprob: -10.780160903930664
    7. '_(' → logprob: -11.530160903930664
    8. ' (' → logprob: -11.530160903930664
    9. '()(' → logprob: -13.655160903930664
    10. '__((' → logprob: -13.655160903930664

Token 814: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.128163257315464e-07
    2. '(self' → logprob: -15.125
    3. '(' → logprob: -17.0
    4. ' self' → logprob: -18.125
    5. ')' → logprob: -19.375
    6. 's' → logprob: -19.625
    7. ')(' → logprob: -21.375
    8. 'Self' → logprob: -21.625
    9. '   ' → logprob: -21.875
    10. '	self' → logprob: -22.0

Token 815: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09844999015331268
    2. '(' → logprob: -2.848449945449829
    3. 'self' → logprob: -3.348449945449829
    4. ')' → logprob: -8.34844970703125
    5. ')(' → logprob: -8.59844970703125
    6. ' (' → logprob: -8.97344970703125
    7. '   ' → logprob: -9.34844970703125
    8. '```' → logprob: -11.59844970703125
    9. '       ' → logprob: -11.84844970703125
    10. ' ' → logprob: -11.97344970703125

Token 816: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02135416306555271
    2. 'return' → logprob: -3.8963541984558105
    3. ' return' → logprob: -7.2713541984558105
    4. '   ' → logprob: -9.271353721618652
    5. '(' → logprob: -11.646353721618652
    6. '{return' → logprob: -12.521353721618652
    7. '	return' → logprob: -13.521353721618652
    8. '           ' → logprob: -13.646353721618652
    9. ':return' → logprob: -13.646353721618652
    10. '      ' → logprob: -13.771353721618652

Token 817: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004281396511942148
    2. 'Vec' → logprob: -5.504281520843506
    3. ' return' → logprob: -8.504281044006348
    4. ' Vec' → logprob: -15.504281044006348
    5. '       ' → logprob: -16.129281997680664
    6. '   ' → logprob: -17.129281997680664
    7. 'Return' → logprob: -17.379281997680664
    8. '```' → logprob: -18.879281997680664
    9. '	return' → logprob: -19.879281997680664
    10. 'Vector' → logprob: -20.004281997680664

Token 818: ' Vec' (ID: 22915)
  Prédit: 'Vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vec' → logprob: -0.00407923199236393
    2. ' Vec' → logprob: -5.504079341888428
    3. '	Vec' → logprob: -14.62907886505127
    4. 'self' → logprob: -15.12907886505127
    5. '(Vec' → logprob: -17.379079818725586
    6. '<Vec' → logprob: -18.879079818725586
    7. 'Vector' → logprob: -19.004079818725586
    8. 'vec' → logprob: -19.629079818725586
    9. '_vec' → logprob: -19.879079818725586
    10. 'Ve' → logprob: -19.879079818725586

Token 819: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -6.511406809295295e-06
    2. '(self' → logprob: -12.000006675720215
    3. '(' → logprob: -15.500006675720215
    4. '-self' → logprob: -16.6250057220459
    5. '-' → logprob: -17.1250057220459
    6. 'self' → logprob: -19.8750057220459
    7. '(
' → logprob: -20.3750057220459
    8. '((-' → logprob: -20.3750057220459
    9. '(-(' → logprob: -21.7500057220459
    10. ' (-' → logprob: -22.1250057220459

Token 820: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.128163257315464e-07
    2. ' self' → logprob: -15.625
    3. '(self' → logprob: -16.125
    4. '       ' → logprob: -19.25
    5. '
' → logprob: -20.0
    6. '   ' → logprob: -20.125
    7. '	self' → logprob: -20.25
    8. '=self' → logprob: -20.75
    9. '[self' → logprob: -21.25
    10. '```' → logprob: -21.875

Token 821: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00325899594463408
    2. 'self' → logprob: -5.878259181976318
    3. 'x' → logprob: -8.12825870513916
    4. '.' → logprob: -8.75325870513916
    5. '.self' → logprob: -15.37825870513916
    6. ' .' → logprob: -16.003259658813477
    7. ' self' → logprob: -16.378259658813477
    8. '   ' → logprob: -16.503259658813477
    9. '1' → logprob: -16.503259658813477
    10. '0' → logprob: -16.753259658813477

Token 822: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7848862373502925e-05
    2. ' ,' → logprob: -10.750027656555176
    3. ',-' → logprob: -12.250027656555176
    4. ',
' → logprob: -13.500027656555176
    5. '       ' → logprob: -16.000028610229492
    6. '   ' → logprob: -18.125028610229492
    7. ',self' → logprob: -18.125028610229492
    8. ',y' → logprob: -19.125028610229492
    9. ',n' → logprob: -19.375028610229492
    10. ',
' → logprob: -19.500028610229492

Token 823: ' -' (ID: 533)
  Prédit: '-self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-self' → logprob: -0.009886059910058975
    2. '-' → logprob: -5.009886264801025
    3. ' -' → logprob: -5.759886264801025
    4. '-js' → logprob: -13.259885787963867
    5. '-python' → logprob: -13.259885787963867
    6. '-this' → logprob: -14.009885787963867
    7. '-vector' → logprob: -14.009885787963867
    8. '-ui' → logprob: -14.259885787963867
    9. '-neg' → logprob: -14.634885787963867
    10. '-my' → logprob: -14.759885787963867

Token 824: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.127333340875339e-06
    2. ' self' → logprob: -12.500003814697266
    3. '-self' → logprob: -15.250003814697266
    4. '(self' → logprob: -17.000003814697266
    5. '   ' → logprob: -18.250003814697266
    6. '       ' → logprob: -18.250003814697266
    7. '.self' → logprob: -18.500003814697266
    8. '	self' → logprob: -18.500003814697266
    9. '<|end|>' → logprob: -18.500003814697266
    10. '[self' → logprob: -19.125003814697266

Token 825: '.y' (ID: 4486)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00701811071485281
    2. 'y' → logprob: -5.007018089294434
    3. '.y' → logprob: -8.132018089294434
    4. ' self' → logprob: -12.007018089294434
    5. '.self' → logprob: -13.882018089294434
    6. '-self' → logprob: -14.507018089294434
    7. '.' → logprob: -14.882018089294434
    8. '   ' → logprob: -15.382018089294434
    9. '```' → logprob: -16.00701904296875
    10. ' ' → logprob: -16.25701904296875

Token 826: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.375
    3. '   ' → logprob: -16.0
    4. '<|end|>' → logprob: -17.25
    5. ' )' → logprob: -18.0
    6. '),' → logprob: -19.125
    7. ')

' → logprob: -19.375
    8. ')return' → logprob: -19.875
    9. '`)' → logprob: -20.0
    10. '))' → logprob: -20.25

Token 827: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005238025914877653
    2. '   ' → logprob: -5.255238056182861
    3. ' def' → logprob: -12.630237579345703
    4. '```' → logprob: -14.380237579345703
    5. '@property' → logprob: -15.255237579345703
    6. '	def' → logprob: -16.005237579345703
    7. '    
' → logprob: -16.755237579345703
    8. ':def' → logprob: -18.630237579345703
    9. '
' → logprob: -19.255237579345703
    10. '@' → logprob: -19.755237579345703

Token 828: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.961759259458631e-06
    2. '   ' → logprob: -12.500004768371582
    3. ' def' → logprob: -14.125004768371582
    4. '@property' → logprob: -14.750004768371582
    5. '@' → logprob: -19.5000057220459
    6. '	def' → logprob: -19.8750057220459
    7. '```' → logprob: -20.3750057220459
    8. '    
' → logprob: -20.5000057220459
    9. ':def' → logprob: -20.7500057220459
    10. '#' → logprob: -20.8750057220459

Token 829: ' __' (ID: 2516)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.00034809779026545584
    2. 'dot' → logprob: -8.250348091125488
    3. ' cross' → logprob: -9.375348091125488
    4. '__' → logprob: -13.625348091125488
    5. 'copy' → logprob: -14.750348091125488
    6. 'def' → logprob: -15.125348091125488
    7. 'length' → logprob: -16.875349044799805
    8. ' dot' → logprob: -16.875349044799805
    9. '.cross' → logprob: -16.875349044799805
    10. ' ' → logprob: -18.125349044799805

Token 830: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0005122834118083119
    2. 'repr' → logprob: -8.00051212310791
    3. 'abs' → logprob: -8.75051212310791
    4. 'lt' → logprob: -11.25051212310791
    5. 'str' → logprob: -12.62551212310791
    6. 'xor' → logprob: -13.75051212310791
    7. 'flo' → logprob: -14.25051212310791
    8. 'mul' → logprob: -15.00051212310791
    9. 'pow' → logprob: -16.875513076782227
    10. 'float' → logprob: -18.000513076782227

Token 831: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005245260428637266
    2. '__' → logprob: -5.505245208740234
    3. '(self' → logprob: -7.255245208740234
    4. '(' → logprob: -8.005245208740234
    5. '__((' → logprob: -9.130245208740234
    6. '__(
' → logprob: -11.880245208740234
    7. '__(*' → logprob: -12.255245208740234
    8. '__('' → logprob: -12.755245208740234
    9. '__("' → logprob: -13.630245208740234
    10. '(__' → logprob: -14.880245208740234

Token 832: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011367550177965313
    2. ' self' → logprob: -9.375113487243652
    3. '(self' → logprob: -10.500113487243652
    4. 'other' → logprob: -14.000113487243652
    5. '(' → logprob: -16.87511444091797
    6. ')' → logprob: -16.87511444091797
    7. ' ' → logprob: -16.87511444091797
    8. '
' → logprob: -17.25011444091797
    9. '   ' → logprob: -18.12511444091797
    10. 'def' → logprob: -18.12511444091797

Token 833: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01358931977301836
    2. '(' → logprob: -4.513589382171631
    3. '__(' → logprob: -6.013589382171631
    4. 'self' → logprob: -10.263588905334473
    5. ')(' → logprob: -10.763588905334473
    6. '```' → logprob: -11.138588905334473
    7. ' (' → logprob: -11.638588905334473
    8. ',' → logprob: -12.638588905334473
    9. '<|end|>' → logprob: -13.138588905334473
    10. ')' → logprob: -13.763588905334473

Token 834: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.004078639671206474
    2. ' other' → logprob: -5.5040788650512695
    3. 'self' → logprob: -15.25407886505127
    4. 'Other' → logprob: -17.629077911376953
    5. '(other' → logprob: -18.629077911376953
    6. '_other' → logprob: -19.129077911376953
    7. '.other' → logprob: -20.379077911376953
    8. ' self' → logprob: -22.629077911376953
    9. 'OTHER' → logprob: -23.129077911376953
    10. '其他' → logprob: -23.629077911376953

Token 835: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21612514555454254
    2. '):' → logprob: -1.7161251306533813
    3. '(self' → logprob: -4.841125011444092
    4. '):
' → logprob: -5.591125011444092
    5. ')' → logprob: -6.716125011444092
    6. '(' → logprob: -7.466125011444092
    7. ' ,' → logprob: -8.09112548828125
    8. 'self' → logprob: -8.34112548828125
    9. ' ):' → logprob: -8.84112548828125
    10. ',self' → logprob: -9.09112548828125

Token 836: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18503281474113464
    2. '       ' → logprob: -2.060032844543457
    3. ' return' → logprob: -4.435032844543457
    4. '(' → logprob: -4.435032844543457
    5. '   ' → logprob: -4.685032844543457
    6. 'return' → logprob: -5.810032844543457
    7. ' (' → logprob: -6.060032844543457
    8. 'def' → logprob: -7.185032844543457
    9. 'self' → logprob: -7.560032844543457
    10. '    ' → logprob: -7.685032844543457

Token 837: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006850938778370619
    2. 'self' → logprob: -5.006850719451904
    3. ' return' → logprob: -9.131851196289062
    4. '(self' → logprob: -11.256851196289062
    5. 'abs' → logprob: -11.506851196289062
    6. '       ' → logprob: -13.506851196289062
    7. 'is' → logprob: -13.631851196289062
    8. '   ' → logprob: -14.506851196289062
    9. 'def' → logprob: -14.631851196289062
    10. ' self' → logprob: -15.506851196289062

Token 838: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04707890748977661
    2. ' self' → logprob: -3.297078847885132
    3. '(self' → logprob: -4.797079086303711
    4. ' (' → logprob: -7.797079086303711
    5. ' isinstance' → logprob: -8.172079086303711
    6. 'abs' → logprob: -11.047079086303711
    7. 'is' → logprob: -11.047079086303711
    8. '(abs' → logprob: -11.672079086303711
    9. '(' → logprob: -12.422079086303711
    10. '(is' → logprob: -13.297079086303711

Token 839: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.3856492842023727e-06
    2. '.' → logprob: -13.875000953674316
    3. 'x' → logprob: -15.875000953674316
    4. ' .' → logprob: -16.250001907348633
    5. '.__' → logprob: -16.250001907348633
    6. ' is' → logprob: -16.875001907348633
    7. '.X' → logprob: -18.750001907348633
    8. '.user' → logprob: -19.250001907348633
    9. '._' → logprob: -19.500001907348633
    10. '.y' → logprob: -19.625001907348633

Token 840: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10021325200796127
    2. ' ==' → logprob: -2.3502132892608643
    3. '==
' → logprob: -12.725213050842285
    4. '=' → logprob: -12.850213050842285
    5. '()==' → logprob: -14.100213050842285
    6. ')==' → logprob: -15.850213050842285
    7. '==(' → logprob: -17.2252140045166
    8. ']==' → logprob: -17.4752140045166
    9. '===' → logprob: -17.7252140045166
    10. ' =' → logprob: -17.9752140045166

Token 841: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.011047814972698689
    2. ' other' → logprob: -4.511047840118408
    3. '(other' → logprob: -18.76104736328125
    4. 'self' → logprob: -19.26104736328125
    5. 'Other' → logprob: -20.51104736328125
    6. '.other' → logprob: -21.13604736328125
    7. '
' → logprob: -21.76104736328125
    8. '_other' → logprob: -22.01104736328125
    9. ' ' → logprob: -22.38604736328125
    10. '   ' → logprob: -22.63604736328125

Token 842: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.127008318901062
    2. '.' → logprob: -2.1270084381103516
    3. '.other' → logprob: -10.252008438110352
    4. ' .' → logprob: -10.377008438110352
    5. 'x' → logprob: -11.502008438110352
    6. '   ' → logprob: -14.127008438110352
    7. '.y' → logprob: -14.502008438110352
    8. '.user' → logprob: -14.502008438110352
    9. 'and' → logprob: -14.627008438110352
    10. 'other' → logprob: -15.752008438110352

Token 843: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10021357238292694
    2. 'and' → logprob: -2.3502135276794434
    3. '<|end|>' → logprob: -12.225214004516602
    4. '	and' → logprob: -13.725214004516602
    5. '       ' → logprob: -15.100214004516602
    6. ' ' → logprob: -15.475214004516602
    7. ' ' → logprob: -15.975214004516602
    8. '&&' → logprob: -16.2252140045166
    9. '        ' → logprob: -16.8502140045166
    10. ' or' → logprob: -17.1002140045166

Token 844: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001974669052287936
    2. ' self' → logprob: -6.251974582672119
    3. 'other' → logprob: -10.001975059509277
    4. ' other' → logprob: -14.751975059509277
    5. '       ' → logprob: -14.876975059509277
    6. '	self' → logprob: -17.50197410583496
    7. '(self' → logprob: -18.00197410583496
    8. '   ' → logprob: -18.25197410583496
    9. ' ' → logprob: -19.50197410583496
    10. '
' → logprob: -20.12697410583496

Token 845: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06206896901130676
    2. '.y' → logprob: -2.8120689392089844
    3. 'self' → logprob: -10.187068939208984
    4. ' y' → logprob: -10.312068939208984
    5. 'other' → logprob: -10.437068939208984
    6. 'Y' → logprob: -15.187068939208984
    7. '.' → logprob: -15.187068939208984
    8. '```' → logprob: -16.062068939208984
    9. '	y' → logprob: -16.187068939208984
    10. '   ' → logprob: -16.312068939208984

Token 846: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868768811225891
    2. '==' → logprob: -1.1368768215179443
    3. '==
' → logprob: -12.636877059936523
    4. ')==' → logprob: -14.386877059936523
    5. '=' → logprob: -14.636877059936523
    6. ']==' → logprob: -15.011877059936523
    7. '<|end|>' → logprob: -15.011877059936523
    8. ' ==
' → logprob: -15.511877059936523
    9. ' ' → logprob: -16.011877059936523
    10. '===' → logprob: -16.011877059936523

Token 847: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0009114635176956654
    2. ' other' → logprob: -7.000911235809326
    3. 'self' → logprob: -18.875911712646484
    4. '(other' → logprob: -19.000911712646484
    5. '.other' → logprob: -20.250911712646484
    6. 'Other' → logprob: -20.750911712646484
    7. '_other' → logprob: -21.750911712646484
    8. '   ' → logprob: -23.875911712646484
    9. '
' → logprob: -24.125911712646484
    10. '       ' → logprob: -24.250911712646484

Token 848: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00028016636497341096
    2. 'y' → logprob: -8.625280380249023
    3. '.' → logprob: -9.250280380249023
    4. '.x' → logprob: -12.375280380249023
    5. ' y' → logprob: -17.000280380249023
    6. ' .' → logprob: -17.000280380249023
    7. '   ' → logprob: -17.000280380249023
    8. '<|end|>' → logprob: -17.125280380249023
    9. ' ' → logprob: -17.250280380249023
    10. '	y' → logprob: -17.875280380249023

Token 849: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05660459026694298
    2. '
' → logprob: -3.3066046237945557
    3. '```' → logprob: -4.681604385375977
    4. '    
' → logprob: -5.556604385375977
    5. '<|end|>' → logprob: -6.181604385375977
    6. 'def' → logprob: -6.806604385375977
    7. ' ' → logprob: -7.181604385375977
    8. ' def' → logprob: -7.806604385375977
    9. '``' → logprob: -8.181604385375977
    10. '  
' → logprob: -8.306604385375977

Token 850: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08091051876544952
    2. '
' → logprob: -2.5809104442596436
    3. '```' → logprob: -6.955910682678223
    4. '    
' → logprob: -7.080910682678223
    5. 'def' → logprob: -9.205910682678223
    6. ' def' → logprob: -9.955910682678223
    7. '``' → logprob: -11.330910682678223
    8. '[' → logprob: -11.330910682678223
    9. '

' → logprob: -11.705910682678223
    10. ' 
' → logprob: -11.955910682678223

Token 851: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20578891038894653
    2. 'def' (adapté à ' def') → logprob: -1.7057888507843018
    3. ' def' → logprob: -5.455789089202881
    4. '```' → logprob: -9.830788612365723
    5. '
' → logprob: -10.705788612365723
    6. '    
' → logprob: -11.580788612365723
    7. '	def' → logprob: -12.580788612365723
    8. '@property' → logprob: -13.330788612365723
    9. ' ' → logprob: -13.705788612365723
    10. '[' → logprob: -14.330788612365723

Token 852: ' __' (ID: 2516)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.005150504410266876
    2. ' cross' → logprob: -5.380150318145752
    3. 'def' → logprob: -7.755150318145752
    4. 'dot' → logprob: -9.38015079498291
    5. 'copy' → logprob: -11.75515079498291
    6. '.cross' → logprob: -12.25515079498291
    7. '__' → logprob: -13.25515079498291
    8. ' def' → logprob: -14.25515079498291
    9. ' dot' → logprob: -14.25515079498291
    10. '_cross' → logprob: -14.75515079498291

Token 853: 'ne' (ID: 611)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.46704405546188354
    2. 'lt' → logprob: -1.2170441150665283
    3. 'hash' → logprob: -2.7170441150665283
    4. 'str' → logprob: -4.967043876647949
    5. 'abs' → logprob: -5.717043876647949
    6. 'xor' → logprob: -7.717043876647949
    7. 'ne' → logprob: -8.71704387664795
    8. 'le' → logprob: -9.59204387664795
    9. 'flo' → logprob: -10.59204387664795
    10. 'mul' → logprob: -12.46704387664795

Token 854: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.05063336715102196
    2. '__' → logprob: -3.550633430480957
    3. '(' → logprob: -4.050633430480957
    4. '(self' → logprob: -6.175633430480957
    5. '__((' → logprob: -7.550633430480957
    6. '__(
' → logprob: -8.175633430480957
    7. ' (' → logprob: -8.300633430480957
    8. '<|end|>' → logprob: -10.300633430480957
    9. '_(' → logprob: -11.425633430480957
    10. '__(*' → logprob: -11.425633430480957

Token 855: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004416467156261206
    2. ' self' → logprob: -5.504416465759277
    3. 'other' → logprob: -8.004416465759277
    4. ' other' → logprob: -12.504416465759277
    5. '(self' → logprob: -14.879416465759277
    6. ' ' → logprob: -18.504417419433594
    7. ',' → logprob: -19.254417419433594
    8. '0' → logprob: -19.754417419433594
    9. '   ' → logprob: -19.754417419433594
    10. '	self' → logprob: -19.754417419433594

Token 856: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0663091167807579
    2. '(self' → logprob: -3.1913092136383057
    3. '(' → logprob: -3.9413092136383057
    4. '__' → logprob: -6.316308975219727
    5. ',' → logprob: -7.066308975219727
    6. ' (' → logprob: -7.566308975219727
    7. '__((' → logprob: -8.941308975219727
    8. '__(
' → logprob: -9.316308975219727
    9. 'self' → logprob: -9.441308975219727
    10. '__,' → logprob: -9.566308975219727

Token 857: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0024756586644798517
    2. ' other' → logprob: -6.002475738525391
    3. '(other' → logprob: -17.25247573852539
    4. 'Other' → logprob: -18.00247573852539
    5. 'self' → logprob: -18.12747573852539
    6. '_other' → logprob: -19.75247573852539
    7. '.other' → logprob: -20.12747573852539
    8. '-other' → logprob: -23.62747573852539
    9. 'OTHER' → logprob: -24.12747573852539
    10. '其他' → logprob: -24.75247573852539

Token 858: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5890024304389954
    2. ')' → logprob: -1.9640023708343506
    3. '(' → logprob: -2.0890023708343506
    4. ',' → logprob: -2.3390023708343506
    5. '<|end|>' → logprob: -3.2140023708343506
    6. '):
' → logprob: -4.33900260925293
    7. ' self' → logprob: -4.96400260925293
    8. 'self' → logprob: -5.21400260925293
    9. ' (' → logprob: -5.46400260925293
    10. ')(' → logprob: -6.33900260925293

Token 859: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5749914050102234
    2. '       ' → logprob: -1.5749914646148682
    3. 'return' → logprob: -1.8249914646148682
    4. '   ' → logprob: -2.699991464614868
    5. 'def' → logprob: -7.449991226196289
    6. '    ' → logprob: -7.949991226196289
    7. ' not' → logprob: -8.699991226196289
    8. 'self' → logprob: -8.824991226196289
    9. '	return' → logprob: -9.324991226196289
    10. ' self' → logprob: -9.324991226196289

Token 860: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16061657667160034
    2. 'not' → logprob: -1.9106166362762451
    3. 'self' → logprob: -8.535616874694824
    4. ' return' → logprob: -8.910616874694824
    5. ' not' → logprob: -9.910616874694824
    6. 'def' → logprob: -11.660616874694824
    7. '   ' → logprob: -13.285616874694824
    8. '!' → logprob: -14.785616874694824
    9. '       ' → logprob: -14.910616874694824
    10. '
' → logprob: -16.535615921020508

Token 861: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.17845837771892548
    2. ' not' → logprob: -2.1784584522247314
    3. 'self' → logprob: -3.0534584522247314
    4. ' self' → logprob: -5.803458213806152
    5. '!' → logprob: -12.428458213806152
    6. '   ' → logprob: -12.928458213806152
    7. '(not' → logprob: -13.053458213806152
    8. '(self' → logprob: -13.303458213806152
    9. ' ' → logprob: -13.803458213806152
    10. '	not' → logprob: -15.053458213806152

Token 862: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019306590547785163
    2. 'self' → logprob: -6.2519307136535645
    3. ' (' → logprob: -13.626930236816406
    4. '(other' → logprob: -14.626930236816406
    5. ' self' → logprob: -15.126930236816406
    6. '(' → logprob: -16.751930236816406
    7. '	self' → logprob: -19.501930236816406
    8. '[self' → logprob: -20.251930236816406
    9. '(op' → logprob: -20.376930236816406
    10. 'other' → logprob: -20.626930236816406

Token 863: '.__' (ID: 10210)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20745590329170227
    2. '.__' → logprob: -1.7074558734893799
    3. ' ==' → logprob: -5.332456111907959
    4. '.' → logprob: -7.582456111907959
    5. '__' → logprob: -7.582456111907959
    6. '().__' → logprob: -9.9574556350708
    7. '==(' → logprob: -10.7074556350708
    8. '()==' → logprob: -10.9574556350708
    9. '.x' → logprob: -11.0824556350708
    10. '==
' → logprob: -11.3324556350708

Token 864: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: 0.0
    2. '_eq' → logprob: -18.0
    3. 'ne' → logprob: -19.125
    4. 'e' → logprob: -20.75
    5. '(eq' → logprob: -21.875
    6. ' eq' → logprob: -22.0
    7. 'equ' → logprob: -22.0
    8. '.eq' → logprob: -22.5
    9. 'peq' → logprob: -23.0
    10. '
' → logprob: -23.625

Token 865: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.003695801133289933
    2. '(' → logprob: -6.253695964813232
    3. '(other' → logprob: -6.378695964813232
    4. '__' → logprob: -10.003695487976074
    5. '(op' → logprob: -11.878695487976074
    6. '__(
' → logprob: -12.128695487976074
    7. '__((' → logprob: -12.253695487976074
    8. '(object' → logprob: -13.753695487976074
    9. ' (' → logprob: -14.253695487976074
    10. '_(' → logprob: -14.503695487976074

Token 866: 'other' (ID: 2141)
  Prédit: 'other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -6.704273118884885e-07
    2. ' other' → logprob: -14.250000953674316
    3. '(other' → logprob: -19.25
    4. 'self' → logprob: -21.0
    5. '
' → logprob: -22.5
    6. 'Other' → logprob: -22.875
    7. ' ' → logprob: -24.0
    8. '.other' → logprob: -24.0
    9. '_other' → logprob: -25.375
    10. 'othe' → logprob: -25.625

Token 867: ')

' (ID: 1029)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.027086790651082993
    2. ')' → logprob: -3.6520867347717285
    3. 'other' → logprob: -8.027087211608887
    4. ')(' → logprob: -8.527087211608887
    5. ',' → logprob: -8.777087211608887
    6. '(' → logprob: -9.277087211608887
    7. ' other' → logprob: -11.902087211608887
    8. '.other' → logprob: -13.777087211608887
    9. ' (' → logprob: -14.277087211608887
    10. '())' → logprob: -14.402087211608887

Token 868: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20448514819145203
    2. 'def' → logprob: -1.7044851779937744
    3. ' def' → logprob: -5.954484939575195
    4. '```' → logprob: -7.704484939575195
    5. '    
' → logprob: -12.329484939575195
    6. ' ' → logprob: -12.454484939575195
    7. '
' → logprob: -12.579484939575195
    8. '	def' → logprob: -12.704484939575195
    9. ':def' → logprob: -12.704484939575195
    10. ':' → logprob: -14.329484939575195

Token 869: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035471681505441666
    2. 'def' (adapté à ' def') → logprob: -3.4104716777801514
    3. '```' → logprob: -6.9104719161987305
    4. ' def' → logprob: -7.4104719161987305
    5. '
' → logprob: -8.53547191619873
    6. '    
' → logprob: -11.28547191619873
    7. ' ' → logprob: -12.66047191619873
    8. '(' → logprob: -13.28547191619873
    9. '``' → logprob: -13.28547191619873
    10. '	def' → logprob: -13.41047191619873

Token 870: ' __' (ID: 2516)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0009614814771339297
    2. ' cross' → logprob: -7.1259613037109375
    3. 'dot' → logprob: -9.500961303710938
    4. 'def' → logprob: -9.625961303710938
    5. 'copy' → logprob: -11.125961303710938
    6. '.cross' → logprob: -14.125961303710938
    7. 'repr' → logprob: -15.625961303710938
    8. ' dot' → logprob: -15.625961303710938
    9. '__' → logprob: -16.000961303710938
    10. 'abs' → logprob: -16.500961303710938

Token 871: 'hash' (ID: 16909)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.4125032424926758
    2. 'lt' → logprob: -1.6625032424926758
    3. 'str' → logprob: -2.162503242492676
    4. 'abs' → logprob: -3.912503242492676
    5. 'hash' → logprob: -4.412503242492676
    6. 'flo' → logprob: -7.037503242492676
    7. 'xor' → logprob: -9.037503242492676
    8. 'mul' → logprob: -9.287503242492676
    9. 'bool' → logprob: -10.162503242492676
    10. 'float' → logprob: -10.287503242492676

Token 872: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13656313717365265
    2. '(' → logprob: -2.3865630626678467
    3. '__(' → logprob: -3.3865630626678467
    4. ' (' → logprob: -6.636563301086426
    5. ')(' → logprob: -8.136563301086426
    6. '<|end|>' → logprob: -10.011563301086426
    7. '__((' → logprob: -10.386563301086426
    8. '__(
' → logprob: -10.386563301086426
    9. '(object' → logprob: -10.761563301086426
    10. '   ' → logprob: -10.886563301086426

Token 873: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.896309739408025e-07
    2. ' self' → logprob: -14.750000953674316
    3. '(self' → logprob: -15.625000953674316
    4. 'def' → logprob: -16.25
    5. '   ' → logprob: -17.0
    6. 'return' → logprob: -18.125
    7. 'None' → logprob: -18.875
    8. '	self' → logprob: -19.625
    9. 'other' → logprob: -19.875
    10. ')' → logprob: -20.0

Token 874: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0018422520952299237
    2. '(' → logprob: -7.251842021942139
    3. 'self' → logprob: -7.251842021942139
    4. ',' → logprob: -8.751842498779297
    5. ')(' → logprob: -9.001842498779297
    6. ' (' → logprob: -9.376842498779297
    7. ')' → logprob: -10.251842498779297
    8. ' self' → logprob: -11.876842498779297
    9. '   ' → logprob: -12.376842498779297
    10. '(None' → logprob: -12.876842498779297

Token 875: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008323782822117209
    2. '   ' → logprob: -7.250832557678223
    3. 'return' → logprob: -9.125832557678223
    4. ' return' → logprob: -11.875832557678223
    5. 'self' → logprob: -13.125832557678223
    6. '(self' → logprob: -14.000832557678223
    7. '{return' → logprob: -14.250832557678223
    8. '      ' → logprob: -14.375832557678223
    9. '```' → logprob: -14.375832557678223
    10. '           ' → logprob: -14.375832557678223

Token 876: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006671638693660498
    2. ' return' → logprob: -8.500667572021484
    3. 'def' → logprob: -8.625667572021484
    4. '       ' → logprob: -8.750667572021484
    5. '   ' → logprob: -9.000667572021484
    6. 'hash' → logprob: -13.875667572021484
    7. '	return' → logprob: -14.250667572021484
    8. '           ' → logprob: -15.125667572021484
    9. '```' → logprob: -15.750667572021484
    10. 'x' → logprob: -16.000667572021484

Token 877: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -9.968312951968983e-06
    2. '(hash' → logprob: -12.000009536743164
    3. ' hash' → logprob: -12.500009536743164
    4. '   ' → logprob: -16.875009536743164
    5. 'self' → logprob: -17.625009536743164
    6. 'Hash' → logprob: -19.750009536743164
    7. '	hash' → logprob: -20.000009536743164
    8. '(' → logprob: -20.125009536743164
    9. 'x' → logprob: -20.625009536743164
    10. '((' → logprob: -20.750009536743164

Token 878: '('' (ID: 706)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00030686063109897077
    2. '(self' → logprob: -8.250307083129883
    3. '(' → logprob: -10.000307083129883
    4. '(
' → logprob: -16.500307083129883
    5. '(tuple' → logprob: -19.375307083129883
    6. ' ((' → logprob: -19.625307083129883
    7. ' (' → logprob: -19.750307083129883
    8. '(('' → logprob: -20.500307083129883
    9. '(((' → logprob: -20.750307083129883
    10. '(("' → logprob: -20.875307083129883

Token 879: 'Vec' (ID: 18136)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16085705161094666
    2. '(Vec' → logprob: -2.4108569622039795
    3. '(x' → logprob: -3.4108569622039795
    4. '(' → logprob: -3.7858569622039795
    5. '(V' → logprob: -6.285857200622559
    6. '(Vector' → logprob: -7.410857200622559
    7. 'Vec' → logprob: -8.285857200622559
    8. '(vec' → logprob: -9.285857200622559
    9. 'x' → logprob: -9.660857200622559
    10. 'self' → logprob: -9.910857200622559

Token 880: '',' (ID: 787)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7612506747245789
    2. '')' → logprob: -1.5112507343292236
    3. '((' → logprob: -2.1362507343292236
    4. ',' → logprob: -2.2612507343292236
    5. '(' → logprob: -3.3862507343292236
    6. '(x' → logprob: -3.7612507343292236
    7. '',' → logprob: -4.3862504959106445
    8. ')' → logprob: -4.6362504959106445
    9. ''' → logprob: -5.6362504959106445
    10. '',(' → logprob: -7.0112504959106445

Token 881: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2036883682012558
    2. 'self' → logprob: -1.703688383102417
    3. ' (' → logprob: -6.453688144683838
    4. ' self' → logprob: -7.703688144683838
    5. '(' → logprob: -8.328688621520996
    6. ' ' → logprob: -13.453688621520996
    7. '('' → logprob: -13.703688621520996
    8. '   ' → logprob: -13.828688621520996
    9. '[self' → logprob: -15.203688621520996
    10. '(
' → logprob: -15.703688621520996

Token 882: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0003654978354461491
    2. '(self' → logprob: -8.250365257263184
    3. 'self' → logprob: -10.125365257263184
    4. ',' → logprob: -10.375365257263184
    5. '.' → logprob: -10.750365257263184
    6. ')' → logprob: -12.500365257263184
    7. 'x' → logprob: -12.875365257263184
    8. '(x' → logprob: -13.125365257263184
    9. ' self' → logprob: -13.625365257263184
    10. '(' → logprob: -14.000365257263184

Token 883: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11622283607721329
    2. ')' → logprob: -2.241222858428955
    3. '(self' → logprob: -6.241222858428955
    4. '(' → logprob: -6.866222858428955
    5. 'self' → logprob: -8.741222381591797
    6. ')+' → logprob: -9.241222381591797
    7. ',self' → logprob: -9.366222381591797
    8. ')
' → logprob: -11.241222381591797
    9. ',(' → logprob: -11.491222381591797
    10. ' ,' → logprob: -11.991222381591797

Token 884: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00672804145142436
    2. ' self' → logprob: -5.006728172302246
    3. '(self' → logprob: -11.381728172302246
    4. '(' → logprob: -14.506728172302246
    5. ' (' → logprob: -14.631728172302246
    6. ' ' → logprob: -15.506728172302246
    7. '   ' → logprob: -16.63172721862793
    8. '  ' → logprob: -17.38172721862793
    9. '	self' → logprob: -17.75672721862793
    10. '    ' → logprob: -18.25672721862793

Token 885: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.05023256689310074
    2. 'y' → logprob: -3.0502326488494873
    3. '.' → logprob: -7.050232410430908
    4. ',' → logprob: -8.050232887268066
    5. ' y' → logprob: -8.425232887268066
    6. ',y' → logprob: -9.300232887268066
    7. ')' → logprob: -10.425232887268066
    8. '.x' → logprob: -10.925232887268066
    9. '1' → logprob: -11.050232887268066
    10. ' ' → logprob: -11.175232887268066

Token 886: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005670914542861283
    2. ',' → logprob: -8.125567436218262
    3. '(' → logprob: -8.375567436218262
    4. ' )' → logprob: -11.375567436218262
    5. '   ' → logprob: -11.625567436218262
    6. '())' → logprob: -11.750567436218262
    7. ',)' → logprob: -12.750567436218262
    8. '       ' → logprob: -13.625567436218262
    9. ')
' → logprob: -13.875567436218262
    10. '(self' → logprob: -14.500567436218262

Token 887: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5547952651977539
    2. 'def' → logprob: -1.179795265197754
    3. ')' → logprob: -2.179795265197754
    4. ',' → logprob: -5.929795265197754
    5. '       ' → logprob: -7.179795265197754
    6. ':' → logprob: -7.554795265197754
    7. ' def' → logprob: -7.929795265197754
    8. '(' → logprob: -8.429795265197754
    9. '
' → logprob: -8.929795265197754
    10. '    
' → logprob: -9.304795265197754

Token 888: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4785754680633545
    2. ')' → logprob: -1.6035754680633545
    3. '   ' → logprob: -1.7285754680633545
    4. '       ' → logprob: -6.978575706481934
    5. '(' → logprob: -8.228575706481934
    6. ' ' → logprob: -8.978575706481934
    7. ' def' → logprob: -9.478575706481934
    8. '...' → logprob: -9.978575706481934
    9. ',' → logprob: -10.103575706481934
    10. '	def' → logprob: -10.603575706481934

Token 889: ' dot' (ID: 16579)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -2.7014437364414334e-05
    2. '__' → logprob: -11.12502670288086
    3. 'copy' → logprob: -11.50002670288086
    4. ' cross' → logprob: -13.25002670288086
    5. 'dot' → logprob: -15.62502670288086
    6. '_cross' → logprob: -16.00002670288086
    7. '.cross' → logprob: -17.00002670288086
    8. 'clone' → logprob: -17.12502670288086
    9. 'to' → logprob: -18.50002670288086
    10. 'c' → logprob: -19.00002670288086

Token 890: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05522752180695534
    2. '(' → logprob: -2.930227518081665
    3. ' (' → logprob: -8.055227279663086
    4. '(
' → logprob: -12.055227279663086
    5. '<|end|>' → logprob: -12.180227279663086
    6. '()' → logprob: -12.805227279663086
    7. 'self' → logprob: -13.055227279663086
    8. '(...)' → logprob: -13.430227279663086
    9. '(s' → logprob: -13.930227279663086
    10. '('' → logprob: -13.930227279663086

Token 891: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0022899024188518524
    2. '(' → logprob: -6.377289772033691
    3. ' (' → logprob: -7.502289772033691
    4. ',' → logprob: -11.002289772033691
    5. ')(' → logprob: -11.502289772033691
    6. ')' → logprob: -12.627289772033691
    7. 'self' → logprob: -12.752289772033691
    8. '<|end|>' → logprob: -14.252289772033691
    9. '(
' → logprob: -14.377289772033691
    10. ',self' → logprob: -14.752289772033691

Token 892: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.009183843620121479
    2. ' other' → logprob: -5.009183883666992
    3. 'self' → logprob: -6.009183883666992
    4. '(other' → logprob: -12.009183883666992
    5. ' self' → logprob: -12.884183883666992
    6. 'lambda' → logprob: -14.759183883666992
    7. 'Other' → logprob: -16.009183883666992
    8. '.other' → logprob: -16.759183883666992
    9. '_other' → logprob: -16.759183883666992
    10. 'def' → logprob: -17.259183883666992

Token 893: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007513784803450108
    2. '):
' → logprob: -7.375751495361328
    3. ')' → logprob: -9.625751495361328
    4. ',' → logprob: -10.000751495361328
    5. ' ):' → logprob: -11.500751495361328
    6. '   ' → logprob: -13.875751495361328
    7. '):

' → logprob: -14.000751495361328
    8. '):
' → logprob: -14.875751495361328
    9. 'self' → logprob: -15.125751495361328
    10. '(' → logprob: -15.500751495361328

Token 894: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11828494071960449
    2. 'return' → logprob: -2.2432849407196045
    3. ' return' → logprob: -5.243285179138184
    4. '   ' → logprob: -9.868285179138184
    5. 'self' → logprob: -9.868285179138184
    6. ':return' → logprob: -11.118285179138184
    7. '	return' → logprob: -11.368285179138184
    8. '(' → logprob: -11.743285179138184
    9. '(self' → logprob: -11.993285179138184
    10. '{return' → logprob: -12.243285179138184

Token 895: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.339278580620885e-06
    2. ' return' → logprob: -13.000001907348633
    3. 'self' → logprob: -18.625001907348633
    4. '	return' → logprob: -20.625001907348633
    5. '       ' → logprob: -21.625001907348633
    6. '   ' → logprob: -23.000001907348633
    7. 'result' → logprob: -23.000001907348633
    8. '```' → logprob: -23.875001907348633
    9. ':return' → logprob: -24.250001907348633
    10. 'ret' → logprob: -24.250001907348633

Token 896: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015028368216007948
    2. ' self' → logprob: -6.501502990722656
    3. '(self' → logprob: -14.751502990722656
    4. '
' → logprob: -17.501502990722656
    5. '	self' → logprob: -18.376502990722656
    6. ' ' → logprob: -18.501502990722656
    7. '   ' → logprob: -18.501502990722656
    8. '       ' → logprob: -18.626502990722656
    9. '[self' → logprob: -19.626502990722656
    10. 'Self' → logprob: -20.001502990722656

Token 897: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.531315314830863e-06
    2. '.' → logprob: -12.875003814697266
    3. 'x' → logprob: -13.875003814697266
    4. ' .' → logprob: -18.125003814697266
    5. '0' → logprob: -20.250003814697266
    6. '1' → logprob: -21.250003814697266
    7. ').' → logprob: -21.750003814697266
    8. '._' → logprob: -22.125003814697266
    9. '```' → logprob: -22.125003814697266
    10. '..' → logprob: -22.875003814697266

Token 898: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3868713080883026
    2. ' *' → logprob: -1.136871337890625
    3. '*object' → logprob: -15.886871337890625
    4. ' ' → logprob: -16.011871337890625
    5. '**' → logprob: -16.386871337890625
    6. '   ' → logprob: -19.386871337890625
    7. '*self' → logprob: -19.636871337890625
    8. '*out' → logprob: -19.761871337890625
    9. ' ' → logprob: -20.761871337890625
    10. ' **' → logprob: -21.761871337890625

Token 899: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -7.493430894101039e-05
    2. ' other' → logprob: -9.500075340270996
    3. '(other' → logprob: -21.12507438659668
    4. '.other' → logprob: -21.50007438659668
    5. 'Other' → logprob: -22.12507438659668
    6. 'self' → logprob: -23.62507438659668
    7. ' ' → logprob: -23.87507438659668
    8. '_other' → logprob: -24.12507438659668
    9. 'OTHER' → logprob: -25.12507438659668
    10. 'othe' → logprob: -25.50007438659668

Token 900: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014368340373039246
    2. 'other' → logprob: -4.264368534088135
    3. '.x' → logprob: -8.639368057250977
    4. ' other' → logprob: -11.264368057250977
    5. '.other' → logprob: -11.639368057250977
    6. ' x' → logprob: -12.014368057250977
    7. '(other' → logprob: -17.139368057250977
    8. '.' → logprob: -17.514368057250977
    9. 'scalar' → logprob: -17.514368057250977
    10. 'X' → logprob: -17.514368057250977

Token 901: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2256934493780136
    2. ' +' → logprob: -1.6006934642791748
    3. '<|end|>' → logprob: -8.475693702697754
    4. '   ' → logprob: -10.475693702697754
    5. '+self' → logprob: -11.475693702697754
    6. '+
' → logprob: -11.600693702697754
    7. '       ' → logprob: -11.850693702697754
    8. ' ' → logprob: -12.350693702697754
    9. '```' → logprob: -13.350693702697754
    10. '<|end|>' → logprob: -13.475693702697754

Token 902: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003368065692484379
    2. ' self' → logprob: -5.753367900848389
    3. 'other' → logprob: -8.628368377685547
    4. '       ' → logprob: -11.753368377685547
    5. ' other' → logprob: -12.628368377685547
    6. '	self' → logprob: -16.878368377685547
    7. ' ' → logprob: -17.253368377685547
    8. 'Other' → logprob: -17.253368377685547
    9. '(self' → logprob: -17.503368377685547
    10. '   ' → logprob: -17.503368377685547

Token 903: '.y' (ID: 4486)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.003673829138278961
    2. ' other' → logprob: -5.753674030303955
    3. '.other' → logprob: -8.003673553466797
    4. 'y' → logprob: -8.753673553466797
    5. '.y' → logprob: -13.003673553466797
    6. ' y' → logprob: -14.253673553466797
    7. '(other' → logprob: -14.628673553466797
    8. '_other' → logprob: -15.253673553466797
    9. 'Other' → logprob: -16.003673553466797
    10. 'self' → logprob: -16.003673553466797

Token 904: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20141558349132538
    2. '*' → logprob: -1.7014155387878418
    3. '*object' → logprob: -13.701416015625
    4. ' ' → logprob: -14.576416015625
    5. '*self' → logprob: -15.576416015625
    6. 'other' → logprob: -15.576416015625
    7. '   ' → logprob: -16.076416015625
    8. ' other' → logprob: -16.326416015625
    9. '<|end|>' → logprob: -16.701416015625
    10. '*out' → logprob: -17.201416015625

Token 905: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0002614550176076591
    2. ' other' → logprob: -8.250261306762695
    3. '(other' → logprob: -16.625261306762695
    4. '.other' → logprob: -16.750261306762695
    5. 'self' → logprob: -18.000261306762695
    6. 'Other' → logprob: -18.625261306762695
    7. '_other' → logprob: -18.750261306762695
    8. ' ' → logprob: -19.000261306762695
    9. '   ' → logprob: -19.500261306762695
    10. '       ' → logprob: -19.625261306762695

Token 906: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.038188714534044266
    2. 'y' → logprob: -3.2881886959075928
    3. '.x' → logprob: -9.538188934326172
    4. '.' → logprob: -10.538188934326172
    5. 's' → logprob: -11.288188934326172
    6. 'x' → logprob: -11.288188934326172
    7. ' y' → logprob: -11.788188934326172
    8. '*y' → logprob: -12.538188934326172
    9. '_y' → logprob: -13.163188934326172
    10. ')' → logprob: -13.538188934326172

Token 907: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06972053647041321
    2. '
' → logprob: -3.069720506668091
    3. '<|end|>' → logprob: -3.944720506668091
    4. 'def' → logprob: -7.19472074508667
    5. '    
' → logprob: -8.069720268249512
    6. '  ' → logprob: -8.944720268249512
    7. ' def' → logprob: -8.944720268249512
    8. '<|end|>' → logprob: -9.694720268249512
    9. ' ' → logprob: -10.069720268249512
    10. '```' → logprob: -10.444720268249512

Token 908: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05295293778181076
    2. 'def' → logprob: -3.052953004837036
    3. '
' → logprob: -5.677952766418457
    4. ' def' → logprob: -7.302952766418457
    5. ')' → logprob: -8.677952766418457
    6. '    
' → logprob: -9.927952766418457
    7. ' ' → logprob: -11.177952766418457
    8. '```' → logprob: -11.552952766418457
    9. '	def' → logprob: -12.427952766418457
    10. '(' → logprob: -13.052952766418457

Token 909: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3885048031806946
    2. '   ' → logprob: -1.1385047435760498
    3. ' def' → logprob: -6.638504981994629
    4. ')' → logprob: -8.513504981994629
    5. '
' → logprob: -9.263504981994629
    6. '    
' → logprob: -11.763504981994629
    7. ' ' → logprob: -11.763504981994629
    8. '```' → logprob: -12.513504981994629
    9. '	def' → logprob: -12.888504981994629
    10. '  ' → logprob: -13.388504981994629

Token 910: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0003646633995231241
    2. ' cross' → logprob: -8.000364303588867
    3. 'def' → logprob: -10.500364303588867
    4. '.cross' → logprob: -13.500364303588867
    5. '   ' → logprob: -16.625364303588867
    6. '
' → logprob: -16.625364303588867
    7. '```' → logprob: -17.000364303588867
    8. 'copy' → logprob: -17.125364303588867
    9. '@' → logprob: -17.750364303588867
    10. '-cross' → logprob: -17.875364303588867

Token 911: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07249919325113297
    2. '(' → logprob: -2.6974992752075195
    3. '(other' → logprob: -6.1974992752075195
    4. ' (' → logprob: -8.69749927520752
    5. 'self' → logprob: -8.94749927520752
    6. '(
' → logprob: -9.07249927520752
    7. '<|end|>' → logprob: -9.94749927520752
    8. '(object' → logprob: -11.57249927520752
    9. 'def' → logprob: -11.94749927520752
    10. ')' → logprob: -12.07249927520752

Token 912: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5963035225868225
    2. '(self' → logprob: -1.0963034629821777
    3. ',' → logprob: -2.5963034629821777
    4. '(other' → logprob: -3.7213034629821777
    5. ')' → logprob: -4.971303462982178
    6. ')(' → logprob: -5.846303462982178
    7. ' (' → logprob: -5.846303462982178
    8. '(
' → logprob: -6.471303462982178
    9. '<|end|>' → logprob: -7.596303462982178
    10. 'self' → logprob: -8.346303939819336

Token 913: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.029754074290394783
    2. ' other' → logprob: -3.529754161834717
    3. 'self' → logprob: -13.154753684997559
    4. '(other' → logprob: -13.779753684997559
    5. 'Other' → logprob: -14.279753684997559
    6. '.other' → logprob: -17.154754638671875
    7. '_other' → logprob: -17.779754638671875
    8. ' self' → logprob: -19.154754638671875
    9. '其他' → logprob: -21.029754638671875
    10. 'OTHER' → logprob: -21.029754638671875

Token 914: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7992706894874573
    2. '(self' → logprob: -1.4242706298828125
    3. '):
' → logprob: -1.4242706298828125
    4. ')' → logprob: -4.0492706298828125
    5. '(' → logprob: -4.1742706298828125
    6. '(other' → logprob: -4.2992706298828125
    7. '   ' → logprob: -4.7992706298828125
    8. ',' → logprob: -5.7992706298828125
    9. '       ' → logprob: -5.9242706298828125
    10. 'self' → logprob: -6.0492706298828125

Token 915: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.477023720741272
    2. 'return' → logprob: -0.977023720741272
    3. ' return' → logprob: -5.852023601531982
    4. '```' → logprob: -9.72702407836914
    5. ':return' → logprob: -12.85202407836914
    6. '	return' → logprob: -13.10202407836914
    7. '{return' → logprob: -13.60202407836914
    8. '   ' → logprob: -14.10202407836914
    9. '``' → logprob: -15.22702407836914
    10. 'self' → logprob: -15.47702407836914

Token 916: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.5451681974809617e-05
    2. '       ' → logprob: -11.250015258789062
    3. ' return' → logprob: -13.000015258789062
    4. 'self' → logprob: -15.750015258789062
    5. '   ' → logprob: -18.500015258789062
    6. '```' → logprob: -19.750015258789062
    7. '	return' → logprob: -20.375015258789062
    8. '
' → logprob: -21.750015258789062
    9. ':return' → logprob: -23.000015258789062
    10. '``' → logprob: -23.250015258789062

Token 917: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005548207554966211
    2. ' self' → logprob: -7.500555038452148
    3. '(self' → logprob: -13.625555038452148
    4. '
' → logprob: -15.000555038452148
    5. '       ' → logprob: -15.625555038452148
    6. ' ' → logprob: -17.37555503845215
    7. '	self' → logprob: -17.50055503845215
    8. '   ' → logprob: -17.50055503845215
    9. '[self' → logprob: -18.37555503845215
    10. '(' → logprob: -18.75055503845215

Token 918: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.082895273109898e-05
    2. 'x' → logprob: -10.625030517578125
    3. '.' → logprob: -12.250030517578125
    4. '.y' → logprob: -13.375030517578125
    5. ' .' → logprob: -16.750030517578125
    6. 'Vec' → logprob: -17.000030517578125
    7. 'Vector' → logprob: -17.500030517578125
    8. '```' → logprob: -18.250030517578125
    9. 'token' → logprob: -19.000030517578125
    10. 'vec' → logprob: -19.250030517578125

Token 919: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0015024791937321424
    2. '*' → logprob: -6.501502513885498
    3. '*object' → logprob: -16.001502990722656
    4. ' ' → logprob: -16.376502990722656
    5. '**' → logprob: -19.001502990722656
    6. ' **' → logprob: -19.501502990722656
    7. '*out' → logprob: -19.626502990722656
    8. ' ' → logprob: -21.376502990722656
    9. '*y' → logprob: -21.751502990722656
    10. '*self' → logprob: -21.751502990722656

Token 920: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0001234428636962548
    2. ' other' → logprob: -9.000123023986816
    3. '(other' → logprob: -20.500123977661133
    4. '.other' → logprob: -22.125123977661133
    5. 'Other' → logprob: -22.875123977661133
    6. ' ' → logprob: -23.000123977661133
    7. '_other' → logprob: -24.875123977661133
    8. 'others' → logprob: -25.625123977661133
    9. 'oth' → logprob: -25.875123977661133
    10. '   ' → logprob: -26.500123977661133

Token 921: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12693797051906586
    2. '.y' → logprob: -2.1269378662109375
    3. ' y' → logprob: -12.126937866210938
    4. 'py' → logprob: -13.376937866210938
    5. '.' → logprob: -14.001937866210938
    6. 'Y' → logprob: -14.376937866210938
    7. 's' → logprob: -15.251937866210938
    8. ',y' → logprob: -15.501937866210938
    9. '_y' → logprob: -15.876937866210938
    10. 'by' → logprob: -16.126937866210938

Token 922: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25193020701408386
    2. ' -' → logprob: -1.5019302368164062
    3. ' ' → logprob: -13.876930236816406
    4. '   ' → logprob: -16.501930236816406
    5. '       ' → logprob: -16.501930236816406
    6. '  ' → logprob: -17.126930236816406
    7. ' ' → logprob: -17.626930236816406
    8. '```' → logprob: -18.001930236816406
    9. '−' → logprob: -18.001930236816406
    10. '    ' → logprob: -18.126930236816406

Token 923: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005410907790064812
    2. 'other' → logprob: -5.505410671234131
    3. ' self' → logprob: -6.630410671234131
    4. ' other' → logprob: -11.380411148071289
    5. '(self' → logprob: -15.380411148071289
    6. '	self' → logprob: -15.755411148071289
    7. ' ' → logprob: -16.50541114807129
    8. '       ' → logprob: -17.00541114807129
    9. '   ' → logprob: -17.38041114807129
    10. '[self' → logprob: -17.75541114807129

Token 924: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.35370829701423645
    2. '.y' → logprob: -1.603708267211914
    3. 'other' → logprob: -2.353708267211914
    4. '.other' → logprob: -6.728708267211914
    5. ' y' → logprob: -8.228708267211914
    6. 'x' → logprob: -9.103708267211914
    7. '.x' → logprob: -9.728708267211914
    8. '.' → logprob: -10.103708267211914
    9. 'user' → logprob: -10.228708267211914
    10. ' other' → logprob: -10.728708267211914

Token 925: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0019297054968774319
    2. '*' → logprob: -6.251929759979248
    3. '*object' → logprob: -13.75192928314209
    4. ' ' → logprob: -17.251930236816406
    5. '<|end|>' → logprob: -17.751930236816406
    6. '*out' → logprob: -18.751930236816406
    7. '   ' → logprob: -19.126930236816406
    8. 'other' → logprob: -19.751930236816406
    9. '*self' → logprob: -20.126930236816406
    10. '```' → logprob: -20.251930236816406

Token 926: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0001234428636962548
    2. ' other' → logprob: -9.000123023986816
    3. '(other' → logprob: -18.750123977661133
    4. '.other' → logprob: -19.250123977661133
    5. '_other' → logprob: -21.250123977661133
    6. 'Other' → logprob: -21.500123977661133
    7. ' ' → logprob: -24.500123977661133
    8. '-other' → logprob: -24.625123977661133
    9. 'OTHER' → logprob: -25.000123977661133
    10. '   ' → logprob: -25.125123977661133

Token 927: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.16022899746894836
    2. 'x' → logprob: -1.910228967666626
    3. '.' → logprob: -12.660228729248047
    4. ' x' → logprob: -13.660228729248047
    5. 'import' → logprob: -15.785228729248047
    6. '	x' → logprob: -16.785228729248047
    7. '_x' → logprob: -16.785228729248047
    8. '   ' → logprob: -16.910228729248047
    9. '0' → logprob: -17.535228729248047
    10. ',x' → logprob: -17.535228729248047

Token 928: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 929: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43381497263908386
    2. '   ' → logprob: -1.6838150024414062
    3. ')' → logprob: -1.8088150024414062
    4. '    
' → logprob: -7.308815002441406
    5. '
' → logprob: -7.433815002441406
    6. '#' → logprob: -8.058815002441406
    7. '```' → logprob: -8.433815002441406
    8. ')
' → logprob: -9.058815002441406
    9. 'class' → logprob: -9.308815002441406
    10. ' def' → logprob: -9.308815002441406

Token 930: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28370872139930725
    2. ')' → logprob: -1.6587086915969849
    3. 'def' (adapté à ' def') → logprob: -2.9087088108062744
    4. ' def' → logprob: -7.033708572387695
    5. '(' → logprob: -7.908708572387695
    6. '       ' → logprob: -8.283708572387695
    7. ',' → logprob: -9.033708572387695
    8. '_' → logprob: -9.408708572387695
    9. ':' → logprob: -9.408708572387695
    10. '...' → logprob: -9.658708572387695

Token 931: ' abs' (ID: 8443)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00020902375399600714
    2. 'repr' → logprob: -9.125208854675293
    3. ' __' → logprob: -9.875208854675293
    4. 'abs' → logprob: -11.000208854675293
    5. 'length' → logprob: -11.250208854675293
    6. '```' → logprob: -11.875208854675293
    7. 'def' → logprob: -12.250208854675293
    8. 'norm' → logprob: -12.875208854675293
    9. '_repr' → logprob: -13.500208854675293
    10. '.__' → logprob: -13.625208854675293

Token 932: '2' (ID: 17)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.022914648056030273
    2. '(' → logprob: -4.022914886474609
    3. '()' → logprob: -5.522914886474609
    4. ' (' → logprob: -8.77291488647461
    5. '()(' → logprob: -9.02291488647461
    6. 'self' → logprob: -9.02291488647461
    7. '   ' → logprob: -9.77291488647461
    8. '<|end|>' → logprob: -9.77291488647461
    9. 'def' → logprob: -9.89791488647461
    10. '(
' → logprob: -10.77291488647461

Token 933: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007631686748936772
    2. '(' → logprob: -7.250762939453125
    3. ' (' → logprob: -10.000762939453125
    4. 'def' → logprob: -13.125762939453125
    5. 'self' → logprob: -13.250762939453125
    6. '   ' → logprob: -13.875762939453125
    7. 's' → logprob: -14.000762939453125
    8. '<|end|>' → logprob: -14.125762939453125
    9. ' self' → logprob: -15.000762939453125
    10. '(
' → logprob: -15.125762939453125

Token 934: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0266141127794981
    2. ')' → logprob: -4.526614189147949
    3. '()' → logprob: -4.776614189147949
    4. '):' → logprob: -6.401614189147949
    5. '(' → logprob: -6.526614189147949
    6. 'self' → logprob: -6.651614189147949
    7. '())' → logprob: -7.526614189147949
    8. '()):
' → logprob: -7.651614189147949
    9. '):
' → logprob: -7.776614189147949
    10. '():' → logprob: -7.901614189147949

Token 935: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6511779427528381
    2. ' return' → logprob: -1.4011778831481934
    3. 'return' → logprob: -1.5261778831481934
    4. '()' → logprob: -5.026177883148193
    5. '   ' → logprob: -5.401177883148193
    6. '	return' → logprob: -6.401177883148193
    7. '(' → logprob: -6.776177883148193
    8. '(self' → logprob: -7.526177883148193
    9. '{return' → logprob: -9.276178359985352
    10. ':return' → logprob: -9.651178359985352

Token 936: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -5.872261317563243e-05
    2. ' return' → logprob: -9.750059127807617
    3. 'self' → logprob: -15.250059127807617
    4. '   ' → logprob: -17.375059127807617
    5. 'def' → logprob: -17.375059127807617
    6. '	return' → logprob: -18.750059127807617
    7. '       ' → logprob: -19.000059127807617
    8. '{return' → logprob: -21.125059127807617
    9. '
' → logprob: -21.750059127807617
    10. '```' → logprob: -21.875059127807617

Token 937: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.054500666621607e-06
    2. ' self' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.125003814697266
    4. '(self' → logprob: -17.625003814697266
    5. '
' → logprob: -18.375003814697266
    6. '	self' → logprob: -18.500003814697266
    7. 'se' → logprob: -21.000003814697266
    8. '  ' → logprob: -21.500003814697266
    9. ' ' → logprob: -21.875003814697266
    10. 'sel' → logprob: -22.375003814697266

Token 938: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00013786651834379882
    2. 'x' → logprob: -9.125138282775879
    3. '.' → logprob: -10.625138282775879
    4. ' .' → logprob: -12.375138282775879
    5. 'self' → logprob: -15.500138282775879
    6. '```' → logprob: -15.750138282775879
    7. ' ' → logprob: -17.625137329101562
    8. '0' → logprob: -18.375137329101562
    9. '._' → logprob: -18.875137329101562
    10. 'import' → logprob: -19.000137329101562

Token 939: ' *' (ID: 425)
  Prédit: '*self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*self' → logprob: -0.037732042372226715
    2. '**' → logprob: -3.5377321243286133
    3. ' *' → logprob: -5.037732124328613
    4. '*' → logprob: -6.537732124328613
    5. ' **' → logprob: -12.037732124328613
    6. '*x' → logprob: -12.662732124328613
    7. '*object' → logprob: -12.787732124328613
    8. '*out' → logprob: -14.287732124328613
    9. '*q' → logprob: -15.662732124328613
    10. '*p' → logprob: -15.662732124328613

Token 940: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.098748053773306e-05
    2. '2' → logprob: -10.25006103515625
    3. ' self' → logprob: -10.62506103515625
    4. '<|end|>' → logprob: -14.50006103515625
    5. '*self' → logprob: -15.50006103515625
    6. '(self' → logprob: -15.75006103515625
    7. '	self' → logprob: -16.12506103515625
    8. 's' → logprob: -16.50006103515625
    9. '```' → logprob: -17.37506103515625
    10. '
' → logprob: -17.50006103515625

Token 941: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5948002338409424
    2. 'self' → logprob: -0.8448002338409424
    3. '2' → logprob: -4.594799995422363
    4. '.x' → logprob: -5.094799995422363
    5. '       ' → logprob: -6.844799995422363
    6. ' self' → logprob: -7.344799995422363
    7. 's' → logprob: -7.844799995422363
    8. '```' → logprob: -9.844799995422363
    9. ' ' → logprob: -10.344799995422363
    10. ' x' → logprob: -10.344799995422363

Token 942: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20149199664592743
    2. ' +' → logprob: -1.7014919519424438
    3. '+self' → logprob: -9.451492309570312
    4. '+y' → logprob: -17.076492309570312
    5. '+
' → logprob: -17.201492309570312
    6. ' ' → logprob: -17.951492309570312
    7. '+x' → logprob: -18.076492309570312
    8. '+\' → logprob: -18.326492309570312
    9. '+b' → logprob: -19.076492309570312
    10. ' +
' → logprob: -19.201492309570312

Token 943: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020389800192788243
    2. ' self' → logprob: -8.500204086303711
    3. '(self' → logprob: -15.625204086303711
    4. '   ' → logprob: -16.62520408630371
    5. '	self' → logprob: -16.62520408630371
    6. '       ' → logprob: -16.62520408630371
    7. ' ' → logprob: -16.75020408630371
    8. '[self' → logprob: -17.87520408630371
    9. '  ' → logprob: -18.50020408630371
    10. '<|end|>' → logprob: -18.87520408630371

Token 944: '.y' (ID: 4486)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008850092068314552
    2. 'y' → logprob: -4.75885009765625
    3. '.y' → logprob: -8.50885009765625
    4. ' self' → logprob: -10.38385009765625
    5. '.self' → logprob: -13.00885009765625
    6. '   ' → logprob: -15.88385009765625
    7. '(self' → logprob: -16.00885009765625
    8. '	self' → logprob: -16.13385009765625
    9. '[self' → logprob: -16.88385009765625
    10. ' ' → logprob: -16.88385009765625

Token 945: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3870590329170227
    2. ' *' → logprob: -1.137058973312378
    3. '*self' → logprob: -8.637059211730957
    4. '*object' → logprob: -12.012059211730957
    5. '**' → logprob: -13.762059211730957
    6. '<|end|>' → logprob: -13.762059211730957
    7. ' ' → logprob: -14.012059211730957
    8. '   ' → logprob: -14.137059211730957
    9. ' ' → logprob: -15.512059211730957
    10. '*out' → logprob: -15.887059211730957

Token 946: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001097417771234177
    2. ' self' → logprob: -9.125109672546387
    3. '(self' → logprob: -15.125109672546387
    4. '	self' → logprob: -16.000110626220703
    5. '   ' → logprob: -16.375110626220703
    6. '[self' → logprob: -16.375110626220703
    7. '       ' → logprob: -17.000110626220703
    8. '0' → logprob: -17.000110626220703
    9. ' ' → logprob: -17.125110626220703
    10. 'y' → logprob: -17.750110626220703

Token 947: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5765491724014282
    2. '.y' → logprob: -0.8265491724014282
    3. '*y' → logprob: -8.576549530029297
    4. '.' → logprob: -8.701549530029297
    5. 'self' → logprob: -8.826549530029297
    6. '2' → logprob: -10.451549530029297
    7. '*' → logprob: -10.576549530029297
    8. 'Y' → logprob: -11.701549530029297
    9. '<|end|>' → logprob: -12.076549530029297
    10. '<|end|>' → logprob: -12.201549530029297

Token 948: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2890284061431885
    2. '<|end|>' → logprob: -1.4140284061431885
    3. '
' → logprob: -5.039028167724609
    4. ')' → logprob: -7.539028167724609
    5. '```' → logprob: -8.78902816772461
    6. '<|end|>' → logprob: -8.78902816772461
    7. '  ' → logprob: -8.78902816772461
    8. ' ' → logprob: -8.91402816772461
    9. '    
' → logprob: -9.53902816772461
    10. 'def' → logprob: -9.66402816772461

Token 949: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04927846044301987
    2. ')' → logprob: -3.049278497695923
    3. '```' → logprob: -7.674278259277344
    4. 'def' → logprob: -9.674278259277344
    5. '<|end|>' → logprob: -9.924278259277344
    6. ' ' → logprob: -10.299278259277344
    7. ' def' → logprob: -11.299278259277344
    8. '  ' → logprob: -11.799278259277344
    9. ']' → logprob: -11.924278259277344
    10. '    
' → logprob: -11.924278259277344

Token 950: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15125837922096252
    2. 'def' (adapté à ' def') → logprob: -2.0262584686279297
    3. ' def' → logprob: -5.02625846862793
    4. ')' → logprob: -6.65125846862793
    5. '```' → logprob: -8.40125846862793
    6. '<|end|>' → logprob: -8.40125846862793
    7. ' ' → logprob: -9.15125846862793
    8. '  ' → logprob: -10.77625846862793
    9. '
' → logprob: -10.90125846862793
    10. '	def' → logprob: -11.02625846862793

Token 951: ' __' (ID: 2516)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.01417702715843916
    2. '__' → logprob: -4.264176845550537
    3. 'm' → logprob: -11.764177322387695
    4. 'norm' → logprob: -13.139177322387695
    5. ' abs' → logprob: -13.889177322387695
    6. 'length' → logprob: -13.889177322387695
    7. 'copy' → logprob: -14.639177322387695
    8. '_abs' → logprob: -14.764177322387695
    9. ' __' → logprob: -15.139177322387695
    10. 'def' → logprob: -15.264177322387695

Token 952: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.40289875864982605
    2. 'repr' → logprob: -1.1528987884521484
    3. 'str' → logprob: -4.152898788452148
    4. 'lt' → logprob: -8.652898788452148
    5. 'float' → logprob: -12.027898788452148
    6. 'bool' → logprob: -15.652898788452148
    7. 'flo' → logprob: -15.902898788452148
    8. 'pow' → logprob: -16.02789878845215
    9. ' abs' → logprob: -16.52789878845215
    10. 'int' → logprob: -16.65289878845215

Token 953: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.6359102725982666
    2. '(self' → logprob: -0.7609102725982666
    3. '(' → logprob: -5.7609100341796875
    4. '__' → logprob: -9.760910034179688
    5. '_(' → logprob: -9.885910034179688
    6. '__(
' → logprob: -11.385910034179688
    7. ' (' → logprob: -11.385910034179688
    8. '()(' → logprob: -11.510910034179688
    9. 'self' → logprob: -12.135910034179688
    10. '(s' → logprob: -13.260910034179688

Token 954: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.319370302458992e-06
    2. ' self' → logprob: -13.125005722045898
    3. '   ' → logprob: -13.625005722045898
    4. '(self' → logprob: -13.875005722045898
    5. '       ' → logprob: -15.125005722045898
    6. 's' → logprob: -15.125005722045898
    7. '(' → logprob: -15.125005722045898
    8. ')' → logprob: -16.0000057220459
    9. 'def' → logprob: -16.6250057220459
    10. '
' → logprob: -17.3750057220459

Token 955: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010247035970678553
    2. '(' → logprob: -9.250102043151855
    3. 'self' → logprob: -12.250102043151855
    4. ' (' → logprob: -14.250102043151855
    5. ')' → logprob: -15.375102043151855
    6. ')(' → logprob: -15.375102043151855
    7. ' self' → logprob: -16.500102996826172
    8. 'def' → logprob: -16.625102996826172
    9. '(Self' → logprob: -16.875102996826172
    10. '   ' → logprob: -17.375102996826172

Token 956: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18674786388874054
    2. ' return' → logprob: -2.4367477893829346
    3. '       ' → logprob: -2.9367477893829346
    4. 'import' → logprob: -3.6867477893829346
    5. '   ' → logprob: -6.936748027801514
    6. ' math' → logprob: -6.936748027801514
    7. '	return' → logprob: -7.311748027801514
    8. '()' → logprob: -7.811748027801514
    9. ':return' → logprob: -8.061747550964355
    10. 'def' → logprob: -8.186747550964355

Token 957: ' return' (ID: 622)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.48778679966926575
    2. 'return' (adapté à ' return') → logprob: -0.9877867698669434
    3. 'import' → logprob: -4.862786769866943
    4. 'int' → logprob: -5.487786769866943
    5. ' math' → logprob: -7.112786769866943
    6. ' return' → logprob: -7.112786769866943
    7. '(math' → logprob: -9.612787246704102
    8. '   ' → logprob: -10.862787246704102
    9. '```' → logprob: -11.362787246704102
    10. 'Math' → logprob: -11.862787246704102

Token 958: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.095793716609478
    2. ' math' → logprob: -2.5957937240600586
    3. '(math' → logprob: -4.095793724060059
    4. 'int' → logprob: -9.595793724060059
    5. ' (' → logprob: -10.970793724060059
    6. '(self' → logprob: -11.345793724060059
    7. 'self' → logprob: -11.470793724060059
    8. 'Math' → logprob: -12.845793724060059
    9. '.math' → logprob: -13.095793724060059
    10. ' int' → logprob: -13.095793724060059

Token 959: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0009018116979859769
    2. '.h' → logprob: -7.125901699066162
    3. 'sqrt' → logprob: -9.75090217590332
    4. '```' → logprob: -10.75090217590332
    5. '.Sqrt' → logprob: -11.50090217590332
    6. '.' → logprob: -12.87590217590332
    7. '.atan' → logprob: -13.62590217590332
    8. 'import' → logprob: -14.37590217590332
    9. '.ceil' → logprob: -14.37590217590332
    10. '.pow' → logprob: -14.62590217590332

Token 960: '(float' (ID: 17830)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -12.000009536743164
    3. 'self' → logprob: -12.750009536743164
    4. '((' → logprob: -15.625009536743164
    5. '(
' → logprob: -18.750009536743164
    6. '(s' → logprob: -19.250009536743164
    7. ' (' → logprob: -19.375009536743164
    8. '(abs' → logprob: -19.500009536743164
    9. '(sel' → logprob: -20.750009536743164
    10. ' self' → logprob: -21.125009536743164

Token 961: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.338466093642637e-05
    2. '((' → logprob: -10.375073432922363
    3. 'self' → logprob: -10.625073432922363
    4. '(abs' → logprob: -11.125073432922363
    5. '(' → logprob: -12.750073432922363
    6. '(
' → logprob: -16.625072479248047
    7. ' (' → logprob: -18.000072479248047
    8. '(poly' → logprob: -18.625072479248047
    9. ' self' → logprob: -18.750072479248047
    10. '(pow' → logprob: -19.125072479248047

Token 962: '.abs' (ID: 29974)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0072611127980053425
    2. '.abs' → logprob: -5.132261276245117
    3. '(abs' → logprob: -7.882261276245117
    4. '(x' → logprob: -7.882261276245117
    5. 'x' → logprob: -8.132261276245117
    6. 'abs' → logprob: -9.007261276245117
    7. '(self' → logprob: -9.132261276245117
    8. '(' → logprob: -11.007261276245117
    9. 'self' → logprob: -11.257261276245117
    10. ')' → logprob: -11.382261276245117

Token 963: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ')' → logprob: -15.625
    3. '()' → logprob: -16.5
    4. ' ' → logprob: -16.875
    5. '(self' → logprob: -17.0
    6. '())' → logprob: -17.125
    7. '(' → logprob: -17.875
    8. '   ' → logprob: -18.375
    9. 's' → logprob: -18.75
    10. 'abs' → logprob: -18.75

Token 964: '()))

' (ID: 125972)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.47435760498046875
    2. '()))' → logprob: -0.9743576049804688
    3. '()' → logprob: -8.474357604980469
    4. '()))
' → logprob: -9.974357604980469
    5. '())
' → logprob: -11.349357604980469
    6. ' ())' → logprob: -11.474357604980469
    7. '(' → logprob: -13.974357604980469
    8. '()))

' → logprob: -14.349357604980469
    9. '))' → logprob: -14.849357604980469
    10. '())))' → logprob: -15.349357604980469

Token 965: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001491292379796505
    2. '   ' → logprob: -6.626491069793701
    3. '```' → logprob: -9.75149154663086
    4. ')' → logprob: -10.00149154663086
    5. '@property' → logprob: -10.87649154663086
    6. '#' → logprob: -11.12649154663086
    7. ' def' → logprob: -11.12649154663086
    8. '    
' → logprob: -12.75149154663086
    9. '@' → logprob: -12.75149154663086
    10. ' ' → logprob: -13.00149154663086

Token 966: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.17532755434513092
    2. '   ' → logprob: -1.9253275394439697
    3. ')' → logprob: -4.300327777862549
    4. ' def' → logprob: -7.550327777862549
    5. '```' → logprob: -7.675327777862549
    6. ' ' → logprob: -8.67532730102539
    7. '       ' → logprob: -9.80032730102539
    8. '__' → logprob: -9.92532730102539
    9. '  ' → logprob: -10.05032730102539
    10. '#' → logprob: -10.67532730102539

Token 967: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006963504129089415
    2. 'normalize' → logprob: -7.625696182250977
    3. 'normalized' → logprob: -9.375696182250977
    4. 'as' → logprob: -10.500696182250977
    5. 'to' → logprob: -10.500696182250977
    6. 'norm' → logprob: -10.625696182250977
    7. 'repr' → logprob: -11.500696182250977
    8. 'unit' → logprob: -11.750696182250977
    9. ' __' → logprob: -12.125696182250977
    10. 'angle' → logprob: -12.250696182250977

Token 968: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.1698741614818573
    2. 'str' → logprob: -2.1698741912841797
    3. 'lt' → logprob: -3.1698741912841797
    4. 'float' → logprob: -11.16987419128418
    5. 'format' → logprob: -11.54487419128418
    6. 'flo' → logprob: -13.16987419128418
    7. 'bool' → logprob: -13.79487419128418
    8. 'int' → logprob: -14.41987419128418
    9. 'floor' → logprob: -15.04487419128418
    10. 'rep' → logprob: -15.79487419128418

Token 969: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.011901168152689934
    2. '__' → logprob: -4.511901378631592
    3. '__('' → logprob: -7.636901378631592
    4. '__((' → logprob: -8.761900901794434
    5. '__(
' → logprob: -9.136900901794434
    6. '__("' → logprob: -9.386900901794434
    7. '(self' → logprob: -12.136900901794434
    8. '(' → logprob: -12.261900901794434
    9. '__(*' → logprob: -12.386900901794434
    10. '__.__' → logprob: -13.011900901794434

Token 970: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.128163257315464e-07
    2. ' self' → logprob: -15.5
    3. '(self' → logprob: -17.125
    4. ')' → logprob: -19.25
    5. 'f' → logprob: -20.0
    6. '	self' → logprob: -20.125
    7. 'Self' → logprob: -20.25
    8. 's' → logprob: -20.625
    9. 'sel' → logprob: -21.125
    10. '{' → logprob: -22.25

Token 971: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.22463549673557281
    2. '__' → logprob: -2.099635601043701
    3. '__('' → logprob: -2.974635601043701
    4. '__("' → logprob: -4.099635601043701
    5. '__(
' → logprob: -4.974635601043701
    6. '__((' → logprob: -6.224635601043701
    7. '(self' → logprob: -7.224635601043701
    8. '__(*' → logprob: -7.224635601043701
    9. 'self' → logprob: -8.224635124206543
    10. '__)' → logprob: -8.974635124206543

Token 972: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0042685773223638535
    2. '       ' → logprob: -5.754268646240234
    3. 'self' → logprob: -7.129268646240234
    4. '   ' → logprob: -8.629268646240234
    5. 'return' → logprob: -9.879268646240234
    6. ' f' → logprob: -9.879268646240234
    7. '           ' → logprob: -12.254268646240234
    8. '"' → logprob: -14.129268646240234
    9. ''f' → logprob: -14.129268646240234
    10. 'lambda' → logprob: -14.504268646240234

Token 973: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.062000855803489685
    2. 'f' → logprob: -2.8120007514953613
    3. 'Vec' → logprob: -10.68700122833252
    4. ' return' → logprob: -11.68700122833252
    5. '   ' → logprob: -13.43700122833252
    6. ' f' → logprob: -15.31200122833252
    7. '       ' → logprob: -16.937000274658203
    8. '"' → logprob: -17.187000274658203
    9. 'def' → logprob: -17.187000274658203
    10. '(f' → logprob: -17.437000274658203

Token 974: ' '' (ID: 461)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0011582005536183715
    2. ' f' → logprob: -7.376158237457275
    3. '"' → logprob: -7.751158237457275
    4. ''' → logprob: -10.001157760620117
    5. 'Vec' → logprob: -10.001157760620117
    6. ''f' → logprob: -11.626157760620117
    7. ' Vec' → logprob: -14.126157760620117
    8. '(f' → logprob: -15.001157760620117
    9. ' ' → logprob: -15.501157760620117
    10. '   ' → logprob: -15.751157760620117

Token 975: '({},' (ID: 45594)
  Prédit: 'Vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vec' → logprob: -0.19542624056339264
    2. 'f' → logprob: -1.8204262256622314
    3. ''' → logprob: -4.1954264640808105
    4. '(Vec' → logprob: -8.695425987243652
    5. 'vec' → logprob: -9.195425987243652
    6. ''f' → logprob: -9.570425987243652
    7. '"' → logprob: -9.820425987243652
    8. ' Vec' → logprob: -10.320425987243652
    9. '<Vec' → logprob: -10.820425987243652
    10. ' f' → logprob: -11.570425987243652

Token 976: ' {})' (ID: 75167)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20247307419776917
    2. '{' → logprob: -2.4524731636047363
    3. '{}' → logprob: -2.7024731636047363
    4. '{},' → logprob: -3.8274731636047363
    5. '{}.' → logprob: -5.952473163604736
    6. '{})' → logprob: -5.952473163604736
    7. 'f' → logprob: -6.202473163604736
    8. '{:' → logprob: -7.702473163604736
    9. '{}'.' → logprob: -8.202472686767578
    10. '{}{' → logprob: -8.952472686767578

Token 977: ''.' (ID: 6120)
  Prédit: '.format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.252016544342041
    2. '.' → logprob: -1.877016544342041
    3. ''.' → logprob: -2.752016544342041
    4. '.py' → logprob: -6.002016544342041
    5. '{}.' → logprob: -7.377016544342041
    6. 'format' → logprob: -7.627016544342041
    7. '().' → logprob: -7.877016544342041
    8. ').' → logprob: -8.002016067504883
    9. '{' → logprob: -8.627016067504883
    10. '.token' → logprob: -9.127016067504883

Token 978: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -1.0280383548888494e-06
    2. ' format' → logprob: -14.250000953674316
    3. 'form' → logprob: -15.000000953674316
    4. 'forma' → logprob: -17.375001907348633
    5. 'f' → logprob: -17.500001907348633
    6. 'fmt' → logprob: -17.875001907348633
    7. '	format' → logprob: -18.000001907348633
    8. '(format' → logprob: -18.625001907348633
    9. 'x' → logprob: -18.875001907348633
    10. '.format' → logprob: -19.500001907348633

Token 979: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20141898095607758
    2. 'self' → logprob: -1.7014189958572388
    3. 'repr' → logprob: -12.57641887664795
    4. ' self' → logprob: -13.82641887664795
    5. '(' → logprob: -14.20141887664795
    6. '	self' → logprob: -16.076419830322266
    7. '(
' → logprob: -16.201419830322266
    8. '(str' → logprob: -16.576419830322266
    9. 'str' → logprob: -16.701419830322266
    10. '   ' → logprob: -16.951419830322266

Token 980: '.x' (ID: 3700)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.666993507067673e-05
    2. '.self' → logprob: -11.125036239624023
    3. ' self' → logprob: -11.375036239624023
    4. '.x' → logprob: -11.500036239624023
    5. '   ' → logprob: -15.875036239624023
    6. 'x' → logprob: -17.000036239624023
    7. 'elf' → logprob: -17.500036239624023
    8. '(self' → logprob: -17.625036239624023
    9. ' ' → logprob: -17.750036239624023
    10. '	self' → logprob: -18.125036239624023

Token 981: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7120533811976202e-05
    2. ',self' → logprob: -11.625017166137695
    3. ' ,' → logprob: -11.875017166137695
    4. ',
' → logprob: -13.875017166137695
    5. 'self' → logprob: -16.250017166137695
    6. '‌,' → logprob: -17.250017166137695
    7. ',y' → logprob: -17.750017166137695
    8. '<|end|>' → logprob: -18.250017166137695
    9. ',\
' → logprob: -18.375017166137695
    10. ',int' → logprob: -18.375017166137695

Token 982: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003178901970386505
    2. ' self' → logprob: -5.75317907333374
    3. '       ' → logprob: -13.878178596496582
    4. '   ' → logprob: -15.878178596496582
    5. '    ' → logprob: -16.6281795501709
    6. '     ' → logprob: -17.1281795501709
    7. ' ' → logprob: -17.6281795501709
    8. '      ' → logprob: -17.6281795501709
    9. '	self' → logprob: -17.7531795501709
    10. '        ' → logprob: -18.2531795501709

Token 983: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.05385803431272507
    2. ',' → logprob: -3.3038580417633057
    3. '.' → logprob: -4.178857803344727
    4. '.y' → logprob: -8.303857803344727
    5. 'x' → logprob: -9.553857803344727
    6. ' .' → logprob: -10.803857803344727
    7. ' ,' → logprob: -11.678857803344727
    8. ')' → logprob: -11.803857803344727
    9. ',x' → logprob: -11.803857803344727
    10. ',.' → logprob: -12.928857803344727

Token 984: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006722826045006514
    2. ',' → logprob: -5.006722927093506
    3. ',)' → logprob: -12.881722450256348
    4. 'self' → logprob: -13.131722450256348
    5. ')`' → logprob: -14.131722450256348
    6. '))' → logprob: -14.506722450256348
    7. '),' → logprob: -14.756722450256348
    8. ',self' → logprob: -15.381722450256348
    9. ')}' → logprob: -15.756722450256348
    10. '   ' → logprob: -15.756722450256348

Token 985: 'DEBUG' (ID: 13806)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19269806146621704
    2. ')' → logprob: -2.0676980018615723
    3. '   ' → logprob: -3.0676980018615723
    4. '#' → logprob: -7.192698001861572
    5. '(' → logprob: -7.692698001861572
    6. 'import' → logprob: -8.44269847869873
    7. ',' → logprob: -8.81769847869873
    8. ' def' → logprob: -8.81769847869873
    9. 'hash' → logprob: -9.69269847869873
    10. ' ' → logprob: -9.81769847869873

Token 986: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44539910554885864
    2. ' =' → logprob: -1.1953990459442139
    3. ':' → logprob: -3.320399045944214
    4. 'def' → logprob: -5.195399284362793
    5. ')' → logprob: -5.570399284362793
    6. '):' → logprob: -5.945399284362793
    7. '=False' → logprob: -6.070399284362793
    8. '   ' → logprob: -6.695399284362793
    9. '(' → logprob: -6.820399284362793
    10. '=True' → logprob: -7.820399284362793

Token 987: ' '' (ID: 461)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0003048378275707364
    2. ' False' → logprob: -8.12530517578125
    3. 'True' → logprob: -12.00030517578125
    4. '0' → logprob: -13.25030517578125
    5. '[]' → logprob: -14.37530517578125
    6. '(False' → logprob: -15.25030517578125
    7. '=False' → logprob: -16.12530517578125
    8. '   ' → logprob: -17.87530517578125
    9. 'set' → logprob: -18.00030517578125
    10. 'false' → logprob: -18.12530517578125

Token 988: 'DEBUG' (ID: 13806)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.49336037039756775
    2. 'False' → logprob: -1.4933604001998901
    3. '')' → logprob: -2.7433602809906006
    4. '1' → logprob: -3.1183602809906006
    5. ''' → logprob: -3.7433602809906006
    6. 'true' → logprob: -4.49336051940918
    7. '0' → logprob: -5.11836051940918
    8. 'false' → logprob: -5.61836051940918
    9. '__' → logprob: -5.86836051940918
    10. 'DEBUG' → logprob: -5.99336051940918

Token 989: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.33985406160354614
    2. ')' → logprob: -1.8398540019989014
    3. '',' → logprob: -2.9648540019989014
    4. '')' → logprob: -3.7148540019989014
    5. ',' → logprob: -3.9648540019989014
    6. 'DEBUG' → logprob: -4.5898542404174805
    7. ')'' → logprob: -5.2148542404174805
    8. ','' → logprob: -5.7148542404174805
    9. ''''' → logprob: -5.9648542404174805
    10. 'def' → logprob: -6.0898542404174805

Token 990: ' in' (ID: 306)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.4856433868408203
    2. '
' → logprob: -1.6106433868408203
    3. 'if' → logprob: -2.1106433868408203
    4. ' in' → logprob: -2.1106433868408203
    5. 'def' → logprob: -2.3606433868408203
    6. 'in' → logprob: -2.9856433868408203
    7. '<|end|>' → logprob: -3.2356433868408203
    8. ' if' → logprob: -3.3606433868408203
    9. '

' → logprob: -3.3606433868408203
    10. 'DEBUG' → logprob: -3.9856433868408203

Token 991: ' os' (ID: 1994)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -4.320199877838604e-07
    2. ' os' → logprob: -15.0
    3. 'sys' → logprob: -17.25
    4. '	os' → logprob: -17.75
    5. '(os' → logprob: -17.75
    6. '"os' → logprob: -19.375
    7. '=os' → logprob: -20.0
    8. '__' → logprob: -20.375
    9. '   ' → logprob: -21.0
    10. 'globals' → logprob: -21.125

Token 992: '.environ' (ID: 52020)
  Prédit: '_ENV'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ENV' → logprob: -1.0073082447052002
    2. '.environ' → logprob: -1.1323082447052002
    3. 'en' → logprob: -1.8823082447052002
    4. '_env' → logprob: -2.7573082447052
    5. 'env' → logprob: -2.8823082447052
    6. '_en' → logprob: -4.007308006286621
    7. 'ENV' → logprob: -4.507308006286621
    8. '.getenv' → logprob: -6.257308006286621
    9. '.env' → logprob: -6.507308006286621
    10. '__' → logprob: -6.632308006286621

Token 993: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4748753011226654
    2. '   ' → logprob: -1.0998753309249878
    3. ')' → logprob: -3.3498752117156982
    4. ',' → logprob: -5.349875450134277
    5. 'class' → logprob: -6.474875450134277
    6. '(' → logprob: -6.724875450134277
    7. '(
' → logprob: -8.099875450134277
    8. '<|end|>' → logprob: -8.474875450134277
    9. '    
' → logprob: -8.849875450134277
    10. 'import' → logprob: -8.974875450134277

Token 994: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.3915141355246305e-05
    2. '```' → logprob: -11.00002384185791
    3. 'd' → logprob: -12.62502384185791
    4. '
' → logprob: -13.00002384185791
    5. 'import' → logprob: -14.37502384185791
    6. 'de' → logprob: -14.62502384185791
    7. ' def' → logprob: -15.87502384185791
    8. '_def' → logprob: -16.000024795532227
    9. '\' → logprob: -16.250024795532227
    10. '``' → logprob: -16.625024795532227

Token 995: ' inp' (ID: 64450)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.011310826987028122
    2. 'read' → logprob: -4.511311054229736
    3. ' main' → logprob: -8.386310577392578
    4. '_' → logprob: -11.511310577392578
    5. '	read' → logprob: -11.636310577392578
    6. '_read' → logprob: -11.886310577392578
    7. ' debug' → logprob: -12.886310577392578
    8. ' ' → logprob: -13.511310577392578
    9. ' run' → logprob: -13.761310577392578
    10. 'main' → logprob: -14.136310577392578

Token 996: '():
' (ID: 8595)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -3.273621405242011e-05
    2. '()' → logprob: -11.125032424926758
    3. '():
' → logprob: -12.500032424926758
    4. '():' → logprob: -12.625032424926758
    5. ' ut' → logprob: -12.875032424926758
    6. 'u' → logprob: -13.000032424926758
    7. 'uts' → logprob: -13.125032424926758
    8. 't' → logprob: -13.125032424926758
    9. '())' → logprob: -14.750032424926758
    10. '()
' → logprob: -15.000032424926758

Token 997: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6918351650238037
    2. '()' → logprob: -0.9418351650238037
    3. '   ' → logprob: -2.9418351650238037
    4. ' return' → logprob: -3.8168351650238037
    5. '().' → logprob: -4.066835403442383
    6. '=sys' → logprob: -5.441835403442383
    7. ')' → logprob: -6.066835403442383
    8. 'sys' → logprob: -6.191835403442383
    9. '():' → logprob: -6.566835403442383
    10. '=' → logprob: -7.191835403442383

Token 998: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.47482287883758545
    2. 'sys' → logprob: -0.9748228788375854
    3. 'os' → logprob: -7.974822998046875
    4. 'input' → logprob: -8.974822998046875
    5. 'for' → logprob: -9.349822998046875
    6. ' sys' → logprob: -9.724822998046875
    7. ' return' → logprob: -9.974822998046875
    8. 'line' → logprob: -10.599822998046875
    9. 'lambda' → logprob: -10.849822998046875
    10. '=sys' → logprob: -11.724822998046875

Token 999: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00437529431656003
    2. 'input' → logprob: -5.504375457763672
    3. ' sys' → logprob: -8.254375457763672
    4. 'os' → logprob: -10.254375457763672
    5. '(sys' → logprob: -14.254375457763672
    6. ' input' → logprob: -14.879375457763672
    7. '=sys' → logprob: -15.629375457763672
    8. '	sys' → logprob: -16.004375457763672
    9. 'stdin' → logprob: -17.129375457763672
    10. '<input' → logprob: -17.379375457763672

Token 1000: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.8193366486229934e-05
    2. 'stdin' → logprob: -11.500018119812012
    3. '.stdout' → logprob: -12.000018119812012
    4. '.readline' → logprob: -14.375018119812012
    5. '.argv' → logprob: -14.625018119812012
    6. '(stdin' → logprob: -15.000018119812012
    7. '.' → logprob: -15.500018119812012
    8. '.std' → logprob: -15.875018119812012
    9. '.stderr' → logprob: -16.125019073486328
    10. '.__' → logprob: -16.625019073486328

Token 1001: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.455048449221067e-05
    2. '.read' → logprob: -10.500054359436035
    3. '.readlines' → logprob: -10.750054359436035
    4. '.buffer' → logprob: -12.250054359436035
    5. 'read' → logprob: -14.750054359436035
    6. '.' → logprob: -15.625054359436035
    7. 'buffer' → logprob: -16.00005531311035
    8. ' readline' → logprob: -16.25005531311035
    9. '<|end|>' → logprob: -17.87505531311035
    10. '.stdin' → logprob: -18.50005531311035

Token 1002: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0067161982879042625
    2. '()' → logprob: -5.006716251373291
    3. '().__' → logprob: -15.381715774536133
    4. '()
' → logprob: -15.756715774536133
    5. '.rstrip' → logprob: -16.131715774536133
    6. '.strip' → logprob: -16.256715774536133
    7. '()

' → logprob: -16.756715774536133
    8. '(' → logprob: -17.006715774536133
    9. '()\' → logprob: -17.256715774536133
    10. 'def' → logprob: -17.631715774536133

Token 1003: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.3868717551231384
    2. 'rstrip' → logprob: -1.1368718147277832
    3. ' strip' → logprob: -15.136871337890625
    4. 'read' → logprob: -15.386871337890625
    5. '_strip' → logprob: -16.261871337890625
    6. '.rstrip' → logprob: -17.011871337890625
    7. 'rst' → logprob: -17.136871337890625
    8. 'str' → logprob: -17.761871337890625
    9. 'r' → logprob: -17.761871337890625
    10. 'split' → logprob: -18.136871337890625

Token 1004: '()

' (ID: 5874)
  Prédit: '()

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()

' → logprob: -0.6862888336181641
    2. 'def' → logprob: -1.061288833618164
    3. '()' → logprob: -2.186288833618164
    4. '()
' → logprob: -3.436288833618164
    5. '()\' → logprob: -6.186288833618164
    6. '
' → logprob: -6.436288833618164
    7. '('\' → logprob: -7.061288833618164
    8. '

' → logprob: -7.686288833618164
    9. '(' → logprob: -7.811288833618164
    10. '<|end|>' → logprob: -8.311288833618164

Token 1005: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.698698704596609e-05
    2. '
' → logprob: -9.250097274780273
    3. ' def' → logprob: -14.875097274780273
    4. '    
' → logprob: -15.250097274780273
    5. '  
' → logprob: -16.375097274780273
    6. '

' → logprob: -16.750097274780273
    7. ' 
' → logprob: -17.250097274780273
    8. '```' → logprob: -17.375097274780273
    9. '   
' → logprob: -18.250097274780273
    10. '        
' → logprob: -18.750097274780273

Token 1006: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.007892532274127007
    2. ' read' → logprob: -4.882892608642578
    3. 'def' → logprob: -9.132892608642578
    4. 'ints' → logprob: -9.632892608642578
    5. 'int' → logprob: -9.882892608642578
    6. 'main' → logprob: -10.757892608642578
    7. 'reads' → logprob: -11.632892608642578
    8. 'r' → logprob: -11.882892608642578
    9. '	read' → logprob: -12.382892608642578
    10. '_read' → logprob: -12.507892608642578

Token 1007: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.06525351852178574
    2. '_line' → logprob: -2.815253496170044
    3. 'int' → logprob: -5.815253734588623
    4. 'line' → logprob: -8.190253257751465
    5. '()' → logprob: -11.940253257751465
    6. '_lines' → logprob: -12.315253257751465
    7. '_str' → logprob: -13.190253257751465
    8. '_in' → logprob: -13.815253257751465
    9. 'Int' → logprob: -13.940253257751465
    10. '_list' → logprob: -14.065253257751465

Token 1008: '():
' (ID: 8595)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16108283400535583
    2. '()' → logprob: -1.9110828638076782
    3. '():' → logprob: -7.411082744598389
    4. '():
' → logprob: -9.286083221435547
    5. '()>' → logprob: -10.411083221435547
    6. ' s' → logprob: -10.536083221435547
    7. ' ()' → logprob: -10.661083221435547
    8. '(s' → logprob: -11.536083221435547
    9. '(){' → logprob: -11.536083221435547
    10. 'S' → logprob: -11.786083221435547

Token 1009: '   ' (ID: 271)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1008305475115776
    2. ' int' → logprob: -2.600830554962158
    3. ' return' → logprob: -4.350830554962158
    4. 'return' → logprob: -4.850830554962158
    5. '(int' → logprob: -6.975830554962158
    6. '   ' → logprob: -10.850830078125
    7. '=int' → logprob: -11.100830078125
    8. '[int' → logprob: -11.850830078125
    9. '<int' → logprob: -12.975830078125
    10. ':int' → logprob: -13.725830078125

Token 1010: ' return' (ID: 622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04859974980354309
    2. 'return' (adapté à ' return') → logprob: -3.0485997200012207
    3. ' int' → logprob: -11.923600196838379
    4. ' return' → logprob: -12.423600196838379
    5. '   ' → logprob: -13.548600196838379
    6. '(int' → logprob: -15.798600196838379
    7. '=int' → logprob: -16.173599243164062
    8. '[int' → logprob: -16.298599243164062
    9. '	int' → logprob: -18.298599243164062
    10. '<int' → logprob: -18.298599243164062

Token 1011: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.615255839889869e-05
    2. ' int' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.87509536743164
    4. '	int' → logprob: -19.12509536743164
    5. '(int' → logprob: -19.62509536743164
    6. '  ' → logprob: -19.87509536743164
    7. ' ' → logprob: -20.37509536743164
    8. '<int' → logprob: -21.12509536743164
    9. '[int' → logprob: -21.75009536743164
    10. '=int' → logprob: -22.25009536743164

Token 1012: '(inp' (ID: 141645)
  Prédit: '(inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inp' → logprob: -0.00020210994989611208
    2. '(sys' → logprob: -8.750202178955078
    3. '(' → logprob: -10.125202178955078
    4. 'inp' → logprob: -13.250202178955078
    5. '(input' → logprob: -14.250202178955078
    6. '()' → logprob: -14.375202178955078
    7. '(inv' → logprob: -15.500202178955078
    8. '(instr' → logprob: -15.875202178955078
    9. '(stdin' → logprob: -16.125202178955078
    10. 'sys' → logprob: -16.500202178955078

Token 1013: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00034356804098933935
    2. ')' → logprob: -8.125343322753906
    3. '()))' → logprob: -10.375343322753906
    4. '()' → logprob: -11.625343322753906
    5. ' ())' → logprob: -12.750343322753906
    6. '().' → logprob: -13.500343322753906
    7. '))' → logprob: -13.875343322753906
    8. '())
' → logprob: -14.000343322753906
    9. '())

' → logprob: -14.125343322753906
    10. '(' → logprob: -15.375343322753906

Token 1014: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.320199877838604e-07
    2. ' def' → logprob: -15.25
    3. '```' → logprob: -16.375
    4. '
' → logprob: -17.125
    5. '	def' → logprob: -19.875
    6. '[]' → logprob: -19.875
    7. 'Def' → logprob: -20.25
    8. '-def' → logprob: -20.25
    9. '``' → logprob: -20.625
    10. '<|end|>' → logprob: -20.875

Token 1015: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -5.512236498361744e-07
    2. 'def' → logprob: -14.750000953674316
    3. ' read' → logprob: -16.375
    4. '	read' → logprob: -23.375
    5. 'reads' → logprob: -23.375
    6. '(read' → logprob: -24.625
    7. 'reader' → logprob: -25.0
    8. 'write' → logprob: -25.0
    9. '
' → logprob: -25.25
    10. '_read' → logprob: -25.375

Token 1016: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.011724335141479969
    2. '_s' → logprob: -4.886724472045898
    3. 's' → logprob: -6.136724472045898
    4. 'int' → logprob: -7.636724472045898
    5. '_line' → logprob: -8.136724472045898
    6. 'ints' → logprob: -8.386724472045898
    7. '_lines' → logprob: -8.511724472045898
    8. '_list' → logprob: -8.511724472045898
    9. '_str' → logprob: -8.761724472045898
    10. '_in' → logprob: -9.511724472045898

Token 1017: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.320199877838604e-07
    2. ' s' → logprob: -15.125
    3. '_s' → logprob: -17.25
    4. '()' → logprob: -18.0
    5. '	s' → logprob: -18.0
    6. '(s' → logprob: -19.0
    7. ''s' → logprob: -20.125
    8. '<s' → logprob: -20.625
    9. 'sstream' → logprob: -20.75
    10. ')s' → logprob: -21.125

Token 1018: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.016188152134418488
    2. '():
' → logprob: -4.141188144683838
    3. '()' → logprob: -9.641188621520996
    4. '():

' → logprob: -10.641188621520996
    5. '().' → logprob: -11.141188621520996
    6. ' ():' → logprob: -11.266188621520996
    7. '()[' → logprob: -11.766188621520996
    8. '(split' → logprob: -12.266188621520996
    9. '();' → logprob: -12.391188621520996
    10. '(' → logprob: -12.516188621520996

Token 1019: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1397564709186554
    2. '():
' → logprob: -2.264756441116333
    3. '()' → logprob: -4.639756679534912
    4. 'return' → logprob: -4.639756679534912
    5. '()[' → logprob: -5.514756679534912
    6. '().' → logprob: -6.639756679534912
    7. 'def' → logprob: -8.264756202697754
    8. '().__' → logprob: -8.514756202697754
    9. '=lambda' → logprob: -8.764756202697754
    10. '=' → logprob: -9.014756202697754

Token 1020: ' return' (ID: 622)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5048754811286926
    2. 'return' (adapté à ' return') → logprob: -1.0048754215240479
    3. 'list' → logprob: -3.504875421524048
    4. 'map' → logprob: -9.004875183105469
    5. 'def' → logprob: -10.254875183105469
    6. '   ' → logprob: -10.254875183105469
    7. '=lambda' → logprob: -10.629875183105469
    8. ' lambda' → logprob: -10.754875183105469
    9. ')' → logprob: -10.754875183105469
    10. 'from' → logprob: -11.754875183105469

Token 1021: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -6.2729995988775045e-06
    2. 'map' → logprob: -12.500006675720215
    3. ' list' → logprob: -13.000006675720215
    4. '[list' → logprob: -15.625006675720215
    5. 'lambda' → logprob: -17.6250057220459
    6. 'tuple' → logprob: -17.6250057220459
    7. '[' → logprob: -17.7500057220459
    8. '	list' → logprob: -20.1250057220459
    9. '(list' → logprob: -20.8750057220459
    10. '=list' → logprob: -21.1250057220459

Token 1022: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.512236498361744e-07
    2. 'map' → logprob: -14.875000953674316
    3. '(int' → logprob: -16.5
    4. '*' → logprob: -17.25
    5. ' int' → logprob: -17.375
    6. 'ints' → logprob: -18.625
    7. '[int' → logprob: -19.25
    8. '<int' → logprob: -19.5
    9. ':int' → logprob: -19.75
    10. '0' → logprob: -19.75

Token 1023: '(e' (ID: 3454)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.003935087006539106
    2. '(i' → logprob: -5.628934860229492
    3. '(s' → logprob: -8.753934860229492
    4. '(_)' → logprob: -9.503934860229492
    5. '(token' → logprob: -10.253934860229492
    6. 'x' → logprob: -10.628934860229492
    7. '(tok' → logprob: -11.628934860229492
    8. '(t' → logprob: -12.003934860229492
    9. '(a' → logprob: -12.128934860229492
    10. '(w' → logprob: -12.503934860229492

Token 1024: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08820957690477371
    2. 'x' → logprob: -3.588209629058838
    3. ' for' → logprob: -3.713209629058838
    4. '()' → logprob: -3.838209629058838
    5. 's' → logprob: -4.713209629058838
    6. ')' → logprob: -7.213209629058838
    7. 'e' → logprob: -7.963209629058838
    8. 'in' → logprob: -8.21320915222168
    9. '(x' → logprob: -8.58820915222168
    10. 'token' → logprob: -9.21320915222168

Token 1025: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003423189278692007
    2. ' for' → logprob: -6.00342321395874
    3. '()' → logprob: -7.37842321395874
    4. 'in' → logprob: -8.753422737121582
    5. '(x' → logprob: -9.378422737121582
    6. '(e' → logprob: -10.378422737121582
    7. 'x' → logprob: -11.378422737121582
    8. 'e' → logprob: -11.878422737121582
    9. 'inp' → logprob: -12.253422737121582
    10. '(' → logprob: -12.253422737121582

Token 1026: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09743483364582062
    2. 'inp' → logprob: -2.5974347591400146
    3. ' e' → logprob: -4.097434997558594
    4. ' inp' → logprob: -6.347434997558594
    5. 'elem' → logprob: -13.097434997558594
    6. '_' → logprob: -13.472434997558594
    7. 'in' → logprob: -13.722434997558594
    8. 'ele' → logprob: -13.847434997558594
    9. '_e' → logprob: -14.347434997558594
    10. '	e' → logprob: -14.722434997558594

Token 1027: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31950727105140686
    2. 'in' → logprob: -1.8195072412490845
    3. 'e' → logprob: -2.444507360458374
    4. ' e' → logprob: -4.069507122039795
    5. 'inp' → logprob: -4.944507122039795
    6. ' inp' → logprob: -7.944507122039795
    7. '_' → logprob: -10.444507598876953
    8. ' ' → logprob: -11.444507598876953
    9. ' _' → logprob: -13.319507598876953
    10. 'i' → logprob: -13.319507598876953

Token 1028: ' inp' (ID: 64450)
  Prédit: 'inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inp' → logprob: -2.3199920178740285e-05
    2. ' inp' → logprob: -11.375022888183594
    3. 'sys' → logprob: -11.375022888183594
    4. '(inp' → logprob: -15.750022888183594
    5. 'input' → logprob: -16.750022888183594
    6. 'instr' → logprob: -19.750022888183594
    7. 'stdin' → logprob: -19.750022888183594
    8. '
' → logprob: -19.750022888183594
    9. 'Inp' → logprob: -21.250022888183594
    10. '   ' → logprob: -21.375022888183594

Token 1029: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8624639324116288e-06
    2. '()' → logprob: -13.250001907348633
    3. ' ().' → logprob: -17.125001907348633
    4. '()[' → logprob: -20.625001907348633
    5. '.split' → logprob: -21.000001907348633
    6. 'split' → logprob: -21.375001907348633
    7. '(' → logprob: -21.625001907348633
    8. '().__' → logprob: -21.750001907348633
    9. '().'' → logprob: -22.250001907348633
    10. '()
' → logprob: -22.375001907348633

Token 1030: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043257648940198123
    2. 'strip' → logprob: -7.75043249130249
    3. 'rstrip' → logprob: -13.250432968139648
    4. ' split' → logprob: -16.25043296813965
    5. 'spl' → logprob: -17.37543296813965
    6. '(split' → logprob: -17.87543296813965
    7. '.split' → logprob: -21.62543296813965
    8. ' strip' → logprob: -22.00043296813965
    9. '_split' → logprob: -23.00043296813965
    10. 's' → logprob: -24.25043296813965

Token 1031: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -1.747814349073451e-05
    2. '()' → logprob: -11.000017166137695
    3. '()]
' → logprob: -15.250017166137695
    4. '(' → logprob: -15.375017166137695
    5. ']' → logprob: -15.750017166137695
    6. '())' → logprob: -16.875017166137695
    7. ')]' → logprob: -17.750017166137695
    8. '('' → logprob: -18.500017166137695
    9. ' ()' → logprob: -18.875017166137695
    10. '()].' → logprob: -18.875017166137695

Token 1032: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.252109557390213
    2. ']' → logprob: -1.5021095275878906
    3. ')]' → logprob: -8.87710952758789
    4. ']()' → logprob: -10.75210952758789
    5. '()' → logprob: -11.37710952758789
    6. ' ]' → logprob: -12.25210952758789
    7. '()]
' → logprob: -13.87710952758789
    8. '])' → logprob: -13.87710952758789
    9. ')' → logprob: -15.00210952758789
    10. '())' → logprob: -15.12710952758789

Token 1033: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.110668618930504e-05
    2. '<|end|>' → logprob: -11.00006103515625
    3. ' if' → logprob: -11.12506103515625
    4. '
' → logprob: -11.25006103515625
    5. '    
' → logprob: -11.62506103515625
    6. '```' → logprob: -12.62506103515625
    7. '  
' → logprob: -13.50006103515625
    8. '#if' → logprob: -14.25006103515625
    9. '#' → logprob: -14.50006103515625
    10. ' 
' → logprob: -15.00006103515625

Token 1034: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3136858642101288
    2. 'main' → logprob: -1.3136858940124512
    3. '__' → logprob: -8.188685417175293
    4. ' main' → logprob: -9.563685417175293
    5. 'read' → logprob: -10.688685417175293
    6. '_main' → logprob: -10.688685417175293
    7. 'print' → logprob: -11.063685417175293
    8. ' if' → logprob: -12.813685417175293
    9. 'sys' → logprob: -13.188685417175293
    10. 'run' → logprob: -13.313685417175293

Token 1035: 'print' (ID: 1598)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -3.6789137084269896e-05
    2. 'ebug' → logprob: -10.37503719329834
    3. 'efs' → logprob: -12.75003719329834
    4. 'def' → logprob: -13.87503719329834
    5. 'efa' → logprob: -14.62503719329834
    6. 'efi' → logprob: -14.62503719329834
    7. 'e' → logprob: -15.37503719329834
    8. 'EF' → logprob: -16.125036239624023
    9. 'eft' → logprob: -16.500036239624023
    10. ' ef' → logprob: -16.875036239624023

Token 1036: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0038677770644426346
    2. '(' → logprob: -6.0038676261901855
    3. '(DEBUG' → logprob: -7.6288676261901855
    4. '(debug' → logprob: -8.003868103027344
    5. '(Debug' → logprob: -8.128868103027344
    6. '(*)' → logprob: -9.378868103027344
    7. '*' → logprob: -10.378868103027344
    8. '(if' → logprob: -10.378868103027344
    9. '(lambda' → logprob: -10.628868103027344
    10. '_debug' → logprob: -11.378868103027344

Token 1037: 'value' (ID: 1594)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -9.014684110297821e-06
    2. ' args' → logprob: -12.500008583068848
    3. 'argv' → logprob: -12.875008583068848
    4. '_args' → logprob: -14.250008583068848
    5. 'a' → logprob: -14.375008583068848
    6. 'params' → logprob: -14.750008583068848
    7. 'print' → logprob: -15.125008583068848
    8. '(args' → logprob: -15.625008583068848
    9. '_' → logprob: -16.000009536743164
    10. 'values' → logprob: -16.125009536743164

Token 1038: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7890536189079285
    2. '):' → logprob: -0.7890536189079285
    3. '):
' → logprob: -2.5390536785125732
    4. '(' → logprob: -5.539053440093994
    5. ':' → logprob: -6.039053440093994
    6. ',' → logprob: -6.039053440093994
    7. '(*' → logprob: -6.164053440093994
    8. '():' → logprob: -7.914053440093994
    9. '(s' → logprob: -8.039053916931152
    10. ')' → logprob: -8.164053916931152

Token 1039: ' sep' (ID: 31529)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.13770422339439392
    2. 'sep' → logprob: -2.6377041339874268
    3. '**' → logprob: -3.3877041339874268
    4. 'flush' → logprob: -3.8877041339874268
    5. ' file' → logprob: -6.387704372406006
    6. ' sep' → logprob: -7.512704372406006
    7. 'end' → logprob: -7.887704372406006
    8. ' **' → logprob: -9.012703895568848
    9. ' flush' → logprob: -9.637703895568848
    10. ' ' → logprob: -10.387703895568848

Token 1040: '='' (ID: 2053)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6113284826278687
    2. '='' → logprob: -0.8613284826278687
    3. '=',' → logprob: -3.361328601837158
    4. '=",' → logprob: -10.361328125
    5. '=None' → logprob: -10.486328125
    6. '='',' → logprob: -11.236328125
    7. '="' → logprob: -12.361328125
    8. '=('' → logprob: -14.111328125
    9. ',' → logprob: -14.486328125
    10. '='\' → logprob: -14.736328125

Token 1041: ' ',' (ID: 14089)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6478835344314575
    2. ' ')' → logprob: -1.6478835344314575
    3. '',' → logprob: -2.147883415222168
    4. ' ',' → logprob: -2.272883415222168
    5. ''' → logprob: -3.272883415222168
    6. '')' → logprob: -4.022883415222168
    7. ''):' → logprob: -5.147883415222168
    8. ' ')[' → logprob: -6.772883415222168
    9. ',' → logprob: -7.272883415222168
    10. ''):
' → logprob: -8.272883415222168

Token 1042: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0030971430242061615
    2. ' end' → logprob: -6.003097057342529
    3. 'file' → logprob: -7.628097057342529
    4. 'flush' → logprob: -9.003097534179688
    5. '**' → logprob: -11.503097534179688
    6. ' file' → logprob: -14.378097534179688
    7. 'sep' → logprob: -15.003097534179688
    8. 'print' → logprob: -15.253097534179688
    9. ' **' → logprob: -15.503097534179688
    10. ' flush' → logprob: -16.253097534179688

Token 1043: '='\' (ID: 106410)
  Prédit: '='\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='\' → logprob: -0.20628243684768677
    2. '=' → logprob: -1.706282377243042
    3. '='' → logprob: -5.831282615661621
    4. '='',' → logprob: -6.956282615661621
    5. '=',' → logprob: -7.581282615661621
    6. '=''' → logprob: -8.831282615661621
    7. '=None' → logprob: -9.081282615661621
    8. '=\' → logprob: -9.081282615661621
    9. '="\' → logprob: -9.831282615661621
    10. '=('' → logprob: -11.706282615661621

Token 1044: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3684309720993042
    2. '')' → logprob: -1.9934309720993042
    3. ''\' → logprob: -2.1184310913085938
    4. '\n' → logprob: -2.9934310913085938
    5. ''' → logprob: -7.118431091308594
    6. 'newline' → logprob: -8.618431091308594
    7. '\' → logprob: -8.868431091308594
    8. '"\' → logprob: -9.118431091308594
    9. ')\' → logprob: -9.368431091308594
    10. ')' → logprob: -9.868431091308594

Token 1045: ''):
' (ID: 26539)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3223950266838074
    2. '):' → logprob: -1.5723950862884521
    3. ''):
' → logprob: -3.197395086288452
    4. ',' → logprob: -4.447394847869873
    5. ''):' → logprob: -4.572394847869873
    6. ')' → logprob: -5.822394847869873
    7. '',' → logprob: -6.572394847869873
    8. '):
' → logprob: -7.697394847869873
    9. '')' → logprob: -8.822395324707031
    10. '):

' → logprob: -9.947395324707031

Token 1046: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4756457805633545
    2. '   ' → logprob: -0.9756457805633545
    3. ' if' → logprob: -6.475646018981934
    4. '	if' → logprob: -11.600646018981934
    5. 'def' → logprob: -11.600646018981934
    6. '```' → logprob: -11.975646018981934
    7. '    
' → logprob: -13.975646018981934
    8. '#' → logprob: -14.600646018981934
    9. 'pass' → logprob: -15.475646018981934
    10. '#if' → logprob: -15.975646018981934

Token 1047: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -4.36574100604048e-06
    2. '   ' → logprob: -12.750004768371582
    3. 'pass' → logprob: -13.625004768371582
    4. ' if' → logprob: -15.500004768371582
    5. 'def' → logprob: -17.000003814697266
    6. 'import' → logprob: -17.625003814697266
    7. 'print' → logprob: -17.750003814697266
    8. 'try' → logprob: -20.000003814697266
    9. '	if' → logprob: -20.375003814697266
    10. 'sys' → logprob: -21.250003814697266

Token 1048: ' DEBUG' (ID: 32113)
  Prédit: 'DEBUG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEBUG' → logprob: -7.64839569455944e-05
    2. ' DEBUG' → logprob: -9.500076293945312
    3. '	DEBUG' → logprob: -14.125076293945312
    4. '   ' → logprob: -15.000076293945312
    5. 'not' → logprob: -15.125076293945312
    6. '(DEBUG' → logprob: -15.875076293945312
    7. ' not' → logprob: -16.250076293945312
    8. '  ' → logprob: -17.250076293945312
    9. ' ' → logprob: -17.375076293945312
    10. 'debug' → logprob: -17.750076293945312

Token 1049: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11314460635185242
    2. ':
' → logprob: -2.238144636154175
    3. '   ' → logprob: -9.738144874572754
    4. 'and' → logprob: -9.738144874572754
    5. '==' → logprob: -9.988144874572754
    6. ' and' → logprob: -10.238144874572754
    7. '=' → logprob: -10.488144874572754
    8. '():
' → logprob: -10.488144874572754
    9. '():' → logprob: -10.738144874572754
    10. '):
' → logprob: -10.863144874572754

Token 1050: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09974467754364014
    2. '   ' → logprob: -2.4747447967529297
    3. 'print' → logprob: -4.84974479675293
    4. ' print' → logprob: -5.84974479675293
    5. '    
' → logprob: -11.59974479675293
    6. '        
' → logprob: -12.47474479675293
    7. '
' → logprob: -12.59974479675293
    8. '      ' → logprob: -12.59974479675293
    9. '           ' → logprob: -12.84974479675293
    10. '     ' → logprob: -12.97474479675293

Token 1051: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. 'sys' → logprob: -14.75
    3. ' print' → logprob: -17.125
    4. '   ' → logprob: -20.125
    5. 'import' → logprob: -20.375
    6. '_print' → logprob: -21.0
    7. '__' → logprob: -21.125
    8. 'for' → logprob: -22.125
    9. '#print' → logprob: -22.125
    10. '       ' → logprob: -22.375

Token 1052: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.00039825684507377446
    2. '(' → logprob: -7.8753981590271
    3. '*' → logprob: -11.500398635864258
    4. '(se' → logprob: -12.125398635864258
    5. '(
' → logprob: -13.625398635864258
    6. 'sep' → logprob: -14.000398635864258
    7. '((*' → logprob: -15.625398635864258
    8. '()' → logprob: -15.875398635864258
    9. ' (*' → logprob: -16.500398635864258
    10. '(value' → logprob: -17.250398635864258

Token 1053: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -3.8889261304575484e-06
    2. '(value' → logprob: -12.500003814697266
    3. ' value' → logprob: -16.500003814697266
    4. '[value' → logprob: -19.875003814697266
    5. '"value' → logprob: -20.875003814697266
    6. ')value' → logprob: -21.250003814697266
    7. ''value' → logprob: -21.250003814697266
    8. ',value' → logprob: -21.625003814697266
    9. '$value' → logprob: -22.375003814697266
    10. '=value' → logprob: -22.500003814697266

Token 1054: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033034008811227977
    2. ' ,' → logprob: -8.500329971313477
    3. ',end' → logprob: -9.000329971313477
    4. 'end' → logprob: -13.000329971313477
    5. ')' → logprob: -14.875329971313477
    6. '   ' → logprob: -15.125329971313477
    7. ',se' → logprob: -15.375329971313477
    8. 'sep' → logprob: -16.875329971313477
    9. '       ' → logprob: -16.875329971313477
    10. ',
' → logprob: -17.125329971313477

Token 1055: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.001764551387168467
    2. ' sep' → logprob: -6.50176477432251
    3. 'end' → logprob: -8.251764297485352
    4. ' end' → logprob: -13.751764297485352
    5. 'separator' → logprob: -15.126764297485352
    6. 'se' → logprob: -16.50176429748535
    7. 'file' → logprob: -17.12676429748535
    8. ' ' → logprob: -17.87676429748535
    9. '_sep' → logprob: -18.87676429748535
    10. 'Sep' → logprob: -19.75176429748535

Token 1056: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.5776860184123507e-06
    2. ',' → logprob: -13.00000286102295
    3. 'sep' → logprob: -15.25000286102295
    4. '=end' → logprob: -16.625001907348633
    5. '='' → logprob: -17.500001907348633
    6. ',se' → logprob: -17.875001907348633
    7. ')' → logprob: -19.250001907348633
    8. '=s' → logprob: -19.375001907348633
    9. '=',' → logprob: -19.375001907348633
    10. ')=' → logprob: -19.625001907348633

Token 1057: 'sep' (ID: 46643)
  Prédit: 'sep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -1.676292231422849e-05
    2. ' sep' → logprob: -11.000017166137695
    3. ',' → logprob: -18.125017166137695
    4. 'sept' → logprob: -18.250017166137695
    5. ''' → logprob: -19.125017166137695
    6. 'separator' → logprob: -20.500017166137695
    7. '_sep' → logprob: -20.500017166137695
    8. 'se' → logprob: -20.875017166137695
    9. 'sev' → logprob: -21.000017166137695
    10. '.sep' → logprob: -21.125017166137695

Token 1058: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010667765513062477
    2. ',end' → logprob: -4.76066780090332
    3. ' ,' → logprob: -6.26066780090332
    4. 'end' → logprob: -8.88566780090332
    5. ' end' → logprob: -13.26066780090332
    6. ')' → logprob: -14.76066780090332
    7. '[end' → logprob: -15.01066780090332
    8. '=end' → logprob: -15.63566780090332
    9. '       ' → logprob: -16.26066780090332
    10. '(end' → logprob: -17.63566780090332

Token 1059: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.029750484973192215
    2. ' end' → logprob: -3.5297505855560303
    3. '	end' → logprob: -21.90475082397461
    4. '(end' → logprob: -21.90475082397461
    5. ' ' → logprob: -22.27975082397461
    6. '=end' → logprob: -22.27975082397461
    7. ',end' → logprob: -23.27975082397461
    8. 'End' → logprob: -24.02975082397461
    9. '   ' → logprob: -24.02975082397461
    10. '[end' → logprob: -24.15475082397461

Token 1060: '=end' (ID: 147698)
  Prédit: '=end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=end' → logprob: -0.0015175960725173354
    2. 'end' → logprob: -6.5015177726745605
    3. '=' → logprob: -11.751517295837402
    4. ')' → logprob: -12.376517295837402
    5. '='' → logprob: -13.001517295837402
    6. '=''' → logprob: -15.251517295837402
    7. ',end' → logprob: -15.751517295837402
    8. '='\' → logprob: -16.25151824951172
    9. '='')
' → logprob: -16.25151824951172
    10. ''end' → logprob: -16.50151824951172

Token 1061: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ')
' → logprob: -12.750004768371582
    3. '   ' → logprob: -13.750004768371582
    4. ' )' → logprob: -14.250004768371582
    5. ')}' → logprob: -17.0000057220459
    6. ')#' → logprob: -17.0000057220459
    7. '       ' → logprob: -17.2500057220459
    8. ')return' → logprob: -17.3750057220459
    9. ')

' → logprob: -17.5000057220459
    10. '<|end|>' → logprob: -17.8750057220459

Token 1062: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001684981834841892
    2. 'def' → logprob: -8.750168800354004
    3. ' if' → logprob: -11.750168800354004
    4. '#' → logprob: -14.375168800354004
    5. '#if' → logprob: -14.500168800354004
    6. 'main' → logprob: -15.125168800354004
    7. '```' → logprob: -15.125168800354004
    8. '
' → logprob: -15.375168800354004
    9. '<|end|>' → logprob: -16.250167846679688
    10. 'for' → logprob: -16.500167846679688

Token 1063: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10021496564149857
    2. '__' → logprob: -2.350214958190918
    3. 'name' → logprob: -12.100214958190918
    4. ' ' → logprob: -13.850214958190918
    5. 'True' → logprob: -14.100214958190918
    6. '___' → logprob: -14.850214958190918
    7. ' True' → logprob: -16.225215911865234
    8. '/__' → logprob: -16.350215911865234
    9. '_name' → logprob: -16.600215911865234
    10. ' "__' → logprob: -16.725215911865234

Token 1064: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10327839851379395
    2. ' __' → logprob: -2.478278398513794
    3. ' ==' → logprob: -4.603278160095215
    4. 'name' → logprob: -5.728278160095215
    5. '==' → logprob: -7.728278160095215
    6. '_name' → logprob: -8.353278160095215
    7. '_' → logprob: -9.103278160095215
    8. '.__' → logprob: -10.853278160095215
    9. 'if' → logprob: -11.103278160095215
    10. '_main' → logprob: -11.228278160095215

Token 1065: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.630610641877865e-06
    2. '==' → logprob: -12.125006675720215
    3. 'name' → logprob: -14.000006675720215
    4. '__
' → logprob: -16.5000057220459
    5. ' ==' → logprob: -16.6250057220459
    6. '__.__' → logprob: -16.8750057220459
    7. '___' → logprob: -17.6250057220459
    8. '_' → logprob: -18.0000057220459
    9. 'main' → logprob: -18.1250057220459
    10. '____' → logprob: -18.1250057220459

Token 1066: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35273924469947815
    2. '__' → logprob: -1.8527392148971558
    3. '==' → logprob: -1.9777392148971558
    4. '=="' → logprob: -6.852739334106445
    5. '=='' → logprob: -7.102739334106445
    6. '==
' → logprob: -9.477739334106445
    7. '=' → logprob: -10.477739334106445
    8. '_' → logprob: -10.852739334106445
    9. ' __' → logprob: -11.352739334106445
    10. ' =='' → logprob: -12.102739334106445

Token 1067: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03806915506720543
    2. '"' → logprob: -3.288069248199463
    3. '__' → logprob: -10.663068771362305
    4. ' '__' → logprob: -12.538068771362305
    5. ' "__' → logprob: -14.413068771362305
    6. '   ' → logprob: -16.413068771362305
    7. '('__' → logprob: -17.413068771362305
    8. ' ' → logprob: -17.663068771362305
    9. ''"' → logprob: -17.913068771362305
    10. ''_' → logprob: -18.288068771362305

Token 1068: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.512236498361744e-07
    2. '_main' → logprob: -15.125000953674316
    3. '__' → logprob: -15.375000953674316
    4. 'name' → logprob: -16.5
    5. ' main' → logprob: -19.625
    6. '(main' → logprob: -20.875
    7. 'ma' → logprob: -21.0
    8. 'm' → logprob: -21.5
    9. '	main' → logprob: -21.5
    10. '-main' → logprob: -22.375

Token 1069: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.0032069424632936716
    2. '__' → logprob: -5.753206729888916
    3. '__":
' → logprob: -10.503207206726074
    4. '__:' → logprob: -14.378207206726074
    5. '():
' → logprob: -14.503207206726074
    6. '()' → logprob: -14.503207206726074
    7. '__()
' → logprob: -16.503206253051758
    8. '__('' → logprob: -17.128206253051758
    9. '('__' → logprob: -17.378206253051758
    10. '__
' → logprob: -18.878206253051758

Token 1070: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01000963430851698
    2. '	main' → logprob: -5.135009765625
    3. 'main' → logprob: -5.510009765625
    4. '    
' → logprob: -11.385009765625
    5. ' main' → logprob: -11.760009765625
    6. '(main' → logprob: -12.510009765625
    7. '   ' → logprob: -13.760009765625
    8. '_main' → logprob: -14.260009765625
    9. '```' → logprob: -14.385009765625
    10. '
' → logprob: -15.010009765625

Token 1071: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.5
    3. '   ' → logprob: -16.5
    4. '	main' → logprob: -18.25
    5. '(main' → logprob: -22.375
    6. 'import' → logprob: -22.875
    7. '_main' → logprob: -24.25
    8. 'try' → logprob: -24.625
    9. '.main' → logprob: -24.75
    10. 'sys' → logprob: -24.875

Token 1072: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1070
Tokens correctement prédits (1ère position, stricte): 426
Tokens correctement prédits (1ère position, avec adaptation): 488
Tokens correctement prédits (top 10): 939
Précision stricte (1ère position): 39.81%
Précision adaptée (1ère position): 45.61%
Précision (top 10): 87.76%
================================================================================
