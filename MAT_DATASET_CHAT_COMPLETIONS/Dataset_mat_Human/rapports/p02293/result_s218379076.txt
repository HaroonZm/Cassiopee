================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#! /usr/bin/env python3

from typing import List
from math import sqrt

EPS = 1e-10

def float_equal(x: float, y: float) -> bool:
    return abs(x - y) < EPS

class Point:

    def __init__(self, x: float=0.0, y: float=0.0) -> None:
        self.x = x
        self.y = y

    def __repr__(self) -> str:
        return "Point({}, {})".format(self.x, self.y)

    def __eq__(self, other: object) -> bool:
        if not isinstance(other, Point):
            return NotImplemented
        return float_equal(self.x, other.x) and \
            float_equal(self.y, other.y)

    def __add__(self, other: 'Point') -> 'Point':
        return Point(self.x + other.x, self.y + other.y)

    def __sub__(self, other: 'Point') -> 'Point':
        return Point(self.x - other.x, self.y - other.y)

    def __mul__(self, k: float) -> 'Point':
        return Point(self.x * k, self.y * k)

    def __rmul__(self, k: float) -> 'Point':
        return self * k

    def __truediv__(self, k: float) -> 'Point':
        return Point(self.x / k, self.y / k)

    def __lt__(self, other: 'Point') -> bool:
        return self.y < other.y \
            if abs(self.x - other.x) < EPS \
            else self.x < other.x

    def norm(self):
        return self.x * self.x + self.y * self.y

    def abs(self):
        return sqrt(self.norm())

    def dot(self, other: 'Point') -> float:
        return self.x * other.x + self.y * other.y

    def cross(self, other: 'Point') -> float:
        return self.x * other.y - self.y * other.x

    def is_orthogonal(self, other: 'Point') -> bool:
        return float_equal(self.dot(other), 0.0)

    def is_parallel(self, other: 'Point') -> bool:
        return float_equal(self.cross(other), 0.0)

Vector = Point

class Segment:

    def __init__(self, p1: Point = None, p2: Point = None) -> None:
        self.p1: Point = Point() if p1 is None else p1
        self.p2: Point = Point() if p2 is None else p2

    def __repr__(self) -> str:
        return "Segment({}, {})".format(self.p1, self.p2)

    def __eq__(self, other: object) -> bool:
        if not isinstance(other, Segment):
            return NotImplemented
        return self.p1 == other.p1 and self.p2 == other.p2

    def vector(self):
        return self.p2 - self.p1

    def is_orthogonal(self, other: 'Segment') -> bool:
        return self.vector().is_orthogonal(other.vector())

    def is_parallel(self, other: 'Segment') -> bool:
        return self.vector().is_parallel(other.vector())

Line = Segment

class Circle:

    def __init__(self, c: Point=None, r: float=0.0) -> None:
        self.c: Point = Point() if c is None else c
        self.r: float = r

    def __eq__(self, other: object) -> bool:
        if not isinstance(other, Circle):
            return NotImplemented
        return self.c == other.c and self.r == other.r

    def __repr__(self) -> str:
        return "Circle({}, {})".format(self.c, self.r)

def classify(s1: Segment, s2: Segment) -> int:
    if s1.is_parallel(s2):
        return 2
    elif s1.is_orthogonal(s2):
        return 1
    else:
        return 0

def main() -> None:
    q = int(input())
    for _ in range(q):
        s1, s2 = Segment(), Segment()
        s1.p1.x, s1.p1.y, s1.p2.x, s1.p2.y, \
            s2.p1.x, s2.p1.y, s2.p2.x, s2.p2.y = \
            [int(x) for x in input().split()]
        print(classify(s1, s2))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!' (ID: 18666)
  → Token d'amorce (pas de prédiction)

Token 1: ' /' (ID: 820)
  → Token d'amorce (pas de prédiction)

Token 2: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 3: '/bin' (ID: 20950)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3869089186191559
    2. '/bin' → logprob: -1.1369088888168335
    3. '/b' → logprob: -10.261908531188965
    4. '/local' → logprob: -13.761908531188965
    5. '/env' → logprob: -14.261908531188965
    6. '/
' → logprob: -15.011908531188965
    7. 'bin' → logprob: -15.136908531188965
    8. 'b' → logprob: -15.136908531188965
    9. ' /' → logprob: -15.761908531188965
    10. '/bash' → logprob: -16.26190948486328

Token 4: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0120017658919096
    2. '/python' → logprob: -5.012001991271973
    3. '/env' → logprob: -5.262001991271973
    4. '/bash' → logprob: -10.137001991271973
    5. 'python' → logprob: -10.387001991271973
    6. '/bin' → logprob: -11.512001991271973
    7. '/b' → logprob: -13.387001991271973
    8. ' /' → logprob: -13.512001991271973
    9. 'env' → logprob: -13.637001991271973
    10. '/usr' → logprob: -13.762001991271973

Token 5: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.38690099120140076
    2. ' python' → logprob: -1.1369010210037231
    3. 'p' → logprob: -11.511900901794434
    4. 'py' → logprob: -12.011900901794434
    5. 'bash' → logprob: -12.511900901794434
    6. ' Python' → logprob: -12.886900901794434
    7. ' bash' → logprob: -13.136900901794434
    8. '/python' → logprob: -13.636900901794434
    9. ' ' → logprob: -14.011900901794434
    10. ' p' → logprob: -14.011900901794434

Token 6: '3' (ID: 18)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5377206206321716
    2. '3' → logprob: -1.6627206802368164
    3. '```' → logprob: -2.5377206802368164
    4. '\' → logprob: -3.2877206802368164
    5. ' 
' → logprob: -3.5377206802368164
    6. 'import' → logprob: -4.037720680236816
    7. '' → logprob: -4.162720680236816
    8. '  
' → logprob: -4.162720680236816
    9. '#' → logprob: -4.787720680236816
    10. '-' → logprob: -5.162720680236816

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.06664910167455673
    2. 'import' → logprob: -3.1916491985321045
    3. '\' → logprob: -4.941648960113525
    4. '' → logprob: -5.316648960113525
    5. ' 
' → logprob: -5.566648960113525
    6. '  
' → logprob: -6.191648960113525
    7. '
' → logprob: -6.566648960113525
    8. '```' → logprob: -6.691648960113525
    9. '#' → logprob: -7.566648960113525
    10. '#!/' → logprob: -7.941648960113525

Token 8: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3345230519771576
    2. '\n' → logprob: -1.33452308177948
    3. '
' → logprob: -5.2095232009887695
    4. '' → logprob: -5.5845232009887695
    5. ' 
' → logprob: -5.5845232009887695
    6. '#' → logprob: -6.2095232009887695
    7. 'print' → logprob: -6.5845232009887695
    8. '#!/' → logprob: -6.9595232009887695
    9. '  
' → logprob: -7.3345232009887695
    10. '```' → logprob: -7.3345232009887695

Token 9: ' typing' (ID: 34152)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.07590007781982422
    2. ' ' → logprob: -3.075900077819824
    3. ' collections' → logprob: -4.575900077819824
    4. ' sys' → logprob: -5.450900077819824
    5. ' math' → logprob: -5.450900077819824
    6. ' flask' → logprob: -6.575900077819824
    7. ' pathlib' → logprob: -7.075900077819824
    8. ' import' → logprob: -7.200900077819824
    9. 'os' → logprob: -7.200900077819824
    10. ' functools' → logprob: -7.325900077819824

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.20159831643104553
    2. 'import' → logprob: -1.7015982866287231
    3. '.' → logprob: -9.451598167419434
    4. '_import' → logprob: -10.451598167419434
    5. '.import' → logprob: -10.576598167419434
    6. ' ' → logprob: -10.576598167419434
    7. '```' → logprob: -11.826598167419434
    8. 'from' → logprob: -12.576598167419434
    9. '	import' → logprob: -12.826598167419434
    10. ' imports' → logprob: -13.076598167419434

Token 11: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.7253528833389282
    2. ' Any' → logprob: -0.7253528833389282
    3. 'Any' → logprob: -3.9753527641296387
    4. ' Generator' → logprob: -4.975352764129639
    5. 'List' → logprob: -5.475352764129639
    6. ' Callable' → logprob: -7.350352764129639
    7. ' Optional' → logprob: -7.600352764129639
    8. ' Union' → logprob: -8.600353240966797
    9. ' Iterator' → logprob: -8.725353240966797
    10. 'Generator' → logprob: -8.975353240966797

Token 12: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00496250856667757
    2. '
' → logprob: -6.00496244430542
    3. '```' → logprob: -7.37996244430542
    4. '\' → logprob: -7.62996244430542
    5. '\n' → logprob: -7.87996244430542
    6. '<|end|>' → logprob: -8.004962921142578
    7. 'import' → logprob: -8.754962921142578
    8. '

' → logprob: -8.754962921142578
    9. ' def' → logprob: -9.754962921142578
    10. 'de' → logprob: -9.879962921142578

Token 13: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24612107872962952
    2. '
' → logprob: -1.9961210489273071
    3. '

' → logprob: -2.6211211681365967
    4. 'import' → logprob: -5.246120929718018
    5. '


' → logprob: -6.996120929718018
    6. '```' → logprob: -6.996120929718018
    7. 'class' → logprob: -7.371120929718018
    8. '<|end|>' → logprob: -7.621120929718018
    9. '\n' → logprob: -8.121121406555176
    10. '\' → logprob: -8.496121406555176

Token 14: ' math' (ID: 13324)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.3269502818584442
    2. ' dat' → logprob: -1.7019503116607666
    3. ' fast' → logprob: -2.9519503116607666
    4. 'typing' → logprob: -3.8269503116607666
    5. ' collections' → logprob: -4.4519500732421875
    6. 'fast' → logprob: -5.5769500732421875
    7. 'collections' → logprob: -5.9519500732421875
    8. 'dat' → logprob: -6.3269500732421875
    9. ' p' → logprob: -7.7019500732421875
    10. ' ' → logprob: -7.7019500732421875

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05502152442932129
    2. 'import' → logprob: -2.9300215244293213
    3. ' ' → logprob: -9.555021286010742
    4. '_import' → logprob: -11.180021286010742
    5. '	import' → logprob: -11.555021286010742
    6. ' im' → logprob: -11.680021286010742
    7. ' importar' → logprob: -11.805021286010742
    8. '.' → logprob: -12.055021286010742
    9. '<|end|>' → logprob: -12.180021286010742
    10. ' impor' → logprob: -12.680021286010742

Token 16: ' sqrt' (ID: 44237)
  Prédit: ' sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.6730903387069702
    2. 'sqrt' → logprob: -0.7980903387069702
    3. ' ceil' → logprob: -3.7980904579162598
    4. ' factorial' → logprob: -5.04809045791626
    5. 'ceil' → logprob: -5.29809045791626
    6. 'sin' → logprob: -6.79809045791626
    7. ' gcd' → logprob: -6.92309045791626
    8. ' sin' → logprob: -7.42309045791626
    9. ' inf' → logprob: -7.54809045791626
    10. ' pi' → logprob: -8.048089981079102

Token 17: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8234643936157227
    2. 'def' → logprob: -1.4484643936157227
    3. '

' → logprob: -1.5734643936157227
    4. '```' → logprob: -3.0734643936157227
    5. '\n' → logprob: -3.4484643936157227
    6. '\' → logprob: -3.4484643936157227
    7. '
' → logprob: -6.073464393615723
    8. '``' → logprob: -6.323464393615723
    9. 'd' → logprob: -7.448464393615723
    10. '(' → logprob: -7.573464393615723

Token 18: 'EPS' (ID: 82793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011093381908722222
    2. '```' → logprob: -9.750110626220703
    3. 'de' → logprob: -10.125110626220703
    4. 'd' → logprob: -12.000110626220703
    5. 'class' → logprob: -13.000110626220703
    6. '
' → logprob: -13.750110626220703
    7. '``' → logprob: -13.875110626220703
    8. '\' → logprob: -14.000110626220703
    9. ' def' → logprob: -14.125110626220703
    10. 'import' → logprob: -16.500110626220703

Token 19: ' =' (ID: 314)
  Prédit: 'ILON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ILON' → logprob: -0.10515134036540985
    2. '=' → logprob: -2.980151414871216
    3. ' =' → logprob: -3.355151414871216
    4. '_' → logprob: -4.355151176452637
    5. 'ilon' → logprob: -7.980151176452637
    6. 'I' → logprob: -8.605151176452637
    7. ' ' → logprob: -9.105151176452637
    8. 'ILO' → logprob: -9.230151176452637
    9. '__' → logprob: -9.480151176452637
    10. '   ' → logprob: -9.605151176452637

Token 20: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014141082763672
    2. ' ' → logprob: -1.7014141082763672
    3. '0' → logprob: -15.076414108276367
    4. '   ' → logprob: -15.451414108276367
    5. '10' → logprob: -15.576414108276367
    6. ' ' → logprob: -16.701414108276367
    7. '2' → logprob: -16.951414108276367
    8. '9' → logprob: -17.826414108276367
    9. '3' → logprob: -18.451414108276367
    10. '```' → logprob: -18.576414108276367

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013269031187519431
    2. ' ' → logprob: -6.626327037811279
    3. '0' → logprob: -14.626326560974121
    4. '   ' → logprob: -14.751326560974121
    5. '10' → logprob: -17.376327514648438
    6. '2' → logprob: -17.751327514648438
    7. '  ' → logprob: -17.751327514648438
    8. '```' → logprob: -18.001327514648438
    9. ' ' → logprob: -18.376327514648438
    10. '=' → logprob: -18.751327514648438

Token 22: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09797733277082443
    2. '-' → logprob: -2.59797739982605
    3. '0' → logprob: -3.97297739982605
    4. '```' → logprob: -9.597977638244629
    5. '-e' → logprob: -12.597977638244629
    6. 'E' → logprob: -12.597977638244629
    7. '1' → logprob: -12.597977638244629
    8. '3' → logprob: -12.722977638244629
    9. 'o' → logprob: -13.472977638244629
    10. '``' → logprob: -13.722977638244629

Token 23: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. '9' → logprob: -16.0
    3. '7' → logprob: -16.875
    4. '```' → logprob: -17.0
    5. '−' → logprob: -17.375
    6. '6' → logprob: -17.375
    7. '8' → logprob: -17.75
    8. '0' → logprob: -18.125
    9. ' -' → logprob: -18.375
    10. '-
' → logprob: -18.375

Token 24: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.3587338626384735
    2. '7' → logprob: -1.483733892440796
    3. '09' → logprob: -3.358733892440796
    4. '8' → logprob: -4.108733654022217
    5. '07' → logprob: -4.858733654022217
    6. '10' → logprob: -5.108733654022217
    7. '08' → logprob: -5.858733654022217
    8. '6' → logprob: -5.858733654022217
    9. '12' → logprob: -5.983733654022217
    10. '06' → logprob: -7.233733654022217

Token 25: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.19334514439105988
    2. '
' → logprob: -1.9433451890945435
    3. 'def' → logprob: -3.443345069885254
    4. '


' → logprob: -8.068345069885254
    5. '
' → logprob: -8.693345069885254
    6. 'class' → logprob: -10.068345069885254
    7. '' → logprob: -10.568345069885254
    8. ' def' → logprob: -11.568345069885254
    9. 'd' → logprob: -11.568345069885254
    10. '
 
' → logprob: -11.568345069885254

Token 26: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5146816372871399
    2. '
' → logprob: -1.0146815776824951
    3. 'd' → logprob: -3.264681577682495
    4. '

' → logprob: -6.889681816101074
    5. 'de' → logprob: -8.389681816101074
    6. 'class' → logprob: -8.514681816101074
    7. '
' → logprob: -9.139681816101074
    8. '' → logprob: -11.639681816101074
    9. '\' → logprob: -11.889681816101074
    10. '```' → logprob: -12.514681816101074

Token 27: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05793790519237518
    2. ' calculate' → logprob: -3.1829378604888916
    3. ' compute' → logprob: -5.432938098907471
    4. ' space' → logprob: -5.932938098907471
    5. ' find' → logprob: -5.932938098907471
    6. '_' → logprob: -6.932938098907471
    7. ' is' → logprob: -7.057938098907471
    8. ' distance' → logprob: -7.307938098907471
    9. ' f' → logprob: -7.807938098907471
    10. ' calc' → logprob: -8.057937622070312

Token 28: '_equal' (ID: 27882)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4959850609302521
    2. ' _' → logprob: -1.7459850311279297
    3. '_equal' → logprob: -2.3709850311279297
    4. '_s' → logprob: -3.3709850311279297
    5. '_equals' → logprob: -3.4959850311279297
    6. '_compare' → logprob: -3.8709850311279297
    7. '_eq' → logprob: -4.24598503112793
    8. '_div' → logprob: -5.87098503112793
    9. 's' → logprob: -5.87098503112793
    10. ' ' → logprob: -6.12098503112793

Token 29: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2525750994682312
    2. '(' → logprob: -1.502575159072876
    3. ' (' → logprob: -7.627574920654297
    4. '(x' → logprob: -8.877574920654297
    5. '(lhs' → logprob: -11.627574920654297
    6. '(value' → logprob: -12.752574920654297
    7. '(s' → logprob: -13.627574920654297
    8. '(A' → logprob: -14.002574920654297
    9. '(

' → logprob: -14.377574920654297
    10. '(f' → logprob: -14.377574920654297

Token 30: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004172065819147974
    2. ':' → logprob: -8.37541675567627
    3. ',y' → logprob: -9.12541675567627
    4. ' ,' → logprob: -9.50041675567627
    5. ')' → logprob: -14.37541675567627
    6. '):' → logprob: -14.62541675567627
    7. 'y' → logprob: -14.62541675567627
    8. ' y' → logprob: -15.12541675567627
    9. ',x' → logprob: -15.50041675567627
    10. ':int' → logprob: -15.62541675567627

Token 31: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.12852469086647034
    2. ' float' → logprob: -2.1285247802734375
    3. ')' → logprob: -7.1285247802734375
    4. ' ' → logprob: -7.8785247802734375
    5. 'y' → logprob: -9.003524780273438
    6. ',' → logprob: -9.503524780273438
    7. ' y' → logprob: -9.753524780273438
    8. ',float' → logprob: -10.128524780273438
    9. '  ' → logprob: -10.503524780273438
    10. 'x' → logprob: -10.503524780273438

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.263011578586884e-05
    2. ' ,' → logprob: -10.125042915344238
    3. ',x' → logprob: -13.375042915344238
    4. ',y' → logprob: -14.750042915344238
    5. ')' → logprob: -15.250042915344238
    6. ',)' → logprob: -16.625041961669922
    7. ',float' → logprob: -16.875041961669922
    8. ',

' → logprob: -17.250041961669922
    9. '‌,' → logprob: -17.250041961669922
    10. ',
' → logprob: -17.750041961669922

Token 33: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4287143647670746
    2. ' y' → logprob: -1.053714394569397
    3. '	y' → logprob: -11.928714752197266
    4. ')' → logprob: -12.428714752197266
    5. ' ' → logprob: -13.678714752197266
    6. ')y' → logprob: -13.928714752197266
    7. ' ' → logprob: -15.803714752197266
    8. '   ' → logprob: -15.803714752197266
    9. ''y' → logprob: -15.928714752197266
    10. '<|end|>' → logprob: -16.178714752197266

Token 34: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31981411576271057
    2. ')' → logprob: -1.8198140859603882
    3. '):' → logprob: -2.1948142051696777
    4. ' ):' → logprob: -9.44481372833252
    5. ',' → logprob: -9.56981372833252
    6. ' )' → logprob: -9.56981372833252
    7. ')->' → logprob: -10.81981372833252
    8. '):
' → logprob: -11.19481372833252
    9. ':)' → logprob: -12.44481372833252
    10. '   ' → logprob: -12.69481372833252

Token 35: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.2813222408294678
    2. 'float' → logprob: -1.4063222408294678
    3. ')' → logprob: -9.031322479248047
    4. ' ' → logprob: -10.531322479248047
    5. ' )' → logprob: -12.031322479248047
    6. '	float' → logprob: -12.031322479248047
    7. '<float' → logprob: -13.281322479248047
    8. '=float' → logprob: -13.281322479248047
    9. ',float' → logprob: -13.406322479248047
    10. 'flo' → logprob: -13.531322479248047

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015431294741574675
    2. '):' → logprob: -9.000154495239258
    3. ' )' → logprob: -10.500154495239258
    4. ')->' → logprob: -13.250154495239258
    5. ',' → logprob: -14.500154495239258
    6. '')' → logprob: -15.000154495239258
    7. '`)' → logprob: -15.500154495239258
    8. '   ' → logprob: -15.625154495239258
    9. ',)' → logprob: -16.500154495239258
    10. ' ):' → logprob: -16.750154495239258

Token 37: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.4943253993988037
    2. '->' → logprob: -1.3693253993988037
    3. ')' → logprob: -2.1193253993988037
    4. ')->' → logprob: -4.244325637817383
    5. ':' → logprob: -7.119325637817383
    6. ' )->' → logprob: -8.619325637817383
    7. '   ' → logprob: -8.744325637817383
    8. ' ' → logprob: -9.494325637817383
    9. ' )' → logprob: -10.369325637817383
    10. '  ' → logprob: -11.869325637817383

Token 38: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.03804401680827141
    2. ' bool' → logprob: -3.288043975830078
    3. ' ' → logprob: -13.413043975830078
    4. '	bool' → logprob: -15.038043975830078
    5. ' ' → logprob: -15.288043975830078
    6. 'int' → logprob: -15.913043975830078
    7. '  ' → logprob: -16.038043975830078
    8. '<bool' → logprob: -16.163043975830078
    9. 'float' → logprob: -16.413043975830078
    10. '   ' → logprob: -16.538043975830078

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1875571544806007e-05
    2. ' :' → logprob: -12.250011444091797
    3. ':return' → logprob: -12.750011444091797
    4. '):' → logprob: -13.125011444091797
    5. ':
' → logprob: -14.250011444091797
    6. ':**' → logprob: -14.500011444091797
    7. '->' → logprob: -15.250011444091797
    8. '   ' → logprob: -16.000011444091797
    9. ':def' → logprob: -16.000011444091797
    10. '():' → logprob: -16.250011444091797

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001632570754736662
    2. ':' → logprob: -6.6266326904296875
    3. ' return' → logprob: -8.376632690429688
    4. '    ' → logprob: -10.751632690429688
    5. ' ' → logprob: -11.626632690429688
    6. ' :' → logprob: -11.626632690429688
    7. ':return' → logprob: -11.751632690429688
    8. ')' → logprob: -12.001632690429688
    9. '   ' → logprob: -12.501632690429688
    10. '  ' → logprob: -12.626632690429688

Token 41: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7065725326538086
    2. '   ' → logprob: -1.2065725326538086
    3. ' return' → logprob: -2.2065725326538086
    4. 'abs' → logprob: -2.4565725326538086
    5. ' abs' → logprob: -4.456572532653809
    6. '	return' → logprob: -11.206572532653809
    7. '    ' → logprob: -11.831572532653809
    8. '(abs' → logprob: -12.206572532653809
    9. ' ' → logprob: -12.456572532653809
    10. '  ' → logprob: -12.956572532653809

Token 42: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.2519317865371704
    2. 'abs' → logprob: -1.5019317865371704
    3. '(abs' → logprob: -13.251932144165039
    4. ' ' → logprob: -14.251932144165039
    5. '   ' → logprob: -15.501932144165039
    6. 'fabs' → logprob: -17.00193214416504
    7. ' fabs' → logprob: -17.62693214416504
    8. '.abs' → logprob: -17.87693214416504
    9. ' ' → logprob: -18.50193214416504
    10. '_abs' → logprob: -18.62693214416504

Token 43: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0788901224732399
    2. '(' → logprob: -2.578890085220337
    3. '(
' → logprob: -15.203889846801758
    4. 'x' → logprob: -16.078889846801758
    5. ' (' → logprob: -17.203889846801758
    6. '((' → logprob: -17.953889846801758
    7. ')' → logprob: -18.203889846801758
    8. '(

' → logprob: -18.453889846801758
    9. ' ' → logprob: -18.703889846801758
    10. '(s' → logprob: -19.203889846801758

Token 44: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3133006691932678
    2. ' -' → logprob: -1.313300609588623
    3. ' ' → logprob: -10.688301086425781
    4. '-x' → logprob: -11.813301086425781
    5. '   ' → logprob: -12.063301086425781
    6. '  ' → logprob: -14.188301086425781
    7. '-y' → logprob: -14.438301086425781
    8. '(x' → logprob: -15.063301086425781
    9. ' ' → logprob: -15.438301086425781
    10. ')' → logprob: -15.688301086425781

Token 45: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011048882268369198
    2. ' y' → logprob: -4.511048793792725
    3. ' ' → logprob: -15.011049270629883
    4. '   ' → logprob: -15.386049270629883
    5. '	y' → logprob: -15.511049270629883
    6. ')' → logprob: -16.511049270629883
    7. ')y' → logprob: -16.636049270629883
    8. '    ' → logprob: -17.636049270629883
    9. '  ' → logprob: -17.761049270629883
    10. '<|end|>' → logprob: -18.261049270629883

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9027791495318525e-05
    2. ')<' → logprob: -11.250019073486328
    3. ')<=' → logprob: -12.750019073486328
    4. ' )' → logprob: -12.750019073486328
    5. '<' → logprob: -16.625019073486328
    6. '）' → logprob: -17.875019073486328
    7. ' <' → logprob: -19.125019073486328
    8. ' ' → logprob: -19.375019073486328
    9. '))' → logprob: -19.500019073486328
    10. '0' → logprob: -19.625019073486328

Token 47: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10816020518541336
    2. ' <' → logprob: -2.3581602573394775
    3. '<=' → logprob: -5.108160018920898
    4. ' <=' → logprob: -6.858160018920898
    5. ')' → logprob: -7.858160018920898
    6. 'EPS' → logprob: -8.483160018920898
    7. '<E' → logprob: -8.858160018920898
    8. ' ' → logprob: -10.483160018920898
    9. ')<' → logprob: -10.983160018920898
    10. '0' → logprob: -11.983160018920898

Token 48: ' EPS' (ID: 66979)
  Prédit: ' EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EPS' → logprob: -0.20141372084617615
    2. 'EPS' → logprob: -1.7014137506484985
    3. 'EP' → logprob: -15.451414108276367
    4. ' ' → logprob: -16.701414108276367
    5. ' ' → logprob: -16.826414108276367
    6. ' EP' → logprob: -16.951414108276367
    7. 'ES' → logprob: -16.951414108276367
    8. 'EOS' → logprob: -17.826414108276367
    9. 'ESP' → logprob: -18.576414108276367
    10. '   ' → logprob: -18.576414108276367

Token 49: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4781824052333832
    2. '\n' → logprob: -1.4781824350357056
    3. '<|end|>' → logprob: -1.9781824350357056
    4. '

' → logprob: -5.478182315826416
    5. 'newline' → logprob: -5.728182315826416
    6. '```' → logprob: -6.353182315826416
    7. '<|end|>' → logprob: -6.728182315826416
    8. '\' → logprob: -6.853182315826416
    9. '' → logprob: -7.478182315826416
    10. ' ' → logprob: -8.353182792663574

Token 50: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24088916182518005
    2. '
' → logprob: -1.9908891916275024
    3. '

' → logprob: -2.990889072418213
    4. 'class' → logprob: -3.615889072418213
    5. '```' → logprob: -8.865889549255371
    6. '<|end|>' → logprob: -9.865889549255371
    7. '
' → logprob: -10.365889549255371
    8. '\n' → logprob: -10.365889549255371
    9. ' class' → logprob: -11.115889549255371
    10. '\' → logprob: -11.365889549255371

Token 51: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.07786858081817627
    2. ' Vector' → logprob: -2.7028684616088867
    3. ' Circle' → logprob: -5.077868461608887
    4. ' Vec' → logprob: -6.702868461608887
    5. ' Triangle' → logprob: -8.952868461608887
    6. ' ' → logprob: -9.577868461608887
    7. ' Geometry' → logprob: -9.952868461608887
    8. ' Rectangle' → logprob: -10.202868461608887
    9. ' Space' → logprob: -10.577868461608887
    10. ' Sphere' → logprob: -10.702868461608887

Token 52: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010402000043541193
    2. '<|end|>' → logprob: -10.000103950500488
    3. '():' → logprob: -10.500103950500488
    4. ':
' → logprob: -11.375103950500488
    5. '):' → logprob: -11.875103950500488
    6. ':**' → logprob: -12.500103950500488
    7. '(' → logprob: -12.750103950500488
    8. ' :' → logprob: -13.000103950500488
    9. '(object' → logprob: -13.750103950500488
    10. '>:' → logprob: -14.375103950500488

Token 53: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2746347486972809
    2. '<|end|>' → logprob: -1.6496347188949585
    3. '   ' → logprob: -3.774634838104248
    4. ' ' → logprob: -4.774634838104248
    5. '(' → logprob: -5.649634838104248
    6. ':
' → logprob: -5.899634838104248
    7. '```' → logprob: -5.899634838104248
    8. '  
' → logprob: -6.649634838104248
    9. '    
' → logprob: -6.649634838104248
    10. ' :' → logprob: -6.774634838104248

Token 54: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2538696527481079
    2. ' def' → logprob: -1.503869652748108
    3. '   ' → logprob: -6.253869533538818
    4. '__' → logprob: -12.003870010375977
    5. ' __' → logprob: -12.003870010375977
    6. '	def' → logprob: -13.628870010375977
    7. ' ' → logprob: -14.128870010375977
    8. '    
' → logprob: -14.253870010375977
    9. '    ' → logprob: -14.878870010375977
    10. '```' → logprob: -15.503870010375977

Token 55: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6336072683334351
    2. ' init' → logprob: -0.8836072683334351
    3. 'init' → logprob: -3.3836073875427246
    4. '_init' → logprob: -4.258607387542725
    5. ' ' → logprob: -5.133607387542725
    6. '__' → logprob: -6.758607387542725
    7. ' def' → logprob: -7.758607387542725
    8. ' ' → logprob: -7.758607387542725
    9. ' _' → logprob: -11.258606910705566
    10. '_' → logprob: -11.633606910705566

Token 56: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.625
    3. '_init' → logprob: -19.25
    4. 'inite' → logprob: -20.25
    5. 'eq' → logprob: -20.25
    6. 'ini' → logprob: -21.0
    7. '	init' → logprob: -22.875
    8. 'int' → logprob: -23.0
    9. '__' → logprob: -23.25
    10. '```' → logprob: -23.375

Token 57: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01698658987879753
    2. '(self' → logprob: -4.51698637008667
    3. '__' → logprob: -5.76698637008667
    4. '<|end|>' → logprob: -7.01698637008667
    5. '__(
' → logprob: -7.26698637008667
    6. '(' → logprob: -7.26698637008667
    7. '__((' → logprob: -8.391986846923828
    8. 'self' → logprob: -9.266986846923828
    9. '__(*' → logprob: -9.891986846923828
    10. ' (' → logprob: -10.016986846923828

Token 58: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.2524021157296374e-05
    2. ' self' → logprob: -9.875052452087402
    3. '(self' → logprob: -14.875052452087402
    4. '	self' → logprob: -15.750052452087402
    5. ')' → logprob: -16.12505340576172
    6. '   ' → logprob: -16.25005340576172
    7. '0' → logprob: -16.50005340576172
    8. ',self' → logprob: -17.00005340576172
    9. '       ' → logprob: -18.00005340576172
    10. ' ' → logprob: -18.12505340576172

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02154715172946453
    2. ' ,' → logprob: -3.8965470790863037
    3. '<|end|>' → logprob: -7.271547317504883
    4. 'self' → logprob: -9.021547317504883
    5. ')' → logprob: -9.146547317504883
    6. ',self' → logprob: -10.896547317504883
    7. '<|end|>' → logprob: -11.146547317504883
    8. ' self' → logprob: -11.146547317504883
    9. '(self' → logprob: -11.646547317504883
    10. ' (' → logprob: -12.021547317504883

Token 60: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.40876543521881104
    2. 'self' → logprob: -1.158765435218811
    3. ' self' → logprob: -4.4087653160095215
    4. ' x' → logprob: -4.6587653160095215
    5. '   ' → logprob: -12.65876579284668
    6. '	x' → logprob: -13.65876579284668
    7. '	self' → logprob: -13.78376579284668
    8. ')x' → logprob: -14.03376579284668
    9. ' ' → logprob: -14.28376579284668
    10. ')' → logprob: -14.53376579284668

Token 61: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014035627245903015
    2. ':' → logprob: -4.514035701751709
    3. ' ,' → logprob: -6.764035701751709
    4. '=' → logprob: -7.139035701751709
    5. ')' → logprob: -7.389035701751709
    6. '<|end|>' → logprob: -8.38903522491455
    7. '<|end|>' → logprob: -9.38903522491455
    8. ',x' → logprob: -10.26403522491455
    9. ':int' → logprob: -11.01403522491455
    10. ' )' → logprob: -11.38903522491455

Token 62: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.47418609261512756
    2. 'float' → logprob: -0.9741860628128052
    3. '=float' → logprob: -9.974185943603516
    4. 'int' → logprob: -11.349185943603516
    5. ')' → logprob: -11.599185943603516
    6. ' )' → logprob: -11.724185943603516
    7. '0' → logprob: -11.849185943603516
    8. '(float' → logprob: -12.224185943603516
    9. ' ' → logprob: -12.349185943603516
    10. ' int' → logprob: -12.349185943603516

Token 63: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006795499939471483
    2. ' ,' → logprob: -7.6256794929504395
    3. '<|end|>' → logprob: -9.000679969787598
    4. ',x' → logprob: -10.625679969787598
    5. ')' → logprob: -10.875679969787598
    6. '<|end|>' → logprob: -11.375679969787598
    7. '   ' → logprob: -12.375679969787598
    8. ',int' → logprob: -13.625679969787598
    9. ',p' → logprob: -13.750679969787598
    10. ':' → logprob: -14.000679969787598

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. ')' → logprob: -17.750911712646484
    4. '   ' → logprob: -18.250911712646484
    5. '=' → logprob: -18.625911712646484
    6. ' )' → logprob: -19.750911712646484
    7. 'None' → logprob: -20.000911712646484
    8. ' ' → logprob: -20.125911712646484
    9. '  ' → logprob: -20.250911712646484
    10. '۰' → logprob: -20.500911712646484

Token 65: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0028487443923950195
    2. ',' → logprob: -6.2528486251831055
    3. '.,' → logprob: -7.0028486251831055
    4. ')' → logprob: -12.252848625183105
    5. '.)' → logprob: -13.002848625183105
    6. '.
' → logprob: -13.877848625183105
    7. '.

' → logprob: -14.002848625183105
    8. ' ,' → logprob: -14.252848625183105
    9. '.:' → logprob: -15.502848625183105
    10. '.):' → logprob: -15.877848625183105

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '5' → logprob: -19.125
    4. ')' → logprob: -19.625
    5. '```' → logprob: -19.875
    6. ',' → logprob: -20.25
    7. '   ' → logprob: -21.0
    8. 'float' → logprob: -21.0
    9. '  ' → logprob: -21.5
    10. 'x' → logprob: -21.5

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006772888009436429
    2. ' ,' → logprob: -7.375677108764648
    3. ',x' → logprob: -10.375677108764648
    4. ')' → logprob: -11.875677108764648
    5. '<|end|>' → logprob: -12.250677108764648
    6. ',y' → logprob: -13.625677108764648
    7. '):' → logprob: -13.625677108764648
    8. ' ' → logprob: -13.750677108764648
    9. ',p' → logprob: -14.125677108764648
    10. ',float' → logprob: -14.375677108764648

Token 68: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.575954020023346
    2. 'y' → logprob: -0.825954020023346
    3. ' ' → logprob: -11.82595443725586
    4. '<|end|>' → logprob: -12.45095443725586
    5. '	y' → logprob: -12.70095443725586
    6. '<|end|>' → logprob: -16.32595443725586
    7. ',y' → logprob: -16.57595443725586
    8. ' ' → logprob: -16.82595443725586
    9. 'x' → logprob: -16.82595443725586
    10. ')y' → logprob: -17.20095443725586

Token 69: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.040957316756248474
    2. '<|end|>' → logprob: -3.79095721244812
    3. ')' → logprob: -4.290957450866699
    4. '):' → logprob: -5.915957450866699
    5. '=' → logprob: -7.415957450866699
    6. '<|end|>' → logprob: -7.665957450866699
    7. ' :' → logprob: -10.2909574508667
    8. '=float' → logprob: -11.0409574508667
    9. '=None' → logprob: -11.4159574508667
    10. ' ' → logprob: -12.2909574508667

Token 70: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.45497918128967285
    2. '0' → logprob: -1.2049791812896729
    3. ' float' → logprob: -2.829979181289673
    4. ' ' → logprob: -5.079978942871094
    5. '=float' → logprob: -8.329978942871094
    6. '_float' → logprob: -9.079978942871094
    7. '<|end|>' → logprob: -9.079978942871094
    8. '<float' → logprob: -9.829978942871094
    9. '	float' → logprob: -11.079978942871094
    10. ')' → logprob: -11.079978942871094

Token 71: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6340145468711853
    2. ':' → logprob: -0.7590145468711853
    3. '=float' → logprob: -7.00901460647583
    4. ')' → logprob: -8.009014129638672
    5. '):' → logprob: -8.884014129638672
    6. ' =' → logprob: -11.134014129638672
    7. '<|end|>' → logprob: -11.884014129638672
    8. ' :' → logprob: -12.134014129638672
    9. '=None' → logprob: -12.384014129638672
    10. '<|end|>' → logprob: -13.134014129638672

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. ')' → logprob: -16.500015258789062
    4. '<|end|>' → logprob: -18.500015258789062
    5. '```' → logprob: -19.500015258789062
    6. '۰' → logprob: -19.625015258789062
    7. '   ' → logprob: -19.750015258789062
    8. 'float' → logprob: -19.875015258789062
    9. '  ' → logprob: -20.250015258789062
    10. '<|end|>' → logprob: -20.250015258789062

Token 73: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.054500666621607e-06
    2. ')' → logprob: -12.75000286102295
    3. '.)' → logprob: -16.125003814697266
    4. ' .' → logprob: -18.625003814697266
    5. '0' → logprob: -19.500003814697266
    6. '.​' → logprob: -20.250003814697266
    7. '4' → logprob: -20.375003814697266
    8. ',' → logprob: -20.375003814697266
    9. ' ' → logprob: -20.750003814697266
    10. '.
' → logprob: -20.750003814697266

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -13.250003814697266
    3. ')' → logprob: -14.000003814697266
    4. '5' → logprob: -14.250003814697266
    5. '1' → logprob: -15.375003814697266
    6. '6' → logprob: -16.500003814697266
    7. '   ' → logprob: -17.500003814697266
    8. '```' → logprob: -18.000003814697266
    9. '3' → logprob: -18.500003814697266
    10. '  ' → logprob: -19.250003814697266

Token 75: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00595072191208601
    2. ')' → logprob: -5.130950927734375
    3. ':' → logprob: -11.630950927734375
    4. ' ):' → logprob: -12.005950927734375
    5. '   ' → logprob: -12.755950927734375
    6. '):
' → logprob: -12.755950927734375
    7. ',' → logprob: -14.255950927734375
    8. ' ' → logprob: -15.630950927734375
    9. '),' → logprob: -16.255950927734375
    10. ''):' → logprob: -16.380950927734375

Token 76: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003207538742572069
    2. '):' → logprob: -5.753207683563232
    3. ' :' → logprob: -11.128207206726074
    4. ':**' → logprob: -12.378207206726074
    5. ',' → logprob: -13.003207206726074
    6. ':def' → logprob: -13.128207206726074
    7. '():' → logprob: -13.503207206726074
    8. ':return' → logprob: -14.003207206726074
    9. ')' → logprob: -14.128207206726074
    10. '>:' → logprob: -14.503207206726074

Token 77: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5759410262107849
    2. ' None' → logprob: -0.8259410262107849
    3. ' ' → logprob: -14.20094108581543
    4. ')' → logprob: -14.70094108581543
    5. 'none' → logprob: -15.95094108581543
    6. 'Point' → logprob: -16.20094108581543
    7. '_None' → logprob: -16.20094108581543
    8. ' none' → logprob: -16.82594108581543
    9. ' Point' → logprob: -17.20094108581543
    10. '=None' → logprob: -17.32594108581543

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017886889690998942
    2. '):' → logprob: -8.750179290771484
    3. ' :' → logprob: -11.000179290771484
    4. ':
' → logprob: -13.375179290771484
    5. ':**' → logprob: -14.750179290771484
    6. '<|end|>' → logprob: -14.750179290771484
    7. '.' → logprob: -15.250179290771484
    8. ',' → logprob: -15.500179290771484
    9. ':return' → logprob: -15.625179290771484
    10. ':def' → logprob: -15.875179290771484

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023450881708413363
    2. '   ' → logprob: -6.502345085144043
    3. '<|end|>' → logprob: -8.252345085144043
    4. ' ' → logprob: -8.377345085144043
    5. '    ' → logprob: -9.002345085144043
    6. 'x' → logprob: -9.252345085144043
    7. 'self' → logprob: -10.127345085144043
    8. '      ' → logprob: -10.877345085144043
    9. '     ' → logprob: -11.377345085144043
    10. ')' → logprob: -11.627345085144043

Token 80: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.020093560218811035
    2. '       ' → logprob: -4.3950934410095215
    3. ' self' → logprob: -4.8950934410095215
    4. '   ' → logprob: -10.27009391784668
    5. 's' → logprob: -11.39509391784668
    6. '	self' → logprob: -11.64509391784668
    7. ' ' → logprob: -12.14509391784668
    8. '        ' → logprob: -12.27009391784668
    9. '    ' → logprob: -13.02009391784668
    10. ' ' → logprob: -13.64509391784668

Token 81: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002205451251938939
    2. '.x' → logprob: -6.1272053718566895
    3. ' .' → logprob: -10.877205848693848
    4. '._' → logprob: -15.502205848693848
    5. '.user' → logprob: -15.877205848693848
    6. '.space' → logprob: -16.00220489501953
    7. '.)' → logprob: -16.12720489501953
    8. '.py' → logprob: -16.37720489501953
    9. '.xyz' → logprob: -16.62720489501953
    10. ' ' → logprob: -16.75220489501953

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07182729989290237
    2. '=' → logprob: -2.6968274116516113
    3. ',' → logprob: -6.946827411651611
    4. '<|end|>' → logprob: -7.571827411651611
    5. ' ' → logprob: -8.696826934814453
    6. ' ,' → logprob: -8.821826934814453
    7. '<|end|>' → logprob: -10.196826934814453
    8. ')' → logprob: -11.196826934814453
    9. ' =)' → logprob: -11.196826934814453
    10. ' +=' → logprob: -12.071826934814453

Token 83: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38687121868133545
    2. ' x' → logprob: -1.1368712186813354
    3. '0' → logprob: -16.136871337890625
    4. '	x' → logprob: -16.386871337890625
    5. ' ' → logprob: -18.886871337890625
    6. ')x' → logprob: -19.761871337890625
    7. '(x' → logprob: -20.386871337890625
    8. ' ' → logprob: -20.511871337890625
    9. '$x' → logprob: -20.886871337890625
    10. '_x' → logprob: -21.511871337890625

Token 84: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6046783328056335
    2. '       ' → logprob: -0.8546783328056335
    3. ' self' → logprob: -3.6046783924102783
    4. '   ' → logprob: -7.729678153991699
    5. '	self' → logprob: -7.729678153991699
    6. '
' → logprob: -9.1046781539917
    7. ' ' → logprob: -9.6046781539917
    8. '        ' → logprob: -11.1046781539917
    9. '<|end|>' → logprob: -11.4796781539917
    10. '      ' → logprob: -11.6046781539917

Token 87: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0029016395565122366
    2. '<|end|>' → logprob: -6.002901554107666
    3. '<|end|>' → logprob: -8.377902030944824
    4. ' .' → logprob: -9.752902030944824
    5. ' ' → logprob: -9.877902030944824
    6. '.x' → logprob: -10.127902030944824
    7. '.y' → logprob: -10.627902030944824
    8. '.py' → logprob: -11.877902030944824
    9. ')' → logprob: -12.877902030944824
    10. '.space' → logprob: -13.252902030944824

Token 88: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1269282102584839
    2. ' y' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.751928329467773
    4. '	y' → logprob: -17.001928329467773
    5. '0' → logprob: -17.751928329467773
    6. ' ' → logprob: -18.876928329467773
    7. ')y' → logprob: -19.376928329467773
    8. '<|end|>' → logprob: -19.501928329467773
    9. 'x' → logprob: -19.876928329467773
    10. '‘y' → logprob: -20.626928329467773

Token 90: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9000536203384399
    2. '    
' → logprob: -1.52505362033844
    3. '   ' → logprob: -1.77505362033844
    4. '<|end|>' → logprob: -1.90005362033844
    5. ' 
' → logprob: -3.6500535011291504
    6. '  
' → logprob: -4.40005350112915
    7. ' ' → logprob: -4.77505350112915
    8. '   
' → logprob: -6.15005350112915
    9. '<|end|>' → logprob: -6.65005350112915
    10. '' → logprob: -6.65005350112915

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1605829000473022
    2. '<|end|>' → logprob: -1.2855829000473022
    3. '
' → logprob: -1.4105829000473022
    4. '    
' → logprob: -2.035583019256592
    5. '  
' → logprob: -4.535583019256592
    6. ' 
' → logprob: -4.910583019256592
    7. ' ' → logprob: -5.035583019256592
    8. '\n' → logprob: -6.035583019256592
    9. '<|end|>' → logprob: -6.035583019256592
    10. '   
' → logprob: -6.535583019256592

Token 92: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01552546862512827
    2. '   ' → logprob: -4.7655253410339355
    3. ' def' → logprob: -5.5155253410339355
    4. '    
' → logprob: -6.1405253410339355
    5. '
' → logprob: -7.6405253410339355
    6. '@property' → logprob: -9.890525817871094
    7. ' 
' → logprob: -9.890525817871094
    8. '  
' → logprob: -10.515525817871094
    9. '        
' → logprob: -10.640525817871094
    10. '   
' → logprob: -10.890525817871094

Token 93: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01892203837633133
    2. '_' → logprob: -5.018921852111816
    3. ' _' → logprob: -6.018921852111816
    4. '<|end|>' → logprob: -6.018921852111816
    5. '  ' → logprob: -6.393921852111816
    6. ' ' → logprob: -6.643921852111816
    7. ' .' → logprob: -6.768921852111816
    8. '_space' → logprob: -7.393921852111816
    9. ' def' → logprob: -7.643921852111816
    10. ')' → logprob: -8.393921852111816

Token 94: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -1.8312570318812504e-05
    2. 'add' → logprob: -11.875018119812012
    3. 'lt' → logprob: -12.000018119812012
    4. 'repr' → logprob: -12.875018119812012
    5. 'init' → logprob: -13.250018119812012
    6. 'str' → logprob: -15.125018119812012
    7. 'e' → logprob: -15.375018119812012
    8. 'sub' → logprob: -16.250019073486328
    9. 'le' → logprob: -16.500019073486328
    10. ' eq' → logprob: -17.125019073486328

Token 95: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.435859739780426
    2. '__(' → logprob: -1.0608596801757812
    3. '__('' → logprob: -5.685859680175781
    4. '__(
' → logprob: -6.435859680175781
    5. '(' → logprob: -6.685859680175781
    6. '_' → logprob: -7.560859680175781
    7. '__("' → logprob: -8.810859680175781
    8. '__((' → logprob: -9.310859680175781
    9. '___' → logprob: -9.685859680175781
    10. '__(*' → logprob: -11.060859680175781

Token 96: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015229015843942761
    2. ')' → logprob: -8.875152587890625
    3. ' self' → logprob: -11.375152587890625
    4. ' ' → logprob: -14.625152587890625
    5. '(self' → logprob: -15.750152587890625
    6. '   ' → logprob: -16.625152587890625
    7. ' )' → logprob: -17.125152587890625
    8. 's' → logprob: -17.125152587890625
    9. 'Self' → logprob: -17.375152587890625
    10. '<|end|>' → logprob: -17.500152587890625

Token 97: ')' (ID: 8)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10802410542964935
    2. '__)' → logprob: -2.3580241203308105
    3. '__:' → logprob: -5.9830241203308105
    4. ')' → logprob: -6.1080241203308105
    5. ')__' → logprob: -6.8580241203308105
    6. '):' → logprob: -7.6080241203308105
    7. '__,' → logprob: -7.9830241203308105
    8. '__('' → logprob: -8.358023643493652
    9. '_' → logprob: -8.608023643493652
    10. '__(' → logprob: -8.858023643493652

Token 98: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39122843742370605
    2. '(self' → logprob: -1.891228437423706
    3. '(' → logprob: -2.766228437423706
    4. 'self' → logprob: -3.266228437423706
    5. ' ->' → logprob: -3.391228437423706
    6. ')' → logprob: -4.516228675842285
    7. '->' → logprob: -4.641228675842285
    8. 's' → logprob: -5.641228675842285
    9. '       ' → logprob: -5.891228675842285
    10. ':return' → logprob: -6.016228675842285

Token 99: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.2519535422325134
    2. 'str' → logprob: -1.5019536018371582
    3. ' ' → logprob: -11.126953125
    4. '[str' → logprob: -12.626953125
    5. 'stri' → logprob: -13.001953125
    6. '	str' → logprob: -13.626953125
    7. '  ' → logprob: -14.126953125
    8. ')' → logprob: -14.251953125
    9. '=str' → logprob: -14.876953125
    10. ':str' → logprob: -15.126953125

Token 100: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4789801836013794
    2. ':' → logprob: -1.6039801836013794
    3. '(' → logprob: -1.7289801836013794
    4. '(
' → logprob: -6.60398006439209
    5. ':
' → logprob: -8.60398006439209
    6. '       ' → logprob: -8.72898006439209
    7. 'self' → logprob: -8.85398006439209
    8. '(s' → logprob: -9.85398006439209
    9. ':self' → logprob: -10.60398006439209
    10. ')' → logprob: -10.97898006439209

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009275413467548788
    2. ' f' → logprob: -7.500927448272705
    3. 'f' → logprob: -8.250927925109863
    4. 'return' → logprob: -9.625927925109863
    5. ' return' → logprob: -10.375927925109863
    6. '   ' → logprob: -12.000927925109863
    7. ''' → logprob: -12.500927925109863
    8. '      ' → logprob: -13.125927925109863
    9. '"' → logprob: -13.625927925109863
    10. '     ' → logprob: -14.000927925109863

Token 102: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.02620267868042
    2. '       ' → logprob: -1.02620267868042
    3. 'return' (adapté à ' return') → logprob: -1.27620267868042
    4. ' return' → logprob: -6.02620267868042
    5. ' f' → logprob: -6.40120267868042
    6. '   ' → logprob: -9.276203155517578
    7. '	return' → logprob: -13.276203155517578
    8. '           ' → logprob: -13.401203155517578
    9. '     ' → logprob: -13.776203155517578
    10. '      ' → logprob: -14.651203155517578

Token 103: ' "' (ID: 392)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.018156031146645546
    2. ' f' → logprob: -4.018156051635742
    3. '   ' → logprob: -12.518156051635742
    4. '	f' → logprob: -14.143156051635742
    5. ''f' → logprob: -14.268156051635742
    6. ' ' → logprob: -14.893156051635742
    7. '"' → logprob: -15.018156051635742
    8. '(f' → logprob: -15.643156051635742
    9. 'F' → logprob: -16.643156051635742
    10. '       ' → logprob: -16.768156051635742

Token 104: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.12899811565876007
    2. 'f' → logprob: -2.128998041152954
    3. '(Point' → logprob: -6.378998279571533
    4. '"' → logprob: -8.753997802734375
    5. '(f' → logprob: -9.378997802734375
    6. '<Point' → logprob: -9.753997802734375
    7. '("' → logprob: -11.003997802734375
    8. '({' → logprob: -11.253997802734375
    9. '{"' → logprob: -11.378997802734375
    10. ' Point' → logprob: -11.628997802734375

Token 105: '({},' (ID: 45594)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.493735671043396
    2. '(f' → logprob: -0.993735671043396
    3. '(x' → logprob: -4.3687357902526855
    4. '("' → logprob: -5.2437357902526855
    5. '({' → logprob: -6.6187357902526855
    6. '(Point' → logprob: -9.743735313415527
    7. 'f' → logprob: -9.993735313415527
    8. '(self' → logprob: -11.118735313415527
    9. '("("' → logprob: -11.118735313415527
    10. '({"' → logprob: -11.493735313415527

Token 106: ' {})' (ID: 75167)
  Prédit: '{})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{})' → logprob: -0.32482242584228516
    2. 'self' → logprob: -1.8248224258422852
    3. '{}' → logprob: -2.949822425842285
    4. '{' → logprob: -3.074822425842285
    5. '{},' → logprob: -4.949822425842285
    6. '{}.' → logprob: -5.199822425842285
    7. ' {})' → logprob: -6.449822425842285
    8. '{}".' → logprob: -6.574822425842285
    9. ')' → logprob: -7.324822425842285
    10. ' self' → logprob: -7.574822425842285

Token 107: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.03629192337393761
    2. '.format' → logprob: -3.4112918376922607
    3. '.' → logprob: -6.41129207611084
    4. '(".' → logprob: -7.78629207611084
    5. 'format' → logprob: -8.66129207611084
    6. '(format' → logprob: -9.53629207611084
    7. '{}".' → logprob: -9.78629207611084
    8. '.f' → logprob: -9.78629207611084
    9. ')' → logprob: -10.03629207611084
    10. '"' → logprob: -10.03629207611084

Token 108: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -4.60414821645827e-06
    2. ' format' → logprob: -12.375004768371582
    3. '	format' → logprob: -15.375004768371582
    4. 'form' → logprob: -16.750003814697266
    5. '(format' → logprob: -16.750003814697266
    6. '__' → logprob: -19.125003814697266
    7. 'join' → logprob: -19.250003814697266
    8. ' ' → logprob: -19.375003814697266
    9. '=format' → logprob: -19.750003814697266
    10. 'forma' → logprob: -19.875003814697266

Token 109: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.165027217415627e-05
    2. '(' → logprob: -11.000021934509277
    3. 'self' → logprob: -12.250021934509277
    4. '(
' → logprob: -17.62502098083496
    5. '(s' → logprob: -17.62502098083496
    6. ',self' → logprob: -18.25002098083496
    7. ' self' → logprob: -18.37502098083496
    8. ' (' → logprob: -19.25002098083496
    9. '[self' → logprob: -19.50002098083496
    10. '=self' → logprob: -19.50002098083496

Token 110: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.011061854660511017
    2. '.' → logprob: -4.511061668395996
    3. ' .' → logprob: -12.011061668395996
    4. '<|end|>' → logprob: -13.136061668395996
    5. ',' → logprob: -13.886061668395996
    6. '.xhtml' → logprob: -14.386061668395996
    7. 'x' → logprob: -14.511061668395996
    8. '.user' → logprob: -14.636061668395996
    9. '.xtext' → logprob: -14.886061668395996
    10. ').' → logprob: -15.136061668395996

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.537868779967539e-06
    2. ' ,' → logprob: -11.875008583068848
    3. ',
' → logprob: -14.125008583068848
    4. ',self' → logprob: -14.500008583068848
    5. ',y' → logprob: -15.875008583068848
    6. ',

' → logprob: -17.37500762939453
    7. ',x' → logprob: -17.75000762939453
    8. '<|end|>' → logprob: -17.87500762939453
    9. ',p' → logprob: -18.25000762939453
    10. '‌,' → logprob: -18.62500762939453

Token 112: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4740869104862213
    2. ' self' → logprob: -0.9740868806838989
    3. '	self' → logprob: -12.22408676147461
    4. '<|end|>' → logprob: -13.72408676147461
    5. ' ' → logprob: -13.97408676147461
    6. '    ' → logprob: -14.09908676147461
    7. ' ' → logprob: -14.34908676147461
    8. '(self' → logprob: -15.09908676147461
    9. '_self' → logprob: -15.22408676147461
    10. '$self' → logprob: -15.84908676147461

Token 113: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0033498897682875395
    2. '.y' → logprob: -5.753349781036377
    3. '.x' → logprob: -8.753350257873535
    4. ').' → logprob: -12.503350257873535
    5. ' .' → logprob: -12.753350257873535
    6. '.user' → logprob: -13.378350257873535
    7. ')' → logprob: -13.378350257873535
    8. '<|end|>' → logprob: -13.503350257873535
    9. '<|end|>' → logprob: -14.628350257873535
    10. '.)' → logprob: -14.753350257873535

Token 114: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')return' → logprob: -16.500001907348633
    4. ')
' → logprob: -16.500001907348633
    5. '))' → logprob: -16.875001907348633
    6. '<|end|>' → logprob: -17.250001907348633
    7. ')}' → logprob: -17.750001907348633
    8. ')#' → logprob: -18.250001907348633
    9. '),' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.375001907348633

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5830187797546387
    2. '
' → logprob: -1.2080187797546387
    3. '    
' → logprob: -2.3330187797546387
    4. '<|end|>' → logprob: -3.3330187797546387
    5. '  
' → logprob: -5.958018779754639
    6. ' 
' → logprob: -6.083018779754639
    7. ' ' → logprob: -6.833018779754639
    8. '   
' → logprob: -7.458018779754639
    9. '

' → logprob: -7.458018779754639
    10. '<|end|>' → logprob: -7.708018779754639

Token 116: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3113133907318115
    2. '   ' → logprob: -1.4363133907318115
    3. '
' → logprob: -4.561313629150391
    4. '    
' → logprob: -4.811313629150391
    5. ' def' → logprob: -5.061313629150391
    6. '<|end|>' → logprob: -6.561313629150391
    7. ' ' → logprob: -7.061313629150391
    8. '  
' → logprob: -7.436313629150391
    9. '	def' → logprob: -7.561313629150391
    10. ' 
' → logprob: -7.561313629150391

Token 117: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42511796951293945
    2. ' def' → logprob: -1.5501179695129395
    3. ' __' → logprob: -2.3001179695129395
    4. ' distance' → logprob: -3.9251179695129395
    5. ' ' → logprob: -5.8001179695129395
    6. ' _' → logprob: -5.9251179695129395
    7. ' add' → logprob: -6.1751179695129395
    8. ' x' → logprob: -6.5501179695129395
    9. 'distance' → logprob: -6.9251179695129395
    10. ' space' → logprob: -7.1751179695129395

Token 118: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0007619839743711054
    2. 'add' → logprob: -8.125761985778809
    3. 'lt' → logprob: -8.250761985778809
    4. 'sub' → logprob: -8.500761985778809
    5. ' eq' → logprob: -14.250761985778809
    6. 'mul' → logprob: -15.500761985778809
    7. 'le' → logprob: -15.625761985778809
    8. 'init' → logprob: -16.125761032104492
    9. 'gt' → logprob: -16.250761032104492
    10. ' ' → logprob: -16.500761032104492

Token 119: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0015371197368949652
    2. '__(' → logprob: -6.501537322998047
    3. '___' → logprob: -10.876537322998047
    4. '__('' → logprob: -11.751537322998047
    5. '__((' → logprob: -13.001537322998047
    6. '__.__' → logprob: -13.626537322998047
    7. '_' → logprob: -13.626537322998047
    8. '__(
' → logprob: -13.876537322998047
    9. '__("' → logprob: -14.251537322998047
    10. '____' → logprob: -14.501537322998047

Token 120: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026872646412812173
    2. 'other' → logprob: -8.250268936157227
    3. ' self' → logprob: -12.125268936157227
    4. '<|end|>' → logprob: -14.125268936157227
    5. '
' → logprob: -14.250268936157227
    6. ')' → logprob: -14.750268936157227
    7. '(self' → logprob: -15.375268936157227
    8. ' ' → logprob: -16.750268936157227
    9. ' other' → logprob: -16.750268936157227
    10. '0' → logprob: -17.125268936157227

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24416203796863556
    2. ')' → logprob: -2.744162082672119
    3. '__(' → logprob: -2.994162082672119
    4. '<|end|>' → logprob: -3.244162082672119
    5. '(self' → logprob: -3.494162082672119
    6. 'self' → logprob: -3.994162082672119
    7. '(' → logprob: -5.869162082672119
    8. ' ' → logprob: -5.869162082672119
    9. '__' → logprob: -6.119162082672119
    10. ' self' → logprob: -6.494162082672119

Token 122: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.4741014838218689
    2. 'other' → logprob: -0.9741014838218689
    3. ' o' → logprob: -10.974101066589355
    4. 'o' → logprob: -12.599101066589355
    5. ' oth' → logprob: -13.724101066589355
    6. 'oth' → logprob: -13.974101066589355
    7. ' ' → logprob: -14.349101066589355
    8. 'Other' → logprob: -14.724101066589355
    9. 'othe' → logprob: -15.599101066589355
    10. ')' → logprob: -15.849101066589355

Token 123: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25838613510131836
    2. '):' → logprob: -1.6333861351013184
    3. ':' → logprob: -3.5083861351013184
    4. ' )' → logprob: -6.508386135101318
    5. ' ):' → logprob: -7.008386135101318
    6. ' :' → logprob: -9.633386611938477
    7. ' ' → logprob: -11.258386611938477
    8. '):
' → logprob: -12.383386611938477
    9. '   ' → logprob: -12.508386611938477
    10. ',' → logprob: -12.758386611938477

Token 124: ' object' (ID: 2817)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5450061559677124
    2. ' )' → logprob: -0.9200061559677124
    3. ' ' → logprob: -4.920006275177002
    4. ' Point' → logprob: -4.920006275177002
    5. 'Point' → logprob: -5.670006275177002
    6. ' ):' → logprob: -6.670006275177002
    7. '):' → logprob: -7.045006275177002
    8. '  ' → logprob: -7.920006275177002
    9. ' '' → logprob: -7.920006275177002
    10. ' object' → logprob: -8.920005798339844

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.843177233240567e-05
    2. '):' → logprob: -11.500018119812012
    3. ' )' → logprob: -11.750018119812012
    4. ')->' → logprob: -15.375018119812012
    5. ':' → logprob: -15.875018119812012
    6. '   ' → logprob: -18.125019073486328
    7. '):
' → logprob: -18.750019073486328
    8. '`)' → logprob: -19.500019073486328
    9. ' ' → logprob: -19.625019073486328
    10. ' ):' → logprob: -20.000019073486328

Token 126: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012529193423688412
    2. ')' → logprob: -4.762529373168945
    3. ' ->' → logprob: -6.387529373168945
    4. ')->' → logprob: -6.887529373168945
    5. '->' → logprob: -7.762529373168945
    6. '):' → logprob: -7.887529373168945
    7. ' :' → logprob: -8.387529373168945
    8. '   ' → logprob: -9.137529373168945
    9. ':return' → logprob: -10.387529373168945
    10. '       ' → logprob: -11.512529373168945

Token 127: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.3177156150341034
    2. 'bool' → logprob: -1.3177156448364258
    3. ' True' → logprob: -5.942715644836426
    4. 'True' → logprob: -6.817715644836426
    5. ' ' → logprob: -8.067715644836426
    6. '  ' → logprob: -8.192715644836426
    7. '	bool' → logprob: -10.317715644836426
    8. '<bool' → logprob: -11.067715644836426
    9. '    ' → logprob: -11.192715644836426
    10. ' ' → logprob: -11.192715644836426

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.277553620748222e-05
    2. '):' → logprob: -10.125062942504883
    3. ' :' → logprob: -11.500062942504883
    4. ':
' → logprob: -11.750062942504883
    5. ':return' → logprob: -12.750062942504883
    6. ':**' → logprob: -15.000062942504883
    7. '<|end|>' → logprob: -15.000062942504883
    8. ':def' → logprob: -15.625062942504883
    9. '>:' → logprob: -16.000062942504883
    10. ':int' → logprob: -16.000062942504883

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08763020485639572
    2. ':' → logprob: -3.587630271911621
    3. '<|end|>' → logprob: -3.587630271911621
    4. '    ' → logprob: -4.712630271911621
    5. '):' → logprob: -4.837630271911621
    6. ')' → logprob: -5.962630271911621
    7. '):
' → logprob: -5.962630271911621
    8. '   ' → logprob: -6.087630271911621
    9. ' ' → logprob: -7.212630271911621
    10. '        ' → logprob: -7.712630271911621

Token 130: ' if' (ID: 538)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.21629272401332855
    2. ' isinstance' → logprob: -2.4662926197052
    3. 'if' (adapté à ' if') → logprob: -3.3412926197052
    4. '       ' → logprob: -3.5912926197052
    5. 'not' → logprob: -3.5912926197052
    6. 'return' → logprob: -4.216292858123779
    7. '   ' → logprob: -7.091292858123779
    8. 'abs' → logprob: -7.216292858123779
    9. '           ' → logprob: -7.341292858123779
    10. ' not' → logprob: -7.466292858123779

Token 131: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03483245149254799
    2. 'not' → logprob: -3.53483247756958
    3. ' isinstance' → logprob: -5.28483247756958
    4. 'is' → logprob: -14.784832000732422
    5. '   ' → logprob: -14.909832000732422
    6. '	not' → logprob: -15.034832000732422
    7. '    ' → logprob: -16.284832000732422
    8. ' ' → logprob: -16.534832000732422
    9. '(not' → logprob: -17.284832000732422
    10. '_not' → logprob: -17.909832000732422

Token 132: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.07889111340045929
    2. 'is' → logprob: -2.5788910388946533
    3. '(is' → logprob: -13.703890800476074
    4. 'Is' → logprob: -16.70389175415039
    5. '   ' → logprob: -16.82889175415039
    6. ' hasattr' → logprob: -17.32889175415039
    7. ' is' → logprob: -17.57889175415039
    8. 'type' → logprob: -18.07889175415039
    9. 'import' → logprob: -18.82889175415039
    10. 'instance' → logprob: -18.82889175415039

Token 133: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.00020854694594163448
    2. 'other' → logprob: -8.500208854675293
    3. ' other' → logprob: -12.250208854675293
    4. 'Other' → logprob: -15.750208854675293
    5. '(' → logprob: -17.000207901000977
    6. '_other' → logprob: -17.875207901000977
    7. '.other' → logprob: -19.375207901000977
    8. 'OTHER' → logprob: -19.875207901000977
    9. '-other' → logprob: -22.000207901000977
    10. ' (' → logprob: -22.125207901000977

Token 134: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.28885704278945923
    2. '(self' → logprob: -1.7888569831848145
    3. '(' → logprob: -3.2888569831848145
    4. '(Point' → logprob: -3.9138569831848145
    5. ',' → logprob: -4.0388569831848145
    6. ')' → logprob: -5.6638569831848145
    7. 'other' → logprob: -5.7888569831848145
    8. ' (' → logprob: -6.7888569831848145
    9. ' other' → logprob: -7.7888569831848145
    10. 'self' → logprob: -8.413857460021973

Token 135: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.07889000326395035
    2. ' Point' → logprob: -2.578890085220337
    3. '	Point' → logprob: -15.078889846801758
    4. '_Point' → logprob: -17.828889846801758
    5. '(Point' → logprob: -18.328889846801758
    6. '<Point' → logprob: -18.953889846801758
    7. 'Points' → logprob: -20.703889846801758
    8. '.Point' → logprob: -21.078889846801758
    9. '_point' → logprob: -21.828889846801758
    10. ' ' → logprob: -21.953889846801758

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002815812826156616
    2. '):
' → logprob: -6.0028157234191895
    3. ')' → logprob: -8.627816200256348
    4. ' ):' → logprob: -8.752816200256348
    5. '):
' → logprob: -13.752816200256348
    6. '):

' → logprob: -14.127816200256348
    7. '   ' → logprob: -14.752816200256348
    8. ' ):
' → logprob: -15.127816200256348
    9. ':' → logprob: -15.252816200256348
    10. ' )' → logprob: -16.37781524658203

Token 137: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04313266649842262
    2. ':' → logprob: -3.918132781982422
    3. '
' → logprob: -4.168132781982422
    4. ':return' → logprob: -6.293132781982422
    5. ':
' → logprob: -6.668132781982422
    6. 'return' → logprob: -6.668132781982422
    7. ' return' → logprob: -7.168132781982422
    8. '       ' → logprob: -7.793132781982422
    9. 'True' → logprob: -8.043132781982422
    10. 'False' → logprob: -8.293132781982422

Token 138: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12017235159873962
    2. ' return' → logprob: -2.2451722621917725
    3. '           ' → logprob: -5.370172500610352
    4. '       ' → logprob: -6.745172500610352
    5. '
' → logprob: -7.370172500610352
    6. ':return' → logprob: -7.370172500610352
    7. '   ' → logprob: -9.120172500610352
    8. '    ' → logprob: -10.620172500610352
    9. 'True' → logprob: -10.745172500610352
    10. '	return' → logprob: -11.245172500610352

Token 139: ' Not' (ID: 4037)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0020640187431126833
    2. 'Not' → logprob: -6.502064228057861
    3. ' False' → logprob: -7.502064228057861
    4. ' Not' → logprob: -11.877063751220703
    5. '   ' → logprob: -12.877063751220703
    6. '  ' → logprob: -17.252063751220703
    7. '    ' → logprob: -17.377063751220703
    8. '(False' → logprob: -17.752063751220703
    9. '=False' → logprob: -18.502063751220703
    10. 'false' → logprob: -19.377063751220703

Token 140: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -2.8325677703833207e-05
    2. 'implemented' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.500028610229492
    4. 'Implement' → logprob: -15.875028610229492
    5. 'Impl' → logprob: -16.875028610229492
    6. '```' → logprob: -17.125028610229492
    7. '_IMPLEMENT' → logprob: -17.250028610229492
    8. ' implemented' → logprob: -17.250028610229492
    9. '[' → logprob: -18.500028610229492
    10. 'IMPLEMENT' → logprob: -18.750028610229492

Token 141: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06264118105173111
    2. '
' → logprob: -2.812641143798828
    3. '        
' → logprob: -7.812641143798828
    4. '   ' → logprob: -9.312641143798828
    5. '  
' → logprob: -9.812641143798828
    6. '    
' → logprob: -9.937641143798828
    7. '<|end|>' → logprob: -10.937641143798828
    8. ' 
' → logprob: -11.437641143798828
    9. '
' → logprob: -12.312641143798828
    10. '' → logprob: -12.312641143798828

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18090157210826874
    2. '
' → logprob: -1.8059015274047852
    3. '        
' → logprob: -7.430901527404785
    4. '  
' → logprob: -8.680901527404785
    5. '   ' → logprob: -9.305901527404785
    6. '<|end|>' → logprob: -9.305901527404785
    7. '    
' → logprob: -9.430901527404785
    8. ' 
' → logprob: -10.055901527404785
    9. '' → logprob: -10.680901527404785
    10. '
' → logprob: -11.305901527404785

Token 143: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06594737619161606
    2. 'return' (adapté à ' return') → logprob: -2.8159472942352295
    3. ' return' → logprob: -5.565947532653809
    4. '   ' → logprob: -8.940947532653809
    5. '	return' → logprob: -11.815947532653809
    6. '
' → logprob: -13.065947532653809
    7. '      ' → logprob: -13.690947532653809
    8. '        
' → logprob: -13.940947532653809
    9. '     ' → logprob: -14.190947532653809
    10. '    ' → logprob: -14.315947532653809

Token 144: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.038129162043333054
    2. ' float' → logprob: -3.2881290912628174
    3. 'self' → logprob: -9.413128852844238
    4. ' self' → logprob: -12.663128852844238
    5. '(float' → logprob: -13.538128852844238
    6. 'flo' → logprob: -14.163128852844238
    7. '   ' → logprob: -14.538128852844238
    8. '	float' → logprob: -15.913128852844238
    9. ' ' → logprob: -16.413129806518555
    10. '<float' → logprob: -16.663129806518555

Token 145: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -6.704273118884885e-07
    2. 'equal' → logprob: -14.375000953674316
    3. '_EQUAL' → logprob: -17.0
    4. 'Equal' → logprob: -18.75
    5. '_equ' → logprob: -18.75
    6. '_' → logprob: -19.0
    7. '_equals' → logprob: -19.875
    8. ' equal' → logprob: -20.125
    9. '_eq' → logprob: -20.625
    10. '.equal' → logprob: -21.375

Token 146: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.250004768371582
    3. 'self' → logprob: -14.875004768371582
    4. '(s' → logprob: -18.0000057220459
    5. '(
' → logprob: -18.3750057220459
    6. ' (' → logprob: -18.3750057220459
    7. '(this' → logprob: -18.6250057220459
    8. ' self' → logprob: -19.3750057220459
    9. '(sel' → logprob: -20.7500057220459
    10. '   ' → logprob: -20.8750057220459

Token 147: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.29769155383110046
    2. '.' → logprob: -1.6726915836334229
    3. '(self' → logprob: -2.797691583633423
    4. '(' → logprob: -5.047691345214844
    5. ')' → logprob: -7.172691345214844
    6. '(x' → logprob: -7.672691345214844
    7. ' .' → logprob: -8.172691345214844
    8. '.self' → logprob: -8.672691345214844
    9. 'self' → logprob: -8.797691345214844
    10. ' self' → logprob: -9.172691345214844

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005288311280310154
    2. 'other' → logprob: -5.755288124084473
    3. '<|end|>' → logprob: -6.630288124084473
    4. '(other' → logprob: -7.755288124084473
    5. ' ,' → logprob: -8.755288124084473
    6. ' other' → logprob: -9.130288124084473
    7. ')' → logprob: -10.005288124084473
    8. ' ' → logprob: -10.380288124084473
    9. '<|end|>' → logprob: -12.380288124084473
    10. 'Other' → logprob: -12.380288124084473

Token 149: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00861468818038702
    2. ' other' → logprob: -4.758614540100098
    3. '(other' → logprob: -16.758615493774414
    4. 'Other' → logprob: -18.133615493774414
    5. '.other' → logprob: -19.133615493774414
    6. '_other' → logprob: -19.508615493774414
    7. 'othe' → logprob: -21.258615493774414
    8. 'self' → logprob: -22.008615493774414
    9. 'OTHER' → logprob: -22.258615493774414
    10. ' ' → logprob: -22.383615493774414

Token 150: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.04308643192052841
    2. '.' → logprob: -3.168086528778076
    3. ' .' → logprob: -10.168086051940918
    4. ').' → logprob: -10.293086051940918
    5. '.y' → logprob: -12.293086051940918
    6. ' ' → logprob: -12.543086051940918
    7. 'x' → logprob: -13.168086051940918
    8. ')' → logprob: -13.418086051940918
    9. '<|end|>' → logprob: -14.293086051940918
    10. '.
' → logprob: -14.793086051940918

Token 151: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001991298486245796
    2. ' )' → logprob: -8.875199317932129
    3. 'and' → logprob: -10.000199317932129
    4. ' and' → logprob: -11.250199317932129
    5. '       ' → logprob: -15.125199317932129
    6. ')&&' → logprob: -15.500199317932129
    7. ')
' → logprob: -15.750199317932129
    8. '        ' → logprob: -16.125198364257812
    9. '   ' → logprob: -17.375198364257812
    10. '    ' → logprob: -17.750198364257812

Token 152: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.575944721698761
    2. 'and' → logprob: -0.825944721698761
    3. '    ' → logprob: -12.950944900512695
    4. ' ' → logprob: -14.450944900512695
    5. '   ' → logprob: -14.575944900512695
    6. '        ' → logprob: -14.700944900512695
    7. ')' → logprob: -14.950944900512695
    8. '       ' → logprob: -15.325944900512695
    9. '      ' → logprob: -15.575944900512695
    10. '	and' → logprob: -15.825944900512695

Token 153: ' \
' (ID: 6814)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.004083385691046715
    2. 'float' → logprob: -5.504083156585693
    3. ' ' → logprob: -12.754083633422852
    4. ' ' → logprob: -14.129083633422852
    5. '(float' → logprob: -14.629083633422852
    6. ',float' → logprob: -15.129083633422852
    7. '        ' → logprob: -16.12908363342285
    8. '.float' → logprob: -16.75408363342285
    9. '	float' → logprob: -16.75408363342285
    10. '<float' → logprob: -16.75408363342285

Token 154: '           ' (ID: 352)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.6330220103263855
    2. 'float' → logprob: -0.7580220103263855
    3. '              ' → logprob: -8.25802230834961
    4. '       ' → logprob: -9.50802230834961
    5. '               ' → logprob: -10.25802230834961
    6. '             ' → logprob: -10.63302230834961
    7. '           ' → logprob: -11.25802230834961
    8. '            ' → logprob: -12.75802230834961
    9. '        ' → logprob: -13.13302230834961
    10. ' ' → logprob: -13.25802230834961

Token 155: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' (adapté à ' float') → logprob: -0.47408074140548706
    2. ' float' → logprob: -0.9740807414054871
    3. '           ' → logprob: -13.474081039428711
    4. '       ' → logprob: -14.974081039428711
    5. '(float' → logprob: -14.974081039428711
    6. ' ' → logprob: -15.099081039428711
    7. '        ' → logprob: -15.224081039428711
    8. '         ' → logprob: -15.724081039428711
    9. '.float' → logprob: -15.724081039428711
    10. '<float' → logprob: -16.09908103942871

Token 156: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -2.5941604690160602e-05
    2. 'equal' → logprob: -10.625025749206543
    3. '_EQUAL' → logprob: -14.250025749206543
    4. 'Equal' → logprob: -14.875025749206543
    5. ' equal' → logprob: -15.375025749206543
    6. '_' → logprob: -15.500025749206543
    7. '(equal' → logprob: -17.00002670288086
    8. '.equal' → logprob: -17.00002670288086
    9. '_equals' → logprob: -17.12502670288086
    10. '<|end|>' → logprob: -18.62502670288086

Token 157: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020401719666551799
    2. '(' → logprob: -8.500204086303711
    3. 'self' → logprob: -15.875204086303711
    4. '(
' → logprob: -16.00020408630371
    5. ' (' → logprob: -16.12520408630371
    6. '<|end|>' → logprob: -16.25020408630371
    7. '(s' → logprob: -18.87520408630371
    8. ' self' → logprob: -19.37520408630371
    9. '(this' → logprob: -19.50020408630371
    10. ',self' → logprob: -20.50020408630371

Token 158: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.005252256989479065
    2. '.' → logprob: -5.255252361297607
    3. 'y' → logprob: -11.13025188446045
    4. ' .' → logprob: -13.00525188446045
    5. ' ' → logprob: -15.13025188446045
    6. '.py' → logprob: -15.13025188446045
    7. ' y' → logprob: -15.38025188446045
    8. '.x' → logprob: -15.63025188446045
    9. ',y' → logprob: -15.75525188446045
    10. ').' → logprob: -16.255252838134766

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6776029699249193e-05
    2. ' ,' → logprob: -10.75002670288086
    3. '           ' → logprob: -12.75002670288086
    4. '<|end|>' → logprob: -14.00002670288086
    5. ')' → logprob: -15.00002670288086
    6. '(other' → logprob: -15.12502670288086
    7. 'other' → logprob: -15.75002670288086
    8. '               ' → logprob: -16.00002670288086
    9. ',self' → logprob: -16.00002670288086
    10. 'self' → logprob: -16.12502670288086

Token 160: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.20141948759555817
    2. ' other' → logprob: -1.701419472694397
    3. '(other' → logprob: -12.576419830322266
    4. 'self' → logprob: -12.951419830322266
    5. 'Other' → logprob: -15.451419830322266
    6. '.other' → logprob: -16.076419830322266
    7. '_other' → logprob: -16.326419830322266
    8. ' self' → logprob: -17.326419830322266
    9. ' ' → logprob: -19.826419830322266
    10. 'OTHER' → logprob: -20.076419830322266

Token 161: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0017025562701746821
    2. '.' → logprob: -6.501702785491943
    3. ',' → logprob: -8.626702308654785
    4. ')' → logprob: -11.501702308654785
    5. 'y' → logprob: -12.001702308654785
    6. ' .' → logprob: -13.001702308654785
    7. ',y' → logprob: -13.251702308654785
    8. '.x' → logprob: -15.501702308654785
    9. ' y' → logprob: -15.626702308654785
    10. ' ' → logprob: -16.1267032623291

Token 162: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. ')
' → logprob: -12.125009536743164
    3. '       ' → logprob: -13.125009536743164
    4. ' )' → logprob: -14.125009536743164
    5. '<|end|>' → logprob: -14.375009536743164
    6. ')return' → logprob: -15.250009536743164
    7. '   ' → logprob: -15.500009536743164
    8. ')

' → logprob: -16.125009536743164
    9. '}' → logprob: -16.875009536743164
    10. ')#' → logprob: -17.375009536743164

Token 163: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3974508047103882
    2. '
' → logprob: -1.7724508047103882
    3. '    
' → logprob: -2.1474509239196777
    4. ' 
' → logprob: -4.272450923919678
    5. '  
' → logprob: -4.772450923919678
    6. 'def' (adapté à ' def') → logprob: -4.897450923919678
    7. '   
' → logprob: -5.397450923919678
    8. '

' → logprob: -6.147450923919678
    9. ' ' → logprob: -6.522450923919678
    10. ' def' → logprob: -7.272450923919678

Token 165: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1967136412858963
    2. ' ' → logprob: -2.82171368598938
    3. ' __' → logprob: -2.82171368598938
    4. 'def' → logprob: -3.07171368598938
    5. ' distance' → logprob: -5.196713447570801
    6. 'distance' → logprob: -5.571713447570801
    7. '__' → logprob: -7.071713447570801
    8. ' _' → logprob: -7.446713447570801
    9. ' ' → logprob: -7.696713447570801
    10. '_distance' → logprob: -7.946713447570801

Token 166: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.08062605559825897
    2. 'sub' → logprob: -2.9556260108947754
    3. 'lt' → logprob: -3.7056260108947754
    4. 'hash' → logprob: -7.205626010894775
    5. 'ne' → logprob: -10.455626487731934
    6. 'neg' → logprob: -11.205626487731934
    7. 'mul' → logprob: -11.205626487731934
    8. 'abs' → logprob: -11.580626487731934
    9. 'le' → logprob: -11.955626487731934
    10. 'str' → logprob: -12.205626487731934

Token 167: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.95667564868927
    2. '__(' → logprob: -0.95667564868927
    3. '(' → logprob: -1.83167564868927
    4. '_' → logprob: -3.4566755294799805
    5. '<|end|>' → logprob: -3.8316755294799805
    6. ' (' → logprob: -4.2066755294799805
    7. '(self' → logprob: -6.9566755294799805
    8. '__(
' → logprob: -7.0816755294799805
    9. '__((' → logprob: -7.7066755294799805
    10. '__('' → logprob: -7.8316755294799805

Token 168: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008907367591746151
    2. ' self' → logprob: -7.375890731811523
    3. 'other' → logprob: -8.250890731811523
    4. ' other' → logprob: -13.125890731811523
    5. '(self' → logprob: -14.375890731811523
    6. ' ' → logprob: -15.125890731811523
    7. '
' → logprob: -15.875890731811523
    8. ')' → logprob: -16.375890731811523
    9. ',' → logprob: -17.000890731811523
    10. '	self' → logprob: -17.375890731811523

Token 169: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.28723451495170593
    2. ',' → logprob: -2.5372345447540283
    3. '__' → logprob: -2.6622345447540283
    4. '(self' → logprob: -3.4122345447540283
    5. '<|end|>' → logprob: -3.5372345447540283
    6. '(' → logprob: -3.7872345447540283
    7. 'self' → logprob: -5.287234306335449
    8. ')' → logprob: -6.037234306335449
    9. ' (' → logprob: -6.162234306335449
    10. '__((' → logprob: -6.912234306335449

Token 170: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.3869624435901642
    2. 'other' → logprob: -1.1369624137878418
    3. 'self' → logprob: -9.636962890625
    4. ' self' → logprob: -10.636962890625
    5. ' ' → logprob: -14.136962890625
    6. 'Other' → logprob: -14.511962890625
    7. '_other' → logprob: -14.761962890625
    8. '(other' → logprob: -15.136962890625
    9. '.other' → logprob: -16.261962890625
    10. ' oth' → logprob: -16.636962890625

Token 171: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3916745185852051
    2. ':' → logprob: -1.141674518585205
    3. ')' → logprob: -5.766674518585205
    4. '):
' → logprob: -7.266674518585205
    5. '<|end|>' → logprob: -7.266674518585205
    6. ' ):' → logprob: -9.391674041748047
    7. '<|end|>' → logprob: -9.766674041748047
    8. ' :' → logprob: -9.766674041748047
    9. ' ' → logprob: -11.141674041748047
    10. '):

' → logprob: -11.766674041748047

Token 172: ' '' (ID: 461)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.4432622790336609
    2. 'Point' → logprob: -1.0682623386383057
    3. ')' → logprob: -5.068262100219727
    4. ' ' → logprob: -5.443262100219727
    5. ' '' → logprob: -6.693262100219727
    6. '<|end|>' → logprob: -7.443262100219727
    7. ''' → logprob: -8.068262100219727
    8. '	Point' → logprob: -8.443262100219727
    9. '"' → logprob: -8.568262100219727
    10. ' "' → logprob: -8.568262100219727

Token 173: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.5094070477061905e-05
    2. ' Point' → logprob: -11.125015258789062
    3. '	Point' → logprob: -15.875015258789062
    4. '_Point' → logprob: -17.375015258789062
    5. '<Point' → logprob: -17.625015258789062
    6. '_point' → logprob: -18.000015258789062
    7. '.Point' → logprob: -18.250015258789062
    8. 'Points' → logprob: -19.000015258789062
    9. 'Po' → logprob: -19.375015258789062
    10. 'point' → logprob: -19.500015258789062

Token 174: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.018367081880569458
    2. ')' → logprob: -4.018367290496826
    3. ''):' → logprob: -8.518366813659668
    4. '):' → logprob: -11.643366813659668
    5. '")' → logprob: -12.768366813659668
    6. ':' → logprob: -12.768366813659668
    7. ''):
' → logprob: -14.143366813659668
    8. ''' → logprob: -14.143366813659668
    9. '')->' → logprob: -14.768366813659668
    10. ' ')' → logprob: -14.893366813659668

Token 175: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024239332415163517
    2. ' ->' → logprob: -7.0024237632751465
    3. ')' → logprob: -7.1274237632751465
    4. '->' → logprob: -7.8774237632751465
    5. '):' → logprob: -8.377424240112305
    6. ')->' → logprob: -9.502424240112305
    7. ' :' → logprob: -11.252424240112305
    8. ':return' → logprob: -12.752424240112305
    9. '<|end|>' → logprob: -13.502424240112305
    10. '<|end|>' → logprob: -13.502424240112305

Token 176: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.3152150511741638
    2. ''' → logprob: -1.3152151107788086
    3. 'Point' → logprob: -6.690215110778809
    4. ' Point' → logprob: -7.315215110778809
    5. ''s' → logprob: -11.565215110778809
    6. ''class' → logprob: -11.940215110778809
    7. ' ' → logprob: -12.190215110778809
    8. '_Point' → logprob: -12.815215110778809
    9. '<Point' → logprob: -13.065215110778809
    10. '"' → logprob: -13.065215110778809

Token 177: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0009118211455643177
    2. ' Point' → logprob: -7.000911712646484
    3. '	Point' → logprob: -15.875911712646484
    4. '_Point' → logprob: -17.125911712646484
    5. '_point' → logprob: -17.750911712646484
    6. 'Points' → logprob: -18.250911712646484
    7. '<Point' → logprob: -18.500911712646484
    8. '.Point' → logprob: -18.625911712646484
    9. ' ' → logprob: -18.750911712646484
    10. ' point' → logprob: -19.125911712646484

Token 178: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29828450083732605
    2. '':' → logprob: -1.6732845306396484
    3. '):' → logprob: -2.6732845306396484
    4. ''):' → logprob: -6.923284530639648
    5. '):
' → logprob: -9.923284530639648
    6. ':
' → logprob: -10.298284530639648
    7. ''' → logprob: -10.298284530639648
    8. '':'' → logprob: -10.798284530639648
    9. ')' → logprob: -11.173284530639648
    10. ':'' → logprob: -11.298284530639648

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22854313254356384
    2. '<|end|>' → logprob: -2.1035430431365967
    3. ':' → logprob: -2.7285430431365967
    4. '):' → logprob: -5.228543281555176
    5. '   ' → logprob: -6.103543281555176
    6. ')' → logprob: -6.228543281555176
    7. '):
' → logprob: -6.728543281555176
    8. 'Point' → logprob: -6.728543281555176
    9. 'return' → logprob: -6.978543281555176
    10. ':
' → logprob: -7.478543281555176

Token 180: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.002296086400747299
    2. ' Point' → logprob: -6.252295970916748
    3. '       ' → logprob: -8.502296447753906
    4. 'return' (adapté à ' return') → logprob: -8.877296447753906
    5. ' return' → logprob: -11.127296447753906
    6. '   ' → logprob: -12.502296447753906
    7. '	Point' → logprob: -13.127296447753906
    8. '(Point' → logprob: -13.627296447753906
    9. '        
' → logprob: -14.002296447753906
    10. '
' → logprob: -14.252296447753906

Token 181: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.2519323229789734
    2. 'Point' → logprob: -1.5019323825836182
    3. '	Point' → logprob: -13.001932144165039
    4. '(Point' → logprob: -14.876932144165039
    5. ' ' → logprob: -15.501932144165039
    6. '   ' → logprob: -15.876932144165039
    7. '_Point' → logprob: -16.00193214416504
    8. '<Point' → logprob: -16.87693214416504
    9. ' ' → logprob: -17.37693214416504
    10. '.Point' → logprob: -17.50193214416504

Token 182: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00015979631280060858
    2. '(' → logprob: -8.750160217285156
    3. 'self' → logprob: -13.875160217285156
    4. '(
' → logprob: -15.375160217285156
    5. '(s' → logprob: -16.125160217285156
    6. ' (' → logprob: -18.000160217285156
    7. '(this' → logprob: -18.375160217285156
    8. '((' → logprob: -18.875160217285156
    9. '   ' → logprob: -20.625160217285156
    10. ' self' → logprob: -20.625160217285156

Token 183: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.011056429706513882
    2. '.' → logprob: -4.511056423187256
    3. ' .' → logprob: -12.136056900024414
    4. 'x' → logprob: -12.761056900024414
    5. ' ' → logprob: -16.011056900024414
    6. '.s' → logprob: -16.136056900024414
    7. ').' → logprob: -17.386056900024414
    8. '   ' → logprob: -17.511056900024414
    9. '.
' → logprob: -17.761056900024414
    10. ',' → logprob: -18.636056900024414

Token 184: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.016093963757157326
    2. '+' → logprob: -4.141093730926514
    3. ' ' → logprob: -9.766094207763672
    4. '<|end|>' → logprob: -14.391094207763672
    5. '+self' → logprob: -14.641094207763672
    6. ' +
' → logprob: -14.766094207763672
    7. ',' → logprob: -15.516094207763672
    8. ')' → logprob: -15.766094207763672
    9. ' ' → logprob: -16.516094207763672
    10. ' ,' → logprob: -16.516094207763672

Token 185: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.47407761216163635
    2. 'other' → logprob: -0.974077582359314
    3. '(other' → logprob: -14.974077224731445
    4. '_other' → logprob: -15.724077224731445
    5. 'Other' → logprob: -16.224077224731445
    6. '.other' → logprob: -17.224077224731445
    7. ' ' → logprob: -18.224077224731445
    8. ' oth' → logprob: -18.849077224731445
    9. ' Other' → logprob: -19.349077224731445
    10. 'othe' → logprob: -19.849077224731445

Token 186: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0125282509252429
    2. '.' → logprob: -4.387528419494629
    3. ' .' → logprob: -11.387528419494629
    4. 'x' → logprob: -12.137528419494629
    5. ' ' → logprob: -14.012528419494629
    6. ').' → logprob: -14.762528419494629
    7. '<|end|>' → logprob: -15.387528419494629
    8. '.
' → logprob: -15.762528419494629
    9. '	x' → logprob: -16.637527465820312
    10. ' x' → logprob: -16.762527465820312

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.774276774493046e-05
    2. ' ,' → logprob: -10.375038146972656
    3. ',
' → logprob: -12.125038146972656
    4. ')' → logprob: -14.625038146972656
    5. ',self' → logprob: -14.750038146972656
    6. ',

' → logprob: -16.500038146972656
    7. '<|end|>' → logprob: -16.500038146972656
    8. '   ' → logprob: -18.875038146972656
    9. '‌,' → logprob: -18.875038146972656
    10. '),' → logprob: -19.000038146972656

Token 188: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07009193301200867
    2. 'self' → logprob: -2.695091962814331
    3. ' ' → logprob: -9.32009220123291
    4. '<|end|>' → logprob: -9.82009220123291
    5. ' ' → logprob: -12.69509220123291
    6. ')' → logprob: -12.94509220123291
    7. '	self' → logprob: -13.32009220123291
    8. '    ' → logprob: -13.94509220123291
    9. ' 
' → logprob: -14.07009220123291
    10. ' other' → logprob: -14.57009220123291

Token 189: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.008624501526355743
    2. '.' → logprob: -4.75862455368042
    3. 'y' → logprob: -11.758624076843262
    4. ' .' → logprob: -13.883624076843262
    5. '<|end|>' → logprob: -15.008624076843262
    6. '<|end|>' → logprob: -15.133624076843262
    7. '.py' → logprob: -15.883624076843262
    8. ').' → logprob: -16.008625030517578
    9. ' y' → logprob: -16.633625030517578
    10. '.ylabel' → logprob: -16.758625030517578

Token 190: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01815146580338478
    2. '+' → logprob: -4.01815128326416
    3. '<|end|>' → logprob: -14.51815128326416
    4. '+)' → logprob: -14.89315128326416
    5. ')' → logprob: -15.01815128326416
    6. ' +
' → logprob: -15.51815128326416
    7. '+y' → logprob: -15.89315128326416
    8. '+x' → logprob: -17.393152236938477
    9. ' +

' → logprob: -17.643152236938477
    10. '<|end|>' → logprob: -17.768152236938477

Token 191: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.16022920608520508
    2. ' other' → logprob: -1.910229206085205
    3. '(other' → logprob: -12.410228729248047
    4. '.other' → logprob: -14.910228729248047
    5. 'Other' → logprob: -15.160228729248047
    6. '_other' → logprob: -16.035228729248047
    7. 'self' → logprob: -16.660228729248047
    8. ' ' → logprob: -16.785228729248047
    9. ')' → logprob: -18.285228729248047
    10. 'others' → logprob: -18.410228729248047

Token 192: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.029136905446648598
    2. 'y' → logprob: -3.904136896133423
    3. ')' → logprob: -5.154137134552002
    4. '.' → logprob: -6.654137134552002
    5. '<|end|>' → logprob: -6.904137134552002
    6. ' y' → logprob: -8.654136657714844
    7. '	y' → logprob: -9.654136657714844
    8. '<|end|>' → logprob: -9.779136657714844
    9. ')y' → logprob: -10.029136657714844
    10. '+' → logprob: -10.404136657714844

Token 193: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -15.375003814697266
    4. '   ' → logprob: -17.000003814697266
    5. '<|end|>' → logprob: -17.125003814697266
    6. '       ' → logprob: -17.250003814697266
    7. '),' → logprob: -18.250003814697266
    8. ')

' → logprob: -18.500003814697266
    9. ')return' → logprob: -18.625003814697266
    10. ' ' → logprob: -19.625003814697266

Token 194: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3930189907550812
    2. '   ' → logprob: -1.1430189609527588
    3. ' ' → logprob: -6.268019199371338
    4. '<|end|>' → logprob: -6.893019199371338
    5. ' def' → logprob: -7.143019199371338
    6. ')' → logprob: -7.518019199371338
    7. '
' → logprob: -8.01801872253418
    8. '*' → logprob: -8.26801872253418
    9. '(' → logprob: -8.26801872253418
    10. '    
' → logprob: -8.51801872253418

Token 196: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03992580249905586
    2. '__' → logprob: -4.164925575256348
    3. ' -' → logprob: -5.039925575256348
    4. ' ' → logprob: -5.289925575256348
    5. ' def' → logprob: -5.789925575256348
    6. '.__' → logprob: -6.164925575256348
    7. '-' → logprob: -6.789925575256348
    8. 'def' → logprob: -6.914925575256348
    9. ''' → logprob: -7.164925575256348
    10. ',' → logprob: -7.414925575256348

Token 197: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -4.572941179503687e-05
    2. 'mul' → logprob: -10.250045776367188
    3. '-' → logprob: -11.500045776367188
    4. 'neg' → logprob: -16.125045776367188
    5. ' sub' → logprob: -16.750045776367188
    6. '-sub' → logprob: -17.500045776367188
    7. '_sub' → logprob: -17.500045776367188
    8. '-
' → logprob: -17.875045776367188
    9. ' -' → logprob: -18.250045776367188
    10. '.sub' → logprob: -18.375045776367188

Token 198: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06286744773387909
    2. '__' → logprob: -2.8128674030303955
    3. '__('' → logprob: -7.062867641448975
    4. '__(
' → logprob: -10.937867164611816
    5. '__((' → logprob: -10.937867164611816
    6. '__("' → logprob: -12.812867164611816
    7. '__(*' → logprob: -13.187867164611816
    8. '__[' → logprob: -13.437867164611816
    9. '__.__' → logprob: -13.687867164611816
    10. '__

' → logprob: -16.062868118286133

Token 199: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10056744515895844
    2. 'other' → logprob: -2.35056734085083
    3. '(self' → logprob: -8.725567817687988
    4. ' other' → logprob: -9.725567817687988
    5. '(other' → logprob: -10.100567817687988
    6. ' self' → logprob: -10.225567817687988
    7. 'Other' → logprob: -10.225567817687988
    8. ''s' → logprob: -11.100567817687988
    9. ''' → logprob: -11.850567817687988
    10. '_other' → logprob: -14.100567817687988

Token 200: ',' (ID: 11)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.577072024345398
    2. '__('' → logprob: -1.577072024345398
    3. '__(' → logprob: -2.7020721435546875
    4. '(' → logprob: -3.2020721435546875
    5. ')' → logprob: -3.3270721435546875
    6. ',' → logprob: -3.8270721435546875
    7. '_' → logprob: -4.0770721435546875
    8. ' (' → logprob: -4.7020721435546875
    9. '__((' → logprob: -4.9520721435546875
    10. '.' → logprob: -4.9520721435546875

Token 201: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.16043208539485931
    2. ' other' → logprob: -1.9104321002960205
    3. 'self' → logprob: -8.660431861877441
    4. 'Other' → logprob: -10.660431861877441
    5. '(other' → logprob: -12.035431861877441
    6. ' self' → logprob: -13.035431861877441
    7. '<|end|>' → logprob: -13.035431861877441
    8. '_other' → logprob: -14.410431861877441
    9. '.other' → logprob: -15.660431861877441
    10. ' ' → logprob: -17.160432815551758

Token 202: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010289790108799934
    2. ')' → logprob: -5.135289669036865
    3. '):' → logprob: -6.010289669036865
    4. ' :' → logprob: -7.135289669036865
    5. ' '' → logprob: -8.385290145874023
    6. '.Point' → logprob: -8.510290145874023
    7. '<Point' → logprob: -9.010290145874023
    8. ''' → logprob: -9.135290145874023
    9. '(Point' → logprob: -9.385290145874023
    10. '('' → logprob: -9.885290145874023

Token 203: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006725788116455078
    2. ' '' → logprob: -5.006725788116455
    3. ')' → logprob: -12.381725311279297
    4. 'Point' → logprob: -13.006725311279297
    5. ' Point' → logprob: -13.506725311279297
    6. '')' → logprob: -14.131725311279297
    7. '<Point' → logprob: -15.006725311279297
    8. ' ' → logprob: -15.006725311279297
    9. '[' → logprob: -15.631725311279297
    10. 'self' → logprob: -15.756725311279297

Token 204: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.4121114822482923e-06
    2. ' Point' → logprob: -12.875003814697266
    3. '	Point' → logprob: -14.625003814697266
    4. ''' → logprob: -15.750003814697266
    5. '.Point' → logprob: -16.375003814697266
    6. '<Point' → logprob: -16.625003814697266
    7. '_Point' → logprob: -18.125003814697266
    8. '_point' → logprob: -18.500003814697266
    9. '(Point' → logprob: -18.625003814697266
    10. '-point' → logprob: -19.000003814697266

Token 205: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00014096579980105162
    2. ')' → logprob: -8.875141143798828
    3. '")' → logprob: -14.875141143798828
    4. ''):' → logprob: -15.125141143798828
    5. ''' → logprob: -15.750141143798828
    6. ''):
' → logprob: -15.875141143798828
    7. '')
' → logprob: -16.625141143798828
    8. ')'' → logprob: -17.000141143798828
    9. ' ')' → logprob: -17.750141143798828
    10. ':' → logprob: -18.000141143798828

Token 206: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39409947395324707
    2. ':' → logprob: -1.144099473953247
    3. ' ->' → logprob: -5.394099235534668
    4. '->' → logprob: -7.144099235534668
    5. '):' → logprob: -7.394099235534668
    6. ' :' → logprob: -7.769099235534668
    7. ')->' → logprob: -8.519099235534668
    8. '   ' → logprob: -8.644099235534668
    9. ':
' → logprob: -8.894099235534668
    10. '<|end|>' → logprob: -9.644099235534668

Token 207: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3882817327976227
    2. ' '' → logprob: -1.5132817029953003
    3. ' Point' → logprob: -2.76328182220459
    4. 'Point' → logprob: -3.26328182220459
    5. '(Point' → logprob: -9.51328182220459
    6. ''s' → logprob: -10.51328182220459
    7. '<Point' → logprob: -10.51328182220459
    8. '.Point' → logprob: -10.76328182220459
    9. ' ' → logprob: -10.88828182220459
    10. 'self' → logprob: -11.01328182220459

Token 208: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -5.9153885558771435e-06
    2. ' Point' → logprob: -12.125005722045898
    3. '	Point' → logprob: -15.125005722045898
    4. '<Point' → logprob: -16.7500057220459
    5. '.Point' → logprob: -17.3750057220459
    6. ''' → logprob: -17.5000057220459
    7. '(Point' → logprob: -17.6250057220459
    8. '_Point' → logprob: -18.1250057220459
    9. '_point' → logprob: -18.7500057220459
    10. '-point' → logprob: -19.7500057220459

Token 209: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.1628209799528122
    2. '':
' → logprob: -1.9128209352493286
    3. ''' → logprob: -6.287820816040039
    4. ':' → logprob: -8.162820816040039
    5. ''):
' → logprob: -8.787820816040039
    6. '':

' → logprob: -9.412820816040039
    7. ''):' → logprob: -9.662820816040039
    8. '':
' → logprob: -9.787820816040039
    9. ':
' → logprob: -10.662820816040039
    10. '):
' → logprob: -11.162820816040039

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7024942636489868
    2. ' Point' → logprob: -0.7024942636489868
    3. ' return' → logprob: -5.452494144439697
    4. 'Point' → logprob: -5.577494144439697
    5. '   ' → logprob: -7.202494144439697
    6. '(Point' → logprob: -8.327494621276855
    7. '	Point' → logprob: -9.577494621276855
    8. '        ' → logprob: -9.952494621276855
    9. 'return' → logprob: -10.202494621276855
    10. ' ' → logprob: -10.577494621276855

Token 211: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.10071413964033127
    2. 'return' (adapté à ' return') → logprob: -2.3507142066955566
    3. ' return' → logprob: -7.850714206695557
    4. ' Point' → logprob: -9.100713729858398
    5. '       ' → logprob: -12.600713729858398
    6. 'Return' → logprob: -13.100713729858398
    7. '   ' → logprob: -14.100713729858398
    8. 'Points' → logprob: -16.4757137298584
    9. '(Point' → logprob: -16.8507137298584
    10. '	Point' → logprob: -17.3507137298584

Token 212: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.693149983882904
    2. ' Point' → logprob: -0.693149983882904
    3. '	Point' → logprob: -13.31814956665039
    4. '(Point' → logprob: -13.81814956665039
    5. '_Point' → logprob: -17.19314956665039
    6. '.Point' → logprob: -17.31814956665039
    7. ' ' → logprob: -17.44314956665039
    8. '   ' → logprob: -17.94314956665039
    9. '<Point' → logprob: -18.06814956665039
    10. ' ' → logprob: -18.31814956665039

Token 213: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. '(
' → logprob: -17.5000057220459
    4. '(this' → logprob: -18.6250057220459
    5. 'self' → logprob: -18.7500057220459
    6. '(s' → logprob: -21.0000057220459
    7. ' (' → logprob: -21.1250057220459
    8. '((' → logprob: -22.5000057220459
    9. '=self' → logprob: -23.0000057220459
    10. '(Self' → logprob: -23.0000057220459

Token 214: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0004004024958703667
    2. '.' → logprob: -7.875400543212891
    3. 'x' → logprob: -10.87540054321289
    4. '<|end|>' → logprob: -14.37540054321289
    5. ' .' → logprob: -14.50040054321289
    6. ' ' → logprob: -16.75040054321289
    7. '<|end|>' → logprob: -16.75040054321289
    8. ' x' → logprob: -17.25040054321289
    9. ').' → logprob: -17.37540054321289
    10. ')' → logprob: -17.50040054321289

Token 215: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0052912733517587185
    2. '-' → logprob: -5.25529146194458
    3. '-self' → logprob: -10.630290985107422
    4. 'self' → logprob: -11.755290985107422
    5. '(self' → logprob: -11.880290985107422
    6. ' self' → logprob: -12.130290985107422
    7. ' ' → logprob: -12.505290985107422
    8. ')' → logprob: -12.505290985107422
    9. '(' → logprob: -12.630290985107422
    10. ',' → logprob: -13.755290985107422

Token 216: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.10020763427019119
    2. ' other' → logprob: -2.350207567214966
    3. '(other' → logprob: -14.475207328796387
    4. 'Other' → logprob: -15.100207328796387
    5. '_other' → logprob: -16.975208282470703
    6. '.other' → logprob: -17.225208282470703
    7. '<|end|>' → logprob: -19.475208282470703
    8. 'OTHER' → logprob: -20.100208282470703
    9. 'self' → logprob: -21.350208282470703
    10. ' Other' → logprob: -21.725208282470703

Token 217: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.004082554951310158
    2. '.' → logprob: -5.504082679748535
    3. 'x' → logprob: -13.004082679748535
    4. ' .' → logprob: -13.379082679748535
    5. '<|end|>' → logprob: -15.879082679748535
    6. ',' → logprob: -17.37908172607422
    7. 'Point' → logprob: -17.75408172607422
    8. '[' → logprob: -18.00408172607422
    9. '.y' → logprob: -18.00408172607422
    10. '<|end|>' → logprob: -18.25408172607422

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.2994620242971e-06
    2. ' ,' → logprob: -11.750008583068848
    3. ')' → logprob: -15.500008583068848
    4. ',
' → logprob: -17.87500762939453
    5. '),' → logprob: -18.00000762939453
    6. 's' → logprob: -18.12500762939453
    7. '   ' → logprob: -19.00000762939453
    8. ' ' → logprob: -19.37500762939453
    9. '.' → logprob: -19.62500762939453
    10. 'x' → logprob: -19.75000762939453

Token 219: ' self' (ID: 1051)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.5759608149528503
    2. 'other' → logprob: -0.8259608149528503
    3. 'self' → logprob: -10.950961112976074
    4. 'Other' → logprob: -13.575961112976074
    5. ' self' → logprob: -13.700961112976074
    6. '(other' → logprob: -13.950961112976074
    7. '.other' → logprob: -15.325961112976074
    8. '_other' → logprob: -15.450961112976074
    9. '<|end|>' → logprob: -17.575960159301758
    10. ' ' → logprob: -17.575960159301758

Token 220: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.005981054622679949
    2. '.' → logprob: -5.130980968475342
    3. 'y' → logprob: -9.8809814453125
    4. '.x' → logprob: -14.2559814453125
    5. ' .' → logprob: -15.6309814453125
    6. ' y' → logprob: -16.5059814453125
    7. '	y' → logprob: -16.8809814453125
    8. '[' → logprob: -16.8809814453125
    9. '.py' → logprob: -17.0059814453125
    10. '```' → logprob: -17.2559814453125

Token 221: ' -' (ID: 533)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.008436443284153938
    2. '-' → logprob: -5.383436679840088
    3. '.' → logprob: -5.633436679840088
    4. ' -' → logprob: -8.63343620300293
    5. '.x' → logprob: -10.50843620300293
    6. 'y' → logprob: -11.00843620300293
    7. ')' → logprob: -12.50843620300293
    8. '-y' → logprob: -13.00843620300293
    9. '+' → logprob: -13.88343620300293
    10. '.other' → logprob: -14.25843620300293

Token 222: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0031781906727701426
    2. ' other' → logprob: -5.753178119659424
    3. '(other' → logprob: -15.003178596496582
    4. 'Other' → logprob: -16.503177642822266
    5. '.other' → logprob: -16.503177642822266
    6. 'othe' → logprob: -17.378177642822266
    7. '_other' → logprob: -17.753177642822266
    8. 'y' → logprob: -18.753177642822266
    9. 'self' → logprob: -18.878177642822266
    10. ' ' → logprob: -19.128177642822266

Token 223: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0006017650011926889
    2. '.x' → logprob: -7.625601768493652
    3. 'y' → logprob: -9.375601768493652
    4. '.' → logprob: -11.250601768493652
    5. ')' → logprob: -11.500601768493652
    6. '-' → logprob: -12.375601768493652
    7. '-point' → logprob: -15.000601768493652
    8. 'Point' → logprob: -15.125601768493652
    9. 'point' → logprob: -15.375601768493652
    10. '```' → logprob: -16.375600814819336

Token 224: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -15.375000953674316
    4. '<|end|>' → logprob: -17.125
    5. ')return' → logprob: -17.125
    6. '   ' → logprob: -17.5
    7. '       ' → logprob: -17.875
    8. ')

' → logprob: -18.75
    9. '))' → logprob: -19.5
    10. ' ' → logprob: -19.625

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015398927964270115
    2. ')' → logprob: -5.015398979187012
    3. '<|end|>' → logprob: -5.265398979187012
    4. ':' → logprob: -6.640398979187012
    5. '*' → logprob: -7.390398979187012
    6. '    
' → logprob: -7.515398979187012
    7. '.' → logprob: -8.515398979187012
    8. ',' → logprob: -8.890398979187012
    9. 'def' → logprob: -9.265398979187012
    10. ' ' → logprob: -9.265398979187012

Token 226: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07009948790073395
    2. 'def' (adapté à ' def') → logprob: -2.6950995922088623
    3. ' def' → logprob: -9.570099830627441
    4. '    
' → logprob: -9.945099830627441
    5. ')' → logprob: -10.570099830627441
    6. '(' → logprob: -12.195099830627441
    7. '*' → logprob: -13.195099830627441
    8. '	def' → logprob: -13.195099830627441
    9. ' ' → logprob: -13.445099830627441
    10. '  ' → logprob: -13.445099830627441

Token 227: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1642899364233017
    2. ' __' → logprob: -1.914289951324463
    3. 'dot' → logprob: -5.664289951324463
    4. 'norm' → logprob: -8.789289474487305
    5. ' dot' → logprob: -8.914289474487305
    6. 'length' → logprob: -9.164289474487305
    7. 'distance' → logprob: -9.539289474487305
    8. 'def' → logprob: -10.539289474487305
    9. ' length' → logprob: -11.039289474487305
    10. ' norm' → logprob: -11.164289474487305

Token 228: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -4.60414821645827e-06
    2. 'tr' → logprob: -13.125004768371582
    3. 'lt' → logprob: -14.125004768371582
    4. 'abs' → logprob: -14.375004768371582
    5. 'rm' → logprob: -14.625004768371582
    6. 'neg' → logprob: -14.625004768371582
    7. 'mult' → logprob: -15.625004768371582
    8. 'eq' → logprob: -17.625003814697266
    9. ' mul' → logprob: -18.000003814697266
    10. 'mat' → logprob: -19.125003814697266

Token 229: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.012700467370450497
    2. '(self' → logprob: -4.51270055770874
    3. '__' → logprob: -6.76270055770874
    4. '__('' → logprob: -8.387700080871582
    5. '(' → logprob: -9.137700080871582
    6. '__(
' → logprob: -9.512700080871582
    7. '__(*' → logprob: -9.887700080871582
    8. '__((' → logprob: -10.887700080871582
    9. '<|end|>' → logprob: -12.012700080871582
    10. 'self' → logprob: -12.512700080871582

Token 230: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.591415437171236e-05
    2. '(self' → logprob: -9.875096321105957
    3. ' self' → logprob: -10.125096321105957
    4. '   ' → logprob: -13.625096321105957
    5. '0' → logprob: -14.125096321105957
    6. '
' → logprob: -14.750096321105957
    7. ' ' → logprob: -14.875096321105957
    8. '       ' → logprob: -15.000096321105957
    9. '<|end|>' → logprob: -15.125096321105957
    10. '...' → logprob: -15.625096321105957

Token 231: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.08324368298053741
    2. '__' → logprob: -3.7082436084747314
    3. '(self' → logprob: -3.7082436084747314
    4. ',' → logprob: -3.8332436084747314
    5. '__,' → logprob: -5.8332438468933105
    6. 'self' → logprob: -6.0832438468933105
    7. '__('' → logprob: -6.5832438468933105
    8. '__((' → logprob: -6.9582438468933105
    9. '__(*' → logprob: -7.5832438468933105
    10. ' (' → logprob: -7.8332438468933105

Token 232: ' k' (ID: 372)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3797672986984253
    2. 'other' → logprob: -1.5047672986984253
    3. ' self' → logprob: -2.754767417907715
    4. ' other' → logprob: -3.504767417907715
    5. 'scalar' → logprob: -9.129767417907715
    6. ' ' → logprob: -9.754767417907715
    7. ' scalar' → logprob: -10.004767417907715
    8. '(self' → logprob: -12.254767417907715
    9. 'Other' → logprob: -12.254767417907715
    10. '   ' → logprob: -12.629767417907715

Token 233: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010337610729038715
    2. ' :' → logprob: -7.751033782958984
    3. '<|end|>' → logprob: -8.126033782958984
    4. ')' → logprob: -8.501033782958984
    5. '<|end|>' → logprob: -10.001033782958984
    6. '):' → logprob: -10.001033782958984
    7. ',' → logprob: -12.751033782958984
    8. ' ' → logprob: -13.001033782958984
    9. ':int' → logprob: -13.126033782958984
    10. '  ' → logprob: -13.376033782958984

Token 234: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.07890906929969788
    2. ' float' → logprob: -2.578909158706665
    3. 'int' → logprob: -12.078908920288086
    4. '(float' → logprob: -12.078908920288086
    5. ''' → logprob: -12.453908920288086
    6. '	float' → logprob: -13.578908920288086
    7. '=float' → logprob: -13.953908920288086
    8. '<float' → logprob: -14.703908920288086
    9. ' ' → logprob: -14.828908920288086
    10. ')' → logprob: -15.078908920288086

Token 235: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34919071197509766
    2. '):' → logprob: -1.2241907119750977
    3. ':' → logprob: -7.724190711975098
    4. '):
' → logprob: -8.599190711975098
    5. '<|end|>' → logprob: -9.474190711975098
    6. '<|end|>' → logprob: -10.724190711975098
    7. '   ' → logprob: -12.474190711975098
    8. '):

' → logprob: -12.724190711975098
    9. '):
' → logprob: -12.849190711975098
    10. ')->' → logprob: -13.349190711975098

Token 236: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000510260637383908
    2. ')' → logprob: -8.250510215759277
    3. '):' → logprob: -9.000510215759277
    4. ' :' → logprob: -9.375510215759277
    5. '   ' → logprob: -11.125510215759277
    6. ':
' → logprob: -11.500510215759277
    7. ':return' → logprob: -11.875510215759277
    8. '<|end|>' → logprob: -13.250510215759277
    9. '**' → logprob: -13.625510215759277
    10. ' ->' → logprob: -13.750510215759277

Token 237: ' '' (ID: 461)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.47592562437057495
    2. ' Point' → logprob: -0.975925624370575
    3. ''' → logprob: -6.475925445556641
    4. ' '' → logprob: -8.22592544555664
    5. 'float' → logprob: -11.10092544555664
    6. '	Point' → logprob: -12.10092544555664
    7. '(Point' → logprob: -12.35092544555664
    8. ' ' → logprob: -12.35092544555664
    9. ' float' → logprob: -12.47592544555664
    10. '_Point' → logprob: -12.72592544555664

Token 238: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -7.107425062713446e-06
    2. ' Point' → logprob: -11.875006675720215
    3. '	Point' → logprob: -16.12500762939453
    4. '_Point' → logprob: -17.50000762939453
    5. '.Point' → logprob: -18.12500762939453
    6. '<Point' → logprob: -18.25000762939453
    7. '_point' → logprob: -18.25000762939453
    8. '(Point' → logprob: -19.00000762939453
    9. 'Points' → logprob: -19.87500762939453
    10. '-point' → logprob: -21.25000762939453

Token 239: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.3701972961425781
    2. ':' → logprob: -1.3701972961425781
    3. ''' → logprob: -3.620197296142578
    4. '):' → logprob: -3.620197296142578
    5. ':'' → logprob: -7.870197296142578
    6. '':
' → logprob: -7.995197296142578
    7. ')' → logprob: -8.245197296142578
    8. '':'' → logprob: -8.620197296142578
    9. '<|end|>' → logprob: -8.745197296142578
    10. '*' → logprob: -9.120197296142578

Token 240: '       ' (ID: 309)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.413146048784256
    2. '       ' → logprob: -1.1631460189819336
    3. ' Point' → logprob: -3.6631460189819336
    4. ' return' → logprob: -8.788146018981934
    5. 'return' → logprob: -9.538146018981934
    6. '   ' → logprob: -10.163146018981934
    7. '	Point' → logprob: -11.538146018981934
    8. '(Point' → logprob: -12.038146018981934
    9. '      ' → logprob: -14.413146018981934
    10. '_Point' → logprob: -14.913146018981934

Token 241: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -5.3596853831550106e-05
    2. ' Point' → logprob: -10.250053405761719
    3. 'return' (adapté à ' return') → logprob: -11.250053405761719
    4. '       ' → logprob: -12.250053405761719
    5. '   ' → logprob: -15.500053405761719
    6. ' return' → logprob: -16.00005340576172
    7. '	Point' → logprob: -17.12505340576172
    8. 'Return' → logprob: -17.62505340576172
    9. '(Point' → logprob: -17.62505340576172
    10. '_Point' → logprob: -19.12505340576172

Token 242: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0019287518225610256
    2. ' Point' → logprob: -6.251928806304932
    3. '	Point' → logprob: -16.251928329467773
    4. '(Point' → logprob: -18.001928329467773
    5. '.Point' → logprob: -19.376928329467773
    6. '_Point' → logprob: -19.501928329467773
    7. '<Point' → logprob: -20.501928329467773
    8. '   ' → logprob: -20.501928329467773
    9. 'Points' → logprob: -20.876928329467773
    10. '_point' → logprob: -21.501928329467773

Token 243: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -12.500003814697266
    3. 'self' → logprob: -15.375003814697266
    4. '(
' → logprob: -17.250003814697266
    5. '(s' → logprob: -17.500003814697266
    6. '(this' → logprob: -18.875003814697266
    7. ' (' → logprob: -21.500003814697266
    8. ' self' → logprob: -21.625003814697266
    9. '(sel' → logprob: -21.625003814697266
    10. '(int' → logprob: -21.875003814697266

Token 244: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -7.123899558791891e-05
    2. '.' → logprob: -9.62507152557373
    3. 'x' → logprob: -12.25007152557373
    4. ' .' → logprob: -15.37507152557373
    5. ' ' → logprob: -17.750070571899414
    6. '<|end|>' → logprob: -18.250070571899414
    7. ' x' → logprob: -18.625070571899414
    8. '   ' → logprob: -18.875070571899414
    9. 'self' → logprob: -18.875070571899414
    10. '	x' → logprob: -18.875070571899414

Token 245: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00032843282679095864
    2. '*' → logprob: -8.250328063964844
    3. '*k' → logprob: -9.625328063964844
    4. ' k' → logprob: -14.875328063964844
    5. '*self' → logprob: -14.875328063964844
    6. ' ' → logprob: -15.375328063964844
    7. ',' → logprob: -15.500328063964844
    8. 'k' → logprob: -18.125328063964844
    9. ')' → logprob: -18.375328063964844
    10. '*object' → logprob: -18.375328063964844

Token 246: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005233763717114925
    2. ' k' → logprob: -5.2552337646484375
    3. '	k' → logprob: -21.255233764648438
    4. '_k' → logprob: -23.255233764648438
    5. '{k' → logprob: -23.380233764648438
    6. ',k' → logprob: -24.005233764648438
    7. 'kx' → logprob: -24.130233764648438
    8. ' к' → logprob: -24.130233764648438
    9. '(k' → logprob: -24.255233764648438
    10. '*k' → logprob: -24.630233764648438

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.771655115589965e-05
    2. ' ,' → logprob: -11.125018119812012
    3. ')' → logprob: -13.125018119812012
    4. ',
' → logprob: -14.625018119812012
    5. '<|end|>' → logprob: -15.250018119812012
    6. ',

' → logprob: -16.500017166137695
    7. ',self' → logprob: -17.125017166137695
    8. ',k' → logprob: -17.375017166137695
    9. '<|end|>' → logprob: -18.000017166137695
    10. '.' → logprob: -18.500017166137695

Token 248: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.693149983882904
    2. 'self' → logprob: -0.693149983882904
    3. '	self' → logprob: -13.56814956665039
    4. ' ' → logprob: -14.56814956665039
    5. '       ' → logprob: -14.69314956665039
    6. '(self' → logprob: -15.81814956665039
    7. ' ' → logprob: -15.94314956665039
    8. '   ' → logprob: -17.31814956665039
    9. ' k' → logprob: -17.31814956665039
    10. '0' → logprob: -17.31814956665039

Token 249: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.3132803440093994
    2. 'y' → logprob: -1.3132803440093994
    3. ' y' → logprob: -11.68828010559082
    4. '.' → logprob: -12.06328010559082
    5. 'k' → logprob: -13.18828010559082
    6. '	y' → logprob: -13.68828010559082
    7. ' ' → logprob: -14.93828010559082
    8. '.x' → logprob: -15.31328010559082
    9. ')' → logprob: -15.56328010559082
    10. ',y' → logprob: -15.93828010559082

Token 250: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00016790216614026576
    2. '*' → logprob: -8.750167846679688
    3. '<|end|>' → logprob: -11.625167846679688
    4. ' ' → logprob: -15.375167846679688
    5. ')' → logprob: -15.875167846679688
    6. ' ' → logprob: -16.125167846679688
    7. '<|end|>' → logprob: -16.875167846679688
    8. '*k' → logprob: -17.250167846679688
    9. '*object' → logprob: -18.375167846679688
    10. ' **' → logprob: -18.375167846679688

Token 251: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011047814972698689
    2. ' k' → logprob: -4.511047840118408
    3. ')' → logprob: -18.63604736328125
    4. ' ' → logprob: -19.38604736328125
    5. '	k' → logprob: -19.38604736328125
    6. 'x' → logprob: -19.76104736328125
    7. 'kx' → logprob: -20.88604736328125
    8. '   ' → logprob: -21.51104736328125
    9. '_k' → logprob: -21.63604736328125
    10. '
' → logprob: -21.63604736328125

Token 252: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -15.500000953674316
    4. ')

' → logprob: -18.0
    5. '),' → logprob: -18.375
    6. '<|end|>' → logprob: -18.625
    7. '}' → logprob: -19.875
    8. ')}' → logprob: -20.5
    9. ').' → logprob: -20.75
    10. ')`' → logprob: -20.875

Token 253: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15462827682495117
    2. 'def' (adapté à ' def') → logprob: -2.279628276824951
    3. ' ' → logprob: -3.404628276824951
    4. ' def' → logprob: -5.404628276824951
    5. '  ' → logprob: -7.279628276824951
    6. '<|end|>' → logprob: -7.279628276824951
    7. '_' → logprob: -7.529628276824951
    8. ')' → logprob: -7.654628276824951
    9. '*' → logprob: -8.15462875366211
    10. '    ' → logprob: -9.02962875366211

Token 255: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5764201283454895
    2. ' __' → logprob: -0.8264201283454895
    3. '/__' → logprob: -8.201419830322266
    4. ' def' → logprob: -9.576419830322266
    5. 'def' → logprob: -9.826419830322266
    6. ' /' → logprob: -11.076419830322266
    7. 'mul' → logprob: -11.076419830322266
    8. ' _' → logprob: -11.826419830322266
    9. '```' → logprob: -11.826419830322266
    10. ' ' → logprob: -11.951419830322266

Token 256: 'rm' (ID: 21373)
  Prédit: 'rm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -0.07889088988304138
    2. 'tr' → logprob: -2.578890800476074
    3. 'mul' → logprob: -14.328890800476074
    4. 'tru' → logprob: -16.07889175415039
    5. 'flo' → logprob: -16.07889175415039
    6. 'imul' → logprob: -16.20389175415039
    7. 'rf' → logprob: -16.70389175415039
    8. '```' → logprob: -16.95389175415039
    9. ' rm' → logprob: -17.32889175415039
    10. ' tr' → logprob: -17.32889175415039

Token 257: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.771655115589965e-05
    2. 'ult' → logprob: -11.000018119812012
    3. '__' → logprob: -15.125018119812012
    4. 'ulit' → logprob: -15.250018119812012
    5. 'ultiply' → logprob: -15.625018119812012
    6. 'uls' → logprob: -15.875018119812012
    7. 'ulf' → logprob: -17.750017166137695
    8. 'ulp' → logprob: -18.000017166137695
    9. 'ull' → logprob: -18.125017166137695
    10. '_mul' → logprob: -18.250017166137695

Token 258: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004717295523732901
    2. '__(' → logprob: -5.3797173500061035
    3. '__('' → logprob: -9.754716873168945
    4. '__((' → logprob: -11.129716873168945
    5. '__(
' → logprob: -11.754716873168945
    6. '__(*' → logprob: -11.754716873168945
    7. '___' → logprob: -12.754716873168945
    8. '__("' → logprob: -13.379716873168945
    9. '__*/' → logprob: -13.504716873168945
    10. '__.__' → logprob: -13.629716873168945

Token 259: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015908108616713434
    2. ' self' → logprob: -8.75015926361084
    3. '(self' → logprob: -15.12515926361084
    4. 's' → logprob: -15.87515926361084
    5. '   ' → logprob: -17.000158309936523
    6. '
' → logprob: -17.250158309936523
    7. 'k' → logprob: -17.375158309936523
    8. '	self' → logprob: -17.625158309936523
    9. ' ' → logprob: -17.875158309936523
    10. ')' → logprob: -17.875158309936523

Token 260: ',' (ID: 11)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01959301345050335
    2. '__(' → logprob: -4.269593238830566
    3. '__,' → logprob: -5.644593238830566
    4. '__(*' → logprob: -6.644593238830566
    5. ',' → logprob: -8.269593238830566
    6. '__('' → logprob: -9.769593238830566
    7. '_' → logprob: -9.894593238830566
    8. '__((' → logprob: -10.019593238830566
    9. '__)' → logprob: -10.144593238830566
    10. ' __' → logprob: -10.769593238830566

Token 261: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.009833062067627907
    2. ' k' → logprob: -4.634832859039307
    3. '<|end|>' → logprob: -9.509833335876465
    4. 'self' → logprob: -13.259833335876465
    5. ' ' → logprob: -14.884833335876465
    6. '	k' → logprob: -15.384833335876465
    7. 'x' → logprob: -15.634833335876465
    8. '<|end|>' → logprob: -15.884833335876465
    9. ')' → logprob: -16.13483238220215
    10. 'K' → logprob: -16.38483238220215

Token 262: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026343729346990585
    2. '<|end|>' → logprob: -3.901343822479248
    3. ')' → logprob: -5.526343822479248
    4. '):' → logprob: -7.276343822479248
    5. '<|end|>' → logprob: -7.276343822479248
    6. ' :' → logprob: -7.901343822479248
    7. '=' → logprob: -10.77634334564209
    8. '):
' → logprob: -12.40134334564209
    9. ' )' → logprob: -12.52634334564209
    10. ' ' → logprob: -12.77634334564209

Token 263: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.07904258370399475
    2. ' float' → logprob: -2.579042673110962
    3. '<float' → logprob: -9.454042434692383
    4. '=float' → logprob: -10.204042434692383
    5. '(float' → logprob: -11.204042434692383
    6. '_float' → logprob: -12.079042434692383
    7. ',float' → logprob: -12.079042434692383
    8. '	float' → logprob: -12.579042434692383
    9. 'Float' → logprob: -12.704042434692383
    10. '<|end|>' → logprob: -12.829042434692383

Token 264: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ' )' → logprob: -12.875003814697266
    3. '):' → logprob: -14.250003814697266
    4. '')' → logprob: -16.000003814697266
    5. '):
' → logprob: -17.000003814697266
    6. ')->' → logprob: -18.375003814697266
    7. '   ' → logprob: -18.500003814697266
    8. '),' → logprob: -19.375003814697266
    9. ')
' → logprob: -19.500003814697266
    10. ')`' → logprob: -20.000003814697266

Token 265: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009080836549401283
    2. ' ->' → logprob: -5.38408088684082
    3. '->' → logprob: -5.50908088684082
    4. ')->' → logprob: -8.75908088684082
    5. ' )' → logprob: -9.38408088684082
    6. ':' → logprob: -10.13408088684082
    7. '   ' → logprob: -10.38408088684082
    8. ' ' → logprob: -10.75908088684082
    9. '(self' → logprob: -11.13408088684082
    10. 'self' → logprob: -11.50908088684082

Token 266: ' '' (ID: 461)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.36289259791374207
    2. ' '' → logprob: -1.8628926277160645
    3. 'Point' → logprob: -2.3628926277160645
    4. ''' → logprob: -2.9878926277160645
    5. ' self' → logprob: -6.1128926277160645
    6. 'self' → logprob: -6.2378926277160645
    7. ''s' → logprob: -8.987892150878906
    8. '(Point' → logprob: -9.737892150878906
    9. ' ' → logprob: -10.112892150878906
    10. '('' → logprob: -10.362892150878906

Token 267: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -9.729906196298543e-06
    2. ' Point' → logprob: -11.625009536743164
    3. '	Point' → logprob: -14.750009536743164
    4. '<Point' → logprob: -15.750009536743164
    5. '.Point' → logprob: -16.250009536743164
    6. '_Point' → logprob: -16.875009536743164
    7. '_point' → logprob: -17.000009536743164
    8. '(Point' → logprob: -17.625009536743164
    9. 'point' → logprob: -18.875009536743164
    10. '-point' → logprob: -19.000009536743164

Token 268: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.20256049931049347
    2. '':
' → logprob: -1.702560544013977
    3. ''' → logprob: -6.9525604248046875
    4. '':

' → logprob: -9.952560424804688
    5. '':
' → logprob: -10.077560424804688
    6. '):
' → logprob: -10.327560424804688
    7. '):' → logprob: -10.452560424804688
    8. ':
' → logprob: -11.077560424804688
    9. ':' → logprob: -11.452560424804688
    10. '':'' → logprob: -12.702560424804688

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002787359117064625
    2. 'return' → logprob: -8.25027847290039
    3. ' return' → logprob: -11.00027847290039
    4. '      ' → logprob: -15.37527847290039
    5. '	' → logprob: -15.75027847290039
    6. '   ' → logprob: -16.00027847290039
    7. '	return' → logprob: -16.62527847290039
    8. '        ' → logprob: -17.25027847290039
    9. '    ' → logprob: -17.37527847290039
    10. ')' → logprob: -17.50027847290039

Token 270: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0032200184650719166
    2. ' return' → logprob: -5.753220081329346
    3. '       ' → logprob: -10.753219604492188
    4. 'Point' → logprob: -11.378219604492188
    5. 'self' → logprob: -11.628219604492188
    6. '   ' → logprob: -15.003219604492188
    7. 'Return' → logprob: -16.128219604492188
    8. '	return' → logprob: -16.628219604492188
    9. ' Point' → logprob: -17.003219604492188
    10. '    ' → logprob: -18.378219604492188

Token 271: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11137210577726364
    2. ' self' → logprob: -2.6113719940185547
    3. 'Point' → logprob: -3.4863719940185547
    4. ' Point' → logprob: -6.611371994018555
    5. '(self' → logprob: -13.361371994018555
    6. '   ' → logprob: -14.861371994018555
    7. 'point' → logprob: -15.111371994018555
    8. ' ' → logprob: -15.236371994018555
    9. '	self' → logprob: -15.361371994018555
    10. '	Point' → logprob: -15.486371994018555

Token 272: ' *' (ID: 425)
  Prédit: '.__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.0005953280488029122
    2. '__' → logprob: -7.7505950927734375
    3. '*' → logprob: -8.750595092773438
    4. '.*' → logprob: -12.500595092773438
    5. ' *' → logprob: -13.500595092773438
    6. ' __' → logprob: -13.750595092773438
    7. '.' → logprob: -15.875595092773438
    8. '._' → logprob: -16.500595092773438
    9. '___' → logprob: -18.000595092773438
    10. '__.__' → logprob: -19.250595092773438

Token 273: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1472419600977446e-06
    2. ' k' → logprob: -13.750000953674316
    3. '	k' → logprob: -21.250001907348633
    4. 'kx' → logprob: -23.000001907348633
    5. '{k' → logprob: -24.000001907348633
    6. '_k' → logprob: -25.000001907348633
    7. '*k' → logprob: -25.125001907348633
    8. '(k' → logprob: -25.875001907348633
    9. '<|end|>' → logprob: -26.125001907348633
    10. ':k' → logprob: -26.250001907348633

Token 274: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45991894602775574
    2. '<|end|>' → logprob: -1.4599189758300781
    3. '
' → logprob: -2.209918975830078
    4. 'def' → logprob: -4.709918975830078
    5. '    
' → logprob: -5.084918975830078
    6. '\n' → logprob: -5.459918975830078
    7. ' def' → logprob: -6.459918975830078
    8. '<|end|>' → logprob: -6.834918975830078
    9. ' ' → logprob: -7.209918975830078
    10. '  
' → logprob: -7.209918975830078

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002536067273467779
    2. 'def' → logprob: -6.127536296844482
    3. '@property' → logprob: -8.502535820007324
    4. '.' → logprob: -9.627535820007324
    5. '<|end|>' → logprob: -10.752535820007324
    6. ')' → logprob: -11.252535820007324
    7. ' ' → logprob: -11.377535820007324
    8. ' def' → logprob: -11.377535820007324
    9. '(' → logprob: -11.627535820007324
    10. '    
' → logprob: -12.002535820007324

Token 276: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22684229910373688
    2. 'def' (adapté à ' def') → logprob: -1.6018422842025757
    3. '@property' → logprob: -7.226842403411865
    4. ' def' → logprob: -8.351841926574707
    5. ')' → logprob: -8.476841926574707
    6. '.' → logprob: -9.101841926574707
    7. '    
' → logprob: -9.601841926574707
    8. '@' → logprob: -10.726841926574707
    9. ' ' → logprob: -11.476841926574707
    10. '```' → logprob: -12.101841926574707

Token 277: ' __' (ID: 2516)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.5793226361274719
    2. 'length' → logprob: -1.5793225765228271
    3. 'dot' → logprob: -1.8293225765228271
    4. 'distance' → logprob: -3.329322576522827
    5. 'dist' → logprob: -4.079322814941406
    6. 'len' → logprob: -4.954322814941406
    7. 'abs' → logprob: -5.204322814941406
    8. '__' → logprob: -5.204322814941406
    9. 'def' → logprob: -6.454322814941406
    10. ' length' → logprob: -8.329322814941406

Token 278: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.00016063073417171836
    2. 'abs' → logprob: -8.875160217285156
    3. 'lt' → logprob: -11.750160217285156
    4. 'neg' → logprob: -11.750160217285156
    5. '```' → logprob: -13.750160217285156
    6. 'tru' → logprob: -14.000160217285156
    7. 'flo' → logprob: -14.125160217285156
    8. ' tr' → logprob: -14.750160217285156
    9. '``' → logprob: -15.000160217285156
    10. 'str' → logprob: -15.125160217285156

Token 279: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.006070048548281193
    2. 'ue' → logprob: -5.506070137023926
    3. 'u' → logprob: -6.381070137023926
    4. '__' → logprob: -8.756070137023926
    5. '/' → logprob: -9.881070137023926
    6. '```' → logprob: -10.131070137023926
    7. '
' → logprob: -11.756070137023926
    8. '_' → logprob: -12.256070137023926
    9. 'uet' → logprob: -12.256070137023926
    10. 'e' → logprob: -12.506070137023926

Token 280: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.004227508790791035
    2. '__' → logprob: -5.504227638244629
    3. 'div' → logprob: -9.004227638244629
    4. '__(' → logprob: -11.004227638244629
    5. 'IV' → logprob: -12.254227638244629
    6. 'v' → logprob: -13.879227638244629
    7. '_div' → logprob: -14.004227638244629
    8. '__/' → logprob: -14.629227638244629
    9. 'y' → logprob: -15.254227638244629
    10. '```' → logprob: -15.254227638244629

Token 281: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03098396398127079
    2. '(self' → logprob: -3.5309839248657227
    3. '(' → logprob: -6.905983924865723
    4. '__' → logprob: -8.530983924865723
    5. '_(' → logprob: -10.905983924865723
    6. '__(
' → logprob: -11.780983924865723
    7. 'self' → logprob: -13.155983924865723
    8. '__('' → logprob: -13.155983924865723
    9. ' (' → logprob: -13.655983924865723
    10. '__((' → logprob: -14.280983924865723

Token 282: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010422171326354146
    2. ' self' → logprob: -6.876042366027832
    3. '(self' → logprob: -12.126042366027832
    4. 'k' → logprob: -12.751042366027832
    5. '   ' → logprob: -14.501042366027832
    6. '	self' → logprob: -15.126042366027832
    7. ' ' → logprob: -16.626041412353516
    8. '       ' → logprob: -16.751041412353516
    9. '0' → logprob: -17.376041412353516
    10. ')' → logprob: -17.751041412353516

Token 283: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.48119667172431946
    2. '__(' → logprob: -1.106196641921997
    3. '(' → logprob: -3.231196641921997
    4. ' (' → logprob: -4.856196880340576
    5. 'self' → logprob: -5.981196880340576
    6. ',' → logprob: -7.731196880340576
    7. ')(' → logprob: -7.856196880340576
    8. ' ' → logprob: -8.731196403503418
    9. ')' → logprob: -9.231196403503418
    10. '<|end|>' → logprob: -9.356196403503418

Token 284: ' k' (ID: 372)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9496016502380371
    2. 'k' → logprob: -1.074601650238037
    3. ' self' → logprob: -1.449601650238037
    4. ' k' → logprob: -3.324601650238037
    5. '<|end|>' → logprob: -7.824601650238037
    6. ' ' → logprob: -8.449602127075195
    7. ')' → logprob: -8.824602127075195
    8. '(self' → logprob: -9.699602127075195
    9. 'x' → logprob: -10.074602127075195
    10. '```' → logprob: -10.199602127075195

Token 285: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001529024913907051
    2. ' :' → logprob: -6.626529216766357
    3. '):' → logprob: -9.2515287399292
    4. '<|end|>' → logprob: -9.5015287399292
    5. ')' → logprob: -10.5015287399292
    6. '<|end|>' → logprob: -13.1265287399292
    7. ':return' → logprob: -14.1265287399292
    8. ' ):' → logprob: -14.8765287399292
    9. ' ' → logprob: -14.8765287399292
    10. '```' → logprob: -15.6265287399292

Token 286: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.029753033071756363
    2. ' float' → logprob: -3.5297529697418213
    3. '(float' → logprob: -13.029752731323242
    4. '=float' → logprob: -16.029752731323242
    5. '	float' → logprob: -16.029752731323242
    6. '<float' → logprob: -17.154752731323242
    7. ' ' → logprob: -17.154752731323242
    8. ',float' → logprob: -17.529752731323242
    9. '```' → logprob: -17.904752731323242
    10. '_float' → logprob: -18.654752731323242

Token 287: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016081178560853004
    2. '):' → logprob: -4.1410813331604
    3. ':' → logprob: -10.266080856323242
    4. '):
' → logprob: -11.641080856323242
    5. ')->' → logprob: -13.266080856323242
    6. ' )' → logprob: -14.641080856323242
    7. '):

' → logprob: -15.516080856323242
    8. '   ' → logprob: -15.516080856323242
    9. '):
' → logprob: -15.766080856323242
    10. ').' → logprob: -16.266080856323242

Token 288: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034540721680969
    2. ')' → logprob: -6.378454208374023
    3. '->' → logprob: -7.003454208374023
    4. ' ->' → logprob: -7.253454208374023
    5. ' :' → logprob: -9.628454208374023
    6. ')->' → logprob: -10.253454208374023
    7. '):' → logprob: -10.628454208374023
    8. '   ' → logprob: -12.503454208374023
    9. ':
' → logprob: -12.878454208374023
    10. ':return' → logprob: -13.878454208374023

Token 289: ' '' (ID: 461)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.28174224495887756
    2. ' Point' → logprob: -1.5317422151565552
    3. ''' → logprob: -4.781742095947266
    4. 'float' → logprob: -5.156742095947266
    5. 'k' → logprob: -5.406742095947266
    6. ' '' → logprob: -5.531742095947266
    7. ' k' → logprob: -5.906742095947266
    8. ' float' → logprob: -6.156742095947266
    9. '(Point' → logprob: -6.906742095947266
    10. ' ' → logprob: -7.781742095947266

Token 290: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.173704271830502e-06
    2. ' Point' → logprob: -12.75000286102295
    3. '	Point' → logprob: -16.000003814697266
    4. 'float' → logprob: -17.625003814697266
    5. '_point' → logprob: -18.625003814697266
    6. '_Point' → logprob: -19.000003814697266
    7. '.Point' → logprob: -19.125003814697266
    8. '(Point' → logprob: -19.500003814697266
    9. '<Point' → logprob: -19.625003814697266
    10. 'Points' → logprob: -20.625003814697266

Token 291: '':
' (ID: 7669)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12825755774974823
    2. ')' → logprob: -2.2532575130462646
    3. ':' → logprob: -4.628257751464844
    4. ''):' → logprob: -6.378257751464844
    5. '':' → logprob: -6.628257751464844
    6. '):
' → logprob: -6.753257751464844
    7. '')' → logprob: -7.378257751464844
    8. '   ' → logprob: -8.378257751464844
    9. '<|end|>' → logprob: -9.003257751464844
    10. '       ' → logprob: -9.253257751464844

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011707604862749577
    2. 'return' → logprob: -4.511707782745361
    3. ' return' → logprob: -7.386707782745361
    4. 'Point' → logprob: -10.636707305908203
    5. '   ' → logprob: -11.261707305908203
    6. ' Point' → logprob: -12.886707305908203
    7. '	return' → logprob: -15.386707305908203
    8. '      ' → logprob: -16.261707305908203
    9. ':return' → logprob: -16.511707305908203
    10. ' ' → logprob: -16.761707305908203

Token 293: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015076994895935059
    2. 'Point' → logprob: -4.265077114105225
    3. '       ' → logprob: -7.015077114105225
    4. ' return' → logprob: -11.265076637268066
    5. '   ' → logprob: -13.265076637268066
    6. ' Point' → logprob: -15.765076637268066
    7. 'if' → logprob: -16.140077590942383
    8. '	return' → logprob: -16.765077590942383
    9. 'assert' → logprob: -17.015077590942383
    10. 'Return' → logprob: -17.140077590942383

Token 294: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.03830919787287712
    2. ' Point' → logprob: -3.288309097290039
    3. 'self' → logprob: -8.288309097290039
    4. ' self' → logprob: -11.163309097290039
    5. '	Point' → logprob: -13.538309097290039
    6. ' ' → logprob: -15.163309097290039
    7. '(Point' → logprob: -15.538309097290039
    8. '_Point' → logprob: -16.03830909729004
    9. '   ' → logprob: -16.53830909729004
    10. '_point' → logprob: -16.91330909729004

Token 295: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -12.250008583068848
    3. 'self' → logprob: -12.500008583068848
    4. '(
' → logprob: -16.625009536743164
    5. ' self' → logprob: -19.625009536743164
    6. '[self' → logprob: -20.375009536743164
    7. ' (' → logprob: -20.500009536743164
    8. '(this' → logprob: -20.500009536743164
    9. '=self' → logprob: -20.750009536743164
    10. '	self' → logprob: -20.875009536743164

Token 296: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.001199158956296742
    2. '.' → logprob: -6.751199245452881
    3. 'x' → logprob: -10.501198768615723
    4. ' .' → logprob: -14.251198768615723
    5. ').' → logprob: -15.626198768615723
    6. '<|end|>' → logprob: -16.00119972229004
    7. '._' → logprob: -16.25119972229004
    8. '[' → logprob: -16.62619972229004
    9. 'self' → logprob: -16.62619972229004
    10. ')' → logprob: -16.75119972229004

Token 297: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4740792512893677
    2. '/' → logprob: -0.9740792512893677
    3. '/k' → logprob: -13.349079132080078
    4. ' ' → logprob: -15.224079132080078
    5. ')' → logprob: -15.974079132080078
    6. ',' → logprob: -16.599079132080078
    7. '[' → logprob: -17.224079132080078
    8. ' ' → logprob: -17.349079132080078
    9. '   ' → logprob: -17.724079132080078
    10. ' /
' → logprob: -18.474079132080078

Token 298: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0024756586644798517
    2. ' k' → logprob: -6.002475738525391
    3. '	k' → logprob: -20.62747573852539
    4. 'kx' → logprob: -22.75247573852539
    5. '{k' → logprob: -22.75247573852539
    6. '_k' → logprob: -23.12747573852539
    7. ' к' → logprob: -23.25247573852539
    8. '   ' → logprob: -24.25247573852539
    9. ',k' → logprob: -24.37747573852539
    10. '"k' → logprob: -24.50247573852539

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. ' ,' → logprob: -12.375004768371582
    3. ')' → logprob: -16.500003814697266
    4. ',k' → logprob: -16.750003814697266
    5. ',
' → logprob: -18.375003814697266
    6. ' ' → logprob: -19.750003814697266
    7. '   ' → logprob: -19.750003814697266
    8. ',self' → logprob: -20.625003814697266
    9. ',y' → logprob: -21.000003814697266
    10. ',

' → logprob: -21.625003814697266

Token 300: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011049704626202583
    2. ' self' → logprob: -4.511049747467041
    3. '       ' → logprob: -13.886049270629883
    4. '   ' → logprob: -14.761049270629883
    5. '	self' → logprob: -15.261049270629883
    6. ' ' → logprob: -15.511049270629883
    7. '  ' → logprob: -17.511049270629883
    8. '(self' → logprob: -17.636049270629883
    9. '    ' → logprob: -18.011049270629883
    10. '           ' → logprob: -18.386049270629883

Token 301: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0062799942679703236
    2. 'y' → logprob: -5.131279945373535
    3. '.' → logprob: -8.006279945373535
    4. ')' → logprob: -12.131279945373535
    5. ' y' → logprob: -12.756279945373535
    6. '.x' → logprob: -12.756279945373535
    7. ' ' → logprob: -13.506279945373535
    8. 'Y' → logprob: -14.006279945373535
    9. ' .' → logprob: -14.256279945373535
    10. ',y' → logprob: -14.506279945373535

Token 302: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.20376178622245789
    2. '/' → logprob: -1.7037618160247803
    3. ')' → logprob: -6.203761577606201
    4. ' *' → logprob: -8.95376205444336
    5. '*' → logprob: -9.70376205444336
    6. 'y' → logprob: -10.32876205444336
    7. ' y' → logprob: -10.57876205444336
    8. ' ' → logprob: -10.70376205444336
    9. '/k' → logprob: -10.82876205444336
    10. ',' → logprob: -11.20376205444336

Token 303: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.7697225252486533e-06
    2. ' k' → logprob: -12.500003814697266
    3. '   ' → logprob: -22.875003814697266
    4. ' ' → logprob: -23.625003814697266
    5. 'kx' → logprob: -23.625003814697266
    6. 'float' → logprob: -23.750003814697266
    7. '	k' → logprob: -24.125003814697266
    8. 'self' → logprob: -24.500003814697266
    9. ' к' → logprob: -25.125003814697266
    10. '  ' → logprob: -25.125003814697266

Token 304: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -13.625000953674316
    3. ' )' → logprob: -17.375001907348633
    4. ')

' → logprob: -18.000001907348633
    5. '   ' → logprob: -18.250001907348633
    6. '<|end|>' → logprob: -19.125001907348633
    7. '}' → logprob: -19.375001907348633
    8. ')#' → logprob: -20.000001907348633
    9. ')return' → logprob: -20.250001907348633
    10. '),' → logprob: -20.750001907348633

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00029065259150229394
    2. 'def' → logprob: -8.500290870666504
    3. '    
' → logprob: -9.750290870666504
    4. '(' → logprob: -12.000290870666504
    5. '
' → logprob: -12.250290870666504
    6. '```' → logprob: -12.250290870666504
    7. ')' → logprob: -12.375290870666504
    8. '@property' → logprob: -12.750290870666504
    9. ' def' → logprob: -13.500290870666504
    10. ':' → logprob: -13.875290870666504

Token 306: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01997612975537777
    2. '   ' → logprob: -4.0199761390686035
    3. '@property' → logprob: -6.3949761390686035
    4. ' def' → logprob: -9.144975662231445
    5. '    
' → logprob: -10.894975662231445
    6. '@' → logprob: -11.269975662231445
    7. ')' → logprob: -12.644975662231445
    8. '	def' → logprob: -12.894975662231445
    9. ':' → logprob: -13.144975662231445
    10. ' ' → logprob: -13.269975662231445

Token 307: ' __' (ID: 2516)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.5689916610717773
    2. 'dot' → logprob: -1.3189916610717773
    3. 'abs' → logprob: -2.1939916610717773
    4. 'length' → logprob: -3.0689916610717773
    5. 'distance' → logprob: -5.318991661071777
    6. 'dist' → logprob: -5.943991661071777
    7. 'len' → logprob: -7.318991661071777
    8. 'def' → logprob: -9.068991661071777
    9. ' norm' → logprob: -9.443991661071777
    10. 'm' → logprob: -9.568991661071777

Token 308: 'lt' (ID: 3199)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.1397700309753418
    2. 'lt' → logprob: -2.139770030975342
    3. 'abs' → logprob: -4.389770030975342
    4. 'flo' → logprob: -8.6397705078125
    5. 'pos' → logprob: -9.3897705078125
    6. 'pow' → logprob: -10.0147705078125
    7. 'tr' → logprob: -11.0147705078125
    8. 'le' → logprob: -11.5147705078125
    9. 'mod' → logprob: -12.2647705078125
    10. 'getitem' → logprob: -12.5147705078125

Token 309: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00044795009307563305
    2. '__' → logprob: -7.750447750091553
    3. '(self' → logprob: -11.125448226928711
    4. '__('' → logprob: -13.750448226928711
    5. '__(
' → logprob: -13.875448226928711
    6. '__((' → logprob: -15.500448226928711
    7. '_(' → logprob: -15.875448226928711
    8. '(' → logprob: -15.875448226928711
    9. '__("' → logprob: -17.25044822692871
    10. '__(*' → logprob: -17.50044822692871

Token 310: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.1888679839321412e-05
    2. ' self' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.750021934509277
    4. '(self' → logprob: -16.37502098083496
    5. '       ' → logprob: -17.00002098083496
    6. ' ' → logprob: -17.12502098083496
    7. '0' → logprob: -17.62502098083496
    8. '
' → logprob: -18.00002098083496
    9. ')' → logprob: -18.12502098083496
    10. 's' → logprob: -18.37502098083496

Token 311: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.9050226807594299
    2. 'self' → logprob: -1.0300226211547852
    3. ',' → logprob: -1.9050226211547852
    4. '__(' → logprob: -2.530022621154785
    5. '(' → logprob: -5.280022621154785
    6. ' (' → logprob: -5.655022621154785
    7. ' self' → logprob: -7.655022621154785
    8. ')' → logprob: -8.530022621154785
    9. ')(' → logprob: -9.280022621154785
    10. '__' → logprob: -9.405022621154785

Token 312: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009680774062871933
    2. ' self' → logprob: -5.00968074798584
    3. 'other' → logprob: -5.88468074798584
    4. ' other' → logprob: -8.63468074798584
    5. ' ' → logprob: -14.50968074798584
    6. '   ' → logprob: -14.88468074798584
    7. 'Other' → logprob: -15.75968074798584
    8. '(self' → logprob: -15.88468074798584
    9. ')' → logprob: -16.259681701660156
    10. '0' → logprob: -17.134681701660156

Token 313: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00040993880247697234
    2. ')' → logprob: -8.375410079956055
    3. ' :' → logprob: -9.125410079956055
    4. '):' → logprob: -9.875410079956055
    5. ',' → logprob: -11.375410079956055
    6. '<|end|>' → logprob: -13.125410079956055
    7. '')' → logprob: -13.875410079956055
    8. '   ' → logprob: -14.125410079956055
    9. '=' → logprob: -15.125410079956055
    10. '<Point' → logprob: -15.125410079956055

Token 314: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2520541548728943
    2. ' '' → logprob: -1.502054214477539
    3. ')' → logprob: -10.502054214477539
    4. 'object' → logprob: -10.627054214477539
    5. 'Point' → logprob: -10.752054214477539
    6. ' ' → logprob: -10.752054214477539
    7. '')' → logprob: -12.002054214477539
    8. '<Point' → logprob: -12.752054214477539
    9. ' object' → logprob: -13.002054214477539
    10. ' Point' → logprob: -13.127054214477539

Token 315: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -2.47495681833243e-05
    2. ' Point' → logprob: -10.625024795532227
    3. '	Point' → logprob: -16.375024795532227
    4. '.Point' → logprob: -17.000024795532227
    5. ' ' → logprob: -17.625024795532227
    6. ')' → logprob: -17.750024795532227
    7. ''' → logprob: -17.750024795532227
    8. '_point' → logprob: -17.875024795532227
    9. '<Point' → logprob: -17.875024795532227
    10. '_Point' → logprob: -17.875024795532227

Token 316: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.038049064576625824
    2. ')' → logprob: -3.2880489826202393
    3. ''' → logprob: -12.53804874420166
    4. '")' → logprob: -13.03804874420166
    5. ''):
' → logprob: -14.41304874420166
    6. ')'' → logprob: -14.91304874420166
    7. ':' → logprob: -15.03804874420166
    8. ' ')' → logprob: -15.41304874420166
    9. '`)' → logprob: -15.91304874420166
    10. ''):' → logprob: -16.288049697875977

Token 317: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0878651812672615
    2. '->' → logprob: -3.212865114212036
    3. ':' → logprob: -3.837865114212036
    4. ' ->' → logprob: -4.087865352630615
    5. '       ' → logprob: -5.962865352630615
    6. '   ' → logprob: -6.087865352630615
    7. 'self' → logprob: -8.337864875793457
    8. ')->' → logprob: -9.087864875793457
    9. ' :' → logprob: -9.712864875793457
    10. '(self' → logprob: -9.712864875793457

Token 318: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0036105208564549685
    2. ' bool' → logprob: -5.628610610961914
    3. ' ' → logprob: -12.503610610961914
    4. '   ' → logprob: -13.378610610961914
    5. '<bool' → logprob: -13.503610610961914
    6. '  ' → logprob: -13.878610610961914
    7. '	bool' → logprob: -14.003610610961914
    8. ''' → logprob: -14.253610610961914
    9. 'True' → logprob: -14.878610610961914
    10. '```' → logprob: -15.503610610961914

Token 319: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001068654702976346
    2. '):' → logprob: -7.251068592071533
    3. ':
' → logprob: -8.126069068908691
    4. '():' → logprob: -10.876069068908691
    5. ')' → logprob: -11.126069068908691
    6. '   ' → logprob: -12.001069068908691
    7. '):
' → logprob: -12.126069068908691
    8. '       ' → logprob: -12.126069068908691
    9. ' :' → logprob: -12.751069068908691
    10. '<|end|>' → logprob: -12.751069068908691

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07369818538427353
    2. 'return' → logprob: -2.6986982822418213
    3. 'if' → logprob: -6.573698043823242
    4. '   ' → logprob: -6.823698043823242
    5. 'self' → logprob: -7.198698043823242
    6. ' return' → logprob: -7.698698043823242
    7. ' if' → logprob: -10.448698043823242
    8. '	return' → logprob: -10.698698043823242
    9. '(self' → logprob: -12.823698043823242
    10. '           ' → logprob: -13.073698043823242

Token 321: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4777323007583618
    2. 'if' → logprob: -0.9777323007583618
    3. '       ' → logprob: -5.727732181549072
    4. ' return' → logprob: -8.97773265838623
    5. ' if' → logprob: -8.97773265838623
    6. 'self' → logprob: -9.97773265838623
    7. '	return' → logprob: -10.22773265838623
    8. '(self' → logprob: -10.85273265838623
    9. '   ' → logprob: -11.10273265838623
    10. '	if' → logprob: -11.97773265838623

Token 322: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003951117396354675
    2. 'self' → logprob: -5.628951072692871
    3. ' (' → logprob: -8.253951072692871
    4. '(s' → logprob: -10.253951072692871
    5. '(x' → logprob: -10.378951072692871
    6. '   ' → logprob: -11.878951072692871
    7. ' self' → logprob: -12.378951072692871
    8. '
' → logprob: -13.253951072692871
    9. '(abs' → logprob: -13.253951072692871
    10. '(this' → logprob: -13.503951072692871

Token 323: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0059304554015398026
    2. '.y' → logprob: -5.130930423736572
    3. '.' → logprob: -14.13093090057373
    4. 'x' → logprob: -14.25593090057373
    5. '.s' → logprob: -15.75593090057373
    6. 'y' → logprob: -16.505929946899414
    7. '.t' → logprob: -16.505929946899414
    8. '.to' → logprob: -17.130929946899414
    9. ' .' → logprob: -17.380929946899414
    10. '(x' → logprob: -17.880929946899414

Token 324: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.023575622588396072
    2. ' <' → logprob: -3.7735755443573
    3. ',' → logprob: -8.273575782775879
    4. '>' → logprob: -11.523575782775879
    5. '==' → logprob: -11.648575782775879
    6. '<int' → logprob: -12.273575782775879
    7. '<com' → logprob: -12.273575782775879
    8. ' ' → logprob: -12.523575782775879
    9. '[' → logprob: -12.648575782775879
    10. '!=' → logprob: -12.773575782775879

Token 325: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.000553151941858232
    2. ' other' → logprob: -7.500553131103516
    3. '(other' → logprob: -16.625553131103516
    4. '.other' → logprob: -18.500553131103516
    5. '_other' → logprob: -19.875553131103516
    6. 'Other' → logprob: -20.000553131103516
    7. 'self' → logprob: -20.000553131103516
    8. 'othe' → logprob: -20.500553131103516
    9. '   ' → logprob: -20.875553131103516
    10. '       ' → logprob: -21.625553131103516

Token 326: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0024977754801511765
    2. '.' → logprob: -6.002497673034668
    3. 'y' → logprob: -10.877497673034668
    4. '.x' → logprob: -12.877497673034668
    5. ' .' → logprob: -14.627497673034668
    6. '.other' → logprob: -16.002498626708984
    7. '.point' → logprob: -17.627498626708984
    8. '.
' → logprob: -17.752498626708984
    9. ').' → logprob: -18.127498626708984
    10. '.s' → logprob: -18.127498626708984

Token 327: ' \
' (ID: 6814)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.25547903776168823
    2. ' or' → logprob: -1.505479097366333
    3. 'if' → logprob: -5.755478858947754
    4. ' if' → logprob: -8.255478858947754
    5. '<|end|>' → logprob: -9.755478858947754
    6. 'and' → logprob: -10.755478858947754
    7. '	or' → logprob: -10.880478858947754
    8. '       ' → logprob: -12.380478858947754
    9. '   ' → logprob: -12.505478858947754
    10. ' ' → logprob: -12.630478858947754

Token 328: '           ' (ID: 352)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.13294486701488495
    2. 'if' → logprob: -2.3829448223114014
    3. ' or' → logprob: -3.5079448223114014
    4. ' if' → logprob: -6.1329450607299805
    5. '	or' → logprob: -10.25794506072998
    6. '   ' → logprob: -10.88294506072998
    7. '       ' → logprob: -11.63294506072998
    8. ' ' → logprob: -11.75794506072998
    9. '           ' → logprob: -12.75794506072998
    10. 'and' → logprob: -13.25794506072998

Token 329: ' if' (ID: 538)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.07799142599105835
    2. 'if' (adapté à ' if') → logprob: -2.827991485595703
    3. ' or' → logprob: -4.202991485595703
    4. ' if' → logprob: -7.202991485595703
    5. '           ' → logprob: -8.827991485595703
    6. '       ' → logprob: -10.952991485595703
    7. ' ' → logprob: -11.202991485595703
    8. '   ' → logprob: -11.952991485595703
    9. '	or' → logprob: -12.077991485595703
    10. '-' → logprob: -12.452991485595703

Token 330: ' abs' (ID: 8443)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.006473306100815535
    2. ' not' → logprob: -5.131473541259766
    3. 'float' → logprob: -7.881473541259766
    4. '!' → logprob: -9.631473541259766
    5. '   ' → logprob: -10.006473541259766
    6. 'self' → logprob: -10.256473541259766
    7. '(not' → logprob: -11.631473541259766
    8. '       ' → logprob: -13.006473541259766
    9. '
' → logprob: -13.381473541259766
    10. ' float' → logprob: -13.631473541259766

Token 331: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.500001907348633
    3. 'self' → logprob: -15.375001907348633
    4. '(s' → logprob: -16.375001907348633
    5. '((' → logprob: -16.875001907348633
    6. '(other' → logprob: -17.375001907348633
    7. '(
' → logprob: -18.375001907348633
    8. '(sel' → logprob: -18.625001907348633
    9. '[self' → logprob: -18.750001907348633
    10. '=self' → logprob: -19.250001907348633

Token 332: '.x' (ID: 3700)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0030837133526802063
    2. '.y' → logprob: -5.8780837059021
    3. '(y' → logprob: -8.628084182739258
    4. '(' → logprob: -9.378084182739258
    5. 'self' → logprob: -12.378084182739258
    6. '(s' → logprob: -12.753084182739258
    7. 'y' → logprob: -13.253084182739258
    8. '[self' → logprob: -13.253084182739258
    9. '.' → logprob: -13.503084182739258
    10. '(other' → logprob: -13.628084182739258

Token 333: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029790882021188736
    2. ' -' → logprob: -3.5297908782958984
    3. '-other' → logprob: -10.654790878295898
    4. ' ' → logprob: -11.279790878295898
    5. 'other' → logprob: -13.279790878295898
    6. ')' → logprob: -14.154790878295898
    7. '(other' → logprob: -14.654790878295898
    8. '(' → logprob: -14.904790878295898
    9. '-self' → logprob: -15.029790878295898
    10. '   ' → logprob: -15.404790878295898

Token 334: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0007105246186256409
    2. ' other' → logprob: -7.250710487365723
    3. '0' → logprob: -15.500710487365723
    4. '(other' → logprob: -15.625710487365723
    5. 'self' → logprob: -15.875710487365723
    6. 'Other' → logprob: -16.75071144104004
    7. '   ' → logprob: -17.75071144104004
    8. ' ' → logprob: -18.25071144104004
    9. '.other' → logprob: -18.25071144104004
    10. '_other' → logprob: -18.50071144104004

Token 335: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -7.822646693966817e-06
    2. '.' → logprob: -11.875007629394531
    3. 'x' → logprob: -14.875007629394531
    4. ')' → logprob: -15.625007629394531
    5. ' ' → logprob: -16.75000762939453
    6. '<|end|>' → logprob: -16.87500762939453
    7. '[' → logprob: -17.00000762939453
    8. ').' → logprob: -17.37500762939453
    9. '.y' → logprob: -18.00000762939453
    10. ' .' → logprob: -18.37500762939453

Token 336: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007582136429846287
    2. ')<' → logprob: -5.632582187652588
    3. ')>' → logprob: -5.632582187652588
    4. ' )' → logprob: -8.25758171081543
    5. ')>=' → logprob: -9.00758171081543
    6. '>' → logprob: -11.88258171081543
    7. ')<=' → logprob: -13.00758171081543
    8. ' >' → logprob: -14.00758171081543
    9. '<' → logprob: -14.38258171081543
    10. ' ' → logprob: -15.25758171081543

Token 337: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.21924415230751038
    2. ' >' → logprob: -2.2192442417144775
    3. '>=' → logprob: -2.8442442417144775
    4. ' >=' → logprob: -3.5942442417144775
    5. '<' → logprob: -6.219244003295898
    6. ' <' → logprob: -7.594244003295898
    7. 'else' → logprob: -12.219244003295898
    8. ' ' → logprob: -12.469244003295898
    9. '<=' → logprob: -12.719244003295898
    10. ')' → logprob: -13.094244003295898

Token 338: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -1.7120533811976202e-05
    2. '1' → logprob: -11.250017166137695
    3. ' EPS' → logprob: -12.500017166137695
    4. 'EP' → logprob: -15.875017166137695
    5. 'eps' → logprob: -16.625017166137695
    6. '   ' → logprob: -16.875017166137695
    7. ' ' → logprob: -17.375017166137695
    8. 'ESP' → logprob: -18.125017166137695
    9. 'EPT' → logprob: -18.500017166137695
    10. '0' → logprob: -18.750017166137695

Token 339: ' \
' (ID: 6814)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.011050889268517494
    2. ' else' → logprob: -4.511050701141357
    3. '       ' → logprob: -13.761051177978516
    4. 'and' → logprob: -14.261051177978516
    5. '           ' → logprob: -14.886051177978516
    6. '\
' → logprob: -15.386051177978516
    7. '        ' → logprob: -15.511051177978516
    8. '==' → logprob: -16.011051177978516
    9. '	else' → logprob: -16.261051177978516
    10. 'els' → logprob: -16.386051177978516

Token 340: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.014173506759107113
    2. ' else' → logprob: -4.26417350769043
    3. '       ' → logprob: -12.01417350769043
    4. '           ' → logprob: -13.51417350769043
    5. '	else' → logprob: -13.88917350769043
    6. 'and' → logprob: -14.88917350769043
    7. '        ' → logprob: -14.88917350769043
    8. 'or' → logprob: -15.51417350769043
    9. ' or' → logprob: -16.01417350769043
    10. ',' → logprob: -16.51417350769043

Token 341: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.00671809446066618
    2. ' else' → logprob: -5.006718158721924
    3. '           ' → logprob: -13.631717681884766
    4. '       ' → logprob: -14.506717681884766
    5. '	else' → logprob: -14.756717681884766
    6. 'and' → logprob: -15.881717681884766
    7. 'els' → logprob: -16.506717681884766
    8. '        ' → logprob: -16.506717681884766
    9. 'or' → logprob: -16.631717681884766
    10. '          ' → logprob: -17.256717681884766

Token 342: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018006093159783632
    2. ' self' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.0001802444458
    4. '(self' → logprob: -16.250179290771484
    5. ' ' → logprob: -17.000179290771484
    6. '  ' → logprob: -17.125179290771484
    7. '	self' → logprob: -17.125179290771484
    8. 'abs' → logprob: -17.875179290771484
    9. '           ' → logprob: -18.625179290771484
    10. '       ' → logprob: -19.250179290771484

Token 343: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0003886086633428931
    2. 'x' → logprob: -7.8753886222839355
    3. '.' → logprob: -12.375388145446777
    4. '<x' → logprob: -12.750388145446777
    5. '<|end|>' → logprob: -13.625388145446777
    6. ' x' → logprob: -17.625389099121094
    7. '<' → logprob: -17.625389099121094
    8. '<|end|>' → logprob: -18.000389099121094
    9. '	x' → logprob: -18.125389099121094
    10. 'Point' → logprob: -18.250389099121094

Token 344: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.029786596074700356
    2. '<' → logprob: -3.5297865867614746
    3. '<|end|>' → logprob: -10.904787063598633
    4. '<x' → logprob: -12.029787063598633
    5. '<class' → logprob: -12.904787063598633
    6. ' >' → logprob: -13.404787063598633
    7. ' ' → logprob: -13.654787063598633
    8. '[' → logprob: -13.904787063598633
    9. '<int' → logprob: -14.779787063598633
    10. ',' → logprob: -14.904787063598633

Token 345: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0067154900170862675
    2. ' other' → logprob: -5.006715297698975
    3. '(other' → logprob: -16.256715774536133
    4. '.other' → logprob: -18.381715774536133
    5. 'Other' → logprob: -19.381715774536133
    6. '   ' → logprob: -19.881715774536133
    7. '_other' → logprob: -20.881715774536133
    8. ' ' → logprob: -21.506715774536133
    9. '其他' → logprob: -22.256715774536133
    10. 'self' → logprob: -22.256715774536133

Token 346: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00021784115233458579
    2. 'x' → logprob: -8.75021743774414
    3. '.' → logprob: -9.75021743774414
    4. ' .' → logprob: -14.12521743774414
    5. '<|end|>' → logprob: -16.37521743774414
    6. '```' → logprob: -17.12521743774414
    7. '.y' → logprob: -17.12521743774414
    8. '<x' → logprob: -17.62521743774414
    9. ' x' → logprob: -18.12521743774414
    10. '[' → logprob: -18.25021743774414

Token 347: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 348: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3076028823852539
    2. '<|end|>' → logprob: -1.932602882385254
    3. '   ' → logprob: -2.432602882385254
    4. ')' → logprob: -3.682602882385254
    5. ' def' → logprob: -5.307602882385254
    6. ':' → logprob: -7.557602882385254
    7. '(' → logprob: -8.307602882385254
    8. ' ' → logprob: -8.307602882385254
    9. '#' → logprob: -8.432602882385254
    10. '.' → logprob: -8.557602882385254

Token 350: ' norm' (ID: 7882)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.7596975564956665
    2. '__' → logprob: -1.0096975564956665
    3. 'dist' → logprob: -2.009697437286377
    4. 'hash' → logprob: -5.134697437286377
    5. 'cross' → logprob: -5.134697437286377
    6. 'y' → logprob: -5.384697437286377
    7. 'norm' → logprob: -5.509697437286377
    8. 'len' → logprob: -5.759697437286377
    9. 'abs' → logprob: -6.134697437286377
    10. 'angle' → logprob: -6.509697437286377

Token 351: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014544015284627676
    2. '(' → logprob: -6.8764543533325195
    3. '()' → logprob: -8.12645435333252
    4. '()(' → logprob: -9.87645435333252
    5. '(s' → logprob: -10.75145435333252
    6. 'self' → logprob: -10.75145435333252
    7. '_squared' → logprob: -11.37645435333252
    8. 's' → logprob: -11.62645435333252
    9. ' (' → logprob: -13.00145435333252
    10. '   ' → logprob: -13.25145435333252

Token 352: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004365102213341743
    2. 'self' → logprob: -8.500436782836914
    3. ')' → logprob: -9.000436782836914
    4. '(' → logprob: -10.125436782836914
    5. '()' → logprob: -10.500436782836914
    6. 's' → logprob: -11.250436782836914
    7. '()(' → logprob: -12.000436782836914
    8. ')(' → logprob: -12.375436782836914
    9. '   ' → logprob: -12.500436782836914
    10. ' (' → logprob: -12.625436782836914

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2016637325286865
    2. ' return' → logprob: -1.2016637325286865
    3. 'return' → logprob: -1.4516637325286865
    4. '   ' → logprob: -1.8266637325286865
    5. '	return' → logprob: -5.826663970947266
    6. ' ' → logprob: -8.326663970947266
    7. '	' → logprob: -8.826663970947266
    8. 'sqrt' → logprob: -10.076663970947266
    9. ' sqrt' → logprob: -10.576663970947266
    10. 'self' → logprob: -11.201663970947266

Token 354: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08013170212507248
    2. ' return' → logprob: -2.580131769180298
    3. '   ' → logprob: -7.205131530761719
    4. 'self' → logprob: -8.080131530761719
    5. '       ' → logprob: -8.955131530761719
    6. 'sqrt' → logprob: -10.580131530761719
    7. ' self' → logprob: -10.955131530761719
    8. ' sqrt' → logprob: -11.955131530761719
    9. '	return' → logprob: -12.205131530761719
    10. ' ' → logprob: -12.580131530761719

Token 355: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007290104869753122
    2. ' self' → logprob: -5.132289886474609
    3. 'sqrt' → logprob: -6.632289886474609
    4. ' sqrt' → logprob: -10.13228988647461
    5. '(self' → logprob: -12.88228988647461
    6. '   ' → logprob: -15.00728988647461
    7. '	self' → logprob: -15.13228988647461
    8. 's' → logprob: -15.38228988647461
    9. 'math' → logprob: -16.38228988647461
    10. ' ' → logprob: -16.63228988647461

Token 356: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.003236297983676195
    2. 'self' → logprob: -6.378236293792725
    3. 'x' → logprob: -6.878236293792725
    4. 'sqrt' → logprob: -8.628236770629883
    5. 's' → logprob: -8.878236770629883
    6. '.sqrt' → logprob: -9.378236770629883
    7. 'Point' → logprob: -10.253236770629883
    8. '.s' → logprob: -11.128236770629883
    9. 'def' → logprob: -11.378236770629883
    10. ' Point' → logprob: -11.503236770629883

Token 357: ' *' (ID: 425)
  Prédit: '*self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*self' → logprob: -0.3298042416572571
    2. '**' → logprob: -1.3298041820526123
    3. ' *' → logprob: -4.329804420471191
    4. '*' → logprob: -5.829804420471191
    5. ' **' → logprob: -8.204804420471191
    6. '*x' → logprob: -11.329804420471191
    7. 'self' → logprob: -11.954804420471191
    8. ' ' → logprob: -12.704804420471191
    9. '2' → logprob: -13.579804420471191
    10. '*p' → logprob: -14.454804420471191

Token 358: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026181264547631145
    2. '2' → logprob: -8.500262260437012
    3. ' self' → logprob: -9.875262260437012
    4. '<|end|>' → logprob: -12.250262260437012
    5. '*self' → logprob: -14.375262260437012
    6. '
' → logprob: -14.875262260437012
    7. '	self' → logprob: -15.000262260437012
    8. '-self' → logprob: -16.250261306762695
    9. '  ' → logprob: -16.500261306762695
    10. '   ' → logprob: -16.625261306762695

Token 359: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04321042448282242
    2. 'self' → logprob: -3.168210506439209
    3. '.x' → logprob: -8.66821002960205
    4. '2' → logprob: -10.91821002960205
    5. '<|end|>' → logprob: -11.66821002960205
    6. ' self' → logprob: -12.54321002960205
    7. '```' → logprob: -13.79321002960205
    8. ' x' → logprob: -13.79321002960205
    9. '<|end|>' → logprob: -13.91821002960205
    10. '*self' → logprob: -13.91821002960205

Token 360: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932094097137451
    2. ' +' → logprob: -0.6932094097137451
    3. '+self' → logprob: -9.693209648132324
    4. '   ' → logprob: -15.818209648132324
    5. ' ' → logprob: -15.818209648132324
    6. ' ' → logprob: -16.068208694458008
    7. '+y' → logprob: -17.193208694458008
    8. 'self' → logprob: -17.443208694458008
    9. ' plus' → logprob: -17.693208694458008
    10. '+
' → logprob: -17.818208694458008

Token 361: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00317783304490149
    2. ' self' → logprob: -5.753177642822266
    3. '	self' → logprob: -16.628177642822266
    4. '       ' → logprob: -17.003177642822266
    5. '(self' → logprob: -17.253177642822266
    6. '   ' → logprob: -18.378177642822266
    7. ' ' → logprob: -19.503177642822266
    8. '[self' → logprob: -20.503177642822266
    9. '  ' → logprob: -21.378177642822266
    10. 's' → logprob: -21.628177642822266

Token 362: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.2130587100982666
    2. 'y' → logprob: -1.7130587100982666
    3. 'self' → logprob: -4.4630584716796875
    4. '.' → logprob: -9.963058471679688
    5. ' self' → logprob: -13.588058471679688
    6. '.self' → logprob: -14.213058471679688
    7. ' y' → logprob: -14.838058471679688
    8. '   ' → logprob: -15.463058471679688
    9. '.x' → logprob: -15.963058471679688
    10. '.py' → logprob: -16.088058471679688

Token 363: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38879936933517456
    2. ' *' → logprob: -1.1387994289398193
    3. '*self' → logprob: -6.26379919052124
    4. '*y' → logprob: -11.513799667358398
    5. '**' → logprob: -12.263799667358398
    6. ' ' → logprob: -12.763799667358398
    7. '*object' → logprob: -13.263799667358398
    8. '   ' → logprob: -13.763799667358398
    9. '*this' → logprob: -14.388799667358398
    10. 'self' → logprob: -14.513799667358398

Token 364: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003398726985324174
    2. ' self' → logprob: -8.00033950805664
    3. '(self' → logprob: -13.75033950805664
    4. 'y' → logprob: -14.37533950805664
    5. '	self' → logprob: -14.37533950805664
    6. '*self' → logprob: -14.37533950805664
    7. '<|end|>' → logprob: -14.87533950805664
    8. '0' → logprob: -15.00033950805664
    9. '   ' → logprob: -15.37533950805664
    10. '2' → logprob: -15.50033950805664

Token 365: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.030136428773403168
    2. '.y' → logprob: -3.5301363468170166
    3. 'self' → logprob: -7.905136585235596
    4. ' y' → logprob: -11.905136108398438
    5. '_y' → logprob: -12.780136108398438
    6. '	y' → logprob: -13.155136108398438
    7. '2' → logprob: -13.530136108398438
    8. '.' → logprob: -13.905136108398438
    9. '*y' → logprob: -13.905136108398438
    10. '<|end|>' → logprob: -14.905136108398438

Token 366: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07469087094068527
    2. '<|end|>' → logprob: -3.699690818786621
    3. 'def' → logprob: -3.949690818786621
    4. '
' → logprob: -4.699690818786621
    5. '    
' → logprob: -4.824690818786621
    6. ' def' → logprob: -5.824690818786621
    7. ':' → logprob: -6.449690818786621
    8. '```' → logprob: -6.574690818786621
    9. '@property' → logprob: -7.324690818786621
    10. '<|end|>' → logprob: -7.324690818786621

Token 368: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.39162391424179077
    2. '   ' → logprob: -1.1416239738464355
    3. ' def' → logprob: -5.5166239738464355
    4. '    
' → logprob: -8.016623497009277
    5. ')' → logprob: -8.516623497009277
    6. '	def' → logprob: -9.766623497009277
    7. ' ' → logprob: -10.141623497009277
    8. '@property' → logprob: -10.516623497009277
    9. '<|end|>' → logprob: -11.141623497009277
    10. '  ' → logprob: -11.641623497009277

Token 369: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.030699340626597404
    2. 'norm' → logprob: -4.155699253082275
    3. 'dist' → logprob: -5.155699253082275
    4. 'length' → logprob: -5.655699253082275
    5. 'distance' → logprob: -6.405699253082275
    6. 'len' → logprob: -6.405699253082275
    7. ' abs' → logprob: -6.655699253082275
    8. ' norm' → logprob: -8.155699729919434
    9. 'm' → logprob: -8.780699729919434
    10. 'def' → logprob: -9.155699729919434

Token 370: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004386558721307665
    2. '(' → logprob: -8.000438690185547
    3. '()(' → logprob: -10.250438690185547
    4. '()>' → logprob: -10.625438690185547
    5. '(self' → logprob: -11.125438690185547
    6. '()?>' → logprob: -12.750438690185547
    7. '()<' → logprob: -12.875438690185547
    8. '()<<' → logprob: -13.000438690185547
    9. '();' → logprob: -13.125438690185547
    10. '()">' → logprob: -13.125438690185547

Token 371: '):
' (ID: 1883)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01359214261174202
    2. ')' → logprob: -4.76359224319458
    3. '())' → logprob: -5.51359224319458
    4. '(self' → logprob: -7.63859224319458
    5. '(' → logprob: -8.763591766357422
    6. '():' → logprob: -9.013591766357422
    7. '());' → logprob: -10.638591766357422
    8. ' ()' → logprob: -11.013591766357422
    9. '();' → logprob: -11.138591766357422
    10. 'self' → logprob: -11.263591766357422

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09833536297082901
    2. 'return' → logprob: -2.8483352661132812
    3. 'sqrt' → logprob: -3.7233352661132812
    4. ' return' → logprob: -5.098335266113281
    5. '   ' → logprob: -5.848335266113281
    6. ' sqrt' → logprob: -5.973335266113281
    7. ' ' → logprob: -12.098335266113281
    8. '	return' → logprob: -12.473335266113281
    9. 'import' → logprob: -12.973335266113281
    10. 's' → logprob: -13.098335266113281

Token 373: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0873870849609375
    2. 'sqrt' → logprob: -2.5873870849609375
    3. ' return' → logprob: -5.0873870849609375
    4. ' sqrt' → logprob: -6.0873870849609375
    5. '   ' → logprob: -11.337387084960938
    6. 's' → logprob: -13.462387084960938
    7. '       ' → logprob: -14.087387084960938
    8. '.sqrt' → logprob: -14.212387084960938
    9. '	return' → logprob: -14.962387084960938
    10. 'import' → logprob: -15.462387084960938

Token 374: ' sqrt' (ID: 44237)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.029754191637039185
    2. ' sqrt' → logprob: -3.529754161834717
    3. 's' → logprob: -13.154754638671875
    4. '.sqrt' → logprob: -14.154754638671875
    5. '   ' → logprob: -15.029754638671875
    6. '(s' → logprob: -15.279754638671875
    7. 'float' → logprob: -15.779754638671875
    8. 'self' → logprob: -16.154754638671875
    9. ' ' → logprob: -16.154754638671875
    10. '	s' → logprob: -16.779754638671875

Token 375: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00043162284418940544
    2. '(' → logprob: -7.750431537628174
    3. 'self' → logprob: -14.250432014465332
    4. '(
' → logprob: -15.750432014465332
    5. '((' → logprob: -16.750431060791016
    6. ' (' → logprob: -16.750431060791016
    7. '(s' → logprob: -17.375431060791016
    8. '(abs' → logprob: -18.125431060791016
    9. '(this' → logprob: -18.375431060791016
    10. '(

' → logprob: -19.250431060791016

Token 376: '.norm' (ID: 73834)
  Prédit: '.norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.norm' → logprob: -0.030365770682692528
    2. '.x' → logprob: -3.5303657054901123
    3. '.' → logprob: -7.530365943908691
    4. '.n' → logprob: -10.280365943908691
    5. ' .' → logprob: -11.280365943908691
    6. 'norm' → logprob: -11.530365943908691
    7. '(norm' → logprob: -11.655365943908691
    8. ').' → logprob: -12.530365943908691
    9. '.self' → logprob: -12.905365943908691
    10. '.abs' → logprob: -13.155365943908691

Token 377: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0010391215328127146
    2. '()' → logprob: -7.001039028167725
    3. ')' → logprob: -9.501039505004883
    4. '())
' → logprob: -10.376039505004883
    5. ' ())' → logprob: -10.876039505004883
    6. '())

' → logprob: -13.501039505004883
    7. '()
' → logprob: -14.501039505004883
    8. '(' → logprob: -14.501039505004883
    9. 'self' → logprob: -16.001039505004883
    10. '();)' → logprob: -16.876039505004883

Token 378: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 379: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.17276310920715332
    2. '   ' → logprob: -1.9227631092071533
    3. ')' → logprob: -5.047762870788574
    4. '<|end|>' → logprob: -5.922762870788574
    5. ' def' → logprob: -6.547762870788574
    6. '@property' → logprob: -7.422762870788574
    7. '#' → logprob: -8.047762870788574
    8. '```' → logprob: -8.172762870788574
    9. '.' → logprob: -8.422762870788574
    10. '(' → logprob: -9.047762870788574

Token 380: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.3514040410518646
    2. 'distance' → logprob: -2.1014039516448975
    3. 'dist' → logprob: -2.6014039516448975
    4. 'angle' → logprob: -3.1014039516448975
    5. 'polar' → logprob: -4.101404190063477
    6. 'cross' → logprob: -5.101404190063477
    7. 'to' → logprob: -5.101404190063477
    8. 'arg' → logprob: -5.226404190063477
    9. 'unit' → logprob: -5.601404190063477
    10. 'rotate' → logprob: -5.726404190063477

Token 381: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005975957959890366
    2. '(' → logprob: -5.130975723266602
    3. '(other' → logprob: -10.630975723266602
    4. ' (' → logprob: -11.505975723266602
    5. '(
' → logprob: -12.505975723266602
    6. '<|end|>' → logprob: -12.505975723266602
    7. '<|end|>' → logprob: -13.005975723266602
    8. 'self' → logprob: -14.380975723266602
    9. '}(' → logprob: -14.755975723266602
    10. '(

' → logprob: -15.255975723266602

Token 382: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012384448200464249
    2. '(other' → logprob: -6.8762383460998535
    3. '(' → logprob: -8.876238822937012
    4. ')' → logprob: -10.751238822937012
    5. ')(' → logprob: -10.751238822937012
    6. ' (' → logprob: -11.126238822937012
    7. ',' → logprob: -12.751238822937012
    8. 'other' → logprob: -14.376238822937012
    9. 'self' → logprob: -14.501238822937012
    10. '<|end|>' → logprob: -14.501238822937012

Token 383: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.30279549956321716
    2. 'self' → logprob: -1.5527955293655396
    3. ' other' → logprob: -3.05279541015625
    4. ' self' → logprob: -6.05279541015625
    5. '   ' → logprob: -12.55279541015625
    6. '(other' → logprob: -12.92779541015625
    7. ' ' → logprob: -12.92779541015625
    8. '(self' → logprob: -13.17779541015625
    9. 'Other' → logprob: -13.30279541015625
    10. '_other' → logprob: -13.92779541015625

Token 384: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014492794871330261
    2. ')' → logprob: -7.126449108123779
    3. '):' → logprob: -8.251449584960938
    4. '(self' → logprob: -8.626449584960938
    5. '('' → logprob: -9.751449584960938
    6. ' :' → logprob: -9.876449584960938
    7. ''' → logprob: -10.501449584960938
    8. 'self' → logprob: -10.876449584960938
    9. '')' → logprob: -11.751449584960938
    10. '   ' → logprob: -11.876449584960938

Token 385: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.023937085643410683
    2. ' '' → logprob: -3.7739369869232178
    3. 'Point' → logprob: -7.523937225341797
    4. ')' → logprob: -9.648937225341797
    5. 'self' → logprob: -10.773937225341797
    6. ' Point' → logprob: -11.148937225341797
    7. ''s' → logprob: -11.273937225341797
    8. ' ' → logprob: -11.273937225341797
    9. ' other' → logprob: -11.648937225341797
    10. '')' → logprob: -12.273937225341797

Token 386: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -5.2166411478538066e-05
    2. ' Point' → logprob: -9.875052452087402
    3. '	Point' → logprob: -14.750052452087402
    4. ''' → logprob: -16.875051498413086
    5. '.Point' → logprob: -16.875051498413086
    6. '_point' → logprob: -17.000051498413086
    7. '<Point' → logprob: -17.000051498413086
    8. '_Point' → logprob: -17.250051498413086
    9. '(Point' → logprob: -17.375051498413086
    10. ' ' → logprob: -17.750051498413086

Token 387: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.000204851632588543
    2. ')' → logprob: -8.500205039978027
    3. '")' → logprob: -14.375205039978027
    4. ''):
' → logprob: -14.375205039978027
    5. ''' → logprob: -16.50020408630371
    6. '')
' → logprob: -17.25020408630371
    7. ' ')' → logprob: -17.62520408630371
    8. '`)' → logprob: -18.62520408630371
    9. '')->' → logprob: -18.75020408630371
    10. '’)' → logprob: -19.00020408630371

Token 388: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7350839376449585
    2. ' ->' → logprob: -1.1100839376449585
    3. '->' → logprob: -1.7350839376449585
    4. ':' → logprob: -4.360084056854248
    5. '(self' → logprob: -7.110084056854248
    6. ')->' → logprob: -7.110084056854248
    7. '   ' → logprob: -9.23508358001709
    8. ',' → logprob: -10.48508358001709
    9. '       ' → logprob: -10.73508358001709
    10. '(' → logprob: -10.86008358001709

Token 389: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.25195595622062683
    2. ' float' → logprob: -1.5019559860229492
    3. ''' → logprob: -10.87695598602295
    4. ' '' → logprob: -12.75195598602295
    5. 'Point' → logprob: -14.00195598602295
    6. '	float' → logprob: -14.00195598602295
    7. ' ' → logprob: -14.00195598602295
    8. '<float' → logprob: -14.00195598602295
    9. '(float' → logprob: -14.62695598602295
    10. 'int' → logprob: -15.00195598602295

Token 390: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007977092638611794
    2. '       ' → logprob: -5.75797700881958
    3. ':
' → logprob: -6.38297700881958
    4. '):' → logprob: -6.38297700881958
    5. '   ' → logprob: -7.00797700881958
    6. ')' → logprob: -8.507977485656738
    7. '(self' → logprob: -9.757977485656738
    8. '):
' → logprob: -9.882977485656738
    9. '():' → logprob: -10.007977485656738
    10. ',' → logprob: -10.257977485656738

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025728060863912106
    2. 'return' → logprob: -6.002573013305664
    3. ' return' → logprob: -9.627573013305664
    4. '   ' → logprob: -10.377573013305664
    5. '	' → logprob: -16.377573013305664
    6. '	return' → logprob: -17.252573013305664
    7. '      ' → logprob: -17.502573013305664
    8. 'self' → logprob: -18.127573013305664
    9. '           ' → logprob: -18.627573013305664
    10. '     ' → logprob: -19.127573013305664

Token 392: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00045807508286088705
    2. 'self' → logprob: -8.500457763671875
    3. '       ' → logprob: -8.750457763671875
    4. ' return' → logprob: -9.250457763671875
    5. '	return' → logprob: -17.250457763671875
    6. '   ' → logprob: -17.750457763671875
    7. '
' → logprob: -18.375457763671875
    8. ' self' → logprob: -19.375457763671875
    9. '(self' → logprob: -20.500457763671875
    10. '{return' → logprob: -21.250457763671875

Token 393: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.639096970204264e-05
    2. ' self' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.125097274780273
    4. '       ' → logprob: -16.625097274780273
    5. '
' → logprob: -17.750097274780273
    6. '(self' → logprob: -17.875097274780273
    7. '	self' → logprob: -19.000097274780273
    8. ' ' → logprob: -19.875097274780273
    9. '  ' → logprob: -21.375097274780273
    10. '           ' → logprob: -21.500097274780273

Token 394: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00011081460979767144
    2. '.' → logprob: -9.125110626220703
    3. 'x' → logprob: -13.375110626220703
    4. ' .' → logprob: -15.500110626220703
    5. '0' → logprob: -20.000110626220703
    6. 'self' → logprob: -20.500110626220703
    7. '```' → logprob: -20.875110626220703
    8. '1' → logprob: -21.625110626220703
    9. '.
' → logprob: -21.750110626220703
    10. '10' → logprob: -22.625110626220703

Token 395: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25192928314208984
    2. '*' → logprob: -1.5019292831420898
    3. '*object' → logprob: -16.251930236816406
    4. ' ' → logprob: -17.251930236816406
    5. '   ' → logprob: -17.751930236816406
    6. '.' → logprob: -17.876930236816406
    7. '**' → logprob: -18.126930236816406
    8. ' ' → logprob: -18.751930236816406
    9. '*self' → logprob: -19.001930236816406
    10. '*out' → logprob: -19.126930236816406

Token 396: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0005530327325686812
    2. ' other' → logprob: -7.500553131103516
    3. '(other' → logprob: -19.000553131103516
    4. 'Other' → logprob: -20.000553131103516
    5. '.other' → logprob: -20.625553131103516
    6. '_other' → logprob: -21.750553131103516
    7. 'OTHER' → logprob: -24.750553131103516
    8. ' ' → logprob: -25.875553131103516
    9. '其他' → logprob: -26.375553131103516
    10. 'others' → logprob: -26.500553131103516

Token 397: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.008426391519606113
    2. 'x' → logprob: -5.258426189422607
    3. '.' → logprob: -5.758426189422607
    4. 'other' → logprob: -10.633426666259766
    5. '.other' → logprob: -12.008426666259766
    6. '.
' → logprob: -14.133426666259766
    7. ' .' → logprob: -15.383426666259766
    8. ' x' → logprob: -16.383426666259766
    9. 'dot' → logprob: -17.883426666259766
    10. '`.`' → logprob: -17.883426666259766

Token 398: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022492945194244
    2. '+' → logprob: -1.9102249145507812
    3. '+self' → logprob: -14.660224914550781
    4. '       ' → logprob: -15.785224914550781
    5. ' ' → logprob: -17.53522491455078
    6. '        ' → logprob: -17.66022491455078
    7. ' ' → logprob: -17.66022491455078
    8. ' +
' → logprob: -17.78522491455078
    9. '+
' → logprob: -17.78522491455078
    10. '+y' → logprob: -18.03522491455078

Token 399: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22123928368091583
    2. ' self' → logprob: -2.2212393283843994
    3. 'other' → logprob: -2.7212393283843994
    4. ' other' → logprob: -3.7212393283843994
    5. '       ' → logprob: -13.09623908996582
    6. 'Other' → logprob: -14.09623908996582
    7. '	self' → logprob: -15.72123908996582
    8. ' ' → logprob: -15.84623908996582
    9. '_other' → logprob: -16.47123908996582
    10. '           ' → logprob: -16.59623908996582

Token 400: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.1003790870308876
    2. 'y' → logprob: -2.35037899017334
    3. '.' → logprob: -8.72537899017334
    4. ' y' → logprob: -12.47537899017334
    5. 'self' → logprob: -12.47537899017334
    6. '.x' → logprob: -14.47537899017334
    7. ' ' → logprob: -14.60037899017334
    8. '.py' → logprob: -15.60037899017334
    9. '<|end|>' → logprob: -15.60037899017334
    10. 'Y' → logprob: -15.85037899017334

Token 401: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25335681438446045
    2. '*' → logprob: -1.5033568143844604
    3. '.' → logprob: -6.87835693359375
    4. '<|end|>' → logprob: -8.12835693359375
    5. ' ' → logprob: -10.00335693359375
    6. '   ' → logprob: -11.00335693359375
    7. ' .' → logprob: -11.12835693359375
    8. '[' → logprob: -12.50335693359375
    9. ')' → logprob: -12.62835693359375
    10. '       ' → logprob: -12.75335693359375

Token 402: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0015023599844425917
    2. ' other' → logprob: -6.501502513885498
    3. '(other' → logprob: -18.376502990722656
    4. '.other' → logprob: -19.626502990722656
    5. 'Other' → logprob: -20.751502990722656
    6. '_other' → logprob: -21.376502990722656
    7. ' ' → logprob: -22.626502990722656
    8. '   ' → logprob: -23.126502990722656
    9. 'self' → logprob: -23.751502990722656
    10. 'y' → logprob: -23.751502990722656

Token 403: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00977993756532669
    2. 'y' → logprob: -4.634779930114746
    3. '.' → logprob: -10.884779930114746
    4. '*y' → logprob: -13.134779930114746
    5. 'Point' → logprob: -13.759779930114746
    6. '*' → logprob: -14.009779930114746
    7. 'Y' → logprob: -15.009779930114746
    8. 'point' → logprob: -15.134779930114746
    9. ' y' → logprob: -16.009780883789062
    10. '.x' → logprob: -16.259780883789062

Token 404: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03825848177075386
    2. 'def' → logprob: -3.2882585525512695
    3. ' def' → logprob: -8.66325855255127
    4. '```' → logprob: -10.53825855255127
    5. '	def' → logprob: -11.66325855255127
    6. '    
' → logprob: -12.53825855255127
    7. '<|end|>' → logprob: -13.41325855255127
    8. '  ' → logprob: -14.28825855255127
    9. '    ' → logprob: -14.53825855255127
    10. ' ' → logprob: -14.66325855255127

Token 406: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.9875325708417222e-05
    2. '   ' → logprob: -11.000029563903809
    3. ' def' → logprob: -11.250029563903809
    4. '	def' → logprob: -16.375030517578125
    5. '```' → logprob: -19.875030517578125
    6. ':def' → logprob: -20.750030517578125
    7. '    
' → logprob: -21.250030517578125
    8. '.def' → logprob: -21.625030517578125
    9. '  ' → logprob: -22.000030517578125
    10. '_def' → logprob: -22.000030517578125

Token 407: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0017111169872805476
    2. 'det' → logprob: -6.501710891723633
    3. ' cross' → logprob: -8.501710891723633
    4. 'def' → logprob: -13.126710891723633
    5. 'Cross' → logprob: -13.251710891723633
    6. '_cross' → logprob: -14.501710891723633
    7. '.cross' → logprob: -14.876710891723633
    8. '   ' → logprob: -15.251710891723633
    9. ' det' → logprob: -15.626710891723633
    10. 'norm' → logprob: -16.001710891723633

Token 408: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002457238151691854
    2. '(' → logprob: -8.375246047973633
    3. ' (' → logprob: -11.750246047973633
    4. '(other' → logprob: -12.125246047973633
    5. 'self' → logprob: -15.000246047973633
    6. '   ' → logprob: -15.500246047973633
    7. '<|end|>' → logprob: -15.625246047973633
    8. '(
' → logprob: -15.875246047973633
    9. ')' → logprob: -16.000246047973633
    10. '<|end|>' → logprob: -16.125246047973633

Token 409: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014561859425157309
    2. '(' → logprob: -6.751456260681152
    3. '(other' → logprob: -8.876456260681152
    4. ')' → logprob: -9.626456260681152
    5. ' (' → logprob: -10.126456260681152
    6. ',' → logprob: -11.126456260681152
    7. 'self' → logprob: -11.751456260681152
    8. ')(' → logprob: -12.501456260681152
    9. '<|end|>' → logprob: -12.751456260681152
    10. '<|end|>' → logprob: -13.501456260681152

Token 410: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.07956443727016449
    2. ' other' → logprob: -2.579564332962036
    3. 'self' → logprob: -7.329564571380615
    4. ' self' → logprob: -11.204564094543457
    5. 'Other' → logprob: -12.454564094543457
    6. '(other' → logprob: -14.579564094543457
    7. '_other' → logprob: -14.704564094543457
    8. '.other' → logprob: -15.204564094543457
    9. ' ' → logprob: -17.954565048217773
    10. 'OTHER' → logprob: -18.454565048217773

Token 411: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022715039551258087
    2. ')' → logprob: -4.022715091705322
    3. '('' → logprob: -5.522715091705322
    4. '):' → logprob: -8.772714614868164
    5. ''' → logprob: -9.272714614868164
    6. '')' → logprob: -9.772714614868164
    7. ' :' → logprob: -10.022714614868164
    8. '   ' → logprob: -10.147714614868164
    9. '):
' → logprob: -10.647714614868164
    10. '*' → logprob: -10.772714614868164

Token 412: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.023319199681282043
    2. ' '' → logprob: -3.7733192443847656
    3. 'Point' → logprob: -10.023319244384766
    4. ' Point' → logprob: -11.148319244384766
    5. '(Point' → logprob: -12.648319244384766
    6. ' ' → logprob: -13.148319244384766
    7. ')' → logprob: -13.148319244384766
    8. '<Point' → logprob: -13.523319244384766
    9. '.Point' → logprob: -13.773319244384766
    10. '[' → logprob: -13.898319244384766

Token 413: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.2948405128554441e-05
    2. ' Point' → logprob: -11.37501335144043
    3. ''' → logprob: -13.75001335144043
    4. '	Point' → logprob: -15.75001335144043
    5. '.Point' → logprob: -16.50001335144043
    6. '_point' → logprob: -17.00001335144043
    7. '<Point' → logprob: -17.25001335144043
    8. ' ' → logprob: -17.75001335144043
    9. '(Point' → logprob: -17.75001335144043
    10. '   ' → logprob: -17.87501335144043

Token 414: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0010366219794377685
    2. ')' → logprob: -6.876036643981934
    3. ''' → logprob: -13.251036643981934
    4. '")' → logprob: -14.251036643981934
    5. ''):
' → logprob: -14.751036643981934
    6. ')'' → logprob: -15.126036643981934
    7. '('' → logprob: -15.126036643981934
    8. ' ')' → logprob: -15.376036643981934
    9. ':' → logprob: -15.501036643981934
    10. '')
' → logprob: -17.001035690307617

Token 415: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.2573392689228058
    2. '->' → logprob: -1.5073392391204834
    3. ':' → logprob: -5.7573394775390625
    4. '(self' → logprob: -7.2573394775390625
    5. ')' → logprob: -7.3823394775390625
    6. '(' → logprob: -7.8823394775390625
    7. '   ' → logprob: -8.382339477539062
    8. 'def' → logprob: -9.257339477539062
    9. '('' → logprob: -9.882339477539062
    10. ')->' → logprob: -10.007339477539062

Token 416: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.4741181433200836
    2. ' float' → logprob: -0.9741181135177612
    3. ''' → logprob: -11.22411823272705
    4. 'Point' → logprob: -11.84911823272705
    5. '(float' → logprob: -11.97411823272705
    6. ' ' → logprob: -12.97411823272705
    7. 'self' → logprob: -12.97411823272705
    8. ' Point' → logprob: -13.09911823272705
    9. '<float' → logprob: -13.09911823272705
    10. '	float' → logprob: -13.34911823272705

Token 417: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.855392336845398
    2. ':' → logprob: -0.980392336845398
    3. '       ' → logprob: -1.855392336845398
    4. '   ' → logprob: -3.9803924560546875
    5. '(' → logprob: -4.2303924560546875
    6. ':
' → logprob: -5.1053924560546875
    7. 'self' → logprob: -5.9803924560546875
    8. '(
' → logprob: -6.9803924560546875
    9. ' self' → logprob: -8.730392456054688
    10. '	self' → logprob: -9.730392456054688

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5301910638809204
    2. 'return' → logprob: -1.2801910638809204
    3. 'self' → logprob: -2.030190944671631
    4. ' return' → logprob: -6.405190944671631
    5. ' self' → logprob: -7.780190944671631
    6. '   ' → logprob: -8.905191421508789
    7. '	return' → logprob: -12.780191421508789
    8. ' ' → logprob: -13.905191421508789
    9. '(self' → logprob: -14.030191421508789
    10. '```' → logprob: -14.405191421508789

Token 419: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38710805773735046
    2. 'self' → logprob: -1.1371080875396729
    3. '       ' → logprob: -8.887107849121094
    4. ' return' → logprob: -9.637107849121094
    5. '   ' → logprob: -10.512107849121094
    6. ' self' → logprob: -12.012107849121094
    7. '(self' → logprob: -15.262107849121094
    8. '	return' → logprob: -17.637107849121094
    9. '```' → logprob: -17.637107849121094
    10. ' ' → logprob: -17.887107849121094

Token 420: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019294669618830085
    2. ' self' → logprob: -6.25192928314209
    3. '(self' → logprob: -14.50192928314209
    4. '
' → logprob: -15.75192928314209
    5. '   ' → logprob: -16.251930236816406
    6. ' ' → logprob: -17.001930236816406
    7. '	self' → logprob: -18.001930236816406
    8. '       ' → logprob: -18.626930236816406
    9. '```' → logprob: -18.626930236816406
    10. 'Self' → logprob: -19.126930236816406

Token 421: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -2.451116051815916e-05
    2. '.' → logprob: -10.875024795532227
    3. 'x' → logprob: -12.125024795532227
    4. ' .' → logprob: -16.500024795532227
    5. '0' → logprob: -18.750024795532227
    6. '```' → logprob: -19.000024795532227
    7. '.y' → logprob: -19.250024795532227
    8. 'self' → logprob: -19.250024795532227
    9. '._' → logprob: -20.250024795532227
    10. 'import' → logprob: -20.250024795532227

Token 422: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04858873412013054
    2. '*' → logprob: -3.048588752746582
    3. '*object' → logprob: -13.923588752746582
    4. '*self' → logprob: -15.173588752746582
    5. '*out' → logprob: -15.798588752746582
    6. '**' → logprob: -17.423587799072266
    7. ' ' → logprob: -17.798587799072266
    8. '*y' → logprob: -18.423587799072266
    9. '*this' → logprob: -19.548587799072266
    10. '*x' → logprob: -20.048587799072266

Token 423: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -2.15310683415737e-05
    2. ' other' → logprob: -10.750021934509277
    3. '(other' → logprob: -20.37502098083496
    4. '.other' → logprob: -21.25002098083496
    5. 'Other' → logprob: -21.62502098083496
    6. '_other' → logprob: -23.75002098083496
    7. '-other' → logprob: -24.87502098083496
    8. 'OTHER' → logprob: -25.12502098083496
    9. '
' → logprob: -25.37502098083496
    10. ' ' → logprob: -25.37502098083496

Token 424: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0011765359668061137
    2. 'y' → logprob: -6.751176357269287
    3. '.' → logprob: -12.001176834106445
    4. 'Point' → logprob: -16.001176834106445
    5. '.x' → logprob: -16.626176834106445
    6. ' .' → logprob: -17.876176834106445
    7. ' y' → logprob: -18.376176834106445
    8. '*y' → logprob: -18.376176834106445
    9. ''y' → logprob: -18.626176834106445
    10. 'Y' → logprob: -18.751176834106445

Token 425: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012510117143392563
    2. '-' → logprob: -4.387510299682617
    3. ' ' → logprob: -15.387510299682617
    4. ' ' → logprob: -15.887510299682617
    5. ' -
' → logprob: -17.387510299682617
    6. '−' → logprob: -17.762510299682617
    7. ' –' → logprob: -18.137510299682617
    8. '—' → logprob: -18.387510299682617
    9. ' −' → logprob: -18.637510299682617
    10. ',' → logprob: -18.762510299682617

Token 426: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08107058703899384
    2. 'other' → logprob: -2.5810706615448
    3. ' self' → logprob: -6.331070423126221
    4. ' other' → logprob: -7.831070423126221
    5. '	self' → logprob: -15.206070899963379
    6. '       ' → logprob: -15.206070899963379
    7. '(self' → logprob: -15.956070899963379
    8. '   ' → logprob: -16.081069946289062
    9. '(other' → logprob: -16.081069946289062
    10. 'Other' → logprob: -16.081069946289062

Token 427: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7031801342964172
    2. '.y' → logprob: -0.7031801342964172
    3. 'x' → logprob: -5.453180313110352
    4. 'other' → logprob: -5.703180313110352
    5. '.x' → logprob: -6.453180313110352
    6. '.other' → logprob: -7.328180313110352
    7. '.' → logprob: -9.078180313110352
    8. 'self' → logprob: -11.828180313110352
    9. '[' → logprob: -13.078180313110352
    10. ' y' → logprob: -13.203180313110352

Token 428: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004629245959222317
    2. '*' → logprob: -5.379629135131836
    3. '<|end|>' → logprob: -12.254629135131836
    4. '*object' → logprob: -12.754629135131836
    5. '*out' → logprob: -14.004629135131836
    6. '[' → logprob: -16.129629135131836
    7. ' ' → logprob: -16.504629135131836
    8. '<|end|>' → logprob: -16.629629135131836
    9. '*self' → logprob: -17.004629135131836
    10. 'x' → logprob: -17.254629135131836

Token 429: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00015860427811276168
    2. ' other' → logprob: -8.750158309936523
    3. '(other' → logprob: -16.750158309936523
    4. '.other' → logprob: -18.375158309936523
    5. 'Other' → logprob: -19.875158309936523
    6. '_other' → logprob: -20.625158309936523
    7. '-other' → logprob: -22.875158309936523
    8. 'OTHER' → logprob: -23.125158309936523
    9. '   ' → logprob: -23.500158309936523
    10. ' ' → logprob: -23.500158309936523

Token 430: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.5759543180465698
    2. 'x' → logprob: -0.8259543180465698
    3. '.' → logprob: -11.57595443725586
    4. 'cross' → logprob: -13.07595443725586
    5. ' x' → logprob: -14.32595443725586
    6. '.cross' → logprob: -14.57595443725586
    7. 's' → logprob: -14.70095443725586
    8. 'import' → logprob: -15.07595443725586
    9. 'point' → logprob: -15.45095443725586
    10. '	x' → logprob: -15.57595443725586

Token 431: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0733463242650032
    2. 'def' → logprob: -3.0733463764190674
    3. '<|end|>' → logprob: -4.198346138000488
    4. '```' → logprob: -5.323346138000488
    5. 'class' → logprob: -6.448346138000488
    6. ')' → logprob: -7.698346138000488
    7. '
' → logprob: -7.698346138000488
    8. '#' → logprob: -7.823346138000488
    9. ' ' → logprob: -8.073346138000488
    10. '<|end|>' → logprob: -8.198346138000488

Token 433: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00855700857937336
    2. '   ' → logprob: -5.258556842803955
    3. '<|end|>' → logprob: -6.258556842803955
    4. 'class' → logprob: -7.758556842803955
    5. ' def' → logprob: -8.008557319641113
    6. ')' → logprob: -8.133557319641113
    7. '#' → logprob: -8.883557319641113
    8. '```' → logprob: -9.633557319641113
    9. '<|end|>' → logprob: -10.508557319641113
    10. '	def' → logprob: -10.883557319641113

Token 434: ' is' (ID: 382)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.9231302738189697
    2. 'rotate' → logprob: -1.2981302738189697
    3. 'dist' → logprob: -2.1731302738189697
    4. 'angle' → logprob: -2.4231302738189697
    5. 'rot' → logprob: -2.4231302738189697
    6. ' distance' → logprob: -5.048130035400391
    7. ' rotate' → logprob: -5.048130035400391
    8. 'cc' → logprob: -5.173130035400391
    9. 'polar' → logprob: -5.673130035400391
    10. 'norm' → logprob: -6.048130035400391

Token 435: '_' (ID: 62)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.4048905372619629
    2. '_zero' → logprob: -2.279890537261963
    3. '_parallel' → logprob: -2.404890537261963
    4. '_col' → logprob: -3.279890537261963
    5. '_point' → logprob: -3.654890537261963
    6. '0' → logprob: -3.654890537261963
    7. '_' → logprob: -4.029890537261963
    8. '_horizontal' → logprob: -4.529890537261963
    9. '_vertical' → logprob: -4.904890537261963
    10. '_origin' → logprob: -5.654890537261963

Token 436: 'orth' (ID: 2909)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.8503488898277283
    2. 'parallel' → logprob: -1.225348949432373
    3. 'orth' → logprob: -1.975348949432373
    4. 'on' → logprob: -2.475348949432373
    5. 'col' → logprob: -3.475348949432373
    6. 'origin' → logprob: -4.725348949432373
    7. 'vertical' → logprob: -5.475348949432373
    8. 'close' → logprob: -6.225348949432373
    9. 'norm' → logprob: -6.350348949432373
    10. 'counter' → logprob: -6.725348949432373

Token 437: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -0.001741104875691235
    2. '(Point' → logprob: -6.5017409324646
    3. 'og' → logprob: -9.251741409301758
    4. '(self' → logprob: -9.376741409301758
    5. '(' → logprob: -11.251741409301758
    6. '   ' → logprob: -11.501741409301758
    7. '```' → logprob: -11.626741409301758
    8. 'agonal' → logprob: -12.251741409301758
    9. 'ogon' → logprob: -13.001741409301758
    10. 'ogona' → logprob: -13.251741409301758

Token 438: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014463067054748535
    2. '(' → logprob: -6.62644624710083
    3. ' (' → logprob: -9.376446723937988
    4. '_to' → logprob: -10.626446723937988
    5. '(other' → logprob: -12.626446723937988
    6. '   ' → logprob: -13.126446723937988
    7. '('' → logprob: -13.626446723937988
    8. 'to' → logprob: -14.001446723937988
    9. 'To' → logprob: -14.126446723937988
    10. '(to' → logprob: -14.251446723937988

Token 439: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0018404675647616386
    2. '(' → logprob: -6.626840591430664
    3. ' (' → logprob: -8.751840591430664
    4. ')(' → logprob: -9.376840591430664
    5. ',' → logprob: -9.501840591430664
    6. '(other' → logprob: -9.501840591430664
    7. ')' → logprob: -9.501840591430664
    8. '   ' → logprob: -11.626840591430664
    9. '('' → logprob: -11.876840591430664
    10. '(
' → logprob: -12.251840591430664

Token 440: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.31497055292129517
    2. ' other' → logprob: -1.3149704933166504
    3. 'self' → logprob: -6.56497049331665
    4. ' self' → logprob: -8.189970970153809
    5. '(other' → logprob: -11.439970970153809
    6. 'Other' → logprob: -11.939970970153809
    7. 'def' → logprob: -14.064970970153809
    8. ' ' → logprob: -14.189970970153809
    9. '_other' → logprob: -14.189970970153809
    10. '.other' → logprob: -14.564970970153809

Token 441: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31490129232406616
    2. ')' → logprob: -1.814901351928711
    3. '(self' → logprob: -2.939901351928711
    4. ',' → logprob: -3.189901351928711
    5. 'self' → logprob: -5.314901351928711
    6. '       ' → logprob: -5.439901351928711
    7. '   ' → logprob: -6.189901351928711
    8. ' (' → logprob: -7.814901351928711
    9. '('' → logprob: -7.939901351928711
    10. '):' → logprob: -8.439901351928711

Token 442: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.062039948999881744
    2. ' '' → logprob: -2.812039852142334
    3. ')' → logprob: -10.187040328979492
    4. ' ' → logprob: -10.812040328979492
    5. '   ' → logprob: -12.312040328979492
    6. '')' → logprob: -12.437040328979492
    7. '  ' → logprob: -13.812040328979492
    8. 'Point' → logprob: -13.812040328979492
    9. '<Point' → logprob: -14.437040328979492
    10. '(Point' → logprob: -14.687040328979492

Token 443: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.3822154111694545e-05
    2. ''' → logprob: -10.250043869018555
    3. ' Point' → logprob: -11.875043869018555
    4. '	Point' → logprob: -14.375043869018555
    5. '<Point' → logprob: -15.500043869018555
    6. ' ' → logprob: -15.875043869018555
    7. '.Point' → logprob: -16.125043869018555
    8. '(Point' → logprob: -16.125043869018555
    9. '   ' → logprob: -16.375043869018555
    10. '_point' → logprob: -16.625043869018555

Token 444: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0024806505534797907
    2. ')' → logprob: -6.002480506896973
    3. '")' → logprob: -13.002480506896973
    4. ''):
' → logprob: -13.502480506896973
    5. ''' → logprob: -14.377480506896973
    6. '`)' → logprob: -15.752480506896973
    7. '')
' → logprob: -15.877480506896973
    8. ' ')' → logprob: -16.00248146057129
    9. '',' → logprob: -16.12748146057129
    10. '   ' → logprob: -16.37748146057129

Token 445: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3743206858634949
    2. '->' → logprob: -1.3743207454681396
    3. ' ->' → logprob: -2.8743207454681396
    4. '(self' → logprob: -6.2493205070495605
    5. ',' → logprob: -7.4993205070495605
    6. ')->' → logprob: -9.124320983886719
    7. '   ' → logprob: -9.874320983886719
    8. 'self' → logprob: -9.999320983886719
    9. '       ' → logprob: -10.374320983886719
    10. '(' → logprob: -10.624320983886719

Token 446: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0040799472481012344
    2. ' bool' → logprob: -5.504079818725586
    3. 'float' → logprob: -14.629079818725586
    4. 'True' → logprob: -14.879079818725586
    5. ' ' → logprob: -15.504079818725586
    6. '<bool' → logprob: -16.129079818725586
    7. ''' → logprob: -16.254079818725586
    8. '(bool' → logprob: -16.504079818725586
    9. '	bool' → logprob: -16.754079818725586
    10. 'abs' → logprob: -17.129079818725586

Token 447: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006496754940599203
    2. '   ' → logprob: -6.256496906280518
    3. '       ' → logprob: -6.381496906280518
    4. ':
' → logprob: -6.381496906280518
    5. '():' → logprob: -8.38149642944336
    6. '<|end|>' → logprob: -8.50649642944336
    7. ')' → logprob: -8.75649642944336
    8. ':return' → logprob: -8.75649642944336
    9. '):' → logprob: -9.50649642944336
    10. '(' → logprob: -9.50649642944336

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1239340752363205
    2. '   ' → logprob: -2.623934030532837
    3. 'return' → logprob: -3.123934030532837
    4. ' return' → logprob: -10.498933792114258
    5. '	return' → logprob: -10.998933792114258
    6. '	' → logprob: -11.873933792114258
    7. 'abs' → logprob: -11.873933792114258
    8. '```' → logprob: -14.123933792114258
    9. '    ' → logprob: -14.623933792114258
    10. '	   ' → logprob: -14.998933792114258

Token 449: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010487756691873074
    2. 'abs' → logprob: -4.7604875564575195
    3. '   ' → logprob: -6.7604875564575195
    4. '       ' → logprob: -7.6354875564575195
    5. ' return' → logprob: -8.76048755645752
    6. 'float' → logprob: -9.63548755645752
    7. '	return' → logprob: -12.51048755645752
    8. '
' → logprob: -13.26048755645752
    9. '           ' → logprob: -14.13548755645752
    10. ' abs' → logprob: -14.63548755645752

Token 450: ' float' (ID: 4428)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4742771089076996
    2. 'float' → logprob: -0.974277138710022
    3. ' float' → logprob: -9.34927749633789
    4. ' abs' → logprob: -9.47427749633789
    5. 'self' → logprob: -10.84927749633789
    6. '   ' → logprob: -11.47427749633789
    7. 'fabs' → logprob: -12.72427749633789
    8. '  ' → logprob: -13.97427749633789
    9. ' ' → logprob: -14.09927749633789
    10. 'int' → logprob: -14.97427749633789

Token 451: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -4.60414821645827e-06
    2. 'equal' → logprob: -12.875004768371582
    3. '_abs' → logprob: -13.250004768371582
    4. 'abs' → logprob: -15.625004768371582
    5. ' equal' → logprob: -18.625003814697266
    6. 'Equal' → logprob: -18.750003814697266
    7. '_' → logprob: -19.000003814697266
    8. '_EQUAL' → logprob: -19.000003814697266
    9. '_absolute' → logprob: -19.125003814697266
    10. '_exact' → logprob: -19.500003814697266

Token 452: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9361264946837764e-07
    2. 'self' → logprob: -16.75
    3. '(' → logprob: -17.25
    4. '(this' → logprob: -18.0
    5. ' (' → logprob: -20.375
    6. '=self' → logprob: -20.625
    7. '(s' → logprob: -20.75
    8. '(
' → logprob: -21.0
    9. '   ' → logprob: -21.125
    10. '(sel' → logprob: -22.0

Token 453: '.dot' (ID: 52692)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04121747985482216
    2. 'self' → logprob: -3.916217565536499
    3. '(' → logprob: -4.66621732711792
    4. '.dot' → logprob: -4.66621732711792
    5. '.' → logprob: -7.41621732711792
    6. 'dot' → logprob: -8.166217803955078
    7. ' ' → logprob: -8.791217803955078
    8. ' self' → logprob: -9.166217803955078
    9. '   ' → logprob: -9.291217803955078
    10. ' (' → logprob: -9.666217803955078

Token 454: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -3.650518920039758e-06
    2. 'other' → logprob: -12.625003814697266
    3. '(' → logprob: -15.500003814697266
    4. ' other' → logprob: -15.750003814697266
    5. ' (' → logprob: -19.250003814697266
    6. '(
' → logprob: -20.250003814697266
    7. ')' → logprob: -20.375003814697266
    8. '(object' → logprob: -20.875003814697266
    9. '.other' → logprob: -20.875003814697266
    10. 'Other' → logprob: -21.250003814697266

Token 455: '),' (ID: 936)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.032864946871995926
    2. ',' → logprob: -4.282865047454834
    3. '()),' → logprob: -4.782865047454834
    4. '(' → logprob: -5.282865047454834
    5. '(other' → logprob: -6.032865047454834
    6. '),' → logprob: -6.282865047454834
    7. '()' → logprob: -7.907865047454834
    8. '(self' → logprob: -9.157864570617676
    9. '())' → logprob: -9.157864570617676
    10. '0' → logprob: -9.532864570617676

Token 456: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.375011444091797
    4. '  ' → logprob: -21.625011444091797
    5. ')' → logprob: -21.875011444091797
    6. '۰' → logprob: -21.875011444091797
    7. '    ' → logprob: -23.250011444091797
    8. '00' → logprob: -23.375011444091797
    9. '０' → logprob: -23.625011444091797
    10. '       ' → logprob: -23.750011444091797

Token 457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -20.875
    4. '۰' → logprob: -21.0
    5. '０' → logprob: -22.25
    6. ')' → logprob: -23.375
    7. '00' → logprob: -23.5
    8. '०' → logprob: -23.625
    9. '  ' → logprob: -24.25
    10. 'zero' → logprob: -24.25

Token 458: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002195933135226369
    2. '.' → logprob: -6.127195835113525
    3. ' )' → logprob: -12.252196311950684
    4. '0' → logprob: -12.877196311950684
    5. ')
' → logprob: -13.752196311950684
    6. '))' → logprob: -14.627196311950684
    7. '.)' → logprob: -14.877196311950684
    8. 'e' → logprob: -15.002196311950684
    9. '   ' → logprob: -15.127196311950684
    10. ')

' → logprob: -15.877196311950684

Token 459: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ')' → logprob: -12.500003814697266
    3. ' ' → logprob: -18.125003814697266
    4. '```' → logprob: -18.375003814697266
    5. 'zero' → logprob: -18.875003814697266
    6. '00' → logprob: -19.000003814697266
    7. '5' → logprob: -19.375003814697266
    8. '   ' → logprob: -19.500003814697266
    9. '000' → logprob: -19.750003814697266
    10. '1' → logprob: -20.250003814697266

Token 460: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2948405128554441e-05
    2. ')
' → logprob: -11.62501335144043
    3. ' )' → logprob: -12.75001335144043
    4. '   ' → logprob: -14.37501335144043
    5. '       ' → logprob: -15.75001335144043
    6. '())' → logprob: -16.62501335144043
    7. ')

' → logprob: -16.62501335144043
    8. '<|end|>' → logprob: -16.62501335144043
    9. ')return' → logprob: -16.75001335144043
    10. '),' → logprob: -18.00001335144043

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00047261794679798186
    2. 'def' → logprob: -8.125473022460938
    3. ' def' → logprob: -8.750473022460938
    4. '```' → logprob: -11.750473022460938
    5. '       ' → logprob: -12.125473022460938
    6. ' ' → logprob: -13.500473022460938
    7. '  ' → logprob: -14.125473022460938
    8. '<|end|>' → logprob: -14.250473022460938
    9. ')' → logprob: -14.375473022460938
    10. '	def' → logprob: -14.625473022460938

Token 462: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.030550312250852585
    2. '   ' → logprob: -3.530550241470337
    3. ' def' → logprob: -7.155550479888916
    4. '	def' → logprob: -11.155550003051758
    5. ' ' → logprob: -13.030550003051758
    6. '       ' → logprob: -13.780550003051758
    7. '```' → logprob: -14.405550003051758
    8. '  ' → logprob: -14.405550003051758
    9. '    
' → logprob: -16.405550003051758
    10. ')' → logprob: -16.655550003051758

Token 463: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -4.4418171455617994e-05
    2. ' is' → logprob: -10.375044822692871
    3. 'def' → logprob: -12.375044822692871
    4. 'norm' → logprob: -13.375044822692871
    5. 'angle' → logprob: -13.500044822692871
    6. '   ' → logprob: -13.625044822692871
    7. 'length' → logprob: -13.875044822692871
    8. 'cross' → logprob: -14.500044822692871
    9. '_is' → logprob: -14.750044822692871
    10. 'unit' → logprob: -14.875044822692871

Token 464: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.0005772201111540198
    2. '_' → logprob: -7.750577449798584
    3. '_par' → logprob: -9.750576972961426
    4. '_col' → logprob: -10.000576972961426
    5. '_op' → logprob: -10.750576972961426
    6. '_per' → logprob: -12.000576972961426
    7. '_zero' → logprob: -12.375576972961426
    8. '_equal' → logprob: -12.500576972961426
    9. 'parallel' → logprob: -13.125576972961426
    10. '_scalar' → logprob: -14.250576972961426

Token 465: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018565983918961138
    2. '(' → logprob: -8.6251859664917
    3. ' (' → logprob: -12.1251859664917
    4. 'self' → logprob: -15.6251859664917
    5. '   ' → logprob: -16.125185012817383
    6. '(
' → logprob: -16.250185012817383
    7. '(this' → logprob: -16.625185012817383
    8. ')' → logprob: -16.875185012817383
    9. '       ' → logprob: -17.250185012817383
    10. ' ' → logprob: -17.625185012817383

Token 466: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002187852980569005
    2. ')' → logprob: -6.627187728881836
    3. '(other' → logprob: -8.127187728881836
    4. ',' → logprob: -8.377187728881836
    5. '(' → logprob: -8.877187728881836
    6. ' (' → logprob: -9.252187728881836
    7. 'self' → logprob: -10.502187728881836
    8. ')(' → logprob: -10.502187728881836
    9. '<|end|>' → logprob: -11.377187728881836
    10. '       ' → logprob: -11.627187728881836

Token 467: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.20242440700531006
    2. ' other' → logprob: -1.70242440700531
    3. 'self' → logprob: -6.9524245262146
    4. ' self' → logprob: -10.327424049377441
    5. 'Other' → logprob: -11.077424049377441
    6. '(other' → logprob: -12.452424049377441
    7. '.other' → logprob: -13.702424049377441
    8. '_other' → logprob: -13.827424049377441
    9. '-other' → logprob: -17.827425003051758
    10. '(self' → logprob: -18.077425003051758

Token 468: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.061567600816488266
    2. ')' → logprob: -3.186567544937134
    3. '(self' → logprob: -4.811567783355713
    4. '('' → logprob: -4.936567783355713
    5. ''' → logprob: -6.936567783355713
    6. '(' → logprob: -7.311567783355713
    7. '   ' → logprob: -7.686567783355713
    8. '):' → logprob: -7.936567783355713
    9. ',' → logprob: -8.811567306518555
    10. ' (' → logprob: -9.186567306518555

Token 469: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01108248345553875
    2. ' '' → logprob: -4.511082649230957
    3. ' ' → logprob: -11.136082649230957
    4. ')' → logprob: -12.136082649230957
    5. '   ' → logprob: -12.636082649230957
    6. 'Point' → logprob: -13.011082649230957
    7. '  ' → logprob: -13.136082649230957
    8. '(Point' → logprob: -13.386082649230957
    9. '('' → logprob: -13.886082649230957
    10. '<Point' → logprob: -14.011082649230957

Token 470: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.00013417120499070734
    2. ''' → logprob: -9.000134468078613
    3. ' Point' → logprob: -11.500134468078613
    4. '	Point' → logprob: -15.000134468078613
    5. '(Point' → logprob: -16.250133514404297
    6. '<Point' → logprob: -16.500133514404297
    7. ''s' → logprob: -16.500133514404297
    8. '.Point' → logprob: -16.625133514404297
    9. '_point' → logprob: -17.000133514404297
    10. '_Point' → logprob: -17.250133514404297

Token 471: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5759445428848267
    2. ')' → logprob: -0.8259445428848267
    3. '")' → logprob: -13.075944900512695
    4. ')'' → logprob: -13.700944900512695
    5. '   ' → logprob: -14.825944900512695
    6. ''):
' → logprob: -15.075944900512695
    7. ' ')' → logprob: -15.325944900512695
    8. 'self' → logprob: -15.450944900512695
    9. '`)' → logprob: -15.450944900512695
    10. ''' → logprob: -15.575944900512695

Token 472: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8002679347991943
    2. '->' → logprob: -0.8002679347991943
    3. ' ->' → logprob: -2.3002679347991943
    4. '(self' → logprob: -7.675268173217773
    5. ':' → logprob: -7.675268173217773
    6. '   ' → logprob: -8.675268173217773
    7. '       ' → logprob: -9.175268173217773
    8. ')->' → logprob: -9.675268173217773
    9. '(' → logprob: -10.300268173217773
    10. 'self' → logprob: -11.050268173217773

Token 473: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.003188286442309618
    2. ' bool' → logprob: -5.753188133239746
    3. ''' → logprob: -11.753188133239746
    4. 'float' → logprob: -13.128188133239746
    5. '(bool' → logprob: -15.628188133239746
    6. 'return' → logprob: -15.753188133239746
    7. ' ' → logprob: -16.503189086914062
    8. 'True' → logprob: -16.628189086914062
    9. '	bool' → logprob: -17.003189086914062
    10. '<bool' → logprob: -17.128189086914062

Token 474: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.208622545003891
    2. ')' → logprob: -2.833622455596924
    3. '       ' → logprob: -2.833622455596924
    4. '->' → logprob: -3.708622455596924
    5. ':' → logprob: -3.958622455596924
    6. ' ->' → logprob: -4.083622455596924
    7. '(' → logprob: -4.958622455596924
    8. '   ' → logprob: -6.083622455596924
    9. 'self' → logprob: -7.958622455596924
    10. ')->' → logprob: -8.458622932434082

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06397498399019241
    2. 'return' → logprob: -2.8139750957489014
    3. '   ' → logprob: -6.313974857330322
    4. ' return' → logprob: -8.56397533416748
    5. '	return' → logprob: -12.81397533416748
    6. '```' → logprob: -14.93897533416748
    7. ' ' → logprob: -15.31397533416748
    8. '           ' → logprob: -16.438974380493164
    9. '	' → logprob: -16.938974380493164
    10. '{return' → logprob: -17.188974380493164

Token 476: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -6.539801688631997e-05
    2. ' return' → logprob: -10.250065803527832
    3. '       ' → logprob: -11.000065803527832
    4. '   ' → logprob: -11.250065803527832
    5. '	return' → logprob: -15.750065803527832
    6. '           ' → logprob: -17.125064849853516
    7. ' ' → logprob: -18.125064849853516
    8. 'abs' → logprob: -18.500064849853516
    9. '```' → logprob: -19.625064849853516
    10. '  ' → logprob: -19.625064849853516

Token 477: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00010235115041723475
    2. 'abs' → logprob: -9.250102043151855
    3. ' float' → logprob: -12.000102043151855
    4. 'flo' → logprob: -17.125102996826172
    5. 'fabs' → logprob: -17.250102996826172
    6. '
' → logprob: -18.500102996826172
    7. '   ' → logprob: -19.500102996826172
    8. '(float' → logprob: -19.625102996826172
    9. '	float' → logprob: -19.750102996826172
    10. 'self' → logprob: -19.875102996826172

Token 478: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.0009850544156506658
    2. 'equal' → logprob: -7.500985145568848
    3. 'abs' → logprob: -7.750985145568848
    4. 'Equal' → logprob: -14.125985145568848
    5. '_abs' → logprob: -14.125985145568848
    6. '(abs' → logprob: -16.12598419189453
    7. '_absolute' → logprob: -16.75098419189453
    8. '_EQUAL' → logprob: -17.00098419189453
    9. ' equal' → logprob: -17.62598419189453
    10. 'fabs' → logprob: -19.00098419189453

Token 479: '(self' (ID: 2402)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.2664928138256073
    2. '(self' → logprob: -1.5164928436279297
    3. 'abs' → logprob: -4.26649284362793
    4. 'self' → logprob: -7.76649284362793
    5. ' abs' → logprob: -12.64149284362793
    6. '(' → logprob: -15.64149284362793
    7. '(
' → logprob: -16.51649284362793
    8. '_abs' → logprob: -17.39149284362793
    9. '((' → logprob: -17.51649284362793
    10. 'Abs' → logprob: -17.64149284362793

Token 480: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -1.747814349073451e-05
    2. 'cross' → logprob: -11.250017166137695
    3. '.abs' → logprob: -12.625017166137695
    4. '.' → logprob: -14.500017166137695
    5. '.x' → logprob: -15.250017166137695
    6. '.dot' → logprob: -15.500017166137695
    7. ' cross' → logprob: -16.375017166137695
    8. ' .' → logprob: -17.375017166137695
    9. 'abs' → logprob: -18.125017166137695
    10. '.Cross' → logprob: -18.250017166137695

Token 481: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -2.1008713702030946e-06
    2. 'other' → logprob: -13.125001907348633
    3. '(' → logprob: -17.875001907348633
    4. ' other' → logprob: -19.000001907348633
    5. '(self' → logprob: -20.875001907348633
    6. '(
' → logprob: -21.000001907348633
    7. ')' → logprob: -21.125001907348633
    8. ' (' → logprob: -21.750001907348633
    9. '   ' → logprob: -21.875001907348633
    10. 'Other' → logprob: -22.125001907348633

Token 482: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009930337546393275
    2. '),' → logprob: -7.125993251800537
    3. '(),' → logprob: -8.625992774963379
    4. ' ,' → logprob: -12.250992774963379
    5. ')' → logprob: -13.750992774963379
    6. '(other' → logprob: -13.750992774963379
    7. '   ' → logprob: -13.875992774963379
    8. '(' → logprob: -14.000992774963379
    9. '       ' → logprob: -15.000992774963379
    10. '0' → logprob: -16.750993728637695

Token 483: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002187256934121251
    2. ' ' → logprob: -6.127187252044678
    3. '   ' → logprob: -13.127187728881836
    4. '  ' → logprob: -16.127187728881836
    5. '```' → logprob: -17.752187728881836
    6. ' ' → logprob: -18.377187728881836
    7. '       ' → logprob: -18.752187728881836
    8. '    ' → logprob: -18.814687728881836
    9. ')' → logprob: -19.314687728881836
    10. '     ' → logprob: -19.439687728881836

Token 484: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.00001335144043
    4. '```' → logprob: -18.00001335144043
    5. '  ' → logprob: -18.62501335144043
    6. '۰' → logprob: -19.18751335144043
    7. ')' → logprob: -19.81251335144043
    8. 'zero' → logprob: -20.43751335144043
    9. '.' → logprob: -20.50001335144043
    10. '``' → logprob: -20.50001335144043

Token 485: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.061676347395405e-05
    2. '0' → logprob: -10.12505054473877
    3. ')' → logprob: -11.50005054473877
    4. ' ' → logprob: -16.000051498413086
    5. '.)' → logprob: -16.000051498413086
    6. '   ' → logprob: -17.000051498413086
    7. ' .' → logprob: -17.000051498413086
    8. '```' → logprob: -17.250051498413086
    9. ').' → logprob: -17.750051498413086
    10. '000' → logprob: -18.000051498413086

Token 486: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ')' → logprob: -17.625
    3. '```' → logprob: -18.5
    4. '10' → logprob: -19.5
    5. ' ' → logprob: -20.0
    6. '00' → logprob: -20.875
    7. '   ' → logprob: -21.375
    8. 'zero' → logprob: -22.375
    9. '9' → logprob: -22.625
    10. '``' → logprob: -22.625

Token 487: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3782830137643032e-05
    2. ')
' → logprob: -11.25001335144043
    3. ' )' → logprob: -15.50001335144043
    4. '       ' → logprob: -15.75001335144043
    5. ')return' → logprob: -15.87501335144043
    6. '<|end|>' → logprob: -16.00001335144043
    7. '   ' → logprob: -16.62501335144043
    8. '')' → logprob: -18.00001335144043
    9. ')

' → logprob: -18.00001335144043
    10. '))' → logprob: -18.12501335144043

Token 488: 'Vector' (ID: 7580)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02093689888715744
    2. '=' → logprob: -3.895936965942383
    3. '(Point' → logprob: -8.520936965942383
    4. '(' → logprob: -9.645936965942383
    5. ':' → logprob: -10.020936965942383
    6. ')' → logprob: -10.645936965942383
    7. '<|end|>' → logprob: -10.770936965942383
    8. '(Vector' → logprob: -11.520936965942383
    9. ' ' → logprob: -11.895936965942383
    10. '   ' → logprob: -12.770936965942383

Token 490: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0003546502848621458
    2. 'List' → logprob: -8.000354766845703
    3. ' Point' → logprob: -11.125354766845703
    4. 'Vector' → logprob: -12.375354766845703
    5. '	Point' → logprob: -16.000354766845703
    6. '   ' → logprob: -17.500354766845703
    7. 'Points' → logprob: -18.625354766845703
    8. '(Point' → logprob: -18.625354766845703
    9. ' ' → logprob: -18.750354766845703
    10. 'Tuple' → logprob: -19.625354766845703

Token 491: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5714114308357239
    2. '<|end|>' → logprob: -1.696411371231079
    3. 'def' → logprob: -2.196411371231079
    4. '
' → logprob: -2.321411371231079
    5. '

' → logprob: -3.196411371231079
    6. '<|end|>' → logprob: -6.946411609649658
    7. '#' → logprob: -8.5714111328125
    8. 'from' → logprob: -9.3214111328125
    9. '@dat' → logprob: -9.4464111328125
    10. '```' → logprob: -9.5714111328125

Token 492: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6352055668830872
    2. 'class' → logprob: -0.7602055668830872
    3. '<|end|>' → logprob: -6.5102057456970215
    4. 'from' → logprob: -7.6352057456970215
    5. '#' → logprob: -7.7602057456970215
    6. '```' → logprob: -9.510205268859863
    7. 'import' → logprob: -10.135205268859863
    8. '@dat' → logprob: -10.635205268859863
    9. '<|end|>' → logprob: -11.010205268859863
    10. 'Explain' → logprob: -11.510205268859863

Token 493: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.5197962522506714
    2. 'Line' → logprob: -1.5197962522506714
    3. 'Polygon' → logprob: -1.8947962522506714
    4. 'Circle' → logprob: -4.144796371459961
    5. ' Segment' → logprob: -5.269796371459961
    6. ' Line' → logprob: -5.394796371459961
    7. ' Polygon' → logprob: -5.394796371459961
    8. 'Geometry' → logprob: -5.894796371459961
    9. 'Conv' → logprob: -6.644796371459961
    10. 'Vector' → logprob: -6.894796371459961

Token 494: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2113979209971149e-05
    2. ':
' → logprob: -12.250012397766113
    3. '():' → logprob: -13.250012397766113
    4. ':

' → logprob: -13.500012397766113
    5. '):' → logprob: -13.625012397766113
    6. '(' → logprob: -13.750012397766113
    7. '(object' → logprob: -14.500012397766113
    8. '<|end|>' → logprob: -14.750012397766113
    9. ':**' → logprob: -15.000012397766113
    10. ':def' → logprob: -15.375012397766113

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04303549975156784
    2. 'def' → logprob: -3.2930355072021484
    3. 'class' → logprob: -5.543035507202148
    4. '
' → logprob: -7.168035507202148
    5. '    
' → logprob: -8.293035507202148
    6. ' def' → logprob: -10.543035507202148
    7. '  
' → logprob: -11.418035507202148
    8. '

' → logprob: -13.293035507202148
    9. ' 
' → logprob: -13.543035507202148
    10. '	def' → logprob: -13.668035507202148

Token 496: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00024168188974726945
    2. ' def' → logprob: -8.37524127960205
    3. '   ' → logprob: -12.25024127960205
    4. '__' → logprob: -12.87524127960205
    5. 'class' → logprob: -13.25024127960205
    6. ':def' → logprob: -14.62524127960205
    7. '```' → logprob: -14.62524127960205
    8. '
' → logprob: -14.75024127960205
    9. '	def' → logprob: -14.87524127960205
    10. ':' → logprob: -16.375242233276367

Token 497: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02009846456348896
    2. 'init' → logprob: -4.020098686218262
    3. '_init' → logprob: -6.770098686218262
    4. ' __' → logprob: -7.145098686218262
    5. '```' → logprob: -12.270098686218262
    6. 'def' → logprob: -12.645098686218262
    7. '___' → logprob: -13.520098686218262
    8. ' init' → logprob: -14.770098686218262
    9. '.__' → logprob: -15.645098686218262
    10. '__(' → logprob: -16.020097732543945

Token 498: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'def' → logprob: -16.75
    3. '_init' → logprob: -17.25
    4. '__' → logprob: -21.125
    5. ' init' → logprob: -22.25
    6. '.init' → logprob: -22.25
    7. 'ini' → logprob: -22.5
    8. 'inite' → logprob: -22.75
    9. 'repr' → logprob: -22.875
    10. '(init' → logprob: -22.875

Token 499: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.11369439959526062
    2. '(self' → logprob: -2.238694429397583
    3. '(' → logprob: -7.863694190979004
    4. 'self' → logprob: -8.238694190979004
    5. '__' → logprob: -9.363694190979004
    6. '__(
' → logprob: -9.613694190979004
    7. '_(' → logprob: -9.988694190979004
    8. 'def' → logprob: -12.363694190979004
    9. ' (' → logprob: -12.363694190979004
    10. '```' → logprob: -12.738694190979004

Token 500: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.248469718324486e-05
    2. ' self' → logprob: -10.750022888183594
    3. '   ' → logprob: -14.750022888183594
    4. ',' → logprob: -15.125022888183594
    5. 'def' → logprob: -16.375022888183594
    6. '(self' → logprob: -16.750022888183594
    7. '0' → logprob: -17.250022888183594
    8. 's' → logprob: -18.500022888183594
    9. '       ' → logprob: -18.500022888183594
    10. 'elf' → logprob: -19.000022888183594

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17316000163555145
    2. 'self' → logprob: -1.9231599569320679
    3. '(self' → logprob: -4.423160076141357
    4. ' self' → logprob: -8.0481595993042
    5. '   ' → logprob: -8.4231595993042
    6. '       ' → logprob: -8.6731595993042
    7. ' (' → logprob: -9.5481595993042
    8. ',
' → logprob: -11.0481595993042
    9. ')' → logprob: -11.2981595993042
    10. ',self' → logprob: -11.2981595993042

Token 502: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004320996522437781
    2. ' p' → logprob: -8.625432014465332
    3. 'start' → logprob: -9.250432014465332
    4. 'a' → logprob: -9.500432014465332
    5. 'self' → logprob: -9.875432014465332
    6. 's' → logprob: -11.125432014465332
    7. 'pos' → logprob: -12.000432014465332
    8. '   ' → logprob: -12.375432014465332
    9. 'from' → logprob: -13.375432014465332
    10. 'left' → logprob: -13.875432014465332

Token 503: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03986165300011635
    2. '1' → logprob: -3.4148616790771484
    3. 'oint' → logprob: -5.664861679077148
    4. 'oints' → logprob: -6.664861679077148
    5. ',' → logprob: -7.039861679077148
    6. '0' → logprob: -8.664861679077148
    7. ')' → logprob: -9.664861679077148
    8. 'y' → logprob: -10.164861679077148
    9. 'A' → logprob: -10.164861679077148
    10. ' :' → logprob: -10.414861679077148

Token 504: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026307733729481697
    2. ',' → logprob: -3.6513078212738037
    3. '=' → logprob: -12.401308059692383
    4. ')' → logprob: -14.526308059692383
    5. '   ' → logprob: -14.776308059692383
    6. ':,' → logprob: -14.776308059692383
    7. '```' → logprob: -14.901308059692383
    8. ',p' → logprob: -15.401308059692383
    9. ' :' → logprob: -15.401308059692383
    10. '=None' → logprob: -15.776308059692383

Token 505: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0005077573587186635
    2. ' Point' → logprob: -7.750507831573486
    3. 'Vector' → logprob: -9.625507354736328
    4. ''' → logprob: -11.625507354736328
    5. '	Point' → logprob: -13.875507354736328
    6. '_Point' → logprob: -14.875507354736328
    7. '_point' → logprob: -15.250507354736328
    8. ' '' → logprob: -15.750507354736328
    9. ')' → logprob: -16.125507354736328
    10. '<Point' → logprob: -16.125507354736328

Token 506: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -5.796184723294573e-06
    2. ',p' → logprob: -12.625005722045898
    3. ' ,' → logprob: -13.000005722045898
    4. '   ' → logprob: -15.875005722045898
    5. 'p' → logprob: -17.3750057220459
    6. ',
' → logprob: -17.8750057220459
    7. '‌,' → logprob: -18.3750057220459
    8. '=' → logprob: -18.5000057220459
    9. ' p' → logprob: -18.6250057220459
    10. ':' → logprob: -18.6250057220459

Token 507: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1002933606505394
    2. 'Point' → logprob: -2.3502933979034424
    3. ' None' → logprob: -9.850293159484863
    4. ' Point' → logprob: -10.350293159484863
    5. '0' → logprob: -13.225293159484863
    6. '   ' → logprob: -16.60029411315918
    7. '(Point' → logprob: -16.97529411315918
    8. '=None' → logprob: -17.10029411315918
    9. '	Point' → logprob: -18.22529411315918
    10. ' ' → logprob: -18.85029411315918

Token 508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.64708495605737e-05
    2. ',p' → logprob: -9.750066757202148
    3. ' ,' → logprob: -11.750066757202148
    4. 'p' → logprob: -15.750066757202148
    5. ' p' → logprob: -17.00006675720215
    6. '‌,' → logprob: -17.75006675720215
    7. ',
' → logprob: -18.00006675720215
    8. '   ' → logprob: -18.00006675720215
    9. ' or' → logprob: -18.37506675720215
    10. ' ' → logprob: -18.62506675720215

Token 509: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5759668350219727
    2. ' p' → logprob: -0.8259668350219727
    3. 'None' → logprob: -11.450966835021973
    4. ' None' → logprob: -11.950966835021973
    5. '	p' → logprob: -12.200966835021973
    6. '   ' → logprob: -13.450966835021973
    7. '    ' → logprob: -13.450966835021973
    8. ' ' → logprob: -13.825966835021973
    9. ' ' → logprob: -14.450966835021973
    10. ')' → logprob: -16.575965881347656

Token 510: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.416665640543215e-05
    2. 'oint' → logprob: -10.62503433227539
    3. 'oints' → logprob: -11.62503433227539
    4. '1' → logprob: -15.00003433227539
    5. '```' → logprob: -15.87503433227539
    6. 'ont' → logprob: -16.25003433227539
    7. 't' → logprob: -16.87503433227539
    8. 'Point' → logprob: -17.62503433227539
    9. 'int' → logprob: -17.62503433227539
    10. 'ointe' → logprob: -17.62503433227539

Token 511: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015229015843942761
    2. '=None' → logprob: -9.625152587890625
    3. '=' → logprob: -9.750152587890625
    4. ')' → logprob: -10.750152587890625
    5. ' :' → logprob: -12.875152587890625
    6. '):' → logprob: -13.750152587890625
    7. ' =' → logprob: -13.875152587890625
    8. '   ' → logprob: -14.375152587890625
    9. ',' → logprob: -14.875152587890625
    10. '...' → logprob: -15.500152587890625

Token 512: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.02399866282939911
    2. ' Point' → logprob: -3.773998737335205
    3. 'None' → logprob: -7.273998737335205
    4. ' None' → logprob: -9.773998260498047
    5. '	Point' → logprob: -13.273998260498047
    6. '.Point' → logprob: -15.398998260498047
    7. '<Point' → logprob: -15.523998260498047
    8. '_Point' → logprob: -15.648998260498047
    9. '_point' → logprob: -16.273998260498047
    10. '   ' → logprob: -16.523998260498047

Token 513: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30087098479270935
    2. ' =' → logprob: -2.050870895385742
    3. '=None' → logprob: -2.175870895385742
    4. ')' → logprob: -4.175870895385742
    5. 'None' → logprob: -6.425870895385742
    6. ' None' → logprob: -7.675870895385742
    7. '(None' → logprob: -8.550870895385742
    8. ' ' → logprob: -11.300870895385742
    9. '):' → logprob: -11.425870895385742
    10. ',' → logprob: -11.800870895385742

Token 514: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00043138445471413434
    2. ' None' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.625431060791016
    4. 'Point' → logprob: -15.750431060791016
    5. '=None' → logprob: -16.750431060791016
    6. '0' → logprob: -17.375431060791016
    7. '(None' → logprob: -17.375431060791016
    8. 'none' → logprob: -18.125431060791016
    9. '_None' → logprob: -18.375431060791016
    10. ' ' → logprob: -19.000431060791016

Token 515: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10860902816057205
    2. '):' → logprob: -2.3586089611053467
    3. '):
' → logprob: -5.483609199523926
    4. ',' → logprob: -5.483609199523926
    5. '   ' → logprob: -9.983609199523926
    6. ':' → logprob: -12.483609199523926
    7. ' )' → logprob: -13.108609199523926
    8. '       ' → logprob: -13.358609199523926
    9. '):

' → logprob: -13.358609199523926
    10. '):
' → logprob: -13.983609199523926

Token 516: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03408706933259964
    2. ':
' → logprob: -3.4090871810913086
    3. '       ' → logprob: -8.659087181091309
    4. ',' → logprob: -9.659087181091309
    5. '):
' → logprob: -9.659087181091309
    6. '   ' → logprob: -10.409087181091309
    7. ')' → logprob: -10.409087181091309
    8. '->' → logprob: -10.409087181091309
    9. '):' → logprob: -10.909087181091309
    10. ' ->' → logprob: -11.159087181091309

Token 517: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0019286326132714748
    2. ' None' → logprob: -6.251928806304932
    3. '_None' → logprob: -21.001928329467773
    4. 'No' → logprob: -21.876928329467773
    5. ' ' → logprob: -22.626928329467773
    6. '(None' → logprob: -22.751928329467773
    7. 'none' → logprob: -23.001928329467773
    8. '=None' → logprob: -23.126928329467773
    9. 'void' → logprob: -23.251928329467773
    10. '   ' → logprob: -23.751928329467773

Token 518: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002596822800114751
    2. ':
' → logprob: -6.002596855163574
    3. '):' → logprob: -10.002596855163574
    4. '       ' → logprob: -10.377596855163574
    5. '<|end|>' → logprob: -11.252596855163574
    6. '):
' → logprob: -11.377596855163574
    7. ',' → logprob: -11.502596855163574
    8. '   ' → logprob: -12.252596855163574
    9. ')' → logprob: -14.127596855163574
    10. '():' → logprob: -14.252596855163574

Token 519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001205893131555058
    2. ' if' → logprob: -9.625120162963867
    3. '   ' → logprob: -10.000120162963867
    4. 'if' → logprob: -12.125120162963867
    5. '	' → logprob: -13.750120162963867
    6. '	   ' → logprob: -14.375120162963867
    7. '<|end|>' → logprob: -15.125120162963867
    8. 'self' → logprob: -15.375120162963867
    9. '	if' → logprob: -15.625120162963867
    10. '[' → logprob: -15.750120162963867

Token 520: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03132310137152672
    2. 'if' → logprob: -3.531323194503784
    3. '       ' → logprob: -6.531322956085205
    4. ' self' → logprob: -9.281323432922363
    5. ' if' → logprob: -10.781323432922363
    6. '	self' → logprob: -15.406323432922363
    7. '   ' → logprob: -15.906323432922363
    8. 'If' → logprob: -18.281322479248047
    9. 'super' → logprob: -18.656322479248047
    10. '(self' → logprob: -18.656322479248047

Token 521: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.016755210235714912
    2. '.' → logprob: -4.141755104064941
    3. 'p' → logprob: -7.766755104064941
    4. '.__' → logprob: -9.141755104064941
    5. '._' → logprob: -10.016755104064941
    6. ':' → logprob: -10.266755104064941
    7. '=' → logprob: -10.516755104064941
    8. ' .' → logprob: -10.766755104064941
    9. ' =' → logprob: -11.016755104064941
    10. '   ' → logprob: -11.891755104064941

Token 522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.652451464906335e-05
    2. 'oints' → logprob: -11.250016212463379
    3. 'oint' → logprob: -12.875016212463379
    4. '   ' → logprob: -15.375016212463379
    5. '_' → logprob: -15.375016212463379
    6. 'p' → logprob: -16.125017166137695
    7. '' → logprob: -16.625017166137695
    8. 'r' → logprob: -16.875017166137695
    9. '```' → logprob: -16.875017166137695
    10. 'def' → logprob: -16.875017166137695

Token 523: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10044216364622116
    2. ' =' → logprob: -2.3504421710968018
    3. ',' → logprob: -9.100441932678223
    4. '=p' → logprob: -9.100441932678223
    5. ':' → logprob: -12.600441932678223
    6. '=None' → logprob: -13.100441932678223
    7. ' p' → logprob: -13.975441932678223
    8. ')' → logprob: -13.975441932678223
    9. '<|end|>' → logprob: -14.100441932678223
    10. ',p' → logprob: -14.100441932678223

Token 524: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.030051419511437416
    2. ' Point' → logprob: -3.5300514698028564
    3. 'p' → logprob: -8.280051231384277
    4. ' p' → logprob: -10.030051231384277
    5. '	Point' → logprob: -13.780051231384277
    6. 'Optional' → logprob: -14.530051231384277
    7. 'Points' → logprob: -14.905051231384277
    8. '   ' → logprob: -15.030051231384277
    9. '(Point' → logprob: -15.155051231384277
    10. ' ' → logprob: -15.905051231384277

Token 525: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20151878893375397
    2. ' =' → logprob: -1.7015187740325928
    3. '=p' → logprob: -9.326519012451172
    4. '=None' → logprob: -11.576519012451172
    5. '<|end|>' → logprob: -12.951519012451172
    6. ' ' → logprob: -13.576519012451172
    7. ',' → logprob: -13.701519012451172
    8. '   ' → logprob: -14.451519012451172
    9. ')' → logprob: -15.201519012451172
    10. 'p' → logprob: -15.576519012451172

Token 526: ' Point' (ID: 9971)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008999554440379143
    2. ' p' → logprob: -4.758999347686768
    3. 'Point' → logprob: -8.008999824523926
    4. ' Point' → logprob: -10.133999824523926
    5. '   ' → logprob: -11.758999824523926
    6. ' ' → logprob: -13.508999824523926
    7. 'point' → logprob: -14.008999824523926
    8. '	p' → logprob: -14.008999824523926
    9. '(p' → logprob: -14.758999824523926
    10. 'Segment' → logprob: -15.446499824523926

Token 527: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008681101026013494
    2. '()
' → logprob: -7.250868320465088
    3. '0' → logprob: -9.25086784362793
    4. '(' → logprob: -10.00086784362793
    5. 'if' → logprob: -11.50086784362793
    6. '()

' → logprob: -12.00086784362793
    7. '(),' → logprob: -16.37586784362793
    8. 'p' → logprob: -16.37586784362793
    9. '())' → logprob: -16.87586784362793
    10. '(p' → logprob: -17.62586784362793

Token 528: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06530500203371048
    2. '       ' → logprob: -3.06530499458313
    3. 'if' → logprob: -4.190305233001709
    4. '   ' → logprob: -7.815305233001709
    5. '	if' → logprob: -7.815305233001709
    6. '<|end|>' → logprob: -7.815305233001709
    7. ' or' → logprob: -9.44030475616455
    8. '	' → logprob: -9.69030475616455
    9. ' ' → logprob: -10.06530475616455
    10. '
' → logprob: -10.69030475616455

Token 529: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.547789674485102e-05
    2. ' p' → logprob: -10.250035285949707
    3. '	p' → logprob: -20.250036239624023
    4. '<p' → logprob: -20.625036239624023
    5. '   ' → logprob: -21.750036239624023
    6. '(p' → logprob: -22.500036239624023
    7. '$p' → logprob: -25.125036239624023
    8. '_p' → logprob: -25.250036239624023
    9. '       ' → logprob: -25.875036239624023
    10. '[p' → logprob: -25.875036239624023

Token 530: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.019237768370658e-05
    2. '2' → logprob: -9.375090599060059
    3. 'oints' → logprob: -14.125090599060059
    4. '=p' → logprob: -14.125090599060059
    5. 'p' → logprob: -14.500090599060059
    6. '=None' → logprob: -14.875090599060059
    7. ' p' → logprob: -15.062590599060059
    8. 'None' → logprob: -15.125090599060059
    9. 'aram' → logprob: -15.125090599060059
    10. '```' → logprob: -15.125090599060059

Token 531: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1269323080778122
    2. 'is' → logprob: -2.126932382583618
    3. ' ' → logprob: -13.126932144165039
    4. ')' → logprob: -14.501932144165039
    5. 'p' → logprob: -14.501932144165039
    6. '	is' → logprob: -15.126932144165039
    7. ' p' → logprob: -15.376932144165039
    8. '==' → logprob: -15.376932144165039
    9. ')is' → logprob: -15.751932144165039
    10. 'if' → logprob: -15.876932144165039

Token 532: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.547789674485102e-05
    2. ' None' → logprob: -10.250035285949707
    3. 'none' → logprob: -17.500036239624023
    4. '_None' → logprob: -17.500036239624023
    5. '=None' → logprob: -17.750036239624023
    6. '   ' → logprob: -18.125036239624023
    7. '(None' → logprob: -18.625036239624023
    8. '...' → logprob: -20.250036239624023
    9. '_none' → logprob: -21.000036239624023
    10. ',None' → logprob: -21.875036239624023

Token 533: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5759450793266296
    2. 'else' → logprob: -0.8259450793266296
    3. '	else' → logprob: -12.575944900512695
    4. '        ' → logprob: -13.950944900512695
    5. 'p' → logprob: -15.200944900512695
    6. '       ' → logprob: -15.700944900512695
    7. ' ' → logprob: -15.825944900512695
    8. '()' → logprob: -15.825944900512695
    9. '_else' → logprob: -15.950944900512695
    10. ' or' → logprob: -16.200944900512695

Token 534: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.8087270038668066e-05
    2. ' p' → logprob: -10.500027656555176
    3. 'Point' → logprob: -15.125027656555176
    4. 'point' → logprob: -16.000028610229492
    5. '	p' → logprob: -16.875028610229492
    6. '   ' → logprob: -17.125028610229492
    7. '<p' → logprob: -18.250028610229492
    8. '(p' → logprob: -18.625028610229492
    9. 'points' → logprob: -18.750028610229492
    10. 'copy' → logprob: -18.812528610229492

Token 535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. 'oint' → logprob: -11.875007629394531
    3. 'p' → logprob: -15.125007629394531
    4. 'oints' → logprob: -16.25000762939453
    5. '```' → logprob: -17.00000762939453
    6. '(p' → logprob: -17.12500762939453
    7. 'oin' → logprob: -18.12500762939453
    8. 'Point' → logprob: -18.37500762939453
    9. '.p' → logprob: -19.00000762939453
    10. '１' → logprob: -19.00000762939453

Token 536: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004213786742184311
    2. '<|end|>' → logprob: -8.500421524047852
    3. 'self' → logprob: -9.500421524047852
    4. '
' → logprob: -9.875421524047852
    5. '   ' → logprob: -10.000421524047852
    6. '	' → logprob: -11.000421524047852
    7. 'p' → logprob: -12.375421524047852
    8. '<|end|>' → logprob: -12.625421524047852
    9. ' ' → logprob: -12.750421524047852
    10. 's' → logprob: -13.250421524047852

Token 537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.9650025428272784e-05
    2. 'self' → logprob: -10.250040054321289
    3. '	' → logprob: -13.750040054321289
    4. '   ' → logprob: -13.875040054321289
    5. ' self' → logprob: -14.000040054321289
    6. '<|end|>' → logprob: -14.750040054321289
    7. '           ' → logprob: -15.375040054321289
    8. '	self' → logprob: -16.00004005432129
    9. '      ' → logprob: -16.12504005432129
    10. '               ' → logprob: -16.37504005432129

Token 538: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004675522446632385
    2. '       ' → logprob: -5.754675388336182
    3. ' self' → logprob: -6.504675388336182
    4. '	self' → logprob: -15.75467586517334
    5. '   ' → logprob: -16.629674911499023
    6. ' ' → logprob: -18.129674911499023
    7. '	' → logprob: -19.004674911499023
    8. 's' → logprob: -19.504674911499023
    9. '(self' → logprob: -19.754674911499023
    10. ' ' → logprob: -20.004674911499023

Token 539: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -8.995397365652025e-05
    2. '.' → logprob: -9.750089645385742
    3. 'p' → logprob: -10.625089645385742
    4. ' .' → logprob: -12.250089645385742
    5. '```' → logprob: -14.375089645385742
    6. '2' → logprob: -15.000089645385742
    7. ' ' → logprob: -15.500089645385742
    8. '   ' → logprob: -15.625089645385742
    9. ':' → logprob: -16.000089645385742
    10. '<p' → logprob: -16.125089645385742

Token 540: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. 'oints' → logprob: -16.625
    3. '۲' → logprob: -17.0
    4. 'p' → logprob: -17.0
    5. '２' → logprob: -17.625
    6. '   ' → logprob: -17.9375
    7. '₂' → logprob: -18.0
    8. 'oint' → logprob: -18.0
    9. '1' → logprob: -18.0625
    10. 'def' → logprob: -18.25

Token 541: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24624361097812653
    2. ':' → logprob: -1.9962435960769653
    3. ' =' → logprob: -2.496243715286255
    4. '<|end|>' → logprob: -10.871243476867676
    5. ' :' → logprob: -12.871243476867676
    6. ')' → logprob: -12.996243476867676
    7. ' if' → logprob: -13.746243476867676
    8. ' is' → logprob: -13.996243476867676
    9. '=None' → logprob: -14.121243476867676
    10. '<|end|>' → logprob: -14.246243476867676

Token 542: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.03343716636300087
    2. ' Point' → logprob: -3.9084372520446777
    3. 'p' → logprob: -4.408437252044678
    4. ' p' → logprob: -7.408437252044678
    5. 'Segment' → logprob: -10.65843677520752
    6. '(Point' → logprob: -13.40843677520752
    7. 'point' → logprob: -13.40843677520752
    8. 'None' → logprob: -13.53343677520752
    9. '_point' → logprob: -13.65843677520752
    10. '	Point' → logprob: -13.90843677520752

Token 543: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1170971468091011
    2. ' =' → logprob: -2.4920971393585205
    3. ' if' → logprob: -3.6170971393585205
    4. 'if' → logprob: -7.1170973777771
    5. ' is' → logprob: -9.492096900939941
    6. ' or' → logprob: -12.367096900939941
    7. ':' → logprob: -12.992096900939941
    8. '<|end|>' → logprob: -12.992096900939941
    9. 'is' → logprob: -13.242096900939941
    10. ' ' → logprob: -13.492096900939941

Token 544: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.006762263830751181
    2. ' Point' → logprob: -5.2567620277404785
    3. 'p' → logprob: -6.5067620277404785
    4. ' p' → logprob: -10.381762504577637
    5. 'Segment' → logprob: -13.006762504577637
    6. '	Point' → logprob: -15.131762504577637
    7. '_point' → logprob: -15.881762504577637
    8. 'Vector' → logprob: -16.25676155090332
    9. '(Point' → logprob: -16.63176155090332
    10. 'point' → logprob: -17.25676155090332

Token 545: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.512236498361744e-07
    2. 'if' → logprob: -14.875000953674316
    3. '()
' → logprob: -16.0
    4. ' ()' → logprob: -17.25
    5. 'p' → logprob: -17.75
    6. ')' → logprob: -18.25
    7. ' if' → logprob: -18.5
    8. '```' → logprob: -19.0
    9. '0' → logprob: -19.25
    10. '())' → logprob: -20.0

Token 546: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2520250976085663
    2. ' if' → logprob: -1.5020251274108887
    3. '()' → logprob: -9.37702465057373
    4. 'If' → logprob: -11.87702465057373
    5. 'p' → logprob: -13.25202465057373
    6. '(p' → logprob: -13.87702465057373
    7. '(' → logprob: -14.25202465057373
    8. '	if' → logprob: -15.50202465057373
    9. '<|end|>' → logprob: -15.75202465057373
    10. '(if' → logprob: -16.127025604248047

Token 547: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00038014890742488205
    2. ' p' → logprob: -7.875380039215088
    3. '(p' → logprob: -18.12537956237793
    4. '   ' → logprob: -18.25037956237793
    5. '	p' → logprob: -18.37537956237793
    6. '<p' → logprob: -19.75037956237793
    7. '```' → logprob: -20.00037956237793
    8. 'None' → logprob: -20.37537956237793
    9. ' ' → logprob: -20.37537956237793
    10. ')p' → logprob: -20.62537956237793

Token 548: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002669384120963514
    2. 'p' → logprob: -8.250267028808594
    3. 'None' → logprob: -12.625267028808594
    4. '```' → logprob: -13.625267028808594
    5. ' p' → logprob: -15.125267028808594
    6. '   ' → logprob: -15.750267028808594
    7. '1' → logprob: -16.125267028808594
    8. '_' → logprob: -16.375267028808594
    9. '=None' → logprob: -16.500267028808594
    10. 'is' → logprob: -16.500267028808594

Token 549: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5759397745132446
    2. 'is' → logprob: -0.8259397745132446
    3. '	is' → logprob: -15.825940132141113
    4. 'None' → logprob: -16.700939178466797
    5. ')' → logprob: -17.075939178466797
    6. ')is' → logprob: -17.325939178466797
    7. '==' → logprob: -17.950939178466797
    8. '```' → logprob: -17.950939178466797
    9. '=None' → logprob: -18.075939178466797
    10. ' ' → logprob: -18.200939178466797

Token 550: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00020354038861114532
    2. ' None' → logprob: -8.500203132629395
    3. '(None' → logprob: -17.75020408630371
    4. 'none' → logprob: -18.00020408630371
    5. '_None' → logprob: -18.75020408630371
    6. '=None' → logprob: -19.00020408630371
    7. '   ' → logprob: -19.62520408630371
    8. ' ' → logprob: -21.50020408630371
    9. '.None' → logprob: -21.75020408630371
    10. '_none' → logprob: -21.87520408630371

Token 551: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.018151111900806427
    2. ' else' → logprob: -4.01815128326416
    3. '	else' → logprob: -14.39315128326416
    4. '        ' → logprob: -15.51815128326416
    5. ':' → logprob: -15.64315128326416
    6. '       ' → logprob: -16.393150329589844
    7. ' ' → logprob: -16.893150329589844
    8. '           ' → logprob: -17.268150329589844
    9. '         ' → logprob: -17.768150329589844
    10. '_else' → logprob: -17.893150329589844

Token 552: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5048530030981055e-06
    2. ' p' → logprob: -13.500001907348633
    3. '	p' → logprob: -20.750001907348633
    4. '(p' → logprob: -21.250001907348633
    5. '<p' → logprob: -21.375001907348633
    6. '   ' → logprob: -21.500001907348633
    7. ')p' → logprob: -23.000001907348633
    8. '```' → logprob: -23.250001907348633
    9. '_p' → logprob: -23.500001907348633
    10. ' ' → logprob: -23.625001907348633

Token 553: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038300611777231097
    2. 'p' → logprob: -7.875382900238037
    3. '(p' → logprob: -13.875383377075195
    4. ' p' → logprob: -14.375383377075195
    5. '```' → logprob: -15.000383377075195
    6. '   ' → logprob: -15.500383377075195
    7. 't' → logprob: -15.625383377075195
    8. 'oints' → logprob: -16.000383377075195
    9. '.p' → logprob: -16.250383377075195
    10. 's' → logprob: -16.375383377075195

Token 554: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1372056007385254
    2. '
' → logprob: -2.5122056007385254
    3. '<|end|>' → logprob: -3.1372056007385254
    4. 'def' → logprob: -6.637205600738525
    5. '<|end|>' → logprob: -6.762205600738525
    6. '    
' → logprob: -7.512205600738525
    7. '

' → logprob: -8.012205123901367
    8. ' def' → logprob: -8.887205123901367
    9. ' ' → logprob: -9.637205123901367
    10. '       ' → logprob: -9.887205123901367

Token 555: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13420982658863068
    2. '
' → logprob: -2.3842098712921143
    3. '<|end|>' → logprob: -3.5092098712921143
    4. 'def' → logprob: -6.384209632873535
    5. '    
' → logprob: -7.009209632873535
    6. '<|end|>' → logprob: -7.759209632873535
    7. '```' → logprob: -8.134209632873535
    8. ' def' → logprob: -9.884209632873535
    9. '

' → logprob: -10.134209632873535
    10. ')' → logprob: -10.759209632873535

Token 556: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001987722353078425
    2. '   ' → logprob: -8.875198364257812
    3. '@property' → logprob: -10.000198364257812
    4. ' def' → logprob: -11.375198364257812
    5. '<|end|>' → logprob: -14.125198364257812
    6. '```' → logprob: -15.500198364257812
    7. '
' → logprob: -15.625198364257812
    8. ' ' → logprob: -15.750198364257812
    9. '	def' → logprob: -15.875198364257812
    10. '@' → logprob: -16.000198364257812

Token 557: ' __' (ID: 2516)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.023565027862787247
    2. ' length' → logprob: -4.27356481552124
    3. '__' → logprob: -4.89856481552124
    4. ' __' → logprob: -6.39856481552124
    5. 'len' → logprob: -9.273565292358398
    6. 'repr' → logprob: -9.398565292358398
    7. 'vector' → logprob: -10.273565292358398
    8. '_length' → logprob: -11.523565292358398
    9. 'leng' → logprob: -12.273565292358398
    10. 'vec' → logprob: -12.898565292358398

Token 558: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -5.824579784530215e-05
    2. 'eq' → logprob: -10.2500581741333
    3. 'init' → logprob: -10.7500581741333
    4. 'lt' → logprob: -13.6250581741333
    5. 'str' → logprob: -16.500059127807617
    6. 'rep' → logprob: -16.625059127807617
    7. 'len' → logprob: -17.625059127807617
    8. ' repr' → logprob: -18.875059127807617
    9. 'contains' → logprob: -19.875059127807617
    10. 'bool' → logprob: -20.125059127807617

Token 559: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.002484573284164071
    2. '(self' → logprob: -6.0024847984313965
    3. '__(
' → logprob: -12.127484321594238
    4. '__' → logprob: -13.002484321594238
    5. '_(' → logprob: -14.377484321594238
    6. '(' → logprob: -15.627484321594238
    7. '__('' → logprob: -15.877484321594238
    8. '__("' → logprob: -16.002485275268555
    9. '```' → logprob: -16.127485275268555
    10. 'self' → logprob: -16.627485275268555

Token 560: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.816093228830141e-06
    2. ' self' → logprob: -12.87500286102295
    3. '(self' → logprob: -16.750001907348633
    4. 's' → logprob: -17.250001907348633
    5. ')' → logprob: -17.500001907348633
    6. '   ' → logprob: -19.625001907348633
    7. '       ' → logprob: -19.625001907348633
    8. '
' → logprob: -19.750001907348633
    9. ' ' → logprob: -20.000001907348633
    10. 'Self' → logprob: -21.375001907348633

Token 561: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11056531965732574
    2. '__(' → logprob: -2.360565423965454
    3. 'self' → logprob: -5.485565185546875
    4. ')(' → logprob: -5.610565185546875
    5. '__(
' → logprob: -7.235565185546875
    6. ',' → logprob: -7.985565185546875
    7. ')(
' → logprob: -8.110565185546875
    8. '__('' → logprob: -8.360565185546875
    9. '(' → logprob: -8.860565185546875
    10. ')(__' → logprob: -8.985565185546875

Token 562: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.028893839567899704
    2. '(' → logprob: -4.528893947601318
    3. '->' → logprob: -5.153893947601318
    4. 'self' → logprob: -5.278893947601318
    5. ' ->' → logprob: -5.653893947601318
    6. 'return' → logprob: -6.528893947601318
    7. '   ' → logprob: -7.403893947601318
    8. '       ' → logprob: -7.778893947601318
    9. '(
' → logprob: -8.27889347076416
    10. ')' → logprob: -9.02889347076416

Token 563: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.06196768581867218
    2. ' str' → logprob: -2.811967611312866
    3. ' ' → logprob: -19.186967849731445
    4. 'string' → logprob: -19.436967849731445
    5. '	str' → logprob: -19.686967849731445
    6. '[str' → logprob: -20.186967849731445
    7. '(str' → logprob: -20.561967849731445
    8. 'stri' → logprob: -20.686967849731445
    9. '=str' → logprob: -21.061967849731445
    10. 's' → logprob: -21.061967849731445

Token 564: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16267570853233337
    2. '       ' → logprob: -1.9126757383346558
    3. '(' → logprob: -6.912675857543945
    4. '   ' → logprob: -7.412675857543945
    5. 'self' → logprob: -7.412675857543945
    6. '(
' → logprob: -9.037675857543945
    7. ':
' → logprob: -10.287675857543945
    8. '           ' → logprob: -10.787675857543945
    9. '(s' → logprob: -10.912675857543945
    10. ':' → logprob: -11.412675857543945

Token 565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043579499470070004
    2. 'return' → logprob: -7.750435829162598
    3. ' return' → logprob: -12.500435829162598
    4. 'f' → logprob: -14.000435829162598
    5. '	' → logprob: -15.625435829162598
    6. '   ' → logprob: -16.25043487548828
    7. '           ' → logprob: -16.62543487548828
    8. '      ' → logprob: -17.25043487548828
    9. '```' → logprob: -17.62543487548828
    10. '     ' → logprob: -18.00043487548828

Token 566: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1277422457933426
    2. '       ' → logprob: -2.127742290496826
    3. ' return' → logprob: -7.127742290496826
    4. 'f' → logprob: -12.377741813659668
    5. '   ' → logprob: -12.502741813659668
    6. '	return' → logprob: -12.752741813659668
    7. '{return' → logprob: -16.002742767333984
    8. '	' → logprob: -16.752742767333984
    9. '```' → logprob: -17.002742767333984
    10. '`' → logprob: -17.252742767333984

Token 567: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.18321114778518677
    2. 'f' → logprob: -1.933211088180542
    3. ' f' → logprob: -3.808211088180542
    4. ' "' → logprob: -7.558211326599121
    5. ' ' → logprob: -12.058211326599121
    6. ''' → logprob: -12.433211326599121
    7. '"S' → logprob: -12.808211326599121
    8. '   ' → logprob: -13.683211326599121
    9. '(f' → logprob: -14.433211326599121
    10. '"A' → logprob: -15.558211326599121

Token 568: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -7.135819760151207e-05
    2. '"' → logprob: -9.75007152557373
    3. 'f' → logprob: -12.00007152557373
    4. ''' → logprob: -12.62507152557373
    5. ''S' → logprob: -14.37507152557373
    6. ' Segment' → logprob: -14.37507152557373
    7. 'Seg' → logprob: -14.50007152557373
    8. 'segment' → logprob: -14.50007152557373
    9. '\"' → logprob: -14.50007152557373
    10. 'Point' → logprob: -14.87507152557373

Token 569: '({},' (ID: 45594)
  Prédit: '({},'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({},' → logprob: -4.56102097814437e-05
    2. '({' → logprob: -10.000045776367188
    3. '{},' → logprob: -16.250045776367188
    4. '(' → logprob: -18.000045776367188
    5. '("' → logprob: -18.000045776367188
    6. '{}' → logprob: -18.500045776367188
    7. '(Point' → logprob: -19.125045776367188
    8. '"' → logprob: -20.625045776367188
    9. '(%' → logprob: -20.750045776367188
    10. '{' → logprob: -21.000045776367188

Token 570: ' {})' (ID: 75167)
  Prédit: '{})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{})' → logprob: -0.03022109530866146
    2. ' {})' → logprob: -3.5302209854125977
    3. '{}' → logprob: -8.530220985412598
    4. '{},' → logprob: -8.655220985412598
    5. '{' → logprob: -10.030220985412598
    6. ')' → logprob: -10.155220985412598
    7. ' ' → logprob: -12.155220985412598
    8. '   ' → logprob: -12.655220985412598
    9. ' ' → logprob: -12.905220985412598
    10. '{}".' → logprob: -13.530220985412598

Token 571: '".' (ID: 4050)
  Prédit: '.format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.3367624878883362
    2. '".' → logprob: -1.3367624282836914
    3. ')' → logprob: -4.086762428283691
    4. 'format' → logprob: -5.211762428283691
    5. '(self' → logprob: -7.711762428283691
    6. 'self' → logprob: -8.586762428283691
    7. '(format' → logprob: -9.211762428283691
    8. '}".' → logprob: -9.586762428283691
    9. '{}".' → logprob: -10.336762428283691
    10. '.' → logprob: -10.461762428283691

Token 572: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -7.703443770878948e-06
    2. ' format' → logprob: -12.500007629394531
    3. '(format' → logprob: -12.750007629394531
    4. 'repr' → logprob: -14.125007629394531
    5. 'str' → logprob: -15.125007629394531
    6. 'form' → logprob: -17.37500762939453
    7. 'fmt' → logprob: -17.87500762939453
    8. '__' → logprob: -18.00000762939453
    9. 'def' → logprob: -18.12500762939453
    10. '	format' → logprob: -18.25000762939453

Token 573: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.2166411478538066e-05
    2. 'self' → logprob: -10.000052452087402
    3. '(re' → logprob: -12.125052452087402
    4. 'repr' → logprob: -13.875052452087402
    5. '(' → logprob: -15.000052452087402
    6. '(
' → logprob: -19.875051498413086
    7. ' self' → logprob: -20.125051498413086
    8. 're' → logprob: -20.125051498413086
    9. '=self' → logprob: -20.250051498413086
    10. '(str' → logprob: -20.250051498413086

Token 574: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.4259644558478612e-05
    2. 'self' → logprob: -11.750014305114746
    3. 'p' → logprob: -12.000014305114746
    4. '.' → logprob: -15.625014305114746
    5. '.s' → logprob: -17.12501335144043
    6. '(p' → logprob: -18.00001335144043
    7. ' .' → logprob: -19.37501335144043
    8. 's' → logprob: -20.12501335144043
    9. '	p' → logprob: -20.25001335144043
    10. ' self' → logprob: -20.50001335144043

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.143808109802194e-05
    2. 'self' → logprob: -10.125041007995605
    3. 'p' → logprob: -14.250041007995605
    4. 's' → logprob: -15.500041007995605
    5. '.p' → logprob: -16.250041961669922
    6. '```' → logprob: -16.250041961669922
    7. ')' → logprob: -16.500041961669922
    8. '(self' → logprob: -16.750041961669922
    9. '   ' → logprob: -18.250041961669922
    10. '(p' → logprob: -18.375041961669922

Token 576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6405310816480778e-05
    2. ' ,' → logprob: -11.125016212463379
    3. ',self' → logprob: -13.750016212463379
    4. ',
' → logprob: -15.000016212463379
    5. ',p' → logprob: -16.125017166137695
    6. 'self' → logprob: -16.125017166137695
    7. ')' → logprob: -18.000017166137695
    8. ',

' → logprob: -18.375017166137695
    9. ',s' → logprob: -19.250017166137695
    10. '<|end|>' → logprob: -19.375017166137695

Token 577: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759444236755371
    2. 'self' → logprob: -0.8259444236755371
    3. '	self' → logprob: -13.950944900512695
    4. ')' → logprob: -14.075944900512695
    5. '       ' → logprob: -14.075944900512695
    6. '(self' → logprob: -14.325944900512695
    7. ' ' → logprob: -14.825944900512695
    8. '    ' → logprob: -15.075944900512695
    9. '[self' → logprob: -15.200944900512695
    10. ' ' → logprob: -15.200944900512695

Token 578: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.5497269630432129
    2. '.' → logprob: -0.9247269630432129
    3. ',' → logprob: -4.549726963043213
    4. ')' → logprob: -4.549726963043213
    5. '.s' → logprob: -5.549726963043213
    6. '2' → logprob: -7.299726963043213
    7. '   ' → logprob: -9.049726486206055
    8. 'p' → logprob: -9.299726486206055
    9. ').' → logprob: -9.299726486206055
    10. ' .' → logprob: -9.799726486206055

Token 579: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '1' → logprob: -14.750000953674316
    3. '```' → logprob: -15.625000953674316
    4. 'oints' → logprob: -15.750000953674316
    5. 'oint' → logprob: -16.187501907348633
    6. '   ' → logprob: -16.687501907348633
    7. 'p' → logprob: -17.000001907348633
    8. '۲' → logprob: -17.000001907348633
    9. 'a' → logprob: -17.500001907348633
    10. 'unction' → logprob: -17.562501907348633

Token 580: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.750000953674316
    3. ' )' → logprob: -15.750000953674316
    4. ')}' → logprob: -16.625
    5. '}' → logprob: -17.125
    6. ')`' → logprob: -17.125
    7. ')
' → logprob: -17.25
    8. '   ' → logprob: -18.125
    9. '),' → logprob: -18.125
    10. ')#' → logprob: -18.625

Token 581: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002300489693880081
    2. '<|end|>' → logprob: -6.877300262451172
    3. '    
' → logprob: -7.002300262451172
    4. '
' → logprob: -8.502300262451172
    5. '<|end|>' → logprob: -9.377300262451172
    6. 'def' → logprob: -10.502300262451172
    7. '```' → logprob: -11.252300262451172
    8. '        
' → logprob: -12.002300262451172
    9. ')' → logprob: -12.002300262451172
    10. '  
' → logprob: -12.752300262451172

Token 582: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003413801547139883
    2. '   ' → logprob: -6.003413677215576
    3. '@property' → logprob: -7.003413677215576
    4. ' def' → logprob: -10.628414154052734
    5. 'class' → logprob: -13.378414154052734
    6. '@' → logprob: -13.878414154052734
    7. 'property' → logprob: -14.878414154052734
    8. ' ' → logprob: -15.003414154052734
    9. '	def' → logprob: -15.128414154052734
    10. '    
' → logprob: -15.503414154052734

Token 583: ' __' (ID: 2516)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.003760535968467593
    2. ' length' → logprob: -6.75376033782959
    3. 'vector' → logprob: -7.00376033782959
    4. 'len' → logprob: -7.50376033782959
    5. '__' → logprob: -8.00376033782959
    6. 'def' → logprob: -8.00376033782959
    7. 'to' → logprob: -9.00376033782959
    8. 'is' → logprob: -9.37876033782959
    9. 'get' → logprob: -9.75376033782959
    10. 'vec' → logprob: -9.87876033782959

Token 584: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.001795489341020584
    2. 'lt' → logprob: -6.501795291900635
    3. 'init' → logprob: -8.626795768737793
    4. 'repr' → logprob: -9.376795768737793
    5. 'len' → logprob: -11.501795768737793
    6. 'contains' → logprob: -11.626795768737793
    7. 'add' → logprob: -12.751795768737793
    8. 'bool' → logprob: -12.876795768737793
    9. 'hash' → logprob: -13.251795768737793
    10. 'iter' → logprob: -13.876795768737793

Token 585: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00026729601086117327
    2. '__' → logprob: -8.250267028808594
    3. '(self' → logprob: -13.125267028808594
    4. '__(
' → logprob: -13.250267028808594
    5. '__((' → logprob: -13.375267028808594
    6. '__('' → logprob: -15.125267028808594
    7. '__(*' → logprob: -15.500267028808594
    8. '__("' → logprob: -16.000267028808594
    9. '__[' → logprob: -16.250267028808594
    10. '(' → logprob: -17.000267028808594

Token 586: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.896309739408025e-07
    2. ' self' → logprob: -14.125000953674316
    3. '(self' → logprob: -17.375
    4. '
' → logprob: -18.25
    5. 'other' → logprob: -18.875
    6. '   ' → logprob: -19.25
    7. 's' → logprob: -19.375
    8. ')' → logprob: -19.375
    9. '	self' → logprob: -19.625
    10. ' ' → logprob: -20.25

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5521756410598755
    2. '(self' → logprob: -0.9271756410598755
    3. 'self' → logprob: -3.677175521850586
    4. ')' → logprob: -6.552175521850586
    5. '<|end|>' → logprob: -7.427175521850586
    6. ',self' → logprob: -7.927175521850586
    7. '__(' → logprob: -8.427175521850586
    8. ')(' → logprob: -8.552175521850586
    9. ' self' → logprob: -8.677175521850586
    10. '(' → logprob: -8.927175521850586

Token 588: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.20222070813179016
    2. 'self' → logprob: -1.7022206783294678
    3. ' other' → logprob: -7.202220916748047
    4. ' self' → logprob: -9.702220916748047
    5. 'Other' → logprob: -14.952220916748047
    6. 'object' → logprob: -15.202220916748047
    7. '(self' → logprob: -15.702220916748047
    8. '(other' → logprob: -15.952220916748047
    9. '       ' → logprob: -16.952220916748047
    10. '...' → logprob: -18.202220916748047

Token 589: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015574338613077998
    2. ' :' → logprob: -9.000155448913574
    3. '):' → logprob: -11.000155448913574
    4. ')' → logprob: -11.250155448913574
    5. '__:' → logprob: -14.250155448913574
    6. ' ):' → logprob: -14.500155448913574
    7. ')object' → logprob: -15.500155448913574
    8. ' )' → logprob: -15.625155448913574
    9. '<|end|>' → logprob: -15.750155448913574
    10. '[' → logprob: -15.875155448913574

Token 590: ' object' (ID: 2817)
  Prédit: 'object'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'object' → logprob: -0.0488201305270195
    2. ' object' → logprob: -3.0488200187683105
    3. ''' → logprob: -8.548820495605469
    4. ' '' → logprob: -11.173820495605469
    5. '(object' → logprob: -12.048820495605469
    6. '	object' → logprob: -12.423820495605469
    7. ')object' → logprob: -12.423820495605469
    8. ''s' → logprob: -12.673820495605469
    9. ''objet' → logprob: -13.048820495605469
    10. '<object' → logprob: -13.548820495605469

Token 591: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')->' → logprob: -13.750001907348633
    3. ' )' → logprob: -14.625001907348633
    4. '')' → logprob: -15.875001907348633
    5. ':' → logprob: -16.250001907348633
    6. '`)' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.125001907348633
    8. ')throws' → logprob: -17.750001907348633
    9. '),' → logprob: -17.875001907348633
    10. '<|end|>' → logprob: -17.875001907348633

Token 592: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.6934868693351746
    2. ')' → logprob: -0.8184868693351746
    3. '->' → logprob: -2.9434869289398193
    4. ':' → logprob: -5.31848669052124
    5. ')->' → logprob: -6.69348669052124
    6. ' )' → logprob: -9.068487167358398
    7. ' ' → logprob: -9.943487167358398
    8. '   ' → logprob: -10.693487167358398
    9. ' )->' → logprob: -10.693487167358398
    10. '       ' → logprob: -10.818487167358398

Token 593: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -7.493430894101039e-05
    2. ' bool' → logprob: -9.500075340270996
    3. '	bool' → logprob: -18.62507438659668
    4. '<bool' → logprob: -19.87507438659668
    5. ' ' → logprob: -20.00007438659668
    6. '(bool' → logprob: -20.87507438659668
    7. '   ' → logprob: -21.25007438659668
    8. '```' → logprob: -21.37507438659668
    9. 'object' → logprob: -21.75007438659668
    10. 'b' → logprob: -22.37507438659668

Token 594: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008970508933998644
    2. ':
' → logprob: -7.12589693069458
    3. '       ' → logprob: -10.125897407531738
    4. '):' → logprob: -10.875897407531738
    5. ' :' → logprob: -11.500897407531738
    6. '   ' → logprob: -12.000897407531738
    7. '<|end|>' → logprob: -12.125897407531738
    8. '):
' → logprob: -12.250897407531738
    9. '():' → logprob: -13.500897407531738
    10. ':return' → logprob: -13.625897407531738

Token 595: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.596781946020201e-05
    2. ' if' → logprob: -10.125045776367188
    3. 'if' → logprob: -12.125045776367188
    4. '   ' → logprob: -15.125045776367188
    5. '      ' → logprob: -17.000045776367188
    6. '	if' → logprob: -18.250045776367188
    7. '           ' → logprob: -18.250045776367188
    8. '     ' → logprob: -18.750045776367188
    9. '```' → logprob: -18.750045776367188
    10. '<|end|>' → logprob: -19.000045776367188

Token 596: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.050947342067956924
    2. '       ' → logprob: -3.050947427749634
    3. ' if' → logprob: -6.050947189331055
    4. '   ' → logprob: -14.300947189331055
    5. 'return' → logprob: -15.175947189331055
    6. '           ' → logprob: -15.425947189331055
    7. '	if' → logprob: -15.550947189331055
    8. '
' → logprob: -16.050947189331055
    9. 'If' → logprob: -16.800947189331055
    10. '      ' → logprob: -17.675947189331055

Token 597: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03804171830415726
    2. 'not' → logprob: -3.288041830062866
    3. ' self' → logprob: -16.538042068481445
    4. 'self' → logprob: -16.538042068481445
    5. '	not' → logprob: -16.663042068481445
    6. ' other' → logprob: -17.038042068481445
    7. '(not' → logprob: -17.163042068481445
    8. 'other' → logprob: -18.538042068481445
    9. '   ' → logprob: -18.663042068481445
    10. '       ' → logprob: -19.163042068481445

Token 598: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00043221889063715935
    2. ' isinstance' → logprob: -7.750432014465332
    3. '(is' → logprob: -13.375432014465332
    4. '   ' → logprob: -19.37543296813965
    5. 'Is' → logprob: -19.75043296813965
    6. 'type' → logprob: -21.12543296813965
    7. 'instance' → logprob: -21.25043296813965
    8. '_is' → logprob: -21.62543296813965
    9. '```' → logprob: -22.00043296813965
    10. '
' → logprob: -22.12543296813965

Token 599: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -2.15310683415737e-05
    2. 'other' → logprob: -10.750021934509277
    3. ' other' → logprob: -18.12502098083496
    4. 'Other' → logprob: -19.75002098083496
    5. '(self' → logprob: -21.50002098083496
    6. '_other' → logprob: -22.75002098083496
    7. '(' → logprob: -23.75002098083496
    8. '.other' → logprob: -24.00002098083496
    9. 'OTHER' → logprob: -24.37502098083496
    10. '-other' → logprob: -24.62502098083496

Token 600: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.07008170336484909
    2. 'other' → logprob: -2.8200817108154297
    3. ',' → logprob: -4.82008171081543
    4. ' other' → logprob: -11.69508171081543
    5. 'self' → logprob: -12.69508171081543
    6. 'Other' → logprob: -13.07008171081543
    7. '(self' → logprob: -14.94508171081543
    8. '_other' → logprob: -15.19508171081543
    9. '.other' → logprob: -15.19508171081543
    10. '-other' → logprob: -15.32008171081543

Token 601: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.5213274309644476e-05
    2. ' Segment' → logprob: -11.125015258789062
    3. 'Point' → logprob: -15.125015258789062
    4. 'Seg' → logprob: -17.500015258789062
    5. 'self' → logprob: -18.250015258789062
    6. ')' → logprob: -18.250015258789062
    7. ' ' → logprob: -19.250015258789062
    8. '
' → logprob: -19.250015258789062
    9. 'Segments' → logprob: -19.625015258789062
    10. '   ' → logprob: -20.125015258789062

Token 602: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012573461048305035
    2. '):' → logprob: -4.3875732421875
    3. '       ' → logprob: -10.6375732421875
    4. '):
' → logprob: -10.7625732421875
    5. ')' → logprob: -11.1375732421875
    6. '           ' → logprob: -13.6375732421875
    7. '   ' → logprob: -13.6375732421875
    8. '):

' → logprob: -14.2625732421875
    9. ':
' → logprob: -14.5125732421875
    10. ':' → logprob: -15.1375732421875

Token 603: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06999512761831284
    2. '           ' → logprob: -2.694995164871216
    3. '<|end|>' → logprob: -10.444994926452637
    4. '   ' → logprob: -12.319994926452637
    5. 'return' → logprob: -12.444994926452637
    6. '<|end|>' → logprob: -12.569994926452637
    7. ':' → logprob: -12.694994926452637
    8. '	       ' → logprob: -12.819994926452637
    9. ' return' → logprob: -12.944994926452637
    10. '```' → logprob: -13.569994926452637

Token 604: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001252134912647307
    2. ' return' → logprob: -7.001252174377441
    3. '           ' → logprob: -8.626252174377441
    4. '       ' → logprob: -8.751252174377441
    5. ':return' → logprob: -13.876252174377441
    6. 'False' → logprob: -14.126252174377441
    7. '   ' → logprob: -14.626252174377441
    8. 'Return' → logprob: -15.126252174377441
    9. '{return' → logprob: -15.751252174377441
    10. '	return' → logprob: -16.001251220703125

Token 605: ' Not' (ID: 4037)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -0.0002636006975080818
    2. ' Not' → logprob: -8.875263214111328
    3. 'False' → logprob: -9.000263214111328
    4. '_Not' → logprob: -16.125263214111328
    5. '       ' → logprob: -16.250263214111328
    6. '           ' → logprob: -16.750263214111328
    7. 'not' → logprob: -17.125263214111328
    8. '   ' → logprob: -17.250263214111328
    9. 'No' → logprob: -18.000263214111328
    10. '_not' → logprob: -18.250263214111328

Token 606: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -2.5107177862082608e-05
    2. 'Implement' → logprob: -11.250024795532227
    3. 'implemented' → logprob: -11.875024795532227
    4. 'Implementation' → logprob: -13.375024795532227
    5. '_IMPLEMENT' → logprob: -13.500024795532227
    6. 'Not' → logprob: -14.375024795532227
    7. 'Impl' → logprob: -14.875024795532227
    8. 'Supported' → logprob: -15.125024795532227
    9. 'Initialized' → logprob: -16.000024795532227
    10. 'Im' → logprob: -16.625024795532227

Token 607: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.999452772201039e-05
    2. '
' → logprob: -11.000029563903809
    3. 'return' → logprob: -12.125029563903809
    4. '   ' → logprob: -12.250029563903809
    5. ' return' → logprob: -13.375029563903809
    6. '        
' → logprob: -14.875029563903809
    7. '           ' → logprob: -15.125029563903809
    8. '```' → logprob: -15.250029563903809
    9. '<|end|>' → logprob: -15.500029563903809
    10. '      ' → logprob: -16.000030517578125

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.36574100604048e-06
    2. '   ' → logprob: -13.000004768371582
    3. 'return' → logprob: -13.250004768371582
    4. '           ' → logprob: -15.750004768371582
    5. ' return' → logprob: -16.625003814697266
    6. '      ' → logprob: -16.875003814697266
    7. '```' → logprob: -17.125003814697266
    8. '
' → logprob: -17.375003814697266
    9. '	   ' → logprob: -18.250003814697266
    10. '	' → logprob: -18.500003814697266

Token 609: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10028732568025589
    2. '       ' → logprob: -2.350287437438965
    3. ' return' → logprob: -9.475287437438965
    4. '   ' → logprob: -12.600287437438965
    5. '	return' → logprob: -14.725287437438965
    6. '           ' → logprob: -15.975287437438965
    7. 'self' → logprob: -17.47528648376465
    8. '```' → logprob: -18.35028648376465
    9. ':return' → logprob: -18.47528648376465
    10. '     ' → logprob: -19.10028648376465

Token 610: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20301835238933563
    2. 'self' → logprob: -1.703018307685852
    3. ' (' → logprob: -7.2030181884765625
    4. ' self' → logprob: -7.2030181884765625
    5. '((' → logprob: -9.203018188476562
    6. '(' → logprob: -12.078018188476562
    7. '   ' → logprob: -12.328018188476562
    8. '       ' → logprob: -12.953018188476562
    9. '	self' → logprob: -14.328018188476562
    10. ' ' → logprob: -15.078018188476562

Token 611: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.60414821645827e-06
    2. '.' → logprob: -13.250004768371582
    3. '.s' → logprob: -14.000004768371582
    4. ' .' → logprob: -14.125004768371582
    5. 'p' → logprob: -14.250004768371582
    6. 'self' → logprob: -15.125004768371582
    7. '==' → logprob: -15.375004768371582
    8. ' ==' → logprob: -16.625003814697266
    9. '   ' → logprob: -17.250003814697266
    10. '(p' → logprob: -18.375003814697266

Token 612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '==' → logprob: -17.5
    3. 'oints' → logprob: -17.5
    4. 's' → logprob: -18.875
    5. 'equal' → logprob: -18.875
    6. 'p' → logprob: -19.0
    7. ' ' → logprob: -19.125
    8. '_' → logprob: -19.5
    9. '```' → logprob: -19.5
    10. 'self' → logprob: -19.875

Token 613: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47408244013786316
    2. '==' → logprob: -0.9740824699401855
    3. '==
' → logprob: -13.349081993103027
    4. ')' → logprob: -13.474081993103027
    5. ')==' → logprob: -13.724081993103027
    6. '=' → logprob: -14.224081993103027
    7. '()==' → logprob: -16.099082946777344
    8. '==(' → logprob: -16.599082946777344
    9. 'equal' → logprob: -16.599082946777344
    10. ',' → logprob: -16.724082946777344

Token 614: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00317783304490149
    2. ' other' → logprob: -5.753177642822266
    3. '(other' → logprob: -16.378177642822266
    4. 'self' → logprob: -19.503177642822266
    5. '.other' → logprob: -20.503177642822266
    6. '_other' → logprob: -20.753177642822266
    7. 'Other' → logprob: -21.003177642822266
    8. '
' → logprob: -22.753177642822266
    9. '       ' → logprob: -23.128177642822266
    10. 'othe' → logprob: -24.503177642822266

Token 615: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0014167845947667956
    2. '.' → logprob: -7.0014166831970215
    3. 'p' → logprob: -7.6264166831970215
    4. '.s' → logprob: -11.75141716003418
    5. ' .' → logprob: -12.50141716003418
    6. 'self' → logprob: -13.25141716003418
    7. '<p' → logprob: -13.75141716003418
    8. ').' → logprob: -14.37641716003418
    9. '.
' → logprob: -14.75141716003418
    10. '   ' → logprob: -15.25141716003418

Token 616: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. 'p' → logprob: -11.375019073486328
    3. 'oints' → logprob: -12.500019073486328
    4. 'oint' → logprob: -12.625019073486328
    5. '2' → logprob: -15.500019073486328
    6. '```' → logprob: -16.500019073486328
    7. ' ' → logprob: -16.875019073486328
    8. '   ' → logprob: -16.875019073486328
    9. 'r' → logprob: -17.000019073486328
    10. 'self' → logprob: -17.250019073486328

Token 617: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20142249763011932
    2. 'and' → logprob: -1.7014224529266357
    3. '       ' → logprob: -11.701422691345215
    4. '           ' → logprob: -15.326422691345215
    5. ' or' → logprob: -15.451422691345215
    6. '	and' → logprob: -15.701422691345215
    7. '   ' → logprob: -16.4514217376709
    8. ' ' → logprob: -16.5764217376709
    9. '        ' → logprob: -16.8264217376709
    10. '    ' → logprob: -17.4514217376709

Token 618: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47442325949668884
    2. ' self' → logprob: -0.9744232892990112
    3. '       ' → logprob: -7.974423408508301
    4. '           ' → logprob: -13.8494234085083
    5. '(self' → logprob: -14.9744234085083
    6. '	self' → logprob: -15.3494234085083
    7. '               ' → logprob: -15.4744234085083
    8. ' ' → logprob: -16.349422454833984
    9. '```' → logprob: -16.724422454833984
    10. ' ' → logprob: -17.099422454833984

Token 619: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00023965541913639754
    2. '.' → logprob: -8.375239372253418
    3. 'p' → logprob: -12.125239372253418
    4. ' .' → logprob: -13.000239372253418
    5. '```' → logprob: -14.500239372253418
    6. '   ' → logprob: -15.500239372253418
    7. '.s' → logprob: -15.625239372253418
    8. '<p' → logprob: -16.125240325927734
    9. '`.' → logprob: -16.750240325927734
    10. '.
' → logprob: -16.875240325927734

Token 620: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. 'p' → logprob: -13.750001907348633
    3. ' ' → logprob: -15.125001907348633
    4. '   ' → logprob: -15.250001907348633
    5. '۲' → logprob: -16.250001907348633
    6. '```' → logprob: -17.187501907348633
    7. '₂' → logprob: -17.187501907348633
    8. '２' → logprob: -17.875001907348633
    9. 's' → logprob: -18.187501907348633
    10. 'def' → logprob: -18.250001907348633

Token 621: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3132701516151428
    2. ' ==' → logprob: -1.313270092010498
    3. '==
' → logprob: -11.938270568847656
    4. ')==' → logprob: -14.438270568847656
    5. ']==' → logprob: -15.063270568847656
    6. '==(' → logprob: -15.313270568847656
    7. '=' → logprob: -15.563270568847656
    8. ')' → logprob: -15.688270568847656
    9. '<|end|>' → logprob: -15.938270568847656
    10. ' ==
' → logprob: -16.313270568847656

Token 622: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.12692831456661224
    2. ' other' → logprob: -2.1269283294677734
    3. '(other' → logprob: -15.751928329467773
    4. '.other' → logprob: -17.501928329467773
    5. 'Other' → logprob: -18.126928329467773
    6. '_other' → logprob: -19.251928329467773
    7. ' ' → logprob: -22.376928329467773
    8. 'others' → logprob: -22.626928329467773
    9. '其他' → logprob: -22.751928329467773
    10. ' oth' → logprob: -23.126928329467773

Token 623: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.03874243050813675
    2. '.' → logprob: -3.2887425422668457
    3. 'p' → logprob: -7.288742542266846
    4. ' .' → logprob: -11.788742065429688
    5. '```' → logprob: -13.788742065429688
    6. '.s' → logprob: -13.913742065429688
    7. ').' → logprob: -14.288742065429688
    8. '.п' → logprob: -14.288742065429688
    9. ' ' → logprob: -14.413742065429688
    10. '<p' → logprob: -14.538742065429688

Token 624: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003122247871942818
    2. 'p' → logprob: -8.125311851501465
    3. '.' → logprob: -12.125311851501465
    4. '.p' → logprob: -12.375311851501465
    5. 'self' → logprob: -13.250311851501465
    6. 's' → logprob: -13.500311851501465
    7. 'oint' → logprob: -14.375311851501465
    8. ' ' → logprob: -14.500311851501465
    9. '   ' → logprob: -14.500311851501465
    10. '1' → logprob: -15.125311851501465

Token 625: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003353328676894307
    2. '<|end|>' → logprob: -6.003353118896484
    3. 'def' → logprob: -7.503353118896484
    4. '```' → logprob: -9.003353118896484
    5. '<|end|>' → logprob: -9.378353118896484
    6. '    
' → logprob: -9.878353118896484
    7. '
' → logprob: -10.628353118896484
    8. ' def' → logprob: -11.128353118896484
    9. '  ' → logprob: -12.128353118896484
    10. ' ' → logprob: -12.378353118896484

Token 627: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.012833351269364357
    2. '   ' → logprob: -4.387833118438721
    3. '@property' → logprob: -8.637833595275879
    4. ' def' → logprob: -9.137833595275879
    5. '<|end|>' → logprob: -11.512833595275879
    6. ')' → logprob: -11.637833595275879
    7. '@' → logprob: -12.012833595275879
    8. '    
' → logprob: -12.637833595275879
    9. '```' → logprob: -12.887833595275879
    10. '#' → logprob: -13.262833595275879

Token 628: ' vector' (ID: 9727)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.02427828684449196
    2. '__' → logprob: -4.149278163909912
    3. 'vector' → logprob: -5.774278163909912
    4. 'def' → logprob: -6.774278163909912
    5. 'vec' → logprob: -7.274278163909912
    6. 'is' → logprob: -7.399278163909912
    7. 'contains' → logprob: -7.399278163909912
    8. 'direction' → logprob: -8.02427864074707
    9. 'to' → logprob: -8.14927864074707
    10. 'p' → logprob: -8.64927864074707

Token 629: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011045700375689194
    2. '(' → logprob: -9.125110626220703
    3. 'self' → logprob: -14.125110626220703
    4. '(s' → logprob: -14.750110626220703
    5. '   ' → logprob: -15.375110626220703
    6. ' (' → logprob: -16.125110626220703
    7. 'def' → logprob: -17.125110626220703
    8. 's' → logprob: -17.625110626220703
    9. '(sel' → logprob: -17.625110626220703
    10. '       ' → logprob: -18.250110626220703

Token 630: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.6047699318733066e-05
    2. ')' → logprob: -11.750016212463379
    3. '(s' → logprob: -12.125016212463379
    4. '(' → logprob: -13.500016212463379
    5. 'self' → logprob: -14.375016212463379
    6. ' (' → logprob: -15.375016212463379
    7. ')(' → logprob: -15.625016212463379
    8. 's' → logprob: -15.875016212463379
    9. 'def' → logprob: -16.250015258789062
    10. '(sel' → logprob: -16.875015258789062

Token 631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7743965983390808
    2. '(self' → logprob: -0.7743965983390808
    3. '()' → logprob: -2.8993966579437256
    4. '   ' → logprob: -5.2743964195251465
    5. '():
' → logprob: -5.2743964195251465
    6. '(' → logprob: -5.7743964195251465
    7. '<|end|>' → logprob: -5.8993964195251465
    8. ')' → logprob: -6.0243964195251465
    9. '):
' → logprob: -7.1493964195251465
    10. 'self' → logprob: -7.3993964195251465

Token 632: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00013679367839358747
    2. '       ' → logprob: -9.250136375427246
    3. ' return' → logprob: -10.125136375427246
    4. '{return' → logprob: -15.750136375427246
    5. '   ' → logprob: -16.000137329101562
    6. '
' → logprob: -16.250137329101562
    7. '	return' → logprob: -16.250137329101562
    8. ':return' → logprob: -16.625137329101562
    9. '        
' → logprob: -16.875137329101562
    10. 'self' → logprob: -17.000137329101562

Token 633: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002036595979006961
    2. ' self' → logprob: -8.500204086303711
    3. '(self' → logprob: -16.37520408630371
    4. '	self' → logprob: -17.75020408630371
    5. 'Point' → logprob: -18.87520408630371
    6. '   ' → logprob: -20.12520408630371
    7. '[self' → logprob: -20.25020408630371
    8. 'Self' → logprob: -20.75020408630371
    9. '
' → logprob: -22.87520408630371
    10. 'Vector' → logprob: -23.00020408630371

Token 634: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -6.034592388459714e-06
    2. 'p' → logprob: -13.125005722045898
    3. '.' → logprob: -13.250005722045898
    4. 'self' → logprob: -13.375005722045898
    5. ' .' → logprob: -15.000005722045898
    6. 'Vector' → logprob: -16.1250057220459
    7. ').' → logprob: -16.6250057220459
    8. '```' → logprob: -17.6250057220459
    9. '   ' → logprob: -17.7500057220459
    10. '<p' → logprob: -18.2500057220459

Token 635: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. 'oint' → logprob: -14.375000953674316
    3. 'self' → logprob: -15.000000953674316
    4. '```' → logprob: -15.250000953674316
    5. 'oints' → logprob: -15.625000953674316
    6. 'sub' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '1' → logprob: -18.125001907348633
    9. 't' → logprob: -18.750001907348633
    10. '(self' → logprob: -18.750001907348633

Token 636: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07889099419116974
    2. '-' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.328890800476074
    4. '<|end|>' → logprob: -15.328890800476074
    5. '-self' → logprob: -15.828890800476074
    6. ' ' → logprob: -16.20389175415039
    7. ' –' → logprob: -16.45389175415039
    8. ' -
' → logprob: -17.20389175415039
    9. '-
' → logprob: -18.32889175415039
    10. '–' → logprob: -18.45389175415039

Token 637: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004885728703811765
    2. ' self' → logprob: -7.625488758087158
    3. '       ' → logprob: -15.37548828125
    4. '   ' → logprob: -15.62548828125
    5. '	self' → logprob: -15.62548828125
    6. '(self' → logprob: -17.00048828125
    7. '<|end|>' → logprob: -17.37548828125
    8. '[self' → logprob: -17.75048828125
    9. 's' → logprob: -18.12548828125
    10. ' ' → logprob: -18.50048828125

Token 638: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6943482756614685
    2. '.p' → logprob: -0.6943482756614685
    3. 'self' → logprob: -6.819348335266113
    4. 's' → logprob: -9.694348335266113
    5. '.' → logprob: -10.819348335266113
    6. '1' → logprob: -11.194348335266113
    7. '.s' → logprob: -11.694348335266113
    8. '   ' → logprob: -13.569348335266113
    9. ' p' → logprob: -13.819348335266113
    10. 'point' → logprob: -15.319348335266113

Token 639: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017350474081467837
    2. 'oint' → logprob: -8.750173568725586
    3. 'self' → logprob: -12.125173568725586
    4. '2' → logprob: -12.375173568725586
    5. 'oints' → logprob: -12.750173568725586
    6. 'p' → logprob: -14.125173568725586
    7. 'nt' → logprob: -14.625173568725586
    8. 'oin' → logprob: -15.000173568725586
    9. 'Point' → logprob: -15.750173568725586
    10. 't' → logprob: -16.000173568725586

Token 640: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 641: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009465761482715607
    2. 'def' → logprob: -5.00946569442749
    3. '<|end|>' → logprob: -6.13446569442749
    4. '    
' → logprob: -8.384466171264648
    5. '
' → logprob: -9.134466171264648
    6. '```' → logprob: -9.259466171264648
    7. ' def' → logprob: -10.134466171264648
    8. ')' → logprob: -10.134466171264648
    9. '<|end|>' → logprob: -10.634466171264648
    10. '	def' → logprob: -11.384466171264648

Token 642: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.018226973712444305
    2. '   ' → logprob: -4.0182271003723145
    3. ' def' → logprob: -9.518226623535156
    4. '	def' → logprob: -13.518226623535156
    5. '```' → logprob: -14.018226623535156
    6. '    
' → logprob: -14.893226623535156
    7. ')' → logprob: -15.143226623535156
    8. '@property' → logprob: -15.518226623535156
    9. '#' → logprob: -16.143226623535156
    10. ' ' → logprob: -16.268226623535156

Token 643: ' is' (ID: 382)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.010004091076552868
    2. 'point' → logprob: -5.260004043579102
    3. 'is' → logprob: -6.635004043579102
    4. 'contains' → logprob: -6.635004043579102
    5. 'len' → logprob: -7.760004043579102
    6. 'project' → logprob: -7.885004043579102
    7. 'projection' → logprob: -8.260004043579102
    8. 'mid' → logprob: -8.885004043579102
    9. 'distance' → logprob: -8.885004043579102
    10. 'proj' → logprob: -9.010004043579102

Token 644: '_' (ID: 62)
  Prédit: '_parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.533271849155426
    2. '_' → logprob: -1.0332717895507812
    3. 'parallel' → logprob: -2.9082717895507812
    4. '_vertical' → logprob: -6.283271789550781
    5. '_point' → logprob: -7.783271789550781
    6. '_horizontal' → logprob: -8.783271789550781
    7. 'vertical' → logprob: -9.033271789550781
    8. 'Parallel' → logprob: -9.283271789550781
    9. ' parallel' → logprob: -9.783271789550781
    10. 'orth' → logprob: -10.408271789550781

Token 645: 'orth' (ID: 2909)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.4806096851825714
    2. 'orth' → logprob: -0.980609655380249
    3. 'vertical' → logprob: -5.355609893798828
    4. 'inter' → logprob: -7.480609893798828
    5. 'proper' → logprob: -7.730609893798828
    6. 'point' → logprob: -8.105609893798828
    7. 'deg' → logprob: -8.480609893798828
    8. '_parallel' → logprob: -9.480609893798828
    9. '_' → logprob: -9.605609893798828
    10. 'horizontal' → logprob: -10.105609893798828

Token 646: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -5.5577775128767826e-06
    2. 'agonal' → logprob: -12.750005722045898
    3. 'og' → logprob: -13.625005722045898
    4. '```' → logprob: -14.125005722045898
    5. '   ' → logprob: -14.750005722045898
    6. 'ogal' → logprob: -15.750005722045898
    7. 'ogona' → logprob: -17.2500057220459
    8. 'ogon' → logprob: -17.3750057220459
    9. '(' → logprob: -18.0000057220459
    10. '()
' → logprob: -18.3750057220459

Token 647: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01007585134357214
    2. '(' → logprob: -4.63507604598999
    3. 'to' → logprob: -8.635075569152832
    4. ' (' → logprob: -9.510075569152832
    5. '_to' → logprob: -10.135075569152832
    6. 'self' → logprob: -11.260075569152832
    7. 'To' → logprob: -11.760075569152832
    8. '   ' → logprob: -13.010075569152832
    9. '       ' → logprob: -13.885075569152832
    10. '(to' → logprob: -14.260075569152832

Token 648: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001113189267925918
    2. '(' → logprob: -7.251113414764404
    3. ' (' → logprob: -8.376112937927246
    4. '(other' → logprob: -9.126112937927246
    5. '(Vector' → logprob: -10.876112937927246
    6. 'To' → logprob: -11.376112937927246
    7. ',' → logprob: -11.876112937927246
    8. ')' → logprob: -12.376112937927246
    9. '_to' → logprob: -12.626112937927246
    10. '(s' → logprob: -12.626112937927246

Token 649: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3934542238712311
    2. 'self' → logprob: -1.1434541940689087
    3. ' other' → logprob: -5.268454074859619
    4. 'Vector' → logprob: -7.393454074859619
    5. ' self' → logprob: -7.768454074859619
    6. 'def' → logprob: -8.768454551696777
    7. '(other' → logprob: -9.643454551696777
    8. '(self' → logprob: -10.393454551696777
    9. 'Other' → logprob: -10.518454551696777
    10. 'lambda' → logprob: -10.643454551696777

Token 650: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0847432091832161
    2. '(self' → logprob: -2.9597432613372803
    3. ')' → logprob: -3.7097432613372803
    4. '(other' → logprob: -5.584743022918701
    5. '):' → logprob: -7.834743022918701
    6. '   ' → logprob: -8.20974349975586
    7. ' (' → logprob: -8.83474349975586
    8. 'self' → logprob: -9.45974349975586
    9. 'Vector' → logprob: -9.58474349975586
    10. '(' → logprob: -9.83474349975586

Token 651: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15686041116714478
    2. ''s' → logprob: -2.4068603515625
    3. ' '' → logprob: -3.0318603515625
    4. ''S' → logprob: -5.1568603515625
    5. 'Segment' → logprob: -7.4068603515625
    6. 'Vector' → logprob: -9.0318603515625
    7. 'object' → logprob: -9.4068603515625
    8. ''class' → logprob: -9.4068603515625
    9. ')' → logprob: -10.6568603515625
    10. '"' → logprob: -10.6568603515625

Token 652: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -9.253090865968261e-06
    2. 'Vector' → logprob: -12.625009536743164
    3. ' Segment' → logprob: -12.750009536743164
    4. 'Point' → logprob: -13.375009536743164
    5. ''' → logprob: -15.000009536743164
    6. 'egment' → logprob: -15.500009536743164
    7. '_segment' → logprob: -15.625009536743164
    8. ''S' → logprob: -15.875009536743164
    9. 'Seg' → logprob: -15.875009536743164
    10. 'segment' → logprob: -16.250009536743164

Token 653: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0024819616228342056
    2. ')' → logprob: -6.002481937408447
    3. '")' → logprob: -12.127482414245605
    4. ''):
' → logprob: -14.377482414245605
    5. '`)' → logprob: -16.62748146057129
    6. '   ' → logprob: -16.75248146057129
    7. ' ')' → logprob: -16.87748146057129
    8. ''' → logprob: -17.25248146057129
    9. ''):' → logprob: -18.00248146057129
    10. 'self' → logprob: -18.37748146057129

Token 654: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07562866806983948
    2. '()' → logprob: -3.4506287574768066
    3. ':' → logprob: -3.9506287574768066
    4. '       ' → logprob: -5.075628757476807
    5. '->' → logprob: -5.450628757476807
    6. ' ->' → logprob: -5.450628757476807
    7. '   ' → logprob: -6.075628757476807
    8. '():
' → logprob: -6.450628757476807
    9. ':
' → logprob: -6.700628757476807
    10. '):
' → logprob: -7.200628757476807

Token 655: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.00023083435371518135
    2. ' bool' → logprob: -8.37523078918457
    3. '<bool' → logprob: -16.50023078918457
    4. 'return' → logprob: -17.50023078918457
    5. '	bool' → logprob: -17.50023078918457
    6. 'True' → logprob: -17.87523078918457
    7. ''' → logprob: -18.12523078918457
    8. '   ' → logprob: -18.37523078918457
    9. '```' → logprob: -18.50023078918457
    10. ' ' → logprob: -18.50023078918457

Token 656: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5889337062835693
    2. '       ' → logprob: -1.2139337062835693
    3. ':
' → logprob: -2.2139337062835693
    4. '):
' → logprob: -3.5889337062835693
    5. '):' → logprob: -5.713933944702148
    6. ')' → logprob: -5.838933944702148
    7. '():
' → logprob: -6.088933944702148
    8. '   ' → logprob: -6.588933944702148
    9. '(self' → logprob: -7.713933944702148
    10. ',' → logprob: -7.838933944702148

Token 657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.659005157416686e-05
    2. 'return' → logprob: -9.875066757202148
    3. '   ' → logprob: -11.125066757202148
    4. ' return' → logprob: -15.125066757202148
    5. '```' → logprob: -19.00006675720215
    6. '	return' → logprob: -19.87506675720215
    7. '           ' → logprob: -21.12506675720215
    8. '      ' → logprob: -21.37506675720215
    9. '	   ' → logprob: -21.37506675720215
    10. '	' → logprob: -21.87506675720215

Token 658: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00160032173153013
    2. '       ' → logprob: -6.50160026550293
    3. ' return' → logprob: -9.25160026550293
    4. '   ' → logprob: -13.12660026550293
    5. '	return' → logprob: -17.00160026550293
    6. '
' → logprob: -18.12660026550293
    7. '```' → logprob: -19.00160026550293
    8. '           ' → logprob: -19.50160026550293
    9. '{return' → logprob: -19.75160026550293
    10. ' ' → logprob: -20.25160026550293

Token 659: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014179266057908535
    2. ' self' → logprob: -4.264179229736328
    3. 'float' → logprob: -11.139179229736328
    4. '(self' → logprob: -14.389179229736328
    5. '   ' → logprob: -15.014179229736328
    6. '	self' → logprob: -16.014179229736328
    7. ' ' → logprob: -16.514179229736328
    8. ' float' → logprob: -16.889179229736328
    9. '[self' → logprob: -18.264179229736328
    10. '
' → logprob: -18.389179229736328

Token 660: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -6.599403423024341e-05
    2. '.' → logprob: -10.250065803527832
    3. 'vector' → logprob: -10.500065803527832
    4. 'Vector' → logprob: -13.375065803527832
    5. '   ' → logprob: -14.750065803527832
    6. ' .' → logprob: -14.875065803527832
    7. '.Vector' → logprob: -15.375065803527832
    8. ').' → logprob: -15.875065803527832
    9. '.segment' → logprob: -16.12506675720215
    10. ' vector' → logprob: -16.50006675720215

Token 661: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4744180142879486
    2. '.is' → logprob: -0.974418044090271
    3. '.' → logprob: -8.224417686462402
    4. ' .' → logprob: -9.974417686462402
    5. '.cross' → logprob: -11.474417686462402
    6. ').' → logprob: -12.099417686462402
    7. '.dot' → logprob: -12.099417686462402
    8. ' ().' → logprob: -12.974417686462402
    9. '   ' → logprob: -14.099417686462402
    10. '(' → logprob: -15.849417686462402

Token 662: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -3.128163257315464e-07
    2. 'dot' → logprob: -16.0
    3. ' is' → logprob: -16.375
    4. '.is' → logprob: -17.375
    5. 'cross' → logprob: -19.375
    6. '```' → logprob: -20.25
    7. '	is' → logprob: -20.875
    8. '_is' → logprob: -21.25
    9. ')is' → logprob: -22.25
    10. ',is' → logprob: -22.25

Token 663: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008794554509222507
    2. 'orth' → logprob: -4.758794784545898
    3. 'ort' → logprob: -8.633794784545898
    4. ' orth' → logprob: -14.383794784545898
    5. '_parallel' → logprob: -14.758794784545898
    6. 'Orth' → logprob: -14.758794784545898
    7. '```' → logprob: -15.133794784545898
    8. 'ORTH' → logprob: -16.3837947845459
    9. 'parallel' → logprob: -16.5087947845459
    10. 'oth' → logprob: -16.6337947845459

Token 664: 'orth' (ID: 2909)
  Prédit: 'orth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orth' → logprob: -1.2664456789934775e-06
    2. 'ort' → logprob: -13.875000953674316
    3. 'parallel' → logprob: -15.625000953674316
    4. ' orth' → logprob: -16.000001907348633
    5. 'Orth' → logprob: -16.750001907348633
    6. 'oth' → logprob: -19.625001907348633
    7. '_' → logprob: -20.000001907348633
    8. 'ORTH' → logprob: -20.250001907348633
    9. '```' → logprob: -21.000001907348633
    10. 'vector' → logprob: -21.125001907348633

Token 665: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -3.054500666621607e-06
    2. 'agonal' → logprob: -13.37500286102295
    3. 'og' → logprob: -14.25000286102295
    4. 'ogal' → logprob: -14.75000286102295
    5. 'ogo' → logprob: -15.62500286102295
    6. 'ogona' → logprob: -16.125003814697266
    7. 'ogon' → logprob: -16.750003814697266
    8. 'onal' → logprob: -17.250003814697266
    9. '   ' → logprob: -17.250003814697266
    10. '```' → logprob: -17.500003814697266

Token 666: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -2.47495681833243e-05
    2. '(' → logprob: -11.125024795532227
    3. ' (' → logprob: -12.000024795532227
    4. '(self' → logprob: -13.500024795532227
    5. '((' → logprob: -13.625024795532227
    6. '()(' → logprob: -14.750024795532227
    7. 'other' → logprob: -15.000024795532227
    8. '(object' → logprob: -16.125024795532227
    9. '   ' → logprob: -16.375024795532227
    10. '(that' → logprob: -16.500024795532227

Token 667: '.vector' (ID: 104563)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.062012944370508194
    2. '.vector' → logprob: -2.8120129108428955
    3. 'vector' → logprob: -10.937012672424316
    4. '()' → logprob: -11.687012672424316
    5. ' ().' → logprob: -11.937012672424316
    6. '.' → logprob: -12.812012672424316
    7. 'Vector' → logprob: -12.812012672424316
    8. '   ' → logprob: -12.937012672424316
    9. '(vector' → logprob: -13.687012672424316
    10. ' .' → logprob: -14.062012672424316

Token 668: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -2.451116051815916e-05
    2. '())
' → logprob: -11.500024795532227
    3. '()' → logprob: -11.625024795532227
    4. ')' → logprob: -12.375024795532227
    5. ' ())' → logprob: -13.875024795532227
    6. '())

' → logprob: -15.750024795532227
    7. '(),' → logprob: -18.000024795532227
    8. '(' → logprob: -18.125024795532227
    9. '())
' → logprob: -18.125024795532227
    10. '());' → logprob: -18.750024795532227

Token 669: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002782054478302598
    2. ' def' → logprob: -6.002781867980957
    3. 'def' → logprob: -8.252781867980957
    4. '    
' → logprob: -11.377781867980957
    5. '```' → logprob: -11.502781867980957
    6. ' ' → logprob: -11.627781867980957
    7. '
' → logprob: -12.127781867980957
    8. '<|end|>' → logprob: -12.877781867980957
    9. '  ' → logprob: -13.127781867980957
    10. '	def' → logprob: -13.752781867980957

Token 670: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.038126640021800995
    2. ' def' → logprob: -3.5381267070770264
    3. '   ' → logprob: -4.788126468658447
    4. '	def' → logprob: -12.163126945495605
    5. ' ' → logprob: -13.038126945495605
    6. '
' → logprob: -13.163126945495605
    7. '```' → logprob: -13.413126945495605
    8. '  ' → logprob: -14.038126945495605
    9. '    
' → logprob: -14.163126945495605
    10. '<|end|>' → logprob: -16.16312599182129

Token 671: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0005647073267027736
    2. ' is' → logprob: -7.5005645751953125
    3. 'def' → logprob: -11.500564575195312
    4. 'vector' → logprob: -14.875564575195312
    5. '   ' → logprob: -15.125564575195312
    6. '.is' → logprob: -15.750564575195312
    7. '```' → logprob: -16.000564575195312
    8. ' ' → logprob: -16.250564575195312
    9. '	is' → logprob: -16.500564575195312
    10. 'class' → logprob: -16.625564575195312

Token 672: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -2.2200749754119897e-06
    2. '_par' → logprob: -13.750001907348633
    3. 'parallel' → logprob: -14.625001907348633
    4. '_' → logprob: -15.250001907348633
    5. ' parallel' → logprob: -16.125001907348633
    6. ' _' → logprob: -16.875001907348633
    7. '.parallel' → logprob: -17.125001907348633
    8. '_partial' → logprob: -17.250001907348633
    9. 'Parallel' → logprob: -17.375001907348633
    10. '._' → logprob: -18.000001907348633

Token 673: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.6776029699249193e-05
    2. ' (' → logprob: -11.00002670288086
    3. '(' → logprob: -11.62502670288086
    4. '(other' → logprob: -13.87502670288086
    5. '(s' → logprob: -16.50002670288086
    6. 'self' → logprob: -17.75002670288086
    7. '   ' → logprob: -18.50002670288086
    8. ' ' → logprob: -19.00002670288086
    9. '(this' → logprob: -19.50002670288086
    10. '       ' → logprob: -19.50002670288086

Token 674: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01627541147172451
    2. '(other' → logprob: -4.266275405883789
    3. '(' → logprob: -6.391275405883789
    4. ')' → logprob: -8.266275405883789
    5. ' (' → logprob: -9.141275405883789
    6. 'self' → logprob: -10.266275405883789
    7. '<|end|>' → logprob: -11.891275405883789
    8. '(
' → logprob: -11.891275405883789
    9. '(s' → logprob: -12.141275405883789
    10. ')(' → logprob: -12.141275405883789

Token 675: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0089177954941988
    2. ' other' → logprob: -4.758917808532715
    3. 'self' → logprob: -8.133917808532715
    4. '(other' → logprob: -11.883917808532715
    5. ' self' → logprob: -13.258917808532715
    6. 'Other' → logprob: -14.133917808532715
    7. '.other' → logprob: -14.883917808532715
    8. '   ' → logprob: -16.8839168548584
    9. '_other' → logprob: -17.1339168548584
    10. ' ' → logprob: -18.2589168548584

Token 676: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012609724886715412
    2. '('' → logprob: -5.137609958648682
    3. ')' → logprob: -5.262609958648682
    4. '(' → logprob: -7.762609958648682
    5. '):' → logprob: -8.012609481811523
    6. ''' → logprob: -8.637609481811523
    7. ' :' → logprob: -8.762609481811523
    8. ''s' → logprob: -9.637609481811523
    9. '   ' → logprob: -9.762609481811523
    10. '[' → logprob: -10.262609481811523

Token 677: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.020591869950294495
    2. ' '' → logprob: -3.895591974258423
    3. ''S' → logprob: -11.020591735839844
    4. 'Segment' → logprob: -11.520591735839844
    5. '   ' → logprob: -12.020591735839844
    6. ' ' → logprob: -12.270591735839844
    7. ''s' → logprob: -12.270591735839844
    8. ')' → logprob: -13.145591735839844
    9. '`' → logprob: -13.895591735839844
    10. '  ' → logprob: -13.895591735839844

Token 678: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.02541091851890087
    2. ''' → logprob: -4.275411128997803
    3. ''S' → logprob: -4.525411128997803
    4. ''s' → logprob: -8.025410652160645
    5. ' Segment' → logprob: -10.775410652160645
    6. 'Seg' → logprob: -13.275410652160645
    7. ' '' → logprob: -13.650410652160645
    8. 'Point' → logprob: -14.025410652160645
    9. 'Segments' → logprob: -14.275410652160645
    10. '_segment' → logprob: -15.025410652160645

Token 679: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03804401680827141
    2. '')' → logprob: -3.288043975830078
    3. ')'' → logprob: -13.913043975830078
    4. '   ' → logprob: -15.038043975830078
    5. ''' → logprob: -15.038043975830078
    6. '")' → logprob: -15.163043975830078
    7. ' )' → logprob: -15.913043975830078
    8. 'self' → logprob: -15.913043975830078
    9. '):
' → logprob: -16.288043975830078
    10. ' ')' → logprob: -16.788043975830078

Token 680: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27544504404067993
    2. ' ->' → logprob: -1.5254449844360352
    3. '->' → logprob: -3.900444984436035
    4. '       ' → logprob: -7.150444984436035
    5. '   ' → logprob: -7.525444984436035
    6. ':' → logprob: -8.150444984436035
    7. '()' → logprob: -8.150444984436035
    8. 'def' → logprob: -8.650444984436035
    9. '(' → logprob: -8.650444984436035
    10. ')->' → logprob: -8.900444984436035

Token 681: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.005989589262753725
    2. ' bool' → logprob: -5.1309895515441895
    3. ''' → logprob: -10.005990028381348
    4. 'True' → logprob: -11.880990028381348
    5. '(bool' → logprob: -13.380990028381348
    6. ' '' → logprob: -13.880990028381348
    7. 'Bool' → logprob: -14.130990028381348
    8. ''s' → logprob: -14.255990028381348
    9. 'return' → logprob: -14.380990028381348
    10. 'def' → logprob: -14.380990028381348

Token 682: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.550090491771698
    2. '       ' → logprob: -0.925090491771698
    3. 'return' → logprob: -4.425090312957764
    4. '   ' → logprob: -5.175090312957764
    5. ' return' → logprob: -5.675090312957764
    6. '(' → logprob: -5.925090312957764
    7. ')' → logprob: -6.550090312957764
    8. 'self' → logprob: -7.675090312957764
    9. ':' → logprob: -7.800090312957764
    10. '        ' → logprob: -9.175090789794922

Token 683: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13470879197120667
    2. 'return' → logprob: -2.384708881378174
    3. ' return' → logprob: -3.384708881378174
    4. '   ' → logprob: -10.634708404541016
    5. '	return' → logprob: -13.759708404541016
    6. 'def' → logprob: -14.259708404541016
    7. ' ' → logprob: -16.134708404541016
    8. '           ' → logprob: -16.259708404541016
    9. '      ' → logprob: -16.384708404541016
    10. '```' → logprob: -16.384708404541016

Token 684: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001464508124627173
    2. ' return' → logprob: -7.001464366912842
    3. '       ' → logprob: -7.501464366912842
    4. '   ' → logprob: -14.37646484375
    5. '	return' → logprob: -18.25146484375
    6. '```' → logprob: -18.50146484375
    7. 'def' → logprob: -18.87646484375
    8. '
' → logprob: -19.50146484375
    9. '           ' → logprob: -19.62646484375
    10. ' ' → logprob: -19.62646484375

Token 685: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001502717612311244
    2. ' self' → logprob: -6.501502513885498
    3. '(self' → logprob: -15.251502990722656
    4. '	self' → logprob: -16.001502990722656
    5. '   ' → logprob: -17.751502990722656
    6. '
' → logprob: -17.876502990722656
    7. 'Self' → logprob: -18.126502990722656
    8. '[self' → logprob: -18.501502990722656
    9. 's' → logprob: -18.876502990722656
    10. ' ' → logprob: -19.126502990722656

Token 686: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.0003455944824963808
    2. 'vector' → logprob: -8.000345230102539
    3. '.is' → logprob: -11.625345230102539
    4. ' vector' → logprob: -14.500345230102539
    5. '.' → logprob: -15.125345230102539
    6. 'Vector' → logprob: -15.250345230102539
    7. '	vector' → logprob: -16.37534523010254
    8. '_vector' → logprob: -16.75034523010254
    9. '.segment' → logprob: -17.87534523010254
    10. '.Vector' → logprob: -18.25034523010254

Token 687: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.676981345459353e-06
    2. '()' → logprob: -12.250005722045898
    3. '.is' → logprob: -14.375005722045898
    4. '().__' → logprob: -15.375005722045898
    5. ' ().' → logprob: -17.3750057220459
    6. '.' → logprob: -17.6250057220459
    7. '(' → logprob: -17.8750057220459
    8. '()==' → logprob: -19.2500057220459
    9. '()
' → logprob: -19.6250057220459
    10. '()[' → logprob: -20.3750057220459

Token 688: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -3.128163257315464e-07
    2. ' is' → logprob: -15.5
    3. '.is' → logprob: -19.125
    4. '	is' → logprob: -19.875
    5. '```' → logprob: -20.25
    6. '
' → logprob: -21.875
    7. '(is' → logprob: -22.375
    8. 'cross' → logprob: -22.5
    9. '_is' → logprob: -23.25
    10. '   ' → logprob: -23.25

Token 689: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -7.660315895918757e-05
    2. 'parallel' → logprob: -9.500076293945312
    3. ' parallel' → logprob: -14.250076293945312
    4. 'Parallel' → logprob: -14.500076293945312
    5. '.parallel' → logprob: -15.000076293945312
    6. '_' → logprob: -15.375076293945312
    7. '_vector' → logprob: -17.750076293945312
    8. '```' → logprob: -19.000076293945312
    9. '_par' → logprob: -19.375076293945312
    10. ' paralelo' → logprob: -20.250076293945312

Token 690: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.375001907348633
    3. 'other' → logprob: -16.500001907348633
    4. ' (' → logprob: -17.000001907348633
    5. ' other' → logprob: -18.875001907348633
    6. '(
' → logprob: -20.000001907348633
    7. '(object' → logprob: -21.250001907348633
    8. '(original' → logprob: -21.625001907348633
    9. '(ob' → logprob: -22.375001907348633
    10. '()(' → logprob: -22.500001907348633

Token 691: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.0012416596291586757
    2. '().' → logprob: -7.376241683959961
    3. 'vector' → logprob: -7.626241683959961
    4. '(vector' → logprob: -9.126241683959961
    5. ' vector' → logprob: -11.251241683959961
    6. 'Vector' → logprob: -13.126241683959961
    7. '(' → logprob: -13.751241683959961
    8. '.' → logprob: -14.126241683959961
    9. '_vector' → logprob: -14.626241683959961
    10. '<vector' → logprob: -14.751241683959961

Token 692: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0001785112835932523
    2. '()' → logprob: -9.375178337097168
    3. '())
' → logprob: -9.625178337097168
    4. ')' → logprob: -11.000178337097168
    5. ' ())' → logprob: -11.625178337097168
    6. '())

' → logprob: -13.750178337097168
    7. '(other' → logprob: -14.375178337097168
    8. '())
' → logprob: -16.750179290771484
    9. '());' → logprob: -17.125179290771484
    10. '(' → logprob: -17.125179290771484

Token 693: 'Line' (ID: 3665)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5265993475914001
    2. '   ' → logprob: -0.9015993475914001
    3. 'class' → logprob: -6.151599407196045
    4. '<|end|>' → logprob: -7.276599407196045
    5. '#' → logprob: -8.276598930358887
    6. '```' → logprob: -9.151598930358887
    7. ' def' → logprob: -9.776598930358887
    8. 'from' → logprob: -9.776598930358887
    9. ')' → logprob: -10.151598930358887
    10. '
' → logprob: -10.276598930358887

Token 694: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07002957910299301
    2. ' =' → logprob: -4.1950297355651855
    3. '<|end|>' → logprob: -4.1950297355651855
    4. 'class' → logprob: -4.3200297355651855
    5. '=' → logprob: -4.8200297355651855
    6. '(' → logprob: -5.4450297355651855
    7. 'Segment' → logprob: -5.8200297355651855
    8. '(Line' → logprob: -6.5700297355651855
    9. ')' → logprob: -6.8200297355651855
    10. '):' → logprob: -6.8200297355651855

Token 695: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.0007696056272834539
    2. 'Line' → logprob: -7.62576961517334
    3. 'Point' → logprob: -8.62576961517334
    4. ' Segment' → logprob: -9.62576961517334
    5. 'Vector' → logprob: -10.25076961517334
    6. 'class' → logprob: -15.12576961517334
    7. 'Seg' → logprob: -15.87576961517334
    8. 'List' → logprob: -16.375768661499023
    9. 'Tuple' → logprob: -16.750768661499023
    10. 'segment' → logprob: -16.750768661499023

Token 696: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7298482656478882
    2. '<|end|>' → logprob: -1.1048482656478882
    3. 'class' → logprob: -1.7298482656478882
    4. '

' → logprob: -4.854848384857178
    5. '<|end|>' → logprob: -6.979848384857178
    6. 'def' → logprob: -7.729848384857178
    7. '#' → logprob: -9.22984790802002
    8. ' class' → logprob: -10.22984790802002
    9. '    
' → logprob: -10.60484790802002
    10. '```' → logprob: -10.85484790802002

Token 697: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.053718291223049164
    2. 'def' → logprob: -3.303718328475952
    3. '
' → logprob: -4.678718090057373
    4. '<|end|>' → logprob: -5.178718090057373
    5. '#' → logprob: -8.553718566894531
    6. 'from' → logprob: -9.178718566894531
    7. '   ' → logprob: -9.303718566894531
    8. '<|end|>' → logprob: -9.428718566894531
    9. '

' → logprob: -9.553718566894531
    10. ' class' → logprob: -10.553718566894531

Token 698: ' Circle' (ID: 33361)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -0.650048017501831
    2. 'Polygon' → logprob: -0.900048017501831
    3. ' Circle' → logprob: -3.275048017501831
    4. ' Polygon' → logprob: -3.775048017501831
    5. 'Line' → logprob: -4.77504825592041
    6. 'Triangle' → logprob: -7.27504825592041
    7. 'Vector' → logprob: -7.77504825592041
    8. ' Line' → logprob: -8.02504825592041
    9. 'Polyline' → logprob: -8.02504825592041
    10. 'Rectangle' → logprob: -8.15004825592041

Token 699: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001378329354338348
    2. ':

' → logprob: -6.626378536224365
    3. ':
' → logprob: -9.876378059387207
    4. '(object' → logprob: -15.126378059387207
    5. ':def' → logprob: -15.251378059387207
    6. '<|end|>' → logprob: -15.376378059387207
    7. ':

' → logprob: -16.126379013061523
    8. '():' → logprob: -16.251379013061523
    9. '):' → logprob: -16.876379013061523
    10. '(' → logprob: -17.501379013061523

Token 700: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24726054072380066
    2. '
' → logprob: -1.872260570526123
    3. 'def' → logprob: -2.997260570526123
    4. '    
' → logprob: -4.372260570526123
    5. 'class' → logprob: -6.247260570526123
    6. '<|end|>' → logprob: -7.747260570526123
    7. ' def' → logprob: -8.872260093688965
    8. '```' → logprob: -9.622260093688965
    9. '  
' → logprob: -9.747260093688965
    10. '

' → logprob: -10.622260093688965

Token 701: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00021152703266125172
    2. '   ' → logprob: -9.125211715698242
    3. '
' → logprob: -9.750211715698242
    4. ' def' → logprob: -10.125211715698242
    5. '    
' → logprob: -12.500211715698242
    6. '	def' → logprob: -16.125211715698242
    7. '

' → logprob: -16.375211715698242
    8. '#' → logprob: -16.625211715698242
    9. '```' → logprob: -16.875211715698242
    10. '  
' → logprob: -17.000211715698242

Token 702: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04048851504921913
    2. 'init' → logprob: -3.2904884815216064
    3. 'def' → logprob: -6.5404887199401855
    4. ' __' → logprob: -7.0404887199401855
    5. '_init' → logprob: -9.040488243103027
    6. ' def' → logprob: -12.665488243103027
    7. '___' → logprob: -13.915488243103027
    8. '```' → logprob: -14.290488243103027
    9. '__(' → logprob: -14.665488243103027
    10. '.__' → logprob: -15.040488243103027

Token 703: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'def' → logprob: -15.25
    3. '_init' → logprob: -18.625
    4. '(init' → logprob: -18.875
    5. ' init' → logprob: -19.75
    6. 'ini' → logprob: -20.5
    7. '```' → logprob: -20.625
    8. 'inite' → logprob: -21.25
    9. 'int' → logprob: -21.75
    10. '	init' → logprob: -21.75

Token 704: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.23227064311504364
    2. '__(' → logprob: -1.60727059841156
    3. '(' → logprob: -5.10727071762085
    4. 'self' → logprob: -7.35727071762085
    5. '   ' → logprob: -10.107270240783691
    6. '__(
' → logprob: -10.732270240783691
    7. 'def' → logprob: -10.982270240783691
    8. ' (' → logprob: -11.232270240783691
    9. '```' → logprob: -11.482270240783691
    10. '
' → logprob: -11.732270240783691

Token 705: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.246537173457909e-06
    2. ' self' → logprob: -12.750003814697266
    3. ',' → logprob: -13.875003814697266
    4. '   ' → logprob: -15.875003814697266
    5. '
' → logprob: -16.500003814697266
    6. 'elf' → logprob: -16.750003814697266
    7. '       ' → logprob: -17.375003814697266
    8. ')' → logprob: -17.375003814697266
    9. 'def' → logprob: -18.750003814697266
    10. '(self' → logprob: -18.875003814697266

Token 706: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006088292226195335
    2. 'self' → logprob: -5.1310882568359375
    3. '(self' → logprob: -9.006088256835938
    4. ',
' → logprob: -11.506088256835938
    5. ' self' → logprob: -11.506088256835938
    6. ' ,' → logprob: -12.381088256835938
    7. ' (' → logprob: -12.631088256835938
    8. ')' → logprob: -13.131088256835938
    9. ',self' → logprob: -13.131088256835938
    10. '
' → logprob: -13.631088256835938

Token 707: ' c' (ID: 274)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.49141964316368103
    2. 'c' → logprob: -0.9914196729660034
    3. 'o' → logprob: -4.241419792175293
    4. 'self' → logprob: -6.241419792175293
    5. 'p' → logprob: -7.366419792175293
    6. ' center' → logprob: -9.491419792175293
    7. 'O' → logprob: -10.241419792175293
    8. 'Center' → logprob: -10.741419792175293
    9. '   ' → logprob: -11.116419792175293
    10. 'centre' → logprob: -11.241419792175293

Token 708: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010131901130080223
    2. 'enter' → logprob: -4.6351318359375
    3. '=None' → logprob: -8.7601318359375
    4. 'ont' → logprob: -10.1351318359375
    5. 'ircle' → logprob: -10.1351318359375
    6. '=' → logprob: -10.2601318359375
    7. 'lass' → logprob: -10.6351318359375
    8. '   ' → logprob: -11.5101318359375
    9. 'Point' → logprob: -11.5101318359375
    10. '(Point' → logprob: -11.6351318359375

Token 709: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0004309076175559312
    2. ' Point' → logprob: -7.750431060791016
    3. '   ' → logprob: -16.250431060791016
    4. '	Point' → logprob: -16.625431060791016
    5. '  ' → logprob: -19.125431060791016
    6. ' ' → logprob: -19.500431060791016
    7. ''' → logprob: -19.625431060791016
    8. '_point' → logprob: -20.125431060791016
    9. 'Vector' → logprob: -20.375431060791016
    10. '_Point' → logprob: -20.750431060791016

Token 710: '=None' (ID: 12783)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42424264550209045
    2. ',' → logprob: -1.924242615699768
    3. '=None' → logprob: -1.924242615699768
    4. ' =' → logprob: -2.9242427349090576
    5. 'None' → logprob: -10.549242973327637
    6. ' ,' → logprob: -11.674242973327637
    7. ')' → logprob: -11.674242973327637
    8. '   ' → logprob: -12.049242973327637
    9. ' None' → logprob: -12.674242973327637
    10. ',None' → logprob: -13.424242973327637

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002075933152809739
    2. ' ,' → logprob: -8.500207901000977
    3. ',c' → logprob: -12.875207901000977
    4. ',
' → logprob: -14.625207901000977
    5. ')' → logprob: -15.125207901000977
    6. 'c' → logprob: -15.500207901000977
    7. '‌,' → logprob: -16.000207901000977
    8. ',None' → logprob: -16.375207901000977
    9. '   ' → logprob: -16.750207901000977
    10. '),' → logprob: -16.875207901000977

Token 712: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.722539834911004e-05
    2. ' r' → logprob: -9.250097274780273
    3. 'radius' → logprob: -14.125097274780273
    4. '	r' → logprob: -15.750097274780273
    5. '   ' → logprob: -16.125097274780273
    6. '  ' → logprob: -17.250097274780273
    7. ' ' → logprob: -18.125097274780273
    8. ' radius' → logprob: -19.375097274780273
    9. '    
' → logprob: -19.750097274780273
    10. ')' → logprob: -20.250097274780273

Token 713: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019710339256562293
    2. '=' → logprob: -8.625197410583496
    3. '=None' → logprob: -11.875197410583496
    4. ' :' → logprob: -12.000197410583496
    5. ')' → logprob: -13.125197410583496
    6. '=float' → logprob: -13.375197410583496
    7. ' =' → logprob: -15.625197410583496
    8. '):' → logprob: -15.875197410583496
    9. ':int' → logprob: -16.12519645690918
    10. '0' → logprob: -16.37519645690918

Token 714: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.37323087453842163
    2. '0' → logprob: -1.2482309341430664
    3. ' float' → logprob: -3.7482309341430664
    4. ' ' → logprob: -7.123230934143066
    5. '	float' → logprob: -10.748230934143066
    6. ')' → logprob: -10.873230934143066
    7. '=float' → logprob: -10.998230934143066
    8. '1' → logprob: -11.123230934143066
    9. '(float' → logprob: -11.248230934143066
    10. '   ' → logprob: -11.623230934143066

Token 715: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.881560041918419e-05
    2. ' =' → logprob: -10.250039100646973
    3. ')' → logprob: -13.375039100646973
    4. '=None' → logprob: -14.125039100646973
    5. ':' → logprob: -14.500039100646973
    6. '0' → logprob: -14.500039100646973
    7. '):' → logprob: -16.125038146972656
    8. ' ' → logprob: -17.875038146972656
    9. ')=' → logprob: -19.000038146972656
    10. '1' → logprob: -19.250038146972656

Token 716: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.73446003627032e-05
    2. '1' → logprob: -9.875097274780273
    3. ' ' → logprob: -10.000097274780273
    4. '   ' → logprob: -15.750097274780273
    5. ')' → logprob: -16.375097274780273
    6. '=' → logprob: -16.750097274780273
    7. '  ' → logprob: -16.875097274780273
    8. '```' → logprob: -17.375097274780273
    9. '
' → logprob: -17.500097274780273
    10. 'None' → logprob: -17.500097274780273

Token 717: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.319370302458992e-06
    2. '.)' → logprob: -12.375005722045898
    3. ')' → logprob: -14.750005722045898
    4. '.
' → logprob: -15.250005722045898
    5. '.):' → logprob: -15.250005722045898
    6. '.,' → logprob: -17.1250057220459
    7. '.

' → logprob: -17.1250057220459
    8. '0' → logprob: -17.2500057220459
    9. '.')' → logprob: -17.5000057220459
    10. '.:' → logprob: -17.5000057220459

Token 718: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. '```' → logprob: -13.625003814697266
    3. 'float' → logprob: -14.000003814697266
    4. ')' → logprob: -15.125003814697266
    5. '   ' → logprob: -15.500003814697266
    6. ' ' → logprob: -15.500003814697266
    7. '5' → logprob: -15.625003814697266
    8. '1' → logprob: -16.812503814697266
    9. '``' → logprob: -16.812503814697266
    10. 'def' → logprob: -16.875003814697266

Token 719: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2679588496685028
    2. '):' → logprob: -1.5179588794708252
    3. '):
' → logprob: -4.142958641052246
    4. '):
' → logprob: -11.017958641052246
    5. ' )' → logprob: -12.267958641052246
    6. ':' → logprob: -13.267958641052246
    7. '):

' → logprob: -13.642958641052246
    8. ' ):' → logprob: -14.142958641052246
    9. ')->' → logprob: -14.517958641052246
    10. '   ' → logprob: -14.892958641052246

Token 720: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.350616455078125
    2. ':
' → logprob: -1.225616455078125
    3. '       ' → logprob: -6.475616455078125
    4. '   ' → logprob: -8.350616455078125
    5. '):
' → logprob: -8.600616455078125
    6. '->' → logprob: -9.600616455078125
    7. ':
' → logprob: -10.225616455078125
    8. ' ->' → logprob: -10.350616455078125
    9. ' :
' → logprob: -10.975616455078125
    10. ')' → logprob: -11.225616455078125

Token 721: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.5491004129871726e-05
    2. ' None' → logprob: -10.000045776367188
    3. 'void' → logprob: -20.500045776367188
    4. 'No' → logprob: -21.125045776367188
    5. '_None' → logprob: -21.125045776367188
    6. '(None' → logprob: -21.250045776367188
    7. 'float' → logprob: -21.500045776367188
    8. '   ' → logprob: -21.875045776367188
    9. '=None' → logprob: -22.125045776367188
    10. 'def' → logprob: -23.250045776367188

Token 722: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03502677008509636
    2. ':
' → logprob: -3.410026788711548
    3. '       ' → logprob: -6.660026550292969
    4. '):
' → logprob: -10.035026550292969
    5. '):' → logprob: -10.535026550292969
    6. '   ' → logprob: -11.160026550292969
    7. ',' → logprob: -12.035026550292969
    8. '<|end|>' → logprob: -12.410026550292969
    9. ' :' → logprob: -14.285026550292969
    10. ':

' → logprob: -14.535026550292969

Token 723: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.500108141452074e-05
    2. 'self' → logprob: -10.375035285949707
    3. ' self' → logprob: -13.000035285949707
    4. '   ' → logprob: -13.875035285949707
    5. '	' → logprob: -14.875035285949707
    6. '	self' → logprob: -16.62503433227539
    7. ' ' → logprob: -16.87503433227539
    8. '	   ' → logprob: -17.25003433227539
    9. '      ' → logprob: -17.62503433227539
    10. '    ' → logprob: -17.87503433227539

Token 724: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00010640407708706334
    2. '       ' → logprob: -9.250106811523438
    3. ' self' → logprob: -11.500106811523438
    4. '	self' → logprob: -16.625106811523438
    5. '   ' → logprob: -18.000106811523438
    6. 'if' → logprob: -19.375106811523438
    7. '(self' → logprob: -20.125106811523438
    8. '﻿' → logprob: -20.500106811523438
    9. 'c' → logprob: -21.000106811523438
    10. 'super' → logprob: -21.750106811523438

Token 725: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.005650863517075777
    2. '.' → logprob: -5.255650997161865
    3. 'c' → logprob: -8.005650520324707
    4. ' .' → logprob: -10.255650520324707
    5. ' =' → logprob: -11.130650520324707
    6. '=' → logprob: -11.630650520324707
    7. ':' → logprob: -11.880650520324707
    8. '	c' → logprob: -12.255650520324707
    9. 'class' → logprob: -13.005650520324707
    10. '._' → logprob: -13.255650520324707

Token 726: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021648555994034
    2. ' =' → logprob: -2.3502163887023926
    3. ':' → logprob: -11.97521686553955
    4. '=c' → logprob: -12.60021686553955
    5. ')' → logprob: -16.850215911865234
    6. 'c' → logprob: -16.850215911865234
    7. ' ' → logprob: -17.850215911865234
    8. '   ' → logprob: -18.850215911865234
    9. '=

' → logprob: -18.850215911865234
    10. '=None' → logprob: -19.475215911865234

Token 727: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.11858980357646942
    2. ' Point' → logprob: -2.2435898780822754
    3. 'c' → logprob: -5.243589878082275
    4. ' c' → logprob: -7.743589878082275
    5. '	Point' → logprob: -11.118589401245117
    6. '(Point' → logprob: -12.368589401245117
    7. '   ' → logprob: -12.743589401245117
    8. ' =' → logprob: -12.743589401245117
    9. '=' → logprob: -12.743589401245117
    10. 'Circle' → logprob: -13.243589401245117

Token 728: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048592254519462585
    2. ' =' → logprob: -3.0485923290252686
    3. '=c' → logprob: -12.298592567443848
    4. ' ' → logprob: -16.42359161376953
    5. 'c' → logprob: -16.67359161376953
    6. ')' → logprob: -17.29859161376953
    7. ' c' → logprob: -18.42359161376953
    8. '=
' → logprob: -18.54859161376953
    9. '<|end|>' → logprob: -18.54859161376953
    10. '	' → logprob: -19.04859161376953

Token 729: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.06214189901947975
    2. ' Point' → logprob: -2.8121418952941895
    3. 'c' → logprob: -8.687142372131348
    4. ' c' → logprob: -12.312142372131348
    5. '	Point' → logprob: -14.687142372131348
    6. 'Circle' → logprob: -15.062142372131348
    7. '(Point' → logprob: -16.06214141845703
    8. '   ' → logprob: -16.56214141845703
    9. ' ' → logprob: -17.56214141845703
    10. '_Point' → logprob: -18.06214141845703

Token 730: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.0391463193809614e-05
    2. 'if' → logprob: -10.125060081481934
    3. '0' → logprob: -11.375060081481934
    4. '(' → logprob: -12.125060081481934
    5. 'c' → logprob: -13.375060081481934
    6. ' if' → logprob: -14.250060081481934
    7. ' ()' → logprob: -14.875060081481934
    8. '()
' → logprob: -15.250060081481934
    9. '(c' → logprob: -15.500060081481934
    10. '{}' → logprob: -15.500060081481934

Token 731: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.577522337436676
    2. 'if' → logprob: -0.827522337436676
    3. '()' → logprob: -6.452522277832031
    4. '       ' → logprob: -12.452522277832031
    5. '	if' → logprob: -14.702522277832031
    6. '        ' → logprob: -15.202522277832031
    7. '   ' → logprob: -16.20252227783203
    8. '           ' → logprob: -16.82752227783203
    9. '         ' → logprob: -16.95252227783203
    10. '
' → logprob: -16.95252227783203

Token 732: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.5491004129871726e-05
    2. ' c' → logprob: -10.000045776367188
    3. '	c' → logprob: -18.125045776367188
    4. '   ' → logprob: -20.375045776367188
    5. '       ' → logprob: -20.500045776367188
    6. ')c' → logprob: -20.625045776367188
    7. '_c' → logprob: -21.250045776367188
    8. '$c' → logprob: -22.125045776367188
    9. 'cation' → logprob: -22.125045776367188
    10. ' ' → logprob: -22.375045776367188

Token 733: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.313262403011322
    2. 'is' → logprob: -1.3132624626159668
    3. 'if' → logprob: -15.188261985778809
    4. '==' → logprob: -16.063262939453125
    5. 'Is' → logprob: -16.438262939453125
    6. 'None' → logprob: -16.813262939453125
    7. 's' → logprob: -17.313262939453125
    8. '	is' → logprob: -17.313262939453125
    9. 'else' → logprob: -17.438262939453125
    10. ' if' → logprob: -17.563262939453125

Token 734: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004317420825827867
    2. ' None' → logprob: -7.750431537628174
    3. 'none' → logprob: -14.000432014465332
    4. '_None' → logprob: -16.125431060791016
    5. '   ' → logprob: -16.375431060791016
    6. '(None' → logprob: -17.000431060791016
    7. '=None' → logprob: -17.000431060791016
    8. '_none' → logprob: -17.875431060791016
    9. '.None' → logprob: -19.125431060791016
    10. 'NONE' → logprob: -20.500431060791016

Token 735: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3132660686969757
    2. ' else' → logprob: -1.3132660388946533
    3. '	else' → logprob: -12.813265800476074
    4. '        ' → logprob: -14.063265800476074
    5. ':' → logprob: -15.188265800476074
    6. 'elses' → logprob: -16.06326675415039
    7. '       ' → logprob: -16.06326675415039
    8. 'e' → logprob: -16.56326675415039
    9. ' ' → logprob: -16.81326675415039
    10. ' ' → logprob: -17.43826675415039

Token 736: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002613358374219388
    2. ' c' → logprob: -8.250261306762695
    3. '	c' → logprob: -17.000261306762695
    4. '_c' → logprob: -19.875261306762695
    5. '   ' → logprob: -20.000261306762695
    6. ')c' → logprob: -20.000261306762695
    7. ' ' → logprob: -21.250261306762695
    8. '
' → logprob: -21.250261306762695
    9. '$c' → logprob: -21.375261306762695
    10. ' ' → logprob: -21.375261306762695

Token 737: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044663884909823537
    2. 'self' → logprob: -8.125446319580078
    3. '<|end|>' → logprob: -9.250446319580078
    4. '   ' → logprob: -10.500446319580078
    5. ',' → logprob: -11.625446319580078
    6. '
' → logprob: -11.875446319580078
    7. ' self' → logprob: -12.500446319580078
    8. '<|end|>' → logprob: -13.625446319580078
    9. ' ' → logprob: -13.750446319580078
    10. '           ' → logprob: -14.375446319580078

Token 738: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20154140889644623
    2. 'self' → logprob: -1.7015414237976074
    3. ' self' → logprob: -9.07654094696045
    4. '   ' → logprob: -11.45154094696045
    5. '	self' → logprob: -13.20154094696045
    6. '	' → logprob: -14.95154094696045
    7. '           ' → logprob: -15.07654094696045
    8. '      ' → logprob: -15.70154094696045
    9. '(self' → logprob: -15.95154094696045
    10. '     ' → logprob: -16.326541900634766

Token 739: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -3.023293538717553e-05
    2. '       ' → logprob: -10.500030517578125
    3. ' self' → logprob: -12.875030517578125
    4. '	self' → logprob: -16.750030517578125
    5. 'r' → logprob: -17.375030517578125
    6. '
' → logprob: -18.500030517578125
    7. '(self' → logprob: -19.250030517578125
    8. '   ' → logprob: -19.250030517578125
    9. 's' → logprob: -19.875030517578125
    10. '        
' → logprob: -20.750030517578125

Token 740: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0006116442382335663
    2. 'r' → logprob: -7.875611782073975
    3. '.' → logprob: -8.375611305236816
    4. ' .' → logprob: -14.500611305236816
    5. '	r' → logprob: -15.000611305236816
    6. '=r' → logprob: -16.375612258911133
    7. ' r' → logprob: -16.375612258911133
    8. '.radius' → logprob: -17.125612258911133
    9. '.c' → logprob: -18.000612258911133
    10. '<|end|>' → logprob: -18.500612258911133

Token 741: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10213623940944672
    2. ' =' → logprob: -2.3521361351013184
    3. '=r' → logprob: -6.602136135101318
    4. ':' → logprob: -7.477136135101318
    5. ' r' → logprob: -13.477136611938477
    6. 'r' → logprob: -13.727136611938477
    7. ' ' → logprob: -13.977136611938477
    8. ':r' → logprob: -14.102136611938477
    9. '=float' → logprob: -16.477136611938477
    10. ' :' → logprob: -16.977136611938477

Token 742: ' float' (ID: 4428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.493430894101039e-05
    2. ' r' → logprob: -9.625075340270996
    3. 'float' → logprob: -11.750075340270996
    4. ' float' → logprob: -15.375075340270996
    5. '0' → logprob: -15.750075340270996
    6. '   ' → logprob: -15.875075340270996
    7. '	r' → logprob: -15.875075340270996
    8. '
' → logprob: -17.12507438659668
    9. '=' → logprob: -17.12507438659668
    10. ' ' → logprob: -17.25007438659668

Token 743: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520705759525299
    2. ' =' → logprob: -1.5020705461502075
    3. '=r' → logprob: -8.877070426940918
    4. ' ' → logprob: -13.752070426940918
    5. 'r' → logprob: -14.627070426940918
    6. ' r' → logprob: -15.752070426940918
    7. '	' → logprob: -16.502071380615234
    8. ':' → logprob: -17.127071380615234
    9. ')' → logprob: -17.752071380615234
    10. '    ' → logprob: -18.002071380615234

Token 744: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000158842682139948
    2. ' r' → logprob: -8.75015926361084
    3. '0' → logprob: -15.25015926361084
    4. '	r' → logprob: -17.250158309936523
    5. 'float' → logprob: -18.750158309936523
    6. ' ' → logprob: -19.125158309936523
    7. '   ' → logprob: -19.375158309936523
    8. ' ' → logprob: -19.625158309936523
    9. '
' → logprob: -20.250158309936523
    10. '_r' → logprob: -20.375158309936523

Token 745: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 746: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03362829238176346
    2. '
' → logprob: -3.658628225326538
    3. 'def' → logprob: -5.158628463745117
    4. '<|end|>' → logprob: -6.533628463745117
    5. '<|end|>' → logprob: -10.658628463745117
    6. '```' → logprob: -10.783628463745117
    7. '    
' → logprob: -11.033628463745117
    8. ')' → logprob: -11.658628463745117
    9. ' def' → logprob: -11.783628463745117
    10. ' ' → logprob: -12.158628463745117

Token 747: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.2127087504486553e-05
    2. '   ' → logprob: -10.875021934509277
    3. ' def' → logprob: -12.750021934509277
    4. '	def' → logprob: -16.625022888183594
    5. ')' → logprob: -17.000022888183594
    6. '```' → logprob: -17.125022888183594
    7. '
' → logprob: -17.375022888183594
    8. '#' → logprob: -17.500022888183594
    9. ' ' → logprob: -18.500022888183594
    10. '<|end|>' → logprob: -18.750022888183594

Token 748: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0431978665292263
    2. ' __' → logprob: -3.1681978702545166
    3. 'repr' → logprob: -8.793197631835938
    4. 'def' → logprob: -10.668197631835938
    5. 'area' → logprob: -12.418197631835938
    6. ' repr' → logprob: -12.418197631835938
    7. ' ' → logprob: -12.543197631835938
    8. '.__' → logprob: -12.793197631835938
    9. '_repr' → logprob: -12.793197631835938
    10. 'radius' → logprob: -13.918197631835938

Token 749: 'eq' (ID: 21725)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -3.4121114822482923e-06
    2. 'eq' → logprob: -12.750003814697266
    3. 'init' → logprob: -15.250003814697266
    4. 'rep' → logprob: -16.500003814697266
    5. 'str' → logprob: -17.000003814697266
    6. '_repr' → logprob: -18.000003814697266
    7. 'lt' → logprob: -18.875003814697266
    8. ' repr' → logprob: -20.125003814697266
    9. 'represent' → logprob: -21.875003814697266
    10. 'def' → logprob: -22.125003814697266

Token 750: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.001605197903700173
    2. '__' → logprob: -6.501605033874512
    3. '(self' → logprob: -9.501605033874512
    4. '__((' → logprob: -11.251605033874512
    5. '__(
' → logprob: -11.376605033874512
    6. '__("' → logprob: -13.876605033874512
    7. '__('' → logprob: -14.126605033874512
    8. '__(*' → logprob: -14.126605033874512
    9. '(' → logprob: -14.501605033874512
    10. '__[' → logprob: -14.626605033874512

Token 751: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.4849443838757e-06
    2. ' self' → logprob: -12.500004768371582
    3. '(self' → logprob: -14.375004768371582
    4. '
' → logprob: -16.500003814697266
    5. 's' → logprob: -18.125003814697266
    6. ')' → logprob: -18.375003814697266
    7. ',' → logprob: -18.750003814697266
    8. ' ' → logprob: -18.875003814697266
    9. '   ' → logprob: -19.000003814697266
    10. '(' → logprob: -19.250003814697266

Token 752: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005000106059014797
    2. '__(' → logprob: -5.380000114440918
    3. '(' → logprob: -8.755000114440918
    4. ' (' → logprob: -9.005000114440918
    5. ',' → logprob: -10.255000114440918
    6. '__' → logprob: -10.505000114440918
    7. 'self' → logprob: -10.755000114440918
    8. ')(' → logprob: -11.880000114440918
    9. '__(
' → logprob: -13.505000114440918
    10. '==' → logprob: -13.755000114440918

Token 753: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6932644248008728
    2. 'other' → logprob: -0.6932644248008728
    3. ' other' → logprob: -9.44326400756836
    4. ' self' → logprob: -10.19326400756836
    5. 'object' → logprob: -14.81826400756836
    6. '   ' → logprob: -16.44326400756836
    7. 'Other' → logprob: -17.19326400756836
    8. '       ' → logprob: -17.44326400756836
    9. ' ' → logprob: -17.94326400756836
    10. 'obj' → logprob: -18.56826400756836

Token 754: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00028016636497341096
    2. ' :' → logprob: -8.375280380249023
    3. '__:' → logprob: -11.250280380249023
    4. ')' → logprob: -11.500280380249023
    5. '__' → logprob: -12.375280380249023
    6. ',' → logprob: -12.500280380249023
    7. '   ' → logprob: -12.750280380249023
    8. 'self' → logprob: -12.875280380249023
    9. '```' → logprob: -13.000280380249023
    10. 'object' → logprob: -13.125280380249023

Token 755: ' object' (ID: 2817)
  Prédit: 'object'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'object' → logprob: -0.004708630498498678
    2. ' object' → logprob: -5.379708766937256
    3. ''' → logprob: -9.629708290100098
    4. '(object' → logprob: -11.504708290100098
    5. '	object' → logprob: -12.379708290100098
    6. ' '' → logprob: -12.879708290100098
    7. ')object' → logprob: -13.129708290100098
    8. ' ' → logprob: -14.004708290100098
    9. ''objet' → logprob: -14.129708290100098
    10. 'Object' → logprob: -14.754708290100098

Token 756: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ':' → logprob: -12.000009536743164
    3. ' )' → logprob: -12.875009536743164
    4. ')->' → logprob: -14.625009536743164
    5. ')object' → logprob: -16.000009536743164
    6. '')' → logprob: -16.125009536743164
    7. '   ' → logprob: -16.625009536743164
    8. ' ' → logprob: -17.625009536743164
    9. '):' → logprob: -17.750009536743164
    10. '),' → logprob: -18.125009536743164

Token 757: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21857376396656036
    2. ' ->' → logprob: -1.968573808670044
    3. '->' → logprob: -3.093573808670044
    4. ')->' → logprob: -4.593573570251465
    5. ' )' → logprob: -7.968573570251465
    6. ':' → logprob: -7.968573570251465
    7. '       ' → logprob: -8.843573570251465
    8. ' ' → logprob: -9.218573570251465
    9. '   ' → logprob: -9.218573570251465
    10. ' )->' → logprob: -9.718573570251465

Token 758: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0002613358374219388
    2. ' bool' → logprob: -8.250261306762695
    3. '	bool' → logprob: -16.875261306762695
    4. 'object' → logprob: -17.000261306762695
    5. '<bool' → logprob: -17.375261306762695
    6. '(bool' → logprob: -17.750261306762695
    7. '
' → logprob: -19.750261306762695
    8. ')' → logprob: -19.750261306762695
    9. '```' → logprob: -20.125261306762695
    10. ',bool' → logprob: -20.375261306762695

Token 759: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1879626214504242
    2. ')' → logprob: -2.062962532043457
    3. '->' → logprob: -3.437962532043457
    4. ' ->' → logprob: -4.937962532043457
    5. '       ' → logprob: -5.937962532043457
    6. '   ' → logprob: -6.562962532043457
    7. ')->' → logprob: -7.187962532043457
    8. ':
' → logprob: -10.312962532043457
    9. '           ' → logprob: -10.812962532043457
    10. '        ' → logprob: -10.812962532043457

Token 760: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.061054359131958e-06
    2. ' if' → logprob: -11.875007629394531
    3. 'if' → logprob: -14.375007629394531
    4. '   ' → logprob: -15.000007629394531
    5. '      ' → logprob: -16.75000762939453
    6. '           ' → logprob: -16.87500762939453
    7. '#' → logprob: -17.12500762939453
    8. '<|end|>' → logprob: -17.25000762939453
    9. ' ' → logprob: -18.00000762939453
    10. ':' → logprob: -18.12500762939453

Token 761: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16329818964004517
    2. 'if' (adapté à ' if') → logprob: -1.9132981300354004
    3. ' if' → logprob: -5.7882981300354
    4. 'return' → logprob: -13.163298606872559
    5. '   ' → logprob: -13.288298606872559
    6. '	if' → logprob: -14.038298606872559
    7. 'If' → logprob: -14.163298606872559
    8. '      ' → logprob: -15.913298606872559
    9. '           ' → logprob: -16.038297653198242
    10. 'self' → logprob: -16.163297653198242

Token 762: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2519296407699585
    2. 'not' → logprob: -1.5019296407699585
    3. '	not' → logprob: -15.25192928314209
    4. '(not' → logprob: -15.87692928314209
    5. '   ' → logprob: -16.501930236816406
    6. '       ' → logprob: -16.751930236816406
    7. '_not' → logprob: -16.876930236816406
    8. 'Not' → logprob: -16.876930236816406
    9. '!' → logprob: -18.126930236816406
    10. '           ' → logprob: -18.376930236816406

Token 763: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.004080658778548241
    2. ' isinstance' → logprob: -5.504080772399902
    3. '(is' → logprob: -13.004080772399902
    4. '   ' → logprob: -17.129079818725586
    5. 'Is' → logprob: -18.254079818725586
    6. '_is' → logprob: -19.379079818725586
    7. '    ' → logprob: -19.504079818725586
    8. 'instance' → logprob: -19.754079818725586
    9. 'type' → logprob: -19.879079818725586
    10. '       ' → logprob: -19.879079818725586

Token 764: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0009119403548538685
    2. 'other' → logprob: -7.000911712646484
    3. ' other' → logprob: -14.750911712646484
    4. 'Other' → logprob: -19.000911712646484
    5. '_other' → logprob: -20.750911712646484
    6. 'OTHER' → logprob: -21.750911712646484
    7. '(' → logprob: -22.375911712646484
    8. '(self' → logprob: -22.500911712646484
    9. '.other' → logprob: -22.750911712646484
    10. '-other' → logprob: -22.750911712646484

Token 765: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.070975071750581e-05
    2. 'other' → logprob: -11.250030517578125
    3. '(other' → logprob: -11.625030517578125
    4. ',C' → logprob: -12.750030517578125
    5. ' ,' → logprob: -13.000030517578125
    6. 'self' → logprob: -13.500030517578125
    7. ',self' → logprob: -14.500030517578125
    8. 'Other' → logprob: -15.000030517578125
    9. ' other' → logprob: -15.250030517578125
    10. 'C' → logprob: -15.250030517578125

Token 766: ' Circle' (ID: 33361)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -0.0031794982496649027
    2. ' Circle' → logprob: -5.753179550170898
    3. 'Point' → logprob: -13.753179550170898
    4. 'self' → logprob: -15.503179550170898
    5. 'Cir' → logprob: -16.0031795501709
    6. 'Circular' → logprob: -16.0031795501709
    7. '.Circle' → logprob: -16.3781795501709
    8. '
' → logprob: -16.5031795501709
    9. '_circle' → logprob: -16.7531795501709
    10. 'C' → logprob: -17.5031795501709

Token 767: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38705548644065857
    2. '):' → logprob: -1.137055516242981
    3. '):
' → logprob: -9.387055397033691
    4. '   ' → logprob: -10.012055397033691
    5. '       ' → logprob: -10.512055397033691
    6. ')' → logprob: -11.387055397033691
    7. ':' → logprob: -12.387055397033691
    8. '):

' → logprob: -12.637055397033691
    9. '           ' → logprob: -12.887055397033691
    10. ',' → logprob: -12.887055397033691

Token 768: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.860340752406046e-05
    2. 'return' → logprob: -10.0000581741333
    3. '       ' → logprob: -11.7500581741333
    4. '               ' → logprob: -13.0000581741333
    5. ' return' → logprob: -13.5000581741333
    6. '   ' → logprob: -14.1250581741333
    7. ':return' → logprob: -15.1250581741333
    8. '          ' → logprob: -15.5000581741333
    9. '		' → logprob: -15.8750581741333
    10. 'def' → logprob: -16.500059127807617

Token 769: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.022751864045858383
    2. ' return' → logprob: -4.272751808166504
    3. '           ' → logprob: -4.772751808166504
    4. '       ' → logprob: -9.397751808166504
    5. ':return' → logprob: -11.897751808166504
    6. '   ' → logprob: -13.272751808166504
    7. 'Return' → logprob: -13.647751808166504
    8. '{return' → logprob: -14.522751808166504
    9. '	return' → logprob: -15.147751808166504
    10. ' ' → logprob: -15.272751808166504

Token 770: ' Not' (ID: 4037)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -6.2729995988775045e-06
    2. 'False' → logprob: -12.750006675720215
    3. ' Not' → logprob: -12.750006675720215
    4. '   ' → logprob: -15.750006675720215
    5. '       ' → logprob: -15.875006675720215
    6. '_Not' → logprob: -17.3750057220459
    7. '           ' → logprob: -17.6250057220459
    8. '_not' → logprob: -18.8750057220459
    9. 'not' → logprob: -19.2500057220459
    10. '    ' → logprob: -19.3750057220459

Token 771: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -3.650518920039758e-06
    2. 'implemented' → logprob: -12.875003814697266
    3. 'Implement' → logprob: -14.375003814697266
    4. 'Im' → logprob: -16.375003814697266
    5. 'Impl' → logprob: -16.500003814697266
    6. 'Implementation' → logprob: -17.000003814697266
    7. '_IMPLEMENT' → logprob: -17.000003814697266
    8. '```' → logprob: -17.250003814697266
    9. 'Completed' → logprob: -17.500003814697266
    10. 'Supported' → logprob: -17.625003814697266

Token 772: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.747814349073451e-05
    2. 'return' → logprob: -11.625017166137695
    3. '
' → logprob: -12.625017166137695
    4. '   ' → logprob: -13.625017166137695
    5. '      ' → logprob: -14.125017166137695
    6. '<|end|>' → logprob: -14.125017166137695
    7. '        
' → logprob: -14.250017166137695
    8. '           ' → logprob: -14.375017166137695
    9. ' return' → logprob: -14.500017166137695
    10. ',' → logprob: -15.500017166137695

Token 773: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.4881879400927573e-05
    2. 'return' → logprob: -10.625035285949707
    3. '   ' → logprob: -11.875035285949707
    4. '           ' → logprob: -13.250035285949707
    5. '	' → logprob: -14.125035285949707
    6. ' return' → logprob: -15.125035285949707
    7. '      ' → logprob: -15.625035285949707
    8. '	   ' → logprob: -15.750035285949707
    9. '<|end|>' → logprob: -16.62503433227539
    10. 'def' → logprob: -16.62503433227539

Token 774: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009374279179610312
    2. '       ' → logprob: -7.000937461853027
    3. ' return' → logprob: -10.625937461853027
    4. '   ' → logprob: -13.375937461853027
    5. '	return' → logprob: -17.00093650817871
    6. 'self' → logprob: -18.12593650817871
    7. 'def' → logprob: -18.37593650817871
    8. '           ' → logprob: -19.12593650817871
    9. ' ' → logprob: -19.62593650817871
    10. 'if' → logprob: -20.00093650817871

Token 775: ' self' (ID: 1051)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5761916041374207
    2. 'self' → logprob: -0.8261916041374207
    3. ' self' → logprob: -8.826191902160645
    4. ' float' → logprob: -9.576191902160645
    5. '   ' → logprob: -10.576191902160645
    6. '(self' → logprob: -12.326191902160645
    7. '       ' → logprob: -13.201191902160645
    8. ' ' → logprob: -13.576191902160645
    9. '(float' → logprob: -14.326191902160645
    10. '	self' → logprob: -14.701191902160645

Token 776: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.0004535526386462152
    2. 'c' → logprob: -8.37545394897461
    3. '.r' → logprob: -8.50045394897461
    4. 'r' → logprob: -11.37545394897461
    5. '.' → logprob: -12.00045394897461
    6. '	c' → logprob: -14.50045394897461
    7. ' .' → logprob: -15.12545394897461
    8. '   ' → logprob: -15.37545394897461
    9. '_c' → logprob: -15.87545394897461
    10. '#' → logprob: -15.87545394897461

Token 777: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868749439716339
    2. '==' → logprob: -1.1368749141693115
    3. ')==' → logprob: -13.13687515258789
    4. '==
' → logprob: -14.13687515258789
    5. ')' → logprob: -15.26187515258789
    6. '=' → logprob: -15.26187515258789
    7. '__' → logprob: -15.63687515258789
    8. '()==' → logprob: -15.88687515258789
    9. '<|end|>' → logprob: -16.01187515258789
    10. '==(' → logprob: -16.26187515258789

Token 778: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0015023599844425917
    2. ' other' → logprob: -6.501502513885498
    3. '(other' → logprob: -17.876502990722656
    4. '.other' → logprob: -20.001502990722656
    5. 'Other' → logprob: -20.376502990722656
    6. '_other' → logprob: -22.126502990722656
    7. 'self' → logprob: -23.001502990722656
    8. '       ' → logprob: -23.251502990722656
    9. 'OTHER' → logprob: -25.751502990722656
    10. '           ' → logprob: -25.876502990722656

Token 779: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.0703476294875145
    2. '.' → logprob: -2.695347547531128
    3. ' .' → logprob: -8.195347785949707
    4. '   ' → logprob: -10.195347785949707
    5. '       ' → logprob: -10.945347785949707
    6. '.other' → logprob: -10.945347785949707
    7. 'c' → logprob: -11.195347785949707
    8. 'and' → logprob: -11.195347785949707
    9. ' and' → logprob: -11.445347785949707
    10. ' ' → logprob: -11.695347785949707

Token 780: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.008620485663414001
    2. ' and' → logprob: -4.758620262145996
    3. '           ' → logprob: -12.633620262145996
    4. '       ' → logprob: -12.883620262145996
    5. '               ' → logprob: -16.883621215820312
    6. '   ' → logprob: -17.383621215820312
    7. '	and' → logprob: -17.383621215820312
    8. 'self' → logprob: -17.508621215820312
    9. ' ' → logprob: -17.508621215820312
    10. '&&' → logprob: -18.008621215820312

Token 781: ' self' (ID: 1051)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0009413579828105867
    2. ' float' → logprob: -7.250941276550293
    3. 'abs' → logprob: -9.375941276550293
    4. '       ' → logprob: -9.500941276550293
    5. 'self' → logprob: -9.750941276550293
    6. '   ' → logprob: -12.250941276550293
    7. '        ' → logprob: -12.500941276550293
    8. '           ' → logprob: -12.625941276550293
    9. 'fabs' → logprob: -15.125941276550293
    10. ' ' → logprob: -15.625941276550293

Token 782: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.018354900181293488
    2. 'r' → logprob: -4.018354892730713
    3. '.' → logprob: -8.518355369567871
    4. ' r' → logprob: -13.268355369567871
    5. '	r' → logprob: -14.268355369567871
    6. 's' → logprob: -14.268355369567871
    7. '<|end|>' → logprob: -14.518355369567871
    8. ' .' → logprob: -14.643355369567871
    9. '.s' → logprob: -15.018355369567871
    10. '_r' → logprob: -15.393355369567871

Token 783: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05902346223592758
    2. ' ==' → logprob: -2.934023380279541
    3. 'float' → logprob: -5.559023380279541
    4. ' float' → logprob: -8.6840238571167
    5. '=' → logprob: -10.8090238571167
    6. '(float' → logprob: -11.1840238571167
    7. ' ' → logprob: -11.3090238571167
    8. '==
' → logprob: -11.4340238571167
    9. '_equal' → logprob: -11.9340238571167
    10. ',' → logprob: -12.3090238571167

Token 784: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.005233763717114925
    2. ' other' → logprob: -5.2552337646484375
    3. '(other' → logprob: -16.880233764648438
    4. '.other' → logprob: -19.005233764648438
    5. 'Other' → logprob: -19.755233764648438
    6. '       ' → logprob: -20.005233764648438
    7. '_other' → logprob: -20.630233764648438
    8. '   ' → logprob: -20.880233764648438
    9. ' ' → logprob: -21.005233764648438
    10. '           ' → logprob: -22.755233764648438

Token 785: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0012501158053055406
    2. 'r' → logprob: -6.876250267028809
    3. '.' → logprob: -8.501250267028809
    4. ' r' → logprob: -12.376250267028809
    5. ' .' → logprob: -12.876250267028809
    6. '   ' → logprob: -13.251250267028809
    7. '	r' → logprob: -13.501250267028809
    8. '-r' → logprob: -14.126250267028809
    9. ' ' → logprob: -14.126250267028809
    10. '<|end|>' → logprob: -14.626250267028809

Token 786: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 787: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16046641767024994
    2. 'def' → logprob: -1.9104664325714111
    3. '<|end|>' → logprob: -9.660466194152832
    4. ' def' → logprob: -9.785466194152832
    5. '	def' → logprob: -10.285466194152832
    6. 'from' → logprob: -10.535466194152832
    7. '
' → logprob: -11.285466194152832
    8. 'class' → logprob: -11.410466194152832
    9. '```' → logprob: -11.535466194152832
    10. '<|end|>' → logprob: -11.785466194152832

Token 788: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00018899753922596574
    2. '   ' → logprob: -8.625188827514648
    3. ' def' → logprob: -11.750188827514648
    4. '	def' → logprob: -14.500188827514648
    5. ' ' → logprob: -15.625188827514648
    6. '@' → logprob: -15.875188827514648
    7. 'class' → logprob: -15.875188827514648
    8. 'from' → logprob: -16.00018882751465
    9. '@property' → logprob: -16.12518882751465
    10. '
' → logprob: -16.25018882751465

Token 789: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004941039253026247
    2. 'contains' → logprob: -6.129940986633301
    3. 'r' → logprob: -6.879940986633301
    4. 'area' → logprob: -7.379940986633301
    5. ' __' → logprob: -7.629940986633301
    6. 'repr' → logprob: -8.8799409866333
    7. 'c' → logprob: -9.1299409866333
    8. '_area' → logprob: -9.2549409866333
    9. 'is' → logprob: -9.8799409866333
    10. 'has' → logprob: -10.6299409866333

Token 790: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -5.097437315271236e-05
    2. 'lt' → logprob: -10.25005054473877
    3. 'abs' → logprob: -11.25005054473877
    4. 'rep' → logprob: -14.12505054473877
    5. 'init' → logprob: -14.12505054473877
    6. 'hash' → logprob: -14.87505054473877
    7. 'str' → logprob: -15.00005054473877
    8. 'mul' → logprob: -16.000051498413086
    9. 'add' → logprob: -16.250051498413086
    10. 'le' → logprob: -16.375051498413086

Token 791: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10057379305362701
    2. '(self' → logprob: -2.350573778152466
    3. '__' → logprob: -8.100573539733887
    4. '__(
' → logprob: -10.600573539733887
    5. '(' → logprob: -10.725573539733887
    6. 'self' → logprob: -11.350573539733887
    7. '```' → logprob: -13.475573539733887
    8. '   ' → logprob: -13.975573539733887
    9. '__("' → logprob: -14.600573539733887
    10. '_(' → logprob: -14.725573539733887

Token 792: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.696889623621246e-06
    2. ' self' → logprob: -12.87500286102295
    3. '(self' → logprob: -16.750001907348633
    4. 's' → logprob: -17.500001907348633
    5. '   ' → logprob: -18.000001907348633
    6. ')' → logprob: -18.375001907348633
    7. '       ' → logprob: -18.625001907348633
    8. 'def' → logprob: -18.625001907348633
    9. 'str' → logprob: -19.375001907348633
    10. ' ' → logprob: -20.500001907348633

Token 793: ')' (ID: 8)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0033274299930781126
    2. '(self' → logprob: -5.753327369689941
    3. '__' → logprob: -9.378327369689941
    4. '(' → logprob: -10.378327369689941
    5. '__(
' → logprob: -10.628327369689941
    6. '__("' → logprob: -12.253327369689941
    7. 'self' → logprob: -12.628327369689941
    8. '__('' → logprob: -13.878327369689941
    9. '__((' → logprob: -15.378327369689941
    10. '_(' → logprob: -16.003328323364258

Token 794: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.8206473871250637e-05
    2. '(' → logprob: -10.750028610229492
    3. 'self' → logprob: -12.500028610229492
    4. '       ' → logprob: -13.000028610229492
    5. '   ' → logprob: -15.250028610229492
    6. 'def' → logprob: -15.625028610229492
    7. '(s' → logprob: -15.875028610229492
    8. 'return' → logprob: -16.250028610229492
    9. ' (' → logprob: -17.250028610229492
    10. '(
' → logprob: -17.250028610229492

Token 795: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -4.5491004129871726e-05
    2. ' str' → logprob: -10.000045776367188
    3. 'string' → logprob: -19.125045776367188
    4. '[str' → logprob: -19.375045776367188
    5. 'stri' → logprob: -20.000045776367188
    6. '	str' → logprob: -20.125045776367188
    7. '(str' → logprob: -20.500045776367188
    8. '=str' → logprob: -20.500045776367188
    9. '   ' → logprob: -20.875045776367188
    10. 'st' → logprob: -21.125045776367188

Token 796: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002401220379397273
    2. '       ' → logprob: -6.627401351928711
    3. '(' → logprob: -7.002401351928711
    4. '   ' → logprob: -9.627401351928711
    5. '(
' → logprob: -9.752401351928711
    6. 'self' → logprob: -10.377401351928711
    7. '(s' → logprob: -12.002401351928711
    8. 'return' → logprob: -13.127401351928711
    9. ' (' → logprob: -15.002401351928711
    10. '           ' → logprob: -15.002401351928711

Token 797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016516048344783485
    2. 'return' → logprob: -8.750164985656738
    3. ' return' → logprob: -12.125164985656738
    4. 'f' → logprob: -14.000164985656738
    5. ' f' → logprob: -16.375165939331055
    6. '	' → logprob: -16.500165939331055
    7. '	return' → logprob: -16.625165939331055
    8. '           ' → logprob: -17.125165939331055
    9. '	   ' → logprob: -17.375165939331055
    10. '   ' → logprob: -17.625165939331055

Token 798: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2450845092535019
    2. 'f' → logprob: -2.120084524154663
    3. '"' → logprob: -2.370084524154663
    4. ' return' → logprob: -6.370084285736084
    5. '       ' → logprob: -6.745084285736084
    6. ' f' → logprob: -7.620084285736084
    7. '   ' → logprob: -8.245084762573242
    8. '"C' → logprob: -8.620084762573242
    9. 'Circle' → logprob: -11.120084762573242
    10. '           ' → logprob: -11.495084762573242

Token 799: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.024246638640761375
    2. 'f' → logprob: -4.024246692657471
    3. ' f' → logprob: -5.274246692657471
    4. ' "' → logprob: -7.274246692657471
    5. '"C' → logprob: -8.649246215820312
    6. 'Circle' → logprob: -9.899246215820312
    7. ''' → logprob: -10.399246215820312
    8. ' ' → logprob: -13.274246215820312
    9. ' Circle' → logprob: -13.649246215820312
    10. '   ' → logprob: -13.899246215820312

Token 800: 'Circle' (ID: 28055)
  Prédit: 'Circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -9.491498531133402e-06
    2. '"' → logprob: -11.750009536743164
    3. ' Circle' → logprob: -14.625009536743164
    4. '.Circle' → logprob: -14.750009536743164
    5. 'circle' → logprob: -16.000009536743164
    6. 'f' → logprob: -16.375009536743164
    7. 'Circ' → logprob: -16.375009536743164
    8. ''' → logprob: -16.375009536743164
    9. '"C' → logprob: -16.500009536743164
    10. 'Cir' → logprob: -16.625009536743164

Token 801: '({},' (ID: 45594)
  Prédit: '({},'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({},' → logprob: -1.5094070477061905e-05
    2. '({' → logprob: -11.250015258789062
    3. '(Point' → logprob: -13.375015258789062
    4. '(c' → logprob: -15.500015258789062
    5. '(' → logprob: -16.375015258789062
    6. '{},' → logprob: -16.875015258789062
    7. '(C' → logprob: -17.125015258789062
    8. '("' → logprob: -17.625015258789062
    9. '(self' → logprob: -18.875015258789062
    10. '(center' → logprob: -19.250015258789062

Token 802: ' {})' (ID: 75167)
  Prédit: '{})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{})' → logprob: -0.0016625623684376478
    2. ' {})' → logprob: -6.626662731170654
    3. 'r' → logprob: -8.251662254333496
    4. '{' → logprob: -9.876662254333496
    5. '{}' → logprob: -11.251662254333496
    6. ')' → logprob: -11.626662254333496
    7. 'radius' → logprob: -13.876662254333496
    8. ')"' → logprob: -14.501662254333496
    9. '{},' → logprob: -15.001662254333496
    10. ' ' → logprob: -15.501662254333496

Token 803: '".' (ID: 4050)
  Prédit: '.format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.12239477783441544
    2. '".' → logprob: -2.6223948001861572
    3. '(self' → logprob: -3.4973948001861572
    4. 'format' → logprob: -4.497394561767578
    5. '(format' → logprob: -7.622394561767578
    6. 'self' → logprob: -8.247394561767578
    7. '(".' → logprob: -8.872394561767578
    8. '.' → logprob: -9.872394561767578
    9. '{}".' → logprob: -10.122394561767578
    10. '(' → logprob: -10.122394561767578

Token 804: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -4.723352049040841e-06
    2. ' format' → logprob: -12.500004768371582
    3. '(format' → logprob: -14.000004768371582
    4. 'form' → logprob: -17.125003814697266
    5. '	format' → logprob: -17.625003814697266
    6. 'def' → logprob: -18.875003814697266
    7. 'f' → logprob: -19.250003814697266
    8. 'forma' → logprob: -19.375003814697266
    9. '.format' → logprob: -20.000003814697266
    10. 'FORMAT' → logprob: -20.375003814697266

Token 805: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.096126576769166e-05
    2. 'self' → logprob: -10.125041007995605
    3. 'repr' → logprob: -14.625041007995605
    4. '(re' → logprob: -15.125041007995605
    5. '(' → logprob: -16.12504005432129
    6. ' self' → logprob: -19.50004005432129
    7. '(
' → logprob: -19.62504005432129
    8. 's' → logprob: -19.75004005432129
    9. '(str' → logprob: -19.75004005432129
    10. ',self' → logprob: -20.50004005432129

Token 806: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -3.619311974034645e-05
    2. 'self' → logprob: -10.625036239624023
    3. 'c' → logprob: -11.375036239624023
    4. '.' → logprob: -14.875036239624023
    5. ' .' → logprob: -17.375036239624023
    6. ' self' → logprob: -17.875036239624023
    7. '	c' → logprob: -18.375036239624023
    8. ').' → logprob: -19.250036239624023
    9. '.s' → logprob: -19.625036239624023
    10. '_c' → logprob: -19.875036239624023

Token 807: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. 'self' → logprob: -13.000004768371582
    3. ',self' → logprob: -13.500004768371582
    4. ' ,' → logprob: -14.250004768371582
    5. ',
' → logprob: -16.000003814697266
    6. ')' → logprob: -17.625003814697266
    7. '<|end|>' → logprob: -18.625003814697266
    8. ' self' → logprob: -18.625003814697266
    9. ',r' → logprob: -19.125003814697266
    10. ',

' → logprob: -19.125003814697266

Token 808: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008615042082965374
    2. ' self' → logprob: -4.758615016937256
    3. '       ' → logprob: -15.883615493774414
    4. ' ' → logprob: -16.758615493774414
    5. '   ' → logprob: -16.883615493774414
    6. '    ' → logprob: -17.008615493774414
    7. '	self' → logprob: -17.383615493774414
    8. '     ' → logprob: -17.633615493774414
    9. '        ' → logprob: -18.133615493774414
    10. 's' → logprob: -18.383615493774414

Token 809: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.013184583745896816
    2. 'r' → logprob: -4.513184547424316
    3. '.' → logprob: -6.263184547424316
    4. ',' → logprob: -9.138184547424316
    5. ',r' → logprob: -9.513184547424316
    6. '.c' → logprob: -10.513184547424316
    7. ' r' → logprob: -11.638184547424316
    8. ')' → logprob: -11.888184547424316
    9. 'c' → logprob: -13.138184547424316
    10. '	r' → logprob: -13.638184547424316

Token 810: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.625
    3. ' )' → logprob: -16.0
    4. '),' → logprob: -17.75
    5. ')`' → logprob: -18.0
    6. ')}' → logprob: -18.5
    7. '<|end|>' → logprob: -18.5
    8. ').' → logprob: -19.25
    9. ')

' → logprob: -19.375
    10. ')#' → logprob: -19.375

Token 811: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022820966318249702
    2. '   ' → logprob: -4.397820949554443
    3. 'class' → logprob: -5.772820949554443
    4. '#' → logprob: -5.897820949554443
    5. 'from' → logprob: -6.022820949554443
    6. '<|end|>' → logprob: -6.272820949554443
    7. '```' → logprob: -10.147821426391602
    8. ' def' → logprob: -11.272821426391602
    9. '<|end|>' → logprob: -11.272821426391602
    10. '@dat' → logprob: -12.022821426391602

Token 812: ' classify' (ID: 92913)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.5620970129966736
    2. ' convex' → logprob: -2.6870970726013184
    3. ' cc' → logprob: -2.9370970726013184
    4. 'cross' → logprob: -3.4370970726013184
    5. 'distance' → logprob: -3.6870970726013184
    6. 'conv' → logprob: -3.6870970726013184
    7. ' main' → logprob: -3.9370970726013184
    8. 'inter' → logprob: -4.062097072601318
    9. ' intersect' → logprob: -4.062097072601318
    10. ' distance' → logprob: -4.187097072601318

Token 813: '(s' (ID: 1858)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.7042496800422668
    2. '(a' → logprob: -2.079249620437622
    3. '_circle' → logprob: -2.079249620437622
    4. '(p' → logprob: -2.704249620437622
    5. '_triangle' → logprob: -2.954249620437622
    6. '(point' → logprob: -3.079249620437622
    7. '(' → logprob: -3.454249620437622
    8. '(points' → logprob: -4.329249858856201
    9. '(Point' → logprob: -5.079249858856201
    10. '(circle' → logprob: -5.204249858856201

Token 814: '1' (ID: 16)
  Prédit: 'egment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'egment' → logprob: -0.3863367736339569
    2. 'eg' → logprob: -1.5113368034362793
    3. ':' → logprob: -3.1363368034362793
    4. '1' → logprob: -3.3863368034362793
    5. 't' → logprob: -4.761336803436279
    6. ')' → logprob: -5.511336803436279
    7. '):' → logprob: -5.761336803436279
    8. 'e' → logprob: -6.136336803436279
    9. 'ide' → logprob: -6.386336803436279
    10. 'ection' → logprob: -6.761336803436279

Token 815: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16351211071014404
    2. ':' → logprob: -1.913512110710144
    3. ',s' → logprob: -6.413512229919434
    4. 'egment' → logprob: -7.538512229919434
    5. '1' → logprob: -8.163512229919434
    6. 's' → logprob: -8.538512229919434
    7. ' ,' → logprob: -9.038512229919434
    8. '   ' → logprob: -9.163512229919434
    9. ')' → logprob: -9.288512229919434
    10. ':s' → logprob: -9.913512229919434

Token 816: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.0025957536417990923
    2. ' Segment' → logprob: -6.127595901489258
    3. 'Point' → logprob: -8.002595901489258
    4. 'Line' → logprob: -10.252595901489258
    5. 'egment' → logprob: -10.877595901489258
    6. ')' → logprob: -11.877595901489258
    7. '_segment' → logprob: -12.877595901489258
    8. 'Seg' → logprob: -12.877595901489258
    9. 'Vector' → logprob: -13.002595901489258
    10. 'segment' → logprob: -13.252595901489258

Token 817: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.478889215737581e-05
    2. ' ,' → logprob: -10.125054359436035
    3. 's' → logprob: -11.875054359436035
    4. ',s' → logprob: -12.625054359436035
    5. ':' → logprob: -12.875054359436035
    6. ')' → logprob: -13.750054359436035
    7. ' s' → logprob: -15.250054359436035
    8. '   ' → logprob: -15.500054359436035
    9. 'def' → logprob: -16.37505531311035
    10. '):' → logprob: -16.87505531311035

Token 818: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1269514262676239
    2. ' s' → logprob: -2.1269514560699463
    3. '   ' → logprob: -11.376951217651367
    4. ')' → logprob: -12.251951217651367
    5. '    ' → logprob: -13.501951217651367
    6. ' ' → logprob: -13.626951217651367
    7. '       ' → logprob: -14.501951217651367
    8. '  ' → logprob: -14.564451217651367
    9. '           ' → logprob: -14.814451217651367
    10. '
' → logprob: -15.064451217651367

Token 819: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.6312321753939614e-05
    2. 'egment' → logprob: -10.375036239624023
    3. 'eg' → logprob: -12.375036239624023
    4. 'ection' → logprob: -15.375036239624023
    5. 's' → logprob: -15.875036239624023
    6. ')' → logprob: -16.000036239624023
    7. 'def' → logprob: -16.750036239624023
    8. 'class' → logprob: -17.000036239624023
    9. ' ' → logprob: -17.125036239624023
    10. '...' → logprob: -17.125036239624023

Token 820: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010089890100061893
    2. ')' → logprob: -4.760089874267578
    3. '):' → logprob: -6.635089874267578
    4. '')' → logprob: -9.510089874267578
    5. ' :' → logprob: -10.135089874267578
    6. '':' → logprob: -11.260089874267578
    7. '   ' → logprob: -11.260089874267578
    8. ',' → logprob: -11.635089874267578
    9. '):
' → logprob: -12.885089874267578
    10. ' )' → logprob: -13.635089874267578

Token 821: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.023248855024576187
    2. ' Segment' → logprob: -3.7732489109039307
    3. 'Point' → logprob: -13.898248672485352
    4. ')' → logprob: -14.148248672485352
    5. 'segment' → logprob: -15.023248672485352
    6. ''' → logprob: -15.148248672485352
    7. ' ' → logprob: -15.398248672485352
    8. '   ' → logprob: -15.523248672485352
    9. '_segment' → logprob: -15.523248672485352
    10. 'Segments' → logprob: -15.898248672485352

Token 822: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8921695047756657e-05
    2. '):' → logprob: -11.000028610229492
    3. '')' → logprob: -11.625028610229492
    4. ',' → logprob: -13.750028610229492
    5. ')->' → logprob: -13.875028610229492
    6. ' )' → logprob: -14.125028610229492
    7. ':' → logprob: -15.250028610229492
    8. '`)' → logprob: -16.000028610229492
    9. '):
' → logprob: -16.500028610229492
    10. ',)' → logprob: -17.000028610229492

Token 823: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.07258155941963196
    2. ' ->' → logprob: -2.6975815296173096
    3. ':' → logprob: -6.447581768035889
    4. ')' → logprob: -7.072581768035889
    5. ')->' → logprob: -9.19758129119873
    6. '   ' → logprob: -9.32258129119873
    7. '->[' → logprob: -11.44758129119873
    8. '->{' → logprob: -13.44758129119873
    9. '  ' → logprob: -13.69758129119873
    10. '```' → logprob: -13.94758129119873

Token 824: ' int' (ID: 677)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.16461661458015442
    2. 'int' → logprob: -1.914616584777832
    3. ' str' → logprob: -5.539616584777832
    4. ' int' → logprob: -7.914616584777832
    5. 'float' → logprob: -10.539616584777832
    6. 'bool' → logprob: -10.914616584777832
    7. 'List' → logprob: -11.039616584777832
    8. ' ' → logprob: -11.539616584777832
    9. '   ' → logprob: -11.789616584777832
    10. 'None' → logprob: -12.789616584777832

Token 825: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028628890868276358
    2. '():' → logprob: -6.377862930297852
    3. ':
' → logprob: -7.752862930297852
    4. '   ' → logprob: -8.252862930297852
    5. '():
' → logprob: -8.252862930297852
    6. '):' → logprob: -10.127862930297852
    7. ':def' → logprob: -10.127862930297852
    8. '<|end|>' → logprob: -10.127862930297852
    9. '(s' → logprob: -10.752862930297852
    10. ':return' → logprob: -11.502862930297852

Token 826: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.657694418914616e-05
    2. 'if' → logprob: -10.875056266784668
    3. '1' → logprob: -11.125056266784668
    4. '    
' → logprob: -12.125056266784668
    5. '    ' → logprob: -12.375056266784668
    6. ' if' → logprob: -12.625056266784668
    7. '0' → logprob: -12.875056266784668
    8. '#' → logprob: -13.625056266784668
    9. '```' → logprob: -13.750056266784668
    10. '       ' → logprob: -14.000056266784668

Token 827: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024307377636432648
    2. 'if' (adapté à ' if') → logprob: -3.7743074893951416
    3. 'v' → logprob: -7.8993072509765625
    4. '"""' → logprob: -8.149307250976562
    5. ' if' → logprob: -8.274307250976562
    6. 'd' → logprob: -10.274307250976562
    7. 'a' → logprob: -10.774307250976562
    8. 'c' → logprob: -11.149307250976562
    9. 'cross' → logprob: -11.274307250976562
    10. '    ' → logprob: -11.399307250976562

Token 828: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2811931073665619
    2. ' s' → logprob: -1.4061931371688843
    3. '   ' → logprob: -10.656192779541016
    4. '(s' → logprob: -12.531192779541016
    5. ' ' → logprob: -12.906192779541016
    6. 'not' → logprob: -13.031192779541016
    7. '	s' → logprob: -13.406192779541016
    8. ' not' → logprob: -13.531192779541016
    9. 'float' → logprob: -13.593692779541016
    10. '    ' → logprob: -13.906192779541016

Token 829: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.735893965815194e-05
    2. '2' → logprob: -12.125017166137695
    3. '_is' → logprob: -12.500017166137695
    4. '_' → logprob: -13.125017166137695
    5. '.is' → logprob: -13.125017166137695
    6. 's' → logprob: -13.375017166137695
    7. '_vector' → logprob: -14.500017166137695
    8. '   ' → logprob: -14.750017166137695
    9. '```' → logprob: -15.312517166137695
    10. 'is' → logprob: -15.687517166137695

Token 830: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0023618557024747133
    2. '.' → logprob: -6.12736177444458
    3. '.vector' → logprob: -8.877362251281738
    4. '==' → logprob: -11.252362251281738
    5. ' .' → logprob: -11.252362251281738
    6. ' ==' → logprob: -12.127362251281738
    7. 'is' → logprob: -13.502362251281738
    8. '.parallel' → logprob: -14.252362251281738
    9. '.__' → logprob: -14.377362251281738
    10. '   ' → logprob: -15.127362251281738

Token 831: '_parallel' (ID: 152364)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47414660453796387
    2. '_parallel' → logprob: -0.9741466045379639
    3. '_equal' → logprob: -10.849146842956543
    4. 'parallel' → logprob: -11.224146842956543
    5. 'orth' → logprob: -11.849146842956543
    6. '_per' → logprob: -12.099146842956543
    7. '_s' → logprob: -12.474146842956543
    8. '_par' → logprob: -12.849146842956543
    9. '_same' → logprob: -12.974146842956543
    10. '__' → logprob: -13.099146842956543

Token 832: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.5451681974809617e-05
    2. ' (' → logprob: -11.625015258789062
    3. '(' → logprob: -12.000015258789062
    4. '(other' → logprob: -15.500015258789062
    5. 's' → logprob: -16.875015258789062
    6. '((' → logprob: -17.375015258789062
    7. '   ' → logprob: -17.625015258789062
    8. 'and' → logprob: -17.625015258789062
    9. ' ' → logprob: -17.875015258789062
    10. '(
' → logprob: -19.000015258789062

Token 833: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03536548092961311
    2. '1' → logprob: -3.535365581512451
    3. '(s' → logprob: -5.535365581512451
    4. 'ar' → logprob: -6.660365581512451
    5. 'r' → logprob: -9.785365104675293
    6. 'tral' → logprob: -9.785365104675293
    7. 'tr' → logprob: -9.910365104675293
    8. 's' → logprob: -10.285365104675293
    9. '```' → logprob: -10.535365104675293
    10. 't' → logprob: -10.535365104675293

Token 834: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5786870718002319
    2. '()' → logprob: -1.078687071800232
    3. ')' → logprob: -2.5786871910095215
    4. '):
' → logprob: -4.5786871910095215
    5. '()):
' → logprob: -4.9536871910095215
    6. '())' → logprob: -5.5786871910095215
    7. '():' → logprob: -6.3286871910095215
    8. '   ' → logprob: -7.9536871910095215
    9. '       ' → logprob: -9.703686714172363
    10. '():
' → logprob: -10.328686714172363

Token 835: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008490587584674358
    2. '   ' → logprob: -5.133490562438965
    3. ':' → logprob: -7.008490562438965
    4. '1' → logprob: -7.383490562438965
    5. '4' → logprob: -7.883490562438965
    6. '0' → logprob: -8.758490562438965
    7. '2' → logprob: -9.258490562438965
    8. '6' → logprob: -9.758490562438965
    9. '3' → logprob: -9.883490562438965
    10. '8' → logprob: -10.008490562438965

Token 836: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8126015663146973
    2. 'return' (adapté à ' return') → logprob: -0.8126015663146973
    3. 'if' → logprob: -2.3126015663146973
    4. '   ' → logprob: -4.312601566314697
    5. ' if' → logprob: -9.437601089477539
    6. ' return' → logprob: -9.687601089477539
    7. '           ' → logprob: -10.937601089477539
    8. '0' → logprob: -11.187601089477539
    9. '1' → logprob: -12.437601089477539
    10. '	return' → logprob: -13.062601089477539

Token 837: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2548879384994507
    2. '2' → logprob: -1.5048879384994507
    3. '0' → logprob: -6.12988805770874
    4. ' ' → logprob: -7.25488805770874
    5. '-' → logprob: -10.504887580871582
    6. '   ' → logprob: -10.629887580871582
    7. '3' → logprob: -12.379887580871582
    8. '
' → logprob: -12.629887580871582
    9. '	' → logprob: -13.504887580871582
    10. '`' → logprob: -13.754887580871582

Token 838: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4652559161186218
    2. '2' → logprob: -1.2152559757232666
    3. '0' → logprob: -2.5902559757232666
    4. ' ' → logprob: -8.590255737304688
    5. '-' → logprob: -8.840255737304688
    6. '3' → logprob: -10.340255737304688
    7. '   ' → logprob: -11.465255737304688
    8. '+' → logprob: -12.715255737304688
    9. '```' → logprob: -13.090255737304688
    10. '`' → logprob: -13.215255737304688

Token 839: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.364928700961173e-05
    2. 'if' → logprob: -9.375093460083008
    3. '    
' → logprob: -12.500093460083008
    4. '
' → logprob: -13.250093460083008
    5. 'elif' → logprob: -13.375093460083008
    6. ' if' → logprob: -14.000093460083008
    7. '1' → logprob: -15.125093460083008
    8. '       ' → logprob: -16.250093460083008
    9. '```' → logprob: -16.750093460083008
    10. '<|end|>' → logprob: -17.000093460083008

Token 840: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001907855912577361
    2. 'if' → logprob: -8.750190734863281
    3. '1' → logprob: -11.625190734863281
    4. '3' → logprob: -11.625190734863281
    5. '    
' → logprob: -12.750190734863281
    6. 'elif' → logprob: -12.750190734863281
    7. '2' → logprob: -13.000190734863281
    8. 'return' → logprob: -14.125190734863281
    9. '7' → logprob: -14.125190734863281
    10. '6' → logprob: -14.250190734863281

Token 841: ' elif' (ID: 9497)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04800283908843994
    2. '   ' → logprob: -3.7980027198791504
    3. 'return' → logprob: -4.17300271987915
    4. 'elif' (adapté à ' elif') → logprob: -4.79800271987915
    5. '3' → logprob: -7.79800271987915
    6. 'else' → logprob: -8.673003196716309
    7. '1' → logprob: -9.548003196716309
    8. ' if' → logprob: -9.798003196716309
    9. '4' → logprob: -11.423003196716309
    10. '0' → logprob: -11.673003196716309

Token 842: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005245498847216368
    2. ' s' → logprob: -5.255245685577393
    3. '   ' → logprob: -11.630245208740234
    4. ' ' → logprob: -13.380245208740234
    5. '	s' → logprob: -15.630245208740234
    6. '(s' → logprob: -15.755245208740234
    7. '    ' → logprob: -16.005245208740234
    8. '  ' → logprob: -16.067745208740234
    9. '1' → logprob: -16.317745208740234
    10. 'not' → logprob: -16.630245208740234

Token 843: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03276342898607254
    2. '.is' → logprob: -4.032763481140137
    3. '.' → logprob: -4.282763481140137
    4. ' .' → logprob: -7.782763481140137
    5. '   ' → logprob: -9.282763481140137
    6. 'elf' → logprob: -10.407763481140137
    7. '.s' → logprob: -10.782763481140137
    8. '>.' → logprob: -10.782763481140137
    9. '_.' → logprob: -11.282763481140137
    10. 'e' → logprob: -11.657763481140137

Token 844: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.00027480217977426946
    2. '.' → logprob: -8.250274658203125
    3. ' .' → logprob: -11.625274658203125
    4. '.s' → logprob: -13.375274658203125
    5. '.inter' → logprob: -13.750274658203125
    6. '.has' → logprob: -14.625274658203125
    7. '   ' → logprob: -14.625274658203125
    8. 'is' → logprob: -14.750274658203125
    9. ').' → logprob: -15.375274658203125
    10. '().' → logprob: -16.125274658203125

Token 845: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02987857349216938
    2. '_parallel' → logprob: -3.529878616333008
    3. 'orth' → logprob: -9.404878616333008
    4. 'parallel' → logprob: -11.029878616333008
    5. 's' → logprob: -12.029878616333008
    6. 'ort' → logprob: -12.404878616333008
    7. '.parallel' → logprob: -12.404878616333008
    8. '_per' → logprob: -12.529878616333008
    9. 'Orth' → logprob: -12.529878616333008
    10. '._' → logprob: -13.279878616333008

Token 846: 'orth' (ID: 2909)
  Prédit: 'orth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orth' → logprob: -6.988221684878226e-06
    2. 'ort' → logprob: -12.375006675720215
    3. 'Orth' → logprob: -13.875006675720215
    4. ' orth' → logprob: -14.125006675720215
    5. 'parallel' → logprob: -14.500006675720215
    6. 's' → logprob: -15.125006675720215
    7. 'oth' → logprob: -15.500006675720215
    8. 'ORTH' → logprob: -18.12500762939453
    9. 'ont' → logprob: -18.25000762939453
    10. '_' → logprob: -18.37500762939453

Token 847: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: 0.0
    2. 'agonal' → logprob: -16.875
    3. 'og' → logprob: -17.625
    4. 'ogon' → logprob: -18.625
    5. '```' → logprob: -19.0
    6. 'ogo' → logprob: -19.5
    7. 'ogona' → logprob: -19.875
    8. 'ogal' → logprob: -20.0
    9. '   ' → logprob: -20.25
    10. 'g' → logprob: -20.375

Token 848: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.2664456789934775e-06
    2. ' (' → logprob: -13.875000953674316
    3. '(' → logprob: -15.500000953674316
    4. 's' → logprob: -16.500001907348633
    5. '(
' → logprob: -20.125001907348633
    6. '```' → logprob: -20.875001907348633
    7. '   ' → logprob: -21.000001907348633
    8. '(S' → logprob: -22.375001907348633
    9. ')' → logprob: -22.500001907348633
    10. '((' → logprob: -22.625001907348633

Token 849: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20644158124923706
    2. '(s' → logprob: -1.7064416408538818
    3. 's' → logprob: -5.331441402435303
    4. '(' → logprob: -9.456441879272461
    5. 'o' → logprob: -9.706441879272461
    6. ')' → logprob: -11.956441879272461
    7. ' s' → logprob: -12.331441879272461
    8. '   ' → logprob: -12.581441879272461
    9. 'r' → logprob: -12.706441879272461
    10. '1' → logprob: -12.831441879272461

Token 850: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006941506639122963
    2. '(s' → logprob: -6.006941318511963
    3. '):
' → logprob: -6.381941318511963
    4. '():' → logprob: -6.881941318511963
    5. '(' → logprob: -7.256941318511963
    6. ':' → logprob: -7.381941318511963
    7. '   ' → logprob: -9.131941795349121
    8. ')' → logprob: -9.381941795349121
    9. '()' → logprob: -9.381941795349121
    10. '():
' → logprob: -10.381941795349121

Token 851: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033477745950222015
    2. '3' → logprob: -4.033477783203125
    3. '0' → logprob: -5.158477783203125
    4. '1' → logprob: -5.533477783203125
    5. '2' → logprob: -5.658477783203125
    6. '   ' → logprob: -6.533477783203125
    7. '4' → logprob: -8.408477783203125
    8. ' ' → logprob: -8.533477783203125
    9. 'return' → logprob: -8.908477783203125
    10. ' return' → logprob: -12.408477783203125

Token 852: ' return' (ID: 622)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.38947007060050964
    2. '1' → logprob: -1.139470100402832
    3. 'return' (adapté à ' return') → logprob: -6.514470100402832
    4. '   ' → logprob: -7.639470100402832
    5. ' ' → logprob: -8.639470100402832
    6. '       ' → logprob: -8.639470100402832
    7. '2' → logprob: -8.764470100402832
    8. '0' → logprob: -9.139470100402832
    9. ' return' → logprob: -11.264470100402832
    10. '4' → logprob: -13.264470100402832

Token 853: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.816591434879228e-05
    2. ' ' → logprob: -9.62508773803711
    3. '3' → logprob: -10.75008773803711
    4. '0' → logprob: -14.37508773803711
    5. '   ' → logprob: -17.00008773803711
    6. '4' → logprob: -18.62508773803711
    7. '10' → logprob: -20.62508773803711
    8. '  ' → logprob: -21.50008773803711
    9. '１' → logprob: -21.50008773803711
    10. '2' → logprob: -22.00008773803711

Token 854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005583931924775243
    2. '3' → logprob: -7.500558376312256
    3. ' ' → logprob: -12.375558853149414
    4. '0' → logprob: -13.875558853149414
    5. '4' → logprob: -15.125558853149414
    6. '

' → logprob: -17.250558853149414
    7. '
' → logprob: -17.750558853149414
    8. '１' → logprob: -18.875558853149414
    9. '   ' → logprob: -19.125558853149414
    10. '2' → logprob: -19.563058853149414

Token 855: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31859663128852844
    2. '   ' → logprob: -1.318596601486206
    3. '3' → logprob: -5.568596839904785
    4. 'else' → logprob: -6.943596839904785
    5. ' ' → logprob: -8.818596839904785
    6. '2' → logprob: -9.193596839904785
    7. '4' → logprob: -9.443596839904785
    8. ' else' → logprob: -9.568596839904785
    9. 'return' → logprob: -9.568596839904785
    10. '1' → logprob: -11.318596839904785

Token 856: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0044666738249361515
    2. 'else' → logprob: -5.629466533660889
    3. 'return' → logprob: -7.379466533660889
    4. ' else' → logprob: -9.129467010498047
    5. '
' → logprob: -9.504467010498047
    6. ' return' → logprob: -10.879467010498047
    7. '	return' → logprob: -12.004467010498047
    8. '	else' → logprob: -12.004467010498047
    9. '    
' → logprob: -12.129467010498047
    10. '0' → logprob: -12.129467010498047

Token 857: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.304604709148407
    2. '0' → logprob: -2.0546047687530518
    3. 'return' → logprob: -2.0546047687530518
    4. '   ' → logprob: -5.179604530334473
    5. '3' → logprob: -7.804604530334473
    6. ' else' → logprob: -8.429604530334473
    7. ' return' → logprob: -10.429604530334473
    8. '4' → logprob: -13.179604530334473
    9. '	return' → logprob: -13.179604530334473
    10. '	else' → logprob: -13.429604530334473

Token 858: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.105899453163147
    2. '   ' → logprob: -1.230899453163147
    3. '0' → logprob: -1.855899453163147
    4. ':' → logprob: -1.855899453163147
    5. ':
' → logprob: -2.9808993339538574
    6. ' ' → logprob: -5.230899333953857
    7. 'return' → logprob: -5.980899333953857
    8. ' return' → logprob: -6.230899333953857
    9. ':return' → logprob: -6.480899333953857
    10. '2' → logprob: -7.355899333953857

Token 859: '       ' (ID: 309)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000721487682312727
    2. '       ' → logprob: -7.500721454620361
    3. '3' → logprob: -9.25072193145752
    4. '   ' → logprob: -9.62572193145752
    5. ' ' → logprob: -12.12572193145752
    6. 'return' → logprob: -14.00072193145752
    7. '           ' → logprob: -16.625720977783203
    8. '  ' → logprob: -18.375720977783203
    9. '        ' → logprob: -18.375720977783203
    10. '4' → logprob: -18.375720977783203

Token 860: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.204720582696609e-05
    2. 'return' (adapté à ' return') → logprob: -10.000052452087402
    3. '3' → logprob: -12.375052452087402
    4. ' ' → logprob: -13.375052452087402
    5. '   ' → logprob: -14.250052452087402
    6. ' return' → logprob: -16.625051498413086
    7. '       ' → logprob: -18.375051498413086
    8. '4' → logprob: -19.000051498413086
    9. '-' → logprob: -19.000051498413086
    10. '```' → logprob: -19.250051498413086

Token 861: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. '3' → logprob: -12.250007629394531
    3. ' ' → logprob: -13.000007629394531
    4. '4' → logprob: -16.00000762939453
    5. '   ' → logprob: -18.37500762939453
    6. '０' → logprob: -19.62500762939453
    7. '00' → logprob: -20.00000762939453
    8. '  ' → logprob: -20.62500762939453
    9. '-' → logprob: -20.68750762939453
    10. '۰' → logprob: -20.87500762939453

Token 862: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '4' → logprob: -14.000001907348633
    3. '3' → logprob: -14.250001907348633
    4. ' ' → logprob: -16.000001907348633
    5. '０' → logprob: -17.250001907348633
    6. '-' → logprob: -18.125001907348633
    7. '
' → logprob: -18.750001907348633
    8. '00' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '۰' → logprob: -20.125001907348633

Token 863: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 864: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16653113067150116
    2. '#' → logprob: -2.2915310859680176
    3. '<|end|>' → logprob: -3.1665310859680176
    4. ')' → logprob: -5.666531085968018
    5. '```' → logprob: -6.166531085968018
    6. '(' → logprob: -7.041531085968018
    7. '
' → logprob: -7.166531085968018
    8. '.' → logprob: -7.416531085968018
    9. '!' → logprob: -7.791531085968018
    10. '[' → logprob: -8.041531562805176

Token 865: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6041671633720398
    2. 'main' → logprob: -1.3541672229766846
    3. 'conv' → logprob: -2.9791672229766846
    4. 'cc' → logprob: -3.1041672229766846
    5. ' convex' → logprob: -3.8541672229766846
    6. 'distance' → logprob: -4.1041669845581055
    7. ' cc' → logprob: -4.8541669845581055
    8. 'inter' → logprob: -5.2291669845581055
    9. ' distance' → logprob: -5.4791669845581055
    10. 'cross' → logprob: -5.7291669845581055

Token 866: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.676981345459353e-06
    2. ' ():' → logprob: -12.625005722045898
    3. '():
' → logprob: -13.625005722045898
    4. '()' → logprob: -13.750005722045898
    5. '(' → logprob: -18.7500057220459
    6. '():
' → logprob: -18.7500057220459
    7. '()>' → logprob: -19.0000057220459
    8. '().' → logprob: -19.0000057220459
    9. ':' → logprob: -19.7500057220459
    10. '():

' → logprob: -19.8750057220459

Token 867: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00013214473437983543
    2. '()' → logprob: -9.62513256072998
    3. '():
' → logprob: -10.00013256072998
    4. ' ():' → logprob: -11.12513256072998
    5. ':' → logprob: -12.25013256072998
    6. '()->' → logprob: -14.50013256072998
    7. '()>' → logprob: -15.62513256072998
    8. '(' → logprob: -15.75013256072998
    9. '():
' → logprob: -16.125131607055664
    10. '):' → logprob: -17.625131607055664

Token 868: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0022111583966761827
    2. ' None' → logprob: -6.502211093902588
    3. 'int' → logprob: -7.252211093902588
    4. ' int' → logprob: -16.75221061706543
    5. 'none' → logprob: -18.12721061706543
    6. 'void' → logprob: -20.00221061706543
    7. '   ' → logprob: -20.75221061706543
    8. '_None' → logprob: -20.75221061706543
    9. '(None' → logprob: -21.75221061706543
    10. ' ' → logprob: -22.25221061706543

Token 869: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05566229298710823
    2. '():' → logprob: -2.9306623935699463
    3. ':
' → logprob: -7.805662155151367
    4. '():
' → logprob: -8.680662155151367
    5. '):' → logprob: -8.805662155151367
    6. ':def' → logprob: -10.805662155151367
    7. '()' → logprob: -11.930662155151367
    8. '<|end|>' → logprob: -12.805662155151367
    9. '(":' → logprob: -12.930662155151367
    10. ':void' → logprob: -13.305662155151367

Token 870: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04105410724878311
    2. 'import' → logprob: -3.7910540103912354
    3. 'n' → logprob: -4.6660542488098145
    4. ' pass' → logprob: -6.0410542488098145
    5. ' n' → logprob: -6.0410542488098145
    6. ' import' → logprob: -6.6660542488098145
    7. 's' → logprob: -7.0410542488098145
    8. 'pass' → logprob: -7.7910542488098145
    9. '```' → logprob: -8.541053771972656
    10. '    ' → logprob: -9.541053771972656

Token 871: ' q' (ID: 2335)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2641664743423462
    2. 's' → logprob: -1.3891664743423462
    3. 'n' → logprob: -2.0141663551330566
    4. 'a' → logprob: -2.1391663551330566
    5. '   ' → logprob: -2.1391663551330566
    6. 'p' → logprob: -2.8891663551330566
    7. 'x' → logprob: -3.2641663551330566
    8. 'l' → logprob: -6.514166355133057
    9. 'from' → logprob: -6.639166355133057
    10. 'points' → logprob: -7.639166355133057

Token 872: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015331312082707882
    2. 'u' → logprob: -4.765331268310547
    3. '=' → logprob: -5.140331268310547
    4. 'ual' → logprob: -8.015331268310547
    5. 'uer' → logprob: -8.265331268310547
    6. 'ue' → logprob: -9.265331268310547
    7. '=int' → logprob: -9.515331268310547
    8. '   ' → logprob: -10.265331268310547
    9. 't' → logprob: -11.765331268310547
    10. ':' → logprob: -12.140331268310547

Token 873: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.537868779967539e-06
    2. ' int' → logprob: -11.750008583068848
    3. '[int' → logprob: -14.375008583068848
    4. '   ' → logprob: -17.62500762939453
    5. '	int' → logprob: -17.62500762939453
    6. '(int' → logprob: -17.87500762939453
    7. ' ' → logprob: -18.62500762939453
    8. '10' → logprob: -19.12500762939453
    9. '=int' → logprob: -19.37500762939453
    10. '0' → logprob: -19.37500762939453

Token 874: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0004711874935310334
    2. '(' → logprob: -7.750471115112305
    3. 'input' → logprob: -10.125471115112305
    4. '(
' → logprob: -15.375471115112305
    5. '()' → logprob: -16.375471115112305
    6. ' input' → logprob: -16.500471115112305
    7. '=input' → logprob: -16.750471115112305
    8. '	input' → logprob: -18.000471115112305
    9. ' (' → logprob: -18.250471115112305
    10. '(in' → logprob: -18.500471115112305

Token 875: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0012322536204010248
    2. '()' → logprob: -6.751232147216797
    3. '())
' → logprob: -10.001232147216797
    4. '().' → logprob: -11.251232147216797
    5. '()
' → logprob: -14.001232147216797
    6. '(' → logprob: -14.126232147216797
    7. ' ())' → logprob: -14.126232147216797
    8. '())

' → logprob: -14.876232147216797
    9. '()>' → logprob: -15.251232147216797
    10. '();)' → logprob: -15.626232147216797

Token 876: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39456605911254883
    2. 'for' → logprob: -1.1445660591125488
    3. ' for' → logprob: -4.894566059112549
    4. '	for' → logprob: -9.01956558227539
    5. '<|end|>' → logprob: -10.64456558227539
    6. '    
' → logprob: -10.89456558227539
    7. '```' → logprob: -11.89456558227539
    8. '
' → logprob: -12.01956558227539
    9. '  ' → logprob: -14.89456558227539
    10. '    ' → logprob: -15.26956558227539

Token 877: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.088138227118179e-05
    2. '   ' → logprob: -10.250070571899414
    3. ' for' → logprob: -10.250070571899414
    4. 'points' → logprob: -15.750070571899414
    5. '	for' → logprob: -16.750070571899414
    6. 'results' → logprob: -18.125070571899414
    7. 'segments' → logprob: -18.125070571899414
    8. 'lines' → logprob: -20.000070571899414
    9. '    
' → logprob: -20.375070571899414
    10. '```' → logprob: -20.625070571899414

Token 878: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009119403548538685
    2. ' _' → logprob: -7.000911712646484
    3. '_i' → logprob: -14.625911712646484
    4. ' i' → logprob: -17.625911712646484
    5. ' ' → logprob: -18.250911712646484
    6. 'i' → logprob: -18.625911712646484
    7. '_

' → logprob: -19.000911712646484
    8. ' in' → logprob: -19.750911712646484
    9. '__' → logprob: -20.000911712646484
    10. '_{' → logprob: -20.500911712646484

Token 879: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005943847820162773
    2. 'in' → logprob: -5.130943775177002
    3. ' ' → logprob: -11.63094425201416
    4. 'range' → logprob: -12.75594425201416
    5. '  ' → logprob: -13.63094425201416
    6. 'n' → logprob: -14.25594425201416
    7. ' i' → logprob: -14.50594425201416
    8. '	in' → logprob: -14.88094425201416
    9. 'i' → logprob: -15.00594425201416
    10. 'q' → logprob: -15.88094425201416

Token 880: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002614550176076591
    2. ' range' → logprob: -8.250261306762695
    3. 'q' → logprob: -16.000261306762695
    4. '(range' → logprob: -17.625261306762695
    5. '	range' → logprob: -18.000261306762695
    6. 'in' → logprob: -18.250261306762695
    7. 'rang' → logprob: -18.750261306762695
    8. '```' → logprob: -18.875261306762695
    9. ' ' → logprob: -19.250261306762695
    10. 'ange' → logprob: -19.375261306762695

Token 881: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.1929188370704651
    2. ' (' → logprob: -2.3179187774658203
    3. '(' → logprob: -2.5679187774658203
    4. '(range' → logprob: -8.94291877746582
    5. ' q' → logprob: -9.31791877746582
    6. ' ' → logprob: -11.31791877746582
    7. '(query' → logprob: -11.81791877746582
    8. 'q' → logprob: -11.81791877746582
    9. ' range' → logprob: -12.06791877746582
    10. ' in' → logprob: -12.19291877746582

Token 882: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015328015200793743
    2. '):
' → logprob: -4.2653279304504395
    3. ':' → logprob: -7.0153279304504395
    4. '   ' → logprob: -8.640328407287598
    5. ')' → logprob: -9.515328407287598
    6. '):
' → logprob: -12.640328407287598
    7. '():' → logprob: -12.640328407287598
    8. ',' → logprob: -12.890328407287598
    9. ' ):' → logprob: -13.015328407287598
    10. ':
' → logprob: -13.140328407287598

Token 883: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008986006141640246
    2. 's' → logprob: -8.000898361206055
    3. 'p' → logprob: -8.500898361206055
    4. '   ' → logprob: -8.750898361206055
    5. ' s' → logprob: -9.250898361206055
    6. ' p' → logprob: -10.375898361206055
    7. '```' → logprob: -11.000898361206055
    8. ',' → logprob: -11.500898361206055
    9. '        
' → logprob: -11.750898361206055
    10. '<|end|>' → logprob: -12.375898361206055

Token 884: ' s' (ID: 265)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002760771894827485
    2. 'a' → logprob: -6.877760887145996
    3. 'p' → logprob: -7.377760887145996
    4. 'ax' → logprob: -8.127760887145996
    5. 's' (adapté à ' s') → logprob: -8.252760887145996
    6. 'points' → logprob: -8.627760887145996
    7. '   ' → logprob: -9.127760887145996
    8. 'xs' → logprob: -9.377760887145996
    9. 'coords' → logprob: -10.377760887145996
    10. 'sx' → logprob: -10.377760887145996

Token 885: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019126241386402398
    2. '_' → logprob: -9.125191688537598
    3. 's' → logprob: -10.000191688537598
    4. ' =' → logprob: -12.375191688537598
    5. ',' → logprob: -12.500191688537598
    6. 'token' → logprob: -13.000191688537598
    7. 'line' → logprob: -13.125191688537598
    8. ' ' → logprob: -13.312691688537598
    9. ')' → logprob: -13.375191688537598
    10. 'import' → logprob: -13.437691688537598

Token 886: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4223906993865967
    2. 'x' → logprob: -1.9223906993865967
    3. '=' → logprob: -2.2973906993865967
    4. '_x' → logprob: -3.0473906993865967
    5. 'p' → logprob: -3.9223906993865967
    6. '_p' → logprob: -4.547390937805176
    7. '.' → logprob: -5.422390937805176
    8. '.x' → logprob: -5.672390937805176
    9. ':' → logprob: -5.922390937805176
    10. '_input' → logprob: -6.422390937805176

Token 887: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014369867742061615
    2. ' s' → logprob: -4.264369964599609
    3. ' =' → logprob: -9.88936996459961
    4. '=' → logprob: -10.26436996459961
    5. ' ' → logprob: -10.26436996459961
    6. '_s' → logprob: -11.26436996459961
    7. '*' → logprob: -11.51436996459961
    8. '_=' → logprob: -11.63936996459961
    9. 'x' → logprob: -11.76436996459961
    10. '_' → logprob: -11.76436996459961

Token 888: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4259644558478612e-05
    2. '_' → logprob: -11.875014305114746
    3. ',' → logprob: -12.625014305114746
    4. '1' → logprob: -13.500014305114746
    5. '_,' → logprob: -14.750014305114746
    6. ' ' → logprob: -15.125014305114746
    7. '=' → logprob: -15.500014305114746
    8. '₂' → logprob: -15.562514305114746
    9. ':' → logprob: -15.625014305114746
    10. '   ' → logprob: -15.687514305114746

Token 889: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21134579181671143
    2. '=' → logprob: -1.7113457918167114
    3. '.' → logprob: -5.836345672607422
    4. ',' → logprob: -6.086345672607422
    5. 's' → logprob: -6.586345672607422
    6. '=input' → logprob: -7.711345672607422
    7. '_input' → logprob: -7.836345672607422
    8. '1' → logprob: -7.836345672607422
    9. 'p' → logprob: -7.961345672607422
    10. 'input' → logprob: -8.336345672607422

Token 890: ' Segment' (ID: 64922)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6162378191947937
    2. 'Segment' → logprob: -1.2412378787994385
    3. 'map' → logprob: -2.6162378787994385
    4. '(map' → logprob: -3.7412378787994385
    5. '(Line' → logprob: -3.7412378787994385
    6. '(S' → logprob: -4.366237640380859
    7. '[]' → logprob: -5.116237640380859
    8. '[
' → logprob: -5.491237640380859
    9. 'tuple' → logprob: -5.741237640380859
    10. 'Line' → logprob: -5.741237640380859

Token 891: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.07266337424516678
    2. '()' → logprob: -2.8226633071899414
    3. '(Point' → logprob: -5.072663307189941
    4. '(
' → logprob: -6.447663307189941
    5. '()
' → logprob: -6.947663307189941
    6. '(' → logprob: -7.322663307189941
    7. '(*' → logprob: -7.447663307189941
    8. '(),
' → logprob: -8.572663307189941
    9. '(Vector' → logprob: -8.822663307189941
    10. '(Line' → logprob: -9.947663307189941

Token 892: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.0015098588773980737
    2. ' Segment' → logprob: -6.501509666442871
    3. 'Point' → logprob: -11.876509666442871
    4. 'Seg' → logprob: -14.751509666442871
    5. 'Line' → logprob: -16.126510620117188
    6. 'segment' → logprob: -16.876510620117188
    7. '_segment' → logprob: -17.751510620117188
    8. 'Section' → logprob: -18.126510620117188
    9. '   ' → logprob: -18.501510620117188
    10. 'Segments' → logprob: -18.626510620117188

Token 893: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14274480938911438
    2. '()
' → logprob: -2.017744779586792
    3. '()

' → logprob: -10.892745018005371
    4. '(),' → logprob: -11.517745018005371
    5. '();' → logprob: -11.517745018005371
    6. '()
' → logprob: -11.517745018005371
    7. '()\' → logprob: -12.267745018005371
    8. '())' → logprob: -13.017745018005371
    9. '(' → logprob: -13.142745018005371
    10. '()<' → logprob: -13.892745018005371

Token 894: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006019568536430597
    2. 's' → logprob: -5.131019592285156
    3. '<|end|>' → logprob: -10.381019592285156
    4. '   ' → logprob: -10.756019592285156
    5. ' s' → logprob: -10.881019592285156
    6. '        
' → logprob: -11.756019592285156
    7. '
' → logprob: -12.256019592285156
    8. 'points' → logprob: -13.881019592285156
    9. '	' → logprob: -13.881019592285156
    10. '<|end|>' → logprob: -14.506019592285156

Token 895: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.029607577249407768
    2. 'x' → logprob: -3.6546075344085693
    3. '       ' → logprob: -6.904607772827148
    4. 'p' → logprob: -7.529607772827148
    5. 'sx' → logprob: -7.529607772827148
    6. 'a' → logprob: -8.029607772827148
    7. 'for' → logprob: -8.154607772827148
    8. 'coords' → logprob: -8.529607772827148
    9. 'points' → logprob: -8.779607772827148
    10. 'xy' → logprob: -9.404607772827148

Token 896: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. '       ' → logprob: -12.125009536743164
    3. '   ' → logprob: -13.500009536743164
    4. 's' → logprob: -14.125009536743164
    5. ' =' → logprob: -14.500009536743164
    6. 'input' → logprob: -14.750009536743164
    7. '=' → logprob: -16.125009536743164
    8. '           ' → logprob: -16.250009536743164
    9. ' ' → logprob: -16.250009536743164
    10. '...' → logprob: -16.375009536743164

Token 897: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -5.438573680294212e-06
    2. '.' → logprob: -13.250005722045898
    3. '.s' → logprob: -13.500005722045898
    4. '.x' → logprob: -13.875005722045898
    5. 'p' → logprob: -14.250005722045898
    6. ' .' → logprob: -15.125005722045898
    7. '=' → logprob: -17.3750057220459
    8. '

' → logprob: -17.5000057220459
    9. '.q' → logprob: -17.6250057220459
    10. '```' → logprob: -17.6250057220459

Token 898: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. 'r' → logprob: -16.125
    3. 'from' → logprob: -16.5
    4. 'import' → logprob: -17.3125
    5. 'p' → logprob: -17.5
    6. '=' → logprob: -17.5625
    7. 'oints' → logprob: -17.5625
    8. 'ar' → logprob: -17.8125
    9. '' → logprob: -17.8125
    10. '   ' → logprob: -17.9375

Token 899: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.02845817618072033
    2. '=' → logprob: -4.153458118438721
    3. ' =' → logprob: -4.403458118438721
    4. '.' → logprob: -9.278458595275879
    5. ',' → logprob: -11.403458595275879
    6. ' .' → logprob: -13.153458595275879
    7. '.=' → logprob: -13.528458595275879
    8. 'x' → logprob: -13.778458595275879
    9. ' ' → logprob: -14.028458595275879
    10. ',x' → logprob: -14.153458595275879

Token 900: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02717066928744316
    2. ',s' → logprob: -3.9021706581115723
    3. '=' → logprob: -5.277170658111572
    4. ' =' → logprob: -7.402170658111572
    5. ' ,' → logprob: -8.02717113494873
    6. 's' → logprob: -8.40217113494873
    7. ',input' → logprob: -9.15217113494873
    8. ' s' → logprob: -9.27717113494873
    9. ',q' → logprob: -10.02717113494873
    10. ',int' → logprob: -10.77717113494873

Token 901: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00029708960209973156
    2. ' s' → logprob: -8.125297546386719
    3. ' ' → logprob: -15.750297546386719
    4. '  ' → logprob: -15.750297546386719
    5. ' =' → logprob: -15.875297546386719
    6. '    ' → logprob: -16.12529754638672
    7. 'int' → logprob: -16.12529754638672
    8. 'input' → logprob: -16.37529754638672
    9. '   ' → logprob: -16.37529754638672
    10. '=' → logprob: -16.62529754638672

Token 902: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028215162456035614
    2. 's' → logprob: -6.127821445465088
    3. '.' → logprob: -7.752821445465088
    4. '<|end|>' → logprob: -9.377821922302246
    5. '.s' → logprob: -10.377821922302246
    6. '=' → logprob: -10.377821922302246
    7. '[' → logprob: -11.377821922302246
    8. '.readline' → logprob: -11.627821922302246
    9. '<|end|>' → logprob: -11.752821922302246
    10. ' =' → logprob: -12.252821922302246

Token 903: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00015514736878685653
    2. '.' → logprob: -8.875155448913574
    3. 'p' → logprob: -11.875155448913574
    4. '.py' → logprob: -12.625155448913574
    5. '.s' → logprob: -13.750155448913574
    6. ' .' → logprob: -14.000155448913574
    7. '.pkl' → logprob: -14.250155448913574
    8. '[' → logprob: -14.750155448913574
    9. '<p' → logprob: -15.125155448913574
    10. '.readline' → logprob: -15.500155448913574

Token 904: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '2' → logprob: -14.375000953674316
    3. 'p' → logprob: -15.750000953674316
    4. '```' → logprob: -16.000001907348633
    5. 's' → logprob: -16.875001907348633
    6. '.' → logprob: -17.250001907348633
    7. '１' → logprob: -17.437501907348633
    8. 'a' → logprob: -17.437501907348633
    9. ' ' → logprob: -18.187501907348633
    10. '১' → logprob: -18.437501907348633

Token 905: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0002128382766386494
    2. '.' → logprob: -8.750212669372559
    3. 'y' → logprob: -10.000212669372559
    4. '.x' → logprob: -12.250212669372559
    5. '<|end|>' → logprob: -13.500212669372559
    6. '.py' → logprob: -13.750212669372559
    7. '.p' → logprob: -14.125212669372559
    8. '.s' → logprob: -15.625212669372559
    9. '=' → logprob: -15.875212669372559
    10. '	y' → logprob: -16.625213623046875

Token 906: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3735664486885071
    2. '=' → logprob: -1.7485663890838623
    3. ' =' → logprob: -1.9985663890838623
    4. ',s' → logprob: -6.748566627502441
    5. '<|end|>' → logprob: -7.748566627502441
    6. ',input' → logprob: -9.123566627502441
    7. 's' → logprob: -9.248566627502441
    8. ' ,' → logprob: -9.498566627502441
    9. ',q' → logprob: -9.748566627502441
    10. '=input' → logprob: -9.873566627502441

Token 907: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0380416102707386
    2. ' s' → logprob: -3.288041591644287
    3. '<|end|>' → logprob: -16.288042068481445
    4. '	s' → logprob: -17.663042068481445
    5. '       ' → logprob: -17.913042068481445
    6. '_s' → logprob: -18.288042068481445
    7. ' ' → logprob: -18.913042068481445
    8. '`s' → logprob: -18.913042068481445
    9. '        ' → logprob: -19.038042068481445
    10. '(s' → logprob: -19.163042068481445

Token 908: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026306219398975372
    2. '2' → logprob: -3.65130615234375
    3. 's' → logprob: -12.27630615234375
    4. '```' → logprob: -14.77630615234375
    5. '.' → logprob: -15.46380615234375
    6. ' ' → logprob: -16.71380615234375
    7. 'p' → logprob: -17.15130615234375
    8. '=' → logprob: -17.27630615234375
    9. 'and' → logprob: -17.52630615234375
    10. '`' → logprob: -17.58880615234375

Token 909: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.018120912835001945
    2. '.' → logprob: -4.143120765686035
    3. '.s' → logprob: -6.393120765686035
    4. '.pkl' → logprob: -8.643120765686035
    5. '<|end|>' → logprob: -9.643120765686035
    6. '.x' → logprob: -10.268120765686035
    7. '.q' → logprob: -10.393120765686035
    8. 'p' → logprob: -10.518120765686035
    9. '.py' → logprob: -11.018120765686035
    10. ' .' → logprob: -11.143120765686035

Token 910: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.165027217415627e-05
    2. '1' → logprob: -11.000021934509277
    3. 'p' → logprob: -13.375021934509277
    4. 's' → logprob: -13.625021934509277
    5. '```' → logprob: -14.937521934509277
    6. 'a' → logprob: -15.187521934509277
    7. 'm' → logprob: -16.12502098083496
    8. 'c' → logprob: -16.25002098083496
    9. '۲' → logprob: -16.56252098083496
    10. '２' → logprob: -16.75002098083496

Token 911: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00022487416572403163
    2. '.' → logprob: -8.500225067138672
    3. '<|end|>' → logprob: -11.375225067138672
    4. 'x' → logprob: -12.250225067138672
    5. '<|end|>' → logprob: -13.625225067138672
    6. ' .' → logprob: -13.875225067138672
    7. ',' → logprob: -14.375225067138672
    8. '.s' → logprob: -14.375225067138672
    9. ' =' → logprob: -15.375225067138672
    10. '=' → logprob: -15.875225067138672

Token 912: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014966767048463225
    2. '=' → logprob: -9.875149726867676
    3. ',s' → logprob: -10.125149726867676
    4. 's' → logprob: -10.500149726867676
    5. '<|end|>' → logprob: -11.125149726867676
    6. ' ,' → logprob: -11.500149726867676
    7. ' s' → logprob: -13.625149726867676
    8. ',user' → logprob: -13.875149726867676
    9. '<|end|>' → logprob: -14.125149726867676
    10. ',
' → logprob: -14.125149726867676

Token 913: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00045843268162570894
    2. ' s' → logprob: -7.750458240509033
    3. '<|end|>' → logprob: -10.500458717346191
    4. '(s' → logprob: -16.250457763671875
    5. ' ' → logprob: -16.250457763671875
    6. '`s' → logprob: -17.875457763671875
    7. '_s' → logprob: -18.500457763671875
    8. '=s' → logprob: -18.750457763671875
    9. '<|end|>' → logprob: -19.125457763671875
    10. '	s' → logprob: -19.625457763671875

Token 914: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002494087442755699
    2. '1' → logprob: -6.002493858337402
    3. '.p' → logprob: -11.627493858337402
    4. '```' → logprob: -12.377493858337402
    5. 's' → logprob: -13.627493858337402
    6. 'p' → logprob: -13.627493858337402
    7. '.' → logprob: -14.252493858337402
    8. '.s' → logprob: -14.377493858337402
    9. ' ' → logprob: -15.002493858337402
    10. '   ' → logprob: -15.689993858337402

Token 915: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00014418430509977043
    2. '.s' → logprob: -9.000144004821777
    3. '.' → logprob: -11.125144004821777
    4. 'p' → logprob: -12.750144004821777
    5. '```' → logprob: -13.875144004821777
    6. '.y' → logprob: -14.375144004821777
    7. 's' → logprob: -15.125144004821777
    8. '.py' → logprob: -15.250144004821777
    9. '[' → logprob: -15.375144004821777
    10. '.pkl' → logprob: -15.750144004821777

Token 916: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4744917154312134
    2. '1' → logprob: -0.9744917154312134
    3. 'p' → logprob: -8.599492073059082
    4. 'y' → logprob: -9.474492073059082
    5. '```' → logprob: -9.474492073059082
    6. 's' → logprob: -10.099492073059082
    7. '.y' → logprob: -11.224492073059082
    8. 'n' → logprob: -12.724492073059082
    9. '.' → logprob: -13.349492073059082
    10. '3' → logprob: -13.599492073059082

Token 917: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -4.417976379045285e-05
    2. 'y' → logprob: -10.250043869018555
    3. '.' → logprob: -12.250043869018555
    4. '.x' → logprob: -12.625043869018555
    5. '.py' → logprob: -15.375043869018555
    6. '```' → logprob: -15.500043869018555
    7. '	y' → logprob: -16.875043869018555
    8. ' .' → logprob: -16.875043869018555
    9. '=' → logprob: -17.000043869018555
    10. ' y' → logprob: -17.625043869018555

Token 918: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48019441962242126
    2. ' =' → logprob: -0.9801944494247437
    3. ',' → logprob: -5.105194568634033
    4. '=input' → logprob: -10.605194091796875
    5. ',input' → logprob: -13.355194091796875
    6. ' ,' → logprob: -13.355194091796875
    7. '=int' → logprob: -13.605194091796875
    8. ' ' → logprob: -13.855194091796875
    9. ',s' → logprob: -14.480194091796875
    10. '=line' → logprob: -14.980194091796875

Token 919: ' \
' (ID: 6814)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16024281084537506
    2. 's' → logprob: -1.9102427959442139
    3. '       ' → logprob: -11.285243034362793
    4. '        ' → logprob: -13.035243034362793
    5. '   ' → logprob: -13.160243034362793
    6. '    ' → logprob: -14.160243034362793
    7. '	s' → logprob: -14.785243034362793
    8. ' =' → logprob: -14.910243034362793
    9. ' ' → logprob: -15.285243034362793
    10. '  ' → logprob: -16.910242080688477

Token 920: '           ' (ID: 352)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0380634106695652
    2. 's' → logprob: -3.2880635261535645
    3. '       ' → logprob: -10.913063049316406
    4. '        ' → logprob: -13.163063049316406
    5. '    ' → logprob: -14.038063049316406
    6. '   ' → logprob: -14.663063049316406
    7. ' =' → logprob: -14.788063049316406
    8. '=s' → logprob: -16.538063049316406
    9. ' ' → logprob: -16.663063049316406
    10. '	s' → logprob: -17.038063049316406

Token 921: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.16022635996341705
    2. ' s' → logprob: -1.9102263450622559
    3. '       ' → logprob: -13.535226821899414
    4. '   ' → logprob: -14.785226821899414
    5. '        ' → logprob: -15.285226821899414
    6. '    ' → logprob: -16.160226821899414
    7. ' ' → logprob: -16.910226821899414
    8. ' =' → logprob: -17.285226821899414
    9. '=s' → logprob: -17.660226821899414
    10. '           ' → logprob: -17.785226821899414

Token 922: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02975349873304367
    2. '2' → logprob: -3.5297534465789795
    3. '=' → logprob: -14.154753684997559
    4. 's' → logprob: -14.967253684997559
    5. '
' → logprob: -15.029753684997559
    6. 't' → logprob: -15.154753684997559
    7. '```' → logprob: -15.529753684997559
    8. ' =' → logprob: -15.779753684997559
    9. 'p' → logprob: -16.779752731323242
    10. '   ' → logprob: -16.904752731323242

Token 923: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.002380403922870755
    2. '.' → logprob: -6.12738037109375
    3. '.s' → logprob: -9.87738037109375
    4. ' .' → logprob: -10.50238037109375
    5. 'p' → logprob: -10.62738037109375
    6. '.pkl' → logprob: -11.12738037109375
    7. '`.' → logprob: -11.87738037109375
    8. '.py' → logprob: -12.00238037109375
    9. '```' → logprob: -12.12738037109375

Token 924: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. 'p' → logprob: -15.375000953674316
    3. '<|end|>' → logprob: -15.500000953674316
    4. 'a' → logprob: -17.25
    5. '...' → logprob: -17.9375
    6. '```' → logprob: -17.9375
    7. 's' → logprob: -18.3125
    8. 'x' → logprob: -18.4375
    9. '<|end|>' → logprob: -18.8125
    10. '.' → logprob: -18.875

Token 925: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0001029471677611582
    2. '.' → logprob: -9.375102996826172
    3. '<|end|>' → logprob: -11.625102996826172
    4. 'x' → logprob: -12.000102996826172
    5. ' .' → logprob: -13.125102996826172
    6. ' x' → logprob: -15.875102996826172
    7. '.s' → logprob: -15.875102996826172
    8. ' ' → logprob: -16.125102996826172
    9. '.py' → logprob: -16.375102996826172

Token 926: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.567575034452602e-05
    2. '<|end|>' → logprob: -9.87509536743164
    3. ',s' → logprob: -10.62509536743164
    4. ' ,' → logprob: -11.50009536743164
    5. '=' → logprob: -12.37509536743164
    6. ',user' → logprob: -13.37509536743164
    7. 's' → logprob: -14.12509536743164
    8. '‌,' → logprob: -14.50009536743164
    9. ',
' → logprob: -15.00009536743164
    10. ',end' → logprob: -15.12509536743164

Token 927: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5759481191635132
    2. 's' → logprob: -0.8259481191635132
    3. '<|end|>' → logprob: -11.700947761535645
    4. ' ' → logprob: -15.575947761535645
    5. '_s' → logprob: -16.95094871520996
    6. '(s' → logprob: -17.07594871520996
    7. '`s' → logprob: -17.70094871520996
    8. ' ' → logprob: -17.82594871520996
    9. '	s' → logprob: -17.95094871520996
    10. '    ' → logprob: -18.32594871520996

Token 928: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18755872547626495
    2. 's' → logprob: -1.8125587701797485
    3. '.s' → logprob: -4.937558650970459
    4. 'p' → logprob: -7.562558650970459
    5. '.p' → logprob: -10.437559127807617
    6. ' s' → logprob: -11.187559127807617
    7. '.' → logprob: -11.187559127807617
    8. '1' → logprob: -11.937559127807617
    9. ' ' → logprob: -12.062559127807617
    10. 't' → logprob: -12.062559127807617

Token 929: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.13024160265922546
    2. '.s' → logprob: -2.130241632461548
    3. '.' → logprob: -5.880241394042969
    4. 'p' → logprob: -8.130241394042969
    5. 's' → logprob: -9.130241394042969
    6. '.y' → logprob: -10.005241394042969
    7. '[' → logprob: -10.755241394042969
    8. ' .' → logprob: -11.630241394042969
    9. '```' → logprob: -11.880241394042969

Token 930: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005469570169225335
    2. 'p' → logprob: -8.250547409057617
    3. '2' → logprob: -8.500547409057617
    4. 's' → logprob: -10.375547409057617
    5. '.' → logprob: -11.375547409057617
    6. '.y' → logprob: -11.500547409057617
    7. 't' → logprob: -12.000547409057617
    8. '.p' → logprob: -12.125547409057617
    9. 'y' → logprob: -12.625547409057617
    10. '```' → logprob: -13.125547409057617

Token 931: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.008951113559305668
    2. 'y' → logprob: -4.883951187133789
    3. '.' → logprob: -6.633951187133789
    4. '.x' → logprob: -10.633951187133789
    5. '<|end|>' → logprob: -13.508951187133789
    6. '.py' → logprob: -14.258951187133789
    7. ' y' → logprob: -14.883951187133789
    8. ',' → logprob: -15.008951187133789
    9. 's' → logprob: -15.008951187133789
    10. '...' → logprob: -15.133951187133789

Token 932: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010580805974313989
    2. '<|end|>' → logprob: -10.125105857849121
    3. ',s' → logprob: -10.500105857849121
    4. ' ,' → logprob: -10.625105857849121
    5. 's' → logprob: -11.625105857849121
    6. '=' → logprob: -13.250105857849121
    7. ' s' → logprob: -13.750105857849121
    8. ',\
' → logprob: -14.000105857849121
    9. '<|end|>' → logprob: -15.625105857849121
    10. ' =' → logprob: -15.750105857849121

Token 933: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38687169551849365
    2. ' s' → logprob: -1.1368716955184937
    3. '           ' → logprob: -15.136871337890625
    4. '       ' → logprob: -15.511871337890625
    5. '`s' → logprob: -16.261871337890625
    6. '   ' → logprob: -16.761871337890625
    7. '(s' → logprob: -17.261871337890625
    8. '```' → logprob: -17.761871337890625
    9. '<s' → logprob: -18.386871337890625
    10. '{s' → logprob: -18.386871337890625

Token 934: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. 's' → logprob: -15.625000953674316
    3. 't' → logprob: -16.375
    4. '1' → logprob: -16.5
    5. '```' → logprob: -16.5
    6. '２' → logprob: -16.8125
    7. '₂' → logprob: -17.25
    8. '۲' → logprob: -18.0625
    9. '
' → logprob: -18.125
    10. ' ' → logprob: -18.875

Token 935: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.01139426976442337
    2. '.s' → logprob: -4.511394500732422
    3. '.' → logprob: -8.011394500732422
    4. 's' → logprob: -11.761394500732422
    5. 'p' → logprob: -12.011394500732422
    6. '```' → logprob: -15.136394500732422
    7. ' .' → logprob: -15.386394500732422
    8. '2' → logprob: -15.386394500732422
    9. '.py' → logprob: -16.886394500732422
    10. '[' → logprob: -17.636394500732422

Token 936: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.200166469876422e-06
    2. 'p' → logprob: -13.125004768371582
    3. '1' → logprob: -13.750004768371582
    4. 's' → logprob: -14.375004768371582
    5. 't' → logprob: -15.250004768371582
    6. '```' → logprob: -15.562504768371582
    7. '۲' → logprob: -16.3125057220459
    8. '２' → logprob: -16.5000057220459
    9. '<|end|>' → logprob: -16.5625057220459
    10. '.' → logprob: -16.7500057220459

Token 937: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0001725511101540178
    2. '.' → logprob: -9.00017261505127
    3. 'x' → logprob: -10.12517261505127
    4. '.s' → logprob: -12.25017261505127
    5. '<|end|>' → logprob: -13.50017261505127
    6. '`.' → logprob: -14.75017261505127
    7. '```' → logprob: -14.87517261505127
    8. '.py' → logprob: -14.87517261505127
    9. '[' → logprob: -15.00017261505127
    10. ' .' → logprob: -15.37517261505127

Token 938: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.865583706414327e-05
    2. ',s' → logprob: -9.75009822845459
    3. ' ,' → logprob: -11.00009822845459
    4. '<|end|>' → logprob: -11.00009822845459
    5. 's' → logprob: -12.75009822845459
    6. ',
' → logprob: -13.50009822845459
    7. ',\
' → logprob: -14.37509822845459
    8. ' s' → logprob: -14.62509822845459
    9. ',user' → logprob: -15.25009822845459
    10. ' ' → logprob: -15.62509822845459

Token 939: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014163863845169544
    2. ' s' → logprob: -4.264163970947266
    3. '<|end|>' → logprob: -15.889163970947266
    4. '(s' → logprob: -16.014163970947266
    5. '   ' → logprob: -17.014163970947266
    6. '`s' → logprob: -17.139163970947266
    7. ' ' → logprob: -17.264163970947266
    8. '_s' → logprob: -18.014163970947266
    9. '```' → logprob: -18.514163970947266
    10. '	s' → logprob: -19.264163970947266

Token 940: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002549024939071387
    2. '.s' → logprob: -8.75025463104248
    3. 's' → logprob: -9.37525463104248
    4. '```' → logprob: -12.62525463104248
    5. '_s' → logprob: -13.37525463104248
    6. '.' → logprob: -13.37525463104248
    7. '_' → logprob: -13.50025463104248
    8. ' ' → logprob: -14.00025463104248
    9. '.p' → logprob: -14.12525463104248
    10. '   ' → logprob: -14.87525463104248

Token 941: '.p' (ID: 1201)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.15119104087352753
    2. '.p' → logprob: -2.401190996170044
    3. '.' → logprob: -3.026190996170044
    4. '.s' → logprob: -7.401191234588623
    5. '.x' → logprob: -8.151190757751465
    6. '.py' → logprob: -9.526190757751465
    7. '2' → logprob: -9.776190757751465
    8. '```' → logprob: -10.151190757751465
    9. 'p' → logprob: -10.401190757751465
    10. ' .' → logprob: -10.526190757751465

Token 942: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10378044098615646
    2. '1' → logprob: -2.478780508041382
    3. 'p' → logprob: -4.978780269622803
    4. '.p' → logprob: -5.228780269622803
    5. '.y' → logprob: -6.228780269622803
    6. '.' → logprob: -8.228780746459961
    7. '```' → logprob: -9.103780746459961
    8. 'y' → logprob: -10.353780746459961
    9. '.s' → logprob: -10.728780746459961
    10. 't' → logprob: -11.478780746459961

Token 943: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0020430791191756725
    2. 'y' → logprob: -6.6270432472229
    3. '.' → logprob: -7.2520432472229
    4. '.x' → logprob: -12.127042770385742
    5. '<|end|>' → logprob: -14.627042770385742
    6. '.py' → logprob: -14.877042770385742
    7. ' .' → logprob: -15.002042770385742
    8. '.ylabel' → logprob: -15.627042770385742
    9. 'Y' → logprob: -15.752042770385742
    10. ''y' → logprob: -16.002042770385742

Token 944: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890389114618301
    2. ' =' → logprob: -2.578903913497925
    3. '=input' → logprob: -11.328904151916504
    4. ',' → logprob: -14.203904151916504
    5. 'map' → logprob: -14.953904151916504
    6. '=list' → logprob: -15.078904151916504
    7. '   ' → logprob: -15.828904151916504
    8. ' map' → logprob: -15.953904151916504
    9. ' ' → logprob: -16.578903198242188
    10. ')=' → logprob: -16.703903198242188

Token 945: ' \
' (ID: 6814)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0024944450706243515
    2. ' map' → logprob: -6.0024943351745605
    3. 'list' → logprob: -11.127494812011719
    4. 'tuple' → logprob: -13.127494812011719
    5. '*' → logprob: -13.752494812011719
    6. '(map' → logprob: -14.627494812011719
    7. '	map' → logprob: -15.377494812011719
    8. '[' → logprob: -15.627494812011719
    9. 'm' → logprob: -15.877494812011719
    10. '   ' → logprob: -16.37749481201172

Token 946: '           ' (ID: 352)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0486145056784153
    2. ' map' → logprob: -3.048614501953125
    3. '   ' → logprob: -10.798614501953125
    4. 'list' → logprob: -12.423614501953125
    5. '[' → logprob: -13.798614501953125
    6. '(map' → logprob: -14.423614501953125
    7. 'tuple' → logprob: -14.548614501953125
    8. '	map' → logprob: -14.673614501953125
    9. ' ' → logprob: -16.798614501953125
    10. ' list' → logprob: -17.298614501953125

Token 947: ' [' (ID: 723)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.03806536644697189
    2. ' map' → logprob: -3.2880654335021973
    3. 'list' → logprob: -11.038064956665039
    4. 'tuple' → logprob: -12.788064956665039
    5. '(map' → logprob: -12.788064956665039
    6. '[' (adapté à ' [') → logprob: -13.913064956665039
    7. '   ' → logprob: -14.538064956665039
    8. '	map' → logprob: -14.538064956665039
    9. ' list' → logprob: -15.538064956665039
    10. '*' → logprob: -16.53806495666504

Token 948: 'int' (ID: 491)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0738191083073616
    2. 'map' → logprob: -3.073819160461426
    3. 'int' → logprob: -3.823819160461426
    4. '*' → logprob: -5.823819160461426
    5. ' float' → logprob: -9.448819160461426
    6. ' map' → logprob: -10.448819160461426
    7. '   ' → logprob: -12.573819160461426
    8. 'list' → logprob: -12.823819160461426
    9. '```' → logprob: -14.698819160461426
    10. '
' → logprob: -14.948819160461426

Token 949: '(x' (ID: 4061)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.584585964679718
    2. '(x' → logprob: -0.834585964679718
    3. '(input' → logprob: -4.959586143493652
    4. '(token' → logprob: -7.084586143493652
    5. '(s' → logprob: -7.584586143493652
    6. '(a' → logprob: -9.834586143493652
    7. '(n' → logprob: -9.959586143493652
    8. '(_)' → logprob: -9.959586143493652
    9. '(num' → logprob: -10.709586143493652
    10. '(e' → logprob: -11.584586143493652

Token 950: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.35103529691696167
    2. ')' → logprob: -1.9760353565216064
    3. 'for' → logprob: -1.9760353565216064
    4. ' for' → logprob: -4.226035118103027
    5. 'input' → logprob: -5.851035118103027
    6. '(input' → logprob: -7.101035118103027
    7. 'in' → logprob: -8.476035118103027
    8. '(x' → logprob: -9.476035118103027
    9. '   ' → logprob: -9.851035118103027
    10. '())' → logprob: -9.976035118103027

Token 951: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8487311005592346
    2. ' for' → logprob: -1.0987310409545898
    3. 'for' → logprob: -1.4737310409545898
    4. '(input' → logprob: -5.09873104095459
    5. 'input' → logprob: -6.09873104095459
    6. '(i' → logprob: -7.09873104095459
    7. 'in' → logprob: -9.47373104095459
    8. '(x' → logprob: -9.59873104095459
    9. '(' → logprob: -9.97373104095459
    10. '()]' → logprob: -9.97373104095459

Token 952: ' x' (ID: 1215)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16027337312698364
    2. ' input' → logprob: -1.9102733135223389
    3. '(input' → logprob: -10.410273551940918
    4. ' in' → logprob: -11.535273551940918
    5. 'in' → logprob: -11.785273551940918
    6. ',input' → logprob: -14.785273551940918
    7. '_input' → logprob: -14.910273551940918
    8. 'range' → logprob: -14.910273551940918
    9. '=input' → logprob: -15.285273551940918
    10. '_' → logprob: -16.4102725982666

Token 953: ' in' (ID: 306)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.192972794175148
    2. ' in' → logprob: -2.3179728984832764
    3. ' input' → logprob: -3.0679728984832764
    4. '(input' → logprob: -3.9429728984832764
    5. 'in' → logprob: -4.567972660064697
    6. '(' → logprob: -7.942972660064697
    7. '=input' → logprob: -9.067973136901855
    8. ',input' → logprob: -9.567973136901855
    9. ']' → logprob: -9.692973136901855
    10. ')' → logprob: -10.817973136901855

Token 954: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0011703446507453918
    2. ' input' → logprob: -6.7511701583862305
    3. '(input' → logprob: -16.876171112060547
    4. '
' → logprob: -18.751171112060547
    5. '   ' → logprob: -19.251171112060547
    6. '<input' → logprob: -19.376171112060547
    7. '_input' → logprob: -19.876171112060547
    8. '	input' → logprob: -20.251171112060547
    9. ' ' → logprob: -20.376171112060547
    10. '=input' → logprob: -20.501171112060547

Token 955: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1472419600977446e-06
    2. '()' → logprob: -13.750000953674316
    3. ' ().' → logprob: -18.250001907348633
    4. '()].' → logprob: -20.000001907348633
    5. '()]' → logprob: -20.250001907348633
    6. '(' → logprob: -20.750001907348633
    7. '()
' → logprob: -22.625001907348633
    8. '.split' → logprob: -23.000001907348633
    9. '("").' → logprob: -23.625001907348633
    10. 'split' → logprob: -23.875001907348633

Token 956: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024764856789261103
    2. 'strip' → logprob: -6.002476692199707
    3. ' split' → logprob: -14.752476692199707
    4. 'rstrip' → logprob: -15.502476692199707
    5. '().' → logprob: -15.752476692199707
    6. '(split' → logprob: -16.37747573852539
    7. 'spl' → logprob: -16.37747573852539
    8. '.split' → logprob: -17.37747573852539
    9. 's' → logprob: -18.50247573852539
    10. ' strip' → logprob: -19.50247573852539

Token 957: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0005629229708574712
    2. '()' → logprob: -7.500563144683838
    3. '())' → logprob: -11.75056266784668
    4. '(' → logprob: -13.50056266784668
    5. '()]
' → logprob: -14.37556266784668
    6. ']' → logprob: -16.87556266784668
    7. '()][' → logprob: -18.00056266784668
    8. '()].' → logprob: -18.50056266784668
    9. '()))' → logprob: -18.62556266784668
    10. '()}' → logprob: -18.75056266784668

Token 958: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052243784070014954
    2. '
' → logprob: -3.177243709564209
    3. '<|end|>' → logprob: -5.177243709564209
    4. '   ' → logprob: -6.052243709564209
    5. '        
' → logprob: -7.427243709564209
    6. '```' → logprob: -9.177244186401367
    7. '	' → logprob: -9.302244186401367
    8. '<|end|>' → logprob: -9.427244186401367
    9. 'if' → logprob: -9.802244186401367
    10. '    
' → logprob: -10.052244186401367

Token 959: ' print' (ID: 2123)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8764247298240662
    2. 'res' → logprob: -1.501424789428711
    3. '       ' → logprob: -2.001424789428711
    4. '   ' → logprob: -2.001424789428711
    5. 'print' (adapté à ' print') → logprob: -2.501424789428711
    6. 'r' → logprob: -5.251424789428711
    7. 'for' → logprob: -7.376424789428711
    8. '```' → logprob: -7.376424789428711
    9. 'if' → logprob: -7.501424789428711
    10. ' result' → logprob: -8.251424789428711

Token 960: '(class' (ID: 35752)
  Prédit: '(class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(class' → logprob: -1.8193366486229934e-05
    2. '(' → logprob: -11.250018119812012
    3. 'class' → logprob: -12.375018119812012
    4. '(
' → logprob: -14.250018119812012
    5. '<class' → logprob: -16.250019073486328
    6. '"class' → logprob: -18.625019073486328
    7. '[class' → logprob: -19.250019073486328
    8. '```' → logprob: -19.750019073486328
    9. ' (' → logprob: -19.875019073486328
    10. '((' → logprob: -20.000019073486328

Token 961: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -16.75
    3. 'if' → logprob: -17.75
    4. '(class' → logprob: -18.125
    5. 'class' → logprob: -18.625
    6. 'IFY' → logprob: -19.125
    7. '```' → logprob: -19.375
    8. '(' → logprob: -20.125
    9. 'ifying' → logprob: -20.875
    10. 'fy' → logprob: -21.125

Token 962: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -12.875003814697266
    3. 's' → logprob: -14.125003814697266
    4. ' (' → logprob: -16.000003814697266
    5. ')' → logprob: -16.125003814697266
    6. ')s' → logprob: -18.875003814697266
    7. '(
' → logprob: -19.625003814697266
    8. ')(' → logprob: -20.625003814697266
    9. ' s' → logprob: -20.875003814697266
    10. '((' → logprob: -22.000003814697266

Token 963: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. 's' → logprob: -14.000000953674316
    3. ' ' → logprob: -16.375001907348633
    4. '(s' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.000001907348633
    6. ')' → logprob: -17.250001907348633
    7. ' s' → logprob: -17.500001907348633
    8. '```' → logprob: -17.625001907348633
    9. '(' → logprob: -18.375001907348633
    10. '１' → logprob: -18.437501907348633

Token 964: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004436587623786181
    2. ',s' → logprob: -8.250443458557129
    3. 's' → logprob: -8.750443458557129
    4. ' ,' → logprob: -11.000443458557129
    5. '(s' → logprob: -12.125443458557129
    6. '(' → logprob: -14.125443458557129
    7. ',
' → logprob: -14.625443458557129
    8. ' s' → logprob: -14.875443458557129
    9. ')' → logprob: -15.250443458557129
    10. '(),' → logprob: -17.375444412231445

Token 965: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029754074290394783
    2. ' s' → logprob: -3.529754161834717
    3. '<|end|>' → logprob: -12.904753684997559
    4. '(s' → logprob: -14.654753684997559
    5. ')' → logprob: -14.779753684997559
    6. ')s' → logprob: -15.279753684997559
    7. '{s' → logprob: -17.779754638671875
    8. '	s' → logprob: -17.904754638671875
    9. ' ' → logprob: -18.529754638671875
    10. '<s' → logprob: -19.154754638671875

Token 966: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -16.125
    3. '_' → logprob: -17.125
    4. '```' → logprob: -17.5
    5. 's' → logprob: -17.75
    6. ')' → logprob: -17.875
    7. '₂' → logprob: -18.25
    8. '２' → logprob: -18.625
    9. ',' → logprob: -18.875
    10. '...' → logprob: -18.875

Token 967: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03011433780193329
    2. ')' → logprob: -3.5301144123077393
    3. '(s' → logprob: -8.65511417388916
    4. 's' → logprob: -9.40511417388916
    5. '()))' → logprob: -10.28011417388916
    6. '))
' → logprob: -10.40511417388916
    7. ')s' → logprob: -10.90511417388916
    8. '())' → logprob: -11.53011417388916
    9. ' ))' → logprob: -11.78011417388916
    10. '(' → logprob: -13.15511417388916

Token 968: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16909663379192352
    2. '<|end|>' → logprob: -1.91909658908844
    3. '
' → logprob: -5.29409646987915
    4. ' if' → logprob: -6.41909646987915
    5. '```' → logprob: -7.04409646987915
    6. '#' → logprob: -7.04409646987915
    7. '<|end|>' → logprob: -8.794096946716309
    8. '[' → logprob: -9.794096946716309
    9. '...' → logprob: -9.794096946716309
    10. ')' → logprob: -10.044096946716309

Token 969: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.38725078105926514
    2. ' __' → logprob: -1.1372507810592651
    3. '_' → logprob: -8.137250900268555
    4. 'name' → logprob: -10.262250900268555
    5. '_name' → logprob: -10.387250900268555
    6. ' ' → logprob: -12.262250900268555
    7. '202' → logprob: -12.262250900268555
    8. ' ' → logprob: -12.637250900268555
    9. '___' → logprob: -13.262250900268555
    10. '/__' → logprob: -13.262250900268555

Token 970: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005790612660348415
    2. ' __' → logprob: -5.630790710449219
    3. ' ==' → logprob: -6.380790710449219
    4. '_' → logprob: -8.005790710449219
    5. '==' → logprob: -8.880790710449219
    6. 'name' → logprob: -12.380790710449219
    7. '_name' → logprob: -12.755790710449219
    8. '[' → logprob: -13.130790710449219
    9. '___' → logprob: -13.130790710449219
    10. '____' → logprob: -13.505790710449219

Token 971: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.704273118884885e-07
    2. '==' → logprob: -15.125000953674316
    3. '__.__' → logprob: -16.0
    4. '_' → logprob: -16.375
    5. '____' → logprob: -17.25
    6. '___' → logprob: -17.375
    7. '__.' → logprob: -18.5
    8. '__
' → logprob: -18.875
    9. '__

' → logprob: -19.625
    10. '__('' → logprob: -20.125

Token 972: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1067521944642067
    2. '==' → logprob: -2.3567521572113037
    3. ' ==' → logprob: -5.356752395629883
    4. '=="' → logprob: -6.356752395629883
    5. '=='' → logprob: -9.981752395629883
    6. '_' → logprob: -11.231752395629883
    7. '___' → logprob: -12.231752395629883
    8. '=' → logprob: -12.356752395629883
    9. '===' → logprob: -13.856752395629883
    10. '==
' → logprob: -14.106752395629883

Token 973: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008663378655910492
    2. ''' → logprob: -4.758663177490234
    3. '__' → logprob: -10.008663177490234
    4. ' "__' → logprob: -12.508663177490234
    5. '("__' → logprob: -16.633663177490234
    6. ' '__' → logprob: -17.008663177490234
    7. '   ' → logprob: -17.133663177490234
    8. '"user' → logprob: -17.383663177490234
    9. '"name' → logprob: -17.508663177490234
    10. ' ' → logprob: -17.508663177490234

Token 974: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.4868770196917467e-05
    2. 'name' → logprob: -11.125024795532227
    3. '__' → logprob: -11.625024795532227
    4. '_main' → logprob: -14.375024795532227
    5. 'ma' → logprob: -15.500024795532227
    6. ' main' → logprob: -16.500024795532227
    7. 'm' → logprob: -16.625024795532227
    8. 'built' → logprob: -16.875024795532227
    9. 'maine' → logprob: -17.750024795532227
    10. 'file' → logprob: -18.000024795532227

Token 975: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10056215524673462
    2. '__' → logprob: -2.35056209564209
    3. '__':
' → logprob: -7.97556209564209
    4. '__:' → logprob: -12.35056209564209
    5. '__.' → logprob: -12.60056209564209
    6. '__["' → logprob: -13.10056209564209
    7. '__.__' → logprob: -14.35056209564209
    8. '__
' → logprob: -14.85056209564209
    9. '.' → logprob: -15.47556209564209
    10. '_' → logprob: -15.72556209564209

Token 976: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2675933837890625
    2. 'main' → logprob: -1.5175933837890625
    3. '	main' → logprob: -4.3925933837890625
    4. ' main' → logprob: -5.7675933837890625
    5. '   ' → logprob: -10.517593383789062
    6. '_main' → logprob: -12.267593383789062
    7. '__' → logprob: -12.392593383789062
    8. '    
' → logprob: -12.767593383789062
    9. ' ' → logprob: -13.142593383789062
    10. '(main' → logprob: -13.517593383789062

Token 977: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.2664456789934775e-06
    2. ' main' → logprob: -14.000000953674316
    3. '	main' → logprob: -15.000000953674316
    4. '   ' → logprob: -16.125001907348633
    5. '_main' → logprob: -18.000001907348633
    6. '.main' → logprob: -21.875001907348633
    7. '(main' → logprob: -22.250001907348633
    8. 'import' → logprob: -23.500001907348633
    9. '  ' → logprob: -23.750001907348633
    10. 'Main' → logprob: -24.500001907348633

Token 978: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8253951072692871
    2. '<|end|>' → logprob: -0.9503951072692871
    3. '
' → logprob: -2.950395107269287
    4. '(' → logprob: -3.075395107269287
    5. '```' → logprob: -3.575395107269287
    6. '\n' → logprob: -3.950395107269287
    7. ')' → logprob: -4.450395107269287
    8. '#' → logprob: -4.825395107269287
    9. '\' → logprob: -6.075395107269287
    10. 'newline' → logprob: -6.075395107269287


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 976
Tokens correctement prédits (1ère position, stricte): 454
Tokens correctement prédits (1ère position, avec adaptation): 508
Tokens correctement prédits (top 10): 897
Précision stricte (1ère position): 46.52%
Précision adaptée (1ère position): 52.05%
Précision (top 10): 91.91%
================================================================================
