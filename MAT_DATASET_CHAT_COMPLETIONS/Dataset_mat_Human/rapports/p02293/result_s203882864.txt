================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
EPS = 1e-4

#外積
def OuterProduct(one, two):
	tmp = one.conjugate() * two
	return tmp.imag

#内積
def InnerProduct(one, two):
	tmp = one.conjugate() * two
	return tmp.real

def solve(a, b, c, d):
	if abs(OuterProduct(b-a, d-c)) <= EPS:
		return 2
	elif abs(InnerProduct(b-a, d-c)) <= EPS:
		return 1
	else:
		return 0

n = int(input())
for _ in range(n):
	pp = list(map(int, input().split()))
	p = [complex(pp[i], pp[i+1]) for i in range(0, 8, 2)]
	print(solve(p[0], p[1], p[2], p[3]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'EPS' (ID: 82793)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6550729419104755e-05
    2. ' ' → logprob: -10.500036239624023
    3. '0' → logprob: -11.750036239624023
    4. '`' → logprob: -14.875036239624023
    5. '```' → logprob: -15.500036239624023
    6. '2' → logprob: -15.625036239624023
    7. '   ' → logprob: -15.875036239624023
    8. '5' → logprob: -16.875036239624023
    9. '10' → logprob: -17.250036239624023
    10. '3' → logprob: -17.625036239624023

Token 4: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.31816038489341736
    2. '0' → logprob: -1.3181604146957397
    3. '.' → logprob: -6.193160533905029
    4. 'E' → logprob: -6.568160533905029
    5. '2' → logprob: -7.443160533905029
    6. '+' → logprob: -7.943160533905029
    7. '*' → logprob: -9.443160057067871
    8. '```' → logprob: -9.568160057067871
    9. '/' → logprob: -9.818160057067871
    10. '-' → logprob: -9.943160057067871

Token 5: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00015205175441224128
    2. '06' → logprob: -9.000151634216309
    3. '05' → logprob: -11.625151634216309
    4. '```' → logprob: -11.875151634216309
    5. '−' → logprob: -12.750151634216309
    6. '08' → logprob: -12.750151634216309
    7. '07' → logprob: -12.875151634216309
    8. '04' → logprob: -13.750151634216309
    9. '6' → logprob: -14.125151634216309
    10. ' -' → logprob: -14.375151634216309

Token 6: '4' (ID: 19)
  Prédit: '07'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '07' → logprob: -0.9299614429473877
    2. '08' → logprob: -1.0549614429473877
    3. '09' → logprob: -2.5549614429473877
    4. '7' → logprob: -2.5549614429473877
    5. '12' → logprob: -3.6799614429473877
    6. '10' → logprob: -3.8049614429473877
    7. '06' → logprob: -3.9299614429473877
    8. '8' → logprob: -4.054961204528809
    9. '05' → logprob: -4.679961204528809
    10. '9' → logprob: -5.054961204528809

Token 7: '

' (ID: 279)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16059453785419464
    2. '\' → logprob: -2.9105944633483887
    3. '\n' → logprob: -3.6605944633483887
    4. ',' → logprob: -4.035594463348389
    5. '+' → logprob: -4.160594463348389
    6. '_' → logprob: -4.785594463348389
    7. '' → logprob: -5.160594463348389
    8. '=' → logprob: -5.535594463348389
    9. '```' → logprob: -6.160594463348389
    10. '**' → logprob: -6.160594463348389

Token 8: '#' (ID: 2)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5284770131111145
    2. '\n' → logprob: -1.7784769535064697
    3. '\' → logprob: -2.7784769535064697
    4. ',' → logprob: -2.7784769535064697
    5. '=' → logprob: -3.4034769535064697
    6. '+' → logprob: -3.9034769535064697
    7. '```' → logprob: -4.278477191925049
    8. '_' → logprob: -4.778477191925049
    9. '' → logprob: -4.903477191925049
    10. '**' → logprob: -5.028477191925049

Token 9: '外' (ID: 10727)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.670473337173462
    2. ' import' → logprob: -1.670473337173462
    3. ' ' → logprob: -2.045473337173462
    4. ' def' → logprob: -2.920473337173462
    5. 'def' → logprob: -3.045473337173462
    6. ' T' → logprob: -3.545473337173462
    7. ' loss' → logprob: -3.670473337173462
    8. ' a' → logprob: -3.795473337173462
    9. ' max' → logprob: -4.295473098754883
    10. 'x' → logprob: -4.295473098754883

Token 10: '積' (ID: 91483)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9222169518470764
    2. '部' → logprob: -1.7972168922424316
    3. '=' → logprob: -2.0472168922424316
    4. ')' → logprob: -2.7972168922424316
    5. '参' → logprob: -3.7972168922424316
    6. '接' → logprob: -3.9222168922424316
    7. '\xe6\x8c' → logprob: -4.172216892242432
    8. '\xe5\xb1' → logprob: -4.297216892242432
    9. ' =' → logprob: -4.422216892242432
    10. '层' → logprob: -4.422216892242432

Token 11: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6158055663108826
    2. 'def' → logprob: -1.2408056259155273
    3. '=' → logprob: -2.6158056259155273
    4. '(' → logprob: -4.365805625915527
    5. '\' → logprob: -4.365805625915527
    6. ' def' → logprob: -4.490805625915527
    7. 'v' → logprob: -4.490805625915527
    8. '#' → logprob: -5.115805625915527
    9. ' ' → logprob: -5.115805625915527
    10. 'n' → logprob: -5.115805625915527

Token 12: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6579856872558594
    2. ' =' → logprob: -1.1579856872558594
    3. ' def' → logprob: -3.1579856872558594
    4. 'a' → logprob: -3.4079856872558594
    5. 'v' → logprob: -3.7829856872558594
    6. '=' → logprob: -4.157985687255859
    7. 'np' → logprob: -4.782985687255859
    8. '\' → logprob: -4.907985687255859
    9. '_' → logprob: -5.032985687255859
    10. 'n' → logprob: -5.407985687255859

Token 13: ' Outer' (ID: 102576)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.007877390831708908
    2. ' outer' → logprob: -4.882877349853516
    3. 'cross' → logprob: -8.757877349853516
    4. ' ' → logprob: -9.632877349853516
    5. ' vector' → logprob: -10.257877349853516
    6. '_cross' → logprob: -12.757877349853516
    7. 'outer' → logprob: -13.132877349853516
    8. ' wedge' → logprob: -13.507877349853516
    9. ' 外' → logprob: -13.882877349853516
    10. ' np' → logprob: -14.132877349853516

Token 14: 'Product' (ID: 4532)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7622843384742737
    2. '_' → logprob: -1.012284278869629
    3. 'Product' → logprob: -2.887284278869629
    4. '_product' → logprob: -2.887284278869629
    5. '_Product' → logprob: -3.262284278869629
    6. ' (' → logprob: -4.637284278869629
    7. '_Vector' → logprob: -6.262284278869629
    8. ' _' → logprob: -6.512284278869629
    9. '(_' → logprob: -6.637284278869629
    10. '_vector' → logprob: -7.012284278869629

Token 15: '(one' (ID: 92717)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008983621373772621
    2. ' (' → logprob: -7.375898361206055
    3. '(x' → logprob: -9.000898361206055
    4. '(a' → logprob: -9.500898361206055
    5. '(A' → logprob: -11.875898361206055
    6. '():' → logprob: -12.125898361206055
    7. '_' → logprob: -12.250898361206055
    8. '(p' → logprob: -12.625898361206055
    9. '()' → logprob: -12.750898361206055
    10. '(lhs' → logprob: -13.000898361206055

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09621412307024002
    2. '):' → logprob: -3.2212140560150146
    3. '_vector' → logprob: -3.5962140560150146
    4. ' ,' → logprob: -4.846214294433594
    5. '_vec' → logprob: -5.471214294433594
    6. 'Vector' → logprob: -5.471214294433594
    7. 'vector' → logprob: -6.596214294433594
    8. ',v' → logprob: -7.096214294433594
    9. '_' → logprob: -7.346214294433594
    10. 's' → logprob: -7.346214294433594

Token 17: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.38877248764038086
    2. 'two' → logprob: -1.6387724876403809
    3. 'another' → logprob: -3.263772487640381
    4. 'other' → logprob: -3.263772487640381
    5. ' another' → logprob: -3.513772487640381
    6. ' other' → logprob: -4.013772487640381
    7. ' ' → logprob: -6.013772487640381
    8. '   ' → logprob: -7.888772487640381
    9. '  ' → logprob: -8.263772964477539
    10. 'second' → logprob: -9.888772964477539

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00031627772841602564
    2. ')' → logprob: -8.125316619873047
    3. ')：' → logprob: -11.625316619873047
    4. ' ):' → logprob: -12.250316619873047
    5. ':' → logprob: -12.750316619873047
    6. ',' → logprob: -13.250316619873047
    7. ' ' → logprob: -14.750316619873047
    8. '):
' → logprob: -14.875316619873047
    9. '   ' → logprob: -15.000316619873047
    10. '）：' → logprob: -15.125316619873047

Token 19: '	tmp' (ID: 44117)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43965789675712585
    2. ':' → logprob: -1.4396579265594482
    3. '   ' → logprob: -2.4396579265594482
    4. '):' → logprob: -3.6896579265594482
    5. '():' → logprob: -5.939657688140869
    6. ' (' → logprob: -6.814657688140869
    7. '(
' → logprob: -7.439657688140869
    8. ' :' → logprob: -7.689657688140869
    9. ',' → logprob: -8.064658164978027
    10. ' ' → logprob: -8.314658164978027

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03911576047539711
    2. '=' → logprob: -3.5391156673431396
    3. '[' → logprob: -5.664115905761719
    4. '[:]' → logprob: -7.039115905761719
    5. '	' → logprob: -7.164115905761719
    6. ' ' → logprob: -7.164115905761719
    7. '_' → logprob: -7.164115905761719
    8. '.' → logprob: -7.164115905761719
    9. '[]' → logprob: -7.914115905761719
    10. 'space' → logprob: -8.414115905761719

Token 21: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.4835476577281952
    2. 'one' → logprob: -1.1085476875305176
    3. '0' → logprob: -3.8585476875305176
    4. '[]' → logprob: -4.108547687530518
    5. '[' → logprob: -5.358547687530518
    6. ' ' → logprob: -5.733547687530518
    7. ' [' → logprob: -5.858547687530518
    8. '1' → logprob: -6.108547687530518
    9. ' []' → logprob: -6.608547687530518
    10. 'np' → logprob: -7.983547687530518

Token 22: '.con' (ID: 5162)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9528857469558716
    2. '.' → logprob: -0.9528857469558716
    3. '[' → logprob: -1.9528857469558716
    4. ' *' → logprob: -2.702885627746582
    5. '.T' → logprob: -4.577885627746582
    6. '[:,' → logprob: -5.702885627746582
    7. '[:]' → logprob: -6.452885627746582
    8. '.reshape' → logprob: -6.827885627746582
    9. '.shape' → logprob: -7.827885627746582
    10. ' ' → logprob: -7.952885627746582

Token 23: 'jug' (ID: 63159)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3677995502948761
    2. 't' → logprob: -1.4927995204925537
    3. 'jug' → logprob: -2.4927995204925537
    4. '*t' → logprob: -9.242799758911133
    5. '*j' → logprob: -9.242799758911133
    6. 'tent' → logprob: -11.242799758911133
    7. 'v' → logprob: -11.492799758911133
    8. '[j' → logprob: -11.492799758911133
    9. 'tain' → logprob: -11.492799758911133
    10. 'T' → logprob: -11.492799758911133

Token 24: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.00014811802248004824
    2. 'a' → logprob: -10.000147819519043
    3. 't' → logprob: -10.375147819519043
    4. '().' → logprob: -11.000147819519043
    5. '```' → logprob: -11.000147819519043
    6. 'T' → logprob: -11.250147819519043
    7. '()' → logprob: -11.375147819519043
    8. '1' → logprob: -12.750147819519043
    9. 'ATE' → logprob: -13.250147819519043
    10. '2' → logprob: -14.375147819519043

Token 25: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2076319009065628
    2. '()' → logprob: -1.7076319456100464
    3. '.T' → logprob: -5.832632064819336
    4. '()[' → logprob: -6.832632064819336
    5. '()*' → logprob: -6.957632064819336
    6. 'T' → logprob: -7.332632064819336
    7. '*' → logprob: -8.957632064819336
    8. 'transpose' → logprob: -9.207632064819336
    9. '[' → logprob: -9.332632064819336
    10. ' ()' → logprob: -9.707632064819336

Token 26: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7090334892272949
    2. '.T' → logprob: -0.9590334892272949
    3. '[' → logprob: -2.584033489227295
    4. '.' → logprob: -3.959033489227295
    5. '.transpose' → logprob: -4.834033489227295
    6. ' *' → logprob: -5.209033489227295
    7. 'T' → logprob: -5.709033489227295
    8. '[:,' → logprob: -6.334033489227295
    9. '()' → logprob: -6.334033489227295
    10. '.reshape' → logprob: -6.459033489227295

Token 27: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.062017086893320084
    2. 'two' → logprob: -2.8120172023773193
    3. '(two' → logprob: -10.312017440795898
    4. '	t' → logprob: -11.937017440795898
    5. ' ' → logprob: -12.437017440795898
    6. 'Two' → logprob: -13.312017440795898
    7. '.two' → logprob: -14.062017440795898
    8. '_two' → logprob: -14.437017440795898
    9. ' one' → logprob: -14.812017440795898
    10. '\t' → logprob: -14.937017440795898

Token 28: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9603841304779053
    2. '<|end|>' → logprob: -1.2103841304779053
    3. '[' → logprob: -2.0853841304779053
    4. ')' → logprob: -3.4603841304779053
    5. '.transpose' → logprob: -3.5853841304779053
    6. ' ' → logprob: -3.8353841304779053
    7. '	return' → logprob: -4.085384368896484
    8. '<|end|>' → logprob: -4.085384368896484
    9. '**' → logprob: -4.460384368896484
    10. ',' → logprob: -4.960384368896484

Token 29: '	return' (ID: 1393)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6986057162284851
    2. '[' → logprob: -1.5736057758331299
    3. '	return' → logprob: -2.44860577583313
    4. ' ' → logprob: -3.19860577583313
    5. ')' → logprob: -3.32360577583313
    6. 'return' → logprob: -3.69860577583313
    7. '<|end|>' → logprob: -3.82360577583313
    8. '(' → logprob: -4.698605537414551
    9. '[:]' → logprob: -4.948605537414551
    10. ',' → logprob: -5.073605537414551

Token 30: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.6331658363342285
    2. ' tmp' → logprob: -0.7581658363342285
    3. '(tmp' → logprob: -8.50816535949707
    4. '	tmp' → logprob: -8.63316535949707
    5. 'np' → logprob: -9.75816535949707
    6. ' np' → logprob: -10.00816535949707
    7. '[tmp' → logprob: -10.88316535949707
    8. '/tmp' → logprob: -11.00816535949707
    9. 'sum' → logprob: -11.63316535949707
    10. ',tmp' → logprob: -12.00816535949707

Token 31: '.imag' (ID: 171484)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.36835381388664246
    2. '<|end|>' → logprob: -1.6183538436889648
    3. '[' → logprob: -2.993353843688965
    4. '
' → logprob: -3.493353843688965
    5. ' ' → logprob: -4.118353843688965
    6. '*' → logprob: -5.493353843688965
    7. '<|end|>' → logprob: -6.118353843688965
    8. ',' → logprob: -6.368353843688965
    9. '\n' → logprob: -7.243353843688965
    10. ')' → logprob: -7.493353843688965

Token 32: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: '内' (ID: 9227)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '積' (ID: 91483)
  Prédit: '積'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '積' → logprob: -0.0005000127712264657
    2. '积' → logprob: -7.625500202178955
    3. '#' → logprob: -12.250499725341797
    4. 'product' → logprob: -13.250499725341797
    5. ' \xe7\xa9' → logprob: -13.750499725341797
    6. '_product' → logprob: -14.625499725341797
    7. 'def' → logprob: -14.625499725341797
    8. '径' → logprob: -14.875499725341797
    9. '側' → logprob: -14.875499725341797
    10. '訳' → logprob: -15.000499725341797

Token 36: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0022034284193068743
    2. ' def' → logprob: -6.502203464508057
    3. '
' → logprob: -8.502202987670898
    4. '<|end|>' → logprob: -9.002202987670898
    5. '(' → logprob: -9.252202987670898
    6. '```' → logprob: -9.752202987670898
    7. '\' → logprob: -10.377202987670898
    8. ':def' → logprob: -10.752202987670898
    9. '*' → logprob: -10.877202987670898
    10. '(def' → logprob: -11.127202987670898

Token 37: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.718606891809031e-05
    2. ' def' → logprob: -9.625066757202148
    3. 'import' → logprob: -14.500066757202148
    4. '```' → logprob: -14.625066757202148
    5. '	def' → logprob: -17.75006675720215
    6. ':def' → logprob: -17.87506675720215
    7. '\' → logprob: -19.62506675720215
    8. '``' → logprob: -19.87506675720215
    9. 'from' → logprob: -20.00006675720215
    10. '(def' → logprob: -20.12506675720215

Token 38: ' Inner' (ID: 51587)
  Prédit: ' Inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Inner' → logprob: -0.013797338120639324
    2. ' Dot' → logprob: -4.513797283172607
    3. 'Inner' → logprob: -6.388797283172607
    4. ' inner' → logprob: -7.763797283172607
    5. ' dot' → logprob: -8.138797760009766
    6. ' Complex' → logprob: -9.513797760009766
    7. 'Dot' → logprob: -10.013797760009766
    8. ' Abs' → logprob: -10.013797760009766
    9. ' np' → logprob: -10.138797760009766
    10. ' Outer' → logprob: -10.763797760009766

Token 39: 'Product' (ID: 4532)
  Prédit: 'Product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Product' → logprob: -0.1610400229692459
    2. '(one' → logprob: -1.9110400676727295
    3. '(two' → logprob: -8.036040306091309
    4. '(' → logprob: -8.536040306091309
    5. '_product' → logprob: -9.286040306091309
    6. ' Product' → logprob: -9.286040306091309
    7. 'product' → logprob: -10.786040306091309
    8. ' product' → logprob: -10.911040306091309
    9. ' one' → logprob: -10.911040306091309
    10. '_Product' → logprob: -11.411040306091309

Token 40: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -8.7689099018462e-05
    2. '(' → logprob: -9.50008773803711
    3. '(on' → logprob: -11.87508773803711
    4. '(two' → logprob: -12.25008773803711
    5. ' (' → logprob: -14.37508773803711
    6. ' one' → logprob: -15.25008773803711
    7. '(a' → logprob: -16.25008773803711
    8. '```' → logprob: -17.37508773803711
    9. '(inner' → logprob: -17.87508773803711
    10. '(o' → logprob: -18.25008773803711

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006330899195745587
    2. '.con' → logprob: -8.250633239746094
    3. ' ,' → logprob: -8.625633239746094
    4. ',t' → logprob: -9.500633239746094
    5. '.' → logprob: -10.500633239746094
    6. 'con' → logprob: -11.250633239746094
    7. '*,' → logprob: -11.500633239746094
    8. ' ' → logprob: -11.625633239746094
    9. ')' → logprob: -12.125633239746094
    10. '，' → logprob: -12.250633239746094

Token 42: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.22725866734981537
    2. 'two' → logprob: -1.6022586822509766
    3. 'con' → logprob: -6.602258682250977
    4. ' one' → logprob: -8.352258682250977
    5. ' ' → logprob: -9.727258682250977
    6. ',' → logprob: -10.102258682250977
    7. 'one' → logprob: -10.477258682250977
    8. '   ' → logprob: -10.852258682250977
    9. ',t' → logprob: -11.227258682250977
    10. ' conjug' → logprob: -11.227258682250977

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007474447484128177
    2. '):
' → logprob: -7.5007476806640625
    3. ')' → logprob: -9.500747680664062
    4. ',' → logprob: -9.750747680664062
    5. '):
' → logprob: -10.625747680664062
    6. ' ):' → logprob: -11.250747680664062
    7. ':' → logprob: -11.375747680664062
    8. '   ' → logprob: -12.875747680664062
    9. '(' → logprob: -13.500747680664062
    10. ')：' → logprob: -13.625747680664062

Token 44: '	tmp' (ID: 44117)
  Prédit: '	return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -0.2885138988494873
    2. 'return' → logprob: -2.1635138988494873
    3. '   ' → logprob: -2.2885138988494873
    4. ' return' → logprob: -3.5385138988494873
    5. ':return' → logprob: -5.538514137268066
    6. '	tmp' → logprob: -7.788514137268066
    7. ':' → logprob: -8.288514137268066
    8. '```' → logprob: -8.538514137268066
    9. '	' → logprob: -9.663514137268066
    10. '	ret' → logprob: -10.288514137268066

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043010830879211426
    2. '=' → logprob: -3.168010711669922
    3. '.' → logprob: -12.293010711669922
    4. '.=' → logprob: -13.043010711669922
    5. '＝' → logprob: -13.293010711669922
    6. ',' → logprob: -14.418010711669922
    7. ' ' → logprob: -14.418010711669922
    8. ' .=' → logprob: -15.043010711669922
    9. 'import' → logprob: -15.918010711669922
    10. ' +=' → logprob: -15.918010711669922

Token 46: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.015735192224383354
    2. '(one' → logprob: -4.390735149383545
    3. ' one' → logprob: -6.140735149383545
    4. '(' → logprob: -7.515735149383545
    5. 'sum' → logprob: -8.265735626220703
    6. 'abs' → logprob: -9.140735626220703
    7. ' (' → logprob: -10.015735626220703
    8. 'two' → logprob: -11.015735626220703
    9. '((' → logprob: -11.140735626220703
    10. '(sum' → logprob: -11.265735626220703

Token 47: '.con' (ID: 5162)
  Prédit: '.con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.con' → logprob: -0.006785946898162365
    2. '.' → logprob: -5.006785869598389
    3. 'con' → logprob: -10.506786346435547
    4. '*' → logprob: -10.506786346435547
    5. '.dot' → logprob: -12.381786346435547
    6. '*.' → logprob: -12.381786346435547
    7. ' .' → logprob: -13.006786346435547
    8. '	con' → logprob: -13.756786346435547
    9. '```' → logprob: -14.631786346435547
    10. '.*' → logprob: -14.631786346435547

Token 48: 'jug' (ID: 63159)
  Prédit: 'jug'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jug' → logprob: -0.00011486753646750003
    2. 'j' → logprob: -9.250114440917969
    3. 'ug' → logprob: -11.125114440917969
    4. 'ju' → logprob: -12.750114440917969
    5. 'con' → logprob: -14.375114440917969
    6. 't' → logprob: -16.00011444091797
    7. 'Jug' → logprob: -16.37511444091797
    8. ' jug' → logprob: -16.87511444091797
    9. 'uj' → logprob: -17.62511444091797
    10. 's' → logprob: -17.75011444091797

Token 49: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -4.251091377227567e-05
    2. 'con' → logprob: -10.250042915344238
    3. '.con' → logprob: -13.125042915344238
    4. '```' → logprob: -14.125042915344238
    5. ' ' → logprob: -14.250042915344238
    6. 'ated' → logprob: -14.750042915344238
    7. ' conjug' → logprob: -14.750042915344238
    8. '_con' → logprob: -14.875042915344238
    9. '   ' → logprob: -15.000042915344238
    10. '**' → logprob: -15.375042915344238

Token 50: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001630909275263548
    2. '()*' → logprob: -6.626630783081055
    3. '*' → logprob: -8.126630783081055
    4. '(' → logprob: -11.876630783081055
    5. ' ()' → logprob: -13.876630783081055
    6. '()[' → logprob: -15.126630783081055
    7. ')' → logprob: -15.126630783081055
    8. ' *' → logprob: -15.751630783081055
    9. '```' → logprob: -15.876630783081055
    10. '()

' → logprob: -16.376630783081055

Token 51: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.055393561720848083
    2. ' *' → logprob: -2.9303934574127197
    3. '()' → logprob: -8.18039321899414
    4. '[' → logprob: -9.30539321899414
    5. '@' → logprob: -10.55539321899414
    6. ' ' → logprob: -10.68039321899414
    7. '()*' → logprob: -10.80539321899414
    8. '	' → logprob: -11.30539321899414
    9. '＊' → logprob: -11.55539321899414
    10. '.' → logprob: -11.80539321899414

Token 52: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.16022931039333344
    2. ' two' → logprob: -1.9102293252944946
    3. '(two' → logprob: -12.910229682922363
    4. '	t' → logprob: -14.285229682922363
    5. '   ' → logprob: -14.660229682922363
    6. ' ' → logprob: -14.910229682922363
    7. '	' → logprob: -15.160229682922363
    8. 'tw' → logprob: -15.535229682922363
    9. 'one' → logprob: -15.785229682922363
    10. '.two' → logprob: -15.910229682922363

Token 53: '
' (ID: 198)
  Prédit: '	return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	return' → logprob: -0.5500029921531677
    2. 'return' → logprob: -1.3000030517578125
    3. '	tmp' → logprob: -2.8000030517578125
    4. ' return' → logprob: -3.4250030517578125
    5. '.return' → logprob: -3.8000030517578125
    6. '.sum' → logprob: -4.3000030517578125
    7. 'tmp' → logprob: -4.4250030517578125
    8. '   ' → logprob: -5.8000030517578125
    9. '.real' → logprob: -6.1750030517578125
    10. '	sum' → logprob: -6.9250030517578125

Token 54: '	return' (ID: 1393)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24211734533309937
    2. '	return' → logprob: -1.7421174049377441
    3. ' return' → logprob: -3.992117404937744
    4. '   ' → logprob: -4.617117404937744
    5. 'tmp' → logprob: -5.242117404937744
    6. '	tmp' → logprob: -5.242117404937744
    7. '.return' → logprob: -7.742117404937744
    8. ' ' → logprob: -9.367116928100586
    9. ':return' → logprob: -9.492116928100586
    10. 'import' → logprob: -10.117116928100586

Token 55: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.1625005304813385
    2. ' tmp' → logprob: -1.9125005006790161
    3. '(tmp' → logprob: -6.287500381469727
    4. '	tmp' → logprob: -7.912500381469727
    5. '[tmp' → logprob: -11.037500381469727
    6. ',tmp' → logprob: -11.412500381469727
    7. '/tmp' → logprob: -12.037500381469727
    8. 'real' → logprob: -12.662500381469727
    9. 'abs' → logprob: -12.662500381469727
    10. '$tmp' → logprob: -12.787500381469727

Token 56: '.real' (ID: 63800)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42478805780410767
    2. '<|end|>' → logprob: -1.674787998199463
    3. '_' → logprob: -2.799787998199463
    4. 'def' → logprob: -3.049787998199463
    5. '#' → logprob: -4.049787998199463
    6. '\' → logprob: -4.674787998199463
    7. ' 
' → logprob: -5.674787998199463
    8. '
' → logprob: -5.799787998199463
    9. ' def' → logprob: -5.799787998199463
    10. '(' → logprob: -5.924787998199463

Token 59: ' solve' (ID: 17722)
  Prédit: ' Outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Outer' → logprob: -0.9443682432174683
    2. ' Gram' → logprob: -1.6943682432174683
    3. ' Inner' → logprob: -2.194368362426758
    4. ' Vector' → logprob: -3.319368362426758
    5. ' Normalize' → logprob: -3.319368362426758
    6. ' Calculate' → logprob: -3.569368362426758
    7. ' Norm' → logprob: -3.694368362426758
    8. ' Multiply' → logprob: -4.069368362426758
    9. ' Matrix' → logprob: -4.444368362426758
    10. ' Energy' → logprob: -4.569368362426758

Token 60: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09551604837179184
    2. '(A' → logprob: -2.7205159664154053
    3. '_' → logprob: -4.470516204833984
    4. '()' → logprob: -6.470516204833984
    5. '(x' → logprob: -6.470516204833984
    6. '(a' → logprob: -6.595516204833984
    7. '_linear' → logprob: -6.720516204833984
    8. ' (' → logprob: -7.595516204833984
    9. '(Q' → logprob: -7.595516204833984
    10. '(S' → logprob: -7.595516204833984

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07247380912303925
    2. '):' → logprob: -2.8224737644195557
    3. ')' → logprob: -5.322474002838135
    4. ',a' → logprob: -6.447474002838135
    5. ',b' → logprob: -6.697474002838135
    6. 's' → logprob: -8.072473526000977
    7. ' ,' → logprob: -8.322473526000977
    8. 'a' → logprob: -8.447473526000977
    9. ',s' → logprob: -8.572473526000977
    10. ',n' → logprob: -8.572473526000977

Token 62: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.030728470534086227
    2. ' b' → logprob: -3.780728578567505
    3. 'x' → logprob: -5.280728340148926
    4. 'a' → logprob: -7.655728340148926
    5. ' x' → logprob: -8.280728340148926
    6. ')' → logprob: -8.780728340148926
    7. 'n' → logprob: -8.905728340148926
    8. 'psi' → logprob: -8.905728340148926
    9. 'u' → logprob: -9.280728340148926
    10. 'A' → logprob: -9.343228340148926

Token 63: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03175150603055954
    2. ',' → logprob: -3.5317513942718506
    3. ')' → logprob: -6.28175163269043
    4. '):
' → logprob: -9.78175163269043
    5. ' ):' → logprob: -11.40675163269043
    6. '):
' → logprob: -11.78175163269043
    7. '   ' → logprob: -12.15675163269043
    8. ',a' → logprob: -12.28175163269043
    9. '[]):' → logprob: -12.53175163269043
    10. ')：' → logprob: -12.65675163269043

Token 64: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5813151597976685
    2. 'x' → logprob: -1.3313151597976685
    3. ' c' → logprob: -2.706315040588379
    4. ' x' → logprob: -3.331315040588379
    5. 'eps' → logprob: -4.706315040588379
    6. 'EPS' → logprob: -4.956315040588379
    7. 'n' → logprob: -5.081315040588379
    8. 'N' → logprob: -5.456315040588379
    9. ' eps' → logprob: -5.581315040588379
    10. 't' → logprob: -5.831315040588379

Token 65: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009836840443313122
    2. ',' → logprob: -4.884836673736572
    3. ')' → logprob: -6.134836673736572
    4. ' ):' → logprob: -11.38483715057373
    5. '):
' → logprob: -11.88483715057373
    6. ':' → logprob: -12.13483715057373
    7. ')：' → logprob: -12.13483715057373
    8. '=' → logprob: -12.88483715057373
    9. '):
' → logprob: -13.00983715057373
    10. '_' → logprob: -13.13483715057373

Token 66: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3005554676055908
    2. ' d' → logprob: -2.050555467605591
    3. 'x' → logprob: -2.550555467605591
    4. ' x' → logprob: -4.300555229187012
    5. 't' → logprob: -5.800555229187012
    6. 'theta' → logprob: -5.988055229187012
    7. 'EPS' → logprob: -6.425555229187012
    8. 'A' → logprob: -6.425555229187012
    9. ' eps' → logprob: -6.613055229187012
    10. 'n' → logprob: -6.675555229187012

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008803537115454674
    2. ',' → logprob: -5.133803367614746
    3. ')' → logprob: -5.883803367614746
    4. ' ):' → logprob: -10.508803367614746
    5. ':' → logprob: -11.383803367614746
    6. '):
' → logprob: -11.508803367614746
    7. '   ' → logprob: -11.758803367614746
    8. ')：' → logprob: -11.883803367614746
    9. ' ,' → logprob: -13.258803367614746
    10. ' ' → logprob: -13.258803367614746

Token 68: '	if' (ID: 1224)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03923027589917183
    2. '    
' → logprob: -4.7892303466796875
    3. '```' → logprob: -5.0392303466796875
    4. ':' → logprob: -5.1642303466796875
    5. '    ' → logprob: -5.6642303466796875
    6. '	n' → logprob: -6.9142303466796875
    7. ',' → logprob: -7.2892303466796875
    8. ' ' → logprob: -7.4142303466796875
    9. '	if' → logprob: -7.4142303466796875
    10. ' if' → logprob: -7.4142303466796875

Token 69: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.08297666907310486
    2. ' a' → logprob: -3.3329765796661377
    3. 'abs' → logprob: -3.3329765796661377
    4. '(abs' → logprob: -5.832976818084717
    5. ' (' → logprob: -6.332976818084717
    6. ' ' → logprob: -6.457976818084717
    7. 'a' → logprob: -6.582976818084717
    8. '(' → logprob: -8.832976341247559
    9. ' max' → logprob: -9.457976341247559
    10. ' b' → logprob: -10.082976341247559

Token 70: '(' (ID: 7)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0027014471124857664
    2. '(' → logprob: -6.627701282501221
    3. '(d' → logprob: -7.502701282501221
    4. '(c' → logprob: -8.252701759338379
    5. '(b' → logprob: -8.377701759338379
    6. '((' → logprob: -8.627701759338379
    7. '(abs' → logprob: -9.127701759338379
    8. '(s' → logprob: -10.502701759338379
    9. 'a' → logprob: -12.127701759338379
    10. '(one' → logprob: -13.127701759338379

Token 71: 'Outer' (ID: 58518)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008648133836686611
    2. ' a' → logprob: -4.883647918701172
    3. 'c' → logprob: -7.883647918701172
    4. '(a' → logprob: -8.258647918701172
    5. '	a' → logprob: -8.758647918701172
    6. 'b' → logprob: -9.633647918701172
    7. 'Inner' → logprob: -10.133647918701172
    8. 'd' → logprob: -10.633647918701172
    9. ' c' → logprob: -10.883647918701172
    10. 'solve' → logprob: -11.008647918701172

Token 72: 'Product' (ID: 4532)
  Prédit: 'Product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Product' → logprob: -5.512236498361744e-07
    2. '(Product' → logprob: -15.250000953674316
    3. ' Product' → logprob: -15.625000953674316
    4. '	Product' → logprob: -16.25
    5. '<Product' → logprob: -17.375
    6. ' product' → logprob: -19.0
    7. 'Pro' → logprob: -19.625
    8. '_Product' → logprob: -19.875
    9. 'product' → logprob: -20.0
    10. '(' → logprob: -20.125

Token 73: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0024361892137676477
    2. '(b' → logprob: -6.37743616104126
    3. '(c' → logprob: -8.252436637878418
    4. '(d' → logprob: -8.502436637878418
    5. '(' → logprob: -8.627436637878418
    6. ')(' → logprob: -10.377436637878418
    7. '(one' → logprob: -10.502436637878418
    8. '((' → logprob: -11.502436637878418
    9. ' (' → logprob: -11.877436637878418
    10. ')' → logprob: -12.002436637878418

Token 74: '-a' (ID: 8575)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017724912613630295
    2. ',c' → logprob: -4.767724990844727
    3. ' ,' → logprob: -6.267724990844727
    4. ',a' → logprob: -6.267724990844727
    5. ' -' → logprob: -6.392724990844727
    6. ',d' → logprob: -6.642724990844727
    7. '-' → logprob: -7.017724990844727
    8. ',b' → logprob: -7.392724990844727
    9. '	' → logprob: -8.517724990844727
    10. 'a' → logprob: -9.642724990844727

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004660572856664658
    2. ' ,' → logprob: -5.504660606384277
    3. ',c' → logprob: -8.004660606384277
    4. ',b' → logprob: -9.129660606384277
    5. ',d' → logprob: -9.879660606384277
    6. ')' → logprob: -10.879660606384277
    7. '	' → logprob: -11.254660606384277
    8. 'd' → logprob: -11.379660606384277
    9. 'c' → logprob: -11.754660606384277
    10. '	c' → logprob: -12.254660606384277

Token 76: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5918563008308411
    2. ' d' → logprob: -0.8418563008308411
    3. '	d' → logprob: -5.216856479644775
    4. 'c' → logprob: -5.341856479644775
    5. ' c' → logprob: -5.591856479644775
    6. ' ' → logprob: -7.904356479644775
    7. '  ' → logprob: -8.404356002807617
    8. 'a' → logprob: -8.529356002807617
    9. 'b' → logprob: -8.591856002807617
    10. '	c' → logprob: -8.654356002807617

Token 77: '-c' (ID: 3452)
  Prédit: '-c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.1294858455657959
    2. '-' → logprob: -2.254485845565796
    3. ' -' → logprob: -4.629486083984375
    4. '-b' → logprob: -5.129486083984375
    5. '-a' → logprob: -7.254486083984375
    6. '-d' → logprob: -10.629486083984375
    7. ')' → logprob: -11.379486083984375
    8. '-m' → logprob: -11.504486083984375
    9. '-e' → logprob: -11.504486083984375
    10. '	c' → logprob: -11.504486083984375

Token 78: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005246769287623465
    2. ' )' → logprob: -7.625524520874023
    3. ')<' → logprob: -10.500524520874023
    4. '))' → logprob: -12.875524520874023
    5. ')>' → logprob: -13.125524520874023
    6. '	' → logprob: -13.875524520874023
    7. '）' → logprob: -14.125524520874023
    8. ')<=' → logprob: -14.375524520874023
    9. ' ' → logprob: -14.500524520874023
    10. '   ' → logprob: -15.000524520874023

Token 79: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.41274139285087585
    2. '<' → logprob: -1.2877414226531982
    3. ')' → logprob: -3.2877414226531982
    4. '<E' → logprob: -3.9127414226531982
    5. ' >' → logprob: -6.662741184234619
    6. '()' → logprob: -6.662741184234619
    7. '()<' → logprob: -6.912741184234619
    8. '>' → logprob: -7.287741184234619
    9. ' ' → logprob: -8.287741661071777
    10. ' <=' → logprob: -8.912741661071777

Token 80: ' EPS' (ID: 66979)
  Prédit: ' EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EPS' → logprob: -0.008649437688291073
    2. 'EPS' → logprob: -4.7586493492126465
    3. ' ' → logprob: -10.508649826049805
    4. ' EP' → logprob: -12.258649826049805
    5. ' ' → logprob: -13.383649826049805
    6. ' ESP' → logprob: -15.133649826049805
    7. ' ES' → logprob: -15.258649826049805
    8. 'ES' → logprob: -15.758649826049805
    9. ' EOS' → logprob: -16.133649826049805
    10. '  ' → logprob: -16.133649826049805

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08139470964670181
    2. ' :' → logprob: -2.581394672393799
    3. ':return' → logprob: -6.456394672393799
    4. ' and' → logprob: -7.831394672393799
    5. ':
' → logprob: -8.831395149230957
    6. ' or' → logprob: -8.956395149230957
    7. ' :
' → logprob: -8.956395149230957
    8. ' ' → logprob: -10.706395149230957
    9. '	' → logprob: -10.831395149230957
    10. '	return' → logprob: -10.956395149230957

Token 82: '	' (ID: 197)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5218502879142761
    2. '	' → logprob: -1.521850347518921
    3. ':' → logprob: -2.021850347518921
    4. '	return' → logprob: -3.771850347518921
    5. ' and' → logprob: -4.521850109100342
    6. ':return' → logprob: -5.021850109100342
    7. '   ' → logprob: -5.771850109100342
    8. ' return' → logprob: -5.896850109100342
    9. ':
' → logprob: -6.021850109100342
    10. ',' → logprob: -6.521850109100342

Token 83: '	return' (ID: 1393)
  Prédit: '	return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -1.1053707599639893
    2. '	' → logprob: -1.3553707599639893
    3. ' return' → logprob: -1.3553707599639893
    4. 'return' → logprob: -2.1053707599639893
    5. '       ' → logprob: -3.7303707599639893
    6. '   ' → logprob: -6.85537052154541
    7. '	   ' → logprob: -7.10537052154541
    8. ' ' → logprob: -7.23037052154541
    9. ' ' → logprob: -7.35537052154541
    10. ':return' → logprob: -7.35537052154541

Token 84: ' ' (ID: 220)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.22550338506698608
    2. 'None' → logprob: -1.6005034446716309
    3. ' ' → logprob: -9.850502967834473
    4. '	' → logprob: -11.100502967834473
    5. '_None' → logprob: -12.600502967834473
    6. '  ' → logprob: -12.725502967834473
    7. '(None' → logprob: -13.100502967834473
    8. 'False' → logprob: -13.225502967834473
    9. '-' → logprob: -13.475502967834473
    10. ' ' → logprob: -13.600502967834473

Token 85: '2' (ID: 17)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0035184714943170547
    2. 'False' → logprob: -6.128518581390381
    3. ' None' → logprob: -7.253518581390381
    4. '[]' → logprob: -8.753518104553223
    5. 'Inner' → logprob: -9.003518104553223
    6. '0' → logprob: -9.253518104553223
    7. 'float' → logprob: -9.628518104553223
    8. 'b' → logprob: -10.378518104553223
    9. '-' → logprob: -10.628518104553223
    10. '(None' → logprob: -10.628518104553223

Token 86: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7100872993469238
    2. '<|end|>' → logprob: -0.9600872993469238
    3. '
' → logprob: -2.835087299346924
    4. '0' → logprob: -4.335087299346924
    5. '	return' → logprob: -4.585087299346924
    6. ' return' → logprob: -5.210087299346924
    7. '<|end|>' → logprob: -5.210087299346924
    8. '  ' → logprob: -5.335087299346924
    9. '	' → logprob: -5.585087299346924
    10. ':return' → logprob: -5.960087299346924

Token 87: '	elif' (ID: 56165)
  Prédit: '	return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -0.34871917963027954
    2. '	' → logprob: -2.8487191200256348
    3. '<|end|>' → logprob: -2.9737191200256348
    4. ' ' → logprob: -3.0987191200256348
    5. '	if' → logprob: -3.4737191200256348
    6. '	
' → logprob: -3.7237191200256348
    7. '
' → logprob: -3.8487191200256348
    8. '\n' → logprob: -4.348719120025635
    9. '	elif' → logprob: -4.723719120025635
    10. '   ' → logprob: -4.973719120025635

Token 88: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.26878803968429565
    2. 'abs' → logprob: -1.5187880992889404
    3. '(abs' → logprob: -5.018787860870361
    4. ' Outer' → logprob: -5.268787860870361
    5. ' Inner' → logprob: -6.643787860870361
    6. 'Outer' → logprob: -7.393787860870361
    7. ' ' → logprob: -7.393787860870361
    8. 'Inner' → logprob: -7.518787860870361
    9. '	' → logprob: -7.893787860870361
    10. ' (' → logprob: -7.893787860870361

Token 89: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013512482109945267
    2. '((' → logprob: -9.25013542175293
    3. '(E' → logprob: -11.00013542175293
    4. '(inner' → logprob: -12.50013542175293
    5. '<|end|>' → logprob: -12.50013542175293
    6. '(
' → logprob: -13.37513542175293
    7. '(abs' → logprob: -13.37513542175293
    8. '(S' → logprob: -13.50013542175293
    9. ' (' → logprob: -13.50013542175293
    10. '(I' → logprob: -13.62513542175293

Token 90: 'Inner' (ID: 32483)
  Prédit: 'Inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Inner' → logprob: -0.7896367907524109
    2. 'Outer' → logprob: -1.1646368503570557
    3. '(' → logprob: -1.5396368503570557
    4. ' Outer' → logprob: -4.414636611938477
    5. ' Inner' → logprob: -6.289636611938477
    6. ' ' → logprob: -6.789636611938477
    7. 'solve' → logprob: -7.352136611938477
    8. '	' → logprob: -7.602136611938477
    9. ')' → logprob: -7.602136611938477
    10. '  ' → logprob: -7.727136611938477

Token 91: 'Product' (ID: 4532)
  Prédit: 'Product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Product' → logprob: -1.8624639324116288e-06
    2. '	Product' → logprob: -14.000001907348633
    3. ' Product' → logprob: -14.125001907348633
    4. '<Product' → logprob: -16.000001907348633
    5. '(Product' → logprob: -16.750001907348633
    6. ' product' → logprob: -17.250001907348633
    7. 'product' → logprob: -18.250001907348633
    8. '_product' → logprob: -18.375001907348633
    9. '_Product' → logprob: -18.625001907348633
    10. '-' → logprob: -19.125001907348633

Token 92: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0001254693343071267
    2. '(' → logprob: -9.125125885009766
    3. '(d' → logprob: -12.250125885009766
    4. '((' → logprob: -12.500125885009766
    5. ' (' → logprob: -12.875125885009766
    6. ')' → logprob: -13.125125885009766
    7. ')(' → logprob: -13.375125885009766
    8. '	b' → logprob: -14.125125885009766
    9. '(B' → logprob: -15.000125885009766
    10. '(c' → logprob: -15.625125885009766

Token 93: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.0003963569179177284
    2. '-' → logprob: -8.625396728515625
    3. ' -' → logprob: -9.125396728515625
    4. '-c' → logprob: -9.375396728515625
    5. '-а' → logprob: -11.000396728515625
    6. 'a' → logprob: -13.875396728515625
    7. '-b' → logprob: -14.000396728515625
    8. '-A' → logprob: -14.250396728515625
    9. '-acde' → logprob: -14.500396728515625
    10. '-ai' → logprob: -14.750396728515625

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0056201620027422905
    2. ',d' → logprob: -5.380620002746582
    3. ' ,' → logprob: -7.005620002746582
    4. 'd' → logprob: -10.005620002746582
    5. ' d' → logprob: -10.505620002746582
    6. ',c' → logprob: -11.755620002746582
    7. '	d' → logprob: -12.880620002746582
    8. '(d' → logprob: -13.255620002746582
    9. ',b' → logprob: -13.380620002746582
    10. '(),' → logprob: -14.380620002746582

Token 95: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004820514936000109
    2. ' d' → logprob: -5.504820346832275
    3. '	d' → logprob: -7.254820346832275
    4. ' ' → logprob: -10.879820823669434
    5. '   ' → logprob: -12.504820823669434
    6. '  ' → logprob: -12.754820823669434
    7. '(d' → logprob: -12.879820823669434
    8. ')d' → logprob: -13.254820823669434
    9. ',d' → logprob: -14.004820823669434
    10. '	' → logprob: -14.442320823669434

Token 96: '-c' (ID: 3452)
  Prédit: '-c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.0003733542689587921
    2. 'c' → logprob: -8.375372886657715
    3. '	c' → logprob: -9.000372886657715
    4. '-' → logprob: -11.125372886657715
    5. ' -' → logprob: -13.000372886657715
    6. '_c' → logprob: -14.750372886657715
    7. '	' → logprob: -14.750372886657715
    8. ')c' → logprob: -15.125372886657715
    9. '' → logprob: -15.625372886657715
    10. ' c' → logprob: -15.750372886657715

Token 97: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08982715010643005
    2. '))' → logprob: -2.464827060699463
    3. ' )' → logprob: -7.214827060699463
    4. ')>' → logprob: -10.089827537536621
    5. ')<' → logprob: -10.839827537536621
    6. ' ))' → logprob: -10.839827537536621
    7. '	' → logprob: -10.964827537536621
    8. ')<=' → logprob: -10.964827537536621
    9. '())' → logprob: -11.089827537536621
    10. ')>=' → logprob: -12.214827537536621

Token 98: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.42161282896995544
    2. ' <' → logprob: -1.2966128587722778
    3. ' >' → logprob: -3.9216127395629883
    4. '<=' → logprob: -4.171612739562988
    5. '<' → logprob: -4.296612739562988
    6. ' >=' → logprob: -4.421612739562988
    7. '>' → logprob: -5.546612739562988
    8. ')' → logprob: -6.421612739562988
    9. ' ' → logprob: -6.796612739562988
    10. '	' → logprob: -6.921612739562988

Token 99: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.01608915627002716
    2. ' EPS' → logprob: -4.141088962554932
    3. 'ES' → logprob: -11.14108943939209
    4. ' ' → logprob: -11.26608943939209
    5. 'EP' → logprob: -12.14108943939209
    6. 'ESP' → logprob: -12.26608943939209
    7. '1' → logprob: -12.39108943939209
    8. '	E' → logprob: -12.76608943939209
    9. '   ' → logprob: -13.01608943939209
    10. '0' → logprob: -13.01608943939209

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10599840432405472
    2. '	' → logprob: -3.1059985160827637
    3. ' and' → logprob: -3.3559985160827637
    4. ':
' → logprob: -4.480998516082764
    5. ' or' → logprob: -4.980998516082764
    6. '	and' → logprob: -6.980998516082764
    7. '	or' → logprob: -7.730998516082764
    8. ':return' → logprob: -7.980998516082764
    9. '	return' → logprob: -8.105998039245605
    10. 'and' → logprob: -8.605998039245605

Token 101: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.0012655939208343625
    2. '	return' → logprob: -7.376265525817871
    3. '1' → logprob: -8.001265525817871
    4. '2' → logprob: -8.501265525817871
    5. '       ' → logprob: -10.251265525817871
    6. ' return' → logprob: -10.626265525817871
    7. 'return' → logprob: -11.376265525817871
    8. '4' → logprob: -11.751265525817871
    9. '3' → logprob: -12.376265525817871
    10. ' ' → logprob: -12.376265525817871

Token 102: '	return' (ID: 1393)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.0015473603270947933
    2. '	return' → logprob: -7.001547336578369
    3. 'return' → logprob: -7.876547336578369
    4. ' return' → logprob: -9.376547813415527
    5. ':' → logprob: -9.751547813415527
    6. '       ' → logprob: -10.501547813415527
    7. '		' → logprob: -10.751547813415527
    8. ':return' → logprob: -10.876547813415527
    9. '1' → logprob: -11.126547813415527
    10. '   ' → logprob: -12.001547813415527

Token 103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2359512895345688
    2. '0' → logprob: -1.61095130443573
    3. '2' → logprob: -4.8609514236450195
    4. '3' → logprob: -6.6109514236450195
    5. ' ' → logprob: -6.7359514236450195
    6. '	' → logprob: -8.73595142364502
    7. '4' → logprob: -11.36095142364502
    8. '   ' → logprob: -11.36095142364502
    9. 'False' → logprob: -11.98595142364502
    10. '-' → logprob: -12.61095142364502

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3482547700405121
    2. '0' → logprob: -1.3482547998428345
    3. '2' → logprob: -3.473254680633545
    4. '3' → logprob: -5.848254680633545
    5. ' ' → logprob: -8.098255157470703
    6. '	' → logprob: -9.598255157470703
    7. '4' → logprob: -10.348255157470703
    8. '   ' → logprob: -10.723255157470703
    9. '-' → logprob: -10.848255157470703
    10. 'False' → logprob: -11.473255157470703

Token 105: '
' (ID: 198)
  Prédit: '	else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	else' → logprob: -0.7796457409858704
    2. '	return' → logprob: -1.0296456813812256
    3. '	elif' → logprob: -2.0296456813812256
    4. '<|end|>' → logprob: -3.2796456813812256
    5. '	
' → logprob: -5.029645919799805
    6. '
' → logprob: -5.904645919799805
    7. '	if' → logprob: -7.154645919799805
    8. '		
' → logprob: -7.154645919799805
    9. '	true' → logprob: -7.404645919799805
    10. '<|end|>' → logprob: -7.529645919799805

Token 106: '	else' (ID: 5107)
  Prédit: '	else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	else' → logprob: -0.027303846552968025
    2. '	return' → logprob: -4.277303695678711
    3. '	elif' → logprob: -4.402303695678711
    4. ' else' → logprob: -7.902303695678711
    5. '   ' → logprob: -8.652303695678711
    6. '	
' → logprob: -9.652303695678711
    7. 'else' → logprob: -10.402303695678711
    8. '	while' → logprob: -10.652303695678711
    9. '	if' → logprob: -10.777303695678711
    10. '<|end|>' → logprob: -11.152303695678711

Token 107: ':
' (ID: 734)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.42216238379478455
    2. ':' → logprob: -1.172162413597107
    3. ':
' → logprob: -3.5471622943878174
    4. '	return' → logprob: -5.7971625328063965
    5. '		' → logprob: -6.5471625328063965
    6. ':return' → logprob: -7.9221625328063965
    7. '       ' → logprob: -8.422162055969238
    8. '		
' → logprob: -8.797162055969238
    9. '   ' → logprob: -9.172162055969238
    10. ',' → logprob: -9.172162055969238

Token 108: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.041258085519075394
    2. '       ' → logprob: -3.2912580966949463
    3. ' return' → logprob: -7.041257858276367
    4. '0' → logprob: -7.041257858276367
    5. '	return' → logprob: -7.416257858276367
    6. 'return' → logprob: -7.416257858276367
    7. '   ' → logprob: -9.041257858276367
    8. '1' → logprob: -10.041257858276367
    9. '2' → logprob: -10.916257858276367
    10. '	   ' → logprob: -10.916257858276367

Token 109: '	return' (ID: 1393)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.6855528354644775
    2. 'return' → logprob: -1.3105528354644775
    3. '	return' → logprob: -1.5605528354644775
    4. ' return' → logprob: -4.185552597045898
    5. '       ' → logprob: -7.310552597045898
    6. 'x' → logprob: -8.185552597045898
    7. '   ' → logprob: -10.185552597045898
    8. '	x' → logprob: -10.310552597045898
    9. '		' → logprob: -10.435552597045898
    10. 't' → logprob: -10.435552597045898

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035870319698005915
    2. ' ' → logprob: -8.125358581542969
    3. '3' → logprob: -9.750358581542969
    4. '	' → logprob: -13.250358581542969
    5. '2' → logprob: -14.375358581542969
    6. '-' → logprob: -14.625358581542969
    7. 'False' → logprob: -14.625358581542969
    8. 'None' → logprob: -14.750358581542969
    9. '1' → logprob: -15.375358581542969
    10. '   ' → logprob: -15.625358581542969

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014418430509977043
    2. '3' → logprob: -9.000144004821777
    3. ' ' → logprob: -11.125144004821777
    4. 'False' → logprob: -13.375144004821777
    5. '	' → logprob: -14.187644004821777
    6. '1' → logprob: -14.312644004821777
    7. 'None' → logprob: -14.312644004821777
    8. '2' → logprob: -14.937644004821777
    9. '-' → logprob: -15.062644004821777
    10. '   ' → logprob: -15.562644004821777

Token 112: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0657998323440552
    2. '<|end|>' → logprob: -1.0657998323440552
    3. ')' → logprob: -1.8157998323440552
    4. '#' → logprob: -2.1907997131347656
    5. '(' → logprob: -4.315799713134766
    6. '
' → logprob: -5.440799713134766
    7. ',' → logprob: -5.815799713134766
    8. '<|end|>' → logprob: -5.940799713134766
    9. '\' → logprob: -6.440799713134766
    10. 'a' → logprob: -6.440799713134766

Token 113: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16792209446430206
    2. '=' → logprob: -1.9179221391677856
    3. ' ' → logprob: -5.042922019958496
    4. '  ' → logprob: -8.167922019958496
    5. ' +=' → logprob: -8.292922019958496
    6. '+' → logprob: -8.917922019958496
    7. 'u' → logprob: -9.042922019958496
    8. '=int' → logprob: -9.917922019958496
    9. '   ' → logprob: -10.167922019958496
    10. 'um' → logprob: -10.292922019958496

Token 115: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.060610249638557434
    2. '5' → logprob: -3.810610294342041
    3. '3' → logprob: -4.435610294342041
    4. '4' → logprob: -4.810610294342041
    5. '0' → logprob: -5.060610294342041
    6. ' int' → logprob: -5.310610294342041
    7. '10' → logprob: -5.435610294342041
    8. '6' → logprob: -8.185609817504883
    9. '1' → logprob: -8.435609817504883
    10. ' ' → logprob: -8.560609817504883

Token 116: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5809549689292908
    2. '(input' → logprob: -0.8309549689292908
    3. 'input' → logprob: -5.5809550285339355
    4. '()' → logprob: -6.9559550285339355
    5. ' (' → logprob: -9.455954551696777
    6. '('' → logprob: -9.705954551696777
    7. '(
' → logprob: -10.330954551696777
    8. ' input' → logprob: -10.330954551696777
    9. '=input' → logprob: -10.830954551696777
    10. '(int' → logprob: -11.955954551696777

Token 117: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10033046454191208
    2. '()' → logprob: -2.350330352783203
    3. '(' → logprob: -9.475330352783203
    4. ')' → logprob: -11.350330352783203
    5. '());' → logprob: -11.975330352783203
    6. '("' → logprob: -12.350330352783203
    7. '();)' → logprob: -12.475330352783203
    8. '().' → logprob: -12.850330352783203
    9. '()]' → logprob: -12.975330352783203
    10. '()>' → logprob: -12.975330352783203

Token 118: 'for' (ID: 1938)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.16597752273082733
    2. 'lines' → logprob: -3.0409774780273438
    3. 'for' → logprob: -3.2909774780273438
    4. 'p' → logprob: -4.040977478027344
    5. 'ans' → logprob: -4.665977478027344
    6. 'pts' → logprob: -4.665977478027344
    7. 'segments' → logprob: -5.165977478027344
    8. 'results' → logprob: -5.415977478027344
    9. 'pairs' → logprob: -5.415977478027344
    10. 'vectors' → logprob: -5.540977478027344

Token 119: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3921848237514496
    2. ' i' → logprob: -1.517184853553772
    3. ' range' → logprob: -2.6421847343444824
    4. '_' → logprob: -3.6421847343444824
    5. ' ' → logprob: -5.142184734344482
    6. ' in' → logprob: -6.392184734344482
    7. 'range' → logprob: -9.64218521118164
    8. ' ' → logprob: -10.14218521118164
    9. ' n' → logprob: -10.64218521118164
    10. ' ▁' → logprob: -11.39218521118164

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3172012269496918
    2. ' _' → logprob: -2.0672011375427246
    3. ' ' → logprob: -2.3172011375427246
    4. ' range' → logprob: -3.3172011375427246
    5. '_' → logprob: -5.317201137542725
    6. 'range' → logprob: -5.817201137542725
    7. ' i' → logprob: -6.942201137542725
    8. '　' → logprob: -7.442201137542725
    9. 'in' → logprob: -8.067201614379883
    10. ' n' → logprob: -8.192201614379883

Token 121: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029755352064967155
    2. ' range' → logprob: -3.5297553539276123
    3. '	range' → logprob: -12.904755592346191
    4. '(range' → logprob: -13.904755592346191
    5. 'rang' → logprob: -14.529755592346191
    6. 'n' → logprob: -14.904755592346191
    7. 'r' → logprob: -15.904755592346191
    8. ' ' → logprob: -16.279754638671875
    9. 'in' → logprob: -16.279754638671875
    10. 'ange' → logprob: -16.404754638671875

Token 122: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05833055078983307
    2. '(' → logprob: -3.308330535888672
    3. ' n' → logprob: -4.308330535888672
    4. ' (' → logprob: -5.558330535888672
    5. 'n' → logprob: -5.933330535888672
    6. ' ' → logprob: -10.183330535888672
    7. '(range' → logprob: -10.183330535888672
    8. ' range' → logprob: -10.433330535888672
    9. '(
' → logprob: -11.558330535888672
    10. 'range' → logprob: -12.183330535888672

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03450625389814377
    2. '):
' → logprob: -3.409506320953369
    3. ' ):' → logprob: -7.409506320953369
    4. ':' → logprob: -8.909505844116211
    5. ')' → logprob: -10.784505844116211
    6. '):
' → logprob: -10.784505844116211
    7. '）：' → logprob: -10.784505844116211
    8. ' ):
' → logprob: -11.034505844116211
    9. ')：' → logprob: -11.284505844116211
    10. ',' → logprob: -12.159505844116211

Token 124: '	pp' (ID: 181548)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.019261794164776802
    2. ' a' → logprob: -4.644261837005615
    3. '	a' → logprob: -4.894261837005615
    4. 'x' → logprob: -6.269261837005615
    5. ' x' → logprob: -10.644261360168457
    6. '   ' → logprob: -11.144261360168457
    7. '	x' → logprob: -11.394261360168457
    8. ',a' → logprob: -12.019261360168457
    9. 'A' → logprob: -12.519261360168457
    10. 'ax' → logprob: -13.019261360168457

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12437114864587784
    2. '1' → logprob: -3.12437105178833
    3. '=' → logprob: -3.24937105178833
    4. 'oints' → logprob: -3.62437105178833
    5. 'p' → logprob: -5.74937105178833
    6. ',' → logprob: -5.99937105178833
    7. 'x' → logprob: -8.374371528625488
    8. 'a' → logprob: -8.624371528625488
    9. 'pp' → logprob: -8.749371528625488
    10. 's' → logprob: -8.999371528625488

Token 126: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.007387382443994284
    2. '[list' → logprob: -5.007387161254883
    3. 'tuple' → logprob: -7.632387161254883
    4. '[' → logprob: -9.757387161254883
    5. '[input' → logprob: -9.757387161254883
    6. ' list' → logprob: -10.382387161254883
    7. 'input' → logprob: -10.507387161254883
    8. '(list' → logprob: -12.632387161254883
    9. '[*' → logprob: -13.007387161254883
    10. '[int' → logprob: -13.132387161254883

Token 127: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.2842308680992573e-05
    2. '(' → logprob: -10.750022888183594
    3. '()' → logprob: -14.000022888183594
    4. 'map' → logprob: -14.750022888183594
    5. '(m' → logprob: -17.625022888183594
    6. '(
' → logprob: -17.750022888183594
    7. '(input' → logprob: -17.750022888183594
    8. '	map' → logprob: -18.250022888183594
    9. '(range' → logprob: -18.500022888183594
    10. '(int' → logprob: -18.500022888183594

Token 128: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.38792067766189575
    2. '(float' → logprob: -1.137920618057251
    3. 'float' → logprob: -7.51292085647583
    4. 'int' → logprob: -8.387920379638672
    5. '(str' → logprob: -8.762920379638672
    6. '(' → logprob: -9.387920379638672
    7. '(input' → logprob: -11.262920379638672
    8. ',float' → logprob: -11.512920379638672
    9. '(eval' → logprob: -12.512920379638672
    10. '[int' → logprob: -13.512920379638672

Token 129: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5816070437431335
    2. '(input' → logprob: -0.8316070437431335
    3. 'input' → logprob: -5.331606864929199
    4. ',' → logprob: -7.206606864929199
    5. ' input' → logprob: -10.4566068649292
    6. '=input' → logprob: -10.9566068649292
    7. '	input' → logprob: -11.3316068649292
    8. '(' → logprob: -11.5816068649292
    9. '[input' → logprob: -13.3316068649292
    10. '(),' → logprob: -14.0816068649292

Token 130: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0005532711511477828
    2. ' input' → logprob: -7.500553131103516
    3. ',input' → logprob: -15.375553131103516
    4. '(input' → logprob: -16.500553131103516
    5. '	input' → logprob: -16.875553131103516
    6. '   ' → logprob: -18.625553131103516
    7. '=input' → logprob: -18.875553131103516
    8. ' ' → logprob: -19.000553131103516
    9. '<input' → logprob: -20.875553131103516
    10. '
' → logprob: -21.250553131103516

Token 131: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.896309739408025e-07
    2. '()' → logprob: -14.250000953674316
    3. ' ().' → logprob: -16.375
    4. '.split' → logprob: -16.875
    5. '('').' → logprob: -18.875
    6. '("").' → logprob: -18.875
    7. '(' → logprob: -19.125
    8. 'split' → logprob: -20.125
    9. '.strip' → logprob: -20.125
    10. '.' → logprob: -20.375

Token 132: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006729337852448225
    2. 'strip' → logprob: -5.0067291259765625
    3. 'rstrip' → logprob: -11.631729125976562
    4. ' split' → logprob: -13.131729125976562
    5. '(split' → logprob: -13.506729125976562
    6. '().' → logprob: -13.506729125976562
    7. 'spl' → logprob: -15.881729125976562
    8. '.split' → logprob: -16.756729125976562
    9. 's' → logprob: -16.881729125976562
    10. 'plit' → logprob: -17.631729125976562

Token 133: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0033006970770657063
    2. '))' → logprob: -6.378300666809082
    3. '()' → logprob: -6.753300666809082
    4. '()))
' → logprob: -8.253300666809082
    5. '())' → logprob: -9.503300666809082
    6. '(' → logprob: -9.753300666809082
    7. '()));' → logprob: -11.128300666809082
    8. '('' → logprob: -11.503300666809082
    9. '()))

' → logprob: -12.503300666809082
    10. '().' → logprob: -12.753300666809082

Token 134: '	p' (ID: 6061)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.043285079300403595
    2. 'p' → logprob: -3.4182851314544678
    3. '	a' → logprob: -4.918284893035889
    4. 'A' → logprob: -6.793284893035889
    5. ' a' → logprob: -8.293285369873047
    6. '[a' → logprob: -8.668285369873047
    7. 'points' → logprob: -8.668285369873047
    8. 'x' → logprob: -8.793285369873047
    9. '	p' → logprob: -9.168285369873047
    10. '(a' → logprob: -9.543285369873047

Token 135: ' =' (ID: 314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.46772757172584534
    2. ' =' → logprob: -1.467727541923523
    3. 'p' → logprob: -2.3427276611328125
    4. '=' → logprob: -3.9677276611328125
    5. '0' → logprob: -4.2177276611328125
    6. 'oints' → logprob: -4.4677276611328125
    7. 'r' → logprob: -8.092727661132812
    8. 'a' → logprob: -8.092727661132812
    9. '_points' → logprob: -8.342727661132812
    10. 'points' → logprob: -8.592727661132812

Token 136: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9195853471755981
    2. '[(' → logprob: -0.9195853471755981
    3. '[p' → logprob: -2.0445852279663086
    4. ' [' → logprob: -3.2945852279663086
    5. '[list' → logprob: -4.169585227966309
    6. ' [(' → logprob: -4.544585227966309
    7. '[
' → logprob: -5.794585227966309
    8. '[[' → logprob: -6.169585227966309
    9. '[]
' → logprob: -6.294585227966309
    10. '[]' → logprob: -6.669585227966309

Token 137: 'complex' (ID: 42544)
  Prédit: 'complex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.0022265026345849037
    2. '(com' → logprob: -6.50222635269165
    3. ' complex' → logprob: -7.25222635269165
    4. '[' → logprob: -12.377226829528809
    5. 'com' → logprob: -12.502226829528809
    6. 'p' → logprob: -13.002226829528809
    7. 'float' → logprob: -14.252226829528809
    8. ']' → logprob: -14.627226829528809
    9. '
' → logprob: -14.627226829528809
    10. 'a' → logprob: -14.627226829528809

Token 138: '(pp' (ID: 103668)
  Prédit: '(pp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pp' → logprob: -0.528302788734436
    2. '(x' → logprob: -0.903302788734436
    3. '(p' → logprob: -5.5283026695251465
    4. '(pt' → logprob: -7.5283026695251465
    5. '(px' → logprob: -8.778303146362305
    6. '(pi' → logprob: -9.028303146362305
    7. '(*' → logprob: -9.528303146362305
    8. '(i' → logprob: -9.653303146362305
    9. '(xx' → logprob: -9.778303146362305
    10. '(point' → logprob: -9.778303146362305

Token 139: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3205965757369995
    2. '[i' → logprob: -1.3205965757369995
    3. '(' → logprob: -5.070596694946289
    4. '(i' → logprob: -7.195596694946289
    5. '[x' → logprob: -9.195596694946289
    6. '[j' → logprob: -9.945596694946289
    7. '(x' → logprob: -10.070596694946289
    8. '0' → logprob: -10.195596694946289
    9. '[p' → logprob: -10.945596694946289
    10. '(pp' → logprob: -11.945596694946289

Token 140: '],' (ID: 2155)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11783960461616516
    2. '],' → logprob: -2.2428395748138428
    3. ']' → logprob: -5.742839813232422
    4. '	' → logprob: -7.492839813232422
    5. ']*' → logprob: -8.117839813232422
    6. '])' → logprob: -8.242839813232422
    7. ' ' → logprob: -8.742839813232422
    8. ' *' → logprob: -8.992839813232422
    9. ']+' → logprob: -8.992839813232422
    10. '<<' → logprob: -9.867839813232422

Token 141: ' pp' (ID: 25476)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.0037156417965888977
    2. ' pp' → logprob: -5.628715515136719
    3. '	pp' → logprob: -9.253715515136719
    4. '0' → logprob: -12.128715515136719
    5. ' ' → logprob: -12.753715515136719
    6. 'p' → logprob: -12.753715515136719
    7. '  ' → logprob: -13.253715515136719
    8. ' ' → logprob: -13.503715515136719
    9. 'ppi' → logprob: -14.128715515136719
    10. '   ' → logprob: -14.378715515136719

Token 142: '[i' (ID: 1768)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.08909574896097183
    2. '+' → logprob: -2.8390958309173584
    3. '+i' → logprob: -4.464095592498779
    4. ')' → logprob: -4.714095592498779
    5. '[i' → logprob: -6.464095592498779
    6. '-i' → logprob: -6.964095592498779
    7. 'i' → logprob: -7.339095592498779
    8. '2' → logprob: -7.464095592498779
    9. '-' → logprob: -7.464095592498779
    10. '1' → logprob: -7.589095592498779

Token 143: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.961759259458631e-06
    2. '1' → logprob: -12.375004768371582
    3. ' +' → logprob: -14.125004768371582
    4. '+n' → logprob: -18.6250057220459
    5. '3' → logprob: -19.7500057220459
    6. '])' → logprob: -20.2500057220459
    7. ' ' → logprob: -20.8750057220459
    8. '2' → logprob: -21.1250057220459
    9. '	' → logprob: -21.1250057220459
    10. '   ' → logprob: -21.7500057220459

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '１' → logprob: -18.0
    4. '-' → logprob: -18.0
    5. '0' → logprob: -18.25
    6. '+' → logprob: -18.4375
    7. '2' → logprob: -18.625
    8. '```' → logprob: -18.6875
    9. ' ' → logprob: -18.8125
    10. '   ' → logprob: -19.0625

Token 145: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.0590548703912646e-05
    2. ' )' → logprob: -10.625030517578125
    3. '])' → logprob: -12.125030517578125
    4. '})' → logprob: -15.750030517578125
    5. '	' → logprob: -16.000030517578125
    6. '）' → logprob: -16.125030517578125
    7. ')]' → logprob: -16.375030517578125
    8. '')' → logprob: -16.500030517578125
    9. ' ' → logprob: -16.625030517578125
    10. '))' → logprob: -16.750030517578125

Token 146: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16330528259277344
    2. 'for' → logprob: -1.9133052825927734
    3. '	for' → logprob: -5.913305282592773
    4. ' ' → logprob: -8.163305282592773
    5. '   ' → logprob: -9.413305282592773
    6. ' ' → logprob: -12.913305282592773
    7. '  ' → logprob: -13.038305282592773
    8. '    ' → logprob: -14.413305282592773
    9. '	   ' → logprob: -14.413305282592773
    10. '		' → logprob: -15.788305282592773

Token 147: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10572248697280884
    2. 'range' → logprob: -2.605722427368164
    3. ' range' → logprob: -4.105722427368164
    4. ' i' → logprob: -4.605722427368164
    5. ' ' → logprob: -13.230722427368164
    6. '	i' → logprob: -14.355722427368164
    7. '0' → logprob: -14.730722427368164
    8. '	range' → logprob: -15.730722427368164
    9. ' in' → logprob: -16.230722427368164
    10. '  ' → logprob: -16.480722427368164

Token 148: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9322566390037537
    2. 'range' → logprob: -1.1822566986083984
    3. ' in' → logprob: -1.3072566986083984
    4. 'in' → logprob: -3.8072566986083984
    5. ' ' → logprob: -5.057256698608398
    6. '0' → logprob: -8.307256698608398
    7. '(' → logprob: -8.432256698608398
    8. '	range' → logprob: -9.307256698608398
    9. '(range' → logprob: -10.307256698608398
    10. '  ' → logprob: -11.432256698608398

Token 149: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002627662615850568
    2. ' range' → logprob: -8.250263214111328
    3. '0' → logprob: -13.500263214111328
    4. ' ' → logprob: -17.375263214111328
    5. '	range' → logprob: -17.375263214111328
    6. '[' → logprob: -17.750263214111328
    7. '(' → logprob: -19.125263214111328
    8. '(range' → logprob: -19.750263214111328
    9. '   ' → logprob: -20.875263214111328
    10. '  ' → logprob: -21.500263214111328

Token 150: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019288709154352546
    2. '0' → logprob: -6.251928806304932
    3. ' (' → logprob: -16.501928329467773
    4. '(
' → logprob: -16.626928329467773
    5. '(len' → logprob: -17.501928329467773
    6. ' ' → logprob: -18.251928329467773
    7. '	' → logprob: -18.751928329467773
    8. 'len' → logprob: -19.001928329467773
    9. '   ' → logprob: -19.501928329467773
    10. '
' → logprob: -20.626928329467773

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'len' → logprob: -16.000001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '(' → logprob: -19.875001907348633
    6. '  ' → logprob: -20.250001907348633
    7. '    ' → logprob: -20.375001907348633
    8. ' ' → logprob: -20.375001907348633
    9. '	' → logprob: -20.500001907348633
    10. '4' → logprob: -20.500001907348633

Token 152: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009629119304008782
    2. '(' → logprob: -7.375962734222412
    3. ' ' → logprob: -8.75096321105957
    4. 'len' → logprob: -9.12596321105957
    5. ',' → logprob: -9.62596321105957
    6. '(len' → logprob: -13.12596321105957
    7. ',len' → logprob: -14.37596321105957
    8. ' len' → logprob: -15.12596321105957
    9. '	len' → logprob: -16.00096321105957
    10. '	' → logprob: -16.37596321105957

Token 153: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.08247194439172745
    2. 'len' → logprob: -2.5824718475341797
    3. '6' → logprob: -5.70747184753418
    4. ' len' → logprob: -8.70747184753418
    5. ' ' → logprob: -9.33247184753418
    6. '	len' → logprob: -15.08247184753418
    7. '4' → logprob: -15.20747184753418
    8. '(len' → logprob: -15.83247184753418
    9. '   ' → logprob: -16.45747184753418
    10. '  ' → logprob: -17.08247184753418

Token 154: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.08130218088626862
    2. 'len' → logprob: -2.8313021659851074
    3. '6' → logprob: -3.9563021659851074
    4. ' len' → logprob: -11.581302642822266
    5. '4' → logprob: -12.456302642822266
    6. ' ' → logprob: -13.706302642822266
    7. '(len' → logprob: -15.706302642822266
    8. '7' → logprob: -15.831302642822266
    9. '	len' → logprob: -15.831302642822266
    10. 'eight' → logprob: -16.081302642822266

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. ' ,' → logprob: -13.625001907348633
    3. '8' → logprob: -15.250001907348633
    4. '2' → logprob: -17.625001907348633
    5. ',
' → logprob: -17.875001907348633
    6. '，' → logprob: -18.250001907348633
    7. '4' → logprob: -19.125001907348633
    8. '```' → logprob: -19.875001907348633
    9. '7' → logprob: -20.125001907348633
    10. ' ' → logprob: -20.250001907348633

Token 156: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '２' → logprob: -17.875017166137695
    4. '۲' → logprob: -18.500017166137695
    5. '	' → logprob: -18.750017166137695
    6. '   ' → logprob: -19.375017166137695
    7. '  ' → logprob: -20.250017166137695
    8. '```' → logprob: -20.500017166137695
    9. ' ' → logprob: -20.812517166137695
    10. '२' → logprob: -21.062517166137695

Token 157: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '２' → logprob: -19.250001907348633
    4. '۲' → logprob: -19.875001907348633
    5. '	' → logprob: -20.250001907348633
    6. '   ' → logprob: -21.625001907348633
    7. '```' → logprob: -21.875001907348633
    8. '  ' → logprob: -22.500001907348633
    9. '२' → logprob: -22.500001907348633
    10. '٢' → logprob: -22.750001907348633

Token 158: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.274932143744081e-05
    2. ')' → logprob: -10.250042915344238
    3. ' )' → logprob: -12.125042915344238
    4. ']' → logprob: -13.500042915344238
    5. ')]
' → logprob: -16.375041961669922
    6. ')],' → logprob: -16.625041961669922
    7. ')}' → logprob: -16.750041961669922
    8. '),' → logprob: -17.000041961669922
    9. '))' → logprob: -17.125041961669922
    10. ')])' → logprob: -17.125041961669922

Token 159: '	print' (ID: 15269)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.15319301187992096
    2. 'result' → logprob: -2.5281929969787598
    3. 'print' → logprob: -3.4031929969787598
    4. 'r' → logprob: -3.7781929969787598
    5. 'ret' → logprob: -5.77819299697876
    6. 'ans' → logprob: -7.77819299697876
    7. 'a' → logprob: -7.77819299697876
    8. 'q' → logprob: -8.028193473815918
    9. '	res' → logprob: -8.278193473815918
    10. ' res' → logprob: -8.528193473815918

Token 160: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.250015258789062
    3. 'solve' → logprob: -13.250015258789062
    4. '((' → logprob: -16.750015258789062
    5. '(sol' → logprob: -17.875015258789062
    6. '(
' → logprob: -18.125015258789062
    7. ' solve' → logprob: -18.625015258789062
    8. '(len' → logprob: -19.125015258789062
    9. '(int' → logprob: -19.500015258789062
    10. '.solve' → logprob: -19.625015258789062

Token 161: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.00013786651834379882
    2. '(p' → logprob: -9.250138282775879
    3. '(' → logprob: -10.125138282775879
    4. 'ol' → logprob: -14.375138282775879
    5. 'olv' → logprob: -14.500138282775879
    6. 'ove' → logprob: -15.875138282775879
    7. 'OLVE' → logprob: -16.000137329101562
    8. 'olved' → logprob: -16.375137329101562
    9. 'olver' → logprob: -16.375137329101562
    10. 'solve' → logprob: -16.625137329101562

Token 162: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00023774817236699164
    2. '(' → logprob: -8.500237464904785
    3. '(
' → logprob: -10.750237464904785
    4. '(*' → logprob: -11.750237464904785
    5. 'p' → logprob: -12.500237464904785
    6. '(*(' → logprob: -14.625237464904785
    7. '((' → logprob: -15.250237464904785
    8. ' (' → logprob: -15.625237464904785
    9. ')' → logprob: -16.6252384185791
    10. '(

' → logprob: -17.0002384185791

Token 163: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.578184497309849e-05
    2. '0' → logprob: -9.375085830688477
    3. 'p' → logprob: -14.500085830688477
    4. '(' → logprob: -16.000085830688477
    5. '[p' → logprob: -16.000085830688477
    6. ' [' → logprob: -16.625085830688477
    7. '3' → logprob: -17.500085830688477
    8. '```' → logprob: -17.625085830688477
    9. '[
' → logprob: -17.750085830688477
    10. '\[' → logprob: -17.875085830688477

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.219262624857947e-05
    2. '1' → logprob: -10.000072479248047
    3. '2' → logprob: -10.875072479248047
    4. '3' → logprob: -12.125072479248047
    5. ' ' → logprob: -13.750072479248047
    6. '[' → logprob: -14.937572479248047
    7. '
' → logprob: -15.250072479248047
    8. '   ' → logprob: -16.000072479248047
    9. '4' → logprob: -16.187572479248047
    10. '	' → logprob: -16.625072479248047

Token 165: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011523632565513253
    2. ',p' → logprob: -6.876152515411377
    3. '],' → logprob: -10.126152038574219
    4. 'p' → logprob: -10.376152038574219
    5. ' ,' → logprob: -10.376152038574219
    6. '[' → logprob: -11.501152038574219
    7. '[p' → logprob: -12.376152038574219
    8. '	p' → logprob: -13.751152038574219
    9. ',
' → logprob: -14.626152038574219
    10. '[],' → logprob: -15.126152038574219

Token 166: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004309076175559312
    2. ' p' → logprob: -7.750431060791016
    3. '	p' → logprob: -15.375431060791016
    4. ')p' → logprob: -18.375431060791016
    5. '   ' → logprob: -19.375431060791016
    6. '<p' → logprob: -19.875431060791016
    7. ''p' → logprob: -20.875431060791016
    8. '*p' → logprob: -21.125431060791016
    9. '(p' → logprob: -21.375431060791016
    10. '$p' → logprob: -21.375431060791016

Token 167: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17978088557720184
    2. '[' → logprob: -1.8047808408737183
    3. 'p' → logprob: -10.554780960083008
    4. '3' → logprob: -12.054780960083008
    5. ' ' → logprob: -13.679780960083008
    6. '(' → logprob: -14.554780960083008
    7. '   ' → logprob: -14.679780960083008
    8. '
' → logprob: -14.679780960083008
    9. '１' → logprob: -15.054780960083008
    10. '```' → logprob: -15.179780960083008

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '3' → logprob: -16.25
    3. ' ' → logprob: -17.0
    4. '2' → logprob: -17.875
    5. '１' → logprob: -18.0
    6. 'p' → logprob: -20.625
    7. '   ' → logprob: -20.75
    8. '
' → logprob: -21.5
    9. '	' → logprob: -22.125
    10. '۱' → logprob: -22.25

Token 169: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004018683917820454
    2. ',p' → logprob: -6.254018783569336
    3. 'p' → logprob: -6.879018783569336
    4. '],' → logprob: -7.129018783569336
    5. ' ,' → logprob: -8.629018783569336
    6. '[' → logprob: -9.754018783569336
    7. '),' → logprob: -11.754018783569336
    8. '	p' → logprob: -12.504018783569336
    9. ' p' → logprob: -13.004018783569336
    10. '[],' → logprob: -13.129018783569336

Token 170: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008056987426243722
    2. ' p' → logprob: -7.125805854797363
    3. '	p' → logprob: -13.625805854797363
    4. ')p' → logprob: -16.750804901123047
    5. '(p' → logprob: -17.875804901123047
    6. '<p' → logprob: -17.875804901123047
    7. ')' → logprob: -19.375804901123047
    8. '
' → logprob: -19.625804901123047
    9. '$p' → logprob: -19.750804901123047
    10. '[p' → logprob: -19.875804901123047

Token 171: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06761198490858078
    2. '[' → logprob: -2.8176119327545166
    3. '3' → logprob: -5.192612171173096
    4. '
' → logprob: -10.692611694335938
    5. '(' → logprob: -11.067611694335938
    6. '```' → logprob: -11.192611694335938
    7. '4' → logprob: -11.817611694335938
    8. ' ' → logprob: -12.817611694335938
    9. '{' → logprob: -13.192611694335938
    10. '   ' → logprob: -13.317611694335938

Token 172: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.171581091824919e-05
    2. '3' → logprob: -9.62507152557373
    3. '4' → logprob: -12.12507152557373
    4. ' ' → logprob: -16.625072479248047
    5. '6' → logprob: -17.125072479248047
    6. '5' → logprob: -17.125072479248047
    7. '1' → logprob: -17.125072479248047
    8. '２' → logprob: -17.875072479248047
    9. '0' → logprob: -18.250072479248047
    10. '
' → logprob: -18.375072479248047

Token 173: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09669984132051468
    2. '],' → logprob: -2.8466999530792236
    3. 'p' → logprob: -3.4716999530792236
    4. ' ,' → logprob: -6.9716997146606445
    5. ',p' → logprob: -7.0966997146606445
    6. '),' → logprob: -7.2216997146606445
    7. '[' → logprob: -7.7216997146606445
    8. ' p' → logprob: -10.221699714660645
    9. '   ' → logprob: -10.596699714660645
    10. '	p' → logprob: -11.471699714660645

Token 174: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00029613598599098623
    2. ' p' → logprob: -8.125296592712402
    3. '	p' → logprob: -17.750295639038086
    4. ')p' → logprob: -18.750295639038086
    5. ')' → logprob: -19.375295639038086
    6. '   ' → logprob: -20.375295639038086
    7. ' ' → logprob: -20.500295639038086
    8. '
' → logprob: -21.125295639038086
    9. '<p' → logprob: -21.125295639038086
    10. ' ' → logprob: -21.375295639038086

Token 175: '[' (ID: 58)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.023246178403496742
    2. '[' → logprob: -3.7732462882995605
    3. '３' → logprob: -15.023245811462402
    4. ' ' → logprob: -15.648245811462402
    5. '```' → logprob: -16.14824676513672
    6. ']' → logprob: -17.64824676513672
    7. '۳' → logprob: -17.77324676513672
    8. ' [' → logprob: -17.77324676513672
    9. '(' → logprob: -17.89824676513672
    10. '[
' → logprob: -18.14824676513672

Token 176: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '３' → logprob: -17.500001907348633
    4. '```' → logprob: -19.500001907348633
    5. '۳' → logprob: -19.750001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '7' → logprob: -20.500001907348633
    8. '[' → logprob: -20.750001907348633
    9. '  ' → logprob: -20.875001907348633
    10. '0' → logprob: -21.000001907348633

Token 177: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -1.735893965815194e-05
    2. ')' → logprob: -11.375017166137695
    3. ')))' → logprob: -12.125017166137695
    4. ' ))' → logprob: -15.125017166137695
    5. '))
' → logprob: -16.125017166137695
    6. '()))' → logprob: -16.750017166137695
    7. '),' → logprob: -18.375017166137695
    8. '4' → logprob: -18.625017166137695
    9. '1' → logprob: -19.000017166137695
    10. '3' → logprob: -19.125017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 175
Tokens correctement prédits (1ère position, stricte): 70
Tokens correctement prédits (1ère position, avec adaptation): 70
Tokens correctement prédits (top 10): 147
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 84.00%
================================================================================
