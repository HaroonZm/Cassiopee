================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
num = int(input())
a = list(map(int,input().split()))

cnt = 0
for i in range(num):
    minj = i
    for j in range(i,num):
        if a[j] < a[minj]:
            minj = j
    a[i], a[minj] = a[minj],a[i]
    if i != minj:
        cnt += 1

print(" ".join([str(i) for i in a]))
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'num' (ID: 4571)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032017158810049295
    2. ''' → logprob: -6.628201484680176
    3. '('' → logprob: -7.128201484680176
    4. '```' → logprob: -7.753201484680176
    5. '`' → logprob: -7.878201484680176
    6. '("("' → logprob: -9.003201484680176
    7. ')' → logprob: -10.753201484680176
    8. '(num' → logprob: -10.878201484680176
    9. '"' → logprob: -11.003201484680176
    10. '(user' → logprob: -11.628201484680176

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1204950362443924
    2. ')' → logprob: -2.245495080947876
    3. '()' → logprob: -6.245494842529297
    4. '```' → logprob: -6.620494842529297
    5. '`' → logprob: -6.745494842529297
    6. '(
' → logprob: -7.495494842529297
    7. ''' → logprob: -7.620494842529297
    8. '())' → logprob: -8.120494842529297
    9. '('' → logprob: -8.745494842529297
    10. '")' → logprob: -8.870494842529297

Token 5: 'a' (ID: 64)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12095019221305847
    2. 'if' → logprob: -2.870950222015381
    3. '*' → logprob: -3.120950222015381
    4. '%' → logprob: -5.245950222015381
    5. ')' → logprob: -6.995950222015381
    6. '#' → logprob: -6.995950222015381
    7. 'i' → logprob: -6.995950222015381
    8. '**' → logprob: -7.120950222015381
    9. ' if' → logprob: -7.245950222015381
    10. '>' → logprob: -7.495950222015381

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18578724563121796
    2. '+' → logprob: -1.9357872009277344
    3. '*' → logprob: -5.435787200927734
    4. '=' → logprob: -5.560787200927734
    5. 'dd' → logprob: -5.560787200927734
    6. '.' → logprob: -6.060787200927734
    7. 'm' → logprob: -6.560787200927734
    8. ')' → logprob: -6.935787200927734
    9. 'd' → logprob: -7.060787200927734
    10. '**' → logprob: -7.185787200927734

Token 7: ' list' (ID: 1562)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.8585885763168335
    2. ' num' → logprob: -0.9835885763168335
    3. '0' → logprob: -2.358588695526123
    4. ' ' → logprob: -2.608588695526123
    5. ' []' → logprob: -3.983588695526123
    6. '1' → logprob: -4.983588695526123
    7. '[]' → logprob: -5.358588695526123
    8. '[num' → logprob: -6.358588695526123
    9. ' input' → logprob: -7.983588695526123
    10. 'input' → logprob: -8.108588218688965

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000386105413781479
    2. '(a' → logprob: -8.250386238098145
    3. '(range' → logprob: -9.875386238098145
    4. '()' → logprob: -10.500386238098145
    5. '[' → logprob: -12.000386238098145
    6. '(
' → logprob: -12.250386238098145
    7. ' (' → logprob: -12.750386238098145
    8. '(user' → logprob: -12.750386238098145
    9. '```' → logprob: -12.750386238098145
    10. 'a' → logprob: -12.875386238098145

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014110619202256203
    2. '(' → logprob: -4.389110565185547
    3. '(str' → logprob: -7.389110565185547
    4. '(lambda' → logprob: -8.139110565185547
    5. '<int' → logprob: -8.264110565185547
    6. '(input' → logprob: -8.639110565185547
    7. 'int' → logprob: -9.389110565185547
    8. ')' → logprob: -10.139110565185547
    9. '=int' → logprob: -10.139110565185547
    10. '(eval' → logprob: -10.639110565185547

Token 10: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009626468643546104
    2. ',input' → logprob: -5.259626388549805
    3. '(' → logprob: -5.634626388549805
    4. ',' → logprob: -8.009626388549805
    5. ')' → logprob: -8.509626388549805
    6. '))' → logprob: -9.509626388549805
    7. 'input' → logprob: -9.759626388549805
    8. '=input' → logprob: -10.009626388549805
    9. ' (' → logprob: -10.759626388549805
    10. ' input' → logprob: -11.134626388549805

Token 11: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.589618980884552
    2. '()))' → logprob: -1.4646189212799072
    3. '()' → logprob: -2.0896189212799072
    4. '().' → logprob: -2.4646189212799072
    5. '()));' → logprob: -5.964619159698486
    6. ')' → logprob: -6.839619159698486
    7. '())))' → logprob: -7.589619159698486
    8. '(' → logprob: -7.964619159698486
    9. '()>' → logprob: -8.214618682861328
    10. '());' → logprob: -8.589618682861328

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00044771170360036194
    2. 'strip' → logprob: -7.750447750091553
    3. 'rstrip' → logprob: -11.125447273254395
    4. ' split' → logprob: -13.375447273254395
    5. '(split' → logprob: -14.625447273254395
    6. 'spl' → logprob: -15.250447273254395
    7. ')' → logprob: -17.75044822692871
    8. ' strip' → logprob: -19.00044822692871
    9. 'replace' → logprob: -19.12544822692871
    10. 'sp' → logprob: -19.25044822692871

Token 13: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5985444784164429
    2. '())' → logprob: -1.5985444784164429
    3. '))' → logprob: -1.8485444784164429
    4. ')' → logprob: -2.4735445976257324
    5. '()' → logprob: -5.973544597625732
    6. '(' → logprob: -5.973544597625732
    7. '('' → logprob: -7.098544597625732
    8. ''))' → logprob: -8.473544120788574
    9. '(','' → logprob: -9.473544120788574
    10. '())))' → logprob: -9.848544120788574

Token 14: 'cnt' (ID: 33160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4787510931491852
    2. 'a' → logprob: -1.3537510633468628
    3. 'r' → logprob: -2.7287511825561523
    4. 'c' → logprob: -4.228751182556152
    5. 'sum' → logprob: -4.978751182556152
    6. '[' → logprob: -5.103751182556152
    7. 'for' → logprob: -5.103751182556152
    8. 'm' → logprob: -5.228751182556152
    9. 'b' → logprob: -5.603751182556152
    10. ')' → logprob: -6.353751182556152

Token 15: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40069580078125
    2. '[' → logprob: -1.27569580078125
    3. '(' → logprob: -3.02569580078125
    4. '=' → logprob: -6.40069580078125
    5. ')' → logprob: -8.77569580078125
    6. 's' → logprob: -9.15069580078125
    7. '\[' → logprob: -9.27569580078125
    8. 'a' → logprob: -9.90069580078125
    9. ']' → logprob: -10.52569580078125
    10. '[]' → logprob: -10.65069580078125

Token 16: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01653152145445347
    2. ' ' → logprob: -4.141531467437744
    3. '{}' → logprob: -7.766531467437744
    4. ' {}' → logprob: -9.891531944274902
    5. '{' → logprob: -10.891531944274902
    6. ' {' → logprob: -13.766531944274902
    7. '[' → logprob: -13.891531944274902
    8. '1' → logprob: -14.141531944274902
    9. '  ' → logprob: -14.391531944274902
    10. 'a' → logprob: -15.766531944274902

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01182424183934927
    2. '{}' → logprob: -4.511824131011963
    3. '{' → logprob: -7.261824131011963
    4. '[' → logprob: -9.636824607849121
    5. ' ' → logprob: -12.636824607849121
    6. ' {}' → logprob: -13.511824607849121
    7. '1' → logprob: -13.636824607849121
    8. 'a' → logprob: -13.886824607849121
    9. 'dict' → logprob: -14.261824607849121
    10. '{}
' → logprob: -14.886824607849121

Token 18: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01459768321365118
    2. ' for' → logprob: -4.7645978927612305
    3. '
' → logprob: -5.6395978927612305
    4. '\n' → logprob: -6.3895978927612305
    5. '<|end|>' → logprob: -7.6395978927612305
    6. ' ' → logprob: -9.01459789276123
    7. '' → logprob: -10.26459789276123
    8. ')' → logprob: -11.01459789276123
    9. ' 
' → logprob: -11.13959789276123
    10. '	for' → logprob: -11.51459789276123

Token 19: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.453737710718997e-05
    2. '```' → logprob: -11.000044822692871
    3. ' for' → logprob: -11.625044822692871
    4. '\n' → logprob: -11.625044822692871
    5. '
' → logprob: -12.000044822692871
    6. '\' → logprob: -13.625044822692871
    7. 'n' → logprob: -14.000044822692871
    8. '`' → logprob: -14.500044822692871
    9. '``' → logprob: -15.125044822692871
    10. '	for' → logprob: -15.250044822692871

Token 20: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20746567845344543
    2. ' i' → logprob: -1.707465648651123
    3. '  ' → logprob: -5.332465648651123
    4. ' ‌' → logprob: -7.832465648651123
    5. ' _' → logprob: -8.082466125488281
    6. '_' → logprob: -8.207466125488281
    7. 'i' → logprob: -9.207466125488281
    8. ' num' → logprob: -10.082466125488281
    9. ' x' → logprob: -10.957466125488281
    10. ' a' → logprob: -11.582466125488281

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06278292834758759
    2. 'in' → logprob: -2.8127830028533936
    3. ' ' → logprob: -7.6877827644348145
    4. '  ' → logprob: -9.062783241271973
    5. '<|end|>' → logprob: -9.187783241271973
    6. ')' → logprob: -10.187783241271973
    7. '+' → logprob: -11.062783241271973
    8. '	in' → logprob: -11.437783241271973
    9. '<' → logprob: -11.937783241271973
    10. ' <' → logprob: -12.062783241271973

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.009822317399084568
    2. 'range' → logprob: -4.634822368621826
    3. ' a' → logprob: -9.884821891784668
    4. ' ' → logprob: -11.884821891784668
    5. 'a' → logprob: -12.134821891784668
    6. '	range' → logprob: -13.634821891784668
    7. ')' → logprob: -14.634821891784668
    8. '  ' → logprob: -14.884821891784668
    9. '(range' → logprob: -15.259821891784668
    10. '   ' → logprob: -15.634821891784668

Token 23: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7109208703041077
    2. '(num' → logprob: -0.7109208703041077
    3. '(len' → logprob: -4.335920810699463
    4. ' (' → logprob: -5.460920810699463
    5. '(n' → logprob: -8.585921287536621
    6. '(cnt' → logprob: -9.960921287536621
    7. ' ' → logprob: -11.210921287536621
    8. '(
' → logprob: -12.210921287536621
    9. '(

' → logprob: -12.460921287536621
    10. ' num' → logprob: -12.585921287536621

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002667450113222003
    2. ' ):' → logprob: -6.377667427062988
    3. '-' → logprob: -7.627667427062988
    4. ')' → logprob: -8.127667427062988
    5. '):
' → logprob: -8.877667427062988
    6. ' -' → logprob: -11.502667427062988
    7. '+' → logprob: -11.627667427062988
    8. ':' → logprob: -11.752667427062988
    9. ' ' → logprob: -12.127667427062988
    10. '   ' → logprob: -12.752667427062988

Token 25: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7519006729125977
    2. '   ' → logprob: -0.7519006729125977
    3. '    ' → logprob: -3.3769006729125977
    4. '<|end|>' → logprob: -4.126900672912598
    5. '  ' → logprob: -6.501900672912598
    6. ' for' → logprob: -6.876900672912598
    7. ' if' → logprob: -7.126900672912598
    8. '    
' → logprob: -7.251900672912598
    9. ' 
' → logprob: -7.251900672912598
    10. '       ' → logprob: -7.626900672912598

Token 26: ' min' (ID: 1349)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7561855316162109
    2. ' if' → logprob: -1.006185531616211
    3. '   ' → logprob: -2.506185531616211
    4. 'for' → logprob: -3.256185531616211
    5. 'if' → logprob: -3.881185531616211
    6. '    ' → logprob: -4.256185531616211
    7. ' a' → logprob: -5.381185531616211
    8. ' ' → logprob: -6.506185531616211
    9. ' cnt' → logprob: -7.006185531616211
    10. ' i' → logprob: -7.631185531616211

Token 27: 'j' (ID: 73)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001830942346714437
    2. '(' → logprob: -7.2518310546875
    3. '_val' → logprob: -8.0018310546875
    4. ' _' → logprob: -8.3768310546875
    5. '_a' → logprob: -8.3768310546875
    6. ' ' → logprob: -10.2518310546875
    7. '    ' → logprob: -10.3768310546875
    8. '_value' → logprob: -10.3768310546875
    9. '(a' → logprob: -10.3768310546875
    10. '_cnt' → logprob: -10.7518310546875

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14283637702465057
    2. '=' → logprob: -2.017836332321167
    3. '=i' → logprob: -10.017836570739746
    4. ' ' → logprob: -10.017836570739746
    5. '   ' → logprob: -10.142836570739746
    6. ',' → logprob: -11.142836570739746
    7. '    ' → logprob: -11.767836570739746
    8. '=int' → logprob: -13.142836570739746
    9. '  ' → logprob: -13.517836570739746
    10. '```' → logprob: -14.017836570739746

Token 29: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001327499165199697
    2. ' i' → logprob: -6.6263275146484375
    3. ' ' → logprob: -13.751327514648438
    4. '	i' → logprob: -15.251327514648438
    5. '   ' → logprob: -16.376327514648438
    6. '<|end|>' → logprob: -16.501327514648438
    7. '  ' → logprob: -16.876327514648438
    8. '0' → logprob: -17.376327514648438
    9. ''i' → logprob: -18.001327514648438
    10. 'for' → logprob: -18.251327514648438

Token 30: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.563567042350769
    2. '<|end|>' → logprob: -1.063567042350769
    3. '
' → logprob: -3.3135671615600586
    4. '   ' → logprob: -3.6885671615600586
    5. '<|end|>' → logprob: -4.938567161560059
    6. ' +' → logprob: -5.063567161560059
    7. 'for' → logprob: -5.313567161560059
    8. ' for' → logprob: -6.438567161560059
    9. ' ' → logprob: -6.938567161560059
    10. '    
' → logprob: -7.688567161560059

Token 31: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09117479622364044
    2. ' for' → logprob: -2.716174840927124
    3. '<|end|>' → logprob: -4.216174602508545
    4. '   ' → logprob: -5.591174602508545
    5. ' ' → logprob: -6.466174602508545
    6. '+' → logprob: -8.216175079345703
    7. 'j' → logprob: -8.716175079345703
    8. '```' → logprob: -9.216175079345703
    9. '    ' → logprob: -9.591175079345703
    10. '	for' → logprob: -9.716175079345703

Token 33: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04888313636183739
    2. 'range' → logprob: -3.0488831996917725
    3. ' j' → logprob: -8.423883438110352
    4. ' ' → logprob: -9.923883438110352
    5. 'j' → logprob: -10.923883438110352
    6. '	range' → logprob: -12.423883438110352
    7. '  ' → logprob: -13.923883438110352
    8. ' in' → logprob: -14.173883438110352
    9. ' xrange' → logprob: -14.298883438110352
    10. '    ' → logprob: -14.298883438110352

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0702952966094017
    2. 'in' → logprob: -2.6952953338623047
    3. 'range' → logprob: -8.070295333862305
    4. ' range' → logprob: -10.070295333862305
    5. ' ' → logprob: -13.195295333862305
    6. '   ' → logprob: -14.445295333862305
    7. '(range' → logprob: -15.320295333862305
    8. ')' → logprob: -15.945295333862305
    9. 'ange' → logprob: -15.945295333862305
    10. '	in' → logprob: -15.945295333862305

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47407910227775574
    2. ' range' → logprob: -0.9740791320800781
    3. '(range' → logprob: -13.849079132080078
    4. '	range' → logprob: -14.724079132080078
    5. 'i' → logprob: -15.224079132080078
    6. ' i' → logprob: -15.724079132080078
    7. '   ' → logprob: -15.974079132080078
    8. ' ' → logprob: -15.974079132080078
    9. '_range' → logprob: -18.349079132080078
    10. '    ' → logprob: -18.599079132080078

Token 36: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.000817369669675827
    2. '(' → logprob: -7.37581729888916
    3. ' i' → logprob: -8.87581729888916
    4. ' (' → logprob: -10.50081729888916
    5. '(num' → logprob: -11.50081729888916
    6. ')' → logprob: -11.75081729888916
    7. 'i' → logprob: -13.00081729888916
    8. ',i' → logprob: -13.87581729888916
    9. ',' → logprob: -14.12581729888916
    10. '   ' → logprob: -14.25081729888916

Token 37: ',num' (ID: 78576)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008929980103857815
    2. ' +' → logprob: -7.7508931159973145
    3. ',' → logprob: -8.125892639160156
    4. ',num' → logprob: -9.000892639160156
    5. ' ,' → logprob: -10.875892639160156
    6. '   ' → logprob: -11.375892639160156
    7. ' ' → logprob: -11.875892639160156
    8. '+,' → logprob: -13.500892639160156
    9. '1' → logprob: -13.625892639160156
    10. '```' → logprob: -14.500892639160156

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020581480115652084
    2. '):
' → logprob: -3.8955814838409424
    3. ')' → logprob: -11.645581245422363
    4. ':' → logprob: -11.770581245422363
    5. '   ' → logprob: -12.145581245422363
    6. '):
' → logprob: -12.395581245422363
    7. ',' → logprob: -12.520581245422363
    8. '):

' → logprob: -13.020581245422363
    9. '+' → logprob: -13.395581245422363
    10. '>):' → logprob: -13.395581245422363

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008292333222925663
    2. ' if' → logprob: -5.508292198181152
    3. '<|end|>' → logprob: -6.133292198181152
    4. '   ' → logprob: -7.133292198181152
    5. '    ' → logprob: -7.758292198181152
    6. 'if' → logprob: -8.133292198181152
    7. ':' → logprob: -9.508292198181152
    8. ' ' → logprob: -9.633292198181152
    9. ':
' → logprob: -10.008292198181152
    10. '):
' → logprob: -10.133292198181152

Token 40: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7158569097518921
    2. '           ' → logprob: -0.9658569097518921
    3. 'if' (adapté à ' if') → logprob: -2.5908570289611816
    4. '<|end|>' → logprob: -3.4658570289611816
    5. '       ' → logprob: -4.465857028961182
    6. ' ' → logprob: -4.590857028961182
    7. '        ' → logprob: -7.715857028961182
    8. '```' → logprob: -7.840857028961182
    9. '<|end|>' → logprob: -7.840857028961182
    10. '   ' → logprob: -7.965857028961182

Token 41: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.020569443702697754
    2. 'a' → logprob: -3.895569324493408
    3. ' ' → logprob: -11.270569801330566
    4. '	a' → logprob: -11.770569801330566
    5. '    ' → logprob: -12.645569801330566
    6. ' ' → logprob: -13.270569801330566
    7. '   ' → logprob: -14.770569801330566
    8. '```' → logprob: -14.895569801330566
    9. '  ' → logprob: -15.270569801330566
    10. '>a' → logprob: -15.395569801330566

Token 42: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005678066518157721
    2. '[' → logprob: -7.50056791305542
    3. '[min' → logprob: -11.625567436218262
    4. '[a' → logprob: -12.625567436218262
    5. 'j' → logprob: -14.000567436218262
    6. ' [' → logprob: -14.375567436218262
    7. '[i' → logprob: -14.625567436218262
    8. '```' → logprob: -15.250567436218262
    9. '[
' → logprob: -16.125568389892578
    10. ' ' → logprob: -17.125568389892578

Token 43: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10367479920387268
    2. '<' → logprob: -2.35367488861084
    3. ')' → logprob: -6.72867488861084
    4. ']' → logprob: -7.10367488861084
    5. 'a' → logprob: -7.97867488861084
    6. '[' → logprob: -8.22867488861084
    7. ')<' → logprob: -8.47867488861084
    8. ' ' → logprob: -8.60367488861084
    9. ']<' → logprob: -9.35367488861084
    10. '<int' → logprob: -9.47867488861084

Token 44: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4743414521217346
    2. '<' → logprob: -0.9743414521217346
    3. '<int' → logprob: -9.59934139251709
    4. '<num' → logprob: -9.72434139251709
    5. '<a' → logprob: -9.97434139251709
    6. ' ' → logprob: -10.59934139251709
    7. 'a' → logprob: -11.22434139251709
    8. '[' → logprob: -11.84934139251709
    9. '<size' → logprob: -11.97434139251709
    10. '<|end|>' → logprob: -12.47434139251709

Token 45: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014165511354804039
    2. ' a' → logprob: -4.26416540145874
    3. '	a' → logprob: -13.764165878295898
    4. ' ' → logprob: -14.514165878295898
    5. '   ' → logprob: -15.514165878295898
    6. '>a' → logprob: -16.0141658782959
    7. '  ' → logprob: -16.6391658782959
    8. '_a' → logprob: -16.8891658782959
    9. ' ' → logprob: -17.0141658782959
    10. '```' → logprob: -17.2641658782959

Token 46: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -9.019237768370658e-05
    2. 'min' → logprob: -9.875090599060059
    3. '[' → logprob: -10.250090599060059
    4. '[m' → logprob: -14.000090599060059
    5. '[a' → logprob: -14.500090599060059
    6. '[i' → logprob: -15.000090599060059
    7. ' [' → logprob: -15.125090599060059
    8. '	min' → logprob: -15.375090599060059
    9. 'a' → logprob: -15.500090599060059
    10. ' min' → logprob: -15.625090599060059

Token 47: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8624639324116288e-06
    2. ']' → logprob: -13.625001907348633
    3. ' j' → logprob: -15.500001907348633
    4. '[j' → logprob: -15.500001907348633
    5. 'i' → logprob: -16.500001907348633
    6. '	j' → logprob: -17.000001907348633
    7. '_j' → logprob: -17.375001907348633
    8. '```' → logprob: -17.375001907348633
    9. 'a' → logprob: -17.625001907348633
    10. ')' → logprob: -18.500001907348633

Token 48: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.05560421943664551
    2. '):' → logprob: -3.0556042194366455
    3. ']' → logprob: -5.305603981018066
    4. ']):' → logprob: -7.430603981018066
    5. ':' → logprob: -7.555603981018066
    6. 'j' → logprob: -8.305603981018066
    7. '>:' → logprob: -8.805603981018066
    8. '}:' → logprob: -9.680603981018066
    9. '']:' → logprob: -9.680603981018066
    10. '>' → logprob: -10.055603981018066

Token 49: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17529234290122986
    2. '):' → logprob: -2.5502922534942627
    3. '       ' → logprob: -3.9252922534942627
    4. '<|end|>' → logprob: -4.175292491912842
    5. ':min' → logprob: -4.425292491912842
    6. '):
' → logprob: -4.800292491912842
    7. '<|end|>' → logprob: -5.425292491912842
    8. 'min' → logprob: -5.550292491912842
    9. ':
' → logprob: -5.675292491912842
    10. ' min' → logprob: -5.800292491912842

Token 50: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.0026867061387747526
    2. 'min' (adapté à ' min') → logprob: -6.127686500549316
    3. ' ' → logprob: -8.127686500549316
    4. '=min' → logprob: -10.127686500549316
    5. 'j' → logprob: -10.252686500549316
    6. ' j' → logprob: -10.752686500549316
    7. '_min' → logprob: -11.002686500549316
    8. '	min' → logprob: -11.002686500549316
    9. '(min' → logprob: -11.377686500549316
    10. ' a' → logprob: -11.377686500549316

Token 51: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.7432603272027336e-06
    2. 'a' → logprob: -14.375001907348633
    3. '           ' → logprob: -15.000001907348633
    4. '       ' → logprob: -15.375001907348633
    5. '```' → logprob: -15.875001907348633
    6. '   ' → logprob: -16.250001907348633
    7. 'min' → logprob: -16.625001907348633
    8. ' ' → logprob: -16.875001907348633
    9. ' j' → logprob: -17.375001907348633
    10. '    ' → logprob: -17.625001907348633

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008622966706752777
    2. '=' → logprob: -4.758623123168945
    3. ' ' → logprob: -12.258623123168945
    4. '=j' → logprob: -12.633623123168945
    5. '=i' → logprob: -15.258623123168945
    6. ' =
' → logprob: -17.258623123168945
    7. ' =)' → logprob: -17.383623123168945
    8. ' ' → logprob: -17.633623123168945
    9. ' ==' → logprob: -17.633623123168945
    10. '＝' → logprob: -18.008623123168945

Token 53: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10025455802679062
    2. ' j' → logprob: -2.350254535675049
    3. '	j' → logprob: -9.975255012512207
    4. ' ' → logprob: -14.100255012512207
    5. '[j' → logprob: -15.475255012512207
    6. '$j' → logprob: -15.600255012512207
    7. ' ' → logprob: -16.22525405883789
    8. '<|end|>' → logprob: -16.72525405883789
    9. '    ' → logprob: -16.97525405883789
    10. ',j' → logprob: -17.10025405883789

Token 54: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6839482188224792
    2. '<|end|>' → logprob: -0.8089482188224792
    3. ')' → logprob: -4.058948040008545
    4. '   ' → logprob: -5.058948040008545
    5. '<|end|>' → logprob: -5.183948040008545
    6. '[' → logprob: -5.183948040008545
    7. ' )' → logprob: -5.808948040008545
    8. ' 
' → logprob: -5.933948040008545
    9. '    ' → logprob: -6.683948040008545
    10. '```' → logprob: -6.683948040008545

Token 56: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '[i' (ID: 1768)
  Prédit: '[min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.47819629311561584
    2. '[' → logprob: -0.9781962633132935
    3. '[i' → logprob: -5.728196144104004
    4. ',' → logprob: -7.728196144104004
    5. '.swap' → logprob: -9.228196144104004
    6. '[j' → logprob: -9.728196144104004
    7. '[a' → logprob: -10.478196144104004
    8. '[temp' → logprob: -10.603196144104004
    9. '[int' → logprob: -10.853196144104004
    10. '[
' → logprob: -10.853196144104004

Token 58: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4298745393753052
    2. '],' → logprob: -1.0548745393753052
    3. ',a' → logprob: -7.679874420166016
    4. '},' → logprob: -8.179874420166016
    5. '>,' → logprob: -8.429874420166016
    6. '),' → logprob: -9.554874420166016
    7. ''],' → logprob: -10.304874420166016
    8. ']' → logprob: -10.304874420166016
    9. '],[' → logprob: -11.304874420166016
    10. ' ,' → logprob: -11.429874420166016

Token 59: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026304712519049644
    2. ' a' → logprob: -3.6513047218322754
    3. '	a' → logprob: -13.151304244995117
    4. '<|end|>' → logprob: -13.401304244995117
    5. '  ' → logprob: -15.026304244995117
    6. '   ' → logprob: -15.401304244995117
    7. ' ' → logprob: -15.651304244995117
    8. '    ' → logprob: -15.651304244995117
    9. '_a' → logprob: -17.151304244995117
    10. '#a' → logprob: -17.526304244995117

Token 60: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.00024524700711481273
    2. '[' → logprob: -8.375245094299316
    3. 'min' → logprob: -11.625245094299316
    4. '[j' → logprob: -13.000245094299316
    5. '[max' → logprob: -14.500245094299316
    6. '[
' → logprob: -14.625245094299316
    7. '[num' → logprob: -14.750245094299316
    8. '```' → logprob: -15.250245094299316
    9. '<|end|>' → logprob: -15.375245094299316
    10. '[user' → logprob: -15.375245094299316

Token 61: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.240481914370321e-05
    2. 'min' → logprob: -10.125052452087402
    3. 'a' → logprob: -12.875052452087402
    4. '```' → logprob: -12.875052452087402
    5. ' ' → logprob: -13.125052452087402
    6. ']' → logprob: -13.750052452087402
    7. '[min' → logprob: -13.875052452087402
    8. '   ' → logprob: -14.375052452087402
    9. '[j' → logprob: -14.500052452087402
    10. 'i' → logprob: -15.250052452087402

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.436450636712834e-05
    2. ']=' → logprob: -9.875094413757324
    3. ' ]' → logprob: -10.500094413757324
    4. '=' → logprob: -11.250094413757324
    5. ' =' → logprob: -14.250094413757324
    6. '   ' → logprob: -14.750094413757324
    7. ')' → logprob: -15.125094413757324
    8. '']' → logprob: -15.250094413757324
    9. '<|end|>' → logprob: -15.500094413757324
    10. '}' → logprob: -15.750094413757324

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033664945513010025
    2. ' =' → logprob: -3.4086649417877197
    3. '=
' → logprob: -11.78366470336914
    4. '<|end|>' → logprob: -12.53366470336914
    5. '=

' → logprob: -12.65866470336914
    6. ',' → logprob: -12.78366470336914
    7. ' =
' → logprob: -14.40866470336914
    8. '=a' → logprob: -15.65866470336914
    9. ' ' → logprob: -15.90866470336914
    10. '=True' → logprob: -15.90866470336914

Token 64: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.47408318519592285
    2. 'a' → logprob: -0.9740831851959229
    3. '	a' → logprob: -12.474082946777344
    4. ' ' → logprob: -13.349082946777344
    5. ' ' → logprob: -15.849082946777344
    6. '<|end|>' → logprob: -16.224082946777344
    7. '>a' → logprob: -16.349082946777344
    8. '_a' → logprob: -16.474082946777344
    9. '    ' → logprob: -16.599082946777344
    10. '   ' → logprob: -16.974082946777344

Token 65: '[min' (ID: 135647)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2920549511909485
    2. '[min' → logprob: -1.4170548915863037
    3. '[j' → logprob: -4.542055130004883
    4. '[' → logprob: -9.167055130004883
    5. '[a' → logprob: -10.417055130004883
    6. 'min' → logprob: -10.667055130004883
    7. '[num' → logprob: -11.542055130004883
    8. 'i' → logprob: -12.042055130004883
    9. '```' → logprob: -12.042055130004883
    10. ' ' → logprob: -12.417055130004883

Token 66: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2352385965641588e-05
    2. ']' → logprob: -11.625012397766113
    3. 'i' → logprob: -13.750012397766113
    4. '[j' → logprob: -13.875012397766113
    5. 'min' → logprob: -14.750012397766113
    6. '```' → logprob: -15.125012397766113
    7. 'a' → logprob: -16.375011444091797
    8. ' j' → logprob: -16.500011444091797
    9. '[min' → logprob: -16.500011444091797
    10. '[i' → logprob: -16.875011444091797

Token 67: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5307641625404358
    2. '],' → logprob: -0.9057641625404358
    3. ',' → logprob: -4.905764102935791
    4. ',a' → logprob: -9.15576457977295
    5. ' ],' → logprob: -10.78076457977295
    6. ' ]' → logprob: -10.90576457977295
    7. ' ,' → logprob: -11.03076457977295
    8. 'a' → logprob: -11.53076457977295
    9. '],[' → logprob: -11.78076457977295
    10. ',i' → logprob: -11.90576457977295

Token 68: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25192928314208984
    2. ' a' → logprob: -1.5019292831420898
    3. ' ' → logprob: -15.87692928314209
    4. '	a' → logprob: -16.001930236816406
    5. ' ' → logprob: -17.751930236816406
    6. '```' → logprob: -17.876930236816406
    7. '_a' → logprob: -18.376930236816406
    8. '   ' → logprob: -18.876930236816406
    9. '  ' → logprob: -19.751930236816406
    10. ' а' → logprob: -20.126930236816406

Token 69: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020950057660229504
    2. '[' → logprob: -8.50020980834961
    3. 'i' → logprob: -12.75020980834961
    4. '[j' → logprob: -13.25020980834961
    5. '```' → logprob: -14.12520980834961
    6. '[a' → logprob: -15.75020980834961
    7. ' [' → logprob: -15.75020980834961
    8. '[
' → logprob: -16.12520980834961
    9. ']' → logprob: -17.37520980834961
    10. ' i' → logprob: -17.37520980834961

Token 70: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006763564422726631
    2. ']' → logprob: -5.006763458251953
    3. ')
' → logprob: -11.131763458251953
    4. '）' → logprob: -11.381763458251953
    5. '[i' → logprob: -11.881763458251953
    6. '])' → logprob: -12.006763458251953
    7. ')]' → logprob: -12.131763458251953
    8. '[' → logprob: -13.506763458251953
    9. '}' → logprob: -14.131763458251953
    10. '')' → logprob: -14.881763458251953

Token 71: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.108377456665039
    2. '   ' → logprob: -1.233377456665039
    3. '    
' → logprob: -2.233377456665039
    4. '```' → logprob: -2.358377456665039
    5. '  
' → logprob: -2.983377456665039
    6. '
' → logprob: -3.233377456665039
    7. '``' → logprob: -3.358377456665039
    8. ' 
' → logprob: -4.233377456665039
    9. ' if' → logprob: -4.858377456665039
    10. '`
' → logprob: -4.983377456665039

Token 72: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4932694733142853
    2. ' if' → logprob: -0.9932694435119629
    3. ' 
' → logprob: -4.993269443511963
    4. '   ' → logprob: -4.993269443511963
    5. '    
' → logprob: -6.118269443511963
    6. '\n' → logprob: -7.243269443511963
    7. 'cnt' → logprob: -7.243269443511963
    8. '
' → logprob: -7.493269443511963
    9. '  
' → logprob: -8.118269920349121
    10. '```' → logprob: -8.368269920349121

Token 73: ' i' (ID: 575)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.30782005190849304
    2. ' i' → logprob: -2.0578200817108154
    3. 'min' → logprob: -2.0578200817108154
    4. 'i' → logprob: -4.682819843292236
    5. ' a' → logprob: -8.557820320129395
    6. 'a' → logprob: -10.682820320129395
    7. ' ' → logprob: -11.307820320129395
    8. ' not' → logprob: -12.932820320129395
    9. '(min' → logprob: -13.057820320129395
    10. '	min' → logprob: -13.432820320129395

Token 74: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.31330832839012146
    2. ' !=' → logprob: -1.3133083581924438
    3. '<|end|>' → logprob: -11.063308715820312
    4. ' ' → logprob: -11.813308715820312
    5. ' ' → logprob: -12.188308715820312
    6. '()!=' → logprob: -12.688308715820312
    7. '!=(' → logprob: -13.063308715820312
    8. '<>' → logprob: -13.563308715820312
    9. '==' → logprob: -13.563308715820312
    10. '!==' → logprob: -13.563308715820312

Token 75: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0001818489981815219
    2. ' min' → logprob: -8.625182151794434
    3. '   ' → logprob: -13.625182151794434
    4. '	min' → logprob: -14.625182151794434
    5. '  ' → logprob: -15.375182151794434
    6. '    ' → logprob: -15.500182151794434
    7. '     ' → logprob: -16.250181198120117
    8. ' ' → logprob: -16.500181198120117
    9. '<|end|>' → logprob: -17.625181198120117
    10. '[min' → logprob: -17.875181198120117

Token 76: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -17.375
    3. 'min' → logprob: -17.625
    4. ' j' → logprob: -17.75
    5. '<|end|>' → logprob: -18.125
    6. '	j' → logprob: -18.5
    7. '```' → logprob: -18.5
    8. 'i' → logprob: -18.75
    9. '   ' → logprob: -19.25
    10. 't' → logprob: -19.625

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008696119301021099
    2. ':
' → logprob: -4.75869607925415
    3. '<|end|>' → logprob: -10.633696556091309
    4. ' :' → logprob: -11.008696556091309
    5. '   ' → logprob: -12.008696556091309
    6. '):' → logprob: -12.383696556091309
    7. '<|end|>' → logprob: -12.383696556091309
    8. '+' → logprob: -12.508696556091309
    9. '):
' → logprob: -12.508696556091309
    10. '       ' → logprob: -12.758696556091309

Token 78: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.493329793214798
    2. '       ' → logprob: -1.2433297634124756
    3. ' cnt' → logprob: -2.4933297634124756
    4. '	cnt' → logprob: -4.368330001831055
    5. 'cnt' → logprob: -5.993330001831055
    6. '    
' → logprob: -6.868330001831055
    7. '    ' → logprob: -7.493330001831055
    8. ' 
' → logprob: -8.243330001831055
    9. '
' → logprob: -8.243330001831055
    10. '        
' → logprob: -8.493330001831055

Token 79: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.01816387102007866
    2. ' cnt' → logprob: -4.018163681030273
    3. '   ' → logprob: -12.018163681030273
    4. '	cnt' → logprob: -12.018163681030273
    5. '(cnt' → logprob: -14.143163681030273
    6. '_cnt' → logprob: -14.893163681030273
    7. '[cnt' → logprob: -15.268163681030273
    8. '       ' → logprob: -15.518163681030273
    9. '1' → logprob: -16.268163681030273
    10. '```' → logprob: -16.393163681030273

Token 80: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.027996348217129707
    2. ' +=' → logprob: -3.652996301651001
    3. '+' → logprob: -6.40299654006958
    4. ']+=' → logprob: -10.777996063232422
    5. '+='' → logprob: -12.277996063232422
    6. '=' → logprob: -12.402996063232422
    7. '<|end|>' → logprob: -12.777996063232422
    8. '++' → logprob: -13.027996063232422
    9. '+="' → logprob: -13.277996063232422
    10. '```' → logprob: -14.277996063232422

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -18.250051498413086
    4. '１' → logprob: -20.375051498413086
    5. '  ' → logprob: -21.125051498413086
    6. '```' → logprob: -21.250051498413086
    7. ' ' → logprob: -21.750051498413086
    8. '<|end|>' → logprob: -22.000051498413086
    9. '       ' → logprob: -22.250051498413086
    10. '    ' → logprob: -22.375051498413086

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '１' → logprob: -20.375
    4. '   ' → logprob: -20.625
    5. '  ' → logprob: -22.0
    6. '<|end|>' → logprob: -22.625
    7. '```' → logprob: -22.75
    8. '       ' → logprob: -23.25
    9. '+' → logprob: -23.375
    10. '१' → logprob: -24.0

Token 83: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008670237846672535
    2. '
' → logprob: -4.758670330047607
    3. '  
' → logprob: -11.13366985321045
    4. '
' → logprob: -11.38366985321045
    5. '\n' → logprob: -12.00866985321045
    6. '```' → logprob: -12.25866985321045
    7. ')
' → logprob: -12.38366985321045
    8. ' 
' → logprob: -12.75866985321045
    9. ' print' → logprob: -13.00866985321045
    10. ')' → logprob: -13.13366985321045

Token 84: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001507601235061884
    2. '
' → logprob: -6.501507759094238
    3. '
' → logprob: -13.126507759094238
    4. 'for' → logprob: -13.251507759094238
    5. ' print' → logprob: -14.876507759094238
    6. '  
' → logprob: -15.001507759094238
    7. '```' → logprob: -15.251507759094238
    8. ' 
' → logprob: -15.376507759094238
    9. '

' → logprob: -15.751507759094238
    10. '    
' → logprob: -16.001506805419922

Token 85: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09290464222431183
    2. '(a' → logprob: -2.842904567718506
    3. '('' → logprob: -4.217904567718506
    4. '("' → logprob: -5.342904567718506
    5. '("("' → logprob: -5.342904567718506
    6. '(cnt' → logprob: -5.592904567718506
    7. '(len' → logprob: -6.717904567718506
    8. '(sum' → logprob: -8.092905044555664
    9. '(f' → logprob: -8.217905044555664
    10. '((' → logprob: -8.342905044555664

Token 86: ' ".' (ID: 11730)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14165933430194855
    2. '"' → logprob: -2.7666592597961426
    3. 'a' → logprob: -3.6416592597961426
    4. 'cnt' → logprob: -3.7666592597961426
    5. '{}' → logprob: -4.766659259796143
    6. '".' → logprob: -5.891659259796143
    7. ' ".' → logprob: -6.391659259796143
    8. ' '.' → logprob: -6.516659259796143
    9. '[cnt' → logprob: -7.016659259796143
    10. ''.' → logprob: -7.266659259796143

Token 87: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -7.684157026233152e-05
    2. 'print' → logprob: -9.500077247619629
    3. 'jo' → logprob: -13.500077247619629
    4. 'j' → logprob: -15.500077247619629
    5. ' join' → logprob: -16.125076293945312
    6. 'write' → logprob: -16.750076293945312
    7. '```' → logprob: -16.750076293945312
    8. 'format' → logprob: -17.500076293945312
    9. 'rstrip' → logprob: -17.625076293945312
    10. 'joined' → logprob: -19.125076293945312

Token 88: '([' (ID: 5194)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.05591674894094467
    2. '(' → logprob: -3.5559167861938477
    3. '(map' → logprob: -4.430916786193848
    4. '(a' → logprob: -4.930916786193848
    5. '([' → logprob: -5.305916786193848
    6. '(list' → logprob: -7.430916786193848
    7. '(['' → logprob: -7.805916786193848
    8. '[str' → logprob: -8.555916786193848
    9. 'str' → logprob: -8.680916786193848
    10. '(chr' → logprob: -8.930916786193848

Token 89: 'str' (ID: 689)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.20146216452121735
    2. 'str' → logprob: -1.7014621496200562
    3. 'list' → logprob: -10.326461791992188
    4. '[str' → logprob: -11.451461791992188
    5. '(map' → logprob: -12.826461791992188
    6. ' map' → logprob: -13.326461791992188
    7. '(str' → logprob: -14.201461791992188
    8. '   ' → logprob: -15.451461791992188
    9. ' str' → logprob: -15.451461791992188
    10. '```' → logprob: -16.951461791992188

Token 90: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0019337546546012163
    2. '(i' → logprob: -6.876933574676514
    3. '(num' → logprob: -7.751933574676514
    4. '(a' → logprob: -7.751933574676514
    5. '(k' → logprob: -11.501934051513672
    6. '(s' → logprob: -11.501934051513672
    7. '(n' → logprob: -12.001934051513672
    8. '(e' → logprob: -12.251934051513672
    9. '(' → logprob: -12.751934051513672
    10. '(v' → logprob: -12.876934051513672

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17167170345783234
    2. '(x' → logprob: -1.921671748161316
    3. '(a' → logprob: -4.5466718673706055
    4. '(i' → logprob: -8.046671867370605
    5. 'a' → logprob: -8.421671867370605
    6. 'x' → logprob: -9.296671867370605
    7. '(item' → logprob: -10.671671867370605
    8. ')x' → logprob: -10.671671867370605
    9. ')a' → logprob: -10.796671867370605
    10. '(n' → logprob: -10.921671867370605

Token 92: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9315025210380554
    2. ' for' → logprob: -1.1815025806427002
    3. 'for' → logprob: -1.4315025806427002
    4. 'a' → logprob: -2.9315025806427
    5. '(a' → logprob: -5.556502342224121
    6. ']' → logprob: -7.431502342224121
    7. ' a' → logprob: -7.556502342224121
    8. ' ' → logprob: -7.681502342224121
    9. ')])' → logprob: -7.931502342224121
    10. '(x' → logprob: -8.056502342224121

Token 93: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023502618074417114
    2. ' a' → logprob: -3.7735025882720947
    3. '(a' → logprob: -8.273502349853516
    4. '	a' → logprob: -13.898502349853516
    5. '(' → logprob: -14.773502349853516
    6. ' ' → logprob: -14.898502349853516
    7. ')a' → logprob: -15.898502349853516
    8. '#a' → logprob: -16.898502349853516
    9. ' (' → logprob: -16.898502349853516
    10. '_a' → logprob: -17.148502349853516

Token 94: ' in' (ID: 306)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09439485520124435
    2. '(a' → logprob: -2.4693949222564697
    3. ' a' → logprob: -5.469394683837891
    4. ' in' → logprob: -6.969394683837891
    5. 'in' → logprob: -8.71939468383789
    6. '(' → logprob: -9.34439468383789
    7. ']' → logprob: -11.71939468383789
    8. ',a' → logprob: -11.84439468383789
    9. ')' → logprob: -12.09439468383789
    10. ' ' → logprob: -12.71939468383789

Token 95: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009115827269852161
    2. ' a' → logprob: -7.000911712646484
    3. '(a' → logprob: -16.750911712646484
    4. ')a' → logprob: -17.500911712646484
    5. '[a' → logprob: -17.625911712646484
    6. '	a' → logprob: -18.750911712646484
    7. ' ' → logprob: -18.875911712646484
    8. '#a' → logprob: -19.750911712646484
    9. ''a' → logprob: -20.125911712646484
    10. '"a' → logprob: -21.000911712646484

Token 96: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.38898545503616333
    2. '])' → logprob: -1.1389853954315186
    3. ']),' → logprob: -6.388985633850098
    4. ']))
' → logprob: -8.513985633850098
    5. ')])' → logprob: -9.263985633850098
    6. '))' → logprob: -9.638985633850098
    7. ')' → logprob: -10.263985633850098
    8. ']' → logprob: -11.513985633850098
    9. '])
' → logprob: -11.888985633850098
    10. ' ])' → logprob: -12.013985633850098

Token 97: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005132357589900494
    2. '\n' → logprob: -5.38013219833374
    3. '"\' → logprob: -8.880132675170898
    4. '\' → logprob: -9.005132675170898
    5. '
' → logprob: -9.130132675170898
    6. ' print' → logprob: -10.005132675170898
    7. ''\' → logprob: -10.380132675170898
    8. '  
' → logprob: -10.755132675170898
    9. ' 
' → logprob: -11.005132675170898
    10. '```' → logprob: -11.630132675170898

Token 98: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.20145291090011597
    2. '(' → logprob: -1.7014529705047607
    3. '("("' → logprob: -11.45145320892334
    4. '(f' → logprob: -11.57645320892334
    5. '('' → logprob: -11.95145320892334
    6. '(count' → logprob: -12.57645320892334
    7. '((' → logprob: -12.95145320892334
    8. '(len' → logprob: -13.20145320892334
    9. '(ct' → logprob: -13.57645320892334
    10. '(`' → logprob: -14.45145320892334

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '))' → logprob: -15.000000953674316
    3. ')`' → logprob: -15.000000953674316
    4. ' )' → logprob: -17.625
    5. ')
' → logprob: -18.125
    6. '`)' → logprob: -18.375
    7. ')}' → logprob: -18.625
    8. '')' → logprob: -19.375
    9. ')**' → logprob: -19.375
    10. '(' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 97
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 78
Précision stricte (1ère position): 35.05%
Précision adaptée (1ère position): 38.14%
Précision (top 10): 80.41%
================================================================================
