================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = list(map(int, input().split()))
cnt = 0
for i in range(n):
    minj = i
    for j in range(i,n):
        if a[j] < a[minj]:
            minj = j
    if i != minj:
        cnt += 1
    tmp = a[i]
    a[i] = a[minj]
    a[minj] = tmp

print(*a)
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012210107408463955
    2. '[i' → logprob: -6.012209892272949
    3. ' =' → logprob: -6.387209892272949
    4. '[a' → logprob: -6.637209892272949
    5. '.' → logprob: -6.887209892272949
    6. '=' → logprob: -7.137209892272949
    7. 'r' → logprob: -7.262209892272949
    8. 'a' → logprob: -7.387209892272949
    9. '[:]' → logprob: -7.387209892272949
    10. 'pp' → logprob: -7.637209892272949

Token 7: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.718782365322113
    2. ' []' → logprob: -0.843782365322113
    3. 'list' → logprob: -3.718782424926758
    4. ' [' → logprob: -3.718782424926758
    5. '[' → logprob: -4.593782424926758
    6. '[int' → logprob: -4.718782424926758
    7. ' list' → logprob: -4.843782424926758
    8. '[input' → logprob: -6.218782424926758
    9. 'a' → logprob: -6.718782424926758
    10. 'n' → logprob: -6.843782424926758

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003077886998653412
    2. '[' → logprob: -6.253077983856201
    3. '(range' → logprob: -8.003077507019043
    4. '```' → logprob: -8.003077507019043
    5. '[(' → logprob: -8.753077507019043
    6. ')' → logprob: -9.128077507019043
    7. '(a' → logprob: -10.128077507019043
    8. ' (' → logprob: -10.378077507019043
    9. ''s' → logprob: -10.628077507019043
    10. '`' → logprob: -10.753077507019043

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.020255954936146736
    2. '(' → logprob: -4.145256042480469
    3. '(str' → logprob: -6.770256042480469
    4. '(input' → logprob: -7.020256042480469
    5. '(lambda' → logprob: -7.145256042480469
    6. '<int' → logprob: -7.770256042480469
    7. ')' → logprob: -8.520256042480469
    8. '[int' → logprob: -8.520256042480469
    9. 'int' → logprob: -8.645256042480469
    10. '```' → logprob: -9.020256042480469

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0046382686123251915
    2. '(' → logprob: -5.879638195037842
    3. '))' → logprob: -7.254638195037842
    4. ',input' → logprob: -7.379638195037842
    5. 'input' → logprob: -8.629638671875
    6. ')' → logprob: -8.754638671875
    7. '=input' → logprob: -9.629638671875
    8. '[input' → logprob: -11.379638671875
    9. '(user' → logprob: -11.879638671875
    10. ')))' → logprob: -12.004638671875

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006735026836395264
    2. ' input' → logprob: -5.006734848022461
    3. '(input' → logprob: -10.881734848022461
    4. ',input' → logprob: -15.131734848022461
    5. ')' → logprob: -15.506734848022461
    6. '=input' → logprob: -15.631734848022461
    7. '	input' → logprob: -16.25673484802246
    8. '<input' → logprob: -17.25673484802246
    9. '_input' → logprob: -18.00673484802246
    10. '))' → logprob: -18.00673484802246

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6625441312789917
    2. '()' → logprob: -1.5375441312789917
    3. '())' → logprob: -1.5375441312789917
    4. '().' → logprob: -3.0375442504882812
    5. '()));' → logprob: -6.162544250488281
    6. ')' → logprob: -6.412544250488281
    7. '(' → logprob: -6.912544250488281
    8. '))' → logprob: -7.412544250488281
    9. '()>' → logprob: -7.912544250488281
    10. '());' → logprob: -8.037544250488281

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000573167169932276
    2. 'strip' → logprob: -7.50057315826416
    3. 'rstrip' → logprob: -10.87557315826416
    4. ' split' → logprob: -13.87557315826416
    5. '(split' → logprob: -15.75057315826416
    6. 'spl' → logprob: -16.500574111938477
    7. ')' → logprob: -18.375574111938477
    8. 's' → logprob: -18.500574111938477
    9. 'sp' → logprob: -19.250574111938477
    10. 'replace' → logprob: -19.875574111938477

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8037156462669373
    2. '()))' → logprob: -0.8037156462669373
    3. ')' → logprob: -2.928715705871582
    4. '())' → logprob: -3.178715705871582
    5. '(' → logprob: -5.178715705871582
    6. '()' → logprob: -6.053715705871582
    7. '('' → logprob: -7.303715705871582
    8. ')))' → logprob: -7.803715705871582
    9. ''))' → logprob: -8.553715705871582
    10. '())))' → logprob: -9.053715705871582

Token 15: 'cnt' (ID: 33160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6516948342323303
    2. 's' → logprob: -1.0266947746276855
    3. 'c' → logprob: -3.2766947746276855
    4. 'for' → logprob: -3.7766947746276855
    5. 'sum' → logprob: -4.2766947746276855
    6. 'b' → logprob: -4.6516947746276855
    7. 'count' → logprob: -4.6516947746276855
    8. 'm' → logprob: -4.7766947746276855
    9. 'result' → logprob: -5.0266947746276855
    10. 'd' → logprob: -6.5266947746276855

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016090208664536476
    2. '_' → logprob: -4.391090393066406
    3. '(' → logprob: -6.016090393066406
    4. '\[' → logprob: -8.016090393066406
    5. 's' → logprob: -8.141090393066406
    6. '=' → logprob: -8.766090393066406
    7. '[a' → logprob: -9.266090393066406
    8. '[(' → logprob: -10.141090393066406
    9. '[:]' → logprob: -10.391090393066406
    10. '[]' → logprob: -10.516090393066406

Token 17: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.10475550591945648
    2. '0' → logprob: -2.979755401611328
    3. '{' → logprob: -3.604755401611328
    4. '[' → logprob: -3.979755401611328
    5. ' {}' → logprob: -6.229755401611328
    6. ' ' → logprob: -7.604755401611328
    7. ' [' → logprob: -8.354755401611328
    8. ' {' → logprob: -10.604755401611328
    9. '{})' → logprob: -11.729755401611328
    10. '   ' → logprob: -12.354755401611328

Token 18: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.041228003799915314
    2. '{' → logprob: -3.2912280559539795
    3. '0' → logprob: -5.7912278175354
    4. '[' → logprob: -9.541228294372559
    5. '({' → logprob: -10.916228294372559
    6. '{}
' → logprob: -11.416228294372559
    7. '{}\' → logprob: -11.916228294372559
    8. '{})' → logprob: -12.041228294372559
    9. '(' → logprob: -12.916228294372559
    10. '{\' → logprob: -13.291228294372559

Token 19: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06236155331134796
    2. ' for' → logprob: -2.812361478805542
    3. '
' → logprob: -8.812361717224121
    4. '<|end|>' → logprob: -8.937361717224121
    5. '\n' → logprob: -9.437361717224121
    6. 'n' → logprob: -12.062361717224121
    7. '```' → logprob: -12.062361717224121
    8. ' ' → logprob: -12.187361717224121
    9. ')' → logprob: -12.562361717224121
    10. '	for' → logprob: -12.562361717224121

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005519599071703851
    2. ' for' → logprob: -7.750552177429199
    3. '\n' → logprob: -10.0005521774292
    4. '
' → logprob: -10.1255521774292
    5. '```' → logprob: -10.8755521774292
    6. 'i' → logprob: -12.3755521774292
    7. '\' → logprob: -12.5005521774292
    8. '' → logprob: -13.5005521774292
    9. '	for' → logprob: -13.6255521774292
    10. 'n' → logprob: -13.7505521774292

Token 21: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5822192430496216
    2. ' i' → logprob: -0.8322192430496216
    3. '  ' → logprob: -5.332219123840332
    4. ' n' → logprob: -7.332219123840332
    5. ' _' → logprob: -8.582219123840332
    6. 'i' → logprob: -8.582219123840332
    7. ' x' → logprob: -8.707219123840332
    8. '_' → logprob: -9.332219123840332
    9. ' ‌' → logprob: -9.582219123840332
    10. ' a' → logprob: -10.832219123840332

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.053304944187402725
    2. 'in' → logprob: -3.05330491065979
    3. ' ' → logprob: -5.428305149078369
    4. '  ' → logprob: -8.553304672241211
    5. 'n' → logprob: -10.428304672241211
    6. '	in' → logprob: -10.553304672241211
    7. ' n' → logprob: -11.053304672241211
    8. ')' → logprob: -11.928304672241211
    9. '   ' → logprob: -12.428304672241211
    10. ' i' → logprob: -12.553304672241211

Token 23: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0022612365428358316
    2. 'range' → logprob: -6.127261161804199
    3. ' ' → logprob: -9.8772611618042
    4. ' a' → logprob: -11.0022611618042
    5. ' n' → logprob: -12.2522611618042
    6. '	range' → logprob: -13.7522611618042
    7. ' xrange' → logprob: -14.0022611618042
    8. ')' → logprob: -15.0022611618042
    9. '(range' → logprob: -15.3772611618042
    10. 'a' → logprob: -15.6272611618042

Token 24: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25370338559150696
    2. '(n' → logprob: -1.7537033557891846
    3. '(len' → logprob: -3.0037033557891846
    4. ' (' → logprob: -6.628703594207764
    5. ' ' → logprob: -11.753703117370605
    6. '(length' → logprob: -12.503703117370605
    7. '(range' → logprob: -13.128703117370605
    8. '(cnt' → logprob: -13.753703117370605
    9. ' len' → logprob: -14.003703117370605
    10. '(

' → logprob: -14.003703117370605

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012855244800448418
    2. ' ):' → logprob: -4.387855052947998
    3. '-' → logprob: -8.762855529785156
    4. ')' → logprob: -9.137855529785156
    5. '):
' → logprob: -9.762855529785156
    6. ' -' → logprob: -11.887855529785156
    7. '+' → logprob: -12.137855529785156
    8. ' )' → logprob: -12.637855529785156
    9. ':' → logprob: -12.762855529785156
    10. ')):' → logprob: -14.012855529785156

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5477582812309265
    2. ' ' → logprob: -1.6727583408355713
    3. '    ' → logprob: -1.7977583408355713
    4. ' for' → logprob: -3.9227583408355713
    5. '<|end|>' → logprob: -4.047758102416992
    6. ' if' → logprob: -4.422758102416992
    7. '    
' → logprob: -4.922758102416992
    8. ' 
' → logprob: -5.672758102416992
    9. '     
' → logprob: -6.547758102416992
    10. '```' → logprob: -6.547758102416992

Token 27: ' min' (ID: 1349)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49804526567459106
    2. 'for' → logprob: -1.3730452060699463
    3. ' if' → logprob: -2.3730452060699463
    4. 'if' → logprob: -3.6230452060699463
    5. '   ' → logprob: -4.248045444488525
    6. ' a' → logprob: -6.373045444488525
    7. '    ' → logprob: -6.748045444488525
    8. 'a' → logprob: -6.998045444488525
    9. ' ' → logprob: -8.248044967651367
    10. ' cnt' → logprob: -8.248044967651367

Token 28: 'j' (ID: 73)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007571246009320021
    2. '_a' → logprob: -5.632571220397949
    3. '_val' → logprob: -5.757571220397949
    4. '(' → logprob: -8.63257122039795
    5. '_idx' → logprob: -8.75757122039795
    6. ' _' → logprob: -9.38257122039795
    7. 'a' → logprob: -9.50757122039795
    8. '_index' → logprob: -9.75757122039795
    9. '(a' → logprob: -9.88257122039795
    10. '_=' → logprob: -10.25757122039795

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06201395019888878
    2. '=' → logprob: -2.812013864517212
    3. ',' → logprob: -11.312013626098633
    4. '_' → logprob: -11.812013626098633
    5. '_=' → logprob: -11.937013626098633
    6. ' ' → logprob: -12.062013626098633
    7. '=i' → logprob: -12.562013626098633
    8. '   ' → logprob: -13.312013626098633
    9. '_idx' → logprob: -13.562013626098633
    10. ' =
' → logprob: -13.562013626098633

Token 30: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1602596789598465
    2. ' i' → logprob: -1.91025972366333
    3. '	i' → logprob: -11.285259246826172
    4. ' ' → logprob: -11.285259246826172
    5. '   ' → logprob: -12.035259246826172
    6. 'j' → logprob: -13.535259246826172
    7. '_i' → logprob: -14.535259246826172
    8. '    ' → logprob: -14.660259246826172
    9. '```' → logprob: -15.160259246826172
    10. '=i' → logprob: -15.410259246826172

Token 31: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13161823153495789
    2. ' for' → logprob: -2.1316182613372803
    3. '<|end|>' → logprob: -6.006618022918701
    4. '   ' → logprob: -6.631618022918701
    5. ' ' → logprob: -8.25661849975586
    6. '+' → logprob: -8.50661849975586
    7. '```' → logprob: -9.13161849975586
    8. '	for' → logprob: -9.50661849975586
    9. '<|end|>' → logprob: -9.75661849975586
    10. ')' → logprob: -10.13161849975586

Token 34: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6937262415885925
    2. 'range' → logprob: -0.6937262415885925
    3. ' j' → logprob: -8.068726539611816
    4. 'j' → logprob: -8.568726539611816
    5. ' in' → logprob: -9.943726539611816
    6. '	range' → logprob: -11.943726539611816
    7. '(range' → logprob: -12.068726539611816
    8. ' ' → logprob: -12.693726539611816
    9. '```' → logprob: -12.943726539611816
    10. 'in' → logprob: -13.068726539611816

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03392022103071213
    2. 'in' → logprob: -3.4089202880859375
    3. 'range' → logprob: -8.408920288085938
    4. ' range' → logprob: -11.033920288085938
    5. ' ' → logprob: -11.408920288085938
    6. '   ' → logprob: -11.533920288085938
    7. ' i' → logprob: -13.158920288085938
    8. '    ' → logprob: -13.158920288085938
    9. 'i' → logprob: -13.533920288085938
    10. ')' → logprob: -13.533920288085938

Token 36: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804550692439079
    2. 'range' → logprob: -3.2880454063415527
    3. '(range' → logprob: -12.913045883178711
    4. '	range' → logprob: -14.038045883178711
    5. ' xrange' → logprob: -15.038045883178711
    6. ' ' → logprob: -15.038045883178711
    7. ' i' → logprob: -16.41304588317871
    8. ' in' → logprob: -17.03804588317871
    9. '_range' → logprob: -17.41304588317871
    10. ')' → logprob: -17.53804588317871

Token 37: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00042221311014145613
    2. '(' → logprob: -8.000422477722168
    3. '(n' → logprob: -9.750422477722168
    4. ' i' → logprob: -11.000422477722168
    5. 'i' → logprob: -11.625422477722168
    6. '   ' → logprob: -14.125422477722168
    7. ' (' → logprob: -14.250422477722168
    8. ')' → logprob: -14.250422477722168
    9. 'n' → logprob: -15.375422477722168
    10. '	i' → logprob: -16.50042152404785

Token 38: ',n' (ID: 18103)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008593061938881874
    2. ',' → logprob: -5.2585930824279785
    3. ',n' → logprob: -6.5085930824279785
    4. ' +' → logprob: -6.7585930824279785
    5. ' ,' → logprob: -8.25859260559082
    6. '+n' → logprob: -8.75859260559082
    7. '   ' → logprob: -8.88359260559082
    8. ' n' → logprob: -9.75859260559082
    9. 'n' → logprob: -10.00859260559082
    10. '+,' → logprob: -11.00859260559082

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003614801215007901
    2. '):
' → logprob: -5.628614902496338
    3. '):
' → logprob: -11.87861442565918
    4. ':' → logprob: -12.62861442565918
    5. '):

' → logprob: -13.37861442565918
    6. ')' → logprob: -14.00361442565918
    7. ' ):' → logprob: -14.50361442565918
    8. '>):' → logprob: -14.75361442565918
    9. '   ' → logprob: -14.87861442565918
    10. '<|end|>' → logprob: -15.62861442565918

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12307803332805634
    2. '<|end|>' → logprob: -2.2480781078338623
    3. ' if' → logprob: -5.123077869415283
    4. '    ' → logprob: -6.248077869415283
    5. '<|end|>' → logprob: -7.373077869415283
    6. ' ' → logprob: -7.373077869415283
    7. '   ' → logprob: -7.873077869415283
    8. '        ' → logprob: -8.498078346252441
    9. 'if' → logprob: -8.748078346252441
    10. '      ' → logprob: -9.748078346252441

Token 41: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07974552363157272
    2. 'if' (adapté à ' if') → logprob: -3.0797455310821533
    3. '       ' → logprob: -3.5797455310821533
    4. '           ' → logprob: -6.329745292663574
    5. '<|end|>' → logprob: -7.329745292663574
    6. '   ' → logprob: -9.079745292663574
    7. ' ' → logprob: -9.454745292663574
    8. '        ' → logprob: -10.204745292663574
    9. '<|end|>' → logprob: -10.454745292663574
    10. '```' → logprob: -10.704745292663574

Token 42: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.016038591042160988
    2. 'a' → logprob: -4.141038417816162
    3. '	a' → logprob: -13.01603889465332
    4. '>a' → logprob: -13.51603889465332
    5. '    ' → logprob: -15.51603889465332
    6. '_a' → logprob: -15.89103889465332
    7. ' ' → logprob: -16.39103889465332
    8. ',a' → logprob: -16.64103889465332
    9. ' ' → logprob: -16.89103889465332
    10. '(a' → logprob: -17.01603889465332

Token 43: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00021486106561496854
    2. '[' → logprob: -8.500214576721191
    3. '[a' → logprob: -12.250214576721191
    4. '[min' → logprob: -13.375214576721191
    5. 'j' → logprob: -13.625214576721191
    6. ' [' → logprob: -14.125214576721191
    7. '```' → logprob: -14.125214576721191
    8. '[i' → logprob: -14.125214576721191
    9. 'a' → logprob: -14.750214576721191
    10. '\[' → logprob: -15.500214576721191

Token 44: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20339243113994598
    2. '<' → logprob: -1.7033923864364624
    3. ')' → logprob: -7.203392505645752
    4. ']' → logprob: -7.453392505645752
    5. '[' → logprob: -8.453392028808594
    6. '<int' → logprob: -9.703392028808594
    7. ' ' → logprob: -9.828392028808594
    8. 'a' → logprob: -9.953392028808594
    9. '>' → logprob: -10.078392028808594
    10. '```' → logprob: -10.203392028808594

Token 45: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.38702791929244995
    2. '<' → logprob: -1.1370279788970947
    3. '[' → logprob: -9.637027740478516
    4. '<int' → logprob: -10.262027740478516
    5. ' ' → logprob: -11.012027740478516
    6. 'a' → logprob: -11.637027740478516
    7. '```' → logprob: -11.762027740478516
    8. '<num' → logprob: -12.887027740478516
    9. '1' → logprob: -13.137027740478516
    10. '<size' → logprob: -13.262027740478516

Token 46: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02324955351650715
    2. ' a' → logprob: -3.773249626159668
    3. '	a' → logprob: -13.148249626159668
    4. '>a' → logprob: -14.273249626159668
    5. ' ' → logprob: -14.398249626159668
    6. '   ' → logprob: -15.523249626159668
    7. '_a' → logprob: -15.898249626159668
    8. '<a' → logprob: -16.02324867248535
    9. '```' → logprob: -16.52324867248535
    10. ' ' → logprob: -16.77324867248535

Token 47: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.0003326049481984228
    2. 'min' → logprob: -8.125332832336426
    3. '[' → logprob: -10.500332832336426
    4. '[i' → logprob: -12.750332832336426
    5. '[j' → logprob: -13.875332832336426
    6. '[a' → logprob: -13.875332832336426
    7. '```' → logprob: -13.875332832336426
    8. ' min' → logprob: -14.250332832336426
    9. ' ' → logprob: -14.875332832336426
    10. '	min' → logprob: -15.000332832336426

Token 48: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.77627644513268e-06
    2. ' j' → logprob: -12.500008583068848
    3. ']' → logprob: -13.250008583068848
    4. '[j' → logprob: -13.375008583068848
    5. 'i' → logprob: -14.500008583068848
    6. ' ' → logprob: -15.125008583068848
    7. ')' → logprob: -15.375008583068848
    8. '_j' → logprob: -15.500008583068848
    9. '	j' → logprob: -15.750008583068848
    10. '```' → logprob: -15.750008583068848

Token 49: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1732902079820633
    2. '):' → logprob: -2.048290252685547
    3. ']):' → logprob: -3.798290252685547
    4. ']' → logprob: -5.173290252685547
    5. 'j' → logprob: -7.673290252685547
    6. ':' → logprob: -7.923290252685547
    7. '[j' → logprob: -8.673290252685547
    8. '   ' → logprob: -8.798290252685547
    9. ' ):' → logprob: -9.173290252685547
    10. '])' → logprob: -9.298290252685547

Token 50: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1550583839416504
    2. '       ' → logprob: -1.2800583839416504
    3. '           ' → logprob: -2.2800583839416504
    4. ' min' → logprob: -2.4050583839416504
    5. ':min' → logprob: -3.0300583839416504
    6. '<|end|>' → logprob: -3.0300583839416504
    7. 'min' → logprob: -3.6550583839416504
    8. '):' → logprob: -3.7800583839416504
    9. '[min' → logprob: -4.28005838394165
    10. '):
' → logprob: -4.65505838394165

Token 51: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6373001337051392
    2. ' j' → logprob: -1.3873001337051392
    3. 'j' → logprob: -2.1373000144958496
    4. ' ' → logprob: -2.5123000144958496
    5. 'min' (adapté à ' min') → logprob: -4.51230001449585
    6. ' a' → logprob: -5.76230001449585
    7. '=' → logprob: -6.26230001449585
    8. '<|end|>' → logprob: -6.88730001449585
    9. '=min' → logprob: -7.26230001449585
    10. ')' → logprob: -7.26230001449585

Token 52: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.5577775128767826e-06
    2. '           ' → logprob: -13.000005722045898
    3. '       ' → logprob: -14.000005722045898
    4. 'a' → logprob: -14.500005722045898
    5. '   ' → logprob: -14.500005722045898
    6. ' ' → logprob: -14.750005722045898
    7. ' j' → logprob: -15.000005722045898
    8. '               ' → logprob: -15.500005722045898
    9. '```' → logprob: -15.750005722045898
    10. '    ' → logprob: -16.5000057220459

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007612898014485836
    2. '=' → logprob: -4.882612705230713
    3. '=j' → logprob: -12.507613182067871
    4. ' ' → logprob: -12.757613182067871
    5. '=i' → logprob: -16.132612228393555
    6. ' =
' → logprob: -17.507612228393555
    7. '＝' → logprob: -17.757612228393555
    8. ')' → logprob: -17.882612228393555
    9. ' =)' → logprob: -18.257612228393555
    10. ' ' → logprob: -18.257612228393555

Token 54: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03807627409696579
    2. ' j' → logprob: -3.288076162338257
    3. '	j' → logprob: -10.288076400756836
    4. ' ' → logprob: -15.413076400756836
    5. '[j' → logprob: -15.788076400756836
    6. '$j' → logprob: -15.913076400756836
    7. '<|end|>' → logprob: -16.538076400756836
    8. '_j' → logprob: -16.663076400756836
    9. '    ' → logprob: -16.913076400756836
    10. ' ' → logprob: -17.038076400756836

Token 55: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8428606390953064
    2. ' min' → logprob: -1.2178606986999512
    3. 'a' → logprob: -1.4678606986999512
    4. 'min' → logprob: -3.342860698699951
    5. ' i' → logprob: -5.092860698699951
    6. 'i' → logprob: -6.467860698699951
    7. ' ' → logprob: -9.217860221862793
    8. '  ' → logprob: -9.967860221862793
    9. '   ' → logprob: -10.217860221862793
    10. '    ' → logprob: -11.467860221862793

Token 59: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2522483468055725
    2. '!=' → logprob: -1.5022482872009277
    3. '<|end|>' → logprob: -8.377248764038086
    4. ' ' → logprob: -11.002248764038086
    5. '<>' → logprob: -11.252248764038086
    6. ')!=' → logprob: -11.752248764038086
    7. ' ' → logprob: -11.877248764038086
    8. ']!=' → logprob: -12.127248764038086
    9. '==' → logprob: -12.627248764038086
    10. ')' → logprob: -12.627248764038086

Token 60: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.002806894714012742
    2. ' min' → logprob: -5.877806663513184
    3. '   ' → logprob: -14.127806663513184
    4. '	min' → logprob: -14.502806663513184
    5. ' ' → logprob: -14.752806663513184
    6. '  ' → logprob: -15.877806663513184
    7. '(min' → logprob: -16.2528076171875
    8. '[min' → logprob: -16.3778076171875
    9. '    ' → logprob: -17.0028076171875
    10. '=min' → logprob: -17.6278076171875

Token 61: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.703443770878948e-06
    2. '   ' → logprob: -12.875007629394531
    3. '```' → logprob: -13.000007629394531
    4. 'min' → logprob: -13.625007629394531
    5. 'i' → logprob: -14.625007629394531
    6. '       ' → logprob: -15.125007629394531
    7. ' ' → logprob: -15.500007629394531
    8. ' j' → logprob: -15.500007629394531
    9. '	j' → logprob: -16.12500762939453
    10. '    ' → logprob: -16.75000762939453

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004423470702022314
    2. ':
' → logprob: -5.50442361831665
    3. '):' → logprob: -9.004423141479492
    4. '   ' → logprob: -9.504423141479492
    5. '       ' → logprob: -9.629423141479492
    6. ' :' → logprob: -10.379423141479492
    7. '):
' → logprob: -11.629423141479492
    8. ']:' → logprob: -12.004423141479492
    9. '<|end|>' → logprob: -12.004423141479492
    10. '```' → logprob: -12.379423141479492

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25343620777130127
    2. '<|end|>' → logprob: -1.6284362077713013
    3. ' ' → logprob: -3.8784360885620117
    4. '   ' → logprob: -6.128436088562012
    5. '    ' → logprob: -7.128436088562012
    6. '        
' → logprob: -7.253436088562012
    7. '```' → logprob: -7.253436088562012
    8. '<|end|>' → logprob: -7.628436088562012
    9. ' a' → logprob: -7.753436088562012
    10. 'a' → logprob: -7.878436088562012

Token 64: ' cnt' (ID: 27340)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06322024017572403
    2. ' a' → logprob: -2.813220262527466
    3. 'cnt' (adapté à ' cnt') → logprob: -7.188220024108887
    4. ' cnt' → logprob: -8.313220024108887
    5. '   ' → logprob: -8.938220024108887
    6. '       ' → logprob: -9.313220024108887
    7. '```' → logprob: -11.563220024108887
    8. '    ' → logprob: -11.938220024108887
    9. '    
' → logprob: -13.438220024108887
    10. '	a' → logprob: -13.688220024108887

Token 65: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.11291484534740448
    2. '+=' → logprob: -2.237914800643921
    3. '+' → logprob: -9.9879150390625
    4. '<|end|>' → logprob: -10.9879150390625
    5. ']+=' → logprob: -11.1129150390625
    6. '+='' → logprob: -12.7379150390625
    7. '++' → logprob: -12.9879150390625
    8. '=' → logprob: -12.9879150390625
    9. '```' → logprob: -13.3629150390625
    10. ' =' → logprob: -13.8629150390625

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.000261306762695
    4. '  ' → logprob: -19.000261306762695
    5. '<|end|>' → logprob: -19.000261306762695
    6. '```' → logprob: -19.125261306762695
    7. '+' → logprob: -19.750261306762695
    8. '    ' → logprob: -19.750261306762695
    9. '       ' → logprob: -20.000261306762695
    10. '１' → logprob: -20.125261306762695

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '<|end|>' → logprob: -17.875
    4. '１' → logprob: -18.75
    5. '   ' → logprob: -20.125
    6. '```' → logprob: -20.25
    7. '۱' → logprob: -21.75
    8. '  ' → logprob: -21.75
    9. '१' → logprob: -22.125
    10. 'a' → logprob: -22.25

Token 68: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43892356753349304
    2. 'a' → logprob: -1.0639235973358154
    3. ' a' → logprob: -4.813923358917236
    4. '```' → logprob: -6.938923358917236
    5. '<|end|>' → logprob: -8.313923835754395
    6. '
' → logprob: -8.813923835754395
    7. '       ' → logprob: -8.813923835754395
    8. '    
' → logprob: -9.188923835754395
    9. '[a' → logprob: -9.688923835754395
    10. '    ' → logprob: -9.813923835754395

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10542622953653336
    2. 'a' → logprob: -2.35542631149292
    3. ' a' → logprob: -5.35542631149292
    4. '       ' → logprob: -8.105425834655762
    5. '```' → logprob: -9.105425834655762
    6. '    
' → logprob: -11.355425834655762
    7. '    ' → logprob: -11.730425834655762
    8. '[a' → logprob: -12.105425834655762
    9. '<|end|>' → logprob: -12.105425834655762
    10. 'temp' → logprob: -12.355425834655762

Token 70: ' tmp' (ID: 8919)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.26416030526161194
    2. ' a' → logprob: -1.8891602754592896
    3. '   ' → logprob: -2.514160394668579
    4. '```' → logprob: -11.63916015625
    5. '	a' → logprob: -13.01416015625
    6. '[a' → logprob: -13.38916015625
    7. '       ' → logprob: -13.63916015625
    8. ',a' → logprob: -14.13916015625
    9. '    ' → logprob: -14.26416015625
    10. '(a' → logprob: -14.38916015625

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2907573878765106
    2. '=' → logprob: -1.415757417678833
    3. ',' → logprob: -4.665757179260254
    4. '[' → logprob: -9.665757179260254
    5. 'a' → logprob: -11.040757179260254
    6. '[i' → logprob: -11.415757179260254
    7. '   ' → logprob: -11.665757179260254
    8. ' ' → logprob: -12.040757179260254
    9. '＝' → logprob: -12.040757179260254
    10. 's' → logprob: -12.665757179260254

Token 72: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0040785204619169235
    2. ' a' → logprob: -5.504078388214111
    3. '	a' → logprob: -16.629077911376953
    4. '   ' → logprob: -18.379077911376953
    5. ' ' → logprob: -18.504077911376953
    6. '  ' → logprob: -19.754077911376953
    7. '_a' → logprob: -19.879077911376953
    8. '#a' → logprob: -20.629077911376953
    9. '>a' → logprob: -20.629077911376953
    10. '    ' → logprob: -20.754077911376953

Token 73: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16041848063468933
    2. '[min' → logprob: -1.9104185104370117
    3. 'min' → logprob: -9.535418510437012
    4. 'i' → logprob: -10.035418510437012
    5. '[' → logprob: -10.035418510437012
    6. '[tmp' → logprob: -11.285418510437012
    7. '[j' → logprob: -11.660418510437012
    8. '[a' → logprob: -12.285418510437012
    9. '[m' → logprob: -12.660418510437012
    10. '[:]' → logprob: -13.410418510437012

Token 74: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03823553025722504
    2. ']
' → logprob: -3.2882354259490967
    3. ']

' → logprob: -9.288235664367676
    4. '<|end|>' → logprob: -10.038235664367676
    5. ']
' → logprob: -10.788235664367676
    6. ')' → logprob: -10.913235664367676
    7. '],' → logprob: -11.788235664367676
    8. ' ]' → logprob: -12.913235664367676
    9. '<|end|>' → logprob: -13.038235664367676
    10. ')
' → logprob: -13.663235664367676

Token 75: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8421831727027893
    2. '<|end|>' → logprob: -0.8421831727027893
    3. 'a' → logprob: -2.0921831130981445
    4. ' 
' → logprob: -5.5921831130981445
    5. '   ' → logprob: -6.0921831130981445
    6. ' a' → logprob: -6.2171831130981445
    7. '[a' → logprob: -6.2171831130981445
    8. '  
' → logprob: -6.3421831130981445
    9. '<|end|>' → logprob: -7.2171831130981445
    10. '    
' → logprob: -7.3421831130981445

Token 76: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.023386051878333092
    2. ' a' → logprob: -3.773386001586914
    3. '   ' → logprob: -8.898386001586914
    4. '	a' → logprob: -13.648386001586914
    5. ' ' → logprob: -13.898386001586914
    6. '<|end|>' → logprob: -14.148386001586914
    7. '[a' → logprob: -14.648386001586914
    8. '  ' → logprob: -15.398386001586914
    9. 'n' → logprob: -15.648386001586914
    10. '_a' → logprob: -16.523386001586914

Token 77: '[i' (ID: 1768)
  Prédit: '[min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.00023810577113181353
    2. '[' → logprob: -8.375238418579102
    3. '[m' → logprob: -12.125238418579102
    4. '[tmp' → logprob: -13.750238418579102
    5. 'min' → logprob: -14.625238418579102
    6. '[j' → logprob: -15.375238418579102
    7. '[max' → logprob: -15.625238418579102
    8. '[i' → logprob: -16.1252384185791
    9. '[temp' → logprob: -16.7502384185791
    10. '```' → logprob: -17.2502384185791

Token 78: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020115631923545152
    2. ']=' → logprob: -9.000201225280762
    3. '=' → logprob: -10.125201225280762
    4. '],' → logprob: -11.000201225280762
    5. ' ]' → logprob: -11.250201225280762
    6. ',' → logprob: -12.125201225280762
    7. ' =' → logprob: -13.125201225280762
    8. '<|end|>' → logprob: -15.875201225280762
    9. ')' → logprob: -16.500200271606445
    10. '`]' → logprob: -17.000200271606445

Token 79: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008009027689695358
    2. ' =' → logprob: -4.88300895690918
    3. ',' → logprob: -7.88300895690918
    4. '=a' → logprob: -10.63300895690918
    5. '＝' → logprob: -14.13300895690918
    6. ',a' → logprob: -15.63300895690918
    7. '=

' → logprob: -15.63300895690918
    8. '.=' → logprob: -16.50800895690918
    9. '=s' → logprob: -16.63300895690918
    10. '=
' → logprob: -16.75800895690918

Token 80: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0024758970830589533
    2. ' a' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.37747573852539
    4. '	a' → logprob: -17.25247573852539
    5. ' ' → logprob: -18.00247573852539
    6. '  ' → logprob: -18.37747573852539
    7. '    ' → logprob: -20.12747573852539
    8. '#a' → logprob: -21.00247573852539
    9. '>a' → logprob: -21.12747573852539
    10. '_a' → logprob: -21.62747573852539

Token 81: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -1.1472419600977446e-06
    2. 'min' → logprob: -14.250000953674316
    3. '[' → logprob: -14.625000953674316
    4. '[m' → logprob: -18.125001907348633
    5. '[tmp' → logprob: -18.625001907348633
    6. '[max' → logprob: -19.125001907348633
    7. ' min' → logprob: -20.000001907348633
    8. '	min' → logprob: -20.125001907348633
    9. '(min' → logprob: -20.625001907348633
    10. ' [' → logprob: -20.750001907348633

Token 82: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.339278580620885e-06
    2. '[j' → logprob: -14.250001907348633
    3. ']' → logprob: -15.000001907348633
    4. 'js' → logprob: -15.250001907348633
    5. ' j' → logprob: -15.625001907348633
    6. '```' → logprob: -15.875001907348633
    7. 'x' → logprob: -16.250001907348633
    8. 'ј' → logprob: -16.250001907348633
    9. '<|end|>' → logprob: -16.625001907348633
    10. '[' → logprob: -16.875001907348633

Token 83: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12857680022716522
    2. '<|end|>' → logprob: -2.1285767555236816
    3. '<|end|>' → logprob: -7.253576755523682
    4. '}' → logprob: -7.753576755523682
    5. ']
' → logprob: -8.37857723236084
    6. ')' → logprob: -8.75357723236084
    7. '   ' → logprob: -10.50357723236084
    8. '
' → logprob: -10.62857723236084
    9. '```' → logprob: -10.87857723236084
    10. ' ]' → logprob: -11.37857723236084

Token 84: '   ' (ID: 271)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.31179913878440857
    2. 'a' → logprob: -1.686799168586731
    3. ' tmp' → logprob: -4.061799049377441
    4. '   ' → logprob: -4.311799049377441
    5. '    
' → logprob: -4.561799049377441
    6. '  
' → logprob: -4.561799049377441
    7. '[tmp' → logprob: -4.686799049377441
    8. ' 
' → logprob: -4.936799049377441
    9. ' a' → logprob: -5.686799049377441
    10. '```' → logprob: -5.936799049377441

Token 85: ' a' (ID: 261)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.006003567948937416
    2. 'a' (adapté à ' a') → logprob: -5.506003379821777
    3. ' tmp' → logprob: -6.256003379821777
    4. ' a' → logprob: -12.756003379821777
    5. '	tmp' → logprob: -14.631003379821777
    6. '$tmp' → logprob: -15.131003379821777
    7. '   ' → logprob: -15.506003379821777
    8. '[tmp' → logprob: -15.631003379821777
    9. 'temp' → logprob: -16.006004333496094
    10. '/tmp' → logprob: -16.256004333496094

Token 86: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.00019889144459739327
    2. '[' → logprob: -8.875199317932129
    3. 'min' → logprob: -10.875199317932129
    4. '[j' → logprob: -11.125199317932129
    5. '[max' → logprob: -11.125199317932129
    6. '```' → logprob: -13.125199317932129
    7. '[tmp' → logprob: -13.250199317932129
    8. '[m' → logprob: -13.250199317932129
    9. '<|end|>' → logprob: -13.875199317932129
    10. '[
' → logprob: -14.375199317932129

Token 87: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00027444821898825467
    2. ']' → logprob: -8.375274658203125
    3. 'min' → logprob: -10.125274658203125
    4. 'js' → logprob: -14.000274658203125
    5. '<|end|>' → logprob: -14.500274658203125
    6. '[j' → logprob: -15.000274658203125
    7. '   ' → logprob: -15.250274658203125
    8. 'jn' → logprob: -15.875274658203125
    9. '[' → logprob: -15.875274658203125
    10. ' j' → logprob: -16.125274658203125

Token 88: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3782830137643032e-05
    2. ']
' → logprob: -12.25001335144043
    3. ' ]' → logprob: -12.25001335144043
    4. '<|end|>' → logprob: -12.87501335144043
    5. ']=' → logprob: -14.50001335144043
    6. ']

' → logprob: -14.87501335144043
    7. '}' → logprob: -15.12501335144043
    8. '<|end|>' → logprob: -16.12501335144043
    9. ']==' → logprob: -16.37501335144043
    10. '']' → logprob: -16.87501335144043

Token 89: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020985817536711693
    2. ' =' → logprob: -8.50020980834961
    3. '=
' → logprob: -12.12520980834961
    4. '=

' → logprob: -14.37520980834961
    5. '<|end|>' → logprob: -16.37520980834961
    6. '=s' → logprob: -17.00020980834961
    7. '=a' → logprob: -17.25020980834961
    8. '=temp' → logprob: -17.50020980834961
    9. '＝' → logprob: -17.62520980834961
    10. '=end' → logprob: -17.75020980834961

Token 90: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.023249439895153046
    2. ' tmp' → logprob: -3.773249387741089
    3. '	tmp' → logprob: -12.898249626159668
    4. '$tmp' → logprob: -14.273249626159668
    5. '/tmp' → logprob: -15.023249626159668
    6. '(tmp' → logprob: -15.523249626159668
    7. '[tmp' → logprob: -15.898249626159668
    8. '_tmp' → logprob: -16.89824867248535
    9. '.tmp' → logprob: -18.39824867248535
    10. ',tmp' → logprob: -18.77324867248535

Token 91: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.388160765171051
    2. '
' → logprob: -1.1381607055664062
    3. '\n' → logprob: -7.888160705566406
    4. '
' → logprob: -8.263160705566406
    5. '  
' → logprob: -8.513160705566406
    6. '```' → logprob: -8.763160705566406
    7. ' 
' → logprob: -9.138160705566406
    8. '

' → logprob: -9.388160705566406
    9. 'n' → logprob: -9.888160705566406
    10. ' print' → logprob: -10.888160705566406

Token 92: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023346802219748497
    2. '
' → logprob: -3.7733469009399414
    3. '  
' → logprob: -10.773346900939941
    4. '```' → logprob: -10.773346900939941
    5. '
' → logprob: -11.023346900939941
    6. ' 
' → logprob: -11.148346900939941
    7. '\n' → logprob: -11.398346900939941
    8. ' print' → logprob: -11.773346900939941
    9. '

' → logprob: -13.398346900939941
    10. '' → logprob: -13.523346900939941

Token 93: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019847829826176167
    2. '('' → logprob: -7.126984596252441
    3. '("' → logprob: -7.126984596252441
    4. '(cnt' → logprob: -8.376984596252441
    5. '(a' → logprob: -9.626984596252441
    6. '("("' → logprob: -10.251984596252441
    7. '(len' → logprob: -10.626984596252441
    8. '((' → logprob: -11.876984596252441
    9. '()' → logprob: -11.876984596252441
    10. '(f' → logprob: -13.626984596252441

Token 94: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001234428636962548
    2. ' a' → logprob: -9.000123023986816
    3. '(a' → logprob: -18.250123977661133
    4. '[a' → logprob: -18.625123977661133
    5. ')a' → logprob: -18.875123977661133
    6. ')' → logprob: -19.125123977661133
    7. '	a' → logprob: -20.375123977661133
    8. 'а' → logprob: -22.625123977661133
    9. '_a' → logprob: -22.750123977661133
    10. ' ' → logprob: -22.750123977661133

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0052874768152832985
    2. ',' → logprob: -5.2552876472473145
    3. ')
' → logprob: -10.130287170410156
    4. ',)' → logprob: -12.005287170410156
    5. ' )' → logprob: -12.130287170410156
    6. '),' → logprob: -13.880287170410156
    7. ')`' → logprob: -15.130287170410156
    8. ',
' → logprob: -15.755287170410156
    9. ')\' → logprob: -15.880287170410156
    10. ' ,' → logprob: -16.005287170410156

Token 96: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006316631333902478
    2. '  
' → logprob: -8.375631332397461
    3. '
' → logprob: -8.875631332397461
    4. '\n' → logprob: -9.125631332397461
    5. ' 
' → logprob: -10.000631332397461
    6. '\' → logprob: -10.625631332397461
    7. '<|end|>' → logprob: -10.750631332397461
    8. '```' → logprob: -10.875631332397461
    9. '    
' → logprob: -11.500631332397461
    10. ' print' → logprob: -11.500631332397461

Token 97: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.008962811902165413
    2. '(' → logprob: -4.758962631225586
    3. 'cnt' → logprob: -8.008962631225586
    4. ' cnt' → logprob: -11.883962631225586
    5. ' (' → logprob: -12.633962631225586
    6. '(count' → logprob: -12.883962631225586
    7. '()' → logprob: -14.258962631225586
    8. '[cnt' → logprob: -14.633962631225586
    9. '(counter' → logprob: -15.008962631225586
    10. '(
' → logprob: -15.133962631225586

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -15.75
    3. ')
' → logprob: -17.25
    4. ')`' → logprob: -18.25
    5. '))' → logprob: -19.875
    6. '')' → logprob: -20.625
    7. '）' → logprob: -21.0
    8. ')#' → logprob: -21.125
    9. ')**' → logprob: -21.25
    10. '`)' → logprob: -21.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 96
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 79
Précision stricte (1ère position): 40.62%
Précision adaptée (1ère position): 42.71%
Précision (top 10): 82.29%
================================================================================
