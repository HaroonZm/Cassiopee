================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
l=list(map(int,input().split()))

counter=0
for i in range(n):
    minimum=i
    for j in range(i,n):
        if l[minimum]>l[j]:
            minimum=j
    if i!=minimum:
        l[minimum],l[i]=l[i],l[minimum]
        counter+=1
print(*l)
print(counter)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2951568067073822
    2. '(' → logprob: -1.4201568365097046
    3. '())' → logprob: -5.295156955718994
    4. '()' → logprob: -5.545156955718994
    5. '```' → logprob: -6.170156955718994
    6. '<|end|>' → logprob: -7.295156955718994
    7. '(
' → logprob: -7.670156955718994
    8. '")' → logprob: -7.920156955718994
    9. '`)' → logprob: -8.545156478881836
    10. '')' → logprob: -8.670156478881836

Token 4: 'l' (ID: 75)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.5291787385940552
    2. '+' → logprob: -1.5291787385940552
    3. '#' → logprob: -2.0291786193847656
    4. ')' → logprob: -2.1541786193847656
    5. ' ' → logprob: -2.4041786193847656
    6. ''' → logprob: -2.7791786193847656
    7. 'i' → logprob: -2.9041786193847656
    8. 's' → logprob: -3.9041786193847656
    9. 'a' → logprob: -4.404178619384766
    10. '\n' → logprob: -4.529178619384766

Token 5: '=list' (ID: 93413)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012500470504164696
    2. '.' → logprob: -4.762500286102295
    3. 's' → logprob: -6.262500286102295
    4. '\[' → logprob: -7.137500286102295
    5. '=' → logprob: -7.512500286102295
    6. 'i' → logprob: -8.762500762939453
    7. '[:]' → logprob: -9.387500762939453
    8. '[i' → logprob: -9.637500762939453
    9. 'ist' → logprob: -9.637500762939453
    10. '[]' → logprob: -10.012500762939453

Token 6: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00025966696557588875
    2. '(range' → logprob: -8.875259399414062
    3. '(l' → logprob: -9.375259399414062
    4. '(n' → logprob: -12.000259399414062
    5. '(
' → logprob: -12.125259399414062
    6. '(input' → logprob: -12.375259399414062
    7. '((' → logprob: -12.500259399414062
    8. '(

' → logprob: -13.250259399414062
    9. '()' → logprob: -13.625259399414062
    10. '(open' → logprob: -13.875259399414062

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11556770652532578
    2. '(int' → logprob: -2.365567684173584
    3. '(lambda' → logprob: -4.615567684173584
    4. '(input' → logprob: -5.990567684173584
    5. '(str' → logprob: -6.240567684173584
    6. '(eval' → logprob: -7.865567684173584
    7. ')' → logprob: -9.115568161010742
    8. '(
' → logprob: -9.615568161010742
    9. '<|end|>' → logprob: -9.990568161010742
    10. '(list' → logprob: -9.990568161010742

Token 8: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014229914173483849
    2. '(' → logprob: -4.514229774475098
    3. ')' → logprob: -6.139229774475098
    4. '))' → logprob: -7.639229774475098
    5. '(eval' → logprob: -9.139229774475098
    6. 'input' → logprob: -9.639229774475098
    7. '(user' → logprob: -9.889229774475098
    8. '=input' → logprob: -10.139229774475098
    9. ',input' → logprob: -10.764229774475098
    10. '<|end|>' → logprob: -10.889229774475098

Token 9: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5422255992889404
    2. '()' → logprob: -1.4172255992889404
    3. '()))' → logprob: -1.7922255992889404
    4. '().' → logprob: -5.5422258377075195
    5. '()));' → logprob: -6.4172258377075195
    6. '()>' → logprob: -6.9172258377075195
    7. ')' → logprob: -7.7922258377075195
    8. '(' → logprob: -7.9172258377075195
    9. '())))' → logprob: -7.9172258377075195
    10. '());' → logprob: -7.9172258377075195

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00013238313840702176
    2. 'strip' → logprob: -9.00013256072998
    3. 'rstrip' → logprob: -11.87513256072998
    4. ' split' → logprob: -13.50013256072998
    5. '(split' → logprob: -15.00013256072998
    6. 'spl' → logprob: -15.75013256072998
    7. 's' → logprob: -17.500131607055664
    8. ')' → logprob: -18.500131607055664
    9. '.split' → logprob: -19.000131607055664
    10. 'replace' → logprob: -19.000131607055664

Token 11: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.24359939992427826
    2. '))' → logprob: -2.4935994148254395
    3. '(' → logprob: -2.7435994148254395
    4. '())' → logprob: -3.2435994148254395
    5. ')' → logprob: -4.1185994148254395
    6. '()' → logprob: -4.9935994148254395
    7. '('' → logprob: -5.2435994148254395
    8. '())))' → logprob: -7.4935994148254395
    9. '(','' → logprob: -7.9935994148254395
    10. ')))' → logprob: -8.243598937988281

Token 12: 'counter' (ID: 32128)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7565082907676697
    2. 'for' → logprob: -1.7565083503723145
    3. 'c' → logprob: -1.8815083503723145
    4. ')' → logprob: -2.6315083503723145
    5. 'r' → logprob: -3.0065083503723145
    6. '#' → logprob: -3.6315083503723145
    7. 'f' → logprob: -4.1315083503723145
    8. 'a' → logprob: -4.6315083503723145
    9. 'm' → logprob: -5.1315083503723145
    10. 'd' → logprob: -5.2565083503723145

Token 13: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08535372465848923
    2. '(' → logprob: -2.7103536128997803
    3. '.' → logprob: -5.085353851318359
    4. 's' → logprob: -5.835353851318359
    5. '_' → logprob: -5.960353851318359
    6. '[(' → logprob: -7.210353851318359
    7. '[
' → logprob: -7.210353851318359
    8. '['' → logprob: -7.710353851318359
    9. '\[' → logprob: -7.960353851318359
    10. '('.')' → logprob: -8.71035385131836

Token 14: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -5.6100132496794686e-05
    2. '{' → logprob: -10.000056266784668
    3. '{}
' → logprob: -12.125056266784668
    4. '0' → logprob: -13.125056266784668
    5. '{}

' → logprob: -13.625056266784668
    6. 'dict' → logprob: -14.375056266784668
    7. 'Counter' → logprob: -14.375056266784668
    8. 'default' → logprob: -15.000056266784668
    9. '{})' → logprob: -15.000056266784668
    10. ' {}' → logprob: -16.12505531311035

Token 15: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004769260995090008
    2. ' for' → logprob: -5.504769325256348
    3. '
' → logprob: -7.379769325256348
    4. '\n' → logprob: -10.754769325256348
    5. '<|end|>' → logprob: -11.254769325256348
    6. '```' → logprob: -11.879769325256348
    7. '' → logprob: -12.129769325256348
    8. ' ' → logprob: -12.379769325256348
    9. ')' → logprob: -12.629769325256348
    10. 'n' → logprob: -12.629769325256348

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014084660506341606
    2. ' for' → logprob: -9.625141143798828
    3. '
' → logprob: -10.500141143798828
    4. 'f' → logprob: -11.125141143798828
    5. '\n' → logprob: -11.375141143798828
    6. '```' → logprob: -11.375141143798828
    7. 'n' → logprob: -13.000141143798828
    8. 'i' → logprob: -13.125141143798828
    9. '' → logprob: -13.625141143798828
    10. '\' → logprob: -13.875141143798828

Token 17: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02664312906563282
    2. ' ' → logprob: -3.6516430377960205
    3. 'i' → logprob: -8.776642799377441
    4. ' _' → logprob: -9.026642799377441
    5. ' x' → logprob: -10.776642799377441
    6. ' l' → logprob: -11.276642799377441
    7. '_' → logprob: -11.401642799377441
    8. '  ' → logprob: -11.651642799377441
    9. ' ‌' → logprob: -12.401642799377441
    10. ' element' → logprob: -13.276642799377441

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03445027023553848
    2. 'in' → logprob: -3.6594502925872803
    3. ' ' → logprob: -4.909450054168701
    4. '  ' → logprob: -8.28445053100586
    5. 'n' → logprob: -8.90945053100586
    6. '<|end|>' → logprob: -8.90945053100586
    7. ' n' → logprob: -9.40945053100586
    8. ')' → logprob: -10.15945053100586
    9. '+' → logprob: -11.40945053100586
    10. '[' → logprob: -11.40945053100586

Token 19: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2017381191253662
    2. ' range' → logprob: -1.7017381191253662
    3. 'l' → logprob: -8.451738357543945
    4. ' l' → logprob: -9.201738357543945
    5. ' ' → logprob: -12.826738357543945
    6. '(range' → logprob: -12.951738357543945
    7. '	range' → logprob: -12.951738357543945
    8. ')' → logprob: -13.826738357543945
    9. 'n' → logprob: -14.576738357543945
    10. 'r' → logprob: -15.201738357543945

Token 20: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5812555551528931
    2. '(n' → logprob: -0.8312555551528931
    3. ' (' → logprob: -5.8312554359436035
    4. '(len' → logprob: -6.0812554359436035
    5. '(range' → logprob: -10.081255912780762
    6. ' ' → logprob: -11.081255912780762
    7. '(counter' → logprob: -11.956255912780762
    8. '(l' → logprob: -12.831255912780762
    9. ' n' → logprob: -13.081255912780762
    10. '(space' → logprob: -13.206255912780762

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024055044632405043
    2. ' ):' → logprob: -6.627405643463135
    3. ')' → logprob: -7.002405643463135
    4. '-' → logprob: -9.252405166625977
    5. '):
' → logprob: -9.752405166625977
    6. ':' → logprob: -11.627405166625977
    7. ' )' → logprob: -13.377405166625977
    8. '+' → logprob: -14.002405166625977
    9. ' -' → logprob: -14.377405166625977
    10. '   ' → logprob: -14.627405166625977

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02997274324297905
    2. ' ' → logprob: -4.529972553253174
    3. ' for' → logprob: -4.654972553253174
    4. '    ' → logprob: -5.029972553253174
    5. 'for' → logprob: -7.404972553253174
    6. ' if' → logprob: -7.529972553253174
    7. '<|end|>' → logprob: -8.029973030090332
    8. '```' → logprob: -8.279973030090332
    9. '       ' → logprob: -8.404973030090332
    10. '    
' → logprob: -8.779973030090332

Token 23: ' minimum' (ID: 11085)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2726682126522064
    2. 'for' → logprob: -1.6476682424545288
    3. '   ' → logprob: -3.5226681232452393
    4. ' if' → logprob: -4.522668361663818
    5. 'if' → logprob: -5.897668361663818
    6. ' counter' → logprob: -6.147668361663818
    7. 'counter' → logprob: -7.522668361663818
    8. ' l' → logprob: -9.14766788482666
    9. '    ' → logprob: -9.27266788482666
    10. ' ' → logprob: -10.14766788482666

Token 24: '=i' (ID: 48141)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04661707952618599
    2. ' =' → logprob: -3.546617031097412
    3. '=' → logprob: -4.546617031097412
    4. ' ' → logprob: -6.046617031097412
    5. '_=' → logprob: -6.421617031097412
    6. ' _' → logprob: -7.546617031097412
    7. '    ' → logprob: -8.17161750793457
    8. '   ' → logprob: -8.29661750793457
    9. ')' → logprob: -8.54661750793457
    10. 's' → logprob: -8.67161750793457

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2978204488754272
    2. 'for' → logprob: -1.4228204488754272
    3. ' for' → logprob: -1.5478204488754272
    4. '<|end|>' → logprob: -2.172820568084717
    5. '
' → logprob: -2.297820568084717
    6. ' ' → logprob: -3.922820568084717
    7. '+' → logprob: -4.422820568084717
    8. '    
' → logprob: -5.172820568084717
    9. ' 
' → logprob: -5.547820568084717
    10. '<|end|>' → logprob: -5.672820568084717

Token 27: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08923465013504028
    2. ' for' → logprob: -2.4642345905303955
    3. '   ' → logprob: -8.339234352111816
    4. '+' → logprob: -10.214234352111816
    5. 'j' → logprob: -11.714234352111816
    6. '	for' → logprob: -12.339234352111816
    7. '```' → logprob: -12.464234352111816
    8. '
' → logprob: -13.839234352111816
    9. '+j' → logprob: -14.464234352111816
    10. '    ' → logprob: -14.964234352111816

Token 28: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2639942169189453
    2. 'range' → logprob: -1.5139942169189453
    3. ' j' → logprob: -4.638994216918945
    4. 'j' → logprob: -6.638994216918945
    5. ' ' → logprob: -7.263994216918945
    6. '	range' → logprob: -9.513994216918945
    7. '```' → logprob: -9.638994216918945
    8. '<|end|>' → logprob: -10.013994216918945
    9. ' xrange' → logprob: -10.763994216918945
    10. '  ' → logprob: -11.013994216918945

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03819422423839569
    2. 'in' → logprob: -3.288194179534912
    3. 'range' → logprob: -9.03819465637207
    4. ' range' → logprob: -10.91319465637207
    5. '	in' → logprob: -12.28819465637207
    6. ' ' → logprob: -12.41319465637207
    7. '   ' → logprob: -12.66319465637207
    8. '    ' → logprob: -14.66319465637207
    9. '```' → logprob: -14.78819465637207
    10. '+' → logprob: -15.03819465637207

Token 30: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014138251543045
    2. ' range' → logprob: -1.701413869857788
    3. '(range' → logprob: -15.451414108276367
    4. ' ' → logprob: -15.701414108276367
    5. 'i' → logprob: -15.951414108276367
    6. '	range' → logprob: -16.951414108276367
    7. '   ' → logprob: -17.451414108276367
    8. ' i' → logprob: -17.701414108276367
    9. '  ' → logprob: -18.326414108276367
    10. '    ' → logprob: -19.701414108276367

Token 31: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.939851037808694e-05
    2. '(' → logprob: -11.375029563903809
    3. '(n' → logprob: -11.375029563903809
    4. 'i' → logprob: -12.375029563903809
    5. ' i' → logprob: -13.250029563903809
    6. ' (' → logprob: -16.750028610229492
    7. ')' → logprob: -16.875028610229492
    8. '(j' → logprob: -17.375028610229492
    9. 'n' → logprob: -17.500028610229492
    10. ')i' → logprob: -17.625028610229492

Token 32: ',n' (ID: 18103)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00013607845176011324
    2. ',n' → logprob: -10.000136375427246
    3. ',' → logprob: -10.375136375427246
    4. '+n' → logprob: -10.500136375427246
    5. '+,' → logprob: -11.125136375427246
    6. ' +' → logprob: -11.375136375427246
    7. ' ,' → logprob: -13.500136375427246
    8. '+
' → logprob: -13.625136375427246
    9. 'n' → logprob: -14.250136375427246
    10. '   ' → logprob: -14.625136375427246

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026336994022130966
    2. '):
' → logprob: -3.651336908340454
    3. ':' → logprob: -11.526336669921875
    4. '):
' → logprob: -11.776336669921875
    5. ')' → logprob: -11.901336669921875
    6. '):

' → logprob: -12.026336669921875
    7. '+' → logprob: -13.276336669921875
    8. '   ' → logprob: -13.401336669921875
    9. '<|end|>' → logprob: -13.901336669921875
    10. '>):' → logprob: -14.526336669921875

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1229383572936058
    2. '<|end|>' → logprob: -2.247938394546509
    3. ' if' → logprob: -5.12293815612793
    4. ' ' → logprob: -6.62293815612793
    5. '    ' → logprob: -7.24793815612793
    6. '   ' → logprob: -7.37293815612793
    7. '<|end|>' → logprob: -7.37293815612793
    8. 'if' → logprob: -8.62293815612793
    9. '        ' → logprob: -9.12293815612793
    10. ':' → logprob: -9.62293815612793

Token 35: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41985538601875305
    2. 'if' (adapté à ' if') → logprob: -1.6698553562164307
    3. '           ' → logprob: -2.1698553562164307
    4. '       ' → logprob: -4.29485559463501
    5. ' ' → logprob: -4.41985559463501
    6. '<|end|>' → logprob: -5.29485559463501
    7. ' 
' → logprob: -5.79485559463501
    8. '```' → logprob: -6.29485559463501
    9. '   ' → logprob: -6.41985559463501
    10. '0' → logprob: -7.66985559463501

Token 36: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.007613725494593382
    2. 'l' → logprob: -4.882613658905029
    3. '	l' → logprob: -12.257614135742188
    4. '    ' → logprob: -13.507614135742188
    5. ' ' → logprob: -14.132614135742188
    6. '   ' → logprob: -15.632614135742188
    7. ' ' → logprob: -16.132614135742188
    8. ' counter' → logprob: -16.382614135742188
    9. '        ' → logprob: -16.882614135742188
    10. '```' → logprob: -16.882614135742188

Token 37: '[' (ID: 58)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0010573413455858827
    2. '[' → logprob: -6.876057147979736
    3. '[min' → logprob: -11.001057624816895
    4. '[l' → logprob: -12.876057624816895
    5. ' [' → logprob: -13.126057624816895
    6. '[i' → logprob: -13.501057624816895
    7. '```' → logprob: -15.001057624816895
    8. 'j' → logprob: -15.126057624816895
    9. '   ' → logprob: -15.501057624816895
    10. '[
' → logprob: -15.626057624816895

Token 38: 'minimum' (ID: 80931)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.7697225252486533e-06
    2. ' j' → logprob: -12.875003814697266
    3. '[j' → logprob: -14.250003814697266
    4. '	j' → logprob: -14.750003814697266
    5. '_j' → logprob: -16.750003814697266
    6. 'minimum' → logprob: -16.750003814697266
    7. '   ' → logprob: -17.625003814697266
    8. ' ' → logprob: -18.500003814697266
    9. '```' → logprob: -18.500003814697266
    10. ':j' → logprob: -19.125003814697266

Token 39: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3414151966571808
    2. ']>' → logprob: -1.3414151668548584
    3. ']' → logprob: -3.5914151668548584
    4. ' >' → logprob: -9.091415405273438
    5. '>]' → logprob: -9.841415405273438
    6. ' ]' → logprob: -10.841415405273438
    7. '">' → logprob: -11.966415405273438
    8. ']>=' → logprob: -13.216415405273438
    9. '>a' → logprob: -13.466415405273438
    10. '']' → logprob: -13.716415405273438

Token 40: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0031791406217962503
    2. ' l' → logprob: -5.75317907333374
    3. '	l' → logprob: -14.003179550170898
    4. '   ' → logprob: -15.878179550170898
    5. ' ' → logprob: -15.878179550170898
    6. 'j' → logprob: -16.3781795501709
    7. '_l' → logprob: -17.0031795501709
    8. '[l' → logprob: -17.5031795501709
    9. '       ' → logprob: -17.5031795501709
    10. '    ' → logprob: -17.6281795501709

Token 41: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00020771251001860946
    2. '[' → logprob: -8.500207901000977
    3. '][' → logprob: -13.375207901000977
    4. '[i' → logprob: -13.875207901000977
    5. ' [' → logprob: -14.750207901000977
    6. ']' → logprob: -15.250207901000977
    7. '[l' → logprob: -15.750207901000977
    8. '```' → logprob: -16.125207901000977
    9. ')' → logprob: -16.500207901000977
    10. '[
' → logprob: -16.500207901000977

Token 42: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.014934792183339596
    2. '):' → logprob: -4.38993501663208
    3. ']' → logprob: -7.01493501663208
    4. ']:
' → logprob: -7.38993501663208
    5. ':' → logprob: -7.88993501663208
    6. ' ):' → logprob: -8.889934539794922
    7. ']):' → logprob: -9.639934539794922
    8. '   ' → logprob: -9.764934539794922
    9. ']:
' → logprob: -9.764934539794922
    10. ' ]' → logprob: -10.139934539794922

Token 43: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22901730239391327
    2. 'minimum' → logprob: -2.6040172576904297
    3. ' minimum' → logprob: -2.6040172576904297
    4. ':' → logprob: -3.7290172576904297
    5. '<|end|>' → logprob: -4.72901725769043
    6. '       ' → logprob: -4.97901725769043
    7. '               ' → logprob: -5.72901725769043
    8. '            ' → logprob: -6.10401725769043
    9. ' ' → logprob: -6.47901725769043
    10. ' :' → logprob: -6.47901725769043

Token 44: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.20147804915905
    2. 'minimum' (adapté à ' minimum') → logprob: -1.7014780044555664
    3. ' ' → logprob: -11.076478004455566
    4. '.minimum' → logprob: -11.076478004455566
    5. ' minimal' → logprob: -11.451478004455566
    6. ' j' → logprob: -11.826478004455566
    7. '<|end|>' → logprob: -12.576478004455566
    8. 'Minimum' → logprob: -13.201478004455566
    9. 'j' → logprob: -13.201478004455566
    10. ' mínimo' → logprob: -13.451478004455566

Token 45: '=j' (ID: 104163)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09198758006095886
    2. '=j' → logprob: -2.5919876098632812
    3. ' =' → logprob: -4.341987609863281
    4. '=i' → logprob: -13.966987609863281
    5. '＝' → logprob: -14.966987609863281
    6. '=

' → logprob: -16.34198760986328
    7. '=v' → logprob: -16.71698760986328
    8. '=f' → logprob: -17.09198760986328
    9. '=int' → logprob: -17.09198760986328
    10. '=s' → logprob: -17.21698760986328

Token 46: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3162829577922821
    2. '<|end|>' → logprob: -1.5662829875946045
    3. ' ' → logprob: -3.9412829875946045
    4. '
' → logprob: -3.9412829875946045
    5. '  
' → logprob: -5.191282749176025
    6. '    
' → logprob: -5.566282749176025
    7. '<|end|>' → logprob: -5.691282749176025
    8. '[' → logprob: -6.066282749176025
    9. '```' → logprob: -6.066282749176025
    10. '   
' → logprob: -6.316282749176025

Token 47: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' if' (ID: 538)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1764699220657349
    2. ' l' → logprob: -1.4264699220657349
    3. '<|end|>' → logprob: -1.8014699220657349
    4. ' ' → logprob: -2.1764698028564453
    5. 's' → logprob: -3.0514698028564453
    6. 'n' → logprob: -3.5514698028564453
    7. ' 
' → logprob: -3.9264698028564453
    8. '   ' → logprob: -4.801469802856445
    9. '\n' → logprob: -5.051469802856445
    10. ')' → logprob: -5.051469802856445

Token 49: ' i' (ID: 575)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.09103909879922867
    2. ' minimum' → logprob: -2.8410391807556152
    3. ' i' → logprob: -4.341039180755615
    4. 'minimum' → logprob: -4.716039180755615
    5. 'l' → logprob: -5.216039180755615
    6. 'i' → logprob: -7.091039180755615
    7. '	l' → logprob: -9.091038703918457
    8. '    ' → logprob: -9.716038703918457
    9. ' ' → logprob: -9.841038703918457
    10. ' min' → logprob: -10.216038703918457

Token 50: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.12365653365850449
    2. ' !=' → logprob: -2.2486565113067627
    3. '<|end|>' → logprob: -4.623656749725342
    4. ' ' → logprob: -8.123656272888184
    5. '<' → logprob: -8.498656272888184
    6. '!' → logprob: -9.123656272888184
    7. '<|end|>' → logprob: -9.873656272888184
    8. '<>' → logprob: -9.873656272888184
    9. ']!=' → logprob: -10.123656272888184
    10. '==' → logprob: -10.248656272888184

Token 51: 'minimum' (ID: 80931)
  Prédit: 'minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.00012594614236149937
    2. 'min' → logprob: -9.625125885009766
    3. ' minimum' → logprob: -9.750125885009766
    4. 'minimal' → logprob: -13.500125885009766
    5. 'maximum' → logprob: -16.875125885009766
    6. ' ' → logprob: -17.000125885009766
    7. '.minimum' → logprob: -17.375125885009766
    8. '   ' → logprob: -17.375125885009766
    9. '  ' → logprob: -17.625125885009766
    10. '	min' → logprob: -17.750125885009766

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06144317239522934
    2. '   ' → logprob: -3.9364430904388428
    3. ':
' → logprob: -4.186443328857422
    4. '       ' → logprob: -4.186443328857422
    5. '<|end|>' → logprob: -5.936443328857422
    6. ' :' → logprob: -6.186443328857422
    7. '):' → logprob: -7.061443328857422
    8. '    ' → logprob: -7.311443328857422
    9. '```' → logprob: -7.311443328857422
    10. '<|end|>' → logprob: -8.061443328857422

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9670432806015015
    2. ' l' → logprob: -1.3420432806015015
    3. ' counter' → logprob: -1.7170432806015015
    4. 'counter' → logprob: -2.217043399810791
    5. '```' → logprob: -3.342043399810791
    6. 'l' → logprob: -4.217043399810791
    7. '   ' → logprob: -4.342043399810791
    8. '``' → logprob: -5.592043399810791
    9. '	counter' → logprob: -7.092043399810791
    10. '[counter' → logprob: -7.467043399810791

Token 54: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.03712838515639305
    2. ' l' → logprob: -3.412128448486328
    3. 'counter' → logprob: -5.787128448486328
    4. '       ' → logprob: -8.162128448486328
    5. ' counter' → logprob: -9.162128448486328
    6. '   ' → logprob: -11.787128448486328
    7. '           ' → logprob: -13.037128448486328
    8. '```' → logprob: -13.412128448486328
    9. '	l' → logprob: -13.537128448486328
    10. '        ' → logprob: -13.537128448486328

Token 55: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009788085706532001
    2. '[i' → logprob: -5.1347880363464355
    3. '.swap' → logprob: -6.3847880363464355
    4. '[min' → logprob: -6.5097880363464355
    5. ',' → logprob: -7.7597880363464355
    6. '.' → logprob: -9.259788513183594
    7. '```' → logprob: -10.509788513183594
    8. '[j' → logprob: -10.509788513183594
    9. 'swap' → logprob: -11.259788513183594
    10. '_swap' → logprob: -11.384788513183594

Token 56: 'minimum' (ID: 80931)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06203187629580498
    2. 'minimum' → logprob: -2.8120319843292236
    3. ' minimum' → logprob: -10.437031745910645
    4. ' i' → logprob: -11.062031745910645
    5. 'min' → logprob: -11.312031745910645
    6. 'minimal' → logprob: -12.687031745910645
    7. '[i' → logprob: -14.187031745910645
    8. 'l' → logprob: -14.562031745910645
    9. 'maximum' → logprob: -14.687031745910645
    10. '   ' → logprob: -14.937031745910645

Token 57: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0017845372203737497
    2. ']' → logprob: -6.376784324645996
    3. ']=' → logprob: -10.001784324645996
    4. ',' → logprob: -10.751784324645996
    5. '],[' → logprob: -11.501784324645996
    6. ' ],' → logprob: -13.251784324645996
    7. ',l' → logprob: -13.876784324645996
    8. '],
' → logprob: -14.126784324645996
    9. ''],' → logprob: -14.251784324645996
    10. '"],' → logprob: -15.126784324645996

Token 58: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20141704380512238
    2. ' l' → logprob: -1.701417088508606
    3. '<|end|>' → logprob: -12.951416969299316
    4. '	l' → logprob: -14.451416969299316
    5. ' ' → logprob: -15.451416969299316
    6. '       ' → logprob: -15.576416969299316
    7. '    ' → logprob: -15.826416969299316
    8. '   ' → logprob: -15.951416969299316
    9. '```' → logprob: -16.951417922973633
    10. '        ' → logprob: -17.076417922973633

Token 59: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004121380392462015
    2. '[' → logprob: -5.50412130355835
    3. '[j' → logprob: -11.754121780395508
    4. '<|end|>' → logprob: -11.754121780395508
    5. '```' → logprob: -11.879121780395508
    6. '[user' → logprob: -12.129121780395508
    7. '[index' → logprob: -13.379121780395508
    8. 'i' → logprob: -13.629121780395508
    9. '[input' → logprob: -13.754121780395508
    10. '[ip' → logprob: -13.879121780395508

Token 60: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24134157598018646
    2. ']' → logprob: -2.1163415908813477
    3. ']=' → logprob: -2.3663415908813477
    4. ')=' → logprob: -9.866341590881348
    5. ' =' → logprob: -9.866341590881348
    6. ')' → logprob: -11.991341590881348
    7. '=

' → logprob: -12.366341590881348
    8. '}=' → logprob: -12.866341590881348
    9. '']=' → logprob: -13.241341590881348
    10. '   ' → logprob: -13.241341590881348

Token 61: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0006290406454354525
    2. ' l' → logprob: -7.37562894821167
    3. '	l' → logprob: -13.875629425048828
    4. '       ' → logprob: -14.125629425048828
    5. '   ' → logprob: -14.500629425048828
    6. '    ' → logprob: -15.875629425048828
    7. '           ' → logprob: -17.250629425048828
    8. ' ' → logprob: -17.250629425048828
    9. '        ' → logprob: -17.500629425048828
    10. '  ' → logprob: -17.500629425048828

Token 62: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6984421014785767
    2. '[i' → logprob: -0.8234421014785767
    3. '[min' → logprob: -2.823441982269287
    4. '[l' → logprob: -5.698441982269287
    5. '```' → logprob: -8.448442459106445
    6. '[max' → logprob: -9.323442459106445
    7. 'minimum' → logprob: -9.448442459106445
    8. '[start' → logprob: -10.073442459106445
    9. '[first' → logprob: -10.073442459106445
    10. '[input' → logprob: -10.323442459106445

Token 63: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.88526850938797
    2. ']' → logprob: -1.0102684497833252
    3. ',l' → logprob: -1.5102684497833252
    4. '<|end|>' → logprob: -7.260268688201904
    5. '],' → logprob: -7.385268688201904
    6. ' ,' → logprob: -7.760268688201904
    7. ' ]' → logprob: -8.510268211364746
    8. 'l' → logprob: -9.135268211364746
    9. ' l' → logprob: -9.385268211364746
    10. ',
' → logprob: -9.885268211364746

Token 64: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.8624639324116288e-06
    2. ' l' → logprob: -13.250001907348633
    3. '	l' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.125001907348633
    5. '       ' → logprob: -19.000001907348633
    6. '```' → logprob: -19.125001907348633
    7. '<|end|>' → logprob: -19.750001907348633
    8. '_l' → logprob: -19.750001907348633
    9. '    ' → logprob: -20.375001907348633
    10. '  ' → logprob: -20.500001907348633

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.255023956531659e-05
    2. 'minimum' → logprob: -9.625072479248047
    3. '[min' → logprob: -12.125072479248047
    4. '```' → logprob: -14.750072479248047
    5. '[i' → logprob: -15.625072479248047
    6. '\[' → logprob: -16.375072479248047
    7. ' minimum' → logprob: -16.625072479248047
    8. '[l' → logprob: -16.625072479248047
    9. '[j' → logprob: -17.000072479248047
    10. '.minimum' → logprob: -17.125072479248047

Token 66: 'minimum' (ID: 80931)
  Prédit: 'minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -5.080963092041202e-06
    2. ' minimum' → logprob: -12.250004768371582
    3. ']' → logprob: -16.3750057220459
    4. 'min' → logprob: -16.7500057220459
    5. '.minimum' → logprob: -16.7500057220459
    6. 'm' → logprob: -17.6250057220459
    7. '[' → logprob: -17.8750057220459
    8. 'minimal' → logprob: -18.1250057220459
    9. '   ' → logprob: -18.6250057220459
    10. 'Minimum' → logprob: -18.7500057220459

Token 67: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19361098110675812
    2. ')' → logprob: -1.8186110258102417
    3. '}' → logprob: -4.318611145019531
    4. '<|end|>' → logprob: -7.943611145019531
    5. '']' → logprob: -10.443611145019531
    6. '```' → logprob: -11.318611145019531
    7. ']
' → logprob: -11.568611145019531
    8. ')]' → logprob: -11.818611145019531
    9. '   ' → logprob: -12.068611145019531
    10. ')
' → logprob: -12.068611145019531

Token 68: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0147626399993896
    2. 'counter' → logprob: -1.0147626399993896
    3. '       ' → logprob: -1.3897626399993896
    4. ' counter' → logprob: -4.639762878417969
    5. '   ' → logprob: -5.639762878417969
    6. '```' → logprob: -5.764762878417969
    7. '	counter' → logprob: -6.139762878417969
    8. '        
' → logprob: -6.639762878417969
    9. '\n' → logprob: -6.764762878417969
    10. '[counter' → logprob: -6.764762878417969

Token 69: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -1.1279553291387856e-05
    2. ' counter' → logprob: -12.000011444091797
    3. '```' → logprob: -13.125011444091797
    4. '   ' → logprob: -13.625011444091797
    5. '       ' → logprob: -13.750011444091797
    6. '
' → logprob: -15.000011444091797
    7. '	counter' → logprob: -15.375011444091797
    8. 'Counter' → logprob: -16.125011444091797
    9. '_counter' → logprob: -16.375011444091797
    10. '``' → logprob: -16.875011444091797

Token 70: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004587722476571798
    2. ' +=' → logprob: -5.879587650299072
    3. '+' → logprob: -6.504587650299072
    4. '=' → logprob: -8.25458812713623
    5. ']+=' → logprob: -11.62958812713623
    6. '+='' → logprob: -12.00458812713623
    7. '+="' → logprob: -12.37958812713623
    8. '++' → logprob: -13.12958812713623
    9. '<|end|>' → logprob: -13.62958812713623
    10. '+=(' → logprob: -14.00458812713623

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -18.375015258789062
    4. '   ' → logprob: -19.250015258789062
    5. '  ' → logprob: -20.500015258789062
    6. '+' → logprob: -20.750015258789062
    7. '```' → logprob: -21.000015258789062
    8. '１' → logprob: -21.625015258789062
    9. '    ' → logprob: -22.000015258789062
    10. '       ' → logprob: -22.375015258789062

Token 72: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00023750975378789008
    2. '
' → logprob: -8.625237464904785
    3. 'p' → logprob: -10.500237464904785
    4. ' print' → logprob: -11.625237464904785
    5. '<|end|>' → logprob: -12.125237464904785
    6. '```' → logprob: -12.500237464904785
    7. '  
' → logprob: -13.125237464904785
    8. ' 
' → logprob: -13.125237464904785
    9. '#print' → logprob: -13.500237464904785
    10. ')' → logprob: -13.625237464904785

Token 73: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006317823426797986
    2. '
' → logprob: -7.375631809234619
    3. ' print' → logprob: -13.250631332397461
    4. '<|end|>' → logprob: -14.000631332397461
    5. '```' → logprob: -14.000631332397461
    6. '
' → logprob: -14.875631332397461
    7. '  
' → logprob: -14.875631332397461
    8. '#print' → logprob: -15.000631332397461
    9. '(print' → logprob: -15.375631332397461
    10. ' 
' → logprob: -15.875631332397461

Token 74: '(*' (ID: 9000)
  Prédit: '(counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(counter' → logprob: -0.5552432537078857
    2. '(' → logprob: -0.9302432537078857
    3. '(sum' → logprob: -4.430243492126465
    4. '(len' → logprob: -4.805243492126465
    5. '('' → logprob: -5.305243492126465
    6. '("' → logprob: -5.555243492126465
    7. '(l' → logprob: -6.055243492126465
    8. '(*' → logprob: -9.180243492126465
    9. '(f' → logprob: -9.805243492126465
    10. '((' → logprob: -10.555243492126465

Token 75: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.796184723294573e-06
    2. ' l' → logprob: -12.125005722045898
    3. '(l' → logprob: -15.375005722045898
    4. ')' → logprob: -16.7500057220459
    5. '[l' → logprob: -17.8750057220459
    6. '	l' → logprob: -18.0000057220459
    7. '_l' → logprob: -21.1250057220459
    8. ''l' → logprob: -22.0000057220459
    9. 'list' → logprob: -22.0000057220459
    10. '-l' → logprob: -22.1250057220459

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869971036911011
    2. ',' → logprob: -1.136997103691101
    3. ',)' → logprob: -9.51199722290039
    4. ' )' → logprob: -10.76199722290039
    5. ' ,' → logprob: -11.38699722290039
    6. '),' → logprob: -12.13699722290039
    7. ',c' → logprob: -12.38699722290039
    8. ',end' → logprob: -12.63699722290039
    9. ')
' → logprob: -13.01199722290039
    10. ',count' → logprob: -13.26199722290039

Token 77: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0034550258424133062
    2. ')
' → logprob: -6.50345516204834
    3. '
' → logprob: -6.62845516204834
    4. '<|end|>' → logprob: -8.25345516204834
    5. '\n' → logprob: -9.50345516204834
    6. '  
' → logprob: -9.75345516204834
    7. ',
' → logprob: -10.00345516204834
    8. '```' → logprob: -10.25345516204834
    9. ',' → logprob: -10.50345516204834
    10. ')' → logprob: -11.00345516204834

Token 78: '(counter' (ID: 85625)
  Prédit: '(counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(counter' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -12.125006675720215
    3. 'counter' → logprob: -13.500006675720215
    4. '(c' → logprob: -16.75000762939453
    5. '[counter' → logprob: -16.75000762939453
    6. '(count' → logprob: -16.87500762939453
    7. ' counter' → logprob: -17.12500762939453
    8. '(cnt' → logprob: -18.87500762939453
    9. ' (' → logprob: -19.12500762939453
    10. '(cursor' → logprob: -20.37500762939453

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')`' → logprob: -15.500000953674316
    3. ' )' → logprob: -15.750000953674316
    4. '))' → logprob: -15.875000953674316
    5. ')**' → logprob: -17.5
    6. ')}' → logprob: -17.875
    7. '`)' → logprob: -18.125
    8. '(' → logprob: -18.375
    9. ')
' → logprob: -18.625
    10. '()' → logprob: -19.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 77
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 65
Précision stricte (1ère position): 42.86%
Précision adaptée (1ère position): 46.75%
Précision (top 10): 84.42%
================================================================================
