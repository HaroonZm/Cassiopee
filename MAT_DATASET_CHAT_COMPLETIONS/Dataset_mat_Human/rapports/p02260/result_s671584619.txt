================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def selection_sort(a, n):
    cnt = 0
    for i in range(n):
        min_j = i
        for j in range(i, n):
            if a[j] < a[min_j]:
                min_j = j
        if i < min_j:
            a[i], a[min_j] = a[min_j], a[i]
            cnt += 1
    print(" ".join([str(x) for x in a]))
    print(cnt)

def main():
    n = int(input())
    a = [int(x) for x in input().split()]
    selection_sort(a, n)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' selection' (ID: 8441)
  → Token d'amorce (pas de prédiction)

Token 2: '_sort' (ID: 43815)
  → Token d'amorce (pas de prédiction)

Token 3: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003413801547139883
    2. '_' → logprob: -5.753413677215576
    3. '(_' → logprob: -9.753414154052734
    4. '```' → logprob: -10.253414154052734
    5. '(_:' → logprob: -10.378414154052734
    6. ' (' → logprob: -10.503414154052734
    7. ':' → logprob: -10.753414154052734
    8. '(:' → logprob: -11.503414154052734
    9. '_(' → logprob: -12.003414154052734
    10. '(
' → logprob: -12.003414154052734

Token 4: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5301913619041443
    2. '):' → logprob: -1.530191421508789
    3. ')' → logprob: -1.655191421508789
    4. ':' → logprob: -6.780191421508789
    5. ',' → logprob: -6.780191421508789
    6. '[a' → logprob: -7.905191421508789
    7. '[]):' → logprob: -7.905191421508789
    8. '[n' → logprob: -8.780191421508789
    9. '[
' → logprob: -9.030191421508789
    10. 'def' → logprob: -9.280191421508789

Token 5: ' n' (ID: 297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32845568656921387
    2. ' )' → logprob: -2.578455686569214
    3. '<|end|>' → logprob: -2.578455686569214
    4. 'a' → logprob: -2.703455686569214
    5. '[' → logprob: -3.828455686569214
    6. ' ' → logprob: -4.453455924987793
    7. ' a' → logprob: -5.203455924987793
    8. ' ,' → logprob: -5.453455924987793
    9. ',' → logprob: -5.578455924987793
    10. '):' → logprob: -5.828455924987793

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004941869992762804
    2. ')' → logprob: -5.379941940307617
    3. ':' → logprob: -8.504941940307617
    4. ',' → logprob: -9.379941940307617
    5. ''):' → logprob: -11.629941940307617
    6. '```' → logprob: -11.879941940307617
    7. '):
' → logprob: -12.629941940307617
    8. '[]):' → logprob: -12.754941940307617
    9. '[' → logprob: -12.879941940307617
    10. ' ):' → logprob: -13.004941940307617

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2247968167066574
    2. '   ' → logprob: -1.7247967720031738
    3. '```' → logprob: -4.474796772003174
    4. ':
' → logprob: -5.349796772003174
    5. '    
' → logprob: -6.224796772003174
    6. '  
' → logprob: -6.474796772003174
    7. '\' → logprob: -7.349796772003174
    8. '\n' → logprob: -8.099797248840332
    9. '    ' → logprob: -8.099797248840332
    10. '
' → logprob: -8.224797248840332

Token 8: ' cnt' (ID: 27340)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7081493139266968
    2. '```' → logprob: -0.9581493139266968
    3. ' for' → logprob: -2.7081494331359863
    4. '    ' → logprob: -3.9581494331359863
    5. 'for' → logprob: -4.833149433135986
    6. 'i' → logprob: -4.958149433135986
    7. '\n' → logprob: -5.333149433135986
    8. '     
' → logprob: -5.833149433135986
    9. '\' → logprob: -6.208149433135986
    10. '    
' → logprob: -6.583149433135986

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12419375032186508
    2. ' =' → logprob: -2.3741936683654785
    3. '_' → logprob: -3.8741936683654785
    4. '[' → logprob: -6.9991936683654785
    5. ' ' → logprob: -7.1241936683654785
    6. ',' → logprob: -7.8741936683654785
    7. ' +=' → logprob: -8.874194145202637
    8. '(' → logprob: -9.124194145202637
    9. '   ' → logprob: -9.374194145202637
    10. ')' → logprob: -9.374194145202637

Token 10: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42870470881462097
    2. ' ' → logprob: -1.0537047386169434
    3. '1' → logprob: -13.553704261779785
    4. ' n' → logprob: -14.553704261779785
    5. ' ' → logprob: -14.928704261779785
    6. '   ' → logprob: -14.928704261779785
    7. '  ' → logprob: -15.178704261779785
    8. '    ' → logprob: -15.178704261779785
    9. 'n' → logprob: -15.428704261779785
    10. 'len' → logprob: -15.678704261779785

Token 11: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.625009536743164
    3. '1' → logprob: -14.250009536743164
    4. 'n' → logprob: -17.750009536743164
    5. 'a' → logprob: -18.000009536743164
    6. '   ' → logprob: -18.375009536743164
    7. 'len' → logprob: -18.375009536743164
    8. '[' → logprob: -18.500009536743164
    9. '  ' → logprob: -18.750009536743164
    10. '    ' → logprob: -19.000009536743164

Token 12: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8630979657173157
    2. '```' → logprob: -1.738097906112671
    3. '\n' → logprob: -1.863097906112671
    4. '   ' → logprob: -2.363097906112671
    5. '\' → logprob: -3.113097906112671
    6. '    
' → logprob: -3.863097906112671
    7. '``' → logprob: -3.863097906112671
    8. ' for' → logprob: -4.48809814453125
    9. '' → logprob: -4.73809814453125
    10. ':' → logprob: -4.86309814453125

Token 13: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6256469488143921
    2. '   ' → logprob: -1.500646948814392
    3. '    
' → logprob: -2.1256470680236816
    4. '```' → logprob: -3.2506470680236816
    5. '     
' → logprob: -4.375647068023682
    6. '   
' → logprob: -4.500647068023682
    7. '\n' → logprob: -4.500647068023682
    8. ' 
' → logprob: -4.750647068023682
    9. '    ' → logprob: -4.875647068023682
    10. '  
' → logprob: -5.000647068023682

Token 14: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5834538340568542
    2. '   ' → logprob: -1.583453893661499
    3. 'for' (adapté à ' for') → logprob: -1.583453893661499
    4. '```' → logprob: -3.708453893661499
    5. '    
' → logprob: -6.58345365524292
    6. ' ' → logprob: -6.83345365524292
    7. '`' → logprob: -6.95845365524292
    8. '
' → logprob: -7.08345365524292
    9. '``' → logprob: -7.33345365524292
    10. '    ' → logprob: -7.95845365524292

Token 15: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38878247141838074
    2. ' ' → logprob: -1.1387825012207031
    3. 'i' → logprob: -6.763782501220703
    4. '  ' → logprob: -7.638782501220703
    5. ' ‌' → logprob: -9.013782501220703
    6. '_' → logprob: -10.513782501220703
    7. ')' → logprob: -11.013782501220703
    8. ' ,' → logprob: -11.263782501220703
    9. ' )' → logprob: -11.388782501220703
    10. ' ' → logprob: -12.076282501220703

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007122157607227564
    2. 'in' → logprob: -5.007122039794922
    3. ' ' → logprob: -8.007122039794922
    4. '  ' → logprob: -10.007122039794922
    5. '<|end|>' → logprob: -11.632122039794922
    6. '```' → logprob: -12.632122039794922
    7. '   ' → logprob: -13.007122039794922
    8. '    ' → logprob: -13.007122039794922
    9. 'range' → logprob: -13.632122039794922
    10. ')' → logprob: -13.757122039794922

Token 17: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005254507064819336
    2. 'range' → logprob: -5.505254745483398
    3. ' ' → logprob: -6.755254745483398
    4. ' in' → logprob: -12.755254745483398
    5. ' xrange' → logprob: -12.880254745483398
    6. ' n' → logprob: -13.255254745483398
    7. '	range' → logprob: -13.380254745483398
    8. ' a' → logprob: -14.630254745483398
    9. '  ' → logprob: -14.755254745483398
    10. ')' → logprob: -15.380254745483398

Token 18: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20279742777347565
    2. '(n' → logprob: -1.7027974128723145
    3. '(len' → logprob: -6.8277974128723145
    4. ' (' → logprob: -8.452797889709473
    5. '(i' → logprob: -9.827797889709473
    6. '(range' → logprob: -11.452797889709473
    7. '(length' → logprob: -11.952797889709473
    8. '<|end|>' → logprob: -12.327797889709473
    9. '(a' → logprob: -13.202797889709473
    10. '(
' → logprob: -13.702797889709473

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002735924208536744
    2. '):
' → logprob: -6.8777360916137695
    3. ')' → logprob: -7.2527360916137695
    4. '-' → logprob: -7.5027360916137695
    5. ' ):' → logprob: -8.50273609161377
    6. '   ' → logprob: -9.12773609161377
    7. ',' → logprob: -9.87773609161377
    8. ':' → logprob: -10.37773609161377
    9. ' -' → logprob: -11.12773609161377
    10. '+' → logprob: -12.00273609161377

Token 20: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.37114763259887695
    2. '       ' → logprob: -1.621147632598877
    3. '   ' → logprob: -2.871147632598877
    4. ' ' → logprob: -4.371147632598877
    5. '<|end|>' → logprob: -4.371147632598877
    6. '     
' → logprob: -4.496147632598877
    7. '     ' → logprob: -4.871147632598877
    8. ''' → logprob: -5.746147632598877
    9. '```' → logprob: -5.996147632598877
    10. '"' → logprob: -7.371147632598877

Token 21: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.41345861554145813
    2. 'min' (adapté à ' min') → logprob: -1.1634585857391357
    3. '       ' → logprob: -4.538458824157715
    4. '           ' → logprob: -5.413458824157715
    5. '    ' → logprob: -5.663458824157715
    6. '   ' → logprob: -6.038458824157715
    7. ' for' → logprob: -6.538458824157715
    8. '_min' → logprob: -7.038458824157715
    9. 'for' → logprob: -7.788458824157715
    10. 'm' → logprob: -7.913458824157715

Token 22: '_j' (ID: 12021)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.050912562757730484
    2. '_idx' → logprob: -3.675912618637085
    3. '_val' → logprob: -4.550912380218506
    4. '_index' → logprob: -4.675912380218506
    5. '_i' → logprob: -6.050912380218506
    6. ' _' → logprob: -6.425912380218506
    7. '_ix' → logprob: -8.800912857055664
    8. '_pos' → logprob: -9.550912857055664
    9. '_ind' → logprob: -10.050912857055664
    10. '_a' → logprob: -10.425912857055664

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08898145705461502
    2. '=' → logprob: -2.4639813899993896
    3. ' ' → logprob: -10.338981628417969
    4. 'ex' → logprob: -12.463981628417969
    5. '    ' → logprob: -13.713981628417969
    6. '   ' → logprob: -13.838981628417969
    7. ',' → logprob: -13.838981628417969
    8. ' =
' → logprob: -14.213981628417969
    9. '  ' → logprob: -14.463981628417969
    10. 'x' → logprob: -14.838981628417969

Token 24: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17977997660636902
    2. 'i' → logprob: -1.8047800064086914
    3. ' ' → logprob: -10.804780006408691
    4. '	i' → logprob: -11.554780006408691
    5. '    ' → logprob: -12.929780006408691
    6. 'n' → logprob: -14.429780006408691
    7. '   ' → logprob: -14.804780006408691
    8. ' n' → logprob: -14.804780006408691
    9. '_i' → logprob: -15.179780006408691
    10. '=i' → logprob: -15.179780006408691

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6082106828689575
    2. '<|end|>' → logprob: -1.3582106828689575
    3. ' for' → logprob: -1.9832106828689575
    4. 'for' (adapté à ' for') → logprob: -3.608210563659668
    5. '<|end|>' → logprob: -4.608210563659668
    6. '
' → logprob: -5.108210563659668
    7. ' ' → logprob: -5.233210563659668
    8. '   ' → logprob: -5.608210563659668
    9. '        ' → logprob: -6.108210563659668
    10. '```' → logprob: -6.233210563659668

Token 28: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.020050687715411186
    2. 'j' → logprob: -4.895050525665283
    3. ' ' → logprob: -4.895050525665283
    4. '<|end|>' → logprob: -5.645050525665283
    5. ' range' → logprob: -7.645050525665283
    6. 'range' → logprob: -8.770051002502441
    7. '<|end|>' → logprob: -8.770051002502441
    8. ' in' → logprob: -9.020051002502441
    9. ')' → logprob: -9.270051002502441
    10. '  ' → logprob: -9.770051002502441

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0016024599317461252
    2. 'in' → logprob: -6.501602649688721
    3. ' ' → logprob: -9.376602172851562
    4. '    ' → logprob: -12.501602172851562
    5. '	in' → logprob: -12.751602172851562
    6. '<|end|>' → logprob: -12.876602172851562
    7. 'range' → logprob: -13.876602172851562
    8. ' range' → logprob: -13.876602172851562
    9. '   ' → logprob: -14.001602172851562
    10. '=' → logprob: -14.126602172851562

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03805124759674072
    2. 'range' → logprob: -3.288051128387451
    3. ' i' → logprob: -11.91305160522461
    4. ' ' → logprob: -13.28805160522461
    5. '(range' → logprob: -14.41305160522461
    6. 'i' → logprob: -14.41305160522461
    7. '	range' → logprob: -15.41305160522461
    8. ' xrange' → logprob: -17.03805160522461
    9. ' in' → logprob: -17.41305160522461
    10. ')' → logprob: -18.03805160522461

Token 31: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0011252141557633877
    2. '(' → logprob: -6.876125335693359
    3. ' i' → logprob: -9.87612533569336
    4. ' (' → logprob: -10.37612533569336
    5. 'i' → logprob: -11.87612533569336
    6. ' ' → logprob: -14.12612533569336
    7. '(n' → logprob: -14.25112533569336
    8. ')' → logprob: -14.62612533569336
    9. '(cnt' → logprob: -14.62612533569336
    10. '(
' → logprob: -16.12612533569336

Token 32: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009457024745643139
    2. ' +' → logprob: -4.759457111358643
    3. ',' → logprob: -7.259457111358643
    4. ' ,' → logprob: -10.134456634521484
    5. '+n' → logprob: -10.134456634521484
    6. ',n' → logprob: -10.634456634521484
    7. '+,' → logprob: -11.259456634521484
    8. '   ' → logprob: -11.384456634521484
    9. '1' → logprob: -12.134456634521484
    10. ' ' → logprob: -12.759456634521484

Token 33: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5760821104049683
    2. 'n' → logprob: -0.8260821104049683
    3. '	n' → logprob: -9.076082229614258
    4. ' ' → logprob: -11.576082229614258
    5. ')n' → logprob: -12.201082229614258
    6. ')' → logprob: -12.451082229614258
    7. '   ' → logprob: -12.451082229614258
    8. '    ' → logprob: -12.826082229614258
    9. '1' → logprob: -14.576082229614258
    10. '<n' → logprob: -14.701082229614258

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006862253649160266
    2. '):
' → logprob: -7.500686168670654
    3. ':' → logprob: -9.625686645507812
    4. '       ' → logprob: -10.500686645507812
    5. '+' → logprob: -11.250686645507812
    6. '   ' → logprob: -11.375686645507812
    7. ')' → logprob: -12.000686645507812
    8. ' ):' → logprob: -12.500686645507812
    9. '):

' → logprob: -14.000686645507812
    10. '<|end|>' → logprob: -14.250686645507812

Token 35: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10969763249158859
    2. ':' → logprob: -3.1096975803375244
    3. '<|end|>' → logprob: -3.3596975803375244
    4. ' if' → logprob: -4.6096978187561035
    5. '       ' → logprob: -5.1096978187561035
    6. '               ' → logprob: -6.2346978187561035
    7. '<|end|>' → logprob: -6.3596978187561035
    8. ' ' → logprob: -6.6096978187561035
    9. 'if' → logprob: -7.1096978187561035
    10. '            ' → logprob: -7.4846978187561035

Token 36: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4764195382595062
    2. '               ' → logprob: -1.9764195680618286
    3. '<|end|>' → logprob: -2.226419448852539
    4. ' ' → logprob: -2.976419448852539
    5. '           ' → logprob: -3.226419448852539
    6. 'if' (adapté à ' if') → logprob: -3.351419448852539
    7. '            ' → logprob: -6.351419448852539
    8. '<|end|>' → logprob: -6.476419448852539
    9. ')' → logprob: -7.351419448852539
    10. ' 
' → logprob: -7.976419448852539

Token 37: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.011276407167315483
    2. 'a' → logprob: -4.5112762451171875
    3. ' ' → logprob: -8.511276245117188
    4. ' ' → logprob: -11.261276245117188
    5. '<|end|>' → logprob: -12.261276245117188
    6. '	a' → logprob: -12.386276245117188
    7. '    ' → logprob: -13.261276245117188
    8. '>a' → logprob: -13.886276245117188
    9. ')' → logprob: -14.886276245117188
    10. ' (' → logprob: -15.261276245117188

Token 38: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.018334655091166496
    2. '[' → logprob: -4.018334865570068
    3. '[min' → logprob: -8.64333438873291
    4. ' [' → logprob: -13.01833438873291
    5. '[a' → logprob: -13.14333438873291
    6. '[
' → logprob: -14.01833438873291
    7. '\[' → logprob: -14.64333438873291
    8. '[max' → logprob: -14.64333438873291
    9. '```' → logprob: -14.64333438873291
    10. '[i' → logprob: -14.76833438873291

Token 39: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.006403069477528334
    2. '<' → logprob: -5.381402969360352
    3. '[' → logprob: -7.256402969360352
    4. ']' → logprob: -7.631402969360352
    5. ')' → logprob: -7.631402969360352
    6. ' ' → logprob: -10.256402969360352
    7. ']<' → logprob: -11.256402969360352
    8. ')<' → logprob: -11.256402969360352
    9. '<|end|>' → logprob: -11.506402969360352
    10. 'a' → logprob: -12.006402969360352

Token 40: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.004733314737677574
    2. '<' → logprob: -5.379733085632324
    3. '[' → logprob: -9.504733085632324
    4. ' ' → logprob: -10.879733085632324
    5. '<|end|>' → logprob: -12.504733085632324
    6. '<int' → logprob: -12.879733085632324
    7. ' <",' → logprob: -13.129733085632324
    8. '   ' → logprob: -14.004733085632324
    9. ' [' → logprob: -14.129733085632324
    10. '1' → logprob: -14.254733085632324

Token 41: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14268475770950317
    2. ' a' → logprob: -2.0176846981048584
    3. '	a' → logprob: -12.517684936523438
    4. ' ' → logprob: -12.642684936523438
    5. '```' → logprob: -14.267684936523438
    6. '   ' → logprob: -14.517684936523438
    7. ' ' → logprob: -14.517684936523438
    8. '_a' → logprob: -14.767684936523438
    9. '  ' → logprob: -15.392684936523438
    10. '    ' → logprob: -15.767684936523438

Token 42: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -8.697387966094539e-05
    2. '[' → logprob: -9.750086784362793
    3. '[a' → logprob: -11.125086784362793
    4. 'min' → logprob: -11.875086784362793
    5. '[m' → logprob: -13.375086784362793
    6. '```' → logprob: -13.875086784362793
    7. '[j' → logprob: -14.125086784362793
    8. '_min' → logprob: -14.250086784362793
    9. ' [' → logprob: -14.250086784362793
    10. '[max' → logprob: -14.500086784362793

Token 43: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -8.256334695033729e-05
    2. '_i' → logprob: -10.375082969665527
    3. ' _' → logprob: -11.000082969665527
    4. '_' → logprob: -11.500082969665527
    5. '```' → logprob: -12.375082969665527
    6. ']_' → logprob: -12.500082969665527
    7. ']' → logprob: -12.750082969665527
    8. ')_' → logprob: -12.875082969665527
    9. ')' → logprob: -13.125082969665527
    10. '[j' → logprob: -13.625082969665527

Token 44: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00020854694594163448
    2. ']' → logprob: -9.250208854675293
    3. '):' → logprob: -9.875208854675293
    4. ']:
' → logprob: -10.750208854675293
    5. '"]:' → logprob: -11.375208854675293
    6. '']:' → logprob: -12.125208854675293
    7. ':' → logprob: -12.250208854675293
    8. ' ]' → logprob: -12.625208854675293
    9. ']:
' → logprob: -12.750208854675293
    10. ']):' → logprob: -13.125208854675293

Token 45: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.1099666953086853
    2. 'min' (adapté à ' min') → logprob: -2.35996675491333
    3. '<|end|>' → logprob: -5.35996675491333
    4. '_min' → logprob: -6.35996675491333
    5. ' ' → logprob: -6.73496675491333
    6. ' 
' → logprob: -7.60996675491333
    7. '=min' → logprob: -7.85996675491333
    8. '=' → logprob: -8.484966278076172
    9. '[min' → logprob: -8.734966278076172
    10. '	min' → logprob: -8.984966278076172

Token 47: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -2.47495681833243e-05
    2. '_' → logprob: -11.125024795532227
    3. ' _' → logprob: -12.500024795532227
    4. '```' → logprob: -12.750024795532227
    5. '\' → logprob: -14.625024795532227
    6. '_i' → logprob: -14.750024795532227
    7. '<|end|>' → logprob: -14.750024795532227
    8. '_js' → logprob: -15.500024795532227
    9. '               ' → logprob: -15.750024795532227
    10. '           ' → logprob: -16.125024795532227

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021281987428665
    2. '=' → logprob: -2.350212812423706
    3. '=j' → logprob: -12.100213050842285
    4. ' ' → logprob: -15.100213050842285
    5. ' =
' → logprob: -15.850213050842285
    6. '＝' → logprob: -16.60021209716797
    7. ' =)' → logprob: -17.22521209716797
    8. ' ==' → logprob: -17.47521209716797
    9. ')' → logprob: -17.97521209716797
    10. '    ' → logprob: -18.22521209716797

Token 49: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1603076010942459
    2. ' j' → logprob: -1.9103076457977295
    3. '	j' → logprob: -9.410307884216309
    4. ' ' → logprob: -14.535307884216309
    5. ' ' → logprob: -14.660307884216309
    6. '[j' → logprob: -15.660307884216309
    7. '_j' → logprob: -15.660307884216309
    8. '    ' → logprob: -15.910307884216309
    9. '   ' → logprob: -16.660306930541992
    10. '<|end|>' → logprob: -16.785306930541992

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16945785284042358
    2. ' 
' → logprob: -3.0444579124450684
    3. '<|end|>' → logprob: -3.0444579124450684
    4. '       ' → logprob: -3.7944579124450684
    5. '  
' → logprob: -4.669457912445068
    6. '    
' → logprob: -4.794457912445068
    7. '        
' → logprob: -5.169457912445068
    8. '<|end|>' → logprob: -5.544457912445068
    9. '\n' → logprob: -5.919457912445068
    10. '   
' → logprob: -6.419457912445068

Token 51: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20586596429347992
    2. '<|end|>' → logprob: -3.2058658599853516
    3. '   ' → logprob: -3.4558658599853516
    4. '        
' → logprob: -3.7058658599853516
    5. ' ' → logprob: -3.9558658599853516
    6. ')' → logprob: -4.330865859985352
    7. '        ' → logprob: -5.205865859985352
    8. '\n' → logprob: -5.330865859985352
    9. '           ' → logprob: -5.330865859985352
    10. '
' → logprob: -5.455865859985352

Token 53: ' i' (ID: 575)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.42560768127441406
    2. ' i' → logprob: -1.550607681274414
    3. 'min' → logprob: -2.550607681274414
    4. 'i' → logprob: -3.175607681274414
    5. ' a' → logprob: -4.550607681274414
    6. 'a' → logprob: -5.550607681274414
    7. ' ' → logprob: -8.550607681274414
    8. '	min' → logprob: -10.550607681274414
    9. '  ' → logprob: -11.675607681274414
    10. ' ' → logprob: -12.050607681274414

Token 54: ' <' (ID: 464)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.005935082212090492
    2. '!=' → logprob: -5.130935192108154
    3. '<|end|>' → logprob: -13.005934715270996
    4. '   ' → logprob: -14.005934715270996
    5. ' ==' → logprob: -14.255934715270996
    6. ' ' → logprob: -14.505934715270996
    7. ')!=' → logprob: -14.505934715270996
    8. ' <' → logprob: -14.630934715270996
    9. ' ' → logprob: -15.005934715270996
    10. ']!=' → logprob: -15.755934715270996

Token 55: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00479927659034729
    2. '>' → logprob: -5.5047993659973145
    3. ' min' → logprob: -7.2547993659973145
    4. 'n' → logprob: -12.754798889160156
    5. ' ' → logprob: -12.754798889160156
    6. '   ' → logprob: -13.379798889160156
    7. '  ' → logprob: -13.754798889160156
    8. '=min' → logprob: -14.004798889160156
    9. ' >' → logprob: -14.129798889160156
    10. 'm' → logprob: -14.379798889160156

Token 56: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.3663626305060461e-05
    2. '_' → logprob: -11.75001335144043
    3. '_i' → logprob: -13.12501335144043
    4. '```' → logprob: -14.00001335144043
    5. '\' → logprob: -14.25001335144043
    6. ' _' → logprob: -14.37501335144043
    7. '__' → logprob: -15.25001335144043
    8. '_js' → logprob: -15.50001335144043
    9. '   ' → logprob: -15.87501335144043
    10. 'j' → logprob: -16.12501335144043

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003050796454772353
    2. ':
' → logprob: -6.003050804138184
    3. ',' → logprob: -8.253050804138184
    4. '):' → logprob: -9.128050804138184
    5. ' :' → logprob: -9.378050804138184
    6. '       ' → logprob: -9.878050804138184
    7. '           ' → logprob: -11.003050804138184
    8. '<|end|>' → logprob: -11.128050804138184
    9. '   ' → logprob: -11.503050804138184
    10. ':**' → logprob: -12.378050804138184

Token 58: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.431177020072937
    2. 'a' (adapté à ' a') → logprob: -1.056177020072937
    3. '           ' → logprob: -6.556177139282227
    4. ' cnt' → logprob: -8.181177139282227
    5. '       ' → logprob: -8.806177139282227
    6. '        ' → logprob: -8.931177139282227
    7. 'cnt' → logprob: -9.181177139282227
    8. '    ' → logprob: -9.306177139282227
    9. ' ' → logprob: -9.431177139282227
    10. '            ' → logprob: -10.056177139282227

Token 60: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01342690922319889
    2. '[min' → logprob: -4.763426780700684
    3. '[' → logprob: -5.638426780700684
    4. ',' → logprob: -6.763426780700684
    5. ',i' → logprob: -9.888426780700684
    6. '.swap' → logprob: -11.263426780700684
    7. '[j' → logprob: -11.638426780700684
    8. 'i' → logprob: -12.388426780700684
    9. '[a' → logprob: -12.763426780700684
    10. ',min' → logprob: -14.013426780700684

Token 61: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048941146582365036
    2. '],' → logprob: -3.048941135406494
    3. '>,' → logprob: -8.423941612243652
    4. '},' → logprob: -10.173941612243652
    5. ',a' → logprob: -10.673941612243652
    6. '),' → logprob: -10.673941612243652
    7. ' ,' → logprob: -10.923941612243652
    8. ']' → logprob: -11.798941612243652
    9. '[' → logprob: -12.048941612243652
    10. ' ],' → logprob: -12.798941612243652

Token 62: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10021162778139114
    2. ' a' → logprob: -2.3502116203308105
    3. '<|end|>' → logprob: -12.850212097167969
    4. '	a' → logprob: -13.475212097167969
    5. ' ' → logprob: -15.100212097167969
    6. '           ' → logprob: -15.225212097167969
    7. '    ' → logprob: -15.850212097167969
    8. '  ' → logprob: -16.47521209716797
    9. '        ' → logprob: -16.85021209716797
    10. '   ' → logprob: -16.85021209716797

Token 63: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.0015045057516545057
    2. '[' → logprob: -6.501504421234131
    3. '[max' → logprob: -14.376504898071289
    4. 'min' → logprob: -14.376504898071289
    5. '[m' → logprob: -14.751504898071289
    6. '[
' → logprob: -15.376504898071289
    7. '_min' → logprob: -15.876504898071289
    8. '```' → logprob: -15.876504898071289
    9. '[:]' → logprob: -16.25150489807129
    10. '<|end|>' → logprob: -17.62650489807129

Token 64: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0006323783891275525
    2. '_' → logprob: -7.375632286071777
    3. '<|end|>' → logprob: -13.875632286071777
    4. '_]' → logprob: -14.000632286071777
    5. ' _' → logprob: -14.125632286071777
    6. '_)' → logprob: -14.375632286071777
    7. '```' → logprob: -14.500632286071777
    8. '_i' → logprob: -15.125632286071777
    9. '_min' → logprob: -15.500632286071777
    10. 'j' → logprob: -15.625632286071777

Token 65: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002205828350270167
    2. ']=' → logprob: -8.50022029876709
    3. ' ]' → logprob: -11.62522029876709
    4. '=' → logprob: -12.12522029876709
    5. ')' → logprob: -14.12522029876709
    6. '   ' → logprob: -14.25022029876709
    7. '<|end|>' → logprob: -14.75022029876709
    8. '}' → logprob: -15.37522029876709
    9. ' =' → logprob: -16.000221252441406
    10. '']' → logprob: -16.250221252441406

Token 66: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004623087588697672
    2. ' =' → logprob: -5.379622936248779
    3. '=
' → logprob: -13.254623413085938
    4. '=

' → logprob: -14.379623413085938
    5. ',' → logprob: -16.004623413085938
    6. ' =
' → logprob: -16.629623413085938
    7. '<|end|>' → logprob: -16.754623413085938
    8. '.=' → logprob: -17.129623413085938
    9. '_swap' → logprob: -17.629623413085938
    10. '=`' → logprob: -17.754623413085938

Token 67: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.31327024102211
    2. 'a' → logprob: -1.3132702112197876
    3. ' ' → logprob: -12.688270568847656
    4. '	a' → logprob: -12.938270568847656
    5. ' ' → logprob: -12.938270568847656
    6. '    ' → logprob: -15.688270568847656
    7. '_a' → logprob: -16.063270568847656
    8. '<|end|>' → logprob: -16.688270568847656
    9. ' 
' → logprob: -16.938270568847656
    10. '   ' → logprob: -16.938270568847656

Token 68: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.0001992490579141304
    2. '[j' → logprob: -9.000199317932129
    3. '[' → logprob: -9.750199317932129
    4. '[i' → logprob: -11.750199317932129
    5. 'min' → logprob: -12.000199317932129
    6. '[m' → logprob: -14.125199317932129
    7. '[max' → logprob: -14.375199317932129
    8. '[
' → logprob: -14.375199317932129
    9. '```' → logprob: -14.625199317932129
    10. ' min' → logprob: -15.375199317932129

Token 69: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -2.4987974029500037e-05
    2. '<|end|>' → logprob: -11.375024795532227
    3. '_' → logprob: -11.500024795532227
    4. ' _' → logprob: -13.750024795532227
    5. '_js' → logprob: -14.625024795532227
    6. '```' → logprob: -15.250024795532227
    7. '_s' → logprob: -15.500024795532227
    8. '__' → logprob: -15.625024795532227
    9. '_i' → logprob: -15.875024795532227
    10. '_token' → logprob: -16.125024795532227

Token 70: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24000462889671326
    2. ']' → logprob: -1.8650046586990356
    3. '],' → logprob: -3.115004539489746
    4. ' ,' → logprob: -4.365004539489746
    5. ' ]' → logprob: -7.615004539489746
    6. ',a' → logprob: -7.615004539489746
    7. ' ],' → logprob: -8.740004539489746
    8. ',i' → logprob: -9.740004539489746
    9. '   ' → logprob: -10.115004539489746
    10. ' ' → logprob: -10.365004539489746

Token 71: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014163863845169544
    2. ' a' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.639163970947266
    4. '	a' → logprob: -15.889163970947266
    5. '<|end|>' → logprob: -16.514163970947266
    6. '```' → logprob: -17.764163970947266
    7. '_a' → logprob: -18.389163970947266
    8. '   ' → logprob: -18.514163970947266
    9. ')a' → logprob: -18.514163970947266
    10. '`' → logprob: -18.764163970947266

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0018763974076136947
    2. '[' → logprob: -6.376876354217529
    3. '[j' → logprob: -9.126876831054688
    4. '```' → logprob: -10.126876831054688
    5. '[a' → logprob: -11.001876831054688
    6. '[
' → logprob: -12.876876831054688
    7. 'i' → logprob: -13.376876831054688
    8. '\[' → logprob: -13.876876831054688
    9. ' [' → logprob: -14.001876831054688
    10. ']' → logprob: -14.376876831054688

Token 73: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010232820641249418
    2. ')
' → logprob: -7.001023292541504
    3. '<|end|>' → logprob: -9.751023292541504
    4. ']' → logprob: -10.001023292541504
    5. '```' → logprob: -13.126023292541504
    6. '}' → logprob: -13.376023292541504
    7. '       ' → logprob: -13.626023292541504
    8. ')

' → logprob: -14.001023292541504
    9. '   ' → logprob: -14.501023292541504
    10. '）' → logprob: -14.626023292541504

Token 74: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22917203605175018
    2. '\n' → logprob: -2.8541719913482666
    3. '           ' → logprob: -3.1041719913482666
    4. '   ' → logprob: -3.3541719913482666
    5. '<|end|>' → logprob: -3.8541719913482666
    6. '
' → logprob: -4.229172229766846
    7. '        
' → logprob: -4.979172229766846
    8. '```' → logprob: -5.104172229766846
    9. '    
' → logprob: -5.604172229766846
    10. ' 
' → logprob: -6.354172229766846

Token 75: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.19375930726528168
    2. ' cnt' → logprob: -1.8187593221664429
    3. '           ' → logprob: -4.443759441375732
    4. '	cnt' → logprob: -7.068759441375732
    5. '       ' → logprob: -7.318759441375732
    6. '   ' → logprob: -8.318758964538574
    7. '(cnt' → logprob: -8.943758964538574
    8. '[cnt' → logprob: -9.818758964538574
    9. ' ' → logprob: -10.193758964538574
    10. '```' → logprob: -10.443758964538574

Token 76: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5068961977958679
    2. ' +=' → logprob: -1.0068962574005127
    3. '+=' → logprob: -3.5068962574005127
    4. ' +' → logprob: -6.131896018981934
    5. '++' → logprob: -10.381896018981934
    6. ' ' → logprob: -10.506896018981934
    7. '=' → logprob: -10.881896018981934
    8. '<|end|>' → logprob: -10.881896018981934
    9. '+++' → logprob: -11.381896018981934
    10. '   ' → logprob: -12.631896018981934

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.500553131103516
    4. '  ' → logprob: -17.875553131103516
    5. '+' → logprob: -18.125553131103516
    6. '１' → logprob: -18.500553131103516
    7. '<|end|>' → logprob: -18.750553131103516
    8. '       ' → logprob: -18.750553131103516
    9. '2' → logprob: -19.250553131103516
    10. '    ' → logprob: -19.563053131103516

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.50001335144043
    4. '  ' → logprob: -18.62501335144043
    5. '<|end|>' → logprob: -18.62501335144043
    6. '１' → logprob: -18.75001335144043
    7. '```' → logprob: -20.43751335144043
    8. '۱' → logprob: -20.68751335144043
    9. '">' → logprob: -21.37501335144043
    10. '
' → logprob: -21.37501335144043

Token 79: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1756211221218109
    2. '<|end|>' → logprob: -2.1756210327148438
    3. '
' → logprob: -3.9256210327148438
    4. ' return' → logprob: -4.675621032714844
    5. 'return' → logprob: -5.550621032714844
    6. '	return' → logprob: -5.550621032714844
    7. ' ' → logprob: -5.675621032714844
    8. '    
' → logprob: -6.175621032714844
    9. '  
' → logprob: -6.675621032714844
    10. '       ' → logprob: -7.300621032714844

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.495241641998291
    2. '
' → logprob: -1.495241641998291
    3. '<|end|>' → logprob: -2.495241641998291
    4. '    
' → logprob: -3.995241641998291
    5. '  
' → logprob: -4.245241641998291
    6. 'return' → logprob: -4.620241641998291
    7. '\n' → logprob: -4.870241641998291
    8. ' 
' → logprob: -4.870241641998291
    9. ' ' → logprob: -5.120241641998291
    10. ' return' → logprob: -5.495241641998291

Token 81: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15705931186676025
    2. 'return' → logprob: -2.1570591926574707
    3. ' return' → logprob: -4.032059192657471
    4. '<|end|>' → logprob: -4.657059192657471
    5. '	return' → logprob: -7.032059192657471
    6. ' ' → logprob: -7.657059192657471
    7. '       ' → logprob: -8.157059669494629
    8. ':return' → logprob: -8.657059669494629
    9. '    
' → logprob: -9.157059669494629
    10. '  ' → logprob: -9.157059669494629

Token 82: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005359939532354474
    2. '(cnt' → logprob: -8.12553596496582
    3. '('' → logprob: -9.62553596496582
    4. '("' → logprob: -9.87553596496582
    5. '(a' → logprob: -10.12553596496582
    6. '(c' → logprob: -10.75053596496582
    7. '("("' → logprob: -10.75053596496582
    8. '(len' → logprob: -11.12553596496582
    9. '((' → logprob: -11.62553596496582
    10. '()' → logprob: -12.00053596496582

Token 83: ' ".' (ID: 11730)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.012211289256811142
    2. '{' → logprob: -5.137211322784424
    3. 'Swap' → logprob: -6.637211322784424
    4. '交換' → logprob: -7.012211322784424
    5. 'swap' → logprob: -7.137211322784424
    6. '{}' → logprob: -7.512211322784424
    7. '(cnt' → logprob: -8.012210845947266
    8. '"{' → logprob: -8.262210845947266
    9. '交换' → logprob: -8.262210845947266
    10. '[cnt' → logprob: -8.262210845947266

Token 84: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.00732939038425684
    2. 'print' → logprob: -5.00732946395874
    3. 'format' → logprob: -7.88232946395874
    4. 'write' → logprob: -8.757328987121582
    5. ')' → logprob: -9.882328987121582
    6. ' ' → logprob: -12.257328987121582
    7. 'jo' → logprob: -12.632328987121582
    8. 'j' → logprob: -12.757328987121582
    9. 'strip' → logprob: -13.132328987121582
    10. 'start' → logprob: -13.507328987121582

Token 85: '([' (ID: 5194)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.1546451300382614
    2. '(' → logprob: -2.4046452045440674
    3. '(map' → logprob: -3.1546452045440674
    4. '([' → logprob: -4.654644966125488
    5. '(list' → logprob: -7.529644966125488
    6. '(a' → logprob: -8.404644966125488
    7. '(
' → logprob: -11.529644966125488
    8. '(

' → logprob: -11.529644966125488
    9. 'str' → logprob: -12.404644966125488
    10. '(['' → logprob: -12.529644966125488

Token 86: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5786728858947754
    2. 'map' → logprob: -0.8286728858947754
    3. '[str' → logprob: -6.078672885894775
    4. 'list' → logprob: -8.328672409057617
    5. '(map' → logprob: -9.328672409057617
    6. ' map' → logprob: -10.203672409057617
    7. '(str' → logprob: -10.328672409057617
    8. '[' → logprob: -11.328672409057617
    9. ' str' → logprob: -11.453672409057617
    10. '   ' → logprob: -11.953672409057617

Token 87: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05127548426389694
    2. '(i' → logprob: -3.9262754917144775
    3. '(a' → logprob: -3.9262754917144775
    4. '(' → logprob: -4.676275253295898
    5. '(num' → logprob: -7.051275253295898
    6. '(k' → logprob: -9.676275253295898
    7. '(elem' → logprob: -9.676275253295898
    8. '(item' → logprob: -9.926275253295898
    9. '(e' → logprob: -10.051275253295898
    10. '(n' → logprob: -10.176275253295898

Token 88: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044949972652830184
    2. ')])' → logprob: -8.000449180603027
    3. '(x' → logprob: -9.375449180603027
    4. ' )' → logprob: -11.250449180603027
    5. '(a' → logprob: -12.250449180603027
    6. ')a' → logprob: -13.125449180603027
    7. '),' → logprob: -13.375449180603027
    8. ')
' → logprob: -13.500449180603027
    9. '   ' → logprob: -13.625449180603027
    10. 'a' → logprob: -13.750449180603027

Token 89: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03805205225944519
    2. ')])' → logprob: -4.163052082061768
    3. '(a' → logprob: -4.913052082061768
    4. 'for' → logprob: -5.288052082061768
    5. ' for' → logprob: -5.413052082061768
    6. '(x' → logprob: -5.663052082061768
    7. '(' → logprob: -7.413052082061768
    8. 'a' → logprob: -8.53805160522461
    9. ')]' → logprob: -8.78805160522461
    10. '),' → logprob: -9.16305160522461

Token 90: ' x' (ID: 1215)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.14790046215057373
    2. 'a' → logprob: -2.0229005813598633
    3. '(a' → logprob: -5.272900581359863
    4. '	a' → logprob: -10.022900581359863
    5. '(' → logprob: -11.022900581359863
    6. '<|end|>' → logprob: -11.272900581359863
    7. ' (' → logprob: -12.772900581359863
    8. '(
' → logprob: -13.397900581359863
    9. ' ' → logprob: -13.522900581359863
    10. '>a' → logprob: -14.147900581359863

Token 91: ' in' (ID: 306)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.19384042918682098
    2. 'a' → logprob: -2.818840503692627
    3. ' a' → logprob: -2.943840503692627
    4. ' in' → logprob: -2.943840503692627
    5. '(' → logprob: -5.068840503692627
    6. ')' → logprob: -6.693840503692627
    7. ' ' → logprob: -7.318840503692627
    8. '   ' → logprob: -7.443840503692627
    9. '(x' → logprob: -7.693840503692627
    10. ']' → logprob: -8.068840026855469

Token 92: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10021260380744934
    2. ' a' → logprob: -2.350212574005127
    3. '(a' → logprob: -12.350213050842285
    4. '	a' → logprob: -14.350213050842285
    5. ' ' → logprob: -14.850213050842285
    6. ')a' → logprob: -15.225213050842285
    7. '[a' → logprob: -15.350213050842285
    8. '_a' → logprob: -16.97521209716797
    9. '    ' → logprob: -16.97521209716797
    10. '   ' → logprob: -16.97521209716797

Token 93: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.07914545387029648
    2. '])' → logprob: -2.5791454315185547
    3. ']' → logprob: -9.454145431518555
    4. ')])' → logprob: -9.579145431518555
    5. ')' → logprob: -9.954145431518555
    6. '))' → logprob: -10.454145431518555
    7. ']))
' → logprob: -11.329145431518555
    8. ')]' → logprob: -11.829145431518555
    9. '])))' → logprob: -12.204145431518555
    10. ']),' → logprob: -13.204145431518555

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21564464271068573
    2. '<|end|>' → logprob: -2.090644598007202
    3. '\n' → logprob: -4.215644836425781
    4. '	return' → logprob: -4.340644836425781
    5. '
' → logprob: -4.340644836425781
    6. 'return' → logprob: -5.090644836425781
    7. ' ' → logprob: -5.340644836425781
    8. '    
' → logprob: -5.465644836425781
    9. '' → logprob: -6.215644836425781
    10. '  ' → logprob: -6.340644836425781

Token 95: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5551488995552063
    2. 'return' → logprob: -1.0551488399505615
    3. 'print' (adapté à ' print') → logprob: -2.5551488399505615
    4. '    
' → logprob: -9.30514907836914
    5. ' return' → logprob: -9.68014907836914
    6. '	return' → logprob: -10.68014907836914
    7. '<|end|>' → logprob: -13.05514907836914
    8. '       ' → logprob: -13.18014907836914
    9. '  ' → logprob: -13.30514907836914
    10. ' ' → logprob: -13.55514907836914

Token 96: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12703174352645874
    2. '(cnt' → logprob: -2.1270318031311035
    3. '(
' → logprob: -10.377031326293945
    4. '('' → logprob: -10.877031326293945
    5. '("("' → logprob: -10.877031326293945
    6. '(c' → logprob: -11.377031326293945
    7. '((' → logprob: -11.752031326293945
    8. '(count' → logprob: -12.002031326293945
    9. '("' → logprob: -13.377031326293945
    10. '()' → logprob: -13.377031326293945

Token 97: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.125
    3. ')
' → logprob: -16.375
    4. ')`' → logprob: -17.625
    5. '))' → logprob: -17.75
    6. '`)' → logprob: -19.375
    7. '')' → logprob: -19.625
    8. ')**' → logprob: -19.75
    9. '   ' → logprob: -19.875
    10. '")' → logprob: -19.875

Token 98: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7821529507637024
    2. '<|end|>' → logprob: -1.0321528911590576
    3. '#' → logprob: -2.2821528911590576
    4. '\n' → logprob: -2.9071528911590576
    5. 'n' → logprob: -4.657153129577637
    6. '' → logprob: -5.157153129577637
    7. '\' → logprob: -5.657153129577637
    8. '```' → logprob: -6.157153129577637
    9. ' ' → logprob: -6.282153129577637
    10. 'a' → logprob: -6.657153129577637

Token 99: ' main' (ID: 2758)
  Prédit: ' insertion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' insertion' → logprob: -0.514475405216217
    2. ' ' → logprob: -1.0144753456115723
    3. ' bubble' → logprob: -4.139475345611572
    4. ' insert' → logprob: -4.139475345611572
    5. ' b' → logprob: -5.889475345611572
    6. ' linear' → logprob: -6.889475345611572
    7. ' space' → logprob: -7.139475345611572
    8. ' main' → logprob: -7.764475345611572
    9. ' s' → logprob: -8.01447582244873
    10. ' inser' → logprob: -8.01447582244873

Token 100: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.000990891712717712
    2. '(' → logprob: -7.250990867614746
    3. '()' → logprob: -8.250990867614746
    4. '():
' → logprob: -11.875990867614746
    5. ' ():' → logprob: -12.500990867614746
    6. '()>' → logprob: -12.625990867614746
    7. ':' → logprob: -13.500990867614746
    8. '()">' → logprob: -13.625990867614746
    9. '(":' → logprob: -14.125990867614746
    10. '(:' → logprob: -14.375990867614746

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05580740049481392
    2. 'n' → logprob: -3.30580735206604
    3. '<|end|>' → logprob: -4.555807590484619
    4. ' n' → logprob: -5.805807590484619
    5. 'a' → logprob: -6.805807590484619
    6. '    
' → logprob: -7.180807590484619
    7. ' ' → logprob: -8.055807113647461
    8. '(n' → logprob: -8.305807113647461
    9. '    ' → logprob: -8.430807113647461
    10. '<|end|>' → logprob: -8.555807113647461

Token 102: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.05658825486898422
    2. ' n' → logprob: -3.0565881729125977
    3. '   ' → logprob: -4.931588172912598
    4. 'a' → logprob: -7.806588172912598
    5. '	n' → logprob: -8.931588172912598
    6. 'N' → logprob: -9.431588172912598
    7. 's' → logprob: -10.306588172912598
    8. 'import' → logprob: -10.431588172912598
    9. ' ' → logprob: -10.806588172912598
    10. ' a' → logprob: -11.431588172912598

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004804495722055435
    2. '=' → logprob: -5.879804611206055
    3. ',' → logprob: -6.254804611206055
    4. ' ' → logprob: -10.629804611206055
    5. '=int' → logprob: -10.629804611206055
    6. ' ,' → logprob: -11.754804611206055
    7. ')' → logprob: -12.379804611206055
    8. '<|end|>' → logprob: -12.379804611206055
    9. ' =
' → logprob: -12.754804611206055
    10. '=input' → logprob: -13.004804611206055

Token 104: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16053961217403412
    2. 'int' → logprob: -1.9105396270751953
    3. ' ' → logprob: -8.160539627075195
    4. '=int' → logprob: -11.535539627075195
    5. '[int' → logprob: -11.785539627075195
    6. '10' → logprob: -12.785539627075195
    7. '<int' → logprob: -13.035539627075195
    8. ' 
' → logprob: -13.285539627075195
    9. '(int' → logprob: -13.535539627075195
    10. '20' → logprob: -14.160539627075195

Token 105: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12800292670726776
    2. '(' → logprob: -2.128002882003784
    3. 'input' → logprob: -6.878003120422363
    4. '()' → logprob: -10.628003120422363
    5. '(
' → logprob: -12.128003120422363
    6. ' input' → logprob: -12.628003120422363
    7. '=input' → logprob: -13.128003120422363
    8. '(raw' → logprob: -13.378003120422363
    9. '('' → logprob: -13.628003120422363
    10. '	input' → logprob: -14.253003120422363

Token 106: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.029805459082126617
    2. '()' → logprob: -3.5298054218292236
    3. '().' → logprob: -11.279805183410645
    4. '())
' → logprob: -11.404805183410645
    5. '(' → logprob: -11.654805183410645
    6. '()
' → logprob: -11.779805183410645
    7. '();)' → logprob: -12.404805183410645
    8. '()))' → logprob: -13.279805183410645
    9. '()>' → logprob: -13.404805183410645
    10. '(),' → logprob: -13.404805183410645

Token 107: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.12917935848236084
    2. ' a' → logprob: -2.1291794776916504
    3. '<|end|>' → logprob: -6.25417947769165
    4. 's' → logprob: -9.254179000854492
    5. '	a' → logprob: -9.879179000854492
    6. 'arr' → logprob: -9.879179000854492
    7. 'n' → logprob: -10.254179000854492
    8. 'array' → logprob: -10.754179000854492
    9. '<|end|>' → logprob: -11.004179000854492
    10. 'A' → logprob: -11.504179000854492

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05490970239043236
    2. '=' → logprob: -2.9299097061157227
    3. '=[]' → logprob: -11.679909706115723
    4. '[' → logprob: -11.804909706115723
    5. '[]' → logprob: -12.554909706115723
    6. ',' → logprob: -13.429909706115723
    7. '[:]' → logprob: -13.429909706115723
    8. '.' → logprob: -13.679909706115723
    9. ' =[' → logprob: -14.304909706115723
    10. ')' → logprob: -14.554909706115723

Token 110: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05150389298796654
    2. '[list' → logprob: -3.051503896713257
    3. ' list' → logprob: -6.176503658294678
    4. '[' → logprob: -7.176503658294678
    5. '[input' → logprob: -10.551504135131836
    6. '[]' → logprob: -10.551504135131836
    7. ' [' → logprob: -11.551504135131836
    8. '[int' → logprob: -13.176504135131836
    9. '[List' → logprob: -13.801504135131836
    10. '	list' → logprob: -14.051504135131836

Token 111: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.6286106983898208e-05
    2. ' int' → logprob: -12.000016212463379
    3. '*' → logprob: -12.250016212463379
    4. ']int' → logprob: -13.000016212463379
    5. '0' → logprob: -13.500016212463379
    6. '[int' → logprob: -14.125016212463379
    7. '<int' → logprob: -15.125016212463379
    8. '(int' → logprob: -15.875016212463379
    9. 'i' → logprob: -16.375017166137695
    10. ',int' → logprob: -16.625017166137695

Token 112: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22919079661369324
    2. '(x' → logprob: -1.9791908264160156
    3. '(input' → logprob: -2.7291908264160156
    4. '(i' → logprob: -7.479190826416016
    5. '()' → logprob: -8.229190826416016
    6. '<|end|>' → logprob: -8.604190826416016
    7. '(
' → logprob: -8.729190826416016
    8. '()]' → logprob: -10.229190826416016
    9. '(user' → logprob: -10.354190826416016
    10. '(

' → logprob: -10.479190826416016

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0907738208770752
    2. '()' → logprob: -2.715773820877075
    3. '())' → logprob: -3.965773820877075
    4. '(input' → logprob: -7.215773582458496
    5. 'input' → logprob: -7.715773582458496
    6. 'for' → logprob: -8.465773582458496
    7. '(' → logprob: -9.465773582458496
    8. ' )' → logprob: -9.465773582458496
    9. '()]' → logprob: -10.340773582458496
    10. ' ()' → logprob: -10.965773582458496

Token 114: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4437941908836365
    2. '()' → logprob: -1.1937942504882812
    3. ' for' → logprob: -3.4437942504882812
    4. 'for' → logprob: -4.068794250488281
    5. ' )' → logprob: -6.193794250488281
    6. '())' → logprob: -6.568794250488281
    7. '(input' → logprob: -6.818794250488281
    8. 'input' → logprob: -7.693794250488281
    9. ' ' → logprob: -7.818794250488281
    10. '(' → logprob: -8.068794250488281

Token 115: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.01127570029348135
    2. 'input' → logprob: -4.511275768280029
    3. ' ' → logprob: -8.636275291442871
    4. '<|end|>' → logprob: -11.511275291442871
    5. ' x' → logprob: -11.636275291442871
    6. '(input' → logprob: -11.886275291442871
    7. '=input' → logprob: -12.011275291442871
    8. '_input' → logprob: -12.261275291442871
    9. '	input' → logprob: -12.636275291442871
    10. '_' → logprob: -13.136275291442871

Token 116: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8723688721656799
    2. ' in' → logprob: -0.9973688721656799
    3. 'input' → logprob: -1.6223688125610352
    4. '=input' → logprob: -4.997368812561035
    5. 'in' → logprob: -5.497368812561035
    6. '(input' → logprob: -6.122368812561035
    7. ' ' → logprob: -6.622368812561035
    8. '<|end|>' → logprob: -7.372368812561035
    9. ' =' → logprob: -9.122368812561035
    10. '_' → logprob: -9.247368812561035

Token 117: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868865668773651
    2. ' input' → logprob: -1.1368865966796875
    3. ' ' → logprob: -11.511886596679688
    4. '(input' → logprob: -12.511886596679688
    5. '=input' → logprob: -14.636886596679688
    6. '	input' → logprob: -14.886886596679688
    7. 'range' → logprob: -15.261886596679688
    8. ' range' → logprob: -15.511886596679688
    9. '<input' → logprob: -16.011886596679688
    10. '_input' → logprob: -16.261886596679688

Token 118: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020425561524461955
    2. '()' → logprob: -8.500204086303711
    3. '()]' → logprob: -14.750204086303711
    4. '(' → logprob: -15.625204086303711
    5. ' ().' → logprob: -16.62520408630371
    6. '()].' → logprob: -17.00020408630371
    7. '()
' → logprob: -18.37520408630371
    8. '())' → logprob: -19.12520408630371
    9. '()[' → logprob: -19.87520408630371
    10. '()

' → logprob: -20.50020408630371

Token 119: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009582702768966556
    2. 'strip' → logprob: -7.000958442687988
    3. 'rstrip' → logprob: -10.000958442687988
    4. ' split' → logprob: -13.625958442687988
    5. 'spl' → logprob: -15.750958442687988
    6. '(split' → logprob: -16.250957489013672
    7. 's' → logprob: -18.625957489013672
    8. '.split' → logprob: -19.000957489013672
    9. ' strip' → logprob: -19.625957489013672
    10. ' ' → logprob: -19.625957489013672

Token 120: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0034727321472018957
    2. '()' → logprob: -6.003472805023193
    3. ']' → logprob: -7.503472805023193
    4. ')]' → logprob: -8.003472328186035
    5. '())' → logprob: -9.253472328186035
    6. '(' → logprob: -11.378472328186035
    7. '()]
' → logprob: -13.003472328186035
    8. ')' → logprob: -14.253472328186035
    9. '()][' → logprob: -14.628472328186035
    10. ']()' → logprob: -14.878472328186035

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16331914067268372
    2. 'selection' → logprob: -3.0383191108703613
    3. '<|end|>' → logprob: -3.2883191108703613
    4. '    
' → logprob: -3.6633191108703613
    5. 'def' → logprob: -4.038319110870361
    6. '
' → logprob: -4.538319110870361
    7. 'main' → logprob: -5.038319110870361
    8. ' selection' → logprob: -6.538319110870361
    9. '  
' → logprob: -6.663319110870361
    10. ' 
' → logprob: -7.163319110870361

Token 122: ' selection' (ID: 8441)
  Prédit: 'selection'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selection' (adapté à ' selection') → logprob: -0.0013028570683673024
    2. ' selection' → logprob: -6.751302719116211
    3. '   ' → logprob: -9.001302719116211
    4. '(selection' → logprob: -12.501302719116211
    5. '_selection' → logprob: -13.501302719116211
    6. '    
' → logprob: -13.501302719116211
    7. '.selection' → logprob: -14.126302719116211
    8. '
' → logprob: -14.251302719116211
    9. ' 
' → logprob: -14.626302719116211
    10. 'select' → logprob: -15.376302719116211

Token 123: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.01427704282104969
    2. '_' → logprob: -4.26427698135376
    3. '_sorted' → logprob: -9.764277458190918
    4. '_s' → logprob: -11.014277458190918
    5. ' _' → logprob: -11.014277458190918
    6. '_select' → logprob: -12.514277458190918
    7. '_swap' → logprob: -13.014277458190918
    8. '_sn' → logprob: -13.264277458190918
    9. '_
' → logprob: -13.764277458190918
    10. '_search' → logprob: -14.014277458190918

Token 124: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.014182780869305134
    2. '(' → logprob: -4.2641825675964355
    3. ' (' → logprob: -11.764183044433594
    4. '(
' → logprob: -12.014183044433594
    5. '(n' → logprob: -12.639183044433594
    6. '(ai' → logprob: -14.514183044433594
    7. '<|end|>' → logprob: -14.764183044433594
    8. '(

' → logprob: -14.889183044433594
    9. '(x' → logprob: -16.139183044433594
    10. '(o' → logprob: -16.139183044433594

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0075736199505627155
    2. ',n' → logprob: -5.13257360458374
    3. '(n' → logprob: -6.75757360458374
    4. '(' → logprob: -7.75757360458374
    5. ')' → logprob: -10.132574081420898
    6. ' ,' → logprob: -11.507574081420898
    7. ',
' → logprob: -13.632574081420898
    8. 'n' → logprob: -14.007574081420898
    9. ')n' → logprob: -14.382574081420898
    10. ' ' → logprob: -14.507574081420898

Token 126: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3132808804512024
    2. 'n' → logprob: -1.3132808208465576
    3. ')' → logprob: -11.563281059265137
    4. ')n' → logprob: -12.063281059265137
    5. '	n' → logprob: -13.188281059265137
    6. ' ' → logprob: -14.563281059265137
    7. ' 
' → logprob: -14.813281059265137
    8. ' ' → logprob: -15.188281059265137
    9. '_n' → logprob: -15.438281059265137
    10. '(n' → logprob: -15.563281059265137

Token 127: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. ')
' → logprob: -11.125015258789062
    3. ' )' → logprob: -15.375015258789062
    4. ')`' → logprob: -16.250015258789062
    5. '))' → logprob: -16.875015258789062
    6. ')n' → logprob: -17.125015258789062
    7. ')#' → logprob: -17.250015258789062
    8. ')**' → logprob: -17.750015258789062
    9. ')

' → logprob: -18.000015258789062
    10. '   ' → logprob: -18.125015258789062

Token 128: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9291980862617493
    2. '\n' → logprob: -1.0541980266571045
    3. 'if' → logprob: -1.6791980266571045
    4. '<|end|>' → logprob: -3.3041980266571045
    5. '\' → logprob: -3.6791980266571045
    6. 'main' → logprob: -6.179198265075684
    7. '\
' → logprob: -6.429198265075684
    8. '  
' → logprob: -6.554198265075684
    9. '' → logprob: -7.179198265075684
    10. '```' → logprob: -7.304198265075684

Token 129: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.040247272700071335
    2. '__' → logprob: -3.2902472019195557
    3. '_' → logprob: -6.290247440338135
    4. ' ' → logprob: -8.290246963500977
    5. 'name' → logprob: -10.540246963500977
    6. '_name' → logprob: -10.665246963500977
    7. ' ' → logprob: -11.040246963500977
    8. ' _' → logprob: -11.540246963500977
    9. 'space' → logprob: -11.915246963500977
    10. ' ' → logprob: -12.540246963500977

Token 130: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01884237863123417
    2. ' ==' → logprob: -4.7688422203063965
    3. ' __' → logprob: -5.3938422203063965
    4. '_' → logprob: -5.8938422203063965
    5. '<|end|>' → logprob: -7.0188422203063965
    6. '==' → logprob: -7.2688422203063965
    7. ' ' → logprob: -8.018842697143555
    8. '[' → logprob: -8.393842697143555
    9. '.__' → logprob: -9.018842697143555
    10. '```' → logprob: -9.268842697143555

Token 131: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.64708495605737e-05
    2. '_' → logprob: -9.875066757202148
    3. '___' → logprob: -12.000066757202148
    4. '==' → logprob: -12.500066757202148
    5. '__.__' → logprob: -12.750066757202148
    6. ' __' → logprob: -14.625066757202148
    7. '____' → logprob: -14.750066757202148
    8. ' ==' → logprob: -15.000066757202148
    9. '__.' → logprob: -15.250066757202148
    10. '__["' → logprob: -15.250066757202148

Token 132: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6999245285987854
    2. '__' → logprob: -1.3249244689941406
    3. '==' → logprob: -1.4499244689941406
    4. '=="' → logprob: -6.074924468994141
    5. '<|end|>' → logprob: -8.19992446899414
    6. '_' → logprob: -8.82492446899414
    7. '=='' → logprob: -9.32492446899414
    8. '=' → logprob: -10.19992446899414
    9. ' =="' → logprob: -10.57492446899414
    10. '___' → logprob: -10.57492446899414

Token 133: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07889749854803085
    2. ''' → logprob: -2.578897476196289
    3. ' "' → logprob: -12.203897476196289
    4. ' "__' → logprob: -13.328897476196289
    5. '__' → logprob: -14.328897476196289
    6. '"user' → logprob: -15.328897476196289
    7. '`' → logprob: -17.07889747619629
    8. ' '' → logprob: -17.20389747619629
    9. ' '__' → logprob: -17.45389747619629
    10. '"I' → logprob: -17.57889747619629

Token 134: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01103863213211298
    2. 'main' → logprob: -5.011038780212402
    3. '_' → logprob: -6.011038780212402
    4. '_main' → logprob: -7.261038780212402
    5. '__':
' → logprob: -7.386038780212402
    6. 'm' → logprob: -7.761038780212402
    7. '__
' → logprob: -10.761038780212402
    8. '__.' → logprob: -10.886038780212402
    9. 'name' → logprob: -10.886038780212402
    10. '_m' → logprob: -11.386038780212402

Token 135: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3869870603084564
    2. '__':
' → logprob: -1.1369870901107788
    3. '_' → logprob: -9.51198673248291
    4. '__:' → logprob: -11.01198673248291
    5. '__.' → logprob: -11.13698673248291
    6. '':' → logprob: -11.88698673248291
    7. '__":
' → logprob: -13.13698673248291
    8. '___' → logprob: -14.26198673248291
    9. ''' → logprob: -14.26198673248291
    10. '__.__' → logprob: -14.88698673248291

Token 136: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.33318260312080383
    2. 'main' → logprob: -1.3331825733184814
    3. ' ' → logprob: -4.9581828117370605
    4. '	main' → logprob: -5.4581828117370605
    5. '<|end|>' → logprob: -5.8331828117370605
    6. ''' → logprob: -6.5831828117370605
    7. ' 
' → logprob: -6.5831828117370605
    8. '   ' → logprob: -7.0831828117370605
    9. '"' → logprob: -7.4581828117370605
    10. ' ' → logprob: -8.333182334899902

Token 137: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.06197025999426842
    2. ' main' → logprob: -2.8119702339172363
    3. '	main' → logprob: -13.061970710754395
    4. '   ' → logprob: -16.061969757080078
    5. 'm' → logprob: -16.311969757080078
    6. ' 
' → logprob: -16.436969757080078
    7. '(main' → logprob: -16.686969757080078
    8. ' ' → logprob: -17.186969757080078
    9. '_main' → logprob: -17.436969757080078
    10. ' ' → logprob: -17.811969757080078

Token 138: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015205175441224128
    2. '(' → logprob: -9.500151634216309
    3. '()
' → logprob: -9.500151634216309
    4. '()

' → logprob: -14.500151634216309
    5. ' ()' → logprob: -14.625151634216309
    6. '()`' → logprob: -15.000151634216309
    7. '(
' → logprob: -15.250151634216309
    8. '();' → logprob: -15.500151634216309
    9. '()">' → logprob: -15.625151634216309
    10. '()
' → logprob: -16.500152587890625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 136
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 118
Précision stricte (1ère position): 44.12%
Précision adaptée (1ère position): 47.79%
Précision (top 10): 86.76%
================================================================================
