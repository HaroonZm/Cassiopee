================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def selection_sort(A, N):
  sw = 0
  for i in range(0,N-1):
    minj = i
    for j in range(i,N):
      if A[j] < A[minj]:
        minj = j
    A[i], A[minj] = A[minj], A[i]
    if i != minj:
      sw += 1
  print(*A)
  print(sw)

N = int(input())
A = list(map(int, input().split()))
selection_sort(A, N)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' selection' (ID: 8441)
  → Token d'amorce (pas de prédiction)

Token 2: '_sort' (ID: 43815)
  → Token d'amorce (pas de prédiction)

Token 3: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0038387870881706476
    2. '_' → logprob: -5.628839015960693
    3. '(_' → logprob: -9.753838539123535
    4. '```' → logprob: -10.253838539123535
    5. '(_:' → logprob: -10.378838539123535
    6. ' (' → logprob: -10.503838539123535
    7. ':' → logprob: -10.628838539123535
    8. '(:' → logprob: -11.503838539123535
    9. '_(' → logprob: -12.003838539123535
    10. '(
' → logprob: -12.003838539123535

Token 4: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.557218074798584
    2. '[' → logprob: -1.057218074798584
    3. ')' → logprob: -2.557218074798584
    4. ':' → logprob: -7.432218074798584
    5. ',' → logprob: -7.557218074798584
    6. '```' → logprob: -8.557218551635742
    7. '[]):' → logprob: -8.682218551635742
    8. '):
' → logprob: -8.807218551635742
    9. '[
' → logprob: -8.932218551635742
    10. '[A' → logprob: -9.182218551635742

Token 5: ' N' (ID: 478)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8196066617965698
    2. 'i' → logprob: -0.9446066617965698
    3. ')' → logprob: -2.3196067810058594
    4. '):' → logprob: -3.0696067810058594
    5. ',' → logprob: -5.319606781005859
    6. ' k' → logprob: -5.444606781005859
    7. 'n' → logprob: -5.569606781005859
    8. ' n' → logprob: -6.194606781005859
    9. 'index' → logprob: -6.444606781005859
    10. ' )' → logprob: -6.569606781005859

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003537940327078104
    2. ')' → logprob: -5.753538131713867
    3. ':' → logprob: -8.128538131713867
    4. '```' → logprob: -10.878538131713867
    5. '):
' → logprob: -11.253538131713867
    6. ''):' → logprob: -11.378538131713867
    7. ',' → logprob: -11.628538131713867
    8. '[]):' → logprob: -12.753538131713867
    9. '[' → logprob: -12.878538131713867
    10. ' ):' → logprob: -14.003538131713867

Token 7: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0862266942858696
    2. '   ' → logprob: -2.71122670173645
    3. '```' → logprob: -5.461226463317871
    4. '\' → logprob: -5.586226463317871
    5. '    
' → logprob: -6.211226463317871
    6. '\n' → logprob: -6.211226463317871
    7. ':
' → logprob: -6.461226463317871
    8. '  
' → logprob: -7.586226463317871
    9. ':\' → logprob: -7.836226463317871
    10. '' → logprob: -8.211226463317871

Token 8: ' sw' (ID: 2766)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04249377176165581
    2. '   ' → logprob: -3.5424938201904297
    3. '```' → logprob: -5.16749382019043
    4. ' ' → logprob: -6.04249382019043
    5. '\' → logprob: -6.91749382019043
    6. ' :' → logprob: -7.04249382019043
    7. '\n' → logprob: -7.41749382019043
    8. ':
' → logprob: -7.66749382019043
    9. '  
' → logprob: -8.29249382019043
    10. '    
' → logprob: -8.66749382019043

Token 9: ' =' (ID: 314)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.7683936357498169
    2. 'aps' → logprob: -0.7683936357498169
    3. 'a' → logprob: -2.6433935165405273
    4. '   ' → logprob: -7.768393516540527
    5. '=' → logprob: -8.518393516540527
    6. ' =' → logprob: -8.518393516540527
    7. 'apping' → logprob: -8.893393516540527
    8. 'ап' → logprob: -9.143393516540527
    9. 'apped' → logprob: -9.518393516540527
    10. 'i' → logprob: -10.393393516540527

Token 10: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22545401751995087
    2. ' ' → logprob: -1.6004539728164673
    3. '1' → logprob: -10.350454330444336
    4. 'False' → logprob: -12.850454330444336
    5. '  ' → logprob: -14.162954330444336
    6. ' False' → logprob: -14.537954330444336
    7. '2' → logprob: -14.787954330444336
    8. 'True' → logprob: -14.850454330444336
    9. 'ap' → logprob: -14.850454330444336
    10. '=' → logprob: -15.100454330444336

Token 11: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008793042507022619
    2. 'False' → logprob: -7.500879287719727
    3. ' ' → logprob: -8.125879287719727
    4. '1' → logprob: -11.250879287719727
    5. 'True' → logprob: -11.375879287719727
    6. ' False' → logprob: -12.375879287719727
    7. ' True' → logprob: -15.375879287719727
    8. '2' → logprob: -15.500879287719727
    9. 'false' → logprob: -15.500879287719727
    10. '[' → logprob: -15.500879287719727

Token 12: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07933806627988815
    2. '  
' → logprob: -3.7043380737304688
    3. '\n' → logprob: -3.9543380737304688
    4. ' for' → logprob: -4.454338073730469
    5. ' ' → logprob: -5.079338073730469
    6. '```' → logprob: -5.454338073730469
    7. 'for' → logprob: -5.704338073730469
    8. '' → logprob: -6.579338073730469
    9. '
' → logprob: -6.829338073730469
    10. '\' → logprob: -7.079338073730469

Token 13: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6023774147033691
    2. ' ' → logprob: -1.6023774147033691
    3. '  
' → logprob: -1.9773774147033691
    4. '```' → logprob: -3.102377414703369
    5. ' for' → logprob: -3.227377414703369
    6. '\n' → logprob: -4.477377414703369
    7. 'for' → logprob: -5.477377414703369
    8. '   ' → logprob: -6.102377414703369
    9. '``' → logprob: -6.102377414703369
    10. '' → logprob: -6.227377414703369

Token 14: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28877121210098267
    2. ' for' → logprob: -2.038771152496338
    3. 'for' → logprob: -2.163771152496338
    4. '  
' → logprob: -5.913771152496338
    5. '```' → logprob: -6.413771152496338
    6. 'i' → logprob: -7.913771152496338
    7. '
' → logprob: -8.413771629333496
    8. '  ' → logprob: -8.788771629333496
    9. 'n' → logprob: -9.163771629333496
    10. '   ' → logprob: -9.163771629333496

Token 15: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18289120495319366
    2. ' i' → logprob: -1.8078912496566772
    3. '  ' → logprob: -6.057891368865967
    4. 'i' → logprob: -7.182891368865967
    5. ' ' → logprob: -11.432890892028809
    6. '_' → logprob: -12.182890892028809
    7. ' x' → logprob: -13.057890892028809
    8. ')' → logprob: -13.057890892028809
    9. ' ‌' → logprob: -13.057890892028809
    10. ' in' → logprob: -13.182890892028809

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18404646217823029
    2. ' ' → logprob: -1.9340465068817139
    3. '  ' → logprob: -4.309046268463135
    4. '<|end|>' → logprob: -4.809046268463135
    5. 'in' → logprob: -7.059046268463135
    6. ')' → logprob: -7.684046268463135
    7. '<|end|>' → logprob: -8.809046745300293
    8. '```' → logprob: -9.684046745300293
    9. '[' → logprob: -9.934046745300293
    10. ' )' → logprob: -10.184046745300293

Token 17: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014272922649979591
    2. 'range' → logprob: -4.264272689819336
    3. ' ' → logprob: -9.139272689819336
    4. '	range' → logprob: -14.014272689819336
    5. ' A' → logprob: -14.139272689819336
    6. ' xrange' → logprob: -15.014272689819336
    7. '  ' → logprob: -16.264272689819336
    8. '(range' → logprob: -16.389272689819336
    9. ' N' → logprob: -17.639272689819336
    10. '```' → logprob: -17.764272689819336

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07439512759447098
    2. '(len' → logprob: -2.949395179748535
    3. '(N' → logprob: -4.574395179748535
    4. ' (' → logprob: -4.824395179748535
    5. ' ' → logprob: -7.824395179748535
    6. '(i' → logprob: -8.074395179748535
    7. '(A' → logprob: -8.824395179748535
    8. '(n' → logprob: -10.074395179748535
    9. '(
' → logprob: -10.199395179748535
    10. '(length' → logprob: -11.574395179748535

Token 19: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005892887711524963
    2. '0' → logprob: -5.505892753601074
    3. ' N' → logprob: -7.130892753601074
    4. '1' → logprob: -7.380892753601074
    5. ' ' → logprob: -7.880892753601074
    6. 'i' → logprob: -11.630892753601074
    7. 'A' → logprob: -13.755892753601074
    8. 'len' → logprob: -14.505892753601074
    9. ')' → logprob: -15.005892753601074
    10. '2' → logprob: -15.255892753601074

Token 20: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030447524040937424
    2. ' ,' → logprob: -3.530447483062744
    3. ' ' → logprob: -7.905447483062744
    4. ')' → logprob: -9.030447959899902
    5. ',len' → logprob: -9.280447959899902
    6. ',N' → logprob: -9.655447959899902
    7. ' )' → logprob: -11.405447959899902
    8. '+' → logprob: -11.780447959899902
    9. ',n' → logprob: -11.780447959899902
    10. ',i' → logprob: -12.280447959899902

Token 21: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013936885632574558
    2. ',' → logprob: -4.638936996459961
    3. ')' → logprob: -5.638936996459961
    4. ' ' → logprob: -8.388936996459961
    5. '):
' → logprob: -8.888936996459961
    6. ':' → logprob: -9.013936996459961
    7. ' ):' → logprob: -9.388936996459961
    8. ' ,' → logprob: -11.638936996459961
    9. ',)' → logprob: -11.888936996459961
    10. '),' → logprob: -12.388936996459961

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043257648940198123
    2. ' ' → logprob: -7.75043249130249
    3. '2' → logprob: -13.750432968139648
    4. '  ' → logprob: -15.250432968139648
    5. '-' → logprob: -15.625432968139648
    6. '```' → logprob: -16.12543296813965
    7. ')' → logprob: -16.25043296813965
    8. '   ' → logprob: -16.50043296813965
    9. '    ' → logprob: -17.31293296813965
    10. '+' → logprob: -17.31293296813965

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01914098858833313
    2. ')' → logprob: -4.26914119720459
    3. ',' → logprob: -5.51914119720459
    4. ':' → logprob: -7.14414119720459
    5. ' ):' → logprob: -9.76914119720459
    6. '):
' → logprob: -10.14414119720459
    7. ' ' → logprob: -10.39414119720459
    8. ',)' → logprob: -11.76914119720459
    9. '),' → logprob: -12.01914119720459
    10. ',:)' → logprob: -12.26914119720459

Token 24: '   ' (ID: 271)
  Prédit: '     
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     
' → logprob: -1.199181079864502
    2. '    ' → logprob: -1.574181079864502
    3. ' ' → logprob: -1.824181079864502
    4. '   ' → logprob: -2.199181079864502
    5. ' 
' → logprob: -2.574181079864502
    6. '  
' → logprob: -2.574181079864502
    7. '      
' → logprob: -3.824181079864502
    8. '    
' → logprob: -3.949181079864502
    9. '     ' → logprob: -4.824181079864502
    10. '  ' → logprob: -5.574181079864502

Token 25: ' min' (ID: 1349)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.2486079931259155
    2. ' 
' → logprob: -1.4986079931259155
    3. '     ' → logprob: -1.9986079931259155
    4. ' ' → logprob: -2.248608112335205
    5. '     
' → logprob: -2.373608112335205
    6. '  
' → logprob: -3.498608112335205
    7. '      
' → logprob: -3.748608112335205
    8. '  ' → logprob: -4.123608112335205
    9. '<|end|>' → logprob: -4.248608112335205
    10. '       ' → logprob: -4.248608112335205

Token 26: 'j' (ID: 73)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009256009943783283
    2. ' _' → logprob: -5.884255886077881
    3. '_val' → logprob: -5.884255886077881
    4. '_index' → logprob: -6.634255886077881
    5. '_idx' → logprob: -6.759255886077881
    6. '_i' → logprob: -6.884255886077881
    7. '_ix' → logprob: -10.384256362915039
    8. '_ind' → logprob: -11.009256362915039
    9. ' ' → logprob: -11.259256362915039
    10. '_=' → logprob: -11.509256362915039

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011563621461391449
    2. '=' → logprob: -4.511563777923584
    3. ' ' → logprob: -7.636563777923584
    4. '_' → logprob: -10.761563301086426
    5. '  ' → logprob: -12.886563301086426
    6. '_=' → logprob: -13.261563301086426
    7. ' ='' → logprob: -13.636563301086426
    8. ',' → logprob: -14.011563301086426
    9. ' _' → logprob: -14.261563301086426
    10. ' =
' → logprob: -14.386563301086426

Token 28: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.693310022354126
    2. ' i' → logprob: -0.693310022354126
    3. ' ' → logprob: -8.943309783935547
    4. '	i' → logprob: -10.568309783935547
    5. '  ' → logprob: -12.443309783935547
    6. '=i' → logprob: -13.943309783935547
    7. '{i' → logprob: -14.568309783935547
    8. ' ' → logprob: -15.318309783935547
    9. '    ' → logprob: -15.318309783935547
    10. '_i' → logprob: -15.443309783935547

Token 29: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.023105591535568237
    2. 'j' → logprob: -4.273105621337891
    3. ' ' → logprob: -4.773105621337891
    4. '  ' → logprob: -8.64810562133789
    5. ' range' → logprob: -9.64810562133789
    6. ' ' → logprob: -10.64810562133789
    7. '<|end|>' → logprob: -10.64810562133789
    8. '```' → logprob: -10.77310562133789
    9. 'range' → logprob: -10.89810562133789
    10. ' (' → logprob: -11.02310562133789

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0074823955073952675
    2. 'in' → logprob: -5.007482528686523
    3. ' ' → logprob: -7.257482528686523
    4. '=' → logprob: -10.882482528686523
    5. ' =' → logprob: -11.507482528686523
    6. '<|end|>' → logprob: -11.507482528686523
    7. '	in' → logprob: -11.757482528686523
    8. '  ' → logprob: -12.257482528686523
    9. '    ' → logprob: -12.382482528686523
    10. ')' → logprob: -13.632482528686523

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1603243499994278
    2. 'range' → logprob: -1.9103243350982666
    3. ' ' → logprob: -9.535324096679688
    4. ' i' → logprob: -10.910324096679688
    5. 'i' → logprob: -12.285324096679688
    6. '(range' → logprob: -12.660324096679688
    7. '	range' → logprob: -14.035324096679688
    8. '  ' → logprob: -15.035324096679688
    9. ' in' → logprob: -16.035324096679688
    10. ')' → logprob: -16.160324096679688

Token 35: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001704579102806747
    2. '(' → logprob: -6.376704692840576
    3. '(min' → logprob: -13.876704216003418
    4. '(I' → logprob: -14.001704216003418
    5. '(s' → logprob: -15.251704216003418
    6. ' (' → logprob: -15.501704216003418
    7. '(in' → logprob: -17.251705169677734
    8. '(
' → logprob: -17.251705169677734
    9. ' ' → logprob: -17.626705169677734
    10. '(ii' → logprob: -17.876705169677734

Token 36: ',N' (ID: 49539)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001067227916792035
    2. ' +' → logprob: -6.876067161560059
    3. ',' → logprob: -11.251067161560059
    4. '1' → logprob: -11.876067161560059
    5. '+,' → logprob: -12.001067161560059
    6. ' ' → logprob: -12.501067161560059
    7. ' ,' → logprob: -13.126067161560059
    8. '+j' → logprob: -13.376067161560059
    9. '+
' → logprob: -14.751067161560059
    10. '+i' → logprob: -15.126067161560059

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01842617243528366
    2. '+' → logprob: -4.518425941467285
    3. ')' → logprob: -5.393425941467285
    4. ',' → logprob: -7.143425941467285
    5. '):
' → logprob: -7.143425941467285
    6. ':' → logprob: -7.393425941467285
    7. ' ' → logprob: -8.268425941467285
    8. '-' → logprob: -9.268425941467285
    9. '<|end|>' → logprob: -10.143425941467285
    10. '   ' → logprob: -10.268425941467285

Token 38: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.041176751255989075
    2. '       ' → logprob: -4.166176795959473
    3. '<|end|>' → logprob: -4.291176795959473
    4. ' ' → logprob: -5.166176795959473
    5. ' if' → logprob: -6.791176795959473
    6. ':' → logprob: -6.791176795959473
    7. '   ' → logprob: -7.416176795959473
    8. 'if' → logprob: -7.416176795959473
    9. '      
' → logprob: -7.541176795959473
    10. '<|end|>' → logprob: -8.166176795959473

Token 39: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.437007874250412
    2. '<|end|>' → logprob: -1.6870079040527344
    3. ' ' → logprob: -2.1870079040527344
    4. '     ' → logprob: -3.9370079040527344
    5. ' if' → logprob: -4.562007904052734
    6. 'if' (adapté à ' if') → logprob: -4.812007904052734
    7. '<|end|>' → logprob: -5.187007904052734
    8. '      ' → logprob: -5.187007904052734
    9. '   ' → logprob: -5.812007904052734
    10. '  ' → logprob: -7.062007904052734

Token 40: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.004965828265994787
    2. 'A' → logprob: -5.629965782165527
    3. ' ' → logprob: -6.629965782165527
    4. ' ' → logprob: -10.879965782165527
    5. '  ' → logprob: -11.754965782165527
    6. '<|end|>' → logprob: -12.129965782165527
    7. '	A' → logprob: -12.754965782165527
    8. ')' → logprob: -12.879965782165527
    9. '>A' → logprob: -13.629965782165527
    10. '"' → logprob: -13.879965782165527

Token 41: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1032707616686821
    2. '[' → logprob: -2.6032707691192627
    3. '[min' → logprob: -3.7282707691192627
    4. ' [' → logprob: -10.478270530700684
    5. '\[' → logprob: -12.228270530700684
    6. '[i' → logprob: -12.353270530700684
    7. '[m' → logprob: -12.478270530700684
    8. '[js' → logprob: -13.478270530700684
    9. '[max' → logprob: -13.728270530700684
    10. '```' → logprob: -14.103270530700684

Token 42: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03143053874373436
    2. '<' → logprob: -3.53143048286438
    3. '[' → logprob: -6.906430721282959
    4. ' ' → logprob: -7.531430721282959
    5. ')' → logprob: -10.0314302444458
    6. '<int' → logprob: -11.1564302444458
    7. '<|end|>' → logprob: -11.1564302444458
    8. ']' → logprob: -11.2814302444458
    9. '```' → logprob: -11.9064302444458
    10. ')<' → logprob: -12.4064302444458

Token 43: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08955394476652145
    2. '<' → logprob: -2.4645538330078125
    3. '[' → logprob: -7.5895538330078125
    4. ' ' → logprob: -9.464553833007812
    5. '<int' → logprob: -11.964553833007812
    6. '```' → logprob: -12.964553833007812
    7. ' [' → logprob: -13.089553833007812
    8. ' <",' → logprob: -13.339553833007812
    9. '<size' → logprob: -13.589553833007812
    10. '  ' → logprob: -13.589553833007812

Token 44: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3492625951766968
    2. 'A' → logprob: -1.2242625951766968
    3. ' ' → logprob: -7.349262714385986
    4. ' ' → logprob: -9.349262237548828
    5. '	A' → logprob: -10.474262237548828
    6. '_A' → logprob: -10.849262237548828
    7. '  ' → logprob: -11.474262237548828
    8. '=A' → logprob: -11.974262237548828
    9. '```' → logprob: -12.599262237548828
    10. '_' → logprob: -12.974262237548828

Token 45: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.00010127831774298102
    2. '[' → logprob: -9.500101089477539
    3. '[j' → logprob: -11.500101089477539
    4. '[A' → logprob: -12.375101089477539
    5. '[m' → logprob: -12.625101089477539
    6. ' [' → logprob: -12.750101089477539
    7. '[i' → logprob: -13.000101089477539
    8. 'min' → logprob: -13.125101089477539
    9. '[max' → logprob: -14.625101089477539
    10. 'A' → logprob: -15.250101089477539

Token 46: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.816093228830141e-06
    2. ']' → logprob: -13.62500286102295
    3. ' ' → logprob: -14.25000286102295
    4. 'i' → logprob: -14.75000286102295
    5. '_j' → logprob: -15.87500286102295
    6. '])' → logprob: -16.250001907348633
    7. '	j' → logprob: -16.500001907348633
    8. ' j' → logprob: -16.500001907348633
    9. ')' → logprob: -16.875001907348633
    10. '```' → logprob: -17.750001907348633

Token 47: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.01223460491746664
    2. '):' → logprob: -4.637234687805176
    3. ']' → logprob: -6.262234687805176
    4. ':' → logprob: -8.887234687805176
    5. ']):' → logprob: -9.012234687805176
    6. ' ):' → logprob: -9.762234687805176
    7. '"]:' → logprob: -9.762234687805176
    8. ' ]' → logprob: -10.262234687805176
    9. '']:' → logprob: -10.387234687805176
    10. ']:
' → logprob: -10.512234687805176

Token 48: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6259952187538147
    2. '       ' → logprob: -1.12599515914917
    3. '<|end|>' → logprob: -3.12599515914917
    4. ':min' → logprob: -3.75099515914917
    5. ':
' → logprob: -4.12599515914917
    6. ' min' → logprob: -4.37599515914917
    7. 'min' → logprob: -4.62599515914917
    8. '[min' → logprob: -5.00099515914917
    9. '(min' → logprob: -5.00099515914917
    10. '     ' → logprob: -5.12599515914917

Token 49: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.3600864112377167
    2. 'min' (adapté à ' min') → logprob: -1.235086441040039
    3. '[min' → logprob: -5.610086441040039
    4. '<|end|>' → logprob: -6.110086441040039
    5. '
' → logprob: -6.360086441040039
    6. '(min' → logprob: -6.360086441040039
    7. '_min' → logprob: -7.235086441040039
    8. ' 
' → logprob: -7.360086441040039
    9. '=min' → logprob: -8.610086441040039
    10. ' ' → logprob: -8.860086441040039

Token 50: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.2200749754119897e-06
    2. ' j' → logprob: -14.375001907348633
    3. '       ' → logprob: -14.750001907348633
    4. '	j' → logprob: -14.875001907348633
    5. '```' → logprob: -15.000001907348633
    6. ' ' → logprob: -15.375001907348633
    7. '   ' → logprob: -16.625001907348633
    8. '_j' → logprob: -16.750001907348633
    9. '[j' → logprob: -16.750001907348633
    10. '     ' → logprob: -17.125001907348633

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018169373273849487
    2. '=' → logprob: -4.018169403076172
    3. ' ' → logprob: -10.893169403076172
    4. '=j' → logprob: -14.393169403076172
    5. ' =
' → logprob: -15.643169403076172
    6. ' =)' → logprob: -16.768169403076172
    7. ' ' → logprob: -17.143169403076172
    8. '＝' → logprob: -17.268169403076172
    9. ' ==' → logprob: -18.018169403076172
    10. '=i' → logprob: -19.143169403076172

Token 52: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03806880861520767
    2. ' j' → logprob: -3.2880687713623047
    3. '	j' → logprob: -10.788068771362305
    4. ' ' → logprob: -12.038068771362305
    5. ' ' → logprob: -14.538068771362305
    6. '_j' → logprob: -16.663068771362305
    7. '    ' → logprob: -16.663068771362305
    8. '$j' → logprob: -17.038068771362305
    9. '[j' → logprob: -17.413068771362305
    10. '     ' → logprob: -18.038068771362305

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7441648244857788
    2. '  
' → logprob: -1.2441648244857788
    3. ' 
' → logprob: -1.4941648244857788
    4. '   
' → logprob: -5.744164943695068
    5. '    
' → logprob: -5.994164943695068
    6. '\n' → logprob: -6.619164943695068
    7. ' ' → logprob: -6.744164943695068
    8. '[' → logprob: -6.994164943695068
    9. '   ' → logprob: -7.369164943695068
    10. '<|end|>' → logprob: -7.369164943695068

Token 54: '   ' (ID: 271)
  Prédit: '  
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  
' → logprob: -0.5703564286231995
    2. '
' → logprob: -1.3203563690185547
    3. ' 
' → logprob: -2.0703563690185547
    4. ' ' → logprob: -4.445356369018555
    5. '\n' → logprob: -5.070356369018555
    6. '```' → logprob: -5.070356369018555
    7. '    
' → logprob: -5.445356369018555
    8. '   
' → logprob: -5.445356369018555
    9. '   ' → logprob: -5.820356369018555
    10. '[' → logprob: -6.445356369018555

Token 55: ' A' (ID: 355)
  Prédit: '  
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '  
' → logprob: -0.4359896183013916
    2. ' 
' → logprob: -1.5609896183013916
    3. '
' → logprob: -2.4359896183013916
    4. ' ' → logprob: -3.9359896183013916
    5. '   
' → logprob: -4.5609893798828125
    6. '\n' → logprob: -4.5609893798828125
    7. '    
' → logprob: -5.0609893798828125
    8. '<|end|>' → logprob: -6.4359893798828125
    9. '```' → logprob: -6.4359893798828125
    10. '   ' → logprob: -6.6859893798828125

Token 56: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1475715935230255
    2. '[min' → logprob: -2.022571563720703
    3. ',' → logprob: -5.522571563720703
    4. '[i' → logprob: -7.522571563720703
    5. '[j' → logprob: -9.022571563720703
    6. '.swap' → logprob: -9.147571563720703
    7. '```' → logprob: -10.772571563720703
    8. '_swap' → logprob: -11.272571563720703
    9. ',[' → logprob: -11.772571563720703
    10. '[
' → logprob: -11.772571563720703

Token 57: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.13574562966823578
    2. ',' → logprob: -2.3857455253601074
    3. ']' → logprob: -3.3857455253601074
    4. ' ],' → logprob: -7.760745525360107
    5. '],[' → logprob: -8.635746002197266
    6. '>,' → logprob: -8.885746002197266
    7. ''],' → logprob: -9.635746002197266
    8. '"],' → logprob: -9.885746002197266
    9. ' ,' → logprob: -10.135746002197266
    10. ']=' → logprob: -10.260746002197266

Token 58: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07890509814023972
    2. ' A' → logprob: -2.5789051055908203
    3. '<|end|>' → logprob: -11.45390510559082
    4. ' ' → logprob: -12.70390510559082
    5. '	A' → logprob: -13.95390510559082
    6. '  ' → logprob: -14.57890510559082
    7. '```' → logprob: -16.70390510559082
    8. ' ' → logprob: -16.70390510559082
    9. '   ' → logprob: -16.95390510559082
    10. 'a' → logprob: -17.45390510559082

Token 59: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.000206401280593127
    2. '[' → logprob: -8.500205993652344
    3. ',min' → logprob: -13.875205993652344
    4. '```' → logprob: -14.250205993652344
    5. 'min' → logprob: -14.750205993652344
    6. '[i' → logprob: -15.500205993652344
    7. '[max' → logprob: -15.875205993652344
    8. '[j' → logprob: -16.000205993652344
    9. '[
' → logprob: -16.250205993652344
    10. ',' → logprob: -16.625205993652344

Token 60: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.750006675720215
    3. 'min' → logprob: -13.875006675720215
    4. '  ' → logprob: -15.125006675720215
    5. '<|end|>' → logprob: -15.125006675720215
    6. ']' → logprob: -15.250006675720215
    7. 'js' → logprob: -15.375006675720215
    8. '   ' → logprob: -15.375006675720215
    9. ' j' → logprob: -15.375006675720215
    10. '```' → logprob: -15.625006675720215

Token 61: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003063838230445981
    2. ' ]' → logprob: -8.250306129455566
    3. ']=' → logprob: -10.500306129455566
    4. ' ' → logprob: -12.000306129455566
    5. '}' → logprob: -12.250306129455566
    6. ')' → logprob: -13.250306129455566
    7. '],' → logprob: -13.625306129455566
    8. ' =' → logprob: -13.875306129455566
    9. '=' → logprob: -14.250306129455566
    10. '<|end|>' → logprob: -14.375306129455566

Token 62: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014986276626587
    2. ' =' → logprob: -1.7014986276626587
    3. ',' → logprob: -10.201498985290527
    4. ' ' → logprob: -11.201498985290527
    5. '=
' → logprob: -11.201498985290527
    6. '<|end|>' → logprob: -11.701498985290527
    7. ' =
' → logprob: -11.951498985290527
    8. '=

' → logprob: -12.701498985290527
    9. '＝' → logprob: -14.826498985290527
    10. '  ' → logprob: -15.076498985290527

Token 63: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.20158661901950836
    2. 'A' → logprob: -1.7015866041183472
    3. ' ' → logprob: -8.701586723327637
    4. '	A' → logprob: -12.701586723327637
    5. ' ' → logprob: -13.326586723327637
    6. '  ' → logprob: -14.201586723327637
    7. '<|end|>' → logprob: -14.701586723327637
    8. '>A' → logprob: -15.451586723327637
    9. '  
' → logprob: -15.951586723327637
    10. '(A' → logprob: -16.20158576965332

Token 64: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.0013161895330995321
    2. '[j' → logprob: -6.751316070556641
    3. '[i' → logprob: -9.37631607055664
    4. '[' → logprob: -10.12631607055664
    5. 'min' → logprob: -11.62631607055664
    6. '[m' → logprob: -12.75131607055664
    7. ',min' → logprob: -12.75131607055664
    8. ' ' → logprob: -13.62631607055664
    9. ' min' → logprob: -13.87631607055664
    10. ',' → logprob: -14.00131607055664

Token 65: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0206720617134124e-05
    2. ']' → logprob: -12.50001049041748
    3. ' ' → logprob: -12.62501049041748
    4. ' j' → logprob: -13.87501049041748
    5. '	j' → logprob: -14.62501049041748
    6. '[j' → logprob: -14.75001049041748
    7. '```' → logprob: -15.37501049041748
    8. '  ' → logprob: -15.37501049041748
    9. '   ' → logprob: -15.62501049041748
    10. '_j' → logprob: -15.87501049041748

Token 66: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1587139368057251
    2. '],' → logprob: -2.4087138175964355
    3. ',' → logprob: -3.0337138175964355
    4. ' ]' → logprob: -5.2837138175964355
    5. ' ' → logprob: -6.2837138175964355
    6. ' ],' → logprob: -7.2837138175964355
    7. ' ,' → logprob: -7.2837138175964355
    8. '<|end|>' → logprob: -8.658714294433594
    9. ',i' → logprob: -9.408714294433594
    10. ',A' → logprob: -11.033714294433594

Token 67: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3868860900402069
    2. ' A' → logprob: -1.1368861198425293
    3. ' ' → logprob: -11.136885643005371
    4. '	A' → logprob: -14.761885643005371
    5. ' ' → logprob: -16.386886596679688
    6. '  ' → logprob: -17.261886596679688
    7. '   ' → logprob: -18.136886596679688
    8. '```' → logprob: -18.136886596679688
    9. '_A' → logprob: -18.261886596679688
    10. '`' → logprob: -18.511886596679688

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004341817926615477
    2. '[' → logprob: -5.5043416023254395
    3. '[j' → logprob: -8.254342079162598
    4. '[
' → logprob: -13.629342079162598
    5. '```' → logprob: -13.879342079162598
    6. ' [' → logprob: -14.754342079162598
    7. '\[' → logprob: -16.00434112548828
    8. 'i' → logprob: -16.00434112548828
    9. ' ' → logprob: -16.25434112548828
    10. '[I' → logprob: -16.62934112548828

Token 69: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007118130102753639
    2. ')
' → logprob: -5.007118225097656
    3. ']' → logprob: -7.882118225097656
    4. '}' → logprob: -11.882118225097656
    5. '<|end|>' → logprob: -12.007118225097656
    6. ')
' → logprob: -12.507118225097656
    7. ' )' → logprob: -13.132118225097656
    8. ']
' → logprob: -13.507118225097656
    9. '```' → logprob: -13.632118225097656
    10. ' ' → logprob: -13.632118225097656

Token 70: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8172792792320251
    2. '  
' → logprob: -0.8172792792320251
    3. ' 
' → logprob: -3.19227933883667
    4. '   ' → logprob: -4.44227933883667
    5. '\n' → logprob: -4.44227933883667
    6. ' ' → logprob: -4.44227933883667
    7. '	sw' → logprob: -4.56727933883667
    8. '```' → logprob: -4.69227933883667
    9. '    
' → logprob: -4.94227933883667
    10. '<|end|>' → logprob: -5.69227933883667

Token 71: ' if' (ID: 538)
  Prédit: ' sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sw' → logprob: -0.6960837841033936
    2. '   ' → logprob: -1.4460837841033936
    3. 'sw' → logprob: -2.0710837841033936
    4. ' ' → logprob: -2.1960837841033936
    5. '	sw' → logprob: -4.071084022521973
    6. ' if' → logprob: -4.696084022521973
    7. 'if' (adapté à ' if') → logprob: -6.821084022521973
    8. '  
' → logprob: -8.196084022521973
    9. '  ' → logprob: -8.446084022521973
    10. '     ' → logprob: -8.696084022521973

Token 72: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7890260219573975
    2. ' min' → logprob: -0.9140260219573975
    3. ' A' → logprob: -2.2890260219573975
    4. 'min' → logprob: -3.9140260219573975
    5. 'i' → logprob: -4.414026260375977
    6. 'A' → logprob: -4.914026260375977
    7. ' ' → logprob: -5.664026260375977
    8. ' sw' → logprob: -8.289026260375977
    9. '  ' → logprob: -9.664026260375977
    10. ' j' → logprob: -10.039026260375977

Token 73: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0621134489774704
    2. '!=' → logprob: -2.8121135234832764
    3. ' ' → logprob: -8.937113761901855
    4. '<|end|>' → logprob: -12.562113761901855
    5. ' ' → logprob: -13.187113761901855
    6. ' not' → logprob: -13.312113761901855
    7. ' <' → logprob: -13.562113761901855
    8. '<' → logprob: -13.812113761901855
    9. '  ' → logprob: -13.937113761901855
    10. '!=(' → logprob: -14.312113761901855

Token 74: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.001754906727001071
    2. ' min' → logprob: -6.3767547607421875
    3. ' ' → logprob: -10.376754760742188
    4. '<|end|>' → logprob: -11.751754760742188
    5. '     ' → logprob: -12.376754760742188
    6. '	min' → logprob: -12.501754760742188
    7. '   ' → logprob: -12.876754760742188
    8. '  ' → logprob: -13.251754760742188
    9. '[min' → logprob: -14.376754760742188
    10. '    ' → logprob: -14.501754760742188

Token 75: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -13.375004768371582
    3. '<|end|>' → logprob: -13.500004768371582
    4. ' j' → logprob: -14.375004768371582
    5. 'min' → logprob: -15.125004768371582
    6. '```' → logprob: -15.250004768371582
    7. '	j' → logprob: -15.500004768371582
    8. '  ' → logprob: -15.750004768371582
    9. '   ' → logprob: -15.875004768371582
    10. '[j' → logprob: -16.7500057220459

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007070659194141626
    2. ':
' → logprob: -5.007070541381836
    3. ' :' → logprob: -8.257070541381836
    4. '+' → logprob: -10.882070541381836
    5. ' :
' → logprob: -10.882070541381836
    6. ' ' → logprob: -11.382070541381836
    7. '+:' → logprob: -11.382070541381836
    8. '     ' → logprob: -11.507070541381836
    9. '<|end|>' → logprob: -11.757070541381836
    10. '   ' → logprob: -12.882070541381836

Token 77: '     ' (ID: 530)
  Prédit: ' sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sw' → logprob: -0.9938051700592041
    2. '     ' → logprob: -1.118805170059204
    3. '       ' → logprob: -1.368805170059204
    4. '   ' → logprob: -4.118804931640625
    5. '	sw' → logprob: -4.743804931640625
    6. '
' → logprob: -4.993804931640625
    7. ' 
' → logprob: -5.743804931640625
    8. '    ' → logprob: -5.743804931640625
    9. '<|end|>' → logprob: -5.868804931640625
    10. 'sw' → logprob: -6.118804931640625

Token 78: ' sw' (ID: 2766)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' (adapté à ' sw') → logprob: -0.21851731836795807
    2. ' sw' → logprob: -1.8435173034667969
    3. '   ' → logprob: -3.718517303466797
    4. '     ' → logprob: -4.718517303466797
    5. '	sw' → logprob: -6.093517303466797
    6. '       ' → logprob: -6.468517303466797
    7. ' ' → logprob: -7.218517303466797
    8. '  ' → logprob: -9.843517303466797
    9. '_sw' → logprob: -9.968517303466797
    10. '    ' → logprob: -10.093517303466797

Token 79: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4351660907268524
    2. '+=' → logprob: -1.1851661205291748
    3. '+' → logprob: -3.060166120529175
    4. ' +' → logprob: -8.935166358947754
    5. ' ' → logprob: -9.185166358947754
    6. '=' → logprob: -11.560166358947754
    7. '++' → logprob: -12.060166358947754
    8. '<|end|>' → logprob: -12.685166358947754
    9. '+='' → logprob: -12.810166358947754
    10. ']+=' → logprob: -12.810166358947754

Token 80: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.250431060791016
    4. '  ' → logprob: -20.250431060791016
    5. '```' → logprob: -20.750431060791016
    6. '１' → logprob: -20.875431060791016
    7. ' ' → logprob: -21.125431060791016
    8. '+' → logprob: -21.125431060791016
    9. '<|end|>' → logprob: -21.250431060791016
    10. '0' → logprob: -21.375431060791016

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '  ' → logprob: -19.875003814697266
    4. '   ' → logprob: -20.125003814697266
    5. '<|end|>' → logprob: -20.500003814697266
    6. '     ' → logprob: -21.500003814697266
    7. '１' → logprob: -21.750003814697266
    8. '```' → logprob: -21.875003814697266
    9. '+' → logprob: -22.500003814697266
    10. '    ' → logprob: -23.000003814697266

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.22239351272583
    2. ' ' → logprob: -1.34739351272583
    3. '<|end|>' → logprob: -1.47239351272583
    4. '  
' → logprob: -1.84739351272583
    5. '\n' → logprob: -3.22239351272583
    6. '\' → logprob: -5.34739351272583
    7. ' 
' → logprob: -5.59739351272583
    8. '  ' → logprob: -5.84739351272583
    9. '<|end|>' → logprob: -6.59739351272583
    10. '```' → logprob: -6.84739351272583

Token 83: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5985488891601562
    2. '<|end|>' → logprob: -1.5985488891601562
    3. '
' → logprob: -2.0985488891601562
    4. '  
' → logprob: -2.2235488891601562
    5. '\n' → logprob: -5.473548889160156
    6. ' return' → logprob: -5.598548889160156
    7. ' 
' → logprob: -6.098548889160156
    8. '  ' → logprob: -6.223548889160156
    9. 'return' → logprob: -6.473548889160156
    10. '<|end|>' → logprob: -7.098548889160156

Token 84: ' print' (ID: 2123)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.034726645797491074
    2. ' return' → logprob: -4.159726619720459
    3. 'return' → logprob: -4.409726619720459
    4. '  ' → logprob: -6.284726619720459
    5. '<|end|>' → logprob: -6.284726619720459
    6. '  
' → logprob: -6.909726619720459
    7. '   ' → logprob: -7.034726619720459
    8. 'r' → logprob: -8.284727096557617
    9. '	return' → logprob: -9.159727096557617
    10. '```' → logprob: -9.409727096557617

Token 85: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012745194835588336
    2. '(sw' → logprob: -7.376274585723877
    3. '(A' → logprob: -7.501274585723877
    4. '('' → logprob: -10.376274108886719
    5. '("' → logprob: -10.876274108886719
    6. '()' → logprob: -11.501274108886719
    7. '(len' → logprob: -11.626274108886719
    8. '(s' → logprob: -11.876274108886719
    9. '((' → logprob: -12.251274108886719
    10. '(
' → logprob: -12.376274108886719

Token 86: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.001972288591787219
    2. ' A' → logprob: -6.251972198486328
    3. '(A' → logprob: -10.126972198486328
    4. ')' → logprob: -13.126972198486328
    5. '[A' → logprob: -13.626972198486328
    6. ' ' → logprob: -14.876972198486328
    7. '	A' → logprob: -16.876972198486328
    8. '(' → logprob: -17.376972198486328
    9. '_A' → logprob: -18.376972198486328
    10. ' (' → logprob: -18.626972198486328

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. ' )' → logprob: -12.250007629394531
    3. ',' → logprob: -13.250007629394531
    4. ' ' → logprob: -15.375007629394531
    5. ')
' → logprob: -15.375007629394531
    6. '))' → logprob: -15.875007629394531
    7. ')#' → logprob: -15.875007629394531
    8. ')`' → logprob: -16.12500762939453
    9. ',)' → logprob: -16.50000762939453
    10. '),' → logprob: -17.12500762939453

Token 88: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3134901821613312
    2. '<|end|>' → logprob: -1.4384901523590088
    3. '\n' → logprob: -4.688490390777588
    4. '  
' → logprob: -4.813490390777588
    5. ' ' → logprob: -4.813490390777588
    6. '' → logprob: -6.438490390777588
    7. ' 
' → logprob: -6.813490390777588
    8. '```' → logprob: -7.063490390777588
    9. '<|end|>' → logprob: -7.063490390777588
    10. '#' → logprob: -7.563490390777588

Token 89: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: '(sw' (ID: 132758)
  Prédit: '(sw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sw' → logprob: -0.07933223247528076
    2. '(' → logprob: -2.5793323516845703
    3. '(s' → logprob: -7.95433235168457
    4. '()' → logprob: -9.82933235168457
    5. ' ' → logprob: -11.82933235168457
    6. '(
' → logprob: -11.95433235168457
    7. '("("' → logprob: -12.32933235168457
    8. 'sw' → logprob: -12.45433235168457
    9. '('' → logprob: -12.57933235168457
    10. '	sw' → logprob: -12.82933235168457

Token 91: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')
' → logprob: -12.875005722045898
    3. ' )' → logprob: -12.875005722045898
    4. ' ' → logprob: -17.3750057220459
    5. '')' → logprob: -18.3750057220459
    6. ')

' → logprob: -18.5000057220459
    7. ')#' → logprob: -18.6250057220459
    8. ')`' → logprob: -18.7500057220459
    9. '))' → logprob: -19.0000057220459
    10. '),' → logprob: -19.7500057220459

Token 92: 'N' (ID: 45)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23446869850158691
    2. '#' → logprob: -2.984468698501587
    3. '<|end|>' → logprob: -3.109468698501587
    4. '\n' → logprob: -3.234468698501587
    5. '' → logprob: -3.734468698501587
    6. ' ' → logprob: -3.859468698501587
    7. '\' → logprob: -4.609468460083008
    8. '```' → logprob: -5.484468460083008
    9. 'n' → logprob: -5.609468460083008
    10. ')' → logprob: -5.984468460083008

Token 93: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.773780345916748
    2. '=' → logprob: -0.898780345916748
    3. ' =' → logprob: -2.398780345916748
    4. '<|end|>' → logprob: -3.398780345916748
    5. '+' → logprob: -6.148780345916748
    6. ')' → logprob: -6.273780345916748
    7. ',' → logprob: -6.648780345916748
    8. '<|end|>' → logprob: -7.523780345916748
    9. '>' → logprob: -7.898780345916748
    10. '  ' → logprob: -8.648780822753906

Token 94: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07840880006551743
    2. 'int' → logprob: -2.828408718109131
    3. ' ' → logprob: -4.328408718109131
    4. '5' → logprob: -6.203408718109131
    5. '10' → logprob: -6.828408718109131
    6. '6' → logprob: -12.828409194946289
    7. '[int' → logprob: -13.203409194946289
    8. '7' → logprob: -13.453409194946289
    9. '  ' → logprob: -13.453409194946289
    10. '20' → logprob: -13.578409194946289

Token 95: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020843621343374252
    2. '(input' → logprob: -3.895843505859375
    3. '()' → logprob: -8.645843505859375
    4. 'input' → logprob: -9.895843505859375
    5. '('' → logprob: -10.270843505859375
    6. '<|end|>' → logprob: -11.395843505859375
    7. ' (' → logprob: -11.520843505859375
    8. '(
' → logprob: -12.145843505859375
    9. ' input' → logprob: -13.145843505859375
    10. '("' → logprob: -13.270843505859375

Token 96: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3143407106399536
    2. '()' → logprob: -1.3143407106399536
    3. '(' → logprob: -6.939340591430664
    4. ')' → logprob: -9.939340591430664
    5. '();)' → logprob: -11.189340591430664
    6. '()
' → logprob: -11.689340591430664
    7. ' ())' → logprob: -12.189340591430664
    8. '()>' → logprob: -12.189340591430664
    9. '().' → logprob: -12.564340591430664
    10. '());' → logprob: -12.814340591430664

Token 97: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00046832661610096693
    2. ' A' → logprob: -8.125468254089355
    3. '<|end|>' → logprob: -8.750468254089355
    4. ' ' → logprob: -12.750468254089355
    5. ' 
' → logprob: -13.000468254089355
    6. 'a' → logprob: -13.000468254089355
    7. '```' → logprob: -13.125468254089355
    8. 's' → logprob: -13.625468254089355
    9. '<|end|>' → logprob: -13.875468254089355
    10. 'N' → logprob: -14.500468254089355

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16030648350715637
    2. '=' → logprob: -1.910306453704834
    3. '[' → logprob: -10.535306930541992
    4. ' ' → logprob: -11.035306930541992
    5. '.' → logprob: -11.410306930541992
    6. '=[]' → logprob: -11.660306930541992
    7. '[:]' → logprob: -12.160306930541992
    8. '(' → logprob: -12.410306930541992
    9. ',' → logprob: -12.785306930541992
    10. ' =[' → logprob: -13.410306930541992

Token 99: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.48968204855918884
    2. ' list' → logprob: -0.9896820783615112
    3. '[list' → logprob: -4.239682197570801
    4. '[' → logprob: -7.489682197570801
    5. ' [' → logprob: -7.614682197570801
    6. '[input' → logprob: -12.1146821975708
    7. '[]' → logprob: -12.2396821975708
    8. '=list' → logprob: -12.9896821975708
    9. '[int' → logprob: -12.9896821975708
    10. '[List' → logprob: -13.2396821975708

Token 100: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.35288500785827637
    2. '(' → logprob: -1.2278850078582764
    3. '(int' → logprob: -6.1028852462768555
    4. '(input' → logprob: -6.2278852462768555
    5. '()' → logprob: -9.227885246276855
    6. '(eval' → logprob: -9.977885246276855
    7. '(list' → logprob: -10.852885246276855
    8. '(range' → logprob: -11.227885246276855
    9. '(

' → logprob: -11.477885246276855
    10. '(
' → logprob: -11.852885246276855

Token 101: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05523158609867096
    2. '(' → logprob: -2.9302315711975098
    3. '(
' → logprob: -9.180232048034668
    4. '(input' → logprob: -9.180232048034668
    5. '<|end|>' → logprob: -9.555232048034668
    6. '(str' → logprob: -10.930232048034668
    7. 'int' → logprob: -11.305232048034668
    8. '<int' → logprob: -11.430232048034668
    9. ')' → logprob: -11.930232048034668
    10. '[int' → logprob: -12.180232048034668

Token 102: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05412052199244499
    2. ',input' → logprob: -3.0541205406188965
    3. '(' → logprob: -5.6791205406188965
    4. 'input' → logprob: -6.4291205406188965
    5. ',' → logprob: -8.054120063781738
    6. ' ' → logprob: -9.929120063781738
    7. ' input' → logprob: -9.929120063781738
    8. ' (' → logprob: -10.304120063781738
    9. '=input' → logprob: -11.429120063781738
    10. ' ,' → logprob: -11.554120063781738

Token 103: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009119403548538685
    2. ' input' → logprob: -7.000911712646484
    3. '(input' → logprob: -15.750911712646484
    4. ' ' → logprob: -15.875911712646484
    5. ',input' → logprob: -16.375911712646484
    6. '=input' → logprob: -18.250911712646484
    7. '<input' → logprob: -18.500911712646484
    8. '	input' → logprob: -19.500911712646484
    9. 'list' → logprob: -20.375911712646484
    10. 'range' → logprob: -20.500911712646484

Token 104: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007249409682117403
    2. '()' → logprob: -7.250724792480469
    3. '(' → logprob: -11.375724792480469
    4. ' ().' → logprob: -12.750724792480469
    5. '()
' → logprob: -15.000724792480469
    6. ' ' → logprob: -16.12572479248047
    7. '()

' → logprob: -17.12572479248047
    8. '.split' → logprob: -17.12572479248047
    9. 'split' → logprob: -17.62572479248047
    10. '())' → logprob: -17.75072479248047

Token 105: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001601539261173457
    2. 'strip' → logprob: -8.750160217285156
    3. 'rstrip' → logprob: -14.000160217285156
    4. '(split' → logprob: -14.250160217285156
    5. ' split' → logprob: -16.000160217285156
    6. 'spl' → logprob: -17.000160217285156
    7. '.split' → logprob: -19.625160217285156
    8. 'read' → logprob: -20.250160217285156
    9. ')' → logprob: -20.625160217285156
    10. 's' → logprob: -20.750160217285156

Token 106: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.017892135307192802
    2. '()' → logprob: -5.017892360687256
    3. '())' → logprob: -5.017892360687256
    4. '))' → logprob: -5.517892360687256
    5. '(' → logprob: -7.892892360687256
    6. '()))
' → logprob: -9.517891883850098
    7. ')' → logprob: -10.892891883850098
    8. '()));' → logprob: -12.267891883850098
    9. '(),' → logprob: -12.392891883850098
    10. '()))

' → logprob: -13.517891883850098

Token 107: 'selection' (ID: 51411)
  Prédit: 'selection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selection' → logprob: -2.3676733690081164e-05
    2. '
' → logprob: -10.75002384185791
    3. ' selection' → logprob: -13.87502384185791
    4. 'select' → logprob: -14.37502384185791
    5. '(selection' → logprob: -15.25002384185791
    6. 'selected' → logprob: -16.000022888183594
    7. '_selection' → logprob: -16.750022888183594
    8. '  
' → logprob: -17.125022888183594
    9. ' 
' → logprob: -17.375022888183594
    10. '<|end|>' → logprob: -17.625022888183594

Token 108: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -8.554343366995454e-05
    2. '_' → logprob: -9.500085830688477
    3. '_sorted' → logprob: -12.000085830688477
    4. '_select' → logprob: -13.750085830688477
    5. '_s' → logprob: -13.875085830688477
    6. ' _' → logprob: -14.500085830688477
    7. '_selection' → logprob: -14.625085830688477
    8. '_SORT' → logprob: -15.500085830688477
    9. '_sel' → logprob: -15.750085830688477
    10. '_swap' → logprob: -15.750085830688477

Token 109: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5786803960800171
    2. '(A' → logprob: -0.8286803960800171
    3. '(N' → logprob: -5.953680515289307
    4. '(
' → logprob: -9.453680038452148
    5. '((' → logprob: -10.828680038452148
    6. ' (' → logprob: -11.203680038452148
    7. '(

' → logprob: -11.953680038452148
    8. '(`' → logprob: -12.078680038452148
    9. '```' → logprob: -12.953680038452148
    10. '("("' → logprob: -13.328680038452148

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006609502714127302
    2. ',N' → logprob: -5.1316094398498535
    3. '(N' → logprob: -7.8816094398498535
    4. ' ,' → logprob: -8.631609916687012
    5. '(' → logprob: -9.256609916687012
    6. ' ' → logprob: -11.006609916687012
    7. ')' → logprob: -11.506609916687012
    8. ',n' → logprob: -13.881609916687012
    9. 'N' → logprob: -14.256609916687012
    10. ' (' → logprob: -15.756609916687012

Token 111: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004306692280806601
    2. ' N' → logprob: -7.750430583953857
    3. ' ' → logprob: -18.250431060791016
    4. ')' → logprob: -19.875431060791016
    5. '	N' → logprob: -21.375431060791016
    6. '(N' → logprob: -22.625431060791016
    7. '<N' → logprob: -23.125431060791016
    8. ',N' → logprob: -23.125431060791016
    9. '>N' → logprob: -23.125431060791016
    10. 'n' → logprob: -23.250431060791016

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.625000953674316
    3. '))' → logprob: -15.875000953674316
    4. ')
' → logprob: -16.0
    5. ')`' → logprob: -16.25
    6. ')**' → logprob: -18.5
    7. '(' → logprob: -19.0
    8. ')}' → logprob: -19.375
    9. ')#' → logprob: -19.625
    10. '),' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 110
Tokens correctement prédits (1ère position, stricte): 50
Tokens correctement prédits (1ère position, avec adaptation): 51
Tokens correctement prédits (top 10): 93
Précision stricte (1ère position): 45.45%
Précision adaptée (1ère position): 46.36%
Précision (top 10): 84.55%
================================================================================
