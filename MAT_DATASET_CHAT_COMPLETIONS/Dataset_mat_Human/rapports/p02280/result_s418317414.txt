================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/env python

import sys

class Node(object):
    def __init__(self):
        # init node as a single leaf node.
        self.parent = -1
        self.type = 'leaf'
        self.depth = 0
        self.children = []
        self.degree = 0
        self.sibling = -1
        self.height = 0

def get_depth(v, depth=0):
    if not v.children:
        # print('rt', v.parent, v.depth, depth)
        v.depth = depth
        return v.depth
    v.depth = depth
    # print('out', v.parent, v.depth, v.children, depth)
    if v.children[0] != -1:
        get_depth(node_list[v.children[0]], depth + 1)

    if v.children[1] != -1:
        get_depth(node_list[v.children[1]], depth + 1)
    return v.depth

def get_height(v):
    h1, h2 = 0, 0

    # leaf's height is 0, children: []
    if not v.children:
        return 0

    if v.children[0] != -1:
        h1 = get_height(node_list[v.children[0]]) + 1

    if v.children[1] != -1:
        h2 = get_height(node_list[v.children[1]]) + 1

    v.height = max(h1, h2)
    return v.height

def generate_tree(_array):
    # add info of each node of a ordered tree
    for each in _array:
        idx, *children = [int(x) for x in each]
        # assert len(children) == 2
        if children != [-1, -1]:
            node_list[idx].type = 'internal node'
            node_list[idx].children = children
            node_list[idx].degree = 1 if (-1 in children) else 2
        else:
            # node is leaf as default, children: []
            continue

        for child_idx in children:
            # non-existent node: no parent or sibling
            if child_idx == -1:
                continue
            node_list[child_idx].parent = idx
            node_list[child_idx].sibling = sum(children) - child_idx

    root_idx = [i for i, x in enumerate(node_list) if x.parent == -1][0]
    node_list[root_idx].type = 'root'

    # add node depth info -- using DFS
    get_depth(node_list[root_idx])
    get_height(node_list[root_idx])

    return node_list

def print_result(_node):
    print('parent = ' + str(_node.parent) + ',', end=' ')
    print('sibling = ' + str(_node.sibling) + ',', end=' ')
    print('degree = ' + str(_node.degree) + ',', end=' ')
    print('depth = ' + str(_node.depth) + ',', end=' ')
    print('height = ' + str(_node.height) + ',', end=' ')
    print(_node.type)
    return None

if __name__ == '__main__':
    _input = sys.stdin.readlines()
    array_length = int(_input[0])
    array = list(map(lambda x: x.split(), _input[1:]))
    # assert len(array) == array_length

    node_list = [Node() for _ in range(array_length)]
    ans = generate_tree(_array=array)
    for key, node in enumerate(ans):
        print('node ' + str(key) + ':', end=' ')
        print_result(_node=node)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4815128743648529
    2. '/env' → logprob: -1.2315129041671753
    3. '/python' → logprob: -2.4815127849578857
    4. '/bash' → logprob: -5.231513023376465
    5. '/bin' → logprob: -6.731513023376465
    6. 'python' → logprob: -9.356513023376465
    7. '#!/' → logprob: -11.106513023376465
    8. 'env' → logprob: -11.481513023376465
    9. '/b' → logprob: -11.481513023376465
    10. '/per' → logprob: -12.481513023376465

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.38691186904907227
    2. ' python' → logprob: -1.1369118690490723
    3. 'bash' → logprob: -10.636911392211914
    4. ' bash' → logprob: -11.261911392211914
    5. '/python' → logprob: -13.886911392211914
    6. 'perl' → logprob: -14.136911392211914
    7. 'node' → logprob: -14.511911392211914
    8. 'py' → logprob: -15.011911392211914
    9. 'ruby' → logprob: -15.136911392211914
    10. ' node' → logprob: -15.386911392211914

Token 5: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.16446582973003387
    2. '\' → logprob: -2.28946590423584
    3. '```' → logprob: -3.66446590423584
    4. 'import' → logprob: -4.16446590423584
    5. '  
' → logprob: -5.91446590423584
    6. '3' → logprob: -6.03946590423584
    7. ' 
' → logprob: -7.16446590423584
    8. '\r' → logprob: -7.53946590423584
    9. '#' → logprob: -7.53946590423584
    10. '' → logprob: -7.66446590423584

Token 6: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.011567160487174988
    2. '```' → logprob: -5.261567115783691
    3. '-' → logprob: -6.136567115783691
    4. '#' → logprob: -6.386567115783691
    5. '-import' → logprob: -7.261567115783691
    6. '\n' → logprob: -7.386567115783691
    7. 'python' → logprob: -8.261567115783691
    8. 'im' → logprob: -8.386567115783691
    9. ' import' → logprob: -9.011567115783691
    10. 'print' → logprob: -9.136567115783691

Token 7: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.011067868210375309
    2. ' ' → logprob: -5.011067867279053
    3. ' sys' → logprob: -5.761067867279053
    4. ' requests' → logprob: -8.261068344116211
    5. ' space' → logprob: -8.761068344116211
    6. ' json' → logprob: -9.136068344116211
    7. ' argparse' → logprob: -9.136068344116211
    8. '<|end|>' → logprob: -9.136068344116211
    9. ' pandas' → logprob: -9.261068344116211
    10. ' flask' → logprob: -10.261068344116211

Token 8: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 9: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6824482083320618
    2. 'print' → logprob: -1.682448148727417
    3. 'import' → logprob: -1.682448148727417
    4. 'p' → logprob: -2.807448148727417
    5. '#' → logprob: -4.182448387145996
    6. 'if' → logprob: -5.057448387145996
    7. 'i' → logprob: -5.307448387145996
    8. ' ' → logprob: -5.307448387145996
    9. '<|end|>' → logprob: -5.307448387145996
    10. '-' → logprob: -5.807448387145996

Token 10: ' Node' (ID: 10882)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16729594767093658
    2. ' My' → logprob: -2.1672959327697754
    3. ' Space' → logprob: -3.5422959327697754
    4. ' Parser' → logprob: -5.917295932769775
    5. ' User' → logprob: -6.542295932769775
    6. ' Basic' → logprob: -7.167295932769775
    7. ' Hello' → logprob: -7.292295932769775
    8. ' ' → logprob: -7.667295932769775
    9. ' A' → logprob: -7.792295932769775
    10. ' System' → logprob: -8.042296409606934

Token 11: '(object' (ID: 9750)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015097891446202993
    2. '(' → logprob: -9.625150680541992
    3. ' :' → logprob: -10.000150680541992
    4. '():' → logprob: -11.000150680541992
    5. ':**' → logprob: -12.000150680541992
    6. ':
' → logprob: -12.125150680541992
    7. '):' → logprob: -12.250150680541992
    8. '<|end|>' → logprob: -12.625150680541992
    9. '(:' → logprob: -14.125150680541992
    10. '```' → logprob: -14.250150680541992

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006100255064666271
    2. ')' → logprob: -5.256100177764893
    3. ':' → logprob: -7.131100177764893
    4. ' ):' → logprob: -9.75610065460205
    5. '):
' → logprob: -12.00610065460205
    6. ' )' → logprob: -14.00610065460205
    7. ' :' → logprob: -15.50610065460205
    8. ',' → logprob: -15.50610065460205
    9. '():' → logprob: -15.63110065460205
    10. '):

' → logprob: -16.006099700927734

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5203382968902588
    2. ' :' → logprob: -1.6453382968902588
    3. '   ' → logprob: -1.8953382968902588
    4. '    ' → logprob: -3.645338296890259
    5. ' ' → logprob: -3.770338296890259
    6. '<|end|>' → logprob: -5.52033805847168
    7. ' def' → logprob: -6.14533805847168
    8. '    
' → logprob: -6.52033805847168
    9. ' :
' → logprob: -6.64533805847168
    10. '  ' → logprob: -6.89533805847168

Token 14: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.25533655285835266
    2. 'def' (adapté à ' def') → logprob: -1.5053365230560303
    3. '   ' → logprob: -6.130336761474609
    4. '    ' → logprob: -7.130336761474609
    5. ' pass' → logprob: -8.75533676147461
    6. ' ' → logprob: -9.25533676147461
    7. ' de' → logprob: -9.75533676147461
    8. 'class' → logprob: -10.13033676147461
    9. ' __' → logprob: -10.38033676147461
    10. 'pass' → logprob: -11.25533676147461

Token 15: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20628146827220917
    2. 'init' → logprob: -1.8312814235687256
    3. ' init' → logprob: -4.206281661987305
    4. 'nit' → logprob: -4.956281661987305
    5. '_init' → logprob: -6.331281661987305
    6. '__' → logprob: -7.081281661987305
    7. ' def' → logprob: -7.331281661987305
    8. 'n' → logprob: -7.456281661987305
    9. ' _' → logprob: -8.456281661987305
    10. 'def' → logprob: -9.456281661987305

Token 16: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.125
    3. 'ini' → logprob: -17.625
    4. 'in' → logprob: -20.0
    5. 'int' → logprob: -20.0
    6. 'inite' → logprob: -20.875
    7. '	init' → logprob: -21.375
    8. 'innit' → logprob: -21.375
    9. '_init' → logprob: -21.875
    10. 'inti' → logprob: -22.125

Token 17: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1430746465921402
    2. '__' → logprob: -2.0180747509002686
    3. '__((' → logprob: -8.518074989318848
    4. '__(
' → logprob: -9.018074989318848
    5. '__('' → logprob: -9.893074989318848
    6. '__(*' → logprob: -11.893074989318848
    7. '___' → logprob: -12.268074989318848
    8. '__("' → logprob: -12.393074989318848
    9. '_' → logprob: -12.518074989318848
    10. '(' → logprob: -12.893074989318848

Token 18: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003357006062287837
    2. ' self' → logprob: -8.000335693359375
    3. ')' → logprob: -16.375335693359375
    4. ' ' → logprob: -16.875335693359375
    5. ',self' → logprob: -17.000335693359375
    6. '	self' → logprob: -17.125335693359375
    7. '(self' → logprob: -17.125335693359375
    8. 'data' → logprob: -18.375335693359375
    9. ',' → logprob: -18.375335693359375
    10. '   ' → logprob: -18.625335693359375

Token 19: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029063262045383453
    2. ' ,' → logprob: -3.6540632247924805
    3. 'self' → logprob: -6.7790632247924805
    4. ')' → logprob: -7.2790632247924805
    5. ' )' → logprob: -8.15406322479248
    6. ',self' → logprob: -8.27906322479248
    7. '<|end|>' → logprob: -9.02906322479248
    8. ' self' → logprob: -9.90406322479248
    9. '(self' → logprob: -10.40406322479248
    10. ' ' → logprob: -10.40406322479248

Token 20: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15730208158493042
    2. 'data' → logprob: -2.532302141189575
    3. ' self' → logprob: -3.157302141189575
    4. ' data' → logprob: -4.282301902770996
    5. '       ' → logprob: -5.657301902770996
    6. 'value' → logprob: -6.032301902770996
    7. '    ' → logprob: -6.282301902770996
    8. ' value' → logprob: -7.032301902770996
    9. '        ' → logprob: -7.782301902770996
    10. '   ' → logprob: -9.032301902770996

Token 21: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.21481873095035553
    2. '       ' → logprob: -1.8398187160491943
    3. ' self' → logprob: -3.9648187160491943
    4. ' pass' → logprob: -4.839818954467773
    5. 'pass' → logprob: -5.339818954467773
    6. '   ' → logprob: -6.339818954467773
    7. '    ' → logprob: -7.714818954467773
    8. '        ' → logprob: -8.589818954467773
    9. ' ' → logprob: -9.464818954467773
    10. '     ' → logprob: -9.714818954467773

Token 22: ' init' (ID: 6327)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5670095086097717
    2. ' self' → logprob: -0.9420095086097717
    3. ' pass' → logprob: -3.942009449005127
    4. '    ' → logprob: -5.317009449005127
    5. ' children' → logprob: -5.817009449005127
    6. 'pass' → logprob: -5.942009449005127
    7. 'children' → logprob: -6.067009449005127
    8. 'data' → logprob: -6.192009449005127
    9. 'value' → logprob: -6.317009449005127
    10. '        ' → logprob: -6.317009449005127

Token 23: ' node' (ID: 4596)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7177672982215881
    2. '       ' → logprob: -1.8427672386169434
    3. 'self' → logprob: -2.2177672386169434
    4. '    ' → logprob: -2.7177672386169434
    5. '  ' → logprob: -3.4677672386169434
    6. ' self' → logprob: -3.8427672386169434
    7. ' ' → logprob: -3.8427672386169434
    8. '_' → logprob: -4.092767238616943
    9. ':' → logprob: -4.342767238616943
    10. '(' → logprob: -4.842767238616943

Token 24: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0232397317886353
    2. '    ' → logprob: -1.5232397317886353
    3. '        ' → logprob: -1.5232397317886353
    4. ' ' → logprob: -2.7732396125793457
    5. '   ' → logprob: -3.0232396125793457
    6. ' attributes' → logprob: -4.398239612579346
    7. ':' → logprob: -4.773239612579346
    8. ')' → logprob: -4.773239612579346
    9. '<|end|>' → logprob: -4.773239612579346
    10. '  ' → logprob: -4.898239612579346

Token 25: ' a' (ID: 261)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.03436204418540001
    2. 'None' → logprob: -3.4093620777130127
    3. ' self' → logprob: -8.034361839294434
    4. ' empty' → logprob: -8.909361839294434
    5. ' none' → logprob: -9.534361839294434
    6. ' ' → logprob: -9.659361839294434
    7. 'self' → logprob: -10.409361839294434
    8. '    ' → logprob: -10.784361839294434
    9. ' a' → logprob: -11.159361839294434
    10. '   ' → logprob: -11.409361839294434

Token 26: ' single' (ID: 4590)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2253095507621765
    2. ' leaf' → logprob: -1.8503096103668213
    3. ' n' → logprob: -4.350309371948242
    4. 'ny' → logprob: -5.225309371948242
    5. ' binary' → logprob: -5.350309371948242
    6. ' tree' → logprob: -5.475309371948242
    7. ' root' → logprob: -5.600309371948242
    8. ' self' → logprob: -6.350309371948242
    9. ' value' → logprob: -6.600309371948242
    10. ' def' → logprob: -6.600309371948242

Token 27: ' leaf' (ID: 25882)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.03158925101161003
    2. '   ' → logprob: -5.281589031219482
    3. '-' → logprob: -5.531589031219482
    4. ' element' → logprob: -5.781589031219482
    5. '-node' → logprob: -5.781589031219482
    6. ' ' → logprob: -6.031589031219482
    7. ' object' → logprob: -6.406589031219482
    8. ',' → logprob: -6.656589031219482
    9. 'ton' → logprob: -6.906589031219482
    10. ' instance' → logprob: -7.031589031219482

Token 28: ' node' (ID: 4596)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07474574446678162
    2. '
' → logprob: -4.3247456550598145
    3. '   ' → logprob: -4.5747456550598145
    4. ' self' → logprob: -4.9497456550598145
    5. '        ' → logprob: -5.1997456550598145
    6. '    ' → logprob: -5.4497456550598145
    7. ',' → logprob: -5.5747456550598145
    8. '        
' → logprob: -5.5747456550598145
    9. ':' → logprob: -5.6997456550598145
    10. ' ' → logprob: -5.6997456550598145

Token 29: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007711681537330151
    2. ':' → logprob: -5.382711887359619
    3. '        ' → logprob: -7.382711887359619
    4. 'self' → logprob: -7.757711887359619
    5. '(self' → logprob: -7.757711887359619
    6. ',' → logprob: -7.882711887359619
    7. ' :' → logprob: -8.507711410522461
    8. ' self' → logprob: -8.632711410522461
    9. '
' → logprob: -8.632711410522461
    10. '   ' → logprob: -9.382711410522461

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011353016830980778
    2. 'self' → logprob: -4.761353015899658
    3. ' self' → logprob: -6.011353015899658
    4. '   ' → logprob: -8.886353492736816
    5. '        ' → logprob: -9.761353492736816
    6. '    ' → logprob: -10.886353492736816
    7. ' ' → logprob: -11.261353492736816
    8. '<|end|>' → logprob: -11.386353492736816
    9. '      ' → logprob: -11.511353492736816
    10. ' pass' → logprob: -11.886353492736816

Token 31: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.31627461314201355
    2. ' self' → logprob: -1.316274642944336
    3. '       ' → logprob: -5.941274642944336
    4. '    ' → logprob: -8.816274642944336
    5. '   ' → logprob: -9.566274642944336
    6. ' pass' → logprob: -9.691274642944336
    7. ' ' → logprob: -10.441274642944336
    8. '        ' → logprob: -10.691274642944336
    9. 'pass' → logprob: -10.691274642944336
    10. 'def' → logprob: -11.191274642944336

Token 32: '.parent' (ID: 17454)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.524225115776062
    2. '.children' → logprob: -2.1492252349853516
    3. '.parent' → logprob: -2.3992252349853516
    4. '.value' → logprob: -2.6492252349853516
    5. '.left' → logprob: -2.7742252349853516
    6. '.data' → logprob: -4.024225234985352
    7. '.is' → logprob: -4.274225234985352
    8. '.size' → logprob: -5.399225234985352
    9. '.type' → logprob: -5.524225234985352
    10. '.state' → logprob: -5.649225234985352

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1272694170475006
    2. '=' → logprob: -2.1272695064544678
    3. '=None' → logprob: -8.002269744873047
    4. ' ' → logprob: -13.127269744873047
    5. ' is' → logprob: -13.627269744873047
    6. ',' → logprob: -14.002269744873047
    7. '   ' → logprob: -14.627269744873047
    8. ' None' → logprob: -14.752269744873047
    9. 'None' → logprob: -14.877269744873047
    10. '    ' → logprob: -14.877269744873047

Token 34: ' -' (ID: 533)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.20141451060771942
    2. ' None' → logprob: -1.7014144659042358
    3. 'self' → logprob: -13.701414108276367
    4. ' self' → logprob: -17.076414108276367
    5. '_None' → logprob: -17.201414108276367
    6. 'none' → logprob: -17.326414108276367
    7. '(None' → logprob: -17.826414108276367
    8. ' ' → logprob: -18.076414108276367
    9. '0' → logprob: -18.201414108276367
    10. ' none' → logprob: -18.326414108276367

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '2' → logprob: -15.625031471252441
    4. 'None' → logprob: -19.000030517578125
    5. '   ' → logprob: -19.125030517578125
    6. '  ' → logprob: -19.562530517578125
    7. '１' → logprob: -19.875030517578125
    8. '0' → logprob: -20.000030517578125
    9. '-' → logprob: -20.187530517578125
    10. '۱' → logprob: -20.437530517578125

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39577117562294006
    2. '<|end|>' → logprob: -1.2707711458206177
    3. '       ' → logprob: -3.1457712650299072
    4. ' 
' → logprob: -7.270771026611328
    5. '<|end|>' → logprob: -7.645771026611328
    6. ' ' → logprob: -7.770771026611328
    7. '        ' → logprob: -7.895771026611328
    8. ',' → logprob: -8.645771026611328
    9. '        
' → logprob: -8.895771026611328
    10. 'self' → logprob: -9.020771026611328

Token 37: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5413872003555298
    2. 'self' (adapté à ' self') → logprob: -0.9163872003555298
    3. ' self' → logprob: -4.16638708114624
    4. '<|end|>' → logprob: -6.54138708114624
    5. '
' → logprob: -7.41638708114624
    6. ' ' → logprob: -8.916387557983398
    7. '0' → logprob: -9.166387557983398
    8. '   ' → logprob: -9.791387557983398
    9. '	self' → logprob: -10.041387557983398
    10. 'def' → logprob: -10.166387557983398

Token 39: '.type' (ID: 9166)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03117891028523445
    2. '.children' → logprob: -3.6561789512634277
    3. ' .' → logprob: -6.031178951263428
    4. '.is' → logprob: -7.406178951263428
    5. '.child' → logprob: -7.656178951263428
    6. '.left' → logprob: -7.906178951263428
    7. 'children' → logprob: -8.15617847442627
    8. '.value' → logprob: -9.40617847442627
    9. '.data' → logprob: -9.53117847442627
    10. '.parent' → logprob: -9.65617847442627

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018703388050198555
    2. '=' → logprob: -4.018703460693359
    3. ' ' → logprob: -7.643703460693359
    4. '_' → logprob: -9.64370346069336
    5. '  ' → logprob: -13.01870346069336
    6. 's' → logprob: -13.51870346069336
    7. '=None' → logprob: -13.64370346069336
    8. '.' → logprob: -14.01870346069336
    9. '   ' → logprob: -14.64370346069336
    10. ',' → logprob: -14.64370346069336

Token 41: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0706580877304077
    2. ' None' → logprob: -1.4456580877304077
    3. 'None' → logprob: -1.8206580877304077
    4. ' '' → logprob: -2.1956582069396973
    5. '0' → logprob: -2.8206582069396973
    6. '"' → logprob: -2.9456582069396973
    7. ' ' → logprob: -4.445658206939697
    8. ''s' → logprob: -4.695658206939697
    9. ' "' → logprob: -5.570658206939697
    10. '''' → logprob: -5.820658206939697

Token 42: 'leaf' (ID: 50921)
  Prédit: 'leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaf' → logprob: -0.011130467988550663
    2. 'Leaf' → logprob: -6.136130332946777
    3. 'L' → logprob: -6.386130332946777
    4. ' leaf' → logprob: -6.386130332946777
    5. 'l' → logprob: -6.886130332946777
    6. ''' → logprob: -7.136130332946777
    7. 'node' → logprob: -7.386130332946777
    8. 'root' → logprob: -7.636130332946777
    9. 'LE' → logprob: -8.011130332946777
    10. 'None' → logprob: -8.011130332946777

Token 43: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008642228320240974
    2. ''
' → logprob: -4.758642196655273
    3. ''
' → logprob: -11.008642196655273
    4. ''s' → logprob: -12.508642196655273
    5. '"' → logprob: -13.008642196655273
    6. ' '' → logprob: -13.633642196655273
    7. ''value' → logprob: -14.008642196655273
    8. ''

' → logprob: -14.383642196655273
    9. '\n' → logprob: -14.883642196655273
    10. ''class' → logprob: -15.258642196655273

Token 44: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02639690786600113
    2. '<|end|>' → logprob: -3.9013969898223877
    3. '
' → logprob: -5.401396751403809
    4. 'self' (adapté à ' self') → logprob: -8.151396751403809
    5. '<|end|>' → logprob: -8.151396751403809
    6. '   ' → logprob: -8.901396751403809
    7. '        
' → logprob: -9.151396751403809
    8. '#' → logprob: -9.276396751403809
    9. ' ' → logprob: -9.401396751403809
    10. 'def' → logprob: -9.651396751403809

Token 46: '.depth' (ID: 89791)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3039496839046478
    2. '.value' → logprob: -2.3039495944976807
    3. '.children' → logprob: -3.0539495944976807
    4. 'value' → logprob: -3.5539495944976807
    5. '.data' → logprob: -3.9289495944976807
    6. ' .' → logprob: -4.55394983291626
    7. '_value' → logprob: -4.67894983291626
    8. 'data' → logprob: -5.05394983291626
    9. '_children' → logprob: -5.42894983291626
    10. ' =' → logprob: -5.55394983291626

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01262018270790577
    2. '=' → logprob: -4.387619972229004
    3. ' ' → logprob: -9.137619972229004
    4. '   ' → logprob: -13.637619972229004
    5. '  ' → logprob: -14.637619972229004
    6. '=None' → logprob: -14.637619972229004
    7. ' =
' → logprob: -15.887619972229004
    8. ' ==' → logprob: -16.13762092590332
    9. '.' → logprob: -16.26262092590332
    10. ')' → logprob: -16.38762092590332

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029803840443491936
    2. ' ' → logprob: -3.52980375289917
    3. '1' → logprob: -9.904804229736328
    4. '   ' → logprob: -13.842304229736328
    5. ' -' → logprob: -14.467304229736328
    6. 'None' → logprob: -14.779804229736328
    7. '       ' → logprob: -14.842304229736328
    8. '-' → logprob: -15.654804229736328
    9. 'self' → logprob: -15.967304229736328
    10. ' None' → logprob: -16.154804229736328

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010545044642640278
    2. ' ' → logprob: -9.500105857849121
    3. '1' → logprob: -10.500105857849121
    4. '   ' → logprob: -13.875105857849121
    5. '-' → logprob: -14.125105857849121
    6. 'self' → logprob: -14.562605857849121
    7. 'None' → logprob: -15.375105857849121
    8. '       ' → logprob: -16.437604904174805
    9. ' -' → logprob: -16.937604904174805
    10. '  ' → logprob: -17.000104904174805

Token 50: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6188766956329346
    2. '<|end|>' → logprob: -0.8688766956329346
    3. '
' → logprob: -3.2438766956329346
    4. '<|end|>' → logprob: -6.4938764572143555
    5. '        ' → logprob: -8.368876457214355
    6. '        
' → logprob: -8.493876457214355
    7. ' ' → logprob: -8.618876457214355
    8. '   ' → logprob: -8.618876457214355
    9. '```' → logprob: -9.493876457214355
    10. '    
' → logprob: -9.618876457214355

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056787408888339996
    2. '<|end|>' → logprob: -2.9317874908447266
    3. '
' → logprob: -7.556787490844727
    4. '   ' → logprob: -7.681787490844727
    5. '        
' → logprob: -8.931787490844727
    6. '<|end|>' → logprob: -8.931787490844727
    7. '\n' → logprob: -9.306787490844727
    8. ' ' → logprob: -9.431787490844727
    9. '\' → logprob: -9.556787490844727
    10. '        ' → logprob: -9.556787490844727

Token 52: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01603507250547409
    2. 'self' (adapté à ' self') → logprob: -4.891035079956055
    3. '<|end|>' → logprob: -5.516035079956055
    4. 'def' → logprob: -5.766035079956055
    5. '   ' → logprob: -7.516035079956055
    6. ' self' → logprob: -8.641035079956055
    7. '
' → logprob: -8.766035079956055
    8. '<|end|>' → logprob: -9.516035079956055
    9. ' ' → logprob: -9.766035079956055
    10. '#' → logprob: -10.016035079956055

Token 53: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.20826660096645355
    2. '.' → logprob: -1.8332666158676147
    3. '.data' → logprob: -4.458266735076904
    4. '.value' → logprob: -5.458266735076904
    5. '.key' → logprob: -6.458266735076904
    6. '.size' → logprob: -6.458266735076904
    7. '.left' → logprob: -6.583266735076904
    8. '.child' → logprob: -6.708266735076904
    9. '.parent' → logprob: -6.833266735076904
    10. '.nodes' → logprob: -7.208266735076904

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048645276576280594
    2. '=' → logprob: -3.048645257949829
    3. '=[]' → logprob: -9.79864501953125
    4. ' ' → logprob: -13.79864501953125
    5. '[]' → logprob: -14.54864501953125
    6. '[:]' → logprob: -15.29864501953125
    7. '[' → logprob: -16.17364501953125
    8. '=None' → logprob: -16.17364501953125
    9. ' =
' → logprob: -16.29864501953125
    10. ' =[' → logprob: -16.79864501953125

Token 55: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0020007232669740915
    2. ' []' → logprob: -6.25200080871582
    3. '[' → logprob: -10.25200080871582
    4. '[]}' → logprob: -10.75200080871582
    5. '{}' → logprob: -11.75200080871582
    6. '[]
' → logprob: -12.62700080871582
    7. '[]

' → logprob: -12.75200080871582
    8. 'None' → logprob: -15.12700080871582
    9. '[],' → logprob: -15.37700080871582
    10. '[:]' → logprob: -15.37700080871582

Token 56: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5284145474433899
    2. '<|end|>' → logprob: -1.0284144878387451
    3. '
' → logprob: -4.028414726257324
    4. '    
' → logprob: -4.403414726257324
    5. 'def' → logprob: -4.903414726257324
    6. '       ' → logprob: -5.028414726257324
    7. '<|end|>' → logprob: -5.903414726257324
    8. ' ' → logprob: -6.653414726257324
    9. ' def' → logprob: -7.278414726257324
    10. '  ' → logprob: -7.403414726257324

Token 57: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20186986029148102
    2. '   ' → logprob: -2.0768699645996094
    3. '<|end|>' → logprob: -3.5768699645996094
    4. ' def' → logprob: -4.326869964599609
    5. '
' → logprob: -5.076869964599609
    6. '    
' → logprob: -5.826869964599609
    7. ' ' → logprob: -5.951869964599609
    8. '       ' → logprob: -7.076869964599609
    9. '<|end|>' → logprob: -7.326869964599609
    10. ' 
' → logprob: -7.576869964599609

Token 58: '.degree' (ID: 186756)
  Prédit: '.value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.3202465772628784
    2. '.data' → logprob: -1.6952465772628784
    3. '.' → logprob: -3.195246696472168
    4. '.name' → logprob: -3.820246696472168
    5. '.label' → logprob: -4.820246696472168
    6. '.key' → logprob: -4.945246696472168
    7. '.parent' → logprob: -5.320246696472168
    8. '.id' → logprob: -5.445246696472168
    9. '.size' → logprob: -7.570246696472168
    10. 'value' → logprob: -7.820246696472168

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043025679886341095
    2. '=' → logprob: -3.1680257320404053
    3. ' ' → logprob: -10.668025970458984
    4. '   ' → logprob: -13.418025970458984
    5. '  ' → logprob: -14.293025970458984
    6. '<|end|>' → logprob: -15.293025970458984
    7. 's' → logprob: -15.543025970458984
    8. '    ' → logprob: -15.918025970458984
    9. '0' → logprob: -16.168025970458984
    10. '.' → logprob: -16.668025970458984

Token 60: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06197956204414368
    2. ' ' → logprob: -2.8119795322418213
    3. '1' → logprob: -12.436979293823242
    4. 'len' → logprob: -12.561979293823242
    5. '   ' → logprob: -13.749479293823242
    6. ' len' → logprob: -14.061979293823242
    7. '2' → logprob: -14.061979293823242
    8. '  ' → logprob: -14.624479293823242
    9. ' ' → logprob: -15.499479293823242
    10. '۰' → logprob: -15.561979293823242

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00044425477972254157
    2. ' ' → logprob: -7.875444412231445
    3. 'len' → logprob: -9.875444412231445
    4. '1' → logprob: -11.750444412231445
    5. '2' → logprob: -13.125444412231445
    6. ' len' → logprob: -14.250444412231445
    7. '[]' → logprob: -14.375444412231445
    8. '   ' → logprob: -14.625444412231445
    9. '[' → logprob: -15.437944412231445
    10. '  ' → logprob: -15.812944412231445

Token 62: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6710461378097534
    2. '   ' → logprob: -1.4210461378097534
    3. '<|end|>' → logprob: -2.046046257019043
    4. '       ' → logprob: -2.546046257019043
    5. ' def' → logprob: -4.546046257019043
    6. ' ' → logprob: -4.671046257019043
    7. '
' → logprob: -5.046046257019043
    8. 'self' (adapté à ' self') → logprob: -5.921046257019043
    9. '    ' → logprob: -6.296046257019043
    10. '    
' → logprob: -6.421046257019043

Token 65: '.s' (ID: 640)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07778928428888321
    2. '.value' → logprob: -3.577789306640625
    3. '.data' → logprob: -4.202789306640625
    4. '.parent' → logprob: -5.077789306640625
    5. '.size' → logprob: -5.827789306640625
    6. '.id' → logprob: -5.827789306640625
    7. '.children' → logprob: -5.952789306640625
    8. '.is' → logprob: -6.202789306640625
    9. '.name' → logprob: -6.327789306640625
    10. '.depth' → logprob: -6.827789306640625

Token 66: 'ibling' (ID: 47701)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.06694494187831879
    2. 't' → logprob: -3.8169448375701904
    3. 'core' → logprob: -4.6919450759887695
    4. 'ymbol' → logprob: -4.8169450759887695
    5. 'elf' → logprob: -5.6919450759887695
    6. 'tr' → logprob: -5.6919450759887695
    7. 'amples' → logprob: -5.6919450759887695
    8. 'tring' → logprob: -5.9419450759887695
    9. 'ample' → logprob: -6.1919450759887695
    10. 'um' → logprob: -6.4419450759887695

Token 67: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0333159901201725
    2. ' =' → logprob: -3.533315896987915
    3. '=' → logprob: -5.783316135406494
    4. ' s' → logprob: -7.783316135406494
    5. ' ' → logprob: -10.283315658569336
    6. '_s' → logprob: -11.533315658569336
    7. '_' → logprob: -11.908315658569336
    8. '=s' → logprob: -13.033315658569336
    9. '_count' → logprob: -13.283315658569336
    10. '_index' → logprob: -13.408315658569336

Token 68: ' -' (ID: 533)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.0532358884811401
    2. ' -' → logprob: -1.1782358884811401
    3. '-' → logprob: -1.4282358884811401
    4. 'None' → logprob: -2.3032360076904297
    5. ' []' → logprob: -6.30323600769043
    6. '[]' → logprob: -6.80323600769043
    7. ' ' → logprob: -7.92823600769043
    8. '0' → logprob: -7.92823600769043
    9. '   ' → logprob: -11.67823600769043
    10. '_None' → logprob: -12.05323600769043

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3676733690081164e-05
    2. ' ' → logprob: -10.75002384185791
    3. '-' → logprob: -13.87502384185791
    4. '2' → logprob: -14.25002384185791
    5. '   ' → logprob: -16.000022888183594
    6. '0' → logprob: -16.750022888183594
    7. '3' → logprob: -17.000022888183594
    8. '  ' → logprob: -17.125022888183594
    9. '```' → logprob: -17.125022888183594
    10. ' -' → logprob: -17.250022888183594

Token 70: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3491933345794678
    2. '   ' → logprob: -1.4741933345794678
    3. '       ' → logprob: -1.5991933345794678
    4. '<|end|>' → logprob: -1.5991933345794678
    5. ' ' → logprob: -2.8491933345794678
    6. '
' → logprob: -4.224193572998047
    7. 'self' (adapté à ' self') → logprob: -4.974193572998047
    8. ' def' → logprob: -5.349193572998047
    9. '#' → logprob: -5.474193572998047
    10. '```' → logprob: -5.849193572998047

Token 73: '.height' (ID: 11682)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.054800018668174744
    2. '.name' → logprob: -3.679800033569336
    3. '.id' → logprob: -5.179800033569336
    4. '.value' → logprob: -5.304800033569336
    5. '.data' → logprob: -5.429800033569336
    6. '.children' → logprob: -5.929800033569336
    7. '.parent' → logprob: -6.304800033569336
    8. '.depth' → logprob: -7.054800033569336
    9. '.s' → logprob: -7.429800033569336
    10. '.type' → logprob: -7.554800033569336

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011050889268517494
    2. '=' → logprob: -4.511050701141357
    3. ' ' → logprob: -12.761051177978516
    4. '   ' → logprob: -16.511051177978516
    5. '  ' → logprob: -17.136051177978516
    6. ',' → logprob: -18.261051177978516
    7. ' =)' → logprob: -18.511051177978516
    8. ':' → logprob: -18.761051177978516
    9. ' =
' → logprob: -19.011051177978516
    10. '0' → logprob: -19.011051177978516

Token 75: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03365318849682808
    2. ' ' → logprob: -3.4086532592773438
    3. '-' → logprob: -12.533653259277344
    4. ' -' → logprob: -13.033653259277344
    5. '   ' → logprob: -14.408653259277344
    6. '1' → logprob: -14.846153259277344
    7. '  ' → logprob: -15.721153259277344
    8. '۰' → logprob: -16.158653259277344
    9. ' ' → logprob: -16.221153259277344
    10. '０' → logprob: -16.471153259277344

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024239711638074368
    2. ' ' → logprob: -8.375242233276367
    3. '-' → logprob: -11.500242233276367
    4. ' -' → logprob: -14.250242233276367
    5. '1' → logprob: -14.375242233276367
    6. '   ' → logprob: -15.562742233276367
    7. '０' → logprob: -17.062742233276367
    8. '  ' → logprob: -17.187742233276367
    9. '000' → logprob: -17.312742233276367
    10. '	' → logprob: -17.500242233276367

Token 77: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0067816972732544
    2. 'def' → logprob: -1.2567816972732544
    3. '<|end|>' → logprob: -1.6317816972732544
    4. '
' → logprob: -2.506781578063965
    5. ' ' → logprob: -3.381781578063965
    6. ' def' → logprob: -4.381781578063965
    7. '    
' → logprob: -4.631781578063965
    8. '    ' → logprob: -5.631781578063965
    9. '<|end|>' → logprob: -5.756781578063965
    10. '  ' → logprob: -5.881781578063965

Token 79: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09830261766910553
    2. ' build' → logprob: -2.5983026027679443
    3. ' create' → logprob: -4.848302841186523
    4. ' parse' → logprob: -5.348302841186523
    5. ' ' → logprob: -6.223302841186523
    6. ' add' → logprob: -6.223302841186523
    7. ' tree' → logprob: -7.473302841186523
    8. ' calculate' → logprob: -7.598302841186523
    9. ' compute' → logprob: -7.723302841186523
    10. ' binary' → logprob: -8.598302841186523

Token 80: '_depth' (ID: 44220)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.4696333408355713
    2. '_depth' → logprob: -2.0946333408355713
    3. '_tree' → logprob: -2.5946333408355713
    4. '_type' → logprob: -2.8446333408355713
    5. '_nodes' → logprob: -3.5946333408355713
    6. '_' → logprob: -3.5946333408355713
    7. '_parent' → logprob: -4.219633102416992
    8. '_height' → logprob: -4.219633102416992
    9. '_children' → logprob: -4.344633102416992
    10. '_max' → logprob: -5.344633102416992

Token 81: '(v' (ID: 6932)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.49818047881126404
    2. '(' → logprob: -0.9981805086135864
    3. '(self' → logprob: -3.998180389404297
    4. '(root' → logprob: -6.248180389404297
    5. ' (' → logprob: -6.623180389404297
    6. '(nodes' → logprob: -7.123180389404297
    7. '(Node' → logprob: -7.998180389404297
    8. '(n' → logprob: -8.123180389404297
    9. '(parent' → logprob: -8.373180389404297
    10. '(tree' → logprob: -8.623180389404297

Token 82: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013302814215421677
    2. ',' → logprob: -4.638302803039551
    3. ')' → logprob: -6.013302803039551
    4. '):
' → logprob: -7.013302803039551
    5. ' ):' → logprob: -8.88830280303955
    6. ':' → logprob: -10.76330280303955
    7. '   ' → logprob: -12.01330280303955
    8. ' ,' → logprob: -12.01330280303955
    9. ')):' → logprob: -13.26330280303955
    10. 'def' → logprob: -13.38830280303955

Token 83: ' depth' (ID: 13636)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.07282476127147675
    2. ' nodes' → logprob: -3.197824716567993
    3. 'tree' → logprob: -3.697824716567993
    4. 'node' → logprob: -6.197824954986572
    5. ' tree' → logprob: -6.572824954986572
    6. 'graph' → logprob: -8.072824478149414
    7. 'parent' → logprob: -8.322824478149414
    8. 'parents' → logprob: -9.197824478149414
    9. ' node' → logprob: -9.697824478149414
    10. '	nodes' → logprob: -10.072824478149414

Token 84: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6400728225708008
    2. 's' → logprob: -0.7650728225708008
    3. ',' → logprob: -5.265072822570801
    4. ')' → logprob: -6.765072822570801
    5. ' ):' → logprob: -7.890072822570801
    6. '_list' → logprob: -8.2650728225708
    7. '_array' → logprob: -9.3900728225708
    8. '):
' → logprob: -9.6400728225708
    9. '   ' → logprob: -9.8900728225708
    10. '=' → logprob: -10.0150728225708

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03312388062477112
    2. 'depth' → logprob: -4.783123970031738
    3. '1' → logprob: -4.908123970031738
    4. ' ' → logprob: -5.033123970031738
    5. 'None' → logprob: -5.283123970031738
    6. 'v' → logprob: -6.158123970031738
    7. ')' → logprob: -6.408123970031738
    8. ' None' → logprob: -8.158123970031738
    9. '{}' → logprob: -8.658123970031738
    10. '   ' → logprob: -8.658123970031738

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006640767678618431
    2. ',' → logprob: -5.131640911102295
    3. ')' → logprob: -7.506640911102295
    4. '):
' → logprob: -9.131640434265137
    5. '   ' → logprob: -10.881640434265137
    6. ' ):' → logprob: -10.881640434265137
    7. ':' → logprob: -11.381640434265137
    8. '):
' → logprob: -13.756640434265137
    9. ',v' → logprob: -13.881640434265137
    10. ' ' → logprob: -14.006640434265137

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025508119724690914
    2. '<|end|>' → logprob: -6.7525506019592285
    3. 'if' → logprob: -7.3775506019592285
    4. ' if' → logprob: -7.7525506019592285
    5. '
' → logprob: -9.002551078796387
    6. '    
' → logprob: -9.127551078796387
    7. '    ' → logprob: -10.377551078796387
    8. ')' → logprob: -10.877551078796387
    9. '<|end|>' → logprob: -10.877551078796387
    10. '	if' → logprob: -12.002551078796387

Token 88: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.148696169257164
    2. 'if' (adapté à ' if') → logprob: -2.023696184158325
    3. ' if' → logprob: -5.148695945739746
    4. 'global' → logprob: -9.398695945739746
    5. 'for' → logprob: -10.648695945739746
    6. 'node' → logprob: -10.898695945739746
    7. 'return' → logprob: -11.148695945739746
    8. 'v' → logprob: -11.148695945739746
    9. '	if' → logprob: -11.898695945739746
    10. '    
' → logprob: -12.023695945739746

Token 89: ' not' (ID: 625)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.3487893342971802
    2. 'v' → logprob: -1.3487893342971802
    3. ' nodes' → logprob: -3.5987892150878906
    4. 'nodes' → logprob: -5.098789215087891
    5. ' node' → logprob: -8.22378921508789
    6. ' isinstance' → logprob: -8.34878921508789
    7. ' type' → logprob: -8.59878921508789
    8. '   ' → logprob: -8.97378921508789
    9. 'node' → logprob: -9.22378921508789
    10. 'type' → logprob: -9.47378921508789

Token 90: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5405044555664062
    2. ' v' → logprob: -1.0405044555664062
    3. ' hasattr' → logprob: -3.7905044555664062
    4. ' nodes' → logprob: -4.165504455566406
    5. ' isinstance' → logprob: -4.540504455566406
    6. 'nodes' → logprob: -4.665504455566406
    7. '(v' → logprob: -6.665504455566406
    8. 'depth' → logprob: -7.040504455566406
    9. 'has' → logprob: -7.790504455566406
    10. '[v' → logprob: -8.040504455566406

Token 91: '.children' (ID: 26331)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.008167481049895287
    2. '.' → logprob: -5.133167266845703
    3. ':' → logprob: -6.258167266845703
    4. '.parents' → logprob: -9.383167266845703
    5. '.has' → logprob: -9.758167266845703
    6. '.children' → logprob: -9.758167266845703
    7. '.is' → logprob: -10.008167266845703
    8. ' .' → logprob: -10.633167266845703
    9. ' or' → logprob: -11.258167266845703
    10. '.Parent' → logprob: -12.008167266845703

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005643534241244197
    2. '):' → logprob: -8.125564575195312
    3. ' :' → logprob: -8.375564575195312
    4. ':
' → logprob: -11.000564575195312
    5. ' or' → logprob: -12.000564575195312
    6. ':return' → logprob: -12.375564575195312
    7. ' and' → logprob: -13.125564575195312
    8. '<|end|>' → logprob: -13.250564575195312
    9. '[' → logprob: -13.500564575195312
    10. '   ' → logprob: -13.875564575195312

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05551445856690407
    2. '
' → logprob: -4.430514335632324
    3. 'return' → logprob: -4.430514335632324
    4. ':' → logprob: -4.680514335632324
    5. ':
' → logprob: -4.805514335632324
    6. ' return' → logprob: -5.055514335632324
    7. ':return' → logprob: -5.680514335632324
    8. '   ' → logprob: -6.055514335632324
    9. ',' → logprob: -8.430514335632324
    10. '        
' → logprob: -9.305514335632324

Token 94: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7293321490287781
    2. ' return' → logprob: -0.8543321490287781
    3. '       ' → logprob: -2.854332208633423
    4. '   ' → logprob: -3.854332208633423
    5. '
' → logprob: -4.354331970214844
    6. ':return' → logprob: -8.479331970214844
    7. '	return' → logprob: -9.604331970214844
    8. 'v' → logprob: -9.729331970214844
    9. '    
' → logprob: -10.104331970214844
    10. '        
' → logprob: -10.604331970214844

Token 95: ' print' (ID: 2123)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3513350784778595
    2. 'return' → logprob: -1.226335048675537
    3. '   ' → logprob: -6.226335048675537
    4. ' v' → logprob: -7.351335048675537
    5. 'v' → logprob: -8.601335525512695
    6. '       ' → logprob: -10.226335525512695
    7. ' depth' → logprob: -11.226335525512695
    8. 'depth' → logprob: -11.476335525512695
    9. 'Return' → logprob: -11.726335525512695
    10. '
' → logprob: -12.476335525512695

Token 96: '('' (ID: 706)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5013938546180725
    2. '(depth' → logprob: -1.2513937950134277
    3. '('' → logprob: -3.2513937950134277
    4. '("' → logprob: -3.3763937950134277
    5. '(f' → logprob: -3.7513937950134277
    6. '(' → logprob: -5.251393795013428
    7. 'depth' → logprob: -5.501393795013428
    8. '()' → logprob: -6.376393795013428
    9. '("")' → logprob: -8.876394271850586
    10. 'v' → logprob: -9.001394271850586

Token 97: 'rt' (ID: 6197)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16067840158939362
    2. 'depth' → logprob: -2.6606783866882324
    3. '')' → logprob: -3.6606783866882324
    4. '(v' → logprob: -4.410678386688232
    5. 'return' → logprob: -4.410678386688232
    6. ' v' → logprob: -5.035678386688232
    7. '(depth' → logprob: -5.285678386688232
    8. '',' → logprob: -5.285678386688232
    9. '   ' → logprob: -5.410678386688232
    10. ')' → logprob: -6.785678386688232

Token 98: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.059891849756240845
    2. '',' → logprob: -4.184891700744629
    3. ' node' → logprob: -4.559891700744629
    4. ' ')' → logprob: -4.809891700744629
    5. ''' → logprob: -5.309891700744629
    6. 'node' → logprob: -5.434891700744629
    7. ':' → logprob: -5.809891700744629
    8. ' '' → logprob: -6.059891700744629
    9. 'ree' → logprob: -6.934891700744629
    10. ' ',' → logprob: -7.059891700744629

Token 99: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.6986724734306335
    2. 'v' → logprob: -1.4486725330352783
    3. 'depth' → logprob: -1.6986725330352783
    4. ' depth' → logprob: -2.5736725330352783
    5. ')' → logprob: -5.573672294616699
    6. ''' → logprob: -6.323672294616699
    7. ' '' → logprob: -7.323672294616699
    8. ' )' → logprob: -8.3236722946167
    9. '')' → logprob: -8.4486722946167
    10. '    ' → logprob: -8.6986722946167

Token 100: '.parent' (ID: 17454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5237595438957214
    2. '.depth' → logprob: -1.0237596035003662
    3. ',' → logprob: -3.523759603500366
    4. '.type' → logprob: -5.148759365081787
    5. ' )' → logprob: -5.523759365081787
    6. '.height' → logprob: -6.148759365081787
    7. 'depth' → logprob: -6.523759365081787
    8. '.parent' → logprob: -6.773759365081787
    9. '.children' → logprob: -6.773759365081787
    10. '.' → logprob: -7.648759365081787

Token 101: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010214862413704395
    2. ')
' → logprob: -5.510214805603027
    3. '   ' → logprob: -5.635214805603027
    4. ')return' → logprob: -7.010214805603027
    5. ',' → logprob: -7.135214805603027
    6. '       ' → logprob: -7.760214805603027
    7. '')' → logprob: -8.760214805603027
    8. ' )' → logprob: -9.135214805603027
    9. ')v' → logprob: -10.635214805603027
    10. ');' → logprob: -10.885214805603027

Token 102: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.4809103012084961
    2. 'v' → logprob: -1.855910301208496
    3. ')' → logprob: -2.230910301208496
    4. '       ' → logprob: -3.355910301208496
    5. 'depth' → logprob: -3.480910301208496
    6. '')' → logprob: -4.355910301208496
    7. ' depth' → logprob: -4.480910301208496
    8. '   ' → logprob: -5.230910301208496
    9. ',' → logprob: -5.605910301208496
    10. ')
' → logprob: -5.980910301208496

Token 103: '.depth' (ID: 89791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16901136934757233
    2. '.depth' → logprob: -2.544011354446411
    3. ',' → logprob: -2.794011354446411
    4. ')
' → logprob: -4.66901159286499
    5. ' )' → logprob: -6.29401159286499
    6. 'depth' → logprob: -6.91901159286499
    7. '.height' → logprob: -7.29401159286499
    8. '.type' → logprob: -7.54401159286499
    9. ' ,' → logprob: -7.66901159286499
    10. '.' → logprob: -8.294011116027832

Token 104: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025475529953837395
    2. '       ' → logprob: -4.02547550201416
    3. ')
' → logprob: -6.02547550201416
    4. ')return' → logprob: -6.27547550201416
    5. '   ' → logprob: -6.65047550201416
    6. '')' → logprob: -7.02547550201416
    7. ',' → logprob: -7.40047550201416
    8. ')v' → logprob: -10.02547550201416
    9. ' )' → logprob: -10.65047550201416
    10. 'return' → logprob: -11.15047550201416

Token 105: ' depth' (ID: 13636)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6533609628677368
    2. ' v' → logprob: -1.4033609628677368
    3. 'depth' → logprob: -2.7783608436584473
    4. ')' → logprob: -2.9033608436584473
    5. '   ' → logprob: -3.2783608436584473
    6. '       ' → logprob: -3.5283608436584473
    7. '')' → logprob: -3.6533608436584473
    8. ')
' → logprob: -5.403360843658447
    9. ' depth' → logprob: -5.403360843658447
    10. ''' → logprob: -6.028360843658447

Token 106: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014330738224089146
    2. ')
' → logprob: -4.764330863952637
    3. '   ' → logprob: -5.639330863952637
    4. '       ' → logprob: -7.014330863952637
    5. ')return' → logprob: -7.014330863952637
    6. ',' → logprob: -9.264330863952637
    7. ')v' → logprob: -9.389330863952637
    8. '')' → logprob: -9.514330863952637
    9. ' )' → logprob: -10.889330863952637
    10. '):
' → logprob: -11.139330863952637

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30236485600471497
    2. 'return' → logprob: -1.6773648262023926
    3. ' return' → logprob: -2.9273648262023926
    4. '   ' → logprob: -3.9273648262023926
    5. 'v' → logprob: -7.927364826202393
    6. '
' → logprob: -8.80236530303955
    7. '	return' → logprob: -9.30236530303955
    8. ':return' → logprob: -9.67736530303955
    9. ' v' → logprob: -9.92736530303955
    10. '<|end|>' → logprob: -10.17736530303955

Token 108: ' v' (ID: 323)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.791208028793335
    2. 'v' (adapté à ' v') → logprob: -1.041208028793335
    3. '   ' → logprob: -1.791208028793335
    4. '       ' → logprob: -4.291208267211914
    5. ' return' → logprob: -4.541208267211914
    6. ' v' → logprob: -6.041208267211914
    7. '  ' → logprob: -10.416208267211914
    8. 'for' → logprob: -10.416208267211914
    9. ' ' → logprob: -10.541208267211914
    10. '	return' → logprob: -10.791208267211914

Token 109: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.00011224505578866228
    2. '.height' → logprob: -9.375112533569336
    3. '.' → logprob: -10.750112533569336
    4. '.parent' → logprob: -13.375112533569336
    5. '.type' → logprob: -13.750112533569336
    6. '.degree' → logprob: -13.875112533569336
    7. ' .' → logprob: -14.250112533569336
    8. '.s' → logprob: -15.250112533569336
    9. '.Depth' → logprob: -15.375112533569336
    10. '.children' → logprob: -15.500112533569336

Token 110: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975245751440525
    2. ' =' → logprob: -3.529752492904663
    3. '+=' → logprob: -14.404752731323242
    4. '=
' → logprob: -14.779752731323242
    5. ' +=' → logprob: -15.029752731323242
    6. '<|end|>' → logprob: -15.404752731323242
    7. ',' → logprob: -16.404752731323242
    8. ' ' → logprob: -16.529752731323242
    9. '=v' → logprob: -16.779752731323242
    10. '＝' → logprob: -17.029752731323242

Token 111: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.12723779678344727
    2. ' depth' → logprob: -2.1272377967834473
    3. '0' → logprob: -8.127237319946289
    4. '(depth' → logprob: -12.127237319946289
    5. '   ' → logprob: -13.002237319946289
    6. ' ' → logprob: -13.502237319946289
    7. '1' → logprob: -13.752237319946289
    8. '    ' → logprob: -13.752237319946289
    9. 'd' → logprob: -14.127237319946289
    10. '_depth' → logprob: -14.877237319946289

Token 112: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13207323849201202
    2. '   ' → logprob: -2.132073163986206
    3. '
' → logprob: -5.507073402404785
    4. 'return' → logprob: -7.132073402404785
    5. ' return' → logprob: -9.132073402404785
    6. '	return' → logprob: -10.757073402404785
    7. '<|end|>' → logprob: -10.757073402404785
    8. '    
' → logprob: -11.132073402404785
    9. ':return' → logprob: -11.257073402404785
    10. '	' → logprob: -11.382073402404785

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2813411056995392
    2. '   ' → logprob: -1.4063410758972168
    3. 'return' → logprob: -9.156341552734375
    4. '<|end|>' → logprob: -10.031341552734375
    5. ' return' → logprob: -11.906341552734375
    6. '	return' → logprob: -12.281341552734375
    7. ',' → logprob: -12.406341552734375
    8. '<|end|>' → logprob: -12.531341552734375
    9. ':return' → logprob: -13.031341552734375
    10. '	' → logprob: -13.156341552734375

Token 114: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03787942975759506
    2. ' return' → logprob: -4.162879467010498
    3. '   ' → logprob: -4.412879467010498
    4. '       ' → logprob: -4.662879467010498
    5. '	return' → logprob: -10.78787899017334
    6. 'v' → logprob: -11.53787899017334
    7. ' ' → logprob: -12.41287899017334
    8. '
' → logprob: -12.41287899017334
    9. ':return' → logprob: -12.66287899017334
    10. '  ' → logprob: -13.53787899017334

Token 115: ' v' (ID: 323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02976241149008274
    2. ' v' → logprob: -3.7797625064849854
    3. 'v' → logprob: -5.654762268066406
    4. ' for' → logprob: -6.779762268066406
    5. '
' → logprob: -7.279762268066406
    6. 'for' → logprob: -8.279762268066406
    7. ' None' → logprob: -8.779762268066406
    8. '    
' → logprob: -9.029762268066406
    9. '1' → logprob: -9.154762268066406
    10. 'depth' → logprob: -9.154762268066406

Token 116: '.depth' (ID: 89791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004940562415868044
    2. '
' → logprob: -5.879940509796143
    3. '    
' → logprob: -6.254940509796143
    4. 'else' → logprob: -9.8799409866333
    5. '<|end|>' → logprob: -10.1299409866333
    6. 'for' → logprob: -10.6299409866333
    7. 'v' → logprob: -10.8799409866333
    8. '  
' → logprob: -11.2549409866333
    9. ' for' → logprob: -11.6299409866333
    10. 's' → logprob: -12.3799409866333

Token 117: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.470901229884475e-05
    2. '    
' → logprob: -9.62508487701416
    3. '
' → logprob: -11.37508487701416
    4. 'else' → logprob: -12.50008487701416
    5. 'v' → logprob: -13.87508487701416
    6. '<|end|>' → logprob: -14.12508487701416
    7. 'for' → logprob: -15.00008487701416
    8. '  
' → logprob: -15.75008487701416
    9. ' for' → logprob: -15.87508487701416
    10. '<|end|>' → logprob: -16.000083923339844

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016992862219922245
    2. '    
' → logprob: -8.75016975402832
    3. '
' → logprob: -12.25016975402832
    4. 'v' → logprob: -13.50016975402832
    5. 'else' → logprob: -13.62516975402832
    6. 'for' → logprob: -13.75016975402832
    7. ' for' → logprob: -14.25016975402832
    8. '    ' → logprob: -14.75016975402832
    9. '   
' → logprob: -15.37516975402832
    10. '<|end|>' → logprob: -15.37516975402832

Token 119: ' v' (ID: 323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020912503823637962
    2. 'for' → logprob: -5.0209126472473145
    3. 'depth' → logprob: -5.3959126472473145
    4. ' for' → logprob: -5.5209126472473145
    5. 'else' → logprob: -6.2709126472473145
    6. 'v' (adapté à ' v') → logprob: -6.3959126472473145
    7. '
' → logprob: -7.5209126472473145
    8. ' ' → logprob: -8.395912170410156
    9. '  ' → logprob: -8.395912170410156
    10. ' else' → logprob: -8.520912170410156

Token 120: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.0005781737272627652
    2. '.children' → logprob: -8.000577926635742
    3. '.' → logprob: -9.000577926635742
    4. '.height' → logprob: -9.750577926635742
    5. 'depth' → logprob: -10.125577926635742
    6. '.degree' → logprob: -12.125577926635742
    7. ' .' → logprob: -12.500577926635742
    8. '.type' → logprob: -13.000577926635742
    9. '.s' → logprob: -13.000577926635742
    10. '.parent' → logprob: -13.500577926635742

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2818775773048401
    2. ' =' → logprob: -1.4068775177001953
    3. ' +=' → logprob: -7.531877517700195
    4. '+=' → logprob: -8.656877517700195
    5. ' ' → logprob: -12.406877517700195
    6. '+' → logprob: -13.031877517700195
    7. '=get' → logprob: -13.281877517700195
    8. '<|end|>' → logprob: -13.406877517700195
    9. '=
' → logprob: -13.656877517700195
    10. ')' → logprob: -14.156877517700195

Token 122: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.14934660494327545
    2. ' depth' → logprob: -2.2743465900421143
    3. 'max' → logprob: -3.7743465900421143
    4. ' max' → logprob: -4.399346828460693
    5. '   ' → logprob: -7.524346828460693
    6. '(depth' → logprob: -10.149346351623535
    7. '0' → logprob: -11.024346351623535
    8. 'min' → logprob: -11.774346351623535
    9. '1' → logprob: -12.524346351623535
    10. ' min' → logprob: -12.649346351623535

Token 123: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43218857049942017
    2. '
' → logprob: -1.0571885108947754
    3. 'for' → logprob: -6.807188510894775
    4. '    
' → logprob: -6.807188510894775
    5. ' for' → logprob: -6.807188510894775
    6. '
' → logprob: -9.182188987731934
    7. '  
' → logprob: -10.432188987731934
    8. '   
' → logprob: -12.057188987731934
    9. ' 
' → logprob: -12.307188987731934
    10. '\n' → logprob: -12.682188987731934

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16989266872406006
    2. 'for' → logprob: -2.0448927879333496
    3. '
' → logprob: -4.29489278793335
    4. ' for' → logprob: -4.54489278793335
    5. '+' → logprob: -6.79489278793335
    6. 'max' → logprob: -7.04489278793335
    7. ' +' → logprob: -8.544892311096191
    8. '    
' → logprob: -9.169892311096191
    9. 'return' → logprob: -9.169892311096191
    10. 'get' → logprob: -10.044892311096191

Token 125: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1734752357006073
    2. 'max' → logprob: -1.9234752655029297
    3. 'd' → logprob: -5.29847526550293
    4. ' for' → logprob: -6.17347526550293
    5. 'return' → logprob: -6.42347526550293
    6. 'md' → logprob: -6.54847526550293
    7. 'depth' → logprob: -6.54847526550293
    8. '   ' → logprob: -6.92347526550293
    9. 'm' → logprob: -9.17347526550293
    10. ' max' → logprob: -9.29847526550293

Token 126: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04055548086762428
    2. 'max' → logprob: -3.415555477142334
    3. ' for' → logprob: -6.165555477142334
    4. 'depth' → logprob: -6.165555477142334
    5. 'return' → logprob: -6.540555477142334
    6. '   ' → logprob: -7.415555477142334
    7. 'd' → logprob: -9.040555953979492
    8. 'child' → logprob: -9.040555953979492
    9. 'md' → logprob: -9.290555953979492
    10. 'children' → logprob: -9.540555953979492

Token 127: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.07104838639497757
    2. '(' → logprob: -2.8210484981536865
    3. '(v' → logprob: -5.321048259735107
    4. '(len' → logprob: -5.571048259735107
    5. '("' → logprob: -9.071048736572266
    6. '(f' → logprob: -9.946048736572266
    7. '()' → logprob: -10.071048736572266
    8. 'len' → logprob: -10.321048736572266
    9. '(
' → logprob: -10.821048736572266
    10. '(depth' → logprob: -10.821048736572266

Token 128: 'out' (ID: 468)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0131412744522095
    2. 'for' → logprob: -1.0131412744522095
    3. '   ' → logprob: -2.26314115524292
    4. 'get' → logprob: -3.26314115524292
    5. 'depth' → logprob: -3.38814115524292
    6. ' for' → logprob: -3.63814115524292
    7. '',' → logprob: -4.38814115524292
    8. '')' → logprob: -4.51314115524292
    9. ' v' → logprob: -4.63814115524292
    10. '
' → logprob: -5.01314115524292

Token 129: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.6069256067276001
    2. '(',' → logprob: -1.7319256067276
    3. ',' → logprob: -2.3569254875183105
    4. '')' → logprob: -2.3569254875183105
    5. '(v' → logprob: -3.7319254875183105
    6. '('' → logprob: -4.2319254875183105
    7. ' ',' → logprob: -4.2319254875183105
    8. ' v' → logprob: -5.4819254875183105
    9. '   ' → logprob: -5.6069254875183105
    10. ')' → logprob: -5.8569254875183105

Token 130: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5056660771369934
    2. ' v' → logprob: -1.1306660175323486
    3. '[v' → logprob: -3.5056660175323486
    4. 'depth' → logprob: -3.7556660175323486
    5. ' depth' → logprob: -4.755666255950928
    6. '[' → logprob: -5.380666255950928
    7. ' [' → logprob: -5.380666255950928
    8. ''' → logprob: -7.380666255950928
    9. 'len' → logprob: -7.505666255950928
    10. ')' → logprob: -7.755666255950928

Token 131: '.parent' (ID: 17454)
  Prédit: '.children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.1516362428665161
    2. '.depth' → logprob: -2.1516361236572266
    3. '.type' → logprob: -4.151636123657227
    4. '.parent' → logprob: -5.526636123657227
    5. '.' → logprob: -6.276636123657227
    6. ',' → logprob: -6.776636123657227
    7. ' .' → logprob: -7.151636123657227
    8. ')' → logprob: -8.276636123657227
    9. '.s' → logprob: -8.901636123657227
    10. '.height' → logprob: -9.651636123657227

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09336578845977783
    2. ')' → logprob: -2.4683656692504883
    3. '   ' → logprob: -6.093365669250488
    4. ' ,' → logprob: -7.343365669250488
    5. 'for' → logprob: -7.843365669250488
    6. ')
' → logprob: -8.093365669250488
    7. ',v' → logprob: -8.343365669250488
    8. ' for' → logprob: -9.218365669250488
    9. ' )' → logprob: -9.343365669250488
    10. ',)' → logprob: -9.468365669250488

Token 133: ' v' (ID: 323)
  Prédit: ' depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' depth' → logprob: -1.1651368141174316
    2. 'depth' → logprob: -1.2901368141174316
    3. ' v' → logprob: -1.4151368141174316
    4. 'v' → logprob: -1.7901368141174316
    5. ')' → logprob: -6.665136814117432
    6. '(depth' → logprob: -7.915136814117432
    7. ' get' → logprob: -8.540136337280273
    8. 'get' → logprob: -8.790136337280273
    9. '[' → logprob: -8.977636337280273
    10. ')
' → logprob: -9.227636337280273

Token 134: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.09139860421419144
    2. 'depth' → logprob: -3.0913987159729004
    3. '.children' → logprob: -3.2163987159729004
    4. 'children' → logprob: -7.3413987159729
    5. ')' → logprob: -7.5913987159729
    6. '.parent' → logprob: -8.966398239135742
    7. '.type' → logprob: -9.091398239135742
    8. ',' → logprob: -9.341398239135742
    9. ' depth' → logprob: -9.466398239135742
    10. '.' → logprob: -9.716398239135742

Token 135: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9360815286636353
    2. ')
' → logprob: -1.0610815286636353
    3. ',' → logprob: -1.6860815286636353
    4. '   ' → logprob: -2.6860814094543457
    5. '
' → logprob: -5.311081409454346
    6. ' )
' → logprob: -6.811081409454346
    7. ' )' → logprob: -7.436081409454346
    8. '+' → logprob: -8.061081886291504
    9. ',v' → logprob: -8.811081886291504
    10. ',
' → logprob: -8.936081886291504

Token 136: ' v' (ID: 323)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.22256708145141602
    2. ' depth' → logprob: -1.847567081451416
    3. ' v' → logprob: -4.097567081451416
    4. 'v' → logprob: -4.097567081451416
    5. ')' → logprob: -5.722567081451416
    6. ''' → logprob: -5.972567081451416
    7. ')
' → logprob: -6.847567081451416
    8. '(depth' → logprob: -7.472567081451416
    9. ' '' → logprob: -8.472566604614258
    10. '')' → logprob: -8.472566604614258

Token 137: '.children' (ID: 26331)
  Prédit: '.depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.5091493129730225
    2. 'depth' → logprob: -1.2591493129730225
    3. '.children' → logprob: -2.3841493129730225
    4. 'children' → logprob: -4.509149551391602
    5. ')' → logprob: -5.509149551391602
    6. ')
' → logprob: -6.759149551391602
    7. '
' → logprob: -6.759149551391602
    8. '+' → logprob: -6.759149551391602
    9. '.parent' → logprob: -7.384149551391602
    10. '   ' → logprob: -7.884149551391602

Token 138: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18098780512809753
    2. '   ' → logprob: -2.18098783493042
    3. ')
' → logprob: -3.05598783493042
    4. ',' → logprob: -5.68098783493042
    5. '
' → logprob: -7.18098783493042
    6. ' )' → logprob: -7.30598783493042
    7. ' for' → logprob: -8.180987358093262
    8. 'for' → logprob: -8.930987358093262
    9. ' )
' → logprob: -9.680987358093262
    10. '<|end|>' → logprob: -10.555987358093262

Token 139: ' depth' (ID: 13636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3577861487865448
    2. ')
' → logprob: -1.6077861785888672
    3. ')' → logprob: -3.482786178588867
    4. ' for' → logprob: -3.857786178588867
    5. 'depth' → logprob: -4.232786178588867
    6. ' depth' → logprob: -4.857786178588867
    7. ' v' → logprob: -4.982786178588867
    8. 'for' → logprob: -5.232786178588867
    9. ' )
' → logprob: -5.732786178588867
    10. '
' → logprob: -5.982786178588867

Token 140: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11421041190624237
    2. ')' → logprob: -2.864210367202759
    3. '
' → logprob: -3.114210367202759
    4. ')
' → logprob: -5.864210605621338
    5. ' for' → logprob: -6.739210605621338
    6. ',' → logprob: -6.739210605621338
    7. 'for' → logprob: -7.114210605621338
    8. '    
' → logprob: -8.23921012878418
    9. '  
' → logprob: -9.98921012878418
    10. '  ' → logprob: -10.36421012878418

Token 141: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4665994346141815
    2. '   ' → logprob: -1.091599464416504
    3. ' for' → logprob: -3.341599464416504
    4. 'depth' → logprob: -6.716599464416504
    5. 'return' → logprob: -8.216599464416504
    6. 'max' → logprob: -9.341599464416504
    7. '
' → logprob: -9.966599464416504
    8. '    
' → logprob: -10.091599464416504
    9. 'd' → logprob: -10.341599464416504
    10. 'next' → logprob: -10.466599464416504

Token 142: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011167853139340878
    2. 'return' → logprob: -5.636168003082275
    3. 'max' → logprob: -5.761168003082275
    4. ' for' → logprob: -5.886168003082275
    5. 'depth' → logprob: -7.136168003082275
    6. '   ' → logprob: -7.386168003082275
    7. 'd' → logprob: -9.386167526245117
    8. 'res' → logprob: -10.011167526245117
    9. 'result' → logprob: -11.011167526245117
    10. ' max' → logprob: -11.136167526245117

Token 143: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.45005321502685547
    2. 'v' → logprob: -1.4500532150268555
    3. 'len' → logprob: -2.9500532150268555
    4. ' len' → logprob: -3.0750532150268555
    5. ' not' → logprob: -3.9500532150268555
    6. 'not' → logprob: -4.9500532150268555
    7. 'depth' → logprob: -6.8250532150268555
    8. ' isinstance' → logprob: -7.0750532150268555
    9. ' depth' → logprob: -7.7000532150268555
    10. ' ' → logprob: -9.200053215026855

Token 144: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.0029539279639720917
    2. '.depth' → logprob: -6.627954006195068
    3. '.type' → logprob: -6.752954006195068
    4. '.' → logprob: -8.25295352935791
    5. ' .' → logprob: -9.25295352935791
    6. '.degree' → logprob: -10.62795352935791
    7. '.child' → logprob: -11.25295352935791
    8. 'children' → logprob: -11.37795352935791
    9. '.parent' → logprob: -11.62795352935791
    10. '.height' → logprob: -12.00295352935791

Token 145: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020023921970278025
    2. '[' → logprob: -6.752002239227295
    3. ' :' → logprob: -7.877002239227295
    4. ':
' → logprob: -8.752002716064453
    5. '==' → logprob: -8.877002716064453
    6. ' ==' → logprob: -10.502002716064453
    7. ' is' → logprob: -10.752002716064453
    8. '!=' → logprob: -10.877002716064453
    9. '=' → logprob: -11.127002716064453
    10. '):' → logprob: -11.252002716064453

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017428892897441983
    2. ' ' → logprob: -7.251742839813232
    3. ']' → logprob: -7.626742839813232
    4. ':' → logprob: -8.50174331665039
    5. ')' → logprob: -8.75174331665039
    6. '):' → logprob: -9.75174331665039
    7. ']:' → logprob: -10.37674331665039
    8. ']>' → logprob: -11.12674331665039
    9. ']==' → logprob: -11.25174331665039
    10. ')]' → logprob: -11.62674331665039

Token 147: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.9937465786933899
    2. ']' → logprob: -1.7437465190887451
    3. ':' → logprob: -2.618746519088745
    4. ')' → logprob: -2.618746519088745
    5. ' is' → logprob: -2.868746519088745
    6. '):' → logprob: -2.993746519088745
    7. ').' → logprob: -3.118746519088745
    8. ']:' → logprob: -3.868746519088745
    9. ' ].' → logprob: -3.993746519088745
    10. ' !=' → logprob: -4.118746757507324

Token 148: ' !=' (ID: 1666)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2240808010101318
    2. '.type' → logprob: -1.4740808010101318
    3. ':' → logprob: -1.9740808010101318
    4. '.is' → logprob: -2.599080801010132
    5. '.depth' → logprob: -2.599080801010132
    6. '==' → logprob: -2.724080801010132
    7. ' ==' → logprob: -3.474080801010132
    8. '!=' → logprob: -3.849080801010132
    9. '.' → logprob: -3.849080801010132
    10. ' !=' → logprob: -4.224081039428711

Token 149: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04520562291145325
    2. ' -' → logprob: -3.420205593109131
    3. 'None' → logprob: -4.795205593109131
    4. 'v' → logprob: -6.295205593109131
    5. ' None' → logprob: -7.295205593109131
    6. ' v' → logprob: -8.045206069946289
    7. '-v' → logprob: -8.420206069946289
    8. '   ' → logprob: -10.170206069946289
    9. '[]' → logprob: -10.545206069946289
    10. ' ' → logprob: -10.545206069946289

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '2' → logprob: -17.500003814697266
    4. '```' → logprob: -18.187503814697266
    5. '   ' → logprob: -18.625003814697266
    6. '-' → logprob: -18.750003814697266
    7. 'None' → logprob: -18.750003814697266
    8. '  ' → logprob: -19.125003814697266
    9. '0' → logprob: -19.375003814697266
    10. ':' → logprob: -19.750003814697266

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2526548206806183
    2. ':
' → logprob: -1.502654790878296
    3. '   ' → logprob: -8.502655029296875
    4. ' and' → logprob: -9.002655029296875
    5. ' :
' → logprob: -9.002655029296875
    6. '):
' → logprob: -9.252655029296875
    7. ' :' → logprob: -9.502655029296875
    8. '       ' → logprob: -10.377655029296875
    9. '):' → logprob: -10.752655029296875
    10. ',' → logprob: -11.627655029296875

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5373091697692871
    2. '
' → logprob: -0.9123091697692871
    3. '   ' → logprob: -5.037309169769287
    4. ' for' → logprob: -5.662309169769287
    5. '    
' → logprob: -6.662309169769287
    6. '        
' → logprob: -7.537309169769287
    7. '<|end|>' → logprob: -7.662309169769287
    8. 'for' → logprob: -7.787309169769287
    9. '  
' → logprob: -8.287309646606445
    10. '    ' → logprob: -8.287309646606445

Token 153: ' get' (ID: 717)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41489458084106445
    2. ' for' → logprob: -1.7898945808410645
    3. 'get' (adapté à ' get') → logprob: -1.9148945808410645
    4. '   ' → logprob: -4.4148945808410645
    5. ' get' → logprob: -4.7898945808410645
    6. '
' → logprob: -6.5398945808410645
    7. '       ' → logprob: -6.5398945808410645
    8. 'depth' → logprob: -6.7898945808410645
    9. 'return' → logprob: -7.7898945808410645
    10. ' depth' → logprob: -9.289894104003906

Token 154: '_depth' (ID: 44220)
  Prédit: '_depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depth' → logprob: -0.0002489423204679042
    2. 'depth' → logprob: -8.375248908996582
    3. '_' → logprob: -11.875248908996582
    4. ' depth' → logprob: -12.250248908996582
    5. '(v' → logprob: -12.500248908996582
    6. ' v' → logprob: -14.250248908996582
    7. '(depth' → logprob: -14.625248908996582
    8. 'v' → logprob: -14.750248908996582
    9. '_DEPTH' → logprob: -14.750248908996582
    10. '_children' → logprob: -15.625248908996582

Token 155: '(node' (ID: 13356)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0001612267515156418
    2. '(' → logprob: -8.750161170959473
    3. ' (' → logprob: -13.625161170959473
    4. '((' → logprob: -13.875161170959473
    5. '(
' → logprob: -15.250161170959473
    6. 'v' → logprob: -15.625161170959473
    7. '(s' → logprob: -17.37516212463379
    8. ' v' → logprob: -17.62516212463379
    9. ' ' → logprob: -18.62516212463379
    10. '[v' → logprob: -19.25016212463379

Token 156: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5940679907798767
    2. '(v' → logprob: -1.4690680503845215
    3. '[v' → logprob: -2.2190680503845215
    4. 'v' → logprob: -2.7190680503845215
    5. '.children' → logprob: -4.2190680503845215
    6. ')' → logprob: -4.8440680503845215
    7. '.v' → logprob: -4.8440680503845215
    8. '=v' → logprob: -5.5940680503845215
    9. 'children' → logprob: -6.0940680503845215
    10. '=' → logprob: -6.3440680503845215

Token 157: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.022311175242066383
    2. '(v' → logprob: -3.897311210632324
    3. 'v' → logprob: -7.522311210632324
    4. ')' → logprob: -8.272311210632324
    5. '[' → logprob: -8.397311210632324
    6. ',' → logprob: -8.522311210632324
    7. ',v' → logprob: -8.647311210632324
    8. ')[' → logprob: -9.272311210632324
    9. ' v' → logprob: -9.397311210632324
    10. '][' → logprob: -9.647311210632324

Token 158: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.00020926215802319348
    2. '.parent' → logprob: -9.000208854675293
    3. 'children' → logprob: -9.500208854675293
    4. '.' → logprob: -11.750208854675293
    5. ' .' → logprob: -13.500208854675293
    6. '].' → logprob: -14.875208854675293
    7. '.child' → logprob: -15.625208854675293
    8. '.s' → logprob: -15.625208854675293
    9. 'parent' → logprob: -16.12520980834961
    10. '.depth' → logprob: -16.25020980834961

Token 159: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005242000916041434
    2. '0' → logprob: -7.625524044036865
    3. ' [' → logprob: -11.375524520874023
    4. '   ' → logprob: -12.000524520874023
    5. '[
' → logprob: -12.375524520874023
    6. '[v' → logprob: -12.375524520874023
    7. 'v' → logprob: -13.000524520874023
    8. '])' → logprob: -13.500524520874023
    9. ' ' → logprob: -13.875524520874023
    10. ']' → logprob: -14.125524520874023

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.690834273584187e-05
    2. ' ' → logprob: -10.75003719329834
    3. '   ' → logprob: -12.25003719329834
    4. '[' → logprob: -12.37503719329834
    5. '-' → logprob: -13.75003719329834
    6. '1' → logprob: -13.81253719329834
    7. '])' → logprob: -14.18753719329834
    8. ']' → logprob: -15.12503719329834
    9. '       ' → logprob: -15.18753719329834
    10. 'index' → logprob: -15.31253719329834

Token 161: ']],' (ID: 37171)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.10477665811777115
    2. ']],' → logprob: -2.354776620864868
    3. ']' → logprob: -6.479776859283447
    4. ' ],' → logprob: -6.729776859283447
    5. ')],' → logprob: -7.229776859283447
    6. ']])' → logprob: -8.354776382446289
    7. '[' → logprob: -8.729776382446289
    8. '   ' → logprob: -8.729776382446289
    9. '].' → logprob: -8.979776382446289
    10. ']]' → logprob: -9.229776382446289

Token 162: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.1427275538444519
    2. ' depth' → logprob: -2.0177276134490967
    3. '    ' → logprob: -10.517727851867676
    4. 'v' → logprob: -11.767727851867676
    5. '   ' → logprob: -12.017727851867676
    6. '(depth' → logprob: -12.392727851867676
    7. ' ' → logprob: -13.517727851867676
    8. '       ' → logprob: -13.767727851867676
    9. ' v' → logprob: -13.892727851867676
    10. '        ' → logprob: -13.892727851867676

Token 163: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1602558046579361
    2. ' +' → logprob: -1.910255789756775
    3. ')' → logprob: -10.535255432128906
    4. '   ' → logprob: -13.535255432128906
    5. '1' → logprob: -14.035255432128906
    6. ' ' → logprob: -14.160255432128906
    7. ')+' → logprob: -14.410255432128906
    8. '+
' → logprob: -15.160255432128906
    9. '+)' → logprob: -15.160255432128906
    10. ' )' → logprob: -15.535255432128906

Token 164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011045700375689194
    2. ' ' → logprob: -9.125110626220703
    3. '   ' → logprob: -13.500110626220703
    4. '
' → logprob: -17.750110626220703
    5. '```' → logprob: -18.125110626220703
    6. '  ' → logprob: -18.500110626220703
    7. '       ' → logprob: -18.500110626220703
    8. ')' → logprob: -18.625110626220703
    9. '    ' → logprob: -19.750110626220703
    10. '2' → logprob: -20.312610626220703

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.500009536743164
    4. '```' → logprob: -17.250009536743164
    5. ')' → logprob: -17.375009536743164
    6. '
' → logprob: -18.000009536743164
    7. '<|end|>' → logprob: -19.437509536743164
    8. '  ' → logprob: -19.500009536743164
    9. '=' → logprob: -20.187509536743164
    10. '-' → logprob: -20.250009536743164

Token 166: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002439743373543024
    2. ')
' → logprob: -6.502439975738525
    3. '   ' → logprob: -7.002439975738525
    4. ' )' → logprob: -11.127439498901367
    5. '       ' → logprob: -11.502439498901367
    6. ' ' → logprob: -14.502439498901367
    7. ')

' → logprob: -14.752439498901367
    8. ')
' → logprob: -15.252439498901367
    9. ')return' → logprob: -15.502439498901367
    10. '<|end|>' → logprob: -15.752439498901367

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02156045474112034
    2. '<|end|>' → logprob: -4.1465606689453125
    3. ')' → logprob: -6.7715606689453125
    4. '    
' → logprob: -6.8965606689453125
    5. ' for' → logprob: -7.5215606689453125
    6. '    ' → logprob: -7.6465606689453125
    7. '
' → logprob: -7.6465606689453125
    8. ' ' → logprob: -7.7715606689453125
    9. '\n' → logprob: -7.8965606689453125
    10. '  
' → logprob: -8.521560668945312

Token 168: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3114725947380066
    2. 'if' (adapté à ' if') → logprob: -1.4364726543426514
    3. 'for' → logprob: -4.061472415924072
    4. ' if' → logprob: -4.436472415924072
    5. ' for' → logprob: -7.436472415924072
    6. 'return' → logprob: -8.81147289276123
    7. ' ' → logprob: -11.43647289276123
    8. '       ' → logprob: -11.93647289276123
    9. '	if' → logprob: -11.93647289276123
    10. '  ' → logprob: -12.06147289276123

Token 169: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.3863390386104584
    2. 'v' → logprob: -1.7613390684127808
    3. ' len' → logprob: -2.136338949203491
    4. 'len' → logprob: -3.511338949203491
    5. '   ' → logprob: -8.13633918762207
    6. ' ' → logprob: -8.51133918762207
    7. '(len' → logprob: -9.76133918762207
    8. '  ' → logprob: -10.01133918762207
    9. '    ' → logprob: -10.38633918762207
    10. '(v' → logprob: -11.07383918762207

Token 170: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.0016961266519501805
    2. ' .' → logprob: -6.5016961097717285
    3. '.' → logprob: -8.626696586608887
    4. 'children' → logprob: -12.001696586608887
    5. '.type' → logprob: -13.376696586608887
    6. '.s' → logprob: -13.501696586608887
    7. '.depth' → logprob: -13.751696586608887
    8. '	children' → logprob: -13.876696586608887
    9. ' children' → logprob: -14.001696586608887
    10. '.degree' → logprob: -14.251696586608887

Token 171: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02832886390388012
    2. 'and' → logprob: -4.278328895568848
    3. ' and' → logprob: -4.403328895568848
    4. '[-' → logprob: -7.028328895568848
    5. '>' → logprob: -8.153328895568848
    6. ':' → logprob: -8.278328895568848
    7. 'len' → logprob: -9.153328895568848
    8. '   ' → logprob: -9.278328895568848
    9. '1' → logprob: -10.028328895568848
    10. ':
' → logprob: -10.528328895568848

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013136898633092642
    2. ' ' → logprob: -7.00131368637085
    3. '-' → logprob: -8.251314163208008
    4. '0' → logprob: -9.751314163208008
    5. 'len' → logprob: -10.501314163208008
    6. ' -' → logprob: -11.001314163208008
    7. '   ' → logprob: -11.251314163208008
    8. '
' → logprob: -11.376314163208008
    9. '>' → logprob: -12.626314163208008
    10. ']' → logprob: -13.313814163208008

Token 173: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026594260707497597
    2. ' !=' → logprob: -3.7765941619873047
    3. ']!=' → logprob: -6.151594161987305
    4. '!=' → logprob: -7.401594161987305
    5. ' ]' → logprob: -7.901594161987305
    6. ')' → logprob: -9.026594161987305
    7. '!=-' → logprob: -10.026594161987305
    8. '   ' → logprob: -10.401594161987305
    9. '[' → logprob: -11.401594161987305
    10. ' ' → logprob: -12.026594161987305

Token 174: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.016127508133649826
    2. '!=' → logprob: -4.141127586364746
    3. '!=-' → logprob: -9.391127586364746
    4. ' ' → logprob: -12.516127586364746
    5. ')' → logprob: -12.891127586364746
    6. ')!=' → logprob: -14.016127586364746
    7. ']!=' → logprob: -14.641127586364746
    8. '[' → logprob: -14.766127586364746
    9. ' is' → logprob: -14.891127586364746
    10. '   ' → logprob: -15.266127586364746

Token 175: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10021001845598221
    2. ' -' → logprob: -2.350209951400757
    3. ' ' → logprob: -12.975210189819336
    4. '   ' → logprob: -14.350210189819336
    5. '1' → logprob: -15.975210189819336
    6. '  ' → logprob: -16.350210189819336
    7. '−' → logprob: -16.725210189819336
    8. ' ' → logprob: -16.850210189819336
    9. '```' → logprob: -18.662710189819336
    10. '	' → logprob: -18.725210189819336

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.674858301877975e-05
    2. '-' → logprob: -9.375096321105957
    3. ' ' → logprob: -12.125096321105957
    4. ' -' → logprob: -12.500096321105957
    5. '   ' → logprob: -13.625096321105957
    6. '```' → logprob: -14.562596321105957
    7. '<|end|>' → logprob: -14.812596321105957
    8. '  ' → logprob: -15.375096321105957
    9. '...' → logprob: -17.312597274780273
    10. '#' → logprob: -17.625097274780273

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.262674480676651
    2. ':
' → logprob: -1.5126744508743286
    3. '       ' → logprob: -4.637674331665039
    4. '):
' → logprob: -7.512674331665039
    5. '   ' → logprob: -8.512674331665039
    6. ',' → logprob: -8.887674331665039
    7. '):' → logprob: -9.387674331665039
    8. ')' → logprob: -12.012674331665039
    9. ' :
' → logprob: -12.012674331665039
    10. ':

' → logprob: -12.262674331665039

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005756357219070196
    2. ' get' → logprob: -5.880756378173828
    3. 'get' → logprob: -5.880756378173828
    4. '   ' → logprob: -9.505756378173828
    5. '     ' → logprob: -10.505756378173828
    6. '
' → logprob: -11.130756378173828
    7. '      ' → logprob: -11.505756378173828
    8. '           ' → logprob: -11.755756378173828
    9. '    ' → logprob: -12.255756378173828
    10. '        
' → logprob: -13.005756378173828

Token 179: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' (adapté à ' get') → logprob: -0.06199951097369194
    2. ' get' → logprob: -2.811999559402466
    3. '       ' → logprob: -10.686999320983887
    4. '   ' → logprob: -12.061999320983887
    5. '	get' → logprob: -13.561999320983887
    6. '
' → logprob: -14.186999320983887
    7. '.get' → logprob: -15.061999320983887
    8. '(get' → logprob: -15.311999320983887
    9. ' ' → logprob: -16.062000274658203
    10. ',get' → logprob: -16.187000274658203

Token 180: '_depth' (ID: 44220)
  Prédit: '_depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depth' → logprob: -2.2603901015827432e-05
    2. 'depth' → logprob: -10.750022888183594
    3. '_de' → logprob: -14.875022888183594
    4. '_DEPTH' → logprob: -15.250022888183594
    5. '_' → logprob: -15.625022888183594
    6. ' _' → logprob: -16.125022888183594
    7. ' depth' → logprob: -16.375022888183594
    8. '_token' → logprob: -17.250022888183594
    9. '```' → logprob: -17.250022888183594
    10. '_d' → logprob: -17.375022888183594

Token 181: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -13.875000953674316
    3. ' (' → logprob: -17.000001907348633
    4. '[node' → logprob: -18.250001907348633
    5. '(n' → logprob: -19.125001907348633
    6. '(Node' → logprob: -19.250001907348633
    7. 'node' → logprob: -19.750001907348633
    8. '(
' → logprob: -19.750001907348633
    9. ' node' → logprob: -19.875001907348633
    10. '(nodes' → logprob: -20.000001907348633

Token 182: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0020441520027816296
    2. '[node' → logprob: -6.252044200897217
    3. 'list' → logprob: -9.252043724060059
    4. 'List' → logprob: -11.627043724060059
    5. '[v' → logprob: -12.502043724060059
    6. '[_' → logprob: -12.752043724060059
    7. '[' → logprob: -13.252043724060059
    8. 'node' → logprob: -13.752043724060059
    9. '(node' → logprob: -15.627043724060059
    10. '_List' → logprob: -15.752043724060059

Token 183: '[v' (ID: 36561)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.0789046585559845
    2. '[v' → logprob: -2.578904628753662
    3. '[' → logprob: -11.32890510559082
    4. '[n' → logprob: -13.70390510559082
    5. ' [' → logprob: -14.20390510559082
    6. 'v' → logprob: -14.32890510559082
    7. ')[' → logprob: -15.95390510559082
    8. '[
' → logprob: -16.45390510559082
    9. '   ' → logprob: -16.70390510559082
    10. '[val' → logprob: -17.07890510559082

Token 184: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.0019355426775291562
    2. 'children' → logprob: -6.2519354820251465
    3. '[v' → logprob: -12.251935958862305
    4. '.' → logprob: -14.126935958862305
    5. '.v' → logprob: -14.376935958862305
    6. ' .' → logprob: -15.376935958862305
    7. '[' → logprob: -15.751935958862305
    8. '.Children' → logprob: -15.876935958862305
    9. '	children' → logprob: -16.126935958862305
    10. ' children' → logprob: -16.251935958862305

Token 185: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026482360437512398
    2. '1' → logprob: -3.651482343673706
    3. '   ' → logprob: -9.526482582092285
    4. ' [' → logprob: -9.776482582092285
    5. '
' → logprob: -11.401482582092285
    6. '][' → logprob: -11.776482582092285
    7. ' ' → logprob: -11.901482582092285
    8. '```' → logprob: -12.588982582092285
    9. '[
' → logprob: -12.651482582092285
    10. ']' → logprob: -12.838982582092285

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -11.375024795532227
    3. '   ' → logprob: -12.750024795532227
    4. '0' → logprob: -13.250024795532227
    5. '
' → logprob: -13.375024795532227
    6. '[' → logprob: -13.625024795532227
    7. ']' → logprob: -13.750024795532227
    8. '```' → logprob: -14.000024795532227
    9. 'children' → logprob: -14.187524795532227
    10. '-' → logprob: -15.375024795532227

Token 187: ']],' (ID: 37171)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -1.9504606825648807e-05
    2. ']],' → logprob: -11.250019073486328
    3. ' ],' → logprob: -12.750019073486328
    4. ')],' → logprob: -13.750019073486328
    5. '"],' → logprob: -14.125019073486328
    6. ''],' → logprob: -14.250019073486328
    7. ']' → logprob: -15.000019073486328
    8. '()],' → logprob: -15.125019073486328
    9. ':],' → logprob: -15.250019073486328
    10. '   ' → logprob: -16.000019073486328

Token 188: ' depth' (ID: 13636)
  Prédit: ' depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' depth' → logprob: -0.16023163497447968
    2. 'depth' → logprob: -1.910231590270996
    3. '(depth' → logprob: -12.285231590270996
    4. '    ' → logprob: -13.660231590270996
    5. '   ' → logprob: -14.785231590270996
    6. ' ' → logprob: -14.785231590270996
    7. '_depth' → logprob: -15.035231590270996
    8. '.depth' → logprob: -15.410231590270996
    9. '-depth' → logprob: -16.285232543945312
    10. ')' → logprob: -16.285232543945312

Token 189: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.009757975116372108
    2. '+' → logprob: -4.634757995605469
    3. ' ' → logprob: -13.634757995605469
    4. ')' → logprob: -14.759757995605469
    5. ' ' → logprob: -15.259757995605469
    6. ' +
' → logprob: -16.75975799560547
    7. '    ' → logprob: -17.13475799560547
    8. ' )' → logprob: -17.50975799560547
    9. '   ' → logprob: -17.50975799560547
    10. ' plus' → logprob: -18.63475799560547

Token 190: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00862320140004158
    2. ' ' → logprob: -4.758623123168945
    3. '   ' → logprob: -12.633623123168945
    4. '+' → logprob: -13.383623123168945
    5. ')' → logprob: -14.008623123168945
    6. '```' → logprob: -14.946123123168945
    7. '  ' → logprob: -15.008623123168945
    8. '2' → logprob: -15.196123123168945
    9. '    ' → logprob: -15.258623123168945
    10. '       ' → logprob: -15.258623123168945

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.069664333248511e-05
    2. ' ' → logprob: -10.875020980834961
    3. '+' → logprob: -13.875020980834961
    4. '2' → logprob: -14.750020980834961
    5. '   ' → logprob: -16.12502098083496
    6. ')' → logprob: -16.50002098083496
    7. '```' → logprob: -16.87502098083496
    8. '
' → logprob: -17.75002098083496
    9. '           ' → logprob: -18.56252098083496
    10. ' +' → logprob: -18.56252098083496

Token 192: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00042804674012586474
    2. '   ' → logprob: -8.250428199768066
    3. ')
' → logprob: -8.750428199768066
    4. ')return' → logprob: -12.500428199768066
    5. '<|end|>' → logprob: -13.250428199768066
    6. ' )' → logprob: -14.125428199768066
    7. '
' → logprob: -14.500428199768066
    8. ')#' → logprob: -14.875428199768066
    9. '#' → logprob: -15.500428199768066
    10. ')

' → logprob: -16.00042724609375

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002219368703663349
    2. '<|end|>' → logprob: -6.752219200134277
    3. 'return' → logprob: -7.502219200134277
    4. ')' → logprob: -8.377219200134277
    5. '
' → logprob: -9.377219200134277
    6. '	return' → logprob: -9.752219200134277
    7. ' return' → logprob: -10.252219200134277
    8. '    
' → logprob: -10.252219200134277
    9. '<|end|>' → logprob: -11.377219200134277
    10. '\n' → logprob: -11.377219200134277

Token 194: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05917201563715935
    2. 'return' (adapté à ' return') → logprob: -3.1841719150543213
    3. '<|end|>' → logprob: -4.5591721534729
    4. '	return' → logprob: -6.0591721534729
    5. ' return' → logprob: -6.5591721534729
    6. ')' → logprob: -7.8091721534729
    7. '
' → logprob: -7.8091721534729
    8. ' ' → logprob: -8.184171676635742
    9. '\n' → logprob: -8.934171676635742
    10. '    
' → logprob: -9.184171676635742

Token 195: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.044888030737638474
    2. 'depth' → logprob: -3.5448880195617676
    3. 'None' → logprob: -4.794888019561768
    4. ' v' → logprob: -5.169888019561768
    5. ' None' → logprob: -7.294888019561768
    6. ' depth' → logprob: -7.919888019561768
    7. '0' → logprob: -11.044888496398926
    8. '(depth' → logprob: -12.669888496398926
    9. 'none' → logprob: -13.169888496398926
    10. ' ' → logprob: -14.419888496398926

Token 196: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.07782194018363953
    2. '.' → logprob: -2.702821969985962
    3. 'depth' → logprob: -5.452821731567383
    4. '
' → logprob: -6.452821731567383
    5. '<|end|>' → logprob: -7.077821731567383
    6. '.v' → logprob: -8.827821731567383
    7. '-depth' → logprob: -9.077821731567383
    8. '_depth' → logprob: -9.077821731567383
    9. '.
' → logprob: -9.077821731567383
    10. ' ' → logprob: -9.202821731567383

Token 197: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8603788614273071
    2. 'for' → logprob: -1.4853788614273071
    3. '#' → logprob: -2.1103787422180176
    4. 'def' → logprob: -2.2353787422180176
    5. '<|end|>' → logprob: -2.4853787422180176
    6. 'v' → logprob: -4.360378742218018
    7. ' for' → logprob: -4.985378742218018
    8. 'n' → logprob: -5.110378742218018
    9. ' 
' → logprob: -5.485378742218018
    10. '  
' → logprob: -6.485378742218018

Token 199: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.554785966873169
    2. 'main' → logprob: -1.054785966873169
    3. 'build' → logprob: -3.429785966873169
    4. ' build' → logprob: -4.17978572845459
    5. 'get' → logprob: -4.30478572845459
    6. ' get' → logprob: -5.05478572845459
    7. 'set' → logprob: -5.67978572845459
    8. ' set' → logprob: -6.67978572845459
    9. 'calculate' → logprob: -6.80478572845459
    10. 'compute' → logprob: -6.92978572845459

Token 200: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.19474497437477112
    2. '_degree' → logprob: -2.1947450637817383
    3. '_s' → logprob: -3.3197450637817383
    4. '_children' → logprob: -4.069745063781738
    5. '_depth' → logprob: -4.694745063781738
    6. '_type' → logprob: -6.694745063781738
    7. 'height' → logprob: -7.694745063781738
    8. '_he' → logprob: -7.819745063781738
    9. '_child' → logprob: -8.694745063781738
    10. '_parent' → logprob: -8.819745063781738

Token 201: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.009127615951001644
    2. '(node' → logprob: -4.759127616882324
    3. '(' → logprob: -7.634127616882324
    4. '(root' → logprob: -11.134127616882324
    5. '(parent' → logprob: -12.009127616882324
    6. '(n' → logprob: -12.384127616882324
    7. ' (' → logprob: -13.259127616882324
    8. '(vertex' → logprob: -14.134127616882324
    9. '(p' → logprob: -15.009127616882324
    10. '(child' → logprob: -15.259127616882324

Token 202: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3285348415374756
    2. '):' → logprob: -1.3285348415374756
    3. '):
' → logprob: -4.203535079956055
    4. ',v' → logprob: -9.578535079956055
    5. '):
' → logprob: -9.953535079956055
    6. ' ,' → logprob: -10.953535079956055
    7. ')' → logprob: -11.078535079956055
    8. ' ):' → logprob: -11.203535079956055
    9. '):

' → logprob: -11.328535079956055
    10. '(v' → logprob: -11.453535079956055

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7587038278579712
    2. ' if' → logprob: -0.7587038278579712
    3. 'if' → logprob: -2.7587037086486816
    4. 'height' → logprob: -10.50870418548584
    5. '	if' → logprob: -11.25870418548584
    6. ' height' → logprob: -11.63370418548584
    7. ' h' → logprob: -11.75870418548584
    8. 'h' → logprob: -12.13370418548584
    9. ' heights' → logprob: -12.25870418548584
    10. 'max' → logprob: -12.88370418548584

Token 204: ' h' (ID: 312)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007061177166178823
    2. '   ' → logprob: -7.375706195831299
    3. ' if' → logprob: -10.12570571899414
    4. 'left' → logprob: -10.87570571899414
    5. '#' → logprob: -11.62570571899414
    6. 'height' → logprob: -12.75070571899414
    7. 'h' (adapté à ' h') → logprob: -13.00070571899414
    8. 'he' → logprob: -13.62570571899414
    9. 'l' → logprob: -13.87570571899414
    10. 'child' → logprob: -14.37570571899414

Token 205: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28547176718711853
    2. '=' → logprob: -1.410471796989441
    3. '   ' → logprob: -5.6604719161987305
    4. 'if' → logprob: -7.5354719161987305
    5. '=[]' → logprob: -10.03547191619873
    6. 'f' → logprob: -10.16047191619873
    7. '_' → logprob: -10.28547191619873
    8. ' ' → logprob: -10.28547191619873
    9. ' if' → logprob: -10.66047191619873
    10. ',' → logprob: -10.78547191619873

Token 206: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5764848589897156
    2. ' =' → logprob: -0.8264848589897156
    3. ',' → logprob: -7.576484680175781
    4. '=None' → logprob: -10.951484680175781
    5. '   ' → logprob: -12.451484680175781
    6. 'if' → logprob: -12.951484680175781
    7. ' ' → logprob: -13.326484680175781
    8. '1' → logprob: -13.576484680175781
    9. ')' → logprob: -13.951484680175781
    10. '=[]' → logprob: -14.451484680175781

Token 207: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01042063720524311
    2. ' h' → logprob: -4.635420799255371
    3. '0' → logprob: -7.510420799255371
    4. '=' → logprob: -10.260420799255371
    5. '-' → logprob: -10.260420799255371
    6. ' ' → logprob: -11.010420799255371
    7. 'v' → logprob: -11.885420799255371
    8. '=h' → logprob: -11.885420799255371
    9. ' =' → logprob: -12.385420799255371
    10. ' -' → logprob: -12.385420799255371

Token 208: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0029816252645105124
    2. '1' → logprob: -5.877981662750244
    3. ' =' → logprob: -9.377981185913086
    4. '0' → logprob: -10.252981185913086
    5. ',' → logprob: -10.502981185913086
    6. '=' → logprob: -10.627981185913086
    7. ' ' → logprob: -13.252981185913086
    8. '=None' → logprob: -13.627981185913086
    9. 'h' → logprob: -14.252981185913086
    10. '
' → logprob: -15.252981185913086

Token 209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142397284507751
    2. ' =' → logprob: -1.7014240026474
    3. ',' → logprob: -11.576423645019531
    4. '=None' → logprob: -14.326423645019531
    5. '0' → logprob: -15.826423645019531
    6. ' ' → logprob: -15.951423645019531
    7. '=[]' → logprob: -17.07642364501953
    8. '1' → logprob: -17.07642364501953
    9. '=

' → logprob: -17.20142364501953
    10. ')' → logprob: -17.32642364501953

Token 210: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005874990485608578
    2. '-' → logprob: -5.755875110626221
    3. ' ' → logprob: -6.005875110626221
    4. ' -' → logprob: -8.880874633789062
    5. '(' → logprob: -9.630874633789062
    6. ' (' → logprob: -11.255874633789062
    7. '   ' → logprob: -12.380874633789062
    8. '(-' → logprob: -12.505874633789062
    9. '[' → logprob: -13.505874633789062
    10. '
' → logprob: -13.630874633789062

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01486185658723116
    2. '-' → logprob: -4.389862060546875
    3. '(' → logprob: -6.389862060546875
    4. ' ' → logprob: -7.764862060546875
    5. ' -' → logprob: -9.014862060546875
    6. '(-' → logprob: -9.389862060546875
    7. ' (' → logprob: -10.514862060546875
    8. '   ' → logprob: -12.139862060546875
    9. '[' → logprob: -12.389862060546875
    10. '
' → logprob: -13.514862060546875

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005890139145776629
    2. '   ' → logprob: -7.750588893890381
    3. 'if' → logprob: -10.375589370727539
    4. ' ,' → logprob: -10.375589370727539
    5. '
' → logprob: -10.500589370727539
    6. ',
' → logprob: -11.250589370727539
    7. ' if' → logprob: -11.375589370727539
    8. ',h' → logprob: -11.375589370727539
    9. ',None' → logprob: -12.125589370727539
    10. '<|end|>' → logprob: -12.125589370727539

Token 213: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006716674659401178
    2. ' ' → logprob: -5.006716728210449
    3. '<|end|>' → logprob: -15.06921672821045
    4. '   ' → logprob: -15.13171672821045
    5. '  ' → logprob: -15.31921672821045
    6. ' ' → logprob: -16.444215774536133
    7. '1' → logprob: -16.694215774536133
    8. '-' → logprob: -17.194215774536133
    9. '
' → logprob: -17.319215774536133
    10. ' -' → logprob: -17.381715774536133

Token 214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.967624019831419e-05
    2. ' ' → logprob: -9.750060081481934
    3. '-' → logprob: -14.125060081481934
    4. 'h' → logprob: -15.687560081481934
    5. '1' → logprob: -16.250059127807617
    6. 'def' → logprob: -16.750059127807617
    7. 'v' → logprob: -17.312559127807617
    8. '   ' → logprob: -17.375059127807617
    9. ' -' → logprob: -17.562559127807617
    10. 'max' → logprob: -17.625059127807617

Token 215: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3552551865577698
    2. '
' → logprob: -1.230255126953125
    3. '<|end|>' → logprob: -5.355255126953125
    4. ' if' → logprob: -6.480255126953125
    5. 'if' → logprob: -8.105255126953125
    6. '    
' → logprob: -9.605255126953125
    7. '<|end|>' → logprob: -10.480255126953125
    8. ',' → logprob: -10.480255126953125
    9. '  
' → logprob: -10.855255126953125
    10. ' ' → logprob: -11.105255126953125

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21573899686336517
    2. 'if' → logprob: -2.2157390117645264
    3. ' if' → logprob: -2.4657390117645264
    4. 'for' → logprob: -10.965739250183105
    5. '	if' → logprob: -11.840739250183105
    6. ' for' → logprob: -12.840739250183105
    7. '  ' → logprob: -13.090739250183105
    8. ' ' → logprob: -13.215739250183105
    9. '    
' → logprob: -13.840739250183105
    10. '
' → logprob: -13.840739250183105

Token 217: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003754999197553843
    2. 'for' → logprob: -8.500375747680664
    3. ' if' → logprob: -9.250375747680664
    4. '   ' → logprob: -9.500375747680664
    5. '	if' → logprob: -15.000375747680664
    6. '#' (adapté à ' #') → logprob: -15.000375747680664
    7. 'If' → logprob: -16.250375747680664
    8. 'children' → logprob: -16.250375747680664
    9. 'h' → logprob: -16.375375747680664
    10. '    
' → logprob: -16.625375747680664

Token 218: ' leaf' (ID: 25882)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0015639002667739987
    2. 'for' → logprob: -7.126564025878906
    3. ' if' → logprob: -7.251564025878906
    4. '   ' → logprob: -10.001564025878906
    5. 'children' → logprob: -12.751564025878906
    6. 'h' → logprob: -14.251564025878906
    7. ' for' → logprob: -15.001564025878906
    8. 'def' → logprob: -15.751564025878906
    9. '	if' → logprob: -15.751564025878906
    10. 'child' → logprob: -15.876564025878906

Token 219: ''s' (ID: 885)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38996413350105286
    2. 'if' → logprob: -1.1399641036987305
    3. '   ' → logprob: -6.0149641036987305
    4. '<|end|>' → logprob: -8.01496410369873
    5. '<|end|>' → logprob: -9.26496410369873
    6. '
' → logprob: -9.76496410369873
    7. 'for' → logprob: -10.51496410369873
    8. ' nodes' → logprob: -10.88996410369873
    9. ' for' → logprob: -11.01496410369873
    10. ' node' → logprob: -11.01496410369873

Token 220: ' height' (ID: 4679)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4742950201034546
    2. ' if' → logprob: -0.9742950201034546
    3. '   ' → logprob: -8.849294662475586
    4. 'def' → logprob: -11.099294662475586
    5. ' ' → logprob: -11.349294662475586
    6. 'If' → logprob: -12.099294662475586
    7. ' node' → logprob: -12.224294662475586
    8. 's' → logprob: -12.224294662475586
    9. 'return' → logprob: -12.224294662475586
    10. '<|end|>' → logprob: -12.599294662475586

Token 221: ' is' (ID: 382)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6337524056434631
    2. '   ' → logprob: -1.0087523460388184
    3. 'if' → logprob: -2.2587523460388184
    4. ' =' → logprob: -9.258752822875977
    5. '<|end|>' → logprob: -10.133752822875977
    6. ',' → logprob: -10.383752822875977
    7. '	if' → logprob: -11.008752822875977
    8. ' is' → logprob: -11.133752822875977
    9. '
' → logprob: -11.633752822875977
    10. 'def' → logprob: -12.008752822875977

Token 222: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008784156292676926
    2. ' ' → logprob: -4.758784294128418
    3. '   ' → logprob: -8.883784294128418
    4. 'zero' → logprob: -11.758784294128418
    5. ' zero' → logprob: -11.883784294128418
    6. '1' → logprob: -12.508784294128418
    7. ' =' → logprob: -12.508784294128418
    8. '=' → logprob: -13.258784294128418
    9. '  ' → logprob: -13.508784294128418
    10. 'def' → logprob: -13.633784294128418

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013403621269389987
    2. ' ' → logprob: -6.626340389251709
    3. '   ' → logprob: -11.87633991241455
    4. '1' → logprob: -12.12633991241455
    5. 'zero' → logprob: -14.50133991241455
    6. '
' → logprob: -14.75133991241455
    7. '-' → logprob: -14.75133991241455
    8. '=' → logprob: -16.126340866088867
    9. 'def' → logprob: -16.376340866088867
    10. '  ' → logprob: -16.376340866088867

Token 224: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06431463360786438
    2. ' if' → logprob: -2.939314603805542
    3. 'if' → logprob: -4.939314842224121
    4. '
' → logprob: -6.689314842224121
    5. '<|end|>' → logprob: -7.189314842224121
    6. ',' → logprob: -9.439314842224121
    7. '<|end|>' → logprob: -10.189314842224121
    8. '    
' → logprob: -10.314314842224121
    9. '  ' → logprob: -10.814314842224121
    10. ' ' → logprob: -11.439314842224121

Token 225: ' children' (ID: 3953)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5049168467521667
    2. 'if' → logprob: -1.5049169063568115
    3. '   ' → logprob: -1.7549169063568115
    4. ' for' → logprob: -7.129916667938232
    5. 'for' → logprob: -7.379916667938232
    6. ' ' → logprob: -10.75491714477539
    7. '  ' → logprob: -11.37991714477539
    8. '
' → logprob: -11.50491714477539
    9. '	if' → logprob: -11.87991714477539
    10. '    
' → logprob: -12.50491714477539

Token 226: ':' (ID: 25)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16088515520095825
    2. ' if' → logprob: -2.2858850955963135
    3. ' =' → logprob: -3.7858850955963135
    4. 'for' → logprob: -4.785885334014893
    5. '=' → logprob: -5.410885334014893
    6. 's' → logprob: -6.160885334014893
    7. 'height' → logprob: -6.410885334014893
    8. '=[]' → logprob: -6.410885334014893
    9. ':' → logprob: -6.660885334014893
    10. ' are' → logprob: -7.285885334014893

Token 227: ' []
' (ID: 8911)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5240792036056519
    2. '   ' → logprob: -1.5240792036056519
    3. 'if' → logprob: -2.5240793228149414
    4. ' for' → logprob: -2.5240793228149414
    5. 'for' → logprob: -3.5240793228149414
    6. 'def' → logprob: -9.649079322814941
    7. '<|end|>' → logprob: -9.774079322814941
    8. '	if' → logprob: -9.899079322814941
    9. ' ' → logprob: -10.399079322814941
    10. '```' → logprob: -10.524079322814941

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024906395003199577
    2. 'if' → logprob: -4.024906158447266
    3. ' if' → logprob: -5.024906158447266
    4. 'for' → logprob: -9.149906158447266
    5. ' for' → logprob: -10.899906158447266
    6. '<|end|>' → logprob: -11.024906158447266
    7. '
' → logprob: -11.899906158447266
    8. 'def' → logprob: -12.524906158447266
    9. '    
' → logprob: -12.899906158447266
    10. ',' → logprob: -12.899906158447266

Token 229: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005517496261745691
    2. ' if' → logprob: -5.755517482757568
    3. '   ' → logprob: -6.755517482757568
    4. 'for' → logprob: -6.755517482757568
    5. ' for' → logprob: -12.380517959594727
    6. '	if' → logprob: -14.130517959594727
    7. 'h' → logprob: -14.255517959594727
    8. '    
' → logprob: -14.755517959594727
    9. '#' → logprob: -14.880517959594727
    10. ' ' → logprob: -15.005517959594727

Token 230: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5620315074920654
    2. 'not' → logprob: -0.9370315074920654
    3. 'len' → logprob: -3.9370315074920654
    4. 'v' → logprob: -4.1870317459106445
    5. ' len' → logprob: -6.0620317459106445
    6. ' v' → logprob: -6.8120317459106445
    7. '(not' → logprob: -11.437031745910645
    8. ' ' → logprob: -12.062031745910645
    9. '	not' → logprob: -12.437031745910645
    10. '(len' → logprob: -12.437031745910645

Token 231: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.28116005659103394
    2. ' v' → logprob: -1.4061601161956787
    3. '	v' → logprob: -12.781160354614258
    4. '(v' → logprob: -13.031160354614258
    5. ' hasattr' → logprob: -13.531160354614258
    6. 'node' → logprob: -14.031160354614258
    7. ' ' → logprob: -14.281160354614258
    8. ' ' → logprob: -14.656160354614258
    9. '[v' → logprob: -14.781160354614258
    10. '   ' → logprob: -15.406160354614258

Token 232: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -3.130576806142926e-05
    2. '.' → logprob: -11.000031471252441
    3. 'children' → logprob: -11.250031471252441
    4. '.height' → logprob: -14.500031471252441
    5. '.child' → logprob: -14.875031471252441
    6. ' .' → logprob: -15.000031471252441
    7. '.parent' → logprob: -15.875031471252441
    8. '.depth' → logprob: -16.625030517578125
    9. '.s' → logprob: -16.750030517578125
    10. '.Children' → logprob: -17.250030517578125

Token 233: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01869414746761322
    2. ':
' → logprob: -4.018693923950195
    3. ':return' → logprob: -7.643693923950195
    4. '[' → logprob: -10.643693923950195
    5. '   ' → logprob: -11.018693923950195
    6. ' or' → logprob: -11.143693923950195
    7. ' :' → logprob: -12.518693923950195
    8. 'or' → logprob: -13.018693923950195
    9. ':

' → logprob: -13.893693923950195
    10. 'return' → logprob: -14.393693923950195

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004537992645055056
    2. '   ' → logprob: -6.379538059234619
    3. 'return' → logprob: -6.629538059234619
    4. ' return' → logprob: -6.629538059234619
    5. ':return' → logprob: -9.254537582397461
    6. ':' → logprob: -9.879537582397461
    7. ':
' → logprob: -11.254537582397461
    8. ',' → logprob: -11.629537582397461
    9. '	return' → logprob: -12.254537582397461
    10. '      ' → logprob: -13.004537582397461

Token 235: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7646327018737793
    2. 'return' (adapté à ' return') → logprob: -0.7646327018737793
    3. '   ' → logprob: -3.1396327018737793
    4. 'v' → logprob: -3.8896327018737793
    5. ' v' → logprob: -5.264632701873779
    6. '	return' → logprob: -10.764633178710938
    7. '       ' → logprob: -10.889633178710938
    8. ' ' → logprob: -11.389633178710938
    9. '  ' → logprob: -12.514633178710938
    10. '    ' → logprob: -12.639633178710938

Token 236: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859134554862976
    2. ' ' → logprob: -3.048591375350952
    3. 'v' → logprob: -13.298591613769531
    4. '   ' → logprob: -13.673591613769531
    5. ' v' → logprob: -14.423591613769531
    6. '  ' → logprob: -14.923591613769531
    7. ' ' → logprob: -15.673591613769531
    8. 'h' → logprob: -16.61109161376953
    9. '
' → logprob: -17.54859161376953
    10. '    ' → logprob: -17.67359161376953

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.865583706414327e-05
    2. ' ' → logprob: -9.25009822845459
    3. 'v' → logprob: -13.37509822845459
    4. 'h' → logprob: -14.12509822845459
    5. '   ' → logprob: -17.500099182128906
    6. '1' → logprob: -17.875099182128906
    7. ' v' → logprob: -18.312599182128906
    8. '-' → logprob: -18.500099182128906
    9. '۰' → logprob: -18.562599182128906
    10. 'return' → logprob: -19.187599182128906

Token 238: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14365729689598083
    2. '
' → logprob: -2.3936572074890137
    3. '    
' → logprob: -3.2686572074890137
    4. 'if' → logprob: -6.268657207489014
    5. '  
' → logprob: -6.643657207489014
    6. ' if' → logprob: -7.518657207489014
    7. '   
' → logprob: -8.018657684326172
    8. ' 
' → logprob: -9.268657684326172
    9. '

' → logprob: -9.393657684326172
    10. 'else' → logprob: -10.018657684326172

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13609027862548828
    2. 'if' → logprob: -2.5110902786254883
    3. ' if' → logprob: -3.1360902786254883
    4. 'h' → logprob: -7.011090278625488
    5. '    
' → logprob: -7.511090278625488
    6. 'for' → logprob: -7.761090278625488
    7. '
' → logprob: -8.011090278625488
    8. ' h' → logprob: -8.761090278625488
    9. ' for' → logprob: -8.886090278625488
    10. 'v' → logprob: -10.886090278625488

Token 240: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.049811311066150665
    2. 'h' → logprob: -3.299811363220215
    3. '   ' → logprob: -4.674811363220215
    4. 'for' → logprob: -6.674811363220215
    5. ' if' → logprob: -6.924811363220215
    6. '#' → logprob: -10.299811363220215
    7. 'children' → logprob: -10.799811363220215
    8. 'else' → logprob: -11.174811363220215
    9. 'child' → logprob: -11.174811363220215
    10. 'c' → logprob: -11.549811363220215

Token 241: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11224506050348282
    2. ' v' → logprob: -2.3622450828552246
    3. 'len' → logprob: -4.862245082855225
    4. 'node' → logprob: -6.112245082855225
    5. ' len' → logprob: -6.737245082855225
    6. ' node' → logprob: -7.362245082855225
    7. '   ' → logprob: -9.237244606018066
    8. ' ' → logprob: -9.862244606018066
    9. '  ' → logprob: -11.362244606018066
    10. '	v' → logprob: -11.862244606018066

Token 242: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -5.836499985889532e-05
    2. 'children' → logprob: -10.1250581741333
    3. '.' → logprob: -11.3750581741333
    4. ' .' → logprob: -12.5000581741333
    5. '_children' → logprob: -14.6250581741333
    6. '.child' → logprob: -14.6250581741333
    7. ' children' → logprob: -15.1250581741333
    8. '.parent' → logprob: -15.1250581741333
    9. '.height' → logprob: -15.2500581741333
    10. '.depth' → logprob: -15.3750581741333

Token 243: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010086112655699253
    2. 'and' → logprob: -5.1350860595703125
    3. ' and' → logprob: -5.5100860595703125
    4. '!=' → logprob: -9.760086059570312
    5. ':' → logprob: -10.385086059570312
    6. '==' → logprob: -11.885086059570312
    7. ' !=' → logprob: -13.260086059570312
    8. ' ' → logprob: -13.510086059570312
    9. '   ' → logprob: -13.760086059570312
    10. '0' → logprob: -14.135086059570312

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009539789753034711
    2. '[' → logprob: -7.6259541511535645
    3. ' ' → logprob: -7.7509541511535645
    4. '1' → logprob: -11.500953674316406
    5. 'and' → logprob: -12.125953674316406
    6. '][' → logprob: -12.375953674316406
    7. '   ' → logprob: -12.625953674316406
    8. ' and' → logprob: -12.625953674316406
    9. ':' → logprob: -13.000953674316406
    10. ']' → logprob: -13.250953674316406

Token 245: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.48471856117248535
    2. ' !=' → logprob: -1.6097185611724854
    3. ']' → logprob: -1.8597185611724854
    4. '!=-' → logprob: -4.109718322753906
    5. ']!=' → logprob: -4.609718322753906
    6. ')' → logprob: -6.734718322753906
    7. '[' → logprob: -7.734718322753906
    8. '==' → logprob: -8.984718322753906
    9. ')!=' → logprob: -9.109718322753906
    10. '   ' → logprob: -10.609718322753906

Token 246: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.027630211785435677
    2. ' !=' → logprob: -3.65263032913208
    3. '!=-' → logprob: -6.77763032913208
    4. '==' → logprob: -8.652629852294922
    5. '>=' → logprob: -13.277629852294922
    6. ' ' → logprob: -13.402629852294922
    7. '   ' → logprob: -13.527629852294922
    8. 'is' → logprob: -13.652629852294922
    9. ' ==' → logprob: -13.652629852294922
    10. '[' → logprob: -13.652629852294922

Token 247: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001170225441455841
    2. ' -' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.876171112060547
    4. ' ' → logprob: -19.251171112060547
    5. '-node' → logprob: -21.251171112060547
    6. '  ' → logprob: -21.876171112060547
    7. '-index' → logprob: -22.126171112060547
    8. '	' → logprob: -22.501171112060547
    9. '−' → logprob: -22.876171112060547
    10. '-n' → logprob: -22.876171112060547

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. '-' → logprob: -11.250016212463379
    3. ' ' → logprob: -13.500016212463379
    4. ' -' → logprob: -13.875016212463379
    5. '```' → logprob: -15.750016212463379
    6. '   ' → logprob: -16.875015258789062
    7. '
' → logprob: -18.062515258789062
    8. '`' → logprob: -18.562515258789062
    9. '  ' → logprob: -18.562515258789062
    10. '１' → logprob: -18.750015258789062

Token 249: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2823628783226013
    2. ':' → logprob: -1.407362937927246
    3. '   ' → logprob: -7.157362937927246
    4. ' and' → logprob: -8.657362937927246
    5. '):
' → logprob: -8.907362937927246
    6. 'and' → logprob: -10.032362937927246
    7. '       ' → logprob: -10.782362937927246
    8. ':

' → logprob: -11.032362937927246
    9. ':
' → logprob: -11.032362937927246
    10. ',' → logprob: -11.657362937927246

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37605834007263184
    2. '   ' → logprob: -1.7510583400726318
    3. 'h' → logprob: -2.251058340072632
    4. ' h' → logprob: -3.376058340072632
    5. ' ' → logprob: -9.001058578491211
    6. '
' → logprob: -9.751058578491211
    7. '	h' → logprob: -9.876058578491211
    8. '    
' → logprob: -10.501058578491211
    9. '  ' → logprob: -10.626058578491211
    10. '    ' → logprob: -10.626058578491211

Token 251: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.004127553664147854
    2. '   ' → logprob: -5.754127502441406
    3. ' h' → logprob: -7.004127502441406
    4. ' ' → logprob: -11.004127502441406
    5. '  ' → logprob: -11.504127502441406
    6. '	h' → logprob: -12.379127502441406
    7. 'v' → logprob: -12.629127502441406
    8. '       ' → logprob: -13.129127502441406
    9. 'child' → logprob: -14.254127502441406
    10. 'height' → logprob: -14.379127502441406

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.248469718324486e-05
    2. '=' → logprob: -11.500022888183594
    3. ' =' → logprob: -11.500022888183594
    4. '[' → logprob: -14.375022888183594
    5. '_' → logprob: -14.500022888183594
    6. ' ' → logprob: -14.750022888183594
    7. '   ' → logprob: -15.500022888183594
    8. 'v' → logprob: -15.625022888183594
    9. '=node' → logprob: -16.125022888183594
    10. ',' → logprob: -16.375022888183594

Token 253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859054833650589
    2. ' =' → logprob: -3.048590660095215
    3. '=get' → logprob: -12.673590660095215
    4. '+=' → logprob: -17.2985897064209
    5. 'get' → logprob: -17.6735897064209
    6. ',' → logprob: -19.0485897064209
    7. ' ' → logprob: -19.4235897064209
    8. '=node' → logprob: -19.7985897064209
    9. ' +=' → logprob: -20.2985897064209
    10. '.=' → logprob: -20.7985897064209

Token 254: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0015059324214234948
    2. ' get' → logprob: -6.5015058517456055
    3. 'node' → logprob: -12.751505851745605
    4. 'max' → logprob: -15.126505851745605
    5. '   ' → logprob: -16.251506805419922
    6. '	get' → logprob: -16.376506805419922
    7. ' ' → logprob: -16.626506805419922
    8. '(get' → logprob: -16.626506805419922
    9. ' node' → logprob: -16.751506805419922
    10. '  ' → logprob: -17.876506805419922

Token 255: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -6.73052782076411e-05
    2. 'height' → logprob: -9.625067710876465
    3. '_' → logprob: -14.250067710876465
    4. '_he' → logprob: -16.00006675720215
    5. '_depth' → logprob: -16.37506675720215
    6. 'Height' → logprob: -16.62506675720215
    7. 'get' → logprob: -16.62506675720215
    8. ' height' → logprob: -17.00006675720215
    9. '_get' → logprob: -17.00006675720215
    10. '_children' → logprob: -17.75006675720215

Token 256: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -3.128163257315464e-07
    2. 'node' → logprob: -15.125
    3. '(' → logprob: -17.875
    4. '[node' → logprob: -19.375
    5. ' node' → logprob: -19.75
    6. ' (' → logprob: -21.125
    7. '(
' → logprob: -21.75
    8. '(Node' → logprob: -21.875
    9. '=node' → logprob: -22.25
    10. '	node' → logprob: -22.625

Token 257: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.842555426876061e-06
    2. 'list' → logprob: -12.750004768371582
    3. '[node' → logprob: -13.500004768371582
    4. '[_' → logprob: -15.250004768371582
    5. 'List' → logprob: -15.500004768371582
    6. '_lists' → logprob: -17.5000057220459
    7. '[v' → logprob: -17.7500057220459
    8. '_List' → logprob: -18.1250057220459
    9. '[' → logprob: -18.1250057220459
    10. '_LIST' → logprob: -18.3750057220459

Token 258: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0002108118060277775
    2. '[node' → logprob: -8.500210762023926
    3. '[' → logprob: -11.875210762023926
    4. ' [' → logprob: -15.250210762023926
    5. 'v' → logprob: -16.250211715698242
    6. '[
' → logprob: -17.625211715698242
    7. '   ' → logprob: -18.250211715698242
    8. '(v' → logprob: -19.000211715698242
    9. '[(' → logprob: -19.750211715698242
    10. '[[' → logprob: -20.250211715698242

Token 259: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.000808082812000066
    2. 'children' → logprob: -7.125808238983154
    3. '.' → logprob: -13.000807762145996
    4. ' .' → logprob: -14.375807762145996
    5. '(children' → logprob: -15.375807762145996
    6. ' children' → logprob: -15.625807762145996
    7. '	children' → logprob: -15.875807762145996
    8. '[' → logprob: -17.125808715820312
    9. '.Children' → logprob: -17.375808715820312
    10. '.v' → logprob: -17.375808715820312

Token 260: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.176947600673884e-05
    2. '0' → logprob: -11.000021934509277
    3. '1' → logprob: -13.500021934509277
    4. '   ' → logprob: -13.625021934509277
    5. ' [' → logprob: -14.500021934509277
    6. 'def' → logprob: -14.625021934509277
    7. '[
' → logprob: -15.000021934509277
    8. '][' → logprob: -15.625021934509277
    9. '(' → logprob: -15.875021934509277
    10. '       ' → logprob: -16.00002098083496

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -14.000001907348633
    3. '[' → logprob: -14.250001907348633
    4. '   ' → logprob: -15.250001907348633
    5. '1' → logprob: -16.750001907348633
    6. '
' → logprob: -17.625001907348633
    7. '(' → logprob: -18.562501907348633
    8. '```' → logprob: -18.687501907348633
    9. '۰' → logprob: -18.750001907348633
    10. '  ' → logprob: -18.875001907348633

Token 262: ']])' (ID: 64959)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.001096999505534768
    2. ']])' → logprob: -7.251097202301025
    3. ')])' → logprob: -8.626096725463867
    4. '])]' → logprob: -9.251096725463867
    5. '])+' → logprob: -10.626096725463867
    6. ']))' → logprob: -10.751096725463867
    7. ']' → logprob: -11.126096725463867
    8. ']),' → logprob: -11.251096725463867
    9. '],' → logprob: -11.376096725463867
    10. '])
' → logprob: -12.001096725463867

Token 263: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13382846117019653
    2. '
' → logprob: -2.1338284015655518
    3. '    
' → logprob: -5.633828639984131
    4. '<|end|>' → logprob: -6.258828639984131
    5. '  
' → logprob: -7.508828639984131
    6. ' 
' → logprob: -8.258828163146973
    7. '   
' → logprob: -8.633828163146973
    8. 'if' → logprob: -9.508828163146973
    9. '<|end|>' → logprob: -9.508828163146973
    10. ' if' → logprob: -9.633828163146973

Token 264: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.000295639038086
    4. '  ' → logprob: -18.875295639038086
    5. '```' → logprob: -19.750295639038086
    6. '
' → logprob: -20.125295639038086
    7. '+' → logprob: -20.500295639038086
    8. ' ' → logprob: -20.875295639038086
    9. '１' → logprob: -21.500295639038086
    10. '0' → logprob: -21.625295639038086

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.625009536743164
    4. '```' → logprob: -19.750009536743164
    5. '
' → logprob: -20.000009536743164
    6. '  ' → logprob: -20.125009536743164
    7. '0' → logprob: -21.187509536743164
    8. '１' → logprob: -21.437509536743164
    9. '+' → logprob: -21.562509536743164
    10. '`' → logprob: -21.812509536743164

Token 266: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22019249200820923
    2. '
' → logprob: -1.8451924324035645
    3. '<|end|>' → logprob: -3.3451924324035645
    4. '    
' → logprob: -5.8451924324035645
    5. '<|end|>' → logprob: -7.3451924324035645
    6. '  
' → logprob: -7.4701924324035645
    7. ' 
' → logprob: -9.345192909240723
    8. '  ' → logprob: -9.845192909240723
    9. '   
' → logprob: -9.845192909240723
    10. ')' → logprob: -10.970192909240723

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006123363971710205
    2. '
' → logprob: -5.7561235427856445
    3. '<|end|>' → logprob: -6.2561235427856445
    4. '    
' → logprob: -7.3811235427856445
    5. ' if' → logprob: -9.256123542785645
    6. '  
' → logprob: -9.256123542785645
    7. '<|end|>' → logprob: -9.381123542785645
    8. ' 
' → logprob: -10.131123542785645
    9. '  ' → logprob: -10.756123542785645
    10. ' ' → logprob: -10.881123542785645

Token 268: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4128681719303131
    2. '   ' → logprob: -1.1628681421279907
    3. ' if' → logprob: -3.6628682613372803
    4. '
' → logprob: -13.28786849975586
    5. ' ' → logprob: -14.28786849975586
    6. '  ' → logprob: -15.16286849975586
    7. '	if' → logprob: -15.28786849975586
    8. 'If' → logprob: -15.41286849975586
    9. '    
' → logprob: -15.78786849975586
    10. '```' → logprob: -16.16286849975586

Token 269: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.016037534922361374
    2. 'v' → logprob: -4.141037464141846
    3. ' ' → logprob: -13.516037940979004
    4. '   ' → logprob: -14.641037940979004
    5. '(v' → logprob: -14.766037940979004
    6. '	v' → logprob: -15.141037940979004
    7. ' ' → logprob: -15.141037940979004
    8. ' len' → logprob: -15.266037940979004
    9. '  ' → logprob: -17.141036987304688
    10. ' (' → logprob: -17.141036987304688

Token 270: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -9.610702363715973e-06
    2. 'children' → logprob: -11.875009536743164
    3. ' .' → logprob: -13.125009536743164
    4. '.' → logprob: -15.000009536743164
    5. ' children' → logprob: -16.125009536743164
    6. '	children' → logprob: -16.500009536743164
    7. '(children' → logprob: -17.750009536743164
    8. '.Children' → logprob: -18.125009536743164
    9. '   ' → logprob: -18.250009536743164
    10. '```' → logprob: -19.625009536743164

Token 271: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.200166469876422e-06
    2. ' [' → logprob: -12.875004768371582
    3. '   ' → logprob: -13.125004768371582
    4. '```' → logprob: -15.875004768371582
    5. '[
' → logprob: -16.1250057220459
    6. '       ' → logprob: -16.5000057220459
    7. 'def' → logprob: -17.0000057220459
    8. 's' → logprob: -17.0000057220459
    9. ')' → logprob: -17.1250057220459
    10. ':' → logprob: -17.2500057220459

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006551315891556442
    2. '0' → logprob: -7.375655174255371
    3. ' ' → logprob: -10.750655174255371
    4. '[' → logprob: -13.125655174255371
    5. '   ' → logprob: -13.125655174255371
    6. '-' → logprob: -13.500655174255371
    7. '
' → logprob: -14.000655174255371
    8. '```' → logprob: -15.000655174255371
    9. ']' → logprob: -16.000654220581055
    10. '`' → logprob: -17.000654220581055

Token 273: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015433111693710089
    2. ']!=' → logprob: -7.1265435218811035
    3. ' !=' → logprob: -7.6265435218811035
    4. ' ]' → logprob: -8.751543045043945
    5. '!=' → logprob: -10.126543045043945
    6. '[' → logprob: -10.126543045043945
    7. ')' → logprob: -11.751543045043945
    8. ' ' → logprob: -13.876543045043945
    9. '   ' → logprob: -14.001543045043945
    10. '!=-' → logprob: -14.251543045043945

Token 274: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.00408397801220417
    2. '!=' → logprob: -5.50408411026001
    3. '!=-' → logprob: -12.504083633422852
    4. ' ' → logprob: -14.004083633422852
    5. '[' → logprob: -14.879083633422852
    6. ']!=' → logprob: -15.379083633422852
    7. ')!=' → logprob: -15.379083633422852
    8. ')' → logprob: -16.62908363342285
    9. ' ' → logprob: -16.87908363342285
    10. '()!=' → logprob: -17.12908363342285

Token 275: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01815076172351837
    2. ' -' → logprob: -4.018150806427002
    3. '1' → logprob: -14.143150329589844
    4. ' ' → logprob: -16.518150329589844
    5. 'not' → logprob: -18.643150329589844
    6. '```' → logprob: -18.893150329589844
    7. '−' → logprob: -20.018150329589844
    8. ' not' → logprob: -20.018150329589844
    9. '   ' → logprob: -20.143150329589844
    10. '  ' → logprob: -20.393150329589844

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.927930654550437e-05
    2. '-' → logprob: -10.875029563903809
    3. ' ' → logprob: -12.125029563903809
    4. ' -' → logprob: -13.875029563903809
    5. '```' → logprob: -13.875029563903809
    6. '   ' → logprob: -14.125029563903809
    7. '<|end|>' → logprob: -14.250029563903809
    8. '...' → logprob: -15.062529563903809
    9. '       ' → logprob: -15.937529563903809
    10. '  ' → logprob: -16.000028610229492

Token 277: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6075151562690735
    2. ':
' → logprob: -1.1075150966644287
    3. '       ' → logprob: -2.1075150966644287
    4. '   ' → logprob: -6.357515335083008
    5. '):
' → logprob: -6.732515335083008
    6. '):' → logprob: -8.607515335083008
    7. ')' → logprob: -9.857515335083008
    8. ':

' → logprob: -9.857515335083008
    9. ',' → logprob: -9.982515335083008
    10. ' :
' → logprob: -10.732515335083008

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005309773609042168
    2. 'h' → logprob: -6.005309581756592
    3. '   ' → logprob: -6.505309581756592
    4. ' h' → logprob: -6.630309581756592
    5. ' ' → logprob: -12.13031005859375
    6. '	h' → logprob: -12.88031005859375
    7. '           ' → logprob: -13.38031005859375
    8. '
' → logprob: -13.50531005859375
    9. '     ' → logprob: -13.88031005859375
    10. '    ' → logprob: -14.00531005859375

Token 279: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.3132726848125458
    2. ' h' → logprob: -1.3132727146148682
    3. '	h' → logprob: -12.313272476196289
    4. '   ' → logprob: -12.438272476196289
    5. '       ' → logprob: -13.438272476196289
    6. '
' → logprob: -15.063272476196289
    7. '_h' → logprob: -15.313272476196289
    8. ',h' → logprob: -16.06327247619629
    9. 'get' → logprob: -16.81327247619629
    10. '  ' → logprob: -17.06327247619629

Token 280: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.433829159708694e-05
    2. 'h' → logprob: -11.25007438659668
    3. '=' → logprob: -11.37507438659668
    4. '1' → logprob: -11.37507438659668
    5. '   ' → logprob: -11.50007438659668
    6. 'get' → logprob: -11.50007438659668
    7. ' ' → logprob: -12.00007438659668
    8. '=get' → logprob: -13.00007438659668
    9. ' =' → logprob: -13.12507438659668
    10. '
' → logprob: -13.50007438659668

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132629990577698
    2. '=' → logprob: -1.313262939453125
    3. '=get' → logprob: -13.688262939453125
    4. ' ' → logprob: -16.063262939453125
    5. ')' → logprob: -18.688262939453125
    6. 'get' → logprob: -19.188262939453125
    7. ' =
' → logprob: -19.438262939453125
    8. '=
' → logprob: -19.688262939453125
    9. '＝' → logprob: -19.938262939453125
    10. ' +=' → logprob: -20.313262939453125

Token 282: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.07889077812433243
    2. ' get' → logprob: -2.578890800476074
    3. '(get' → logprob: -14.203890800476074
    4. '	get' → logprob: -16.453889846801758
    5. '[get' → logprob: -17.078889846801758
    6. ' ' → logprob: -17.203889846801758
    7. '=get' → logprob: -17.203889846801758
    8. ')get' → logprob: -17.578889846801758
    9. '.get' → logprob: -17.578889846801758
    10. '
' → logprob: -18.578889846801758

Token 283: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.0001463299704482779
    2. 'height' → logprob: -8.87514591217041
    3. 'get' → logprob: -12.25014591217041
    4. '_get' → logprob: -14.00014591217041
    5. '_' → logprob: -15.37514591217041
    6. '(get' → logprob: -15.50014591217041
    7. '-height' → logprob: -16.250146865844727
    8. '(height' → logprob: -16.500146865844727
    9. '_HEIGHT' → logprob: -16.500146865844727
    10. 'Height' → logprob: -16.625146865844727

Token 284: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.75
    3. 'node' → logprob: -17.125
    4. ' (' → logprob: -17.875
    5. '[node' → logprob: -18.875
    6. '(
' → logprob: -20.625
    7. ' node' → logprob: -20.625
    8. '(n' → logprob: -21.5
    9. '=node' → logprob: -22.375
    10. '(Node' → logprob: -22.75

Token 285: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0013902351493015885
    2. '[node' → logprob: -6.62639045715332
    3. 'list' → logprob: -9.87639045715332
    4. 'List' → logprob: -12.12639045715332
    5. '[' → logprob: -12.87639045715332
    6. '_lists' → logprob: -13.62639045715332
    7. '_LIST' → logprob: -13.87639045715332
    8. '[v' → logprob: -14.12639045715332
    9. '[List' → logprob: -14.37639045715332
    10. '_List' → logprob: -14.75139045715332

Token 286: '[v' (ID: 36561)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.0004309076175559312
    2. '[v' → logprob: -7.750431060791016
    3. '[' → logprob: -15.625431060791016
    4. '(node' → logprob: -17.875431060791016
    5. '[
' → logprob: -18.375431060791016
    6. 'node' → logprob: -18.500431060791016
    7. '[n' → logprob: -19.125431060791016
    8. 'v' → logprob: -19.250431060791016
    9. '[user' → logprob: -19.250431060791016
    10. ' [' → logprob: -20.125431060791016

Token 287: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.00017624642350710928
    2. 'children' → logprob: -8.875176429748535
    3. '[' → logprob: -10.875176429748535
    4. '[v' → logprob: -11.125176429748535
    5. '[node' → logprob: -14.000176429748535
    6. '	children' → logprob: -14.375176429748535
    7. '[user' → logprob: -14.750176429748535
    8. ' children' → logprob: -15.500176429748535
    9. '(children' → logprob: -15.625176429748535
    10. '.Children' → logprob: -16.12517547607422

Token 288: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.700132997939363e-05
    2. '1' → logprob: -11.375017166137695
    3. '   ' → logprob: -13.125017166137695
    4. '])' → logprob: -13.875017166137695
    5. '][' → logprob: -14.625017166137695
    6. '0' → logprob: -14.875017166137695
    7. '2' → logprob: -15.500017166137695
    8. ' [' → logprob: -15.500017166137695
    9. '       ' → logprob: -15.625017166137695
    10. ']' → logprob: -15.625017166137695

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.057743949990254e-05
    2. '[' → logprob: -11.375020980834961
    3. 'children' → logprob: -12.500020980834961
    4. '0' → logprob: -13.000020980834961
    5. '   ' → logprob: -13.500020980834961
    6. ' ' → logprob: -14.500020980834961
    7. '
' → logprob: -14.750020980834961
    8. '```' → logprob: -15.500020980834961
    9. 'child' → logprob: -15.875020980834961
    10. ']' → logprob: -16.37502098083496

Token 290: ']])' (ID: 64959)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0001681405701674521
    2. ']])' → logprob: -9.000167846679688
    3. ')])' → logprob: -11.000167846679688
    4. ')' → logprob: -11.500167846679688
    5. '])+' → logprob: -11.750167846679688
    6. ' ])' → logprob: -11.875167846679688
    7. ''])' → logprob: -14.500167846679688
    8. '})' → logprob: -14.750167846679688
    9. ']))' → logprob: -14.750167846679688
    10. '   ' → logprob: -14.750167846679688

Token 291: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.029754191637039185
    2. '+' → logprob: -3.529754161834717
    3. ')' → logprob: -12.904754638671875
    4. ' ' → logprob: -14.154754638671875
    5. ')+' → logprob: -16.029754638671875
    6. ' ' → logprob: -16.279754638671875
    7. '()' → logprob: -16.404754638671875
    8. '()+' → logprob: -16.779754638671875
    9. '   ' → logprob: -17.904754638671875
    10. ' +
' → logprob: -18.029754638671875

Token 292: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008614808320999146
    2. ' ' → logprob: -4.758615016937256
    3. '<|end|>' → logprob: -16.008615493774414
    4. '```' → logprob: -17.133615493774414
    5. '   ' → logprob: -17.758615493774414
    6. '0' → logprob: -17.758615493774414
    7. '2' → logprob: -18.508615493774414
    8. '<|end|>' → logprob: -19.321115493774414
    9. '１' → logprob: -19.383615493774414
    10. ' ' → logprob: -19.446115493774414

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -18.125003814697266
    4. '<|end|>' → logprob: -18.125003814697266
    5. '   ' → logprob: -18.750003814697266
    6. '
' → logprob: -19.250003814697266
    7. '0' → logprob: -19.500003814697266
    8. '2' → logprob: -19.750003814697266
    9. '-' → logprob: -20.625003814697266
    10. '+' → logprob: -20.687503814697266

Token 294: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022797922138124704
    2. '
' → logprob: -6.252279758453369
    3. 'return' → logprob: -8.752280235290527
    4. '    
' → logprob: -8.752280235290527
    5. '<|end|>' → logprob: -11.252280235290527
    6. ' return' → logprob: -11.377280235290527
    7. '  
' → logprob: -12.752280235290527
    8. '       ' → logprob: -13.627280235290527
    9. '	return' → logprob: -13.752280235290527
    10. ',' → logprob: -13.752280235290527

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10299894213676453
    2. 'return' → logprob: -2.352998971939087
    3. 'v' → logprob: -5.977998733520508
    4. ' return' → logprob: -8.352998733520508
    5. '    
' → logprob: -11.852998733520508
    6. '	return' → logprob: -11.977998733520508
    7. ' v' → logprob: -13.727998733520508
    8. '
' → logprob: -13.977998733520508
    9. '```' → logprob: -14.102998733520508
    10. 'if' → logprob: -14.227998733520508

Token 296: ' v' (ID: 323)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05963313952088356
    2. 'v' (adapté à ' v') → logprob: -3.059633255004883
    3. ' return' → logprob: -4.559633255004883
    4. '   ' → logprob: -7.684633255004883
    5. ' v' → logprob: -10.684633255004883
    6. 'height' → logprob: -10.809633255004883
    7. 'h' → logprob: -11.184633255004883
    8. '	return' → logprob: -13.809633255004883
    9. ' ' → logprob: -14.934633255004883
    10. '    
' → logprob: -16.059633255004883

Token 297: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -1.1160349458805285e-05
    2. '.' → logprob: -11.500011444091797
    3. '.width' → logprob: -15.250011444091797
    4. '.children' → logprob: -15.375011444091797
    5. '.he' → logprob: -16.125011444091797
    6. ' .' → logprob: -16.250011444091797
    7. '.type' → logprob: -16.500011444091797
    8. '.degree' → logprob: -17.250011444091797
    9. '.depth' → logprob: -17.250011444091797
    10. '.value' → logprob: -17.750011444091797

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132631182670593
    2. '=' → logprob: -1.313263177871704
    3. '=max' → logprob: -13.688262939453125
    4. '   ' → logprob: -16.938262939453125
    5. '=v' → logprob: -17.688262939453125
    6. ' ' → logprob: -17.813262939453125
    7. '＝' → logprob: -17.813262939453125
    8. ',' → logprob: -17.813262939453125
    9. ' =
' → logprob: -18.563262939453125
    10. '=int' → logprob: -18.938262939453125

Token 299: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3868776261806488
    2. ' max' → logprob: -1.1368776559829712
    3. 'h' → logprob: -12.38687801361084
    4. ' h' → logprob: -13.26187801361084
    5. '(max' → logprob: -15.26187801361084
    6. '	max' → logprob: -15.38687801361084
    7. '   ' → logprob: -15.88687801361084
    8. ' ' → logprob: -17.011877059936523
    9. '[max' → logprob: -17.636877059936523
    10. 'min' → logprob: -17.761877059936523

Token 300: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. 'h' → logprob: -17.250001907348633
    4. ' (' → logprob: -20.125001907348633
    5. '(
' → logprob: -20.500001907348633
    6. ',h' → logprob: -22.000001907348633
    7. '(ht' → logprob: -22.000001907348633
    8. '[h' → logprob: -22.375001907348633
    9. '	h' → logprob: -22.875001907348633
    10. ' h' → logprob: -23.125001907348633

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. 'h' → logprob: -14.500000953674316
    3. '(h' → logprob: -16.0
    4. 's' → logprob: -17.625
    5. '(' → logprob: -18.5
    6. '   ' → logprob: -19.375
    7. ' ' → logprob: -19.875
    8. ',h' → logprob: -19.875
    9. 'a' → logprob: -20.25
    10. ',' → logprob: -20.25

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032181181013584137
    2. ' ,' → logprob: -6.128218173980713
    3. ',h' → logprob: -6.878218173980713
    4. ',
' → logprob: -14.003217697143555
    5. 'h' → logprob: -14.253217697143555
    6. ',v' → logprob: -14.628217697143555
    7. '   ' → logprob: -15.753217697143555
    8. 's' → logprob: -16.628217697143555
    9. ' ' → logprob: -16.628217697143555
    10. ' h' → logprob: -17.128217697143555

Token 303: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01416398212313652
    2. ' h' → logprob: -4.264163970947266
    3. '	h' → logprob: -15.389163970947266
    4. '   ' → logprob: -16.014163970947266
    5. ' ' → logprob: -17.264163970947266
    6. '<h' → logprob: -17.264163970947266
    7. ' ' → logprob: -18.264163970947266
    8. ')' → logprob: -18.389163970947266
    9. '[h' → logprob: -18.389163970947266
    10. '  ' → logprob: -19.014163970947266

Token 304: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. ',' → logprob: -18.125
    4. '₂' → logprob: -18.25
    5. ')' → logprob: -18.625
    6. 's' → logprob: -18.75
    7. '   ' → logprob: -18.875
    8. '۲' → logprob: -19.0
    9. '1' → logprob: -19.625
    10. '_' → logprob: -19.875

Token 305: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015345009742304683
    2. ')
' → logprob: -7.126534461975098
    3. '<|end|>' → logprob: -7.626534461975098
    4. '   ' → logprob: -8.626534461975098
    5. ')return' → logprob: -10.001534461975098
    6. ' )' → logprob: -11.751534461975098
    7. '<|end|>' → logprob: -12.376534461975098
    8. 'return' → logprob: -13.876534461975098
    9. ')}' → logprob: -14.126534461975098
    10. '
' → logprob: -14.251534461975098

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03014684095978737
    2. 'return' → logprob: -3.530146837234497
    3. ' return' → logprob: -7.905147075653076
    4. '	return' → logprob: -10.655146598815918
    5. 'def' → logprob: -13.530146598815918
    6. '    
' → logprob: -14.155146598815918
    7. '
' → logprob: -14.280146598815918
    8. ':return' → logprob: -15.155146598815918
    9. '```' → logprob: -15.530146598815918
    10. '<|end|>' → logprob: -15.780146598815918

Token 307: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044644325971603394
    2. 'return' (adapté à ' return') → logprob: -3.294644355773926
    3. ' return' → logprob: -5.044644355773926
    4. '	return' → logprob: -8.919644355773926
    5. ':return' → logprob: -14.169644355773926
    6. '    
' → logprob: -14.294644355773926
    7. '
' → logprob: -14.419644355773926
    8. '       ' → logprob: -14.794644355773926
    9. '  ' → logprob: -15.044644355773926
    10. ' ' → logprob: -15.294644355773926

Token 308: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011047935113310814
    2. ' v' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.63604736328125
    4. '	v' → logprob: -17.01104736328125
    5. ' ' → logprob: -17.63604736328125
    6. ' ' → logprob: -17.76104736328125
    7. 'max' → logprob: -18.01104736328125
    8. '(v' → logprob: -18.88604736328125
    9. ' max' → logprob: -19.51104736328125
    10. '  ' → logprob: -20.01104736328125

Token 309: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -7.822646693966817e-06
    2. '.' → logprob: -11.875007629394531
    3. 'height' → logprob: -14.375007629394531
    4. '.width' → logprob: -16.37500762939453
    5. '.depth' → logprob: -17.37500762939453
    6. '.value' → logprob: -18.12500762939453
    7. ' .' → logprob: -18.37500762939453
    8. '.Height' → logprob: -18.37500762939453
    9. '.v' → logprob: -18.87500762939453
    10. '.he' → logprob: -18.87500762939453

Token 310: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005026556085795164
    2. '#' → logprob: -6.380026340484619
    3. 'for' → logprob: -6.380026340484619
    4. 'n' → logprob: -7.505026340484619
    5. '<|end|>' → logprob: -8.005026817321777
    6. '
' → logprob: -8.255026817321777
    7. 'if' → logprob: -8.630026817321777
    8. 'class' → logprob: -9.755026817321777
    9. '<|end|>' → logprob: -9.880026817321777
    10. 'node' → logprob: -10.005026817321777

Token 312: ' generate' (ID: 10419)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1859220713376999
    2. ' main' → logprob: -2.310922145843506
    3. 'build' → logprob: -2.935922145843506
    4. 'set' → logprob: -5.060922145843506
    5. ' build' → logprob: -5.560922145843506
    6. 'get' → logprob: -6.185922145843506
    7. 'read' → logprob: -6.560922145843506
    8. 'def' → logprob: -7.060922145843506
    9. 'process' → logprob: -7.560922145843506
    10. 'parse' → logprob: -7.685922145843506

Token 313: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.021064840257167816
    2. '_code' → logprob: -4.771064758300781
    3. '_binary' → logprob: -5.771064758300781
    4. '_node' → logprob: -6.021064758300781
    5. '(node' → logprob: -6.271064758300781
    6. '_nodes' → logprob: -6.646064758300781
    7. '_t' → logprob: -7.896064758300781
    8. '_parent' → logprob: -7.896064758300781
    9. '_children' → logprob: -8.021064758300781
    10. '_' → logprob: -8.021064758300781

Token 314: '(_' (ID: 4963)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16854283213615417
    2. '(node' → logprob: -2.9185428619384766
    3. '(num' → logprob: -3.0435428619384766
    4. '(nodes' → logprob: -3.9185428619384766
    5. '():' → logprob: -4.418542861938477
    6. '(size' → logprob: -4.543542861938477
    7. '(N' → logprob: -5.918542861938477
    8. '(root' → logprob: -6.043542861938477
    9. '(parent' → logprob: -6.168542861938477
    10. '(' → logprob: -7.168542861938477

Token 315: 'array' (ID: 3361)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.42557433247566223
    2. 'n' → logprob: -2.30057430267334
    3. 'size' → logprob: -2.80057430267334
    4. 'node' → logprob: -3.05057430267334
    5. '):' → logprob: -3.17557430267334
    6. '_list' → logprob: -4.05057430267334
    7. 'nodes' → logprob: -4.17557430267334
    8. '):
' → logprob: -4.30057430267334
    9. 'input' → logprob: -4.55057430267334
    10. '_nodes' → logprob: -4.80057430267334

Token 316: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06003914400935173
    2. '):
' → logprob: -3.4350390434265137
    3. ',' → logprob: -3.6850390434265137
    4. ',array' → logprob: -8.310039520263672
    5. '_array' → logprob: -8.685039520263672
    6. '(array' → logprob: -8.935039520263672
    7. '   ' → logprob: -8.935039520263672
    8. ')' → logprob: -9.435039520263672
    9. 'array' → logprob: -10.685039520263672
    10. ':' → logprob: -10.810039520263672

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017350364942103624
    2. '    
' → logprob: -7.501735210418701
    3. 'n' → logprob: -7.626735210418701
    4. 'global' → logprob: -8.126734733581543
    5. ' n' → logprob: -9.751734733581543
    6. '
' → logprob: -9.751734733581543
    7. 'node' → logprob: -9.876734733581543
    8. ':' → logprob: -9.876734733581543
    9. ' ' → logprob: -10.876734733581543
    10. 'size' → logprob: -10.876734733581543

Token 318: ' #' (ID: 1069)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.3999590277671814
    2. 'n' → logprob: -1.5249590873718262
    3. '   ' → logprob: -3.149959087371826
    4. ' n' → logprob: -3.649959087371826
    5. ' global' → logprob: -3.649959087371826
    6. 'node' → logprob: -4.524959087371826
    7. 'for' → logprob: -5.899959087371826
    8. 'root' → logprob: -6.524959087371826
    9. 'length' → logprob: -7.524959087371826
    10. ' node' → logprob: -7.899959087371826

Token 319: ' add' (ID: 1147)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.3626643419265747
    2. 'n' → logprob: -1.7376643419265747
    3. 'node' → logprob: -2.237664222717285
    4. ' global' → logprob: -4.987664222717285
    5. ' n' → logprob: -5.112664222717285
    6. 'for' → logprob: -5.737664222717285
    7. '   ' → logprob: -6.112664222717285
    8. ' node' → logprob: -6.862664222717285
    9. 'root' → logprob: -7.487664222717285
    10. 'nodes' → logprob: -7.737664222717285

Token 320: ' info' (ID: 5377)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.4908396005630493
    2. ' global' → logprob: -1.8658396005630493
    3. 'node' → logprob: -2.2408394813537598
    4. 'global' → logprob: -3.2408394813537598
    5. '   ' → logprob: -3.3658394813537598
    6. ' n' → logprob: -3.3658394813537598
    7. ' for' → logprob: -5.49083948135376
    8. 'n' → logprob: -5.74083948135376
    9. '_node' → logprob: -6.49083948135376
    10. 'for' → logprob: -6.99083948135376

Token 321: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3331482410430908
    2. '   ' → logprob: -1.4581482410430908
    3. ' for' → logprob: -1.4581482410430908
    4. 'for' → logprob: -2.458148241043091
    5. '
' → logprob: -2.583148241043091
    6. '(node' → logprob: -3.583148241043091
    7. ':' → logprob: -4.083148002624512
    8. ' node' → logprob: -4.458148002624512
    9. 'def' → logprob: -5.208148002624512
    10. ' nodes' → logprob: -5.333148002624512

Token 322: ' each' (ID: 2454)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.9716095328330994
    2. ' len' → logprob: -1.8466095924377441
    3. 'node' → logprob: -1.9716095924377441
    4. '_array' → logprob: -2.221609592437744
    5. 'len' → logprob: -3.221609592437744
    6. ' _' → logprob: -3.471609592437744
    7. '_nodes' → logprob: -3.596609592437744
    8. ' parent' → logprob: -4.096609592437744
    9. '_children' → logprob: -4.471609592437744
    10. '_node' → logprob: -4.471609592437744

Token 323: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.4233754277229309
    2. 'node' → logprob: -1.1733753681182861
    3. '_node' → logprob: -4.548375606536865
    4. ' idx' → logprob: -5.173375606536865
    5. 'i' → logprob: -5.673375606536865
    6. ' v' → logprob: -6.048375606536865
    7. ' i' → logprob: -6.048375606536865
    8. ' index' → logprob: -6.423375606536865
    9. 'index' → logprob: -6.423375606536865
    10. 'idx' → logprob: -6.673375606536865

Token 324: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45361191034317017
    2. ' for' → logprob: -1.5786118507385254
    3. 'for' → logprob: -2.3286118507385254
    4. 'node' → logprob: -3.5786118507385254
    5. ' node' → logprob: -4.203611850738525
    6. 'nodes' → logprob: -5.453611850738525
    7. ' nodes' → logprob: -6.078611850738525
    8. 'global' → logprob: -6.328611850738525
    9. ' global' → logprob: -6.578611850738525
    10. '
' → logprob: -6.703611850738525

Token 325: ' a' (ID: 261)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.024413714185357094
    2. ' _' → logprob: -3.899413824081421
    3. ' the' → logprob: -7.024413585662842
    4. '_tree' → logprob: -7.899413585662842
    5. 'the' → logprob: -8.0244140625
    6. 'node' → logprob: -8.2744140625
    7. ' node' → logprob: -8.3994140625
    8. 'len' → logprob: -8.8994140625
    9. 'children' → logprob: -9.0244140625
    10. 'array' → logprob: -9.0244140625

Token 326: ' ordered' (ID: 17889)
  Prédit: 'rray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rray' → logprob: -0.056006480008363724
    2. 'range' → logprob: -3.55600643157959
    3. 'ray' → logprob: -5.43100643157959
    4. 'for' → logprob: -5.55600643157959
    5. ' range' → logprob: -5.93100643157959
    6. ' for' → logprob: -6.30600643157959
    7. 'rr' → logprob: -6.30600643157959
    8. 'node' → logprob: -6.68100643157959
    9. 'll' → logprob: -6.80600643157959
    10. 'array' → logprob: -7.18100643157959

Token 327: ' tree' (ID: 8165)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.1450247764587402
    2. 'array' → logprob: -1.3950247764587402
    3. 'tree' → logprob: -2.2700247764587402
    4. ' array' → logprob: -2.5200247764587402
    5. '_tree' → logprob: -3.1450247764587402
    6. ' tree' → logprob: -3.1450247764587402
    7. 'list' → logprob: -3.2700247764587402
    8. 'binary' → logprob: -3.2700247764587402
    9. '_nodes' → logprob: -4.14502477645874
    10. ' list' → logprob: -4.39502477645874

Token 328: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11083019524812698
    2. '
' → logprob: -2.360830307006836
    3. '    
' → logprob: -5.610830307006836
    4. ' for' → logprob: -6.485830307006836
    5. ',' → logprob: -7.110830307006836
    6. ' nodes' → logprob: -7.235830307006836
    7. ' node' → logprob: -7.235830307006836
    8. 'node' → logprob: -7.485830307006836
    9. 'n' → logprob: -7.860830307006836
    10. 'nodes' → logprob: -7.985830307006836

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08772793412208557
    2. ' n' → logprob: -2.7127280235290527
    3. 'n' → logprob: -4.462728023529053
    4. '
' → logprob: -6.837728023529053
    5. ' nodes' → logprob: -7.212728023529053
    6. ':' → logprob: -7.337728023529053
    7. ' node' → logprob: -7.462728023529053
    8. ' for' → logprob: -7.837728023529053
    9. '	n' → logprob: -8.087727546691895
    10. ',' → logprob: -8.337727546691895

Token 330: ' for' (ID: 395)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47410520911216736
    2. 'global' → logprob: -1.5991052389144897
    3. '   ' → logprob: -2.9741051197052
    4. ' n' → logprob: -3.2241051197052
    5. 'node' → logprob: -3.2241051197052
    6. 'for' (adapté à ' for') → logprob: -3.4741051197052
    7. ' global' → logprob: -5.099105358123779
    8. ' for' → logprob: -5.724105358123779
    9. ' node' → logprob: -6.349105358123779
    10. 'length' → logprob: -7.349105358123779

Token 331: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1555616408586502
    2. ' i' → logprob: -2.030561685562134
    3. 'index' → logprob: -5.405561447143555
    4. ' idx' → logprob: -5.780561447143555
    5. 'idx' → logprob: -5.780561447143555
    6. ' index' → logprob: -6.655561447143555
    7. '(i' → logprob: -8.780561447143555
    8. 'id' → logprob: -8.905561447143555
    9. 'u' → logprob: -9.280561447143555
    10. 'v' → logprob: -9.405561447143555

Token 332: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19534309208393097
    2. ' i' → logprob: -2.945343017578125
    3. '_index' → logprob: -3.320343017578125
    4. '_idx' → logprob: -3.570343017578125
    5. ',' → logprob: -4.070343017578125
    6. 'index' → logprob: -4.820343017578125
    7. ' _' → logprob: -5.070343017578125
    8. '_i' → logprob: -5.445343017578125
    9. 'idx' → logprob: -5.570343017578125
    10. '_id' → logprob: -5.820343017578125

Token 333: ' _' (ID: 1175)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.003512168535962701
    2. 'range' → logprob: -6.128512382507324
    3. ' range' → logprob: -7.003512382507324
    4. ' _' → logprob: -8.003512382507324
    5. 'enumer' → logprob: -10.503512382507324
    6. ' enumerate' → logprob: -10.878512382507324
    7. '_range' → logprob: -11.253512382507324
    8. 'Array' → logprob: -12.128512382507324
    9. 'array' → logprob: -12.253512382507324
    10. '_node' → logprob: -12.753512382507324

Token 334: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.0011737978784367442
    2. '_array' → logprob: -6.751173973083496
    3. ' array' → logprob: -12.626173973083496
    4. 'Array' → logprob: -16.00117301940918
    5. 'rray' → logprob: -17.12617301940918
    6. '-array' → logprob: -18.25117301940918
    7. '$array' → logprob: -18.50117301940918
    8. '.array' → logprob: -18.50117301940918
    9. 'range' → logprob: -18.62617301940918
    10. 'arrays' → logprob: -18.87617301940918

Token 335: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004879231099039316
    2. ':
' → logprob: -5.629878997802734
    3. ',' → logprob: -6.879878997802734
    4. '   ' → logprob: -8.879878997802734
    5. ' :' → logprob: -10.004878997802734
    6. '[' → logprob: -10.629878997802734
    7. 'index' → logprob: -11.879878997802734
    8. '):' → logprob: -11.879878997802734
    9. '_index' → logprob: -12.754878997802734
    10. ' in' → logprob: -13.129878997802734

Token 336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02819593995809555
    2. ',' → logprob: -5.028195858001709
    3. '   ' → logprob: -5.028195858001709
    4. ':' → logprob: -5.653195858001709
    5. 'index' → logprob: -5.653195858001709
    6. ' node' → logprob: -6.153195858001709
    7. ' index' → logprob: -6.403195858001709
    8. 'node' → logprob: -7.403195858001709
    9. ' id' → logprob: -7.653195858001709
    10. ' idx' → logprob: -7.778195858001709

Token 337: ' idx' (ID: 14016)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.336588740348816
    2. '   ' → logprob: -1.461588740348816
    3. 'idx' (adapté à ' idx') → logprob: -1.586588740348816
    4. 'index' → logprob: -1.961588740348816
    5. 'id' → logprob: -2.7115888595581055
    6. 'v' → logprob: -4.3365888595581055
    7. 'i' → logprob: -4.3365888595581055
    8. 'parent' → logprob: -4.3365888595581055
    9. ' idx' → logprob: -4.3365888595581055
    10. '       ' → logprob: -4.4615888595581055

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43985217809677124
    2. ' =' → logprob: -1.064852237701416
    3. '=' → logprob: -4.689852237701416
    4. ' ,' → logprob: -6.314852237701416
    5. ' ' → logprob: -10.189851760864258
    6. '   ' → logprob: -11.064851760864258
    7. '       ' → logprob: -11.814851760864258
    8. '    ' → logprob: -12.189851760864258
    9. '        ' → logprob: -12.814851760864258
    10. ',node' → logprob: -12.814851760864258

Token 339: ' *' (ID: 425)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.5309730172157288
    2. ' parent' → logprob: -1.780972957611084
    3. 'left' → logprob: -2.280972957611084
    4. ' left' → logprob: -2.905972957611084
    5. 'pid' → logprob: -3.780972957611084
    6. 'p' → logprob: -4.030972957611084
    7. ' p' → logprob: -4.655972957611084
    8. ' pid' → logprob: -5.405972957611084
    9. 'par' → logprob: -5.530972957611084
    10. 'value' → logprob: -5.655972957611084

Token 340: 'children' (ID: 10961)
  Prédit: 'children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.040845055133104324
    2. 'rest' → logprob: -4.290844917297363
    3. ' children' → logprob: -5.040844917297363
    4. 'vals' → logprob: -5.165844917297363
    5. 'child' → logprob: -5.290844917297363
    6. 'data' → logprob: -5.290844917297363
    7. 'values' → logprob: -6.540844917297363
    8. 'ch' → logprob: -7.415844917297363
    9. '_children' → logprob: -7.915844917297363
    10. 'info' → logprob: -8.415844917297363

Token 341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967913061380386
    2. ' =' → logprob: -2.8119678497314453
    3. ',' → logprob: -15.436967849731445
    4. ' ' → logprob: -17.436967849731445
    5. '=
' → logprob: -18.186967849731445
    6. '   ' → logprob: -18.186967849731445
    7. 's' → logprob: -18.186967849731445
    8. '＝' → logprob: -18.686967849731445
    9. '  ' → logprob: -19.061967849731445
    10. '_=' → logprob: -19.436967849731445

Token 342: ' [' (ID: 723)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.014172209426760674
    2. ' each' → logprob: -4.264172077178955
    3. '_each' → logprob: -12.264172554016113
    4. '(each' → logprob: -12.764172554016113
    5. 'map' → logprob: -15.639172554016113
    6. ' map' → logprob: -15.639172554016113
    7. '.each' → logprob: -15.764172554016113
    8. '   ' → logprob: -15.889172554016113
    9. 'Each' → logprob: -15.889172554016113
    10. ' ' → logprob: -16.014171600341797

Token 343: 'int' (ID: 491)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.0031855558045208454
    2. 'int' → logprob: -6.003185749053955
    3. ' each' → logprob: -7.503185749053955
    4. 'map' → logprob: -8.878185272216797
    5. '(each' → logprob: -11.753185272216797
    6. ' int' → logprob: -12.503185272216797
    7. '   ' → logprob: -12.878185272216797
    8. ' map' → logprob: -13.253185272216797
    9. '_each' → logprob: -13.628185272216797
    10. 'Each' → logprob: -14.253185272216797

Token 344: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0779816061258316
    2. '(i' → logprob: -2.70298171043396
    3. 'x' → logprob: -5.327981472015381
    4. '(e' → logprob: -6.702981472015381
    5. '(_)' → logprob: -6.952981472015381
    6. '(c' → logprob: -8.827981948852539
    7. '(v' → logprob: -8.952981948852539
    8. 'i' → logprob: -9.202981948852539
    9. '(each' → logprob: -9.327981948852539
    10. '(n' → logprob: -9.327981948852539

Token 345: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061865270137786865
    2. '(x' → logprob: -3.6868653297424316
    3. 'for' → logprob: -4.561865329742432
    4. 'each' → logprob: -4.811865329742432
    5. '(each' → logprob: -4.936865329742432
    6. '(i' → logprob: -5.811865329742432
    7. ' for' → logprob: -5.936865329742432
    8. '()' → logprob: -7.061865329742432
    9. '(_)' → logprob: -7.686865329742432
    10. '(e' → logprob: -7.811865329742432

Token 346: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43803828954696655
    2. ' for' → logprob: -1.1880383491516113
    3. '(x' → logprob: -3.4380383491516113
    4. '(each' → logprob: -4.813038349151611
    5. 'each' → logprob: -4.813038349151611
    6. ')' → logprob: -7.438038349151611
    7. '(i' → logprob: -8.688037872314453
    8. ']' → logprob: -8.813037872314453
    9. '(token' → logprob: -8.813037872314453
    10. 'token' → logprob: -9.813037872314453

Token 347: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06198056787252426
    2. ' x' → logprob: -2.8119804859161377
    3. '(x' → logprob: -11.311980247497559
    4. 'each' → logprob: -15.686980247497559
    5. '_' → logprob: -15.811980247497559
    6. '_x' → logprob: -16.686981201171875
    7. ' ' → logprob: -16.936981201171875
    8. ' each' → logprob: -16.936981201171875
    9. '	x' → logprob: -17.186981201171875
    10. 'str' → logprob: -17.561981201171875

Token 348: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04859861359000206
    2. 'in' → logprob: -3.048598527908325
    3. 'x' → logprob: -11.673598289489746
    4. 'each' → logprob: -13.673598289489746
    5. ' x' → logprob: -14.298598289489746
    6. ' ' → logprob: -14.673598289489746
    7. '(x' → logprob: -15.423598289489746
    8. '  ' → logprob: -16.798599243164062
    9. '
' → logprob: -17.298599243164062
    10. 'inx' → logprob: -17.548599243164062

Token 349: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.009200147353112698
    2. ' each' → logprob: -4.884200096130371
    3. 'str' → logprob: -6.634200096130371
    4. ' str' → logprob: -8.259200096130371
    5. '(each' → logprob: -11.134200096130371
    6. '(str' → logprob: -13.759200096130371
    7. 'map' → logprob: -13.884200096130371
    8. '_each' → logprob: -14.509200096130371
    9. 'array' → logprob: -14.759200096130371
    10. ' ' → logprob: -15.009200096130371

Token 350: ']
' (ID: 1592)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.10124710947275162
    2. '.strip' → logprob: -2.3512470722198486
    3. ']' → logprob: -7.226247310638428
    4. '.' → logprob: -8.47624683380127
    5. 'split' → logprob: -9.72624683380127
    6. '.rstrip' → logprob: -10.85124683380127
    7. '().' → logprob: -11.35124683380127
    8. 'strip' → logprob: -11.97624683380127
    9. ' .' → logprob: -12.35124683380127
    10. '()]' → logprob: -14.10124683380127

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06631090492010117
    2. '
' → logprob: -2.8163108825683594
    3. '<|end|>' → logprob: -6.441310882568359
    4. '        
' → logprob: -6.566310882568359
    5. ',' → logprob: -6.941310882568359
    6. '   ' → logprob: -8.94131088256836
    7. '<|end|>' → logprob: -10.31631088256836
    8. '  
' → logprob: -10.31631088256836
    9. '
' → logprob: -11.06631088256836
    10. ',
' → logprob: -11.19131088256836

Token 352: ' #' (ID: 1069)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.14754711091518402
    2. ' node' → logprob: -2.1475470066070557
    3. '       ' → logprob: -4.272547245025635
    4. '   ' → logprob: -6.022547245025635
    5. 'if' → logprob: -6.272547245025635
    6. ' if' → logprob: -7.022547245025635
    7. '
' → logprob: -7.647547245025635
    8. '        
' → logprob: -8.272546768188477
    9. '    
' → logprob: -9.272546768188477
    10. ' for' → logprob: -9.272546768188477

Token 353: ' assert' (ID: 3696)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.18311108648777008
    2. ' node' → logprob: -1.9331110715866089
    3. 'if' → logprob: -4.183111190795898
    4. ' if' → logprob: -5.808111190795898
    5. '       ' → logprob: -6.183111190795898
    6. '   ' → logprob: -7.058111190795898
    7. 'for' → logprob: -7.308111190795898
    8. 'while' → logprob: -8.308111190795898
    9. ' for' → logprob: -8.683111190795898
    10. 'children' → logprob: -8.808111190795898

Token 354: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.2787800133228302
    2. 'len' → logprob: -2.153779983520508
    3. ' children' → logprob: -3.028779983520508
    4. 'children' → logprob: -3.278779983520508
    5. ' idx' → logprob: -3.403779983520508
    6. 'idx' → logprob: -5.153779983520508
    7. '(len' → logprob: -7.528779983520508
    8. ' ' → logprob: -7.778779983520508
    9. '0' → logprob: -8.153779983520508
    10. ' node' → logprob: -8.778779983520508

Token 355: '(children' (ID: 93953)
  Prédit: '(children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(children' → logprob: -0.03404766693711281
    2. 'children' → logprob: -3.4090476036071777
    3. ' children' → logprob: -8.034048080444336
    4. '(each' → logprob: -10.284048080444336
    5. '(' → logprob: -10.534048080444336
    6. 'each' → logprob: -12.034048080444336
    7. '(child' → logprob: -12.409048080444336
    8. '	children' → logprob: -13.034048080444336
    9. '=' → logprob: -13.784048080444336
    10. ' (' → logprob: -14.159048080444336

Token 356: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9393458962440491
    2. ' ==' → logprob: -0.9393458962440491
    3. ' <=' → logprob: -2.0643458366394043
    4. '<=' → logprob: -2.4393458366394043
    5. ' in' → logprob: -6.314345836639404
    6. ')' → logprob: -6.439345836639404
    7. '>=' → logprob: -8.814346313476562
    8. ')==' → logprob: -8.939346313476562
    9. ' >=' → logprob: -9.064346313476562
    10. 'in' → logprob: -9.189346313476562

Token 357: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3194504380226135
    2. ' ==' → logprob: -1.4444503784179688
    3. '>=' → logprob: -4.194450378417969
    4. '<=' → logprob: -4.819450378417969
    5. ' >=' → logprob: -5.319450378417969
    6. '>' → logprob: -5.444450378417969
    7. ' <=' → logprob: -5.444450378417969
    8. ' >' → logprob: -7.694450378417969
    9. ' in' → logprob: -8.944450378417969
    10. 'in' → logprob: -9.319450378417969

Token 358: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005970269441604614
    2. ' ' → logprob: -5.130970478057861
    3. '1' → logprob: -10.255970001220703
    4. '3' → logprob: -12.630970001220703
    5. '0' → logprob: -13.505970001220703
    6. 'len' → logprob: -14.380970001220703
    7. '(' → logprob: -15.068470001220703
    8. '   ' → logprob: -15.255970001220703
    9. '  ' → logprob: -15.505970001220703
    10. '4' → logprob: -16.005970001220703

Token 359: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00037025497294962406
    2. ' ' → logprob: -8.375370025634766
    3. '1' → logprob: -9.000370025634766
    4. '3' → logprob: -11.875370025634766
    5. 'len' → logprob: -12.750370025634766
    6. '0' → logprob: -12.875370025634766
    7. '
' → logprob: -14.000370025634766
    8. '(' → logprob: -14.750370025634766
    9. '   ' → logprob: -14.812870025634766
    10. 'exact' → logprob: -14.937870025634766

Token 360: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1949865072965622
    2. '<|end|>' → logprob: -2.069986581802368
    3. '       ' → logprob: -3.069986581802368
    4. '        
' → logprob: -6.319986343383789
    5. '<|end|>' → logprob: -7.194986343383789
    6. ',' → logprob: -7.319986343383789
    7. ' if' → logprob: -7.569986343383789
    8. '
' → logprob: -8.694986343383789
    9. ' for' → logprob: -9.194986343383789
    10. '

' → logprob: -9.194986343383789

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03330503776669502
    2. '
' → logprob: -3.6583049297332764
    3. '        
' → logprob: -6.2833051681518555
    4. '<|end|>' → logprob: -6.5333051681518555
    5. ' if' → logprob: -7.0333051681518555
    6. 'if' → logprob: -7.1583051681518555
    7. ',' → logprob: -7.2833051681518555
    8. ' for' → logprob: -7.4083051681518555
    9. 'for' → logprob: -8.033305168151855
    10. '   ' → logprob: -8.908305168151855

Token 362: ' if' (ID: 538)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3163433372974396
    2. 'for' → logprob: -1.9413433074951172
    3. 'if' (adapté à ' if') → logprob: -2.441343307495117
    4. '       ' → logprob: -3.441343307495117
    5. 'while' → logprob: -5.941343307495117
    6. '   ' → logprob: -5.941343307495117
    7. ' node' → logprob: -6.441343307495117
    8. 'children' → logprob: -7.316343307495117
    9. ' for' → logprob: -7.566343307495117
    10. ' if' → logprob: -8.441343307495117

Token 363: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.2284395694732666
    2. ' children' → logprob: -2.4784395694732666
    3. 'idx' → logprob: -2.7284395694732666
    4. 'len' → logprob: -3.4784395694732666
    5. ' idx' → logprob: -4.4784393310546875
    6. ' len' → logprob: -4.6034393310546875
    7. ' not' → logprob: -7.6034393310546875
    8. 'not' → logprob: -7.7284393310546875
    9. 'node' → logprob: -8.103439331054688
    10. '-' → logprob: -8.228439331054688

Token 364: ' !=' (ID: 1666)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18564923107624054
    2. ':' → logprob: -1.9356492757797241
    3. '!=' → logprob: -4.185649394989014
    4. ' !=' → logprob: -5.310649394989014
    5. ' and' → logprob: -6.060649394989014
    6. '==' → logprob: -6.310649394989014
    7. '   ' → logprob: -8.310648918151855
    8. ':
' → logprob: -8.810648918151855
    9. 'and' → logprob: -8.935648918151855
    10. ' ==' → logprob: -9.560648918151855

Token 365: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0006946814828552306
    2. '[' → logprob: -7.750694751739502
    3. '[]' → logprob: -8.250694274902344
    4. ' [-' → logprob: -13.125694274902344
    5. '-' → logprob: -14.500694274902344
    6. '(-' → logprob: -15.750694274902344
    7. '['' → logprob: -16.875694274902344
    8. '   ' → logprob: -16.875694274902344
    9. '([-' → logprob: -17.125694274902344
    10. ' ' → logprob: -17.500694274902344

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -12.500008583068848
    3. '-' → logprob: -13.750008583068848
    4. '2' → logprob: -14.687508583068848
    5. '

' → logprob: -15.000008583068848
    6. '```' → logprob: -15.000008583068848
    7. ' -' → logprob: -15.187508583068848
    8. ',' → logprob: -15.250008583068848
    9. '
' → logprob: -15.437508583068848
    10. '１' → logprob: -16.00000762939453

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36893805861473083
    2. ']:' → logprob: -1.2439380884170532
    3. ']:
' → logprob: -4.118937969207764
    4. ']' → logprob: -5.993937969207764
    5. ':' → logprob: -8.243938446044922
    6. ' ,' → logprob: -8.368938446044922
    7. ',
' → logprob: -8.493938446044922
    8. ' ]' → logprob: -8.868938446044922
    9. ']:

' → logprob: -9.118938446044922
    10. ']:
' → logprob: -9.368938446044922

Token 368: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002191660227254033
    2. ' -' → logprob: -6.127191543579102
    3. '1' → logprob: -12.002191543579102
    4. ' ' → logprob: -15.502191543579102
    5. '   ' → logprob: -16.6271915435791
    6. '  ' → logprob: -17.6271915435791
    7. '
' → logprob: -17.6271915435791
    8. '```' → logprob: -18.5021915435791
    9. '2' → logprob: -18.6271915435791
    10. '           ' → logprob: -18.8771915435791

Token 369: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9981420336989686e-05
    2. ' ' → logprob: -11.250020027160645
    3. '-' → logprob: -12.250020027160645
    4. ' -' → logprob: -13.812520027160645
    5. '   ' → logprob: -15.375020027160645
    6. '```' → logprob: -15.562520027160645
    7. '  ' → logprob: -16.812519073486328
    8. '<|end|>' → logprob: -16.937519073486328
    9. '...' → logprob: -17.000019073486328
    10. '<|end|>' → logprob: -17.062519073486328

Token 370: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.14487694203853607
    2. ']:' → logprob: -2.0198769569396973
    3. '       ' → logprob: -6.894876956939697
    4. ']' → logprob: -7.894876956939697
    5. ']:
' → logprob: -8.019876480102539
    6. ']:

' → logprob: -8.894876480102539
    7. ' ]' → logprob: -9.269876480102539
    8. ',' → logprob: -9.644876480102539
    9. '   ' → logprob: -10.019876480102539
    10. '           ' → logprob: -10.144876480102539

Token 371: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028871851041913033
    2. ' for' → logprob: -4.153872013092041
    3. '           ' → logprob: -4.528872013092041
    4. '
' → logprob: -7.028872013092041
    5. 'for' → logprob: -7.528872013092041
    6. '   ' → logprob: -8.903871536254883
    7. 'node' → logprob: -9.528871536254883
    8. ',' → logprob: -9.778871536254883
    9. ':' → logprob: -9.778871536254883
    10. ' node' → logprob: -10.153871536254883

Token 372: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.3433355689048767
    2. 'for' → logprob: -1.4683356285095215
    3. '           ' → logprob: -3.7183356285095215
    4. 'if' → logprob: -3.8433356285095215
    5. '       ' → logprob: -4.8433356285095215
    6. ' for' → logprob: -5.7183356285095215
    7. ' node' → logprob: -6.4683356285095215
    8. 'children' → logprob: -7.2183356285095215
    9. '   ' → logprob: -7.9683356285095215
    10. 'child' → logprob: -8.343335151672363

Token 373: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.15089267492294312
    2. ' =' → logprob: -2.150892734527588
    3. '=' → logprob: -3.775892734527588
    4. 's' → logprob: -9.27589225769043
    5. 'list' → logprob: -9.27589225769043
    6. '   ' → logprob: -9.40089225769043
    7. '       ' → logprob: -9.40089225769043
    8. '.' → logprob: -9.65089225769043
    9. '[idx' → logprob: -9.90089225769043
    10. '=node' → logprob: -9.90089225769043

Token 374: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -9.372294698550832e-06
    2. '[int' → logprob: -11.875009536743164
    3. 'idx' → logprob: -13.250009536743164
    4. '[' → logprob: -14.875009536743164
    5. '[node' → logprob: -15.750009536743164
    6. '[index' → logprob: -17.875009536743164
    7. '[i' → logprob: -18.125009536743164
    8. ' idx' → logprob: -18.125009536743164
    9. '[id' → logprob: -18.375009536743164
    10. '[parent' → logprob: -19.000009536743164

Token 375: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -3.881560041918419e-05
    2. ']' → logprob: -11.125039100646973
    3. '.children' → logprob: -11.625039100646973
    4. ').' → logprob: -12.250039100646973
    5. ' ].' → logprob: -12.375039100646973
    6. '}.' → logprob: -13.375039100646973
    7. '.' → logprob: -13.750039100646973
    8. '.type' → logprob: -14.125039100646973
    9. ']._' → logprob: -14.125039100646973
    10. '.parent' → logprob: -14.250039100646973

Token 376: 'type' (ID: 2493)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.2520463764667511
    2. 'type' → logprob: -1.5020463466644287
    3. 'degree' → logprob: -9.877046585083008
    4. 'child' → logprob: -10.127046585083008
    5. 'parent' → logprob: -11.502046585083008
    6. 'depth' → logprob: -12.877046585083008
    7. ' children' → logprob: -12.877046585083008
    8. 's' → logprob: -13.627046585083008
    9. '(children' → logprob: -13.752046585083008
    10. ' type' → logprob: -13.752046585083008

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0889449194073677
    2. '=' → logprob: -2.463944911956787
    3. ' ' → logprob: -12.713945388793945
    4. ' ='' → logprob: -13.213945388793945
    5. '='' → logprob: -14.713945388793945
    6. ',' → logprob: -16.963945388793945
    7. ' ="' → logprob: -16.963945388793945
    8. '  ' → logprob: -17.713945388793945
    9. '[' → logprob: -17.963945388793945
    10. ')' → logprob: -18.213945388793945

Token 378: ' '' (ID: 461)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.6222939491271973
    2. 'internal' → logprob: -1.8722939491271973
    3. ' '' → logprob: -1.9972939491271973
    4. ''int' → logprob: -2.2472939491271973
    5. ''' → logprob: -3.2472939491271973
    6. ' internal' → logprob: -4.247293949127197
    7. '"' → logprob: -4.997293949127197
    8. ''inter' → logprob: -5.497293949127197
    9. ' ' → logprob: -6.872293949127197
    10. '   ' → logprob: -7.747293949127197

Token 379: 'internal' (ID: 18891)
  Prédit: 'internal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'internal' → logprob: -8.53050296427682e-05
    2. 'inner' → logprob: -10.37508487701416
    3. ''' → logprob: -11.37508487701416
    4. ' internal' → logprob: -11.50008487701416
    5. 'inter' → logprob: -11.75008487701416
    6. 'intern' → logprob: -11.75008487701416
    7. '_internal' → logprob: -12.37508487701416
    8. 'node' → logprob: -12.37508487701416
    9. 'Internal' → logprob: -13.50008487701416
    10. '"' → logprob: -13.75008487701416

Token 380: ' node' (ID: 4596)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0051576197147369385
    2. ''
' → logprob: -5.630157470703125
    3. ' '' → logprob: -6.505157470703125
    4. ' '
' → logprob: -11.130157470703125
    5. 'node' → logprob: -11.505157470703125
    6. ' node' → logprob: -12.005157470703125
    7. ' ' → logprob: -12.255157470703125
    8. '\n' → logprob: -12.255157470703125
    9. '_node' → logprob: -12.255157470703125
    10. '"' → logprob: -12.630157470703125

Token 381: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6934383511543274
    2. ''
' → logprob: -0.6934383511543274
    3. '       ' → logprob: -8.818438529968262
    4. ''
' → logprob: -9.193438529968262
    5. '           ' → logprob: -10.943438529968262
    6. '   ' → logprob: -11.568438529968262
    7. ''

' → logprob: -12.693438529968262
    8. '<|end|>' → logprob: -12.943438529968262
    9. '<|end|>' → logprob: -13.693438529968262
    10. '\n' → logprob: -13.818438529968262

Token 382: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048724301159381866
    2. '
' → logprob: -4.173724174499512
    3. '           ' → logprob: -4.298724174499512
    4. '   ' → logprob: -4.798724174499512
    5. '<|end|>' → logprob: -5.423724174499512
    6. ' for' → logprob: -5.798724174499512
    7. 'for' → logprob: -6.173724174499512
    8. '        
' → logprob: -8.173724174499512
    9. 'node' → logprob: -9.298724174499512
    10. ' ' → logprob: -9.673724174499512

Token 383: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.047340668737888336
    2. 'for' → logprob: -3.2973406314849854
    3. '           ' → logprob: -5.0473408699035645
    4. '       ' → logprob: -6.5473408699035645
    5. ' node' → logprob: -7.4223408699035645
    6. 'if' → logprob: -7.7973408699035645
    7. '   ' → logprob: -8.672340393066406
    8. ' for' → logprob: -8.797340393066406
    9. '            
' → logprob: -11.047340393066406
    10. 'children' → logprob: -11.297340393066406

Token 384: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00010711929644457996
    2. '[idx' → logprob: -9.625106811523438
    3. 's' → logprob: -10.875106811523438
    4. 'list' → logprob: -11.750106811523438
    5. 'List' → logprob: -11.875106811523438
    6. '.' → logprob: -12.625106811523438
    7. '       ' → logprob: -13.750106811523438
    8. '[' → logprob: -14.375106811523438
    9. '.list' → logprob: -14.750106811523438
    10. '           ' → logprob: -15.000106811523438

Token 385: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00044103997061029077
    2. '[node' → logprob: -7.750441074371338
    3. '[' → logprob: -13.00044059753418
    4. 'idx' → logprob: -13.00044059753418
    5. '```' → logprob: -13.62544059753418
    6. '[int' → logprob: -14.50044059753418
    7. '[parent' → logprob: -14.50044059753418
    8. 's' → logprob: -14.62544059753418
    9. '[index' → logprob: -15.50044059753418
    10. '[id' → logprob: -15.50044059753418

Token 386: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.07159561663866043
    2. '.children' → logprob: -2.6965956687927246
    3. '.degree' → logprob: -6.946595668792725
    4. '.' → logprob: -8.196595191955566
    5. ').' → logprob: -8.446595191955566
    6. '.s' → logprob: -9.821595191955566
    7. '}.' → logprob: -10.071595191955566
    8. ' ].' → logprob: -10.946595191955566
    9. ' .' → logprob: -11.071595191955566
    10. 'children' → logprob: -11.446595191955566

Token 387: 'children' (ID: 10961)
  Prédit: 'children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.007669444661587477
    2. 'degree' → logprob: -4.882669448852539
    3. 'child' → logprob: -11.132669448852539
    4. 'parent' → logprob: -11.382669448852539
    5. 'depth' → logprob: -11.507669448852539
    6. 's' → logprob: -11.507669448852539
    7. 'siblings' → logprob: -12.257669448852539
    8. ' children' → logprob: -12.507669448852539
    9. '	children' → logprob: -13.007669448852539
    10. '.children' → logprob: -13.507669448852539

Token 388: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10030598193407059
    2. ' =' → logprob: -2.3503060340881348
    3. '.extend' → logprob: -9.225305557250977
    4. '+=' → logprob: -15.350305557250977
    5. '[:]' → logprob: -15.600305557250977
    6. '.=' → logprob: -15.975305557250977
    7. ' +=' → logprob: -16.350305557250977
    8. '[' → logprob: -16.475305557250977
    9. '＝' → logprob: -16.600305557250977
    10. ' ' → logprob: -17.350305557250977

Token 389: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.0026659078430384398
    2. ' children' → logprob: -6.127665996551514
    3. '[' → logprob: -7.752665996551514
    4. 'child' → logprob: -11.127665519714355
    5. '	children' → logprob: -11.252665519714355
    6. '(children' → logprob: -11.627665519714355
    7. '.children' → logprob: -11.877665519714355
    8. '[ch' → logprob: -13.002665519714355
    9. '[
' → logprob: -13.252665519714355
    10. ' [' → logprob: -13.752665519714355

Token 390: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7450030446052551
    2. '<|end|>' → logprob: -0.7450030446052551
    3. '       ' → logprob: -3.7450029850006104
    4. '           ' → logprob: -3.7450029850006104
    5. '<|end|>' → logprob: -5.9950032234191895
    6. '   ' → logprob: -8.245002746582031
    7. '[' → logprob: -9.370002746582031
    8. ',' → logprob: -9.620002746582031
    9. '
' → logprob: -9.745002746582031
    10. '        
' → logprob: -9.995002746582031

Token 391: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07759185135364532
    2. '           ' → logprob: -2.702591896057129
    3. 'for' → logprob: -6.077591896057129
    4. ' for' → logprob: -6.327591896057129
    5. '
' → logprob: -6.577591896057129
    6. '   ' → logprob: -6.702591896057129
    7. '<|end|>' → logprob: -7.077591896057129
    8. '        
' → logprob: -10.827591896057129
    9. ' ' → logprob: -10.952591896057129
    10. '<|end|>' → logprob: -11.327591896057129

Token 392: ' node' (ID: 4596)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5976714491844177
    2. 'node' (adapté à ' node') → logprob: -1.0976715087890625
    3. '           ' → logprob: -2.5976715087890625
    4. ' for' → logprob: -3.9726715087890625
    5. '   ' → logprob: -4.5976715087890625
    6. '       ' → logprob: -4.8476715087890625
    7. ' node' → logprob: -5.3476715087890625
    8. '
' → logprob: -8.722671508789062
    9. '[node' → logprob: -10.347671508789062
    10. ' ' → logprob: -10.722671508789062

Token 393: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.334533878136426e-05
    2. '[idx' → logprob: -11.000042915344238
    3. 'list' → logprob: -11.000042915344238
    4. 'List' → logprob: -12.750042915344238
    5. 'degree' → logprob: -13.375042915344238
    6. '[' → logprob: -13.750042915344238
    7. 's' → logprob: -14.125042915344238
    8. '           ' → logprob: -14.125042915344238
    9. '       ' → logprob: -14.250042915344238
    10. '.' → logprob: -14.375042915344238

Token 394: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00036846695002168417
    2. '_list' → logprob: -8.000368118286133
    3. 'list' → logprob: -11.625368118286133
    4. '[node' → logprob: -11.750368118286133
    5. 'List' → logprob: -12.000368118286133
    6. '[' → logprob: -12.875368118286133
    7. 'idx' → logprob: -13.250368118286133
    8. '```' → logprob: -13.750368118286133
    9. '(idx' → logprob: -14.625368118286133
    10. '[int' → logprob: -14.625368118286133

Token 395: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.45827245712280273
    2. '.degree' → logprob: -1.0832724571228027
    3. '.' → logprob: -3.5832724571228027
    4. ').' → logprob: -7.708272457122803
    5. '.children' → logprob: -8.458272933959961
    6. '}.' → logprob: -8.833272933959961
    7. ' .' → logprob: -8.833272933959961
    8. '       ' → logprob: -9.708272933959961
    9. '[' → logprob: -9.833272933959961
    10. '   ' → logprob: -9.833272933959961

Token 396: 'degree' (ID: 98659)
  Prédit: 'degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -2.45848218582978e-06
    2. 's' → logprob: -13.37500286102295
    3. 'depth' → logprob: -14.87500286102295
    4. ' degree' → logprob: -15.25000286102295
    5. 'parent' → logprob: -16.000001907348633
    6. 'children' → logprob: -16.125001907348633
    7. 'deg' → logprob: -17.000001907348633
    8. '   ' → logprob: -18.000001907348633
    9. '.degree' → logprob: -18.000001907348633
    10. 'type' → logprob: -18.125001907348633

Token 397: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25213736295700073
    2. '=' → logprob: -1.5021374225616455
    3. ' +=' → logprob: -8.752137184143066
    4. '=len' → logprob: -10.502137184143066
    5. '+=' → logprob: -10.752137184143066
    6. ' ' → logprob: -14.627137184143066
    7. 'len' → logprob: -15.752137184143066
    8. '[' → logprob: -16.252138137817383
    9. '=int' → logprob: -16.377138137817383
    10. '   ' → logprob: -16.627138137817383

Token 398: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2897009551525116
    2. '2' → logprob: -1.789700984954834
    3. 'sum' → logprob: -2.539700984954834
    4. ' len' → logprob: -5.539700984954834
    5. 'children' → logprob: -7.289700984954834
    6. ' sum' → logprob: -7.414700984954834
    7. '(len' → logprob: -8.914700508117676
    8. ' ' → logprob: -9.039700508117676
    9. 'max' → logprob: -9.789700508117676
    10. '0' → logprob: -10.289700508117676

Token 399: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.14396990835666656
    2. '2' → logprob: -2.643970012664795
    3. 'sum' → logprob: -2.768970012664795
    4. 'children' → logprob: -9.018969535827637
    5. '(len' → logprob: -9.768969535827637
    6. ' len' → logprob: -10.143969535827637
    7. 'max' → logprob: -10.393969535827637
    8. '0' → logprob: -11.018969535827637
    9. '[len' → logprob: -12.268969535827637
    10. ' sum' → logprob: -12.518969535827637

Token 400: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09302575886249542
    2. '
' → logprob: -3.3430256843566895
    3. 'if' → logprob: -3.9680256843566895
    4. '           ' → logprob: -4.2180256843566895
    5. '   ' → logprob: -4.8430256843566895
    6. '       ' → logprob: -4.9680256843566895
    7. '	if' → logprob: -6.7180256843566895
    8. ' or' → logprob: -6.7180256843566895
    9. '<|end|>' → logprob: -6.8430256843566895
    10. ' +' → logprob: -7.2180256843566895

Token 401: ' (-' (ID: 21382)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.10146836191415787
    2. '(children' → logprob: -2.476468324661255
    3. ' children' → logprob: -4.476468563079834
    4. '-' → logprob: -7.351468563079834
    5. 'len' → logprob: -8.976468086242676
    6. 'child' → logprob: -9.601468086242676
    7. '	children' → logprob: -10.101468086242676
    8. 'all' → logprob: -10.476468086242676
    9. '(' → logprob: -10.601468086242676
    10. '(len' → logprob: -10.601468086242676

Token 402: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00615678122267127
    2. 'children' → logprob: -5.506156921386719
    3. '-' → logprob: -7.006156921386719
    4. ' children' → logprob: -7.381156921386719
    5. '(children' → logprob: -8.256156921386719
    6. ' ' → logprob: -9.131156921386719
    7. ' -' → logprob: -9.131156921386719
    8. '2' → logprob: -10.256156921386719
    9. 'len' → logprob: -12.256156921386719
    10. '           ' → logprob: -12.506156921386719

Token 403: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06206067278981209
    2. 'not' → logprob: -2.812060594558716
    3. ' in' → logprob: -9.812060356140137
    4. ')' → logprob: -11.312060356140137
    5. 'in' → logprob: -11.562060356140137
    6. '	not' → logprob: -11.562060356140137
    7. '!=' → logprob: -13.187060356140137
    8. ' ' → logprob: -13.312060356140137
    9. '<' → logprob: -14.562060356140137
    10. ',' → logprob: -14.687060356140137

Token 404: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.04303595796227455
    2. ' children' → logprob: -3.1680359840393066
    3. '(children' → logprob: -10.543035507202148
    4. '	children' → logprob: -12.043035507202148
    5. '.children' → logprob: -13.668035507202148
    6. 'child' → logprob: -14.043035507202148
    7. '_children' → logprob: -14.168035507202148
    8. ')' → logprob: -14.168035507202148
    9. '   ' → logprob: -14.668035507202148
    10. ' ' → logprob: -15.668035507202148

Token 405: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04736613482236862
    2. ')==' → logprob: -3.297366142272949
    3. ' or' → logprob: -5.672366142272949
    4. ' )' → logprob: -5.922366142272949
    5. '==' → logprob: -6.172366142272949
    6. ' else' → logprob: -8.29736614227295
    7. ' and' → logprob: -8.67236614227295
    8. 'or' → logprob: -9.17236614227295
    9. ' ==' → logprob: -9.17236614227295
    10. '        ' → logprob: -9.54736614227295

Token 406: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16255271434783936
    2. 'else' → logprob: -1.9125527143478394
    3. ' or' → logprob: -6.662552833557129
    4. '.count' → logprob: -8.037552833557129
    5. 'count' → logprob: -8.912552833557129
    6. '+' → logprob: -9.287552833557129
    7. '.' → logprob: -9.787552833557129
    8. ' ' → logprob: -9.912552833557129
    9. '       ' → logprob: -10.162552833557129
    10. '==' → logprob: -10.287552833557129

Token 407: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011236425780225545
    2. ' ' → logprob: -9.125112533569336
    3. '   ' → logprob: -13.375112533569336
    4. 'len' → logprob: -13.375112533569336
    5. '       ' → logprob: -16.625112533569336
    6. '  ' → logprob: -17.125112533569336
    7. ' len' → logprob: -17.250112533569336
    8. '    ' → logprob: -17.375112533569336
    9. '     ' → logprob: -17.750112533569336
    10. '
' → logprob: -18.000112533569336

Token 408: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.6776029699249193e-05
    2. 'len' → logprob: -11.12502670288086
    3. ' ' → logprob: -11.37502670288086
    4. '   ' → logprob: -15.00002670288086
    5. ' len' → logprob: -15.87502670288086
    6. '  ' → logprob: -17.12502670288086
    7. '```' → logprob: -17.56252670288086
    8. '
' → logprob: -17.93752670288086
    9. '(len' → logprob: -18.18752670288086
    10. '       ' → logprob: -18.68752670288086

Token 409: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2594909071922302
    2. '           ' → logprob: -1.509490966796875
    3. '
' → logprob: -5.259490966796875
    4. 'for' → logprob: -6.509490966796875
    5. ' for' → logprob: -7.634490966796875
    6. '   ' → logprob: -8.384490966796875
    7. '<|end|>' → logprob: -9.509490966796875
    8. '               ' → logprob: -10.759490966796875
    9. ',' → logprob: -11.884490966796875
    10. '        
' → logprob: -12.134490966796875

Token 410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005406996235251427
    2. 'for' → logprob: -5.630406856536865
    3. ' for' → logprob: -7.005406856536865
    4. '           ' → logprob: -7.505406856536865
    5. '   ' → logprob: -8.380407333374023
    6. '
' → logprob: -9.380407333374023
    7. '<|end|>' → logprob: -11.255407333374023
    8. '        
' → logprob: -11.755407333374023
    9. ',' → logprob: -12.130407333374023
    10. ' ' → logprob: -13.755407333374023

Token 411: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1933620423078537
    2. 'for' → logprob: -1.8183619976043701
    3. ' for' → logprob: -4.443362236022949
    4. '   ' → logprob: -6.443362236022949
    5. '           ' → logprob: -9.56836223602295
    6. 'if' → logprob: -9.94336223602295
    7. '
' → logprob: -10.44336223602295
    8. ' ' → logprob: -12.69336223602295
    9. 'else' (adapté à ' else') → logprob: -12.69336223602295
    10. '        
' → logprob: -12.81836223602295

Token 412: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2401478886604309
    2. ':' → logprob: -1.9901478290557861
    3. '           ' → logprob: -2.615147829055786
    4. '       ' → logprob: -5.740148067474365
    5. '   ' → logprob: -7.865148067474365
    6. '          ' → logprob: -11.240147590637207
    7. ',' → logprob: -11.990147590637207
    8. '               ' → logprob: -12.240147590637207
    9. '
' → logprob: -12.240147590637207
    10. ' :
' → logprob: -12.240147590637207

Token 413: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023282283917069435
    2. 'node' → logprob: -4.398282051086426
    3. '       ' → logprob: -4.648282051086426
    4. ' node' → logprob: -7.023282051086426
    5. '   ' → logprob: -9.023282051086426
    6. ' for' → logprob: -9.898282051086426
    7. 'for' → logprob: -10.023282051086426
    8. 'continue' → logprob: -12.023282051086426
    9. 'pass' → logprob: -12.148282051086426
    10. '```' → logprob: -12.273282051086426

Token 414: ' #' (ID: 1069)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.007441686000674963
    2. ' node' → logprob: -5.132441520690918
    3. 'pass' → logprob: -7.257441520690918
    4. '       ' → logprob: -7.882441520690918
    5. '           ' → logprob: -8.882441520690918
    6. '   ' → logprob: -9.132441520690918
    7. 'continue' → logprob: -9.132441520690918
    8. '#' (adapté à ' #') → logprob: -10.257441520690918
    9. ' pass' → logprob: -10.882441520690918
    10. '
' → logprob: -11.757441520690918

Token 415: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.03934294357895851
    2. ' node' → logprob: -3.2893428802490234
    3. '       ' → logprob: -7.539342880249023
    4. '#' → logprob: -8.039342880249023
    5. '           ' → logprob: -8.539342880249023
    6. '   ' → logprob: -9.289342880249023
    7. 'pass' → logprob: -9.414342880249023
    8. 'continue' → logprob: -10.789342880249023
    9. '
' → logprob: -10.914342880249023
    10. ' #' → logprob: -11.414342880249023

Token 416: ' is' (ID: 382)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0005838918150402606
    2. '[idx' → logprob: -7.500584125518799
    3. 'type' → logprob: -11.37558364868164
    4. 'List' → logprob: -12.50058364868164
    5. 'idx' → logprob: -12.62558364868164
    6. 's' → logprob: -12.62558364868164
    7. 'list' → logprob: -13.12558364868164
    8. '
' → logprob: -13.37558364868164
    9. '       ' → logprob: -13.75058364868164
    10. '(idx' → logprob: -14.25058364868164

Token 417: ' leaf' (ID: 25882)
  Prédit: ' leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leaf' → logprob: -0.619866132736206
    2. 'leaf' → logprob: -1.369866132736206
    3. 'a' → logprob: -2.119866132736206
    4. ' a' → logprob: -2.494866132736206
    5. ' node' → logprob: -6.744866371154785
    6. ' internal' → logprob: -6.744866371154785
    7. 'internal' → logprob: -6.869866371154785
    8. ' Node' → logprob: -8.119866371154785
    9. '_leaf' → logprob: -8.119866371154785
    10. 'node' → logprob: -8.369866371154785

Token 418: ' as' (ID: 472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.060696180909872055
    2. '       ' → logprob: -3.0606961250305176
    3. 'node' → logprob: -5.685696125030518
    4. ',' → logprob: -6.060696125030518
    5. '
' → logprob: -6.185696125030518
    6. ' node' → logprob: -6.435696125030518
    7. '   ' → logprob: -7.060696125030518
    8. '<|end|>' → logprob: -7.060696125030518
    9. ',node' → logprob: -8.185696601867676
    10. '[node' → logprob: -8.560696601867676

Token 419: ' default' (ID: 2787)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.958141565322876
    2. ' node' → logprob: -1.583141565322876
    3. ' is' → logprob: -1.708141565322876
    4. '       ' → logprob: -2.958141565322876
    5. 'node' → logprob: -2.958141565322876
    6. ' leaf' → logprob: -3.083141565322876
    7. ' True' → logprob: -3.833141565322876
    8. ' well' → logprob: -5.083141326904297
    9. ' it' → logprob: -5.333141326904297
    10. 'True' → logprob: -5.458141326904297

Token 420: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017067687585949898
    2. '       ' → logprob: -4.392067909240723
    3. ' continue' → logprob: -5.892067909240723
    4. 'continue' → logprob: -7.392067909240723
    5. ' pass' → logprob: -8.017067909240723
    6. '<|end|>' → logprob: -8.017067909240723
    7. '   ' → logprob: -9.017067909240723
    8. 'pass' → logprob: -9.142067909240723
    9. 'node' → logprob: -9.267067909240723
    10. ' node' → logprob: -9.267067909240723

Token 421: ' children' (ID: 3953)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04972352832555771
    2. '       ' → logprob: -3.6747236251831055
    3. ' continue' → logprob: -4.4247236251831055
    4. 'continue' → logprob: -4.5497236251831055
    5. 'pass' → logprob: -8.674723625183105
    6. 'node' → logprob: -8.924723625183105
    7. ' pass' → logprob: -8.924723625183105
    8. ' node' → logprob: -9.799723625183105
    9. '   ' → logprob: -9.924723625183105
    10. '```' → logprob: -11.424723625183105

Token 422: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4324595332145691
    2. '=' → logprob: -1.0574595928192139
    3. '=[]' → logprob: -5.682459354400635
    4. ' is' → logprob: -9.682459831237793
    5. ' remains' → logprob: -9.682459831237793
    6. ' are' → logprob: -9.807459831237793
    7. ' remain' → logprob: -10.057459831237793
    8. '           ' → logprob: -10.557459831237793
    9. '=[]
' → logprob: -10.932459831237793
    10. ':' → logprob: -11.182459831237793

Token 423: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06862425059080124
    2. ' []' → logprob: -2.943624258041382
    3. '[]
' → logprob: -4.443624019622803
    4. '[-' → logprob: -6.568624019622803
    5. ' []
' → logprob: -8.193624496459961
    6. '[])' → logprob: -10.193624496459961
    7. '       ' → logprob: -10.318624496459961
    8. '[:]' → logprob: -10.318624496459961
    9. '[]}' → logprob: -10.943624496459961
    10. '-' → logprob: -11.193624496459961

Token 424: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013935691677033901
    2. '       ' → logprob: -6.876393795013428
    3. '<|end|>' → logprob: -9.12639331817627
    4. 'continue' → logprob: -9.37639331817627
    5. '   ' → logprob: -9.50139331817627
    6. ' continue' → logprob: -10.62639331817627
    7. '		' → logprob: -11.12639331817627
    8. '               ' → logprob: -11.37639331817627
    9. '
' → logprob: -11.50139331817627
    10. '          ' → logprob: -12.25139331817627

Token 425: ' continue' (ID: 4901)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.04321909695863724
    2. ' node' → logprob: -3.6682190895080566
    3. '           ' → logprob: -4.293219089508057
    4. 'continue' (adapté à ' continue') → logprob: -6.418219089508057
    5. '       ' → logprob: -7.418219089508057
    6. 'pass' → logprob: -8.043219566345215
    7. ' continue' → logprob: -8.043219566345215
    8. '   ' → logprob: -9.168219566345215
    9. ' pass' → logprob: -9.293219566345215
    10. '	node' → logprob: -11.293219566345215

Token 426: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019572561606764793
    2. '
' → logprob: -4.644572734832764
    3. '<|end|>' → logprob: -5.019572734832764
    4. 'for' → logprob: -6.394572734832764
    5. '   ' → logprob: -7.019572734832764
    6. ' for' → logprob: -8.144572257995605
    7. '        
' → logprob: -9.394572257995605
    8. 'def' → logprob: -9.769572257995605
    9. '           ' → logprob: -10.019572257995605
    10. '<|end|>' → logprob: -10.519572257995605

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032115790992975235
    2. 'for' → logprob: -4.282115936279297
    3. '   ' → logprob: -4.407115936279297
    4. 'def' → logprob: -5.782115936279297
    5. '<|end|>' → logprob: -6.282115936279297
    6. ' for' → logprob: -7.782115936279297
    7. '
' → logprob: -8.782115936279297
    8. '           ' → logprob: -10.532115936279297
    9. '#' → logprob: -11.532115936279297
    10. '<|end|>' → logprob: -11.907115936279297

Token 428: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.012914787977933884
    2. '       ' → logprob: -4.762914657592773
    3. '   ' → logprob: -5.637914657592773
    4. ' for' → logprob: -7.637914657592773
    5. '#' → logprob: -8.512914657592773
    6. 'parent' → logprob: -11.262914657592773
    7. '	for' → logprob: -11.512914657592773
    8. 'def' → logprob: -11.887914657592773
    9. '
' → logprob: -12.512914657592773
    10. 'if' → logprob: -13.012914657592773

Token 429: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.8660235404968262
    2. 'c' → logprob: -0.9910235404968262
    3. ' child' → logprob: -2.491023540496826
    4. ' c' → logprob: -2.866023540496826
    5. 'i' → logprob: -3.116023540496826
    6. 'ch' → logprob: -4.241023540496826
    7. ' i' → logprob: -4.991023540496826
    8. ' ch' → logprob: -6.366023540496826
    9. 'idx' → logprob: -8.491024017333984
    10. 'j' → logprob: -8.616024017333984

Token 430: '_idx' (ID: 15257)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35392436385154724
    2. 'in' → logprob: -1.2289243936538696
    3. '_idx' → logprob: -5.35392427444458
    4. 'idx' → logprob: -7.47892427444458
    5. '_id' → logprob: -9.228924751281738
    6. '_index' → logprob: -10.603924751281738
    7. 'id' → logprob: -11.353924751281738
    8. '_in' → logprob: -11.353924751281738
    9. 'index' → logprob: -12.478924751281738
    10. '_' → logprob: -12.478924751281738

Token 431: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014165864326059818
    2. 'in' → logprob: -4.264165878295898
    3. ' ' → logprob: -13.639165878295898
    4. '	in' → logprob: -14.264165878295898
    5. 's' → logprob: -15.389165878295898
    6. '_in' → logprob: -16.1391658782959
    7. '  ' → logprob: -16.2641658782959
    8. 'n' → logprob: -17.2641658782959
    9. ',' → logprob: -17.3891658782959
    10. ' ' → logprob: -17.7641658782959

Token 432: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.021050017327070236
    2. ' children' → logprob: -3.896049976348877
    3. 'node' → logprob: -8.396050453186035
    4. 'child' → logprob: -8.646050453186035
    5. 'each' → logprob: -10.646050453186035
    6. ' node' → logprob: -10.646050453186035
    7. '(children' → logprob: -10.896050453186035
    8. '   ' → logprob: -11.396050453186035
    9. '[' → logprob: -11.646050453186035
    10. '	children' → logprob: -12.021050453186035

Token 433: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5253049731254578
    2. ':' → logprob: -0.9003049731254578
    3. '       ' → logprob: -6.775304794311523
    4. ' if' → logprob: -7.775304794311523
    5. '           ' → logprob: -8.025304794311523
    6. '):
' → logprob: -9.400304794311523
    7. 'if' → logprob: -9.900304794311523
    8. ':

' → logprob: -10.025304794311523
    9. '<|end|>' → logprob: -10.775304794311523
    10. '   ' → logprob: -10.900304794311523

Token 434: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15451817214488983
    2. 'if' → logprob: -2.2795181274414062
    3. ' if' → logprob: -3.4045181274414062
    4. '       ' → logprob: -4.904518127441406
    5. '   ' → logprob: -8.529518127441406
    6. '	       ' → logprob: -13.279518127441406
    7. '	if' → logprob: -14.029518127441406
    8. '	   ' → logprob: -14.654518127441406
    9. '            
' → logprob: -15.404518127441406
    10. ' ' → logprob: -15.529518127441406

Token 435: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0753946602344513
    2. '           ' → logprob: -3.325394630432129
    3. 'node' → logprob: -3.325394630432129
    4. ' if' → logprob: -7.575394630432129
    5. '       ' → logprob: -9.325394630432129
    6. '   ' → logprob: -9.575394630432129
    7. '               ' → logprob: -11.200394630432129
    8. ' node' → logprob: -11.200394630432129
    9. '            
' → logprob: -13.700394630432129
    10. ' ' → logprob: -14.075394630432129

Token 436: ' non' (ID: 2893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06029034033417702
    2. 'node' → logprob: -2.9352903366088867
    3. '           ' → logprob: -5.310290336608887
    4. ' if' → logprob: -8.060290336608887
    5. '       ' → logprob: -9.935290336608887
    6. '   ' → logprob: -10.060290336608887
    7. '               ' → logprob: -10.935290336608887
    8. ' node' → logprob: -11.060290336608887
    9. '
' → logprob: -13.060290336608887
    10. '            
' → logprob: -13.185290336608887

Token 437: '-existent' (ID: 130142)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13628605008125305
    2. ' -' → logprob: -2.1362860202789307
    3. ' if' → logprob: -5.26128625869751
    4. 'if' → logprob: -5.63628625869751
    5. '           ' → logprob: -8.261285781860352
    6. '   ' → logprob: -9.511285781860352
    7. '=-' → logprob: -9.886285781860352
    8. '
' → logprob: -10.886285781860352
    9. ' child' → logprob: -10.886285781860352
    10. '       ' → logprob: -11.011285781860352

Token 438: ' node' (ID: 4596)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12760962545871735
    2. 'if' → logprob: -2.1276097297668457
    3. ' child' → logprob: -8.502609252929688
    4. '           ' → logprob: -8.502609252929688
    5. 'child' → logprob: -9.627609252929688
    6. ' node' → logprob: -10.002609252929688
    7. ' ' → logprob: -11.002609252929688
    8. '   ' → logprob: -11.252609252929688
    9. 'node' → logprob: -11.252609252929688
    10. ' nodes' → logprob: -11.252609252929688

Token 439: ':' (ID: 25)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3014379143714905
    2. 'if' → logprob: -1.4264378547668457
    3. '           ' → logprob: -4.051437854766846
    4. ':' → logprob: -7.051437854766846
    5. '   ' → logprob: -7.676437854766846
    6. ' ==' → logprob: -7.801437854766846
    7. ' !=' → logprob: -8.426438331604004
    8. ',' → logprob: -8.676438331604004
    9. '==' → logprob: -9.301438331604004
    10. '<|end|>' → logprob: -9.426438331604004

Token 440: ' no' (ID: 860)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07731626182794571
    2. 'if' → logprob: -2.7023162841796875
    3. '           ' → logprob: -4.9523162841796875
    4. ' continue' → logprob: -8.327316284179688
    5. 'continue' → logprob: -10.577316284179688
    6. '   ' → logprob: -12.577316284179688
    7. '               ' → logprob: -12.827316284179688
    8. '	if' → logprob: -12.952316284179688
    9. ' ' → logprob: -13.077316284179688
    10. '<|end|>' → logprob: -13.452316284179688

Token 441: ' parent' (ID: 5980)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8802275657653809
    2. ' if' → logprob: -0.8802275657653809
    3. '           ' → logprob: -3.380227565765381
    4. ' child' → logprob: -3.380227565765381
    5. 'child' → logprob: -3.630227565765381
    6. '-' → logprob: -4.005227565765381
    7. 'continue' → logprob: -4.130227565765381
    8. ' continue' → logprob: -4.505227565765381
    9. '
' → logprob: -5.255227565765381
    10. ' -' → logprob: -5.380227565765381

Token 442: ' or' (ID: 503)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1061432361602783
    2. ' =' → logprob: -1.4811432361602783
    3. 'if' → logprob: -1.6061432361602783
    4. '=' → logprob: -1.7311432361602783
    5. '           ' → logprob: -2.8561432361602783
    6. ',' → logprob: -6.356142997741699
    7. '               ' → logprob: -6.606142997741699
    8. '=node' → logprob: -7.606142997741699
    9. '[node' → logprob: -7.731142997741699
    10. '   ' → logprob: -7.731142997741699

Token 443: ' sibling' (ID: 83632)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.1480863392353058
    2. ' child' → logprob: -2.0230863094329834
    3. 'if' → logprob: -5.7730865478515625
    4. ' if' → logprob: -6.1480865478515625
    5. '(child' → logprob: -9.773086547851562
    6. '           ' → logprob: -9.898086547851562
    7. 'continue' → logprob: -11.648086547851562
    8. ' continue' → logprob: -11.898086547851562
    9. '
' → logprob: -12.273086547851562
    10. '	child' → logprob: -12.773086547851562

Token 444: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32703444361686707
    2. ' if' → logprob: -1.3270344734191895
    3. 'if' → logprob: -4.4520344734191895
    4. ',' → logprob: -6.4520344734191895
    5. '
' → logprob: -8.702033996582031
    6. '            
' → logprob: -10.202033996582031
    7. '   ' → logprob: -10.327033996582031
    8. ' =' → logprob: -10.452033996582031
    9. '<|end|>' → logprob: -10.702033996582031
    10. '=' → logprob: -10.702033996582031

Token 445: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4421183466911316
    2. ' if' → logprob: -1.0671184062957764
    3. 'if' → logprob: -4.442118167877197
    4. ',' → logprob: -7.692118167877197
    5. '
' → logprob: -8.442118644714355
    6. ')' → logprob: -8.692118644714355
    7. '               ' → logprob: -8.817118644714355
    8. '<|end|>' → logprob: -8.817118644714355
    9. '       ' → logprob: -9.442118644714355
    10. '            
' → logprob: -9.567118644714355

Token 446: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001173321157693863
    2. '           ' → logprob: -7.001173496246338
    3. ' if' → logprob: -8.25117301940918
    4. '   ' → logprob: -14.37617301940918
    5. '       ' → logprob: -15.75117301940918
    6. '	if' → logprob: -16.75117301940918
    7. ' ' → logprob: -17.25117301940918
    8. 'If' → logprob: -18.00117301940918
    9. '               ' → logprob: -18.75117301940918
    10. '  ' → logprob: -18.87617301940918

Token 447: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.048623472452163696
    2. ' child' → logprob: -3.048623561859131
    3. '   ' → logprob: -10.673623085021973
    4. '	child' → logprob: -11.923623085021973
    5. '           ' → logprob: -13.548623085021973
    6. '(child' → logprob: -13.673623085021973
    7. ' ' → logprob: -13.923623085021973
    8. '    ' → logprob: -14.423623085021973
    9. '       ' → logprob: -14.423623085021973
    10. '  ' → logprob: -14.548623085021973

Token 448: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -13.625003814697266
    3. 'idx' → logprob: -13.750003814697266
    4. '_index' → logprob: -15.750003814697266
    5. '_IDX' → logprob: -15.875003814697266
    6. '_idxs' → logprob: -15.875003814697266
    7. '	idx' → logprob: -16.125003814697266
    8. '_ix' → logprob: -16.250003814697266
    9. '[idx' → logprob: -16.375003814697266
    10. '   ' → logprob: -16.875003814697266

Token 449: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6821156144142151
    2. '!=' → logprob: -1.0571155548095703
    3. ' !=' → logprob: -2.5571155548095703
    4. ' ==' → logprob: -2.8071155548095703
    5. '!=-' → logprob: -5.05711555480957
    6. '==-' → logprob: -6.05711555480957
    7. '=' → logprob: -8.43211555480957
    8. '>=' → logprob: -9.30711555480957
    9. ')' → logprob: -11.55711555480957
    10. ' ' → logprob: -11.68211555480957

Token 450: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005234002135694027
    2. ' -' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.005233764648438
    4. ' ' → logprob: -16.255233764648438
    5. '  ' → logprob: -18.505233764648438
    6. '	' → logprob: -18.505233764648438
    7. '```' → logprob: -20.630233764648438
    8. '       ' → logprob: -20.755233764648438
    9. '           ' → logprob: -21.005233764648438
    10. '`' → logprob: -21.505233764648438

Token 451: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.875004768371582
    3. '<|end|>' → logprob: -13.625004768371582
    4. '-' → logprob: -14.875004768371582
    5. '```' → logprob: -15.750004768371582
    6. '2' → logprob: -16.5625057220459
    7. ' -' → logprob: -16.8125057220459
    8. '...' → logprob: -16.9375057220459
    9. '   ' → logprob: -17.4375057220459
    10. '<|end|>' → logprob: -17.5000057220459

Token 452: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.725360631942749
    2. ':' → logprob: -0.850360631942749
    3. '               ' → logprob: -2.475360631942749
    4. '           ' → logprob: -5.475360870361328
    5. ' continue' → logprob: -9.350360870361328
    6. ' or' → logprob: -10.350360870361328
    7. 'continue' → logprob: -10.350360870361328
    8. '       ' → logprob: -10.725360870361328
    9. ':return' → logprob: -11.100360870361328
    10. ':
' → logprob: -11.100360870361328

Token 453: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.059299640357494354
    2. 'continue' → logprob: -3.4342997074127197
    3. ' continue' → logprob: -3.6842997074127197
    4. ':
' → logprob: -9.93429946899414
    5. ',' → logprob: -10.18429946899414
    6. '	continue' → logprob: -10.30929946899414
    7. ':' → logprob: -10.55929946899414
    8. '			' → logprob: -11.05929946899414
    9. '           ' → logprob: -11.43429946899414
    10. ' ' → logprob: -11.55929946899414

Token 454: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4886607229709625
    2. 'continue' (adapté à ' continue') → logprob: -0.9886606931686401
    3. '               ' → logprob: -4.23866081237793
    4. '	continue' → logprob: -10.48866081237793
    5. '                   ' → logprob: -11.23866081237793
    6. '   ' → logprob: -12.73866081237793
    7. '           ' → logprob: -12.98866081237793
    8. ' ' → logprob: -13.11366081237793
    9. '_continue' → logprob: -13.86366081237793
    10. 'return' → logprob: -15.36366081237793

Token 455: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001677198801189661
    2. 'node' → logprob: -7.1266770362854
    3. '
' → logprob: -7.5016770362854
    4. '            
' → logprob: -8.376677513122559
    5. ' node' → logprob: -9.876677513122559
    6. ',' → logprob: -11.251677513122559
    7. ',node' → logprob: -12.501677513122559
    8. '       ' → logprob: -12.626677513122559
    9. '<|end|>' → logprob: -13.001677513122559
    10. '               ' → logprob: -13.126677513122559

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02117164060473442
    2. 'node' → logprob: -3.8961715698242188
    3. ' node' → logprob: -8.021171569824219
    4. '       ' → logprob: -9.021171569824219
    5. '            
' → logprob: -9.646171569824219
    6. '
' → logprob: -10.271171569824219
    7. '<|end|>' → logprob: -11.021171569824219
    8. ',node' → logprob: -11.146171569824219
    9. '               ' → logprob: -11.646171569824219
    10. '[node' → logprob: -11.646171569824219

Token 457: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.4421640932559967
    2. '           ' → logprob: -1.0671640634536743
    3. ' node' → logprob: -4.692163944244385
    4. 'if' → logprob: -5.942163944244385
    5. '       ' → logprob: -6.942163944244385
    6. '            
' → logprob: -8.692164421081543
    7. ' if' → logprob: -9.067164421081543
    8. '
' → logprob: -9.067164421081543
    9. '   ' → logprob: -9.192164421081543
    10. '	node' → logprob: -11.067164421081543

Token 458: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2664456789934775e-06
    2. 'list' → logprob: -14.125000953674316
    3. '_parent' → logprob: -16.375001907348633
    4. '[parent' → logprob: -16.375001907348633
    5. 'List' → logprob: -16.500001907348633
    6. 'parent' → logprob: -16.625001907348633
    7. 's' → logprob: -16.875001907348633
    8. '._' → logprob: -17.500001907348633
    9. '_lists' → logprob: -17.875001907348633
    10. '=' → logprob: -18.000001907348633

Token 459: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.968312951968983e-06
    2. '[node' → logprob: -12.125009536743164
    3. ' [' → logprob: -13.000009536743164
    4. '[parent' → logprob: -13.625009536743164
    5. '           ' → logprob: -14.750009536743164
    6. '   ' → logprob: -15.625009536743164
    7. '       ' → logprob: -16.125009536743164
    8. '[int' → logprob: -16.625009536743164
    9. '```' → logprob: -17.375009536743164
    10. '[idx' → logprob: -17.750009536743164

Token 460: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -4.4849443838757e-06
    2. ' child' → logprob: -12.375004768371582
    3. 'children' → logprob: -16.875003814697266
    4. 'int' → logprob: -17.875003814697266
    5. '.child' → logprob: -18.125003814697266
    6. '	child' → logprob: -18.125003814697266
    7. 'node' → logprob: -18.625003814697266
    8. '(child' → logprob: -18.750003814697266
    9. 'each' → logprob: -18.875003814697266
    10. '_child' → logprob: -19.250003814697266

Token 461: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.012453491799533367
    2. 'idx' → logprob: -4.512453556060791
    3. '[idx' → logprob: -7.512453556060791
    4. '_list' → logprob: -8.262453079223633
    5. 's' → logprob: -9.262453079223633
    6. '       ' → logprob: -9.512453079223633
    7. 'list' → logprob: -9.512453079223633
    8. '.idx' → logprob: -9.637453079223633
    9. '].' → logprob: -10.137453079223633
    10. 'child' → logprob: -10.262453079223633

Token 462: '].' (ID: 1651)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.04431196302175522
    2. '].' → logprob: -3.169312000274658
    3. '.' → logprob: -7.669312000274658
    4. ' .' → logprob: -7.919312000274658
    5. ').' → logprob: -8.1693115234375
    6. '   ' → logprob: -9.4193115234375
    7. '}.' → logprob: -9.5443115234375
    8. ' ].' → logprob: -11.0443115234375
    9. '>.' → logprob: -11.7943115234375
    10. '.parents' → logprob: -12.1693115234375

Token 463: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -2.2200749754119897e-06
    2. ' parent' → logprob: -13.250001907348633
    3. '.parent' → logprob: -14.875001907348633
    4. '_parent' → logprob: -17.750001907348633
    5. '[parent' → logprob: -18.250001907348633
    6. '	parent' → logprob: -18.500001907348633
    7. 's' → logprob: -19.125001907348633
    8. ',parent' → logprob: -19.375001907348633
    9. '   ' → logprob: -20.375001907348633
    10. ' ' → logprob: -21.125001907348633

Token 464: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759419798851013
    2. '=' → logprob: -0.8259419798851013
    3. ' ' → logprob: -14.450942039489746
    4. ',' → logprob: -14.575942039489746
    5. '=index' → logprob: -14.575942039489746
    6. '=node' → logprob: -15.575942039489746
    7. '=int' → logprob: -15.700942039489746
    8. '=
' → logprob: -16.32594108581543
    9. ')' → logprob: -16.57594108581543
    10. '＝' → logprob: -16.82594108581543

Token 465: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -7.493430894101039e-05
    2. ' idx' → logprob: -9.500075340270996
    3. '[idx' → logprob: -17.12507438659668
    4. 'int' → logprob: -19.00007438659668
    5. '	idx' → logprob: -19.00007438659668
    6. '(idx' → logprob: -19.87507438659668
    7. '   ' → logprob: -20.37507438659668
    8. 'index' → logprob: -20.50007438659668
    9. '.idx' → logprob: -21.87507438659668
    10. 'id' → logprob: -21.87507438659668

Token 466: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050510287284851074
    2. '   ' → logprob: -3.9255104064941406
    3. '
' → logprob: -4.300510406494141
    4. '       ' → logprob: -5.300510406494141
    5. '<|end|>' → logprob: -5.425510406494141
    6. 'for' → logprob: -5.800510406494141
    7. ' for' → logprob: -6.425510406494141
    8. '<|end|>' → logprob: -7.925510406494141
    9. 'return' → logprob: -8.80051040649414
    10. 'def' → logprob: -8.92551040649414

Token 467: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: ' node' (ID: 4596)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.793571949005127
    2. 'siblings' → logprob: -1.418571949005127
    3. 's' → logprob: -2.043571949005127
    4. '#' → logprob: -2.668571949005127
    5. 'other' → logprob: -2.918571949005127
    6. 'for' → logprob: -4.043571949005127
    7. 'node' (adapté à ' node') → logprob: -4.293571949005127
    8. '           ' → logprob: -5.168571949005127
    9. 'left' → logprob: -5.668571949005127
    10. '       ' → logprob: -5.793571949005127

Token 469: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0006448837229982018
    2. 's' → logprob: -7.750644683837891
    3. 'siblings' → logprob: -9.75064468383789
    4. 'List' → logprob: -10.00064468383789
    5. '.' → logprob: -10.12564468383789
    6. 'list' → logprob: -10.87564468383789
    7. '<|end|>' → logprob: -11.25064468383789
    8. '.s' → logprob: -11.87564468383789
    9. '.children' → logprob: -12.25064468383789
    10. '_s' → logprob: -12.37564468383789

Token 470: '[' (ID: 58)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.07421751320362091
    2. '[' → logprob: -2.8242175579071045
    3. '[idx' → logprob: -4.824217319488525
    4. '[s' → logprob: -6.199217319488525
    5. '_list' → logprob: -6.949217319488525
    6. '[_' → logprob: -8.199217796325684
    7. '[parent' → logprob: -8.324217796325684
    8. 's' → logprob: -9.074217796325684
    9. 'node' → logprob: -9.324217796325684
    10. '_idx' → logprob: -9.949217796325684

Token 471: 'child' (ID: 5573)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.6897111535072327
    2. 'child' → logprob: -0.9397111535072327
    3. 'idx' → logprob: -3.439711093902588
    4. 'each' → logprob: -3.564711093902588
    5. 'siblings' → logprob: -4.064711093902588
    6. 'node' → logprob: -4.439711093902588
    7. 's' → logprob: -4.814711093902588
    8. ' children' → logprob: -6.314711093902588
    9. '(children' → logprob: -6.314711093902588
    10. ' each' → logprob: -7.064711093902588

Token 472: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00017278951418120414
    2. '_list' → logprob: -9.12517261505127
    3. 'idx' → logprob: -10.50017261505127
    4. 'list' → logprob: -10.87517261505127
    5. 'Idx' → logprob: -11.87517261505127
    6. 's' → logprob: -13.12517261505127
    7. '       ' → logprob: -13.12517261505127
    8. ']' → logprob: -13.50017261505127
    9. '   ' → logprob: -14.37517261505127
    10. '[idx' → logprob: -14.37517261505127

Token 473: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.631316602230072
    2. 's' → logprob: -1.3813166618347168
    3. ']' → logprob: -1.8813166618347168
    4. '.' → logprob: -4.381316661834717
    5. ']=' → logprob: -4.381316661834717
    6. '_s' → logprob: -4.381316661834717
    7. '.s' → logprob: -4.881316661834717
    8. ']._' → logprob: -5.756316661834717
    9. '=' → logprob: -6.256316661834717
    10. 'def' → logprob: -6.256316661834717

Token 474: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0017334904987365007
    2. 'siblings' → logprob: -6.626733303070068
    3. 'degree' → logprob: -8.126733779907227
    4. 'parent' → logprob: -10.626733779907227
    5. 'type' → logprob: -10.626733779907227
    6. 'children' → logprob: -11.126733779907227
    7. ' sibling' → logprob: -11.876733779907227
    8. 'if' → logprob: -12.001733779907227
    9. ' siblings' → logprob: -12.126733779907227
    10. '
' → logprob: -12.376733779907227

Token 475: 'ibling' (ID: 47701)
  Prédit: 'ibling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibling' → logprob: -0.0006404805462807417
    2. 'ibl' → logprob: -7.750640392303467
    3. 'ib' → logprob: -8.750640869140625
    4. 'ibli' → logprob: -10.000640869140625
    5. 'ibil' → logprob: -12.500640869140625
    6. 'iblings' → logprob: -13.250640869140625
    7. '   ' → logprob: -16.000640869140625
    8. '1' → logprob: -16.250640869140625
    9. 'lib' → logprob: -16.500640869140625
    10. ' ib' → logprob: -16.750640869140625

Token 476: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687223196029663
    2. '=' → logprob: -1.1368722915649414
    3. ' ' → logprob: -14.261872291564941
    4. '＝' → logprob: -14.761872291564941
    5. ' =
' → logprob: -16.261871337890625
    6. 's' → logprob: -17.386871337890625
    7. ' ==' → logprob: -18.386871337890625
    8. ' =)' → logprob: -18.386871337890625
    9. ' =
' → logprob: -18.636871337890625
    10. '=
' → logprob: -18.636871337890625

Token 477: ' sum' (ID: 4215)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.011723041534423828
    2. ' children' → logprob: -5.261723041534424
    3. '(children' → logprob: -5.761723041534424
    4. '[' → logprob: -6.261723041534424
    5. 'child' → logprob: -7.386723041534424
    6. 'idx' → logprob: -8.761722564697266
    7. '[node' → logprob: -8.761722564697266
    8. 'node' → logprob: -8.886722564697266
    9. 'siblings' → logprob: -9.636722564697266
    10. '	children' → logprob: -9.636722564697266

Token 478: '(children' (ID: 93953)
  Prédit: '(children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(children' → logprob: -0.5431646704673767
    2. 'children' → logprob: -0.9181646704673767
    3. '([' → logprob: -4.6681647300720215
    4. 'child' → logprob: -5.7931647300720215
    5. '(child' → logprob: -5.7931647300720215
    6. '[' → logprob: -6.4181647300720215
    7. '(i' → logprob: -7.5431647300720215
    8. '(x' → logprob: -8.293164253234863
    9. '(each' → logprob: -8.418164253234863
    10. '([-' → logprob: -8.543164253234863

Token 479: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010825905483216047
    2. ')-' → logprob: -7.001082420349121
    3. '[:' → logprob: -9.376082420349121
    4. ' )' → logprob: -9.751082420349121
    5. ' -' → logprob: -10.876082420349121
    6. ')
' → logprob: -13.001082420349121
    7. '[' → logprob: -13.376082420349121
    8. '-' → logprob: -13.876082420349121
    9. '[:]' → logprob: -14.251082420349121
    10. ']' → logprob: -14.501082420349121

Token 480: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759674310684204
    2. ' -' → logprob: -0.8259674310684204
    3. '-ex' → logprob: -11.075967788696289
    4. '           ' → logprob: -12.950967788696289
    5. '-child' → logprob: -13.200967788696289
    6. '-id' → logprob: -13.950967788696289
    7. '-s' → logprob: -13.950967788696289
    8. ' ' → logprob: -14.200967788696289
    9. '-re' → logprob: -14.450967788696289
    10. ' ' → logprob: -14.575967788696289

Token 481: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.3885251581668854
    2. 'idx' → logprob: -1.138525128364563
    3. ' child' → logprob: -6.763525009155273
    4. ' idx' → logprob: -7.638525009155273
    5. 'children' → logprob: -12.638525009155273
    6. 'int' → logprob: -12.888525009155273
    7. '(child' → logprob: -13.138525009155273
    8. '(idx' → logprob: -13.388525009155273
    9. 'parent' → logprob: -14.138525009155273
    10. '	child' → logprob: -14.138525009155273

Token 482: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.001862476347014308
    2. 'd' → logprob: -7.001862525939941
    3. 'idx' → logprob: -7.126862525939941
    4. 'x' → logprob: -9.126862525939941
    5. 'dx' → logprob: -10.876862525939941
    6. 'Idx' → logprob: -11.751862525939941
    7. 's' → logprob: -12.751862525939941
    8. '[' → logprob: -13.626862525939941
    9. 'child' → logprob: -13.626862525939941
    10. '       ' → logprob: -14.126862525939941

Token 483: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 484: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: ' root' (ID: 6577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1573024988174438
    2. 'n' → logprob: -1.2823024988174438
    3. 'if' → logprob: -1.6573024988174438
    4. 'def' → logprob: -2.0323023796081543
    5. 'return' → logprob: -3.0323023796081543
    6. 'root' (adapté à ' root') → logprob: -4.532302379608154
    7. 'N' → logprob: -4.782302379608154
    8. '#' → logprob: -4.782302379608154
    9. 'num' → logprob: -5.032302379608154
    10. 'node' → logprob: -6.032302379608154

Token 486: '_idx' (ID: 15257)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2425774484872818
    2. '=' → logprob: -1.8675774335861206
    3. '_idx' → logprob: -2.86757755279541
    4. '_index' → logprob: -5.74257755279541
    5. '_id' → logprob: -7.49257755279541
    6. 'idx' → logprob: -9.24257755279541
    7. ',' → logprob: -9.24257755279541
    8. '_' → logprob: -10.24257755279541
    9. '   ' → logprob: -11.49257755279541
    10. '=_' → logprob: -11.61757755279541

Token 487: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022058337926865
    2. '=' → logprob: -2.3502206802368164
    3. '=node' → logprob: -11.475220680236816
    4. ',' → logprob: -12.975220680236816
    5. '=root' → logprob: -14.350220680236816
    6. ' ' → logprob: -15.350220680236816
    7. '=int' → logprob: -15.600220680236816
    8. '=sum' → logprob: -16.4752197265625
    9. ' =
' → logprob: -17.1002197265625
    10. '=find' → logprob: -17.4752197265625

Token 488: ' [' (ID: 723)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.20377324521541595
    2. '0' → logprob: -3.078773260116577
    3. '_array' → logprob: -3.078773260116577
    4. '-' → logprob: -3.578773260116577
    5. 'node' → logprob: -3.828773260116577
    6. '[' → logprob: -4.203773021697998
    7. ' next' → logprob: -4.203773021697998
    8. '[next' → logprob: -6.078773021697998
    9. 'array' → logprob: -6.203773021697998
    10. '[_' → logprob: -6.453773021697998

Token 489: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.019444076344370842
    2. 'idx' → logprob: -4.394443988800049
    3. 'node' → logprob: -5.394443988800049
    4. 'x' → logprob: -6.269443988800049
    5. ' i' → logprob: -8.144444465637207
    6. ' idx' → logprob: -9.519444465637207
    7. 'index' → logprob: -10.144444465637207
    8. '_i' → logprob: -10.894444465637207
    9. 'n' → logprob: -11.269444465637207
    10. ' node' → logprob: -11.394444465637207

Token 490: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.386881947517395
    2. ' for' → logprob: -1.136881947517395
    3. '
' → logprob: -12.261881828308105
    4. ' ' → logprob: -12.761881828308105
    5. '   ' → logprob: -13.261881828308105
    6. 'node' → logprob: -14.886881828308105
    7. '    ' → logprob: -15.511881828308105
    8. ' 
' → logprob: -15.636881828308105
    9. '  ' → logprob: -15.886881828308105
    10. '

' → logprob: -16.011882781982422

Token 491: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001626025652512908
    2. ' i' → logprob: -6.626626014709473
    3. ',' → logprob: -8.251626014709473
    4. 'range' → logprob: -10.626626014709473
    5. ' in' → logprob: -11.876626014709473
    6. 'in' → logprob: -12.001626014709473
    7. ' range' → logprob: -13.751626014709473
    8. ',i' → logprob: -14.501626014709473
    9. 'idx' → logprob: -15.501626014709473
    10. 'enumer' → logprob: -17.00162696838379

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25804609060287476
    2. 'in' → logprob: -2.5080461502075195
    3. 'range' → logprob: -2.5080461502075195
    4. ' in' → logprob: -2.7580461502075195
    5. ' range' → logprob: -8.25804615020752
    6. 'i' → logprob: -8.38304615020752
    7. ',_' → logprob: -8.38304615020752
    8. ',node' → logprob: -8.63304615020752
    9. ',x' → logprob: -9.63304615020752
    10. ',r' → logprob: -9.75804615020752

Token 493: ' x' (ID: 1215)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.34131139516830444
    2. 'n' → logprob: -1.5913114547729492
    3. 'v' → logprob: -3.091311454772949
    4. ' node' → logprob: -3.591311454772949
    5. 'x' → logprob: -4.591311454772949
    6. ' n' → logprob: -6.466311454772949
    7. ' v' → logprob: -7.466311454772949
    8. ' x' → logprob: -9.09131145477295
    9. 'in' → logprob: -10.46631145477295
    10. 'e' → logprob: -10.59131145477295

Token 494: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1602596789598465
    2. ' in' → logprob: -1.91025972366333
    3. 'enumer' → logprob: -10.285259246826172
    4. ',' → logprob: -14.035259246826172
    5. 'n' → logprob: -15.285259246826172
    6. ' enumerate' → logprob: -15.535259246826172
    7. 'import' → logprob: -16.660259246826172
    8. ' ' → logprob: -17.035259246826172
    9. 'enum' → logprob: -17.410259246826172
    10. 'inthe' → logprob: -17.535259246826172

Token 495: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.014164566993713379
    2. ' enumerate' → logprob: -4.264164447784424
    3. '
' → logprob: -14.389164924621582
    4. 'enum' → logprob: -15.139164924621582
    5. 'en' → logprob: -16.514163970947266
    6. '(en' → logprob: -16.639163970947266
    7. 'in' → logprob: -16.889163970947266
    8. 'node' → logprob: -17.764163970947266
    9. 'e' → logprob: -18.139163970947266
    10. '(' → logprob: -18.139163970947266

Token 496: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.008629691787064075
    2. 'node' → logprob: -4.75862979888916
    3. ' node' → logprob: -11.13362979888916
    4. ' (' → logprob: -14.88362979888916
    5. '(' → logprob: -16.258628845214844
    6. ',node' → logprob: -16.758628845214844
    7. '	node' → logprob: -17.508628845214844
    8. '[node' → logprob: -17.508628845214844
    9. '=node' → logprob: -18.133628845214844
    10. '(
' → logprob: -18.883628845214844

Token 497: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.27099974633893e-05
    2. 'list' → logprob: -12.000012397766113
    3. 's' → logprob: -12.375012397766113
    4. 'ist' → logprob: -13.125012397766113
    5. '_lists' → logprob: -16.50001335144043
    6. 'List' → logprob: -17.00001335144043
    7. 'node' → logprob: -17.62501335144043
    8. '_LIST' → logprob: -17.62501335144043
    9. '(node' → logprob: -18.25001335144043
    10. '_node' → logprob: -18.62501335144043

Token 498: ')' (ID: 8)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11874394863843918
    2. ' if' → logprob: -2.618743896484375
    3. ')' → logprob: -3.243743896484375
    4. '   ' → logprob: -10.493743896484375
    5. '()' → logprob: -11.743743896484375
    6. '    ' → logprob: -12.493743896484375
    7. ' )' → logprob: -13.118743896484375
    8. ']' → logprob: -13.368743896484375
    9. 'parent' → logprob: -13.493743896484375
    10. '           ' → logprob: -13.618743896484375

Token 499: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.038048841059207916
    2. ' if' → logprob: -3.28804874420166
    3. '   ' → logprob: -12.78804874420166
    4. 'in' → logprob: -12.91304874420166
    5. ')' → logprob: -14.16304874420166
    6. ' ' → logprob: -15.03804874420166
    7. '    ' → logprob: -15.53804874420166
    8. '()' → logprob: -15.53804874420166
    9. '       ' → logprob: -16.288049697875977
    10. '  ' → logprob: -16.413049697875977

Token 500: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009124171338044107
    2. ' x' → logprob: -7.000912189483643
    3. '   ' → logprob: -15.2509126663208
    4. '
' → logprob: -15.2509126663208
    5. ' ' → logprob: -15.5009126663208
    6. 'node' → logprob: -16.375911712646484
    7. '  ' → logprob: -16.625911712646484
    8. '(x' → logprob: -16.750911712646484
    9. 'not' → logprob: -17.250911712646484
    10. '    ' → logprob: -17.500911712646484

Token 501: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.004176817834377289
    2. '.' → logprob: -5.504176616668701
    3. ' .' → logprob: -9.50417709350586
    4. '.user' → logprob: -10.87917709350586
    5. '.Parent' → logprob: -13.87917709350586
    6. 'parent' → logprob: -13.87917709350586
    7. '.parents' → logprob: -14.12917709350586
    8. '.object' → logprob: -15.00417709350586
    9. '.s' → logprob: -15.12917709350586
    10. '.has' → logprob: -15.12917709350586

Token 502: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25562795996665955
    2. ' ==' → logprob: -1.505627989768982
    3. '==-' → logprob: -5.6306281089782715
    4. ']==' → logprob: -9.380627632141113
    5. '=' → logprob: -11.505627632141113
    6. ')==' → logprob: -12.755627632141113
    7. '()==' → logprob: -13.380627632141113
    8. '==
' → logprob: -13.380627632141113
    9. '===' → logprob: -13.380627632141113
    10. '<' → logprob: -13.505627632141113

Token 503: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005530327325686812
    2. ' -' → logprob: -7.500553131103516
    3. '   ' → logprob: -18.625553131103516
    4. ' ' → logprob: -19.000553131103516
    5. '	' → logprob: -20.000553131103516
    6. '  ' → logprob: -20.375553131103516
    7. '−' → logprob: -22.000553131103516
    8. '
' → logprob: -22.750553131103516
    9. '-
' → logprob: -23.375553131103516
    10. '```' → logprob: -24.250553131103516

Token 504: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '-' → logprob: -15.750000953674316
    4. ' -' → logprob: -17.500001907348633
    5. '2' → logprob: -17.625001907348633
    6. '0' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '<|end|>' → logprob: -19.812501907348633
    9. '```' → logprob: -20.187501907348633
    10. '１' → logprob: -20.625001907348633

Token 505: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5691408514976501
    2. ']' → logprob: -1.069140911102295
    3. ']
' → logprob: -2.444140911102295
    4. ']

' → logprob: -5.569140911102295
    5. ']
' → logprob: -10.069140434265137
    6. '[' → logprob: -11.694140434265137
    7. ' ][' → logprob: -12.319140434265137
    8. '   ' → logprob: -12.569140434265137
    9. ']

' → logprob: -13.194140434265137
    10. '0' → logprob: -13.319140434265137

Token 506: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.000001907348633
    4. '-' → logprob: -19.125001907348633
    5. '
' → logprob: -19.625001907348633
    6. ':' → logprob: -20.000001907348633
    7. '۰' → logprob: -21.000001907348633
    8. '[' → logprob: -21.312501907348633
    9. ']' → logprob: -21.500001907348633
    10. '00' → logprob: -21.750001907348633

Token 507: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06433185189962387
    2. ')' → logprob: -2.8143317699432373
    3. ']
' → logprob: -6.689332008361816
    4. '
' → logprob: -7.689332008361816
    5. ')
' → logprob: -8.314332008361816
    6. '   ' → logprob: -8.564332008361816
    7. 'return' → logprob: -9.314332008361816
    8. ' ]' → logprob: -10.439332008361816
    9. 'def' → logprob: -11.064332008361816
    10. ')]' → logprob: -11.314332008361816

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004631145857274532
    2. 'return' → logprob: -5.504631042480469
    3. ' return' → logprob: -7.629631042480469
    4. '
' → logprob: -10.504631042480469
    5. '    
' → logprob: -11.254631042480469
    6. 'get' → logprob: -11.379631042480469
    7. '	return' → logprob: -11.879631042480469
    8. 'def' → logprob: -12.254631042480469
    9. '  ' → logprob: -14.754631042480469
    10. '#' → logprob: -14.754631042480469

Token 509: ' node' (ID: 4596)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23369640111923218
    2. '   ' → logprob: -1.733696460723877
    3. ' return' → logprob: -3.983696460723877
    4. 'get' → logprob: -4.483696460723877
    5. 'root' → logprob: -7.108696460723877
    6. 'for' → logprob: -8.358695983886719
    7. 'node' (adapté à ' node') → logprob: -8.358695983886719
    8. '
' → logprob: -8.858695983886719
    9. '    
' → logprob: -8.983695983886719
    10. ' get' → logprob: -9.233695983886719

Token 510: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0028835684061050415
    2. '_root' → logprob: -6.502883434295654
    3. 's' → logprob: -7.877883434295654
    4. ' =' → logprob: -8.377883911132812
    5. '=' → logprob: -8.377883911132812
    6. '=root' → logprob: -8.377883911132812
    7. 'list' → logprob: -8.627883911132812
    8. 'root' → logprob: -10.002883911132812
    9. '_' → logprob: -10.502883911132812
    10. '[root' → logprob: -11.502883911132812

Token 511: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.005330282263457775
    2. 'root' → logprob: -5.5053300857543945
    3. '[' → logprob: -8.005330085754395
    4. ',' → logprob: -8.255330085754395
    5. '<|end|>' → logprob: -8.630330085754395
    6. '=root' → logprob: -9.005330085754395
    7. 'def' → logprob: -9.630330085754395
    8. '(root' → logprob: -10.005330085754395
    9. '_root' → logprob: -10.380330085754395
    10. 'return' → logprob: -10.505330085754395

Token 512: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00019388488726690412
    2. 'idx' → logprob: -9.12519359588623
    3. '[root' → logprob: -9.87519359588623
    4. 'Idx' → logprob: -11.25019359588623
    5. 'root' → logprob: -11.62519359588623
    6. '_idxs' → logprob: -13.00019359588623
    7. '_root' → logprob: -13.12519359588623
    8. '][' → logprob: -14.12519359588623
    9. '_IDX' → logprob: -14.12519359588623
    10. 's' → logprob: -14.25019359588623

Token 513: '].' (ID: 1651)
  Prédit: '.depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.04303092882037163
    2. '].' → logprob: -3.7930309772491455
    3. '.type' → logprob: -4.418030738830566
    4. '.parent' → logprob: -5.418030738830566
    5. '.height' → logprob: -5.918030738830566
    6. '.s' → logprob: -8.543030738830566
    7. ' .' → logprob: -9.543030738830566
    8. ').' → logprob: -9.543030738830566
    9. '.' → logprob: -11.043030738830566
    10. '}.' → logprob: -11.418030738830566

Token 514: 'type' (ID: 2493)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.014872792176902294
    2. 'type' → logprob: -4.264873027801514
    3. 'parent' → logprob: -7.389873027801514
    4. 's' → logprob: -10.139872550964355
    5. 'height' → logprob: -10.264872550964355
    6. ' depth' → logprob: -11.764872550964355
    7. '.depth' → logprob: -13.264872550964355
    8. 'children' → logprob: -13.264872550964355
    9. 'siblings' → logprob: -13.264872550964355
    10. 'degree' → logprob: -14.139872550964355

Token 515: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326788663864136
    2. '=' → logprob: -1.3132679462432861
    3. ' ==' → logprob: -13.438267707824707
    4. ' ' → logprob: -13.938267707824707
    5. ',' → logprob: -13.938267707824707
    6. '='' → logprob: -14.188267707824707
    7. ' ='' → logprob: -14.188267707824707
    8. ' +=' → logprob: -14.313267707824707
    9. '==' → logprob: -14.813267707824707
    10. '+=' → logprob: -16.688268661499023

Token 516: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.020245322957634926
    2. '"' → logprob: -4.145245552062988
    3. ' '' → logprob: -5.645245552062988
    4. ' ' → logprob: -7.645245552062988
    5. '   ' → logprob: -10.020245552062988
    6. '`' → logprob: -10.020245552062988
    7. ''r' → logprob: -10.770245552062988
    8. 'root' → logprob: -10.895245552062988
    9. '	' → logprob: -11.270245552062988
    10. ' "' → logprob: -11.645245552062988

Token 517: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0005628037615679204
    2. ''' → logprob: -7.50056266784668
    3. ' root' → logprob: -12.00056266784668
    4. ''r' → logprob: -13.00056266784668
    5. '_root' → logprob: -14.62556266784668
    6. 'Root' → logprob: -15.37556266784668
    7. ''s' → logprob: -15.50056266784668
    8. 'internal' → logprob: -15.87556266784668
    9. '	root' → logprob: -16.12556266784668
    10. '"' → logprob: -16.12556266784668

Token 518: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20147766172885895
    2. ''
' → logprob: -1.7014776468276978
    3. ''
' → logprob: -9.826478004455566
    4. ''

' → logprob: -12.201478004455566
    5. ''\' → logprob: -13.576478004455566
    6. '"' → logprob: -14.201478004455566
    7. '
' → logprob: -14.451478004455566
    8. '\n' → logprob: -14.451478004455566
    9. ''#' → logprob: -14.701478004455566
    10. '   ' → logprob: -15.326478004455566

Token 519: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01323246955871582
    2. 'return' → logprob: -4.513232231140137
    3. 'get' → logprob: -6.888232231140137
    4. ' return' → logprob: -7.013232231140137
    5. 'def' → logprob: -9.763232231140137
    6. '    
' → logprob: -9.888232231140137
    7. 'for' → logprob: -9.888232231140137
    8. ' get' → logprob: -10.388232231140137
    9. '	return' → logprob: -11.013232231140137
    10. ' for' → logprob: -11.138232231140137

Token 520: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14114633202552795
    2. 'get' → logprob: -2.141146421432495
    3. '   ' → logprob: -4.766146183013916
    4. ' return' → logprob: -5.891146183013916
    5. 'for' → logprob: -6.016146183013916
    6. ' get' → logprob: -8.391146659851074
    7. 'def' → logprob: -10.391146659851074
    8. '
' → logprob: -10.391146659851074
    9. 'depth' → logprob: -10.766146659851074
    10. 'root' → logprob: -11.016146659851074

Token 521: ' add' (ID: 1147)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.5109770894050598
    2. 'for' → logprob: -1.885977029800415
    3. 'return' → logprob: -1.885977029800415
    4. ' get' → logprob: -3.135977029800415
    5. ' for' → logprob: -3.885977029800415
    6. ' return' → logprob: -4.385977268218994
    7. '   ' → logprob: -4.510977268218994
    8. 'depth' → logprob: -4.885977268218994
    9. 'def' → logprob: -7.260977268218994
    10. 'root' → logprob: -8.010976791381836

Token 522: ' node' (ID: 4596)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.3198520541191101
    2. '_depth' → logprob: -2.069852113723755
    3. ' for' → logprob: -2.694852113723755
    4. ' depth' → logprob: -3.944852113723755
    5. 'get' → logprob: -4.194851875305176
    6. 'for' → logprob: -4.319851875305176
    7. 'depth' → logprob: -4.944851875305176
    8. ' depths' → logprob: -5.069851875305176
    9. ' sys' → logprob: -5.194851875305176
    10. ' root' → logprob: -5.569851875305176

Token 523: ' depth' (ID: 13636)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.23785443603992462
    2. 's' → logprob: -2.737854480743408
    3. 'depth' → logprob: -3.362854480743408
    4. '_depth' → logprob: -3.487854480743408
    5. ' =' → logprob: -3.987854480743408
    6. ' depths' → logprob: -4.487854480743408
    7. ' for' → logprob: -4.862854480743408
    8. ' depth' → logprob: -5.237854480743408
    9. 'for' → logprob: -5.737854480743408
    10. 'type' → logprob: -5.862854480743408

Token 524: ' info' (ID: 5377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6961041688919067
    2. '
' → logprob: -0.9461041688919067
    3. 'for' → logprob: -3.196104049682617
    4. 'get' → logprob: -3.321104049682617
    5. ' for' → logprob: -3.696104049682617
    6. '(get' → logprob: -5.696104049682617
    7. ' get' → logprob: -6.696104049682617
    8. ' =' → logprob: -6.821104049682617
    9. '    
' → logprob: -6.821104049682617
    10. '=get' → logprob: -6.821104049682617

Token 525: ' --' (ID: 2230)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04641543701291084
    2. '
' → logprob: -3.171415328979492
    3. 'get' → logprob: -6.421415328979492
    4. '    
' → logprob: -7.046415328979492
    5. ' get' → logprob: -7.546415328979492
    6. ' for' → logprob: -8.171415328979492
    7. 'for' → logprob: -9.671415328979492
    8. ' 
' → logprob: -11.671415328979492
    9. '[get' → logprob: -12.171415328979492
    10. ',' → logprob: -12.296415328979492

Token 526: ' using' (ID: 2360)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.39034533500671387
    2. '   ' → logprob: -1.8903453350067139
    3. ' get' → logprob: -1.8903453350067139
    4. '
' → logprob: -4.640345573425293
    5. ' for' → logprob: -5.140345573425293
    6. 'for' → logprob: -5.265345573425293
    7. '    
' → logprob: -8.265345573425293
    8. '[get' → logprob: -10.265345573425293
    9. ' 
' → logprob: -10.390345573425293
    10. '(get' → logprob: -10.765345573425293

Token 527: ' DFS' (ID: 115767)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.06264487653970718
    2. ' get' → logprob: -2.8126449584960938
    3. '   ' → logprob: -8.312644958496094
    4. '[get' → logprob: -8.687644958496094
    5. 'def' → logprob: -9.687644958496094
    6. 'root' → logprob: -9.812644958496094
    7. 'for' → logprob: -9.937644958496094
    8. 'depth' → logprob: -11.062644958496094
    9. '
' → logprob: -11.437644958496094
    10. ' recursion' → logprob: -11.562644958496094

Token 528: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.389008104801178
    2. '   ' → logprob: -1.1390080451965332
    3. '    
' → logprob: -7.014008045196533
    4. 'get' → logprob: -7.139008045196533
    5. ' get' → logprob: -8.264008522033691
    6. '(get' → logprob: -9.514008522033691
    7. '
' → logprob: -10.139008522033691
    8. ',get' → logprob: -11.389008522033691
    9. '.get' → logprob: -11.764008522033691
    10. ' 
' → logprob: -11.889008522033691

Token 529: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061992447823286057
    2. 'get' → logprob: -2.9369924068450928
    3. ' get' → logprob: -5.436992645263672
    4. '
' → logprob: -5.936992645263672
    5. '    
' → logprob: -9.811992645263672
    6. '(get' → logprob: -11.186992645263672
    7. 'return' → logprob: -12.436992645263672
    8. ',get' → logprob: -12.686992645263672
    9. '[get' → logprob: -12.936992645263672
    10. 'def' → logprob: -12.936992645263672

Token 530: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' (adapté à ' get') → logprob: -0.0005829381989315152
    2. ' get' → logprob: -7.500583171844482
    3. '
' → logprob: -10.750582695007324
    4. '   ' → logprob: -12.375582695007324
    5. 'return' → logprob: -12.750582695007324
    6. '_get' → logprob: -14.250582695007324
    7. 'for' → logprob: -15.000582695007324
    8. '    
' → logprob: -15.750582695007324
    9. 'depth' → logprob: -16.12558364868164
    10. '_' → logprob: -16.37558364868164

Token 531: '_depth' (ID: 44220)
  Prédit: '_depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depth' → logprob: -6.2729995988775045e-06
    2. 'depth' → logprob: -12.000006675720215
    3. ' depth' → logprob: -17.5000057220459
    4. 'Depth' → logprob: -19.8750057220459
    5. '_DEPTH' → logprob: -19.8750057220459
    6. ' Depth' → logprob: -20.8750057220459
    7. '_height' → logprob: -21.2500057220459
    8. 'get' → logprob: -21.5000057220459
    9. '_' → logprob: -21.6250057220459
    10. '_de' → logprob: -21.7500057220459

Token 532: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -7.493430894101039e-05
    2. 'node' → logprob: -9.500075340270996
    3. '(' → logprob: -17.50007438659668
    4. '[node' → logprob: -18.25007438659668
    5. '(root' → logprob: -18.87507438659668
    6. ' node' → logprob: -19.25007438659668
    7. '=node' → logprob: -19.87507438659668
    8. '	node' → logprob: -20.50007438659668
    9. ',node' → logprob: -20.87507438659668
    10. '(n' → logprob: -20.87507438659668

Token 533: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.32523515378125e-05
    2. 'list' → logprob: -9.750062942504883
    3. 'List' → logprob: -13.000062942504883
    4. '(node' → logprob: -13.250062942504883
    5. '[node' → logprob: -14.375062942504883
    6. 'node' → logprob: -15.500062942504883
    7. '=node' → logprob: -17.125062942504883
    8. '_LIST' → logprob: -17.625062942504883
    9. 'root' → logprob: -18.000062942504883
    10. ')' → logprob: -18.750062942504883

Token 534: '[root' (ID: 185287)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.00033665422233752906
    2. '[root' → logprob: -8.000336647033691
    3. '(node' → logprob: -14.000336647033691
    4. '[' → logprob: -16.000337600708008
    5. ')' → logprob: -16.625337600708008
    6. 'node' → logprob: -16.875337600708008
    7. ' [' → logprob: -17.000337600708008
    8. 'root' → logprob: -18.000337600708008
    9. ')[' → logprob: -18.375337600708008
    10. '[row' → logprob: -19.000337600708008

Token 535: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0012629714328795671
    2. 'root' → logprob: -7.62626314163208
    3. 'idx' → logprob: -7.87626314163208
    4. 'list' → logprob: -8.876262664794922
    5. '[root' → logprob: -8.876262664794922
    6. 'Idx' → logprob: -10.751262664794922
    7. '_index' → logprob: -11.126262664794922
    8. 'index' → logprob: -11.251262664794922
    9. '_list' → logprob: -11.376262664794922
    10. '[' → logprob: -11.376262664794922

Token 536: '])
' (ID: 5169)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4878692328929901
    2. ')' → logprob: -1.3628692626953125
    3. '])' → logprob: -2.1128692626953125
    4. '),' → logprob: -5.3628692626953125
    5. '],' → logprob: -6.2378692626953125
    6. '))' → logprob: -6.9878692626953125
    7. ' ,' → logprob: -7.4878692626953125
    8. ' )' → logprob: -7.8628692626953125
    9. ')
' → logprob: -8.112869262695312
    10. '})' → logprob: -9.487869262695312

Token 537: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005503391847014427
    2. 'get' → logprob: -5.630503177642822
    3. 'return' → logprob: -7.005503177642822
    4. '
' → logprob: -8.25550365447998
    5. 'def' → logprob: -8.25550365447998
    6. '    
' → logprob: -9.25550365447998
    7. ' return' → logprob: -9.25550365447998
    8. '<|end|>' → logprob: -9.25550365447998
    9. ' get' → logprob: -9.50550365447998
    10. 'generate' → logprob: -10.13050365447998

Token 538: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' (adapté à ' get') → logprob: -0.3634365200996399
    2. 'return' → logprob: -1.8634364604949951
    3. '   ' → logprob: -1.9884364604949951
    4. ' return' → logprob: -5.363436698913574
    5. ' get' → logprob: -5.863436698913574
    6. '
' → logprob: -6.488436698913574
    7. 'def' → logprob: -6.613436698913574
    8. '    
' → logprob: -7.238436698913574
    9. ' ' → logprob: -7.738436698913574
    10. 'generate' → logprob: -7.863436698913574

Token 539: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -9.088346359931165e-07
    2. 'height' → logprob: -14.000000953674316
    3. '_depth' → logprob: -17.875
    4. '_he' → logprob: -18.875
    5. '_HEIGHT' → logprob: -20.125
    6. '_length' → logprob: -20.125
    7. ' height' → logprob: -20.375
    8. 'Height' → logprob: -20.625
    9. '_' → logprob: -21.0
    10. '_size' → logprob: -21.625

Token 540: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.625
    3. ' (' → logprob: -17.375
    4. '(root' → logprob: -17.875
    5. '[node' → logprob: -19.125
    6. 'node' → logprob: -19.25
    7. '(n' → logprob: -19.875
    8. '(
' → logprob: -20.0
    9. '=node' → logprob: -20.125
    10. '(Node' → logprob: -20.25

Token 541: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00030412263004109263
    2. '[node' → logprob: -8.500304222106934
    3. 'list' → logprob: -9.250304222106934
    4. 'List' → logprob: -12.750304222106934
    5. '(node' → logprob: -13.875304222106934
    6. ')' → logprob: -15.500304222106934
    7. '[root' → logprob: -15.625304222106934
    8. 'node' → logprob: -15.625304222106934
    9. '[' → logprob: -16.750303268432617
    10. '[List' → logprob: -17.000303268432617

Token 542: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.0008117707911878824
    2. '[node' → logprob: -7.125811576843262
    3. ')' → logprob: -12.750811576843262
    4. 'root' → logprob: -13.625811576843262
    5. '(root' → logprob: -13.875811576843262
    6. '[' → logprob: -14.500811576843262
    7. '_root' → logprob: -14.875811576843262
    8. '[
' → logprob: -15.500811576843262
    9. '```' → logprob: -15.750811576843262
    10. '=root' → logprob: -15.875811576843262

Token 543: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0012393947690725327
    2. '[root' → logprob: -7.37623929977417
    3. 'root' → logprob: -7.50123929977417
    4. 'idx' → logprob: -10.376239776611328
    5. '_root' → logprob: -11.751239776611328
    6. 'list' → logprob: -12.501239776611328
    7. 'Idx' → logprob: -12.626239776611328
    8. ')' → logprob: -12.876239776611328
    9. '(root' → logprob: -12.876239776611328
    10. '=root' → logprob: -13.501239776611328

Token 544: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. ')
' → logprob: -11.250017166137695
    3. ' )' → logprob: -13.000017166137695
    4. ')

' → logprob: -13.750017166137695
    5. '))' → logprob: -15.625017166137695
    6. '())' → logprob: -16.250017166137695
    7. '   ' → logprob: -16.375017166137695
    8. ')return' → logprob: -16.375017166137695
    9. ')
' → logprob: -17.500017166137695
    10. ')#' → logprob: -17.750017166137695

Token 545: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 546: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009798707440495491
    2. '   ' → logprob: -4.759798526763916
    3. ' return' → logprob: -7.009798526763916
    4. 'for' → logprob: -8.384799003601074
    5. 'def' → logprob: -10.509799003601074
    6. '	return' → logprob: -11.259799003601074
    7. ' ' → logprob: -12.884799003601074
    8. '#' → logprob: -13.259799003601074
    9. ' for' → logprob: -13.509799003601074
    10. '  ' → logprob: -13.634799003601074

Token 547: ' node' (ID: 4596)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.8570675849914551
    2. 'None' → logprob: -1.357067584991455
    3. ' node' → logprob: -1.607067584991455
    4. 'node' → logprob: -2.607067584991455
    5. '<|end|>' → logprob: -3.982067584991455
    6. ' root' → logprob: -4.607067584991455
    7. 'root' → logprob: -5.107067584991455
    8. '[node' → logprob: -5.482067584991455
    9. '[root' → logprob: -5.607067584991455
    10. ' ' → logprob: -8.107067108154297

Token 548: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.018838047981262207
    2. 'list' → logprob: -4.143837928771973
    3. 'node' → logprob: -6.768837928771973
    4. '_array' → logprob: -6.893837928771973
    5. 'array' → logprob: -7.518837928771973
    6. 'o' → logprob: -10.518837928771973
    7. 'ist' → logprob: -10.643837928771973
    8. 'ode' → logprob: -11.643837928771973
    9. '```' → logprob: -12.143837928771973
    10. 'lst' → logprob: -12.518837928771973

Token 549: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28901708126068115
    2. '[' → logprob: -2.6640172004699707
    3. '<|end|>' → logprob: -3.0390172004699707
    4. '<|end|>' → logprob: -3.7890172004699707
    5. 'for' → logprob: -3.9140172004699707
    6. 'def' → logprob: -4.039017200469971
    7. 'if' → logprob: -4.164017200469971
    8. '[]' → logprob: -4.539017200469971
    9. 'n' → logprob: -4.664017200469971
    10. 'array' → logprob: -5.164017200469971

Token 551: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1269664317369461
    2. 'main' → logprob: -2.1269664764404297
    3. ' parse' → logprob: -10.87696647644043
    4. ' read' → logprob: -11.87696647644043
    5. 'parse' → logprob: -12.12696647644043
    6. 'read' → logprob: -12.75196647644043
    7. ' process' → logprob: -13.37696647644043
    8. 'process' → logprob: -13.87696647644043
    9. '_main' → logprob: -14.50196647644043
    10. ' run' → logprob: -15.12696647644043

Token 552: '_result' (ID: 11623)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.020464222878217697
    2. '_' → logprob: -4.7704644203186035
    3. '_node' → logprob: -4.8954644203186035
    4. '_nodes' → logprob: -5.7704644203186035
    5. '('_' → logprob: -8.020463943481445
    6. 'tree' → logprob: -8.645463943481445
    7. '_result' → logprob: -9.145463943481445
    8. '_info' → logprob: -9.145463943481445
    9. '("_' → logprob: -9.395463943481445
    10. '_type' → logprob: -10.020463943481445

Token 553: '(_' (ID: 4963)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5983119606971741
    2. '(node' → logprob: -0.9733119606971741
    3. '():
' → logprob: -2.7233119010925293
    4. '(_' → logprob: -5.223311901092529
    5. ' ():' → logprob: -7.723311901092529
    6. '(' → logprob: -8.473312377929688
    7. '(root' → logprob: -8.598312377929688
    8. '(tree' → logprob: -9.098312377929688
    9. '(nodes' → logprob: -9.223312377929688
    10. '()' → logprob: -9.473312377929688

Token 554: 'node' (ID: 7005)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.051473431289196014
    2. 'list' → logprob: -3.051473379135132
    3. 'node' → logprob: -6.426473617553711
    4. '):
' → logprob: -7.926473617553711
    5. '_array' → logprob: -8.051473617553711
    6. '):' → logprob: -8.551473617553711
    7. 'result' → logprob: -8.676473617553711
    8. '_list' → logprob: -9.676473617553711
    9. ')' → logprob: -9.801473617553711
    10. 'tree' → logprob: -10.551473617553711

Token 555: '):
' (ID: 1883)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.8051968812942505
    2. 's' → logprob: -1.0551968812942505
    3. '):
' → logprob: -1.9301968812942505
    4. '):' → logprob: -2.930196762084961
    5. 'list' → logprob: -5.180196762084961
    6. ')' → logprob: -8.805196762084961
    7. 'List' → logprob: -8.805196762084961
    8. '):

' → logprob: -8.805196762084961
    9. '_s' → logprob: -9.680196762084961
    10. '):
' → logprob: -9.930196762084961

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.673547563375905e-05
    2. '    
' → logprob: -9.750086784362793
    3. ':' → logprob: -11.250086784362793
    4. ' for' → logprob: -12.125086784362793
    5. ',' → logprob: -13.125086784362793
    6. '```' → logprob: -13.500086784362793
    7. '
' → logprob: -13.750086784362793
    8. '):
' → logprob: -13.875086784362793
    9. ':
' → logprob: -14.000086784362793
    10. '(' → logprob: -14.375086784362793

Token 557: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5343039631843567
    2. '   ' → logprob: -1.659303903579712
    3. 'for' → logprob: -2.409303903579712
    4. 'node' → logprob: -3.159303903579712
    5. ' print' → logprob: -3.284303903579712
    6. 'if' → logprob: -4.159304141998291
    7. ' for' → logprob: -4.534304141998291
    8. ' node' → logprob: -4.659304141998291
    9. 'def' → logprob: -5.659304141998291
    10. ' if' → logprob: -5.659304141998291

Token 558: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7212865948677063
    2. '(f' → logprob: -0.7212865948677063
    3. '(' → logprob: -3.9712865352630615
    4. '("' → logprob: -4.971286773681641
    5. '(_' → logprob: -6.596286773681641
    6. 'f' → logprob: -8.59628677368164
    7. '('{}' → logprob: -8.72128677368164
    8. '("("' → logprob: -9.84628677368164
    9. '('{' → logprob: -10.72128677368164
    10. '('(' → logprob: -10.72128677368164

Token 559: 'parent' (ID: 4903)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.9400331974029541
    2. 'Node' → logprob: -1.190033197402954
    3. '{}' → logprob: -2.065033197402954
    4. 'id' → logprob: -2.440033197402954
    5. 'Id' → logprob: -3.940033197402954
    6. 'ID' → logprob: -3.940033197402954
    7. ''' → logprob: -3.940033197402954
    8. 'Tree' → logprob: -5.315032958984375
    9. '[' → logprob: -5.440032958984375
    10. '{' → logprob: -5.690032958984375

Token 560: ' =' (ID: 314)
  Prédit: ':','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':',' → logprob: -0.4543256163597107
    2. ' =' → logprob: -1.9543256759643555
    3. ' :' → logprob: -2.5793256759643555
    4. '',' → logprob: -2.7043256759643555
    5. ':' → logprob: -2.9543256759643555
    6. '[' → logprob: -4.4543256759643555
    7. '_id' → logprob: -5.3293256759643555
    8. '[_' → logprob: -5.9543256759643555
    9. ',' → logprob: -6.4543256759643555
    10. ' ',' → logprob: -6.5793256759643555

Token 561: ' '' (ID: 461)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.4897882640361786
    2. '{}'.' → logprob: -0.989788293838501
    3. ' {}'.' → logprob: -4.989788055419922
    4. ''' → logprob: -5.239788055419922
    5. '_node' → logprob: -6.739788055419922
    6. '{}_' → logprob: -7.614788055419922
    7. ''+' → logprob: -7.614788055419922
    8. '{' → logprob: -7.864788055419922
    9. '%d' → logprob: -8.239788055419922
    10. ' ',' → logprob: -8.739788055419922

Token 562: ' +' (ID: 659)
  Prédit: '{}'.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}'.' → logprob: -0.1505221277475357
    2. '',' → logprob: -2.650522232055664
    3. '{}_' → logprob: -4.025522232055664
    4. ''' → logprob: -4.025522232055664
    5. '{},' → logprob: -4.150522232055664
    6. '_node' → logprob: -5.025522232055664
    7. '{' → logprob: -5.275522232055664
    8. '{}' → logprob: -6.025522232055664
    9. ',' → logprob: -6.650522232055664
    10. '{}".' → logprob: -7.775522232055664

Token 563: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -9.269565634895116e-05
    2. '(str' → logprob: -9.500092506408691
    3. ' str' → logprob: -11.000092506408691
    4. 'f' → logprob: -14.250092506408691
    5. '_str' → logprob: -15.000092506408691
    6. ''' → logprob: -16.625093460083008
    7. '	str' → logprob: -17.375093460083008
    8. '-str' → logprob: -19.125093460083008
    9. '[str' → logprob: -19.250093460083008
    10. '-' → logprob: -19.250093460083008

Token 564: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.07889936864376068
    2. '_node' → logprob: -2.578899383544922
    3. '(' → logprob: -12.453899383544922
    4. '_parent' → logprob: -13.703899383544922
    5. '(node' → logprob: -13.953899383544922
    6. '(Node' → logprob: -14.078899383544922
    7. ' (_' → logprob: -14.578899383544922
    8. '_n' → logprob: -14.703899383544922
    9. '_result' → logprob: -14.953899383544922
    10. '[_' → logprob: -15.203899383544922

Token 565: 'node' (ID: 7005)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.01964082568883896
    2. 'node' → logprob: -4.644640922546387
    3. '._' → logprob: -5.519640922546387
    4. '(_' → logprob: -6.019640922546387
    5. '_parent' → logprob: -6.769640922546387
    6. '.parent' → logprob: -6.894640922546387
    7. 'parent' → logprob: -7.519640922546387
    8. '[_' → logprob: -8.144640922546387
    9. '.node' → logprob: -8.394640922546387
    10. ' _' → logprob: -10.144640922546387

Token 566: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -7.584239938296378e-06
    2. 'parent' → logprob: -12.125007629394531
    3. ' .' → logprob: -14.125007629394531
    4. '.s' → logprob: -15.125007629394531
    5. '   ' → logprob: -15.250007629394531
    6. '.' → logprob: -16.12500762939453
    7. ').' → logprob: -16.25000762939453
    8. '[parent' → logprob: -16.25000762939453
    9. 's' → logprob: -16.62500762939453
    10. ')' → logprob: -16.75000762939453

Token 567: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02741532027721405
    2. ')
' → logprob: -3.6524152755737305
    3. '   ' → logprob: -7.7774152755737305
    4. ',' → logprob: -8.15241527557373
    5. '))' → logprob: -8.52741527557373
    6. ')+' → logprob: -9.02741527557373
    7. '))
' → logprob: -10.40241527557373
    8. ' )' → logprob: -11.15241527557373
    9. '+' → logprob: -12.02741527557373
    10. '())' → logprob: -12.52741527557373

Token 568: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21969786286354065
    2. ')
' → logprob: -2.469697952270508
    3. '   ' → logprob: -2.969697952270508
    4. ',' → logprob: -2.969697952270508
    5. ' +' → logprob: -5.469697952270508
    6. '+' → logprob: -5.719697952270508
    7. '+',' → logprob: -6.969697952270508
    8. '',' → logprob: -7.469697952270508
    9. '()' → logprob: -8.469697952270508
    10. '')' → logprob: -8.719697952270508

Token 569: ' ',',' (ID: 164787)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.005392653401941061
    2. ''',' → logprob: -5.380392551422119
    3. ',' → logprob: -7.630392551422119
    4. ''' → logprob: -9.130393028259277
    5. '",' → logprob: -9.380393028259277
    6. '','' → logprob: -10.630393028259277
    7. ' ',' → logprob: -10.755393028259277
    8. '')' → logprob: -11.130393028259277
    9. '''' → logprob: -11.505393028259277
    10. '
' → logprob: -12.505393028259277

Token 570: ' end' (ID: 1268)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18440134823322296
    2. ' f' → logprob: -2.684401273727417
    3. ' '' → logprob: -2.684401273727417
    4. '   ' → logprob: -5.184401512145996
    5. ''end' → logprob: -5.184401512145996
    6. 'end' → logprob: -5.434401512145996
    7. ' end' → logprob: -5.934401512145996
    8. '    ' → logprob: -6.184401512145996
    9. ''type' → logprob: -6.309401512145996
    10. 'f' → logprob: -6.559401512145996

Token 571: '='' (ID: 2053)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009618197567760944
    2. ' '' → logprob: -4.759618282318115
    3. ')' → logprob: -7.259618282318115
    4. '"' → logprob: -8.384617805480957
    5. '''' → logprob: -11.259617805480957
    6. '')' → logprob: -11.259617805480957
    7. ''\' → logprob: -11.509617805480957
    8. 'print' → logprob: -11.634617805480957
    9. ' '')' → logprob: -12.509617805480957
    10. ''s' → logprob: -12.634617805480957

Token 572: ' ')
' (ID: 49195)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10774338990449905
    2. ' '' → logprob: -2.607743501663208
    3. ' f' → logprob: -4.607743263244629
    4. ')' → logprob: -4.732743263244629
    5. '')' → logprob: -5.732743263244629
    6. ' ')' → logprob: -5.857743263244629
    7. ' type' → logprob: -6.607743263244629
    8. ' )' → logprob: -7.732743263244629
    9. ' ')
' → logprob: -8.232743263244629
    10. ' parent' → logprob: -8.357743263244629

Token 573: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04871068149805069
    2. ' print' → logprob: -3.173710584640503
    3. '   ' → logprob: -5.173710823059082
    4. '       ' → logprob: -11.923710823059082
    5. ' ' → logprob: -12.048710823059082
    6. '    ' → logprob: -12.048710823059082
    7. '  ' → logprob: -12.798710823059082
    8. '    
' → logprob: -12.923710823059082
    9. 'if' → logprob: -13.673710823059082
    10. 'type' → logprob: -13.798710823059082

Token 574: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009692259482108057
    2. ' print' → logprob: -7.125969409942627
    3. '   ' → logprob: -8.750968933105469
    4. 'if' → logprob: -12.250968933105469
    5. '    ' → logprob: -14.500968933105469
    6. '  ' → logprob: -15.375968933105469
    7. 'type' → logprob: -15.500968933105469
    8. ' ' → logprob: -15.625968933105469
    9. '	print' → logprob: -15.750968933105469
    10. '       ' → logprob: -15.875968933105469

Token 575: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.001552355824969709
    2. '(f' → logprob: -6.751552581787109
    3. '(type' → logprob: -8.75155258178711
    4. '(' → logprob: -9.12655258178711
    5. ''type' → logprob: -9.62655258178711
    6. 'f' → logprob: -10.62655258178711
    7. ''' → logprob: -11.12655258178711
    8. '("' → logprob: -12.75155258178711
    9. ''s' → logprob: -12.87655258178711
    10. ''f' → logprob: -13.50155258178711

Token 576: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14470696449279785
    2. 'type' → logprob: -2.269706964492798
    3. 'degree' → logprob: -4.269706726074219
    4. 'node' → logprob: -4.769706726074219
    5. 'depth' → logprob: -4.894706726074219
    6. 'siblings' → logprob: -8.019706726074219
    7. 'children' → logprob: -8.269706726074219
    8. 'sib' → logprob: -8.394706726074219
    9. 'child' → logprob: -8.519706726074219
    10. ''s' → logprob: -8.644706726074219

Token 577: 'ibling' (ID: 47701)
  Prédit: 'ibling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibling' → logprob: -0.00493664713576436
    2. 'ib' → logprob: -6.004936695098877
    3. 'type' → logprob: -6.129936695098877
    4. 'iblings' → logprob: -9.379936218261719
    5. 't' → logprob: -9.754936218261719
    6. 'ibil' → logprob: -10.004936218261719
    7. 'ibl' → logprob: -10.379936218261719
    8. '_type' → logprob: -11.129936218261719
    9. 'ibli' → logprob: -11.254936218261719
    10. 'e' → logprob: -12.129936218261719

Token 578: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193557143211365
    2. '=' → logprob: -1.501935601234436
    3. '='' → logprob: -13.001935958862305
    4. ' +' → logprob: -13.501935958862305
    5. ''' → logprob: -13.876935958862305
    6. ' ='' → logprob: -14.626935958862305
    7. '=',' → logprob: -14.626935958862305
    8. ' ' → logprob: -14.751935958862305
    9. '+' → logprob: -15.751935958862305
    10. '＝' → logprob: -16.751935958862305

Token 579: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03902702406048775
    2. ' '' → logprob: -3.289026975631714
    3. 'str' → logprob: -7.414027214050293
    4. ''+' → logprob: -8.539027214050293
    5. ' str' → logprob: -8.664027214050293
    6. '"' → logprob: -12.789027214050293
    7. ' '+' → logprob: -12.914027214050293
    8. ' +' → logprob: -13.039027214050293
    9. ''s' → logprob: -13.289027214050293
    10. '{}' → logprob: -14.289027214050293

Token 580: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.013038216158747673
    2. '+' → logprob: -4.513038158416748
    3. ' str' → logprob: -6.638038158416748
    4. ' +' → logprob: -7.513038158416748
    5. ''' → logprob: -9.138038635253906
    6. '''' → logprob: -11.638038635253906
    7. ''+' → logprob: -11.763038635253906
    8. '(str' → logprob: -12.388038635253906
    9. '=str' → logprob: -13.513038635253906
    10. ')' → logprob: -14.138038635253906

Token 581: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0005530327325686812
    2. ' str' → logprob: -7.500553131103516
    3. '(str' → logprob: -16.875553131103516
    4. 'string' → logprob: -18.625553131103516
    5. '	str' → logprob: -18.750553131103516
    6. ' ' → logprob: -18.875553131103516
    7. 's' → logprob: -19.000553131103516
    8. ''' → logprob: -19.750553131103516
    9. 'stri' → logprob: -19.875553131103516
    10. '[str' → logprob: -20.375553131103516

Token 582: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.00219273311085999
    2. '_node' → logprob: -7.002192497253418
    3. '(str' → logprob: -7.127192497253418
    4. 'str' → logprob: -7.752192497253418
    5. '_str' → logprob: -10.502192497253418
    6. '(' → logprob: -11.002192497253418
    7. ' (_' → logprob: -13.627192497253418
    8. ' str' → logprob: -14.502192497253418
    9. 's' → logprob: -14.627192497253418
    10. '(node' → logprob: -15.377192497253418

Token 583: 'node' (ID: 7005)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.11291942000389099
    2. 'node' → logprob: -2.237919330596924
    3. '.node' → logprob: -9.362919807434082
    4. 'ode' → logprob: -12.237919807434082
    5. ' node' → logprob: -13.362919807434082
    6. '-node' → logprob: -13.987919807434082
    7. '._' → logprob: -14.112919807434082
    8. 's' → logprob: -14.362919807434082
    9. '[node' → logprob: -14.737919807434082
    10. '	node' → logprob: -14.737919807434082

Token 584: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.00016837897419463843
    2. '.parent' → logprob: -8.750168800354004
    3. '.' → logprob: -11.625168800354004
    4. ' .' → logprob: -14.625168800354004
    5. 's' → logprob: -15.500168800354004
    6. ').' → logprob: -15.625168800354004
    7. 'Sibling' → logprob: -16.500167846679688
    8. '.snp' → logprob: -18.250167846679688
    9. 'siblings' → logprob: -18.875167846679688
    10. ' sibling' → logprob: -18.875167846679688

Token 585: 'ibling' (ID: 47701)
  Prédit: 'ibling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibling' → logprob: -0.25423240661621094
    2. 'ode' → logprob: -1.754232406616211
    3. 'ib' → logprob: -3.129232406616211
    4. '.parent' → logprob: -5.754232406616211
    5. 'ibli' → logprob: -6.879232406616211
    6. 'parent' → logprob: -7.254232406616211
    7. 'node' → logprob: -7.379232406616211
    8. 'ibl' → logprob: -8.004232406616211
    9. '_node' → logprob: -8.254232406616211
    10. '   ' → logprob: -8.379232406616211

Token 586: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016448341775685549
    2. ')+' → logprob: -7.126644611358643
    3. '+' → logprob: -7.626644611358643
    4. '),' → logprob: -8.1266450881958
    5. ' +' → logprob: -10.3766450881958
    6. ',' → logprob: -11.0016450881958
    7. '   ' → logprob: -12.6266450881958
    8. ' )' → logprob: -14.0016450881958
    9. '()' → logprob: -14.1266450881958
    10. '+)' → logprob: -14.2516450881958

Token 587: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18619097769260406
    2. ' +' → logprob: -1.8111909627914429
    3. '+',' → logprob: -5.561191082000732
    4. ',' → logprob: -6.436191082000732
    5. ')' → logprob: -7.186191082000732
    6. '+",' → logprob: -9.686190605163574
    7. '+,' → logprob: -9.936190605163574
    8. '   ' → logprob: -10.061190605163574
    9. ')+' → logprob: -10.561190605163574
    10. '),' → logprob: -11.186190605163574

Token 588: ' ',',' (ID: 164787)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.000215457082958892
    2. ' ',' → logprob: -9.625215530395508
    3. ''',' → logprob: -9.875215530395508
    4. ' ',',' → logprob: -10.000215530395508
    5. '','' → logprob: -10.750215530395508
    6. ''' → logprob: -11.125215530395508
    7. 'str' → logprob: -11.750215530395508
    8. '(',' → logprob: -12.750215530395508
    9. ',' → logprob: -13.250215530395508
    10. '",' → logprob: -13.625215530395508

Token 589: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.007626388221979141
    2. 'end' → logprob: -4.882626533508301
    3. '   ' → logprob: -12.2576265335083
    4. '<|end|>' → logprob: -13.1326265335083
    5. ''end' → logprob: -13.2576265335083
    6. ')' → logprob: -13.2576265335083
    7. ',end' → logprob: -13.5076265335083
    8. ' ',' → logprob: -13.7576265335083
    9. '',' → logprob: -13.7576265335083
    10. ' ' → logprob: -14.0076265335083

Token 590: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.02796945348381996
    2. ''' → logprob: -3.6529693603515625
    3. '=' → logprob: -6.4029693603515625
    4. '')' → logprob: -12.777969360351562
    5. '('' → logprob: -13.277969360351562
    6. ')' → logprob: -13.402969360351562
    7. 'print' → logprob: -13.527969360351562
    8. '=''' → logprob: -13.652969360351562
    9. '''' → logprob: -14.652969360351562
    10. ''s' → logprob: -14.652969360351562

Token 591: ' ')
' (ID: 49195)
  Prédit: ' ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ')' → logprob: -0.20840385556221008
    2. ' ')
' → logprob: -1.7084038257598877
    3. '')' → logprob: -5.583404064178467
    4. ' )' → logprob: -6.833404064178467
    5. ')' → logprob: -7.083404064178467
    6. ' '' → logprob: -7.708404064178467
    7. ' ')
' → logprob: -7.958404064178467
    8. ''' → logprob: -8.583403587341309
    9. ' ")' → logprob: -9.208403587341309
    10. ' )
' → logprob: -10.083403587341309

Token 592: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036571992095559835
    2. 'print' → logprob: -5.628657341003418
    3. ' print' → logprob: -9.878657341003418
    4. '```' → logprob: -12.753657341003418
    5. '       ' → logprob: -13.503657341003418
    6. ' ' → logprob: -14.128657341003418
    7. '    ' → logprob: -15.128657341003418
    8. '  ' → logprob: -15.503657341003418
    9. '   ' → logprob: -16.7536563873291
    10. '    
' → logprob: -17.0036563873291

Token 593: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007743150927126408
    2. ' print' → logprob: -5.0077433586120605
    3. '   ' → logprob: -6.8827433586120605
    4. '```' → logprob: -14.382742881774902
    5. ' ' → logprob: -14.632742881774902
    6. '  ' → logprob: -15.007742881774902
    7. 'if' → logprob: -15.757742881774902
    8. '	print' → logprob: -15.757742881774902
    9. '    ' → logprob: -15.882742881774902
    10. '       ' → logprob: -16.75774383544922

Token 594: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0005815077456645668
    2. '(' → logprob: -7.500581741333008
    3. ''' → logprob: -10.750581741333008
    4. '("' → logprob: -12.375581741333008
    5. '(f' → logprob: -13.875581741333008
    6. ' ('' → logprob: -14.250581741333008
    7. ''s' → logprob: -14.750581741333008
    8. '('(' → logprob: -15.000581741333008
    9. '(
' → logprob: -15.125581741333008
    10. 'f' → logprob: -16.000581741333008

Token 595: 'degree' (ID: 98659)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4024905562400818
    2. 'degree' → logprob: -1.1524906158447266
    3. ''d' → logprob: -4.277490615844727
    4. ''s' → logprob: -7.527490615844727
    5. ''type' → logprob: -7.902490615844727
    6. 'depth' → logprob: -8.152490615844727
    7. ' degree' → logprob: -9.277490615844727
    8. 'child' → logprob: -9.277490615844727
    9. 'deg' → logprob: -9.402490615844727
    10. ' '' → logprob: -10.402490615844727

Token 596: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751529917120934
    2. '=' → logprob: -3.5297515392303467
    3. '='' → logprob: -14.779751777648926
    4. ''' → logprob: -15.404751777648926
    5. ' ='' → logprob: -15.654751777648926
    6. ' +' → logprob: -15.904751777648926
    7. ' ' → logprob: -16.40475082397461
    8. ' =
' → logprob: -17.27975082397461
    9. '   ' → logprob: -18.40475082397461
    10. ')' → logprob: -18.65475082397461

Token 597: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.18088725209236145
    2. ''' → logprob: -1.805887222290039
    3. 'str' → logprob: -7.055887222290039
    4. ' str' → logprob: -8.305887222290039
    5. ''+' → logprob: -11.305887222290039
    6. ' '+' → logprob: -11.930887222290039
    7. ' ' → logprob: -12.430887222290039
    8. ''s' → logprob: -12.555887222290039
    9. '',' → logprob: -14.305887222290039
    10. '"' → logprob: -14.305887222290039

Token 598: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5370974540710449
    2. ''' → logprob: -1.162097454071045
    3. '+' → logprob: -2.787097454071045
    4. '=' → logprob: -3.662097454071045
    5. ' str' → logprob: -5.037097454071045
    6. ' +' → logprob: -5.037097454071045
    7. ' '' → logprob: -7.162097454071045
    8. '=str' → logprob: -7.162097454071045
    9. '(str' → logprob: -7.912097454071045
    10. ''s' → logprob: -8.162097930908203

Token 599: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.029873017221689224
    2. ' str' → logprob: -3.5298731327056885
    3. ''' → logprob: -9.02987289428711
    4. '(str' → logprob: -13.52987289428711
    5. ' '' → logprob: -13.90487289428711
    6. ''s' → logprob: -15.02987289428711
    7. '=str' → logprob: -16.40487289428711
    8. '	str' → logprob: -16.65487289428711
    9. 's' → logprob: -17.90487289428711
    10. 'string' → logprob: -18.40487289428711

Token 600: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -1.282920129597187e-05
    2. '(' → logprob: -11.500012397766113
    3. '_node' → logprob: -13.250012397766113
    4. '(str' → logprob: -15.500012397766113
    5. '(int' → logprob: -15.875012397766113
    6. '_' → logprob: -16.12501335144043
    7. '(
' → logprob: -16.62501335144043
    8. ')(_' → logprob: -16.62501335144043
    9. '((_' → logprob: -16.87501335144043
    10. '_str' → logprob: -17.00001335144043

Token 601: 'node' (ID: 7005)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.05434466153383255
    2. 'node' → logprob: -3.054344654083252
    3. '.node' → logprob: -5.929344654083252
    4. 'degree' → logprob: -6.054344654083252
    5. '.degree' → logprob: -7.304344654083252
    6. 'ode' → logprob: -10.55434513092041
    7. 'type' → logprob: -12.67934513092041
    8. '   ' → logprob: -12.80434513092041
    9. 'nod' → logprob: -13.17934513092041
    10. '-node' → logprob: -13.30434513092041

Token 602: '.degree' (ID: 186756)
  Prédit: '.degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.degree' → logprob: -1.3856492842023727e-06
    2. ' .' → logprob: -14.250000953674316
    3. '.' → logprob: -14.750000953674316
    4. 'degree' → logprob: -15.625000953674316
    5. '.depth' → logprob: -17.000001907348633
    6. '.de' → logprob: -17.125001907348633
    7. ')' → logprob: -17.750001907348633
    8. '.children' → logprob: -18.500001907348633
    9. '.type' → logprob: -19.500001907348633
    10. '   ' → logprob: -19.625001907348633

Token 603: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6122097373008728
    2. ' +' → logprob: -0.9872097373008728
    3. ')' → logprob: -2.4872097969055176
    4. ',' → logprob: -6.862209796905518
    5. '   ' → logprob: -7.862209796905518
    6. ')+' → logprob: -8.11220932006836
    7. '()' → logprob: -8.86220932006836
    8. '+',' → logprob: -9.23720932006836
    9. '),' → logprob: -10.23720932006836
    10. ' ' → logprob: -10.73720932006836

Token 604: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5804622769355774
    2. '+' → logprob: -0.8304622769355774
    3. ',' → logprob: -5.705462455749512
    4. '+',' → logprob: -7.080462455749512
    5. '   ' → logprob: -8.580462455749512
    6. '+,' → logprob: -9.330462455749512
    7. ')' → logprob: -10.455462455749512
    8. '+",' → logprob: -10.830462455749512
    9. ' ' → logprob: -12.080462455749512
    10. '',' → logprob: -13.080462455749512

Token 605: ' ',',' (ID: 164787)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.013826017268002033
    2. ''' → logprob: -4.3888258934021
    3. ' ',' → logprob: -7.1388258934021
    4. ''',' → logprob: -8.763826370239258
    5. ' '' → logprob: -9.263826370239258
    6. '')' → logprob: -9.388826370239258
    7. ' ',',' → logprob: -9.388826370239258
    8. '','' → logprob: -10.263826370239258
    9. ',' → logprob: -10.388826370239258
    10. ''end' → logprob: -11.638826370239258

Token 606: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.023262951523065567
    2. 'end' → logprob: -3.7732629776000977
    3. ''end' → logprob: -12.273262977600098
    4. ',end' → logprob: -12.398262977600098
    5. '   ' → logprob: -13.398262977600098
    6. '	end' → logprob: -13.648262977600098
    7. '    ' → logprob: -14.273262977600098
    8. '',' → logprob: -14.273262977600098
    9. '_end' → logprob: -14.398262977600098
    10. '(end' → logprob: -14.398262977600098

Token 607: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.10037790238857269
    2. ''' → logprob: -2.3503777980804443
    3. '=' → logprob: -8.725378036499023
    4. '')' → logprob: -12.975378036499023
    5. 'print' → logprob: -13.100378036499023
    6. ''s' → logprob: -13.475378036499023
    7. '''' → logprob: -14.100378036499023
    8. '('' → logprob: -14.600378036499023
    9. '=''' → logprob: -15.100378036499023
    10. ' '' → logprob: -15.475378036499023

Token 608: ' ')
' (ID: 49195)
  Prédit: ' ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ')' → logprob: -0.07920999079942703
    2. ' ')
' → logprob: -2.829210042953491
    3. '')' → logprob: -4.829209804534912
    4. ''' → logprob: -5.829209804534912
    5. ' '' → logprob: -5.954209804534912
    6. ' end' → logprob: -6.329209804534912
    7. ' ')
' → logprob: -7.579209804534912
    8. ' ',' → logprob: -7.954209804534912
    9. 'end' → logprob: -8.82921028137207
    10. ')' → logprob: -9.32921028137207

Token 609: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3876883089542389
    2. '   ' → logprob: -1.2626882791519165
    3. ' print' → logprob: -3.262688398361206
    4. '```' → logprob: -9.262688636779785
    5. 'if' → logprob: -10.637688636779785
    6. ' if' → logprob: -10.637688636779785
    7. ' ' → logprob: -10.637688636779785
    8. '	print' → logprob: -12.137688636779785
    9. '  ' → logprob: -12.137688636779785
    10. '    ' → logprob: -12.262688636779785

Token 610: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.014322984963655472
    2. ' print' → logprob: -4.264322757720947
    3. '   ' → logprob: -8.889323234558105
    4. 'if' → logprob: -11.139323234558105
    5. ' if' → logprob: -12.389323234558105
    6. '```' → logprob: -13.889323234558105
    7. '	print' → logprob: -14.139323234558105
    8. ' ' → logprob: -14.389323234558105
    9. '    ' → logprob: -16.13932228088379
    10. '       ' → logprob: -16.26432228088379

Token 611: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0015866279136389494
    2. '(' → logprob: -6.751586437225342
    3. '("' → logprob: -7.876586437225342
    4. '('(' → logprob: -10.5015869140625
    5. '(f' → logprob: -12.0015869140625
    6. '("'' → logprob: -13.6265869140625
    7. '("("' → logprob: -14.2515869140625
    8. ''' → logprob: -15.2515869140625
    9. '(
' → logprob: -15.2515869140625
    10. '("(' → logprob: -15.2515869140625

Token 612: 'depth' (ID: 41022)
  Prédit: 'depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.5104825496673584
    2. 'type' → logprob: -1.3854825496673584
    3. ''' → logprob: -2.2604825496673584
    4. 'height' → logprob: -3.5104825496673584
    5. 'print' → logprob: -5.0104827880859375
    6. 'node' → logprob: -5.8854827880859375
    7. ''type' → logprob: -6.3854827880859375
    8. 'level' → logprob: -6.7604827880859375
    9. 'f' → logprob: -7.2604827880859375
    10. 'leaf' → logprob: -7.7604827880859375

Token 613: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014165391214191914
    2. '=' → logprob: -4.26416540145874
    3. '='' → logprob: -13.389164924621582
    4. ' ='' → logprob: -15.639164924621582
    5. ''' → logprob: -15.764164924621582
    6. '=',' → logprob: -17.7641658782959
    7. ' +' → logprob: -17.7641658782959
    8. ' =
' → logprob: -17.7641658782959
    9. ' ' → logprob: -18.2641658782959
    10. '＝' → logprob: -18.8891658782959

Token 614: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.4746643602848053
    2. ''' → logprob: -0.9746643304824829
    3. 'str' → logprob: -7.974664211273193
    4. ''+' → logprob: -9.099664688110352
    5. ' str' → logprob: -9.224664688110352
    6. ' '+' → logprob: -10.724664688110352
    7. ''s' → logprob: -12.599664688110352
    8. '',' → logprob: -13.474664688110352
    9. ' "' → logprob: -13.599664688110352
    10. '"' → logprob: -13.724664688110352

Token 615: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.027476202696561813
    2. ' +' → logprob: -3.6524763107299805
    3. 'str' → logprob: -7.5274763107299805
    4. ''' → logprob: -8.02747631072998
    5. '=' → logprob: -8.27747631072998
    6. '=str' → logprob: -10.77747631072998
    7. '(str' → logprob: -11.40247631072998
    8. ')' → logprob: -11.77747631072998
    9. '{' → logprob: -12.90247631072998
    10. ' ' → logprob: -13.02747631072998

Token 616: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.10021702200174332
    2. ' str' → logprob: -2.35021710395813
    3. ''' → logprob: -11.85021686553955
    4. '(str' → logprob: -12.85021686553955
    5. ' ' → logprob: -15.60021686553955
    6. '_str' → logprob: -15.85021686553955
    7. '	str' → logprob: -15.85021686553955
    8. ' '' → logprob: -16.100217819213867
    9. '=str' → logprob: -17.225217819213867
    10. '   ' → logprob: -17.225217819213867

Token 617: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.0007679368136450648
    2. '(' → logprob: -8.000767707824707
    3. '(str' → logprob: -8.125767707824707
    4. '('' → logprob: -9.625767707824707
    5. '_node' → logprob: -10.500767707824707
    6. 'str' → logprob: -10.750767707824707
    7. '_str' → logprob: -11.125767707824707
    8. '_' → logprob: -13.250767707824707
    9. ''' → logprob: -13.625767707824707
    10. ' (_' → logprob: -13.750767707824707

Token 618: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0015087933279573917
    2. '_node' → logprob: -6.501508712768555
    3. '.node' → logprob: -12.626508712768555
    4. 'depth' → logprob: -12.876508712768555
    5. ' node' → logprob: -15.001508712768555
    6. '-node' → logprob: -16.501508712768555
    7. 'print' → logprob: -16.751508712768555
    8. 'nod' → logprob: -16.876508712768555
    9. '	node' → logprob: -17.376508712768555
    10. '
' → logprob: -17.501508712768555

Token 619: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -4.842555426876061e-06
    2. '.' → logprob: -12.375004768371582
    3. ' .' → logprob: -14.625004768371582
    4. 'depth' → logprob: -16.3750057220459
    5. '.height' → logprob: -17.7500057220459
    6. '.Depth' → logprob: -17.8750057220459
    7. '.degree' → logprob: -17.8750057220459
    8. '.parent' → logprob: -18.2500057220459
    9. '(depth' → logprob: -18.3750057220459
    10. '.distance' → logprob: -18.6250057220459

Token 620: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005868718726560473
    2. ')+' → logprob: -7.875586986541748
    3. '+' → logprob: -9.25058650970459
    4. '),' → logprob: -9.62558650970459
    5. '   ' → logprob: -10.75058650970459
    6. ',' → logprob: -11.37558650970459
    7. ' +' → logprob: -12.25058650970459
    8. '()' → logprob: -13.00058650970459
    9. ' )' → logprob: -13.62558650970459
    10. '+)' → logprob: -13.75058650970459

Token 621: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4396314024925232
    2. ' +' → logprob: -1.064631462097168
    3. ',' → logprob: -4.689631462097168
    4. '+',' → logprob: -6.814631462097168
    5. '   ' → logprob: -8.314631462097168
    6. ')' → logprob: -8.939631462097168
    7. '+",' → logprob: -9.189631462097168
    8. '+,' → logprob: -9.439631462097168
    9. ' ' → logprob: -12.439631462097168
    10. ')+' → logprob: -12.439631462097168

Token 622: ' ',',' (ID: 164787)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -4.263011578586884e-05
    2. ',' → logprob: -10.750042915344238
    3. '','' → logprob: -11.875042915344238
    4. ''',' → logprob: -12.000042915344238
    5. ''' → logprob: -12.875042915344238
    6. ' ',' → logprob: -13.000042915344238
    7. ' ',',' → logprob: -13.500042915344238
    8. '",' → logprob: -13.625042915344238
    9. '(',' → logprob: -15.375042915344238
    10. '')' → logprob: -16.250041961669922

Token 623: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.10027244687080383
    2. 'end' → logprob: -2.3502724170684814
    3. '   ' → logprob: -9.725272178649902
    4. '    ' → logprob: -13.225272178649902
    5. ' ' → logprob: -14.225272178649902
    6. ''end' → logprob: -14.600272178649902
    7. ',end' → logprob: -14.725272178649902
    8. '(end' → logprob: -14.850272178649902
    9. '	end' → logprob: -14.850272178649902
    10. ')' → logprob: -14.975272178649902

Token 624: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.000808082812000066
    2. ''' → logprob: -7.250808238983154
    3. '=' → logprob: -9.250807762145996
    4. '=',' → logprob: -13.750807762145996
    5. '=''' → logprob: -14.875807762145996
    6. '='')
' → logprob: -16.125808715820312
    7. 'print' → logprob: -16.250808715820312
    8. '')' → logprob: -16.500808715820312
    9. ''=' → logprob: -16.500808715820312
    10. '='',' → logprob: -17.125808715820312

Token 625: ' ')
' (ID: 49195)
  Prédit: ' ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ')' → logprob: -0.16314731538295746
    2. ' ')
' → logprob: -2.663147211074829
    3. ''' → logprob: -3.163147211074829
    4. '')' → logprob: -4.038147449493408
    5. ' '' → logprob: -4.038147449493408
    6. ')' → logprob: -6.788147449493408
    7. ' ')
' → logprob: -6.913147449493408
    8. ' )' → logprob: -7.163147449493408
    9. ' ' → logprob: -9.78814697265625
    10. 'space' → logprob: -9.91314697265625

Token 626: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01872457191348076
    2. '   ' → logprob: -4.26872444152832
    3. ' print' → logprob: -5.39372444152832
    4. '```' → logprob: -12.89372444152832
    5. '	print' → logprob: -13.51872444152832
    6. ' ' → logprob: -14.01872444152832
    7. '  ' → logprob: -15.01872444152832
    8. '       ' → logprob: -15.01872444152832
    9. '    ' → logprob: -15.14372444152832
    10. '.print' → logprob: -17.01872444152832

Token 627: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.723352049040841e-06
    2. ' print' → logprob: -12.875004768371582
    3. '   ' → logprob: -13.125004768371582
    4. ' ' → logprob: -19.125003814697266
    5. '```' → logprob: -19.250003814697266
    6. '	print' → logprob: -19.375003814697266
    7. 'printf' → logprob: -20.500003814697266
    8. '  ' → logprob: -20.875003814697266
    9. '#print' → logprob: -21.125003814697266
    10. 'if' → logprob: -21.375003814697266

Token 628: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00193280098028481
    2. '(' → logprob: -6.251932621002197
    3. '('(' → logprob: -12.626933097839355
    4. '(f' → logprob: -14.501933097839355
    5. '("' → logprob: -14.876933097839355
    6. ''' → logprob: -16.50193214416504
    7. '(',' → logprob: -17.50193214416504
    8. '(
' → logprob: -17.87693214416504
    9. '(('' → logprob: -18.00193214416504
    10. ''s' → logprob: -18.37693214416504

Token 629: 'height' (ID: 5097)
  Prédit: 'height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.015351379290223122
    2. 'type' → logprob: -5.140351295471191
    3. 'print' → logprob: -5.265351295471191
    4. ''' → logprob: -5.640351295471191
    5. ''type' → logprob: -7.515351295471191
    6. ''s' → logprob: -10.140351295471191
    7. ''h' → logprob: -10.390351295471191
    8. ' height' → logprob: -11.390351295471191
    9. ''t' → logprob: -11.765351295471191
    10. 'he' → logprob: -12.265351295471191

Token 630: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002478273818269372
    2. '=' → logprob: -6.002478122711182
    3. '='' → logprob: -13.00247859954834
    4. ''' → logprob: -15.75247859954834
    5. ' ='' → logprob: -15.87747859954834
    6. ' +' → logprob: -17.877477645874023
    7. ' ' → logprob: -18.127477645874023
    8. ' =
' → logprob: -18.627477645874023
    9. '=',' → logprob: -19.252477645874023
    10. '   ' → logprob: -19.377477645874023

Token 631: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6947099566459656
    2. ''' → logprob: -0.9447099566459656
    3. ' str' → logprob: -2.4447100162506104
    4. 'str' → logprob: -3.6947100162506104
    5. '"' → logprob: -9.319709777832031
    6. ' ' → logprob: -9.569709777832031
    7. '(str' → logprob: -9.944709777832031
    8. ''+' → logprob: -10.194709777832031
    9. ''s' → logprob: -10.444709777832031
    10. ' "' → logprob: -11.194709777832031

Token 632: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.01978178881108761
    2. '+' → logprob: -4.394781589508057
    3. ' str' → logprob: -5.394781589508057
    4. ''' → logprob: -6.644781589508057
    5. ' +' → logprob: -6.769781589508057
    6. '(str' → logprob: -8.519782066345215
    7. ''+' → logprob: -10.894782066345215
    8. ''s' → logprob: -11.394782066345215
    9. '=str' → logprob: -11.394782066345215
    10. 's' → logprob: -11.644782066345215

Token 633: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.4743252396583557
    2. 'str' → logprob: -0.9743252396583557
    3. ''' → logprob: -8.349325180053711
    4. ' '' → logprob: -11.974325180053711
    5. '(str' → logprob: -12.474325180053711
    6. '=str' → logprob: -14.599325180053711
    7. '_str' → logprob: -15.099325180053711
    8. '	str' → logprob: -15.224325180053711
    9. ''s' → logprob: -15.599325180053711
    10. ' ' → logprob: -15.974325180053711

Token 634: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.002314761048182845
    2. '(str' → logprob: -6.877314567565918
    3. '('' → logprob: -7.127314567565918
    4. '(' → logprob: -8.002314567565918
    5. 'str' → logprob: -9.752314567565918
    6. ''' → logprob: -10.127314567565918
    7. '_' → logprob: -11.127314567565918
    8. '_str' → logprob: -11.502314567565918
    9. '('_' → logprob: -11.627314567565918
    10. '(
' → logprob: -11.627314567565918

Token 635: 'node' (ID: 7005)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.47412049770355225
    2. 'node' → logprob: -0.9741204977035522
    3. '.node' → logprob: -10.474120140075684
    4. ' node' → logprob: -12.724120140075684
    5. 'depth' → logprob: -12.724120140075684
    6. '-node' → logprob: -13.099120140075684
    7. 'nod' → logprob: -13.474120140075684
    8. 'print' → logprob: -13.849120140075684
    9. '
' → logprob: -14.349120140075684
    10. 's' → logprob: -14.474120140075684

Token 636: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -14.750000953674316
    3. '.depth' → logprob: -17.25
    4. 'height' → logprob: -18.0
    5. ' .' → logprob: -18.25
    6. ').' → logprob: -18.25
    7. '.width' → logprob: -18.875
    8. '.he' → logprob: -19.0
    9. '.health' → logprob: -19.625
    10. '.position' → logprob: -20.375

Token 637: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.776738166809082
    2. '+' → logprob: -1.276738166809082
    3. ')' → logprob: -1.401738166809082
    4. ',' → logprob: -4.526738166809082
    5. '),' → logprob: -6.776738166809082
    6. ')+' → logprob: -6.901738166809082
    7. '   ' → logprob: -7.276738166809082
    8. '+',' → logprob: -7.276738166809082
    9. '()' → logprob: -8.026738166809082
    10. '',' → logprob: -10.401738166809082

Token 638: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3917231857776642
    2. ' +' → logprob: -1.1417231559753418
    3. ')' → logprob: -5.891723155975342
    4. '+',' → logprob: -6.516723155975342
    5. '   ' → logprob: -8.3917236328125
    6. ',' → logprob: -8.3917236328125
    7. '+')' → logprob: -9.6417236328125
    8. '+",' → logprob: -10.8917236328125
    9. '+)' → logprob: -11.6417236328125
    10. ' ' → logprob: -11.8917236328125

Token 639: ' ',',' (ID: 164787)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0026214318349957466
    2. ''' → logprob: -6.377621650695801
    3. '','' → logprob: -8.0026216506958
    4. ' ',' → logprob: -8.3776216506958
    5. ''',' → logprob: -9.0026216506958
    6. ' ',',' → logprob: -9.1276216506958
    7. ''.' → logprob: -10.1276216506958
    8. '')' → logprob: -10.3776216506958
    9. ',' → logprob: -10.7526216506958
    10. ''end' → logprob: -12.2526216506958

Token 640: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.04859418421983719
    2. 'end' → logprob: -3.0485942363739014
    3. ',end' → logprob: -13.17359447479248
    4. '	end' → logprob: -13.42359447479248
    5. ''end' → logprob: -13.54859447479248
    6. ')' → logprob: -14.29859447479248
    7. '(end' → logprob: -14.42359447479248
    8. '    ' → logprob: -15.79859447479248
    9. '   ' → logprob: -15.79859447479248
    10. '_end' → logprob: -15.92359447479248

Token 641: '='' (ID: 2053)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11347755044698715
    2. '='' → logprob: -2.2384774684906006
    3. '=' → logprob: -8.11347770690918
    4. '')' → logprob: -8.86347770690918
    5. ')' → logprob: -9.23847770690918
    6. ''s' → logprob: -10.11347770690918
    7. 'print' → logprob: -10.36347770690918
    8. '''' → logprob: -10.98847770690918
    9. ' '' → logprob: -11.48847770690918
    10. '('' → logprob: -12.61347770690918

Token 642: ' ')
' (ID: 49195)
  Prédit: ' ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ')
' → logprob: -0.20344971120357513
    2. ' ')' → logprob: -1.7034497261047363
    3. ' ')
' → logprob: -6.953449726104736
    4. ' '' → logprob: -7.703449726104736
    5. '')' → logprob: -8.078449249267578
    6. ' ")
' → logprob: -9.328449249267578
    7. ''' → logprob: -9.703449249267578
    8. ')' → logprob: -9.828449249267578
    9. '')
' → logprob: -10.328449249267578
    10. ' )' → logprob: -11.203449249267578

Token 643: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8792617321014404
    2. ' if' → logprob: -1.1292617321014404
    3. 'print' → logprob: -1.7542617321014404
    4. '   ' → logprob: -2.6292617321014404
    5. 'if' → logprob: -4.1292619705200195
    6. '	print' → logprob: -8.62926197052002
    7. ' ' → logprob: -10.00426197052002
    8. 'type' → logprob: -10.25426197052002
    9. ' type' → logprob: -10.87926197052002
    10. 'def' → logprob: -11.12926197052002

Token 644: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3669487535953522
    2. 'print' (adapté à ' print') → logprob: -1.3669487237930298
    3. ' if' → logprob: -3.1169488430023193
    4. 'if' → logprob: -5.24194860458374
    5. '   ' → logprob: -6.11694860458374
    6. 'type' → logprob: -8.991949081420898
    7. ' node' → logprob: -8.991949081420898
    8. ' type' → logprob: -9.116949081420898
    9. 'node' → logprob: -10.741949081420898
    10. ' and' → logprob: -11.116949081420898

Token 645: '(_' (ID: 4963)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.007831734605133533
    2. '(type' → logprob: -5.632831573486328
    3. '(' → logprob: -5.882831573486328
    4. 'type' → logprob: -7.632831573486328
    5. '("' → logprob: -8.007831573486328
    6. '(f' → logprob: -8.757831573486328
    7. '('_' → logprob: -9.132831573486328
    8. '()' → logprob: -9.257831573486328
    9. '_type' → logprob: -9.632831573486328
    10. ''type' → logprob: -9.757831573486328

Token 646: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -5.6934557505883276e-05
    2. '_node' → logprob: -10.000057220458984
    3. 'type' → logprob: -11.875057220458984
    4. '.node' → logprob: -12.500057220458984
    5. 'token' → logprob: -15.250057220458984
    6. 'nod' → logprob: -16.000057220458984
    7. '-node' → logprob: -16.375057220458984
    8. ' node' → logprob: -16.500057220458984
    9. '	node' → logprob: -16.625057220458984
    10. 'print' → logprob: -16.875057220458984

Token 647: '.type' (ID: 9166)
  Prédit: '.type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.type' → logprob: -0.00495550874620676
    2. 'type' → logprob: -5.504955291748047
    3. ' .' → logprob: -7.754955291748047
    4. ' type' → logprob: -8.379955291748047
    5. '.' → logprob: -8.629955291748047
    6. ')' → logprob: -10.629955291748047
    7. ').' → logprob: -13.129955291748047
    8. '.name' → logprob: -13.379955291748047
    9. ''type' → logprob: -13.379955291748047
    10. '.status' → logprob: -13.504955291748047

Token 648: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01911737211048603
    2. '')' → logprob: -4.01911735534668
    3. '+')' → logprob: -8.14411735534668
    4. '=' → logprob: -8.26911735534668
    5. ',' → logprob: -8.51911735534668
    6. ' +' → logprob: -9.89411735534668
    7. '")' → logprob: -10.14411735534668
    8. ' )' → logprob: -10.14411735534668
    9. ')
' → logprob: -10.64411735534668
    10. '+' → logprob: -11.26911735534668

Token 649: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1288882941007614
    2. 'for' → logprob: -2.7538883686065674
    3. 'n' → logprob: -3.1288883686065674
    4. 'def' → logprob: -4.503888130187988
    5. '#' → logprob: -6.878888130187988
    6. 'num' → logprob: -7.253888130187988
    7. 'size' → logprob: -9.253888130187988
    8. 'N' → logprob: -9.503888130187988
    9. 'import' → logprob: -9.503888130187988
    10. '#!/' → logprob: -10.003888130187988

Token 650: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02127830684185028
    2. 'def' → logprob: -4.271278381347656
    3. 'n' → logprob: -5.771278381347656
    4. 'for' → logprob: -6.646278381347656
    5. '#' → logprob: -6.771278381347656
    6. '<|end|>' → logprob: -6.896278381347656
    7. 'num' → logprob: -9.271278381347656
    8. '
' → logprob: -9.771278381347656
    9. '#!/' → logprob: -9.896278381347656
    10. ' if' → logprob: -9.896278381347656

Token 651: ' None' (ID: 4662)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07758093625307083
    2. 'def' → logprob: -3.0775809288024902
    3. '
' → logprob: -4.20258092880249
    4. 'n' → logprob: -4.32758092880249
    5. 'for' → logprob: -8.577581405639648
    6. '#' → logprob: -9.452581405639648
    7. '    
' → logprob: -10.327581405639648
    8. '  
' → logprob: -10.702581405639648
    9. ' if' → logprob: -10.827581405639648
    10. '\n' → logprob: -10.952581405639648

Token 652: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16648875176906586
    2. 'n' → logprob: -2.0414886474609375
    3. 'def' → logprob: -4.1664886474609375
    4. 'for' → logprob: -5.4164886474609375
    5. '
' → logprob: -6.9164886474609375
    6. '#' → logprob: -7.4164886474609375
    7. 'num' → logprob: -7.4164886474609375
    8. '<|end|>' → logprob: -7.5414886474609375
    9. 'N' → logprob: -8.041488647460938
    10. 'size' → logprob: -8.916488647460938

Token 653: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25805890560150146
    2. 'n' → logprob: -1.5080589056015015
    3. 'num' → logprob: -5.633059024810791
    4. 'N' → logprob: -7.008059024810791
    5. 'for' → logprob: -7.258059024810791
    6. 'node' → logprob: -7.633059024810791
    7. 'size' → logprob: -8.883058547973633
    8. 'number' → logprob: -9.508058547973633
    9. '#' → logprob: -9.883058547973633
    10. 'def' → logprob: -10.133058547973633

Token 654: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0040793512016534805
    2. '__' → logprob: -5.504079341888428
    3. '_' → logprob: -14.879079818725586
    4. 'name' → logprob: -15.004079818725586
    5. ' ' → logprob: -16.004079818725586
    6. ' ' → logprob: -16.504079818725586
    7. '_name' → logprob: -17.129079818725586
    8. ' "__' → logprob: -18.254079818725586
    9. '  ' → logprob: -18.504079818725586
    10. ' _' → logprob: -18.629079818725586

Token 655: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17658865451812744
    2. 'name' → logprob: -2.176588535308838
    3. ' __' → logprob: -3.676588535308838
    4. ' ==' → logprob: -3.926588535308838
    5. '==' → logprob: -6.426588535308838
    6. 'if' → logprob: -7.051588535308838
    7. '_name' → logprob: -8.051589012145996
    8. '.__' → logprob: -8.926589012145996
    9. '```' → logprob: -8.926589012145996
    10. '.name' → logprob: -9.676589012145996

Token 656: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.6240566083070007e-06
    2. '==' → logprob: -13.750001907348633
    3. 'name' → logprob: -15.250001907348633
    4. '__.__' → logprob: -16.375001907348633
    5. ' ==' → logprob: -17.125001907348633
    6. '_' → logprob: -17.250001907348633
    7. '___' → logprob: -17.875001907348633
    8. '__
' → logprob: -18.125001907348633
    9. '__.' → logprob: -18.750001907348633
    10. '____' → logprob: -18.875001907348633

Token 657: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008419298566877842
    2. ' ==' → logprob: -5.008419513702393
    3. '==' → logprob: -6.383419513702393
    4. '=="' → logprob: -12.008419036865234
    5. '=='' → logprob: -13.008419036865234
    6. '___' → logprob: -13.883419036865234
    7. '_' → logprob: -13.883419036865234
    8. ' __' → logprob: -14.008419036865234
    9. '__.__' → logprob: -14.633419036865234
    10. '__.' → logprob: -15.258419036865234

Token 658: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2526492774486542
    2. '"' → logprob: -1.5026493072509766
    3. ' "__' → logprob: -7.627649307250977
    4. ' '__' → logprob: -8.627649307250977
    5. '__' → logprob: -10.252649307250977
    6. ''name' → logprob: -11.627649307250977
    7. ''s' → logprob: -12.502649307250977
    8. '"name' → logprob: -13.252649307250977
    9. ' ' → logprob: -14.377649307250977
    10. ''_' → logprob: -14.377649307250977

Token 659: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.3458322731312364e-06
    2. 'name' → logprob: -11.875007629394531
    3. '__' → logprob: -15.500007629394531
    4. '_main' → logprob: -15.625007629394531
    5. 'm' → logprob: -17.75000762939453
    6. '(main' → logprob: -19.75000762939453
    7. ' main' → logprob: -19.75000762939453
    8. 'print' → logprob: -20.00000762939453
    9. 'ma' → logprob: -20.00000762939453
    10. 'init' → logprob: -20.37500762939453

Token 660: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8775618672370911
    2. '__:' → logprob: -0.8775618672370911
    3. '__':
' → logprob: -2.3775618076324463
    4. ':' → logprob: -2.6275618076324463
    5. '__":
' → logprob: -5.877562046051025
    6. ':
' → logprob: -7.877562046051025
    7. '():
' → logprob: -9.502561569213867
    8. '():' → logprob: -10.627561569213867
    9. '':' → logprob: -10.752561569213867
    10. ' :' → logprob: -11.002561569213867

Token 661: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011453557759523392
    2. 'n' → logprob: -4.511453628540039
    3. ' n' → logprob: -7.886453628540039
    4. '	n' → logprob: -11.261453628540039
    5. 'num' → logprob: -11.761453628540039
    6. 'N' → logprob: -12.386453628540039
    7. 'input' → logprob: -12.886453628540039
    8. 'node' → logprob: -14.636453628540039
    9. 'import' → logprob: -15.136453628540039
    10. '    
' → logprob: -15.136453628540039

Token 662: ' _' (ID: 1175)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07767965644598007
    2. '   ' → logprob: -2.9526796340942383
    3. 'N' → logprob: -4.452679634094238
    4. 'num' → logprob: -4.952679634094238
    5. 'input' → logprob: -5.952679634094238
    6. 'node' → logprob: -7.077679634094238
    7. ' n' → logprob: -8.827679634094238
    8. 'import' → logprob: -9.952679634094238
    9. '    
' → logprob: -9.952679634094238
    10. '	n' → logprob: -10.577679634094238

Token 663: 'input' (ID: 2586)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41056713461875916
    2. 'n' → logprob: -2.035567045211792
    3. '=' → logprob: -2.160567045211792
    4. 'array' → logprob: -3.160567045211792
    5. 'size' → logprob: -4.660567283630371
    6. 'input' → logprob: -4.660567283630371
    7. '_=' → logprob: -4.910567283630371
    8. '_array' → logprob: -5.160567283630371
    9. ' n' → logprob: -5.410567283630371
    10. 'num' → logprob: -6.410567283630371

Token 664: ' =' (ID: 314)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.6834874153137207
    2. '_' → logprob: -1.9334874153137207
    3. ' =' → logprob: -1.9334874153137207
    4. '_data' → logprob: -2.9334874153137207
    5. '()' → logprob: -3.1834874153137207
    6. '_array' → logprob: -3.4334874153137207
    7. '=' → logprob: -3.9334874153137207
    8. '_list' → logprob: -3.9334874153137207
    9. '_line' → logprob: -4.058487415313721
    10. 's' → logprob: -4.683487415313721

Token 665: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00417313352227211
    2. ' sys' → logprob: -5.754173278808594
    3. '[' → logprob: -7.129173278808594
    4. '[int' → logprob: -8.879173278808594
    5. ' [' → logprob: -11.004173278808594
    6. 'list' → logprob: -11.879173278808594
    7. '[input' → logprob: -11.879173278808594
    8. '[]' → logprob: -12.004173278808594
    9. '[s' → logprob: -12.379173278808594
    10. '[list' → logprob: -12.379173278808594

Token 666: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0004599823441822082
    2. '.argv' → logprob: -8.125459671020508
    3. '.' → logprob: -8.875459671020508
    4. '.stdout' → logprob: -11.375459671020508
    5. '().' → logprob: -11.750459671020508
    6. ' .' → logprob: -13.000459671020508
    7. '.input' → logprob: -14.375459671020508
    8. '.readline' → logprob: -14.750459671020508
    9. 'stdin' → logprob: -14.875459671020508
    10. '.std' → logprob: -15.000459671020508

Token 667: '.readlines' (ID: 92237)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.1341233104467392
    2. '.readlines' → logprob: -2.1341233253479004
    3. 'read' → logprob: -5.7591233253479
    4. '.read' → logprob: -6.1341233253479
    5. '   ' → logprob: -6.6341233253479
    6. '_lines' → logprob: -8.009122848510742
    7. '_read' → logprob: -9.884122848510742
    8. 'lines' → logprob: -10.134122848510742
    9. ' =' → logprob: -11.009122848510742
    10. 'for' → logprob: -11.384122848510742

Token 668: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.9040898880339228e-05
    2. '()
' → logprob: -11.125028610229492
    3. ' ()' → logprob: -12.250028610229492
    4. '(' → logprob: -12.500028610229492
    5. '()]' → logprob: -13.125028610229492
    6. '())' → logprob: -13.875028610229492
    7. '()`' → logprob: -14.375028610229492
    8. '()[' → logprob: -14.625028610229492
    9. '（）' → logprob: -15.125028610229492
    10. '()

' → logprob: -15.250028610229492

Token 669: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.030346574261784554
    2. 'N' → logprob: -3.780346632003784
    3. 'node' → logprob: -5.280346393585205
    4. 'num' → logprob: -6.405346393585205
    5. '   ' → logprob: -8.530346870422363
    6. 'size' → logprob: -9.780346870422363
    7. ' n' → logprob: -10.655346870422363
    8. '_n' → logprob: -11.030346870422363
    9. 'number' → logprob: -11.530346870422363
    10. '    
' → logprob: -11.905346870422363

Token 670: ' array' (ID: 2644)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3169845640659332
    2. 'node' → logprob: -1.9419845342636108
    3. 'N' → logprob: -2.3169846534729004
    4. 'num' → logprob: -3.6919846534729004
    5. 'size' → logprob: -6.0669846534729
    6. '   ' → logprob: -7.3169846534729
    7. 'number' → logprob: -7.8169846534729
    8. '_n' → logprob: -7.8169846534729
    9. 'length' → logprob: -8.691984176635742
    10. '
' → logprob: -9.441984176635742

Token 671: '_length' (ID: 11514)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16027185320854187
    2. ' =' → logprob: -1.9102718830108643
    3. '=[]' → logprob: -10.035271644592285
    4. ',' → logprob: -14.285271644592285
    5. '＝' → logprob: -14.910271644592285
    6. '=input' → logprob: -15.285271644592285
    7. ')' → logprob: -15.285271644592285
    8. '   ' → logprob: -15.410271644592285
    9. '[]' → logprob: -15.410271644592285
    10. '_' → logprob: -15.410271644592285

Token 672: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10031621903181076
    2. '=' → logprob: -2.350316286087036
    3. '   ' → logprob: -10.100316047668457
    4. '_' → logprob: -10.975316047668457
    5. ',' → logprob: -11.350316047668457
    6. '    ' → logprob: -11.725316047668457
    7. '[' → logprob: -11.850316047668457
    8. ')' → logprob: -12.350316047668457
    9. '[]' → logprob: -12.350316047668457
    10. '=int' → logprob: -12.600316047668457

Token 673: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004680037964135408
    2. ' int' → logprob: -5.754680156707764
    3. 'len' → logprob: -6.504680156707764
    4. ' len' → logprob: -12.254679679870605
    5. '   ' → logprob: -20.004680633544922
    6. '[int' → logprob: -20.004680633544922
    7. '  ' → logprob: -21.504680633544922
    8. '(int' → logprob: -21.754680633544922
    9. ' ' → logprob: -21.879680633544922
    10. '=int' → logprob: -22.629680633544922

Token 674: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.00038825106457807124
    2. '(' → logprob: -7.875388145446777
    3. '_input' → logprob: -11.875388145446777
    4. ' _' → logprob: -14.875388145446777
    5. '('' → logprob: -15.000388145446777
    6. '(
' → logprob: -16.000389099121094
    7. '_' → logprob: -16.375389099121094
    8. ' (_' → logprob: -16.375389099121094
    9. '()' → logprob: -16.750389099121094
    10. ' ' → logprob: -16.750389099121094

Token 675: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0788925439119339
    2. '_input' → logprob: -2.578892469406128
    3. ' input' → logprob: -13.328892707824707
    4. '(input' → logprob: -13.953892707824707
    5. 'array' → logprob: -15.453892707824707
    6. '.input' → logprob: -18.70389175415039
    7. '[input' → logprob: -18.70389175415039
    8. 'Input' → logprob: -19.07889175415039
    9. '	input' → logprob: -19.20389175415039
    10. 'import' → logprob: -19.45389175415039

Token 676: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00019460011390037835
    2. '()[' → logprob: -8.750194549560547
    3. '(' → logprob: -10.250194549560547
    4. ' [' → logprob: -14.875194549560547
    5. '()' → logprob: -15.250194549560547
    6. '```' → logprob: -16.125194549560547
    7. '([' → logprob: -17.125194549560547
    8. '0' → logprob: -17.750194549560547
    9. '[
' → logprob: -17.750194549560547
    10. ')' → logprob: -18.000194549560547

Token 677: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '[' → logprob: -17.875
    4. '
' → logprob: -18.625
    5. '00' → logprob: -19.25
    6. '1' → logprob: -19.375
    7. '   ' → logprob: -19.625
    8. '```' → logprob: -21.375
    9. '000' → logprob: -21.875
    10. '    ' → logprob: -22.25

Token 678: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.009983435273170471
    2. '].' → logprob: -5.634983539581299
    3. ')' → logprob: -5.759983539581299
    4. '().' → logprob: -6.134983539581299
    5. '.strip' → logprob: -7.134983539581299
    6. '())' → logprob: -9.00998306274414
    7. ']' → logprob: -9.50998306274414
    8. '])
' → logprob: -11.13498306274414
    9. 'strip' → logprob: -11.38498306274414
    10. '[' → logprob: -12.13498306274414

Token 679: '   ' (ID: 271)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.014241318218410015
    2. '   ' → logprob: -4.5142412185668945
    3. '
' → logprob: -5.7642412185668945
    4. ' node' → logprob: -10.764241218566895
    5. '    
' → logprob: -10.889241218566895
    6. '_node' → logprob: -11.764241218566895
    7. '	node' → logprob: -13.639241218566895
    8. 'array' → logprob: -14.264241218566895
    9. '[node' → logprob: -15.014241218566895
    10. '(node' → logprob: -16.01424217224121

Token 680: ' array' (ID: 2644)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.00036156410351395607
    2. '   ' → logprob: -8.000361442565918
    3. ' node' → logprob: -11.125361442565918
    4. '_node' → logprob: -11.500361442565918
    5. '
' → logprob: -14.500361442565918
    6. '    
' → logprob: -14.875361442565918
    7. '	node' → logprob: -15.875361442565918
    8. '  ' → logprob: -17.000362396240234
    9. 'array' (adapté à ' array') → logprob: -17.000362396240234
    10. 'line' → logprob: -17.500362396240234

Token 681: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21912553906440735
    2. '=' → logprob: -1.844125509262085
    3. '_lines' → logprob: -4.094125747680664
    4. '_list' → logprob: -4.219125747680664
    5. '_data' → logprob: -5.719125747680664
    6. '_length' → logprob: -6.719125747680664
    7. '_' → logprob: -6.969125747680664
    8. '   ' → logprob: -7.344125747680664
    9. '_array' → logprob: -8.219125747680664
    10. '_nodes' → logprob: -8.594125747680664

Token 682: ' list' (ID: 1562)
  Prédit: '[_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[_' → logprob: -0.5364128351211548
    2. '_input' → logprob: -1.0364128351211548
    3. '[i' → logprob: -3.2864127159118652
    4. '[x' → logprob: -4.161412715911865
    5. '[line' → logprob: -6.036412715911865
    6. '[' → logprob: -6.286412715911865
    7. ' [' → logprob: -6.786412715911865
    8. '[input' → logprob: -6.786412715911865
    9. ' [_' → logprob: -8.911413192749023
    10. '[v' → logprob: -9.036413192749023

Token 683: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00013774730905424803
    2. '(' → logprob: -9.750137329101562
    3. '(_' → logprob: -9.750137329101562
    4. 'map' → logprob: -11.125137329101562
    5. '(zip' → logprob: -13.500137329101562
    6. '(x' → logprob: -13.750137329101562
    7. '_map' → logprob: -14.125137329101562
    8. '()' → logprob: -14.625137329101562
    9. '(line' → logprob: -14.875137329101562
    10. '=' → logprob: -14.875137329101562

Token 684: '(lambda' (ID: 43341)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.16264502704143524
    2. '(lambda' → logprob: -1.9126449823379517
    3. '(list' → logprob: -6.412644863128662
    4. '(int' → logprob: -7.162644863128662
    5. '(' → logprob: -14.28764533996582
    6. '(tuple' → logprob: -14.53764533996582
    7. 'lambda' → logprob: -15.28764533996582
    8. '(strip' → logprob: -15.53764533996582
    9. '(len' → logprob: -15.66264533996582
    10. 'list' → logprob: -15.78764533996582

Token 685: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.49371522665023804
    2. 'str' → logprob: -1.2437152862548828
    3. 'x' → logprob: -2.493715286254883
    4. 'list' → logprob: -4.743715286254883
    5. '(lambda' → logprob: -5.243715286254883
    6. 'line' → logprob: -5.743715286254883
    7. '(str' → logprob: -7.493715286254883
    8. ' str' → logprob: -7.743715286254883
    9. ' lambda' → logprob: -8.118715286254883
    10. 's' → logprob: -8.618715286254883

Token 686: ':' (ID: 25)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.34047412872314453
    2. ':' → logprob: -2.2154741287231445
    3. ' x' → logprob: -2.5904741287231445
    4. 'lambda' → logprob: -2.9654741287231445
    5. 'str' → logprob: -3.4654741287231445
    6. '(lambda' → logprob: -4.4654741287231445
    7. '(x' → logprob: -6.0904741287231445
    8. ':str' → logprob: -6.0904741287231445
    9. '(str' → logprob: -6.3404741287231445
    10. 'line' → logprob: -6.8404741287231445

Token 687: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3425219549390022e-05
    2. ' x' → logprob: -11.25001335144043
    3. 'str' → logprob: -15.00001335144043
    4. 'list' → logprob: -17.62501335144043
    5. 'lambda' → logprob: -17.75001335144043
    6. '   ' → logprob: -19.87501335144043
    7. '(x' → logprob: -21.25001335144043
    8. 'line' → logprob: -22.87501335144043
    9. 'tuple' → logprob: -23.12501335144043
    10. ')x' → logprob: -23.50001335144043

Token 688: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.04657133296132088
    2. '.split' → logprob: -3.6715712547302246
    3. '.rstrip' → logprob: -3.9215712547302246
    4. ' .' → logprob: -8.796571731567383
    5. '.' → logprob: -9.921571731567383
    6. 'strip' → logprob: -10.796571731567383
    7. '[:-' → logprob: -11.171571731567383
    8. ':' → logprob: -11.671571731567383
    9. 'split' → logprob: -12.546571731567383
    10. 'rstrip' → logprob: -12.796571731567383

Token 689: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.00637807184830308
    2. '()' → logprob: -5.131378173828125
    3. '(),'' → logprob: -8.631378173828125
    4. '()))' → logprob: -8.756378173828125
    5. '('' → logprob: -10.006378173828125
    6. '(),
' → logprob: -10.256378173828125
    7. '()
' → logprob: -11.881378173828125
    8. '(','' → logprob: -11.881378173828125
    9. '('\' → logprob: -12.381378173828125
    10. '()\' → logprob: -13.006378173828125

Token 690: ' _' (ID: 1175)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.005499241407960653
    2. ' _' → logprob: -5.255499362945557
    3. '   ' → logprob: -8.255498886108398
    4. '    ' → logprob: -12.755498886108398
    5. '_' → logprob: -14.630498886108398
    6. '  ' → logprob: -14.880498886108398
    7. '_array' → logprob: -15.130498886108398
    8. ' ' → logprob: -15.380498886108398
    9. '_INPUT' → logprob: -15.630498886108398
    10. ')' → logprob: -15.880498886108398

Token 691: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0280383548888494e-06
    2. '_input' → logprob: -14.125000953674316
    3. 'array' → logprob: -15.375000953674316
    4. ' input' → logprob: -17.500001907348633
    5. 'user' → logprob: -19.250001907348633
    6. '	input' → logprob: -20.750001907348633
    7. '
' → logprob: -20.875001907348633
    8. '   ' → logprob: -20.875001907348633
    9. '(input' → logprob: -21.250001907348633
    10. 'import' → logprob: -21.625001907348633

Token 692: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006725788116455078
    2. '1' → logprob: -5.006725788116455
    3. '   ' → logprob: -12.381725311279297
    4. '
' → logprob: -12.881725311279297
    5. '(' → logprob: -13.881725311279297
    6. ' ' → logprob: -14.006725311279297
    7. '```' → logprob: -14.381725311279297
    8. ' [' → logprob: -14.631725311279297
    9. ')[' → logprob: -15.131725311279297
    10. '       ' → logprob: -15.756725311279297

Token 693: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.309382373117842e-05
    2. 'range' → logprob: -11.125033378601074
    3. ' ' → logprob: -11.375033378601074
    4. '   ' → logprob: -12.500033378601074
    5. '2' → logprob: -13.750033378601074
    6. '(' → logprob: -14.625033378601074
    7. '
' → logprob: -15.000033378601074
    8. '[' → logprob: -15.500033378601074
    9. '```' → logprob: -15.500033378601074
    10. ' range' → logprob: -16.125032424926758

Token 694: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000805341056548059
    2. ' :' → logprob: -7.875805377960205
    3. ':]' → logprob: -8.375804901123047
    4. ']))' → logprob: -10.000804901123047
    5. 'array' → logprob: -10.000804901123047
    6. '1' → logprob: -10.750804901123047
    7. ':Array' → logprob: -11.375804901123047
    8. '))' → logprob: -11.500804901123047
    9. '[array' → logprob: -11.500804901123047
    10. ',array' → logprob: -11.875804901123047

Token 695: ']))
' (ID: 24801)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.4684019088745117
    2. ']))' → logprob: -1.4684019088745117
    3. '1' → logprob: -1.9684019088745117
    4. ':' → logprob: -6.468401908874512
    5. ' array' → logprob: -6.843401908874512
    6. ']))
' → logprob: -8.343401908874512
    7. ']' → logprob: -8.468401908874512
    8. '][:' → logprob: -8.718401908874512
    9. ' ' → logprob: -8.843401908874512
    10. '   ' → logprob: -8.968401908874512

Token 696: '   ' (ID: 271)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.00193636619951576
    2. '
' → logprob: -6.251936435699463
    3. ' node' → logprob: -12.001935958862305
    4. '   ' → logprob: -14.001935958862305
    5. '    
' → logprob: -15.126935958862305
    6. '```' → logprob: -15.376935958862305
    7. '_node' → logprob: -15.876935958862305
    8. '[node' → logprob: -16.001935958862305
    9. '	node' → logprob: -16.376935958862305
    10. 'n' → logprob: -17.251935958862305

Token 697: ' #' (ID: 1069)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -4.572941179503687e-05
    2. '
' → logprob: -10.125045776367188
    3. ' node' → logprob: -12.375045776367188
    4. '    
' → logprob: -14.250045776367188
    5. '   ' → logprob: -14.625045776367188
    6. '```' → logprob: -17.125045776367188
    7. '	node' → logprob: -17.375045776367188
    8. '[node' → logprob: -17.750045776367188
    9. '_node' → logprob: -17.875045776367188
    10. '  
' → logprob: -18.625045776367188

Token 698: ' assert' (ID: 3696)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -2.5776860184123507e-06
    2. ' node' → logprob: -13.37500286102295
    3. '
' → logprob: -13.87500286102295
    4. '    
' → logprob: -19.000001907348633
    5. '```' → logprob: -19.375001907348633
    6. '   ' → logprob: -19.500001907348633
    7. 'global' → logprob: -19.750001907348633
    8. '#' → logprob: -19.875001907348633
    9. '	node' → logprob: -20.625001907348633
    10. '[node' → logprob: -20.625001907348633

Token 699: ' len' (ID: 4631)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.3597981333732605
    2. ' array' → logprob: -1.6097981929779053
    3. ' len' → logprob: -2.8597981929779053
    4. 'len' → logprob: -3.1097981929779053
    5. '(array' → logprob: -9.234798431396484
    6. '(len' → logprob: -9.359798431396484
    7. '0' → logprob: -9.734798431396484
    8. ' ' → logprob: -9.734798431396484
    9. '[array' → logprob: -11.359798431396484
    10. '1' → logprob: -11.609798431396484

Token 700: '(array' (ID: 13176)
  Prédit: '(array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(array' → logprob: -0.0003107943630311638
    2. '(node' → logprob: -8.125310897827148
    3. '(_' → logprob: -11.375310897827148
    4. 'array' → logprob: -13.000310897827148
    5. '(' → logprob: -14.750310897827148
    6. '=array' → logprob: -15.000310897827148
    7. '(arr' → logprob: -15.625310897827148
    8. '(_)' → logprob: -17.00031089782715
    9. '[array' → logprob: -17.12531089782715
    10. ' (' → logprob: -17.25031089782715

Token 701: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4757392108440399
    2. '==' → logprob: -0.9757392406463623
    3. ')' → logprob: -6.600739002227783
    4. ')==' → logprob: -8.725739479064941
    5. '<=' → logprob: -9.850739479064941
    6. ' <=' → logprob: -10.475739479064941
    7. '=' → logprob: -10.850739479064941
    8. '()==' → logprob: -11.350739479064941
    9. '()' → logprob: -11.475739479064941
    10. '===' → logprob: -12.350739479064941

Token 702: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4290412962436676
    2. ' ==' → logprob: -1.0540412664413452
    3. '=' → logprob: -8.804040908813477
    4. '>=' → logprob: -9.429040908813477
    5. ')==' → logprob: -10.429040908813477
    6. '()==' → logprob: -11.054040908813477
    7. ')' → logprob: -11.179040908813477
    8. ' =' → logprob: -11.554040908813477
    9. ' >=' → logprob: -11.679040908813477
    10. '<=' → logprob: -11.929040908813477

Token 703: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.0008172504603862762
    2. ' array' → logprob: -7.12581729888916
    3. 'int' → logprob: -11.50081729888916
    4. '   ' → logprob: -13.00081729888916
    5. '  ' → logprob: -16.000816345214844
    6. '[array' → logprob: -16.125816345214844
    7. ' int' → logprob: -16.875816345214844
    8. '(array' → logprob: -17.125816345214844
    9. '	array' → logprob: -17.375816345214844
    10. ' ' → logprob: -17.375816345214844

Token 704: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -8.65707261255011e-06
    2. 'length' → logprob: -11.750008583068848
    3. '[' → logprob: -15.250008583068848
    4. '_l' → logprob: -15.625008583068848
    5. 'ength' → logprob: -16.375009536743164
    6. 'Length' → logprob: -16.875009536743164
    7. '_lengths' → logprob: -16.875009536743164
    8. '[length' → logprob: -17.875009536743164
    9. 'array' → logprob: -18.250009536743164
    10. 'len' → logprob: -18.375009536743164

Token 705: '

' (ID: 279)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0015938883880153298
    2. '
' → logprob: -6.501594066619873
    3. '   ' → logprob: -9.626593589782715
    4. '    
' → logprob: -11.251593589782715
    5. ' node' → logprob: -11.376593589782715
    6. '

' → logprob: -14.876593589782715
    7. '```' → logprob: -15.251593589782715
    8. '[node' → logprob: -15.876593589782715
    9. '  
' → logprob: -16.25159454345703
    10. 'num' → logprob: -16.75159454345703

Token 706: '   ' (ID: 271)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0012104723136872053
    2. '   ' → logprob: -6.751210689544678
    3. '
' → logprob: -10.50121021270752
    4. ' node' → logprob: -11.62621021270752
    5. '    
' → logprob: -12.62621021270752
    6. '	node' → logprob: -14.87621021270752
    7. '_node' → logprob: -17.126211166381836
    8. '```' → logprob: -17.126211166381836
    9. '[node' → logprob: -17.251211166381836
    10. '  ' → logprob: -18.501211166381836

Token 707: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -3.128163257315464e-07
    2. ' node' → logprob: -16.125
    3. '
' → logprob: -16.5
    4. '   ' → logprob: -21.0
    5. '    
' → logprob: -21.625
    6. 'num' → logprob: -22.0
    7. '	node' → logprob: -22.0
    8. 'root' → logprob: -22.375
    9. '```' → logprob: -22.5
    10. '[node' → logprob: -22.75

Token 708: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.070975071750581e-05
    2. '_length' → logprob: -11.250030517578125
    3. '_count' → logprob: -11.875030517578125
    4. '_' → logprob: -11.875030517578125
    5. '_array' → logprob: -13.875030517578125
    6. '_l' → logprob: -14.750030517578125
    7. '_size' → logprob: -14.875030517578125
    8. 's' → logprob: -15.125030517578125
    9. '_num' → logprob: -15.125030517578125
    10. '_len' → logprob: -15.250030517578125

Token 709: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889176905155182
    2. '=' → logprob: -2.5788917541503906
    3. ' =[' → logprob: -13.45389175415039
    4. '=[' → logprob: -14.95389175415039
    5. '[' → logprob: -16.45389175415039
    6. '=[]' → logprob: -16.57889175415039
    7. ' ' → logprob: -17.82889175415039
    8. '[:]' → logprob: -17.95389175415039
    9. '＝' → logprob: -18.07889175415039
    10. ' =
' → logprob: -18.45389175415039

Token 710: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.049012430012226105
    2. '[node' → logprob: -3.0490124225616455
    3. '[n' → logprob: -8.299012184143066
    4. '[list' → logprob: -9.549012184143066
    5. ' [' → logprob: -10.299012184143066
    6. '[array' → logprob: -10.549012184143066
    7. '[N' → logprob: -10.799012184143066
    8. '[np' → logprob: -11.799012184143066
    9. '[class' → logprob: -12.174012184143066
    10. '[num' → logprob: -12.424012184143066

Token 711: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -6.2729995988775045e-06
    2. ' Node' → logprob: -12.000006675720215
    3. '	Node' → logprob: -22.0000057220459
    4. '   ' → logprob: -24.3750057220459
    5. '_Node' → logprob: -24.5000057220459
    6. '(Node' → logprob: -25.0000057220459
    7. '<Node' → logprob: -25.1250057220459
    8. ' ' → logprob: -25.6250057220459
    9. '_node' → logprob: -26.1250057220459
    10. 'node' → logprob: -26.3750057220459

Token 712: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.511406809295295e-06
    2. '()]' → logprob: -12.375006675720215
    3. '(i' → logprob: -13.750006675720215
    4. '(' → logprob: -14.375006675720215
    5. ' ()' → logprob: -14.875006675720215
    6. 'for' → logprob: -16.2500057220459
    7. '()
' → logprob: -17.5000057220459
    8. '（）' → logprob: -18.0000057220459
    9. '(x' → logprob: -18.2500057220459
    10. '()\' → logprob: -18.8750057220459

Token 713: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759709477424622
    2. ' for' → logprob: -0.8259709477424622
    3. '	for' → logprob: -11.325970649719238
    4. '()' → logprob: -11.700970649719238
    5. '   ' → logprob: -11.950970649719238
    6. ' ' → logprob: -12.575970649719238
    7. ')' → logprob: -13.950970649719238
    8. '
' → logprob: -15.950970649719238
    9. ']' → logprob: -16.075971603393555
    10. '       ' → logprob: -17.325971603393555

Token 714: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0017719273455440998
    2. ' _' → logprob: -6.376771926879883
    3. ' i' → logprob: -10.126771926879883
    4. ' ' → logprob: -11.751771926879883
    5. '_i' → logprob: -12.001771926879883
    6. ' in' → logprob: -12.126771926879883
    7. 'i' → logprob: -12.251771926879883
    8. ' range' → logprob: -12.501771926879883
    9. '_x' → logprob: -14.001771926879883
    10. 'x' → logprob: -14.751771926879883

Token 715: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038103457540273666
    2. 'in' → logprob: -3.2881033420562744
    3. ' ' → logprob: -10.413103103637695
    4. 'i' → logprob: -10.663103103637695
    5. 'range' → logprob: -12.038103103637695
    6. '  ' → logprob: -13.913103103637695
    7. ' i' → logprob: -14.288103103637695
    8. 'x' → logprob: -14.538103103637695
    9. ' _' → logprob: -15.288103103637695
    10. '   ' → logprob: -15.788103103637695

Token 716: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750604182481766
    2. ' range' → logprob: -3.5297505855560303
    3. '_' → logprob: -16.65475082397461
    4. '(range' → logprob: -16.90475082397461
    5. '	range' → logprob: -17.15475082397461
    6. ' ' → logprob: -17.52975082397461
    7. '   ' → logprob: -17.65475082397461
    8. '_range' → logprob: -17.65475082397461
    9. '  ' → logprob: -19.15475082397461
    10. 'array' → logprob: -19.65475082397461

Token 717: '(array' (ID: 13176)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.008754138834774494
    2. '(array' → logprob: -4.758754253387451
    3. ' array' → logprob: -8.883753776550293
    4. '[array' → logprob: -14.758753776550293
    5. '(' → logprob: -15.258753776550293
    6. ',array' → logprob: -16.38375473022461
    7. ' (' → logprob: -16.63375473022461
    8. 'int' → logprob: -16.88375473022461
    9. '=array' → logprob: -17.13375473022461
    10. '	array' → logprob: -17.63375473022461

Token 718: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.6240566083070007e-06
    2. 'length' → logprob: -13.500001907348633
    3. '_array' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '_l' → logprob: -17.500001907348633
    6. 'array' → logprob: -18.375001907348633
    7. 'ength' → logprob: -18.500001907348633
    8. ' length' → logprob: -19.875001907348633
    9. '_LENGTH' → logprob: -20.000001907348633
    10. 'Length' → logprob: -20.500001907348633

Token 719: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.957014556974173e-05
    2. ')' → logprob: -10.000069618225098
    3. ']' → logprob: -10.750069618225098
    4. ')]
' → logprob: -13.125069618225098
    5. '   ' → logprob: -15.625069618225098
    6. ' )' → logprob: -15.750069618225098
    7. ')],' → logprob: -16.50006866455078
    8. ')])' → logprob: -16.87506866455078
    9. '')]' → logprob: -17.25006866455078
    10. ')]

' → logprob: -17.37506866455078

Token 720: '   ' (ID: 271)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.24717888236045837
    2. '   ' → logprob: -2.372178792953491
    3. 'array' → logprob: -2.872178792953491
    4. 'for' → logprob: -3.372178792953491
    5. 'generate' → logprob: -3.747178792953491
    6. 'nodes' → logprob: -5.37217903137207
    7. 'tree' → logprob: -5.87217903137207
    8. 'result' → logprob: -7.49717903137207
    9. '    
' → logprob: -7.49717903137207
    10. '_node' → logprob: -7.74717903137207

Token 721: ' ans' (ID: 3345)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0007935435860417783
    2. 'nodes' → logprob: -7.75079345703125
    3. 'tree' → logprob: -8.50079345703125
    4. ' node' → logprob: -9.87579345703125
    5. 'result' → logprob: -10.25079345703125
    6. '   ' → logprob: -10.62579345703125
    7. 'array' → logprob: -10.75079345703125
    8. '_node' → logprob: -11.87579345703125
    9. 'root' → logprob: -12.25079345703125
    10. 'for' → logprob: -12.37579345703125

Token 722: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07108291238546371
    2. '=' → logprob: -2.696082830429077
    3. 'ay' → logprob: -7.321083068847656
    4. '_node' → logprob: -8.446083068847656
    5. '=node' → logprob: -9.196083068847656
    6. '_' → logprob: -9.446083068847656
    7. 'node' → logprob: -10.196083068847656
    8. '_list' → logprob: -10.821083068847656
    9. 's' → logprob: -11.696083068847656
    10. '_=' → logprob: -11.946083068847656

Token 723: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.005234121344983578
    2. ' generate' → logprob: -5.255234241485596
    3. '(generate' → logprob: -15.755233764648438
    4. '   ' → logprob: -16.880233764648438
    5. ' ' → logprob: -19.130233764648438
    6. '
' → logprob: -19.130233764648438
    7. '.generate' → logprob: -19.255233764648438
    8. 'enerate' → logprob: -19.755233764648438
    9. 'gener' → logprob: -20.255233764648438
    10. '  ' → logprob: -20.255233764648438

Token 724: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -5.512236498361744e-07
    2. 'tree' → logprob: -14.500000953674316
    3. '_array' → logprob: -16.875
    4. '_t' → logprob: -17.5
    5. '_TREE' → logprob: -18.75
    6. '_node' → logprob: -20.0
    7. ' tree' → logprob: -20.25
    8. '<Tree' → logprob: -20.5
    9. '```' → logprob: -20.5
    10. 'Tree' → logprob: -20.625

Token 725: '(_' (ID: 4963)
  Prédit: '(array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(array' → logprob: -3.173704271830502e-06
    2. 'array' → logprob: -12.75000286102295
    3. '(node' → logprob: -16.250003814697266
    4. '(arr' → logprob: -17.000003814697266
    5. '[array' → logprob: -17.125003814697266
    6. '=array' → logprob: -17.250003814697266
    7. '(' → logprob: -17.500003814697266
    8. ',array' → logprob: -17.500003814697266
    9. '$array' → logprob: -19.875003814697266
    10. ' array' → logprob: -20.125003814697266

Token 726: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -1.9361264946837764e-07
    2. ' array' → logprob: -16.625
    3. '_array' → logprob: -17.625
    4. 'rray' → logprob: -19.375
    5. '(array' → logprob: -19.5
    6. 'input' → logprob: -19.75
    7. 'arra' → logprob: -21.5
    8. '   ' → logprob: -21.5
    9. '[array' → logprob: -21.5
    10. 'arrays' → logprob: -22.375

Token 727: '=array' (ID: 64814)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.9017140865325928
    2. '(array' → logprob: -0.9017140865325928
    3. '=array' → logprob: -1.9017140865325928
    4. ')' → logprob: -3.9017140865325928
    5. 'rray' → logprob: -4.276714324951172
    6. '=' → logprob: -5.651714324951172
    7. '[array' → logprob: -7.651714324951172
    8. 'ay' → logprob: -8.151714324951172
    9. ',array' → logprob: -8.776714324951172
    10. ' array' → logprob: -9.026714324951172

Token 728: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -13.625003814697266
    3. 'array' → logprob: -13.625003814697266
    4. '))' → logprob: -14.750003814697266
    5. '_)' → logprob: -15.750003814697266
    6. ' )' → logprob: -16.125003814697266
    7. '())' → logprob: -17.250003814697266
    8. '(array' → logprob: -17.375003814697266
    9. ')`' → logprob: -17.375003814697266
    10. '[' → logprob: -17.375003814697266

Token 729: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10044539719820023
    2. '   ' → logprob: -2.350445508956909
    3. ' for' → logprob: -8.725445747375488
    4. '    
' → logprob: -10.225445747375488
    5. '	for' → logprob: -10.350445747375488
    6. '<|end|>' → logprob: -12.100445747375488
    7. '
' → logprob: -13.100445747375488
    8. '  
' → logprob: -15.475445747375488
    9. '	
' → logprob: -15.975445747375488
    10. '        
' → logprob: -16.850444793701172

Token 730: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16044722497463226
    2. '   ' → logprob: -1.9104472398757935
    3. ' for' → logprob: -8.660447120666504
    4. '    
' → logprob: -10.035447120666504
    5. '	for' → logprob: -12.410447120666504
    6. '
' → logprob: -13.535447120666504
    7. '```' → logprob: -16.03544807434082
    8. '  
' → logprob: -16.28544807434082
    9. '<|end|>' → logprob: -16.41044807434082
    10. 'print' → logprob: -16.53544807434082

Token 731: ' key' (ID: 2140)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.5777134299278259
    2. 'i' → logprob: -1.0777134895324707
    3. '_node' → logprob: -3.5777134895324707
    4. 'v' → logprob: -3.8277134895324707
    5. 'idx' → logprob: -4.202713489532471
    6. 'n' → logprob: -4.702713489532471
    7. 'x' → logprob: -4.827713489532471
    8. '_' → logprob: -5.702713489532471
    9. 'each' → logprob: -6.077713489532471
    10. '_i' → logprob: -6.327713489532471

Token 732: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001014706795103848
    2. ',' → logprob: -7.001014709472656
    3. 'in' → logprob: -9.751014709472656
    4. '   ' → logprob: -11.251014709472656
    5. ' ' → logprob: -11.876014709472656
    6. '_' → logprob: -12.376014709472656
    7. '_idx' → logprob: -12.501014709472656
    8. ' ,' → logprob: -12.751014709472656
    9. '_in' → logprob: -12.876014709472656
    10. ',node' → logprob: -13.001014709472656

Token 733: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.323798805475235
    2. 'v' → logprob: -2.448798894882202
    3. 'value' → logprob: -2.948798894882202
    4. 'val' → logprob: -2.948798894882202
    5. ' node' → logprob: -3.323798894882202
    6. '_node' → logprob: -3.698798894882202
    7. '_' → logprob: -5.198798656463623
    8. ' val' → logprob: -5.448798656463623
    9. '_value' → logprob: -5.698798656463623
    10. ' v' → logprob: -5.698798656463623

Token 734: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05492955818772316
    2. 'in' → logprob: -2.929929494857788
    3. '_in' → logprob: -10.929929733276367
    4. ' ' → logprob: -11.429929733276367
    5. 's' → logprob: -11.804929733276367
    6. '	in' → logprob: -12.554929733276367
    7. 'inth' → logprob: -13.804929733276367
    8. ',' → logprob: -14.054929733276367
    9. '  ' → logprob: -14.179929733276367
    10. ')' → logprob: -14.804929733276367

Token 735: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.12692853808403015
    2. ' enumerate' → logprob: -2.1269285678863525
    3. 'ans' → logprob: -15.251928329467773
    4. 'en' → logprob: -17.376928329467773
    5. '
' → logprob: -17.376928329467773
    6. 'enum' → logprob: -17.501928329467773
    7. '   ' → logprob: -17.751928329467773
    8. '(en' → logprob: -18.626928329467773
    9. ' ans' → logprob: -19.001928329467773
    10. ' ' → logprob: -19.126928329467773

Token 736: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5770382285118103
    2. 'ans' → logprob: -0.8270382285118103
    3. ' ans' → logprob: -6.827038288116455
    4. 'node' → logprob: -11.827037811279297
    5. '(node' → logprob: -12.702037811279297
    6. '	ans' → logprob: -13.202037811279297
    7. '_ans' → logprob: -13.952037811279297
    8. 'enumer' → logprob: -14.577037811279297
    9. '(' → logprob: -15.577037811279297
    10. 'Ans' → logprob: -16.577037811279297

Token 737: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02259594015777111
    2. ':' → logprob: -4.3975958824157715
    3. '):
' → logprob: -4.8975958824157715
    4. '():' → logprob: -6.1475958824157715
    5. '():
' → logprob: -8.52259635925293
    6. ')' → logprob: -9.52259635925293
    7. ':
' → logprob: -9.52259635925293
    8. '.items' → logprob: -11.02259635925293
    9. 'items' → logprob: -11.02259635925293
    10. '):
' → logprob: -12.02259635925293

Token 738: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00584476999938488
    2. '   ' → logprob: -5.380844593048096
    3. ' print' → logprob: -7.005844593048096
    4. 'print' → logprob: -8.130845069885254
    5. '
' → logprob: -11.880845069885254
    6. '    
' → logprob: -12.380845069885254
    7. '        
' → logprob: -12.505845069885254
    8. '	print' → logprob: -13.005845069885254
    9. ':' → logprob: -13.755845069885254
    10. ':
' → logprob: -13.880845069885254

Token 739: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02455122023820877
    2. '   ' → logprob: -3.7745511531829834
    3. ' print' → logprob: -6.6495513916015625
    4. '       ' → logprob: -11.899551391601562
    5. '	print' → logprob: -12.774551391601562
    6. '  ' → logprob: -16.149551391601562
    7. '   ' → logprob: -16.149551391601562
    8. '.print' → logprob: -16.274551391601562
    9. ' ' → logprob: -16.274551391601562
    10. '#print' → logprob: -17.149551391601562

Token 740: '('' (ID: 706)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.22542433440685272
    2. '(f' → logprob: -1.7254242897033691
    3. '_result' → logprob: -4.975424289703369
    4. 'f' → logprob: -5.225424289703369
    5. '(str' → logprob: -5.350424289703369
    6. '('' → logprob: -5.600424289703369
    7. '('{}' → logprob: -6.475424289703369
    8. '(' → logprob: -7.725424289703369
    9. '()' → logprob: -7.975424289703369
    10. 'str' → logprob: -8.600424766540527

Token 741: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.017609192058444023
    2. 'Node' → logprob: -5.017609119415283
    3. 'key' → logprob: -5.517609119415283
    4. '{}' → logprob: -5.892609119415283
    5. ''' → logprob: -6.267609119415283
    6. '[node' → logprob: -7.267609119415283
    7. '[' → logprob: -8.142609596252441
    8. '['' → logprob: -8.142609596252441
    9. '')' → logprob: -8.267609596252441
    10. ' node' → logprob: -8.517609596252441

Token 742: ' '' (ID: 461)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.9157677888870239
    2. '',' → logprob: -1.165767788887024
    3. ' '' → logprob: -2.5407676696777344
    4. ''' → logprob: -2.7907676696777344
    5. ' {}'.' → logprob: -2.7907676696777344
    6. '{}' → logprob: -3.5407676696777344
    7. ' ',' → logprob: -4.415767669677734
    8. ' '+' → logprob: -4.665767669677734
    9. ''+' → logprob: -4.790767669677734
    10. ' {' → logprob: -4.790767669677734

Token 743: ' +' (ID: 659)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.18951794505119324
    2. '{' → logprob: -2.1895179748535156
    3. '+' → logprob: -3.6895179748535156
    4. '#' → logprob: -3.8145179748535156
    5. ''+' → logprob: -5.564517974853516
    6. '
' → logprob: -6.439517974853516
    7. '0' → logprob: -6.939517974853516
    8. '#{' → logprob: -6.939517974853516
    9. '%d' → logprob: -7.189517974853516
    10. '[' → logprob: -7.189517974853516

Token 744: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.3902033970225602e-05
    2. ' str' → logprob: -11.250014305114746
    3. '(str' → logprob: -14.250014305114746
    4. 'f' → logprob: -16.37501335144043
    5. '[str' → logprob: -17.75001335144043
    6. '	str' → logprob: -19.37501335144043
    7. 'stri' → logprob: -19.37501335144043
    8. 'string' → logprob: -19.75001335144043
    9. '=str' → logprob: -19.75001335144043
    10. 'repr' → logprob: -20.75001335144043

Token 745: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.00044318195432424545
    2. 'key' → logprob: -7.750442981719971
    3. '(' → logprob: -11.625443458557129
    4. ' (' → logprob: -13.375443458557129
    5. ' key' → logprob: -13.375443458557129
    6. '[key' → logprob: -15.250443458557129
    7. '(
' → logprob: -16.500442504882812
    8. ',key' → logprob: -16.875442504882812
    9. ')' → logprob: -17.750442504882812
    10. 's' → logprob: -18.000442504882812

Token 746: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17812924087047577
    2. ' +' → logprob: -2.178129196166992
    3. '+' → logprob: -3.928129196166992
    4. ' ,' → logprob: -4.053129196166992
    5. ')' → logprob: -5.053129196166992
    6. '   ' → logprob: -5.428129196166992
    7. '),' → logprob: -7.053129196166992
    8. '    ' → logprob: -7.928129196166992
    9. ',end' → logprob: -8.678129196166992
    10. ' ' → logprob: -8.928129196166992

Token 747: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07341952621936798
    2. '+' → logprob: -3.0734195709228516
    3. ' +' → logprob: -4.073419570922852
    4. ' ,' → logprob: -5.823419570922852
    5. '   ' → logprob: -6.198419570922852
    6. ',end' → logprob: -6.573419570922852
    7. '+":' → logprob: -8.448419570922852
    8. ':' → logprob: -8.573419570922852
    9. '+,' → logprob: -8.823419570922852
    10. ')' → logprob: -8.823419570922852

Token 748: ' ':' (ID: 30751)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.004070920869708061
    2. '':'' → logprob: -5.75407075881958
    3. ''' → logprob: -7.50407075881958
    4. ' ':' → logprob: -9.004071235656738
    5. '":' → logprob: -9.379071235656738
    6. ':' → logprob: -9.379071235656738
    7. '(':' → logprob: -10.004071235656738
    8. '':''' → logprob: -14.254071235656738
    9. '',' → logprob: -14.629071235656738
    10. ' ':'' → logprob: -14.754071235656738

Token 749: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.23315006494522095
    2. ' end' → logprob: -2.108150005340576
    3. 'end' → logprob: -2.858150005340576
    4. ' ',' → logprob: -4.108150005340576
    5. ',' → logprob: -4.983150005340576
    6. ',end' → logprob: -5.608150005340576
    7. ' ,' → logprob: -7.358150005340576
    8. ''' → logprob: -7.608150005340576
    9. ')' → logprob: -7.858150005340576
    10. '')' → logprob: -8.358150482177734

Token 750: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.06375276297330856
    2. 'end' → logprob: -2.8137526512145996
    3. ')' → logprob: -6.4387526512146
    4. ')
' → logprob: -10.188753128051758
    5. ' node' → logprob: -10.313753128051758
    6. ',' → logprob: -10.563753128051758
    7. ' )' → logprob: -10.688753128051758
    8. ' 
' → logprob: -10.938753128051758
    9. ',end' → logprob: -11.063753128051758
    10. ' ' → logprob: -11.938753128051758

Token 751: '='' (ID: 2053)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0018269078573212028
    2. ' '' → logprob: -6.376826763153076
    3. ')' → logprob: -9.376827239990234
    4. ' )' → logprob: -11.001827239990234
    5. '"' → logprob: -11.376827239990234
    6. ' ' → logprob: -12.501827239990234
    7. '    ' → logprob: -13.126827239990234
    8. '  ' → logprob: -13.251827239990234
    9. '   ' → logprob: -13.376827239990234
    10. '')' → logprob: -13.626827239990234

Token 752: ' ')
' (ID: 49195)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.23011347651481628
    2. ''' → logprob: -2.4801135063171387
    3. ' '' → logprob: -2.6051135063171387
    4. ')' → logprob: -3.4801135063171387
    5. ' ')' → logprob: -4.980113506317139
    6. ' ')
' → logprob: -5.480113506317139
    7. ' )
' → logprob: -5.605113506317139
    8. ' ' → logprob: -6.480113506317139
    9. ' 
' → logprob: -7.980113506317139
    10. '')' → logprob: -8.60511302947998

Token 753: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0352838896214962
    2. '       ' → logprob: -4.160284042358398
    3. '   ' → logprob: -4.285284042358398
    4. ' print' → logprob: -5.285284042358398
    5. '	print' → logprob: -9.285284042358398
    6. '<|end|>' → logprob: -9.785284042358398
    7. ' ' → logprob: -10.285284042358398
    8. '        
' → logprob: -10.785284042358398
    9. '(print' → logprob: -11.785284042358398
    10. '  ' → logprob: -12.285284042358398

Token 754: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.872261317563243e-05
    2. ' print' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.000059127807617
    4. '       ' → logprob: -19.000059127807617
    5. '	print' → logprob: -19.500059127807617
    6. '  ' → logprob: -20.375059127807617
    7. '.print' → logprob: -20.625059127807617
    8. '(print' → logprob: -21.250059127807617
    9. ' ' → logprob: -21.750059127807617
    10. '#print' → logprob: -22.875059127807617

Token 755: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0031881670001894236
    2. 'result' → logprob: -5.753188133239746
    3. 'print' → logprob: -11.503188133239746
    4. 'Result' → logprob: -16.628189086914062
    5. '(result' → logprob: -16.628189086914062
    6. '(print' → logprob: -17.003189086914062
    7. '_res' → logprob: -17.128189086914062
    8. '('' → logprob: -17.128189086914062
    9. '_print' → logprob: -17.378189086914062
    10. '_results' → logprob: -17.628189086914062

Token 756: '(_' (ID: 4963)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -2.15310683415737e-05
    2. 'node' → logprob: -10.750021934509277
    3. ' node' → logprob: -19.12502098083496
    4. '(' → logprob: -19.12502098083496
    5. '[node' → logprob: -19.62502098083496
    6. '(n' → logprob: -19.87502098083496
    7. '(
' → logprob: -20.00002098083496
    8. ',node' → logprob: -20.12502098083496
    9. '	node' → logprob: -20.62502098083496
    10. '/node' → logprob: -20.87502098083496

Token 757: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -7.636475493200123e-05
    2. '(node' → logprob: -9.500076293945312
    3. ' node' → logprob: -13.500076293945312
    4. '_node' → logprob: -17.875076293945312
    5. '=node' → logprob: -19.625076293945312
    6. '[node' → logprob: -19.750076293945312
    7. ',node' → logprob: -20.250076293945312
    8. '.node' → logprob: -20.750076293945312
    9. '	node' → logprob: -20.750076293945312
    10. ')' → logprob: -22.250076293945312

Token 758: '=node' (ID: 187098)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -3.130576806142926e-05
    2. '(node' → logprob: -10.500031471252441
    3. ' node' → logprob: -12.500031471252441
    4. '=node' → logprob: -21.750030517578125
    5. '	node' → logprob: -21.875030517578125
    6. '[node' → logprob: -22.625030517578125
    7. ',node' → logprob: -22.625030517578125
    8. ')' → logprob: -24.250030517578125
    9. '.node' → logprob: -24.625030517578125
    10. '_node' → logprob: -25.125030517578125

Token 759: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '())' → logprob: -14.375000953674316
    3. ')
' → logprob: -14.750000953674316
    4. ' )' → logprob: -15.625000953674316
    5. '()' → logprob: -16.250001907348633
    6. '))' → logprob: -16.375001907348633
    7. ')`' → logprob: -18.125001907348633
    8. '')' → logprob: -19.750001907348633
    9. ')}' → logprob: -19.875001907348633
    10. ')#' → logprob: -19.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 757
Tokens correctement prédits (1ère position, stricte): 315
Tokens correctement prédits (1ère position, avec adaptation): 340
Tokens correctement prédits (top 10): 629
Précision stricte (1ère position): 41.61%
Précision adaptée (1ère position): 44.91%
Précision (top 10): 83.09%
================================================================================
