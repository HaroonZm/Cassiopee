================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
sentinel = 1e9 + 1
counter = 0
def merge(a, left, mid, right):
    global counter
    L = a[left:mid] + [sentinel]
    R = a[mid:right] + [sentinel]
    i,j = 0,0
    for k in range(left, right):
        if(L[i] <= R[j]):
            a[k] = L[i]
            i += 1
        else:
            a[k] = R[j]
            j += 1
    counter += right - left
def mergeSort(a, left, right):
    if left+1 < right:
        mid = (left + right) // 2
        mergeSort(a, left, mid)
        mergeSort(a, mid, right)
        merge(a, left, mid, right)

n = int(input())
a = list(map(int, input().split()))
mergeSort(a, 0, n)
print(*a)
print(counter)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sent' (ID: 25043)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002739016432315111
    2. '<|end|>' → logprob: -6.627738952636719
    3. '```' → logprob: -7.877738952636719
    4. '\n' → logprob: -8.252738952636719
    5. '\' → logprob: -8.252738952636719
    6. 'import' → logprob: -8.627738952636719
    7. '<|end|>' → logprob: -9.752738952636719
    8. '.e' → logprob: -10.377738952636719
    9. '.pi' → logprob: -10.627738952636719
    10. '
' → logprob: -10.877738952636719

Token 4: 'inel' (ID: 61674)
  Prédit: 'ence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.33433711528778076
    2. '_' → logprob: -1.3343371152877808
    3. 'ences' → logprob: -5.08433723449707
    4. '```' → logprob: -5.95933723449707
    5. 't' → logprob: -6.08433723449707
    6. '_t' → logprob: -6.33433723449707
    7. ' =' → logprob: -6.45933723449707
    8. 'e' → logprob: -6.58433723449707
    9. 'en' → logprob: -6.70933723449707
    10. '.' → logprob: -7.33433723449707

Token 5: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001363168703392148
    2. '(' → logprob: -9.500136375427246
    3. ',' → logprob: -11.250136375427246
    4. ':' → logprob: -11.250136375427246
    5. ' .' → logprob: -11.750136375427246
    6. '=' → logprob: -12.125136375427246
    7. '```' → logprob: -12.500136375427246
    8. '.
' → logprob: -12.875136375427246
    9. '<|end|>' → logprob: -13.000136375427246
    10. '_' → logprob: -13.250136375427246

Token 6: ' ' (ID: 220)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7486140131950378
    2. ' float' → logprob: -1.3736140727996826
    3. ' object' → logprob: -1.8736140727996826
    4. ' None' → logprob: -3.3736140727996826
    5. 'math' → logprob: -3.4986140727996826
    6. ' ' → logprob: -3.7486140727996826
    7. 'object' → logprob: -3.8736140727996826
    8. 'float' → logprob: -4.8736138343811035
    9. 'None' → logprob: -6.8736138343811035
    10. '-' → logprob: -7.2486138343811035

Token 7: '1' (ID: 16)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7166059613227844
    2. 'math' → logprob: -1.3416059017181396
    3. 'float' → logprob: -1.9666059017181396
    4. 'object' → logprob: -2.2166059017181396
    5. '-' → logprob: -7.591606140136719
    6. ' None' → logprob: -8.216606140136719
    7. '0' → logprob: -9.216606140136719
    8. ' math' → logprob: -9.591606140136719
    9. ' object' → logprob: -9.716606140136719
    10. ' float' → logprob: -9.966606140136719

Token 8: 'e' (ID: 68)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15467004477977753
    2. '0' → logprob: -2.654670000076294
    3. '+' → logprob: -3.529670000076294
    4. '.' → logprob: -4.029670238494873
    5. '=' → logprob: -4.154670238494873
    6. ',' → logprob: -5.029670238494873
    7. ':' → logprob: -6.904670238494873
    8. '-' → logprob: -7.029670238494873
    9. ' =' → logprob: -7.279670238494873
    10. ' +' → logprob: -8.654669761657715

Token 9: '9' (ID: 24)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006108555477112532
    2. '6' → logprob: -5.13110876083374
    3. '+' → logprob: -9.131108283996582
    4. '3' → logprob: -10.256108283996582
    5. '4' → logprob: -11.381108283996582
    6. '9' → logprob: -12.006108283996582
    7. '5' → logprob: -12.381108283996582
    8. '0' → logprob: -12.506108283996582
    9. '```' → logprob: -12.756108283996582
    10. '06' → logprob: -12.881108283996582

Token 10: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.033308744430542
    2. '\' → logprob: -1.158308744430542
    3. '\n' → logprob: -2.158308744430542
    4. '**' → logprob: -3.158308744430542
    5. '*' → logprob: -3.408308744430542
    6. '-' → logprob: -3.908308744430542
    7. '' → logprob: -3.908308744430542
    8. '.' → logprob: -4.033308982849121
    9. '
' → logprob: -4.158308982849121
    10. '_' → logprob: -4.158308982849121

Token 11: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.34051764011383057
    2. ' ' → logprob: -1.4655176401138306
    3. '1' → logprob: -3.215517520904541
    4. '0' → logprob: -4.340517520904541
    5. '9' → logprob: -5.965517520904541
    6. '2' → logprob: -7.590517520904541
    7. '10' → logprob: -7.715517520904541
    8. '3' → logprob: -7.965517520904541
    9. '6' → logprob: -8.2155179977417
    10. '100' → logprob: -9.4655179977417

Token 12: '1' (ID: 16)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.001572471926920116
    2. '1' → logprob: -7.001572608947754
    3. '0' → logprob: -7.876572608947754
    4. '9' → logprob: -8.876572608947754
    5. ' ' → logprob: -9.876572608947754
    6. '10' → logprob: -10.876572608947754
    7. '6' → logprob: -11.001572608947754
    8. '8' → logprob: -11.126572608947754
    9. '3' → logprob: -11.251572608947754
    10. '2' → logprob: -11.876572608947754

Token 13: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.4746533632278442
    2. '
' → logprob: -1.5996533632278442
    3. '_' → logprob: -1.9746533632278442
    4. '' → logprob: -2.5996532440185547
    5. '#' → logprob: -2.7246532440185547
    6. '.' → logprob: -2.7246532440185547
    7. '0' → logprob: -3.0996532440185547
    8. ',' → logprob: -3.5996532440185547
    9. '\n' → logprob: -3.7246532440185547
    10. '*' → logprob: -3.9746532440185547

Token 14: 'counter' (ID: 32128)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.3525378406047821
    2. '\n' → logprob: -2.3525378704071045
    3. '
' → logprob: -2.8525378704071045
    4. '' → logprob: -3.7275378704071045
    5. 'def' → logprob: -3.7275378704071045
    6. ',' → logprob: -4.102537631988525
    7. '(' → logprob: -4.602537631988525
    8. '#' → logprob: -4.977537631988525
    9. ')' → logprob: -5.102537631988525
    10. '

' → logprob: -5.227537631988525

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10973267257213593
    2. '=' → logprob: -2.3597326278686523
    3. '_' → logprob: -5.109732627868652
    4. '.' → logprob: -6.609732627868652
    5. 's' → logprob: -6.984732627868652
    6. ')' → logprob: -7.484732627868652
    7. ' ' → logprob: -8.484732627868652
    8. ' +=' → logprob: -8.859732627868652
    9. '[' → logprob: -9.984732627868652
    10. '(' → logprob: -10.234732627868652

Token 16: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011060434393584728
    2. ' ' → logprob: -4.5110602378845215
    3. '1' → logprob: -11.38606071472168
    4. '{}' → logprob: -14.26106071472168
    5. ' defaultdict' → logprob: -15.51106071472168
    6. '{' → logprob: -15.88606071472168
    7. ' ' → logprob: -16.51106071472168
    8. '  ' → logprob: -17.51106071472168
    9. ' {}' → logprob: -17.51106071472168
    10. '   ' → logprob: -17.63606071472168

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021951000962872058
    2. '{}' → logprob: -8.875219345092773
    3. '1' → logprob: -9.625219345092773
    4. ' ' → logprob: -12.000219345092773
    5. '{' → logprob: -12.250219345092773
    6. 'default' → logprob: -14.125219345092773
    7. '[' → logprob: -14.375219345092773
    8. 'math' → logprob: -14.750219345092773
    9. 'int' → logprob: -15.500219345092773
    10. '-' → logprob: -16.000219345092773

Token 18: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7289319634437561
    2. '\' → logprob: -1.3539319038391113
    3. '\n' → logprob: -1.8539319038391113
    4. 'for' → logprob: -3.2289319038391113
    5. '' → logprob: -4.853931903839111
    6. '#' → logprob: -5.103931903839111
    7. 'newline' → logprob: -5.228931903839111
    8. '<|end|>' → logprob: -5.353931903839111
    9. '+' → logprob: -5.478931903839111
    10. '*' → logprob: -5.603931903839111

Token 19: 'def' (ID: 1314)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6924422979354858
    2. 'for' → logprob: -1.0674422979354858
    3. '\n' → logprob: -3.5674424171447754
    4. '\' → logprob: -3.6924424171447754
    5. '
' → logprob: -4.067442417144775
    6. 'result' → logprob: -4.567442417144775
    7. 'max' → logprob: -4.942442417144775
    8. 'def' → logprob: -4.942442417144775
    9. 'if' → logprob: -5.067442417144775
    10. '```' → logprob: -5.067442417144775

Token 20: ' merge' (ID: 20345)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -1.1895761489868164
    2. ' factorial' → logprob: -1.6895761489868164
    3. ' my' → logprob: -2.3145761489868164
    4. ' ' → logprob: -2.4395761489868164
    5. ' space' → logprob: -2.9395761489868164
    6. ' add' → logprob: -3.5645761489868164
    7. ' foo' → logprob: -3.5645761489868164
    8. ' compute' → logprob: -3.5645761489868164
    9. ' count' → logprob: -3.6895761489868164
    10. ' process' → logprob: -3.8145761489868164

Token 21: '(a' (ID: 6271)
  Prédit: '_sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.30511558055877686
    2. '(' → logprob: -1.4301155805587769
    3. '_sorted' → logprob: -4.680115699768066
    4. '_arrays' → logprob: -5.555115699768066
    5. '(_' → logprob: -5.680115699768066
    6. '_lists' → logprob: -6.305115699768066
    7. '(arr' → logprob: -6.430115699768066
    8. '_' → logprob: -7.055115699768066
    9. '(left' → logprob: -7.055115699768066
    10. '(sorted' → logprob: -8.055115699768066

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001981687266379595
    2. '_,' → logprob: -7.376981735229492
    3. '_list' → logprob: -8.251981735229492
    4. '[' → logprob: -8.876981735229492
    5. '1' → logprob: -8.876981735229492
    6. ' ,' → logprob: -9.001981735229492
    7. '[],' → logprob: -9.126981735229492
    8. ',b' → logprob: -9.376981735229492
    9. ',a' → logprob: -9.376981735229492
    10. ')' → logprob: -9.501981735229492

Token 23: ' left' (ID: 3561)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2915884852409363
    2. 'b' → logprob: -1.541588544845581
    3. ' l' → logprob: -3.791588544845581
    4. ' left' → logprob: -4.791588306427002
    5. 'l' → logprob: -5.416588306427002
    6. 'left' → logprob: -5.791588306427002
    7. ')' → logprob: -9.41658878326416
    8. ' start' → logprob: -9.79158878326416
    9. 'start' → logprob: -9.91658878326416
    10. ' ' → logprob: -10.41658878326416

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011834424221888185
    2. ' ,' → logprob: -6.75118350982666
    3. ':' → logprob: -13.25118350982666
    4. '_,' → logprob: -13.37618350982666
    5. ')' → logprob: -13.50118350982666
    6. '):' → logprob: -13.62618350982666
    7. '=' → logprob: -14.12618350982666
    8. '+' → logprob: -14.12618350982666
    9. ',b' → logprob: -14.25118350982666
    10. '   ' → logprob: -14.25118350982666

Token 25: ' mid' (ID: 6959)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.1273260861635208
    2. ' mid' → logprob: -2.627326011657715
    3. 'right' → logprob: -3.252326011657715
    4. ' middle' → logprob: -5.377326011657715
    5. 'mid' → logprob: -5.627326011657715
    6. 'middle' → logprob: -8.002326011657715
    7. '	right' → logprob: -10.752326011657715
    8. ' ' → logprob: -11.502326011657715
    9. ' midpoint' → logprob: -11.877326011657715
    10. ',right' → logprob: -13.252326011657715

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20223355293273926
    2. '+' → logprob: -1.7022335529327393
    3. ' +' → logprob: -7.82723331451416
    4. '+,' → logprob: -8.57723331451416
    5. ' ,' → logprob: -8.57723331451416
    6. '):' → logprob: -10.45223331451416
    7. ')' → logprob: -12.20223331451416
    8. ',right' → logprob: -12.82723331451416
    9. ' ' → logprob: -13.45223331451416
    10. '),' → logprob: -13.82723331451416

Token 27: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.01107282005250454
    2. 'right' → logprob: -4.511072635650635
    3. '	right' → logprob: -11.386073112487793
    4. ' ' → logprob: -11.511073112487793
    5. ' rig' → logprob: -13.886073112487793
    6. ',right' → logprob: -14.261073112487793
    7. 'Right' → logprob: -15.136073112487793
    8. ' ' → logprob: -15.261073112487793
    9. ':right' → logprob: -15.261073112487793
    10. '_right' → logprob: -15.511073112487793

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002747338730841875
    2. ',' → logprob: -6.502747535705566
    3. ')' → logprob: -7.002747535705566
    4. ' ):' → logprob: -8.377747535705566
    5. ':' → logprob: -9.377747535705566
    6. '):
' → logprob: -11.627747535705566
    7. '   ' → logprob: -12.877747535705566
    8. ' ' → logprob: -13.127747535705566
    9. ' :' → logprob: -13.627747535705566
    10. ''):' → logprob: -13.877747535705566

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25879526138305664
    2. ':' → logprob: -1.5087952613830566
    3. ' :' → logprob: -5.883795261383057
    4. '    ' → logprob: -7.508795261383057
    5. '```' → logprob: -7.508795261383057
    6. '):' → logprob: -7.633795261383057
    7. ':
' → logprob: -7.758795261383057
    8. '    
' → logprob: -7.883795261383057
    9. ' ' → logprob: -8.133794784545898
    10. ',' → logprob: -8.508794784545898

Token 30: ' global' (ID: 5466)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33128440380096436
    2. ' i' → logprob: -1.8312844038009644
    3. '    ' → logprob: -2.581284523010254
    4. ' temp' → logprob: -4.081284523010254
    5. ' ' → logprob: -4.956284523010254
    6. ' n' → logprob: -5.206284523010254
    7. ' tmp' → logprob: -5.456284523010254
    8. ' space' → logprob: -6.331284523010254
    9. ' m' → logprob: -6.456284523010254
    10. ' j' → logprob: -6.456284523010254

Token 31: ' counter' (ID: 9446)
  Prédit: ' counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.004100723657757044
    2. 'counter' → logprob: -5.504100799560547
    3. ' sentinel' → logprob: -10.879100799560547
    4. 'sent' → logprob: -13.879100799560547
    5. ' a' → logprob: -13.879100799560547
    6. 'a' → logprob: -14.879100799560547
    7. '_counter' → logprob: -14.879100799560547
    8. '	counter' → logprob: -15.254100799560547
    9. ' ' → logprob: -15.379100799560547
    10. ' sent' → logprob: -16.254100799560547

Token 32: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0327483415603638
    2. '    ' → logprob: -1.2827483415603638
    3. '    
' → logprob: -1.6577483415603638
    4. '
' → logprob: -2.157748222351074
    5. '     
' → logprob: -3.407748222351074
    6. ' 
' → logprob: -5.032748222351074
    7. '<|end|>' → logprob: -5.407748222351074
    8. ' ' → logprob: -5.407748222351074
    9. '```' → logprob: -5.657748222351074
    10. '   
' → logprob: -6.782748222351074

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06625165790319443
    2. '    
' → logprob: -3.441251754760742
    3. '    ' → logprob: -4.316251754760742
    4. '
' → logprob: -4.441251754760742
    5. ' i' → logprob: -6.441251754760742
    6. ' 
' → logprob: -6.691251754760742
    7. '     
' → logprob: -7.191251754760742
    8. '```' → logprob: -7.316251754760742
    9. '<|end|>' → logprob: -7.691251754760742
    10. 'i' → logprob: -7.816251754760742

Token 34: ' L' (ID: 451)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11683329194784164
    2. ' i' → logprob: -2.366833209991455
    3. '   ' → logprob: -4.116833209991455
    4. ' ' → logprob: -9.866833686828613
    5. 'l' → logprob: -10.366833686828613
    6. '```' → logprob: -10.616833686828613
    7. '	i' → logprob: -11.366833686828613
    8. '    ' → logprob: -11.741833686828613
    9. ' temp' → logprob: -11.741833686828613
    10. '  ' → logprob: -11.741833686828613

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08025514334440231
    2. '=' → logprob: -2.5802550315856934
    3. ',' → logprob: -7.455255031585693
    4. 'eft' → logprob: -8.080255508422852
    5. '   ' → logprob: -9.455255508422852
    6. '=[]' → logprob: -9.455255508422852
    7. ' ' → logprob: -9.705255508422852
    8. '[]' → logprob: -9.830255508422852
    9. '[:]' → logprob: -9.955255508422852
    10. '[' → logprob: -10.080255508422852

Token 36: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07919016480445862
    2. ' a' → logprob: -2.579190254211426
    3. '[a' → logprob: -8.329190254211426
    4. '[' → logprob: -9.954190254211426
    5. ' [' → logprob: -12.204190254211426
    6. '	a' → logprob: -13.079190254211426
    7. '   ' → logprob: -13.829190254211426
    8. '[]' → logprob: -14.079190254211426
    9. '(a' → logprob: -14.454190254211426
    10. ' ' → logprob: -14.704190254211426

Token 37: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -7.743758760625497e-05
    2. '[' → logprob: -9.750077247619629
    3. 'left' → logprob: -11.000077247619629
    4. ' [' → logprob: -13.625077247619629
    5. '[
' → logprob: -14.750077247619629
    6. '[l' → logprob: -15.250077247619629
    7. ' left' → logprob: -16.000078201293945
    8. 'eft' → logprob: -16.375078201293945
    9. '[right' → logprob: -16.875078201293945
    10. ':left' → logprob: -17.250078201293945

Token 38: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.215330409351736e-05
    2. ' :' → logprob: -10.250041961669922
    3. '[mid' → logprob: -12.750041961669922
    4. ':right' → logprob: -12.875041961669922
    5. ':m' → logprob: -14.375041961669922
    6. ':left' → logprob: -15.125041961669922
    7. ':semicolon' → logprob: -16.000041961669922
    8. 'mid' → logprob: -16.500041961669922
    9. ':mm' → logprob: -16.500041961669922
    10. ':center' → logprob: -16.750041961669922

Token 39: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -5.204720582696609e-05
    2. ' mid' → logprob: -9.875052452087402
    3. '(mid' → logprob: -15.000052452087402
    4. '[mid' → logprob: -15.625052452087402
    5. '   ' → logprob: -18.500051498413086
    6. '-mid' → logprob: -19.250051498413086
    7. 'm' → logprob: -19.500051498413086
    8. ' ' → logprob: -19.750051498413086
    9. 'med' → logprob: -19.875051498413086
    10. 'midt' → logprob: -20.000051498413086

Token 40: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012727540917694569
    2. '+' → logprob: -4.637727737426758
    3. ']+' → logprob: -5.887727737426758
    4. ' ]' → logprob: -9.137727737426758
    5. ']
' → logprob: -9.887727737426758
    6. ' +' → logprob: -11.012727737426758
    7. '],' → logprob: -12.387727737426758
    8. ')' → logprob: -12.887727737426758
    9. '+]' → logprob: -12.887727737426758
    10. '   ' → logprob: -13.137727737426758

Token 41: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026044221594929695
    2. ' +' → logprob: -4.0260443687438965
    3. ']' → logprob: -6.0260443687438965
    4. '[:]' → logprob: -6.0260443687438965
    5. '   ' → logprob: -6.6510443687438965
    6. ']+' → logprob: -6.9010443687438965
    7. '```' → logprob: -8.151043891906738
    8. '+[' → logprob: -8.901043891906738
    9. '    ' → logprob: -9.401043891906738
    10. '[:' → logprob: -10.401043891906738

Token 42: ' [' (ID: 723)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026514273136854172
    2. ' a' → logprob: -3.6515142917633057
    3. '[a' → logprob: -9.151514053344727
    4. '[' → logprob: -9.276514053344727
    5. ' [' → logprob: -12.276514053344727
    6. '1' → logprob: -12.651514053344727
    7. '_a' → logprob: -13.026514053344727
    8. '	a' → logprob: -13.526514053344727
    9. '(a' → logprob: -14.526514053344727
    10. ' ' → logprob: -14.651514053344727

Token 43: 'sent' (ID: 25043)
  Prédit: 'sent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sent' → logprob: -0.0019935856107622385
    2. 'a' → logprob: -6.751993656158447
    3. 'math' → logprob: -7.376993656158447
    4. 'float' → logprob: -9.251993179321289
    5. ' sentinel' → logprob: -9.501993179321289
    6. 's' → logprob: -11.876993179321289
    7. 'sen' → logprob: -13.001993179321289
    8. 'inf' → logprob: -13.251993179321289
    9. '1' → logprob: -13.439493179321289
    10. 'in' → logprob: -13.564493179321289

Token 44: 'inel' (ID: 61674)
  Prédit: 'inel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inel' → logprob: -1.0683535037969705e-05
    2. 'in' → logprob: -11.75001049041748
    3. 'nel' → logprob: -14.50001049041748
    4. 'iel' → logprob: -14.62501049041748
    5. 'ine' → logprob: -14.62501049041748
    6. '```' → logprob: -14.87501049041748
    7. 'inal' → logprob: -15.62501049041748
    8. 'el' → logprob: -15.75001049041748
    9. '

' → logprob: -16.500011444091797
    10. '...' → logprob: -16.625011444091797

Token 45: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010578181827440858
    2. ' ]' → logprob: -7.3760576248168945
    3. ',' → logprob: -8.626057624816895
    4. '   ' → logprob: -8.876057624816895
    5. '],' → logprob: -9.751057624816895
    6. ']*' → logprob: -10.751057624816895
    7. ']
' → logprob: -11.251057624816895
    8. ']

' → logprob: -12.501057624816895
    9. ']+' → logprob: -12.626057624816895
    10. '    ' → logprob: -13.126057624816895

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018775220960378647
    2. '<|end|>' → logprob: -4.76877498626709
    3. '    
' → logprob: -5.51877498626709
    4. '
' → logprob: -5.89377498626709
    5. 'a' → logprob: -6.51877498626709
    6. '<|end|>' → logprob: -8.01877498626709
    7. '  ' → logprob: -8.39377498626709
    8. '\n' → logprob: -8.39377498626709
    9. '```' → logprob: -8.51877498626709
    10. ' 
' → logprob: -8.51877498626709

Token 47: ' R' (ID: 460)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07811777293682098
    2. 'R' (adapté à ' R') → logprob: -2.703117847442627
    3. '   ' → logprob: -5.703117847442627
    4. ' a' → logprob: -5.953117847442627
    5. ']' → logprob: -7.453117847442627
    6. '    
' → logprob: -8.328117370605469
    7. ' R' → logprob: -8.703117370605469
    8. 'r' → logprob: -8.828117370605469
    9. ',' → logprob: -9.078117370605469
    10. ')' → logprob: -9.203117370605469

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326213479042053
    2. '=' → logprob: -1.3132621049880981
    3. '=a' → logprob: -15.813261985778809
    4. '＝' → logprob: -16.938262939453125
    5. 'a' → logprob: -17.188262939453125
    6. ' ' → logprob: -17.313262939453125
    7. ']' → logprob: -17.438262939453125
    8. 's' → logprob: -17.813262939453125
    9. '   ' → logprob: -17.813262939453125
    10. ')' → logprob: -17.813262939453125

Token 49: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06197071075439453
    2. ' a' → logprob: -2.8119707107543945
    3. '   ' → logprob: -13.936970710754395
    4. '	a' → logprob: -14.186970710754395
    5. '(a' → logprob: -14.436970710754395
    6. ' ' → logprob: -14.561970710754395
    7. '[a' → logprob: -15.811970710754395
    8. '>a' → logprob: -16.311969757080078
    9. '  ' → logprob: -16.686969757080078
    10. '#a' → logprob: -17.061969757080078

Token 50: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -7.896309739408025e-07
    2. 'mid' → logprob: -14.125000953674316
    3. '[m' → logprob: -17.375
    4. '[' → logprob: -17.625
    5. '(mid' → logprob: -17.75
    6. ' mid' → logprob: -18.75
    7. '[mem' → logprob: -18.875
    8. ' [' → logprob: -19.375
    9. '.mid' → logprob: -20.0
    10. ' ' → logprob: -20.75

Token 51: ':right' (ID: 107608)
  Prédit: ':right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':right' → logprob: -3.464347173576243e-05
    2. ' :' → logprob: -10.50003433227539
    3. ':' → logprob: -12.75003433227539
    4. 'right' → logprob: -12.87503433227539
    5. '[right' → logprob: -14.12503433227539
    6. ':r' → logprob: -15.25003433227539
    7. ' right' → logprob: -15.62503433227539
    8. ' ' → logprob: -15.75003433227539
    9. ',right' → logprob: -16.37503433227539
    10. '	right' → logprob: -16.62503433227539

Token 52: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010330478107789531
    2. ']+' → logprob: -9.875102996826172
    3. ' ]' → logprob: -10.125102996826172
    4. '+' → logprob: -11.500102996826172
    5. '']' → logprob: -14.500102996826172
    6. '   ' → logprob: -15.125102996826172
    7. ')' → logprob: -15.625102996826172
    8. '"]' → logprob: -16.125102996826172
    9. '+]' → logprob: -16.125102996826172
    10. ' ' → logprob: -16.375102996826172

Token 53: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42873239517211914
    2. ' +' → logprob: -1.0537323951721191
    3. ']' → logprob: -11.053731918334961
    4. '+[' → logprob: -12.428731918334961
    5. ']+' → logprob: -13.053731918334961
    6. '   ' → logprob: -13.303731918334961
    7. ' ' → logprob: -13.553731918334961
    8. '```' → logprob: -13.678731918334961
    9. '+c' → logprob: -14.178731918334961
    10. '+s' → logprob: -14.303731918334961

Token 54: ' [' (ID: 723)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.4748620390892029
    2. ' [' → logprob: -1.2248620986938477
    3. '[' → logprob: -2.4748620986938477
    4. ' ' → logprob: -10.849862098693848
    5. ' ' → logprob: -11.724862098693848
    6. '   ' → logprob: -12.224862098693848
    7. '[selected' → logprob: -12.724862098693848
    8. '[next' → logprob: -12.974862098693848
    9. '[token' → logprob: -12.974862098693848
    10. '[start' → logprob: -12.974862098693848

Token 55: 'sent' (ID: 25043)
  Prédit: 'sent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sent' → logprob: -0.0002075933152809739
    2. ' sentinel' → logprob: -8.500207901000977
    3. 'sen' → logprob: -12.625207901000977
    4. ' sent' → logprob: -15.375207901000977
    5. 's' → logprob: -16.375207901000977
    6. '```' → logprob: -16.500207901000977
    7. 'Sent' → logprob: -16.750207901000977
    8. 'sat' → logprob: -17.500207901000977
    9. ' ' → logprob: -17.500207901000977
    10. '(s' → logprob: -17.625207901000977

Token 56: 'inel' (ID: 61674)
  Prédit: 'inel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inel' → logprob: -0.0002712297427933663
    2. 'in' → logprob: -8.75027084350586
    3. 'el' → logprob: -9.12527084350586
    4. 'iel' → logprob: -13.25027084350586
    5. 'nel' → logprob: -13.37527084350586
    6. 'i' → logprob: -16.12527084350586
    7. 'ine' → logprob: -16.37527084350586
    8. '```' → logprob: -16.50027084350586
    9. 'ifel' → logprob: -16.62527084350586
    10. '   ' → logprob: -17.87527084350586

Token 57: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.517272024415433e-05
    2. ')' → logprob: -9.875075340270996
    3. ' ]' → logprob: -11.375075340270996
    4. '   ' → logprob: -12.250075340270996
    5. ']
' → logprob: -12.500075340270996
    6. '])' → logprob: -13.500075340270996
    7. ')]' → logprob: -14.000075340270996
    8. '']' → logprob: -14.250075340270996
    9. '<|end|>' → logprob: -15.375075340270996
    10. ']

' → logprob: -16.12507438659668

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09379710257053375
    2. '    
' → logprob: -2.843797206878662
    3. '
' → logprob: -4.468797206878662
    4. '\n' → logprob: -4.718797206878662
    5. '  
' → logprob: -5.843797206878662
    6. ' ' → logprob: -6.593797206878662
    7. '   
' → logprob: -6.593797206878662
    8. ' 
' → logprob: -6.968797206878662
    9. '```' → logprob: -7.093797206878662
    10. '    ' → logprob: -7.093797206878662

Token 59: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1443949937820435
    2. 'i' (adapté à ' i') → logprob: -1.3943949937820435
    3. '   ' → logprob: -1.3943949937820435
    4. ' for' → logprob: -1.7693949937820435
    5. ' i' → logprob: -4.269394874572754
    6. '    
' → logprob: -8.019394874572754
    7. ' ' → logprob: -8.519394874572754
    8. '  ' → logprob: -8.519394874572754
    9. '```' → logprob: -8.894394874572754
    10. 'while' → logprob: -9.269394874572754

Token 60: ',j' (ID: 22712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19858500361442566
    2. '=' → logprob: -1.823585033416748
    3. ',' → logprob: -4.198585033416748
    4. 'n' → logprob: -5.948585033416748
    5. ' ' → logprob: -7.448585033416748
    6. '<|end|>' → logprob: -8.32358455657959
    7. 'f' → logprob: -10.44858455657959
    8. ' ,' → logprob: -10.57358455657959
    9. 'nd' → logprob: -11.07358455657959
    10. 'd' → logprob: -11.19858455657959

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02054363675415516
    2. '=' → logprob: -3.8955435752868652
    3. '<|end|>' → logprob: -13.645544052124023
    4. ' ' → logprob: -15.395544052124023
    5. ' =)' → logprob: -15.645544052124023
    6. ' =
' → logprob: -16.520544052124023
    7. '<|end|>' → logprob: -17.395544052124023
    8. ' +=' → logprob: -17.645544052124023
    9. ',' → logprob: -17.645544052124023
    10. '＝' → logprob: -17.895544052124023

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606627885252237
    2. ' ' → logprob: -4.882606506347656
    3. '<|end|>' → logprob: -15.632606506347656
    4. '۰' → logprob: -16.007606506347656
    5. '  ' → logprob: -16.132606506347656
    6. '012' → logprob: -17.132606506347656
    7. '   ' → logprob: -17.507606506347656
    8. '<|end|>' → logprob: -17.757606506347656
    9. '(' → logprob: -17.945106506347656
    10. '```' → logprob: -18.757606506347656

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.000017166137695
    3. '(' → logprob: -16.500017166137695
    4. '۰' → logprob: -16.500017166137695
    5. '０' → logprob: -17.375017166137695
    6. '012' → logprob: -17.750017166137695
    7. '  ' → logprob: -17.875017166137695
    8. '00' → logprob: -17.875017166137695
    9. '   ' → logprob: -18.562517166137695
    10. '01' → logprob: -19.000017166137695

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008501697331666946
    2. ' ,' → logprob: -5.6335015296936035
    3. '<|end|>' → logprob: -5.8835015296936035
    4. ',i' → logprob: -6.8835015296936035
    5. ',j' → logprob: -8.133502006530762
    6. '<|end|>' → logprob: -8.633502006530762
    7. ',len' → logprob: -9.508502006530762
    8. ',
' → logprob: -9.633502006530762
    9. ' ' → logprob: -9.633502006530762
    10. ',n' → logprob: -9.758502006530762

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804183006286621
    2. ' ' → logprob: -3.288041830062866
    3. '1' → logprob: -15.038042068481445
    4. '<|end|>' → logprob: -16.663042068481445
    5. '  ' → logprob: -17.788042068481445
    6. '   ' → logprob: -19.413042068481445
    7. '```' → logprob: -19.413042068481445
    8. '    ' → logprob: -19.538042068481445
    9. '۰' → logprob: -19.850542068481445
    10. ' ' → logprob: -19.913042068481445

Token 66: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25236940383911133
    2. '
' → logprob: -1.8773694038391113
    3. '    
' → logprob: -3.1273694038391113
    4. '\n' → logprob: -4.752369403839111
    5. '  
' → logprob: -5.002369403839111
    6. '<|end|>' → logprob: -5.377369403839111
    7. ' 
' → logprob: -5.752369403839111
    8. '```' → logprob: -6.877369403839111
    9. '   
' → logprob: -7.627369403839111
    10. '' → logprob: -8.127368927001953

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10454615205526352
    2. '
' → logprob: -2.604546070098877
    3. '    
' → logprob: -4.104546070098877
    4. '  
' → logprob: -5.979546070098877
    5. '<|end|>' → logprob: -6.229546070098877
    6. '\n' → logprob: -6.604546070098877
    7. ' 
' → logprob: -6.854546070098877
    8. '```' → logprob: -7.479546070098877
    9. ' ' → logprob: -8.229546546936035
    10. '   
' → logprob: -8.354546546936035

Token 68: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02696322090923786
    2. '\n' → logprob: -4.401963233947754
    3. 'while' → logprob: -6.026963233947754
    4. '    
' → logprob: -6.026963233947754
    5. ' while' → logprob: -6.401963233947754
    6. '
' → logprob: -6.401963233947754
    7. 'for' (adapté à ' for') → logprob: -6.401963233947754
    8. ' for' → logprob: -6.401963233947754
    9. ' ' → logprob: -6.651963233947754
    10. '```' → logprob: -7.526963233947754

Token 69: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.005419684574007988
    2. 'k' → logprob: -5.255419731140137
    3. ' ' → logprob: -8.755419731140137
    4. '	k' → logprob: -11.130419731140137
    5. ' ' → logprob: -12.755419731140137
    6. ' x' → logprob: -12.755419731140137
    7. '   ' → logprob: -13.755419731140137
    8. ' idx' → logprob: -13.880419731140137
    9. ' n' → logprob: -14.255419731140137
    10. ' index' → logprob: -14.380419731140137

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0039031459018588066
    2. 'in' → logprob: -5.628902912139893
    3. ' ' → logprob: -8.12890338897705
    4. '  ' → logprob: -13.00390338897705
    5. 'range' → logprob: -13.12890338897705
    6. '<|end|>' → logprob: -13.87890338897705
    7. '	in' → logprob: -14.12890338897705
    8. ' range' → logprob: -14.87890338897705
    9. ',' → logprob: -15.00390338897705
    10. '    ' → logprob: -15.75390338897705

Token 71: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25193557143211365
    2. ' range' → logprob: -1.501935601234436
    3. '	range' → logprob: -12.626935958862305
    4. '(range' → logprob: -13.501935958862305
    5. ' xrange' → logprob: -14.501935958862305
    6. ' ' → logprob: -14.501935958862305
    7. 'rang' → logprob: -15.126935958862305
    8. '   ' → logprob: -15.251935958862305
    9. ' rang' → logprob: -16.001935958862305
    10. '  ' → logprob: -16.376935958862305

Token 72: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.00015955790877342224
    2. '(' → logprob: -8.75015926361084
    3. ' left' → logprob: -15.25015926361084
    4. ' (' → logprob: -15.25015926361084
    5. 'left' → logprob: -15.37515926361084
    6. '[left' → logprob: -16.000160217285156
    7. '(len' → logprob: -16.750160217285156
    8. '	left' → logprob: -16.750160217285156
    9. '(right' → logprob: -17.000160217285156
    10. ',left' → logprob: -17.125160217285156

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020332036074250937
    2. ' ,' → logprob: -6.252033233642578
    3. ',right' → logprob: -9.377033233642578
    4. ' ' → logprob: -11.377033233642578
    5. '   ' → logprob: -12.752033233642578
    6. ' to' → logprob: -13.502033233642578
    7. ',len' → logprob: -14.127033233642578
    8. ')' → logprob: -14.127033233642578
    9. ',left' → logprob: -14.627033233642578
    10. '    ' → logprob: -15.002033233642578

Token 74: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.07889661937952042
    2. ' right' → logprob: -2.5788965225219727
    3. '	right' → logprob: -12.078896522521973
    4. '   ' → logprob: -14.703896522521973
    5. ' ' → logprob: -15.078896522521973
    6. ':right' → logprob: -15.953896522521973
    7. ',right' → logprob: -15.953896522521973
    8. '[right' → logprob: -16.07889747619629
    9. 'r' → logprob: -16.57889747619629
    10. '    ' → logprob: -17.45389747619629

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004942946252413094
    2. ')' → logprob: -8.125494003295898
    3. ':' → logprob: -9.250494003295898
    4. ' ):' → logprob: -10.125494003295898
    5. '):
' → logprob: -10.375494003295898
    6. '+' → logprob: -10.625494003295898
    7. '   ' → logprob: -13.125494003295898
    8. ' ' → logprob: -13.750494003295898
    9. ',' → logprob: -14.875494003295898
    10. '1' → logprob: -15.000494003295898

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36673468351364136
    2. '<|end|>' → logprob: -1.3667347431182861
    3. ' ' → logprob: -3.241734743118286
    4. '    ' → logprob: -5.116734504699707
    5. '        ' → logprob: -6.241734504699707
    6. '        
' → logprob: -6.991734504699707
    7. '<|end|>' → logprob: -6.991734504699707
    8. '   ' → logprob: -7.116734504699707
    9. ':' → logprob: -7.491734504699707
    10. ',' → logprob: -7.741734504699707

Token 77: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12136024981737137
    2. 'if' (adapté à ' if') → logprob: -2.3713603019714355
    3. '       ' → logprob: -4.2463603019714355
    4. '        ' → logprob: -5.3713603019714355
    5. ' ' → logprob: -7.1213603019714355
    6. '    ' → logprob: -7.4963603019714355
    7. '           ' → logprob: -8.371359825134277
    8. '<|end|>' → logprob: -8.621359825134277
    9. '   ' → logprob: -9.246359825134277
    10. '  ' → logprob: -10.871359825134277

Token 78: '(L' (ID: 11075)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.5760787725448608
    2. 'L' → logprob: -0.8260787725448608
    3. ' ' → logprob: -8.951078414916992
    4. '  ' → logprob: -12.576078414916992
    5. '   ' → logprob: -13.201078414916992
    6. '	L' → logprob: -13.826078414916992
    7. '    ' → logprob: -14.576078414916992
    8. '(L' → logprob: -14.826078414916992
    9. '(' → logprob: -14.888578414916992
    10. ' ' → logprob: -15.076078414916992

Token 79: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005773392622359097
    2. '[' → logprob: -7.500577449798584
    3. ' [' → logprob: -11.125576972961426
    4. '[k' → logprob: -12.375576972961426
    5. ')' → logprob: -13.375576972961426
    6. '[L' → logprob: -13.625576972961426
    7. '[I' → logprob: -13.875576972961426
    8. '[j' → logprob: -13.875576972961426
    9. '[
' → logprob: -15.500576972961426
    10. 'i' → logprob: -16.375577926635742

Token 80: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.1767816543579102
    2. ']' → logprob: -1.3017816543579102
    3. ' <=' → logprob: -1.3017816543579102
    4. ']<=' → logprob: -2.80178165435791
    5. ')' → logprob: -3.05178165435791
    6. '[' → logprob: -4.17678165435791
    7. ' ]' → logprob: -4.67678165435791
    8. ')<=' → logprob: -4.80178165435791
    9. ' )' → logprob: -5.92678165435791
    10. ' ' → logprob: -6.17678165435791

Token 81: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6328754425048828
    2. ' <=' → logprob: -0.7578754425048828
    3. ' ' → logprob: -9.507875442504883
    4. ')<=' → logprob: -9.882875442504883
    5. '<' → logprob: -10.007875442504883
    6. ')' → logprob: -10.632875442504883
    7. ' <' → logprob: -10.632875442504883
    8. ']<=' → logprob: -11.320375442504883
    9. '>' → logprob: -11.820375442504883
    10. '=' → logprob: -12.257875442504883

Token 82: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.34847018122673035
    2. ' R' → logprob: -1.2234702110290527
    3. ' ' → logprob: -11.098469734191895
    4. ')' → logprob: -12.223469734191895
    5. ' ' → logprob: -13.723469734191895
    6. '	R' → logprob: -13.785969734191895
    7. '<|end|>' → logprob: -13.848469734191895
    8. '<R' → logprob: -14.910969734191895
    9. 'r' → logprob: -15.410969734191895
    10. ' )' → logprob: -15.535969734191895

Token 83: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3497263789176941
    2. '[j' → logprob: -1.2247264385223389
    3. '[' → logprob: -6.72472620010376
    4. '[k' → logprob: -10.849726676940918
    5. ' [' → logprob: -10.974726676940918
    6. ')' → logprob: -11.349726676940918
    7. '   ' → logprob: -11.849726676940918
    8. '[
' → logprob: -12.099726676940918
    9. '```' → logprob: -12.849726676940918
    10. ' ' → logprob: -13.474726676940918

Token 84: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008835955522954464
    2. ')' → logprob: -7.75088357925415
    3. ' ):' → logprob: -8.000884056091309
    4. '):
' → logprob: -9.500884056091309
    5. ':' → logprob: -10.250884056091309
    6. '):

' → logprob: -13.500884056091309
    7. '   ' → logprob: -13.750884056091309
    8. ' )' → logprob: -13.875884056091309
    9. ']:' → logprob: -14.000884056091309
    10. ' ' → logprob: -14.125884056091309

Token 85: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.07974091172218323
    2. ' a' → logprob: -2.5797410011291504
    3. '           ' → logprob: -7.57974100112915
    4. '       ' → logprob: -8.829740524291992
    5. ' ' → logprob: -8.954740524291992
    6. '        ' → logprob: -11.579740524291992
    7. '    ' → logprob: -11.579740524291992
    8. '            ' → logprob: -11.704740524291992
    9. '   ' → logprob: -11.954740524291992
    10. '<|end|>' → logprob: -11.954740524291992

Token 87: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0001239196863025427
    2. '[' → logprob: -9.000123977661133
    3. '[i' → logprob: -15.000123977661133
    4. '[j' → logprob: -16.375123977661133
    5. '[m' → logprob: -17.000123977661133
    6. '[key' → logprob: -17.250123977661133
    7. '[left' → logprob: -17.875123977661133
    8. ' [' → logprob: -18.500123977661133
    9. '[a' → logprob: -19.625123977661133
    10. 'k' → logprob: -19.625123977661133

Token 88: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004480562172830105
    2. ' ]' → logprob: -5.504480361938477
    3. ']=' → logprob: -8.379480361938477
    4. ' =' → logprob: -9.004480361938477
    5. '=' → logprob: -10.004480361938477
    6. ')' → logprob: -13.254480361938477
    7. '[' → logprob: -13.754480361938477
    8. ' ' → logprob: -14.254480361938477
    9. '<|end|>' → logprob: -14.879480361938477
    10. ']
' → logprob: -15.629480361938477

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889056205749512
    2. '=' → logprob: -2.578890562057495
    3. ' =
' → logprob: -15.078890800476074
    4. ' ' → logprob: -15.328890800476074
    5. ',' → logprob: -16.453889846801758
    6. '＝' → logprob: -16.453889846801758
    7. '=L' → logprob: -17.328889846801758
    8. ' =)' → logprob: -18.078889846801758
    9. ' =
' → logprob: -18.453889846801758
    10. '=
' → logprob: -18.578889846801758

Token 90: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0028052295092493296
    2. ' L' → logprob: -5.877805233001709
    3. '	L' → logprob: -16.127805709838867
    4. '(L' → logprob: -16.377805709838867
    5. ' ' → logprob: -16.752805709838867
    6. '>L' → logprob: -17.252805709838867
    7. ')L' → logprob: -18.002805709838867
    8. '[L' → logprob: -18.127805709838867
    9. '<|end|>' → logprob: -19.065305709838867
    10. '_L' → logprob: -19.315305709838867

Token 91: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.00000286102295
    3. '[I' → logprob: -16.625001907348633
    4. ' [' → logprob: -16.750001907348633
    5. 'i' → logprob: -16.875001907348633
    6. '[j' → logprob: -18.500001907348633
    7. ' i' → logprob: -19.125001907348633
    8. ' ' → logprob: -19.500001907348633
    9. '[k' → logprob: -19.750001907348633
    10. '[s' → logprob: -20.375001907348633

Token 92: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16668835282325745
    2. ')
' → logprob: -1.916688323020935
    3. ']' → logprob: -5.666688442230225
    4. ')i' → logprob: -6.541688442230225
    5. '<|end|>' → logprob: -8.041687965393066
    6. ']
' → logprob: -8.291687965393066
    7. '
' → logprob: -8.416687965393066
    8. '           ' → logprob: -9.166687965393066
    9. ' )' → logprob: -9.666687965393066
    10. 'i' → logprob: -9.666687965393066

Token 93: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005702669732272625
    2. 'i' → logprob: -5.505702495574951
    3. '
' → logprob: -7.505702495574951
    4. '<|end|>' → logprob: -7.755702495574951
    5. '[i' → logprob: -8.63070297241211
    6. ' 
' → logprob: -9.13070297241211
    7. '            
' → logprob: -9.25570297241211
    8. '\n' → logprob: -10.38070297241211
    9. ' i' → logprob: -10.38070297241211
    10. '       ' → logprob: -10.63070297241211

Token 94: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.011049704626202583
    2. ' i' → logprob: -4.511049747467041
    3. '           ' → logprob: -13.761049270629883
    4. 'counter' → logprob: -14.511049270629883
    5. ' counter' → logprob: -15.261049270629883
    6. '   ' → logprob: -17.511049270629883
    7. '
' → logprob: -17.511049270629883
    8. '    ' → logprob: -17.636049270629883
    9. '	i' → logprob: -17.886049270629883
    10. ' ' → logprob: -18.136049270629883

Token 95: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5455734133720398
    2. ' +=' → logprob: -1.2955734729766846
    3. '+' → logprob: -1.9205734729766846
    4. '=' → logprob: -9.045573234558105
    5. ' +' → logprob: -9.545573234558105
    6. '<|end|>' → logprob: -10.795573234558105
    7. '++' → logprob: -11.920573234558105
    8. ']+=' → logprob: -12.920573234558105
    9. '1' → logprob: -13.545573234558105
    10. ' ' → logprob: -13.670573234558105

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -18.50006675720215
    4. '```' → logprob: -19.00006675720215
    5. '１' → logprob: -19.75006675720215
    6. '  ' → logprob: -19.81256675720215
    7. '<|end|>' → logprob: -20.06256675720215
    8. '۱' → logprob: -21.12506675720215
    9. '१' → logprob: -21.31256675720215
    10. '0' → logprob: -21.62506675720215

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -18.125003814697266
    4. '１' → logprob: -19.562503814697266
    5. '<|end|>' → logprob: -19.562503814697266
    6. '   ' → logprob: -19.562503814697266
    7. '  ' → logprob: -20.125003814697266
    8. '१' → logprob: -20.125003814697266
    9. '۱' → logprob: -20.187503814697266
    10. '১' → logprob: -21.062503814697266

Token 98: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17138370871543884
    2. ' else' → logprob: -2.5463836193084717
    3. 'else' → logprob: -2.6713836193084717
    4. '<|end|>' → logprob: -4.671383857727051
    5. '
' → logprob: -8.17138385772705
    6. '	else' → logprob: -9.54638385772705
    7. 'elif' → logprob: -9.92138385772705
    8. '   ' → logprob: -9.92138385772705
    9. '```' → logprob: -10.17138385772705
    10. '\n' → logprob: -10.67138385772705

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1818997710943222
    2. 'else' → logprob: -2.1818997859954834
    3. ' else' → logprob: -2.9318997859954834
    4. '```' → logprob: -9.681900024414062
    5. '<|end|>' → logprob: -9.806900024414062
    6. '	else' → logprob: -10.306900024414062
    7. '
' → logprob: -10.806900024414062
    8. '        
' → logprob: -12.556900024414062
    9. '   ' → logprob: -12.556900024414062
    10. 'elif' → logprob: -12.681900024414062

Token 100: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.251976877450943
    2. 'else' (adapté à ' else') → logprob: -1.5019768476486206
    3. '       ' → logprob: -10.00197696685791
    4. '	else' → logprob: -13.50197696685791
    5. '   ' → logprob: -14.62697696685791
    6. '```' → logprob: -15.37697696685791
    7. 'e' → logprob: -16.126976013183594
    8. 'elif' → logprob: -16.626976013183594
    9. ' elif' → logprob: -16.876976013183594
    10. ' ' → logprob: -16.876976013183594

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7239480018615723
    2. ':
' → logprob: -0.7239480018615723
    3. '       ' → logprob: -3.9739480018615723
    4. '{' → logprob: -4.848948001861572
    5. '{
' → logprob: -6.598948001861572
    6. '<|end|>' → logprob: -7.098948001861572
    7. '           ' → logprob: -7.348948001861572
    8. '   ' → logprob: -8.098947525024414
    9. '        ' → logprob: -8.848947525024414
    10. '```' → logprob: -9.473947525024414

Token 102: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6212398409843445
    2. '           ' → logprob: -0.9962398409843445
    3. ' a' → logprob: -2.3712399005889893
    4. '       ' → logprob: -10.37123966217041
    5. '   ' → logprob: -10.62123966217041
    6. '```' → logprob: -11.12123966217041
    7. ' ' → logprob: -11.49623966217041
    8. '          ' → logprob: -13.12123966217041
    9. '<|end|>' → logprob: -13.12123966217041
    10. '	a' → logprob: -13.62123966217041

Token 103: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0059747775085270405
    2. ' a' → logprob: -5.130974769592285
    3. '           ' → logprob: -10.255974769592285
    4. 'counter' → logprob: -11.880974769592285
    5. ' counter' → logprob: -12.755974769592285
    6. '       ' → logprob: -14.755974769592285
    7. '	a' → logprob: -15.255974769592285
    8. '   ' → logprob: -15.255974769592285
    9. 'count' → logprob: -16.1309757232666
    10. '               ' → logprob: -16.6309757232666

Token 104: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.531315314830863e-06
    2. '[j' → logprob: -13.500003814697266
    3. '[' → logprob: -13.875003814697266
    4. 'k' → logprob: -14.625003814697266
    5. '```' → logprob: -15.250003814697266
    6. 's' → logprob: -16.250003814697266
    7. '[key' → logprob: -16.500003814697266
    8. ',k' → logprob: -16.500003814697266
    9. '[i' → logprob: -17.250003814697266
    10. '[counter' → logprob: -17.625003814697266

Token 105: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3306015716807451e-05
    2. '=' → logprob: -12.37501335144043
    3. ' ]' → logprob: -12.50001335144043
    4. ']=' → logprob: -12.62501335144043
    5. ')' → logprob: -13.75001335144043
    6. '   ' → logprob: -14.25001335144043
    7. '[' → logprob: -16.87501335144043
    8. '```' → logprob: -17.12501335144043
    9. '']' → logprob: -17.75001335144043
    10. ' ' → logprob: -17.75001335144043

Token 106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. ' ' → logprob: -16.063262939453125
    4. ']' → logprob: -16.563262939453125
    5. ' =
' → logprob: -17.063262939453125
    6. '   ' → logprob: -17.188262939453125
    7. '    ' → logprob: -17.188262939453125
    8. '=
' → logprob: -17.688262939453125
    9. '=

' → logprob: -17.938262939453125
    10. '＝' → logprob: -18.563262939453125

Token 107: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.2519315779209137
    2. ' R' → logprob: -1.5019315481185913
    3. '<|end|>' → logprob: -13.251931190490723
    4. '	R' → logprob: -15.501931190490723
    5. ' ' → logprob: -16.00193214416504
    6. ' ' → logprob: -16.50193214416504
    7. '   ' → logprob: -17.00193214416504
    8. '           ' → logprob: -17.12693214416504
    9. '<|end|>' → logprob: -17.25193214416504
    10. '(R' → logprob: -17.75193214416504

Token 108: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.723352049040841e-06
    2. 'j' → logprob: -12.625004768371582
    3. '[' → logprob: -13.875004768371582
    4. '```' → logprob: -15.250004768371582
    5. '[js' → logprob: -16.750003814697266
    6. '[
' → logprob: -17.750003814697266
    7. '	j' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.125003814697266
    9. '_j' → logprob: -18.125003814697266
    10. ' j' → logprob: -18.750003814697266

Token 109: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014142822474241257
    2. '
' → logprob: -4.889142990112305
    3. '       ' → logprob: -5.514142990112305
    4. 'j' → logprob: -7.389142990112305
    5. '<|end|>' → logprob: -7.514142990112305
    6. '```' → logprob: -7.764142990112305
    7. '   ' → logprob: -8.139142990112305
    8. ',j' → logprob: -9.139142990112305
    9. ')
' → logprob: -9.264142990112305
    10. ')' → logprob: -9.389142990112305

Token 110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017405027523636818
    2. 'j' → logprob: -4.267405033111572
    3. '       ' → logprob: -6.017405033111572
    4. '   ' → logprob: -7.892405033111572
    5. '```' → logprob: -8.142404556274414
    6. ' j' → logprob: -9.267404556274414
    7. ' ' → logprob: -11.892404556274414
    8. '<|end|>' → logprob: -12.142404556274414
    9. '          ' → logprob: -12.392404556274414
    10. '     ' → logprob: -12.517404556274414

Token 111: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.0004923873930238187
    2. ' j' → logprob: -7.875492572784424
    3. 'counter' → logprob: -9.250492095947266
    4. '   ' → logprob: -11.375492095947266
    5. ' counter' → logprob: -13.000492095947266
    6. '```' → logprob: -14.125492095947266
    7. '    ' → logprob: -14.250492095947266
    8. '	j' → logprob: -14.750492095947266
    9. 'count' → logprob: -15.500492095947266
    10. '           ' → logprob: -15.500492095947266

Token 112: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07899972796440125
    2. '+=' → logprob: -2.5789997577667236
    3. '+' → logprob: -9.328999519348145
    4. ' +' → logprob: -11.203999519348145
    5. '    ' → logprob: -13.203999519348145
    6. '```' → logprob: -13.453999519348145
    7. ' ' → logprob: -13.578999519348145
    8. '   ' → logprob: -13.828999519348145
    9. ']+=' → logprob: -14.203999519348145
    10. '=' → logprob: -14.453999519348145

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011703446507453918
    2. ' ' → logprob: -6.7511701583862305
    3. '```' → logprob: -16.376171112060547
    4. '   ' → logprob: -16.751171112060547
    5. '           ' → logprob: -18.376171112060547
    6. '<|end|>' → logprob: -18.563671112060547
    7. '１' → logprob: -19.188671112060547
    8. '       ' → logprob: -19.438671112060547
    9. '  ' → logprob: -19.813671112060547
    10. '+' → logprob: -20.001171112060547

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -17.250001907348633
    4. '<|end|>' → logprob: -18.125001907348633
    5. '   ' → logprob: -19.500001907348633
    6. '-' → logprob: -20.437501907348633
    7. '  ' → logprob: -21.125001907348633
    8. '+' → logprob: -21.250001907348633
    9. '１' → logprob: -21.375001907348633
    10. '۱' → logprob: -21.437501907348633

Token 115: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023321842309087515
    2. ' counter' → logprob: -9.00023365020752
    3. '       ' → logprob: -9.87523365020752
    4. 'counter' → logprob: -10.00023365020752
    5. '   ' → logprob: -12.25023365020752
    6. '```' → logprob: -12.25023365020752
    7. '               ' → logprob: -13.62523365020752
    8. '_counter' → logprob: -14.87523365020752
    9. '		' → logprob: -15.00023365020752
    10. '          ' → logprob: -15.50023365020752

Token 116: '   ' (ID: 271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014203533064574003
    2. 'counter' → logprob: -7.501420497894287
    3. ' counter' → logprob: -7.876420497894287
    4. '       ' → logprob: -7.876420497894287
    5. '```' → logprob: -9.626420021057129
    6. '   ' → logprob: -10.501420021057129
    7. '               ' → logprob: -12.751420021057129
    8. '
' → logprob: -12.876420021057129
    9. '_counter' → logprob: -13.501420021057129
    10. '            
' → logprob: -13.876420021057129

Token 117: ' counter' (ID: 9446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0143729317933321
    2. '       ' → logprob: -4.514372825622559
    3. 'counter' (adapté à ' counter') → logprob: -6.264372825622559
    4. ' counter' → logprob: -7.139372825622559
    5. '   ' → logprob: -7.639372825622559
    6. '```' → logprob: -9.764372825622559
    7. ' if' → logprob: -10.889372825622559
    8. '          ' → logprob: -11.264372825622559
    9. '               ' → logprob: -11.264372825622559
    10. 'if' → logprob: -11.889372825622559

Token 118: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0024968255311250687
    2. '+=' → logprob: -6.002496719360352
    3. ' =' → logprob: -11.502496719360352
    4. '+' → logprob: -12.502496719360352
    5. '=' → logprob: -12.877496719360352
    6. ' +' → logprob: -13.377496719360352
    7. '<|end|>' → logprob: -13.502496719360352
    8. '   ' → logprob: -14.252496719360352
    9. '    ' → logprob: -14.877496719360352
    10. ' ' → logprob: -14.877496719360352

Token 119: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.05134287849068642
    2. '1' → logprob: -3.5513429641723633
    3. ' right' → logprob: -4.301342964172363
    4. '(right' → logprob: -4.926342964172363
    5. 'len' → logprob: -8.176342964172363
    6. ' ' → logprob: -9.176342964172363
    7. ' (' → logprob: -9.426342964172363
    8. '(' → logprob: -9.801342964172363
    9. '(len' → logprob: -11.426342964172363
    10. '[right' → logprob: -12.176342964172363

Token 120: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7586304545402527
    2. ' -' → logprob: -0.7586304545402527
    3. '-left' → logprob: -2.7586305141448975
    4. ' ' → logprob: -12.133630752563477
    5. '-mid' → logprob: -16.008630752563477
    6. '-middle' → logprob: -16.133630752563477
    7. '-counter' → logprob: -16.133630752563477
    8. '-none' → logprob: -16.258630752563477
    9. '-right' → logprob: -16.383630752563477
    10. '-l' → logprob: -16.508630752563477

Token 121: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0007113590254448354
    2. ' left' → logprob: -7.250711441040039
    3. ' ' → logprob: -14.375711441040039
    4. '   ' → logprob: -14.375711441040039
    5. '1' → logprob: -16.25071144104004
    6. '	left' → logprob: -16.25071144104004
    7. '[left' → logprob: -17.75071144104004
    8. '  ' → logprob: -18.50071144104004
    9. ' lef' → logprob: -18.87571144104004
    10. '_left' → logprob: -19.12571144104004

Token 122: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' merge' (ID: 20345)
  Prédit: ' merge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' merge' → logprob: -0.0026716147549450397
    2. ' merges' → logprob: -6.252671718597412
    3. 'merge' → logprob: -7.252671718597412
    4. ' ' → logprob: -11.252671241760254
    5. '_merge' → logprob: -11.252671241760254
    6. ' sort' → logprob: -12.252671241760254
    7. ' m' → logprob: -13.752671241760254
    8. 'mer' → logprob: -14.377671241760254
    9. '_' → logprob: -14.627671241760254
    10. ' merger' → logprob: -14.877671241760254

Token 125: 'Sort' (ID: 11602)
  Prédit: '_sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -1.1160349458805285e-05
    2. 'sort' → logprob: -12.125011444091797
    3. 'Sort' → logprob: -12.375011444091797
    4. '(a' → logprob: -13.875011444091797
    5. ' sort' → logprob: -15.875011444091797
    6. '_sorted' → logprob: -15.875011444091797
    7. '_' → logprob: -16.000011444091797
    8. '_split' → logprob: -17.000011444091797
    9. '(' → logprob: -17.250011444091797
    10. '_SORT' → logprob: -18.125011444091797

Token 126: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002651503309607506
    2. ' (' → logprob: -8.625265121459961
    3. '(' → logprob: -9.375265121459961
    4. '(arr' → logprob: -14.500265121459961
    5. '(array' → logprob: -15.625265121459961
    6. 'a' → logprob: -18.62526512145996
    7. '(A' → logprob: -18.75026512145996
    8. ' ' → logprob: -18.87526512145996
    9. '(
' → logprob: -19.25026512145996
    10. '(ai' → logprob: -19.25026512145996

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ',a' → logprob: -12.000011444091797
    3. ' ,' → logprob: -12.125011444091797
    4. ',left' → logprob: -16.750011444091797
    5. ',l' → logprob: -18.500011444091797
    6. ',start' → logprob: -18.750011444091797
    7. '‌,' → logprob: -18.875011444091797
    8. ',index' → logprob: -19.125011444091797
    9. ',length' → logprob: -19.250011444091797
    10. ',num' → logprob: -19.500011444091797

Token 128: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.018162699416279793
    2. ' left' → logprob: -4.018162727355957
    3. '0' → logprob: -11.393162727355957
    4. 'l' → logprob: -14.518162727355957
    5. ' ' → logprob: -14.893162727355957
    6. '	left' → logprob: -15.018162727355957
    7. 'start' → logprob: -16.14316177368164
    8. 'low' → logprob: -16.64316177368164
    9. ',left' → logprob: -17.14316177368164
    10. 'begin' → logprob: -17.26816177368164

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.745069499127567e-05
    2. ',right' → logprob: -9.87508773803711
    3. ' ,' → logprob: -10.25008773803711
    4. ',left' → logprob: -14.87508773803711
    5. ',end' → logprob: -15.62508773803711
    6. ',int' → logprob: -17.37508773803711
    7. ',
' → logprob: -18.62508773803711
    8. ',to' → logprob: -18.75008773803711
    9. ',last' → logprob: -18.87508773803711
    10. ',length' → logprob: -19.25008773803711

Token 130: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00861468818038702
    2. ' right' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.258615493774414
    4. ',right' → logprob: -17.883615493774414
    5. '	right' → logprob: -18.008615493774414
    6. '   ' → logprob: -19.883615493774414
    7. '[right' → logprob: -20.508615493774414
    8. '(right' → logprob: -20.633615493774414
    9. 'Right' → logprob: -21.133615493774414
    10. '  ' → logprob: -22.008615493774414

Token 131: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001967457792488858
    2. ' ):' → logprob: -9.25019645690918
    3. ')' → logprob: -9.37519645690918
    4. '):
' → logprob: -11.25019645690918
    5. ':' → logprob: -13.00019645690918
    6. ' ' → logprob: -16.37519645690918
    7. '):
' → logprob: -16.50019645690918
    8. '():' → logprob: -16.75019645690918
    9. ')：' → logprob: -17.00019645690918
    10. ',' → logprob: -17.37519645690918

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029371678829193115
    2. ' if' → logprob: -6.127937316894531
    3. '<|end|>' → logprob: -7.502937316894531
    4. 'if' → logprob: -8.752937316894531
    5. '    
' → logprob: -11.627937316894531
    6. '	if' → logprob: -11.752937316894531
    7. ' ' → logprob: -11.877937316894531
    8. '  ' → logprob: -12.252937316894531
    9. ',' → logprob: -12.502937316894531
    10. '    ' → logprob: -12.627937316894531

Token 133: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0206720617134124e-05
    2. ' if' → logprob: -11.50001049041748
    3. 'i' → logprob: -19.875009536743164
    4. '   ' → logprob: -19.875009536743164
    5. ' ' → logprob: -20.500009536743164
    6. '```' → logprob: -21.125009536743164
    7. 'global' → logprob: -21.500009536743164
    8. '	if' → logprob: -22.625009536743164
    9. 'for' → logprob: -22.750009536743164
    10. 'while' → logprob: -23.250009536743164

Token 134: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.010013412684202194
    2. ' right' → logprob: -5.010013580322266
    3. 'left' → logprob: -5.760013580322266
    4. ' lef' → logprob: -9.510013580322266
    5. 'right' → logprob: -10.135013580322266
    6. ' ' → logprob: -11.135013580322266
    7. '	left' → logprob: -11.635013580322266
    8. '(left' → logprob: -12.760013580322266
    9. ' (' → logprob: -14.760013580322266
    10. '[left' → logprob: -15.385013580322266

Token 135: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.169187530875206
    2. ' +' → logprob: -1.9191875457763672
    3. ' <' → logprob: -5.419187545776367
    4. '<' → logprob: -5.419187545776367
    5. ' ' → logprob: -9.919187545776367
    6. ' ' → logprob: -12.919187545776367
    7. '   ' → logprob: -13.294187545776367
    8. '<len' → logprob: -13.669187545776367
    9. '```' → logprob: -13.794187545776367
    10. '<int' → logprob: -14.044187545776367

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.709308167453855e-05
    2. ' ' → logprob: -9.375086784362793
    3. '   ' → logprob: -14.125086784362793
    4. '```' → logprob: -15.125086784362793
    5. '<|end|>' → logprob: -15.250086784362793
    6. '<' → logprob: -15.500086784362793
    7. '+' → logprob: -15.625086784362793
    8. ' <' → logprob: -15.750086784362793
    9. '  ' → logprob: -15.875086784362793
    10. '
' → logprob: -16.75008773803711

Token 137: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4072442352771759
    2. ' <' → logprob: -1.1572442054748535
    3. ' >=' → logprob: -4.1572442054748535
    4. '>=' → logprob: -5.4072442054748535
    5. ' ' → logprob: -11.032244682312012
    6. '<int' → logprob: -12.282244682312012
    7. '<th' → logprob: -12.907244682312012
    8. ' ' → logprob: -13.032244682312012
    9. '<n' → logprob: -13.407244682312012
    10. '<len' → logprob: -13.532244682312012

Token 138: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.005234002135694027
    2. ' right' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.130233764648438
    4. '   ' → logprob: -16.630233764648438
    5. '	right' → logprob: -17.005233764648438
    6. 'rig' → logprob: -18.255233764648438
    7. '  ' → logprob: -19.005233764648438
    8. 'r' → logprob: -19.130233764648438
    9. '
' → logprob: -19.255233764648438
    10. '(right' → logprob: -20.380233764648438

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004338877333793789
    2. ':
' → logprob: -7.750433921813965
    3. '):' → logprob: -13.250433921813965
    4. '<|end|>' → logprob: -14.625433921813965
    5. ' :' → logprob: -15.250433921813965
    6. ':**' → logprob: -15.500433921813965
    7. ':

' → logprob: -15.875433921813965
    8. '():' → logprob: -15.875433921813965
    9. ':def' → logprob: -16.25043296813965
    10. ':return' → logprob: -17.37543296813965

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011421226663514972
    2. ':' → logprob: -7.5011420249938965
    3. '   ' → logprob: -8.001142501831055
    4. '        
' → logprob: -9.501142501831055
    5. '    ' → logprob: -9.876142501831055
    6. '```' → logprob: -10.751142501831055
    7. '        ' → logprob: -11.126142501831055
    8. '           ' → logprob: -11.126142501831055
    9. '
' → logprob: -11.251142501831055
    10. ',' → logprob: -11.751142501831055

Token 141: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.31392696499824524
    2. 'mid' (adapté à ' mid') → logprob: -1.3139269351959229
    3. ' midpoint' → logprob: -8.063926696777344
    4. '       ' → logprob: -8.938926696777344
    5. ' middle' → logprob: -9.313926696777344
    6. 'middle' → logprob: -10.063926696777344
    7. '[mid' → logprob: -10.813926696777344
    8. '           ' → logprob: -11.063926696777344
    9. '        ' → logprob: -11.188926696777344
    10. '
' → logprob: -11.813926696777344

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994188576936722
    2. '=' → logprob: -2.694941997528076
    3. '=int' → logprob: -13.319941520690918
    4. ' ' → logprob: -13.819941520690918
    5. ' =(' → logprob: -13.944941520690918
    6. ' =
' → logprob: -14.319941520690918
    7. '<|end|>' → logprob: -14.569941520690918
    8. '=(' → logprob: -14.819941520690918
    9. '=
' → logprob: -16.444942474365234
    10. ')' → logprob: -16.569942474365234

Token 143: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.048618022352457047
    2. '(left' → logprob: -3.0486180782318115
    3. 'left' → logprob: -11.67361831665039
    4. ' ' → logprob: -11.92361831665039
    5. ' left' → logprob: -12.04861831665039
    6. '(' → logprob: -12.29861831665039
    7. '[left' → logprob: -12.79861831665039
    8. '   ' → logprob: -14.29861831665039
    9. '(math' → logprob: -14.67361831665039
    10. '(right' → logprob: -15.29861831665039

Token 144: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.008629352785646915
    2. ' left' → logprob: -4.758629322052002
    3. 'right' → logprob: -11.50862979888916
    4. 'lef' → logprob: -13.13362979888916
    5. ' lef' → logprob: -13.50862979888916
    6. ' ' → logprob: -14.25862979888916
    7. '	left' → logprob: -15.13362979888916
    8. '(left' → logprob: -15.75862979888916
    9. '[left' → logprob: -16.383628845214844
    10. ' right' → logprob: -16.633628845214844

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026300642639398575
    2. ' +' → logprob: -3.6513006687164307
    3. '<|end|>' → logprob: -15.776300430297852
    4. '+
' → logprob: -16.52630043029785
    5. ' plus' → logprob: -17.15130043029785
    6. '+r' → logprob: -17.40130043029785
    7. ' +
' → logprob: -17.52630043029785
    8. '+k' → logprob: -17.52630043029785
    9. '[right' → logprob: -17.65130043029785
    10. '```' → logprob: -17.77630043029785

Token 146: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.011048762127757072
    2. ' right' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.511048316955566
    4. '	right' → logprob: -14.761048316955566
    5. '[right' → logprob: -16.261049270629883
    6. '(right' → logprob: -17.136049270629883
    7. '   ' → logprob: -17.511049270629883
    8. '
' → logprob: -19.136049270629883
    9. ',right' → logprob: -19.511049270629883
    10. ')' → logprob: -19.886049270629883

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008663143962621689
    2. ')//' → logprob: -4.758663177490234
    3. ')>>' → logprob: -10.508663177490234
    4. ' )' → logprob: -10.758663177490234
    5. ')
' → logprob: -17.508663177490234
    6. '   ' → logprob: -17.883663177490234
    7. '）' → logprob: -18.008663177490234
    8. '//' → logprob: -18.383663177490234
    9. ' ' → logprob: -19.133663177490234
    10. ')#' → logprob: -19.633663177490234

Token 148: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.47417622804641724
    2. '//' → logprob: -0.9741762280464172
    3. '>>' → logprob: -9.974176406860352
    4. ' ' → logprob: -10.474176406860352
    5. '2' → logprob: -12.224176406860352
    6. ' ' → logprob: -12.474176406860352
    7. '   ' → logprob: -12.599176406860352
    8. '```' → logprob: -12.599176406860352
    9. ' >>' → logprob: -12.724176406860352
    10. ')' → logprob: -13.474176406860352

Token 149: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.751928329467773
    4. '  ' → logprob: -17.126928329467773
    5. '۲' → logprob: -17.626928329467773
    6. '```' → logprob: -18.126928329467773
    7. '२' → logprob: -18.939428329467773
    8. '２' → logprob: -19.001928329467773
    9. '    ' → logprob: -19.689428329467773
    10. '২' → logprob: -19.751928329467773

Token 150: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.875024795532227
    4. '```' → logprob: -17.125024795532227
    5. '۲' → logprob: -17.500024795532227
    6. '  ' → logprob: -18.250024795532227
    7. '२' → logprob: -18.375024795532227
    8. '２' → logprob: -18.937524795532227
    9. '=' → logprob: -19.125024795532227
    10. '২' → logprob: -19.375024795532227

Token 151: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5893023014068604
    2. '
' → logprob: -0.8393023014068604
    3. '        
' → logprob: -4.714302062988281
    4. 'merge' → logprob: -5.839302062988281
    5. '<|end|>' → logprob: -7.464302062988281
    6. '
' → logprob: -7.839302062988281
    7. ' 
' → logprob: -9.214302062988281
    8. '  
' → logprob: -9.339302062988281
    9. ' merge' → logprob: -9.839302062988281
    10. '    
' → logprob: -10.339302062988281

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012961626052856445
    2. 'merge' → logprob: -4.387961387634277
    3. ' merge' → logprob: -7.762961387634277
    4. '   ' → logprob: -10.762961387634277
    5. '        
' → logprob: -13.262961387634277
    6. '```' → logprob: -13.762961387634277
    7. '           ' → logprob: -14.512961387634277
    8. '.merge' → logprob: -14.887961387634277
    9. '      ' → logprob: -15.137961387634277
    10. '
' → logprob: -15.137961387634277

Token 153: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' (adapté à ' merge') → logprob: -0.06462412327528
    2. ' merge' → logprob: -2.814624071121216
    3. '       ' → logprob: -5.939624309539795
    4. '   ' → logprob: -11.314623832702637
    5. '
' → logprob: -13.064623832702637
    6. ' ' → logprob: -13.064623832702637
    7. '.merge' → logprob: -13.689623832702637
    8. '_merge' → logprob: -14.189623832702637
    9. '```' → logprob: -14.314623832702637
    10. '    ' → logprob: -15.689623832702637

Token 154: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: 0.0
    2. 'sort' → logprob: -17.875
    3. 'S' → logprob: -18.875
    4. '_sort' → logprob: -19.25
    5. 'Sor' → logprob: -19.75
    6. ' Sort' → logprob: -20.0
    7. 'So' → logprob: -21.625
    8. ' sort' → logprob: -21.625
    9. 'Split' → logprob: -23.0
    10. '(a' → logprob: -23.0

Token 155: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.625003814697266
    3. '(
' → logprob: -17.000003814697266
    4. '(ai' → logprob: -17.750003814697266
    5. '```' → logprob: -18.375003814697266
    6. 'a' → logprob: -18.625003814697266
    7. '<|end|>' → logprob: -18.750003814697266
    8. '(an' → logprob: -19.625003814697266
    9. ' (' → logprob: -20.125003814697266
    10. '(answer' → logprob: -20.500003814697266

Token 156: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.18453702330589294
    2. ',' → logprob: -1.8095370531082153
    3. ',a' → logprob: -6.059536933898926
    4. '(' → logprob: -6.184536933898926
    5. 'a' → logprob: -7.934536933898926
    6. ')' → logprob: -11.059536933898926
    7. ' ,' → logprob: -12.684536933898926
    8. '(
' → logprob: -13.309536933898926
    9. '```' → logprob: -13.309536933898926
    10. '(left' → logprob: -14.184536933898926

Token 157: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0011709370883181691
    2. ' left' → logprob: -6.751171112060547
    3. '	left' → logprob: -14.626171112060547
    4. '[left' → logprob: -15.126171112060547
    5. '(left' → logprob: -17.626171112060547
    6. '   ' → logprob: -17.751171112060547
    7. ',left' → logprob: -17.751171112060547
    8. ':left' → logprob: -18.001171112060547
    9. '_left' → logprob: -19.376171112060547
    10. ' ' → logprob: -19.376171112060547

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7432603272027336e-06
    2. ' ,' → logprob: -13.750001907348633
    3. ',m' → logprob: -14.250001907348633
    4. ',
' → logprob: -19.000001907348633
    5. '[mid' → logprob: -19.750001907348633
    6. '(mid' → logprob: -20.625001907348633
    7. '‌,' → logprob: -21.500001907348633
    8. ',

' → logprob: -21.500001907348633
    9. 'mid' → logprob: -21.750001907348633
    10. ',k' → logprob: -22.125001907348633

Token 159: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.01815006136894226
    2. ' mid' → logprob: -4.0181498527526855
    3. '[mid' → logprob: -16.393150329589844
    4. '(mid' → logprob: -17.393150329589844
    5. ' ' → logprob: -20.518150329589844
    6. ' midpoint' → logprob: -21.143150329589844
    7. 'middle' → logprob: -21.518150329589844
    8. '   ' → logprob: -21.518150329589844
    9. '    ' → logprob: -21.643150329589844
    10. '_mid' → logprob: -21.893150329589844

Token 160: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3153321444988251
    2. ')' → logprob: -1.3153321743011475
    3. '       ' → logprob: -6.190331935882568
    4. ')
' → logprob: -12.190332412719727
    5. '   ' → logprob: -12.315332412719727
    6. ',' → logprob: -12.440332412719727
    7. ' )
' → logprob: -13.940332412719727
    8. '
' → logprob: -14.190332412719727
    9. ')

' → logprob: -14.190332412719727
    10. '),' → logprob: -14.440332412719727

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01806705817580223
    2. 'merge' → logprob: -4.143066883087158
    3. '
' → logprob: -6.643066883087158
    4. ' merge' → logprob: -7.643066883087158
    5. '	' → logprob: -9.018067359924316
    6. '   ' → logprob: -10.268067359924316
    7. '```' → logprob: -10.268067359924316
    8. '        
' → logprob: -10.518067359924316
    9. '.merge' → logprob: -11.893067359924316
    10. ' ' → logprob: -12.893067359924316

Token 162: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' (adapté à ' merge') → logprob: -0.020698605105280876
    2. ' merge' → logprob: -4.520698547363281
    3. '       ' → logprob: -4.645698547363281
    4. '.merge' → logprob: -14.520698547363281
    5. '   ' → logprob: -14.770698547363281
    6. ' ' → logprob: -15.270698547363281
    7. '```' → logprob: -15.520698547363281
    8. '      ' → logprob: -16.64569854736328
    9. '_merge' → logprob: -16.77069854736328
    10. '        ' → logprob: -17.14569854736328

Token 163: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -1.3544423381972592e-05
    2. '(a' → logprob: -11.25001335144043
    3. '_sort' → logprob: -15.75001335144043
    4. ' Sort' → logprob: -15.87501335144043
    5. 'sort' → logprob: -16.00001335144043
    6. '(' → logprob: -16.25001335144043
    7. 'Sorter' → logprob: -19.00001335144043
    8. 'Sorted' → logprob: -19.25001335144043
    9. '_SORT' → logprob: -19.37501335144043
    10. 'SORT' → logprob: -19.75001335144043

Token 164: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.750001907348633
    3. 'a' → logprob: -14.875001907348633
    4. '```' → logprob: -18.250001907348633
    5. ' (' → logprob: -19.625001907348633
    6. '(
' → logprob: -20.125001907348633
    7. '(ai' → logprob: -20.500001907348633
    8. ' a' → logprob: -21.500001907348633
    9. '(an' → logprob: -22.250001907348633
    10. ',a' → logprob: -22.500001907348633

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1472419600977446e-06
    2. ' ,' → logprob: -15.000000953674316
    3. ',m' → logprob: -15.000000953674316
    4. 'a' → logprob: -16.000001907348633
    5. ',
' → logprob: -16.625001907348633
    6. '(mid' → logprob: -17.125001907348633
    7. 'mid' → logprob: -17.375001907348633
    8. ',a' → logprob: -17.375001907348633
    9. '[mid' → logprob: -17.750001907348633
    10. ',right' → logprob: -18.000001907348633

Token 166: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.2519339919090271
    2. ' mid' → logprob: -1.5019340515136719
    3. 'right' → logprob: -13.126934051513672
    4. ' right' → logprob: -13.501934051513672
    5. '(mid' → logprob: -13.876934051513672
    6. '[mid' → logprob: -14.501934051513672
    7. ' ' → logprob: -17.751934051513672
    8. ' midpoint' → logprob: -18.126934051513672
    9. '_mid' → logprob: -18.626934051513672
    10. '.mid' → logprob: -19.376934051513672

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011852304451167583
    2. ',right' → logprob: -6.751185417175293
    3. ' ,' → logprob: -11.376185417175293
    4. 'right' → logprob: -12.626185417175293
    5. ' right' → logprob: -16.001184463500977
    6. '```' → logprob: -16.876184463500977
    7. '[right' → logprob: -17.126184463500977
    8. ',
' → logprob: -17.626184463500977
    9. ':right' → logprob: -18.126184463500977
    10. ',end' → logprob: -18.876184463500977

Token 168: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.01416350994259119
    2. ' right' → logprob: -4.264163494110107
    3. '	right' → logprob: -17.639163970947266
    4. '[right' → logprob: -20.139163970947266
    5. ' ' → logprob: -20.764163970947266
    6. '(right' → logprob: -21.389163970947266
    7. ',right' → logprob: -21.764163970947266
    8. 'r' → logprob: -21.889163970947266
    9. 'rights' → logprob: -22.139163970947266
    10. '_right' → logprob: -22.389163970947266

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35786980390548706
    2. '       ' → logprob: -1.4828698635101318
    3. ')
' → logprob: -2.607869863510132
    4. '   ' → logprob: -8.857870101928711
    5. ' )' → logprob: -12.357870101928711
    6. '
' → logprob: -12.857870101928711
    7. ',' → logprob: -13.232870101928711
    8. '```' → logprob: -13.357870101928711
    9. ')
' → logprob: -13.732870101928711
    10. ' )
' → logprob: -14.357870101928711

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7736586332321167
    2. 'merge' → logprob: -1.0236586332321167
    3. ' merge' → logprob: -1.8986586332321167
    4. '   ' → logprob: -3.5236587524414062
    5. ' ' → logprob: -10.148658752441406
    6. '.merge' → logprob: -10.523658752441406
    7. '    ' → logprob: -10.898658752441406
    8. '```' → logprob: -11.148658752441406
    9. '  ' → logprob: -11.773658752441406
    10. '     ' → logprob: -11.898658752441406

Token 171: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' (adapté à ' merge') → logprob: -0.014165864326059818
    2. ' merge' → logprob: -4.264165878295898
    3. '   ' → logprob: -13.139165878295898
    4. '       ' → logprob: -15.264165878295898
    5. '.merge' → logprob: -16.8891658782959
    6. ' ' → logprob: -17.6391658782959
    7. '_merge' → logprob: -18.2641658782959
    8. '```' → logprob: -18.6391658782959
    9. 'mer' → logprob: -19.0141658782959
    10. '
' → logprob: -19.3891658782959

Token 172: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.001703983056358993
    2. '(' → logprob: -6.376704216003418
    3. ' (' → logprob: -13.876704216003418
    4. '(A' → logprob: -14.251704216003418
    5. '(
' → logprob: -16.5017032623291
    6. '(

' → logprob: -17.2517032623291
    7. '(ai' → logprob: -17.2517032623291
    8. ')(' → logprob: -17.7517032623291
    9. '("("' → logprob: -17.7517032623291
    10. '((' → logprob: -18.2517032623291

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ',a' → logprob: -13.250003814697266
    3. 'a' → logprob: -13.500003814697266
    4. ',left' → logprob: -15.750003814697266
    5. ' ,' → logprob: -16.750003814697266
    6. ',right' → logprob: -17.750003814697266
    7. ',
' → logprob: -19.250003814697266
    8. ',k' → logprob: -19.375003814697266
    9. '```' → logprob: -20.250003814697266
    10. ')' → logprob: -20.625003814697266

Token 174: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.011050998233258724
    2. ' left' → logprob: -4.511051177978516
    3. 'right' → logprob: -13.011051177978516
    4. '[left' → logprob: -15.136051177978516
    5. ',left' → logprob: -15.386051177978516
    6. '	left' → logprob: -15.386051177978516
    7. 'a' → logprob: -17.011051177978516
    8. '(left' → logprob: -17.011051177978516
    9. ' ' → logprob: -17.136051177978516
    10. ' lef' → logprob: -17.511051177978516

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ',m' → logprob: -14.375001907348633
    3. ' ,' → logprob: -14.500001907348633
    4. ',
' → logprob: -15.125001907348633
    5. 'mid' → logprob: -15.125001907348633
    6. '[mid' → logprob: -17.125001907348633
    7. ',right' → logprob: -17.875001907348633
    8. ' mid' → logprob: -18.625001907348633
    9. '```' → logprob: -18.625001907348633
    10. '(mid' → logprob: -19.000001907348633

Token 176: ' mid' (ID: 6959)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0015029559144750237
    2. ' right' → logprob: -6.501502990722656
    3. 'mid' → logprob: -14.251502990722656
    4. '	right' → logprob: -17.126502990722656
    5. ',right' → logprob: -18.501502990722656
    6. 'Right' → logprob: -19.251502990722656
    7. '[right' → logprob: -19.251502990722656
    8. ' mid' → logprob: -19.751502990722656
    9. ' ' → logprob: -20.376502990722656
    10. '```' → logprob: -20.751502990722656

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ',right' → logprob: -12.375004768371582
    3. ' ,' → logprob: -14.500004768371582
    4. 'right' → logprob: -18.000003814697266
    5. ',
' → logprob: -19.375003814697266
    6. '   ' → logprob: -21.375003814697266
    7. ',r' → logprob: -21.750003814697266
    8. '[right' → logprob: -21.875003814697266
    9. ')' → logprob: -22.125003814697266
    10. '```' → logprob: -22.375003814697266

Token 178: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00861468818038702
    2. ' right' → logprob: -4.758614540100098
    3. '	right' → logprob: -17.383615493774414
    4. ')' → logprob: -18.133615493774414
    5. '   ' → logprob: -18.633615493774414
    6. 'r' → logprob: -18.758615493774414
    7. '[right' → logprob: -19.508615493774414
    8. ' ' → logprob: -19.508615493774414
    9. '```' → logprob: -19.758615493774414
    10. 'rights' → logprob: -20.008615493774414

Token 179: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. ')
' → logprob: -11.625009536743164
    3. ' )' → logprob: -16.250009536743164
    4. ')

' → logprob: -16.750009536743164
    5. ')return' → logprob: -17.500009536743164
    6. ')#' → logprob: -18.250009536743164
    7. ')
' → logprob: -19.500009536743164
    8. '),' → logprob: -19.750009536743164
    9. ')`' → logprob: -20.000009536743164
    10. ')}' → logprob: -20.125009536743164

Token 180: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005772599950432777
    2. 'a' → logprob: -5.755772590637207
    3. 'N' → logprob: -6.630772590637207
    4. 'import' → logprob: -7.755772590637207
    5. 'data' → logprob: -8.380772590637207
    6. '#' → logprob: -8.380772590637207
    7. 'arr' → logprob: -8.755772590637207
    8. 'if' → logprob: -9.755772590637207
    9. 'array' → logprob: -10.130772590637207
    10. 'num' → logprob: -10.755772590637207

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017165892058983445
    2. '=' → logprob: -6.376716613769531
    3. ',' → logprob: -11.501716613769531
    4. '=int' → logprob: -12.876716613769531
    5. ' =
' → logprob: -14.001716613769531
    6. ' ' → logprob: -14.751716613769531
    7. ' ,' → logprob: -15.251716613769531
    8. '  ' → logprob: -16.12671661376953
    9. 's' → logprob: -17.00171661376953
    10. '=input' → logprob: -17.00171661376953

Token 182: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011049000546336174
    2. ' int' → logprob: -4.511048793792725
    3. '10' → logprob: -14.386049270629883
    4. ' ' → logprob: -15.261049270629883
    5. '[int' → logprob: -15.636049270629883
    6. '	int' → logprob: -16.511049270629883
    7. '<int' → logprob: -16.761049270629883
    8. '(int' → logprob: -16.761049270629883
    9. '=int' → logprob: -16.886049270629883
    10. '100' → logprob: -18.386049270629883

Token 183: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0017495537176728249
    2. '(' → logprob: -6.501749515533447
    3. 'input' → logprob: -9.001749992370605
    4. '()' → logprob: -9.001749992370605
    5. '(
' → logprob: -15.251749992370605
    6. '=input' → logprob: -16.12674903869629
    7. ' (' → logprob: -16.25174903869629
    8. '('' → logprob: -16.25174903869629
    9. ' input' → logprob: -16.25174903869629
    10. '("' → logprob: -18.00174903869629

Token 184: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07892680168151855
    2. '()' → logprob: -2.5789268016815186
    3. ')' → logprob: -10.703927040100098
    4. '(' → logprob: -12.453927040100098
    5. '())
' → logprob: -12.953927040100098
    6. '()
' → logprob: -13.203927040100098
    7. '();)' → logprob: -13.578927040100098
    8. '().' → logprob: -13.703927040100098
    9. ' ())' → logprob: -13.828927040100098
    10. '()`' → logprob: -14.453927040100098

Token 185: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.79811754100956e-05
    2. 'arr' → logprob: -11.500038146972656
    3. 'data' → logprob: -11.625038146972656
    4. 'A' → logprob: -11.750038146972656
    5. 'array' → logprob: -11.875038146972656
    6. ' a' → logprob: -13.250038146972656
    7. '<|end|>' → logprob: -14.000038146972656
    8. 'numbers' → logprob: -15.250038146972656
    9. '>a' → logprob: -15.375038146972656
    10. '_a' → logprob: -15.500038146972656

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17975208163261414
    2. '=' → logprob: -1.8047521114349365
    3. '[' → logprob: -12.929752349853516
    4. '=[]' → logprob: -13.304752349853516
    5. ' =[' → logprob: -14.179752349853516
    6. '.' → logprob: -14.554752349853516
    7. '[:]' → logprob: -14.554752349853516
    8. ',' → logprob: -14.679752349853516
    9. '[]' → logprob: -15.304752349853516
    10. '=input' → logprob: -16.054752349853516

Token 187: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5163400173187256
    2. '[list' → logprob: -1.0163400173187256
    3. '[' → logprob: -3.5163400173187256
    4. ' list' → logprob: -4.516340255737305
    5. '[]' → logprob: -8.016340255737305
    6. ' [' → logprob: -8.641340255737305
    7. '[input' → logprob: -8.766340255737305
    8. '[int' → logprob: -9.891340255737305
    9. '[List' → logprob: -11.141340255737305
    10. '[n' → logprob: -12.891340255737305

Token 188: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.006049551069736481
    2. '(' → logprob: -5.131049633026123
    3. '(int' → logprob: -9.506049156188965
    4. '()' → logprob: -10.756049156188965
    5. '(range' → logprob: -11.506049156188965
    6. '(input' → logprob: -11.631049156188965
    7. 'map' → logprob: -13.506049156188965
    8. '(list' → logprob: -13.756049156188965
    9. '(array' → logprob: -14.381049156188965
    10. '(eval' → logprob: -14.506049156188965

Token 189: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002209615893661976
    2. '(' → logprob: -6.252209663391113
    3. 'int' → logprob: -8.252209663391113
    4. '(str' → logprob: -11.502209663391113
    5. '<int' → logprob: -12.877209663391113
    6. '(input' → logprob: -13.127209663391113
    7. '(
' → logprob: -13.377209663391113
    8. '```' → logprob: -13.752209663391113
    9. ')' → logprob: -14.002209663391113
    10. '[int' → logprob: -14.252209663391113

Token 190: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.34699082374572754
    2. '(input' → logprob: -1.3469908237457275
    3. ',' → logprob: -3.4719908237457275
    4. 'input' → logprob: -6.346990585327148
    5. '(' → logprob: -8.346990585327148
    6. ' ,' → logprob: -9.846990585327148
    7. ' input' → logprob: -10.096990585327148
    8. ' (' → logprob: -11.721990585327148
    9. '=input' → logprob: -12.096990585327148
    10. ' ' → logprob: -12.846990585327148

Token 191: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008614926598966122
    2. ' input' → logprob: -4.758615016937256
    3. '(input' → logprob: -15.758614540100098
    4. ' ' → logprob: -16.133615493774414
    5. ',input' → logprob: -16.383615493774414
    6. '=input' → logprob: -17.758615493774414
    7. '	input' → logprob: -18.133615493774414
    8. '   ' → logprob: -18.383615493774414
    9. '<input' → logprob: -18.758615493774414
    10. '  ' → logprob: -19.883615493774414

Token 192: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.668304245569743e-05
    2. '()' → logprob: -10.000046730041504
    3. ' ().' → logprob: -14.375046730041504
    4. '(' → logprob: -14.875046730041504
    5. '()
' → logprob: -15.875046730041504
    6. 'input' → logprob: -16.625045776367188
    7. '.split' → logprob: -17.250045776367188
    8. '.' → logprob: -18.000045776367188
    9. ' .' → logprob: -18.125045776367188
    10. '()[' → logprob: -18.250045776367188

Token 193: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.5649528298527e-05
    2. 'strip' → logprob: -9.500075340270996
    3. ' split' → logprob: -14.625075340270996
    4. '(split' → logprob: -16.000076293945312
    5. 'rstrip' → logprob: -16.125076293945312
    6. 'spl' → logprob: -18.875076293945312
    7. '.split' → logprob: -20.375076293945312
    8. ')' → logprob: -21.000076293945312
    9. 'read' → logprob: -21.750076293945312
    10. '().' → logprob: -22.625076293945312

Token 194: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.01103049423545599
    2. '()' → logprob: -5.011030673980713
    3. '))' → logprob: -5.761030673980713
    4. '())' → logprob: -7.261030673980713
    5. '(' → logprob: -7.886030673980713
    6. '()))
' → logprob: -10.011030197143555
    7. '()));' → logprob: -11.011030197143555
    8. '(),' → logprob: -11.511030197143555
    9. ')' → logprob: -13.636030197143555
    10. '().' → logprob: -13.636030197143555

Token 195: 'merge' (ID: 25492)
  Prédit: 'merge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -1.0280383548888494e-06
    2. ' merge' → logprob: -14.250000953674316
    3. '```' → logprob: -15.125000953674316
    4. 'print' → logprob: -16.625001907348633
    5. '
' → logprob: -17.375001907348633
    6. '.merge' → logprob: -18.125001907348633
    7. 'a' → logprob: -18.250001907348633
    8. '_merge' → logprob: -18.500001907348633
    9. '>' → logprob: -19.875001907348633
    10. '   ' → logprob: -20.000001907348633

Token 196: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: 0.0
    2. 'Sor' → logprob: -18.875
    3. 'S' → logprob: -19.75
    4. '_sort' → logprob: -20.125
    5. 'So' → logprob: -20.625
    6. 'sort' → logprob: -20.75
    7. '(a' → logprob: -21.125
    8. ' Sort' → logprob: -21.5
    9. 'Sorter' → logprob: -21.75
    10. 'ort' → logprob: -22.125

Token 197: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.625003814697266
    3. ' (' → logprob: -16.375003814697266
    4. '(ai' → logprob: -16.625003814697266
    5. '<|end|>' → logprob: -16.875003814697266
    6. '(
' → logprob: -18.125003814697266
    7. '(A' → logprob: -19.500003814697266
    8. '(an' → logprob: -19.500003814697266
    9. '```' → logprob: -19.875003814697266
    10. 'a' → logprob: -20.125003814697266

Token 198: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0032562583219259977
    2. ',' → logprob: -5.753256320953369
    3. ',a' → logprob: -9.753255844116211
    4. '(' → logprob: -11.253255844116211
    5. 'a' → logprob: -12.128255844116211
    6. ')' → logprob: -13.378255844116211
    7. ' ,' → logprob: -15.253255844116211
    8. ' (' → logprob: -15.878255844116211
    9. ')a' → logprob: -16.87825584411621
    10. '```' → logprob: -17.25325584411621

Token 199: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002489423204679042
    2. ' ' → logprob: -8.500248908996582
    3. 'a' → logprob: -10.000248908996582
    4. ' a' → logprob: -17.0002498626709
    5. 'n' → logprob: -19.0002498626709
    6. '```' → logprob: -19.3752498626709
    7. '   ' → logprob: -19.7502498626709
    8. ')' → logprob: -20.2502498626709
    9. '  ' → logprob: -21.1252498626709
    10. '00' → logprob: -21.2502498626709

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.662937372922897e-05
    2. 'a' → logprob: -9.250096321105957
    3. ' ' → logprob: -14.500096321105957
    4. 'n' → logprob: -20.250097274780273
    5. '```' → logprob: -20.500097274780273
    6. ' a' → logprob: -20.875097274780273
    7. '۰' → logprob: -21.875097274780273
    8. '０' → logprob: -22.000097274780273
    9. '000' → logprob: -22.000097274780273
    10. ')' → logprob: -22.250097274780273

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020865922793745995
    2. ',n' → logprob: -3.8958659172058105
    3. ' ,' → logprob: -8.645866394042969
    4. '(n' → logprob: -9.145866394042969
    5. ',len' → logprob: -10.895866394042969
    6. 'n' → logprob: -11.895866394042969
    7. '(' → logprob: -12.395866394042969
    8. ')' → logprob: -12.520866394042969
    9. '```' → logprob: -13.270866394042969
    10. ',
' → logprob: -13.395866394042969

Token 202: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.7848862373502925e-05
    2. ' n' → logprob: -10.500027656555176
    3. 'len' → logprob: -15.375027656555176
    4. '	n' → logprob: -20.500028610229492
    5. ')n' → logprob: -20.625028610229492
    6. ' len' → logprob: -20.875028610229492
    7. '```' → logprob: -22.375028610229492
    8. '_n' → logprob: -23.125028610229492
    9. '(n' → logprob: -23.250028610229492
    10. '   ' → logprob: -23.375028610229492

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -14.750000953674316
    4. ')n' → logprob: -16.625001907348633
    5. '))' → logprob: -16.750001907348633
    6. ')

' → logprob: -17.625001907348633
    7. ')`' → logprob: -17.750001907348633
    8. ')**' → logprob: -18.375001907348633
    9. '),' → logprob: -18.625001907348633
    10. '）' → logprob: -19.500001907348633

Token 204: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.816093228830141e-06
    2. 'for' → logprob: -12.87500286102295
    3. ' print' → logprob: -16.750001907348633
    4. '
' → logprob: -17.125001907348633
    5. '```' → logprob: -18.875001907348633
    6. '#print' → logprob: -19.750001907348633
    7. '``' → logprob: -21.375001907348633
    8. 'prints' → logprob: -22.000001907348633
    9. '<|end|>' → logprob: -22.125001907348633
    10. '   ' → logprob: -22.750001907348633

Token 205: '(*' (ID: 9000)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3922673761844635
    2. '(counter' → logprob: -1.3922673463821411
    3. '(' → logprob: -2.7672674655914307
    4. '('' → logprob: -5.017267227172852
    5. '(*' → logprob: -5.142267227172852
    6. '("' → logprob: -8.017267227172852
    7. '(f' → logprob: -8.767267227172852
    8. '(sorted' → logprob: -9.517267227172852
    9. 'a' → logprob: -10.517267227172852
    10. 'counter' → logprob: -11.267267227172852

Token 206: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.696889623621246e-06
    2. ' a' → logprob: -13.00000286102295
    3. '[a' → logprob: -15.37500286102295
    4. ')a' → logprob: -15.75000286102295
    5. '(a' → logprob: -17.375001907348633
    6. ')' → logprob: -17.625001907348633
    7. 'sorted' → logprob: -17.875001907348633
    8. '	a' → logprob: -18.875001907348633
    9. '   ' → logprob: -18.875001907348633
    10. ' ' → logprob: -20.500001907348633

Token 207: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16895157098770142
    2. ')
' → logprob: -1.9189515113830566
    3. ')' → logprob: -4.793951511383057
    4. ' ,' → logprob: -8.168951988220215
    5. ' )
' → logprob: -10.293951988220215
    6. ',
' → logprob: -10.793951988220215
    7. ',end' → logprob: -10.793951988220215
    8. 'counter' → logprob: -10.793951988220215
    9. ',c' → logprob: -10.918951988220215
    10. ' counter' → logprob: -12.668951988220215

Token 208: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016194197814911604
    2. '
' → logprob: -8.875162124633789
    3. ' print' → logprob: -11.000162124633789
    4. '<|end|>' → logprob: -13.000162124633789
    5. '```' → logprob: -13.750162124633789
    6. ',' → logprob: -14.750162124633789
    7. '(print' → logprob: -15.125162124633789
    8. ',
' → logprob: -15.250162124633789
    9. ' 
' → logprob: -15.250162124633789
    10. '  
' → logprob: -15.375162124633789

Token 209: '(counter' (ID: 85625)
  Prédit: '(counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(counter' → logprob: -0.00468240724876523
    2. 'counter' → logprob: -5.754682540893555
    3. '(' → logprob: -6.504682540893555
    4. ' counter' → logprob: -12.004682540893555
    5. ' (' → logprob: -14.504682540893555
    6. '(
' → logprob: -15.254682540893555
    7. '()' → logprob: -16.129682540893555
    8. '[counter' → logprob: -17.254682540893555
    9. '	counter' → logprob: -18.129682540893555
    10. 'Counter' → logprob: -18.129682540893555

Token 210: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -15.375000953674316
    4. ')#' → logprob: -19.625
    5. ')}' → logprob: -19.75
    6. '))' → logprob: -19.75
    7. '),' → logprob: -19.75
    8. ')`' → logprob: -19.875
    9. '')' → logprob: -20.5
    10. ').' → logprob: -20.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 208
Tokens correctement prédits (1ère position, stricte): 102
Tokens correctement prédits (1ère position, avec adaptation): 110
Tokens correctement prédits (top 10): 190
Précision stricte (1ère position): 49.04%
Précision adaptée (1ère position): 52.88%
Précision (top 10): 91.35%
================================================================================
