================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())

m = [[0 for i in range(n)] for j in range(n)]

for i in range(n):
    com = list(map(int, input().split()))
    for j in range(com[1]):
        m[i][com[j+2]-1] = 1

color = ["white" for i in range(n)]

from collections import deque
queue = deque()

d = [-1 for i in range(n)]

def bfs():
    color[0] = "gray"
    d[0] = 0
    queue.append(0)
    while len(queue) != 0:
        u = queue.popleft()
        for i in range(n):
            if m[u][i] and color[i] == "white":
                color[i] = "gray"
                d[i] = d[u] + 1
                queue.append(i)
        color[u] = "black"

bfs()
for i in range(n):
    print(i+1, d[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'm' (ID: 76)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3957516551017761
    2. 'for' → logprob: -1.895751714706421
    3. 'i' → logprob: -2.020751714706421
    4. 's' → logprob: -3.395751714706421
    5. 'f' → logprob: -6.270751476287842
    6. ' if' → logprob: -6.270751476287842
    7. 'x' → logprob: -6.270751476287842
    8. 'total' → logprob: -7.020751476287842
    9. 'result' → logprob: -7.145751476287842
    10. 'sum' → logprob: -7.270751476287842

Token 6: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5477696657180786
    2. ' ' → logprob: -1.7977696657180786
    3. ')' → logprob: -2.672769546508789
    4. '=' → logprob: -3.172769546508789
    5. ' =' → logprob: -3.172769546508789
    6. '*' → logprob: -3.422769546508789
    7. '[' → logprob: -4.047769546508789
    8. ' +' → logprob: -4.047769546508789
    9. ' *' → logprob: -5.047769546508789
    10. '  ' → logprob: -5.547769546508789

Token 7: ' [[' (ID: 9237)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09121973067522049
    2. 'int' → logprob: -3.091219663619995
    3. ' n' → logprob: -3.466219663619995
    4. 'n' → logprob: -4.966219902038574
    5. ' ' → logprob: -6.466219902038574
    6. ' input' → logprob: -6.466219902038574
    7. 'input' → logprob: -7.966219902038574
    8. '[int' → logprob: -11.341219902038574
    9. '  ' → logprob: -11.466219902038574
    10. '0' → logprob: -11.466219902038574

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014331095851957798
    2. 'int' → logprob: -4.264330863952637
    3. 'False' → logprob: -9.889330863952637
    4. 'input' → logprob: -10.139330863952637
    5. ']' → logprob: -10.639330863952637
    6. '(int' → logprob: -10.764330863952637
    7. '[int' → logprob: -11.514330863952637
    8. '[]' → logprob: -12.139330863952637
    9. ' int' → logprob: -12.514330863952637
    10. '1' → logprob: -13.264330863952637

Token 9: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17338964343070984
    2. ']' → logprob: -2.0483896732330322
    3. ' ]' → logprob: -3.9233896732330322
    4. ']*' → logprob: -5.548389434814453
    5. 'for' → logprob: -5.798389434814453
    6. ',' → logprob: -5.923389434814453
    7. ' ' → logprob: -8.673389434814453
    8. '][' → logprob: -9.048389434814453
    9. ' ]]' → logprob: -9.173389434814453
    10. ']]' → logprob: -9.298389434814453

Token 10: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.13474306464195251
    2. '_' → logprob: -2.3847429752349854
    3. ' ' → logprob: -3.8847429752349854
    4. ' _' → logprob: -5.3847432136535645
    5. ' i' → logprob: -6.0097432136535645
    6. ' in' → logprob: -6.2597432136535645
    7. 'j' → logprob: -6.2597432136535645
    8. ' range' → logprob: -6.6347432136535645
    9. '_j' → logprob: -7.6347432136535645
    10. 'range' → logprob: -8.009742736816406

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019876365549862385
    2. 'in' → logprob: -6.251987457275391
    3. ' ' → logprob: -9.75198745727539
    4. ')' → logprob: -15.50198745727539
    5. 'range' → logprob: -16.00198745727539
    6. '	in' → logprob: -16.00198745727539
    7. '```' → logprob: -16.12698745727539
    8. '  ' → logprob: -16.62698745727539
    9. ' )' → logprob: -17.12698745727539
    10. 'n' → logprob: -17.37698745727539

Token 12: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014163863845169544
    2. 'range' → logprob: -4.264163970947266
    3. '	range' → logprob: -15.639163970947266
    4. '(range' → logprob: -16.139163970947266
    5. '_range' → logprob: -16.889163970947266
    6. 'Range' → logprob: -17.264163970947266
    7. ' xrange' → logprob: -17.389163970947266
    8. ' ' → logprob: -18.389163970947266
    9. ')' → logprob: -18.514163970947266
    10. ' rango' → logprob: -18.889163970947266

Token 13: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004695461131632328
    2. '(' → logprob: -5.379695415496826
    3. ' n' → logprob: -10.129695892333984
    4. ' (' → logprob: -11.004695892333984
    5. 'n' → logprob: -11.254695892333984
    6. ')' → logprob: -13.129695892333984
    7. '(m' → logprob: -13.254695892333984
    8. ')n' → logprob: -14.379695892333984
    9. '(
' → logprob: -14.879695892333984
    10. ' )' → logprob: -15.129695892333984

Token 14: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.771655115589965e-05
    2. ')' → logprob: -11.750018119812012
    3. ' )' → logprob: -11.875018119812012
    4. ']' → logprob: -14.000018119812012
    5. '])]' → logprob: -14.500018119812012
    6. ')])' → logprob: -15.125018119812012
    7. ' ]' → logprob: -15.250018119812012
    8. '+' → logprob: -15.500018119812012
    9. ' ' → logprob: -16.125017166137695
    10. ')}' → logprob: -16.125017166137695

Token 15: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009030391462147236
    2. ' ]' → logprob: -4.884030342102051
    3. ' for' → logprob: -6.884030342102051
    4. 'for' → logprob: -8.13403034210205
    5. ')]' → logprob: -9.75903034210205
    6. ']]' → logprob: -10.75903034210205
    7. '])' → logprob: -12.13403034210205
    8. '],' → logprob: -12.38403034210205
    9. ')' → logprob: -12.75903034210205
    10. ' ]]' → logprob: -12.75903034210205

Token 16: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0024813658092170954
    2. 'range' → logprob: -6.002481460571289
    3. '(range' → logprob: -12.127481460571289
    4. ' ' → logprob: -15.877481460571289
    5. '	range' → logprob: -16.37748146057129
    6. ' xrange' → logprob: -16.87748146057129
    7. '_range' → logprob: -18.37748146057129
    8. ' in' → logprob: -18.87748146057129
    9. '  ' → logprob: -19.00248146057129
    10. ' rango' → logprob: -19.37748146057129

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006846792530268431
    2. 'in' → logprob: -5.006846904754639
    3. ' range' → logprob: -9.63184642791748
    4. '(range' → logprob: -10.88184642791748
    5. '(n' → logprob: -11.38184642791748
    6. '(' → logprob: -11.50684642791748
    7. 'range' → logprob: -11.63184642791748
    8. ' ' → logprob: -11.88184642791748
    9. ' (' → logprob: -12.38184642791748
    10. '	in' → logprob: -13.38184642791748

Token 18: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868772089481354
    2. 'range' → logprob: -1.136877179145813
    3. '(range' → logprob: -12.011877059936523
    4. 'n' → logprob: -17.136877059936523
    5. '(n' → logprob: -17.136877059936523
    6. ' n' → logprob: -18.011877059936523
    7. '	range' → logprob: -18.261877059936523
    8. '(' → logprob: -19.011877059936523
    9. ' ' → logprob: -19.136877059936523
    10. ' xrange' → logprob: -20.761877059936523

Token 19: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006305343005806208
    2. '(range' → logprob: -6.00630521774292
    3. ' range' → logprob: -6.13130521774292
    4. '(' → logprob: -6.63130521774292
    5. ' (' → logprob: -8.506305694580078
    6. 'range' → logprob: -9.006305694580078
    7. 'n' → logprob: -12.506305694580078
    8. ' n' → logprob: -13.756305694580078
    9. 'Range' → logprob: -15.256305694580078
    10. '(s' → logprob: -16.506305694580078

Token 20: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.939851037808694e-05
    2. ')' → logprob: -10.875029563903809
    3. ')])' → logprob: -12.375029563903809
    4. '])]' → logprob: -12.500029563903809
    5. ']' → logprob: -13.500029563903809
    6. ' )' → logprob: -14.750029563903809
    7. '')]' → logprob: -15.250029563903809
    8. ')],' → logprob: -16.125028610229492
    9. '))' → logprob: -16.125028610229492
    10. '])' → logprob: -16.250028610229492

Token 21: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014550336636602879
    2. 'n' → logprob: -5.51455020904541
    3. 'f' → logprob: -5.88955020904541
    4. ' for' → logprob: -6.01455020904541
    5. 'i' → logprob: -6.13955020904541
    6. 'm' → logprob: -6.76455020904541
    7. '#' → logprob: -7.13955020904541
    8. '\' → logprob: -8.01455020904541
    9. 'x' → logprob: -8.76455020904541
    10. 'r' → logprob: -9.38955020904541

Token 22: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08999841660261154
    2. ' i' → logprob: -2.464998483657837
    3. ' j' → logprob: -7.589998245239258
    4. '  ' → logprob: -8.339998245239258
    5. ' n' → logprob: -8.714998245239258
    6. 'i' → logprob: -9.839998245239258
    7. ' ‌' → logprob: -10.464998245239258
    8. ' t' → logprob: -11.214998245239258
    9. '_' → logprob: -11.964998245239258
    10. ' space' → logprob: -12.339998245239258

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024160530418157578
    2. 'in' → logprob: -4.024160385131836
    3. ' ' → logprob: -5.149160385131836
    4. '  ' → logprob: -9.524160385131836
    5. '<|end|>' → logprob: -9.774160385131836
    6. ' i' → logprob: -10.899160385131836
    7. '	in' → logprob: -12.274160385131836
    8. ')' → logprob: -12.649160385131836
    9. '   ' → logprob: -12.836660385131836
    10. 'space' → logprob: -12.961660385131836

Token 24: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01826302893459797
    2. 'range' → logprob: -4.01826286315918
    3. ' ' → logprob: -9.26826286315918
    4. ' n' → logprob: -11.39326286315918
    5. 'n' → logprob: -12.76826286315918
    6. '0' → logprob: -13.51826286315918
    7. '	range' → logprob: -14.26826286315918
    8. ' in' → logprob: -14.51826286315918
    9. ' ' → logprob: -14.64326286315918
    10. '  ' → logprob: -14.89326286315918

Token 25: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28221437335014343
    2. '(n' → logprob: -1.5322144031524658
    3. ' (' → logprob: -3.532214403152466
    4. ' ' → logprob: -7.532214164733887
    5. '(range' → logprob: -10.657214164733887
    6. ' n' → logprob: -10.907214164733887
    7. '(space' → logprob: -12.782214164733887
    8. ' range' → logprob: -12.907214164733887
    9. 'n' → logprob: -13.407214164733887
    10. ')' → logprob: -13.407214164733887

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00738370930776
    2. ')' → logprob: -5.132383823394775
    3. ')]' → logprob: -7.007383823394775
    4. ' ):' → logprob: -8.507383346557617
    5. ':' → logprob: -8.757383346557617
    6. '):
' → logprob: -9.632383346557617
    7. '+' → logprob: -9.882383346557617
    8. ']:' → logprob: -10.257383346557617
    9. ' ' → logprob: -10.757383346557617
    10. ' )' → logprob: -12.382383346557617

Token 27: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.8200332522392273
    2. '   ' → logprob: -1.320033311843872
    3. ' for' → logprob: -1.320033311843872
    4. ' ' → logprob: -4.445033073425293
    5. 'for' → logprob: -4.445033073425293
    6. '<|end|>' → logprob: -7.695033073425293
    7. '	for' → logprob: -8.070033073425293
    8. '     
' → logprob: -8.695033073425293
    9. '       ' → logprob: -8.820033073425293
    10. '\' → logprob: -9.195033073425293

Token 28: ' com' (ID: 452)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05461255460977554
    2. 'for' → logprob: -3.179612636566162
    3. ' ' → logprob: -5.304612636566162
    4. '    ' → logprob: -5.554612636566162
    5. ' m' → logprob: -6.179612636566162
    6. '   ' → logprob: -8.054612159729004
    7. ' n' → logprob: -9.429612159729004
    8. ' ```' → logprob: -9.929612159729004
    9. 'm' → logprob: -10.054612159729004
    10. '<|end|>' → logprob: -10.804612159729004

Token 29: ' =' (ID: 314)
  Prédit: 'pute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pute' → logprob: -0.17625689506530762
    2. 'm' → logprob: -3.0512568950653076
    3. 'put' → logprob: -3.3012568950653076
    4. 'p' → logprob: -3.5512568950653076
    5. 'ment' → logprob: -3.8012568950653076
    6. 'plete' → logprob: -4.926257133483887
    7. 'puter' → logprob: -5.426257133483887
    8. 'mit' → logprob: -5.801257133483887
    9. 'ple' → logprob: -6.051257133483887
    10. 'mun' → logprob: -6.051257133483887

Token 30: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2842608392238617
    2. ' input' → logprob: -1.909260869026184
    3. 'int' → logprob: -2.6592607498168945
    4. 'list' → logprob: -3.9092607498168945
    5. ' list' → logprob: -5.4092607498168945
    6. ' int' → logprob: -5.6592607498168945
    7. '0' → logprob: -8.159260749816895
    8. '[int' → logprob: -8.159260749816895
    9. '[]' → logprob: -9.034260749816895
    10. '[input' → logprob: -9.159260749816895

Token 31: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1759743094444275
    2. '(input' → logprob: -1.9259743690490723
    3. '(com' → logprob: -4.675974369049072
    4. '(range' → logprob: -5.675974369049072
    5. '(int' → logprob: -6.550974369049072
    6. '(map' → logprob: -7.675974369049072
    7. '()' → logprob: -7.925974369049072
    8. '(eval' → logprob: -8.675973892211914
    9. '(list' → logprob: -9.175973892211914
    10. '(str' → logprob: -10.050973892211914

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0021092169918119907
    2. '(lambda' → logprob: -6.877109050750732
    3. '(str' → logprob: -8.12710952758789
    4. '(' → logprob: -8.25210952758789
    5. 'int' → logprob: -8.37710952758789
    6. '(input' → logprob: -8.87710952758789
    7. '<int' → logprob: -9.62710952758789
    8. '[int' → logprob: -9.87710952758789
    9. '=int' → logprob: -11.37710952758789
    10. ')' → logprob: -12.37710952758789

Token 33: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0007174347410909832
    2. '(' → logprob: -7.875717639923096
    3. ',input' → logprob: -8.375717163085938
    4. 'input' → logprob: -9.875717163085938
    5. ')' → logprob: -10.625717163085938
    6. '=input' → logprob: -11.375717163085938
    7. ' input' → logprob: -11.750717163085938
    8. ',' → logprob: -12.125717163085938
    9. '[input' → logprob: -13.125717163085938
    10. '(
' → logprob: -14.250717163085938

Token 34: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023269588127732277
    2. ' input' → logprob: -3.7732696533203125
    3. '(input' → logprob: -10.898269653320312
    4. ',input' → logprob: -12.773269653320312
    5. ')' → logprob: -13.773269653320312
    6. '	input' → logprob: -14.648269653320312
    7. '_input' → logprob: -15.023269653320312
    8. '=input' → logprob: -15.023269653320312
    9. '[input' → logprob: -15.773269653320312
    10. ' ' → logprob: -16.148269653320312

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005059692775830626
    2. '()' → logprob: -7.7505059242248535
    3. '()))' → logprob: -9.625506401062012
    4. '())))' → logprob: -12.875506401062012
    5. '())' → logprob: -13.000506401062012
    6. '(' → logprob: -13.250506401062012
    7. '()));' → logprob: -13.500506401062012
    8. ' ().' → logprob: -15.000506401062012
    9. '()[' → logprob: -15.375506401062012
    10. '()
' → logprob: -16.000505447387695

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00045712877181358635
    2. 'strip' → logprob: -7.750457286834717
    3. ' split' → logprob: -11.250456809997559
    4. 'rstrip' → logprob: -11.750456809997559
    5. '(split' → logprob: -12.750456809997559
    6. ')' → logprob: -13.375456809997559
    7. 'spl' → logprob: -14.500456809997559
    8. ' ' → logprob: -15.750456809997559
    9. 'read' → logprob: -16.125457763671875
    10. 's' → logprob: -16.500457763671875

Token 37: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.027321832254529
    2. '())' → logprob: -4.027321815490723
    3. '()' → logprob: -5.152321815490723
    4. '))' → logprob: -5.777321815490723
    5. '(' → logprob: -9.652321815490723
    6. '())))' → logprob: -9.777321815490723
    7. ')' → logprob: -9.902321815490723
    8. '()))
' → logprob: -10.027321815490723
    9. '()));' → logprob: -11.652321815490723
    10. '()))

' → logprob: -12.402321815490723

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4128960072994232
    2. '<|end|>' → logprob: -1.5378960371017456
    3. ' for' → logprob: -3.037895917892456
    4. ')' → logprob: -4.037896156311035
    5. 'for' → logprob: -4.037896156311035
    6. ' ' → logprob: -4.037896156311035
    7. '[' → logprob: -4.912896156311035
    8. '    
' → logprob: -5.787896156311035
    9. '       ' → logprob: -5.787896156311035
    10. '    ' → logprob: -6.162896156311035

Token 39: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9939571022987366
    2. 'for' (adapté à ' for') → logprob: -1.1189570426940918
    3. '<|end|>' → logprob: -1.8689570426940918
    4. '   ' → logprob: -2.493957042694092
    5. ' ' → logprob: -2.993957042694092
    6. '    
' → logprob: -5.743957042694092
    7. '	for' → logprob: -5.993957042694092
    8. '    ' → logprob: -5.993957042694092
    9. 'm' → logprob: -6.368957042694092
    10. ' 
' → logprob: -6.618957042694092

Token 40: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.0046055191196501255
    2. ' ' → logprob: -5.879605293273926
    3. 'j' → logprob: -6.754605293273926
    4. ' range' → logprob: -7.504605293273926
    5. '  ' → logprob: -10.879605293273926
    6. ' _' → logprob: -11.379605293273926
    7. 'range' → logprob: -12.004605293273926
    8. ' space' → logprob: -12.129605293273926
    9. ' ' → logprob: -12.254605293273926
    10. '    ' → logprob: -12.379605293273926

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01618475280702114
    2. 'in' → logprob: -4.1411848068237305
    3. ' ' → logprob: -9.01618480682373
    4. '  ' → logprob: -11.39118480682373
    5. '	in' → logprob: -12.26618480682373
    6. '    ' → logprob: -12.51618480682373
    7. '   ' → logprob: -12.64118480682373
    8. ')' → logprob: -13.89118480682373
    9. 'n' → logprob: -14.01618480682373
    10. 'range' → logprob: -14.26618480682373

Token 42: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4741552770137787
    2. 'range' → logprob: -0.9741553068161011
    3. '(range' → logprob: -9.72415542602539
    4. 'n' → logprob: -11.84915542602539
    5. '(n' → logprob: -11.97415542602539
    6. ' n' → logprob: -12.84915542602539
    7. '	range' → logprob: -14.47415542602539
    8. ' ' → logprob: -14.59915542602539
    9. 'in' → logprob: -14.84915542602539
    10. ')' → logprob: -15.22415542602539

Token 43: '(com' (ID: 27868)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004679203499108553
    2. '(' → logprob: -5.379679203033447
    3. '(range' → logprob: -10.379679679870605
    4. ' (' → logprob: -10.754679679870605
    5. '(len' → logprob: -13.254679679870605
    6. ')' → logprob: -13.879679679870605
    7. '(s' → logprob: -14.004679679870605
    8. 'range' → logprob: -14.629679679870605
    9. ' ' → logprob: -14.754679679870605
    10. '(
' → logprob: -14.879679679870605

Token 44: '[' (ID: 58)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2930241525173187
    2. ')]' → logprob: -2.5430240631103516
    3. ')' → logprob: -2.6680240631103516
    4. ']):' → logprob: -3.0430240631103516
    5. ')])' → logprob: -4.668024063110352
    6. '[' → logprob: -4.668024063110352
    7. '   ' → logprob: -4.918024063110352
    8. '):
' → logprob: -5.043024063110352
    9. ':' → logprob: -5.293024063110352
    10. ']:' → logprob: -5.418024063110352

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0906597301363945
    2. '0' → logprob: -2.4656596183776855
    3. ' ' → logprob: -6.5906596183776855
    4. '])' → logprob: -9.215660095214844
    5. '2' → logprob: -9.715660095214844
    6. ']' → logprob: -9.965660095214844
    7. '   ' → logprob: -10.215660095214844
    8. '+' → logprob: -10.590660095214844
    9. ' ]' → logprob: -11.465660095214844
    10. ')' → logprob: -11.653160095214844

Token 46: ']):
' (ID: 51989)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8045928478240967
    2. ']):' → logprob: -1.3045928478240967
    3. ']:' → logprob: -2.3045928478240967
    4. ']' → logprob: -2.3045928478240967
    5. '],' → logprob: -3.4295928478240967
    6. '+' → logprob: -4.304593086242676
    7. ']+' → logprob: -4.554593086242676
    8. '):' → logprob: -4.554593086242676
    9. ':],' → logprob: -5.054593086242676
    10. ':]' → logprob: -5.554593086242676

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12500160932540894
    2. '    ' → logprob: -2.6250016689300537
    3. '        ' → logprob: -4.125001430511475
    4. ' m' → logprob: -4.500001430511475
    5. '   ' → logprob: -4.625001430511475
    6. 'm' → logprob: -5.750001430511475
    7. ' ' → logprob: -6.375001430511475
    8. ' :' → logprob: -7.750001430511475
    9. '     ' → logprob: -8.125001907348633
    10. ':' → logprob: -8.125001907348633

Token 48: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.003682974725961685
    2. 'm' (adapté à ' m') → logprob: -6.003683090209961
    3. ' s' → logprob: -7.628683090209961
    4. ' ' → logprob: -8.003683090209961
    5. '    ' → logprob: -8.878683090209961
    6. ' n' → logprob: -9.753683090209961
    7. '       ' → logprob: -10.378683090209961
    8. ' x' → logprob: -10.753683090209961
    9. '   ' → logprob: -10.878683090209961
    10. 'x' → logprob: -11.128683090209961

Token 49: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.035551752895116806
    2. '[' → logprob: -3.4105517864227295
    3. '[m' → logprob: -6.66055154800415
    4. '[n' → logprob: -7.66055154800415
    5. '[j' → logprob: -9.785552024841309
    6. '[int' → logprob: -10.035552024841309
    7. '[u' → logprob: -11.535552024841309
    8. '[c' → logprob: -12.160552024841309
    9. ' [' → logprob: -12.535552024841309
    10. '[input' → logprob: -12.535552024841309

Token 50: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.033714283257722855
    2. '[' → logprob: -3.5337142944335938
    3. ' ][' → logprob: -5.783714294433594
    4. '[m' → logprob: -7.908714294433594
    5. ']' → logprob: -8.533714294433594
    6. 'com' → logprob: -9.283714294433594
    7. ' com' → logprob: -10.408714294433594
    8. '   ' → logprob: -10.658714294433594
    9. '[i' → logprob: -10.658714294433594
    10. ' [' → logprob: -10.658714294433594

Token 51: 'com' (ID: 639)
  Prédit: 'com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0017155165551230311
    2. ' com' → logprob: -6.376715660095215
    3. '1' → logprob: -12.251715660095215
    4. '<com' → logprob: -13.126715660095215
    5. '   ' → logprob: -13.251715660095215
    6. '2' → logprob: -13.876715660095215
    7. ' ' → logprob: -14.376715660095215
    8. '(com' → logprob: -14.501715660095215
    9. '	com' → logprob: -14.501715660095215
    10. '  ' → logprob: -14.751715660095215

Token 52: '[j' (ID: 7895)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018164927139878273
    2. '[j' → logprob: -4.018165111541748
    3. '(' → logprob: -12.14316463470459
    4. '[i' → logprob: -12.39316463470459
    5. ']' → logprob: -13.39316463470459
    6. '2' → logprob: -13.39316463470459
    7. '(j' → logprob: -14.51816463470459
    8. '[
' → logprob: -14.51816463470459
    9. '[++' → logprob: -15.26816463470459
    10. '][' → logprob: -15.51816463470459

Token 53: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001967531396076083
    2. '2' → logprob: -7.126967430114746
    3. ' +' → logprob: -7.251967430114746
    4. '[' → logprob: -7.751967430114746
    5. ']' → logprob: -11.626967430114746
    6. ' ' → logprob: -12.501967430114746
    7. '   ' → logprob: -12.876967430114746
    8. '(' → logprob: -13.001967430114746
    9. ']+' → logprob: -13.501967430114746
    10. ']]' → logprob: -13.876967430114746

Token 54: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0018466515466570854
    2. ' ' → logprob: -6.751846790313721
    3. '1' → logprob: -7.376846790313721
    4. '+' → logprob: -11.376846313476562
    5. '  ' → logprob: -11.751846313476562
    6. ']' → logprob: -11.876846313476562
    7. '3' → logprob: -11.876846313476562
    8. '   ' → logprob: -12.126846313476562
    9. '0' → logprob: -12.751846313476562
    10. ']]' → logprob: -12.814346313476562

Token 55: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03759405016899109
    2. ']]' → logprob: -3.7875940799713135
    3. ' ]' → logprob: -4.662593841552734
    4. ']=' → logprob: -6.162593841552734
    5. '-' → logprob: -6.787593841552734
    6. ' ]]' → logprob: -7.287593841552734
    7. ')]' → logprob: -8.037593841552734
    8. ']]=' → logprob: -8.037593841552734
    9. ' -' → logprob: -9.412593841552734
    10. ']-' → logprob: -9.662593841552734

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012475410767365247
    2. ' ' → logprob: -9.00012493133545
    3. '<|end|>' → logprob: -15.06262493133545
    4. '   ' → logprob: -15.75012493133545
    5. '```' → logprob: -16.000123977661133
    6. '>' → logprob: -16.125123977661133
    7. 'to' → logprob: -16.250123977661133
    8. '0' → logprob: -16.500123977661133
    9. '=' → logprob: -16.562623977661133
    10. '...' → logprob: -16.750123977661133

Token 57: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01332046464085579
    2. ']=' → logprob: -4.513320446014404
    3. '=' → logprob: -6.638320446014404
    4. ' ]' → logprob: -7.013320446014404
    5. ' =' → logprob: -9.888320922851562
    6. ']]' → logprob: -13.013320922851562
    7. ']+=' → logprob: -13.013320922851562
    8. ')' → logprob: -13.763320922851562
    9. ',' → logprob: -14.013320922851562
    10. ')]' → logprob: -14.138320922851562

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759429931640625
    2. ' =' → logprob: -0.8259429931640625
    3. ' ' → logprob: -13.575942993164062
    4. '<|end|>' → logprob: -14.575942993164062
    5. ' |=' → logprob: -14.700942993164062
    6. '=True' → logprob: -15.200942993164062
    7. ' +=' → logprob: -15.450942993164062
    8. '=int' → logprob: -15.575942993164062
    9. ' =
' → logprob: -15.825942993164062
    10. ' =)' → logprob: -15.950942993164062

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.550411151489243e-05
    2. ' ' → logprob: -9.875055313110352
    3. 'com' → logprob: -13.750055313110352
    4. '   ' → logprob: -13.750055313110352
    5. '0' → logprob: -14.500055313110352
    6. '2' → logprob: -14.875055313110352
    7. '  ' → logprob: -15.375055313110352
    8. 'm' → logprob: -15.687555313110352
    9. '-' → logprob: -15.937555313110352
    10. 'int' → logprob: -16.31255531311035

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.750008583068848
    4. 'com' → logprob: -16.75000762939453
    5. '  ' → logprob: -16.87500762939453
    6. '0' → logprob: -17.50000762939453
    7. 'm' → logprob: -17.93750762939453
    8. '１' → logprob: -18.62500762939453
    9. 'int' → logprob: -18.81250762939453
    10. '2' → logprob: -19.06250762939453

Token 61: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3794587254524231
    2. '<|end|>' → logprob: -1.5044586658477783
    3. '
' → logprob: -2.5044586658477783
    4. '```' → logprob: -5.629458904266357
    5. ')' → logprob: -6.004458904266357
    6. ' ' → logprob: -6.004458904266357
    7. 'n' → logprob: -7.504458904266357
    8. '\' → logprob: -7.504458904266357
    9. '<|end|>' → logprob: -7.629458904266357
    10. '#' → logprob: -7.754458904266357

Token 62: 'color' (ID: 4991)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.017593029886484146
    2. '<|end|>' → logprob: -4.267592906951904
    3. '
' → logprob: -6.392592906951904
    4. '```' → logprob: -7.267592906951904
    5. ')' → logprob: -7.767592906951904
    6. '#' → logprob: -8.642593383789062
    7. '\' → logprob: -9.017593383789062
    8. 'n' → logprob: -9.267593383789062
    9. '\r' → logprob: -10.392593383789062
    10. ' ' → logprob: -10.517593383789062

Token 63: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02872011624276638
    2. ' =' → logprob: -4.153719902038574
    3. '[' → logprob: -4.653719902038574
    4. '[s' → logprob: -6.653719902038574
    5. '=' → logprob: -6.903719902038574
    6. '[:]' → logprob: -8.653719902038574
    7. ']' → logprob: -8.778719902038574
    8. ' s' → logprob: -8.903719902038574
    9. '[]' → logprob: -9.403719902038574
    10. ' ' → logprob: -9.653719902038574

Token 64: ' ["' (ID: 9129)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04350937530398369
    2. ' [' → logprob: -3.9185094833374023
    3. '['' → logprob: -4.168509483337402
    4. '[n' → logprob: -5.668509483337402
    5. '[-' → logprob: -6.418509483337402
    6. '["' → logprob: -6.793509483337402
    7. ' ['' → logprob: -7.918509483337402
    8. '[m' → logprob: -8.543509483337402
    9. '0' → logprob: -8.668509483337402
    10. '[int' → logprob: -9.668509483337402

Token 65: 'white' (ID: 9988)
  Prédit: 'white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.35031306743621826
    2. 'W' → logprob: -1.9753130674362183
    3. 'White' → logprob: -2.600313186645508
    4. 'w' → logprob: -3.350313186645508
    5. '0' → logprob: -4.225313186645508
    6. '"' → logprob: -4.600313186645508
    7. ' white' → logprob: -5.225313186645508
    8. '"]' → logprob: -5.600313186645508
    9. '#' → logprob: -5.975313186645508
    10. 'WHITE' → logprob: -6.100313186645508

Token 66: '"' (ID: 1)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.4416685104370117
    2. '"]' → logprob: -1.1916685104370117
    3. '"' → logprob: -2.9416685104370117
    4. '","' → logprob: -7.816668510437012
    5. ' ",' → logprob: -10.191668510437012
    6. ' "]' → logprob: -10.566668510437012
    7. ']' → logprob: -10.566668510437012
    8. '"]
' → logprob: -11.441668510437012
    9. '",
' → logprob: -11.941668510437012
    10. '",
' → logprob: -11.941668510437012

Token 67: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03936013579368591
    2. ']' → logprob: -3.2893600463867188
    3. ' for' → logprob: -7.664360046386719
    4. ',"' → logprob: -7.664360046386719
    5. ')' → logprob: -8.539360046386719
    6. '"' → logprob: -9.914360046386719
    7. '",' → logprob: -10.414360046386719
    8. 'for' → logprob: -11.039360046386719
    9. ',
' → logprob: -11.164360046386719
    10. ',",' → logprob: -11.164360046386719

Token 68: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7610915899276733
    2. '_' → logprob: -1.2610915899276733
    3. 'range' → logprob: -2.136091709136963
    4. ' i' → logprob: -2.761091709136963
    5. ' _' → logprob: -3.261091709136963
    6. 'i' → logprob: -3.886091709136963
    7. ' ' → logprob: -5.761091709136963
    8. ' in' → logprob: -5.761091709136963
    9. '_range' → logprob: -6.136091709136963
    10. 'in' → logprob: -7.761091709136963

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04866980016231537
    2. 'in' → logprob: -3.0486698150634766
    3. 'range' → logprob: -10.048669815063477
    4. ' ' → logprob: -11.173669815063477
    5. ' range' → logprob: -11.423669815063477
    6. ')' → logprob: -12.298669815063477
    7. ']' → logprob: -12.798669815063477
    8. '(range' → logprob: -13.173669815063477
    9. '(' → logprob: -13.423669815063477
    10. ',' → logprob: -14.548669815063477

Token 70: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759458541870117
    2. ' range' → logprob: -0.8259458541870117
    3. '(range' → logprob: -12.075945854187012
    4. ' ' → logprob: -15.325945854187012
    5. '	range' → logprob: -16.075946807861328
    6. 'm' → logprob: -16.825946807861328
    7. 'color' → logprob: -16.950946807861328
    8. '   ' → logprob: -17.200946807861328
    9. 'r' → logprob: -17.325946807861328
    10. ')' → logprob: -17.450946807861328

Token 71: '(n' (ID: 2406)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.03133407607674599
    2. '(n' → logprob: -3.531334161758423
    3. '(' → logprob: -6.781333923339844
    4. 'range' → logprob: -8.656333923339844
    5. ' range' → logprob: -8.656333923339844
    6. ' (' → logprob: -9.281333923339844
    7. '((' → logprob: -13.281333923339844
    8. '(m' → logprob: -13.281333923339844
    9. '(s' → logprob: -14.031333923339844
    10. '](' → logprob: -14.906333923339844

Token 72: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.012540032155811787
    2. ']' → logprob: -4.387539863586426
    3. ')' → logprob: -10.762539863586426
    4. '}]' → logprob: -12.637539863586426
    5. ')]
' → logprob: -13.512539863586426
    6. '")]' → logprob: -14.137539863586426
    7. ' ]' → logprob: -14.262539863586426
    8. ']
' → logprob: -14.262539863586426
    9. '>]' → logprob: -14.262539863586426
    10. '')]' → logprob: -14.887539863586426

Token 73: 'from' (ID: 2845)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13905949890613556
    2. 'distance' → logprob: -3.264059543609619
    3. 'for' → logprob: -3.514059543609619
    4. 'stack' → logprob: -3.639059543609619
    5. 'dist' → logprob: -4.264059543609619
    6. '
' → logprob: -5.764059543609619
    7. 'parent' → logprob: -5.764059543609619
    8. 'u' → logprob: -6.014059543609619
    9. 'dis' → logprob: -6.264059543609619
    10. 'def' → logprob: -6.389059543609619

Token 74: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.023854445666074753
    2. ' ' → logprob: -4.6488542556762695
    3. ' c' → logprob: -4.7738542556762695
    4. ' queue' → logprob: -6.6488542556762695
    5. 'collections' → logprob: -6.6488542556762695
    6. '_' → logprob: -6.8988542556762695
    7. ' colle' → logprob: -7.1488542556762695
    8. ' collection' → logprob: -7.7738542556762695
    9. 'c' → logprob: -8.39885425567627
    10. ' collect' → logprob: -8.64885425567627

Token 75: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.048784367740154266
    2. 'import' → logprob: -3.0487842559814453
    3. ' ' → logprob: -9.673784255981445
    4. '.' → logprob: -9.798784255981445
    5. '<|end|>' → logprob: -10.923784255981445
    6. ' ' → logprob: -11.298784255981445
    7. '```' → logprob: -11.548784255981445
    8. '	import' → logprob: -11.673784255981445
    9. ' defaultdict' → logprob: -11.798784255981445
    10. ' ```' → logprob: -12.673784255981445

Token 76: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.01818225532770157
    2. 'deque' → logprob: -4.018182277679443
    3. ' defaultdict' → logprob: -10.393181800842285
    4. ' de' → logprob: -14.643181800842285
    5. ' dequeue' → logprob: -14.643181800842285
    6. ' queue' → logprob: -15.268181800842285
    7. 'de' → logprob: -15.643181800842285
    8. '	de' → logprob: -16.2681827545166
    9. '```' → logprob: -16.3931827545166
    10. '.de' → logprob: -16.5181827545166

Token 77: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05075393617153168
    2. 'queue' → logprob: -4.050754070281982
    3. 'd' → logprob: -4.175754070281982
    4. '

' → logprob: -5.675754070281982
    5. '
' → logprob: -5.675754070281982
    6. 'q' → logprob: -5.925754070281982
    7. 'visited' → logprob: -6.175754070281982
    8. 'def' → logprob: -6.925754070281982
    9. 'color' → logprob: -7.550754070281982
    10. 'deque' → logprob: -7.675754070281982

Token 78: 'queue' (ID: 9409)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.322863906621933
    2. 'd' → logprob: -1.4478639364242554
    3. 'q' → logprob: -3.822863817214966
    4. 'queue' → logprob: -4.697864055633545
    5. 'def' → logprob: -6.697864055633545
    6. 'dist' → logprob: -6.822864055633545
    7. 'visited' → logprob: -6.822864055633545
    8. '
' → logprob: -6.947864055633545
    9. '

' → logprob: -7.072864055633545
    10. '' → logprob: -7.197864055633545

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.482250839471817
    2. '=' → logprob: -1.1072508096694946
    3. '(' → logprob: -2.982250928878784
    4. '()' → logprob: -6.982250690460205
    5. ' (' → logprob: -8.982251167297363
    6. '.' → logprob: -9.107251167297363
    7. '=[]' → logprob: -9.107251167297363
    8. '(queue' → logprob: -10.107251167297363
    9. ' ()' → logprob: -10.232251167297363
    10. '.Queue' → logprob: -10.607251167297363

Token 80: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.3132835030555725
    2. ' deque' → logprob: -1.3132834434509277
    3. 'Deque' → logprob: -11.813283920288086
    4. 'de' → logprob: -11.938283920288086
    5. ' de' → logprob: -12.063283920288086
    6. '(de' → logprob: -14.313283920288086
    7. 'collections' → logprob: -15.563283920288086
    8. ' dequeue' → logprob: -15.688283920288086
    9. '	de' → logprob: -15.688283920288086
    10. ' dq' → logprob: -15.813283920288086

Token 81: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009622568264603615
    2. '([]' → logprob: -5.134622573852539
    3. '(' → logprob: -5.634622573852539
    4. '([' → logprob: -9.384622573852539
    5. '([(' → logprob: -11.134622573852539
    6. '[]' → logprob: -12.634622573852539
    7. '()]' → logprob: -13.009622573852539
    8. ' ()' → logprob: -13.134622573852539
    9. '()
' → logprob: -13.259622573852539
    10. '()

' → logprob: -14.384622573852539

Token 82: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5217024683952332
    2. '0' → logprob: -1.396702527999878
    3. 'color' → logprob: -2.146702527999878
    4. 'def' → logprob: -4.271702289581299
    5. 'queue' → logprob: -4.646702289581299
    6. 'distance' → logprob: -5.021702289581299
    7. 'i' → logprob: -5.521702289581299
    8. '<|end|>' → logprob: -6.396702289581299
    9. 'while' → logprob: -6.771702289581299
    10. 'start' → logprob: -7.021702289581299

Token 83: ' =' (ID: 314)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.019663503393530846
    2. 'istance' → logprob: -4.019663333892822
    3. 'e' → logprob: -7.769663333892822
    4. 'ist' → logprob: -7.894663333892822
    5. 'efs' → logprob: -8.39466381072998
    6. 'is' → logprob: -8.76966381072998
    7. '[color' → logprob: -9.89466381072998
    8. '=' → logprob: -9.89466381072998
    9. '[' → logprob: -10.01966381072998
    10. ' =' → logprob: -10.26966381072998

Token 84: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.039038147777318954
    2. '[-' → logprob: -3.4140381813049316
    3. ' [' → logprob: -6.039038181304932
    4. '{}' → logprob: -7.164038181304932
    5. '[color' → logprob: -7.289038181304932
    6. '[]' → logprob: -7.914038181304932
    7. '[n' → logprob: -8.039037704467773
    8. '{' → logprob: -8.289037704467773
    9. '[int' → logprob: -8.789037704467773
    10. ' [-' → logprob: -9.289037704467773

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8219583075260743e-05
    2. '19' → logprob: -11.125038146972656
    3. '11' → logprob: -11.625038146972656
    4. '10' → logprob: -13.000038146972656
    5. '12' → logprob: -13.125038146972656
    6. ' ' → logprob: -13.125038146972656
    7. '2' → logprob: -13.250038146972656
    8. '9' → logprob: -13.750038146972656
    9. '17' → logprob: -13.875038146972656
    10. '15' → logprob: -14.250038146972656

Token 86: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004116273485124111
    2. ' ,' → logprob: -5.504116058349609
    3. ']' → logprob: -11.00411605834961
    4. '0' → logprob: -11.00411605834961
    5. '1' → logprob: -13.12911605834961
    6. ',-' → logprob: -14.25411605834961
    7. ' ' → logprob: -14.87911605834961
    8. ',n' → logprob: -15.00411605834961
    9. '2' → logprob: -15.50411605834961
    10. '，' → logprob: -15.50411605834961

Token 87: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12945839762687683
    2. 'range' → logprob: -2.254458427429199
    3. ' i' → logprob: -4.754458427429199
    4. 'i' → logprob: -5.129458427429199
    5. '_' → logprob: -6.754458427429199
    6. ' in' → logprob: -8.0044584274292
    7. '_range' → logprob: -8.7544584274292
    8. 'in' → logprob: -9.0044584274292
    9. ' color' → logprob: -9.5044584274292
    10. '(range' → logprob: -9.8794584274292

Token 88: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.394758939743042
    2. ' range' → logprob: -1.519758939743042
    3. '(range' → logprob: -2.394758939743042
    4. 'in' → logprob: -4.519759178161621
    5. ' in' → logprob: -5.394759178161621
    6. ' ' → logprob: -7.894759178161621
    7. '(' → logprob: -8.394759178161621
    8. '	range' → logprob: -9.894759178161621
    9. ' (' → logprob: -10.519759178161621
    10. '_range' → logprob: -10.519759178161621

Token 89: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25195327401161194
    2. 'range' → logprob: -1.5019532442092896
    3. '(range' → logprob: -11.126953125
    4. ' ' → logprob: -12.251953125
    5. '	range' → logprob: -14.251953125
    6. ' color' → logprob: -14.251953125
    7. 'color' → logprob: -14.501953125
    8. 'ran' → logprob: -14.751953125
    9. 'rang' → logprob: -15.126953125
    10. ' rang' → logprob: -15.251953125

Token 90: '(n' (ID: 2406)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.6443254351615906
    2. '(n' → logprob: -0.7693254351615906
    3. ' range' → logprob: -5.394325256347656
    4. 'range' → logprob: -5.644325256347656
    5. '(' → logprob: -5.644325256347656
    6. '](' → logprob: -11.644325256347656
    7. '(N' → logprob: -11.894325256347656
    8. '(s' → logprob: -12.019325256347656
    9. ' (' → logprob: -12.144325256347656
    10. '((' → logprob: -13.269325256347656

Token 91: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024379738606512547
    2. ')]' → logprob: -6.252438068389893
    3. ' ]' → logprob: -8.002437591552734
    4. ')' → logprob: -8.752437591552734
    5. '])' → logprob: -11.752437591552734
    6. ']
' → logprob: -12.127437591552734
    7. '`]' → logprob: -13.877437591552734
    8. ']

' → logprob: -14.127437591552734
    9. ']
' → logprob: -15.377437591552734
    10. '）' → logprob: -15.877437591552734

Token 92: 'def' (ID: 1314)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -1.1490561962127686
    2. 'queue' → logprob: -1.2740561962127686
    3. 'for' → logprob: -1.2740561962127686
    4. 'd' → logprob: -2.7740561962127686
    5. 'while' → logprob: -3.5240561962127686
    6. 'distance' → logprob: -4.649056434631348
    7. 'start' → logprob: -4.899056434631348
    8. 'i' → logprob: -4.899056434631348
    9. 'dist' → logprob: -5.399056434631348
    10. 'v' → logprob: -7.149056434631348

Token 93: ' bfs' (ID: 147571)
  Prédit: ' bfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.01382178720086813
    2. ' BFS' → logprob: -4.388821601867676
    3. ' ' → logprob: -7.513821601867676
    4. ' dfs' → logprob: -7.763821601867676
    5. ' color' → logprob: -8.388821601867676
    6. ' visit' → logprob: -11.013821601867676
    7. ' breadth' → logprob: -11.138821601867676
    8. ' main' → logprob: -11.513821601867676
    9. ' b' → logprob: -11.513821601867676
    10. ' distance' → logprob: -11.763821601867676

Token 94: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.053769808262586594
    2. '(i' → logprob: -3.053769826889038
    3. '(node' → logprob: -5.678769588470459
    4. '(n' → logprob: -7.303769588470459
    5. '(start' → logprob: -8.053770065307617
    6. '(s' → logprob: -8.428770065307617
    7. '(u' → logprob: -8.553770065307617
    8. '(queue' → logprob: -9.178770065307617
    9. '(a' → logprob: -10.553770065307617
    10. '(q' → logprob: -10.678770065307617

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3735254108905792
    2. '
' → logprob: -1.3735253810882568
    3. '(queue' → logprob: -4.248525619506836
    4. ':' → logprob: -4.373525619506836
    5. ' 
' → logprob: -4.873525619506836
    6. ' queue' → logprob: -4.873525619506836
    7. '    
' → logprob: -5.248525619506836
    8. ' for' → logprob: -5.748525619506836
    9. '	queue' → logprob: -6.123525619506836
    10. 'queue' → logprob: -6.623525619506836

Token 96: ' color' (ID: 3089)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.842913031578064
    2. '   ' → logprob: -1.342913031578064
    3. ' for' → logprob: -1.467913031578064
    4. '
' → logprob: -3.3429131507873535
    5. 'queue' → logprob: -3.5929131507873535
    6. 'for' → logprob: -5.3429131507873535
    7. '    
' → logprob: -6.0929131507873535
    8. ' color' → logprob: -6.2179131507873535
    9. ' while' → logprob: -6.3429131507873535
    10. ' 
' → logprob: -6.5929131507873535

Token 97: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024643447250127792
    2. '[d' → logprob: -4.024643421173096
    3. '[b' → logprob: -6.024643421173096
    4. '[color' → logprob: -6.149643421173096
    5. '[n' → logprob: -7.399643421173096
    6. '[q' → logprob: -7.899643421173096
    7. '[i' → logprob: -8.399643898010254
    8. '[data' → logprob: -9.524643898010254
    9. '[u' → logprob: -9.649643898010254
    10. '[input' → logprob: -9.774643898010254

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0173281691968441
    2. 'queue' → logprob: -4.767328262329102
    3. 's' → logprob: -5.267328262329102
    4. 'start' → logprob: -6.642328262329102
    5. 'i' → logprob: -7.017328262329102
    6. 'source' → logprob: -8.017328262329102
    7. 'n' → logprob: -8.267328262329102
    8. 'q' → logprob: -9.017328262329102
    9. 'color' → logprob: -9.392328262329102
    10. ']' → logprob: -9.392328262329102

Token 99: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013488641707226634
    2. ']=' → logprob: -9.125134468078613
    3. ' ]' → logprob: -10.750134468078613
    4. '=' → logprob: -12.625134468078613
    5. ']==' → logprob: -14.750134468078613
    6. ']="' → logprob: -15.000134468078613
    7. ')' → logprob: -16.25013542175293
    8. ' =' → logprob: -16.62513542175293
    9. '"]' → logprob: -16.62513542175293
    10. ']='' → logprob: -16.87513542175293

Token 100: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407791018486023
    2. ' =' → logprob: -0.9740779399871826
    3. ']' → logprob: -15.474078178405762
    4. ',' → logprob: -15.849078178405762
    5. ' ="' → logprob: -15.849078178405762
    6. '="' → logprob: -16.099077224731445
    7. ')' → logprob: -16.599077224731445
    8. '='' → logprob: -16.849077224731445
    9. ' ' → logprob: -17.224077224731445
    10. '＝' → logprob: -17.224077224731445

Token 101: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004342887084931135
    2. ' "' → logprob: -5.879343032836914
    3. ''' → logprob: -6.754343032836914
    4. ' ' → logprob: -8.379343032836914
    5. 'gray' → logprob: -9.754343032836914
    6. '   ' → logprob: -11.004343032836914
    7. '"G' → logprob: -11.129343032836914
    8. ' gray' → logprob: -11.629343032836914
    9. '_gray' → logprob: -12.379343032836914
    10. '	' → logprob: -12.629343032836914

Token 102: 'gray' (ID: 43222)
  Prédit: 'gray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gray' → logprob: -0.002810105914250016
    2. 'grey' → logprob: -6.002810001373291
    3. 'black' → logprob: -8.25281047821045
    4. 'Gray' → logprob: -10.62781047821045
    5. 'GRAY' → logprob: -10.62781047821045
    6. '
' → logprob: -11.75281047821045
    7. 'g' → logprob: -12.12781047821045
    8. ' gray' → logprob: -12.75281047821045
    9. '``' → logprob: -13.62781047821045
    10. '

' → logprob: -13.75281047821045

Token 103: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0007360121817328036
    2. '"
' → logprob: -7.250736236572266
    3. ' "' → logprob: -10.750736236572266
    4. '"
' → logprob: -13.000736236572266
    5. '```' → logprob: -13.750736236572266
    6. ')' → logprob: -15.750736236572266
    7. '"#' → logprob: -15.875736236572266
    8. '")' → logprob: -16.125736236572266
    9. '"

' → logprob: -16.250736236572266
    10. '"user' → logprob: -16.500736236572266

Token 104: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0008538239635527134
    2. '<|end|>' → logprob: -7.625854015350342
    3. 'queue' → logprob: -9.000853538513184
    4. ' queue' → logprob: -9.250853538513184
    5. '
' → logprob: -10.000853538513184
    6. '	queue' → logprob: -10.500853538513184
    7. '(queue' → logprob: -10.875853538513184
    8. '   ' → logprob: -11.125853538513184
    9. ' 
' → logprob: -11.625853538513184
    10. '  
' → logprob: -11.875853538513184

Token 105: ' d' (ID: 272)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.013438672758638859
    2. '   ' → logprob: -5.013438701629639
    3. ' queue' → logprob: -5.013438701629639
    4. '
' → logprob: -10.76343822479248
    5. '```' → logprob: -11.01343822479248
    6. '	queue' → logprob: -11.51343822479248
    7. ' ' → logprob: -13.51343822479248
    8. '`' → logprob: -13.76343822479248
    9. '  ' → logprob: -14.63843822479248
    10. '.queue' → logprob: -14.63843822479248

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. ' [' → logprob: -14.000000953674316
    3. '][' → logprob: -16.000001907348633
    4. '```' → logprob: -17.000001907348633
    5. '\[' → logprob: -17.375001907348633
    6. '=' → logprob: -17.875001907348633
    7. 'queue' → logprob: -18.625001907348633
    8. ']' → logprob: -18.750001907348633
    9. '}[' → logprob: -18.750001907348633
    10. '﻿' → logprob: -18.875001907348633

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '
' → logprob: -19.125001907348633
    4. '۰' → logprob: -20.750001907348633
    5. '   ' → logprob: -21.125001907348633
    6. ']' → logprob: -21.125001907348633
    7. '[' → logprob: -21.250001907348633
    8. '<|end|>' → logprob: -21.500001907348633
    9. '０' → logprob: -21.875001907348633
    10. '  ' → logprob: -22.625001907348633

Token 108: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.792751032160595e-05
    2. ' ]' → logprob: -9.75008773803711
    3. ']=' → logprob: -10.62508773803711
    4. ']+=' → logprob: -12.50008773803711
    5. '=' → logprob: -14.37508773803711
    6. '[' → logprob: -15.25008773803711
    7. '   ' → logprob: -15.75008773803711
    8. ']+' → logprob: -15.75008773803711
    9. ')' → logprob: -16.00008773803711
    10. ']
' → logprob: -16.25008773803711

Token 109: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931581497192383
    2. ' =' → logprob: -0.6931581497192383
    3. ' +=' → logprob: -12.318158149719238
    4. '+=' → logprob: -12.693158149719238
    5. '0' → logprob: -14.443158149719238
    6. ')' → logprob: -14.443158149719238
    7. '<|end|>' → logprob: -14.568158149719238
    8. '+' → logprob: -14.943158149719238
    9. '.=' → logprob: -14.943158149719238
    10. ']' → logprob: -15.443158149719238

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '1' → logprob: -18.375003814697266
    4. '０' → logprob: -18.875003814697266
    5. '00' → logprob: -19.250003814697266
    6. '	' → logprob: -19.500003814697266
    7. '   ' → logprob: -19.625003814697266
    8. '  ' → logprob: -19.750003814697266
    9. ' ' → logprob: -20.000003814697266
    10. '000' → logprob: -20.000003814697266

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '1' → logprob: -18.25
    4. '０' → logprob: -19.375
    5. '00' → logprob: -20.6875
    6. '۰' → logprob: -20.875
    7. '-' → logprob: -21.125
    8. '```' → logprob: -21.125
    9. '	' → logprob: -21.1875
    10. '000' → logprob: -21.4375

Token 112: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017986861988902092
    2. '
' → logprob: -4.14298677444458
    3. 'queue' → logprob: -6.51798677444458
    4. ' queue' → logprob: -8.392987251281738
    5. '	queue' → logprob: -8.767987251281738
    6. '    
' → logprob: -10.017987251281738
    7. '<|end|>' → logprob: -10.642987251281738
    8. '(queue' → logprob: -11.142987251281738
    9. '   ' → logprob: -13.767987251281738
    10. '.queue' → logprob: -14.267987251281738

Token 113: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3386925458908081
    2. '   ' → logprob: -1.588692545890808
    3. 'queue' → logprob: -2.5886926651000977
    4. ' queue' → logprob: -5.213692665100098
    5. '	queue' → logprob: -6.213692665100098
    6. '<|end|>' → logprob: -8.463692665100098
    7. '    
' → logprob: -9.088692665100098
    8. '(queue' → logprob: -9.588692665100098
    9. '  ' → logprob: -10.588692665100098
    10. ' 
' → logprob: -11.213692665100098

Token 114: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -1.2664456789934775e-06
    2. '   ' → logprob: -14.625000953674316
    3. 'for' → logprob: -14.750000953674316
    4. ' queue' → logprob: -14.875000953674316
    5. '	queue' → logprob: -17.500001907348633
    6. '```' → logprob: -18.000001907348633
    7. '
' → logprob: -18.750001907348633
    8. '(queue' → logprob: -20.625001907348633
    9. 'deque' → logprob: -20.625001907348633
    10. '.queue' → logprob: -20.750001907348633

Token 115: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00013655527436640114
    2. '.' → logprob: -9.625136375427246
    3. '.enqueue' → logprob: -9.750136375427246
    4. '.put' → logprob: -11.875136375427246
    5. '.extend' → logprob: -12.625136375427246
    6. '.app' → logprob: -14.125136375427246
    7. '.push' → logprob: -14.750136375427246
    8. '.ap' → logprob: -15.500136375427246
    9. '.add' → logprob: -16.000137329101562
    10. '.p' → logprob: -16.125137329101562

Token 116: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. '((' → logprob: -14.500000953674316
    3. ' (' → logprob: -15.375000953674316
    4. 'left' → logprob: -16.625
    5. '0' → logprob: -17.125
    6. '()' → logprob: -19.0
    7. '('' → logprob: -19.125
    8. ')(' → logprob: -19.5
    9. '(i' → logprob: -19.625
    10. '```' → logprob: -19.75

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.096126576769166e-05
    2. '(' → logprob: -10.125041007995605
    3. ' ' → logprob: -14.125041007995605
    4. ')' → logprob: -16.87504005432129
    5. '０' → logprob: -19.25004005432129
    6. '۰' → logprob: -19.87504005432129
    7. ' (' → logprob: -20.00004005432129
    8. '   ' → logprob: -20.81254005432129
    9. '{' → logprob: -21.25004005432129
    10. '[' → logprob: -21.31254005432129

Token 118: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009720868547447026
    2. ')
' → logprob: -7.000972270965576
    3. '   ' → logprob: -9.750971794128418
    4. ' )' → logprob: -14.250971794128418
    5. '
' → logprob: -14.500971794128418
    6. ')

' → logprob: -15.250971794128418
    7. ')
' → logprob: -15.250971794128418
    8. '<|end|>' → logprob: -15.625971794128418
    9. ' ' → logprob: -16.000972747802734
    10. '```' → logprob: -16.125972747802734

Token 119: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8877421021461487
    2. '   ' → logprob: -1.262742042541504
    3. ' while' → logprob: -1.637742042541504
    4. '
' → logprob: -2.387742042541504
    5. '<|end|>' → logprob: -4.637742042541504
    6. '	while' → logprob: -5.387742042541504
    7. '```' → logprob: -5.762742042541504
    8. ')' → logprob: -7.012742042541504
    9. '    
' → logprob: -7.387742042541504
    10. '<|end|>' → logprob: -9.387742042541504

Token 120: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.005255933851003647
    2. ' while' → logprob: -5.255255699157715
    3. '   ' → logprob: -10.880255699157715
    4. '	while' → logprob: -13.130255699157715
    5. '
' → logprob: -13.630255699157715
    6. '```' → logprob: -15.505255699157715
    7. '    
' → logprob: -17.00525665283203
    8. 'While' → logprob: -17.38025665283203
    9. '  ' → logprob: -18.75525665283203
    10. ' 
' → logprob: -19.38025665283203

Token 121: ' len' (ID: 4631)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.17458438873291016
    2. 'len' → logprob: -1.9245843887329102
    3. ' queue' → logprob: -4.42458438873291
    4. ' len' → logprob: -6.17458438873291
    5. '(queue' → logprob: -8.79958438873291
    6. '(len' → logprob: -10.04958438873291
    7. '	queue' → logprob: -13.54958438873291
    8. 'que' → logprob: -14.42458438873291
    9. ' ' → logprob: -15.17458438873291
    10. '(' → logprob: -16.299583435058594

Token 122: '(queue' (ID: 72316)
  Prédit: '(queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -5.438573680294212e-06
    2. 'queue' → logprob: -12.250005722045898
    3. '(' → logprob: -14.500005722045898
    4. ' queue' → logprob: -16.0000057220459
    5. '	queue' → logprob: -17.8750057220459
    6. '_queue' → logprob: -21.3750057220459
    7. ' (' → logprob: -21.5000057220459
    8. 'Queue' → logprob: -22.0000057220459
    9. '()' → logprob: -22.2500057220459
    10. '(query' → logprob: -22.2500057220459

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015383196994662285
    2. ')>' → logprob: -4.765383243560791
    3. '>' → logprob: -5.140383243560791
    4. ' >' → logprob: -7.765383243560791
    5. '()>' → logprob: -8.140382766723633
    6. '()' → logprob: -9.140382766723633
    7. '):' → logprob: -10.140382766723633
    8. ' )' → logprob: -12.015382766723633
    9. '">' → logprob: -12.890382766723633
    10. ')!=' → logprob: -12.890382766723633

Token 124: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4920727610588074
    2. ' >' → logprob: -0.9920727610588074
    3. '()>' → logprob: -4.117072582244873
    4. ')' → logprob: -7.492072582244873
    5. ')>' → logprob: -8.242073059082031
    6. '(">' → logprob: -8.492073059082031
    7. '<|end|>' → logprob: -8.617073059082031
    8. ' !=' → logprob: -9.867073059082031
    9. '{' → logprob: -9.867073059082031
    10. '()' → logprob: -10.367073059082031

Token 125: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -17.00020408630371
    4. '  ' → logprob: -17.50020408630371
    5. '    ' → logprob: -18.75020408630371
    6. ' ' → logprob: -19.25020408630371
    7. '```' → logprob: -19.62520408630371
    8. '00' → logprob: -20.00020408630371
    9. '０' → logprob: -20.00020408630371
    10. '	' → logprob: -20.25020408630371

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -17.875001907348633
    4. '   ' → logprob: -19.125001907348633
    5. 'queue' → logprob: -19.375001907348633
    6. 'empty' → logprob: -19.875001907348633
    7. 'deque' → logprob: -20.125001907348633
    8. '00' → logprob: -20.500001907348633
    9. '1' → logprob: -20.500001907348633
    10. '    ' → logprob: -20.625001907348633

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017018410144373775
    2. ':
' → logprob: -6.626701831817627
    3. '):' → logprob: -8.001702308654785
    4. '<|end|>' → logprob: -10.876702308654785
    5. '):
' → logprob: -12.251702308654785
    6. '():' → logprob: -12.501702308654785
    7. ',' → logprob: -12.626702308654785
    8. ')' → logprob: -13.126702308654785
    9. '   ' → logprob: -13.126702308654785
    10. '       ' → logprob: -13.376702308654785

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009260734543204308
    2. '   ' → logprob: -4.884260654449463
    3. 'u' → logprob: -7.634260654449463
    4. '```' → logprob: -8.384261131286621
    5. '        
' → logprob: -8.384261131286621
    6. ' current' → logprob: -8.884261131286621
    7. ' u' → logprob: -9.134261131286621
    8. 'v' → logprob: -9.259261131286621
    9. 'current' → logprob: -9.634261131286621
    10. ',' → logprob: -9.759261131286621

Token 129: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.02244325540959835
    2. ' u' → logprob: -4.0224432945251465
    3. 'v' → logprob: -5.5224432945251465
    4. '   ' → logprob: -9.397442817687988
    5. 'current' → logprob: -9.397442817687988
    6. ' v' → logprob: -9.772442817687988
    7. ' current' → logprob: -10.897442817687988
    8. 'x' → logprob: -11.397442817687988
    9. ' ' → logprob: -12.022442817687988
    10. '	u' → logprob: -12.147442817687988

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815052703022957
    2. '=' → logprob: -4.018150329589844
    3. ')' → logprob: -15.143150329589844
    4. ' ' → logprob: -16.143150329589844
    5. '   ' → logprob: -16.393150329589844
    6. ',' → logprob: -17.143150329589844
    7. ']' → logprob: -17.393150329589844
    8. '	' → logprob: -18.268150329589844
    9. ' =
' → logprob: -18.518150329589844
    10. '＝' → logprob: -18.768150329589844

Token 131: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.10020699352025986
    2. ' queue' → logprob: -2.3502070903778076
    3. '	queue' → logprob: -15.475207328796387
    4. '(queue' → logprob: -16.35020637512207
    5. 'deque' → logprob: -17.97520637512207
    6. ' ' → logprob: -19.10020637512207
    7. '.queue' → logprob: -19.22520637512207
    8. 'que' → logprob: -19.35020637512207
    9. '   ' → logprob: -19.85020637512207
    10. '_queue' → logprob: -21.35020637512207

Token 132: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -6.12258882028982e-05
    2. '.pop' → logprob: -9.75006103515625
    3. '.' → logprob: -12.87506103515625
    4. 'opleft' → logprob: -16.37506103515625
    5. '   ' → logprob: -16.62506103515625
    6. ' .' → logprob: -16.75006103515625
    7. '.dequeue' → logprob: -17.25006103515625
    8. '().' → logprob: -18.87506103515625
    9. '```' → logprob: -18.87506103515625
    10. 'p' → logprob: -19.00006103515625

Token 133: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.001525452476926148
    2. 'op' → logprob: -6.501525402069092
    3. 'ople' → logprob: -11.00152587890625
    4. 'opl' → logprob: -12.00152587890625
    5. 'opf' → logprob: -16.50152587890625
    6. 'o' → logprob: -16.75152587890625
    7. '```' → logprob: -17.25152587890625
    8. 'opt' → logprob: -17.75152587890625
    9. 'opup' → logprob: -18.00152587890625
    10. 'opy' → logprob: -19.00152587890625

Token 134: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005616117268800735
    2. '()
' → logprob: -7.500561714172363
    3. ')' → logprob: -12.125561714172363
    4. '())' → logprob: -13.250561714172363
    5. '()

' → logprob: -14.500561714172363
    6. '()]' → logprob: -15.000561714172363
    7. '()`' → logprob: -15.625561714172363
    8. '();' → logprob: -15.750561714172363
    9. '()
' → logprob: -15.875561714172363
    10. '()\' → logprob: -16.000560760498047

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41983896493911743
    2. ' for' → logprob: -1.2948389053344727
    3. '   ' → logprob: -3.2948389053344727
    4. 'for' → logprob: -3.5448389053344727
    5. '
' → logprob: -6.794838905334473
    6. '<|end|>' → logprob: -7.044838905334473
    7. '        
' → logprob: -8.169838905334473
    8. '	for' → logprob: -8.294838905334473
    9. ' ' → logprob: -8.419838905334473
    10. '    
' → logprob: -9.794838905334473

Token 136: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.320199877838604e-07
    2. ' for' → logprob: -15.0
    3. '   ' → logprob: -18.0
    4. '
' → logprob: -20.0
    5. '       ' → logprob: -20.625
    6. '	for' → logprob: -21.75
    7. '        
' → logprob: -22.125
    8. '```' → logprob: -22.25
    9. 'print' → logprob: -22.625
    10. '    
' → logprob: -22.75

Token 137: ' i' (ID: 575)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.676292231422849e-05
    2. 'i' → logprob: -11.125017166137695
    3. 'w' → logprob: -14.250017166137695
    4. ' v' → logprob: -14.375017166137695
    5. 'j' → logprob: -14.875017166137695
    6. 'k' → logprob: -15.500017166137695
    7. 'idx' → logprob: -16.375017166137695
    8. '_v' → logprob: -18.000017166137695
    9. '(v' → logprob: -18.375017166137695
    10. '	v' → logprob: -18.500017166137695

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08901078999042511
    2. 'in' → logprob: -2.464010715484619
    3. ',' → logprob: -10.214011192321777
    4. 'range' → logprob: -10.589011192321777
    5. '(range' → logprob: -12.464011192321777
    6. ' range' → logprob: -12.964011192321777
    7. ' ' → logprob: -14.339011192321777
    8. '  ' → logprob: -14.714011192321777
    9. '	in' → logprob: -14.964011192321777
    10. '   ' → logprob: -15.339011192321777

Token 139: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011711753904819489
    2. ' range' → logprob: -6.751171112060547
    3. 'm' → logprob: -14.501171112060547
    4. '(range' → logprob: -16.001171112060547
    5. ' ' → logprob: -16.251171112060547
    6. '[m' → logprob: -16.751171112060547
    7. '   ' → logprob: -16.751171112060547
    8. '	range' → logprob: -17.751171112060547
    9. '  ' → logprob: -18.251171112060547
    10. 'r' → logprob: -18.376171112060547

Token 140: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.1782583391759545e-05
    2. '(len' → logprob: -11.250031471252441
    3. 'n' → logprob: -11.375031471252441
    4. '(' → logprob: -11.875031471252441
    5. 'len' → logprob: -16.250032424926758
    6. ' n' → logprob: -16.750032424926758
    7. ' (' → logprob: -16.875032424926758
    8. '	n' → logprob: -18.000032424926758
    9. '(
' → logprob: -18.250032424926758
    10. '   ' → logprob: -18.375032424926758

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04859793186187744
    2. '):
' → logprob: -3.048597812652588
    3. '):
' → logprob: -12.173598289489746
    4. '():' → logprob: -13.298598289489746
    5. ':' → logprob: -13.923598289489746
    6. '):

' → logprob: -14.048598289489746
    7. ' ):' → logprob: -14.548598289489746
    8. '():
' → logprob: -15.048598289489746
    9. '   ' → logprob: -15.173598289489746
    10. ']:' → logprob: -15.548598289489746

Token 142: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47116392850875854
    2. '           ' → logprob: -1.0961639881134033
    3. '       ' → logprob: -3.8461639881134033
    4. 'if' → logprob: -3.9711639881134033
    5. '<|end|>' → logprob: -7.346163749694824
    6. '   ' → logprob: -8.096163749694824
    7. '        ' → logprob: -9.471163749694824
    8. ':' → logprob: -9.721163749694824
    9. ' ' → logprob: -9.846163749694824
    10. '               ' → logprob: -10.096163749694824

Token 143: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0019621781539171934
    2. ' if' → logprob: -6.251962184906006
    3. '           ' → logprob: -10.626961708068848
    4. '       ' → logprob: -12.126961708068848
    5. '               ' → logprob: -12.626961708068848
    6. '	if' → logprob: -15.126961708068848
    7. '   ' → logprob: -15.376961708068848
    8. ' ' → logprob: -16.751962661743164
    9. 'If' → logprob: -17.376962661743164
    10. '	       ' → logprob: -17.501962661743164

Token 144: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.14273251593112946
    2. 'm' → logprob: -2.017732620239258
    3. '(m' → logprob: -10.642732620239258
    4. '	m' → logprob: -11.017732620239258
    5. ' color' → logprob: -12.267732620239258
    6. '   ' → logprob: -12.767732620239258
    7. ' ' → logprob: -12.892732620239258
    8. ' (' → logprob: -13.267732620239258
    9. 'color' → logprob: -13.642732620239258
    10. '[m' → logprob: -13.767732620239258

Token 145: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.000003814697266
    3. 'u' → logprob: -14.250003814697266
    4. '[i' → logprob: -15.500003814697266
    5. ' [' → logprob: -15.750003814697266
    6. '   ' → logprob: -16.500003814697266
    7. '][' → logprob: -16.625003814697266
    8. '```' → logprob: -16.875003814697266
    9. '[user' → logprob: -17.625003814697266
    10. '\[' → logprob: -17.750003814697266

Token 146: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.28144243359565735
    2. '[i' → logprob: -1.406442403793335
    3. '[' → logprob: -9.031442642211914
    4. '"][' → logprob: -9.656442642211914
    5. '[u' → logprob: -10.781442642211914
    6. ')[' → logprob: -10.781442642211914
    7. ' [' → logprob: -11.531442642211914
    8. '[I' → logprob: -11.531442642211914
    9. ' ][' → logprob: -11.531442642211914
    10. '}[' → logprob: -11.656442642211914

Token 147: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.842555426876061e-06
    2. ' i' → logprob: -12.375004768371582
    3. '[i' → logprob: -14.500004768371582
    4. ' ' → logprob: -17.3750057220459
    5. '][' → logprob: -17.6250057220459
    6. ']' → logprob: -17.8750057220459
    7. '
' → logprob: -18.0000057220459
    8. '   ' → logprob: -18.3750057220459
    9. '0' → logprob: -18.5000057220459
    10. '	i' → logprob: -18.5000057220459

Token 148: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09322343021631241
    2. ']==' → logprob: -2.5932233333587646
    3. '==' → logprob: -4.593223571777344
    4. ' ]' → logprob: -5.843223571777344
    5. ' ==' → logprob: -6.718223571777344
    6. '"]' → logprob: -14.218223571777344
    7. '']==' → logprob: -14.468223571777344
    8. ')' → logprob: -14.718223571777344
    9. '```' → logprob: -15.343223571777344
    10. '=' → logprob: -15.468223571777344

Token 149: ' and' (ID: 326)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5231609344482422
    2. ' ==' → logprob: -0.8981609344482422
    3. ']==' → logprob: -10.523160934448242
    4. '=' → logprob: -12.523160934448242
    5. ']' → logprob: -13.273160934448242
    6. ')' → logprob: -13.773160934448242
    7. '===' → logprob: -14.023160934448242
    8. ')==' → logprob: -14.273160934448242
    9. '```' → logprob: -14.398160934448242
    10. '==
' → logprob: -14.398160934448242

Token 150: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.03804252669215202
    2. ' color' → logprob: -3.2880425453186035
    3. ' ' → logprob: -14.788042068481445
    4. '   ' → logprob: -14.788042068481445
    5. '(color' → logprob: -15.788042068481445
    6. '	color' → logprob: -16.538042068481445
    7. '[color' → logprob: -16.788042068481445
    8. 'colors' → logprob: -17.413042068481445
    9. 'Color' → logprob: -18.038042068481445
    10. '  ' → logprob: -18.163042068481445

Token 151: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3132719099521637
    2. '[u' → logprob: -1.3132718801498413
    3. '[' → logprob: -11.563271522521973
    4. 'u' → logprob: -15.063271522521973
    5. ' [' → logprob: -16.18827247619629
    6. 'i' → logprob: -16.31327247619629
    7. '[s' → logprob: -16.93827247619629
    8. '[I' → logprob: -17.06327247619629
    9. '[o' → logprob: -17.81327247619629
    10. '```' → logprob: -17.81327247619629

Token 152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14243067800998688
    2. ']==' → logprob: -2.6424307823181152
    3. '==' → logprob: -2.8924307823181152
    4. '[' → logprob: -5.767430782318115
    5. '[u' → logprob: -6.642430782318115
    6. '[i' → logprob: -6.892430782318115
    7. ']=="' → logprob: -8.267430305480957
    8. ' ==' → logprob: -8.392430305480957
    9. '=="' → logprob: -9.392430305480957
    10. ' ]' → logprob: -10.392430305480957

Token 153: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.013044341467320919
    2. ' ==' → logprob: -4.513044357299805
    3. '=="' → logprob: -6.513044357299805
    4. '[' → logprob: -7.638044357299805
    5. ']==' → logprob: -11.388044357299805
    6. '==
' → logprob: -12.263044357299805
    7. '[i' → logprob: -13.138044357299805
    8. ' =="' → logprob: -13.263044357299805
    9. '"' → logprob: -13.388044357299805
    10. '===' → logprob: -13.388044357299805

Token 154: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.009968208149075508
    2. ' "' → logprob: -4.634968280792236
    3. ''' → logprob: -8.509967803955078
    4. ' '' → logprob: -12.884967803955078
    5. ' ' → logprob: -13.009967803955078
    6. 'white' → logprob: -13.259967803955078
    7. '"user' → logprob: -13.634967803955078
    8. ' white' → logprob: -13.884967803955078
    9. ''s' → logprob: -15.009967803955078
    10. '   ' → logprob: -15.259967803955078

Token 155: 'white' (ID: 9988)
  Prédit: 'white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -5.204720582696609e-05
    2. ' white' → logprob: -9.875052452087402
    3. ':white' → logprob: -15.375052452087402
    4. ' ' → logprob: -16.000051498413086
    5. '白' → logprob: -16.625051498413086
    6. '.white' → logprob: -16.625051498413086
    7. '_white' → logprob: -17.500051498413086
    8. '   ' → logprob: -17.875051498413086
    9. '"' → logprob: -18.250051498413086
    10. 'White' → logprob: -18.375051498413086

Token 156: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.01401094626635313
    2. '":
' → logprob: -4.639010906219482
    3. ':' → logprob: -5.514010906219482
    4. ':
' → logprob: -9.51401138305664
    5. '"' → logprob: -9.88901138305664
    6. '":
' → logprob: -10.13901138305664
    7. '"]:' → logprob: -11.76401138305664
    8. '):' → logprob: -12.01401138305664
    9. '":"' → logprob: -12.13901138305664
    10. '):
' → logprob: -12.63901138305664

Token 157: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07967816293239594
    2. ' color' → logprob: -2.5796780586242676
    3. 'color' → logprob: -8.079678535461426
    4. ':' → logprob: -9.329678535461426
    5. ':
' → logprob: -9.829678535461426
    6. '              ' → logprob: -10.079678535461426
    7. '                
' → logprob: -10.079678535461426
    8. '           ' → logprob: -10.204678535461426
    9. '<|end|>' → logprob: -10.204678535461426
    10. ' ' → logprob: -10.329678535461426

Token 158: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.10282645374536514
    2. 'color' (adapté à ' color') → logprob: -2.3528263568878174
    3. '               ' → logprob: -6.6028265953063965
    4. '                   ' → logprob: -6.7278265953063965
    5. '                ' → logprob: -10.727826118469238
    6. '	color' → logprob: -11.477826118469238
    7. '   ' → logprob: -11.602826118469238
    8. '           ' → logprob: -12.227826118469238
    9. ' ' → logprob: -12.477826118469238
    10. '       ' → logprob: -12.852826118469238

Token 159: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.625003814697266
    3. '[u' → logprob: -15.500003814697266
    4. '[I' → logprob: -15.500003814697266
    5. '```' → logprob: -16.875003814697266
    6. '[j' → logprob: -18.000003814697266
    7. '[
' → logprob: -18.750003814697266
    8. '[s' → logprob: -18.750003814697266
    9. 'i' → logprob: -19.125003814697266
    10. ' [' → logprob: -19.125003814697266

Token 160: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010160224512219429
    2. ' =' → logprob: -4.635160446166992
    3. ']' → logprob: -7.885160446166992
    4. ']=' → logprob: -10.510160446166992
    5. '=
' → logprob: -15.635160446166992
    6. ')' → logprob: -15.760160446166992
    7. '```' → logprob: -16.135160446166992
    8. '=

' → logprob: -17.135160446166992
    9. '[' → logprob: -17.260160446166992
    10. '"]' → logprob: -17.260160446166992

Token 161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01603495515882969
    2. ' =' → logprob: -4.141035079956055
    3. ']' → logprob: -15.766035079956055
    4. '="' → logprob: -16.266035079956055
    5. '```' → logprob: -16.266035079956055
    6. '[' → logprob: -16.516035079956055
    7. ')' → logprob: -16.516035079956055
    8. '＝' → logprob: -17.141035079956055
    9. '=

' → logprob: -17.641035079956055
    10. ' ="' → logprob: -17.766035079956055

Token 162: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07892757654190063
    2. ' "' → logprob: -2.578927516937256
    3. ' gray' → logprob: -10.578927993774414
    4. 'gray' → logprob: -12.078927993774414
    5. ''' → logprob: -12.453927993774414
    6. '	' → logprob: -13.953927993774414
    7. ' ' → logprob: -14.328927993774414
    8. ' '' → logprob: -15.203927993774414
    9. '_gray' → logprob: -15.703927993774414
    10. ' ' → logprob: -15.828927993774414

Token 163: 'gray' (ID: 43222)
  Prédit: 'gray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gray' → logprob: -1.1472419600977446e-06
    2. 'grey' → logprob: -14.125000953674316
    3. '"' → logprob: -15.500000953674316
    4. ' gray' → logprob: -16.000001907348633
    5. '.gray' → logprob: -18.875001907348633
    6. '_gray' → logprob: -19.125001907348633
    7. 'black' → logprob: -19.375001907348633
    8. '```' → logprob: -19.750001907348633
    9. '
' → logprob: -19.875001907348633
    10. 'GRAY' → logprob: -20.250001907348633

Token 164: '"
' (ID: 1092)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04280596226453781
    2. '<|end|>' → logprob: -3.2928059101104736
    3. '
' → logprob: -5.667806148529053
    4. ')' → logprob: -7.792806148529053
    5. '                
' → logprob: -8.417805671691895
    6. '<|end|>' → logprob: -8.667805671691895
    7. '                ' → logprob: -8.792805671691895
    8. '              ' → logprob: -9.667805671691895
    9. '                   ' → logprob: -9.792805671691895
    10. '           ' → logprob: -9.917805671691895

Token 165: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011830251663923264
    2. '
' → logprob: -5.1368303298950195
    3. '<|end|>' → logprob: -5.6368303298950195
    4. '                
' → logprob: -6.7618303298950195
    5. '                ' → logprob: -7.8868303298950195
    6. '                   ' → logprob: -8.88683032989502
    7. '  
' → logprob: -9.51183032989502
    8. ' d' → logprob: -9.51183032989502
    9. '```' → logprob: -9.63683032989502
    10. '           ' → logprob: -10.01183032989502

Token 166: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -3.8219583075260743e-05
    2. ' d' → logprob: -10.375038146972656
    3. '               ' → logprob: -12.125038146972656
    4. '                   ' → logprob: -14.875038146972656
    5. '   ' → logprob: -15.000038146972656
    6. 'queue' → logprob: -15.125038146972656
    7. '           ' → logprob: -15.625038146972656
    8. '       ' → logprob: -15.875038146972656
    9. '
' → logprob: -15.875038146972656
    10. 'distance' → logprob: -16.500038146972656

Token 167: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9504606825648807e-05
    2. '[' → logprob: -11.375019073486328
    3. '[u' → logprob: -12.000019073486328
    4. 'i' → logprob: -13.500019073486328
    5. '[I' → logprob: -15.125019073486328
    6. ' [' → logprob: -16.500019073486328
    7. '(i' → logprob: -17.750019073486328
    8. '```' → logprob: -18.000019073486328
    9. '[
' → logprob: -18.875019073486328
    10. '{i' → logprob: -19.000019073486328

Token 168: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5368108749389648
    2. ' =' → logprob: -0.9118108749389648
    3. ']' → logprob: -4.411810874938965
    4. ')' → logprob: -6.661810874938965
    5. ']=' → logprob: -8.786810874938965
    6. ')=' → logprob: -11.411810874938965
    7. 'd' → logprob: -12.411810874938965
    8. ' ' → logprob: -13.161810874938965
    9. 's' → logprob: -13.286810874938965
    10. '[' → logprob: -13.536810874938965

Token 169: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804171830415726
    2. ' =' → logprob: -3.288041830062866
    3. 'd' → logprob: -16.663042068481445
    4. '[' → logprob: -16.788042068481445
    5. '＝' → logprob: -16.788042068481445
    6. ')' → logprob: -17.038042068481445
    7. '.=' → logprob: -17.413042068481445
    8. ' ' → logprob: -17.788042068481445
    9. '=d' → logprob: -18.038042068481445
    10. 's' → logprob: -18.163042068481445

Token 170: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008615042082965374
    2. ' d' → logprob: -4.758615016937256
    3. '   ' → logprob: -14.758615493774414
    4. '	d' → logprob: -16.258615493774414
    5. ' ' → logprob: -17.383615493774414
    6. '
' → logprob: -18.758615493774414
    7. ')d' → logprob: -19.258615493774414
    8. '  ' → logprob: -19.633615493774414
    9. '```' → logprob: -20.508615493774414
    10. '    ' → logprob: -20.633615493774414

Token 171: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0004324573092162609
    2. 'u' → logprob: -7.75043249130249
    3. '[' → logprob: -13.375432014465332
    4. '	u' → logprob: -16.62543296813965
    5. '
' → logprob: -17.62543296813965
    6. '<u' → logprob: -17.75043296813965
    7. '```' → logprob: -18.25043296813965
    8. '[
' → logprob: -18.37543296813965
    9. ' u' → logprob: -18.62543296813965
    10. '(u' → logprob: -19.12543296813965

Token 172: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.039731744676828384
    2. ' +' → logprob: -3.539731740951538
    3. ']+' → logprob: -4.664731979370117
    4. ']' → logprob: -7.664731979370117
    5. ')+' → logprob: -11.164731979370117
    6. '<|end|>' → logprob: -11.539731979370117
    7. '}+' → logprob: -12.039731979370117
    8. '[' → logprob: -12.289731979370117
    9. '+]' → logprob: -13.414731979370117
    10. ' plus' → logprob: -14.039731979370117

Token 173: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0031790214125066996
    2. ' +' → logprob: -5.75317907333374
    3. '+
' → logprob: -14.378178596496582
    4. '1' → logprob: -14.503178596496582
    5. ' ' → logprob: -16.7531795501709
    6. ' plus' → logprob: -17.1281795501709
    7. '＋' → logprob: -17.5031795501709
    8. '
' → logprob: -18.0031795501709
    9. ']+' → logprob: -18.2531795501709
    10. '[' → logprob: -18.3781795501709

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5822400857578032e-05
    2. ' ' → logprob: -10.625025749206543
    3. '   ' → logprob: -13.625025749206543
    4. '```' → logprob: -15.375025749206543
    5. '                   ' → logprob: -18.12502670288086
    6. '  ' → logprob: -18.50002670288086
    7. '               ' → logprob: -18.75002670288086
    8. '
' → logprob: -18.87502670288086
    9. '       ' → logprob: -19.00002670288086
    10. '           ' → logprob: -19.37502670288086

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -15.37500286102295
    4. '```' → logprob: -16.000003814697266
    5. '
' → logprob: -18.375003814697266
    6. '１' → logprob: -18.625003814697266
    7. '  ' → logprob: -18.875003814697266
    8. '' → logprob: -19.937503814697266
    9. '``' → logprob: -20.187503814697266
    10. '-' → logprob: -20.312503814697266

Token 176: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003299389500170946
    2. 'queue' → logprob: -6.003299236297607
    3. ' queue' → logprob: -7.503299236297607
    4. '<|end|>' → logprob: -9.003299713134766
    5. '
' → logprob: -9.753299713134766
    6. '                
' → logprob: -10.253299713134766
    7. '(queue' → logprob: -10.753299713134766
    8. '```' → logprob: -11.753299713134766
    9. '              ' → logprob: -12.253299713134766
    10. '                ' → logprob: -12.878299713134766

Token 177: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002521561225876212
    2. 'queue' → logprob: -6.252521514892578
    3. ' queue' → logprob: -7.752521514892578
    4. '
' → logprob: -10.252521514892578
    5. '           ' → logprob: -10.252521514892578
    6. '       ' → logprob: -10.627521514892578
    7. '```' → logprob: -10.877521514892578
    8. '              ' → logprob: -11.002521514892578
    9. '                   ' → logprob: -11.752521514892578
    10. '                
' → logprob: -11.877521514892578

Token 178: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -3.5597102396423e-05
    2. ' queue' → logprob: -10.250035285949707
    3. '       ' → logprob: -16.250036239624023
    4. '	queue' → logprob: -17.250036239624023
    5. '```' → logprob: -17.375036239624023
    6. '   ' → logprob: -18.000036239624023
    7. '           ' → logprob: -18.250036239624023
    8. '               ' → logprob: -18.250036239624023
    9. '.queue' → logprob: -18.750036239624023
    10. '(queue' → logprob: -19.000036239624023

Token 179: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.2994620242971e-06
    2. '.' → logprob: -12.125008583068848
    3. '.enqueue' → logprob: -13.125008583068848
    4. 'append' → logprob: -14.750008583068848
    5. '.extend' → logprob: -15.000008583068848
    6. '.app' → logprob: -16.87500762939453
    7. '.put' → logprob: -17.00000762939453
    8. '.push' → logprob: -17.87500762939453
    9. '.Append' → logprob: -18.25000762939453
    10. ' .' → logprob: -18.25000762939453

Token 180: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.4855663721391466e-05
    2. '(' → logprob: -11.125015258789062
    3. '(
' → logprob: -17.125015258789062
    4. '(I' → logprob: -17.250015258789062
    5. ' (' → logprob: -18.625015258789062
    6. '((' → logprob: -18.625015258789062
    7. '()' → logprob: -18.750015258789062
    8. '```' → logprob: -19.375015258789062
    9. '<|end|>' → logprob: -19.500015258789062
    10. 'i' → logprob: -19.500015258789062

Token 181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.429896944202483e-05
    2. ')
' → logprob: -10.625043869018555
    3. '<|end|>' → logprob: -11.500043869018555
    4. '())' → logprob: -12.875043869018555
    5. '()' → logprob: -13.625043869018555
    6. ' )' → logprob: -13.750043869018555
    7. '       ' → logprob: -13.875043869018555
    8. ')return' → logprob: -14.125043869018555
    9. '               ' → logprob: -14.500043869018555
    10. '```' → logprob: -14.875043869018555

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3614470958709717
    2. 'color' → logprob: -1.6114470958709717
    3. '               ' → logprob: -2.8614470958709717
    4. '   ' → logprob: -3.4864470958709717
    5. ' color' → logprob: -4.236447334289551
    6. '           ' → logprob: -7.611447334289551
    7. '```' → logprob: -8.36144733428955
    8. '	color' → logprob: -8.86144733428955
    9. '[color' → logprob: -8.98644733428955
    10. '
' → logprob: -9.11144733428955

Token 183: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' (adapté à ' color') → logprob: -0.005659997928887606
    2. '   ' → logprob: -5.755660057067871
    3. ' color' → logprob: -6.005660057067871
    4. '       ' → logprob: -11.630660057067871
    5. '	color' → logprob: -13.380660057067871
    6. '.color' → logprob: -13.880660057067871
    7. ' ' → logprob: -13.880660057067871
    8. '  ' → logprob: -14.255660057067871
    9. '[color' → logprob: -14.630660057067871
    10. '
' → logprob: -15.130660057067871

Token 184: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.1517960956552997e-05
    2. '[i' → logprob: -11.625011444091797
    3. '[' → logprob: -13.000011444091797
    4. '[v' → logprob: -15.875011444091797
    5. '[q' → logprob: -17.000011444091797
    6. '[n' → logprob: -18.125011444091797
    7. 'u' → logprob: -18.375011444091797
    8. '[o' → logprob: -18.375011444091797
    9. '[s' → logprob: -18.625011444091797
    10. '[y' → logprob: -18.875011444091797

Token 185: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38800501823425293
    2. ']' → logprob: -1.138005018234253
    3. ']=' → logprob: -6.888005256652832
    4. ' =' → logprob: -9.138005256652832
    5. '[' → logprob: -12.513005256652832
    6. ')' → logprob: -13.513005256652832
    7. ' ]' → logprob: -15.638005256652832
    8. '}' → logprob: -16.013004302978516
    9. ']="' → logprob: -16.138004302978516
    10. '"]' → logprob: -16.138004302978516

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.15310683415737e-05
    2. ' =' → logprob: -10.750021934509277
    3. '[' → logprob: -19.62502098083496
    4. '=
' → logprob: -21.25002098083496
    5. '="' → logprob: -21.37502098083496
    6. '＝' → logprob: -21.62502098083496
    7. '=

' → logprob: -22.25002098083496
    8. ')' → logprob: -23.50002098083496
    9. '=}' → logprob: -23.50002098083496
    10. '.=' → logprob: -23.75002098083496

Token 187: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00016194197814911604
    2. 'black' → logprob: -9.125162124633789
    3. ''' → logprob: -10.375162124633789
    4. ' "' → logprob: -11.250162124633789
    5. ' black' → logprob: -11.875162124633789
    6. 'gray' → logprob: -14.250162124633789
    7. ':black' → logprob: -14.750162124633789
    8. '"time' → logprob: -15.375162124633789
    9. '_black' → logprob: -15.875162124633789
    10. '`' → logprob: -16.25016212463379

Token 188: 'black' (ID: 18474)
  Prédit: 'black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -0.5770536661148071
    2. '"' → logprob: -0.8270536661148071
    3. ''' → logprob: -7.577053546905518
    4. ' black' → logprob: -8.077054023742676
    5. ':black' → logprob: -8.327054023742676
    6. 'blk' → logprob: -11.077054023742676
    7. '黒' → logprob: -11.702054023742676
    8. '.black' → logprob: -11.952054023742676
    9. '_black' → logprob: -12.452054023742676
    10. '
' → logprob: -12.577054023742676

Token 189: '"

' (ID: 2678)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13314324617385864
    2. '<|end|>' → logprob: -2.633143186569214
    3. '")' → logprob: -3.258143186569214
    4. '```' → logprob: -4.508143424987793
    5. '
' → logprob: -6.508143424987793
    6. '()' → logprob: -7.758143424987793
    7. '"' → logprob: -8.008143424987793
    8. ']' → logprob: -8.133143424987793
    9. '\n' → logprob: -8.258143424987793
    10. '}' → logprob: -9.008143424987793

Token 190: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00015240935317706317
    2. 'for' → logprob: -8.875152587890625
    3. 'print' → logprob: -11.875152587890625
    4. 'if' → logprob: -12.375152587890625
    5. ' bfs' → logprob: -14.875152587890625
    6. '```' → logprob: -14.875152587890625
    7. 'n' → logprob: -15.000152587890625
    8. ')' → logprob: -16.375152587890625
    9. 'dfs' → logprob: -16.625152587890625
    10. '
' → logprob: -17.250152587890625

Token 191: 'fs' (ID: 6469)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5760185718536377
    2. 'fs' → logprob: -0.8260185718536377
    3. 's' → logprob: -10.451018333435059
    4. 'fsi' → logprob: -10.576018333435059
    5. 'ф' → logprob: -12.201018333435059
    6. 'fsm' → logprob: -12.326018333435059
    7. 'fsp' → logprob: -12.326018333435059
    8. 'FS' → logprob: -12.826018333435059
    9. 'r' → logprob: -14.076018333435059
    10. '	f' → logprob: -14.076018333435059

Token 192: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00020830852736253291
    2. '(' → logprob: -8.500207901000977
    3. '()
' → logprob: -13.500207901000977
    4. '()

' → logprob: -14.375207901000977
    5. '()]' → logprob: -14.625207901000977
    6. '()`' → logprob: -14.750207901000977
    7. '();' → logprob: -14.750207901000977
    8. '()(' → logprob: -15.250207901000977
    9. ' ()' → logprob: -15.500207901000977
    10. '().' → logprob: -15.875207901000977

Token 193: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7432603272027336e-06
    2. 'print' → logprob: -13.500001907348633
    3. ' for' → logprob: -15.500001907348633
    4. '```' → logprob: -18.250001907348633
    5. '
' → logprob: -20.250001907348633
    6. '	for' → logprob: -21.125001907348633
    7. '   ' → logprob: -21.875001907348633
    8. '[' → logprob: -22.000001907348633
    9. '    
' → logprob: -22.500001907348633
    10. 'result' → logprob: -22.750001907348633

Token 194: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12693513929843903
    2. ' i' → logprob: -2.1269352436065674
    3. 'dist' → logprob: -13.251935005187988
    4. 'u' → logprob: -13.626935005187988
    5. 'distance' → logprob: -13.876935005187988
    6. 'x' → logprob: -14.251935005187988
    7. 'k' → logprob: -14.251935005187988
    8. 'd' → logprob: -15.001935005187988
    9. '(i' → logprob: -15.126935005187988
    10. 'v' → logprob: -15.376935005187988

Token 195: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03896889463067055
    2. 'in' → logprob: -3.288968801498413
    3. ' ' → logprob: -7.038969039916992
    4. ' range' → logprob: -11.413969039916992
    5. 'range' → logprob: -11.413969039916992
    6. ' i' → logprob: -11.788969039916992
    7. '  ' → logprob: -12.413969039916992
    8. '_' → logprob: -12.413969039916992
    9. '	in' → logprob: -12.663969039916992
    10. ',' → logprob: -12.788969039916992

Token 196: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00023095356300473213
    2. ' range' → logprob: -8.37523078918457
    3. '(range' → logprob: -15.37523078918457
    4. 'ran' → logprob: -17.00023078918457
    5. ' ' → logprob: -17.12523078918457
    6. 'r' → logprob: -17.25023078918457
    7. 'd' → logprob: -17.50023078918457
    8. '   ' → logprob: -17.75023078918457
    9. 'in' → logprob: -18.25023078918457
    10. '  ' → logprob: -18.75023078918457

Token 197: '(n' (ID: 2406)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.049790896475315094
    2. '(n' → logprob: -3.049790859222412
    3. 'range' → logprob: -7.049790859222412
    4. '(' → logprob: -8.04979133605957
    5. ' range' → logprob: -11.54979133605957
    6. '(r' → logprob: -12.04979133605957
    7. '((' → logprob: -15.54979133605957
    8. '(m' → logprob: -16.54979133605957
    9. 'n' → logprob: -16.92479133605957
    10. '(len' → logprob: -17.17479133605957

Token 198: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012986884685233235
    2. '):
' → logprob: -6.876298904418945
    3. ')' → logprob: -8.251298904418945
    4. ' ):' → logprob: -12.876298904418945
    5. '+' → logprob: -14.376298904418945
    6. ':' → logprob: -14.501298904418945
    7. '):
' → logprob: -14.751298904418945
    8. ']:' → logprob: -15.251298904418945
    9. '}:' → logprob: -15.501298904418945
    10. '():' → logprob: -16.001298904418945

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43693968653678894
    2. ' print' → logprob: -1.0619397163391113
    3. 'print' → logprob: -4.811939716339111
    4. '	print' → logprob: -10.061939239501953
    5. '    
' → logprob: -11.561939239501953
    6. '
' → logprob: -11.936939239501953
    7. '```' → logprob: -12.686939239501953
    8. ',' → logprob: -13.186939239501953
    9. '   ' → logprob: -13.311939239501953
    10. '       ' → logprob: -13.436939239501953

Token 200: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12910906970500946
    2. ' print' → logprob: -2.1291091442108154
    3. '   ' → logprob: -6.629108905792236
    4. 'if' → logprob: -7.379108905792236
    5. ' if' → logprob: -8.379109382629395
    6. '	print' → logprob: -13.629109382629395
    7. '```' → logprob: -14.504109382629395
    8. ' ' → logprob: -14.754109382629395
    9. ' prin' → logprob: -15.254109382629395
    10. '  ' → logprob: -15.629109382629395

Token 201: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.012162767350673676
    2. '(d' → logprob: -4.512162685394287
    3. '(f' → logprob: -6.887162685394287
    4. '(' → logprob: -9.762163162231445
    5. '("{}' → logprob: -10.637163162231445
    6. '(str' → logprob: -12.637163162231445
    7. '((' → logprob: -12.762163162231445
    8. 'd' → logprob: -13.637163162231445
    9. '('{}' → logprob: -13.637163162231445
    10. 'i' → logprob: -14.012163162231445

Token 202: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010660095140337944
    2. ',d' → logprob: -4.635660171508789
    3. ' ,' → logprob: -7.510660171508789
    4. '+' → logprob: -8.385660171508789
    5. ',end' → logprob: -9.260660171508789
    6. ',",' → logprob: -11.260660171508789
    7. ',n' → logprob: -12.635660171508789
    8. ',"' → logprob: -13.010660171508789
    9. ',p' → logprob: -13.260660171508789
    10. ',
' → logprob: -13.510660171508789

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.305326966568828e-05
    2. ' ' → logprob: -9.750093460083008
    3. ')' → logprob: -10.750093460083008
    4. ',' → logprob: -11.500093460083008
    5. ' ,' → logprob: -13.500093460083008
    6. '   ' → logprob: -14.000093460083008
    7. '```' → logprob: -15.125093460083008
    8. '0' → logprob: -15.500093460083008
    9. '	' → logprob: -16.250093460083008
    10. '`' → logprob: -16.375093460083008

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030191605910658836
    2. ',d' → logprob: -3.530191659927368
    3. ' ,' → logprob: -7.780191421508789
    4. ',end' → logprob: -10.905191421508789
    5. 'd' → logprob: -13.905191421508789
    6. ',"' → logprob: -14.030191421508789
    7. ',f' → logprob: -14.405191421508789
    8. ',b' → logprob: -14.905191421508789
    9. '"' → logprob: -14.905191421508789
    10. ',
' → logprob: -15.155191421508789

Token 205: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004087066277861595
    2. ' d' → logprob: -5.504086971282959
    3. '"' → logprob: -12.379087448120117
    4. '"d' → logprob: -12.754087448120117
    5. ',' → logprob: -14.379087448120117
    6. ',d' → logprob: -15.254087448120117
    7. ' "' → logprob: -15.629087448120117
    8. '(d' → logprob: -16.379087448120117
    9. ' ,' → logprob: -16.379087448120117
    10. ''' → logprob: -16.504087448120117

Token 206: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.125000953674316
    3. ')[' → logprob: -16.375001907348633
    4. '[n' → logprob: -16.375001907348633
    5. '```' → logprob: -16.625001907348633
    6. '\[' → logprob: -16.625001907348633
    7. '[
' → logprob: -17.125001907348633
    8. '[I' → logprob: -17.875001907348633
    9. '[u' → logprob: -18.250001907348633
    10. ')' → logprob: -18.500001907348633

Token 207: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0802738870552275e-05
    2. ' )' → logprob: -12.25001049041748
    3. '))' → logprob: -12.87501049041748
    4. ')
' → logprob: -13.37501049041748
    5. '})' → logprob: -14.50001049041748
    6. ')}' → logprob: -14.75001049041748
    7. '),' → logprob: -15.87501049041748
    8. ',)' → logprob: -16.000011444091797
    9. ')}}' → logprob: -16.125011444091797
    10. '])' → logprob: -16.125011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 205
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 180
Précision stricte (1ère position): 45.37%
Précision adaptée (1ère position): 49.76%
Précision (top 10): 87.80%
================================================================================
