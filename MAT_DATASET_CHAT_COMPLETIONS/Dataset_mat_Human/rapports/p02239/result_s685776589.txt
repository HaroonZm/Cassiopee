================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Graph I - Breadth First Search
from collections import deque
def bfs(A,d):
    dq = deque()
    dq.append(0)
    d[0] = 0
    while len(dq):
        v = dq.pop()
        for i in range(len(A[v])-1,-1,-1):
            f = A[v][i]
            if f == 1 and d[i] == -1:
                d[i] = d[v] + 1
                dq.appendleft(i)

n = int(input())
A = []
for _ in range(n):
    ss = list(map(int, input().split()))
    u = ss[0] - 1
    row = [0 for _ in range(n)]
    for i in range(ss[1]):
        idx = 2 + i
        row[ss[idx]-1] = 1
    A.append(row)

d = [-1 for _ in range(n)]
bfs(A,d)

for i,t in enumerate(d): print(i+1,t)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Graph' (ID: 15559)
  → Token d'amorce (pas de prédiction)

Token 2: ' I' (ID: 357)
  → Token d'amorce (pas de prédiction)

Token 3: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7394531965255737
    2. '#' → logprob: -1.4894531965255737
    3. '_' → logprob: -1.4894531965255737
    4. '=' → logprob: -4.489453315734863
    5. ' =' → logprob: -4.864453315734863
    6. 's' → logprob: -4.989453315734863
    7. '```' → logprob: -5.114453315734863
    8. '`' → logprob: -5.114453315734863
    9. '[' → logprob: -5.364453315734863
    10. ' #' → logprob: -5.614453315734863

Token 4: ' Bread' (ID: 80558)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1489856243133545
    2. ' G' → logprob: -1.3989856243133545
    3. ' #' → logprob: -2.3989856243133545
    4. '#' → logprob: -2.7739856243133545
    5. ' ```' → logprob: -2.7739856243133545
    6. ' adjacency' → logprob: -3.5239856243133545
    7. ' nodes' → logprob: -3.5239856243133545
    8. 'G' → logprob: -4.023985862731934
    9. ' ' → logprob: -4.398985862731934
    10. 's' → logprob: -4.648985862731934

Token 5: 'th' (ID: 404)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4153490960597992
    2. '#' → logprob: -2.165349006652832
    3. '_' → logprob: -3.165349006652832
    4. 'g' → logprob: -3.790349006652832
    5. '=' → logprob: -4.040349006652832
    6. 's' → logprob: -4.165349006652832
    7. ':' → logprob: -4.165349006652832
    8. 'n' → logprob: -4.290349006652832
    9. 'c' → logprob: -4.415349006652832
    10. '```' → logprob: -4.665349006652832

Token 6: ' First' (ID: 8338)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.44876569509506226
    2. 'F' → logprob: -2.073765754699707
    3. ' First' → logprob: -2.323765754699707
    4. '-' → logprob: -2.323765754699707
    5. 's' → logprob: -4.823765754699707
    6. '-first' → logprob: -5.073765754699707
    7. '_' → logprob: -5.198765754699707
    8. ' ' → logprob: -5.448765754699707
    9. ' first' → logprob: -5.573765754699707
    10. 'f' → logprob: -5.948765754699707

Token 7: ' Search' (ID: 10497)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'First' → logprob: -1.2262049913406372
    2. '-' → logprob: -1.6012049913406372
    3. 'F' → logprob: -1.7262049913406372
    4. '_' → logprob: -2.1012048721313477
    5. '```' → logprob: -2.6012048721313477
    6. ' First' → logprob: -3.3512048721313477
    7. 'Search' → logprob: -3.6012048721313477
    8. 'T' → logprob: -4.351204872131348
    9. 'S' → logprob: -4.351204872131348
    10. ' ' → logprob: -4.601204872131348

Token 8: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.713202714920044
    2. '
' → logprob: -1.338202714920044
    3. '#' → logprob: -2.338202714920044
    4. '(' → logprob: -2.963202714920044
    5. ':' → logprob: -3.713202714920044
    6. 'def' → logprob: -3.963202714920044
    7. '``' → logprob: -4.713202476501465
    8. '\n' → logprob: -4.963202476501465
    9. '

' → logprob: -5.213202476501465
    10. ' (' → logprob: -5.338202476501465

Token 9: 'from' (ID: 2845)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6925384402275085
    2. '
' → logprob: -1.4425384998321533
    3. '#' → logprob: -2.6925384998321533
    4. ':' → logprob: -2.9425384998321533
    5. 'def' → logprob: -3.0675384998321533
    6. 'd' → logprob: -3.6925384998321533
    7. '(' → logprob: -3.8175384998321533
    8. '`' → logprob: -4.317538261413574
    9. '``' → logprob: -4.567538261413574
    10. ' ' → logprob: -5.692538261413574

Token 10: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.0007569773588329554
    2. 'collections' → logprob: -7.375756740570068
    3. ' queue' → logprob: -9.000757217407227
    4. ' ' → logprob: -13.000757217407227
    5. ' collection' → logprob: -13.250757217407227
    6. ' sklearn' → logprob: -13.750757217407227
    7. ' graph' → logprob: -14.000757217407227
    8. ' network' → logprob: -14.250757217407227
    9. ' space' → logprob: -16.250757217407227
    10. ' ' → logprob: -16.500757217407227

Token 11: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12196623533964157
    2. ' import' → logprob: -2.3719661235809326
    3. '.' → logprob: -3.8719661235809326
    4. '<|end|>' → logprob: -8.246966361999512
    5. '.import' → logprob: -8.496966361999512
    6. ' ' → logprob: -8.871966361999512
    7. '```' → logprob: -10.746966361999512
    8. '_import' → logprob: -11.121966361999512
    9. '	import' → logprob: -11.121966361999512
    10. '<|end|>' → logprob: -12.246966361999512

Token 12: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.10036657750606537
    2. 'deque' → logprob: -2.3503665924072266
    3. ' defaultdict' → logprob: -8.975366592407227
    4. 'collections' → logprob: -11.350366592407227
    5. ' collections' → logprob: -11.475366592407227
    6. ' queue' → logprob: -11.600366592407227
    7. 'queue' → logprob: -14.100366592407227
    8. 'de' → logprob: -14.225366592407227
    9. ' import' → logprob: -14.850366592407227
    10. ' dequeue' → logprob: -15.850366592407227

Token 13: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.37317919731140137
    2. '
' → logprob: -1.2481791973114014
    3. '
' → logprob: -4.8731794357299805
    4. ' 

' → logprob: -4.8731794357299805
    5. 'd' → logprob: -6.1231794357299805
    6. '

' → logprob: -6.4981794357299805
    7. '' → logprob: -6.7481794357299805
    8. '  

' → logprob: -7.1231794357299805
    9. '


' → logprob: -7.2481794357299805
    10. 'import' → logprob: -7.8731794357299805

Token 14: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.598472535610199
    2. 'def' → logprob: -1.7234725952148438
    3. '

' → logprob: -1.8484725952148438
    4. 'd' → logprob: -2.3484725952148438
    5. '#' → logprob: -4.973472595214844
    6. '
' → logprob: -6.098472595214844
    7. '' → logprob: -6.223472595214844
    8. 'class' → logprob: -7.098472595214844
    9. 'import' → logprob: -7.098472595214844
    10. 'de' → logprob: -7.098472595214844

Token 15: ' bfs' (ID: 147571)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3251170217990875
    2. ' bfs' → logprob: -1.3251169919967651
    3. ' BFS' → logprob: -5.075117111206055
    4. ' breadth' → logprob: -5.325117111206055
    5. 'b' → logprob: -8.200117111206055
    6. 'B' → logprob: -8.700117111206055
    7. ' space' → logprob: -10.575117111206055
    8. '_' → logprob: -10.575117111206055
    9. ' ' → logprob: -10.950117111206055
    10. '_b' → logprob: -10.950117111206055

Token 16: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016945181414484978
    2. '_' → logprob: -9.62516975402832
    3. '(node' → logprob: -9.87516975402832
    4. ' (' → logprob: -11.50016975402832
    5. ')' → logprob: -12.00016975402832
    6. '(nodes' → logprob: -12.75016975402832
    7. '(
' → logprob: -13.00016975402832
    8. '('' → logprob: -13.37516975402832
    9. '(

' → logprob: -13.37516975402832
    10. '(root' → logprob: -13.62516975402832

Token 17: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005407234653830528
    2. '[' → logprob: -6.380407333374023
    3. ',A' → logprob: -6.630407333374023
    4. '[A' → logprob: -7.005407333374023
    5. ' ,' → logprob: -7.130407333374023
    6. '):' → logprob: -8.255407333374023
    7. ')' → logprob: -8.380407333374023
    8. ',node' → logprob: -10.380407333374023
    9. '[node' → logprob: -11.005407333374023
    10. ',b' → logprob: -11.380407333374023

Token 18: '):
' (ID: 1883)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.6844237446784973
    2. ',' → logprob: -1.0594236850738525
    3. 'ist' → logprob: -3.1844236850738525
    4. 'estination' → logprob: -3.1844236850738525
    5. 'e' → logprob: -3.6844236850738525
    6. 'ef' → logprob: -5.434423923492432
    7. 'istance' → logprob: -5.434423923492432
    8. 'eep' → logprob: -5.434423923492432
    9. ',e' → logprob: -5.559423923492432
    10. 'is' → logprob: -5.809423923492432

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10548093914985657
    2. ':' → logprob: -3.355480909347534
    3. ' ' → logprob: -3.480480909347534
    4. ' :' → logprob: -4.105481147766113
    5. '[' → logprob: -5.730481147766113
    6. '    ' → logprob: -5.730481147766113
    7. '  ' → logprob: -5.980481147766113
    8. 'n' → logprob: -5.980481147766113
    9. '(' → logprob: -6.480481147766113
    10. 'd' → logprob: -7.355481147766113

Token 20: ' dq' (ID: 164235)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.4565914571285248
    2. 'q' → logprob: -1.9565914869308472
    3. ' queue' → logprob: -2.3315913677215576
    4. '   ' → logprob: -2.8315913677215576
    5. ' d' → logprob: -4.206591606140137
    6. 'd' → logprob: -4.581591606140137
    7. ' ' → logprob: -4.706591606140137
    8. 'queue' → logprob: -4.956591606140137
    9. ' if' → logprob: -5.331591606140137
    10. ' visited' → logprob: -5.581591606140137

Token 21: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6742417216300964
    2. ' =' → logprob: -1.6742417812347412
    3. '=' → logprob: -2.174241781234741
    4. '.append' → logprob: -2.299241781234741
    5. 'ue' → logprob: -3.424241781234741
    6. '.e' → logprob: -3.674241781234741
    7. 'e' → logprob: -4.549241542816162
    8. 'u' → logprob: -4.549241542816162
    9. '.enqueue' → logprob: -5.299241542816162
    10. ' ' → logprob: -6.674241542816162

Token 22: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.01815052703022957
    2. 'deque' → logprob: -4.018150329589844
    3. 'Deque' → logprob: -15.143150329589844
    4. ' de' → logprob: -16.268150329589844
    5. ' collections' → logprob: -16.393150329589844
    6. ' dq' → logprob: -16.518150329589844
    7. ' dequeue' → logprob: -17.518150329589844
    8. 'de' → logprob: -17.768150329589844
    9. '	de' → logprob: -17.893150329589844
    10. ' ' → logprob: -19.143150329589844

Token 23: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27714866399765015
    2. '(A' → logprob: -1.777148723602295
    3. '()' → logprob: -2.902148723602295
    4. '([' → logprob: -4.152148723602295
    5. '([(' → logprob: -6.777148723602295
    6. '([]' → logprob: -7.277148723602295
    7. '((' → logprob: -8.152148246765137
    8. ' (' → logprob: -10.527148246765137
    9. '[(' → logprob: -10.902148246765137
    10. '(['' → logprob: -11.152148246765137

Token 24: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.539832353591919
    2. '   ' → logprob: -1.539832353591919
    3. 'dq' → logprob: -2.039832353591919
    4. ' dq' → logprob: -3.789832353591919
    5. ' d' → logprob: -4.28983211517334
    6. '    ' → logprob: -4.53983211517334
    7. ' ' → logprob: -4.78983211517334
    8. '	d' → logprob: -5.66483211517334
    9. '[d' → logprob: -5.66483211517334
    10. '    
' → logprob: -5.78983211517334

Token 25: ' dq' (ID: 164235)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' (adapté à ' dq') → logprob: -0.6896724104881287
    2. ' dq' → logprob: -0.9396724104881287
    3. 'd' → logprob: -2.5646724700927734
    4. '   ' → logprob: -3.9396724700927734
    5. ' d' → logprob: -4.689672470092773
    6. ' ' → logprob: -7.564672470092773
    7. '    ' → logprob: -7.814672470092773
    8. '	d' → logprob: -8.564672470092773
    9. 'q' → logprob: -8.814672470092773
    10. '  ' → logprob: -9.314672470092773

Token 26: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3876849412918091
    2. '.' → logprob: -1.137684941291809
    3. '.put' → logprob: -8.01268482208252
    4. '.push' → logprob: -8.63768482208252
    5. '.enqueue' → logprob: -9.26268482208252
    6. '.extend' → logprob: -9.63768482208252
    7. '.pop' → logprob: -9.76268482208252
    8. '.add' → logprob: -10.13768482208252
    9. ' .' → logprob: -11.38768482208252
    10. ').' → logprob: -11.76268482208252

Token 27: '(' (ID: 7)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.7687157988548279
    2. '(' → logprob: -1.2687158584594727
    3. '(A' → logprob: -1.3937158584594727
    4. '((' → logprob: -5.518715858459473
    5. '('' → logprob: -6.268715858459473
    6. '(s' → logprob: -7.268715858459473
    7. '(a' → logprob: -8.643715858459473
    8. '(start' → logprob: -9.643715858459473
    9. '(i' → logprob: -10.143715858459473
    10. '(None' → logprob: -11.143715858459473

Token 28: '0' (ID: 15)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.039157141000032425
    2. '0' → logprob: -3.5391571521759033
    3. '(' → logprob: -5.289156913757324
    4. 'A' → logprob: -6.664156913757324
    5. 's' → logprob: -7.039156913757324
    6. '(d' → logprob: -7.289156913757324
    7. ' d' → logprob: -7.289156913757324
    8. '1' → logprob: -8.914156913757324
    9. ')' → logprob: -8.914156913757324
    10. '(A' → logprob: -8.914156913757324

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.848420551046729e-05
    2. ' )' → logprob: -10.0000581741333
    3. ')
' → logprob: -11.3750581741333
    4. '   ' → logprob: -15.2500581741333
    5. '))' → logprob: -15.5000581741333
    6. ',' → logprob: -15.5000581741333
    7. '')' → logprob: -15.6250581741333
    8. '),' → logprob: -16.000059127807617
    9. '`)' → logprob: -16.250059127807617
    10. ')#' → logprob: -16.375059127807617

Token 30: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09156809747219086
    2. ' 
' → logprob: -3.4665679931640625
    3. '<|end|>' → logprob: -4.2165679931640625
    4. ' ' → logprob: -4.3415679931640625
    5. '  
' → logprob: -4.8415679931640625
    6. '    
' → logprob: -5.0915679931640625
    7. '   ' → logprob: -5.2165679931640625
    8. '   
' → logprob: -6.0915679931640625
    9. ')' → logprob: -6.7165679931640625
    10. ' while' → logprob: -7.2165679931640625

Token 31: ' d' (ID: 272)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.31066808104515076
    2. 'while' → logprob: -1.4356681108474731
    3. '   ' → logprob: -4.810667991638184
    4. 'visited' → logprob: -4.935667991638184
    5. ' d' → logprob: -5.310667991638184
    6. ' visited' → logprob: -5.560667991638184
    7. ' ' → logprob: -6.310667991638184
    8. '	while' → logprob: -6.685667991638184
    9. 'd' (adapté à ' d') → logprob: -6.810667991638184
    10. '
' → logprob: -8.810667991638184

Token 32: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012446361361071467
    2. '[q' → logprob: -7.62624454498291
    3. 'q' → logprob: -7.87624454498291
    4. 'p' → logprob: -9.00124454498291
    5. '[i' → logprob: -9.75124454498291
    6. 'ist' → logprob: -9.87624454498291
    7. 'e' → logprob: -10.25124454498291
    8. '[e' → logprob: -10.75124454498291
    9. 'istance' → logprob: -10.87624454498291
    10. '[p' → logprob: -11.62624454498291

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000721487682312727
    2. ' ' → logprob: -7.250721454620361
    3. '[' → logprob: -12.75072193145752
    4. ']' → logprob: -12.75072193145752
    5. ')' → logprob: -13.25072193145752
    6. '   ' → logprob: -13.75072193145752
    7. '1' → logprob: -14.62572193145752
    8. '])' → logprob: -14.81322193145752
    9. ' ]' → logprob: -15.25072193145752
    10. ')]' → logprob: -15.62572193145752

Token 34: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0064133708365261555
    2. ']=' → logprob: -5.756413459777832
    3. ' ]' → logprob: -6.006413459777832
    4. ']==' → logprob: -7.506413459777832
    5. ']+=' → logprob: -9.381413459777832
    6. ')' → logprob: -9.881413459777832
    7. ']!=' → logprob: -10.881413459777832
    8. '[' → logprob: -11.131413459777832
    9. ']<' → logprob: -11.631413459777832
    10. ']>' → logprob: -11.756413459777832

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693358302116394
    2. ' =' → logprob: -0.693358302116394
    3. '[' → logprob: -8.693358421325684
    4. ']' → logprob: -11.443358421325684
    5. ' ' → logprob: -11.693358421325684
    6. '=True' → logprob: -11.818358421325684
    7. ')' → logprob: -12.443358421325684
    8. ' +=' → logprob: -12.443358421325684
    9. '+=' → logprob: -13.443358421325684
    10. ']=' → logprob: -13.568358421325684

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033125809859484434
    2. ' ' → logprob: -5.878312587738037
    3. '1' → logprob: -7.628312587738037
    4. 'True' → logprob: -11.003312110900879
    5. ' True' → logprob: -13.503312110900879
    6. '-' → logprob: -13.628312110900879
    7. 'False' → logprob: -15.128312110900879
    8. 'd' → logprob: -15.503312110900879
    9. '2' → logprob: -15.503312110900879
    10. '  ' → logprob: -15.628312110900879

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023441045777872205
    2. '1' → logprob: -8.625234603881836
    3. ' ' → logprob: -10.125234603881836
    4. 'True' → logprob: -11.375234603881836
    5. '-' → logprob: -13.375234603881836
    6. 'False' → logprob: -14.500234603881836
    7. '9' → logprob: -15.500234603881836
    8. 'd' → logprob: -16.250234603881836
    9. '2' → logprob: -16.250234603881836
    10. '7' → logprob: -16.375234603881836

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33603423833847046
    2. '   ' → logprob: -1.4610342979431152
    3. ' 
' → logprob: -4.461034297943115
    4. ' ' → logprob: -4.586034297943115
    5. '    
' → logprob: -4.586034297943115
    6. ' while' → logprob: -5.586034297943115
    7. '	while' → logprob: -5.586034297943115
    8. '  
' → logprob: -5.961034297943115
    9. '   
' → logprob: -5.961034297943115
    10. '<|end|>' → logprob: -6.086034297943115

Token 39: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5901073217391968
    2. '   ' → logprob: -0.8401073217391968
    3. '	while' → logprob: -4.840107440948486
    4. ' while' → logprob: -5.840107440948486
    5. '    
' → logprob: -6.465107440948486
    6. 'while' → logprob: -7.465107440948486
    7. ' 
' → logprob: -8.090106964111328
    8. '   
' → logprob: -8.340106964111328
    9. '  
' → logprob: -8.965106964111328
    10. '	
' → logprob: -9.340106964111328

Token 40: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6516239047050476
    2. '   ' → logprob: -1.4016239643096924
    3. 'while' (adapté à ' while') → logprob: -1.5266239643096924
    4. '	while' → logprob: -4.651623725891113
    5. '
' → logprob: -5.401623725891113
    6. '    
' → logprob: -7.651623725891113
    7. ' ' → logprob: -8.151623725891113
    8. ' 
' → logprob: -8.401623725891113
    9. '  ' → logprob: -9.651623725891113
    10. '```' → logprob: -9.651623725891113

Token 41: ' len' (ID: 4631)
  Prédit: ' dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dq' → logprob: -0.31368881464004517
    2. ' len' → logprob: -1.8136887550354004
    3. 'dq' → logprob: -2.3136887550354004
    4. 'len' → logprob: -4.9386887550354
    5. 'd' → logprob: -10.063689231872559
    6. '   ' → logprob: -10.563689231872559
    7. ' d' → logprob: -10.688689231872559
    8. '(len' → logprob: -11.063689231872559
    9. '    ' → logprob: -11.563689231872559
    10. ' ' → logprob: -11.563689231872559

Token 42: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.04859236627817154
    2. '(' → logprob: -3.0485923290252686
    3. ' (' → logprob: -13.048592567443848
    4. '(s' → logprob: -13.798592567443848
    5. '(q' → logprob: -13.923592567443848
    6. '(
' → logprob: -15.048592567443848
    7. '(D' → logprob: -16.04859161376953
    8. '(

' → logprob: -16.17359161376953
    9. '(n' → logprob: -16.54859161376953
    10. ')' → logprob: -16.67359161376953

Token 43: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06303679943084717
    2. ')' → logprob: -2.8130369186401367
    3. ')>' → logprob: -7.313036918640137
    4. '[' → logprob: -9.063036918640137
    5. '[q' → logprob: -9.438036918640137
    6. 'queue' → logprob: -10.313036918640137
    7. ' )' → logprob: -10.688036918640137
    8. '	q' → logprob: -10.813036918640137
    9. '_queue' → logprob: -10.938036918640137
    10. ' ' → logprob: -11.063036918640137

Token 44: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007318547577597201
    2. ')>' → logprob: -7.250731945037842
    3. ' )' → logprob: -10.875731468200684
    4. '>' → logprob: -13.500731468200684
    5. '):' → logprob: -14.000731468200684
    6. ' >' → logprob: -14.875731468200684
    7. ')">' → logprob: -16.500732421875
    8. '))' → logprob: -17.250732421875
    9. '())' → logprob: -17.750732421875
    10. '()' → logprob: -17.875732421875

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04365168511867523
    2. '   ' → logprob: -3.418651580810547
    3. ':' → logprob: -5.543651580810547
    4. '    ' → logprob: -6.668651580810547
    5. ',' → logprob: -7.418651580810547
    6. ' ' → logprob: -7.543651580810547
    7. '        
' → logprob: -7.543651580810547
    8. 'u' → logprob: -7.918651580810547
    9. 'n' → logprob: -8.168651580810547
    10. 'q' → logprob: -8.168651580810547

Token 46: ' v' (ID: 323)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.1787985861301422
    2. ' v' → logprob: -2.4287986755371094
    3. 'u' → logprob: -2.9287986755371094
    4. 'v' (adapté à ' v') → logprob: -4.803798675537109
    5. '   ' → logprob: -5.553798675537109
    6. ' n' → logprob: -5.803798675537109
    7. 'n' → logprob: -6.303798675537109
    8. ' node' → logprob: -6.428798675537109
    9. ' current' → logprob: -6.553798675537109
    10. ' x' → logprob: -7.553798675537109

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05494660884141922
    2. '=' → logprob: -2.9299466609954834
    3. ',' → logprob: -10.054946899414062
    4. ' =
' → logprob: -11.429946899414062
    5. ')' → logprob: -12.429946899414062
    6. ' ' → logprob: -12.804946899414062
    7. '.' → logprob: -13.179946899414062
    8. ' =
' → logprob: -15.054946899414062
    9. ')=' → logprob: -15.804946899414062
    10. '   ' → logprob: -15.804946899414062

Token 48: ' dq' (ID: 164235)
  Prédit: ' dq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dq' → logprob: -0.0036003058776259422
    2. 'dq' → logprob: -5.628600120544434
    3. 'd' → logprob: -16.00360107421875
    4. ' ' → logprob: -16.62860107421875
    5. ' ' → logprob: -17.00360107421875
    6. ' d' → logprob: -17.00360107421875
    7. '	d' → logprob: -18.00360107421875
    8. ' deque' → logprob: -18.25360107421875
    9. 'deque' → logprob: -19.87860107421875
    10. ' 
' → logprob: -19.87860107421875

Token 49: '.pop' (ID: 15746)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.656383680412546e-05
    2. '.' → logprob: -10.125046730041504
    3. '.pop' → logprob: -12.000046730041504
    4. 'p' → logprob: -15.750046730041504
    5. ' .' → logprob: -16.125045776367188
    6. '```' → logprob: -16.500045776367188
    7. '>.' → logprob: -18.500045776367188
    8. '   ' → logprob: -18.625045776367188
    9. ').' → logprob: -19.500045776367188
    10. 'pop' → logprob: -19.625045776367188

Token 50: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0557398647069931
    2. 'left' → logprob: -3.4307398796081543
    3. '(' → logprob: -3.9307398796081543
    4. 'le' → logprob: -6.805739879608154
    5. 'lef' → logprob: -7.305739879608154
    6. 'Left' → logprob: -8.680739402770996
    7. 'opleft' → logprob: -9.555739402770996
    8. ' Lef' → logprob: -9.930739402770996
    9. '_left' → logprob: -10.305739402770996
    10. ')' → logprob: -10.680739402770996

Token 51: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3783142566680908
    2. '<|end|>' → logprob: -2.128314256668091
    3. '       ' → logprob: -2.878314256668091
    4. ')' → logprob: -3.503314256668091
    5. ':' → logprob: -3.878314256668091
    6. ' if' → logprob: -4.003314018249512
    7. '
' → logprob: -4.378314018249512
    8. '  ' → logprob: -4.628314018249512
    9. ',' → logprob: -4.753314018249512
    10. 'v' → logprob: -5.003314018249512

Token 52: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3570766746997833
    2. '   ' → logprob: -1.857076644897461
    3. '
' → logprob: -3.357076644897461
    4. ' for' → logprob: -3.732076644897461
    5. '       ' → logprob: -3.857076644897461
    6. 'for' (adapté à ' for') → logprob: -4.732076644897461
    7. ' if' → logprob: -4.732076644897461
    8. ')' → logprob: -4.732076644897461
    9. 'if' → logprob: -4.857076644897461
    10. ':
' → logprob: -4.982076644897461

Token 53: ' i' (ID: 575)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.018216552212834358
    2. 'u' → logprob: -4.143216609954834
    3. ' w' → logprob: -7.018216609954834
    4. ' i' → logprob: -8.518216133117676
    5. ' ' → logprob: -8.893216133117676
    6. ' e' → logprob: -9.018216133117676
    7. 'neighbors' → logprob: -9.018216133117676
    8. ' n' → logprob: -9.143216133117676
    9. 'neighbor' → logprob: -9.143216133117676
    10. ' neighbors' → logprob: -9.518216133117676

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009287898428738117
    2. 'in' → logprob: -5.0092878341674805
    3. ' ' → logprob: -7.0092878341674805
    4. 'n' → logprob: -7.8842878341674805
    5. '   ' → logprob: -8.38428783416748
    6. ')' → logprob: -8.38428783416748
    7. ',' → logprob: -8.50928783416748
    8. '  ' → logprob: -8.50928783416748
    9. ' n' → logprob: -8.75928783416748
    10. '(' → logprob: -9.88428783416748

Token 55: ' range' (ID: 3352)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.49332377314567566
    2. 'A' → logprob: -1.368323802947998
    3. ' range' → logprob: -2.243323802947998
    4. 'range' → logprob: -3.618323802947998
    5. ' ' → logprob: -6.493323802947998
    6. '(A' → logprob: -8.61832332611084
    7. '	A' → logprob: -9.99332332611084
    8. '   ' → logprob: -10.11832332611084
    9. '  ' → logprob: -10.68082332611084
    10. '[A' → logprob: -10.80582332611084

Token 56: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0011813003802672029
    2. '(' → logprob: -6.751181125640869
    3. 'len' → logprob: -12.251181602478027
    4. '(n' → logprob: -13.126181602478027
    5. '(A' → logprob: -13.251181602478027
    6. ' len' → logprob: -13.626181602478027
    7. ' (' → logprob: -14.126181602478027
    8. '(l' → logprob: -15.751181602478027
    9. '(s' → logprob: -16.50118064880371
    10. '<len' → logprob: -16.62618064880371

Token 57: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0036566031631082296
    2. '(' → logprob: -5.628656387329102
    3. ' (' → logprob: -10.878656387329102
    4. 'A' → logprob: -11.628656387329102
    5. '(a' → logprob: -11.878656387329102
    6. ')' → logprob: -11.878656387329102
    7. '(
' → logprob: -12.128656387329102
    8. '(s' → logprob: -13.003656387329102
    9. ' )' → logprob: -13.878656387329102
    10. '((' → logprob: -14.128656387329102

Token 58: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.004669476300477982
    2. '[' → logprob: -5.379669666290283
    3. '))' → logprob: -10.629669189453125
    4. 'v' → logprob: -10.879669189453125
    5. ' [' → logprob: -13.129669189453125
    6. '	v' → logprob: -14.379669189453125
    7. '   ' → logprob: -14.504669189453125
    8. '[V' → logprob: -14.629669189453125
    9. '[
' → logprob: -15.129669189453125
    10. ' v' → logprob: -15.379669189453125

Token 59: '])-' (ID: 160447)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.005454786121845245
    2. '])):
' → logprob: -6.130455017089844
    3. ')):' → logprob: -7.130455017089844
    4. ']' → logprob: -7.255455017089844
    5. ']):' → logprob: -7.255455017089844
    6. '']))' → logprob: -8.005455017089844
    7. '[' → logprob: -8.130455017089844
    8. '))' → logprob: -8.505455017089844
    9. '])' → logprob: -8.755455017089844
    10. '"]))' → logprob: -11.380455017089844

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019257364328950644
    2. ' ' → logprob: -8.625192642211914
    3. '0' → logprob: -12.000192642211914
    4. '   ' → logprob: -12.750192642211914
    5. ')' → logprob: -13.125192642211914
    6. ':' → logprob: -15.000192642211914
    7. '  ' → logprob: -15.250192642211914
    8. '2' → logprob: -15.500192642211914
    9. '```' → logprob: -15.875192642211914
    10. '<|end|>' → logprob: -15.875192642211914

Token 61: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.6765832901000977
    2. ',' → logprob: -0.8015832901000977
    3. '):' → logprob: -3.3015832901000977
    4. ' ,' → logprob: -5.551583290100098
    5. ')' → logprob: -7.176583290100098
    6. '):-' → logprob: -7.426583290100098
    7. ' ,-' → logprob: -7.801583290100098
    8. ' ):' → logprob: -8.301583290100098
    9. '-' → logprob: -9.551583290100098
    10. ' -' → logprob: -10.301583290100098

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -17.1875
    4. ' -' → logprob: -17.9375
    5. ',' → logprob: -18.125
    6. '
' → logprob: -18.125
    7. '   ' → logprob: -18.1875
    8. '۱' → logprob: -18.3125
    9. '  ' → logprob: -18.375
    10. '１' → logprob: -18.75

Token 63: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.03372730314731598
    2. ',' → logprob: -3.4087274074554443
    3. '-' → logprob: -10.408727645874023
    4. ' ,-' → logprob: -10.408727645874023
    5. ',--' → logprob: -12.283727645874023
    6. ' ,' → logprob: -12.408727645874023
    7. '1' → logprob: -12.908727645874023
    8. '```' → logprob: -13.533727645874023
    9. ',-

' → logprob: -13.533727645874023
    10. ',-
' → logprob: -13.533727645874023

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۱' → logprob: -17.875003814697266
    4. '   ' → logprob: -17.875003814697266
    5. '  ' → logprob: -18.250003814697266
    6. '```' → logprob: -18.500003814697266
    7. '１' → logprob: -18.687503814697266
    8. '    ' → logprob: -18.875003814697266
    9. '১' → logprob: -19.062503814697266
    10. '2' → logprob: -19.437503814697266

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19373945891857147
    2. ',' → logprob: -1.818739414215088
    3. ')' → logprob: -4.568739414215088
    4. '):
' → logprob: -6.568739414215088
    5. ',-' → logprob: -7.193739414215088
    6. ':' → logprob: -7.443739414215088
    7. ' ):' → logprob: -8.443739891052246
    8. ' ,' → logprob: -8.818739891052246
    9. '):-' → logprob: -8.943739891052246
    10. ',:)' → logprob: -9.568739891052246

Token 66: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18371886014938354
    2. '<|end|>' → logprob: -1.9337189197540283
    3. '       ' → logprob: -4.433718681335449
    4. ')' → logprob: -5.683718681335449
    5. ' if' → logprob: -6.558718681335449
    6. ' )' → logprob: -6.808718681335449
    7. '        ' → logprob: -6.933718681335449
    8. '           ' → logprob: -7.183718681335449
    9. '   ' → logprob: -7.308718681335449
    10. ':' → logprob: -7.683718681335449

Token 67: ' f' (ID: 285)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023024514317512512
    2. '<|end|>' → logprob: -3.898024559020996
    3. ' if' → logprob: -6.398024559020996
    4. ' )' → logprob: -8.773024559020996
    5. ' 
' → logprob: -8.773024559020996
    6. 's' → logprob: -9.273024559020996
    7. 'if' → logprob: -9.398024559020996
    8. ')' → logprob: -9.898024559020996
    9. '  ' → logprob: -10.023024559020996
    10. ' ,' → logprob: -10.773024559020996

Token 68: ' =' (ID: 314)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.4067704677581787
    2. ' ' → logprob: -1.5317704677581787
    3. 'or' → logprob: -1.6567704677581787
    4. ' A' → logprob: -2.6567704677581787
    5. '   ' → logprob: -2.9067704677581787
    6. '  ' → logprob: -3.2817704677581787
    7. ')' → logprob: -3.7817704677581787
    8. 'rom' → logprob: -4.156770706176758
    9. ']' → logprob: -4.281770706176758
    10. 'a' → logprob: -4.406770706176758

Token 69: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02681409753859043
    2. ' A' → logprob: -3.6518139839172363
    3. 'i' → logprob: -9.151814460754395
    4. '1' → logprob: -9.151814460754395
    5. 'v' → logprob: -9.151814460754395
    6. 'd' → logprob: -9.901814460754395
    7. '   ' → logprob: -10.151814460754395
    8. '0' → logprob: -10.276814460754395
    9. ' ' → logprob: -11.401814460754395
    10. '	A' → logprob: -11.776814460754395

Token 70: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.3676733690081164e-05
    2. '[' → logprob: -10.87502384185791
    3. 'v' → logprob: -13.00002384185791
    4. '<|end|>' → logprob: -14.75002384185791
    5. ')v' → logprob: -15.00002384185791
    6. '[s' → logprob: -15.00002384185791
    7. '[f' → logprob: -15.37502384185791
    8. '[i' → logprob: -15.75002384185791
    9. '[
' → logprob: -16.000022888183594
    10. ' [' → logprob: -16.000022888183594

Token 71: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.010155864991247654
    2. ']' → logprob: -4.76015567779541
    3. ')[' → logprob: -7.76015567779541
    4. '[i' → logprob: -7.76015567779541
    5. '[' → logprob: -7.88515567779541
    6. ')' → logprob: -8.76015567779541
    7. ' ][' → logprob: -9.51015567779541
    8. '])' → logprob: -10.88515567779541
    9. '   ' → logprob: -11.26015567779541
    10. ' ' → logprob: -12.01015567779541

Token 72: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.3458322731312364e-06
    2. ' i' → logprob: -12.000007629394531
    3. 'v' → logprob: -15.000007629394531
    4. '[i' → logprob: -15.500007629394531
    5. ' ' → logprob: -15.625007629394531
    6. ')i' → logprob: -16.25000762939453
    7. ']' → logprob: -16.37500762939453
    8. ')' → logprob: -16.50000762939453
    9. '   ' → logprob: -16.62500762939453
    10. '	i' → logprob: -16.87500762939453

Token 73: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09304030984640121
    2. '])' → logprob: -3.0930402278900146
    3. ')' → logprob: -4.093040466308594
    4. ']==' → logprob: -4.343040466308594
    5. ']>' → logprob: -5.843040466308594
    6. ' ]' → logprob: -6.093040466308594
    7. '[' → logprob: -6.093040466308594
    8. ']!=' → logprob: -6.593040466308594
    9. '][' → logprob: -6.843040466308594
    10. ']
' → logprob: -6.843040466308594

Token 74: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1641892194747925
    2. '<|end|>' → logprob: -1.4141892194747925
    3. '           ' → logprob: -1.6641892194747925
    4. ' 
' → logprob: -1.7891892194747925
    5. ' ' → logprob: -3.789189338684082
    6. '   ' → logprob: -4.414189338684082
    7. ')' → logprob: -4.539189338684082
    8. '
' → logprob: -5.039189338684082
    9. '            
' → logprob: -5.164189338684082
    10. '  
' → logprob: -5.289189338684082

Token 75: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07141528278589249
    2. 'if' (adapté à ' if') → logprob: -2.6964151859283447
    3. ' ' → logprob: -7.321415424346924
    4. '<|end|>' → logprob: -7.696415424346924
    5. '           ' → logprob: -8.696414947509766
    6. '            ' → logprob: -10.446414947509766
    7. '0' → logprob: -10.571414947509766
    8. ')' → logprob: -10.696414947509766
    9. '    ' → logprob: -10.946414947509766
    10. '   ' → logprob: -11.446414947509766

Token 76: ' f' (ID: 285)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.13164539635181427
    2. 'd' → logprob: -2.131645441055298
    3. ' not' → logprob: -5.881645202636719
    4. ' f' → logprob: -6.631645202636719
    5. 'f' → logprob: -7.881645202636719
    6. ' ' → logprob: -9.006645202636719
    7. 'not' → logprob: -9.756645202636719
    8. ' ' → logprob: -11.506645202636719
    9. '   ' → logprob: -11.944145202636719
    10. '	d' → logprob: -12.319145202636719

Token 77: ' ==' (ID: 951)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4622589349746704
    2. ' !=' → logprob: -1.9622589349746704
    3. '!=' → logprob: -2.712258815765381
    4. ' ==' → logprob: -3.337258815765381
    5. ' is' → logprob: -3.587258815765381
    6. 'not' → logprob: -3.587258815765381
    7. '!=-' → logprob: -4.212258815765381
    8. ' >=' → logprob: -4.587258815765381
    9. '>=' → logprob: -4.837258815765381
    10. ' in' → logprob: -4.837258815765381

Token 78: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6221835017204285
    2. '1' → logprob: -1.4971835613250732
    3. '0' → logprob: -1.7471835613250732
    4. '-' → logprob: -3.3721835613250732
    5. ' -' → logprob: -3.9971835613250732
    6. ''' → logprob: -5.372183322906494
    7. ' '' → logprob: -6.122183322906494
    8. '.' → logprob: -7.247183322906494
    9. ''#' → logprob: -7.497183322906494
    10. 'd' → logprob: -7.622183322906494

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6941772699356079
    2. '0' → logprob: -1.069177269935608
    3. '-' → logprob: -1.944177269935608
    4. ' ' → logprob: -5.319177150726318
    5. 'd' → logprob: -5.944177150726318
    6. 'None' → logprob: -6.319177150726318
    7. ' -' → logprob: -6.569177150726318
    8. ''' → logprob: -7.194177150726318
    9. 'f' → logprob: -7.694177150726318
    10. '.' → logprob: -7.944177150726318

Token 80: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016209619119763374
    2. 'and' → logprob: -4.141209602355957
    3. ' ' → logprob: -8.766209602355957
    4. ':' → logprob: -11.766209602355957
    5. ' a' → logprob: -13.266209602355957
    6. '        ' → logprob: -13.266209602355957
    7. '	and' → logprob: -13.516209602355957
    8. '    ' → logprob: -13.641209602355957
    9. ' :' → logprob: -13.766209602355957
    10. ' an' → logprob: -14.141209602355957

Token 81: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.06269000470638275
    2. 'd' → logprob: -2.812690019607544
    3. '    ' → logprob: -8.187689781188965
    4. ' not' → logprob: -8.187689781188965
    5. ' ' → logprob: -9.312689781188965
    6. '   ' → logprob: -10.437689781188965
    7. '	d' → logprob: -11.187689781188965
    8. 'not' → logprob: -11.812689781188965
    9. ' ' → logprob: -12.312689781188965
    10. '            ' → logprob: -12.312689781188965

Token 82: '[i' (ID: 1768)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.006966609042137861
    2. '[' → logprob: -5.256966590881348
    3. '[i' → logprob: -6.631966590881348
    4. '[v' → logprob: -8.506966590881348
    5. ' [' → logprob: -9.381966590881348
    6. 'f' → logprob: -9.881966590881348
    7. ' f' → logprob: -10.506966590881348
    8. '[
' → logprob: -11.631966590881348
    9. '[a' → logprob: -12.131966590881348
    10. '	f' → logprob: -12.506966590881348

Token 83: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3066738247871399
    2. '[' → logprob: -1.5566737651824951
    3. '==' → logprob: -4.306674003601074
    4. '==-' → logprob: -4.431674003601074
    5. ' ' → logprob: -4.556674003601074
    6. ' <' → logprob: -5.556674003601074
    7. ']' → logprob: -5.681674003601074
    8. '<' → logprob: -5.931674003601074
    9. ')' → logprob: -6.181674003601074
    10. ']==' → logprob: -6.306674003601074

Token 84: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3204842209815979
    2. '[' → logprob: -2.320484161376953
    3. '==' → logprob: -2.445484161376953
    4. '==-' → logprob: -3.320484161376953
    5. '<' → logprob: -3.820484161376953
    6. ' ' → logprob: -4.320484161376953
    7. '=' → logprob: -4.570484161376953
    8. ']==' → logprob: -6.695484161376953
    9. ' is' → logprob: -7.070484161376953
    10. 'is' → logprob: -7.195484161376953

Token 85: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1409500539302826
    2. ' -' → logprob: -2.5159499645233154
    3. 'float' → logprob: -3.5159499645233154
    4. ' float' → logprob: -4.8909502029418945
    5. '100' → logprob: -5.1409502029418945
    6. '10' → logprob: -6.0159502029418945
    7. ' ' → logprob: -6.5159502029418945
    8. '999' → logprob: -6.6409502029418945
    9. '99' → logprob: -7.6409502029418945
    10. 'None' → logprob: -7.7659502029418945

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.750003814697266
    3. '2' → logprob: -14.687503814697266
    4. '-' → logprob: -16.000003814697266
    5. '```' → logprob: -16.937503814697266
    6. '   ' → logprob: -17.437503814697266
    7. '۱' → logprob: -17.687503814697266
    8. '  ' → logprob: -17.687503814697266
    9. '

' → logprob: -17.812503814697266
    10. ' -' → logprob: -18.000003814697266

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024517537094652653
    2. '):' → logprob: -6.6274518966674805
    3. ':
' → logprob: -6.8774518966674805
    4. ' :' → logprob: -10.50245189666748
    5. '):
' → logprob: -10.62745189666748
    6. ')' → logprob: -11.00245189666748
    7. '<|end|>' → logprob: -12.25245189666748
    8. '               ' → logprob: -12.37745189666748
    9. ' and' → logprob: -12.62745189666748
    10. '       ' → logprob: -13.00245189666748

Token 88: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011771338991820812
    2. ':' → logprob: -5.761771202087402
    3. ')' → logprob: -6.511771202087402
    4. ' ' → logprob: -6.636771202087402
    5. '                ' → logprob: -6.761771202087402
    6. '):' → logprob: -6.886771202087402
    7. '<|end|>' → logprob: -7.386771202087402
    8. '              ' → logprob: -7.511771202087402
    9. '                
' → logprob: -7.636771202087402
    10. '):
' → logprob: -8.011771202087402

Token 89: ' d' (ID: 272)
  Prédit: ' dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dq' → logprob: -0.7850662469863892
    2. '                ' → logprob: -1.7850662469863892
    3. ' d' → logprob: -1.9100662469863892
    4. ' ' → logprob: -1.9100662469863892
    5. ' 
' → logprob: -3.9100661277770996
    6. '               ' → logprob: -4.1600661277771
    7. '                   ' → logprob: -4.5350661277771
    8. 'dq' → logprob: -4.6600661277771
    9. 'd' (adapté à ' d') → logprob: -4.9100661277771
    10. '                    ' → logprob: -5.4100661277771

Token 90: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02661771886050701
    2. '[' → logprob: -3.6516177654266357
    3. '[I' → logprob: -8.151618003845215
    4. 'i' → logprob: -11.151618003845215
    5. '[
' → logprob: -12.401618003845215
    6. '<|end|>' → logprob: -13.401618003845215
    7. '[j' → logprob: -13.526618003845215
    8. '[:]' → logprob: -13.526618003845215
    9. ' ' → logprob: -13.901618003845215
    10. ' [' → logprob: -14.151618003845215

Token 91: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42422494292259216
    2. ' =' → logprob: -1.4242249727249146
    3. ')' → logprob: -2.299224853515625
    4. '=' → logprob: -5.799224853515625
    5. ' ' → logprob: -7.424224853515625
    6. ' ]' → logprob: -7.674224853515625
    7. ']=' → logprob: -8.049224853515625
    8. ')=' → logprob: -9.674224853515625
    9. ' )' → logprob: -9.799224853515625
    10. '<|end|>' → logprob: -10.174224853515625

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004089796915650368
    2. '=' → logprob: -5.504089832305908
    3. ' ' → logprob: -11.50408935546875
    4. ')' → logprob: -14.25408935546875
    5. ' =
' → logprob: -15.62908935546875
    6. ',' → logprob: -15.75408935546875
    7. '<|end|>' → logprob: -16.50408935546875
    8. '.' → logprob: -16.62908935546875
    9. ' =)' → logprob: -17.00408935546875
    10. '  ' → logprob: -17.00408935546875

Token 93: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.05489717796444893
    2. 'd' → logprob: -2.9298970699310303
    3. ' ' → logprob: -11.30489730834961
    4. '	d' → logprob: -13.55489730834961
    5. ')d' → logprob: -14.80489730834961
    6. '    ' → logprob: -15.05489730834961
    7. ' ' → logprob: -15.67989730834961
    8. '>d' → logprob: -15.92989730834961
    9. '   ' → logprob: -17.30489730834961
    10. '<|end|>' → logprob: -17.30489730834961

Token 94: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00641266256570816
    2. 'v' → logprob: -5.256412506103516
    3. '[' → logprob: -6.756412506103516
    4. '	v' → logprob: -12.131412506103516
    5. ' v' → logprob: -12.381412506103516
    6. ' ' → logprob: -14.006412506103516
    7. ')v' → logprob: -14.131412506103516
    8. '<v' → logprob: -14.131412506103516
    9. '(v' → logprob: -14.881412506103516
    10. ',v' → logprob: -15.131412506103516

Token 95: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519700527191162
    2. '+' → logprob: -1.5019700527191162
    3. ')+' → logprob: -11.001970291137695
    4. ']+' → logprob: -11.751970291137695
    5. ' ' → logprob: -12.251970291137695
    6. ')' → logprob: -12.376970291137695
    7. ' plus' → logprob: -12.876970291137695
    8. ']' → logprob: -13.876970291137695
    9. '   ' → logprob: -13.876970291137695
    10. '<|end|>' → logprob: -13.876970291137695

Token 96: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31327906250953674
    2. ' +' → logprob: -1.3132790327072144
    3. ' ' → logprob: -11.813279151916504
    4. ' plus' → logprob: -12.438279151916504
    5. '1' → logprob: -13.438279151916504
    6. '[' → logprob: -14.313279151916504
    7. '`' → logprob: -14.438279151916504
    8. ' +
' → logprob: -14.438279151916504
    9. '+
' → logprob: -14.688279151916504
    10. '   ' → logprob: -14.813279151916504

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004898841143585742
    2. ' ' → logprob: -7.625489711761475
    3. '   ' → logprob: -13.375490188598633
    4. '```' → logprob: -15.750490188598633
    5. '  ' → logprob: -17.125490188598633
    6. '' → logprob: -18.625490188598633
    7. '7' → logprob: -18.875490188598633
    8. '	' → logprob: -18.875490188598633
    9. ' ' → logprob: -18.937990188598633
    10. '6' → logprob: -19.187990188598633

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.084206375409849e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.250041007995605
    4. '```' → logprob: -16.37504005432129
    5. '  ' → logprob: -17.50004005432129
    6. '6' → logprob: -18.50004005432129
    7. '7' → logprob: -19.25004005432129
    8. '
' → logprob: -19.31254005432129
    9. '' → logprob: -19.31254005432129
    10. '	' → logprob: -19.56254005432129

Token 99: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006724960170686245
    2. 'dq' → logprob: -6.381724834442139
    3. '
' → logprob: -6.631724834442139
    4. ' dq' → logprob: -7.006724834442139
    5. '                
' → logprob: -7.131724834442139
    6. ',d' → logprob: -8.006725311279297
    7. '	d' → logprob: -8.256725311279297
    8. '			' → logprob: -8.631725311279297
    9. ')' → logprob: -8.881725311279297
    10. ' ' → logprob: -9.256725311279297

Token 100: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007951903156936169
    2. ' dq' → logprob: -5.507951736450195
    3. 'dq' → logprob: -6.007951736450195
    4. '                
' → logprob: -7.757951736450195
    5. '              ' → logprob: -8.257951736450195
    6. '           ' → logprob: -9.257951736450195
    7. '
' → logprob: -9.507951736450195
    8. ' ' → logprob: -9.632951736450195
    9. '                   ' → logprob: -9.882951736450195
    10. '       ' → logprob: -10.007951736450195

Token 101: ' dq' (ID: 164235)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' (adapté à ' dq') → logprob: -0.0003362966235727072
    2. ' dq' → logprob: -8.000336647033691
    3. '               ' → logprob: -15.375336647033691
    4. '   ' → logprob: -15.750336647033691
    5. '           ' → logprob: -15.875336647033691
    6. 'd' → logprob: -16.625335693359375
    7. '                   ' → logprob: -16.750335693359375
    8. 'deque' → logprob: -16.750335693359375
    9. '       ' → logprob: -17.250335693359375
    10. '```' → logprob: -17.500335693359375

Token 102: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004164587706327438
    2. '.' → logprob: -5.629164695739746
    3. 'append' → logprob: -7.504164695739746
    4. '.p' → logprob: -12.129164695739746
    5. '.extend' → logprob: -12.254164695739746
    6. ' append' → logprob: -14.129164695739746
    7. '_append' → logprob: -14.129164695739746
    8. ' .' → logprob: -14.754164695739746
    9. '	append' → logprob: -14.754164695739746
    10. '.app' → logprob: -15.254164695739746

Token 103: 'left' (ID: 4530)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.983476436696947e-05
    2. 'left' → logprob: -9.500089645385742
    3. '(' → logprob: -11.125089645385742
    4. '(f' → logprob: -16.875089645385742
    5. '(left' → logprob: -17.375089645385742
    6. 'i' → logprob: -17.750089645385742
    7. '()' → logprob: -18.000089645385742
    8. ' (' → logprob: -18.375089645385742
    9. '(I' → logprob: -18.375089645385742
    10. '(
' → logprob: -18.500089645385742

Token 104: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.5597102396423e-05
    2. '(' → logprob: -10.250035285949707
    3. '(I' → logprob: -17.000036239624023
    4. ' (' → logprob: -17.250036239624023
    5. '(
' → logprob: -17.875036239624023
    6. '((' → logprob: -18.000036239624023
    7. '()' → logprob: -18.125036239624023
    8. '(s' → logprob: -20.000036239624023
    9. '(f' → logprob: -20.125036239624023
    10. 'i' → logprob: -20.375036239624023

Token 105: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.723973582556937e-05
    2. ')
' → logprob: -11.000017166137695
    3. ' )' → logprob: -15.125017166137695
    4. '       ' → logprob: -16.875017166137695
    5. ')return' → logprob: -17.000017166137695
    6. ')
' → logprob: -17.500017166137695
    7. '<|end|>' → logprob: -17.500017166137695
    8. ')

' → logprob: -18.000017166137695
    9. '))' → logprob: -18.125017166137695
    10. '   ' → logprob: -18.125017166137695

Token 106: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43604573607444763
    2. ' =' → logprob: -1.18604576587677
    3. '=' → logprob: -3.3110456466674805
    4. '<|end|>' → logprob: -6.0610456466674805
    5. 'u' → logprob: -6.3110456466674805
    6. ',' → logprob: -6.4360456466674805
    7. '  ' → logprob: -6.6860456466674805
    8. ')' → logprob: -7.3110456466674805
    9. '  
' → logprob: -7.5610456466674805
    10. '#' → logprob: -7.5610456466674805

Token 108: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6960740089416504
    2. 'int' → logprob: -0.9460740089416504
    3. '5' → logprob: -2.4460740089416504
    4. ' ' → logprob: -3.6960740089416504
    5. '10' → logprob: -6.82107400894165
    6. '7' → logprob: -7.94607400894165
    7. '0' → logprob: -8.821073532104492
    8. '6' → logprob: -9.446073532104492
    9. 'len' → logprob: -11.196073532104492
    10. ' len' → logprob: -11.571073532104492

Token 109: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011846980080008507
    2. '(input' → logprob: -4.511847019195557
    3. '()' → logprob: -7.636847019195557
    4. '('' → logprob: -8.886846542358398
    5. ' (' → logprob: -9.511846542358398
    6. 'input' → logprob: -9.636846542358398
    7. '(
' → logprob: -11.261846542358398
    8. '("' → logprob: -11.761846542358398
    9. '<|end|>' → logprob: -12.386846542358398
    10. '(n' → logprob: -12.511846542358398

Token 110: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.030254634097218513
    2. '()' → logprob: -3.530254602432251
    3. ')' → logprob: -8.030254364013672
    4. '(' → logprob: -9.030254364013672
    5. ' ())' → logprob: -10.905254364013672
    6. '())
' → logprob: -11.155254364013672
    7. '();)' → logprob: -11.655254364013672
    8. '()
' → logprob: -12.155254364013672
    9. '()>' → logprob: -12.530254364013672
    10. '().' → logprob: -13.155254364013672

Token 111: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.043809276074171066
    2. 'd' → logprob: -3.168809175491333
    3. ' A' → logprob: -7.543809413909912
    4. 'a' → logprob: -9.418808937072754
    5. 'n' → logprob: -9.668808937072754
    6. 'graph' → logprob: -10.543808937072754
    7. ' d' → logprob: -10.918808937072754
    8. '
' → logprob: -10.918808937072754
    9. '<|end|>' → logprob: -10.918808937072754
    10. 't' → logprob: -11.043808937072754

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016595888882875443
    2. '=' → logprob: -4.141595840454102
    3. '[' → logprob: -8.516595840454102
    4. ' ' → logprob: -8.641595840454102
    5. ' =[' → logprob: -9.516595840454102
    6. '=[]' → logprob: -9.891595840454102
    7. ',' → logprob: -10.891595840454102
    8. '[]' → logprob: -11.516595840454102
    9. '<|end|>' → logprob: -11.891595840454102
    10. '=[' → logprob: -12.016595840454102

Token 113: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21531933546066284
    2. '[]' → logprob: -1.7153193950653076
    3. '[int' → logprob: -5.2153191566467285
    4. '[n' → logprob: -5.7153191566467285
    5. ' [' → logprob: -6.2153191566467285
    6. '[list' → logprob: -6.7153191566467285
    7. ' []' → logprob: -6.8403191566467285
    8. '[[' → logprob: -8.465319633483887
    9. '[input' → logprob: -8.965319633483887
    10. '[s' → logprob: -10.090319633483887

Token 114: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.062059443444013596
    2. ' for' → logprob: -2.8120594024658203
    3. '<|end|>' → logprob: -9.68705940246582
    4. '
' → logprob: -11.18705940246582
    5. '[' → logprob: -11.93705940246582
    6. 'n' → logprob: -12.18705940246582
    7. ' ' → logprob: -13.43705940246582
    8. ' 
' → logprob: -13.43705940246582
    9. '	for' → logprob: -14.81205940246582
    10. '[n' → logprob: -15.31205940246582

Token 115: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.20473870635032654
    2. '_' → logprob: -1.704738736152649
    3. ' i' → logprob: -5.829738616943359
    4. ' ' → logprob: -7.954738616943359
    5. 'i' → logprob: -10.82973861694336
    6. '_i' → logprob: -11.57973861694336
    7. ' ' → logprob: -14.57973861694336
    8. ' ‌' → logprob: -15.70473861694336
    9. ' in' → logprob: -16.32973861694336
    10. '_=' → logprob: -16.70473861694336

Token 116: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6382824182510376
    2. 'range' → logprob: -1.0132824182510376
    3. ' in' → logprob: -2.263282299041748
    4. ' range' → logprob: -5.638282299041748
    5. ' ' → logprob: -7.388282299041748
    6. 'n' → logprob: -7.513282299041748
    7. ' n' → logprob: -11.513282775878906
    8. '  ' → logprob: -11.763282775878906
    9. ' _' → logprob: -12.263282775878906
    10. 'A' → logprob: -12.263282775878906

Token 117: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.2020991056924686e-05
    2. ' range' → logprob: -10.375032424926758
    3. '(range' → logprob: -15.000032424926758
    4. 'A' → logprob: -16.125032424926758
    5. 'n' → logprob: -16.500032424926758
    6. '	range' → logprob: -16.625032424926758
    7. 'input' → logprob: -17.250032424926758
    8. 'rang' → logprob: -17.500032424926758
    9. 'ran' → logprob: -18.125032424926758
    10. '(' → logprob: -18.375032424926758

Token 118: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.9385402993066236e-05
    2. '(' → logprob: -11.000019073486328
    3. 'n' → logprob: -13.000019073486328
    4. ' n' → logprob: -15.250019073486328
    5. ' (' → logprob: -15.625019073486328
    6. '(
' → logprob: -18.000019073486328
    7. '	n' → logprob: -20.375019073486328
    8. '(range' → logprob: -20.625019073486328
    9. '<n' → logprob: -21.750019073486328
    10. ' ' → logprob: -22.250019073486328

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.052335526794195175
    2. '):
' → logprob: -3.052335500717163
    3. ')' → logprob: -5.677335739135742
    4. ' ):' → logprob: -8.302335739135742
    5. '):
' → logprob: -10.802335739135742
    6. ' ):
' → logprob: -11.052335739135742
    7. ' )' → logprob: -11.552335739135742
    8. ':' → logprob: -11.677335739135742
    9. ')n' → logprob: -12.677335739135742
    10. '):

' → logprob: -12.802335739135742

Token 120: '   ' (ID: 271)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3305083215236664
    2. '   ' → logprob: -1.3305083513259888
    3. 'A' → logprob: -4.080508232116699
    4. ' ' → logprob: -9.4555082321167
    5. '	A' → logprob: -10.3305082321167
    6. '    ' → logprob: -10.5805082321167
    7. '   ' → logprob: -11.0805082321167
    8. '  ' → logprob: -11.4555082321167
    9. '    
' → logprob: -11.4555082321167
    10. ' a' → logprob: -12.2055082321167

Token 121: ' ss' (ID: 20928)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5807907581329346
    2. ' A' → logprob: -0.8307907581329346
    3. ' row' → logprob: -6.0807905197143555
    4. '   ' → logprob: -6.2057905197143555
    5. 'row' → logprob: -8.455790519714355
    6. 'a' → logprob: -8.830790519714355
    7. ' ' → logprob: -10.455790519714355
    8. ' a' → logprob: -10.580790519714355
    9. '	A' → logprob: -10.955790519714355
    10. 's' → logprob: -10.955790519714355

Token 122: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03392944112420082
    2. ' =' → logprob: -3.4089293479919434
    3. '=input' → logprob: -8.658929824829102
    4. 's' → logprob: -10.283929824829102
    5. ' ' → logprob: -10.408929824829102
    6. '   ' → logprob: -11.158929824829102
    7. '=int' → logprob: -11.658929824829102
    8. '=[]' → logprob: -12.283929824829102
    9. '.' → logprob: -12.533929824829102
    10. '=list' → logprob: -13.033929824829102

Token 123: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00038407891406677663
    2. ' list' → logprob: -8.375384330749512
    3. 'input' → logprob: -9.000384330749512
    4. '[list' → logprob: -10.750384330749512
    5. '[input' → logprob: -11.875384330749512
    6. '[' → logprob: -13.625384330749512
    7. '=list' → logprob: -15.875384330749512
    8. ' [' → logprob: -16.375383377075195
    9. ' input' → logprob: -16.375383377075195
    10. '[int' → logprob: -16.625383377075195

Token 124: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0005614925175905228
    2. '(' → logprob: -7.500561714172363
    3. '(input' → logprob: -12.625561714172363
    4. '(int' → logprob: -12.625561714172363
    5. 'map' → logprob: -13.875561714172363
    6. '()' → logprob: -14.375561714172363
    7. ' (' → logprob: -16.125560760498047
    8. '(
' → logprob: -16.250560760498047
    9. '(m' → logprob: -17.125560760498047
    10. ' map' → logprob: -18.125560760498047

Token 125: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00028696097433567047
    2. 'int' → logprob: -8.750287055969238
    3. '(' → logprob: -9.125287055969238
    4. '<int' → logprob: -11.875287055969238
    5. ',int' → logprob: -12.375287055969238
    6. '[int' → logprob: -13.375287055969238
    7. '(input' → logprob: -13.375287055969238
    8. '(str' → logprob: -13.375287055969238
    9. '(
' → logprob: -14.000287055969238
    10. '(lambda' → logprob: -14.500287055969238

Token 126: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2532827854156494
    2. ',input' → logprob: -1.5032827854156494
    3. ',' → logprob: -7.25328254699707
    4. 'input' → logprob: -7.75328254699707
    5. '(' → logprob: -8.50328254699707
    6. ' (' → logprob: -12.25328254699707
    7. ' input' → logprob: -12.25328254699707
    8. '=input' → logprob: -13.50328254699707
    9. ' ,' → logprob: -14.50328254699707
    10. '	input' → logprob: -15.62828254699707

Token 127: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0004311460361350328
    2. ' input' → logprob: -7.750431060791016
    3. ',input' → logprob: -15.375431060791016
    4. '(input' → logprob: -15.750431060791016
    5. ' ' → logprob: -17.750431060791016
    6. '	input' → logprob: -18.250431060791016
    7. 'list' → logprob: -18.500431060791016
    8. '=input' → logprob: -18.500431060791016
    9. '   ' → logprob: -19.500431060791016
    10. '_input' → logprob: -19.875431060791016

Token 128: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.988221684878226e-06
    2. '()' → logprob: -12.000006675720215
    3. ' ().' → logprob: -14.375006675720215
    4. '(' → logprob: -16.87500762939453
    5. '.split' → logprob: -17.75000762939453
    6. '()
' → logprob: -18.25000762939453
    7. 'split' → logprob: -18.25000762939453
    8. '.' → logprob: -18.62500762939453
    9. '   ' → logprob: -18.87500762939453
    10. ' .' → logprob: -19.62500762939453

Token 129: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005577972042374313
    2. 'strip' → logprob: -7.500557899475098
    3. 'rstrip' → logprob: -12.625557899475098
    4. ' split' → logprob: -13.625557899475098
    5. '(split' → logprob: -15.375557899475098
    6. 'spl' → logprob: -17.87555694580078
    7. '().' → logprob: -18.50055694580078
    8. '.split' → logprob: -19.00055694580078
    9. ' strip' → logprob: -19.87555694580078
    10. 's' → logprob: -19.87555694580078

Token 130: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00750404829159379
    2. '())' → logprob: -5.507503986358643
    3. '()' → logprob: -6.382503986358643
    4. '()))
' → logprob: -7.007503986358643
    5. '(' → logprob: -7.882503986358643
    6. '))' → logprob: -8.0075044631958
    7. '('' → logprob: -10.2575044631958
    8. '(','' → logprob: -10.3825044631958
    9. '())))' → logprob: -10.8825044631958
    10. '()));' → logprob: -11.3825044631958

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3040080666542053
    2. 'A' → logprob: -1.4290080070495605
    3. ' A' → logprob: -3.8040080070495605
    4. '	A' → logprob: -9.179008483886719
    5. '
' → logprob: -9.554008483886719
    6. ' ' → logprob: -9.554008483886719
    7. '    
' → logprob: -11.304008483886719
    8. '  ' → logprob: -11.554008483886719
    9. ' 
' → logprob: -11.554008483886719
    10. ')' → logprob: -11.804008483886719

Token 132: ' u' (ID: 337)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07991734147071838
    2. ' A' → logprob: -2.9549174308776855
    3. '   ' → logprob: -3.7049174308776855
    4. '	A' → logprob: -9.579916954040527
    5. ' ' → logprob: -10.454916954040527
    6. '
' → logprob: -11.454916954040527
    7. '  ' → logprob: -12.329916954040527
    8. '_A' → logprob: -12.579916954040527
    9. ' 
' → logprob: -13.704916954040527
    10. '       ' → logprob: -14.079916954040527

Token 133: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0276752710342407
    2. 'n' → logprob: -1.9026752710342407
    3. 'p' → logprob: -1.9026752710342407
    4. ' =' → logprob: -2.027675151824951
    5. '=' → logprob: -2.402675151824951
    6. 'nit' → logprob: -2.777675151824951
    7. 'se' → logprob: -4.027675151824951
    8. 'ser' → logprob: -4.527675151824951
    9. '.append' → logprob: -5.027675151824951
    10. 'sers' → logprob: -5.652675151824951

Token 134: ' ss' (ID: 20928)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.9032753109931946
    2. '[' → logprob: -1.0282752513885498
    3. '[]' → logprob: -1.9032752513885498
    4. '[]
' → logprob: -3.52827525138855
    5. 'len' → logprob: -3.65327525138855
    6. '[len' → logprob: -4.528275489807129
    7. '0' → logprob: -4.903275489807129
    8. 'list' → logprob: -6.278275489807129
    9. '[u' → logprob: -6.278275489807129
    10. 'sum' → logprob: -6.403275489807129

Token 135: '[' (ID: 58)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.20255301892757416
    2. '[' → logprob: -1.9525530338287354
    3. '[:' → logprob: -4.202552795410156
    4. '.append' → logprob: -4.452552795410156
    5. '.extend' → logprob: -5.202552795410156
    6. '[:-' → logprob: -5.702552795410156
    7. '+' → logprob: -5.827552795410156
    8. '.' → logprob: -7.202552795410156
    9. '.copy' → logprob: -7.327552795410156
    10. '.pop' → logprob: -7.577552795410156

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026703074108809233
    2. '1' → logprob: -6.1276702880859375
    3. ':' → logprob: -8.002670288085938
    4. ' ' → logprob: -9.752670288085938
    5. ':-' → logprob: -10.252670288085938
    6. '-' → logprob: -10.627670288085938
    7. '   ' → logprob: -11.752670288085938
    8. '2' → logprob: -11.877670288085938
    9. '[' → logprob: -13.065170288085938
    10. ' :' → logprob: -13.127670288085938

Token 137: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3647408187389374
    2. '-' → logprob: -1.4897408485412598
    3. ')
' → logprob: -2.8647408485412598
    4. ']' → logprob: -4.61474084854126
    5. ')-' → logprob: -5.36474084854126
    6. '])' → logprob: -5.61474084854126
    7. ' )' → logprob: -6.61474084854126
    8. '-)' → logprob: -7.11474084854126
    9. ' -' → logprob: -7.23974084854126
    10. ']-' → logprob: -7.36474084854126

Token 138: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08746561408042908
    2. '#' → logprob: -4.087465763092041
    3. '[' → logprob: -4.087465763092041
    4. ' -' → logprob: -4.337465763092041
    5. '<|end|>' → logprob: -4.587465763092041
    6. '
' → logprob: -4.962465763092041
    7. 'n' → logprob: -5.837465763092041
    8. ';' → logprob: -6.087465763092041
    9. 'A' → logprob: -6.087465763092041
    10. 'u' → logprob: -6.212465763092041

Token 139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '<|end|>' → logprob: -18.125179290771484
    4. '2' → logprob: -18.875179290771484
    5. '0' → logprob: -19.500179290771484
    6. '１' → logprob: -20.250179290771484
    7. '   ' → logprob: -20.562679290771484
    8. ' u' → logprob: -20.625179290771484
    9. '```' → logprob: -21.062679290771484
    10. '[' → logprob: -21.062679290771484

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '2' → logprob: -17.250009536743164
    4. '<|end|>' → logprob: -18.000009536743164
    5. '0' → logprob: -18.250009536743164
    6. 'n' → logprob: -19.000009536743164
    7. '[' → logprob: -19.625009536743164
    8. 'u' → logprob: -19.687509536743164
    9. '   ' → logprob: -19.687509536743164
    10. '```' → logprob: -19.812509536743164

Token 141: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0468649864196777
    2. '<|end|>' → logprob: -1.5468649864196777
    3. ',' → logprob: -1.9218649864196777
    4. '   ' → logprob: -2.0468649864196777
    5. '#' → logprob: -3.0468649864196777
    6. ' A' → logprob: -3.4218649864196777
    7. 'A' → logprob: -3.4218649864196777
    8. 'n' → logprob: -4.296864986419678
    9. 's' → logprob: -4.921864986419678
    10. 'for' → logprob: -5.046864986419678

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4931277334690094
    2. 'A' → logprob: -1.618127703666687
    3. ' A' → logprob: -2.9931278228759766
    4. '<|end|>' → logprob: -3.1181278228759766
    5. 's' → logprob: -3.4931278228759766
    6. 'for' → logprob: -4.368127822875977
    7. 'v' → logprob: -4.493127822875977
    8. ',' → logprob: -4.493127822875977
    9. ' for' → logprob: -5.243127822875977
    10. 'row' → logprob: -5.368127822875977

Token 143: ' row' (ID: 5225)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.40083613991737366
    2. 'A' → logprob: -2.025836229324341
    3. '   ' → logprob: -2.775836229324341
    4. 'row' (adapté à ' row') → logprob: -3.400836229324341
    5. ' v' → logprob: -3.775836229324341
    6. 'l' → logprob: -4.400835990905762
    7. ' A' → logprob: -4.525835990905762
    8. ' row' → logprob: -4.525835990905762
    9. 'a' → logprob: -5.025835990905762
    10. 's' → logprob: -5.025835990905762

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17983606457710266
    2. '=' → logprob: -1.8048360347747803
    3. '=[]' → logprob: -9.67983627319336
    4. ' ' → logprob: -11.17983627319336
    5. 's' → logprob: -11.92983627319336
    6. ' =[' → logprob: -12.67983627319336
    7. ',' → logprob: -13.55483627319336
    8. '=[' → logprob: -14.42983627319336
    9. '.append' → logprob: -14.55483627319336
    10. '=[]
' → logprob: -14.80483627319336

Token 145: ' [' (ID: 723)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.36533141136169434
    2. '[' → logprob: -1.2403314113616943
    3. ' ss' → logprob: -4.865331649780273
    4. ' [' → logprob: -5.365331649780273
    5. '[-' → logprob: -5.865331649780273
    6. '[]' → logprob: -6.615331649780273
    7. '[s' → logprob: -10.115331649780273
    8. '[]
' → logprob: -10.490331649780273
    9. '(ss' → logprob: -10.615331649780273
    10. 'list' → logprob: -10.865331649780273

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2823724150657654
    2. '-' → logprob: -1.4073724746704102
    3. ' -' → logprob: -7.40737247467041
    4. ' ' → logprob: -7.78237247467041
    5. '1' → logprob: -9.28237247467041
    6. ']' → logprob: -9.78237247467041
    7. 'int' → logprob: -11.28237247467041
    8. 'ss' → logprob: -11.78237247467041
    9. '   ' → logprob: -12.40737247467041
    10. ')' → logprob: -12.65737247467041

Token 147: ' for' (ID: 395)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.2532477080821991
    2. ']' → logprob: -1.5032477378845215
    3. ']*(' → logprob: -6.7532477378845215
    4. ' for' → logprob: -8.878247261047363
    5. ' ]' → logprob: -11.878247261047363
    6. 'for' → logprob: -13.003247261047363
    7. ']+' → logprob: -13.753247261047363
    8. ' if' → logprob: -14.878247261047363
    9. ',' → logprob: -15.878247261047363
    10. '*' → logprob: -16.12824821472168

Token 148: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00402912637218833
    2. ' in' → logprob: -6.004029273986816
    3. 'in' → logprob: -7.754029273986816
    4. ' range' → logprob: -7.879029273986816
    5. 'range' → logprob: -8.254029273986816
    6. '_in' → logprob: -8.504029273986816
    7. ' _' → logprob: -8.879029273986816
    8. '_range' → logprob: -9.629029273986816
    9. '_i' → logprob: -10.379029273986816
    10. 'i' → logprob: -10.879029273986816

Token 149: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003681909292936325
    2. 'in' → logprob: -6.2536821365356445
    3. ' range' → logprob: -6.5036821365356445
    4. ' in' → logprob: -8.378682136535645
    5. '(range' → logprob: -11.003682136535645
    6. 'n' → logprob: -12.128682136535645
    7. '(' → logprob: -14.378682136535645
    8. '(n' → logprob: -15.003682136535645
    9. '	range' → logprob: -15.003682136535645
    10. ' ' → logprob: -15.128682136535645

Token 150: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01604105532169342
    2. ' range' → logprob: -4.141041278839111
    3. ' ' → logprob: -13.391040802001953
    4. 'A' → logprob: -13.391040802001953
    5. 'r' → logprob: -13.641040802001953
    6. '	range' → logprob: -14.766040802001953
    7. 'ran' → logprob: -14.891040802001953
    8. '(range' → logprob: -14.891040802001953
    9. 'n' → logprob: -15.141040802001953
    10. '   ' → logprob: -15.141040802001953

Token 151: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011063974350690842
    2. 'n' → logprob: -4.511064052581787
    3. 'range' → logprob: -11.761063575744629
    4. ' n' → logprob: -11.886063575744629
    5. '(' → logprob: -14.261063575744629
    6. ' (' → logprob: -14.636063575744629
    7. '(range' → logprob: -15.761063575744629
    8. ')n' → logprob: -16.011064529418945
    9. ' range' → logprob: -16.261064529418945
    10. '<n' → logprob: -16.761064529418945

Token 152: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0013317868579179049
    2. ']' → logprob: -6.751331806182861
    3. ' ]' → logprob: -9.501331329345703
    4. ')]
' → logprob: -10.501331329345703
    5. ')' → logprob: -10.626331329345703
    6. ' )' → logprob: -10.751331329345703
    7. '])' → logprob: -11.501331329345703
    8. ')])' → logprob: -14.251331329345703
    9. ')]

' → logprob: -14.376331329345703
    10. ']
' → logprob: -14.626331329345703

Token 153: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9372225999832153
    2. '<|end|>' → logprob: -1.8122225999832153
    3. ' for' → logprob: -2.187222480773926
    4. '
' → logprob: -2.187222480773926
    5. '   ' → logprob: -2.437222480773926
    6. ' ' → logprob: -3.312222480773926
    7. '    
' → logprob: -3.812222480773926
    8. '  
' → logprob: -3.937222480773926
    9. '[row' → logprob: -4.312222480773926
    10. ' row' → logprob: -4.812222480773926

Token 154: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21893276274204254
    2. 'for' (adapté à ' for') → logprob: -1.9689327478408813
    3. ' row' → logprob: -3.593932867050171
    4. 'row' → logprob: -3.593932867050171
    5. ' 
' → logprob: -7.343932628631592
    6. '   ' → logprob: -7.968932628631592
    7. ' ' → logprob: -8.34393310546875
    8. ' u' → logprob: -8.71893310546875
    9. 'u' → logprob: -8.84393310546875
    10. '
' → logprob: -8.96893310546875

Token 155: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.23865975439548492
    2. 'x' → logprob: -2.2386598587036133
    3. 'i' → logprob: -2.7386598587036133
    4. ' j' → logprob: -3.9886598587036133
    5. 'v' → logprob: -4.238659858703613
    6. 'w' → logprob: -6.613659858703613
    7. 'e' → logprob: -6.613659858703613
    8. 'k' → logprob: -6.738659858703613
    9. ' i' → logprob: -6.738659858703613
    10. ' x' → logprob: -6.863659858703613

Token 156: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09182087332010269
    2. 'in' → logprob: -2.4668209552764893
    3. ' ' → logprob: -6.21682071685791
    4. ',' → logprob: -7.71682071685791
    5. '(' → logprob: -8.46682071685791
    6. '_' → logprob: -9.46682071685791
    7. '	in' → logprob: -9.96682071685791
    8. ' ,' → logprob: -10.71682071685791
    9. 's' → logprob: -11.71682071685791
    10. '_in' → logprob: -11.96682071685791

Token 157: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16784287989139557
    2. 'ss' → logprob: -2.4178428649902344
    3. ' range' → logprob: -2.9178428649902344
    4. ' ss' → logprob: -4.542842864990234
    5. '(ss' → logprob: -7.667842864990234
    6. '(' → logprob: -8.917842864990234
    7. '(range' → logprob: -10.667842864990234
    8. ' ' → logprob: -10.917842864990234
    9. '  ' → logprob: -11.667842864990234
    10. '[' → logprob: -11.792842864990234

Token 158: '(ss' (ID: 68597)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1788763403892517
    2. '(ss' → logprob: -2.3038763999938965
    3. 'range' → logprob: -2.8038763999938965
    4. 'ss' → logprob: -6.3038763999938965
    5. '(range' → logprob: -7.0538763999938965
    6. ' range' → logprob: -8.553875923156738
    7. '(len' → logprob: -9.178875923156738
    8. '(s' → logprob: -9.553875923156738
    9. 'in' → logprob: -9.678875923156738
    10. '1' → logprob: -9.678875923156738

Token 159: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.184556245803833
    2. '1' → logprob: -1.809556245803833
    3. '(' → logprob: -6.434556007385254
    4. '2' → logprob: -6.809556007385254
    5. ')' → logprob: -7.559556007385254
    6. '0' → logprob: -8.309556007385254
    7. ' ' → logprob: -8.309556007385254
    8. '   ' → logprob: -8.934556007385254
    9. '):' → logprob: -9.059556007385254
    10. ':' → logprob: -9.309556007385254

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005082075484097004
    2. '2' → logprob: -5.380082130432129
    3. ' ' → logprob: -8.380082130432129
    4. '   ' → logprob: -9.630082130432129
    5. '[' → logprob: -10.192582130432129
    6. '
' → logprob: -10.692582130432129
    7. '```' → logprob: -10.817582130432129
    8. '0' → logprob: -11.130082130432129
    9. '       ' → logprob: -11.942582130432129
    10. '3' → logprob: -11.942582130432129

Token 161: ']):
' (ID: 51989)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7394490838050842
    2. ':' → logprob: -2.2394490242004395
    3. ',' → logprob: -2.4894490242004395
    4. '[' → logprob: -2.6144490242004395
    5. ']+' → logprob: -2.7394490242004395
    6. ']' → logprob: -3.3644490242004395
    7. ']):' → logprob: -3.3644490242004395
    8. ' +' → logprob: -3.4894490242004395
    9. '],' → logprob: -3.4894490242004395
    10. '):' → logprob: -3.6144490242004395

Token 162: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.841468334197998
    2. '       ' → logprob: -1.091468334197998
    3. '   ' → logprob: -2.091468334197998
    4. ':
' → logprob: -3.216468334197998
    5. ',' → logprob: -3.341468334197998
    6. ' :' → logprob: -4.841468334197998
    7. '    ' → logprob: -5.216468334197998
    8. ' ,' → logprob: -5.591468334197998
    9. ' ' → logprob: -5.841468334197998
    10. ' :
' → logprob: -6.216468334197998

Token 163: ' idx' (ID: 14016)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -1.0290635824203491
    2. '       ' → logprob: -1.6540635824203491
    3. ' u' → logprob: -1.7790635824203491
    4. ' s' → logprob: -2.1540637016296387
    5. ' ' → logprob: -3.5290637016296387
    6. ' ' → logprob: -3.7790637016296387
    7. '   ' → logprob: -3.9040637016296387
    8. ' x' → logprob: -4.404063701629639
    9. ' i' → logprob: -4.654063701629639
    10. ' idx' → logprob: -4.779063701629639

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17978695034980774
    2. '=' → logprob: -1.8047869205474854
    3. ' ' → logprob: -10.179786682128906
    4. 's' → logprob: -13.804786682128906
    5. '_' → logprob: -14.554786682128906
    6. ',' → logprob: -14.554786682128906
    7. ' =
' → logprob: -14.679786682128906
    8. ' ' → logprob: -15.179786682128906
    9. '=int' → logprob: -15.179786682128906
    10. '   ' → logprob: -15.554786682128906

Token 165: ' ' (ID: 220)
  Prédit: ' ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ss' → logprob: -0.28144916892051697
    2. 'ss' → logprob: -1.4064491987228394
    3. '(ss' → logprob: -9.031449317932129
    4. '	ss' → logprob: -9.906449317932129
    5. 'int' → logprob: -10.031449317932129
    6. ' ' → logprob: -10.906449317932129
    7. 's' → logprob: -10.906449317932129
    8. ':ss' → logprob: -11.656449317932129
    9. '_ss' → logprob: -11.781449317932129
    10. '   ' → logprob: -11.781449317932129

Token 166: '2' (ID: 17)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.012298429384827614
    2. ' ss' → logprob: -4.512298583984375
    3. 'int' → logprob: -6.762298583984375
    4. ' int' → logprob: -9.387298583984375
    5. '(ss' → logprob: -12.512298583984375
    6. 's' → logprob: -13.387298583984375
    7. ' ' → logprob: -13.637298583984375
    8. 'input' → logprob: -14.637298583984375
    9. '   ' → logprob: -14.762298583984375
    10. '	ss' → logprob: -14.762298583984375

Token 167: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13466180860996246
    2. '+' → logprob: -2.509661912918091
    3. '<|end|>' → logprob: -3.884661912918091
    4. '+i' → logprob: -4.134661674499512
    5. '<|end|>' → logprob: -5.134661674499512
    6. ' ' → logprob: -7.509661674499512
    7. ' +
' → logprob: -7.759661674499512
    8. ' +=' → logprob: -8.509661674499512
    9. '+j' → logprob: -8.884661674499512
    10. '   ' → logprob: -9.009661674499512

Token 168: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005943136755377054
    2. ' i' → logprob: -5.130943298339844
    3. ' ' → logprob: -12.130943298339844
    4. 'ss' → logprob: -12.630943298339844
    5. '  ' → logprob: -13.630943298339844
    6. '_i' → logprob: -13.880943298339844
    7. '   ' → logprob: -14.505943298339844
    8. '[i' → logprob: -14.505943298339844
    9. '(i' → logprob: -14.880943298339844
    10. '1' → logprob: -15.130943298339844

Token 169: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7675533294677734
    2. '       ' → logprob: -1.6425533294677734
    3. '
' → logprob: -2.2675533294677734
    4. ' -' → logprob: -2.3925533294677734
    5. '   ' → logprob: -3.3925533294677734
    6. ' ' → logprob: -3.7675533294677734
    7. ' =' → logprob: -4.267553329467773
    8. '           ' → logprob: -4.392553329467773
    9. 'idx' → logprob: -4.642553329467773
    10. ' row' → logprob: -5.267553329467773

Token 170: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.3485502600669861
    2. ' row' → logprob: -1.2235503196716309
    3. '       ' → logprob: -10.598549842834473
    4. '   ' → logprob: -10.723549842834473
    5. 'u' → logprob: -10.973549842834473
    6. '	row' → logprob: -11.473549842834473
    7. ' u' → logprob: -11.723549842834473
    8. ' ' → logprob: -12.473549842834473
    9. '           ' → logprob: -12.848549842834473
    10. 'v' → logprob: -12.848549842834473

Token 172: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014883324911352247
    2. '[idx' → logprob: -9.62514877319336
    3. '[int' → logprob: -9.75014877319336
    4. '[row' → logprob: -11.75014877319336
    5. ' [' → logprob: -12.25014877319336
    6. '[u' → logprob: -12.87514877319336
    7. '][' → logprob: -13.25014877319336
    8. '[
' → logprob: -13.50014877319336
    9. ']' → logprob: -13.62514877319336
    10. 'ss' → logprob: -13.87514877319336

Token 173: 'ss' (ID: 1087)
  Prédit: 'ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.00010223194840364158
    2. ' ss' → logprob: -9.250102043151855
    3. '(ss' → logprob: -12.500102043151855
    4. '   ' → logprob: -13.500102043151855
    5. 'u' → logprob: -14.750102043151855
    6. '	ss' → logprob: -15.625102043151855
    7. 'int' → logprob: -16.125102996826172
    8. 's' → logprob: -16.125102996826172
    9. ' ' → logprob: -16.375102996826172
    10. 'sss' → logprob: -17.000102996826172

Token 174: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00047940885997377336
    2. '[' → logprob: -7.875479221343994
    3. 'idx' → logprob: -9.375479698181152
    4. '0' → logprob: -11.875479698181152
    5. '2' → logprob: -12.875479698181152
    6. '(idx' → logprob: -12.875479698181152
    7. '```' → logprob: -14.125479698181152
    8. '[i' → logprob: -14.375479698181152
    9. ' idx' → logprob: -15.375479698181152
    10. '	idx' → logprob: -15.875479698181152

Token 175: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3645347058773041
    2. ' -' → logprob: -1.2395347356796265
    3. ']' → logprob: -4.614534854888916
    4. '[' → logprob: -5.364534854888916
    5. ']-' → logprob: -7.114534854888916
    6. ' ' → logprob: -8.114534378051758
    7. ' ]' → logprob: -9.364534378051758
    8. '   ' → logprob: -10.739534378051758
    9. ']]' → logprob: -10.739534378051758
    10. '1' → logprob: -11.114534378051758

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011740362970158458
    2. ' ' → logprob: -6.751173973083496
    3. '<|end|>' → logprob: -13.001173973083496
    4. '```' → logprob: -15.376173973083496
    5. 'to' → logprob: -15.501173973083496
    6. ')' → logprob: -15.813673973083496
    7. '   ' → logprob: -15.813673973083496
    8. ']' → logprob: -16.438674926757812
    9. '<|end|>' → logprob: -16.501174926757812
    10. '>' → logprob: -16.688674926757812

Token 177: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004586534574627876
    2. ']=' → logprob: -5.629586696624756
    3. ' ]' → logprob: -7.629586696624756
    4. '=' → logprob: -7.629586696624756
    5. ' =' → logprob: -11.379586219787598
    6. ']+=' → logprob: -13.879586219787598
    7. ')' → logprob: -14.379586219787598
    8. ',' → logprob: -15.754586219787598
    9. '`]' → logprob: -15.754586219787598
    10. ')]' → logprob: -15.879586219787598

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234356038272381
    2. ' =' → logprob: -5.255234241485596
    3. ']=' → logprob: -15.755234718322754
    4. ',' → logprob: -16.130233764648438
    5. ' ' → logprob: -16.255233764648438
    6. ']' → logprob: -16.380233764648438
    7. '=
' → logprob: -17.880233764648438
    8. '=True' → logprob: -17.880233764648438
    9. '+=' → logprob: -17.880233764648438
    10. ')=' → logprob: -18.130233764648438

Token 179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001657565007917583
    2. ' ' → logprob: -8.750165939331055
    3. '   ' → logprob: -11.875165939331055
    4. '  ' → logprob: -16.250165939331055
    5. '<|end|>' → logprob: -16.875165939331055
    6. '           ' → logprob: -17.250165939331055
    7. '```' → logprob: -17.562665939331055
    8. '    ' → logprob: -17.875165939331055
    9. '	' → logprob: -18.000165939331055
    10. '0' → logprob: -18.187665939331055

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0339031834737398e-05
    2. ' ' → logprob: -10.875020027160645
    3. '   ' → logprob: -13.750020027160645
    4. '  ' → logprob: -17.18752098083496
    5. '`' → logprob: -17.31252098083496
    6. '<|end|>' → logprob: -17.56252098083496
    7. '```' → logprob: -17.62502098083496
    8. '۱' → logprob: -17.93752098083496
    9. '１' → logprob: -18.12502098083496
    10. '' → logprob: -18.37502098083496

Token 181: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004658792167901993
    2. '
' → logprob: -5.7546586990356445
    3. 'A' → logprob: -7.3796586990356445
    4. '<|end|>' → logprob: -8.379658699035645
    5. ')' → logprob: -8.504658699035645
    6. ' ' → logprob: -9.004658699035645
    7. '	A' → logprob: -9.379658699035645
    8. '    
' → logprob: -10.129658699035645
    9. ' A' → logprob: -10.129658699035645
    10. '  ' → logprob: -10.629658699035645

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1300879567861557
    2. 'A' → logprob: -2.1300878524780273
    3. ' A' → logprob: -6.255087852478027
    4. '
' → logprob: -7.255087852478027
    5. '	A' → logprob: -8.755087852478027
    6. '<|end|>' → logprob: -9.255087852478027
    7. ' ' → logprob: -9.505087852478027
    8. ')' → logprob: -9.755087852478027
    9. '  ' → logprob: -10.505087852478027
    10. ',' → logprob: -10.880087852478027

Token 183: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.004924308508634567
    2. '   ' → logprob: -5.379924297332764
    3. ' A' → logprob: -8.129924774169922
    4. ' ' → logprob: -12.129924774169922
    5. '	A' → logprob: -13.129924774169922
    6. '  ' → logprob: -14.504924774169922
    7. '
' → logprob: -14.629924774169922
    8. ' 
' → logprob: -15.129924774169922
    9. '    
' → logprob: -15.129924774169922
    10. '       ' → logprob: -15.379924774169922

Token 184: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003195535857230425
    2. '.' → logprob: -5.753195762634277
    3. '.ap' → logprob: -11.878195762634277
    4. '.app' → logprob: -11.878195762634277
    5. '.push' → logprob: -13.378195762634277
    6. '.Append' → logprob: -14.128195762634277
    7. 'append' → logprob: -14.503195762634277
    8. '​.' → logprob: -14.878195762634277
    9. ' .' → logprob: -15.128195762634277
    10. '.add' → logprob: -15.753195762634277

Token 185: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -5.438573680294212e-06
    2. '(' → logprob: -12.250005722045898
    3. 'row' → logprob: -14.500005722045898
    4. '(line' → logprob: -16.6250057220459
    5. '(rows' → logprob: -17.5000057220459
    6. ' row' → logprob: -19.0000057220459
    7. ' (' → logprob: -19.7500057220459
    8. '(
' → logprob: -19.8750057220459
    9. ',row' → logprob: -19.8750057220459
    10. '[row' → logprob: -20.0000057220459

Token 186: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. ')
' → logprob: -11.875007629394531
    3. ' )' → logprob: -13.875007629394531
    4. '))' → logprob: -17.00000762939453
    5. ')`' → logprob: -17.12500762939453
    6. ')n' → logprob: -17.50000762939453
    7. ')#' → logprob: -17.87500762939453
    8. ')return' → logprob: -18.12500762939453
    9. ')a' → logprob: -18.12500762939453
    10. ')
' → logprob: -18.50000762939453

Token 187: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.214019307051785e-05
    2. 'distance' → logprob: -11.000032424926758
    3. '
' → logprob: -12.250032424926758
    4. 'dist' → logprob: -12.500032424926758
    5. '    
' → logprob: -12.750032424926758
    6. 'for' → logprob: -13.000032424926758
    7. '  
' → logprob: -14.750032424926758
    8. ' d' → logprob: -14.875032424926758
    9. '```' → logprob: -15.000032424926758
    10. '#' → logprob: -15.625032424926758

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3688599169254303
    2. '[' → logprob: -2.1188600063323975
    3. ')' → logprob: -2.4938600063323975
    4. '<|end|>' → logprob: -3.1188600063323975
    5. '=' → logprob: -3.6188600063323975
    6. '[:]' → logprob: -4.118859767913818
    7. ' ' → logprob: -4.493859767913818
    8. ',' → logprob: -5.993859767913818
    9. '(' → logprob: -6.243859767913818
    10. ' =[' → logprob: -7.743859767913818

Token 189: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00012356207298580557
    2. ' [-' → logprob: -9.000123977661133
    3. '[' → logprob: -16.000123977661133
    4. ' ' → logprob: -17.875123977661133
    5. '[n' → logprob: -17.875123977661133
    6. '   ' → logprob: -18.000123977661133
    7. '[]' → logprob: -19.250123977661133
    8. '[i' → logprob: -19.250123977661133
    9. '([-' → logprob: -19.750123977661133
    10. '[:-' → logprob: -21.125123977661133

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '2' → logprob: -17.125
    4. '-' → logprob: -18.3125
    5. '   ' → logprob: -19.125
    6. '
' → logprob: -19.125
    7. '１' → logprob: -19.4375
    8. '

' → logprob: -19.6875
    9. '```' → logprob: -19.6875
    10. ' -' → logprob: -19.75

Token 191: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14604997634887695
    2. ']' → logprob: -2.146049976348877
    3. 'for' → logprob: -4.146049976348877
    4. ']*' → logprob: -6.021049976348877
    5. ')' → logprob: -8.021049499511719
    6. ' ]' → logprob: -8.271049499511719
    7. '(n' → logprob: -10.396049499511719
    8. '*n' → logprob: -11.021049499511719
    9. ' n' → logprob: -11.646049499511719
    10. ')n' → logprob: -11.771049499511719

Token 192: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03337940573692322
    2. 'range' → logprob: -4.158379554748535
    3. ' range' → logprob: -4.408379554748535
    4. ' _' → logprob: -5.908379554748535
    5. '(range' → logprob: -6.533379554748535
    6. 'in' → logprob: -7.783379554748535
    7. ' in' → logprob: -8.283379554748535
    8. '_range' → logprob: -8.658379554748535
    9. '_in' → logprob: -13.283379554748535
    10. '(' → logprob: -13.408379554748535

Token 193: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5987255573272705
    2. 'in' → logprob: -0.8487255573272705
    3. ' in' → logprob: -3.8487255573272705
    4. ' range' → logprob: -6.723725318908691
    5. 'n' → logprob: -11.098725318908691
    6. '(range' → logprob: -12.473725318908691
    7. '(n' → logprob: -15.598725318908691
    8. 'i' → logprob: -15.848725318908691
    9. 'for' → logprob: -15.973725318908691
    10. '(' → logprob: -16.973726272583008

Token 194: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078639671206474
    2. ' range' → logprob: -5.5040788650512695
    3. '(range' → logprob: -16.379077911376953
    4. '   ' → logprob: -17.504077911376953
    5. ' ' → logprob: -17.629077911376953
    6. 'ran' → logprob: -18.004077911376953
    7. 'r' → logprob: -18.754077911376953
    8. '  ' → logprob: -19.004077911376953
    9. 'A' → logprob: -19.129077911376953
    10. '	range' → logprob: -19.129077911376953

Token 195: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.91732100979425e-05
    2. 'n' → logprob: -10.875039100646973
    3. 'range' → logprob: -11.375039100646973
    4. '(' → logprob: -12.250039100646973
    5. '(range' → logprob: -13.000039100646973
    6. ' range' → logprob: -13.750039100646973
    7. ')n' → logprob: -14.875039100646973
    8. ' (' → logprob: -15.875039100646973
    9. ' n' → logprob: -16.62504005432129
    10. ']' → logprob: -17.50004005432129

Token 196: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.032328635454177856
    2. ')' → logprob: -4.0323286056518555
    3. ']' → logprob: -4.2823286056518555
    4. '])' → logprob: -8.282328605651855
    5. ')])' → logprob: -12.032328605651855
    6. '])]' → logprob: -12.657328605651855
    7. ')]
' → logprob: -13.157328605651855
    8. ')
' → logprob: -13.657328605651855
    9. ']
' → logprob: -13.657328605651855
    10. '))' → logprob: -14.782328605651855

Token 197: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00019305046589579433
    2. ')' → logprob: -9.125192642211914
    3. ' bfs' → logprob: -10.000192642211914
    4. ')b' → logprob: -11.125192642211914
    5. '```' → logprob: -11.500192642211914
    6. 'd' → logprob: -12.125192642211914
    7. 'dfs' → logprob: -12.750192642211914
    8. '<|end|>' → logprob: -13.500192642211914
    9. '
' → logprob: -13.875192642211914
    10. '#' → logprob: -14.875192642211914

Token 198: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.014187009073793888
    2. 'f' → logprob: -4.264186859130859
    3. 's' → logprob: -10.88918685913086
    4. 'fsi' → logprob: -12.88918685913086
    5. ' fs' → logprob: -13.51418685913086
    6. 'fsp' → logprob: -14.26418685913086
    7. 'fsm' → logprob: -16.01418685913086
    8. '_fs' → logprob: -16.26418685913086
    9. 'ф' → logprob: -16.51418685913086
    10. '	fs' → logprob: -16.88918685913086

Token 199: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.04859747737646103
    2. '(' → logprob: -3.048597574234009
    3. '(
' → logprob: -12.17359733581543
    4. ' (' → logprob: -12.54859733581543
    5. '(n' → logprob: -14.29859733581543
    6. '(

' → logprob: -15.04859733581543
    7. '((' → logprob: -15.92359733581543
    8. '(B' → logprob: -16.04859733581543
    9. '(a' → logprob: -16.42359733581543
    10. '```' → logprob: -17.04859733581543

Token 200: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.356979101896286
    2. ',' → logprob: -1.2319791316986084
    3. '(d' → logprob: -4.981978893280029
    4. '(' → logprob: -6.606978893280029
    5. ' ,' → logprob: -8.481979370117188
    6. 'd' → logprob: -10.731979370117188
    7. ')' → logprob: -10.731979370117188
    8. ',n' → logprob: -11.606979370117188
    9. ',D' → logprob: -11.856979370117188
    10. ',(' → logprob: -12.231979370117188

Token 201: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.250001907348633
    3. ' )' → logprob: -15.000001907348633
    4. ')d' → logprob: -15.750001907348633
    5. '(' → logprob: -15.875001907348633
    6. '))' → logprob: -16.125001907348633
    7. ')`' → logprob: -17.000001907348633
    8. ',)' → logprob: -17.875001907348633
    9. 'd' → logprob: -18.875001907348633
    10. ')n' → logprob: -19.375001907348633

Token 202: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38691282272338867
    2. 'print' → logprob: -1.1369128227233887
    3. '
' → logprob: -10.386913299560547
    4. ' for' → logprob: -11.761913299560547
    5. '```' → logprob: -14.136913299560547
    6. ' print' → logprob: -14.511913299560547
    7. '    
' → logprob: -15.011913299560547
    8. '  
' → logprob: -15.011913299560547
    9. '\n' → logprob: -15.511913299560547
    10. ' 
' → logprob: -15.511913299560547

Token 203: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38771742582321167
    2. ' i' → logprob: -1.1377174854278564
    3. 'dist' → logprob: -7.762717247009277
    4. ' v' → logprob: -8.762717247009277
    5. 'v' → logprob: -8.762717247009277
    6. 'distance' → logprob: -10.262717247009277
    7. 'x' → logprob: -11.262717247009277
    8. ' dist' → logprob: -11.387717247009277
    9. ' distance' → logprob: -11.387717247009277
    10. 'e' → logprob: -11.637717247009277

Token 204: ',t' (ID: 26927)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03854871913790703
    2. 'in' → logprob: -3.288548707962036
    3. ' ' → logprob: -7.663548946380615
    4. ',' → logprob: -11.288548469543457
    5. '	in' → logprob: -12.038548469543457
    6. ' i' → logprob: -12.163548469543457
    7. '  ' → logprob: -12.288548469543457
    8. 'n' → logprob: -13.163548469543457
    9. ' n' → logprob: -13.538548469543457
    10. 'd' → logprob: -13.538548469543457

Token 205: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013031046837568283
    2. 'in' → logprob: -4.388031005859375
    3. 'n' → logprob: -8.513031005859375
    4. ',' → logprob: -9.263031005859375
    5. 'o' → logprob: -9.263031005859375
    6. 'enumer' → logprob: -9.513031005859375
    7. 'd' → logprob: -11.388031005859375
    8. ' ' → logprob: -11.638031005859375
    9. 'mp' → logprob: -12.388031005859375
    10. 'e' → logprob: -12.763031005859375

Token 206: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.20141801238059998
    2. 'enumer' → logprob: -1.7014180421829224
    3. 'range' → logprob: -13.076417922973633
    4. '```' → logprob: -13.826417922973633
    5. 'en' → logprob: -14.576417922973633
    6. '(en' → logprob: -15.326417922973633
    7. ' range' → logprob: -15.451417922973633
    8. 'enum' → logprob: -15.701417922973633
    9. 'e' → logprob: -15.951417922973633
    10. ' ' → logprob: -16.701417922973633

Token 207: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.45848218582978e-06
    2. 'd' → logprob: -14.12500286102295
    3. ' (' → logprob: -14.12500286102295
    4. '(range' → logprob: -14.37500286102295
    5. '(' → logprob: -14.87500286102295
    6. ',d' → logprob: -18.375001907348633
    7. ' d' → logprob: -18.375001907348633
    8. '(en' → logprob: -18.625001907348633
    9. '(D' → logprob: -19.750001907348633
    10. '((' → logprob: -20.125001907348633

Token 208: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00046689616283401847
    2. ')' → logprob: -7.875466823577881
    3. '):
' → logprob: -9.750467300415039
    4. ' ):' → logprob: -10.750467300415039
    5. ':' → logprob: -12.125467300415039
    6. '):
' → logprob: -14.500467300415039
    7. ',' → logprob: -15.000467300415039
    8. '):

' → logprob: -15.375467300415039
    9. ')：' → logprob: -15.625467300415039
    10. '():' → logprob: -16.00046730041504

Token 209: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07025507092475891
    2. ' print' → logprob: -2.8202550411224365
    3. 'print' → logprob: -4.820255279541016
    4. '	print' → logprob: -8.820255279541016
    5. '    
' → logprob: -11.070255279541016
    6. '   ' → logprob: -11.945255279541016
    7. '       ' → logprob: -12.820255279541016
    8. ' if' → logprob: -13.070255279541016
    9. '\t' → logprob: -13.070255279541016
    10. ' ' → logprob: -13.320255279541016

Token 210: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07532025873661041
    2. '(f' → logprob: -2.825320243835449
    3. '(' → logprob: -4.325320243835449
    4. 'f' → logprob: -11.20032024383545
    5. '((' → logprob: -11.57532024383545
    6. '('' → logprob: -12.32532024383545
    7. '("' → logprob: -12.95032024383545
    8. 'i' → logprob: -13.45032024383545
    9. ' (' → logprob: -13.57532024383545
    10. '()' → logprob: -14.07532024383545

Token 211: '+' (ID: 10)
  Prédit: ',t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.5790621042251587
    2. ',' → logprob: -0.8290621042251587
    3. ',f' → logprob: -6.329061985015869
    4. ',end' → logprob: -6.829061985015869
    5. ' ,' → logprob: -8.704062461853027
    6. ',",' → logprob: -10.204062461853027
    7. ',d' → logprob: -10.454062461853027
    8. ',tp' → logprob: -12.079062461853027
    9. ',p' → logprob: -13.079062461853027
    10. ',v' → logprob: -13.704062461853027

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9795445849886164e-05
    2. ' ' → logprob: -9.750060081481934
    3. ')' → logprob: -14.000060081481934
    4. ' )' → logprob: -15.375060081481934
    5. ',' → logprob: -15.500060081481934
    6. ' ,' → logprob: -16.250059127807617
    7. '   ' → logprob: -17.375059127807617
    8. 't' → logprob: -17.625059127807617
    9. '```' → logprob: -17.750059127807617
    10. '	' → logprob: -17.875059127807617

Token 213: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.16240376234054565
    2. ',' → logprob: -1.9124038219451904
    3. ',end' → logprob: -6.787403583526611
    4. ',f' → logprob: -7.662403583526611
    5. ' ,' → logprob: -7.787403583526611
    6. ',d' → logprob: -9.16240406036377
    7. ',i' → logprob: -11.03740406036377
    8. 't' → logprob: -11.66240406036377
    9. ',"' → logprob: -12.28740406036377
    10. ' t' → logprob: -12.53740406036377

Token 214: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ' )' → logprob: -12.625003814697266
    3. '))' → logprob: -15.500003814697266
    4. ')`' → logprob: -15.750003814697266
    5. ')
' → logprob: -16.125003814697266
    6. ')#' → logprob: -16.250003814697266
    7. ');' → logprob: -16.625003814697266
    8. '')' → logprob: -17.375003814697266
    9. ',' → logprob: -17.500003814697266
    10. '),' → logprob: -17.625003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 212
Tokens correctement prédits (1ère position, stricte): 95
Tokens correctement prédits (1ère position, avec adaptation): 99
Tokens correctement prédits (top 10): 184
Précision stricte (1ère position): 44.81%
Précision adaptée (1ère position): 46.70%
Précision (top 10): 86.79%
================================================================================
