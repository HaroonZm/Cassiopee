================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
 
adj = [None]
for i in range(n):
    adji = list(map(int, input().split()[2:]))
    adj.append(adji)
isSearched = [None] + [False] * n
distance = [None] + [-1] * n
def BFS(u):
    d = 0
    isSearched[u] = True
    distance[u] = d
    edge = [u]
    while edge:
        q = list(edge)
        edge = []
        d += 1
        for ce in q:
            for ne in adj[ce]:
                if not isSearched[ne]:
                    isSearched[ne] = True
                    edge.append(ne)
                    distance[ne] = d
BFS(1)
for i, x in enumerate(distance[1:], start=1):
    print(i, x)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: ' 
' (ID: 793)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: 'adj' (ID: 57001)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5961770415306091
    2. 'for' → logprob: -1.846177101135254
    3. 'i' → logprob: -1.971177101135254
    4. 's' → logprob: -2.096177101135254
    5. 'a' → logprob: -4.471177101135254
    6. 'if' → logprob: -5.221177101135254
    7. 'r' → logprob: -5.846177101135254
    8. 'sum' → logprob: -6.221177101135254
    9. 'm' → logprob: -6.596177101135254
    10. 'x' → logprob: -6.971177101135254

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5948867797851562
    2. 'acency' → logprob: -0.8448867797851562
    3. 'acent' → logprob: -4.344886779785156
    4. '_list' → logprob: -6.094886779785156
    5. '[a' → logprob: -6.344886779785156
    6. '[u' → logprob: -7.469886779785156
    7. 'ac' → logprob: -7.719886779785156
    8. '[]' → logprob: -8.844886779785156
    9. '[i' → logprob: -8.844886779785156
    10. '_matrix' → logprob: -8.969886779785156

Token 8: ' [' (ID: 723)
  Prédit: ' [[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.7591753005981445
    2. ' []' → logprob: -1.3841753005981445
    3. ' {}' → logprob: -1.8841753005981445
    4. '{}' → logprob: -2.7591753005981445
    5. '[]' → logprob: -3.7591753005981445
    6. '[' → logprob: -3.7591753005981445
    7. ' [' → logprob: -4.0091753005981445
    8. ' ' → logprob: -7.1341753005981445
    9. ' defaultdict' → logprob: -7.8841753005981445
    10. ' {' → logprob: -9.259175300598145

Token 9: 'None' (ID: 8505)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01917455717921257
    2. ' []' → logprob: -4.394174575805664
    3. '[' → logprob: -5.019174575805664
    4. ' [' → logprob: -11.269174575805664
    5. ']' → logprob: -12.269174575805664
    6. ' ' → logprob: -12.394174575805664
    7. '([]' → logprob: -12.394174575805664
    8. '[]
' → logprob: -13.519174575805664
    9. '[]}' → logprob: -13.519174575805664
    10. '[])' → logprob: -14.269174575805664

Token 10: ']
' (ID: 1592)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3009496033191681
    2. '()' → logprob: -2.5509495735168457
    3. ']' → logprob: -2.8009495735168457
    4. ' for' → logprob: -2.9259495735168457
    5. '([]' → logprob: -3.6759495735168457
    6. '()]' → logprob: -4.050949573516846
    7. ' (' → logprob: -4.550949573516846
    8. 'for' → logprob: -5.550949573516846
    9. '(n' → logprob: -5.550949573516846
    10. ' ()' → logprob: -5.675949573516846

Token 11: 'for' (ID: 1938)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14878328144550323
    2. '[' → logprob: -2.7737832069396973
    3. '[]' → logprob: -3.7737832069396973
    4. '([]' → logprob: -3.8987832069396973
    5. '([' → logprob: -4.523783206939697
    6. ' (' → logprob: -4.898783206939697
    7. ',' → logprob: -5.648783206939697
    8. '=' → logprob: -5.648783206939697
    9. ' =' → logprob: -6.273783206939697
    10. '*' → logprob: -6.523783206939697

Token 12: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10306324809789658
    2. ' i' → logprob: -2.7280633449554443
    3. ' _' → logprob: -3.4780633449554443
    4. '_' → logprob: -6.478063106536865
    5. ' ‌' → logprob: -9.353063583374023
    6. 'i' → logprob: -9.728063583374023
    7. ' ' → logprob: -11.228063583374023
    8. '  ' → logprob: -11.228063583374023
    9. ' ​' → logprob: -13.228063583374023
    10. ' ﻿' → logprob: -13.353063583374023

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018573859706521034
    2. 'in' → logprob: -4.018573760986328
    3. ' ' → logprob: -8.018573760986328
    4. 'n' → logprob: -10.143573760986328
    5. '	in' → logprob: -11.018573760986328
    6. ' n' → logprob: -11.893573760986328
    7. ' i' → logprob: -11.893573760986328
    8. '  ' → logprob: -12.643573760986328
    9. '_' → logprob: -12.768573760986328
    10. 'range' → logprob: -12.893573760986328

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1269339919090271
    2. 'range' → logprob: -2.126934051513672
    3. ' ' → logprob: -12.626934051513672
    4. '	range' → logprob: -13.251934051513672
    5. '(range' → logprob: -14.626934051513672
    6. '  ' → logprob: -16.501934051513672
    7. ' xrange' → logprob: -16.626934051513672
    8. '```' → logprob: -16.751934051513672
    9. ' in' → logprob: -16.876934051513672
    10. '_range' → logprob: -16.876934051513672

Token 15: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00027599421446211636
    2. '(n' → logprob: -8.250275611877441
    3. ' (' → logprob: -11.250275611877441
    4. '(
' → logprob: -14.000275611877441
    5. '(len' → logprob: -15.125275611877441
    6. '(i' → logprob: -15.875275611877441
    7. '()' → logprob: -16.125276565551758
    8. '(space' → logprob: -16.375276565551758
    9. '(

' → logprob: -16.375276565551758
    10. '(range' → logprob: -17.125276565551758

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15521220862865448
    2. ')' → logprob: -2.155212163925171
    3. ' ):' → logprob: -4.28021240234375
    4. '+' → logprob: -4.65521240234375
    5. ' )' → logprob: -5.90521240234375
    6. '-' → logprob: -7.15521240234375
    7. ' +' → logprob: -7.78021240234375
    8. '):
' → logprob: -8.15521240234375
    9. ' -' → logprob: -8.90521240234375
    10. ' ' → logprob: -9.65521240234375

Token 17: '   ' (ID: 271)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.3811156153678894
    2. ' ' → logprob: -1.6311156749725342
    3. ' [' → logprob: -3.131115674972534
    4. '    ' → logprob: -3.756115674972534
    5. '[]' → logprob: -4.131115436553955
    6. '[' → logprob: -4.131115436553955
    7. '   ' → logprob: -5.381115436553955
    8. ' adj' → logprob: -5.631115436553955
    9. ' [[]' → logprob: -5.756115436553955
    10. ' [
' → logprob: -5.881115436553955

Token 18: ' ad' (ID: 687)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.021888354793190956
    2. '[]' → logprob: -4.771888256072998
    3. ' ' → logprob: -5.146888256072998
    4. ' [' → logprob: -5.771888256072998
    5. '[' → logprob: -6.271888256072998
    6. '   ' → logprob: -6.521888256072998
    7. ' adj' → logprob: -8.021888732910156
    8. '    ' → logprob: -8.521888732910156
    9. ' [[]' → logprob: -8.896888732910156
    10. 'adj' → logprob: -9.646888732910156

Token 19: 'ji' (ID: 4133)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.141186450899113e-05
    2. 'dj' → logprob: -11.750020980834961
    3. 'd' → logprob: -12.250020980834961
    4. 'jac' → logprob: -12.875020980834961
    5. '[j' → logprob: -13.750020980834961
    6. 'js' → logprob: -13.875020980834961
    7. 'jr' → logprob: -14.125020980834961
    8. 'jc' → logprob: -14.375020980834961
    9. 'jf' → logprob: -14.500020980834961
    10. '	j' → logprob: -14.875020980834961

Token 20: ' =' (ID: 314)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.7959011197090149
    2. '[' → logprob: -1.6709010601043701
    3. 'acent' → logprob: -2.17090106010437
    4. 'ac' → logprob: -2.17090106010437
    5. '.append' → logprob: -3.92090106010437
    6. 'st' → logprob: -4.045901298522949
    7. 'n' → logprob: -4.170901298522949
    8. '[n' → logprob: -4.170901298522949
    9. '_list' → logprob: -4.920901298522949
    10. 'c' → logprob: -5.045901298522949

Token 21: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.124947190284729
    2. ' list' → logprob: -1.249947190284729
    3. ' []' → logprob: -1.499947190284729
    4. 'list' → logprob: -1.999947190284729
    5. ' [' → logprob: -3.9999470710754395
    6. '[' → logprob: -4.8749470710754395
    7. '[int' → logprob: -6.9999470710754395
    8. 'ist' → logprob: -7.2499470710754395
    9. 'int' → logprob: -7.3749470710754395
    10. '[list' → logprob: -7.8749470710754395

Token 22: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.014328506775200367
    2. '(' → logprob: -4.264328479766846
    3. '(int' → logprob: -9.264328956604004
    4. '(input' → logprob: -9.639328956604004
    5. '(
' → logprob: -13.264328956604004
    6. '()' → logprob: -13.389328956604004
    7. '(

' → logprob: -14.889328956604004
    8. '(filter' → logprob: -15.014328956604004
    9. '(range' → logprob: -15.139328956604004
    10. '(eval' → logprob: -15.389328956604004

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00032509511220268905
    2. 'int' → logprob: -8.375325202941895
    3. '(' → logprob: -9.625325202941895
    4. '<int' → logprob: -10.875325202941895
    5. '=int' → logprob: -12.750325202941895
    6. ',int' → logprob: -13.125325202941895
    7. '[int' → logprob: -13.500325202941895
    8. '(lambda' → logprob: -14.000325202941895
    9. '(input' → logprob: -14.125325202941895
    10. '```' → logprob: -14.500325202941895

Token 24: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08090733736753464
    2. ',input' → logprob: -2.7059073448181152
    3. ',' → logprob: -4.830907344818115
    4. '(' → logprob: -6.080907344818115
    5. ')' → logprob: -8.080906867980957
    6. 'input' → logprob: -8.330906867980957
    7. ' input' → logprob: -10.330906867980957
    8. '=input' → logprob: -10.580906867980957
    9. '),' → logprob: -11.580906867980957
    10. ' (' → logprob: -11.580906867980957

Token 25: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06997556239366531
    2. ' input' → logprob: -2.6949756145477295
    3. ',input' → logprob: -10.944975852966309
    4. '(input' → logprob: -11.569975852966309
    5. ')' → logprob: -12.069975852966309
    6. '=input' → logprob: -13.069975852966309
    7. ' ' → logprob: -13.569975852966309
    8. '	input' → logprob: -13.819975852966309
    9. '   ' → logprob: -13.944975852966309
    10. '<input' → logprob: -14.944975852966309

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.4060561776859686e-05
    2. '()' → logprob: -10.125043869018555
    3. ' ().' → logprob: -13.375043869018555
    4. '()))' → logprob: -14.625043869018555
    5. '(' → logprob: -14.750043869018555
    6. ')' → logprob: -14.875043869018555
    7. '   ' → logprob: -15.125043869018555
    8. '())' → logprob: -15.375043869018555
    9. '()
' → logprob: -15.500043869018555
    10. ' ' → logprob: -16.000043869018555

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0012170211412012577
    2. 'strip' → logprob: -6.751216888427734
    3. 'rstrip' → logprob: -10.126216888427734
    4. ' split' → logprob: -12.126216888427734
    5. 'spl' → logprob: -14.501216888427734
    6. '(split' → logprob: -14.876216888427734
    7. ')' → logprob: -15.251216888427734
    8. 'read' → logprob: -16.126216888427734
    9. 's' → logprob: -16.876216888427734
    10. ' strip' → logprob: -17.376216888427734

Token 28: '()[' (ID: 20778)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0695980116724968
    2. '())' → logprob: -3.0695979595184326
    3. '()' → logprob: -4.069598197937012
    4. '))' → logprob: -6.069598197937012
    5. '(' → logprob: -7.319598197937012
    6. '()))
' → logprob: -7.694598197937012
    7. ')' → logprob: -9.194598197937012
    8. '())))' → logprob: -9.569598197937012
    9. '('' → logprob: -10.694598197937012
    10. '()));' → logprob: -11.319598197937012

Token 29: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004805922508239746
    2. ':' → logprob: -5.504806041717529
    3. ']))' → logprob: -7.754806041717529
    4. ':]' → logprob: -9.254805564880371
    5. '2' → logprob: -9.379805564880371
    6. '::' → logprob: -11.004805564880371
    7. '0' → logprob: -11.254805564880371
    8. '(' → logprob: -11.504805564880371
    9. ' ' → logprob: -11.754805564880371
    10. '[' → logprob: -11.879805564880371

Token 30: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00045367187703959644
    2. ':]' → logprob: -7.750453472137451
    3. '():' → logprob: -11.75045394897461
    4. '):' → logprob: -12.62545394897461
    5. ':],' → logprob: -12.62545394897461
    6. '+:' → logprob: -13.25045394897461
    7. ' :' → logprob: -13.37545394897461
    8. '_:' → logprob: -13.62545394897461
    9. ':)' → logprob: -13.87545394897461
    10. '：' → logprob: -13.87545394897461

Token 31: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.00025323365116491914
    2. ']' → logprob: -9.250253677368164
    3. ']))
' → logprob: -9.375253677368164
    4. '])' → logprob: -10.375253677368164
    5. ' ]' → logprob: -11.250253677368164
    6. ' ' → logprob: -11.500253677368164
    7. ']))

' → logprob: -12.125253677368164
    8. ' ' → logprob: -12.625253677368164
    9. 'n' → logprob: -13.000253677368164
    10. '']))' → logprob: -13.625253677368164

Token 32: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37888219952583313
    2. 'adj' → logprob: -1.7538821697235107
    3. '   ' → logprob: -2.5038821697235107
    4. ' adj' → logprob: -3.1288821697235107
    5. ')
' → logprob: -5.12888240814209
    6. '<|end|>' → logprob: -5.87888240814209
    7. ' 
' → logprob: -6.25388240814209
    8. ' ' → logprob: -6.50388240814209
    9. ' )' → logprob: -6.75388240814209
    10. '
' → logprob: -7.37888240814209

Token 33: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.07711498439311981
    2. ' adj' → logprob: -2.702115058898926
    3. '   ' → logprob: -5.452115058898926
    4. ' 
' → logprob: -6.577115058898926
    5. '    
' → logprob: -7.952115058898926
    6. ')' → logprob: -8.077115058898926
    7. 'ad' → logprob: -8.327115058898926
    8. '_adj' → logprob: -8.827115058898926
    9. ' ' → logprob: -9.327115058898926
    10. '   
' → logprob: -10.202115058898926

Token 34: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002887371927499771
    2. '.app' → logprob: -6.37788724899292
    3. '.' → logprob: -7.50288724899292
    4. '[i' → logprob: -7.62788724899292
    5. '[' → logprob: -9.252887725830078
    6. '.ap' → logprob: -11.252887725830078
    7. '.i' → logprob: -11.627887725830078
    8. '.ad' → logprob: -11.752887725830078
    9. ' .' → logprob: -12.377887725830078
    10. '.add' → logprob: -12.752887725830078

Token 35: '(ad' (ID: 36787)
  Prédit: '(ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ad' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.25000286102295
    3. '(adj' → logprob: -14.12500286102295
    4. ' (' → logprob: -19.000001907348633
    5. '((' → logprob: -19.125001907348633
    6. '(ab' → logprob: -19.500001907348633
    7. '(ac' → logprob: -19.625001907348633
    8. '(a' → logprob: -19.625001907348633
    9. '(ar' → logprob: -19.750001907348633
    10. '(an' → logprob: -19.750001907348633

Token 36: 'ji' (ID: 4133)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.41757360100746155
    2. 'j' → logprob: -1.2925735712051392
    3. 'ji' → logprob: -3.4175736904144287
    4. '[i' → logprob: -3.6675736904144287
    5. '[' → logprob: -5.04257345199585
    6. '[j' → logprob: -6.66757345199585
    7. 'adj' → logprob: -8.542573928833008
    8. 'zi' → logprob: -9.542573928833008
    9. 'pi' → logprob: -9.667573928833008
    10. 'vi' → logprob: -10.167573928833008

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -14.500001907348633
    3. '))' → logprob: -14.750001907348633
    4. ' )' → logprob: -14.875001907348633
    5. '`)' → logprob: -15.500001907348633
    6. ')`' → logprob: -17.125001907348633
    7. '）' → logprob: -17.250001907348633
    8. '])' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.375001907348633
    10. ']' → logprob: -18.750001907348633

Token 38: 'is' (ID: 276)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3330110311508179
    2. '#' → logprob: -1.8330110311508179
    3. 'n' → logprob: -2.2080111503601074
    4. '<|end|>' → logprob: -2.2080111503601074
    5. '\n' → logprob: -2.4580111503601074
    6. ']' → logprob: -2.8330111503601074
    7. ')' → logprob: -2.8330111503601074
    8. '```' → logprob: -3.3330111503601074
    9. 'for' → logprob: -3.5830111503601074
    10. '
' → logprob: -3.5830111503601074

Token 39: 'S' (ID: 50)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5929915904998779
    2. '_connected' → logprob: -0.9679915904998779
    3. '_valid' → logprob: -3.717991590499878
    4. 'Connected' → logprob: -5.092991828918457
    5. 'connected' → logprob: -5.217991828918457
    6. '_empty' → logprob: -5.842991828918457
    7. 'instance' → logprob: -5.967991828918457
    8. '_adj' → logprob: -6.342991828918457
    9. '_used' → logprob: -6.467991828918457
    10. '_sorted' → logprob: -6.467991828918457

Token 40: 'earched' (ID: 146403)
  Prédit: 'ink'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.5499847531318665
    2. 'afe' → logprob: -1.0499846935272217
    3. 't' → logprob: -3.4249846935272217
    4. 'pecial' → logprob: -4.674984931945801
    5. 'olution' → logprob: -5.674984931945801
    6. 'ource' → logprob: -6.049984931945801
    7. '[i' → logprob: -6.424984931945801
    8. 'ol' → logprob: -6.424984931945801
    9. 'h' → logprob: -6.549984931945801
    10. 'e' → logprob: -6.549984931945801

Token 41: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5603172183036804
    2. '=' → logprob: -1.1853172779083252
    3. 'd' → logprob: -2.810317277908325
    4. ' =' → logprob: -2.935317277908325
    5. 'ed' → logprob: -5.060317039489746
    6. '(' → logprob: -6.435317039489746
    7. '_' → logprob: -7.310317039489746
    8. 's' → logprob: -7.810317039489746
    9. ']' → logprob: -8.935317039489746
    10. '[]' → logprob: -8.935317039489746

Token 42: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1607353389263153
    2. ' [' → logprob: -1.9107353687286377
    3. 'set' → logprob: -8.660735130310059
    4. ' set' → logprob: -8.785735130310059
    5. ' ' → logprob: -9.910735130310059
    6. '[]' → logprob: -10.035735130310059
    7. ' []' → logprob: -10.660735130310059
    8. '{}' → logprob: -10.910735130310059
    9. '(set' → logprob: -11.535735130310059
    10. '[n' → logprob: -12.035735130310059

Token 43: 'None' (ID: 8505)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.06197149679064751
    2. ' False' → logprob: -2.811971426010132
    3. '0' → logprob: -12.811971664428711
    4. '(False' → logprob: -14.311971664428711
    5. 'True' → logprob: -15.061971664428711
    6. '   ' → logprob: -16.68697166442871
    7. ' True' → logprob: -16.93697166442871
    8. 'F' → logprob: -17.06197166442871
    9. '=False' → logprob: -17.06197166442871
    10. '.False' → logprob: -17.68697166442871

Token 44: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002193087013438344
    2. ']+' → logprob: -6.252192974090576
    3. ' ]' → logprob: -8.752193450927734
    4. ',' → logprob: -9.377193450927734
    5. ']*' → logprob: -12.127193450927734
    6. ' for' → logprob: -12.252193450927734
    7. ')' → logprob: -12.502193450927734
    8. ']*(' → logprob: -12.752193450927734
    9. 'False' → logprob: -13.877193450927734
    10. 'for' → logprob: -14.127193450927734

Token 45: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1464635729789734
    2. ' +' → logprob: -2.771463632583618
    3. '[' → logprob: -2.896463632583618
    4. '(n' → logprob: -5.146463394165039
    5. '[n' → logprob: -5.146463394165039
    6. '+[' → logprob: -6.271463394165039
    7. '(' → logprob: -6.646463394165039
    8. '([' → logprob: -7.021463394165039
    9. ' [' → logprob: -7.146463394165039
    10. ']' → logprob: -8.271463394165039

Token 46: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006398919504135847
    2. ' [' → logprob: -5.256399154663086
    3. '[n' → logprob: -6.756399154663086
    4. '[len' → logprob: -15.256399154663086
    5. '[list' → logprob: -15.506399154663086
    6. '[i' → logprob: -15.756399154663086
    7. '[int' → logprob: -16.381399154663086
    8. '[N' → logprob: -16.631399154663086
    9. '[size' → logprob: -16.756399154663086
    10. '[List' → logprob: -16.881399154663086

Token 47: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.018154388293623924
    2. ' False' → logprob: -4.018154621124268
    3. '0' → logprob: -13.14315414428711
    4. 'True' → logprob: -13.76815414428711
    5. '(False' → logprob: -14.01815414428711
    6. '   ' → logprob: -14.39315414428711
    7. ' True' → logprob: -16.64315414428711
    8. ' ' → logprob: -17.64315414428711
    9. '=False' → logprob: -18.64315414428711
    10. 'F' → logprob: -18.64315414428711

Token 48: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39530906081199646
    2. ' for' → logprob: -1.1453090906143188
    3. ' ]' → logprob: -5.270308971405029
    4. ']*' → logprob: -6.770308971405029
    5. '(n' → logprob: -7.020308971405029
    6. 'for' → logprob: -7.770308971405029
    7. '(' → logprob: -8.270309448242188
    8. ' (' → logprob: -8.645309448242188
    9. ']*(' → logprob: -8.645309448242188
    10. ' ' → logprob: -9.395309448242188

Token 49: ' *' (ID: 425)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.17436611652374268
    2. '(' → logprob: -2.424365997314453
    3. ' (' → logprob: -2.674365997314453
    4. ' for' → logprob: -6.549365997314453
    5. ']' → logprob: -7.674365997314453
    6. ')' → logprob: -8.924365997314453
    7. '```' → logprob: -9.799365997314453
    8. '[n' → logprob: -9.924365997314453
    9. ' ' → logprob: -10.049365997314453
    10. '`' → logprob: -10.299365997314453

Token 50: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5778858661651611
    2. '(n' → logprob: -0.8278858661651611
    3. ' n' → logprob: -6.327885627746582
    4. '(' → logprob: -9.327885627746582
    5. ' (' → logprob: -9.577885627746582
    6. ')n' → logprob: -14.952885627746582
    7. '	n' → logprob: -15.702885627746582
    8. '_n' → logprob: -16.9528865814209
    9. '   ' → logprob: -18.3278865814209
    10. ' ' → logprob: -18.5778865814209

Token 51: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6708776950836182
    2. '<|end|>' → logprob: -1.0458776950836182
    3. '
' → logprob: -2.795877695083618
    4. ' for' → logprob: -3.295877695083618
    5. 'for' → logprob: -3.920877695083618
    6. 'd' → logprob: -5.545877456665039
    7. 'n' → logprob: -6.045877456665039
    8. ' ' → logprob: -6.295877456665039
    9. ')' → logprob: -6.420877456665039
    10. '\n' → logprob: -6.670877456665039

Token 52: 'distance' (ID: 40614)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.508506178855896
    2. 'for' → logprob: -1.758506178855896
    3. ' for' → logprob: -1.883506178855896
    4. '<|end|>' → logprob: -1.883506178855896
    5. 'stack' → logprob: -3.2585062980651855
    6. 'def' → logprob: -3.2585062980651855
    7. 'd' → logprob: -3.2585062980651855
    8. 's' → logprob: -3.7585062980651855
    9. 'b' → logprob: -3.7585062980651855
    10. '
' → logprob: -3.8835062980651855

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0034568102564662695
    2. 's' → logprob: -6.0034565925598145
    3. '[' → logprob: -7.5034565925598145
    4. '=' → logprob: -8.003457069396973
    5. ' ' → logprob: -9.628457069396973
    6. ' =[' → logprob: -11.378457069396973
    7. '_' → logprob: -11.503457069396973
    8. '[:]' → logprob: -12.878457069396973
    9. '[]' → logprob: -13.503457069396973
    10. '[s' → logprob: -13.628457069396973

Token 54: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.576157808303833
    2. ' [' → logprob: -0.826157808303833
    3. '[n' → logprob: -8.951157569885254
    4. '[-' → logprob: -9.701157569885254
    5. ' [-' → logprob: -10.701157569885254
    6. '0' → logprob: -13.326157569885254
    7. '[int' → logprob: -13.701157569885254
    8. ' ' → logprob: -14.326157569885254
    9. '[N' → logprob: -14.576157569885254
    10. '[len' → logprob: -15.326157569885254

Token 55: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9833618402481079
    2. '-' → logprob: -1.108361840248108
    3. 'None' → logprob: -1.233361840248108
    4. ' None' → logprob: -6.108361721038818
    5. ' -' → logprob: -6.483361721038818
    6. ' ' → logprob: -7.983361721038818
    7. 'float' → logprob: -8.233362197875977
    8. '(None' → logprob: -10.108362197875977
    9. '100' → logprob: -10.733362197875977
    10. '-n' → logprob: -10.983362197875977

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012448744382709265
    2. ']+' → logprob: -6.751245021820068
    3. ' ]' → logprob: -9.62624454498291
    4. ',' → logprob: -12.00124454498291
    5. ')' → logprob: -13.37624454498291
    6. '>' → logprob: -15.00124454498291
    7. '   ' → logprob: -16.001245498657227
    8. '']' → logprob: -16.126245498657227
    9. 'None' → logprob: -16.126245498657227
    10. '```' → logprob: -16.626245498657227

Token 57: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28122952580451965
    2. '+' → logprob: -1.4062294960021973
    3. ' ' → logprob: -10.281229972839355
    4. '[' → logprob: -11.031229972839355
    5. '0' → logprob: -11.656229972839355
    6. '+[' → logprob: -12.281229972839355
    7. ' [' → logprob: -12.406229972839355
    8. '>' → logprob: -13.156229972839355
    9. ']' → logprob: -13.406229972839355
    10. ']+' → logprob: -13.906229972839355

Token 58: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006767945364117622
    2. '[-' → logprob: -5.006767749786377
    3. ' [' → logprob: -9.881768226623535
    4. '[n' → logprob: -14.256768226623535
    5. ' [-' → logprob: -14.881768226623535
    6. '[int' → logprob: -16.13176727294922
    7. '0' → logprob: -16.25676727294922
    8. '[in' → logprob: -16.38176727294922
    9. '-' → logprob: -17.00676727294922
    10. ' ' → logprob: -17.50676727294922

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6550729419104755e-05
    2. ' ' → logprob: -10.750036239624023
    3. '-' → logprob: -11.500036239624023
    4. '2' → logprob: -13.125036239624023
    5. '１' → logprob: -14.250036239624023
    6. ' -' → logprob: -14.500036239624023
    7. '  ' → logprob: -14.875036239624023
    8. '   ' → logprob: -14.937536239624023
    9. '10' → logprob: -15.937536239624023
    10. '(' → logprob: -16.062536239624023

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005964008742012084
    2. ' ]' → logprob: -8.125596046447754
    3. ']*' → logprob: -8.250596046447754
    4. ' for' → logprob: -10.625596046447754
    5. ']*(' → logprob: -12.500596046447754
    6. '   ' → logprob: -12.875596046447754
    7. '1' → logprob: -12.875596046447754
    8. '']' → logprob: -13.625596046447754
    9. 'for' → logprob: -14.000596046447754
    10. ')' → logprob: -14.000596046447754

Token 61: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.46984192728996277
    2. '*' → logprob: -1.0948419570922852
    3. '*n' → logprob: -3.219841957092285
    4. ' ' → logprob: -9.094841957092285
    5. ' for' → logprob: -10.469841957092285
    6. '    ' → logprob: -10.469841957092285
    7. '```' → logprob: -10.719841957092285
    8. '*(' → logprob: -10.844841957092285
    9. '*num' → logprob: -10.969841957092285
    10. '*s' → logprob: -11.094841957092285

Token 62: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011705794604495168
    2. ' n' → logprob: -6.751170635223389
    3. '(n' → logprob: -15.37617015838623
    4. ' ' → logprob: -16.001171112060547
    5. '(' → logprob: -18.001171112060547
    6. '	n' → logprob: -18.001171112060547
    7. '<|end|>' → logprob: -18.001171112060547
    8. '   ' → logprob: -18.376171112060547
    9. ' (' → logprob: -19.126171112060547
    10. '_n' → logprob: -19.376171112060547

Token 63: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8434397578239441
    2. '<|end|>' → logprob: -1.3434398174285889
    3. '
' → logprob: -2.093439817428589
    4. 'distance' → logprob: -2.593439817428589
    5. 'for' → logprob: -3.468439817428589
    6. ' for' → logprob: -3.593439817428589
    7. 'd' → logprob: -4.09343957901001
    8. ' ' → logprob: -5.09343957901001
    9. 's' → logprob: -5.34343957901001
    10. 'n' → logprob: -6.21843957901001

Token 64: 'def' (ID: 1314)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.7749404907226562
    2. 'd' → logprob: -1.2749404907226562
    3. 'queue' → logprob: -2.0249404907226562
    4. 'q' → logprob: -2.6499404907226562
    5. 'for' → logprob: -3.7749404907226562
    6. '
' → logprob: -4.399940490722656
    7. 's' → logprob: -5.524940490722656
    8. 'start' → logprob: -5.774940490722656
    9. 'current' → logprob: -5.774940490722656
    10. ' 
' → logprob: -6.149940490722656

Token 65: ' BFS' (ID: 190016)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.022218715399503708
    2. ' BFS' → logprob: -4.397218704223633
    3. ' dfs' → logprob: -5.022218704223633
    4. ' ' → logprob: -6.522218704223633
    5. ' search' → logprob: -6.772218704223633
    6. 'b' → logprob: -9.022218704223633
    7. ' breadth' → logprob: -9.522218704223633
    8. 'B' → logprob: -9.772218704223633
    9. ' find' → logprob: -10.272218704223633
    10. ' DFS' → logprob: -10.397218704223633

Token 66: '(u' (ID: 17057)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08719448745250702
    2. '(start' → logprob: -3.3371944427490234
    3. '(node' → logprob: -3.5871944427490234
    4. '(u' → logprob: -4.712194442749023
    5. '(s' → logprob: -5.462194442749023
    6. '(queue' → logprob: -6.087194442749023
    7. '(root' → logprob: -6.337194442749023
    8. '(q' → logprob: -6.712194442749023
    9. '(n' → logprob: -7.587194442749023
    10. '(vertex' → logprob: -7.962194442749023

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0034891199320554733
    2. ',' → logprob: -6.378489017486572
    3. ')' → logprob: -6.753489017486572
    4. '):
' → logprob: -8.00348949432373
    5. '(u' → logprob: -9.37848949432373
    6. ' ):' → logprob: -9.37848949432373
    7. '):
' → logprob: -10.00348949432373
    8. 'u' → logprob: -10.12848949432373
    9. ',u' → logprob: -11.25348949432373
    10. ':' → logprob: -12.50348949432373

Token 68: '   ' (ID: 271)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -1.3529009819030762
    2. ':' → logprob: -1.4779009819030762
    3. ' queue' → logprob: -1.8529009819030762
    4. '	queue' → logprob: -1.9779009819030762
    5. '   ' → logprob: -2.227900981903076
    6. '<|end|>' → logprob: -3.477900981903076
    7. '):' → logprob: -4.227900981903076
    8. 'queue' → logprob: -4.352900981903076
    9. '_queue' → logprob: -4.727900981903076
    10. ' :' → logprob: -5.102900981903076

Token 69: ' d' (ID: 272)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.34191572666168213
    2. ' from' → logprob: -1.7169157266616821
    3. 'queue' → logprob: -2.9669156074523926
    4. '   ' → logprob: -3.5919156074523926
    5. ' q' → logprob: -4.716915607452393
    6. 'from' → logprob: -4.841915607452393
    7. 'q' → logprob: -4.841915607452393
    8. '```' → logprob: -6.591915607452393
    9. ' deque' → logprob: -6.841915607452393
    10. '	queue' → logprob: -7.341915607452393

Token 70: ' =' (ID: 314)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.14657239615917206
    2. 'e' → logprob: -2.1465723514556885
    3. 'istance' → logprob: -4.021572589874268
    4. 'ist' → logprob: -8.02157211303711
    5. '=' → logprob: -8.39657211303711
    6. 'is' → logprob: -8.52157211303711
    7. '   ' → logprob: -8.89657211303711
    8. ' =' → logprob: -8.89657211303711
    9. 'eft' → logprob: -9.39657211303711
    10. 'q' → logprob: -9.52157211303711

Token 71: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.059827618300914764
    2. '[' → logprob: -3.4348275661468506
    3. ' ' → logprob: -4.55982780456543
    4. '{' → logprob: -5.05982780456543
    5. ' [' → logprob: -5.43482780456543
    6. '1' → logprob: -6.18482780456543
    7. '[u' → logprob: -7.18482780456543
    8. 'deque' → logprob: -7.18482780456543
    9. ' {' → logprob: -7.93482780456543
    10. '   ' → logprob: -8.30982780456543

Token 72: '0' (ID: 15)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.8181705474853516
    2. '0' → logprob: -1.3181705474853516
    3. '[' → logprob: -1.6931705474853516
    4. '[]' → logprob: -2.8181705474853516
    5. '1' → logprob: -4.068170547485352
    6. '{' → logprob: -4.943170547485352
    7. 'deque' → logprob: -4.943170547485352
    8. '[]
' → logprob: -5.193170547485352
    9. '[int' → logprob: -6.318170547485352
    10. '[(' → logprob: -6.318170547485352

Token 73: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' is' (ID: 382)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.5784257650375366
    2. 'queue' → logprob: -1.2034257650375366
    3. '   ' → logprob: -3.328425884246826
    4. 'q' → logprob: -4.078425884246826
    5. '	queue' → logprob: -4.203425884246826
    6. ' que' → logprob: -4.328425884246826
    7. 'Q' → logprob: -4.453425884246826
    8. ' q' → logprob: -4.828425884246826
    9. 'from' → logprob: -5.078425884246826
    10. ' from' → logprob: -5.078425884246826

Token 76: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.7954958821064793e-05
    2. 'searched' → logprob: -12.125018119812012
    3. 'Search' → logprob: -12.500018119812012
    4. ' S' → logprob: -13.000018119812012
    5. ' searched' → logprob: -13.375018119812012
    6. 'Se' → logprob: -14.250018119812012
    7. 'Searching' → logprob: -14.375018119812012
    8. ')' → logprob: -14.625018119812012
    9. 'Visited' → logprob: -14.750018119812012
    10. 'earched' → logprob: -14.875018119812012

Token 77: 'earched' (ID: 146403)
  Prédit: 'earched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'earched' → logprob: -0.0074757677502930164
    2. 'ear' → logprob: -5.007475852966309
    3. 'earch' → logprob: -7.507475852966309
    4. 'e' → logprob: -9.007475852966309
    5. 'arched' → logprob: -10.132475852966309
    6. 'searched' → logprob: -10.632475852966309
    7. 'arch' → logprob: -12.132475852966309
    8. '```' → logprob: -12.257475852966309
    9. 'ea' → logprob: -12.382475852966309
    10. 'er' → logprob: -13.007475852966309

Token 78: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.004621422383934259
    2. '[' → logprob: -5.379621505737305
    3. '[user' → logprob: -15.004621505737305
    4. '```' → logprob: -15.379621505737305
    5. 'u' → logprob: -15.754621505737305
    6. '[]' → logprob: -16.629621505737305
    7. '\[' → logprob: -17.004621505737305
    8. '[i' → logprob: -17.004621505737305
    9. '[:]' → logprob: -17.004621505737305
    10. ']' → logprob: -17.129621505737305

Token 79: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00027945113833993673
    2. ']=' → logprob: -8.250279426574707
    3. ' ]' → logprob: -11.000279426574707
    4. ']==' → logprob: -13.875279426574707
    5. '=' → logprob: -15.125279426574707
    6. '[' → logprob: -15.875279426574707
    7. '   ' → logprob: -16.750280380249023
    8. ']
' → logprob: -16.875280380249023
    9. '],' → logprob: -17.500280380249023
    10. '']' → logprob: -17.500280380249023

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759662985801697
    2. ' =' → logprob: -0.8259662985801697
    3. '=True' → logprob: -11.200965881347656
    4. '[' → logprob: -11.575965881347656
    5. ' ' → logprob: -13.325965881347656
    6. ']' → logprob: -14.450965881347656
    7. ')' → logprob: -14.700965881347656
    8. '=False' → logprob: -14.950965881347656
    9. '＝' → logprob: -15.450965881347656
    10. ',' → logprob: -15.575965881347656

Token 81: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004078401252627373
    2. ' True' → logprob: -5.504078388214111
    3. '(True' → logprob: -19.629077911376953
    4. ' ' → logprob: -19.754077911376953
    5. 'False' → logprob: -20.004077911376953
    6. '=True' → logprob: -20.129077911376953
    7. 'Tr' → logprob: -20.879077911376953
    8. '   ' → logprob: -21.254077911376953
    9. 'T' → logprob: -22.254077911376953
    10. '1' → logprob: -22.504077911376953

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.739549458026886
    2. '<|end|>' → logprob: -0.739549458026886
    3. '\n' → logprob: -3.364549398422241
    4. '<|end|>' → logprob: -5.86454963684082
    5. '\' → logprob: -6.11454963684082
    6. ')' → logprob: -6.98954963684082
    7. '\r' → logprob: -7.11454963684082
    8. '' → logprob: -7.36454963684082
    9. ' 
' → logprob: -7.48954963684082
    10. '    
' → logprob: -7.73954963684082

Token 83: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7044078707695007
    2. '<|end|>' → logprob: -0.7044078707695007
    3. '   ' → logprob: -5.829407691955566
    4. '<|end|>' → logprob: -5.954407691955566
    5. ' 
' → logprob: -6.454407691955566
    6. '\n' → logprob: -7.079407691955566
    7. '    
' → logprob: -7.079407691955566
    8. ' ' → logprob: -7.454407691955566
    9. ')' → logprob: -7.829407691955566
    10. '  
' → logprob: -8.329407691955566

Token 84: ' distance' (ID: 9324)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.1396769285202026
    2. ' queue' → logprob: -1.1396769285202026
    3. 'queue' → logprob: -1.6396769285202026
    4. 'from' → logprob: -2.514677047729492
    5. '   ' → logprob: -3.264677047729492
    6. '	queue' → logprob: -4.389677047729492
    7. ' for' → logprob: -4.764677047729492
    8. 'q' → logprob: -4.764677047729492
    9. ' ' → logprob: -5.889677047729492
    10. 'd' → logprob: -6.014677047729492

Token 85: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.750000953674316
    3. '[user' → logprob: -16.125001907348633
    4. 'u' → logprob: -17.750001907348633
    5. '```' → logprob: -19.375001907348633
    6. '(u' → logprob: -19.750001907348633
    7. '	u' → logprob: -19.875001907348633
    8. '[i' → logprob: -20.375001907348633
    9. ' [' → logprob: -20.375001907348633
    10. '[s' → logprob: -20.500001907348633

Token 86: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009358783136121929
    2. ']=' → logprob: -7.625936031341553
    3. ' ]' → logprob: -7.875936031341553
    4. '=' → logprob: -10.375935554504395
    5. '[' → logprob: -11.125935554504395
    6. '[u' → logprob: -11.375935554504395
    7. ' =' → logprob: -11.625935554504395
    8. ')' → logprob: -14.125935554504395
    9. ' ' → logprob: -15.125935554504395
    10. ']+=' → logprob: -15.375935554504395

Token 87: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326878070831299
    2. ' =' → logprob: -0.7576878070831299
    3. ' ' → logprob: -9.88268756866455
    4. '[' → logprob: -10.63268756866455
    5. '<|end|>' → logprob: -12.63268756866455
    6. '=u' → logprob: -12.75768756866455
    7. ' =
' → logprob: -13.75768756866455
    8. '[u' → logprob: -13.88268756866455
    9. ',' → logprob: -14.00768756866455
    10. ')' → logprob: -14.38268756866455

Token 88: ' d' (ID: 272)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004226558841764927
    2. 'd' → logprob: -5.5042266845703125
    3. ' ' → logprob: -8.879226684570312
    4. ' d' → logprob: -11.879226684570312
    5. 'u' → logprob: -13.379226684570312
    6. '   ' → logprob: -16.629226684570312
    7. '`' → logprob: -17.754226684570312
    8. '1' → logprob: -17.816726684570312
    9. '00' → logprob: -17.941726684570312
    10. '000' → logprob: -18.066726684570312

Token 89: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04758509248495102
    2. '<|end|>' → logprob: -3.1725850105285645
    3. '<|end|>' → logprob: -7.2975850105285645
    4. '' → logprob: -7.4225850105285645
    5. '\n' → logprob: -7.5475850105285645
    6. '  
' → logprob: -7.5475850105285645
    7. ' 
' → logprob: -7.7975850105285645
    8. ' for' → logprob: -8.297585487365723
    9. ')' → logprob: -8.422585487365723
    10. '    
' → logprob: -8.422585487365723

Token 90: '   ' (ID: 271)
  Prédit: '	queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	queue' → logprob: -0.7918022871017456
    2. '   ' → logprob: -1.0418022871017456
    3. 'queue' → logprob: -2.666802406311035
    4. '
' → logprob: -2.916802406311035
    5. '<|end|>' → logprob: -3.666802406311035
    6. ' queue' → logprob: -3.791802406311035
    7. 'from' → logprob: -4.916802406311035
    8. ' from' → logprob: -5.541802406311035
    9. '	from' → logprob: -6.541802406311035
    10. '    
' → logprob: -6.541802406311035

Token 91: ' edge' (ID: 11165)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.8142642974853516
    2. 'q' → logprob: -1.5642642974853516
    3. ' queue' → logprob: -1.9392642974853516
    4. 'from' → logprob: -2.0642642974853516
    5. ' from' → logprob: -3.3142642974853516
    6. '   ' → logprob: -3.6892642974853516
    7. 'Q' → logprob: -5.314264297485352
    8. 'for' → logprob: -6.189264297485352
    9. 'stack' → logprob: -6.189264297485352
    10. ' q' → logprob: -6.439264297485352

Token 92: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01805078610777855
    2. ' =' → logprob: -4.768050670623779
    3. '_queue' → logprob: -5.643050670623779
    4. '=' → logprob: -6.393050670623779
    5. 'queue' → logprob: -6.393050670623779
    6. 'q' → logprob: -7.018050670623779
    7. 'Queue' → logprob: -7.518050670623779
    8. 'que' → logprob: -8.268051147460938
    9. '=[]' → logprob: -8.643051147460938
    10. '_list' → logprob: -9.518051147460938

Token 93: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23430950939655304
    2. '[u' → logprob: -2.234309434890747
    3. 'adj' → logprob: -2.609309434890747
    4. '[(' → logprob: -4.484309673309326
    5. ' [' → logprob: -4.734309673309326
    6. '[]' → logprob: -5.359309673309326
    7. '[n' → logprob: -7.609309673309326
    8. ' adj' → logprob: -7.859309673309326
    9. '[[' → logprob: -7.984309673309326
    10. '[i' → logprob: -8.484309196472168

Token 94: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0006994496798142791
    2. '(u' → logprob: -7.500699520111084
    3. ' u' → logprob: -9.375699043273926
    4. '[u' → logprob: -10.375699043273926
    5. ']' → logprob: -11.750699043273926
    6. '   ' → logprob: -11.875699043273926
    7. '(' → logprob: -12.500699043273926
    8. ')' → logprob: -12.750699043273926
    9. '	u' → logprob: -13.000699043273926
    10. ' (' → logprob: -13.250699043273926

Token 95: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001146291324403137
    2. ' ]' → logprob: -9.625114440917969
    3. ']
' → logprob: -10.000114440917969
    4. ']

' → logprob: -13.500114440917969
    5. ']
' → logprob: -14.750114440917969
    6. '   ' → logprob: -15.000114440917969
    7. ')]' → logprob: -15.375114440917969
    8. ')' → logprob: -15.500114440917969
    9. ' ' → logprob: -15.875114440917969
    10. '])' → logprob: -16.62511444091797

Token 96: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05803734064102173
    2. '   ' → logprob: -3.683037281036377
    3. ' while' → logprob: -4.308037281036377
    4. '    
' → logprob: -5.183037281036377
    5. '<|end|>' → logprob: -5.183037281036377
    6. ' 
' → logprob: -6.058037281036377
    7. 'while' → logprob: -6.558037281036377
    8. '  
' → logprob: -6.808037281036377
    9. '	while' → logprob: -7.058037281036377
    10. '	
' → logprob: -8.683037757873535

Token 97: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3247419595718384
    2. 'while' (adapté à ' while') → logprob: -2.199741840362549
    3. '   ' → logprob: -2.574741840362549
    4. '
' → logprob: -3.199741840362549
    5. ' 
' → logprob: -3.824741840362549
    6. ' ' → logprob: -4.699741840362549
    7. '	while' → logprob: -4.824741840362549
    8. '    
' → logprob: -5.199741840362549
    9. '\n' → logprob: -6.824741840362549
    10. ')' → logprob: -7.449741840362549

Token 98: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.3317546248435974
    2. 'edge' → logprob: -1.8317546844482422
    3. ' len' → logprob: -2.331754684448242
    4. 'len' → logprob: -3.706754684448242
    5. ' ' → logprob: -8.456754684448242
    6. ' True' → logprob: -8.706754684448242
    7. 'True' → logprob: -9.706754684448242
    8. '(edge' → logprob: -10.456754684448242
    9. '(len' → logprob: -10.831754684448242
    10. '  ' → logprob: -11.581754684448242

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025097858160734177
    2. ',' → logprob: -7.502509593963623
    3. '):' → logprob: -8.127510070800781
    4. '!=' → logprob: -8.252510070800781
    5. '=' → logprob: -8.377510070800781
    6. ' !=' → logprob: -8.627510070800781
    7. '.' → logprob: -8.752510070800781
    8. '>' → logprob: -8.877510070800781
    9. ' :' → logprob: -8.877510070800781
    10. ' and' → logprob: -9.127510070800781

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5617656707763672
    2. '   ' → logprob: -1.0617656707763672
    3. '    
' → logprob: -4.061765670776367
    4. '        
' → logprob: -4.186765670776367
    5. '    ' → logprob: -4.186765670776367
    6. ',' → logprob: -4.561765670776367
    7. ' ' → logprob: -5.061765670776367
    8. ' 
' → logprob: -5.686765670776367
    9. ':' → logprob: -5.936765670776367
    10. '
' → logprob: -6.186765670776367

Token 101: ' q' (ID: 2335)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.0676652193069458
    2. ' next' → logprob: -1.4426652193069458
    3. 'new' → logprob: -1.8176652193069458
    4. ' new' → logprob: -1.9426652193069458
    5. '   ' → logprob: -2.8176651000976562
    6. ' nxt' → logprob: -3.5676651000976562
    7. 'n' → logprob: -4.317665100097656
    8. '       ' → logprob: -5.317665100097656
    9. 'edge' → logprob: -7.192665100097656
    10. ' nex' → logprob: -7.192665100097656

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40571117401123047
    2. '=' → logprob: -1.7807111740112305
    3. 'ue' → logprob: -2.5307111740112305
    4. 'ew' → logprob: -3.1557111740112305
    5. 'w' → logprob: -4.0307111740112305
    6. 'u' → logprob: -4.7807111740112305
    7. 'ext' → logprob: -4.9057111740112305
    8. 'e' → logprob: -5.6557111740112305
    9. '=[]' → logprob: -6.2807111740112305
    10. '=[]
' → logprob: -6.5307111740112305

Token 103: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00012094692647224292
    2. '[]
' → logprob: -9.375121116638184
    3. 'edge' → logprob: -11.000121116638184
    4. ' []' → logprob: -11.125121116638184
    5. '[]

' → logprob: -12.875121116638184
    6. '[' → logprob: -13.375121116638184
    7. '[]}' → logprob: -15.250121116638184
    8. '[]>' → logprob: -16.125120162963867
    9. ' ' → logprob: -16.500120162963867
    10. '   ' → logprob: -17.125120162963867

Token 104: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.5763944983482361
    2. '()' → logprob: -0.8263944983482361
    3. '(' → logprob: -8.826394081115723
    4. '()
' → logprob: -9.076394081115723
    5. 'edge' → logprob: -9.076394081115723
    6. '(set' → logprob: -9.951394081115723
    7. '=edge' → logprob: -11.326394081115723
    8. '([]' → logprob: -12.326394081115723
    9. '()

' → logprob: -12.701394081115723
    10. '(range' → logprob: -13.201394081115723

Token 105: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.09082335978746414
    2. ')' → logprob: -2.4658234119415283
    3. '       ' → logprob: -6.465823173522949
    4. ')
' → logprob: -8.34082317352295
    5. '   ' → logprob: -9.96582317352295
    6. ')

' → logprob: -11.09082317352295
    7. '())
' → logprob: -12.46582317352295
    8. ' )
' → logprob: -12.59082317352295
    9. '()
' → logprob: -13.09082317352295
    10. ' ' → logprob: -13.09082317352295

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.431207682704553e-05
    2. '   ' → logprob: -10.375054359436035
    3. '<|end|>' → logprob: -11.875054359436035
    4. ',' → logprob: -12.375054359436035
    5. '	' → logprob: -12.750054359436035
    6. ')' → logprob: -13.500054359436035
    7. '      ' → logprob: -13.500054359436035
    8. ' ' → logprob: -13.750054359436035
    9. '        
' → logprob: -13.875054359436035
    10. '[]' → logprob: -14.000054359436035

Token 107: ' edge' (ID: 11165)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002467966405674815
    2. '   ' → logprob: -8.37524700164795
    3. '        
' → logprob: -12.62524700164795
    4. ' edge' → logprob: -13.00024700164795
    5. '	   ' → logprob: -13.00024700164795
    6. '	' → logprob: -13.25024700164795
    7. '
' → logprob: -13.62524700164795
    8. '    
' → logprob: -14.12524700164795
    9. '      ' → logprob: -14.12524700164795
    10. '[]' → logprob: -14.50024700164795

Token 108: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1241738498210907
    2. ' =' → logprob: -2.374173879623413
    3. '.clear' → logprob: -3.749173879623413
    4. '=[]' → logprob: -9.374174118041992
    5. '[:]' → logprob: -9.874174118041992
    6. '.=' → logprob: -12.499174118041992
    7. 'clear' → logprob: -12.999174118041992
    8. '＝' → logprob: -13.249174118041992
    9. '.' → logprob: -15.624174118041992
    10. ' ' → logprob: -15.749174118041992

Token 109: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0002669384120963514
    2. ' []' → logprob: -8.625267028808594
    3. '[]
' → logprob: -9.375267028808594
    4. '[]

' → logprob: -13.875267028808594
    5. '[]}' → logprob: -14.625267028808594
    6. '[' → logprob: -14.750267028808594
    7. '[]>' → logprob: -15.125267028808594
    8. ' ' → logprob: -15.250267028808594
    9. 'list' → logprob: -16.500267028808594
    10. '[],' → logprob: -16.625267028808594

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000252160825766623
    2. ' for' → logprob: -9.250251770019531
    3. '   ' → logprob: -9.875251770019531
    4. 'for' → logprob: -10.250251770019531
    5. '	' → logprob: -10.625251770019531
    6. '<|end|>' → logprob: -11.000251770019531
    7. '        
' → logprob: -11.250251770019531
    8. '	   ' → logprob: -12.625251770019531
    9. '
' → logprob: -12.750251770019531
    10. '	for' → logprob: -13.125251770019531

Token 111: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4052286148071289
    2. '       ' → logprob: -1.155228614807129
    3. 'd' (adapté à ' d') → logprob: -4.155228614807129
    4. ' for' → logprob: -6.155228614807129
    5. '   ' → logprob: -7.905228614807129
    6. ' ' → logprob: -12.030228614807129
    7. '	for' → logprob: -12.280228614807129
    8. 'while' → logprob: -12.905228614807129
    9. 'q' → logprob: -13.905228614807129
    10. '        
' → logprob: -14.655228614807129

Token 112: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07948770374059677
    2. '+=' → logprob: -2.5794878005981445
    3. '+' → logprob: -8.079487800598145
    4. '=' → logprob: -8.829487800598145
    5. ' =' → logprob: -8.954487800598145
    6. ' +' → logprob: -11.829487800598145
    7. '++' → logprob: -13.454487800598145
    8. ' ' → logprob: -13.829487800598145
    9. '<|end|>' → logprob: -14.329487800598145
    10. '    ' → logprob: -14.454487800598145

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.37520408630371
    4. '１' → logprob: -19.12520408630371
    5. '  ' → logprob: -19.25020408630371
    6. '<|end|>' → logprob: -20.25020408630371
    7. '    ' → logprob: -20.43770408630371
    8. '+' → logprob: -20.43770408630371
    9. '0' → logprob: -20.68770408630371
    10. ' ' → logprob: -21.18770408630371

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.625003814697266
    4. '１' → logprob: -19.125003814697266
    5. '<|end|>' → logprob: -19.875003814697266
    6. '  ' → logprob: -20.375003814697266
    7. '```' → logprob: -20.812503814697266
    8. '0' → logprob: -21.125003814697266
    9. '১' → logprob: -21.250003814697266
    10. '۱' → logprob: -21.375003814697266

Token 115: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5759963393211365
    2. '   ' → logprob: -1.4509963989257812
    3. ' for' → logprob: -1.9509963989257812
    4. '<|end|>' → logprob: -3.5759963989257812
    5. 'for' → logprob: -3.7009963989257812
    6. '	for' → logprob: -5.450996398925781
    7. ' ' → logprob: -6.200996398925781
    8. '	' → logprob: -6.700996398925781
    9. '  ' → logprob: -7.700996398925781
    10. '
' → logprob: -8.700996398925781

Token 117: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0035322478506714106
    2. ' for' → logprob: -6.003532409667969
    3. '       ' → logprob: -6.878532409667969
    4. '   ' → logprob: -10.628532409667969
    5. '	for' → logprob: -13.503532409667969
    6. ' ' → logprob: -14.378532409667969
    7. '  ' → logprob: -16.50353240966797
    8. '```' → logprob: -16.87853240966797
    9. '
' → logprob: -17.37853240966797
    10. '    ' → logprob: -17.87853240966797

Token 118: ' ce' (ID: 2357)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.13475702702999115
    2. 'u' → logprob: -3.1347570419311523
    3. 'x' → logprob: -3.5097570419311523
    4. 'w' → logprob: -3.7597570419311523
    5. ' v' → logprob: -4.384757041931152
    6. 'e' → logprob: -5.634757041931152
    7. 'q' → logprob: -5.884757041931152
    8. 'qi' → logprob: -6.134757041931152
    9. 'p' → logprob: -6.884757041931152
    10. 'node' → logprob: -7.134757041931152

Token 119: ' in' (ID: 306)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.15788981318473816
    2. 'q' → logprob: -3.0328898429870605
    3. 'll' → logprob: -3.4078898429870605
    4. 'l' → logprob: -3.6578898429870605
    5. 'dge' → logprob: -5.0328898429870605
    6. 'rr' → logprob: -5.2828898429870605
    7. 'n' → logprob: -5.4078898429870605
    8. 'lement' → logprob: -5.5328898429870605
    9. 'nd' → logprob: -6.0328898429870605
    10. 'r' → logprob: -6.2828898429870605

Token 120: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00020509003661572933
    2. ' q' → logprob: -8.500205039978027
    3. ' ' → logprob: -13.875205039978027
    4. '  ' → logprob: -15.000205039978027
    5. '   ' → logprob: -15.625205039978027
    6. '	q' → logprob: -16.750205993652344
    7. 'range' → logprob: -17.625205993652344
    8. 'ach' → logprob: -17.625205993652344
    9. '    ' → logprob: -17.750205993652344
    10. 'c' → logprob: -18.000205993652344

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00100422790274024
    2. ':
' → logprob: -7.001004219055176
    3. '           ' → logprob: -10.126004219055176
    4. '       ' → logprob: -11.251004219055176
    5. '):' → logprob: -11.501004219055176
    6. '<|end|>' → logprob: -11.501004219055176
    7. '<|end|>' → logprob: -12.251004219055176
    8. ',' → logprob: -12.251004219055176
    9. ' :' → logprob: -12.626004219055176
    10. ':

' → logprob: -13.876004219055176

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3921830654144287
    2. '       ' → logprob: -1.7671830654144287
    3. ' for' → logprob: -2.1421830654144287
    4. 'for' → logprob: -3.3921830654144287
    5. '        ' → logprob: -6.392183303833008
    6. '         ' → logprob: -7.892183303833008
    7. '          ' → logprob: -8.767183303833008
    8. '   ' → logprob: -9.142183303833008
    9. '        
' → logprob: -9.392183303833008
    10. '	       ' → logprob: -9.642183303833008

Token 123: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.026852982118725777
    2. ' for' → logprob: -4.026853084564209
    3. '       ' → logprob: -4.776853084564209
    4. '           ' → logprob: -8.90185260772705
    5. '   ' → logprob: -9.27685260772705
    6. '	for' → logprob: -11.65185260772705
    7. '               ' → logprob: -12.52685260772705
    8. ' ' → logprob: -15.65185260772705
    9. '	       ' → logprob: -16.276853561401367
    10. '```' → logprob: -16.776853561401367

Token 124: ' ne' (ID: 453)
  Prédit: ' nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nv' → logprob: -0.8162504434585571
    2. ' ne' → logprob: -1.5662504434585571
    3. ' nx' → logprob: -2.5662503242492676
    4. ' nxt' → logprob: -2.6912503242492676
    5. ' v' → logprob: -2.9412503242492676
    6. ' nex' → logprob: -3.8162503242492676
    7. 'ne' → logprob: -3.8162503242492676
    8. 'nv' → logprob: -3.9412503242492676
    9. ' w' → logprob: -4.066250324249268
    10. ' next' → logprob: -4.566250324249268

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3624134659767151
    2. 'in' → logprob: -1.3624134063720703
    3. 'igh' → logprob: -3.2374134063720703
    4. 'ig' → logprob: -5.98741340637207
    5. 'ighbor' → logprob: -6.11241340637207
    6. 'i' → logprob: -6.48741340637207
    7. 'ighbour' → logprob: -6.73741340637207
    8. ' ' → logprob: -7.98741340637207
    9. 'ighbors' → logprob: -8.48741340637207
    10. 'ighborhood' → logprob: -9.23741340637207

Token 126: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.002501579001545906
    2. ' adj' → logprob: -6.002501487731934
    3. 'ad' → logprob: -10.627501487731934
    4. ' ' → logprob: -14.002501487731934
    5. '   ' → logprob: -15.002501487731934
    6. '(adj' → logprob: -15.377501487731934
    7. '  ' → logprob: -16.00250244140625
    8. ' ad' → logprob: -16.75250244140625
    9. 'aj' → logprob: -17.25250244140625
    10. '    ' → logprob: -17.87750244140625

Token 127: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.842555426876061e-06
    2. '[u' → logprob: -13.125004768371582
    3. 'u' → logprob: -14.625004768371582
    4. 'acency' → logprob: -14.750004768371582
    5. 'ce' → logprob: -15.000004768371582
    6. ' [' → logprob: -15.500004768371582
    7. '           ' → logprob: -15.875004768371582
    8. '       ' → logprob: -16.0000057220459
    9. '```' → logprob: -16.1250057220459
    10. '   ' → logprob: -16.1250057220459

Token 128: 'ce' (ID: 400)
  Prédit: 'ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.00023131117632146925
    2. ' ce' → logprob: -8.375231742858887
    3. '[' → logprob: -14.500231742858887
    4. '][' → logprob: -16.62523078918457
    5. '   ' → logprob: -17.25023078918457
    6. '-ce' → logprob: -17.37523078918457
    7. 'ceed' → logprob: -17.50023078918457
    8. '_ce' → logprob: -17.50023078918457
    9. 'ces' → logprob: -18.00023078918457
    10. 'c' → logprob: -18.00023078918457

Token 129: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.05089964717626572
    2. ':' → logprob: -3.1758997440338135
    3. '):' → logprob: -4.925899505615234
    4. ']' → logprob: -8.050899505615234
    5. '}:' → logprob: -9.925899505615234
    6. ']:
' → logprob: -10.050899505615234
    7. '>:' → logprob: -10.175899505615234
    8. '               ' → logprob: -10.925899505615234
    9. '']:' → logprob: -11.050899505615234
    10. ']):' → logprob: -11.175899505615234

Token 130: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011462911497801542
    2. ' if' → logprob: -7.75114631652832
    3. '<|end|>' → logprob: -8.12614631652832
    4. ':' → logprob: -9.00114631652832
    5. '           ' → logprob: -9.37614631652832
    6. '                
' → logprob: -10.12614631652832
    7. ',' → logprob: -10.37614631652832
    8. '	           ' → logprob: -10.50114631652832
    9. 'if' → logprob: -10.62614631652832
    10. ':
' → logprob: -10.87614631652832

Token 131: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.33125782012939453
    2. ' if' → logprob: -1.4562578201293945
    3. 'if' (adapté à ' if') → logprob: -3.0812578201293945
    4. '               ' → logprob: -6.5812578201293945
    5. '                    ' → logprob: -7.9562578201293945
    6. '                ' → logprob: -8.081257820129395
    7. '           ' → logprob: -8.331257820129395
    8. '                    
' → logprob: -8.331257820129395
    9. '    ' → logprob: -9.206257820129395
    10. '   ' → logprob: -9.706257820129395

Token 132: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.038279708474874496
    2. 'not' → logprob: -3.2882797718048096
    3. ' is' → logprob: -8.66327953338623
    4. 'is' → logprob: -10.16327953338623
    5. '(not' → logprob: -10.78827953338623
    6. '	not' → logprob: -13.03827953338623
    7. ' ' → logprob: -13.53827953338623
    8. ' (' → logprob: -13.66327953338623
    9. '   ' → logprob: -14.53827953338623
    10. ' ' → logprob: -14.78827953338623

Token 133: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.029750484973192215
    2. 'is' → logprob: -3.5297505855560303
    3. '	is' → logprob: -18.02975082397461
    4. ' ' → logprob: -18.02975082397461
    5. '(is' → logprob: -18.52975082397461
    6. ' ' → logprob: -19.27975082397461
    7. '   ' → logprob: -19.40475082397461
    8. ')is' → logprob: -20.02975082397461
    9. '_is' → logprob: -20.40475082397461
    10. '0' → logprob: -20.90475082397461

Token 134: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.512236498361744e-07
    2. 'searched' → logprob: -15.000000953674316
    3. ' S' → logprob: -17.125
    4. 'earched' → logprob: -17.5
    5. ' searched' → logprob: -18.0
    6. 'Search' → logprob: -19.0
    7. '_S' → logprob: -20.0
    8. '[' → logprob: -20.375
    9. '
' → logprob: -21.5
    10. 'Se' → logprob: -21.75

Token 135: 'earched' (ID: 146403)
  Prédit: 'earched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'earched' → logprob: -0.06991630792617798
    2. 'arched' → logprob: -2.819916248321533
    3. 'ear' → logprob: -4.944916248321533
    4. 'arch' → logprob: -7.819916248321533
    5. 'searched' → logprob: -8.194916725158691
    6. 'e' → logprob: -10.194916725158691
    7. 'earch' → logprob: -10.444916725158691
    8. 'S' → logprob: -10.569916725158691
    9. '[' → logprob: -11.944916725158691
    10. 'ea' → logprob: -12.069916725158691

Token 136: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -14.875
    3. '```' → logprob: -16.875
    4. '(ne' → logprob: -18.625
    5. '
' → logprob: -18.625
    6. '[
' → logprob: -19.25
    7. '   ' → logprob: -19.625
    8. 'ne' → logprob: -19.75
    9. '[int' → logprob: -20.25
    10. '
' → logprob: -20.25

Token 137: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.00017278951418120414
    2. '[' → logprob: -8.75017261505127
    3. '(ne' → logprob: -11.25017261505127
    4. ' ne' → logprob: -13.87517261505127
    5. 'n' → logprob: -15.87517261505127
    6. '
' → logprob: -15.87517261505127
    7. ']' → logprob: -17.250173568725586
    8. '_ne' → logprob: -18.625173568725586
    9. '-ne' → logprob: -18.625173568725586
    10. '```' → logprob: -18.625173568725586

Token 138: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.16222822666168213
    2. ']:
' → logprob: -1.9122282266616821
    3. ']' → logprob: -6.412228107452393
    4. ']:
' → logprob: -8.91222858428955
    5. ']:

' → logprob: -9.03722858428955
    6. ' ]' → logprob: -9.91222858428955
    7. ':' → logprob: -10.41222858428955
    8. ']:


' → logprob: -12.03722858428955
    9. ':
' → logprob: -12.28722858428955
    10. '                   ' → logprob: -12.78722858428955

Token 139: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.052818942815065384
    2. ':' → logprob: -3.927819013595581
    3. '               ' → logprob: -4.552818775177002
    4. '                ' → logprob: -4.927818775177002
    5. '<|end|>' → logprob: -5.302818775177002
    6. '                    ' → logprob: -5.802818775177002
    7. '                       ' → logprob: -6.677818775177002
    8. ' ' → logprob: -7.177818775177002
    9. '<|end|>' → logprob: -7.677818775177002
    10. '                  ' → logprob: -7.677818775177002

Token 140: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.017651598900556564
    2. '                       ' → logprob: -4.767651557922363
    3. '                   ' → logprob: -5.392651557922363
    4. 'is' (adapté à ' is') → logprob: -5.517651557922363
    5. '                    ' → logprob: -9.017651557922363
    6. '   ' → logprob: -9.142651557922363
    7. '               ' → logprob: -9.767651557922363
    8. ' ' → logprob: -10.517651557922363
    9. '    ' → logprob: -10.892651557922363
    10. '       ' → logprob: -11.017651557922363

Token 141: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.2200749754119897e-06
    2. 'earched' → logprob: -13.625001907348633
    3. 'searched' → logprob: -14.750001907348633
    4. ' S' → logprob: -15.250001907348633
    5. 'earch' → logprob: -16.250001907348633
    6. 'Search' → logprob: -16.500001907348633
    7. ' searched' → logprob: -16.750001907348633
    8. '[' → logprob: -16.875001907348633
    9. '   ' → logprob: -17.500001907348633
    10. '```' → logprob: -17.750001907348633

Token 142: 'earched' (ID: 146403)
  Prédit: 'earched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'earched' → logprob: -0.0781809464097023
    2. 'S' → logprob: -2.703181028366089
    3. 'arched' → logprob: -5.07818078994751
    4. 'ear' → logprob: -6.57818078994751
    5. 'arch' → logprob: -7.70318078994751
    6. 'searched' → logprob: -10.078181266784668
    7. '[' → logprob: -10.578181266784668
    8. 'Archived' → logprob: -10.828181266784668
    9. 'earch' → logprob: -11.703181266784668
    10. '   ' → logprob: -12.078181266784668

Token 143: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -14.625000953674316
    3. ' [' → logprob: -16.0
    4. '<|end|>' → logprob: -16.375
    5. '
' → logprob: -17.625
    6. '\[' → logprob: -18.125
    7. '[
' → logprob: -18.5
    8. '‌' → logprob: -18.625
    9. '[new' → logprob: -19.0
    10. ')[' → logprob: -19.25

Token 144: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.00015467056073248386
    2. '[' → logprob: -8.875154495239258
    3. ' ne' → logprob: -11.625154495239258
    4. '(ne' → logprob: -12.375154495239258
    5. 'n' → logprob: -14.625154495239258
    6. '
' → logprob: -14.750154495239258
    7. ']' → logprob: -15.625154495239258
    8. '   ' → logprob: -15.875154495239258
    9. ' ' → logprob: -16.750154495239258
    10. ')' → logprob: -17.125154495239258

Token 145: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00029112942866049707
    2. ']=' → logprob: -8.250290870666504
    3. '[' → logprob: -10.625290870666504
    4. ' ]' → logprob: -12.250290870666504
    5. '=' → logprob: -15.000290870666504
    6. ']
' → logprob: -15.625290870666504
    7. ']==' → logprob: -17.00029182434082
    8. '   ' → logprob: -17.37529182434082
    9. '']' → logprob: -17.50029182434082
    10. '                   ' → logprob: -17.62529182434082

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576012134552002
    2. '=' → logprob: -0.826012134552002
    3. ']' → logprob: -9.826011657714844
    4. '=True' → logprob: -11.201011657714844
    5. '                   ' → logprob: -13.201011657714844
    6. ']=' → logprob: -13.326011657714844
    7. '[' → logprob: -14.826011657714844
    8. ')' → logprob: -15.201011657714844
    9. '   ' → logprob: -15.326011657714844
    10. ' ' → logprob: -15.451011657714844

Token 147: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.16022422909736633
    2. ' True' → logprob: -1.910224199295044
    3. '(True' → logprob: -15.785223960876465
    4. '=True' → logprob: -18.41022491455078
    5. '.True' → logprob: -20.78522491455078
    6. '_true' → logprob: -21.78522491455078
    7. 'False' → logprob: -22.91022491455078
    8. 'true' → logprob: -22.91022491455078
    9. ' Tru' → logprob: -22.91022491455078
    10. '1' → logprob: -23.66022491455078

Token 148: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004991783644072711
    2. '<|end|>' → logprob: -8.25049877166748
    3. '               ' → logprob: -9.37549877166748
    4. '           ' → logprob: -10.12549877166748
    5. '                    ' → logprob: -10.75049877166748
    6. '                    
' → logprob: -10.87549877166748
    7. '
' → logprob: -11.25049877166748
    8. 'distance' → logprob: -11.37549877166748
    9. '				' → logprob: -11.62549877166748
    10. ',' → logprob: -11.87549877166748

Token 149: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004746841266751289
    2. '                    
' → logprob: -6.129746913909912
    3. 'distance' → logprob: -7.129746913909912
    4. '               ' → logprob: -7.504746913909912
    5. '                    ' → logprob: -8.129746437072754
    6. '<|end|>' → logprob: -8.254746437072754
    7. '           ' → logprob: -8.754746437072754
    8. '       ' → logprob: -9.379746437072754
    9. ' distance' → logprob: -10.254746437072754
    10. '                  ' → logprob: -10.379746437072754

Token 150: ' edge' (ID: 11165)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.013761819340288639
    2. ' distance' → logprob: -4.5137619972229
    3. 'edge' (adapté à ' edge') → logprob: -6.0137619972229
    4. '                   ' → logprob: -8.513761520385742
    5. ' edge' → logprob: -9.763761520385742
    6. '               ' → logprob: -12.638761520385742
    7. '           ' → logprob: -14.138761520385742
    8. '   ' → logprob: -14.513761520385742
    9. '(distance' → logprob: -14.763761520385742
    10. '```' → logprob: -14.763761520385742

Token 151: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00408160500228405
    2. '.' → logprob: -5.504081726074219
    3. ' .' → logprob: -13.629081726074219
    4. 'append' → logprob: -14.004081726074219
    5. '.app' → logprob: -14.129081726074219
    6. '.extend' → logprob: -15.629081726074219
    7. '.Append' → logprob: -16.75408172607422
    8. '.push' → logprob: -16.87908172607422
    9. '_append' → logprob: -17.50408172607422
    10. ' append' → logprob: -17.62908172607422

Token 152: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.000158842682139948
    2. '(' → logprob: -8.75015926361084
    3. ' (' → logprob: -15.62515926361084
    4. '(
' → logprob: -16.875158309936523
    5. '((' → logprob: -17.375158309936523
    6. '(le' → logprob: -17.375158309936523
    7. '(n' → logprob: -18.000158309936523
    8. '(

' → logprob: -19.875158309936523
    9. '(
' → logprob: -20.625158309936523
    10. '(the' → logprob: -20.750158309936523

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7305192351341248
    2. '                   ' → logprob: -0.9805192351341248
    3. ')
' → logprob: -1.9805192947387695
    4. '
' → logprob: -5.9805192947387695
    5. '           ' → logprob: -7.2305192947387695
    6. '               ' → logprob: -7.4805192947387695
    7. '       ' → logprob: -8.23051929473877
    8. '                    ' → logprob: -8.35551929473877
    9. ',' → logprob: -9.23051929473877
    10. '                       ' → logprob: -9.35551929473877

Token 154: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013711142353713512
    2. 'distance' → logprob: -4.513710975646973
    3. '               ' → logprob: -6.763710975646973
    4. '           ' → logprob: -7.888710975646973
    5. '       ' → logprob: -8.263710975646973
    6. '                    
' → logprob: -8.388710975646973
    7. ' distance' → logprob: -8.638710975646973
    8. '                    ' → logprob: -9.638710975646973
    9. '```' → logprob: -9.638710975646973
    10. '
' → logprob: -9.763710975646973

Token 155: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' (adapté à ' distance') → logprob: -4.584861744660884e-05
    2. ' distance' → logprob: -10.000045776367188
    3. '(distance' → logprob: -15.125045776367188
    4. '                   ' → logprob: -17.125045776367188
    5. '
' → logprob: -19.000045776367188
    6. '.distance' → logprob: -19.250045776367188
    7. '   ' → logprob: -19.625045776367188
    8. '               ' → logprob: -20.000045776367188
    9. '           ' → logprob: -20.750045776367188
    10. 'Distance' → logprob: -21.125045776367188

Token 156: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.25
    3. '```' → logprob: -17.375
    4. '[
' → logprob: -17.875
    5. '[new' → logprob: -18.75
    6. '[node' → logprob: -19.375
    7. '[n' → logprob: -19.5
    8. '\[' → logprob: -19.75
    9. '[next' → logprob: -20.25
    10. '
' → logprob: -20.5

Token 157: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -1.0445127372804563e-05
    2. ' ne' → logprob: -12.25001049041748
    3. '[' → logprob: -12.87501049041748
    4. '(ne' → logprob: -12.87501049041748
    5. 'n' → logprob: -16.125009536743164
    6. '   ' → logprob: -16.500009536743164
    7. 'neighbor' → logprob: -16.750009536743164
    8. 'nei' → logprob: -17.250009536743164
    9. '```' → logprob: -18.000009536743164
    10. '_ne' → logprob: -18.500009536743164

Token 158: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5794240236282349
    2. '=' → logprob: -0.8294240236282349
    3. ']' → logprob: -5.704423904418945
    4. ')' → logprob: -9.329423904418945
    5. ']=' → logprob: -9.829423904418945
    6. ')=' → logprob: -13.079423904418945
    7. ' ]' → logprob: -13.704423904418945
    8. '=d' → logprob: -15.079423904418945
    9. '[' → logprob: -15.329423904418945
    10. 's' → logprob: -15.454423904418945

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '=d' → logprob: -17.398244857788086
    4. '＝' → logprob: -17.523244857788086
    5. ')' → logprob: -18.398244857788086
    6. '=
' → logprob: -18.523244857788086
    7. ')=' → logprob: -19.023244857788086
    8. '.=' → logprob: -19.773244857788086
    9. '=s' → logprob: -19.773244857788086
    10. ' ' → logprob: -20.398244857788086

Token 160: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10020699352025986
    2. ' d' → logprob: -2.3502070903778076
    3. ' ' → logprob: -16.10020637512207
    4. '	d' → logprob: -16.22520637512207
    5. 'distance' → logprob: -16.35020637512207
    6. ')d' → logprob: -17.22520637512207
    7. '                   ' → logprob: -17.72520637512207
    8. ' ' → logprob: -17.85020637512207
    9. '                       ' → logprob: -18.60020637512207
    10. '
' → logprob: -18.60020637512207

Token 161: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: 'B' (ID: 33)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: 'FS' (ID: 14179)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.08506865054368973
    2. 'F' → logprob: -3.085068702697754
    3. 'FS' → logprob: -4.085068702697754
    4. '(' → logprob: -5.585068702697754
    5. ':' → logprob: -5.710068702697754
    6. ')' → logprob: -6.085068702697754
    7. '#' → logprob: -6.835068702697754
    8. '```' → logprob: -7.210068702697754
    9. '_' → logprob: -7.335068702697754
    10. '   ' → logprob: -7.335068702697754

Token 164: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030159108340740204
    2. '(u' → logprob: -3.5301589965820312
    3. '(user' → logprob: -9.155158996582031
    4. '(n' → logprob: -9.530158996582031
    5. '("("' → logprob: -9.905158996582031
    6. '((' → logprob: -10.155158996582031
    7. '(
' → logprob: -10.280158996582031
    8. ' (' → logprob: -10.530158996582031
    9. '(`' → logprob: -11.030158996582031
    10. '('' → logprob: -11.155158996582031

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -11.625019073486328
    3. 'n' → logprob: -12.625019073486328
    4. 'u' → logprob: -13.000019073486328
    5. 'i' → logprob: -13.625019073486328
    6. ')' → logprob: -13.625019073486328
    7. 's' → logprob: -14.125019073486328
    8. '0' → logprob: -14.375019073486328
    9. '   ' → logprob: -15.500019073486328
    10. '(' → logprob: -15.562519073486328

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. ')
' → logprob: -12.12501049041748
    3. ' )' → logprob: -12.25001049041748
    4. '))' → logprob: -17.000009536743164
    5. ')#' → logprob: -17.500009536743164
    6. ')

' → logprob: -17.875009536743164
    7. ')`' → logprob: -17.875009536743164
    8. ')**' → logprob: -18.375009536743164
    9. '())' → logprob: -18.625009536743164
    10. '),' → logprob: -18.750009536743164

Token 167: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.282920129597187e-05
    2. ' for' → logprob: -11.875012397766113
    3. '
' → logprob: -12.625012397766113
    4. '```' → logprob: -13.750012397766113
    5. '<|end|>' → logprob: -14.125012397766113
    6. 'print' → logprob: -14.625012397766113
    7. 'if' → logprob: -16.00001335144043
    8. ')' → logprob: -17.37501335144043
    9. ' 
' → logprob: -18.12501335144043
    10. '    
' → logprob: -18.25001335144043

Token 168: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5781869292259216
    2. ' i' → logprob: -0.8281869292259216
    3. 'dist' → logprob: -7.828186988830566
    4. ' v' → logprob: -7.953186988830566
    5. 'v' → logprob: -7.953186988830566
    6. 'u' → logprob: -8.078186988830566
    7. 'd' → logprob: -8.453186988830566
    8. ' u' → logprob: -8.578186988830566
    9. ' dist' → logprob: -8.953186988830566
    10. ' d' → logprob: -9.078186988830566

Token 169: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020776497200131416
    2. 'in' → logprob: -3.8957765102386475
    3. ' ' → logprob: -8.645776748657227
    4. 'n' → logprob: -11.270776748657227
    5. 'range' → logprob: -11.395776748657227
    6. '	in' → logprob: -11.645776748657227
    7. ' i' → logprob: -11.770776748657227
    8. ',' → logprob: -12.395776748657227
    9. ' n' → logprob: -12.520776748657227
    10. ' ' → logprob: -13.020776748657227

Token 170: ' x' (ID: 1215)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5148484706878662
    2. 'dist' → logprob: -1.2648484706878662
    3. ' dist' → logprob: -2.389848470687866
    4. ' d' → logprob: -3.639848470687866
    5. 'dis' → logprob: -6.889848709106445
    6. 'di' → logprob: -7.139848709106445
    7. ' dis' → logprob: -9.014848709106445
    8. ' di' → logprob: -9.014848709106445
    9. 'v' → logprob: -9.889848709106445
    10. 'dst' → logprob: -11.389848709106445

Token 171: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3869296610355377
    2. ' in' → logprob: -1.1369296312332153
    3. ',' → logprob: -9.886929512023926
    4. 'n' → logprob: -13.386929512023926
    5. ' ' → logprob: -13.386929512023926
    6. ')' → logprob: -14.136929512023926
    7. ',in' → logprob: -14.261929512023926
    8. 'In' → logprob: -14.761929512023926
    9. 'to' → logprob: -15.386929512023926
    10. 'inth' → logprob: -15.386929512023926

Token 172: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.005234952084720135
    2. ' enumerate' → logprob: -5.255234718322754
    3. '```' → logprob: -15.005234718322754
    4. ' ' → logprob: -15.130234718322754
    5. '   ' → logprob: -15.255234718322754
    6. 'enum' → logprob: -15.630234718322754
    7. 'zip' → logprob: -16.88023567199707
    8. 'en' → logprob: -17.00523567199707
    9. 'range' → logprob: -17.38023567199707
    10. '  ' → logprob: -17.38023567199707

Token 173: '(distance' (ID: 105203)
  Prédit: '(distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(distance' → logprob: -2.5776860184123507e-06
    2. 'distance' → logprob: -13.00000286102295
    3. '(' → logprob: -16.500001907348633
    4. '(range' → logprob: -16.875001907348633
    5. ' distance' → logprob: -17.750001907348633
    6. ' (' → logprob: -18.250001907348633
    7. '(dist' → logprob: -20.500001907348633
    8. '(direction' → logprob: -20.625001907348633
    9. '(depth' → logprob: -21.125001907348633
    10. '(d' → logprob: -21.500001907348633

Token 174: '[' (ID: 58)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.316316157579422
    2. '[' → logprob: -1.3163161277770996
    3. ' ):' → logprob: -6.1913161277771
    4. '):
' → logprob: -7.6913161277771
    5. ')' → logprob: -8.441316604614258
    6. ':' → logprob: -8.816316604614258
    7. '(' → logprob: -8.941316604614258
    8. ',' → logprob: -11.316316604614258
    9. '):
' → logprob: -11.816316604614258
    10. '():' → logprob: -11.941316604614258

Token 175: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7885000109672546
    2. '):' → logprob: -1.4135000705718994
    3. '[' → logprob: -1.5385000705718994
    4. '1' → logprob: -2.9135000705718994
    5. '):
' → logprob: -3.6635000705718994
    6. ']):' → logprob: -6.16349983215332
    7. ')' → logprob: -6.66349983215332
    8. '):
' → logprob: -6.66349983215332
    9. ' ' → logprob: -7.03849983215332
    10. '):

' → logprob: -7.28849983215332

Token 176: ':],' (ID: 117284)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029826506972312927
    2. ':],' → logprob: -3.5298264026641846
    3. ':]' → logprob: -9.529826164245605
    4. ']):' → logprob: -13.779826164245605
    5. '],' → logprob: -14.279826164245605
    6. '):' → logprob: -14.404826164245605
    7. ']:' → logprob: -15.029826164245605
    8. ':n' → logprob: -15.529826164245605
    9. ' :' → logprob: -15.779826164245605
    10. '():' → logprob: -15.904826164245605

Token 177: ' start' (ID: 1604)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22771957516670227
    2. ' print' → logprob: -1.7277195453643799
    3. 'sep' → logprob: -4.852719783782959
    4. ' i' → logprob: -5.102719783782959
    5. ' sep' → logprob: -5.352719783782959
    6. ')' → logprob: -5.977719783782959
    7. ' x' → logprob: -6.602719783782959
    8. '   ' → logprob: -6.727719783782959
    9. ' ' → logprob: -7.477719783782959
    10. 'i' → logprob: -7.977719783782959

Token 178: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -14.125000953674316
    3. '=
' → logprob: -16.5
    4. ' =' → logprob: -18.25
    5. '=

' → logprob: -18.25
    6. '(' → logprob: -18.375
    7. '＝' → logprob: -19.5
    8. '=}' → logprob: -20.375
    9. '=int' → logprob: -20.875
    10. ')' → logprob: -20.875

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.500021934509277
    4. '```' → logprob: -15.250021934509277
    5. '2' → logprob: -16.875022888183594
    6. '0' → logprob: -16.875022888183594
    7. '１' → logprob: -17.875022888183594
    8. '  ' → logprob: -18.125022888183594
    9. '
' → logprob: -18.250022888183594
    10. ')' → logprob: -18.250022888183594

Token 180: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028874747455120087
    2. '):
' → logprob: -3.653874635696411
    3. ':' → logprob: -6.15387487411499
    4. ')' → logprob: -7.77887487411499
    5. '   ' → logprob: -11.403874397277832
    6. '):
' → logprob: -12.153874397277832
    7. ':
' → logprob: -12.403874397277832
    8. ',' → logprob: -12.653874397277832
    9. ' ):' → logprob: -13.278874397277832
    10. '):

' → logprob: -14.653874397277832

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034735970199108124
    2. 'print' → logprob: -3.909735918045044
    3. ' print' → logprob: -4.284736156463623
    4. ' if' → logprob: -8.409735679626465
    5. '    
' → logprob: -10.659735679626465
    6. '<|end|>' → logprob: -10.659735679626465
    7. 'if' → logprob: -11.409735679626465
    8. ')' → logprob: -11.534735679626465
    9. '	print' → logprob: -11.784735679626465
    10. '```' → logprob: -12.409735679626465

Token 182: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.028172414749860764
    2. ' print' → logprob: -4.278172492980957
    3. '   ' → logprob: -4.403172492980957
    4. 'if' → logprob: -6.528172492980957
    5. ' if' → logprob: -8.528172492980957
    6. '	print' → logprob: -12.153172492980957
    7. '```' → logprob: -12.653172492980957
    8. ' ' → logprob: -13.653172492980957
    9. '    ' → logprob: -13.903172492980957
    10. '       ' → logprob: -14.403172492980957

Token 183: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.08107224106788635
    2. '(f' → logprob: -2.5810723304748535
    3. '(' → logprob: -6.2060723304748535
    4. '(x' → logprob: -8.831071853637695
    5. '((' → logprob: -11.331071853637695
    6. 'f' → logprob: -13.581071853637695
    7. '('' → logprob: -14.331071853637695
    8. '(u' → logprob: -14.456071853637695
    9. '("{}' → logprob: -14.831071853637695
    10. 'i' → logprob: -14.831071853637695

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020885419100522995
    2. ',x' → logprob: -3.895885467529297
    3. ' ,' → logprob: -8.145885467529297
    4. ',end' → logprob: -10.645885467529297
    5. ',d' → logprob: -11.020885467529297
    6. ')' → logprob: -12.395885467529297
    7. ',f' → logprob: -12.645885467529297
    8. ',i' → logprob: -13.770885467529297
    9. ',n' → logprob: -14.020885467529297
    10. ',len' → logprob: -14.520885467529297

Token 185: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023245712742209435
    2. ' x' → logprob: -3.7732458114624023
    3. 'distance' → logprob: -16.023244857788086
    4. '(x' → logprob: -17.523244857788086
    5. '"x' → logprob: -17.773244857788086
    6. ' ' → logprob: -17.898244857788086
    7. ')' → logprob: -18.398244857788086
    8. ',x' → logprob: -18.898244857788086
    9. ''x' → logprob: -19.273244857788086
    10. '	x' → logprob: -19.273244857788086

Token 186: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -12.87500286102295
    3. ')`' → logprob: -16.250003814697266
    4. '))' → logprob: -16.375003814697266
    5. ',' → logprob: -16.750003814697266
    6. ',)' → logprob: -17.000003814697266
    7. '')' → logprob: -17.375003814697266
    8. ')
' → logprob: -17.375003814697266
    9. ')#' → logprob: -17.750003814697266
    10. '),' → logprob: -18.375003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 184
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 148
Précision stricte (1ère position): 39.67%
Précision adaptée (1ère position): 42.39%
Précision (top 10): 80.43%
================================================================================
