================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
G=[[] for i in range(n)]
#G=[]
Q=[1]
d=[-1]*n
d[0]=0
visited=[False]*n
visited[0]=True

for i in range(n):
    arr=[int(x) for x in input().split()[2:]]
    for l in arr:
        G[i].append(l)
        #G[l-1].append(i+1)
    

kyori=0
while len(Q)!=0:
    
    #print(Q)
    #print(visited)
    v=Q.pop(0)
    
    for j in G[v-1]:
        if visited[j-1]:#次に行くところがすでに踏破済みだったら
            continue#更新しない
        else:
            d[j-1]=d[v-1]+1
            Q.append(j)
            visited[j-1]=True
for a in range(n):
    print(a+1,d[a])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2951568067073822
    2. '(' → logprob: -1.4201568365097046
    3. '())' → logprob: -5.295156955718994
    4. '()' → logprob: -5.545156955718994
    5. '```' → logprob: -6.170156955718994
    6. '<|end|>' → logprob: -7.295156955718994
    7. '(
' → logprob: -7.670156955718994
    8. '")' → logprob: -7.920156955718994
    9. '`)' → logprob: -8.545156478881836
    10. '')' → logprob: -8.670156478881836

Token 4: 'G' (ID: 38)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2972419261932373
    2. 'if' → logprob: -1.9222419261932373
    3. '+' → logprob: -2.1722419261932373
    4. 'i' → logprob: -2.1722419261932373
    5. ' ' → logprob: -2.6722419261932373
    6. 'for' → logprob: -2.7972419261932373
    7. '*' → logprob: -3.1722419261932373
    8. '#' → logprob: -3.1722419261932373
    9. 's' → logprob: -3.2972419261932373
    10. ''' → logprob: -3.7972419261932373

Token 5: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13767856359481812
    2. '.' → logprob: -2.262678623199463
    3. '=' → logprob: -3.887678623199463
    4. ' =' → logprob: -6.637678623199463
    5. ',' → logprob: -6.887678623199463
    6. '\[' → logprob: -7.387678623199463
    7. 'raph' → logprob: -8.387678146362305
    8. 'G' → logprob: -9.137678146362305
    9. '[r' → logprob: -9.262678146362305
    10. '[:]' → logprob: -9.387678146362305

Token 6: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00037716879160143435
    2. '[' → logprob: -8.50037670135498
    3. ']' → logprob: -9.25037670135498
    4. ' []' → logprob: -10.12537670135498
    5. '[])' → logprob: -11.00037670135498
    6. 'set' → logprob: -12.12537670135498
    7. '[]
' → logprob: -12.25037670135498
    8. '[],' → logprob: -13.00037670135498
    9. '[]}' → logprob: -13.25037670135498
    10. 'list' → logprob: -13.62537670135498

Token 7: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8834317922592163
    2. 'for' → logprob: -1.2584317922592163
    3. ']' → logprob: -2.383431911468506
    4. '(n' → logprob: -2.383431911468506
    5. '(' → logprob: -2.508431911468506
    6. ')' → logprob: -3.383431911468506
    7. '()' → logprob: -6.883431911468506
    8. ',' → logprob: -7.383431911468506
    9. ' (' → logprob: -8.383431434631348
    10. ')]' → logprob: -8.508431434631348

Token 8: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1436072140932083
    2. ' _' → logprob: -2.2686071395874023
    3. ' i' → logprob: -4.018607139587402
    4. ' ' → logprob: -4.893607139587402
    5. ' range' → logprob: -5.768607139587402
    6. 'i' → logprob: -7.018607139587402
    7. '(' → logprob: -7.893607139587402
    8. 'range' → logprob: -8.018607139587402
    9. ' in' → logprob: -10.268607139587402
    10. '_range' → logprob: -10.768607139587402

Token 9: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04860350117087364
    2. 'in' → logprob: -3.0486035346984863
    3. ' ' → logprob: -11.923603057861328
    4. ' range' → logprob: -12.673603057861328
    5. 'range' → logprob: -12.923603057861328
    6. '(' → logprob: -13.798603057861328
    7. '	in' → logprob: -13.923603057861328
    8. ')' → logprob: -14.548603057861328
    9. ' i' → logprob: -14.798603057861328
    10. 'n' → logprob: -15.423603057861328

Token 10: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868716359138489
    2. 'range' → logprob: -1.136871576309204
    3. '(range' → logprob: -14.761871337890625
    4. '	range' → logprob: -16.011871337890625
    5. '_range' → logprob: -17.011871337890625
    6. 'Range' → logprob: -17.886871337890625
    7. ' xrange' → logprob: -18.136871337890625
    8. 'rang' → logprob: -19.261871337890625
    9. 'in' → logprob: -19.636871337890625
    10. 'n' → logprob: -19.761871337890625

Token 11: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001502717612311244
    2. '(' → logprob: -6.501502513885498
    3. '(N' → logprob: -16.376502990722656
    4. '(
' → logprob: -16.501502990722656
    5. '(len' → logprob: -16.626502990722656
    6. 'n' → logprob: -16.626502990722656
    7. ' (' → logprob: -17.751502990722656
    8. '(

' → logprob: -18.001502990722656
    9. '((' → logprob: -18.251502990722656
    10. ')' → logprob: -18.501502990722656

Token 12: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00037347347824834287
    2. ')])' → logprob: -8.250373840332031
    3. ')' → logprob: -9.875373840332031
    4. '])]' → logprob: -10.250373840332031
    5. ' )' → logprob: -10.875373840332031
    6. ']' → logprob: -13.250373840332031
    7. '')]' → logprob: -13.250373840332031
    8. '])' → logprob: -13.750373840332031
    9. '))' → logprob: -14.125373840332031
    10. ')],' → logprob: -15.250373840332031

Token 13: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001310719089815393
    2. ' for' → logprob: -9.000130653381348
    3. 'n' → logprob: -12.250130653381348
    4. '
' → logprob: -13.500130653381348
    5. '<|end|>' → logprob: -14.500130653381348
    6. 'f' → logprob: -15.500130653381348
    7. ')' → logprob: -15.500130653381348
    8. 'x' → logprob: -16.500131607055664
    9. '```' → logprob: -16.500131607055664
    10. 'r' → logprob: -16.500131607055664

Token 14: 'G' (ID: 38)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12108982354402542
    2. 'f' → logprob: -2.7460899353027344
    3. ' for' → logprob: -3.2460899353027344
    4. 'n' → logprob: -5.371089935302734
    5. ' ' → logprob: -6.121089935302734
    6. 'i' → logprob: -6.746089935302734
    7. '#' → logprob: -6.996089935302734
    8. 's' → logprob: -7.871089935302734
    9. 'a' → logprob: -7.996089935302734
    10. 'd' → logprob: -8.246089935302734

Token 15: '=[]
' (ID: 63466)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30038318037986755
    2. ')' → logprob: -2.3003830909729004
    3. '.' → logprob: -2.5503830909729004
    4. ']' → logprob: -3.9253830909729004
    5. '#' → logprob: -4.3003830909729
    6. '[
' → logprob: -4.3003830909729
    7. '
' → logprob: -4.9253830909729
    8. '<|end|>' → logprob: -4.9253830909729
    9. ' ' → logprob: -5.5503830909729
    10. ',' → logprob: -5.9253830909729

Token 16: 'Q' (ID: 48)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05331364646553993
    2. ')' → logprob: -4.428313732147217
    3. ' for' → logprob: -4.678313732147217
    4. 'n' → logprob: -4.678313732147217
    5. '<|end|>' → logprob: -5.178313732147217
    6. '[' → logprob: -5.303313732147217
    7. '\' → logprob: -6.303313732147217
    8. '#' → logprob: -6.428313732147217
    9. '\n' → logprob: -6.428313732147217
    10. '```' → logprob: -6.428313732147217

Token 17: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10402879863977432
    2. ' =' → logprob: -2.6040287017822266
    3. '=[]' → logprob: -3.7290287017822266
    4. 'u' → logprob: -8.104028701782227
    5. '=int' → logprob: -8.979028701782227
    6. '=[' → logprob: -9.604028701782227
    7. '=u' → logprob: -9.604028701782227
    8. '.' → logprob: -9.979028701782227
    9. '=input' → logprob: -10.104028701782227
    10. ' ' → logprob: -10.104028701782227

Token 18: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.031009847298264503
    2. '(' → logprob: -4.281009674072266
    3. '()]' → logprob: -4.531009674072266
    4. ']' → logprob: -5.531009674072266
    5. '()' → logprob: -7.156009674072266
    6. '[]' → logprob: -7.781009674072266
    7. '(i' → logprob: -8.031009674072266
    8. 'i' → logprob: -8.531009674072266
    9. ']()' → logprob: -9.656009674072266
    10. '-' → logprob: -10.031009674072266

Token 19: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008279092609882355
    2. ')]' → logprob: -5.758279323577881
    3. ',' → logprob: -6.008279323577881
    4. ' ]' → logprob: -6.633279323577881
    5. ')' → logprob: -6.883279323577881
    6. '])' → logprob: -8.508278846740723
    7. '0' → logprob: -10.383278846740723
    8. '`]' → logprob: -11.508278846740723
    9. ' ,' → logprob: -12.258278846740723
    10. '1' → logprob: -12.633278846740723

Token 20: 'd' (ID: 67)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4551420211791992
    2. 'for' → logprob: -1.4551420211791992
    3. '<|end|>' → logprob: -1.9551420211791992
    4. ' ' → logprob: -2.080142021179199
    5. '0' → logprob: -2.205142021179199
    6. 'n' → logprob: -3.080142021179199
    7. ',' → logprob: -3.205142021179199
    8. '+' → logprob: -3.830142021179199
    9. '.' → logprob: -4.705142021179199
    10. ')' → logprob: -4.830142021179199

Token 21: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9422611594200134
    2. 'ist' → logprob: -1.1922612190246582
    3. 'istance' → logprob: -1.8172612190246582
    4. 'is' → logprob: -2.567261219024658
    5. ' =' → logprob: -3.692261219024658
    6. 'e' → logprob: -4.192261219024658
    7. '=[' → logprob: -4.442261219024658
    8. '=[]' → logprob: -4.442261219024658
    9. '[' → logprob: -7.067261219024658
    10. '```' → logprob: -7.192261219024658

Token 22: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.027083422988653183
    2. '0' → logprob: -3.777083396911621
    3. ' -' → logprob: -6.777083396911621
    4. '100' → logprob: -7.402083396911621
    5. '10' → logprob: -7.527083396911621
    6. ' ' → logprob: -8.027083396911621
    7. '-inf' → logprob: -8.027083396911621
    8. '-n' → logprob: -8.402083396911621
    9. '-f' → logprob: -8.402083396911621
    10. 'float' → logprob: -8.777083396911621

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010962257510982454
    2. ' ' → logprob: -9.500109672546387
    3. '-' → logprob: -11.000109672546387
    4. '2' → logprob: -11.875109672546387
    5. 'n' → logprob: -13.000109672546387
    6. '10' → logprob: -13.250109672546387
    7. '(' → logprob: -13.250109672546387
    8. '100' → logprob: -14.000109672546387
    9. ' -' → logprob: -14.062609672546387
    10. 'd' → logprob: -14.500109672546387

Token 24: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5327662825584412
    2. ']*' → logprob: -1.407766342163086
    3. ' for' → logprob: -2.282766342163086
    4. ',' → logprob: -2.907766342163086
    5. ']*(' → logprob: -4.907766342163086
    6. ' ]' → logprob: -5.907766342163086
    7. ']+' → logprob: -6.907766342163086
    8. 'for' → logprob: -7.782766342163086
    9. ')' → logprob: -9.907766342163086
    10. ' ' → logprob: -10.407766342163086

Token 25: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003292613197118044
    2. '(n' → logprob: -5.878292560577393
    3. '(' → logprob: -7.753292560577393
    4. ' n' → logprob: -9.87829303741455
    5. ' (' → logprob: -12.00329303741455
    6. ')n' → logprob: -15.12829303741455
    7. '100' → logprob: -15.75329303741455
    8. '0' → logprob: -16.128292083740234
    9. '_n' → logprob: -16.378292083740234
    10. '	n' → logprob: -16.628292083740234

Token 26: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.046824585646390915
    2. '<|end|>' → logprob: -3.1718246936798096
    3. '
' → logprob: -6.1718244552612305
    4. ' d' → logprob: -7.2968244552612305
    5. 'Q' → logprob: -7.4218244552612305
    6. ' 
' → logprob: -8.92182445526123
    7. '<|end|>' → logprob: -9.42182445526123
    8. 'G' → logprob: -9.42182445526123
    9. 'n' → logprob: -10.17182445526123
    10. ' ' → logprob: -10.54682445526123

Token 28: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28257155418395996
    2. '<|end|>' → logprob: -1.40757155418396
    3. '<|end|>' → logprob: -7.032571792602539
    4. '[n' → logprob: -8.782571792602539
    5. 'd' → logprob: -9.282571792602539
    6. '[user' → logprob: -9.657571792602539
    7. '[int' → logprob: -10.282571792602539
    8. '[:]' → logprob: -10.782571792602539
    9. '[d' → logprob: -10.907571792602539
    10. '```' → logprob: -11.032571792602539

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033721890300512314
    2. '1' → logprob: -3.658721923828125
    3. ' ' → logprob: -4.908721923828125
    4. 'Q' → logprob: -11.783721923828125
    5. ' Q' → logprob: -13.658721923828125
    6. ']' → logprob: -14.158721923828125
    7. '-' → logprob: -14.283721923828125
    8. '[' → logprob: -14.658721923828125
    9. ')' → logprob: -15.533721923828125
    10. '  ' → logprob: -15.596221923828125

Token 30: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.06213214620947838
    2. ']' → logprob: -2.8121321201324463
    3. ' ]' → logprob: -9.312131881713867
    4. '=' → logprob: -9.687131881713867
    5. ']+=' → logprob: -11.937131881713867
    6. ']==' → logprob: -13.437131881713867
    7. ']=(' → logprob: -13.937131881713867
    8. '"]=' → logprob: -14.437131881713867
    9. ']=-' → logprob: -14.687131881713867
    10. ']]=' → logprob: -14.812131881713867

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '00' → logprob: -17.125003814697266
    4. '000' → logprob: -17.750003814697266
    5. '1' → logprob: -18.125003814697266
    6. '۰' → logprob: -18.500003814697266
    7. '010' → logprob: -19.625003814697266
    8. '０' → logprob: -19.625003814697266
    9. '012' → logprob: -19.750003814697266
    10. '   ' → logprob: -20.000003814697266

Token 32: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: 'visited' (ID: 52453)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12944479286670685
    2. '<|end|>' → logprob: -3.5044448375701904
    3. 'for' → logprob: -3.7544448375701904
    4. ' while' → logprob: -3.7544448375701904
    5. 'w' → logprob: -4.004444599151611
    6. 't' → logprob: -4.629444599151611
    7. 'i' → logprob: -5.254444599151611
    8. 'u' → logprob: -5.754444599151611
    9. ')' → logprob: -6.504444599151611
    10. 'v' → logprob: -6.879444599151611

Token 34: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2738170921802521
    2. ' =' → logprob: -1.5238170623779297
    3. '[' → logprob: -4.02381706237793
    4. '<|end|>' → logprob: -6.27381706237793
    5. ' ' → logprob: -7.52381706237793
    6. '=[]' → logprob: -7.89881706237793
    7. '[:]' → logprob: -8.27381706237793
    8. ']' → logprob: -8.52381706237793
    9. ')' → logprob: -9.02381706237793
    10. '=[' → logprob: -9.27381706237793

Token 35: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0014962917193770409
    2. ' False' → logprob: -7.001496315002441
    3. '0' → logprob: -7.626496315002441
    4. 'True' → logprob: -9.251496315002441
    5. ' True' → logprob: -14.876496315002441
    6. ']' → logprob: -14.876496315002441
    7. '(False' → logprob: -15.751496315002441
    8. 'F' → logprob: -16.251495361328125
    9. '1' → logprob: -16.251495361328125
    10. '   ' → logprob: -16.501495361328125

Token 36: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -3.523948907968588e-05
    2. ' ]' → logprob: -10.625035285949707
    3. ']
' → logprob: -11.625035285949707
    4. ']

' → logprob: -14.125035285949707
    5. ',' → logprob: -14.750035285949707
    6. '`]' → logprob: -15.500035285949707
    7. ']
' → logprob: -15.875035285949707
    8. ')]' → logprob: -16.12503433227539
    9. ')' → logprob: -16.12503433227539
    10. '']' → logprob: -16.25003433227539

Token 37: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.190178904333152e-05
    2. ' n' → logprob: -10.375031471252441
    3. '(n' → logprob: -15.250031471252441
    4. ' ' → logprob: -15.750031471252441
    5. '(' → logprob: -16.000032424926758
    6. '   ' → logprob: -16.750032424926758
    7. '	n' → logprob: -16.750032424926758
    8. '  ' → logprob: -17.375032424926758
    9. '```' → logprob: -17.500032424926758
    10. ')n' → logprob: -17.625032424926758

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: 'visited' (ID: 52453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43592017889022827
    2. '<|end|>' → logprob: -1.060920238494873
    3. 'n' → logprob: -5.685920238494873
    4. ' for' → logprob: -7.060920238494873
    5. '```' → logprob: -7.185920238494873
    6. '#' → logprob: -7.310920238494873
    7. '<|end|>' → logprob: -7.810920238494873
    8. 'while' → logprob: -8.060919761657715
    9. 'i' → logprob: -8.685919761657715
    10. 't' → logprob: -9.185919761657715

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12717798352241516
    2. '<|end|>' → logprob: -2.1271779537200928
    3. '<|end|>' → logprob: -9.502178192138672
    4. ']' → logprob: -9.627178192138672
    5. '\[' → logprob: -10.252178192138672
    6. '```' → logprob: -10.502178192138672
    7. '[
' → logprob: -11.377178192138672
    8. '[user' → logprob: -11.377178192138672
    9. ')' → logprob: -12.252178192138672
    10. '[]' → logprob: -12.752178192138672

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001346423290669918
    2. ' ' → logprob: -6.626346588134766
    3. '1' → logprob: -11.501346588134766
    4. 'Q' → logprob: -12.626346588134766
    5. '(' → logprob: -13.001346588134766
    6. ']' → logprob: -13.626346588134766
    7. 'i' → logprob: -14.001346588134766
    8. '[' → logprob: -14.501346588134766
    9. 'n' → logprob: -14.501346588134766
    10. ' (' → logprob: -14.876346588134766

Token 42: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.2526729702949524
    2. ']' → logprob: -1.5026729106903076
    3. '=' → logprob: -7.252673149108887
    4. '=True' → logprob: -11.002673149108887
    5. ' ]' → logprob: -11.377673149108887
    6. ']==' → logprob: -12.752673149108887
    7. '']=' → logprob: -13.252673149108887
    8. ']+=' → logprob: -14.127673149108887
    9. '"]=' → logprob: -14.752673149108887
    10. 'True' → logprob: -14.752673149108887

Token 43: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009125363430939615
    2. ' True' → logprob: -7.000912666320801
    3. '1' → logprob: -14.1259126663208
    4. 'T' → logprob: -15.2509126663208
    5. 'Tr' → logprob: -17.000911712646484
    6. 'False' → logprob: -18.000911712646484
    7. ' ' → logprob: -18.375911712646484
    8. '(True' → logprob: -18.625911712646484
    9. '=True' → logprob: -19.750911712646484
    10. '0' → logprob: -21.000911712646484

Token 44: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009906481020152569
    2. '<|end|>' → logprob: -5.00990629196167
    3. 'while' → logprob: -7.00990629196167
    4. ' for' → logprob: -7.13490629196167
    5. 't' → logprob: -7.25990629196167
    6. 'n' → logprob: -8.259906768798828
    7. 'f' → logprob: -9.259906768798828
    8. 'a' → logprob: -9.384906768798828
    9. 'x' → logprob: -9.509906768798828
    10. '```' → logprob: -9.634906768798828

Token 46: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22701653838157654
    2. ' _' → logprob: -2.1020164489746094
    3. ' ' → logprob: -2.6020164489746094
    4. 'i' → logprob: -5.727016448974609
    5. '_' → logprob: -5.727016448974609
    6. ' range' → logprob: -8.97701644897461
    7. '  ' → logprob: -10.22701644897461
    8. ' ‌' → logprob: -10.85201644897461
    9. ' in' → logprob: -10.97701644897461
    10. ' ' → logprob: -11.10201644897461

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04875393211841583
    2. 'in' → logprob: -3.0487539768218994
    3. ' ' → logprob: -8.92375373840332
    4. 'range' → logprob: -10.79875373840332
    5. ' range' → logprob: -12.54875373840332
    6. 'n' → logprob: -13.54875373840332
    7. '	in' → logprob: -13.54875373840332
    8. '  ' → logprob: -13.79875373840332
    9. '_' → logprob: -14.29875373840332
    10. ')' → logprob: -14.29875373840332

Token 48: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01815931126475334
    2. 'range' → logprob: -4.01815938949585
    3. ' ' → logprob: -11.768158912658691
    4. '	range' → logprob: -14.143158912658691
    5. '  ' → logprob: -15.143158912658691
    6. ' xrange' → logprob: -15.518158912658691
    7. '(range' → logprob: -15.768158912658691
    8. '_range' → logprob: -17.143159866333008
    9. ' ran' → logprob: -17.393159866333008
    10. 'r' → logprob: -17.393159866333008

Token 49: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00524075236171484
    2. '(' → logprob: -5.2552409172058105
    3. '(range' → logprob: -12.380240440368652
    4. ' (' → logprob: -13.380240440368652
    5. '(m' → logprob: -15.380240440368652
    6. '()' → logprob: -15.505240440368652
    7. '(Q' → logprob: -15.880240440368652
    8. '(
' → logprob: -16.13024139404297
    9. '(q' → logprob: -16.13024139404297
    10. '((' → logprob: -16.38024139404297

Token 50: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.034706149250268936
    2. '):' → logprob: -3.4097061157226562
    3. ' -' → logprob: -6.909706115722656
    4. '):
' → logprob: -10.784706115722656
    5. ' ):' → logprob: -10.784706115722656
    6. ')' → logprob: -10.909706115722656
    7. '   ' → logprob: -14.659706115722656
    8. '):
' → logprob: -15.534706115722656
    9. ' ' → logprob: -15.659706115722656
    10. '  ' → logprob: -16.034706115722656

Token 51: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' arr' (ID: 1724)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39973288774490356
    2. 'for' → logprob: -1.8997328281402588
    3. ' u' → logprob: -3.149732828140259
    4. 'u' → logprob: -4.024733066558838
    5. ' pass' → logprob: -4.149733066558838
    6. '   ' → logprob: -4.149733066558838
    7. ' x' → logprob: -4.649733066558838
    8. ' t' → logprob: -4.649733066558838
    9. 'x' → logprob: -4.649733066558838
    10. 'v' → logprob: -4.899733066558838

Token 53: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03904112055897713
    2. ' =' → logprob: -3.914041042327881
    3. '=input' → logprob: -4.414041042327881
    4. '=list' → logprob: -5.414041042327881
    5. '=int' → logprob: -6.664041042327881
    6. '=line' → logprob: -7.789041042327881
    7. '=s' → logprob: -10.664041519165039
    8. '=[]' → logprob: -11.539041519165039
    9. '=len' → logprob: -11.664041519165039
    10. '=in' → logprob: -11.914041519165039

Token 54: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.19166913628578186
    2. '*' → logprob: -1.8166691064834595
    3. ']int' → logprob: -5.31666898727417
    4. ']' → logprob: -6.31666898727417
    5. 'i' → logprob: -6.44166898727417
    6. '*i' → logprob: -6.56666898727417
    7. '0' → logprob: -6.94166898727417
    8. '-' → logprob: -7.94166898727417
    9. ']*' → logprob: -8.191669464111328
    10. ' int' → logprob: -9.316669464111328

Token 55: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.007031369488686323
    2. '()]' → logprob: -5.382031440734863
    3. '(' → logprob: -6.507031440734863
    4. '(input' → logprob: -8.007031440734863
    5. '()' → logprob: -8.382031440734863
    6. '(s' → logprob: -9.007031440734863
    7. '(a' → logprob: -9.507031440734863
    8. '(i' → logprob: -9.882031440734863
    9. ']' → logprob: -10.632031440734863
    10. '(j' → logprob: -11.257031440734863

Token 56: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.483055979013443
    2. ')' → logprob: -0.9830559492111206
    3. '())' → logprob: -5.10805606842041
    4. '(' → logprob: -6.98305606842041
    5. '(x' → logprob: -7.73305606842041
    6. 'for' → logprob: -7.73305606842041
    7. ' ()' → logprob: -7.85805606842041
    8. ' )' → logprob: -8.60805606842041
    9. ' for' → logprob: -8.73305606842041
    10. '()-' → logprob: -8.98305606842041

Token 57: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22778953611850739
    2. 'for' → logprob: -2.2277896404266357
    3. ' for' → logprob: -2.9777896404266357
    4. ')' → logprob: -3.2277896404266357
    5. '(' → logprob: -5.602789402008057
    6. '(x' → logprob: -7.477789402008057
    7. '())' → logprob: -8.227789878845215
    8. '()]' → logprob: -8.227789878845215
    9. ']' → logprob: -9.227789878845215
    10. ' ()' → logprob: -9.477789878845215

Token 58: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47413548827171326
    2. 'input' → logprob: -0.9741355180740356
    3. '(input' → logprob: -9.974135398864746
    4. '=input' → logprob: -12.099135398864746
    5. '_input' → logprob: -13.224135398864746
    6. ',input' → logprob: -13.599135398864746
    7. 'in' → logprob: -13.974135398864746
    8. ' ' → logprob: -14.224135398864746
    9. ' in' → logprob: -14.974135398864746
    10. '	input' → logprob: -15.474135398864746

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.028979770839214325
    2. 'in' → logprob: -4.528979778289795
    3. '=input' → logprob: -4.653979778289795
    4. '<|end|>' → logprob: -5.528979778289795
    5. '(input' → logprob: -6.153979778289795
    6. 'input' → logprob: -7.278979778289795
    7. ' input' → logprob: -7.278979778289795
    8. '<|end|>' → logprob: -9.278979301452637
    9. ' on' → logprob: -9.528979301452637
    10. ' ' → logprob: -9.653979301452637

Token 60: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06196858361363411
    2. ' input' → logprob: -2.8119685649871826
    3. '(input' → logprob: -14.936968803405762
    4. 'range' → logprob: -15.186968803405762
    5. '=input' → logprob: -16.061967849731445
    6. 'in' → logprob: -16.936967849731445
    7. ' ' → logprob: -17.186967849731445
    8. '	input' → logprob: -17.311967849731445
    9. ',input' → logprob: -17.936967849731445
    10. '<input' → logprob: -18.186967849731445

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07289480417966843
    2. '()]' → logprob: -2.822894811630249
    3. '()' → logprob: -4.57289457321167
    4. '(' → logprob: -8.072895050048828
    5. '()].' → logprob: -8.697895050048828
    6. '())' → logprob: -9.947895050048828
    7. '()][' → logprob: -12.322895050048828
    8. '()>' → logprob: -13.697895050048828
    9. '()],' → logprob: -14.072895050048828
    10. '()-' → logprob: -14.197895050048828

Token 62: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007130279554985464
    2. 'strip' → logprob: -7.250712871551514
    3. 'rstrip' → logprob: -12.875713348388672
    4. ' split' → logprob: -15.125713348388672
    5. 'spl' → logprob: -16.250713348388672
    6. 's' → logprob: -16.375713348388672
    7. '(split' → logprob: -16.500713348388672
    8. 'sp' → logprob: -17.500713348388672
    9. 'plit' → logprob: -20.125713348388672
    10. ')' → logprob: -20.750713348388672

Token 63: '()[' (ID: 20778)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.000731377920601517
    2. '()' → logprob: -8.000731468200684
    3. '())' → logprob: -8.000731468200684
    4. '(' → logprob: -9.750731468200684
    5. '()],' → logprob: -14.250731468200684
    6. '(),' → logprob: -14.625731468200684
    7. '()][' → logprob: -15.000731468200684
    8. '()]
' → logprob: -15.250731468200684
    9. '('' → logprob: -15.375731468200684
    10. ')]' → logprob: -15.625731468200684

Token 64: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17632095515727997
    2. '()]' → logprob: -1.9263209104537964
    3. '()' → logprob: -4.676321029663086
    4. '2' → logprob: -6.426321029663086
    5. '(' → logprob: -6.676321029663086
    6. ']' → logprob: -6.926321029663086
    7. '():' → logprob: -7.176321029663086
    8. ':]' → logprob: -7.301321029663086
    9. ')]' → logprob: -7.426321029663086
    10. '()][' → logprob: -8.051321029663086

Token 65: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048595886677503586
    2. ':]' → logprob: -3.048595905303955
    3. ':],' → logprob: -12.048595428466797
    4. '():' → logprob: -13.923595428466797
    5. ':]

' → logprob: -14.173595428466797
    6. ':].' → logprob: -14.423595428466797
    7. '::' → logprob: -15.173595428466797
    8. ':]
' → logprob: -16.423595428466797
    9. '：' → logprob: -16.673595428466797
    10. ':])
' → logprob: -16.798595428466797

Token 66: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6977086663246155
    2. ']]' → logprob: -0.6977086663246155
    3. ' ]]' → logprob: -5.822708606719971
    4. ')]' → logprob: -7.072708606719971
    5. ' ]' → logprob: -7.447708606719971
    6. '])' → logprob: -9.197709083557129
    7. ']]
' → logprob: -11.197709083557129
    8. '])]' → logprob: -12.072709083557129
    9. '']]' → logprob: -12.322709083557129
    10. ']}' → logprob: -12.447709083557129

Token 67: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0746748298406601
    2. ' for' → logprob: -2.9496748447418213
    3. '<|end|>' → logprob: -4.199674606323242
    4. '   ' → logprob: -5.699674606323242
    5. '
' → logprob: -7.324674606323242
    6. ' ' → logprob: -8.199674606323242
    7. '	for' → logprob: -8.449674606323242
    8. '<|end|>' → logprob: -10.449674606323242
    9. ')' → logprob: -10.699674606323242
    10. '  ' → logprob: -11.574674606323242

Token 68: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0016444765496999025
    2. ' for' → logprob: -6.501644611358643
    3. '<|end|>' → logprob: -9.626644134521484
    4. '   ' → logprob: -10.251644134521484
    5. ' ' → logprob: -10.626644134521484
    6. '	for' → logprob: -11.126644134521484
    7. '
' → logprob: -14.251644134521484
    8. ')' → logprob: -15.501644134521484
    9. ' 
' → logprob: -15.626644134521484
    10. '```' → logprob: -16.001644134521484

Token 69: ' l' (ID: 305)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.47150200605392456
    2. 'v' → logprob: -1.7215020656585693
    3. 'x' → logprob: -2.8465020656585693
    4. ' x' → logprob: -2.8465020656585693
    5. ' e' → logprob: -3.8465020656585693
    6. ' j' → logprob: -4.09650182723999
    7. 'j' → logprob: -4.59650182723999
    8. ' u' → logprob: -4.97150182723999
    9. ' a' → logprob: -5.09650182723999
    10. 'e' → logprob: -5.09650182723999

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0003694205661304295
    2. 'in' → logprob: -8.50036907196045
    3. ' ' → logprob: -9.25036907196045
    4. ' j' → logprob: -10.00036907196045
    5. '  ' → logprob: -12.12536907196045
    6. ' _' → logprob: -12.25036907196045
    7. ' range' → logprob: -12.50036907196045
    8. ' G' → logprob: -12.75036907196045
    9. '   ' → logprob: -13.12536907196045
    10. 'range' → logprob: -13.75036907196045

Token 71: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.3135937750339508
    2. ' arr' → logprob: -1.3135937452316284
    3. 'range' → logprob: -8.438593864440918
    4. ' range' → logprob: -9.438593864440918
    5. '(arr' → logprob: -10.938593864440918
    6. ' ' → logprob: -12.063593864440918
    7. '[arr' → logprob: -12.313593864440918
    8. '	arr' → logprob: -12.563593864440918
    9. '_arr' → logprob: -13.313593864440918
    10. '  ' → logprob: -14.188593864440918

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028863062616437674
    2. '):' → logprob: -5.8778862953186035
    3. ']:' → logprob: -10.127886772155762
    4. ' :' → logprob: -11.002886772155762
    5. ')' → logprob: -12.377886772155762
    6. '():' → logprob: -12.502886772155762
    7. '.' → logprob: -12.627886772155762
    8. ':**' → logprob: -12.627886772155762
    9. ':
' → logprob: -13.002886772155762
    10. '.append' → logprob: -13.377886772155762

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05342292785644531
    2. 'G' → logprob: -3.6784229278564453
    3. ' G' → logprob: -3.9284229278564453
    4. '   ' → logprob: -5.553422927856445
    5. '<|end|>' → logprob: -6.053422927856445
    6. '	G' → logprob: -8.053422927856445
    7. '```' → logprob: -9.178422927856445
    8. '	   ' → logprob: -9.428422927856445
    9. '    ' → logprob: -9.553422927856445
    10. ' ' → logprob: -9.678422927856445

Token 74: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.0012595182051882148
    2. ' G' → logprob: -6.7512593269348145
    3. '   ' → logprob: -9.626259803771973
    4. '       ' → logprob: -11.251259803771973
    5. '	G' → logprob: -11.626259803771973
    6. ' ' → logprob: -14.751259803771973
    7. '```' → logprob: -14.876259803771973
    8. '<|end|>' → logprob: -15.376259803771973
    9. '_G' → logprob: -16.376258850097656
    10. '
' → logprob: -16.501258850097656

Token 75: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5056643486022949
    2. '[l' → logprob: -1.505664348602295
    3. '[i' → logprob: -1.755664348602295
    4. '[n' → logprob: -7.505664348602295
    5. '[int' → logprob: -7.630664348602295
    6. '[G' → logprob: -7.630664348602295
    7. '[s' → logprob: -8.255664825439453
    8. '[q' → logprob: -9.380664825439453
    9. '[I' → logprob: -9.630664825439453
    10. '[u' → logprob: -10.005664825439453

Token 76: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00010735770774772391
    2. '.' → logprob: -9.625107765197754
    3. ']' → logprob: -10.500107765197754
    4. '.append' → logprob: -11.500107765197754
    5. ' ].' → logprob: -12.750107765197754
    6. ').' → logprob: -14.625107765197754
    7. '[' → logprob: -16.125106811523438
    8. '   ' → logprob: -16.750106811523438
    9. '}.' → logprob: -17.125106811523438
    10. '.app' → logprob: -18.250106811523438

Token 77: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.625
    3. '.append' → logprob: -16.5
    4. 'appen' → logprob: -17.375
    5. 'app' → logprob: -19.75
    6. '	append' → logprob: -20.375
    7. ' ' → logprob: -21.125
    8. '_append' → logprob: -22.125
    9. 'Append' → logprob: -22.25
    10. 'add' → logprob: -22.875

Token 78: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0002700377081055194
    2. 'l' → logprob: -8.500269889831543
    3. '(' → logprob: -9.625269889831543
    4. '((' → logprob: -15.375269889831543
    5. '(
' → logprob: -16.62527084350586
    6. '	l' → logprob: -17.37527084350586
    7. '(x' → logprob: -18.00027084350586
    8. ' (' → logprob: -18.25027084350586
    9. '(i' → logprob: -18.25027084350586
    10. '(n' → logprob: -18.50027084350586

Token 79: ')
' (ID: 446)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1299460232257843
    2. ')' → logprob: -2.254945993423462
    3. ' -' → logprob: -4.129946231842041
    4. '-)' → logprob: -7.879946231842041
    5. ' )' → logprob: -7.879946231842041
    6. '<|end|>' → logprob: -9.129945755004883
    7. '   ' → logprob: -11.879945755004883
    8. '`)' → logprob: -12.254945755004883
    9. '--)' → logprob: -12.879945755004883
    10. ');' → logprob: -13.879945755004883

Token 80: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: 'G' (ID: 38)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: '[l' (ID: 38286)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1998065561056137
    2. '[l' → logprob: -2.1998064517974854
    3. '[' → logprob: -2.8248064517974854
    4. '-' → logprob: -5.1998066902160645
    5. '<|end|>' → logprob: -5.9498066902160645
    6. '[-' → logprob: -6.8248066902160645
    7. '[int' → logprob: -8.574806213378906
    8. '.append' → logprob: -9.074806213378906
    9. '[len' → logprob: -9.199806213378906
    10. '.' → logprob: -9.324806213378906

Token 84: '-' (ID: 12)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.3534684181213379
    2. '.' → logprob: -1.853468418121338
    3. '.append' → logprob: -1.978468418121338
    4. ').' → logprob: -6.603468418121338
    5. ']' → logprob: -7.228468418121338
    6. ' ].' → logprob: -7.853468418121338
    7. '<|end|>' → logprob: -9.22846794128418
    8. '[' → logprob: -10.10346794128418
    9. '.remove' → logprob: -10.22846794128418
    10. ' .' → logprob: -10.60346794128418

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010127831774298102
    2. '<|end|>' → logprob: -9.250101089477539
    3. ' ' → logprob: -13.250101089477539
    4. '<|end|>' → logprob: -14.000101089477539
    5. '```' → logprob: -14.125101089477539
    6. '>' → logprob: -14.375101089477539
    7. '=' → logprob: -15.000101089477539
    8. '-' → logprob: -16.25010108947754
    9. ')' → logprob: -16.37510108947754
    10. '">' → logprob: -16.50010108947754

Token 86: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.1174698919057846
    2. '-' → logprob: -2.9924697875976562
    3. ']' → logprob: -3.3674697875976562
    4. ').' → logprob: -4.492469787597656
    5. ')' → logprob: -5.117469787597656
    6. ' ].' → logprob: -5.617469787597656
    7. '.append' → logprob: -6.242469787597656
    8. '.' → logprob: -6.742469787597656
    9. '<|end|>' → logprob: -6.742469787597656
    10. '])' → logprob: -8.367469787597656

Token 87: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.4121114822482923e-06
    2. ' append' → logprob: -13.125003814697266
    3. 'appen' → logprob: -14.375003814697266
    4. '.append' → logprob: -14.750003814697266
    5. '	append' → logprob: -14.875003814697266
    6. 'add' → logprob: -16.750003814697266
    7. '_append' → logprob: -17.625003814697266
    8. 'Append' → logprob: -18.000003814697266
    9. '<|end|>' → logprob: -18.000003814697266
    10. 'app' → logprob: -18.625003814697266

Token 88: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0788988247513771
    2. '(' → logprob: -2.5788989067077637
    3. ' (' → logprob: -13.328898429870605
    4. '(
' → logprob: -13.578898429870605
    5. '(I' → logprob: -13.703898429870605
    6. '(s' → logprob: -13.703898429870605
    7. '((' → logprob: -13.953898429870605
    8. '(n' → logprob: -14.078898429870605
    9. '(l' → logprob: -14.703898429870605
    10. '('' → logprob: -15.328898429870605

Token 89: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00438905181363225
    2. ')
' → logprob: -5.75438928604126
    3. ' )' → logprob: -7.62938928604126
    4. '+' → logprob: -8.004388809204102
    5. '<|end|>' → logprob: -8.129388809204102
    6. '
' → logprob: -10.379388809204102
    7. ')

' → logprob: -10.879388809204102
    8. ']' → logprob: -11.879388809204102
    9. '```' → logprob: -12.004388809204102
    10. ' )
' → logprob: -12.129388809204102

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000989103689789772
    2. ')' → logprob: -7.000988960266113
    3. ' ' → logprob: -9.625988960266113
    4. ']' → logprob: -12.500988960266113
    5. ' )' → logprob: -13.375988960266113
    6. '<|end|>' → logprob: -13.375988960266113
    7. '```' → logprob: -13.625988960266113
    8. '])' → logprob: -14.625988960266113
    9. '2' → logprob: -14.625988960266113
    10. '`)' → logprob: -14.750988960266113

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015602122293785214
    2. '<|end|>' → logprob: -7.251560211181641
    3. ')
' → logprob: -7.501560211181641
    4. '
' → logprob: -8.37656021118164
    5. ' )' → logprob: -10.12656021118164
    6. '```' → logprob: -12.25156021118164
    7. ')

' → logprob: -12.62656021118164
    8. '\n' → logprob: -12.87656021118164
    9. ']' → logprob: -12.87656021118164
    10. '<|end|>' → logprob: -12.87656021118164

Token 92: '    

' (ID: 24372)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: 'ky' (ID: 5781)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: 'ori' (ID: 6510)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3959341049194336
    2. '<|end|>' → logprob: -1.7709341049194336
    3. '[' → logprob: -3.0209341049194336
    4. '.' → logprob: -3.1459341049194336
    5. ')' → logprob: -4.395934104919434
    6. ' =' → logprob: -4.645934104919434
    7. 'u' → logprob: -5.145934104919434
    8. ']' → logprob: -5.270934104919434
    9. '[i' → logprob: -5.520934104919434
    10. 's' → logprob: -5.520934104919434

Token 95: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10963652282953262
    2. '=[' → logprob: -2.7346365451812744
    3. ' =' → logprob: -3.3596365451812744
    4. '[' → logprob: -5.984636306762695
    5. '=[]' → logprob: -6.984636306762695
    6. ' =[' → logprob: -7.484636306762695
    7. '=[[' → logprob: -9.859636306762695
    8. '[i' → logprob: -10.984636306762695
    9. ' ' → logprob: -11.359636306762695
    10. '=[
' → logprob: -11.484636306762695

Token 96: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17308659851551056
    2. '[d' → logprob: -2.173086643218994
    3. 'd' → logprob: -3.423086643218994
    4. '[-' → logprob: -4.423086643218994
    5. '[n' → logprob: -8.298086166381836
    6. ' [' → logprob: -9.923086166381836
    7. '0' → logprob: -10.298086166381836
    8. '[len' → logprob: -10.673086166381836
    9. '[min' → logprob: -10.673086166381836
    10. '[int' → logprob: -10.798086166381836

Token 97: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4683500826358795
    2. '<|end|>' → logprob: -1.5933500528335571
    3. 'for' → logprob: -2.2183501720428467
    4. '
' → logprob: -2.9683501720428467
    5. ' while' → logprob: -5.343349933624268
    6. '\n' → logprob: -6.843349933624268
    7. '<|end|>' → logprob: -6.968349933624268
    8. ')' → logprob: -7.718349933624268
    9. ',' → logprob: -7.968349933624268
    10. '+' → logprob: -7.968349933624268

Token 98: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0013709533959627151
    2. 'for' → logprob: -7.251370906829834
    3. 'from' → logprob: -7.501370906829834
    4. ' while' → logprob: -9.626371383666992
    5. 'queue' → logprob: -11.876371383666992
    6. 'q' → logprob: -12.001371383666992
    7. '0' → logprob: -12.376371383666992
    8. 'deque' → logprob: -12.501371383666992
    9. 'b' → logprob: -12.876371383666992
    10. '.' → logprob: -13.501371383666992

Token 99: ' len' (ID: 4631)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.002532021841034293
    2. ' Q' → logprob: -6.127532005310059
    3. 'len' → logprob: -8.002532005310059
    4. ' len' → logprob: -12.002532005310059
    5. '	Q' → logprob: -13.252532005310059
    6. ' ' → logprob: -13.627532005310059
    7. 'True' → logprob: -14.002532005310059
    8. 'not' → logprob: -14.252532005310059
    9. '   ' → logprob: -14.502532005310059
    10. '(Q' → logprob: -15.127532005310059

Token 100: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -7.541112427134067e-05
    2. 'Q' → logprob: -9.625075340270996
    3. '(' → logprob: -11.625075340270996
    4. ' Q' → logprob: -15.500075340270996
    5. ' (' → logprob: -16.000076293945312
    6. '	Q' → logprob: -16.500076293945312
    7. '(queue' → logprob: -17.750076293945312
    8. '<Q' → logprob: -17.875076293945312
    9. '((' → logprob: -18.000076293945312
    10. '(
' → logprob: -18.125076293945312

Token 101: ')!=' (ID: 86517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6934304237365723
    2. ')>' → logprob: -0.6934304237365723
    3. '):' → logprob: -9.193429946899414
    4. ' )' → logprob: -9.568429946899414
    5. '>' → logprob: -9.818429946899414
    6. ')!=' → logprob: -9.943429946899414
    7. '）' → logprob: -13.193429946899414
    8. '):
' → logprob: -13.443429946899414
    9. ' ' → logprob: -14.318429946899414
    10. ' >' → logprob: -14.443429946899414

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '```' → logprob: -16.37500762939453
    4. '   ' → logprob: -17.37500762939453
    5. '    ' → logprob: -18.00000762939453
    6. '>' → logprob: -18.12500762939453
    7. ')' → logprob: -18.37500762939453
    8. '  ' → logprob: -18.37500762939453
    9. '

' → logprob: -18.50000762939453
    10. '	' → logprob: -18.75000762939453

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005597044946625829
    2. ':
' → logprob: -7.7505598068237305
    3. ' :' → logprob: -10.00055980682373
    4. '<|end|>' → logprob: -10.00055980682373
    5. '):' → logprob: -11.00055980682373
    6. '<|end|>' → logprob: -11.87555980682373
    7. ':

' → logprob: -12.50055980682373
    8. ' and' → logprob: -12.50055980682373
    9. ')' → logprob: -13.12555980682373
    10. ',' → logprob: -13.75055980682373

Token 104: '    
' (ID: 1944)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5165554285049438
    2. 'u' → logprob: -1.1415554285049438
    3. 'p' → logprob: -3.2665553092956543
    4. 'q' → logprob: -4.016555309295654
    5. 'x' → logprob: -4.516555309295654
    6. ' v' → logprob: -5.266555309295654
    7. ' u' → logprob: -5.766555309295654
    8. 't' → logprob: -6.016555309295654
    9. 'c' → logprob: -6.141555309295654
    10. 'a' → logprob: -6.891555309295654

Token 105: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8634917140007019
    2. 'v' → logprob: -0.8634917140007019
    3. 'q' → logprob: -2.8634917736053467
    4. 'x' → logprob: -3.3634917736053467
    5. 'p' → logprob: -3.7384917736053467
    6. 't' → logprob: -4.363491535186768
    7. 'a' → logprob: -4.738491535186768
    8. 'k' → logprob: -5.488491535186768
    9. 'cur' → logprob: -5.863491535186768
    10. 'c' → logprob: -5.988491535186768

Token 106: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.617857038974762
    2. 'u' → logprob: -1.1178569793701172
    3. 'x' → logprob: -2.867856979370117
    4. 'q' → logprob: -3.867856979370117
    5. 'p' → logprob: -3.992856979370117
    6. 't' → logprob: -4.617856979370117
    7. 'a' → logprob: -4.867856979370117
    8. 'cur' → logprob: -5.492856979370117
    9. 'now' → logprob: -5.617856979370117
    10. 'k' → logprob: -5.992856979370117

Token 107: 'print' (ID: 1598)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4034103453159332
    2. 'u' → logprob: -1.1534103155136108
    3. 'x' → logprob: -5.1534104347229
    4. 'cur' → logprob: -5.5284104347229
    5. 'q' → logprob: -5.9034104347229
    6. 'p' → logprob: -7.0284104347229
    7. 'current' → logprob: -7.4034104347229
    8. 't' → logprob: -7.5284104347229
    9. 'k' → logprob: -8.278409957885742
    10. 'from' → logprob: -8.403409957885742

Token 108: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.19480422139167786
    2. '(' → logprob: -2.1948041915893555
    3. '("' → logprob: -2.9448041915893555
    4. '('' → logprob: -4.9448041915893555
    5. '(len' → logprob: -5.6948041915893555
    6. '()' → logprob: -6.0698041915893555
    7. 'Q' → logprob: -10.069804191589355
    8. '("("' → logprob: -10.194804191589355
    9. '(f' → logprob: -10.444804191589355
    10. 'len' → logprob: -10.444804191589355

Token 109: ')
' (ID: 446)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.4009357988834381
    2. ')' → logprob: -1.1509357690811157
    3. '[' → logprob: -4.275935649871826
    4. '.p' → logprob: -11.025936126708984
    5. 'pop' → logprob: -11.275936126708984
    6. ' )' → logprob: -11.275936126708984
    7. ')
' → logprob: -11.275936126708984
    8. '.' → logprob: -12.400936126708984
    9. ')>' → logprob: -13.650936126708984
    10. ')#' → logprob: -13.650936126708984

Token 110: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2865653932094574
    2. 'v' → logprob: -1.5365654230117798
    3. '   ' → logprob: -4.16156530380249
    4. 'q' → logprob: -5.03656530380249
    5. 'p' → logprob: -5.66156530380249
    6. 'x' → logprob: -6.03656530380249
    7. 'cur' → logprob: -6.41156530380249
    8. ' u' → logprob: -6.66156530380249
    9. 't' → logprob: -7.28656530380249
    10. 'current' → logprob: -7.66156530380249

Token 111: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7699041962623596
    2. 'v' → logprob: -0.7699041962623596
    3. 'x' → logprob: -3.394904136657715
    4. 'q' → logprob: -4.644904136657715
    5. 'p' → logprob: -5.019904136657715
    6. '   ' → logprob: -5.394904136657715
    7. 'cur' → logprob: -5.644904136657715
    8. 't' → logprob: -5.894904136657715
    9. 'next' → logprob: -6.144904136657715
    10. 'now' → logprob: -6.269904136657715

Token 112: 'print' (ID: 1598)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.575410783290863
    2. 'v' → logprob: -0.950410783290863
    3. 'q' → logprob: -3.700410842895508
    4. 'x' → logprob: -4.200410842895508
    5. 'cur' → logprob: -5.450410842895508
    6. 'p' → logprob: -6.200410842895508
    7. 't' → logprob: -6.950410842895508
    8. 'next' → logprob: -7.450410842895508
    9. 'current' → logprob: -7.450410842895508
    10. '   ' → logprob: -7.700410842895508

Token 113: '(' (ID: 7)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.18072718381881714
    2. '(len' → logprob: -2.555727243423462
    3. '("' → logprob: -3.180727243423462
    4. '(' → logprob: -3.305727243423462
    5. '(d' → logprob: -5.055727005004883
    6. '('' → logprob: -6.430727005004883
    7. '()' → logprob: -6.680727005004883
    8. '(f' → logprob: -9.430727005004883
    9. 'len' → logprob: -10.055727005004883
    10. '((' → logprob: -10.430727005004883

Token 114: 'visited' (ID: 52453)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.01776238903403282
    2. 'd' → logprob: -4.267762184143066
    3. 'len' → logprob: -6.267762184143066
    4. 'visited' → logprob: -6.642762184143066
    5. 'ky' → logprob: -9.142762184143066
    6. '"' → logprob: -9.392762184143066
    7. ' Q' → logprob: -9.642762184143066
    8. ')' → logprob: -10.017762184143066
    9. 'G' → logprob: -10.517762184143066
    10. 'k' → logprob: -11.517762184143066

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005965176969766617
    2. ')
' → logprob: -5.380965232849121
    3. ' )' → logprob: -6.880965232849121
    4. '   ' → logprob: -8.880965232849121
    5. '[' → logprob: -9.255965232849121
    6. ' )
' → logprob: -10.505965232849121
    7. ' ' → logprob: -10.880965232849121
    8. ')

' → logprob: -11.380965232849121
    9. ',' → logprob: -11.630965232849121
    10. '  ' → logprob: -12.630965232849121

Token 116: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.21296824514865875
    2. 'v' → logprob: -1.9629682302474976
    3. '   ' → logprob: -3.212968349456787
    4. 'x' → logprob: -5.962968349456787
    5. 'q' → logprob: -6.337968349456787
    6. ' u' → logprob: -6.587968349456787
    7. 'p' → logprob: -6.587968349456787
    8. 'cur' → logprob: -6.837968349456787
    9. 'current' → logprob: -7.212968349456787
    10. 'next' → logprob: -7.962968349456787

Token 117: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6160012483596802
    2. 'v' (adapté à ' v') → logprob: -0.8660012483596802
    3. 'x' → logprob: -4.616001129150391
    4. 'q' → logprob: -4.741001129150391
    5. 'cur' → logprob: -5.491001129150391
    6. 'p' → logprob: -5.741001129150391
    7. 'next' → logprob: -5.741001129150391
    8. 'current' → logprob: -6.241001129150391
    9. '   ' → logprob: -6.491001129150391
    10. 't' → logprob: -6.866001129150391

Token 118: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07895192503929138
    2. ' =' → logprob: -2.578951835632324
    3. '=v' → logprob: -10.078951835632324
    4. '=int' → logprob: -12.203951835632324
    5. '＝' → logprob: -13.078951835632324
    6. '=q' → logprob: -13.203951835632324
    7. ' ' → logprob: -13.328951835632324
    8. '=current' → logprob: -14.078951835632324
    9. ')' → logprob: -14.203951835632324
    10. ',Q' → logprob: -14.203951835632324

Token 119: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -5.080963092041202e-06
    2. ' Q' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.0000057220459
    4. '	Q' → logprob: -16.3750057220459
    5. '  ' → logprob: -19.2500057220459
    6. '    ' → logprob: -20.2500057220459
    7. ' ' → logprob: -20.5000057220459
    8. '(Q' → logprob: -20.7500057220459
    9. 'len' → logprob: -21.6250057220459
    10. '0' → logprob: -21.6250057220459

Token 120: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.06285210698843002
    2. '.' → logprob: -2.812852144241333
    3. '[' → logprob: -7.312851905822754
    4. '0' → logprob: -8.937851905822754
    5. 'pop' → logprob: -9.812851905822754
    6. ' .' → logprob: -10.562851905822754
    7. '   ' → logprob: -13.312851905822754
    8. '```' → logprob: -13.437851905822754
    9. '].' → logprob: -14.687851905822754
    10. ' ' → logprob: -15.062851905822754

Token 121: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07891105115413666
    2. '(' → logprob: -2.578911066055298
    3. '()
' → logprob: -11.453910827636719
    4. '0' → logprob: -11.703910827636719
    5. '()

' → logprob: -14.453910827636719
    6. '()-' → logprob: -14.578910827636719
    7. '();' → logprob: -15.328910827636719
    8. '().' → logprob: -15.453910827636719
    9. '()`' → logprob: -15.828910827636719
    10. '(-' → logprob: -15.953910827636719

Token 122: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001617035741219297
    2. ')' → logprob: -8.875162124633789
    3. ' ' → logprob: -11.125162124633789
    4. '-' → logprob: -11.875162124633789
    5. '
' → logprob: -17.00016212463379
    6. ')
' → logprob: -17.25016212463379
    7. ' )' → logprob: -17.87516212463379
    8. ')-' → logprob: -18.12516212463379
    9. '()' → logprob: -18.25016212463379
    10. '   ' → logprob: -18.37516212463379

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005575587856583297
    2. ')
' → logprob: -7.5005574226379395
    3. ' )' → logprob: -12.500557899475098
    4. ')v' → logprob: -14.875557899475098
    5. ')
' → logprob: -15.625557899475098
    6. ')

' → logprob: -15.875557899475098
    7. '   ' → logprob: -16.62555694580078
    8. ' )
' → logprob: -17.25055694580078
    9. '<|end|>' → logprob: -17.62555694580078
    10. ')`' → logprob: -17.75055694580078

Token 124: '    
' (ID: 1944)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005487450980581343
    2. 'ky' → logprob: -8.250548362731934
    3. ' for' → logprob: -8.500548362731934
    4. '```' → logprob: -10.750548362731934
    5. 'if' → logprob: -11.125548362731934
    6. '   ' → logprob: -11.125548362731934
    7. '    
' → logprob: -11.875548362731934
    8. 'distance' → logprob: -12.000548362731934
    9. 'print' → logprob: -12.125548362731934
    10. 'depth' → logprob: -12.625548362731934

Token 125: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.817902173381299e-05
    2. ' for' → logprob: -10.00009822845459
    3. 'ky' → logprob: -10.75009822845459
    4. '   ' → logprob: -10.75009822845459
    5. '    
' → logprob: -12.62509822845459
    6. '```' → logprob: -13.75009822845459
    7. 'd' → logprob: -13.87509822845459
    8. 'distance' → logprob: -14.00009822845459
    9. 'if' → logprob: -14.37509822845459
    10. '
' → logprob: -14.50009822845459

Token 126: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.2471589798224159e-05
    2. ' for' → logprob: -11.750012397766113
    3. '   ' → logprob: -13.875012397766113
    4. 'd' → logprob: -13.875012397766113
    5. 'if' → logprob: -14.625012397766113
    6. 'distance' → logprob: -14.625012397766113
    7. 'ky' → logprob: -14.875012397766113
    8. '    
' → logprob: -15.000012397766113
    9. 'dist' → logprob: -15.625012397766113
    10. 'depth' → logprob: -15.750012397766113

Token 127: ' j' (ID: 441)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.18439221382141113
    2. 'nv' → logprob: -2.559392213821411
    3. 'w' → logprob: -3.184392213821411
    4. 'to' → logprob: -4.184391975402832
    5. 'nx' → logprob: -4.184391975402832
    6. 'next' → logprob: -4.559391975402832
    7. 'e' → logprob: -5.559391975402832
    8. ' u' → logprob: -6.309391975402832
    9. 'x' → logprob: -6.934391975402832
    10. ' nv' → logprob: -7.059391975402832

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023256778717041016
    2. 'in' → logprob: -3.773256778717041
    3. ' ' → logprob: -12.273256301879883
    4. '	in' → logprob: -12.398256301879883
    5. '<|end|>' → logprob: -14.398256301879883
    6. '   ' → logprob: -14.398256301879883
    7. '_in' → logprob: -14.773256301879883
    8. '  ' → logprob: -15.398256301879883
    9. 'In' → logprob: -15.648256301879883
    10. '    ' → logprob: -16.523256301879883

Token 129: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0003384422743692994
    2. ' G' → logprob: -8.000338554382324
    3. 'range' → logprob: -13.000338554382324
    4. ' range' → logprob: -14.500338554382324
    5. '   ' → logprob: -15.875338554382324
    6. '	G' → logprob: -16.250337600708008
    7. '(G' → logprob: -17.750337600708008
    8. ' ' → logprob: -17.750337600708008
    9. '[G' → logprob: -18.000337600708008
    10. '  ' → logprob: -18.750337600708008

Token 130: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.9153885558771435e-06
    2. 'v' → logprob: -12.125005722045898
    3. '[j' → logprob: -15.375005722045898
    4. '[' → logprob: -15.875005722045898
    5. ' [' → logprob: -17.2500057220459
    6. '(v' → logprob: -18.1250057220459
    7. '[i' → logprob: -18.1250057220459
    8. '[u' → logprob: -18.7500057220459
    9. '<v' → logprob: -18.7500057220459
    10. ')v' → logprob: -18.7500057220459

Token 131: '-' (ID: 12)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0878019705414772
    2. ']' → logprob: -3.337801933288574
    3. '-' → logprob: -3.962801933288574
    4. ']):' → logprob: -4.337801933288574
    5. '):' → logprob: -5.087801933288574
    6. ']:
' → logprob: -5.462801933288574
    7. ']-' → logprob: -5.712801933288574
    8. '])' → logprob: -7.212801933288574
    9. '[j' → logprob: -7.837801933288574
    10. '[' → logprob: -8.212801933288574

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4498052223643754e-05
    2. ' ' → logprob: -11.250014305114746
    3. ']' → logprob: -14.500014305114746
    4. '   ' → logprob: -15.687514305114746
    5. '１' → logprob: -16.125015258789062
    6. '```' → logprob: -16.437515258789062
    7. '-' → logprob: -16.500015258789062
    8. '
' → logprob: -16.500015258789062
    9. ')' → logprob: -16.625015258789062
    10. '0' → logprob: -16.812515258789062

Token 133: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0005380203947424889
    2. ':' → logprob: -8.375537872314453
    3. ']:
' → logprob: -8.750537872314453
    4. ']' → logprob: -9.125537872314453
    5. '):' → logprob: -10.500537872314453
    6. ']:
' → logprob: -12.375537872314453
    7. '   ' → logprob: -12.500537872314453
    8. '}:' → logprob: -13.500537872314453
    9. '>:' → logprob: -14.125537872314453
    10. '       ' → logprob: -14.500537872314453

Token 134: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41227468848228455
    2. '       ' → logprob: -1.162274718284607
    3. '   ' → logprob: -4.1622748374938965
    4. ' if' → logprob: -4.6622748374938965
    5. '	if' → logprob: -10.412274360656738
    6. '    ' → logprob: -11.412274360656738
    7. '```' → logprob: -11.912274360656738
    8. '<|end|>' → logprob: -12.037274360656738
    9. ' ' → logprob: -12.662274360656738
    10. '  ' → logprob: -13.412274360656738

Token 135: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0018833002541214228
    2. ' if' → logprob: -7.001883506774902
    3. '       ' → logprob: -7.126883506774902
    4. '   ' → logprob: -8.751883506774902
    5. '           ' → logprob: -12.251883506774902
    6. '	if' → logprob: -13.001883506774902
    7. '```' → logprob: -13.376883506774902
    8. ' ' → logprob: -13.751883506774902
    9. 'If' → logprob: -16.501882553100586
    10. '0' → logprob: -16.751882553100586

Token 136: ' visited' (ID: 18416)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7268586754798889
    2. ' not' → logprob: -0.9768586754798889
    3. 'visited' → logprob: -2.476858615875244
    4. 'd' → logprob: -3.226858615875244
    5. ' d' → logprob: -4.601858615875244
    6. ' visited' → logprob: -5.101858615875244
    7. '   ' → logprob: -8.851859092712402
    8. '(not' → logprob: -9.976859092712402
    9. '	not' → logprob: -10.226859092712402
    10. ' ' → logprob: -10.976859092712402

Token 137: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.005250006448477507
    2. '[v' → logprob: -5.255249977111816
    3. '[' → logprob: -11.130249977111816
    4. '==' → logprob: -14.505249977111816
    5. '[q' → logprob: -15.005249977111816
    6. '[i' → logprob: -15.380249977111816
    7. '[w' → logprob: -15.880249977111816
    8. '[l' → logprob: -16.255250930786133
    9. '[
' → logprob: -17.005250930786133
    10. '[int' → logprob: -17.005250930786133

Token 138: '-' (ID: 12)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.17235082387924194
    2. '-' → logprob: -2.2973508834838867
    3. ']' → logprob: -3.0473508834838867
    4. '==' → logprob: -4.922350883483887
    5. 'False' → logprob: -6.797350883483887
    6. '0' → logprob: -7.547350883483887
    7. '[' → logprob: -7.547350883483887
    8. ')==' → logprob: -7.922350883483887
    9. '']==' → logprob: -8.797350883483887
    10. ' ]' → logprob: -9.047350883483887

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. 'False' → logprob: -12.750004768371582
    3. ' ' → logprob: -13.500004768371582
    4. '2' → logprob: -16.000003814697266
    5. '```' → logprob: -16.000003814697266
    6. '   ' → logprob: -16.750003814697266
    7. '0' → logprob: -17.000003814697266
    8. 'True' → logprob: -17.875003814697266
    9. ' False' → logprob: -18.000003814697266
    10. ')' → logprob: -18.062503814697266

Token 140: ']:' (ID: 12433)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.04321887344121933
    2. '==' → logprob: -3.2932188510894775
    3. ']' → logprob: -5.293219089508057
    4. ' ==' → logprob: -9.543218612670898
    5. '']==' → logprob: -10.543218612670898
    6. ' ]' → logprob: -10.668218612670898
    7. ')==' → logprob: -11.918218612670898
    8. ']=' → logprob: -13.043218612670898
    9. ']!=' → logprob: -13.293218612670898
    10. ' is' → logprob: -13.418218612670898

Token 141: '#' (ID: 2)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.15163151919841766
    2. 'continue' → logprob: -2.0266315937042236
    3. '           ' → logprob: -4.9016313552856445
    4. '   ' → logprob: -7.6516313552856445
    5. '	continue' → logprob: -7.6516313552856445
    6. '       ' → logprob: -7.7766313552856445
    7. '_continue' → logprob: -10.026631355285645
    8. ' ' → logprob: -10.901631355285645
    9. ' continued' → logprob: -11.776631355285645
    10. ' continues' → logprob: -11.776631355285645

Token 142: '次' (ID: 11445)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.01667584851384163
    2. 'continue' → logprob: -4.14167594909668
    3. '	continue' → logprob: -7.51667594909668
    4. '           ' → logprob: -9.89167594909668
    5. '   ' → logprob: -11.39167594909668
    6. '       ' → logprob: -11.89167594909668
    7. '_continue' → logprob: -11.89167594909668
    8. ' continues' → logprob: -12.14167594909668
    9. ' Continue' → logprob: -12.39167594909668
    10. ' continued' → logprob: -12.89167594909668

Token 143: 'に' (ID: 5280)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10463086515665054
    2. ' continue' → logprob: -2.854630947113037
    3. 'continue' → logprob: -3.729630947113037
    4. '       ' → logprob: -4.979630947113037
    5. '
' → logprob: -6.604630947113037
    6. 'は' → logprob: -6.854630947113037
    7. 'の' → logprob: -6.854630947113037
    8. '	continue' → logprob: -6.979630947113037
    9. '=' → logprob: -7.104630947113037
    10. '   ' → logprob: -7.354630947113037

Token 144: '行' (ID: 6550)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0753668546676636
    2. ' continue' → logprob: -1.0753668546676636
    3. 'continue' → logprob: -1.2003668546676636
    4. '       ' → logprob: -4.700366973876953
    5. '   ' → logprob: -5.700366973876953
    6. '	continue' → logprob: -6.700366973876953
    7. '
' → logprob: -7.325366973876953
    8. ' ' → logprob: -7.575366973876953
    9. '               ' → logprob: -8.075366973876953
    10. '　' → logprob: -8.575366973876953

Token 145: 'く' (ID: 10459)
  Prédit: 'く'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'く' → logprob: -0.0862535908818245
    2. 'か' → logprob: -2.5862536430358887
    3. 'け' → logprob: -5.586253643035889
    4. 'こう' → logprob: -6.086253643035889
    5. 'き' → logprob: -7.336253643035889
    6. 'う' → logprob: -8.58625316619873
    7. '   ' → logprob: -9.33625316619873
    8. ' ' → logprob: -9.33625316619873
    9. '```' → logprob: -9.71125316619873
    10. '#' → logprob: -9.96125316619873

Token 146: 'ところ' (ID: 139754)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.368376225233078
    2. ' continue' → logprob: -1.2433762550354004
    3. '           ' → logprob: -4.7433762550354
    4. '	continue' → logprob: -5.3683762550354
    5. '
' → logprob: -6.3683762550354
    6. ':
' → logprob: -6.7433762550354
    7. '       ' → logprob: -7.2433762550354
    8. '   ' → logprob: -7.2433762550354
    9. ')' → logprob: -7.8683762550354
    10. '_continue' → logprob: -7.9933762550354

Token 147: 'が' (ID: 6632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7145766019821167
    2. ' continue' → logprob: -0.7145766019821167
    3. '	continue' → logprob: -4.839576721191406
    4. 'continue' → logprob: -5.089576721191406
    5. ':' → logprob: -5.839576721191406
    6. ' continues' → logprob: -6.964576721191406
    7. '       ' → logprob: -7.339576721191406
    8. '==' → logprob: -7.464576721191406
    9. ',' → logprob: -8.339576721191406
    10. '_continue' → logprob: -8.464576721191406

Token 148: 'す' (ID: 4868)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.021923812106251717
    2. 'True' → logprob: -3.896923780441284
    3. ' False' → logprob: -7.021924018859863
    4. 'continue' → logprob: -8.021924018859863
    5. '   ' → logprob: -9.271924018859863
    6. ' True' → logprob: -10.771924018859863
    7. '       ' → logprob: -10.896924018859863
    8. ' continue' → logprob: -11.771924018859863
    9. '0' → logprob: -12.146924018859863
    10. 'not' → logprob: -12.646924018859863

Token 149: 'で' (ID: 4344)
  Prédit: 'で'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'で' → logprob: -0.004696176387369633
    2. 'る' → logprob: -6.254696369171143
    3. 'ぐ' → logprob: -7.004696369171143
    4. 'べ' → logprob: -8.004695892333984
    5. 'て' → logprob: -8.129695892333984
    6. 'み' → logprob: -8.254695892333984
    7. 'か' → logprob: -9.004695892333984
    8. 'き' → logprob: -9.129695892333984
    9. 'す' → logprob: -9.129695892333984
    10. '#' → logprob: -9.379695892333984

Token 150: 'に' (ID: 5280)
  Prédit: 'で'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'で' → logprob: -0.17243699729442596
    2. 'く' → logprob: -2.0474369525909424
    3. 'れ' → logprob: -4.7974371910095215
    4. 'て' → logprob: -5.5474371910095215
    5. 'け' → logprob: -5.6724371910095215
    6. 'True' → logprob: -5.9224371910095215
    7. 'か' → logprob: -6.0474371910095215
    8. 'み' → logprob: -6.6724371910095215
    9. '#' → logprob: -7.0474371910095215
    10. '   ' → logprob: -7.1724371910095215

Token 151: '踏' (ID: 162799)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.002197717549279332
    2. ' True' → logprob: -6.127197742462158
    3. 'False' → logprob: -12.127197265625
    4. 'visited' → logprob: -12.502197265625
    5. '1' → logprob: -13.877197265625
    6. '   ' → logprob: -14.002197265625
    7. '
' → logprob: -14.752197265625
    8. ' visited' → logprob: -15.377197265625
    9. ' ' → logprob: -15.377197265625
    10. 'true' → logprob: -15.627197265625

Token 152: '破' (ID: 18311)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.42738664150238037
    2. 'ら' → logprob: -2.42738676071167
    3. '破' → logprob: -2.55238676071167
    4. 'ん' → logprob: -3.55238676071167
    5. 'か' → logprob: -3.67738676071167
    6. 'た' → logprob: -3.80238676071167
    7. 'った' → logprob: -4.17738676071167
    8. 'れて' → logprob: -4.30238676071167
    9. 'て' → logprob: -4.67738676071167
    10. '済' → logprob: -5.05238676071167

Token 153: '済' (ID: 94281)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8526658415794373
    2. '       ' → logprob: -1.227665901184082
    3. ':' → logprob: -2.352665901184082
    4. 'continue' → logprob: -2.602665901184082
    5. '済' → logprob: -3.102665901184082
    6. 'して' → logprob: -3.727665901184082
    7. 'て' → logprob: -4.102665901184082
    8. 'True' → logprob: -5.227665901184082
    9. ' continue' → logprob: -5.727665901184082
    10. '=True' → logprob: -6.102665901184082

Token 154: 'み' (ID: 17897)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9930676221847534
    2. ' continue' → logprob: -1.3680676221847534
    3. ':
' → logprob: -1.6180676221847534
    4. 'continue' → logprob: -2.493067741394043
    5. '           ' → logprob: -2.868067741394043
    6. '       ' → logprob: -4.618067741394043
    7. ')' → logprob: -4.618067741394043
    8. '():
' → logprob: -5.618067741394043
    9. '	continue' → logprob: -5.618067741394043
    10. '   ' → logprob: -6.118067741394043

Token 155: 'だった' (ID: 182863)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.544755220413208
    2. '           ' → logprob: -1.169755220413208
    3. 'continue' → logprob: -3.169755220413208
    4. ':' → logprob: -3.169755220413208
    5. '	continue' → logprob: -4.419754981994629
    6. '       ' → logprob: -5.544754981994629
    7. '==' → logprob: -5.669754981994629
    8. ':
' → logprob: -5.919754981994629
    9. '_continue' → logprob: -7.044754981994629
    10. ' continues' → logprob: -7.544754981994629

Token 156: 'ら' (ID: 8870)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4486164152622223
    2. '           ' → logprob: -1.5736163854599
    3. ':' → logprob: -2.3236165046691895
    4. 'continue' → logprob: -3.6986165046691895
    5. '	continue' → logprob: -4.3236165046691895
    6. '       ' → logprob: -4.8236165046691895
    7. ':
' → logprob: -4.9486165046691895
    8. '_continue' → logprob: -7.4486165046691895
    9. '==' → logprob: -7.5736165046691895
    10. '		' → logprob: -8.073616027832031

Token 157: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7453259229660034
    2. ' continue' → logprob: -1.1203259229660034
    3. 'continue' → logprob: -1.6203259229660034
    4. '	continue' → logprob: -7.120326042175293
    5. '	       ' → logprob: -8.495326042175293
    6. '_continue' → logprob: -8.620326042175293
    7. '       ' → logprob: -9.495326042175293
    8. '               ' → logprob: -9.870326042175293
    9. '		' → logprob: -10.370326042175293
    10. '   ' → logprob: -11.120326042175293

Token 158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1957848221063614
    2. ' continue' → logprob: -1.9457848072052002
    3. 'continue' → logprob: -3.4457848072052
    4. '	continue' → logprob: -6.195785045623779
    5. '       ' → logprob: -7.570785045623779
    6. '	       ' → logprob: -8.820784568786621
    7. '               ' → logprob: -9.070784568786621
    8. '_continue' → logprob: -9.445784568786621
    9. '```' → logprob: -9.945784568786621
    10. '		' → logprob: -10.320784568786621

Token 159: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.21454982459545135
    2. ' continue' → logprob: -1.9645497798919678
    3. '           ' → logprob: -2.9645497798919678
    4. '	continue' → logprob: -7.214550018310547
    5. '       ' → logprob: -7.839550018310547
    6. '               ' → logprob: -9.714550018310547
    7. '   ' → logprob: -9.964550018310547
    8. '_continue' → logprob: -10.714550018310547
    9. 'continu' → logprob: -11.714550018310547
    10. 'contin' → logprob: -11.964550018310547

Token 160: '#' (ID: 2)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012002354487776756
    2. '        
' → logprob: -4.762002468109131
    3. '
' → logprob: -6.887002468109131
    4. '       
' → logprob: -7.387002468109131
    5. ' 
' → logprob: -7.637002468109131
    6. '<|end|>' → logprob: -8.387001991271973
    7. 'd' → logprob: -8.512001991271973
    8. '  
' → logprob: -8.637001991271973
    9. '    
' → logprob: -8.637001991271973
    10. '   ' → logprob: -9.387001991271973

Token 161: '更新' (ID: 26889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012320798821747303
    2. '        
' → logprob: -4.7623209953308105
    3. '
' → logprob: -5.7623209953308105
    4. '       
' → logprob: -8.762320518493652
    5. ' 
' → logprob: -9.262320518493652
    6. '  
' → logprob: -9.887320518493652
    7. 'd' → logprob: -9.887320518493652
    8. '    
' → logprob: -10.387320518493652
    9. '<|end|>' → logprob: -10.387320518493652
    10. 'n' → logprob: -10.637320518493652

Token 162: 'し' (ID: 3829)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05057636275887489
    2. '       ' → logprob: -3.5505764484405518
    3. '<|end|>' → logprob: -4.050576210021973
    4. '        
' → logprob: -6.675576210021973
    5. '    
' → logprob: -7.550576210021973
    6. '<|end|>' → logprob: -7.800576210021973
    7. '
' → logprob: -8.175576210021973
    8. '  
' → logprob: -8.800576210021973
    9. '   ' → logprob: -8.925576210021973
    10. 's' → logprob: -9.050576210021973

Token 163: 'ない' (ID: 47592)
  Prédit: 'て'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'て' → logprob: -0.7269216775894165
    2. 'ない' → logprob: -2.351921558380127
    3. 'ます' → logprob: -2.726921558380127
    4. '       ' → logprob: -2.726921558380127
    5. 'る' → logprob: -3.476921558380127
    6. '
' → logprob: -3.601921558380127
    7. 'ません' → logprob: -3.601921558380127
    8. 'else' → logprob: -3.726921558380127
    9. 's' → logprob: -3.726921558380127
    10. 'す' → logprob: -3.976921558380127

Token 164: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020795976743102074
    2. '        
' → logprob: -6.377079486846924
    3. '
' → logprob: -9.252079963684082
    4. '<|end|>' → logprob: -9.377079963684082
    5. '       
' → logprob: -10.252079963684082
    6. 'else' → logprob: -10.252079963684082
    7. '      ' → logprob: -10.752079963684082
    8. 's' → logprob: -11.002079963684082
    9. 'd' → logprob: -11.252079963684082
    10. '        ' → logprob: -11.502079963684082

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014408307615667582
    2. '        
' → logprob: -6.75144100189209
    3. '<|end|>' → logprob: -9.12644100189209
    4. 'd' → logprob: -9.87644100189209
    5. '
' → logprob: -10.87644100189209
    6. 's' → logprob: -11.00144100189209
    7. '       
' → logprob: -11.25144100189209
    8. '      ' → logprob: -11.25144100189209
    9. 'else' → logprob: -11.87644100189209
    10. '  
' → logprob: -12.37644100189209

Token 166: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4232141375541687
    2. 'd' → logprob: -1.2982141971588135
    3. 'visited' → logprob: -2.7982141971588135
    4. ' d' → logprob: -5.798213958740234
    5. '   ' → logprob: -5.923213958740234
    6. ' visited' → logprob: -6.048213958740234
    7. 'Q' → logprob: -6.298213958740234
    8. '        
' → logprob: -7.423213958740234
    9. 'distance' → logprob: -8.798213958740234
    10. ' Q' → logprob: -9.298213958740234

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37511032819747925
    2. ':
' → logprob: -1.625110387802124
    3. '       ' → logprob: -2.750110387802124
    4. '           ' → logprob: -3.625110387802124
    5. '<|end|>' → logprob: -4.125110149383545
    6. '        
' → logprob: -6.625110149383545
    7. '
' → logprob: -7.000110149383545
    8. '):
' → logprob: -7.125110149383545
    9. ' :
' → logprob: -7.125110149383545
    10. '<|end|>' → logprob: -7.125110149383545

Token 168: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26737111806869507
    2. '           ' → logprob: -2.39237117767334
    3. 'Q' → logprob: -2.76737117767334
    4. 'd' → logprob: -3.01737117767334
    5. 'visited' → logprob: -4.39237117767334
    6. '   ' → logprob: -4.89237117767334
    7. ' Q' → logprob: -5.39237117767334
    8. ' d' → logprob: -5.76737117767334
    9. ' visited' → logprob: -5.76737117767334
    10. '```' → logprob: -8.26737117767334

Token 169: ' d' (ID: 272)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.8064351677894592
    2. 'd' (adapté à ' d') → logprob: -1.1814351081848145
    3. 'visited' → logprob: -1.4314351081848145
    4. '           ' → logprob: -5.1814351081848145
    5. '       ' → logprob: -7.5564351081848145
    6. '   ' → logprob: -7.6814351081848145
    7. ' visited' → logprob: -8.306435585021973
    8. ' Q' → logprob: -8.556435585021973
    9. 'distance' → logprob: -8.681435585021973
    10. '               ' → logprob: -9.431435585021973

Token 170: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00020938136731274426
    2. 'j' → logprob: -8.50020980834961
    3. '[' → logprob: -12.37520980834961
    4. '```' → logprob: -14.75020980834961
    5. '[v' → logprob: -15.12520980834961
    6. '
' → logprob: -15.87520980834961
    7. '[l' → logprob: -16.12520980834961
    8. '[d' → logprob: -16.25020980834961
    9. '[
' → logprob: -16.37520980834961
    10. '[js' → logprob: -16.62520980834961

Token 171: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1041145626222715e-05
    2. ' -' → logprob: -12.250011444091797
    3. ']-' → logprob: -12.875011444091797
    4. ']' → logprob: -13.250011444091797
    5. '[' → logprob: -13.750011444091797
    6. '1' → logprob: -15.000011444091797
    7. ']=' → logprob: -15.250011444091797
    8. '```' → logprob: -16.125011444091797
    9. ''-' → logprob: -17.250011444091797
    10. '[-' → logprob: -17.375011444091797

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -13.250004768371582
    3. '１' → logprob: -13.500004768371582
    4. '2' → logprob: -14.125004768371582
    5. '0' → logprob: -15.250004768371582
    6. ']' → logprob: -15.437504768371582
    7. 'd' → logprob: -15.500004768371582
    8. '```' → logprob: -15.812504768371582
    9. '   ' → logprob: -16.7500057220459
    10. '-' → logprob: -17.1250057220459

Token 173: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.10606895387172699
    2. '=d' → logprob: -2.6060688495635986
    3. ']' → logprob: -4.106069087982178
    4. '=' → logprob: -4.606069087982178
    5. ' =' → logprob: -8.60606861114502
    6. '=v' → logprob: -9.35606861114502
    7. ' ]' → logprob: -10.10606861114502
    8. ')=' → logprob: -11.10606861114502
    9. '=j' → logprob: -12.10606861114502
    10. '"]=' → logprob: -12.60606861114502

Token 174: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.7432603272027336e-06
    2. ' d' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.875001907348633
    4. '	d' → logprob: -16.000001907348633
    5. 'ky' → logprob: -17.750001907348633
    6. ' ' → logprob: -19.125001907348633
    7. 'dy' → logprob: -19.750001907348633
    8. 'v' → logprob: -19.750001907348633
    9. '  ' → logprob: -19.875001907348633
    10. 'dj' → logprob: -20.250001907348633

Token 175: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.31326964497566223
    2. 'v' → logprob: -1.3132696151733398
    3. '	v' → logprob: -12.56326961517334
    4. '[' → logprob: -13.31326961517334
    5. '(v' → logprob: -13.93826961517334
    6. ' v' → logprob: -14.68826961517334
    7. '```' → logprob: -15.18826961517334
    8. '   ' → logprob: -15.68826961517334
    9. ',v' → logprob: -15.93826961517334
    10. '][' → logprob: -16.063270568847656

Token 176: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.5776860184123507e-06
    2. ' -' → logprob: -13.12500286102295
    3. '1' → logprob: -14.75000286102295
    4. '−' → logprob: -16.625001907348633
    5. '[' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '```' → logprob: -18.250001907348633
    8. ' ' → logprob: -18.375001907348633
    9. ']-' → logprob: -18.375001907348633
    10. '2' → logprob: -18.500001907348633

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.250006675720215
    3. '１' → logprob: -14.375006675720215
    4. '   ' → logprob: -15.375006675720215
    5. '2' → logprob: -15.562506675720215
    6. '```' → logprob: -15.812506675720215
    7. '-' → logprob: -16.5625057220459
    8. ']' → logprob: -16.8750057220459
    9. '  ' → logprob: -16.9375057220459
    10. '۱' → logprob: -17.1875057220459

Token 178: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.04858816787600517
    2. ']' → logprob: -3.048588275909424
    3. ']+=' → logprob: -14.548587799072266
    4. '+' → logprob: -15.798587799072266
    5. ' ]' → logprob: -15.923587799072266
    6. '])+' → logprob: -17.548587799072266
    7. ']
' → logprob: -17.798587799072266
    8. '```' → logprob: -18.048587799072266
    9. '}+' → logprob: -18.173587799072266
    10. '1' → logprob: -18.298587799072266

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.534558552724775e-05
    2. ' ' → logprob: -10.875025749206543
    3. '6' → logprob: -12.125025749206543
    4. '１' → logprob: -14.875025749206543
    5. '   ' → logprob: -15.125025749206543
    6. '```' → logprob: -16.750024795532227
    7. '{' → logprob: -17.312524795532227
    8. '
' → logprob: -17.500024795532227
    9. '  ' → logprob: -17.625024795532227
    10. '' → logprob: -17.875024795532227

Token 180: '
' (ID: 198)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.38119831681251526
    2. '           ' → logprob: -1.5061982870101929
    3. '       ' → logprob: -2.7561984062194824
    4. 'visited' → logprob: -3.5061984062194824
    5. ' Q' → logprob: -7.256198406219482
    6. '   ' → logprob: -7.756198406219482
    7. ' visited' → logprob: -8.006197929382324
    8. '	Q' → logprob: -9.631197929382324
    9. '<|end|>' → logprob: -10.506197929382324
    10. '
' → logprob: -10.881197929382324

Token 181: '           ' (ID: 352)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.2425563931465149
    2. '           ' → logprob: -1.9925563335418701
    3. 'visited' → logprob: -2.99255633354187
    4. '       ' → logprob: -3.61755633354187
    5. '   ' → logprob: -6.617556571960449
    6. ' visited' → logprob: -8.24255657196045
    7. ' Q' → logprob: -8.49255657196045
    8. '	Q' → logprob: -9.24255657196045
    9. '               ' → logprob: -10.49255657196045
    10. '
' → logprob: -10.74255657196045

Token 182: ' Q' (ID: 1486)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.16024574637413025
    2. 'Q' (adapté à ' Q') → logprob: -1.9102457761764526
    3. ' visited' → logprob: -11.535245895385742
    4. '       ' → logprob: -12.535245895385742
    5. '   ' → logprob: -12.660245895385742
    6. ' Q' → logprob: -13.035245895385742
    7. '           ' → logprob: -13.160245895385742
    8. 'Visited' → logprob: -15.535245895385742
    9. 'q' → logprob: -16.160245895385742
    10. 'queue' → logprob: -16.160245895385742

Token 183: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.1279553291387856e-05
    2. '.' → logprob: -11.500011444091797
    3. 'append' → logprob: -14.000011444091797
    4. '.app' → logprob: -16.625011444091797
    5. '.push' → logprob: -17.375011444091797
    6. ' .' → logprob: -17.750011444091797
    7. '.ap' → logprob: -18.625011444091797
    8. '.extend' → logprob: -18.750011444091797
    9. '.pop' → logprob: -19.625011444091797
    10. '	append' → logprob: -19.750011444091797

Token 184: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.25000286102295
    3. '(l' → logprob: -14.50000286102295
    4. '((' → logprob: -16.125001907348633
    5. 'j' → logprob: -19.000001907348633
    6. ' (' → logprob: -20.000001907348633
    7. '[j' → logprob: -20.375001907348633
    8. '(i' → logprob: -20.500001907348633
    9. '(J' → logprob: -20.750001907348633
    10. '(x' → logprob: -20.875001907348633

Token 185: ')
' (ID: 446)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008787819184362888
    2. ')' → logprob: -4.758787631988525
    3. ' -' → logprob: -9.383788108825684
    4. ')
' → logprob: -9.633788108825684
    5. '-)' → logprob: -10.758788108825684
    6. ' )' → logprob: -14.258788108825684
    7. '   ' → logprob: -14.383788108825684
    8. '       ' → logprob: -15.383788108825684
    9. '```' → logprob: -15.383788108825684
    10. '[' → logprob: -16.008787155151367

Token 186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25572267174720764
    2. 'visited' → logprob: -1.5057226419448853
    3. '       ' → logprob: -5.630722522735596
    4. ' visited' → logprob: -8.630722999572754
    5. '   ' → logprob: -11.255722999572754
    6. '```' → logprob: -13.130722999572754
    7. '               ' → logprob: -13.130722999572754
    8. '          ' → logprob: -13.380722999572754
    9. 'visit' → logprob: -13.380722999572754
    10. '            
' → logprob: -15.255722999572754

Token 187: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -7.896309739408025e-07
    2. ' visited' → logprob: -14.250000953674316
    3. '           ' → logprob: -17.375
    4. '   ' → logprob: -18.875
    5. '       ' → logprob: -18.875
    6. 'visit' → logprob: -21.0
    7. 'visible' → logprob: -22.625
    8. '          ' → logprob: -23.0
    9. '            
' → logprob: -23.125
    10. '
' → logprob: -23.5

Token 188: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.000000953674316
    3. '[i' → logprob: -15.750000953674316
    4. ' [' → logprob: -16.750001907348633
    5. '[v' → logprob: -17.000001907348633
    6. '```' → logprob: -18.625001907348633
    7. '[k' → logprob: -18.750001907348633
    8. '[u' → logprob: -19.000001907348633
    9. '[js' → logprob: -19.125001907348633
    10. '[q' → logprob: -19.375001907348633

Token 189: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.5822400857578032e-05
    2. '[' → logprob: -11.250025749206543
    3. ' -' → logprob: -11.500025749206543
    4. '[-' → logprob: -13.000025749206543
    5. '   ' → logprob: -15.750025749206543
    6. '[j' → logprob: -16.50002670288086
    7. '-[' → logprob: -16.50002670288086
    8. '−' → logprob: -17.00002670288086
    9. ']-' → logprob: -17.50002670288086
    10. '[i' → logprob: -18.00002670288086

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.182190554682165e-05
    2. 'True' → logprob: -9.750061988830566
    3. 'False' → logprob: -13.125061988830566
    4. ' ' → logprob: -14.125061988830566
    5. '-' → logprob: -15.250061988830566
    6. ' True' → logprob: -15.250061988830566
    7. '```' → logprob: -17.00006103515625
    8. '(True' → logprob: -17.00006103515625
    9. '１' → logprob: -17.00006103515625
    10. '   ' → logprob: -17.12506103515625

Token 191: ']=' (ID: 9539)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.5855274200439453
    2. ']=' → logprob: -0.8355274200439453
    3. '=' → logprob: -5.085527420043945
    4. ']' → logprob: -5.710527420043945
    5. ')=' → logprob: -10.335527420043945
    6. ' =' → logprob: -12.335527420043945
    7. 'True' → logprob: -12.335527420043945
    8. '']=' → logprob: -13.460527420043945
    9. '=true' → logprob: -13.710527420043945
    10. '"]=' → logprob: -14.335527420043945

Token 192: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -9.088346359931165e-07
    2. ' True' → logprob: -14.000000953674316
    3. '(True' → logprob: -22.625
    4. '1' → logprob: -23.25
    5. '=True' → logprob: -23.375
    6. 'False' → logprob: -24.125
    7. 'true' → logprob: -24.125
    8. 'Tr' → logprob: -25.0
    9. '   ' → logprob: -25.375
    10. '.True' → logprob: -25.75

Token 193: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03628053888678551
    2. 'for' → logprob: -3.536280632019043
    3. '
' → logprob: -5.411280632019043
    4. '   ' → logprob: -6.661280632019043
    5. '```' → logprob: -8.411280632019043
    6. ')' → logprob: -9.036280632019043
    7. 'if' → logprob: -9.286280632019043
    8. '    
' → logprob: -9.786280632019043
    9. ' for' → logprob: -9.911280632019043
    10. '#print' → logprob: -10.036280632019043

Token 194: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2909848392009735
    2. '   ' → logprob: -1.790984869003296
    3. 'ky' → logprob: -3.665984869003296
    4. 'for' → logprob: -3.665984869003296
    5. 'if' → logprob: -4.165984630584717
    6. '
' → logprob: -4.665984630584717
    7. '           ' → logprob: -5.290984630584717
    8. '       ' → logprob: -6.665984630584717
    9. '    
' → logprob: -6.665984630584717
    10. '```' → logprob: -7.290984630584717

Token 195: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018160473555326462
    2. ' i' → logprob: -4.018160343170166
    3. 'v' → logprob: -11.643160820007324
    4. ' v' → logprob: -14.518160820007324
    5. 'x' → logprob: -14.643160820007324
    6. 'k' → logprob: -15.143160820007324
    7. ' ' → logprob: -15.768160820007324
    8. '   ' → logprob: -16.268159866333008
    9. '	i' → logprob: -16.268159866333008
    10. '```' → logprob: -16.268159866333008

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07080196589231491
    2. 'in' → logprob: -2.6958019733428955
    3. 'a' → logprob: -8.570801734924316
    4. ' ' → logprob: -8.945801734924316
    5. 'd' → logprob: -9.070801734924316
    6. 'n' → logprob: -9.320801734924316
    7. 'range' → logprob: -9.445801734924316
    8. 'r' → logprob: -10.195801734924316
    9. 'i' → logprob: -10.320801734924316
    10. '   ' → logprob: -10.695801734924316

Token 197: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6471746563911438
    2. 'd' → logprob: -0.7721746563911438
    3. ' range' → logprob: -4.397174835205078
    4. ' d' → logprob: -6.147174835205078
    5. 'r' → logprob: -12.772174835205078
    6. ' ' → logprob: -13.147174835205078
    7. '(range' → logprob: -13.397174835205078
    8. 'enumer' → logprob: -13.959674835205078
    9. '  ' → logprob: -14.022174835205078
    10. 'a' → logprob: -14.209674835205078

Token 198: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07897483557462692
    2. 'n' → logprob: -2.578974723815918
    3. '(len' → logprob: -9.828974723815918
    4. '(' → logprob: -10.953974723815918
    5. 'len' → logprob: -11.453974723815918
    6. ' n' → logprob: -12.828974723815918
    7. ' (' → logprob: -15.828974723815918
    8. ',n' → logprob: -16.203975677490234
    9. 'd' → logprob: -16.953975677490234
    10. '0' → logprob: -17.578975677490234

Token 199: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06204733997583389
    2. '):
' → logprob: -2.812047243118286
    3. ')' → logprob: -10.062047004699707
    4. ':' → logprob: -11.062047004699707
    5. '):
' → logprob: -11.187047004699707
    6. ')：' → logprob: -12.562047004699707
    7. ' ):' → logprob: -13.437047004699707
    8. ':
' → logprob: -14.312047004699707
    9. '   ' → logprob: -14.687047004699707
    10. ']:' → logprob: -14.812047004699707

Token 200: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1475367248058319
    2. '   ' → logprob: -2.1475367546081543
    3. ' print' → logprob: -3.8975367546081543
    4. 'if' → logprob: -9.397536277770996
    5. ' if' → logprob: -11.272536277770996
    6. '	print' → logprob: -11.772536277770996
    7. '```' → logprob: -13.772536277770996
    8. ' ' → logprob: -14.147536277770996
    9. '    ' → logprob: -15.022536277770996
    10. '  ' → logprob: -15.647536277770996

Token 201: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00863962434232235
    2. 'if' → logprob: -4.758639812469482
    3. '   ' → logprob: -11.258639335632324
    4. ' print' → logprob: -11.383639335632324
    5. ' if' → logprob: -14.133639335632324
    6. '#print' → logprob: -16.63364028930664
    7. 'printf' → logprob: -17.50864028930664
    8. '	print' → logprob: -17.88364028930664
    9. 'Print' → logprob: -18.50864028930664
    10. ' ' → logprob: -18.63364028930664

Token 202: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.38795357942581177
    2. '(d' → logprob: -1.137953519821167
    3. '(' → logprob: -7.387953758239746
    4. 'a' → logprob: -8.637953758239746
    5. '(f' → logprob: -8.887953758239746
    6. 'd' → logprob: -9.137953758239746
    7. '((' → logprob: -10.762953758239746
    8. ' (' → logprob: -11.137953758239746
    9. '("' → logprob: -13.512953758239746
    10. '("{}' → logprob: -14.012953758239746

Token 203: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23855826258659363
    2. ',' → logprob: -1.613558292388916
    3. ',end' → logprob: -5.113558292388916
    4. ')' → logprob: -5.363558292388916
    5. ' ,' → logprob: -6.863558292388916
    6. ' +' → logprob: -7.863558292388916
    7. ',+' → logprob: -7.863558292388916
    8. ',a' → logprob: -8.738557815551758
    9. ',n' → logprob: -8.863557815551758
    10. ',d' → logprob: -9.363557815551758

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. '１' → logprob: -15.000019073486328
    4. ')' → logprob: -16.500019073486328
    5. '   ' → logprob: -17.625019073486328
    6. '```' → logprob: -17.750019073486328
    7. 'a' → logprob: -19.375019073486328
    8. ' )' → logprob: -19.500019073486328
    9. ',' → logprob: -19.625019073486328
    10. '`' → logprob: -19.875019073486328

Token 205: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.20234833657741547
    2. ',' → logprob: -1.7023483514785767
    3. ' ,' → logprob: -7.077348232269287
    4. ',end' → logprob: -9.577348709106445
    5. ',int' → logprob: -11.952348709106445
    6. ',max' → logprob: -12.702348709106445
    7. ',len' → logprob: -13.202348709106445
    8. ',f' → logprob: -13.327348709106445
    9. ',"' → logprob: -13.577348709106445
    10. ',n' → logprob: -13.827348709106445

Token 206: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.91732100979425e-05
    2. '[' → logprob: -10.375039100646973
    3. 'a' → logprob: -12.375039100646973
    4. ')' → logprob: -13.625039100646973
    5. '])' → logprob: -14.000039100646973
    6. '-' → logprob: -14.375039100646973
    7. ')a' → logprob: -14.625039100646973
    8. '[
' → logprob: -16.00004005432129
    9. ')[' → logprob: -16.00004005432129
    10. ']' → logprob: -16.12504005432129

Token 207: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. '))' → logprob: -12.875006675720215
    3. ' )' → logprob: -12.875006675720215
    4. ')
' → logprob: -15.500006675720215
    5. '])' → logprob: -15.500006675720215
    6. ')")' → logprob: -15.500006675720215
    7. '})' → logprob: -15.625006675720215
    8. ',)' → logprob: -16.1250057220459
    9. ')`' → logprob: -16.1250057220459
    10. '())' → logprob: -16.2500057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 205
Tokens correctement prédits (1ère position, stricte): 82
Tokens correctement prédits (1ère position, avec adaptation): 89
Tokens correctement prédits (top 10): 147
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 43.41%
Précision (top 10): 71.71%
================================================================================
