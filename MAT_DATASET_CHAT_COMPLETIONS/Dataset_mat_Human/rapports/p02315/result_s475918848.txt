================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, W = map(int, input().split())
A = [list(map(int, input().split())) for _ in range(N)]
dp = [0 for _ in range(W + 1)]

for a in A:
  for j in range(W, a[1] - 1, -1):
    dp[j] = max(dp[j], dp[j - a[1]] + a[0])
print(max(dp))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' W' (ID: 486)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012914787977933884
    2. ',' → logprob: -5.137914657592773
    3. ' =' → logprob: -5.137914657592773
    4. '[' → logprob: -7.762914657592773
    5. '.' → logprob: -8.887914657592773
    6. '*' → logprob: -8.887914657592773
    7. ')' → logprob: -9.137914657592773
    8. ';' → logprob: -9.512914657592773
    9. '_' → logprob: -10.387914657592773
    10. ':' → logprob: -10.637914657592773

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.14626576006412506
    2. 'map' → logprob: -2.271265745162964
    3. ' ' → logprob: -4.021265983581543
    4. '10' → logprob: -4.896265983581543
    5. ' input' → logprob: -6.271265983581543
    6. 'input' → logprob: -6.646265983581543
    7. ' [' → logprob: -7.396265983581543
    8. '20' → logprob: -7.521265983581543
    9. 'int' → logprob: -7.771265983581543
    10. '0' → logprob: -7.896265983581543

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024616697803139687
    2. '(lambda' → logprob: -4.274616718292236
    3. '(int' → logprob: -5.149616718292236
    4. '<|end|>' → logprob: -6.399616718292236
    5. '```' → logprob: -6.774616718292236
    6. '(str' → logprob: -8.274616241455078
    7. ')' → logprob: -8.399616241455078
    8. '[int' → logprob: -8.399616241455078
    9. '<|end|>' → logprob: -9.024616241455078
    10. '<int' → logprob: -9.774616241455078

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0003074407577515
    2. '(input' → logprob: -1.0003074407577515
    3. ')' → logprob: -1.3753074407577515
    4. '(user' → logprob: -6.000307559967041
    5. '(int' → logprob: -6.750307559967041
    6. '```' → logprob: -7.125307559967041
    7. '(data' → logprob: -7.250307559967041
    8. '())' → logprob: -7.375307559967041
    9. '`)' → logprob: -7.375307559967041
    10. '(token' → logprob: -7.500307559967041

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25193408131599426
    2. ' input' → logprob: -1.5019340515136719
    3. '(input' → logprob: -13.001934051513672
    4. ',input' → logprob: -13.626934051513672
    5. ' ' → logprob: -14.376934051513672
    6. ')' → logprob: -14.376934051513672
    7. '	input' → logprob: -15.751934051513672
    8. '=input' → logprob: -16.126934051513672
    9. '<input' → logprob: -16.876934051513672
    10. '[input' → logprob: -17.501934051513672

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8407900333404541
    2. '())' → logprob: -0.8407900333404541
    3. '(' → logprob: -2.465790033340454
    4. '().' → logprob: -4.340789794921875
    5. '('' → logprob: -4.465789794921875
    6. ')' → logprob: -5.215789794921875
    7. '`()' → logprob: -5.340789794921875
    8. '());' → logprob: -5.465789794921875
    9. '(()' → logprob: -5.965789794921875
    10. '(""))' → logprob: -6.090789794921875

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00261133280582726
    2. 'strip' → logprob: -6.00261116027832
    3. 'rstrip' → logprob: -9.50261116027832
    4. 'read' → logprob: -9.75261116027832
    5. ')' → logprob: -13.50261116027832
    6. ' split' → logprob: -13.87761116027832
    7. '(split' → logprob: -16.00261116027832
    8. 'startswith' → logprob: -16.50261116027832
    9. 'replace' → logprob: -16.75261116027832
    10. ' readline' → logprob: -16.75261116027832

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05773089453577995
    2. '())' → logprob: -3.0577309131622314
    3. '))' → logprob: -5.057730674743652
    4. '()' → logprob: -6.307730674743652
    5. '`)' → logprob: -7.682730674743652
    6. '(' → logprob: -8.432730674743652
    7. '()))' → logprob: -9.432730674743652
    8. '('' → logprob: -10.057730674743652
    9. '>)' → logprob: -10.932730674743652
    10. '')' → logprob: -10.932730674743652

Token 11: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10146094113588333
    2. 'for' → logprob: -3.8514609336853027
    3. 'x' → logprob: -4.101460933685303
    4. 'A' → logprob: -4.226460933685303
    5. 'arr' → logprob: -4.851460933685303
    6. 'data' → logprob: -4.851460933685303
    7. 'd' → logprob: -5.226460933685303
    8. 's' → logprob: -5.851460933685303
    9. 'dp' → logprob: -5.976460933685303
    10. 'array' → logprob: -6.101460933685303

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008251079358160496
    2. '.' → logprob: -6.008251190185547
    3. '=' → logprob: -6.258251190185547
    4. '_' → logprob: -7.008251190185547
    5. ' =' → logprob: -7.258251190185547
    6. '[i' → logprob: -7.258251190185547
    7. '[]' → logprob: -7.758251190185547
    8. '[A' → logprob: -8.133251190185547
    9. 'A' → logprob: -8.633251190185547
    10. '[:]' → logprob: -9.008251190185547

Token 13: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.48067596554756165
    2. ' list' → logprob: -0.9806759357452393
    3. ' [' → logprob: -6.230676174163818
    4. '[]' → logprob: -6.355676174163818
    5. '[' → logprob: -6.730676174163818
    6. ' []' → logprob: -6.730676174163818
    7. '[list' → logprob: -7.730676174163818
    8. '[int' → logprob: -10.85567569732666
    9. 'input' → logprob: -11.73067569732666
    10. '[input' → logprob: -12.10567569732666

Token 14: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00031746976310387254
    2. 'map' → logprob: -8.625317573547363
    3. ' int' → logprob: -9.750317573547363
    4. '0' → logprob: -10.375317573547363
    5. ']int' → logprob: -10.750317573547363
    6. '*' → logprob: -11.125317573547363
    7. '(int' → logprob: -11.875317573547363
    8. ']' → logprob: -13.500317573547363
    9. '[int' → logprob: -14.250317573547363
    10. '<int' → logprob: -14.250317573547363

Token 15: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0004505725810304284
    2. '(' → logprob: -7.750450611114502
    3. '(int' → logprob: -11.125450134277344
    4. '(range' → logprob: -13.375450134277344
    5. 'map' → logprob: -13.375450134277344
    6. '()' → logprob: -13.500450134277344
    7. '(
' → logprob: -15.125450134277344
    8. '	map' → logprob: -16.500450134277344
    9. '(m' → logprob: -17.125450134277344
    10. ' (' → logprob: -17.250450134277344

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000286364956991747
    2. 'int' → logprob: -8.375286102294922
    3. '<int' → logprob: -10.625286102294922
    4. '(' → logprob: -10.875286102294922
    5. '=int' → logprob: -12.250286102294922
    6. ',int' → logprob: -13.000286102294922
    7. '[int' → logprob: -13.000286102294922
    8. ']int' → logprob: -13.375286102294922
    9. '```' → logprob: -14.875286102294922
    10. ' int' → logprob: -14.875286102294922

Token 17: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6408093571662903
    2. ',' → logprob: -1.3908092975616455
    3. ',input' → logprob: -1.5158092975616455
    4. '(' → logprob: -5.890809535980225
    5. 'input' → logprob: -7.015809535980225
    6. ')' → logprob: -7.390809535980225
    7. ' ,' → logprob: -8.890809059143066
    8. '=input' → logprob: -9.890809059143066
    9. ' input' → logprob: -10.140809059143066
    10. '),' → logprob: -10.515809059143066

Token 18: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10021281987428665
    2. ' input' → logprob: -2.350212812423706
    3. '(input' → logprob: -13.100213050842285
    4. ')' → logprob: -13.475213050842285
    5. '=input' → logprob: -14.350213050842285
    6. ',input' → logprob: -14.350213050842285
    7. '	input' → logprob: -14.600213050842285
    8. '<input' → logprob: -14.975213050842285
    9. '_input' → logprob: -15.225213050842285
    10. ' ' → logprob: -15.850213050842285

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.810037742368877e-05
    2. '()' → logprob: -10.500038146972656
    3. ' ().' → logprob: -12.375038146972656
    4. '(' → logprob: -13.250038146972656
    5. '()))' → logprob: -13.500038146972656
    6. ')' → logprob: -14.125038146972656
    7. '())' → logprob: -14.125038146972656
    8. '.' → logprob: -14.125038146972656
    9. '))' → logprob: -15.625038146972656
    10. '.readline' → logprob: -15.750038146972656

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. ' split' → logprob: -14.250000953674316
    3. '(split' → logprob: -14.750000953674316
    4. 'rstrip' → logprob: -16.250001907348633
    5. 'strip' → logprob: -16.875001907348633
    6. 'spl' → logprob: -18.375001907348633
    7. 'plit' → logprob: -21.125001907348633
    8. '.split' → logprob: -22.000001907348633
    9. 's' → logprob: -22.375001907348633
    10. ')' → logprob: -22.375001907348633

Token 21: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0027020431589335203
    2. '())' → logprob: -6.502702236175537
    3. '()' → logprob: -7.127702236175537
    4. '))' → logprob: -8.127701759338379
    5. '(' → logprob: -10.002701759338379
    6. '())))' → logprob: -10.127701759338379
    7. '()))
' → logprob: -12.377701759338379
    8. '()));' → logprob: -12.502701759338379
    9. '().' → logprob: -13.252701759338379
    10. '())).' → logprob: -13.377701759338379

Token 22: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3185918629169464
    2. 'for' → logprob: -2.693591833114624
    3. '()' → logprob: -2.943591833114624
    4. '())' → logprob: -2.943591833114624
    5. ')]' → logprob: -3.193591833114624
    6. '()]' → logprob: -3.943591833114624
    7. ']' → logprob: -4.318592071533203
    8. '(' → logprob: -4.443592071533203
    9. ' for' → logprob: -4.568592071533203
    10. '(N' → logprob: -6.443592071533203

Token 23: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04656291753053665
    2. '_' → logprob: -4.046563148498535
    3. 'range' → logprob: -4.046563148498535
    4. '(range' → logprob: -5.296563148498535
    5. '(' → logprob: -6.046563148498535
    6. ' ' → logprob: -6.421563148498535
    7. ' in' → logprob: -7.171563148498535
    8. ' _' → logprob: -7.796563148498535
    9. '_range' → logprob: -9.046563148498535
    10. '	range' → logprob: -9.046563148498535

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0337689109146595
    2. 'in' → logprob: -3.408768892288208
    3. 'range' → logprob: -9.908768653869629
    4. '(' → logprob: -10.283768653869629
    5. '_' → logprob: -12.283768653869629
    6. 's' → logprob: -12.408768653869629
    7. '<|end|>' → logprob: -12.533768653869629
    8. ' ' → logprob: -12.533768653869629
    9. 'import' → logprob: -12.908768653869629
    10. '	in' → logprob: -13.033768653869629

Token 25: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005235291086137295
    2. ' range' → logprob: -5.255235195159912
    3. '(range' → logprob: -14.63023567199707
    4. '	range' → logprob: -15.00523567199707
    5. ' ' → logprob: -15.13023567199707
    6. '  ' → logprob: -16.13023567199707
    7. '   ' → logprob: -16.25523567199707
    8. '```' → logprob: -16.50523567199707
    9. 'rang' → logprob: -16.88023567199707
    10. '.range' → logprob: -17.13023567199707

Token 26: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0009162207134068012
    2. '(' → logprob: -7.000916004180908
    3. '(W' → logprob: -13.000916481018066
    4. '(n' → logprob: -13.250916481018066
    5. '(
' → logprob: -15.375916481018066
    6. 'N' → logprob: -15.500916481018066
    7. ')' → logprob: -16.62591552734375
    8. '(M' → logprob: -16.75091552734375
    9. ' (' → logprob: -17.37591552734375
    10. '((' → logprob: -17.50091552734375

Token 27: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013786651834379882
    2. ')' → logprob: -9.250138282775879
    3. ']' → logprob: -10.125138282775879
    4. '])]' → logprob: -14.875138282775879
    5. ')])' → logprob: -14.875138282775879
    6. ')],' → logprob: -15.250138282775879
    7. '')]' → logprob: -15.750138282775879
    8. '))' → logprob: -15.875138282775879
    9. '])' → logprob: -15.875138282775879
    10. ')]
' → logprob: -16.000137329101562

Token 28: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02569851279258728
    2. 'DP' → logprob: -4.150698661804199
    3. 'result' → logprob: -6.525698661804199
    4. 's' → logprob: -6.900698661804199
    5. 'd' → logprob: -7.150698661804199
    6. 'M' → logprob: -7.650698661804199
    7. 'res' → logprob: -7.900698661804199
    8. 'count' → logprob: -7.900698661804199
    9. 'ans' → logprob: -8.0256986618042
    10. 'max' → logprob: -8.1506986618042

Token 29: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05252467095851898
    2. ' =' → logprob: -3.0525245666503906
    3. '=' → logprob: -6.302524566650391
    4. '_' → logprob: -6.427524566650391
    5. ' ' → logprob: -8.30252456665039
    6. ']' → logprob: -9.55252456665039
    7. ' [' → logprob: -10.42752456665039
    8. '[i' → logprob: -10.55252456665039
    9. '```' → logprob: -10.80252456665039
    10. '[]' → logprob: -11.55252456665039

Token 30: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.313729852437973
    2. '[' → logprob: -1.8137298822402954
    3. ' [[' → logprob: -2.313729763031006
    4. ' [' → logprob: -4.938729763031006
    5. ' [[[' → logprob: -9.563730239868164
    6. '[-' → logprob: -9.688730239868164
    7. '[{' → logprob: -11.938730239868164
    8. '[A' → logprob: -11.938730239868164
    9. '[n' → logprob: -12.438730239868164
    10. '{}' → logprob: -12.813730239868164

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35374897718429565
    2. '[' → logprob: -1.2287490367889404
    3. 'float' → logprob: -5.728748798370361
    4. '-' → logprob: -7.603748798370361
    5. 'False' → logprob: -7.603748798370361
    6. 'W' → logprob: -7.853748798370361
    7. '[-' → logprob: -8.22874927520752
    8. ' [' → logprob: -8.60374927520752
    9. '-W' → logprob: -9.72874927520752
    10. ' ' → logprob: -10.72874927520752

Token 32: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02387644723057747
    2. ' ]' → logprob: -4.398876667022705
    3. ']*' → logprob: -5.273876667022705
    4. ' for' → logprob: -5.648876667022705
    5. ']*(' → logprob: -6.023876667022705
    6. ']+' → logprob: -9.023876190185547
    7. ',' → logprob: -10.023876190185547
    8. 'for' → logprob: -10.148876190185547
    9. '+' → logprob: -11.773876190185547
    10. ' ' → logprob: -12.148876190185547

Token 33: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.22876518964767456
    2. '(' → logprob: -2.6037652492523193
    3. '_' → logprob: -2.8537652492523193
    4. ' range' → logprob: -3.4787652492523193
    5. 'range' → logprob: -4.10376501083374
    6. ' ' → logprob: -4.22876501083374
    7. ' i' → logprob: -5.22876501083374
    8. '(range' → logprob: -6.35376501083374
    9. '_range' → logprob: -6.60376501083374
    10. ' in' → logprob: -7.22876501083374

Token 34: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.15009962022304535
    2. 'in' → logprob: -2.400099515914917
    3. ' in' → logprob: -3.275099515914917
    4. ' range' → logprob: -4.525099754333496
    5. '(range' → logprob: -11.525099754333496
    6. ' ' → logprob: -12.275099754333496
    7. '	range' → logprob: -13.400099754333496
    8. '_range' → logprob: -13.525099754333496
    9. '_' → logprob: -13.650099754333496
    10. ' xrange' → logprob: -13.775099754333496

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759465098381042
    2. ' range' → logprob: -0.8259465098381042
    3. ' ' → logprob: -12.575946807861328
    4. '(range' → logprob: -13.825946807861328
    5. '	range' → logprob: -13.950946807861328
    6. 'A' → logprob: -15.075946807861328
    7. 'r' → logprob: -15.200946807861328
    8. 'rang' → logprob: -15.200946807861328
    9. '  ' → logprob: -15.825946807861328
    10. '[' → logprob: -15.825946807861328

Token 36: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.7703354358673096
    2. '(N' → logprob: -1.1453354358673096
    3. '(' → logprob: -1.5203354358673096
    4. '(range' → logprob: -8.27033519744873
    5. ' (' → logprob: -10.52033519744873
    6. '(s' → logprob: -10.89533519744873
    7. '(
' → logprob: -11.02033519744873
    8. ')' → logprob: -11.39533519744873
    9. '(A' → logprob: -11.77033519744873
    10. '(n' → logprob: -11.89533519744873

Token 37: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0052613914012908936
    2. ' +' → logprob: -5.255261421203613
    3. ')]' → logprob: -10.630261421203613
    4. ')' → logprob: -12.880261421203613
    5. ')])' → logprob: -14.630261421203613
    6. '＋' → logprob: -16.130260467529297
    7. '1' → logprob: -16.130260467529297
    8. '+
' → logprob: -16.130260467529297
    9. ' ' → logprob: -17.005260467529297
    10. ']' → logprob: -17.130260467529297

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804401680827141
    2. ' ' → logprob: -3.288043975830078
    3. ')' → logprob: -14.538043975830078
    4. '2' → logprob: -14.913043975830078
    5. '0' → logprob: -15.163043975830078
    6. '```' → logprob: -15.163043975830078
    7. ' W' → logprob: -15.663043975830078
    8. ' )' → logprob: -15.663043975830078
    9. '  ' → logprob: -16.038043975830078
    10. '100' → logprob: -16.225543975830078

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020413640595506877
    2. ' ' → logprob: -8.500204086303711
    3. '0' → logprob: -15.000204086303711
    4. '2' → logprob: -15.875204086303711
    5. '   ' → logprob: -16.37520408630371
    6. '```' → logprob: -17.75020408630371
    7. '  ' → logprob: -17.87520408630371
    8. '100' → logprob: -18.25020408630371
    9. '10' → logprob: -18.37520408630371
    10. '    ' → logprob: -19.31270408630371

Token 40: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00017565040616318583
    2. ']' → logprob: -8.750175476074219
    3. ')' → logprob: -11.500175476074219
    4. '])]' → logprob: -12.625175476074219
    5. ' )' → logprob: -13.875175476074219
    6. ' ]' → logprob: -14.125175476074219
    7. '')]' → logprob: -14.500175476074219
    8. ')],' → logprob: -14.750175476074219
    9. ')])' → logprob: -14.875175476074219
    10. '])' → logprob: -15.125175476074219

Token 41: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005811501177959144
    2. ' for' → logprob: -7.50058126449585
    3. '```' → logprob: -11.000580787658691
    4. '<|end|>' → logprob: -11.625580787658691
    5. '
' → logprob: -14.125580787658691
    6. ')' → logprob: -14.875580787658691
    7. '\n' → logprob: -15.625580787658691
    8. '	for' → logprob: -15.625580787658691
    9. 'For' → logprob: -15.875580787658691
    10. 'f' → logprob: -16.125581741333008

Token 42: ' a' (ID: 261)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.2868753969669342
    2. ' i' → logprob: -1.5368753671646118
    3. 'w' → logprob: -3.7868754863739014
    4. 'i' → logprob: -4.911875247955322
    5. ' _' → logprob: -5.911875247955322
    6. '_' → logprob: -6.661875247955322
    7. ' weight' → logprob: -8.78687572479248
    8. ' ' → logprob: -9.03687572479248
    9. ' item' → logprob: -11.41187572479248
    10. ' j' → logprob: -11.53687572479248

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008312548510730267
    2. 'in' → logprob: -5.133312702178955
    3. ' ' → logprob: -6.758312702178955
    4. ' i' → logprob: -7.258312702178955
    5. '_' → logprob: -8.258312225341797
    6. 'i' → logprob: -9.133312225341797
    7. '_in' → logprob: -10.133312225341797
    8. ',' → logprob: -10.508312225341797
    9. 'n' → logprob: -10.758312225341797
    10. '_i' → logprob: -11.258312225341797

Token 44: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04868967458605766
    2. ' A' → logprob: -3.048689603805542
    3. ' range' → logprob: -9.548689842224121
    4. 'range' → logprob: -10.423689842224121
    5. ' ' → logprob: -14.923689842224121
    6. '	A' → logprob: -15.423689842224121
    7. '  ' → logprob: -15.548689842224121
    8. '(A' → logprob: -15.798689842224121
    9. 'a' → logprob: -15.923689842224121
    10. '[A' → logprob: -15.923689842224121

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.759734732331708e-05
    2. '[' → logprob: -11.500017166137695
    3. ':
' → logprob: -13.000017166137695
    4. ':**' → logprob: -13.125017166137695
    5. ' :' → logprob: -13.625017166137695
    6. '):' → logprob: -14.125017166137695
    7. '[:]' → logprob: -15.375017166137695
    8. ']:' → logprob: -15.375017166137695
    9. ',' → logprob: -15.875017166137695
    10. 'a' → logprob: -16.125017166137695

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2935393750667572
    2. ' 
' → logprob: -1.9185394048690796
    3. '    ' → logprob: -3.29353928565979
    4. '    
' → logprob: -3.91853928565979
    5. '<|end|>' → logprob: -4.043539524078369
    6. '   ' → logprob: -4.168539524078369
    7. '     
' → logprob: -5.168539524078369
    8. '
' → logprob: -6.043539524078369
    9. ' for' → logprob: -6.168539524078369
    10. '  
' → logprob: -6.293539524078369

Token 47: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03133777156472206
    2. 'for' → logprob: -4.281337738037109
    3. ' range' → logprob: -4.656337738037109
    4. ' ' → logprob: -5.156337738037109
    5. '   ' → logprob: -6.656337738037109
    6. 'range' → logprob: -8.15633773803711
    7. ' a' → logprob: -9.40633773803711
    8. '    ' → logprob: -10.65633773803711
    9. ' if' → logprob: -10.78133773803711
    10. '  ' → logprob: -11.15633773803711

Token 48: ' j' (ID: 441)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.08044886589050293
    2. 'w' → logprob: -2.580448865890503
    3. ' range' → logprob: -7.080449104309082
    4. ' W' → logprob: -8.080449104309082
    5. ' j' → logprob: -8.705449104309082
    6. 'W' → logprob: -9.205449104309082
    7. 'j' → logprob: -9.955449104309082
    8. '_w' → logprob: -10.455449104309082
    9. ' i' → logprob: -10.580449104309082
    10. 'range' → logprob: -11.205449104309082

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005954044871032238
    2. 'in' → logprob: -5.130954265594482
    3. ' ' → logprob: -10.755953788757324
    4. '	in' → logprob: -13.005953788757324
    5. '  ' → logprob: -14.630953788757324
    6. 'range' → logprob: -15.380953788757324
    7. '_in' → logprob: -15.755953788757324
    8. 'In' → logprob: -16.06845474243164
    9. '1' → logprob: -16.44345474243164
    10. '[' → logprob: -16.50595474243164

Token 50: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759677886962891
    2. 'range' → logprob: -0.8259677886962891
    3. 'a' → logprob: -10.950967788696289
    4. 're' → logprob: -12.950967788696289
    5. ' reversed' → logprob: -13.075967788696289
    6. ' a' → logprob: -13.200967788696289
    7. ' ' → logprob: -13.700967788696289
    8. 'r' → logprob: -13.825967788696289
    9. '	range' → logprob: -14.700967788696289
    10. 'W' → logprob: -14.950967788696289

Token 51: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.018549518659710884
    2. '(a' → logprob: -4.64354944229126
    3. '(' → logprob: -4.76854944229126
    4. '(w' → logprob: -8.768549919128418
    5. '(len' → logprob: -9.893549919128418
    6. '(A' → logprob: -10.518549919128418
    7. '(N' → logprob: -10.643549919128418
    8. ' ' → logprob: -14.018549919128418
    9. 'a' → logprob: -14.018549919128418
    10. ' (' → logprob: -14.143549919128418

Token 52: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5924103856086731
    2. ',' → logprob: -1.3424103260040283
    3. ' +' → logprob: -1.7174103260040283
    4. ' ,' → logprob: -5.342410564422607
    5. ',a' → logprob: -7.467410564422607
    6. ' -' → logprob: -7.967410564422607
    7. '+a' → logprob: -8.84241008758545
    8. '-' → logprob: -8.96741008758545
    9. ',-' → logprob: -8.96741008758545
    10. 'a' → logprob: -9.96741008758545

Token 53: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02330883778631687
    2. ' a' → logprob: -3.773308753967285
    3. ' -' → logprob: -10.773308753967285
    4. ' ' → logprob: -10.898308753967285
    5. '-a' → logprob: -11.648308753967285
    6. '0' → logprob: -11.773308753967285
    7. '-' → logprob: -12.523308753967285
    8. '	a' → logprob: -13.523308753967285
    9. '>a' → logprob: -14.273308753967285
    10. '1' → logprob: -15.023308753967285

Token 54: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.976922744186595e-05
    2. '0' → logprob: -11.250040054321289
    3. '[-' → logprob: -11.750040054321289
    4. 'a' → logprob: -12.375040054321289
    5. ' [' → logprob: -12.375040054321289
    6. '[j' → logprob: -13.125040054321289
    7. '-' → logprob: -13.250040054321289
    8. '[a' → logprob: -13.625040054321289
    9. '1' → logprob: -13.750040054321289
    10. '```' → logprob: -13.875040054321289

Token 55: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003987336531281471
    2. '1' → logprob: -8.375398635864258
    3. ' ' → logprob: -8.750398635864258
    4. '[' → logprob: -11.875398635864258
    5. '-' → logprob: -13.500398635864258
    6. '```' → logprob: -15.000398635864258
    7. ' -' → logprob: -15.375398635864258
    8. ']' → logprob: -16.250398635864258
    9. '`' → logprob: -16.375398635864258
    10. '   ' → logprob: -16.500398635864258

Token 56: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16611281037330627
    2. '-' → logprob: -1.9161127805709839
    3. '0' → logprob: -6.041112899780273
    4. ' -' → logprob: -6.291112899780273
    5. '1' → logprob: -6.791112899780273
    6. ']-' → logprob: -8.291112899780273
    7. ']' → logprob: -8.541112899780273
    8. ' ' → logprob: -10.541112899780273
    9. '```' → logprob: -11.791112899780273
    10. '3' → logprob: -12.291112899780273

Token 57: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.030334901064634323
    2. ' -' → logprob: -3.530334949493408
    3. '[' → logprob: -8.15533447265625
    4. ' ' → logprob: -8.53033447265625
    5. '1' → logprob: -10.03033447265625
    6. '0' → logprob: -10.40533447265625
    7. ',' → logprob: -11.65533447265625
    8. '−' → logprob: -12.65533447265625
    9. '```' → logprob: -12.78033447265625
    10. '–' → logprob: -13.65533447265625

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.7159857786027715e-05
    2. ' ' → logprob: -10.000046730041504
    3. '```' → logprob: -14.375046730041504
    4. ')' → logprob: -15.437546730041504
    5. 'a' → logprob: -15.812546730041504
    6. ',' → logprob: -16.12504768371582
    7. '2' → logprob: -16.18754768371582
    8. '...' → logprob: -16.37504768371582
    9. ' -' → logprob: -16.87504768371582
    10. '0' → logprob: -17.00004768371582

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6312321753939614e-05
    2. ' ' → logprob: -10.250036239624023
    3. '```' → logprob: -15.187536239624023
    4. 'a' → logprob: -15.875036239624023
    5. '...' → logprob: -16.000036239624023
    6. ')' → logprob: -16.312536239624023
    7. '2' → logprob: -16.812536239624023
    8. '0' → logprob: -16.812536239624023
    9. '   ' → logprob: -17.187536239624023
    10. ',' → logprob: -17.187536239624023

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16348478198051453
    2. '-' → logprob: -2.538484811782837
    3. ' -' → logprob: -3.413484811782837
    4. ',-' → logprob: -3.413484811782837
    5. ' ,' → logprob: -6.038484573364258
    6. ' ' → logprob: -6.163484573364258
    7. ' ,-' → logprob: -7.038484573364258
    8. '```' → logprob: -8.163484573364258
    9. '1' → logprob: -9.038484573364258
    10. '  ' → logprob: -9.913484573364258

Token 61: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.048664238303899765
    2. ' -' → logprob: -3.0486643314361572
    3. ' ' → logprob: -9.548664093017578
    4. '  ' → logprob: -14.173664093017578
    5. '   ' → logprob: -14.173664093017578
    6. '-j' → logprob: -14.423664093017578
    7. ')' → logprob: -14.548664093017578
    8. '-step' → logprob: -14.673664093017578
    9. '```' → logprob: -14.673664093017578
    10. '-a' → logprob: -15.048664093017578

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.000008583068848
    3. '```' → logprob: -13.500008583068848
    4. ')' → logprob: -14.250008583068848
    5. '2' → logprob: -16.87500762939453
    6. '   ' → logprob: -17.50000762939453
    7. '):
' → logprob: -17.93750762939453
    8. ',' → logprob: -18.00000762939453
    9. '１' → logprob: -18.06250762939453
    10. '  ' → logprob: -18.18750762939453

Token 63: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4775845408439636
    2. '):' → logprob: -1.3525846004486084
    3. ' -' → logprob: -2.7275846004486084
    4. ',' → logprob: -3.6025846004486084
    5. '):
' → logprob: -4.477584362030029
    6. ' ' → logprob: -4.602584362030029
    7. ',-' → logprob: -5.977584362030029
    8. ')' → logprob: -6.102584362030029
    9. ' ):' → logprob: -7.352584362030029
    10. ':' → logprob: -7.602584362030029

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17621861398220062
    2. ' ' → logprob: -2.1762185096740723
    3. '  ' → logprob: -3.1762185096740723
    4. '    ' → logprob: -5.676218509674072
    5. ' dp' → logprob: -6.926218509674072
    6. '<|end|>' → logprob: -7.301218509674072
    7. 'dp' → logprob: -7.551218509674072
    8. '     ' → logprob: -8.42621898651123
    9. '       ' → logprob: -9.05121898651123
    10. ' ' → logprob: -9.42621898651123

Token 65: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.09915585070848465
    2. ' dp' → logprob: -2.474155902862549
    3. ' ' → logprob: -5.224155902862549
    4. '     ' → logprob: -5.974155902862549
    5. '   ' → logprob: -6.224155902862549
    6. '	dp' → logprob: -9.09915542602539
    7. '    ' → logprob: -9.84915542602539
    8. 'if' → logprob: -10.72415542602539
    9. '  ' → logprob: -10.84915542602539
    10. '(dp' → logprob: -11.34915542602539

Token 66: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.893480243277736e-05
    2. '[max' → logprob: -10.750039100646973
    3. '[' → logprob: -11.250039100646973
    4. 'max' → logprob: -12.625039100646973
    5. '```' → logprob: -14.375039100646973
    6. '[i' → logprob: -15.125039100646973
    7. '[js' → logprob: -16.250038146972656
    8. '[w' → logprob: -16.500038146972656
    9. '\[' → logprob: -16.875038146972656
    10. '[
' → logprob: -17.250038146972656

Token 67: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018746204441413283
    2. ']=' → logprob: -6.6268744468688965
    3. '=max' → logprob: -8.376874923706055
    4. ' =' → logprob: -9.001874923706055
    5. 'max' → logprob: -9.126874923706055
    6. '=' → logprob: -10.001874923706055
    7. ' ]' → logprob: -10.376874923706055
    8. '[' → logprob: -13.126874923706055
    9. '(max' → logprob: -13.376874923706055
    10. '[max' → logprob: -13.626874923706055

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18604163825511932
    2. '=' → logprob: -1.9360415935516357
    3. '=max' → logprob: -3.6860415935516357
    4. 'max' → logprob: -7.811041831970215
    5. ' max' → logprob: -12.311041831970215
    6. '(max' → logprob: -13.061041831970215
    7. '[max' → logprob: -13.186041831970215
    8. ',max' → logprob: -14.686041831970215
    9. '```' → logprob: -14.811041831970215
    10. '＝' → logprob: -15.686041831970215

Token 69: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.615255839889869e-05
    2. ' max' → logprob: -9.250096321105957
    3. ' ' → logprob: -17.75009536743164
    4. '	max' → logprob: -18.12509536743164
    5. 'dp' → logprob: -18.50009536743164
    6. '   ' → logprob: -19.00009536743164
    7. '(max' → logprob: -19.62509536743164
    8. '[max' → logprob: -19.62509536743164
    9. 'ma' → logprob: -20.12509536743164
    10. '=max' → logprob: -20.87509536743164

Token 70: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00014287306112237275
    2. '(' → logprob: -9.000143051147461
    3. 'dp' → logprob: -10.875143051147461
    4. ' dp' → logprob: -15.250143051147461
    5. '	dp' → logprob: -15.875143051147461
    6. '(
' → logprob: -16.00014305114746
    7. ' (' → logprob: -18.50014305114746
    8. '(d' → logprob: -18.50014305114746
    9. '(df' → logprob: -18.75014305114746
    10. '```' → logprob: -19.00014305114746

Token 71: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.2994620242971e-06
    2. '[' → logprob: -12.125008583068848
    3. 'j' → logprob: -13.500008583068848
    4. ')' → logprob: -15.125008583068848
    5. '[i' → logprob: -15.500008583068848
    6. ' ' → logprob: -15.625008583068848
    7. '```' → logprob: -15.750008583068848
    8. '[
' → logprob: -16.12500762939453
    9. ')[' → logprob: -16.37500762939453
    10. ' [' → logprob: -16.50000762939453

Token 72: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.2318374365568161
    2. ',' → logprob: -2.356837511062622
    3. ' -' → logprob: -2.356837511062622
    4. '-' → logprob: -4.731837272644043
    5. ']' → logprob: -5.856837272644043
    6. ' ,' → logprob: -6.106837272644043
    7. ' ' → logprob: -6.606837272644043
    8. ' ],' → logprob: -7.731837272644043
    9. '   ' → logprob: -7.981837272644043
    10. '[' → logprob: -8.481837272644043

Token 73: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6932435035705566
    2. ' dp' → logprob: -0.6932435035705566
    3. '	dp' → logprob: -9.818243026733398
    4. ' ' → logprob: -10.318243026733398
    5. '(dp' → logprob: -12.318243026733398
    6. '   ' → logprob: -14.068243026733398
    7. '_dp' → logprob: -14.068243026733398
    8. '  ' → logprob: -14.193243026733398
    9. '.dp' → logprob: -14.318243026733398
    10. 'a' → logprob: -15.193243026733398

Token 74: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -12.75000286102295
    3. 'j' → logprob: -15.37500286102295
    4. '```' → logprob: -16.625003814697266
    5. '[js' → logprob: -17.000003814697266
    6. '[
' → logprob: -17.125003814697266
    7. ' ' → logprob: -18.250003814697266
    8. '   ' → logprob: -18.500003814697266
    9. ' j' → logprob: -18.875003814697266
    10. ' [' → logprob: -19.125003814697266

Token 75: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7153652906417847
    2. ' -' → logprob: -0.7153652906417847
    3. '-a' → logprob: -3.840365409851074
    4. ' ' → logprob: -8.340365409851074
    5. '[' → logprob: -8.965365409851074
    6. 'a' → logprob: -9.340365409851074
    7. '-j' → logprob: -11.215365409851074
    8. '-ai' → logprob: -12.715365409851074
    9. '[a' → logprob: -13.090365409851074
    10. '   ' → logprob: -13.215365409851074

Token 76: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03804459050297737
    2. ' a' → logprob: -3.2880446910858154
    3. ' ' → logprob: -13.038044929504395
    4. '	a' → logprob: -15.038044929504395
    5. '#a' → logprob: -15.538044929504395
    6. '   ' → logprob: -16.288043975830078
    7. '(a' → logprob: -16.538043975830078
    8. '  ' → logprob: -16.538043975830078
    9. '_a' → logprob: -16.663043975830078
    10. '[a' → logprob: -16.663043975830078

Token 77: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.129266067640856e-05
    2. '1' → logprob: -12.125020980834961
    3. '0' → logprob: -12.250020980834961
    4. '][' → logprob: -12.375020980834961
    5. ']' → logprob: -13.625020980834961
    6. ' [' → logprob: -13.875020980834961
    7. '[
' → logprob: -14.125020980834961
    8. ' ' → logprob: -14.375020980834961
    9. '```' → logprob: -14.500020980834961
    10. '   ' → logprob: -14.875020980834961

Token 78: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16024352610111237
    2. '1' → logprob: -1.9102435111999512
    3. ' ' → logprob: -10.91024398803711
    4. '[' → logprob: -14.78524398803711
    5. '   ' → logprob: -15.16024398803711
    6. '```' → logprob: -15.53524398803711
    7. '2' → logprob: -17.53524398803711
    8. '``' → logprob: -17.78524398803711
    9. '  ' → logprob: -17.84774398803711
    10. ']' → logprob: -17.97274398803711

Token 79: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008644239977002144
    2. '[' → logprob: -4.883644104003906
    3. '])' → logprob: -7.633644104003906
    4. ']]' → logprob: -7.633644104003906
    5. ']+' → logprob: -10.383644104003906
    6. ')]' → logprob: -11.758644104003906
    7. ' ]' → logprob: -11.758644104003906
    8. '][' → logprob: -12.133644104003906
    9. ' ' → logprob: -12.383644104003906
    10. '0' → logprob: -12.508644104003906

Token 80: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5610008835792542
    2. '+' → logprob: -1.1860008239746094
    3. ']' → logprob: -2.1860008239746094
    4. ')' → logprob: -4.686000823974609
    5. ']+' → logprob: -6.436000823974609
    6. ' ' → logprob: -7.936000823974609
    7. '[' → logprob: -8.81100082397461
    8. ' ]' → logprob: -9.31100082397461
    9. ')+' → logprob: -9.81100082397461
    10. '+a' → logprob: -10.68600082397461

Token 81: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07889056205749512
    2. ' a' → logprob: -2.578890562057495
    3. ' ' → logprob: -14.328890800476074
    4. '	a' → logprob: -15.953890800476074
    5. ' ' → logprob: -17.328889846801758
    6. '   ' → logprob: -17.453889846801758
    7. '  ' → logprob: -17.578889846801758
    8. 'а' → logprob: -18.828889846801758
    9. ')a' → logprob: -18.828889846801758
    10. '(a' → logprob: -19.203889846801758

Token 82: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018863992590922862
    2. '0' → logprob: -8.625188827514648
    3. ' [' → logprob: -12.375188827514648
    4. 'a' → logprob: -14.125188827514648
    5. '   ' → logprob: -14.125188827514648
    6. '][' → logprob: -14.250188827514648
    7. '```' → logprob: -14.250188827514648
    8. 's' → logprob: -14.375188827514648
    9. ' ' → logprob: -15.125188827514648
    10. '[
' → logprob: -15.250188827514648

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.975612187583465e-05
    2. ' ' → logprob: -10.625029563903809
    3. '۰' → logprob: -14.312529563903809
    4. '[' → logprob: -14.375029563903809
    5. '   ' → logprob: -14.375029563903809
    6. '０' → logprob: -14.500029563903809
    7. '2' → logprob: -14.812529563903809
    8. '1' → logprob: -15.125029563903809
    9. '```' → logprob: -15.125029563903809
    10. '০' → logprob: -15.312529563903809

Token 84: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5764409899711609
    2. ')' → logprob: -0.8264409899711609
    3. '))' → logprob: -8.201440811157227
    4. ')])' → logprob: -9.701440811157227
    5. '})' → logprob: -10.201440811157227
    6. '）' → logprob: -10.451440811157227
    7. ')]' → logprob: -10.576440811157227
    8. ']' → logprob: -10.826440811157227
    9. ' )' → logprob: -10.951440811157227
    10. ''])' → logprob: -11.201440811157227

Token 85: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023587152361869812
    2. '\n' → logprob: -4.648587226867676
    3. '```' → logprob: -5.773587226867676
    4. ' ' → logprob: -5.898587226867676
    5. 'p' → logprob: -6.023587226867676
    6. '\' → logprob: -6.273587226867676
    7. '#' → logprob: -6.648587226867676
    8. '<|end|>' → logprob: -7.648587226867676
    9. '0' → logprob: -8.273587226867676
    10. '[' → logprob: -8.523587226867676

Token 86: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2138058841228485
    2. '(dp' → logprob: -1.713805913925171
    3. '(max' → logprob: -4.463805675506592
    4. '(sum' → logprob: -7.213805675506592
    5. '()' → logprob: -10.08880615234375
    6. '(np' → logprob: -11.96380615234375
    7. 'max' → logprob: -12.58880615234375
    8. '(
' → logprob: -13.21380615234375
    9. '(

' → logprob: -13.46380615234375
    10. '(len' → logprob: -13.58880615234375

Token 87: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -9.491498531133402e-06
    2. '(' → logprob: -11.625009536743164
    3. 'dp' → logprob: -14.750009536743164
    4. ')' → logprob: -16.125009536743164
    5. '(d' → logprob: -18.125009536743164
    6. ' dp' → logprob: -18.375009536743164
    7. ' (' → logprob: -18.750009536743164
    8. '(df' → logprob: -19.375009536743164
    9. '()' → logprob: -19.500009536743164
    10. '(
' → logprob: -19.750009536743164

Token 88: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0052392068319022655
    2. ')' → logprob: -5.255239009857178
    3. '))
' → logprob: -13.005239486694336
    4. ')))' → logprob: -13.505239486694336
    5. ' ))' → logprob: -14.505239486694336
    6. '])' → logprob: -14.630239486694336
    7. '()))' → logprob: -15.255239486694336
    8. '),' → logprob: -15.630239486694336
    9. ' ' → logprob: -15.755239486694336
    10. '[]' → logprob: -16.630239486694336


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 86
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 46.51%
Précision adaptée (1ère position): 47.67%
Précision (top 10): 93.02%
================================================================================
