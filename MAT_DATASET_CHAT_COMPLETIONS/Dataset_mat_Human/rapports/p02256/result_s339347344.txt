================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

x, y = [int(i) for i in input().split()]

print(math.gcd(x,y))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'x' (ID: 87)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000933017407078296
    2. 'import' → logprob: -8.375932693481445
    3. '\n' → logprob: -8.625932693481445
    4. '\' → logprob: -8.625932693481445
    5. '```' → logprob: -8.875932693481445
    6. '<|end|>' → logprob: -10.500932693481445
    7. 'def' → logprob: -11.000932693481445
    8. '#' → logprob: -11.250932693481445
    9. '*' → logprob: -11.250932693481445
    10. '.pi' → logprob: -11.375932693481445

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3611716628074646
    2. '+' → logprob: -1.3611717224121094
    3. '*' → logprob: -4.236171722412109
    4. '=' → logprob: -4.486171722412109
    5. ')' → logprob: -4.861171722412109
    6. '(' → logprob: -5.111171722412109
    7. '[' → logprob: -5.611171722412109
    8. '**' → logprob: -6.736171722412109
    9. '_' → logprob: -7.236171722412109
    10. ' ' → logprob: -7.361171722412109

Token 5: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.47783973813056946
    2. 'y' → logprob: -0.9778397083282471
    3. ' ' → logprob: -5.602839946746826
    4. ' =' → logprob: -11.477839469909668
    5. '"' → logprob: -11.602839469909668
    6. '  ' → logprob: -11.852839469909668
    7. '<|end|>' → logprob: -11.977839469909668
    8. ',y' → logprob: -12.352839469909668
    9. '	y' → logprob: -12.352839469909668
    10. ''y' → logprob: -12.602839469909668

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007522273808717728
    2. '=' → logprob: -5.007522106170654
    3. ',' → logprob: -7.257522106170654
    4. '<|end|>' → logprob: -10.132522583007812
    5. ' ,' → logprob: -11.007522583007812
    6. ' ' → logprob: -11.007522583007812
    7. ')' → logprob: -11.007522583007812
    8. '  ' → logprob: -12.882522583007812
    9. '.' → logprob: -13.382522583007812
    10. ' =
' → logprob: -13.632522583007812

Token 7: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07544805854558945
    2. '0' → logprob: -2.8254480361938477
    3. ' math' → logprob: -4.450448036193848
    4. 'math' → logprob: -6.575448036193848
    5. '1' → logprob: -9.450448036193848
    6. ' map' → logprob: -9.575448036193848
    7. ' (' → logprob: -9.575448036193848
    8. '10' → logprob: -10.075448036193848
    9. 'map' → logprob: -10.700448036193848
    10. '5' → logprob: -11.575448036193848

Token 8: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05128227919340134
    2. '1' → logprob: -3.0512821674346924
    3. ' ' → logprob: -6.3012824058532715
    4. ']' → logprob: -7.3012824058532715
    5. '10' → logprob: -9.676281929016113
    6. 'int' → logprob: -10.426281929016113
    7. 'math' → logprob: -10.551281929016113
    8. ']int' → logprob: -11.176281929016113
    9. 'x' → logprob: -11.801281929016113
    10. ')' → logprob: -11.926281929016113

Token 9: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0792212188243866
    2. '(x' → logprob: -3.204221248626709
    3. '(i' → logprob: -3.704221248626709
    4. ']' → logprob: -5.579221248626709
    5. '(s' → logprob: -6.204221248626709
    6. '('' → logprob: -6.954221248626709
    7. '(token' → logprob: -6.954221248626709
    8. '()]' → logprob: -7.204221248626709
    9. '(value' → logprob: -7.454221248626709
    10. '(item' → logprob: -8.07922077178955

Token 10: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013536323967855424
    2. ')]' → logprob: -9.37513542175293
    3. 'for' → logprob: -11.00013542175293
    4. '(x' → logprob: -11.37513542175293
    5. '())' → logprob: -12.37513542175293
    6. ' for' → logprob: -12.50013542175293
    7. '),' → logprob: -12.50013542175293
    8. ' )' → logprob: -12.87513542175293
    9. ')])' → logprob: -13.25013542175293
    10. '(' → logprob: -13.50013542175293

Token 11: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6467834115028381
    2. 'for' → logprob: -0.7717834115028381
    3. ')' → logprob: -4.271783351898193
    4. '(x' → logprob: -9.771783828735352
    5. ' in' → logprob: -10.896783828735352
    6. ']' → logprob: -11.521783828735352
    7. ')]' → logprob: -11.771783828735352
    8. '),' → logprob: -12.271783828735352
    9. '(' → logprob: -12.271783828735352
    10. ' )' → logprob: -12.396783828735352

Token 12: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8794205188751221
    2. ' in' → logprob: -1.879420518875122
    3. ' ' → logprob: -2.004420518875122
    4. ' range' → logprob: -2.004420518875122
    5. ' i' → logprob: -2.379420518875122
    6. 'input' → logprob: -3.504420518875122
    7. 'range' → logprob: -4.379420280456543
    8. ' x' → logprob: -4.629420280456543
    9. '<|end|>' → logprob: -5.129420280456543
    10. '  ' → logprob: -5.504420280456543

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016072142869234085
    2. 'in' → logprob: -4.1410722732543945
    3. ' ' → logprob: -11.016072273254395
    4. '<|end|>' → logprob: -11.141072273254395
    5. 'import' → logprob: -12.766072273254395
    6. '<|end|>' → logprob: -13.891072273254395
    7. '	in' → logprob: -14.016072273254395
    8. ']' → logprob: -15.016072273254395
    9. '  ' → logprob: -15.203572273254395
    10. '```' → logprob: -15.766072273254395

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3151116669178009
    2. ' input' → logprob: -1.3151116371154785
    3. 'range' → logprob: -6.6901116371154785
    4. ' range' → logprob: -7.4401116371154785
    5. '(input' → logprob: -11.565112113952637
    6. 'raw' → logprob: -13.190112113952637
    7. ' ' → logprob: -13.690112113952637
    8. 'x' → logprob: -14.315112113952637
    9. '"' → logprob: -14.440112113952637
    10. '```' → logprob: -14.440112113952637

Token 15: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0271203201264143
    2. '()' → logprob: -3.652120351791382
    3. '(' → logprob: -7.902120113372803
    4. '().' → logprob: -8.777120590209961
    5. '())' → logprob: -9.277120590209961
    6. '()][' → logprob: -9.402120590209961
    7. '()],' → logprob: -10.027120590209961
    8. ']' → logprob: -10.527120590209961
    9. '()].' → logprob: -11.152120590209961
    10. ']()' → logprob: -11.277120590209961

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00035929924342781305
    2. 'strip' → logprob: -8.000359535217285
    3. 'rstrip' → logprob: -10.750359535217285
    4. ' split' → logprob: -13.000359535217285
    5. '(split' → logprob: -16.62535858154297
    6. 'spl' → logprob: -17.00035858154297
    7. 'replace' → logprob: -19.12535858154297
    8. 'read' → logprob: -19.50035858154297
    9. ' strip' → logprob: -19.62535858154297
    10. '.split' → logprob: -20.37535858154297

Token 17: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00429718429222703
    2. '(' → logprob: -5.879297256469727
    3. '()' → logprob: -7.004297256469727
    4. '())' → logprob: -7.879297256469727
    5. ')]' → logprob: -9.379297256469727
    6. ']' → logprob: -9.629297256469727
    7. '('' → logprob: -10.254297256469727
    8. '()],' → logprob: -12.129297256469727
    9. '()][' → logprob: -12.629297256469727
    10. '`]' → logprob: -13.254297256469727

Token 18: ']

' (ID: 3144)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.021043483167886734
    2. ']' → logprob: -4.271043300628662
    3. ')' → logprob: -5.021043300628662
    4. ')])' → logprob: -9.02104377746582
    5. '])' → logprob: -9.27104377746582
    6. '])]' → logprob: -10.64604377746582
    7. ')],' → logprob: -11.52104377746582
    8. '`]' → logprob: -12.39604377746582
    9. '),' → logprob: -14.14604377746582
    10. ',' → logprob: -14.27104377746582

Token 19: 'print' (ID: 1598)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.6635175347328186
    2. 'if' → logprob: -1.6635174751281738
    3. 'result' → logprob: -1.9135174751281738
    4. 'r' → logprob: -3.413517475128174
    5. 'd' → logprob: -3.538517475128174
    6. 'print' → logprob: -3.663517475128174
    7. 'a' → logprob: -4.413517475128174
    8. 'distance' → logprob: -4.788517475128174
    9. 's' → logprob: -5.038517475128174
    10. 'v' → logprob: -5.538517475128174

Token 20: '(math' (ID: 86464)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006150973495095968
    2. '(math' → logprob: -5.13115119934082
    3. '("("' → logprob: -8.75615119934082
    4. '('' → logprob: -10.88115119934082
    5. '(Math' → logprob: -11.25615119934082
    6. '(x' → logprob: -11.75615119934082
    7. '(f' → logprob: -12.13115119934082
    8. '((' → logprob: -12.38115119934082
    9. '(round' → logprob: -12.50615119934082
    10. '(

' → logprob: -13.13115119934082

Token 21: '.g' (ID: 1940)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010413551703095436
    2. '.sqrt' → logprob: -4.635413646697998
    3. '.sin' → logprob: -8.63541316986084
    4. '.)' → logprob: -8.63541316986084
    5. '.exp' → logprob: -9.51041316986084
    6. '.atan' → logprob: -9.76041316986084
    7. '.pow' → logprob: -10.38541316986084
    8. '.pi' → logprob: -10.38541316986084
    9. '.ceil' → logprob: -10.76041316986084
    10. '.s' → logprob: -10.88541316986084

Token 22: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00031186718842945993
    2. 'sqrt' → logprob: -8.875311851501465
    3. 'eil' → logprob: -9.500311851501465
    4. 'e' → logprob: -11.000311851501465
    5. 'cmath' → logprob: -11.250311851501465
    6. 'pow' → logprob: -11.375311851501465
    7. 'cdf' → logprob: -11.625311851501465
    8. 'mp' → logprob: -12.375311851501465
    9. 'qrt' → logprob: -12.500311851501465
    10. 'cos' → logprob: -12.625311851501465

Token 23: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07024584710597992
    2. '(x' → logprob: -2.8202457427978516
    3. '()' → logprob: -4.820245742797852
    4. '())' → logprob: -9.195245742797852
    5. ')' → logprob: -10.195245742797852
    6. '(
' → logprob: -11.820245742797852
    7. '(()' → logprob: -11.945245742797852
    8. '((' → logprob: -12.195245742797852
    9. '(

' → logprob: -12.570245742797852
    10. '(math' → logprob: -13.070245742797852

Token 24: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020454595796763897
    2. ',y' → logprob: -6.377045631408691
    3. ' ,' → logprob: -8.002045631408691
    4. ',x' → logprob: -12.627045631408691
    5. 'y' → logprob: -13.627045631408691
    6. ')' → logprob: -13.627045631408691
    7. ' ' → logprob: -14.127045631408691
    8. ',

' → logprob: -14.127045631408691
    9. ',
' → logprob: -14.502045631408691
    10. ',g' → logprob: -15.752045631408691

Token 25: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759426951408386
    2. '))' → logprob: -0.8259426951408386
    3. ')))' → logprob: -12.825942993164062
    4. ' ))' → logprob: -15.575942993164062
    5. ' )' → logprob: -15.700942993164062
    6. '),' → logprob: -16.825942993164062
    7. ')
' → logprob: -17.200942993164062
    8. ')}' → logprob: -17.325942993164062
    9. ''))' → logprob: -17.825942993164062
    10. '))
' → logprob: -17.825942993164062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 23
Tokens correctement prédits (1ère position, stricte): 7
Tokens correctement prédits (1ère position, avec adaptation): 7
Tokens correctement prédits (top 10): 18
Précision stricte (1ère position): 30.43%
Précision adaptée (1ère position): 30.43%
Précision (top 10): 78.26%
================================================================================
