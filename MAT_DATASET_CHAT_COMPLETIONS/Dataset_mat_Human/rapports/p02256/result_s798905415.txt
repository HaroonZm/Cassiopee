================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def gcd(x,y):
    if x<y:
        x,y=y,x
    while y>0:
        r=x%y
        x=y
        y=r
    
    return x

x,y=map(int,input().split())
print(gcd(x,y))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' gcd' (ID: 106918)
  → Token d'amorce (pas de prédiction)

Token 2: '(x' (ID: 4061)
  → Token d'amorce (pas de prédiction)

Token 3: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5478332042694092
    2. ')' → logprob: -0.9228332042694092
    3. '):' → logprob: -4.047833442687988
    4. ',)' → logprob: -6.047833442687988
    5. '<|end|>' → logprob: -7.547833442687988
    6. ',x' → logprob: -7.672833442687988
    7. '```' → logprob: -7.797833442687988
    8. ' ' → logprob: -8.047833442687988
    9. '(' → logprob: -8.172833442687988
    10. ')>' → logprob: -8.172833442687988

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013501126319169998
    2. ')' → logprob: -4.388501167297363
    3. ':' → logprob: -7.638501167297363
    4. ',' → logprob: -8.513501167297363
    5. '):
' → logprob: -8.888501167297363
    6. '```' → logprob: -10.263501167297363
    7. ''):' → logprob: -10.763501167297363
    8. '=' → logprob: -11.013501167297363
    9. '<|end|>' → logprob: -11.013501167297363
    10. '**' → logprob: -11.388501167297363

Token 5: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7653431296348572
    2. ':' → logprob: -0.8903431296348572
    3. '(' → logprob: -2.765343189239502
    4. '```' → logprob: -3.515343189239502
    5. '():' → logprob: -4.515343189239502
    6. '    
' → logprob: -5.515343189239502
    7. '):' → logprob: -5.640343189239502
    8. '(:' → logprob: -6.265343189239502
    9. ''' → logprob: -6.640343189239502
    10. ' (' → logprob: -7.140343189239502

Token 6: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22726596891880035
    2. '```' → logprob: -2.6022660732269287
    3. 'i' → logprob: -2.8522660732269287
    4. ' ' → logprob: -3.8522660732269287
    5. ' if' → logprob: -4.35226583480835
    6. ':' → logprob: -4.60226583480835
    7. '    ' → logprob: -5.22726583480835
    8. ' i' → logprob: -5.35226583480835
    9. '    
' → logprob: -5.35226583480835
    10. '`' → logprob: -6.22726583480835

Token 7: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20472413301467896
    2. ' ' → logprob: -1.9547240734100342
    3. 'x' → logprob: -3.204724073410034
    4. ' (' → logprob: -7.204724311828613
    5. '  ' → logprob: -7.329724311828613
    6. ' not' → logprob: -7.329724311828613
    7. ' y' → logprob: -8.204724311828613
    8. 'y' → logprob: -8.204724311828613
    9. 's' → logprob: -9.204724311828613
    10. '(x' → logprob: -9.954724311828613

Token 8: '<' (ID: 27)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.722374677658081
    2. ' ==' → logprob: -1.472374677658081
    3. ' >' → logprob: -2.347374677658081
    4. ' <' → logprob: -2.472374677658081
    5. ' ' → logprob: -2.972374677658081
    6. ' >=' → logprob: -4.47237491607666
    7. ' <=' → logprob: -4.59737491607666
    8. '>' → logprob: -4.59737491607666
    9. '%' → logprob: -4.97237491607666
    10. '<' → logprob: -5.22237491607666

Token 9: 'y' (ID: 88)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.31896376609802246
    2. 'y' → logprob: -1.3189637660980225
    3. '=' → logprob: -5.318964004516602
    4. '=y' → logprob: -8.068964004516602
    5. ' =' → logprob: -8.568964004516602
    6. ' ' → logprob: -8.818964004516602
    7. '0' → logprob: -9.193964004516602
    8. '1' → logprob: -11.818964004516602
    9. '    ' → logprob: -11.818964004516602
    10. '   ' → logprob: -12.818964004516602

Token 10: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012754731578752398
    2. ':return' → logprob: -7.376275539398193
    3. ':
' → logprob: -8.126275062561035
    4. ' :' → logprob: -8.501275062561035
    5. '       ' → logprob: -9.501275062561035
    6. '   ' → logprob: -11.001275062561035
    7. '>:' → logprob: -11.501275062561035
    8. '':' → logprob: -11.876275062561035
    9. '):' → logprob: -11.876275062561035
    10. '    ' → logprob: -11.876275062561035

Token 11: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1656423807144165
    2. '       ' → logprob: -1.4156423807144165
    3. '    ' → logprob: -1.5406423807144165
    4. '   ' → logprob: -1.9156423807144165
    5. ' return' → logprob: -3.790642261505127
    6. ' ' → logprob: -4.415642261505127
    7. '    
' → logprob: -4.665642261505127
    8. '\' → logprob: -5.040642261505127
    9. ' 
' → logprob: -5.540642261505127
    10. '     ' → logprob: -5.665642261505127

Token 12: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.804905116558075
    2. ' return' → logprob: -0.929905116558075
    3. 'return' → logprob: -2.3049051761627197
    4. 'x' (adapté à ' x') → logprob: -3.0549051761627197
    5. '       ' → logprob: -4.804904937744141
    6. '   ' → logprob: -6.429904937744141
    7. ' y' → logprob: -7.179904937744141
    8. '    ' → logprob: -7.804904937744141
    9. '```' → logprob: -8.80490493774414
    10. 'y' → logprob: -9.30490493774414

Token 13: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013366704806685448
    2. ',y' → logprob: -7.251336574554443
    3. ' ,' → logprob: -8.001337051391602
    4. ',x' → logprob: -8.376337051391602
    5. '=' → logprob: -10.876337051391602
    6. ',v' → logprob: -11.626337051391602
    7. ',s' → logprob: -12.251337051391602
    8. ',n' → logprob: -12.751337051391602
    9. ',b' → logprob: -12.751337051391602
    10. ',user' → logprob: -12.876337051391602

Token 14: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1128612756729126
    2. ' =' → logprob: -2.237861156463623
    3. ',' → logprob: -10.362861633300781
    4. '=x' → logprob: -13.112861633300781
    5. '=y' → logprob: -13.987861633300781
    6. '=

' → logprob: -14.237861633300781
    7. '```' → logprob: -14.362861633300781
    8. '   ' → logprob: -14.362861633300781
    9. '=
' → logprob: -14.862861633300781
    10. '=n' → logprob: -15.362861633300781

Token 15: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002387779764831066
    2. ',x' → logprob: -6.877388000488281
    3. '<|end|>' → logprob: -7.127388000488281
    4. ' ,' → logprob: -7.627388000488281
    5. ',y' → logprob: -10.252388000488281
    6. '<|end|>' → logprob: -11.377388000488281
    7. ' x' → logprob: -12.252388000488281
    8. ',user' → logprob: -13.377388000488281
    9. 'x' → logprob: -13.877388000488281
    10. ',None' → logprob: -13.877388000488281

Token 16: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.07318612188100815
    2. '\' → logprob: -3.823186159133911
    3. 'return' → logprob: -4.073185920715332
    4. '
' → logprob: -4.573185920715332
    5. '```' → logprob: -5.323185920715332
    6. '\r' → logprob: -5.573185920715332
    7. '   ' → logprob: -5.823185920715332
    8. '' → logprob: -6.198185920715332
    9. ' return' → logprob: -6.573185920715332
    10. '<|end|>' → logprob: -6.948185920715332

Token 17: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7737810015678406
    2. '   ' → logprob: -1.6487810611724854
    3. '\n' → logprob: -1.6487810611724854
    4. '    
' → logprob: -2.8987810611724854
    5. '```' → logprob: -3.5237810611724854
    6. '  
' → logprob: -4.773780822753906
    7. '\r' → logprob: -4.773780822753906
    8. '' → logprob: -4.898780822753906
    9. 'return' → logprob: -4.898780822753906
    10. '\' → logprob: -4.898780822753906

Token 18: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.201256513595581
    2. '\n' → logprob: -1.451256513595581
    3. '```' → logprob: -1.576256513595581
    4. '
' → logprob: -2.951256513595581
    5. 'return' → logprob: -3.451256513595581
    6. '`' → logprob: -3.451256513595581
    7. ':' → logprob: -3.576256513595581
    8. '    
' → logprob: -4.07625675201416
    9. ' ' → logprob: -4.20125675201416
    10. ':
' → logprob: -4.32625675201416

Token 19: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0013296448159962893
    2. 'y' → logprob: -6.62632942199707
    3. ' x' → logprob: -13.12632942199707
    4. ' ' → logprob: -13.50132942199707
    5. '	y' → logprob: -15.25132942199707
    6. '_y' → logprob: -16.50132942199707
    7. 'x' → logprob: -16.62632942199707
    8. '(y' → logprob: -16.75132942199707
    9. '   ' → logprob: -17.12632942199707
    10. ' not' → logprob: -18.12632942199707

Token 20: '>' (ID: 29)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.43583476543426514
    2. ':' → logprob: -1.9358347654342651
    3. '!=' → logprob: -2.3108348846435547
    4. '>' → logprob: -2.5608348846435547
    5. ' >' → logprob: -3.4358348846435547
    6. ' and' → logprob: -9.310834884643555
    7. ' :' → logprob: -9.685834884643555
    8. '>:' → logprob: -10.310834884643555
    9. 'and' → logprob: -10.810834884643555
    10. '!==' → logprob: -10.935834884643555

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014164329506456852
    2. ' ' → logprob: -4.264164447784424
    3. '   ' → logprob: -15.014163970947266
    4. '  ' → logprob: -15.514163970947266
    5. '=' → logprob: -16.139163970947266
    6. '```' → logprob: -16.389163970947266
    7. 'x' → logprob: -16.514163970947266
    8. '>' → logprob: -17.639163970947266
    9. '    ' → logprob: -18.014163970947266
    10. ' ' → logprob: -18.264163970947266

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001441780710592866
    2. ':
' → logprob: -6.626441955566406
    3. '   ' → logprob: -9.751441955566406
    4. ' :' → logprob: -10.501441955566406
    5. '       ' → logprob: -11.376441955566406
    6. ':**' → logprob: -12.001441955566406
    7. ':return' → logprob: -12.376441955566406
    8. ':

' → logprob: -13.251441955566406
    9. ' :
' → logprob: -13.501441955566406
    10. '):' → logprob: -13.751441955566406

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5658751726150513
    2. ' 
' → logprob: -1.3158751726150513
    3. '        
' → logprob: -3.3158750534057617
    4. '    ' → logprob: -3.5658750534057617
    5. '    
' → logprob: -3.5658750534057617
    6. '     
' → logprob: -3.9408750534057617
    7. '   ' → logprob: -4.065875053405762
    8. '
' → logprob: -4.440875053405762
    9. '```' → logprob: -5.065875053405762
    10. ' ' → logprob: -5.190875053405762

Token 24: ' r' (ID: 428)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.34530818462371826
    2. ' x' → logprob: -2.095308303833008
    3. 'r' (adapté à ' r') → logprob: -2.470308303833008
    4. ' r' → logprob: -3.470308303833008
    5. '   ' → logprob: -3.845308303833008
    6. '    ' → logprob: -4.720308303833008
    7. '```' → logprob: -5.220308303833008
    8. 't' → logprob: -5.595308303833008
    9. 'temp' → logprob: -5.720308303833008
    10. 'z' → logprob: -6.095308303833008

Token 25: '=x' (ID: 56980)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2533252537250519
    2. '=' → logprob: -1.5033252239227295
    3. '=r' → logprob: -7.003325462341309
    4. '=y' → logprob: -7.878325462341309
    5. ' ' → logprob: -9.253325462341309
    6. '=x' → logprob: -12.003325462341309
    7. '=int' → logprob: -14.128325462341309
    8. ',' → logprob: -14.753325462341309
    9. ' ' → logprob: -15.003325462341309
    10. '=o' → logprob: -15.003325462341309

Token 26: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.10021594911813736
    2. ' %' → logprob: -2.3502159118652344
    3. ' ' → logprob: -11.850215911865234
    4. '%x' → logprob: -13.850215911865234
    5. '%i' → logprob: -14.475215911865234
    6. '%b' → logprob: -14.975215911865234
    7. 'y' → logprob: -16.725215911865234
    8. ' y' → logprob: -16.850215911865234
    9. ' ' → logprob: -17.350215911865234
    10. '%s' → logprob: -17.725215911865234

Token 27: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.014684110297821e-06
    2. ' y' → logprob: -11.625008583068848
    3. '	y' → logprob: -19.500009536743164
    4. ' ' → logprob: -20.250009536743164
    5. '<|end|>' → logprob: -20.250009536743164
    6. ''y' → logprob: -20.375009536743164
    7. '‘y' → logprob: -20.625009536743164
    8. 'y's' → logprob: -20.750009536743164
    9. '   ' → logprob: -21.000009536743164
    10. '  ' → logprob: -22.000009536743164

Token 28: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.693739652633667
    2. ' x' → logprob: -0.693739652633667
    3. '<|end|>' → logprob: -8.068739891052246
    4. ' ' → logprob: -8.568739891052246
    5. ' 
' → logprob: -10.693739891052246
    6. '\n' → logprob: -11.693739891052246
    7. '	x' → logprob: -11.693739891052246
    8. ' \' → logprob: -11.818739891052246
    9. ' y' → logprob: -12.068739891052246
    10. '```' → logprob: -12.193739891052246

Token 31: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08094988018274307
    2. ',' → logprob: -2.7059497833251953
    3. ' =' → logprob: -5.080949783325195
    4. ',y' → logprob: -5.830949783325195
    5. '=y' → logprob: -6.455949783325195
    6. '=r' → logprob: -9.080949783325195
    7. ',r' → logprob: -10.205949783325195
    8. '<|end|>' → logprob: -10.830949783325195
    9. '=x' → logprob: -11.205949783325195
    10. ' ,' → logprob: -11.455949783325195

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0827694982290268
    2. '<|end|>' → logprob: -2.8327693939208984
    3. '       ' → logprob: -4.957769393920898
    4. 'r' → logprob: -5.332769393920898
    5. '
' → logprob: -5.332769393920898
    6. '        
' → logprob: -7.082769393920898
    7. '```' → logprob: -7.207769393920898
    8. '<|end|>' → logprob: -7.707769393920898
    9. '\n' → logprob: -7.957769393920898
    10. ' 
' → logprob: -8.332769393920898

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6960643529891968
    2. ' y' → logprob: -1.3210643529891968
    3. 'y' → logprob: -1.9460643529891968
    4. ',y' → logprob: -2.9460644721984863
    5. '```' → logprob: -4.571064472198486
    6. '<|end|>' → logprob: -4.696064472198486
    7. 'r' → logprob: -4.946064472198486
    8. '        
' → logprob: -5.821064472198486
    9. '
' → logprob: -6.071064472198486
    10. ',' → logprob: -6.321064472198486

Token 34: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.09228719770908356
    2. ' y' → logprob: -2.717287302017212
    3. 'r' → logprob: -3.842287302017212
    4. '       ' → logprob: -7.842287063598633
    5. ' r' → logprob: -8.842287063598633
    6. '```' → logprob: -9.967287063598633
    7. '        ' → logprob: -11.217287063598633
    8. ' ' → logprob: -11.592287063598633
    9. '   ' → logprob: -11.717287063598633
    10. '    ' → logprob: -11.717287063598633

Token 35: '=r' (ID: 67845)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006196234375238419
    2. '=r' → logprob: -5.131196022033691
    3. ' =' → logprob: -8.256196022033691
    4. '=y' → logprob: -13.256196022033691
    5. '=}' → logprob: -13.756196022033691
    6. '<|end|>' → logprob: -14.006196022033691
    7. '=x' → logprob: -14.756196022033691
    8. '=int' → logprob: -14.756196022033691
    9. '=os' → logprob: -15.006196022033691
    10. '=

' → logprob: -15.006196022033691

Token 36: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0634046420454979
    2. '
' → logprob: -3.0634045600891113
    3. ' 
' → logprob: -4.938404560089111
    4. '    
' → logprob: -5.688404560089111
    5. ' return' → logprob: -7.188404560089111
    6. 'return' → logprob: -7.313404560089111
    7. '  
' → logprob: -7.438404560089111
    8. ':return' → logprob: -7.438404560089111
    9. 'r' → logprob: -8.31340503692627
    10. '\n' → logprob: -8.68840503692627

Token 37: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39586156606674194
    2. '   ' → logprob: -1.7708616256713867
    3. 'r' → logprob: -2.1458616256713867
    4. ' return' → logprob: -3.3958616256713867
    5. ' ' → logprob: -5.770861625671387
    6. ':return' → logprob: -6.520861625671387
    7. ' 
' → logprob: -7.520861625671387
    8. '	return' → logprob: -8.145861625671387
    9. ' r' → logprob: -8.270861625671387
    10. '```' → logprob: -8.895861625671387

Token 38: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20534895360469818
    2. '   ' → logprob: -1.7053489685058594
    3. ' return' → logprob: -5.580348968505859
    4. ':return' → logprob: -10.08034896850586
    5. '	return' → logprob: -10.33034896850586
    6. 'r' → logprob: -10.33034896850586
    7. ' ' → logprob: -10.83034896850586
    8. '```' → logprob: -10.95534896850586
    9. '    
' → logprob: -12.70534896850586
    10. 'ret' → logprob: -13.20534896850586

Token 39: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07888978719711304
    2. ' x' → logprob: -2.578889846801758
    3. '	x' → logprob: -18.453889846801758
    4. ' ' → logprob: -18.828889846801758
    5. 's' → logprob: -19.953889846801758
    6. '(x' → logprob: -20.078889846801758
    7. '_x' → logprob: -20.078889846801758
    8. '   ' → logprob: -20.703889846801758
    9. ',x' → logprob: -20.703889846801758
    10. '```' → logprob: -20.828889846801758

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.819478452205658
    2. '<|end|>' → logprob: -1.3194785118103027
    3. '\n' → logprob: -1.5694785118103027
    4. '```' → logprob: -2.9444785118103027
    5. '#' → logprob: -4.819478511810303
    6. ')' → logprob: -5.069478511810303
    7. 'newline' → logprob: -5.569478511810303
    8. '\' → logprob: -6.069478511810303
    9. '

' → logprob: -6.194478511810303
    10. '(' → logprob: -6.444478511810303

Token 41: 'x' (ID: 87)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1608242988586426
    2. '#' → logprob: -1.5358242988586426
    3. '
' → logprob: -1.9108242988586426
    4. '\n' → logprob: -2.0358242988586426
    5. '\' → logprob: -3.0358242988586426
    6. '```' → logprob: -3.4108242988586426
    7. 'n' → logprob: -3.5358242988586426
    8. ')' → logprob: -3.5358242988586426
    9. 'g' → logprob: -4.535824298858643
    10. 'a' → logprob: -5.410824298858643

Token 42: ',y' (ID: 16103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22971969842910767
    2. '=' → logprob: -2.479719638824463
    3. '+' → logprob: -3.479719638824463
    4. ' ' → logprob: -3.729719638824463
    5. ',' → logprob: -4.104719638824463
    6. '**' → logprob: -4.479719638824463
    7. '.' → logprob: -5.104719638824463
    8. ')' → logprob: -5.229719638824463
    9. ' (' → logprob: -5.604719638824463
    10. '*' → logprob: -5.604719638824463

Token 43: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7909886837005615
    2. ' =' → logprob: -0.9159886837005615
    3. ',' → logprob: -2.6659886837005615
    4. '<|end|>' → logprob: -2.6659886837005615
    5. ')' → logprob: -5.415988922119141
    6. '<|end|>' → logprob: -6.290988922119141
    7. '[' → logprob: -8.29098892211914
    8. ' ' → logprob: -8.79098892211914
    9. ' ,' → logprob: -9.54098892211914
    10. ')=' → logprob: -9.79098892211914

Token 44: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1607859879732132
    2. '5' → logprob: -2.1607859134674072
    3. '10' → logprob: -4.035786151885986
    4. 'input' → logprob: -5.660786151885986
    5. '1' → logprob: -5.785786151885986
    6. ' map' → logprob: -5.785786151885986
    7. '0' → logprob: -5.785786151885986
    8. ' ' → logprob: -6.910786151885986
    9. '3' → logprob: -7.410786151885986
    10. '4' → logprob: -7.535786151885986

Token 45: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16336694359779358
    2. '(int' → logprob: -2.1633670330047607
    3. '<|end|>' → logprob: -4.288366794586182
    4. '(lambda' → logprob: -4.788366794586182
    5. '(str' → logprob: -5.288366794586182
    6. '(input' → logprob: -5.288366794586182
    7. '(eval' → logprob: -8.03836727142334
    8. '(
' → logprob: -8.16336727142334
    9. '(map' → logprob: -8.41336727142334
    10. '(len' → logprob: -8.53836727142334

Token 46: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.003051385283470154
    2. '(' → logprob: -6.003051280975342
    3. ')' → logprob: -7.878051280975342
    4. 'input' → logprob: -8.7530517578125
    5. ',input' → logprob: -11.3780517578125
    6. '[input' → logprob: -12.1280517578125
    7. '=input' → logprob: -12.2530517578125
    8. ' input' → logprob: -12.8780517578125
    9. '<|end|>' → logprob: -12.8780517578125
    10. '(
' → logprob: -13.5030517578125

Token 47: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6764882802963257
    2. '()' → logprob: -1.1764882802963257
    3. '().' → logprob: -1.8014882802963257
    4. '(' → logprob: -4.551488399505615
    5. '()))' → logprob: -6.051488399505615
    6. '());' → logprob: -6.676488399505615
    7. '(()' → logprob: -7.301488399505615
    8. '()).' → logprob: -7.676488399505615
    9. '()),' → logprob: -7.676488399505615
    10. '('' → logprob: -7.926488399505615

Token 48: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.149051427608356e-05
    2. 'strip' → logprob: -9.500081062316895
    3. '(split' → logprob: -12.375081062316895
    4. ' split' → logprob: -13.250081062316895
    5. 'rstrip' → logprob: -14.750081062316895
    6. ')' → logprob: -16.00008201599121
    7. '()' → logprob: -17.00008201599121
    8. '```' → logprob: -17.25008201599121
    9. '_split' → logprob: -17.50008201599121
    10. 'read' → logprob: -17.87508201599121

Token 49: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04144589975476265
    2. ')' → logprob: -4.041445732116699
    3. '()))' → logprob: -4.041445732116699
    4. '))' → logprob: -5.416445732116699
    5. '()' → logprob: -6.916445732116699
    6. ' ())' → logprob: -11.7914457321167
    7. '(' → logprob: -12.7914457321167
    8. '())
' → logprob: -13.2914457321167
    9. ')))' → logprob: -13.5414457321167
    10. '()),' → logprob: -13.7914457321167

Token 50: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.250000953674316
    3. ' print' → logprob: -15.250000953674316
    4. '<|end|>' → logprob: -15.750000953674316
    5. '
' → logprob: -16.125001907348633
    6. '  
' → logprob: -17.500001907348633
    7. 'g' → logprob: -17.875001907348633
    8. '#print' → logprob: -17.875001907348633
    9. 'result' → logprob: -18.000001907348633
    10. '    
' → logprob: -18.375001907348633

Token 51: '(g' (ID: 7791)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.576907217502594
    2. '(g' → logprob: -0.826907217502594
    3. '(x' → logprob: -7.076907157897949
    4. '((' → logprob: -9.20190715789795
    5. '(f' → logprob: -12.57690715789795
    6. '("("' → logprob: -12.57690715789795
    7. '(a' → logprob: -12.95190715789795
    8. '('' → logprob: -13.20190715789795
    9. '(math' → logprob: -13.45190715789795
    10. ' (' → logprob: -13.45190715789795

Token 52: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00015836587408557534
    2. 'c' → logprob: -8.875158309936523
    3. '_cd' → logprob: -11.625158309936523
    4. 'CD' → logprob: -12.500158309936523
    5. ')' → logprob: -13.625158309936523
    6. '	cd' → logprob: -13.750158309936523
    7. '(cd' → logprob: -14.125158309936523
    8. 'd' → logprob: -14.375158309936523
    9. 'cdn' → logprob: -14.625158309936523
    10. ' cd' → logprob: -14.750158309936523

Token 53: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.38691458106040955
    2. '(' → logprob: -1.136914610862732
    3. ' (' → logprob: -11.011914253234863
    4. '()' → logprob: -11.886914253234863
    5. '(
' → logprob: -11.886914253234863
    6. ')' → logprob: -11.886914253234863
    7. '((' → logprob: -12.511914253234863
    8. '(

' → logprob: -14.386914253234863
    9. '(y' → logprob: -14.761914253234863
    10. '(user' → logprob: -15.386914253234863

Token 54: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.5764374732971191
    2. ',' → logprob: -0.8264374732971191
    3. ',x' → logprob: -7.701437473297119
    4. ' ,' → logprob: -10.201436996459961
    5. ')' → logprob: -12.951436996459961
    6. ',user' → logprob: -13.826436996459961
    7. ',)' → logprob: -13.951436996459961
    8. ',g' → logprob: -14.076436996459961
    9. 'y' → logprob: -14.826436996459961
    10. ',
' → logprob: -15.076436996459961

Token 55: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3132656216621399
    2. ')' → logprob: -1.3132655620574951
    3. ')))' → logprob: -12.688265800476074
    4. ' )' → logprob: -15.813265800476074
    5. '))
' → logprob: -16.188264846801758
    6. ' ))' → logprob: -16.313264846801758
    7. ')}' → logprob: -16.438264846801758
    8. ')
' → logprob: -16.563264846801758
    9. '),' → logprob: -16.688264846801758
    10. '})' → logprob: -17.563264846801758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 53
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 33.96%
Précision adaptée (1ère position): 39.62%
Précision (top 10): 86.79%
================================================================================
