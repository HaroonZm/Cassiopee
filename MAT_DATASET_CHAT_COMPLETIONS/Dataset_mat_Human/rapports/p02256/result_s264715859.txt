================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x,y = map(int, raw_input().split())

while y > 0:
    x,y = y,x%y

print x
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: ',y' (ID: 16103)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17984002828598022
    2. '0' → logprob: -1.804840087890625
    3. '10' → logprob: -10.554840087890625
    4. ' (' → logprob: -10.804840087890625
    5. '1' → logprob: -11.179840087890625
    6. 'x' → logprob: -11.554840087890625
    7. '(' → logprob: -12.304840087890625
    8. ' x' → logprob: -12.304840087890625
    9. 'input' → logprob: -12.554840087890625
    10. ' input' → logprob: -13.179840087890625

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009348846040666103
    2. '(lambda' → logprob: -4.7593488693237305
    3. '(int' → logprob: -8.13434886932373
    4. '(str' → logprob: -8.50934886932373
    5. '```' → logprob: -10.75934886932373
    6. '(x' → logprob: -11.00934886932373
    7. ')' → logprob: -11.25934886932373
    8. '(`' → logprob: -11.25934886932373
    9. '(user' → logprob: -11.38434886932373
    10. ' (' → logprob: -11.38434886932373

Token 5: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6570607423782349
    2. ')' → logprob: -1.4070607423782349
    3. '(' → logprob: -1.5320607423782349
    4. '(x' → logprob: -4.907060623168945
    5. '(raw' → logprob: -6.407060623168945
    6. '(user' → logprob: -6.532060623168945
    7. 'input' → logprob: -6.657060623168945
    8. '```' → logprob: -6.907060623168945
    9. '(str' → logprob: -7.032060623168945
    10. ',' → logprob: -7.157060623168945

Token 6: ' raw' (ID: 11428)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02690937928855419
    2. ' input' → logprob: -3.651909351348877
    3. '(input' → logprob: -7.526909351348877
    4. ')' → logprob: -9.776909828186035
    5. ',input' → logprob: -11.401909828186035
    6. '=input' → logprob: -14.026909828186035
    7. '<input' → logprob: -15.026909828186035
    8. '	input' → logprob: -15.401909828186035
    9. '[input' → logprob: -15.401909828186035
    10. '_input' → logprob: -15.901909828186035

Token 7: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.033868711441755295
    2. '_' → logprob: -3.4088687896728516
    3. 'input' → logprob: -9.533868789672852
    4. '_in' → logprob: -10.033868789672852
    5. ')' → logprob: -10.533868789672852
    6. ' _' → logprob: -10.658868789672852
    7. ')_' → logprob: -11.283868789672852
    8. '_inputs' → logprob: -11.658868789672852
    9. '__' → logprob: -11.783868789672852
    10. ' input' → logprob: -12.033868789672852

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23509657382965088
    2. ')' → logprob: -1.8600965738296509
    3. '('' → logprob: -3.2350964546203613
    4. '())' → logprob: -5.485096454620361
    5. '<|end|>' → logprob: -5.985096454620361
    6. '("("' → logprob: -6.610096454620361
    7. '(""))' → logprob: -6.860096454620361
    8. '()' → logprob: -7.485096454620361
    9. '<|end|>' → logprob: -7.860096454620361
    10. ')(' → logprob: -8.11009693145752

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.023939533159136772
    2. 'strip' → logprob: -3.773939609527588
    3. 'rstrip' → logprob: -8.14893913269043
    4. ')' → logprob: -8.27393913269043
    5. ' split' → logprob: -9.39893913269043
    6. 'read' → logprob: -10.14893913269043
    7. '(split' → logprob: -11.39893913269043
    8. ' strip' → logprob: -12.64893913269043
    9. 'replace' → logprob: -12.89893913269043
    10. 'plit' → logprob: -13.02393913269043

Token 10: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019100885838270187
    2. ')' → logprob: -4.144100666046143
    3. '()' → logprob: -6.019100666046143
    4. '()))' → logprob: -7.644100666046143
    5. '(' → logprob: -9.7691011428833
    6. '))' → logprob: -10.0191011428833
    7. '('' → logprob: -11.1441011428833
    8. '`)' → logprob: -11.7691011428833
    9. ' ())' → logprob: -11.8941011428833
    10. '`()' → logprob: -12.7691011428833

Token 11: 'while' (ID: 7032)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08695977926254272
    2. '#' → logprob: -2.9619598388671875
    3. ')' → logprob: -4.0869598388671875
    4. '*' → logprob: -5.3369598388671875
    5. '<|end|>' → logprob: -5.5869598388671875
    6. 'print' → logprob: -6.7119598388671875
    7. ',' → logprob: -7.2119598388671875
    8. '.' → logprob: -7.2119598388671875
    9. ' ' → logprob: -7.3369598388671875
    10. '+
' → logprob: -7.5869598388671875

Token 12: ' y' (ID: 342)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5197644829750061
    2. ' x' → logprob: -1.0197644233703613
    3. ' ' → logprob: -3.6447644233703613
    4. ' y' → logprob: -4.394764423370361
    5. 'True' → logprob: -5.894764423370361
    6. 'x' → logprob: -6.019764423370361
    7. ' not' → logprob: -7.769764423370361
    8. '  ' → logprob: -8.64476490020752
    9. ' (' → logprob: -9.01976490020752
    10. '(True' → logprob: -9.14476490020752

Token 13: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.01855280064046383
    2. '>' → logprob: -4.018552780151367
    3. ' !=' → logprob: -8.518552780151367
    4. ' <' → logprob: -9.268552780151367
    5. ' ' → logprob: -10.018552780151367
    6. ' <=' → logprob: -11.018552780151367
    7. ' >=' → logprob: -11.268552780151367
    8. ':' → logprob: -11.393552780151367
    9. '!=' → logprob: -12.143552780151367
    10. '<' → logprob: -12.768552780151367

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4290437698364258
    2. '0' → logprob: -1.0540437698364258
    3. ' x' → logprob: -8.429043769836426
    4. 'x' → logprob: -9.179043769836426
    5. '1' → logprob: -12.179043769836426
    6. '=' → logprob: -12.991543769836426
    7. '>' → logprob: -13.054043769836426
    8. ' y' → logprob: -13.054043769836426
    9. '  ' → logprob: -13.116543769836426
    10. ' ' → logprob: -13.804043769836426

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011281355284154415
    2. ' ' → logprob: -4.886281490325928
    3. 'x' → logprob: -5.636281490325928
    4. ' x' → logprob: -9.26128101348877
    5. '1' → logprob: -12.76128101348877
    6. '10' → logprob: -14.38628101348877
    7. '  ' → logprob: -14.76128101348877
    8. '5' → logprob: -15.01128101348877
    9. 'y' → logprob: -15.01128101348877
    10. '9' → logprob: -15.26128101348877

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000493937055580318
    2. ' :' → logprob: -7.750494003295898
    3. ':
' → logprob: -10.125494003295898
    4. ',' → logprob: -11.750494003295898
    5. '):' → logprob: -12.375494003295898
    6. ':**' → logprob: -12.375494003295898
    7. '':'' → logprob: -13.625494003295898
    8. ',:' → logprob: -14.250494003295898
    9. ':

' → logprob: -14.500494003295898
    10. '":"' → logprob: -14.500494003295898

Token 17: '   ' (ID: 271)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5262848138809204
    2. ' ' → logprob: -1.7762848138809204
    3. '   ' → logprob: -1.9012848138809204
    4. 'x' → logprob: -2.901284694671631
    5. '    ' → logprob: -4.276284694671631
    6. '<|end|>' → logprob: -4.276284694671631
    7. ':' → logprob: -5.776284694671631
    8. '  ' → logprob: -6.901284694671631
    9. ' y' → logprob: -7.901284694671631
    10. ' ,' → logprob: -7.901284694671631

Token 18: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.17615154385566711
    2. 'x' (adapté à ' x') → logprob: -2.0511515140533447
    3. '   ' → logprob: -3.6761515140533447
    4. '    ' → logprob: -5.676151752471924
    5. ' ' → logprob: -6.051151752471924
    6. 'print' → logprob: -8.301151275634766
    7. 's' → logprob: -8.426151275634766
    8. '    
' → logprob: -8.551151275634766
    9. ' print' → logprob: -8.551151275634766
    10. '```' → logprob: -9.051151275634766

Token 19: ',y' (ID: 16103)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -1.2569694519042969
    2. '-' → logprob: -1.5069694519042969
    3. '=' → logprob: -1.8819694519042969
    4. ',' → logprob: -2.131969451904297
    5. '%' → logprob: -2.506969451904297
    6. ' %=' → logprob: -3.631969451904297
    7. ' +=' → logprob: -3.756969451904297
    8. '-=' → logprob: -3.881969451904297
    9. '%=' → logprob: -4.381969451904297
    10. '+=' → logprob: -4.381969451904297

Token 20: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4278447926044464
    2. ' =' → logprob: -1.302844762802124
    3. ',' → logprob: -3.302844762802124
    4. ' -=' → logprob: -3.427844762802124
    5. '-' → logprob: -5.552845001220703
    6. '-=' → logprob: -6.052845001220703
    7. ' ,' → logprob: -8.927845001220703
    8. ' %=' → logprob: -9.052845001220703
    9. '%=' → logprob: -9.177845001220703
    10. ' +=' → logprob: -9.552845001220703

Token 21: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2610847055912018
    2. ' y' → logprob: -1.6360846757888794
    3. 'x' → logprob: -3.636084794998169
    4. 'map' → logprob: -5.26108455657959
    5. ' x' → logprob: -5.88608455657959
    6. ' map' → logprob: -7.51108455657959
    7. '   ' → logprob: -9.26108455657959
    8. ' ' → logprob: -10.63608455657959
    9. 'raw' → logprob: -11.38608455657959
    10. '(y' → logprob: -11.51108455657959

Token 22: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007259458303451538
    2. ' ,' → logprob: -5.007259368896484
    3. ',x' → logprob: -7.632259368896484
    4. ',y' → logprob: -10.382259368896484
    5. ' ' → logprob: -11.257259368896484
    6. ' x' → logprob: -11.507259368896484
    7. 'x' → logprob: -13.507259368896484
    8. '   ' → logprob: -14.632259368896484
    9. ',n' → logprob: -15.007259368896484
    10. 'y' → logprob: -15.007259368896484

Token 23: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2537246644496918
    2. ' %' → logprob: -1.5037246942520142
    3. '<|end|>' → logprob: -6.628724575042725
    4. '%x' → logprob: -7.878724575042725
    5. ' ' → logprob: -10.753725051879883
    6. '%
' → logprob: -11.378725051879883
    7. '%i' → logprob: -11.503725051879883
    8. '%n' → logprob: -11.753725051879883
    9. ' %
' → logprob: -11.753725051879883
    10. ',' → logprob: -12.128725051879883

Token 24: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.6240566083070007e-06
    2. ' y' → logprob: -13.375001907348633
    3. '	y' → logprob: -19.750001907348633
    4. ' ' → logprob: -20.375001907348633
    5. '<|end|>' → logprob: -21.500001907348633
    6. 'x' → logprob: -21.875001907348633
    7. 'y's' → logprob: -21.875001907348633
    8. '  ' → logprob: -21.875001907348633
    9. '   ' → logprob: -22.125001907348633
    10. ''y' → logprob: -22.375001907348633

Token 25: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005197466816753149
    2. '
' → logprob: -6.005197525024414
    3. ' print' → logprob: -7.380197525024414
    4. '<|end|>' → logprob: -7.505197525024414
    5. ')' → logprob: -7.630197525024414
    6. ' 
' → logprob: -8.005197525024414
    7. '\n' → logprob: -8.255197525024414
    8. 'x' → logprob: -8.755197525024414
    9. '#print' → logprob: -9.880197525024414
    10. '  
' → logprob: -9.880197525024414

Token 27: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3869931399822235
    2. '(' → logprob: -1.136993169784546
    3. '('' → logprob: -10.011993408203125
    4. '()' → logprob: -10.386993408203125
    5. '("' → logprob: -11.011993408203125
    6. ' (' → logprob: -11.761993408203125
    7. 'x' → logprob: -11.761993408203125
    8. '((' → logprob: -12.386993408203125
    9. '(s' → logprob: -12.636993408203125
    10. '(int' → logprob: -13.886993408203125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 25
Tokens correctement prédits (1ère position, stricte): 9
Tokens correctement prédits (1ère position, avec adaptation): 9
Tokens correctement prédits (top 10): 17
Précision stricte (1ère position): 36.00%
Précision adaptée (1ère position): 36.00%
Précision (top 10): 68.00%
================================================================================
