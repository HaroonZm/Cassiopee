================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

c1x,c1y,c1r = [int(i) for i in input().split()]
c2x,c2y,c2r = [int(i) for i in input().split()]

d = math.sqrt(pow(c1x-c2x, 2) +  pow(c1y-c2y, 2))

s = c1r + c2r

if d > s:
    print(4)
elif d == s:
    print(3)
else:
    if c1r > c2r:
        if d + c2r > c1r:
            print(2)
        elif d + c2r == c1r:
            print(1)
        else:
            print(0)
    else:
        if d + c1r > c2r:
            print(2)
        elif d + c1r == c2r:
            print(1)
        else:
            print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'c' (ID: 66)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024338087532669306
    2. '```' → logprob: -7.252433776855469
    3. '\n' → logprob: -7.377433776855469
    4. '\' → logprob: -7.877433776855469
    5. 'import' → logprob: -8.002433776855469
    6. '<|end|>' → logprob: -9.252433776855469
    7. '.pi' → logprob: -10.127433776855469
    8. 'a' → logprob: -11.002433776855469
    9. '.e' → logprob: -11.127433776855469
    10. '<|end|>' → logprob: -11.127433776855469

Token 4: '1' (ID: 16)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.1758001446723938
    2. 'os' → logprob: -2.050800085067749
    3. 'h' → logprob: -4.425800323486328
    4. 'i' → logprob: -5.425800323486328
    5. '```' → logprob: -5.675800323486328
    6. 'a' → logprob: -6.425800323486328
    7. 'l' → logprob: -6.425800323486328
    8. 'm' → logprob: -6.550800323486328
    9. 'u' → logprob: -7.050800323486328
    10. '.' → logprob: -7.050800323486328

Token 5: 'x' (ID: 87)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18444424867630005
    2. 'o' → logprob: -2.1844441890716553
    3. 'a' → logprob: -4.309444427490234
    4. '_' → logprob: -4.309444427490234
    5. '=' → logprob: -4.809444427490234
    6. ')' → logprob: -5.934444427490234
    7. '(' → logprob: -6.184444427490234
    8. '[' → logprob: -6.309444427490234
    9. ' =' → logprob: -6.309444427490234
    10. 'os' → logprob: -6.434444427490234

Token 6: ',c' (ID: 22261)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0380586385726929
    2. '+' → logprob: -1.1630586385726929
    3. '=' → logprob: -1.7880586385726929
    4. ')' → logprob: -3.1630587577819824
    5. 'c' → logprob: -3.2880587577819824
    6. '[' → logprob: -3.2880587577819824
    7. ',' → logprob: -3.7880587577819824
    8. '1' → logprob: -5.413058757781982
    9. '_' → logprob: -5.788058757781982
    10. ' =' → logprob: -5.913058757781982

Token 7: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00241798791103065
    2. 'y' → logprob: -6.127418041229248
    3. 'c' → logprob: -8.37741756439209
    4. 'x' → logprob: -14.12741756439209
    5. '<|end|>' → logprob: -14.37741756439209
    6. ',y' → logprob: -15.12741756439209
    7. '_y' → logprob: -15.37741756439209
    8. '=' → logprob: -15.75241756439209
    9. '```' → logprob: -15.87741756439209
    10. '_' → logprob: -16.252418518066406

Token 8: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07081585377454758
    2. ',' → logprob: -3.4458158016204834
    3. 'x' → logprob: -3.9458158016204834
    4. ',y' → logprob: -4.1958160400390625
    5. '_y' → logprob: -6.5708160400390625
    6. '=' → logprob: -8.445816040039062
    7. '.' → logprob: -9.070816040039062
    8. '_' → logprob: -9.570816040039062
    9. '1' → logprob: -9.695816040039062
    10. '_,' → logprob: -9.820816040039062

Token 9: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19100970029830933
    2. ',' → logprob: -2.066009759902954
    3. ' =' → logprob: -3.066009759902954
    4. ')' → logprob: -8.191009521484375
    5. ' ,' → logprob: -8.691009521484375
    6. '<|end|>' → logprob: -9.941009521484375
    7. ' ' → logprob: -11.191009521484375
    8. ',c' → logprob: -11.441009521484375
    9. '```' → logprob: -11.941009521484375
    10. ' =)' → logprob: -12.191009521484375

Token 10: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22440169751644135
    2. 'r' → logprob: -1.9744017124176025
    3. 'z' → logprob: -2.8494017124176025
    4. '1' → logprob: -5.974401473999023
    5. ' =' → logprob: -7.849401473999023
    6. 'radius' → logprob: -7.849401473999023
    7. '=' → logprob: -7.974401473999023
    8. '_radius' → logprob: -8.974401473999023
    9. '_r' → logprob: -9.474401473999023
    10. '_' → logprob: -9.474401473999023

Token 11: 'r' (ID: 81)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005632843356579542
    2. 'z' → logprob: -6.1306328773498535
    3. '_x' → logprob: -6.3806328773498535
    4. '_radius' → logprob: -7.2556328773498535
    5. '=' → logprob: -7.6306328773498535
    6. '_' → logprob: -8.380632400512695
    7. ' =' → logprob: -9.005632400512695
    8. '_z' → logprob: -9.505632400512695
    9. 'w' → logprob: -10.505632400512695
    10. ',' → logprob: -10.505632400512695

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08048494905233383
    2. ' =' → logprob: -2.5804848670959473
    3. ',' → logprob: -6.455484867095947
    4. '=

' → logprob: -11.955485343933105
    5. ' ,' → logprob: -12.330485343933105
    6. ')' → logprob: -12.455485343933105
    7. '=
' → logprob: -13.455485343933105
    8. ' ' → logprob: -14.205485343933105
    9. ')=' → logprob: -14.330485343933105
    10. ' =
' → logprob: -14.330485343933105

Token 13: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07913234829902649
    2. ' ' → logprob: -2.579132318496704
    3. 'math' → logprob: -9.329132080078125
    4. ' math' → logprob: -9.954132080078125
    5. '(' → logprob: -10.579132080078125
    6. '100' → logprob: -10.579132080078125
    7. ' (' → logprob: -10.704132080078125
    8. 'map' → logprob: -11.704132080078125
    9. ' map' → logprob: -12.329132080078125
    10. '10' → logprob: -12.579132080078125

Token 14: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44596147537231445
    2. '100' → logprob: -1.5709614753723145
    3. ' ' → logprob: -2.3209614753723145
    4. '1' → logprob: -3.8209614753723145
    5. 'int' → logprob: -5.1959614753723145
    6. 'float' → logprob: -5.1959614753723145
    7. 'math' → logprob: -5.4459614753723145
    8. ' float' → logprob: -5.5709614753723145
    9. '10' → logprob: -5.8209614753723145
    10. '50' → logprob: -6.0709614753723145

Token 15: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025291552767157555
    2. '(x' → logprob: -3.9002914428710938
    3. '(i' → logprob: -5.775291442871094
    4. ']' → logprob: -7.025291442871094
    5. '(s' → logprob: -8.775291442871094
    6. '(line' → logprob: -8.900291442871094
    7. '('' → logprob: -9.650291442871094
    8. '(a' → logprob: -9.775291442871094
    9. '()]' → logprob: -9.775291442871094
    10. '(input' → logprob: -9.900291442871094

Token 16: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008544052834622562
    2. '(x' → logprob: -7.8758544921875
    3. ')]' → logprob: -8.7508544921875
    4. '(input' → logprob: -9.0008544921875
    5. '())' → logprob: -9.5008544921875
    6. '(' → logprob: -10.0008544921875
    7. 'input' → logprob: -10.5008544921875
    8. '()' → logprob: -11.0008544921875
    9. ' )' → logprob: -12.1258544921875
    10. '(s' → logprob: -12.7508544921875

Token 17: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.59922856092453
    2. '(' → logprob: -2.099228620529175
    3. ')' → logprob: -2.349228620529175
    4. ' for' → logprob: -2.599228620529175
    5. ']' → logprob: -2.974228620529175
    6. '(input' → logprob: -3.099228620529175
    7. 'for' → logprob: -3.974228620529175
    8. '(line' → logprob: -4.099228382110596
    9. '(i' → logprob: -4.599228382110596
    10. ')]' → logprob: -5.474228382110596

Token 18: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3709433674812317
    2. ' i' → logprob: -1.870943307876587
    3. ' in' → logprob: -2.120943307876587
    4. ' range' → logprob: -3.995943307876587
    5. ' ' → logprob: -4.870943546295166
    6. 'input' → logprob: -4.995943546295166
    7. '<|end|>' → logprob: -7.495943546295166
    8. 'range' → logprob: -7.870943546295166
    9. ' a' → logprob: -8.120943069458008
    10. 'i' → logprob: -8.495943069458008

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022458923049271107
    2. 'in' → logprob: -6.127245903015137
    3. '<|end|>' → logprob: -10.252245903015137
    4. 'range' → logprob: -11.752245903015137
    5. ' ' → logprob: -11.877245903015137
    6. 'import' → logprob: -12.377245903015137
    7. 'input' → logprob: -13.502245903015137
    8. ' range' → logprob: -13.627245903015137
    9. '<|end|>' → logprob: -13.627245903015137
    10. ')' → logprob: -13.877245903015137

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6326281428337097
    2. ' input' → logprob: -0.7576281428337097
    3. '(input' → logprob: -11.382628440856934
    4. 'range' → logprob: -11.882628440856934
    5. ' range' → logprob: -12.882628440856934
    6. 'raw' → logprob: -13.757628440856934
    7. ' ' → logprob: -13.882628440856934
    8. '```' → logprob: -14.007628440856934
    9. '=input' → logprob: -14.007628440856934
    10. '<input' → logprob: -14.257628440856934

Token 21: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.011251530610024929
    2. '()' → logprob: -4.886251449584961
    3. '().' → logprob: -5.636251449584961
    4. '()].' → logprob: -10.261251449584961
    5. '()],' → logprob: -11.386251449584961
    6. '())' → logprob: -11.886251449584961
    7. '(' → logprob: -11.886251449584961
    8. '()][' → logprob: -12.136251449584961
    9. '()>' → logprob: -13.511251449584961
    10. '('' → logprob: -13.761251449584961

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003436872211750597
    2. 'strip' → logprob: -8.000343322753906
    3. 'rstrip' → logprob: -12.125343322753906
    4. ' split' → logprob: -12.875343322753906
    5. 'spl' → logprob: -15.875343322753906
    6. '(split' → logprob: -17.000343322753906
    7. 'replace' → logprob: -18.000343322753906
    8. 's' → logprob: -18.875343322753906
    9. ' strip' → logprob: -18.875343322753906
    10. '.split' → logprob: -19.250343322753906

Token 23: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.022038914263248444
    2. '(' → logprob: -4.77203893661499
    3. '())' → logprob: -5.02203893661499
    4. '('' → logprob: -5.64703893661499
    5. '()' → logprob: -5.77203893661499
    6. ')]' → logprob: -10.647038459777832
    7. ']' → logprob: -11.022038459777832
    8. '()][' → logprob: -11.272038459777832
    9. '()],' → logprob: -11.897038459777832
    10. '("' → logprob: -12.147038459777832

Token 24: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002651871182024479
    2. 'x' → logprob: -6.877651691436768
    3. 'a' → logprob: -7.377651691436768
    4. ',' → logprob: -7.877651691436768
    5. ' c' → logprob: -8.877652168273926
    6. ',c' → logprob: -8.877652168273926
    7. '
' → logprob: -9.252652168273926
    8. 'while' → logprob: -9.752652168273926
    9. 'n' → logprob: -10.252652168273926
    10. 'd' → logprob: -10.627652168273926

Token 25: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11284370720386505
    2. '2' → logprob: -2.2378437519073486
    3. 'x' → logprob: -10.86284351348877
    4. '3' → logprob: -13.61284351348877
    5. 'c' → logprob: -15.36284351348877
    6. ' ' → logprob: -15.73784351348877
    7. '_' → logprob: -16.175344467163086
    8. '```' → logprob: -16.237844467163086
    9. 'l' → logprob: -16.925344467163086
    10. '.' → logprob: -16.925344467163086

Token 26: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1472419600977446e-06
    2. ' x' → logprob: -14.125000953674316
    3. ''x' → logprob: -15.500000953674316
    4. '_x' → logprob: -15.875000953674316
    5. '"x' → logprob: -16.875001907348633
    6. ')x' → logprob: -18.250001907348633
    7. '```' → logprob: -18.250001907348633
    8. ',x' → logprob: -18.375001907348633
    9. ',' → logprob: -18.375001907348633
    10. '<|end|>' → logprob: -19.625001907348633

Token 27: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0060164909809827805
    2. ',c' → logprob: -5.131016254425049
    3. ' ,' → logprob: -9.506016731262207
    4. ',

' → logprob: -13.006016731262207
    5. ',int' → logprob: -13.506016731262207
    6. ',
' → logprob: -14.006016731262207
    7. ',user' → logprob: -14.256016731262207
    8. ',d' → logprob: -14.506016731262207
    9. '‌,' → logprob: -14.631016731262207
    10. ',i' → logprob: -14.631016731262207

Token 28: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010083988308906555
    2. 'y' → logprob: -4.88508415222168
    3. '1' → logprob: -6.01008415222168
    4. 'x' → logprob: -11.13508415222168
    5. 'c' → logprob: -12.26008415222168
    6. 'r' → logprob: -14.76008415222168
    7. '```' → logprob: -15.26008415222168
    8. ',' → logprob: -15.76008415222168
    9. ',y' → logprob: -16.13508415222168
    10. ''y' → logprob: -16.26008415222168

Token 29: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.09235447645187378
    2. ',y' → logprob: -2.4673545360565186
    3. ',' → logprob: -5.7173542976379395
    4. ',c' → logprob: -9.217354774475098
    5. 'x' → logprob: -11.717354774475098
    6. 'c' → logprob: -11.967354774475098
    7. ' ,' → logprob: -12.842354774475098
    8. ' y' → logprob: -13.967354774475098
    9. '<|end|>' → logprob: -14.217354774475098
    10. ',int' → logprob: -14.717354774475098

Token 30: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5232284069061279
    2. ',c' → logprob: -0.8982284069061279
    3. ' ,' → logprob: -10.773228645324707
    4. '`,' → logprob: -11.273228645324707
    5. 'c' → logprob: -11.523228645324707
    6. '=' → logprob: -11.898228645324707
    7. ',int' → logprob: -11.898228645324707
    8. '`,`' → logprob: -12.273228645324707
    9. ',

' → logprob: -12.398228645324707
    10. ',user' → logprob: -12.523228645324707

Token 31: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.842555426876061e-06
    2. '<|end|>' → logprob: -13.125004768371582
    3. 'x' → logprob: -14.000004768371582
    4. ',' → logprob: -14.750004768371582
    5. ',r' → logprob: -15.125004768371582
    6. ' r' → logprob: -15.250004768371582
    7. 'z' → logprob: -15.500004768371582
    8. '_r' → logprob: -15.625004768371582
    9. '2' → logprob: -16.1250057220459
    10. '1' → logprob: -16.2500057220459

Token 32: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.9027791495318525e-05
    2. 'x' → logprob: -11.000019073486328
    3. '```' → logprob: -14.375019073486328
    4. 'z' → logprob: -14.500019073486328
    5. ' r' → logprob: -16.125019073486328
    6. '	r' → logprob: -16.250019073486328
    7. '=' → logprob: -16.250019073486328
    8. '_r' → logprob: -16.250019073486328
    9. 'radius' → logprob: -16.437519073486328
    10. '<|end|>' → logprob: -16.687519073486328

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20188836753368378
    2. '=' → logprob: -1.7018883228302002
    3. ',' → logprob: -7.701888561248779
    4. ' ' → logprob: -11.576888084411621
    5. '[' → logprob: -12.826888084411621
    6. ' ,' → logprob: -12.951888084411621
    7. '`' → logprob: -13.326888084411621
    8. ')' → logprob: -13.951888084411621
    9. ' =[' → logprob: -13.951888084411621
    10. '```' → logprob: -14.201888084411621

Token 34: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.04902025684714317
    2. '[int' → logprob: -3.049020290374756
    3. '[input' → logprob: -8.299019813537598
    4. '[' → logprob: -8.924019813537598
    5. '[i' → logprob: -10.549019813537598
    6. '[in' → logprob: -12.174019813537598
    7. ' ' → logprob: -12.424019813537598
    8. '[Int' → logprob: -12.549019813537598
    9. '[ind' → logprob: -13.174019813537598
    10. ' map' → logprob: -13.299019813537598

Token 35: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007635020650923252
    2. ' int' → logprob: -4.882635116577148
    3. '[int' → logprob: -10.757635116577148
    4. '(int' → logprob: -12.007635116577148
    5. '<int' → logprob: -13.757635116577148
    6. '=int' → logprob: -15.882635116577148
    7. ' ' → logprob: -15.882635116577148
    8. ']int' → logprob: -16.63263511657715
    9. ',int' → logprob: -17.00763511657715
    10. ':int' → logprob: -17.13263511657715

Token 36: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.023285316303372383
    2. '(' → logprob: -3.773285388946533
    3. '(input' → logprob: -11.148284912109375
    4. ' (' → logprob: -11.398284912109375
    5. '()' → logprob: -12.148284912109375
    6. '(ii' → logprob: -12.648284912109375
    7. '(in' → logprob: -13.523284912109375
    8. '(x' → logprob: -13.773284912109375
    9. '(I' → logprob: -14.023284912109375
    10. '(int' → logprob: -14.273284912109375

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010750433430075645
    2. '(i' → logprob: -4.7607502937316895
    3. ' for' → logprob: -6.6357502937316895
    4. 'for' → logprob: -7.6357502937316895
    5. ' )' → logprob: -8.760750770568848
    6. '()' → logprob: -9.885750770568848
    7. '(input' → logprob: -9.885750770568848
    8. ')i' → logprob: -10.885750770568848
    9. '(in' → logprob: -11.260750770568848
    10. ' ' → logprob: -11.760750770568848

Token 38: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023255378007888794
    2. 'for' → logprob: -3.7732553482055664
    3. ' ' → logprob: -12.398255348205566
    4. ')' → logprob: -12.898255348205566
    5. ' input' → logprob: -13.773255348205566
    6. ' in' → logprob: -14.648255348205566
    7. '```' → logprob: -14.898255348205566
    8. '	for' → logprob: -15.023255348205566
    9. '(input' → logprob: -15.023255348205566
    10. ']' → logprob: -16.148256301879883

Token 39: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.01416798122227192
    2. 'input' → logprob: -4.264167785644531
    3. '(input' → logprob: -12.889167785644531
    4. ' in' → logprob: -14.139167785644531
    5. '=input' → logprob: -14.764167785644531
    6. '<input' → logprob: -15.639167785644531
    7. '_input' → logprob: -15.889167785644531
    8. ' ' → logprob: -15.889167785644531
    9. 'in' → logprob: -16.26416778564453
    10. ' i' → logprob: -16.51416778564453

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22931933403015137
    2. 'in' → logprob: -1.6043193340301514
    3. ' ' → logprob: -6.4793195724487305
    4. 'input' → logprob: -7.6043195724487305
    5. 'import' → logprob: -7.7293195724487305
    6. '.' → logprob: -7.9793195724487305
    7. '<|end|>' → logprob: -7.9793195724487305
    8. 'n' → logprob: -8.47931957244873
    9. ' input' → logprob: -8.60431957244873
    10. '(input' → logprob: -8.72931957244873

Token 41: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3868725895881653
    2. 'input' → logprob: -1.1368725299835205
    3. '(input' → logprob: -13.886872291564941
    4. '<input' → logprob: -15.761872291564941
    5. ' ' → logprob: -15.886872291564941
    6. '[input' → logprob: -16.761873245239258
    7. '=input' → logprob: -16.886873245239258
    8. '	input' → logprob: -17.636873245239258
    9. 'output' → logprob: -17.761873245239258
    10. '0' → logprob: -17.886873245239258

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03387516364455223
    2. '()' → logprob: -3.4088752269744873
    3. '()].' → logprob: -9.158875465393066
    4. '(' → logprob: -9.533875465393066
    5. '()]' → logprob: -10.658875465393066
    6. '().'' → logprob: -12.158875465393066
    7. '()
' → logprob: -12.158875465393066
    8. '().__' → logprob: -12.283875465393066
    9. '()`' → logprob: -12.783875465393066
    10. ' ().' → logprob: -13.533875465393066

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. ' split' → logprob: -14.625000953674316
    3. 'spl' → logprob: -15.625000953674316
    4. 'strip' → logprob: -16.0
    5. '(split' → logprob: -16.875
    6. 'plit' → logprob: -19.25
    7. 'rstrip' → logprob: -19.25
    8. '```' → logprob: -19.875
    9. '.split' → logprob: -20.125
    10. '_split' → logprob: -20.625

Token 44: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.008875491097569466
    2. '()' → logprob: -4.758875370025635
    3. '())' → logprob: -9.258875846862793
    4. ']' → logprob: -9.508875846862793
    5. ']()' → logprob: -10.508875846862793
    6. ')]' → logprob: -11.008875846862793
    7. '()].' → logprob: -11.508875846862793
    8. '()]
' → logprob: -11.883875846862793
    9. '()][' → logprob: -12.008875846862793
    10. '()`' → logprob: -12.133875846862793

Token 45: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06564175337553024
    2. ')]' → logprob: -3.0656416416168213
    3. ']' → logprob: -4.1906418800354
    4. '])' → logprob: -6.4406418800354
    5. ')])' → logprob: -9.190641403198242
    6. '）' → logprob: -10.315641403198242
    7. '))' → logprob: -11.690641403198242
    8. ' )' → logprob: -11.815641403198242
    9. '`)' → logprob: -12.065641403198242
    10. ')
' → logprob: -12.815641403198242

Token 46: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2049008309841156
    2. 'dist' → logprob: -1.954900860786438
    3. 'distance' → logprob: -3.4549007415771484
    4. 'dx' → logprob: -4.454900741577148
    5. 'dis' → logprob: -7.954900741577148
    6. 'x' → logprob: -10.454900741577148
    7. '```' → logprob: -11.204900741577148
    8. 'diff' → logprob: -11.329900741577148
    9. 'delta' → logprob: -11.704900741577148
    10. 'import' → logprob: -11.704900741577148

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8065864443778992
    2. ' =' → logprob: -0.9315864443778992
    3. 'istance' → logprob: -2.556586503982544
    4. 'ist' → logprob: -2.556586503982544
    5. 'i' → logprob: -6.431586265563965
    6. '_' → logprob: -6.806586265563965
    7. 'is' → logprob: -7.806586265563965
    8. '_space' → logprob: -8.681586265563965
    9. 'space' → logprob: -8.806586265563965
    10. 's' → logprob: -8.806586265563965

Token 48: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.12773647904396057
    2. ' math' → logprob: -2.1277365684509277
    3. '(math' → logprob: -7.127736568450928
    4. '((' → logprob: -12.25273609161377
    5. ' ((' → logprob: -14.50273609161377
    6. ' (' → logprob: -15.87773609161377
    7. '.math' → logprob: -17.252737045288086
    8. ' ' → logprob: -17.377737045288086
    9. '(' → logprob: -17.502737045288086
    10. '/math' → logprob: -18.002737045288086

Token 49: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.004413028713315725
    2. '.dist' → logprob: -5.62941312789917
    3. '.' → logprob: -7.62941312789917
    4. '.h' → logprob: -8.504412651062012
    5. '.s' → logprob: -9.254412651062012
    6. '.distance' → logprob: -11.629412651062012
    7. '.pi' → logprob: -12.504412651062012
    8. ' .' → logprob: -12.879412651062012
    9. '.atan' → logprob: -13.004412651062012
    10. '.Sqrt' → logprob: -13.254412651062012

Token 50: '(pow' (ID: 189160)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.006719163153320551
    2. '(' → logprob: -5.00671911239624
    3. ' ((' → logprob: -13.631719589233398
    4. '(
' → logprob: -13.881719589233398
    5. '(abs' → logprob: -15.131719589233398
    6. '```' → logprob: -15.131719589233398
    7. '(

' → logprob: -15.131719589233398
    8. '(pow' → logprob: -15.256719589233398
    9. '(((' → logprob: -15.506719589233398
    10. '(x' → logprob: -16.0067195892334

Token 51: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.15644925832748413
    2. '((' → logprob: -2.406449317932129
    3. '(' → logprob: -2.906449317932129
    4. '(abs' → logprob: -11.031449317932129
    5. '(
' → logprob: -13.531449317932129
    6. '(x' → logprob: -13.906449317932129
    7. ')c' → logprob: -14.656449317932129
    8. '(a' → logprob: -15.031449317932129
    9. '(

' → logprob: -15.031449317932129
    10. '(`' → logprob: -15.156449317932129

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2069392204284668
    2. '2' → logprob: -1.7069392204284668
    3. 'c' → logprob: -5.331939220428467
    4. '(' → logprob: -8.581939697265625
    5. '(c' → logprob: -8.706939697265625
    6. ' c' → logprob: -8.956939697265625
    7. '-c' → logprob: -9.956939697265625
    8. 'x' → logprob: -10.206939697265625
    9. ' ' → logprob: -10.581939697265625
    10. ' (' → logprob: -11.331939697265625

Token 53: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.398067828034982e-05
    2. '-x' → logprob: -9.62507438659668
    3. '-' → logprob: -12.75007438659668
    4. ' -' → logprob: -13.12507438659668
    5. '_x' → logprob: -13.12507438659668
    6. ' x' → logprob: -14.62507438659668
    7. ')x' → logprob: -15.87507438659668
    8. ''x' → logprob: -16.12507438659668
    9. '```' → logprob: -17.00007438659668
    10. '(x' → logprob: -17.50007438659668

Token 54: '-c' (ID: 3452)
  Prédit: '-c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.5549609661102295
    2. '-' → logprob: -1.0549609661102295
    3. ' -' → logprob: -2.5549609661102295
    4. 'c' → logprob: -14.679961204528809
    5. '-p' → logprob: -14.679961204528809
    6. '-C' → logprob: -14.804961204528809
    7. '-ci' → logprob: -15.054961204528809
    8. '-m' → logprob: -15.304961204528809
    9. '-cn' → logprob: -15.304961204528809
    10. '-d' → logprob: -15.429961204528809

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. 'x' → logprob: -15.5
    3. ' ' → logprob: -16.375
    4. 'c' → logprob: -17.0
    5. '```' → logprob: -17.125
    6. '۲' → logprob: -17.4375
    7. '２' → logprob: -17.75
    8. '२' → logprob: -18.8125
    9. '1' → logprob: -19.0
    10. '২' → logprob: -19.1875

Token 56: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.981667537620524e-06
    2. ')x' → logprob: -13.375001907348633
    3. ' x' → logprob: -15.500001907348633
    4. '<|end|>' → logprob: -16.750001907348633
    5. ')' → logprob: -17.750001907348633
    6. '```' → logprob: -18.062501907348633
    7. ' ' → logprob: -18.187501907348633
    8. ''x' → logprob: -18.375001907348633
    9. '1' → logprob: -18.437501907348633
    10. '"x' → logprob: -18.812501907348633

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0391463193809614e-05
    2. '2' → logprob: -10.125060081481934
    3. ' ,' → logprob: -10.875060081481934
    4. '```' → logprob: -14.375060081481934
    5. ')' → logprob: -14.875060081481934
    6. '

' → logprob: -15.875060081481934
    7. '),' → logprob: -16.25006103515625
    8. ',

' → logprob: -16.62506103515625
    9. '`,' → logprob: -16.87506103515625
    10. ',
' → logprob: -17.12506103515625

Token 58: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019311357755213976
    2. ' ' → logprob: -6.251931190490723
    3. '   ' → logprob: -14.439431190490723
    4. '  ' → logprob: -14.501931190490723
    5. ')' → logprob: -14.564431190490723
    6. '```' → logprob: -15.126931190490723
    7. ' )' → logprob: -16.501930236816406
    8. ',' → logprob: -16.626930236816406
    9. '    ' → logprob: -16.626930236816406
    10. '۲' → logprob: -16.689430236816406

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029995047952979803
    2. ' ' → logprob: -8.125300407409668
    3. '   ' → logprob: -13.562800407409668
    4. '  ' → logprob: -14.437800407409668
    5. '```' → logprob: -14.687800407409668
    6. ')' → logprob: -15.312800407409668
    7. '۲' → logprob: -15.750300407409668
    8. '    ' → logprob: -16.18779945373535
    9. '	' → logprob: -16.62529945373535
    10. '

' → logprob: -16.68779945373535

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028373266104608774
    2. ')+' → logprob: -5.877837181091309
    3. '+' → logprob: -11.377837181091309
    4. ' )' → logprob: -11.877837181091309
    5. ')+(' → logprob: -11.877837181091309
    6. '+)' → logprob: -12.627837181091309
    7. '))' → logprob: -13.252837181091309
    8. '}' → logprob: -14.002837181091309
    9. '),' → logprob: -15.002837181091309
    10. ')
' → logprob: -16.252838134765625

Token 61: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009760929271578789
    2. ' +' → logprob: -4.634760856628418
    3. ')' → logprob: -13.009760856628418
    4. ')+' → logprob: -13.759760856628418
    5. '+)' → logprob: -14.009760856628418
    6. '<|end|>' → logprob: -14.384760856628418
    7. '+

' → logprob: -16.759761810302734
    8. '+p' → logprob: -17.259761810302734
    9. '+d' → logprob: -17.509761810302734
    10. ' plus' → logprob: -17.634761810302734

Token 62: ' ' (ID: 220)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.002585051115602255
    2. ' pow' → logprob: -6.002584934234619
    3. '(pow' → logprob: -9.127585411071777
    4. '.pow' → logprob: -14.752585411071777
    5. '_pow' → logprob: -15.502585411071777
    6. ' ' → logprob: -17.37758445739746
    7. '    ' → logprob: -17.62758445739746
    8. ')' → logprob: -17.75258445739746
    9. '<|end|>' → logprob: -18.00258445739746
    10. 'Pow' → logprob: -18.00258445739746

Token 63: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -8.292095299111679e-05
    2. '(pow' → logprob: -9.625082969665527
    3. ' pow' → logprob: -11.000082969665527
    4. '.pow' → logprob: -17.37508201599121
    5. '(c' → logprob: -17.75008201599121
    6. '_pow' → logprob: -18.12508201599121
    7. '    ' → logprob: -18.25008201599121
    8. '  ' → logprob: -18.75008201599121
    9. 'Pow' → logprob: -18.75008201599121
    10. '(' → logprob: -19.00008201599121

Token 64: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.1605808287858963
    2. '(' → logprob: -1.9105808734893799
    3. '((' → logprob: -8.1605806350708
    4. '<|end|>' → logprob: -10.0355806350708
    5. '(C' → logprob: -12.6605806350708
    6. '(abs' → logprob: -12.6605806350708
    7. ' (' → logprob: -12.6605806350708
    8. '(pow' → logprob: -12.7855806350708
    9. '(
' → logprob: -13.6605806350708
    10. '(s' → logprob: -13.6605806350708

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20471899211406708
    2. 'y' → logprob: -1.7047189474105835
    3. 'c' → logprob: -6.579719066619873
    4. 'r' → logprob: -6.579719066619873
    5. 'x' → logprob: -7.579719066619873
    6. 'ry' → logprob: -12.954718589782715
    7. ')y' → logprob: -13.829718589782715
    8. '2' → logprob: -13.954718589782715
    9. 'py' → logprob: -13.954718589782715
    10. ')' → logprob: -13.954718589782715

Token 66: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00025084958178922534
    2. 'c' → logprob: -8.625250816345215
    3. '1' → logprob: -10.500250816345215
    4. 'x' → logprob: -10.625250816345215
    5. 'r' → logprob: -11.250250816345215
    6. '-y' → logprob: -12.875250816345215
    7. '-' → logprob: -14.250250816345215
    8. '```' → logprob: -14.500250816345215
    9. 'cy' → logprob: -14.750250816345215
    10. ' y' → logprob: -15.500250816345215

Token 67: '-c' (ID: 3452)
  Prédit: '-c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.08156788349151611
    2. '-' → logprob: -2.5815677642822266
    3. ' -' → logprob: -5.956567764282227
    4. '<|end|>' → logprob: -9.706567764282227
    5. '-code' → logprob: -12.331567764282227
    6. '-python' → logprob: -12.581567764282227
    7. '-user' → logprob: -12.831567764282227
    8. '-ci' → logprob: -13.331567764282227
    9. '-C' → logprob: -13.456567764282227
    10. '-ai' → logprob: -13.831567764282227

Token 68: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1452237218618393
    2. '2' → logprob: -2.145223617553711
    3. '1' → logprob: -4.020223617553711
    4. 'r' → logprob: -9.520223617553711
    5. 'x' → logprob: -10.270223617553711
    6. 'c' → logprob: -10.770223617553711
    7. '<|end|>' → logprob: -11.395223617553711
    8. 'py' → logprob: -12.145223617553711
    9. '-y' → logprob: -12.520223617553711
    10. ' y' → logprob: -12.895223617553711

Token 69: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.739826181321405e-05
    2. '-y' → logprob: -10.62504768371582
    3. '-' → logprob: -10.75004768371582
    4. 'x' → logprob: -15.00004768371582
    5. '2' → logprob: -15.25004768371582
    6. ' y' → logprob: -15.50004768371582
    7. '<|end|>' → logprob: -15.62504768371582
    8. '	y' → logprob: -16.12504768371582
    9. ' ' → logprob: -16.25004768371582
    10. ' -' → logprob: -16.50004768371582

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026975206565111876
    2. '-' → logprob: -6.002697467803955
    3. ' ,' → logprob: -9.127697944641113
    4. '-,' → logprob: -10.127697944641113
    5. ' -' → logprob: -10.377697944641113
    6. '),' → logprob: -11.002697944641113
    7. ')' → logprob: -11.252697944641113
    8. '2' → logprob: -12.002697944641113
    9. 'c' → logprob: -13.627697944641113
    10. ' ' → logprob: -13.627697944641113

Token 71: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5231371521949768
    2. ' ' → logprob: -0.8981371521949768
    3. ' (' → logprob: -12.898137092590332
    4. ')' → logprob: -13.148137092590332
    5. ' c' → logprob: -13.273137092590332
    6. '(c' → logprob: -13.398137092590332
    7. '(' → logprob: -13.648137092590332
    8. 'pow' → logprob: -13.898137092590332
    9. 'c' → logprob: -14.523137092590332
    10. '  ' → logprob: -14.898137092590332

Token 72: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001033999491482973
    2. ' ' → logprob: -6.876033782958984
    3. '1' → logprob: -14.813533782958984
    4. ')' → logprob: -15.563533782958984
    5. '-' → logprob: -16.001033782958984
    6. '(' → logprob: -16.313533782958984
    7. '```' → logprob: -16.938533782958984
    8. '

' → logprob: -17.001033782958984
    9. '۲' → logprob: -17.063533782958984
    10. '  ' → logprob: -17.063533782958984

Token 73: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009145628428086638
    2. '))' → logprob: -7.000914573669434
    3. ')))' → logprob: -13.625914573669434
    4. ')
' → logprob: -14.500914573669434
    5. ' )' → logprob: -14.500914573669434
    6. '),' → logprob: -15.375914573669434
    7. ')

' → logprob: -15.750914573669434
    8. ')**' → logprob: -16.000913619995117
    9. ')}' → logprob: -17.000913619995117
    10. ')`' → logprob: -17.625913619995117

Token 74: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03513934463262558
    2. 'if' → logprob: -4.410139560699463
    3. '#' → logprob: -4.785139560699463
    4. ':' → logprob: -5.660139560699463
    5. 'n' → logprob: -5.910139560699463
    6. '\n' → logprob: -6.035139560699463
    7. 'd' → logprob: -6.910139560699463
    8. ')' → logprob: -7.035139560699463
    9. ',' → logprob: -7.410139560699463
    10. '\' → logprob: -7.660139560699463

Token 75: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04605599492788315
    2. '=' → logprob: -3.671056032180786
    3. 'u' → logprob: -4.796055793762207
    4. ':' → logprob: -6.296055793762207
    5. 't' → logprob: -6.296055793762207
    6. 'if' → logprob: -6.421055793762207
    7. '-' → logprob: -6.796055793762207
    8. 'a' → logprob: -7.171055793762207
    9. ' =' → logprob: -7.296055793762207
    10. ' ' → logprob: -7.421055793762207

Token 76: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03348731994628906
    2. 'max' → logprob: -3.783487319946289
    3. ' c' → logprob: -5.408487319946289
    4. 'min' → logprob: -5.533487319946289
    5. 'abs' → logprob: -7.408487319946289
    6. ' max' → logprob: -8.283487319946289
    7. '(c' → logprob: -8.533487319946289
    8. '"' → logprob: -8.908487319946289
    9. ''' → logprob: -9.408487319946289
    10. ' min' → logprob: -9.533487319946289

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014313090359792113
    2. '2' → logprob: -7.126431465148926
    3. 'r' → logprob: -7.376431465148926
    4. 'c' → logprob: -16.12643051147461
    5. ' ' → logprob: -16.75143051147461
    6. ''r' → logprob: -17.00143051147461
    7. ')' → logprob: -17.18893051147461
    8. '```' → logprob: -17.25143051147461
    9. '_r' → logprob: -17.31393051147461
    10. 'l' → logprob: -17.37643051147461

Token 78: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.9361264946837764e-07
    2. '	r' → logprob: -16.75
    3. ' r' → logprob: -17.625
    4. '_r' → logprob: -18.125
    5. 'р' → logprob: -18.75
    6. 'x' → logprob: -19.0
    7. '```' → logprob: -19.125
    8. 'c' → logprob: -19.5
    9. ''r' → logprob: -19.875
    10. ' ' → logprob: -20.0

Token 79: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.039231881499290466
    2. ' +' → logprob: -3.289231777191162
    3. '+c' → logprob: -7.039231777191162
    4. ' ' → logprob: -8.91423225402832
    5. '-' → logprob: -9.03923225402832
    6. '<|end|>' → logprob: -11.16423225402832
    7. '+r' → logprob: -12.53923225402832
    8. 'c' → logprob: -12.53923225402832
    9. '+
' → logprob: -12.66423225402832
    10. '>' → logprob: -12.66423225402832

Token 80: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029750952497124672
    2. ' c' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.52975082397461
    4. '	c' → logprob: -15.90475082397461
    5. '_c' → logprob: -18.15475082397461
    6. '   ' → logprob: -18.52975082397461
    7. ')c' → logprob: -18.65475082397461
    8. '```' → logprob: -18.65475082397461
    9. '(c' → logprob: -18.90475082397461
    10. '`' → logprob: -18.90475082397461

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. 'r' → logprob: -15.625
    3. '1' → logprob: -16.375
    4. 'c' → logprob: -16.875
    5. ' ' → logprob: -17.0
    6. '２' → logprob: -17.875
    7. '۲' → logprob: -17.875
    8. '٢' → logprob: -19.3125
    9. '```' → logprob: -19.4375
    10. '₂' → logprob: -19.5

Token 82: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.491498531133402e-06
    2. '<|end|>' → logprob: -11.625009536743164
    3. ' ' → logprob: -16.125009536743164
    4. 'c' → logprob: -16.500009536743164
    5. '<|end|>' → logprob: -16.750009536743164
    6. ' r' → logprob: -16.750009536743164
    7. 'x' → logprob: -17.500009536743164
    8. ''r' → logprob: -18.000009536743164
    9. 'р' → logprob: -18.000009536743164
    10. '```' → logprob: -18.000009536743164

Token 83: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2648462951183319
    2. '
' → logprob: -2.3898463249206543
    3. ' if' → logprob: -3.1398463249206543
    4. '\n' → logprob: -3.5148463249206543
    5. '#' → logprob: -4.139846324920654
    6. '' → logprob: -4.389846324920654
    7. '<|end|>' → logprob: -4.639846324920654
    8. '\' → logprob: -5.014846324920654
    9. '>' → logprob: -5.764846324920654
    10. '-' → logprob: -6.014846324920654

Token 84: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2994590699672699
    2. 'i' → logprob: -1.4244590997695923
    3. ' if' → logprob: -5.424458980560303
    4. '\n' → logprob: -5.424458980560303
    5. '#' → logprob: -6.049458980560303
    6. '
' → logprob: -6.174458980560303
    7. '\' → logprob: -6.924458980560303
    8. ':' → logprob: -7.424458980560303
    9. '' → logprob: -7.424458980560303
    10. ',' → logprob: -7.924458980560303

Token 85: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.006755394395440817
    2. 'd' → logprob: -5.006755352020264
    3. ' ' → logprob: -10.631755828857422
    4. ' s' → logprob: -11.256755828857422
    5. ' ' → logprob: -13.381755828857422
    6. 's' → logprob: -13.631755828857422
    7. ' (' → logprob: -15.631755828857422
    8. '  ' → logprob: -16.756755828857422
    9. '	d' → logprob: -17.256755828857422
    10. '(d' → logprob: -17.631755828857422

Token 86: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2705746293067932
    2. ' <=' → logprob: -1.7705745697021484
    3. ' >' → logprob: -2.7705745697021484
    4. '<' → logprob: -6.395574569702148
    5. ' >=' → logprob: -6.895574569702148
    6. ' ==' → logprob: -7.270574569702148
    7. ' ' → logprob: -7.645574569702148
    8. '>' → logprob: -8.645574569702148
    9. '<=' → logprob: -8.895574569702148
    10. '  ' → logprob: -12.145574569702148

Token 87: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6931834816932678
    2. ' s' → logprob: -0.6931834816932678
    3. ' ' → logprob: -10.443183898925781
    4. '0' → logprob: -12.193183898925781
    5. '	s' → logprob: -14.693183898925781
    6. ' ' → logprob: -14.693183898925781
    7. 'c' → logprob: -15.193183898925781
    8. '(s' → logprob: -15.818183898925781
    9. '1' → logprob: -15.943183898925781
    10. '​' → logprob: -16.38068389892578

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.864272967912257e-05
    2. ' :' → logprob: -9.375088691711426
    3. ':
' → logprob: -13.625088691711426
    4. ' or' → logprob: -14.125088691711426
    5. ':**' → logprob: -14.375088691711426
    6. ' and' → logprob: -14.625088691711426
    7. ',' → logprob: -15.500088691711426
    8. '>' → logprob: -16.00008773803711
    9. ':return' → logprob: -16.00008773803711
    10. 'or' → logprob: -16.87508773803711

Token 89: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17481112480163574
    2. ' print' → logprob: -1.9248111248016357
    3. '\n' → logprob: -4.924811363220215
    4. '   ' → logprob: -5.424811363220215
    5. '	print' → logprob: -7.049811363220215
    6. ' 
' → logprob: -7.299811363220215
    7. '    ' → logprob: -8.424811363220215
    8. '
' → logprob: -8.424811363220215
    9. '    
' → logprob: -8.799811363220215
    10. ' ' → logprob: -9.174811363220215

Token 90: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06977967917919159
    2. ' print' → logprob: -2.944779634475708
    3. '\n' → logprob: -4.944779872894287
    4. '"' → logprob: -6.194779872894287
    5. 'p' → logprob: -6.694779872894287
    6. ''' → logprob: -7.194779872894287
    7. ' 
' → logprob: -7.444779872894287
    8. '    ' → logprob: -7.694779872894287
    9. '   ' → logprob: -7.819779872894287
    10. 'n' → logprob: -8.069779396057129

Token 91: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5876268148422241
    2. '(' → logprob: -0.8376268148422241
    3. '()' → logprob: -5.087626934051514
    4. '('' → logprob: -5.337626934051514
    5. '("")' → logprob: -8.337626457214355
    6. '("("' → logprob: -8.587626457214355
    7. '(False' → logprob: -9.587626457214355
    8. '(None' → logprob: -9.837626457214355
    9. '(-' → logprob: -10.212626457214355
    10. '0' → logprob: -11.337626457214355

Token 92: '4' (ID: 19)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.24401551485061646
    2. '0' → logprob: -1.9940154552459717
    3. '"No' → logprob: -2.9940154552459717
    4. ''' → logprob: -3.8690154552459717
    5. '")' → logprob: -4.994015693664551
    6. ''"' → logprob: -6.619015693664551
    7. ')' → logprob: -7.494015693664551
    8. '"N' → logprob: -9.24401569366455
    9. '"'' → logprob: -9.36901569366455
    10. ')"' → logprob: -9.49401569366455

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006370236515067518
    2. ' )' → logprob: -7.875637054443359
    3. '0' → logprob: -9.12563705444336
    4. ')
' → logprob: -10.12563705444336
    5. '')' → logprob: -11.00063705444336
    6. '4' → logprob: -11.25063705444336
    7. ' ' → logprob: -11.50063705444336
    8. '")' → logprob: -11.75063705444336
    9. '7' → logprob: -11.75063705444336
    10. '9' → logprob: -12.00063705444336

Token 94: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.24525728821754456
    2. '<|end|>' → logprob: -2.9952573776245117
    3. '\n' → logprob: -3.1202573776245117
    4. '
' → logprob: -3.2452573776245117
    5. 'else' → logprob: -3.3702573776245117
    6. ' elif' → logprob: -4.745257377624512
    7. '```' → logprob: -4.995257377624512
    8. 'e' → logprob: -5.120257377624512
    9. '0' → logprob: -5.120257377624512
    10. '' → logprob: -5.870257377624512

Token 95: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.014331330545246601
    2. 'd' → logprob: -4.389331340789795
    3. ' ' → logprob: -6.764331340789795
    4. ' abs' → logprob: -8.264330863952637
    5. ' s' → logprob: -8.889330863952637
    6. ' (' → logprob: -9.264330863952637
    7. '  ' → logprob: -10.264330863952637
    8. 's' → logprob: -10.764330863952637
    9. 'abs' → logprob: -10.764330863952637
    10. ' c' → logprob: -10.826830863952637

Token 96: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2134089320898056
    2. ' ==' → logprob: -1.8384089469909668
    3. ' <=' → logprob: -3.588408946990967
    4. ' >' → logprob: -5.713408946990967
    5. ' >=' → logprob: -7.338408946990967
    6. '<' → logprob: -7.463408946990967
    7. '==' → logprob: -7.463408946990967
    8. ' ' → logprob: -8.088408470153809
    9. '<=' → logprob: -11.338408470153809
    10. ' =' → logprob: -11.963408470153809

Token 97: ' s' (ID: 265)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5711109042167664
    2. 's' → logprob: -1.0711109638214111
    3. ' ' → logprob: -2.696110963821411
    4. ' s' → logprob: -3.696110963821411
    5. 'c' → logprob: -9.696110725402832
    6. '1' → logprob: -9.946110725402832
    7. '4' → logprob: -11.446110725402832
    8. ' c' → logprob: -11.696110725402832
    9. '(s' → logprob: -12.321110725402832
    10. '2' → logprob: -12.508610725402832

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014406509581021965
    2. ':
' → logprob: -8.875144004821777
    3. ' or' → logprob: -13.625144004821777
    4. ' and' → logprob: -14.000144004821777
    5. ' :' → logprob: -14.000144004821777
    6. '   ' → logprob: -14.875144004821777
    7. ':
' → logprob: -15.250144004821777
    8. 'and' → logprob: -15.875144004821777
    9. ':

' → logprob: -16.375144958496094
    10. '):' → logprob: -16.375144958496094

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005114490049891174
    2. '4' → logprob: -8.750511169433594
    3. 'print' → logprob: -9.000511169433594
    4. ' print' → logprob: -9.750511169433594
    5. '<|end|>' → logprob: -9.875511169433594
    6. '    
' → logprob: -10.750511169433594
    7. '1' → logprob: -10.875511169433594
    8. '0' → logprob: -11.375511169433594
    9. ' ' → logprob: -11.500511169433594
    10. '2' → logprob: -11.500511169433594

Token 100: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.8061240315437317
    2. ' print' → logprob: -0.9311240315437317
    3. '   ' → logprob: -1.931123971939087
    4. '4' → logprob: -4.931124210357666
    5. ' ' → logprob: -6.056124210357666
    6. '2' → logprob: -6.181124210357666
    7. '1' → logprob: -6.681124210357666
    8. '3' → logprob: -7.431124210357666
    9. '0' → logprob: -8.431123733520508
    10. '```' → logprob: -8.556123733520508

Token 101: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.60414821645827e-06
    2. '()' → logprob: -12.875004768371582
    3. '3' → logprob: -14.500004768371582
    4. '4' → logprob: -15.000004768371582
    5. '1' → logprob: -15.000004768371582
    6. '0' → logprob: -15.250004768371582
    7. '2' → logprob: -15.500004768371582
    8. '('' → logprob: -15.875004768371582
    9. '(
' → logprob: -16.750003814697266
    10. '6' → logprob: -17.000003814697266

Token 102: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.002460079500451684
    2. '2' → logprob: -6.62746000289917
    3. '1' → logprob: -7.25246000289917
    4. '4' → logprob: -8.127460479736328
    5. '5' → logprob: -10.002460479736328
    6. ' ' → logprob: -10.127460479736328
    7. '0' → logprob: -10.127460479736328
    8. ')' → logprob: -12.627460479736328
    9. '"' → logprob: -14.377460479736328
    10. ''' → logprob: -14.877460479736328

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22105419635772705
    2. ')
' → logprob: -1.721054196357727
    3. 'elif' → logprob: -4.0960540771484375
    4. 'else' → logprob: -5.9710540771484375
    5. '<|end|>' → logprob: -9.096054077148438
    6. '
' → logprob: -10.096054077148438
    7. '   ' → logprob: -10.596054077148438
    8. '```' → logprob: -10.971054077148438
    9. ' elif' → logprob: -11.096054077148438
    10. ' else' → logprob: -11.221054077148438

Token 104: 'else' (ID: 2807)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0016529252752661705
    2. 'else' → logprob: -6.626652717590332
    3. ' elif' → logprob: -8.751652717590332
    4. '<|end|>' → logprob: -9.001652717590332
    5. '```' → logprob: -10.751652717590332
    6. '	elif' → logprob: -11.501652717590332
    7. ')' → logprob: -12.626652717590332
    8. 'e' → logprob: -12.876652717590332
    9. 'elseif' → logprob: -13.626652717590332
    10. ' else' → logprob: -13.751652717590332

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001182607957161963
    2. ':
' → logprob: -6.751182556152344
    3. '   ' → logprob: -12.376182556152344
    4. 'if' → logprob: -12.876182556152344
    5. ' :' → logprob: -12.876182556152344
    6. ' if' → logprob: -13.001182556152344
    7. ':
' → logprob: -14.501182556152344
    8. ':

' → logprob: -16.376182556152344
    9. 's' → logprob: -16.626182556152344
    10. ',' → logprob: -16.751182556152344

Token 106: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6162550449371338
    2. '   ' → logprob: -0.8662550449371338
    3. 'if' → logprob: -3.366255044937134
    4. '    ' → logprob: -5.991254806518555
    5. 'print' → logprob: -7.241254806518555
    6. ' print' → logprob: -7.366254806518555
    7. ' s' → logprob: -7.741254806518555
    8. ' d' → logprob: -8.116254806518555
    9. 'd' → logprob: -8.616254806518555
    10. 's' → logprob: -10.116254806518555

Token 107: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.010435149073600769
    2. 'print' → logprob: -5.260435104370117
    3. 'd' → logprob: -6.135435104370117
    4. 'i' → logprob: -6.885435104370117
    5. 's' → logprob: -7.385435104370117
    6. ' if' → logprob: -7.510435104370117
    7. '   ' → logprob: -7.760435104370117
    8. 'diff' → logprob: -9.010435104370117
    9. 'r' → logprob: -9.760435104370117
    10. 'p' → logprob: -9.885435104370117

Token 108: ' c' (ID: 274)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.23569442331790924
    2. ' c' → logprob: -1.985694408416748
    3. ' abs' → logprob: -3.110694408416748
    4. 'd' → logprob: -3.985694408416748
    5. 'c' → logprob: -5.485694408416748
    6. ' s' → logprob: -6.110694408416748
    7. 'abs' → logprob: -6.360694408416748
    8. ' ' → logprob: -7.610694408416748
    9. ' math' → logprob: -7.985694408416748
    10. ' pow' → logprob: -8.735694885253906

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002325936919078231
    2. 'r' → logprob: -6.127326011657715
    3. '2' → logprob: -8.877326011657715
    4. 's' → logprob: -14.627326011657715
    5. 'c' → logprob: -15.752326011657715
    6. ' r' → logprob: -15.877326011657715
    7. 'd' → logprob: -16.3148250579834
    8. 'x' → logprob: -16.3773250579834
    9. ' ' → logprob: -16.7523250579834
    10. '_r' → logprob: -17.0648250579834

Token 110: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.2729995988775045e-06
    2. 'x' → logprob: -12.125006675720215
    3. 'y' → logprob: -15.125006675720215
    4. ' r' → logprob: -16.3750057220459
    5. ' ' → logprob: -16.5000057220459
    6. '_r' → logprob: -16.6250057220459
    7. '```' → logprob: -17.0000057220459
    8. '<|end|>' → logprob: -17.0000057220459
    9. 'c' → logprob: -17.1250057220459
    10. '	r' → logprob: -17.3125057220459

Token 111: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.410835325717926
    2. '>' → logprob: -1.9108352661132812
    3. ' +' → logprob: -2.0358352661132812
    4. '+' → logprob: -3.1608352661132812
    5. ' ==' → logprob: -4.410835266113281
    6. '==' → logprob: -5.910835266113281
    7. ' <' → logprob: -7.785835266113281
    8. ' ' → logprob: -7.910835266113281
    9. '<' → logprob: -8.660835266113281
    10. ' >=' → logprob: -10.160835266113281

Token 112: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.36207693815231323
    2. 'd' → logprob: -1.237076997756958
    3. ' d' → logprob: -4.987076759338379
    4. ' c' → logprob: -5.487076759338379
    5. '0' → logprob: -6.737076759338379
    6. 's' → logprob: -7.362076759338379
    7. '=' → logprob: -8.362076759338379
    8. 'pow' → logprob: -8.862076759338379
    9. ' ' → logprob: -9.112076759338379
    10. '=c' → logprob: -9.362076759338379

Token 113: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.9650025428272784e-05
    2. '1' → logprob: -10.625040054321289
    3. 'r' → logprob: -11.125040054321289
    4. 's' → logprob: -15.250040054321289
    5. 'c' → logprob: -17.12504005432129
    6. 'x' → logprob: -17.12504005432129
    7. 'sr' → logprob: -17.25004005432129
    8. 'or' → logprob: -17.50004005432129
    9. '12' → logprob: -17.68754005432129
    10. '２' → logprob: -17.75004005432129

Token 114: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.696889623621246e-06
    2. 'x' → logprob: -13.75000286102295
    3. ' ' → logprob: -14.25000286102295
    4. '<|end|>' → logprob: -14.87500286102295
    5. ' r' → logprob: -15.75000286102295
    6. '+' → logprob: -16.375001907348633
    7. '	r' → logprob: -16.875001907348633
    8. 'c' → logprob: -17.125001907348633
    9. '

' → logprob: -17.187501907348633
    10. 's' → logprob: -17.375001907348633

Token 115: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6067007780075073
    2. ' +' → logprob: -1.4817007780075073
    3. ':' → logprob: -1.7317007780075073
    4. '+' → logprob: -3.231700897216797
    5. 'and' → logprob: -4.856700897216797
    6. '   ' → logprob: -6.731700897216797
    7. '+:' → logprob: -7.356700897216797
    8. ' ' → logprob: -7.856700897216797
    9. '<|end|>' → logprob: -7.981700897216797
    10. ' :' → logprob: -7.981700897216797

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.142959475517273
    2. '<|end|>' → logprob: -1.267959475517273
    3. '   ' → logprob: -1.517959475517273
    4. '    ' → logprob: -2.8929595947265625
    5. ' ' → logprob: -2.8929595947265625
    6. ' and' → logprob: -3.1429595947265625
    7. ' if' → logprob: -4.8929595947265625
    8. ',' → logprob: -5.3929595947265625
    9. '  ' → logprob: -5.7679595947265625
    10. ' s' → logprob: -6.0179595947265625

Token 117: ' if' (ID: 538)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6610495448112488
    2. ' if' → logprob: -1.1610496044158936
    3. 'if' (adapté à ' if') → logprob: -2.6610496044158936
    4. 'c' → logprob: -2.7860496044158936
    5. '       ' → logprob: -5.0360493659973145
    6. 't' → logprob: -5.0360493659973145
    7. ' s' → logprob: -5.2860493659973145
    8. 'print' → logprob: -5.5360493659973145
    9. 's' → logprob: -6.1610493659973145
    10. ' ' → logprob: -6.2860493659973145

Token 118: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3043246865272522
    2. ' d' → logprob: -1.5543246269226074
    3. 'c' → logprob: -3.3043246269226074
    4. ' c' → logprob: -4.429324626922607
    5. 's' → logprob: -6.929324626922607
    6. ' s' → logprob: -7.679324626922607
    7. ' (' → logprob: -8.429325103759766
    8. ' ' → logprob: -8.679325103759766
    9. '(d' → logprob: -9.054325103759766
    10. 'pow' → logprob: -9.054325103759766

Token 119: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8976911902427673
    2. ' >' → logprob: -1.522691249847412
    3. ' <' → logprob: -1.647691249847412
    4. '+' → logprob: -2.022691249847412
    5. '>' → logprob: -4.272691249847412
    6. '<' → logprob: -4.647691249847412
    7. ' >=' → logprob: -4.647691249847412
    8. ' <=' → logprob: -4.897691249847412
    9. ' ' → logprob: -5.272691249847412
    10. ' ==' → logprob: -6.147691249847412

Token 120: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22545933723449707
    2. ' c' → logprob: -1.600459337234497
    3. ' ' → logprob: -10.225459098815918
    4. '<|end|>' → logprob: -12.225459098815918
    5. 'd' → logprob: -13.475459098815918
    6. 's' → logprob: -14.100459098815918
    7. '.c' → logprob: -14.475459098815918
    8. '(c' → logprob: -14.725459098815918
    9. '=c' → logprob: -14.725459098815918
    10. 'e' → logprob: -15.475459098815918

Token 121: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.204720582696609e-05
    2. '1' → logprob: -9.875052452087402
    3. 'r' → logprob: -14.625052452087402
    4. '۲' → logprob: -18.125051498413086
    5. '২' → logprob: -18.187551498413086
    6. '２' → logprob: -18.437551498413086
    7. 's' → logprob: -18.625051498413086
    8. '२' → logprob: -18.687551498413086
    9. '₂' → logprob: -19.125051498413086
    10. ' ' → logprob: -19.312551498413086

Token 122: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.5048530030981055e-06
    2. '<|end|>' → logprob: -14.000001907348633
    3. ' ' → logprob: -16.000001907348633
    4. ' r' → logprob: -16.125001907348633
    5. 'x' → logprob: -16.375001907348633
    6. '```' → logprob: -16.750001907348633
    7. '	r' → logprob: -16.875001907348633
    8. 'р' → logprob: -16.875001907348633
    9. '<|end|>' → logprob: -17.250001907348633
    10. '

' → logprob: -17.375001907348633

Token 123: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14518609642982483
    2. '<' → logprob: -2.645186185836792
    3. ' ==' → logprob: -3.270186185836792
    4. '==' → logprob: -4.270185947418213
    5. ' >' → logprob: -4.770185947418213
    6. '>' → logprob: -6.395185947418213
    7. ' ' → logprob: -6.645185947418213
    8. ' >=' → logprob: -8.020186424255371
    9. ' <=' → logprob: -8.520186424255371
    10. '>=' → logprob: -9.520186424255371

Token 124: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1602281779050827
    2. ' c' → logprob: -1.9102281332015991
    3. ' ' → logprob: -13.28522777557373
    4. '	c' → logprob: -13.28522777557373
    5. '(c' → logprob: -16.410228729248047
    6. ')c' → logprob: -16.410228729248047
    7. '<c' → logprob: -16.535228729248047
    8. '$c' → logprob: -16.660228729248047
    9. '=c' → logprob: -16.785228729248047
    10. '   ' → logprob: -16.785228729248047

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16023173928260803
    2. 'r' → logprob: -1.9102317094802856
    3. 'x' → logprob: -12.410231590270996
    4. '2' → logprob: -13.785231590270996
    5. 'xr' → logprob: -13.910231590270996
    6. 'or' → logprob: -15.160231590270996
    7. '	r' → logprob: -15.285231590270996
    8. 'rx' → logprob: -16.160232543945312
    9. '```' → logprob: -16.285232543945312
    10. ''r' → logprob: -16.410232543945312

Token 126: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1472419600977446e-06
    2. 'x' → logprob: -14.625000953674316
    3. '<|end|>' → logprob: -14.750000953674316
    4. ' r' → logprob: -17.500001907348633
    5. '	r' → logprob: -17.562501907348633
    6. ' ' → logprob: -17.625001907348633
    7. '_r' → logprob: -17.625001907348633
    8. '
' → logprob: -17.687501907348633
    9. 'or' → logprob: -18.187501907348633
    10. ')' → logprob: -18.250001907348633

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013909504050388932
    2. ':
' → logprob: -6.6263909339904785
    3. '       ' → logprob: -10.376391410827637
    4. ' :' → logprob: -11.501391410827637
    5. '<|end|>' → logprob: -12.001391410827637
    6. '   ' → logprob: -12.251391410827637
    7. '):' → logprob: -12.501391410827637
    8. ':

' → logprob: -12.876391410827637
    9. ' or' → logprob: -13.251391410827637
    10. ' and' → logprob: -13.501391410827637

Token 128: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10233361274003983
    2. '       ' → logprob: -2.8523335456848145
    3. 'print' → logprob: -3.4773335456848145
    4. '\n' → logprob: -6.2273335456848145
    5. '   ' → logprob: -6.4773335456848145
    6. ':' → logprob: -6.7273335456848145
    7. '               ' → logprob: -6.8523335456848145
    8. '<|end|>' → logprob: -6.9773335456848145
    9. ':
' → logprob: -7.2273335456848145
    10. ' print' → logprob: -7.6023335456848145

Token 129: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.013311521150171757
    2. '4' → logprob: -5.013311386108398
    3. ' print' → logprob: -5.638311386108398
    4. '       ' → logprob: -6.513311386108398
    5. '   ' → logprob: -7.138311386108398
    6. '2' → logprob: -8.013311386108398
    7. '           ' → logprob: -8.888311386108398
    8. '3' → logprob: -9.138311386108398
    9. '1' → logprob: -9.388311386108398
    10. ' ' → logprob: -10.013311386108398

Token 130: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002858727937564254
    2. '2' → logprob: -6.002858638763428
    3. '1' → logprob: -8.127859115600586
    4. '3' → logprob: -10.502859115600586
    5. '4' → logprob: -10.627859115600586
    6. '0' → logprob: -11.127859115600586
    7. '()' → logprob: -11.877859115600586
    8. '5' → logprob: -12.002859115600586
    9. ' (' → logprob: -13.377859115600586
    10. '(
' → logprob: -13.502859115600586

Token 131: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002554615493863821
    2. '1' → logprob: -6.127554416656494
    3. '3' → logprob: -8.252554893493652
    4. '4' → logprob: -9.377554893493652
    5. '5' → logprob: -11.502554893493652
    6. ' ' → logprob: -12.877554893493652
    7. '

' → logprob: -13.190054893493652
    8. '(' → logprob: -13.252554893493652
    9. '0' → logprob: -13.377554893493652
    10. '```' → logprob: -14.127554893493652

Token 132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4152463376522064
    2. ')
' → logprob: -1.1652463674545288
    3. '       ' → logprob: -3.6652462482452393
    4. '   ' → logprob: -6.415246486663818
    5. 'else' → logprob: -8.54024600982666
    6. 'elif' → logprob: -8.91524600982666
    7. '           ' → logprob: -9.04024600982666
    8. '<|end|>' → logprob: -9.41524600982666
    9. ' else' → logprob: -9.66524600982666
    10. '
' → logprob: -10.04024600982666

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24599039554595947
    2. 'else' → logprob: -1.6209903955459595
    3. ' else' → logprob: -4.74599027633667
    4. 'elif' → logprob: -4.99599027633667
    5. '<|end|>' → logprob: -6.49599027633667
    6. ')' → logprob: -6.62099027633667
    7. '   ' → logprob: -6.87099027633667
    8. '           ' → logprob: -7.37099027633667
    9. ' elif' → logprob: -9.745990753173828
    10. '	else' → logprob: -10.120990753173828

Token 134: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0514415018260479
    2. 'elif' (adapté à ' elif') → logprob: -3.1764414310455322
    3. ' else' → logprob: -5.176441669464111
    4. '   ' → logprob: -6.551441669464111
    5. '       ' → logprob: -6.676441669464111
    6. ' elif' → logprob: -10.051441192626953
    7. '	else' → logprob: -11.676441192626953
    8. '  ' → logprob: -12.301441192626953
    9. '    ' → logprob: -12.426441192626953
    10. '     ' → logprob: -13.176441192626953

Token 135: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2017364650964737
    2. 'd' → logprob: -1.7017364501953125
    3. ' ' → logprob: -8.201736450195312
    4. '   ' → logprob: -11.389236450195312
    5. ' ' → logprob: -12.139236450195312
    6. '  ' → logprob: -12.326736450195312
    7. ' (' → logprob: -12.451736450195312
    8. '	d' → logprob: -12.701736450195312
    9. '(' → logprob: -12.764236450195312
    10. '(d' → logprob: -12.889236450195312

Token 136: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5232292413711548
    2. '+' → logprob: -0.8982292413711548
    3. '==' → logprob: -10.023229598999023
    4. ' ' → logprob: -11.023229598999023
    5. ' ==' → logprob: -11.148229598999023
    6. '<' → logprob: -11.148229598999023
    7. '+c' → logprob: -12.523229598999023
    8. ' plus' → logprob: -12.773229598999023
    9. ' ' → logprob: -12.898229598999023
    10. '>' → logprob: -13.773229598999023

Token 137: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07892768830060959
    2. ' c' → logprob: -2.578927755355835
    3. ' ' → logprob: -10.453927993774414
    4. '	c' → logprob: -12.953927993774414
    5. '<|end|>' → logprob: -13.078927993774414
    6. '_c' → logprob: -14.891427993774414
    7. ' ' → logprob: -15.016427993774414
    8. '   ' → logprob: -15.078927993774414
    9. ')c' → logprob: -15.141427993774414
    10. '
' → logprob: -15.266427993774414

Token 138: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1807907372713089
    2. '2' → logprob: -1.8057907819747925
    3. '1' → logprob: -6.930790901184082
    4. 'c' → logprob: -10.555790901184082
    5. 'x' → logprob: -11.430790901184082
    6. 'y' → logprob: -11.430790901184082
    7. 'or' → logprob: -12.868290901184082
    8. 'xr' → logprob: -13.305790901184082
    9. 'ry' → logprob: -13.555790901184082
    10. 's' → logprob: -13.993290901184082

Token 139: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.147740689106286e-05
    2. 'x' → logprob: -10.62507152557373
    3. 'y' → logprob: -11.00007152557373
    4. '2' → logprob: -11.50007152557373
    5. 'р' → logprob: -12.12507152557373
    6. 'c' → logprob: -12.68757152557373
    7. '	r' → logprob: -13.56257152557373
    8. ' ' → logprob: -13.75007152557373
    9. 'xr' → logprob: -13.81257152557373
    10. '1' → logprob: -14.00007152557373

Token 140: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8214633464813232
    2. '<' → logprob: -1.0714633464813232
    3. ' ==' → logprob: -1.9464633464813232
    4. ' <' → logprob: -2.6964633464813232
    5. '>' → logprob: -5.696463584899902
    6. '>=' → logprob: -6.321463584899902
    7. ' >=' → logprob: -6.946463584899902
    8. ' >' → logprob: -7.696463584899902
    9. '<=' → logprob: -7.696463584899902
    10. ' ' → logprob: -8.446463584899902

Token 141: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06196869537234306
    2. ' c' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.186968803405762
    4. '	c' → logprob: -15.561968803405762
    5. '    ' → logprob: -17.436967849731445
    6. '   ' → logprob: -17.686967849731445
    7. ')c' → logprob: -17.686967849731445
    8. '_c' → logprob: -18.561967849731445
    9. '       ' → logprob: -18.811967849731445
    10. '  ' → logprob: -18.936967849731445

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.281157910823822
    2. 'r' → logprob: -1.4061579704284668
    3. 'р' → logprob: -13.656157493591309
    4. '```' → logprob: -14.156157493591309
    5. 'or' → logprob: -14.343657493591309
    6. '	r' → logprob: -14.406157493591309
    7. '_r' → logprob: -14.531157493591309
    8. ''r' → logprob: -14.843657493591309
    9. 'ar' → logprob: -14.843657493591309
    10. '*r' → logprob: -15.093657493591309

Token 143: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.128163257315464e-07
    2. 'р' → logprob: -15.875
    3. '	r' → logprob: -17.75
    4. '<|end|>' → logprob: -18.5
    5. 'ر' → logprob: -19.0
    6. '```' → logprob: -19.1875
    7. '_r' → logprob: -19.5
    8. ' r' → logprob: -19.5625
    9. '[' → logprob: -20.0
    10. 'ר' → logprob: -20.0

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021374132484197617
    2. ':
' → logprob: -6.252137184143066
    3. '           ' → logprob: -8.502137184143066
    4. '       ' → logprob: -13.002137184143066
    5. ':

' → logprob: -14.002137184143066
    6. '):' → logprob: -14.377137184143066
    7. ' :' → logprob: -14.502137184143066
    8. '   ' → logprob: -14.877137184143066
    9. '               ' → logprob: -15.002137184143066
    10. '<|end|>' → logprob: -15.752137184143066

Token 145: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005949704209342599
    2. 'print' → logprob: -8.750595092773438
    3. '4' → logprob: -9.125595092773438
    4. '2' → logprob: -9.750595092773438
    5. '       ' → logprob: -10.000595092773438
    6. '               ' → logprob: -10.000595092773438
    7. '1' → logprob: -10.125595092773438
    8. '3' → logprob: -10.250595092773438
    9. ':' → logprob: -10.750595092773438
    10. '6' → logprob: -11.000595092773438

Token 146: ' print' (ID: 2123)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8861861824989319
    2. 'print' (adapté à ' print') → logprob: -1.011186122894287
    3. '           ' → logprob: -2.136186122894287
    4. '3' → logprob: -3.261186122894287
    5. '1' → logprob: -3.636186122894287
    6. ' ' → logprob: -3.761186122894287
    7. ' print' → logprob: -4.136186122894287
    8. '4' → logprob: -6.886186122894287
    9. '0' → logprob: -7.886186122894287
    10. '       ' → logprob: -8.761186599731445

Token 147: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.057743949990254e-05
    2. ' (' → logprob: -11.250020980834961
    3. '3' → logprob: -13.250020980834961
    4. '('' → logprob: -13.500020980834961
    5. '()' → logprob: -13.750020980834961
    6. '1' → logprob: -14.000020980834961
    7. '2' → logprob: -14.125020980834961
    8. '(
' → logprob: -14.250020980834961
    9. '("' → logprob: -15.250020980834961
    10. '4' → logprob: -15.500020980834961

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.432518421206623e-05
    2. '2' → logprob: -10.3750638961792
    3. ' ' → logprob: -10.5000638961792
    4. '3' → logprob: -12.8750638961792
    5. '0' → logprob: -13.7500638961792
    6. '   ' → logprob: -14.5625638961792
    7. '

' → logprob: -15.0625638961792
    8. ''' → logprob: -15.6875638961792
    9. '
' → logprob: -15.6875638961792
    10. ')' → logprob: -15.8750638961792

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10853394865989685
    2. '       ' → logprob: -2.3585338592529297
    3. 'else' → logprob: -4.98353385925293
    4. ')
' → logprob: -7.85853385925293
    5. '<|end|>' → logprob: -7.85853385925293
    6. ' else' → logprob: -8.35853385925293
    7. 'elif' → logprob: -8.60853385925293
    8. '   ' → logprob: -8.85853385925293
    9. '")' → logprob: -10.98353385925293
    10. '```' → logprob: -11.23353385925293

Token 150: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.25232994556427
    2. '       ' → logprob: -1.50232994556427
    3. ' else' → logprob: -8.12732982635498
    4. 'elif' → logprob: -9.25232982635498
    5. '	else' → logprob: -13.12732982635498
    6. '   ' → logprob: -13.25232982635498
    7. '<|end|>' → logprob: -13.37732982635498
    8. '	' → logprob: -13.87732982635498
    9. ')' → logprob: -14.62732982635498
    10. '```' → logprob: -14.75232982635498

Token 151: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0025051478296518326
    2. '       ' → logprob: -6.127505302429199
    3. ' else' → logprob: -8.6275053024292
    4. 'elif' → logprob: -8.8775053024292
    5. '   ' → logprob: -14.1275053024292
    6. '	else' → logprob: -14.7525053024292
    7. '```' → logprob: -16.377504348754883
    8. 'e' → logprob: -17.252504348754883
    9. '      ' → logprob: -17.502504348754883
    10. '...' → logprob: -17.877504348754883

Token 152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05826791375875473
    2. ':
' → logprob: -2.933267831802368
    3. '           ' → logprob: -5.808268070220947
    4. '       ' → logprob: -8.683267593383789
    5. '   ' → logprob: -8.683267593383789
    6. '          ' → logprob: -11.558267593383789
    7. ':
' → logprob: -12.058267593383789
    8. 'print' → logprob: -12.308267593383789
    9. '               ' → logprob: -12.808267593383789
    10. '  ' → logprob: -13.058267593383789

Token 153: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.046908531337976456
    2. '           ' → logprob: -3.2969086170196533
    3. ' print' → logprob: -4.796908378601074
    4. '       ' → logprob: -8.296908378601074
    5. '   ' → logprob: -8.921908378601074
    6. ' ' → logprob: -9.171908378601074
    7. '4' → logprob: -9.921908378601074
    8. '  ' → logprob: -11.671908378601074
    9. '2' → logprob: -12.296908378601074
    10. '0' → logprob: -12.421908378601074

Token 154: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0020086953882128
    2. ' print' → logprob: -6.25200891494751
    3. '           ' → logprob: -9.752008438110352
    4. '   ' → logprob: -11.502008438110352
    5. '       ' → logprob: -11.877008438110352
    6. ' ' → logprob: -13.127008438110352
    7. '  ' → logprob: -14.252008438110352
    8. '```' → logprob: -14.252008438110352
    9. '	print' → logprob: -14.252008438110352
    10. '               ' → logprob: -15.252008438110352

Token 155: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019561098888516426
    2. '0' → logprob: -6.251955986022949
    3. '2' → logprob: -11.75195598602295
    4. '4' → logprob: -11.87695598602295
    5. '()' → logprob: -12.37695598602295
    6. ' (' → logprob: -12.75195598602295
    7. '3' → logprob: -13.50195598602295
    8. '((' → logprob: -13.50195598602295
    9. '(
' → logprob: -14.12695598602295
    10. '1' → logprob: -14.12695598602295

Token 156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011473640333861113
    2. '2' → logprob: -7.376147270202637
    3. '4' → logprob: -7.626147270202637
    4. '1' → logprob: -10.876147270202637
    5. ' ' → logprob: -12.126147270202637
    6. '3' → logprob: -12.251147270202637
    7. ')' → logprob: -13.501147270202637
    8. '5' → logprob: -13.626147270202637
    9. '  ' → logprob: -14.751147270202637
    10. '```' → logprob: -14.876147270202637

Token 157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038900997024029493
    2. '   ' → logprob: -6.253890037536621
    3. ')
' → logprob: -6.253890037536621
    4. '       ' → logprob: -11.128890037536621
    5. 'elif' → logprob: -12.003890037536621
    6. ' )' → logprob: -12.503890037536621
    7. '<|end|>' → logprob: -12.628890037536621
    8. 'else' → logprob: -13.003890037536621
    9. ')}' → logprob: -13.753890037536621
    10. '```' → logprob: -13.878890037536621

Token 158: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.9059144854545593
    2. 'elif' → logprob: -0.9059144854545593
    3. '   ' → logprob: -1.655914545059204
    4. ' else' → logprob: -7.530914306640625
    5. ' elif' → logprob: -9.405914306640625
    6. '<|end|>' → logprob: -10.030914306640625
    7. '	elif' → logprob: -10.905914306640625
    8. '```' → logprob: -11.280914306640625
    9. '	else' → logprob: -11.655914306640625
    10. ')' → logprob: -11.780914306640625

Token 159: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13629135489463806
    2. 'elif' → logprob: -2.136291265487671
    3. ' else' → logprob: -4.76129150390625
    4. ' elif' → logprob: -7.76129150390625
    5. '   ' → logprob: -8.01129150390625
    6. ' ' → logprob: -13.01129150390625
    7. 'if' → logprob: -13.63629150390625
    8. '	else' → logprob: -14.13629150390625
    9. '	elif' → logprob: -14.38629150390625
    10. '<|end|>' → logprob: -14.51129150390625

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007306787651032209
    2. ':
' → logprob: -5.0073065757751465
    3. '       ' → logprob: -7.8823065757751465
    4. '   ' → logprob: -9.007307052612305
    5. ' :' → logprob: -9.882307052612305
    6. ' :
' → logprob: -11.382307052612305
    7. ' if' → logprob: -11.382307052612305
    8. '    ' → logprob: -11.632307052612305
    9. 'if' → logprob: -12.257307052612305
    10. ':

' → logprob: -14.007307052612305

Token 161: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7733825445175171
    2. 'if' → logprob: -1.148382544517517
    3. '   ' → logprob: -1.898382544517517
    4. '       ' → logprob: -2.6483826637268066
    5. '    ' → logprob: -7.898382663726807
    6. '	if' → logprob: -8.398382186889648
    7. ' ' → logprob: -8.898382186889648
    8. '	' → logprob: -10.898382186889648
    9. '  ' → logprob: -11.148382186889648
    10. '```' → logprob: -11.273382186889648

Token 162: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001173917087726295
    2. ' if' → logprob: -6.751173973083496
    3. '   ' → logprob: -12.751173973083496
    4. '       ' → logprob: -14.126173973083496
    5. ' ' → logprob: -17.37617301940918
    6. '	if' → logprob: -17.50117301940918
    7. 'elif' → logprob: -18.50117301940918
    8. '```' → logprob: -19.00117301940918
    9. 'If' → logprob: -19.12617301940918
    10. '    ' → logprob: -19.12617301940918

Token 163: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.201443150639534
    2. ' d' → logprob: -1.7014431953430176
    3. 'c' → logprob: -11.20144271850586
    4. '   ' → logprob: -11.82644271850586
    5. ' c' → logprob: -12.95144271850586
    6. '(d' → logprob: -13.32644271850586
    7. ' ' → logprob: -13.32644271850586
    8. '  ' → logprob: -14.13894271850586
    9. '	d' → logprob: -14.26394271850586
    10. 's' → logprob: -14.95144271850586

Token 164: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.020549481734633446
    2. '+' → logprob: -3.8955495357513428
    3. '+c' → logprob: -12.520549774169922
    4. ' ' → logprob: -13.020549774169922
    5. ' ' → logprob: -13.645549774169922
    6. ' plus' → logprob: -14.895549774169922
    7. '+C' → logprob: -17.895549774169922
    8. '＋' → logprob: -18.145549774169922
    9. '   ' → logprob: -18.270549774169922
    10. 'c' → logprob: -18.395549774169922

Token 165: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009118211455643177
    2. ' c' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.125911712646484
    4. '	c' → logprob: -16.750911712646484
    5. '1' → logprob: -17.000911712646484
    6. ' ' → logprob: -17.500911712646484
    7. '       ' → logprob: -19.000911712646484
    8. ')c' → logprob: -19.000911712646484
    9. '.c' → logprob: -19.250911712646484
    10. '  ' → logprob: -19.250911712646484

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04953453317284584
    2. 'c' → logprob: -3.049534559249878
    3. 'r' → logprob: -7.174534320831299
    4. '2' → logprob: -8.924534797668457
    5. ' c' → logprob: -10.299534797668457
    6. 'cr' → logprob: -11.299534797668457
    7. ' ' → logprob: -14.924534797668457
    8. '
' → logprob: -15.737034797668457
    9. '	c' → logprob: -15.737034797668457
    10. 's' → logprob: -16.17453384399414

Token 167: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.896309739408025e-07
    2. 'р' → logprob: -14.750000953674316
    3. 'c' → logprob: -16.0
    4. ' r' → logprob: -17.0625
    5. '

' → logprob: -17.625
    6. '   ' → logprob: -17.625
    7. ' ' → logprob: -18.125
    8. '```' → logprob: -18.1875
    9. '	r' → logprob: -18.3125
    10. 'ر' → logprob: -18.4375

Token 168: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11283167451620102
    2. ' >' → logprob: -2.2378315925598145
    3. ' ' → logprob: -11.862832069396973
    4. '">' → logprob: -14.862832069396973
    5. 'c' → logprob: -14.987832069396973
    6. ' ' → logprob: -15.112832069396973
    7. '&gt' → logprob: -15.237832069396973
    8. '>=' → logprob: -15.737832069396973
    9. '>

' → logprob: -16.112831115722656
    10. '   ' → logprob: -16.237831115722656

Token 169: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12692853808403015
    2. ' c' → logprob: -2.1269285678863525
    3. '	c' → logprob: -15.751928329467773
    4. ' ' → logprob: -16.751928329467773
    5. '   ' → logprob: -16.876928329467773
    6. '(c' → logprob: -17.751928329467773
    7. ')c' → logprob: -17.751928329467773
    8. '$c' → logprob: -18.126928329467773
    9. '<c' → logprob: -18.501928329467773
    10. '_c' → logprob: -18.751928329467773

Token 170: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. 'r' → logprob: -13.25000286102295
    3. 'c' → logprob: -14.00000286102295
    4. ' ' → logprob: -19.625001907348633
    5. '２' → logprob: -19.625001907348633
    6. '1' → logprob: -20.125001907348633
    7. '۲' → logprob: -20.500001907348633
    8. '```' → logprob: -20.625001907348633
    9. '₂' → logprob: -20.687501907348633
    10. 'sr' → logprob: -20.812501907348633

Token 171: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: 0.0
    2. 'р' → logprob: -18.0
    3. '	r' → logprob: -19.0
    4. ' r' → logprob: -19.875
    5. 'ر' → logprob: -20.375
    6. '```' → logprob: -20.625
    7. '   ' → logprob: -21.0
    8. '_r' → logprob: -21.25
    9. ''r' → logprob: -21.5
    10. '#' → logprob: -21.625

Token 172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003258103388361633
    2. ':
' → logprob: -8.125326156616211
    3. '           ' → logprob: -10.500326156616211
    4. '       ' → logprob: -13.875326156616211
    5. 'print' → logprob: -14.750326156616211
    6. ':

' → logprob: -15.000326156616211
    7. ':
' → logprob: -15.375326156616211
    8. ' :' → logprob: -15.625326156616211
    9. '):' → logprob: -16.50032615661621
    10. '   ' → logprob: -17.12532615661621

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00411129230633378
    2. 'print' → logprob: -5.504111289978027
    3. ' print' → logprob: -10.379111289978027
    4. '```' → logprob: -14.379111289978027
    5. '               ' → logprob: -14.879111289978027
    6. '          ' → logprob: -15.004111289978027
    7. '		' → logprob: -15.379111289978027
    8. '       ' → logprob: -15.754111289978027
    9. '   ' → logprob: -17.254112243652344
    10. '         ' → logprob: -17.504112243652344

Token 174: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0019649125169962645
    2. '           ' → logprob: -6.251965045928955
    3. ' print' → logprob: -10.251964569091797
    4. '       ' → logprob: -14.001964569091797
    5. '   ' → logprob: -16.251964569091797
    6. '               ' → logprob: -17.126964569091797
    7. '	print' → logprob: -18.876964569091797
    8. '          ' → logprob: -19.001964569091797
    9. '.print' → logprob: -19.876964569091797
    10. '```' → logprob: -20.001964569091797

Token 175: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019287518225610256
    2. '2' → logprob: -6.251928806304932
    3. ' (' → logprob: -16.751928329467773
    4. '4' → logprob: -18.251928329467773
    5. '   ' → logprob: -18.751928329467773
    6. '(
' → logprob: -18.876928329467773
    7. '0' → logprob: -19.376928329467773
    8. ' ' → logprob: -19.876928329467773
    9. '       ' → logprob: -20.126928329467773
    10. '3' → logprob: -21.501928329467773

Token 176: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '(' → logprob: -18.5
    4. '۲' → logprob: -19.25
    5. '   ' → logprob: -19.875
    6. '２' → logprob: -20.0
    7. '২' → logprob: -21.0
    8. '[' → logprob: -21.375
    9. '٢' → logprob: -21.75
    10. '२' → logprob: -21.75

Token 177: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023440081626176834
    2. ')' → logprob: -3.77344012260437
    3. '   ' → logprob: -9.02344036102295
    4. ')
' → logprob: -9.64844036102295
    5. 'elif' → logprob: -11.64844036102295
    6. '")' → logprob: -15.14844036102295
    7. 'else' → logprob: -16.023439407348633
    8. '```' → logprob: -16.523439407348633
    9. '      ' → logprob: -16.898439407348633
    10. '	' → logprob: -17.023439407348633

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.64708495605737e-05
    2. 'elif' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.250066757202148
    4. 'else' → logprob: -16.62506675720215
    5. ' elif' → logprob: -17.00006675720215
    6. '	' → logprob: -17.50006675720215
    7. '      ' → logprob: -18.75006675720215
    8. '           ' → logprob: -19.12506675720215
    9. '	elif' → logprob: -19.75006675720215
    10. '```' → logprob: -20.37506675720215

Token 179: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.00010664248111424968
    2. '       ' → logprob: -9.250106811523438
    3. ' elif' → logprob: -11.500106811523438
    4. 'el' → logprob: -15.125106811523438
    5. '   ' → logprob: -17.250106811523438
    6. '	elif' → logprob: -17.875106811523438
    7. 'else' → logprob: -18.375106811523438
    8. '#elif' → logprob: -19.375106811523438
    9. 'elseif' → logprob: -19.625106811523438
    10. '           ' → logprob: -20.375106811523438

Token 180: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.14267732203006744
    2. 'd' → logprob: -2.0176773071289062
    3. ' ' → logprob: -14.642677307128906
    4. '   ' → logprob: -14.767677307128906
    5. '	d' → logprob: -14.892677307128906
    6. '(d' → logprob: -15.017677307128906
    7. '    ' → logprob: -15.017677307128906
    8. ' ' → logprob: -15.392677307128906
    9. 'c' → logprob: -17.267677307128906
    10. '  ' → logprob: -17.392677307128906

Token 181: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04302157461643219
    2. '+' → logprob: -3.1680216789245605
    3. ' ' → logprob: -11.293021202087402
    4. ' ' → logprob: -11.793021202087402
    5. ' plus' → logprob: -13.793021202087402
    6. '[' → logprob: -15.293021202087402
    7. ' ==' → logprob: -15.793021202087402
    8. '_' → logprob: -15.918021202087402
    9. ' +=' → logprob: -16.16802215576172
    10. '<' → logprob: -16.16802215576172

Token 182: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01814994215965271
    2. ' c' → logprob: -4.0181498527526855
    3. '	c' → logprob: -18.518150329589844
    4. ' ' → logprob: -18.768150329589844
    5. '_c' → logprob: -19.393150329589844
    6. '(c' → logprob: -19.393150329589844
    7. '$c' → logprob: -19.643150329589844
    8. '   ' → logprob: -19.643150329589844
    9. ')c' → logprob: -19.643150329589844
    10. '```' → logprob: -20.018150329589844

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019471932318992913
    2. 'r' → logprob: -8.625194549560547
    3. 'c' → logprob: -11.125194549560547
    4. '```' → logprob: -16.125194549560547
    5. ' c' → logprob: -16.875194549560547
    6. 'x' → logprob: -17.000194549560547
    7. 'rx' → logprob: -17.000194549560547
    8. ' ' → logprob: -17.500194549560547
    9. '**' → logprob: -17.625194549560547
    10. 'ir' → logprob: -18.000194549560547

Token 184: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.3438327843905427e-05
    2. 'c' → logprob: -10.87502384185791
    3. '_r' → logprob: -13.25002384185791
    4. '1' → logprob: -13.87502384185791
    5. '==' → logprob: -14.50002384185791
    6. 'x' → logprob: -15.62502384185791
    7. '   ' → logprob: -15.75002384185791
    8. ' ' → logprob: -16.000022888183594
    9. ' r' → logprob: -16.250022888183594
    10. '

' → logprob: -16.250022888183594

Token 185: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47409045696258545
    2. ' ==' → logprob: -0.9740904569625854
    3. '=' → logprob: -11.599090576171875
    4. ' ' → logprob: -12.974090576171875
    5. ' ' → logprob: -13.974090576171875
    6. ' =' → logprob: -14.974090576171875
    7. ')==' → logprob: -15.224090576171875
    8. ')' → logprob: -15.349090576171875
    9. '==
' → logprob: -16.349090576171875
    10. ']==' → logprob: -16.724090576171875

Token 186: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.31326186656951904
    2. ' c' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.938261032104492
    4. '	c' → logprob: -17.563261032104492
    5. '   ' → logprob: -17.938261032104492
    6. '(c' → logprob: -19.688261032104492
    7. '    ' → logprob: -19.938261032104492
    8. '       ' → logprob: -20.313261032104492
    9. ')c' → logprob: -20.438261032104492
    10. '  ' → logprob: -20.688261032104492

Token 187: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.069664333248511e-05
    2. 'r' → logprob: -10.875020980834961
    3. 'c' → logprob: -13.375020980834961
    4. ' ' → logprob: -16.00002098083496
    5. '1' → logprob: -18.75002098083496
    6. ' c' → logprob: -19.00002098083496
    7. '   ' → logprob: -19.00002098083496
    8. '```' → logprob: -19.12502098083496
    9. 're' → logprob: -19.87502098083496
    10. ''r' → logprob: -20.12502098083496

Token 188: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.9361264946837764e-07
    2. ' r' → logprob: -16.375
    3. 'р' → logprob: -17.125
    4. 'c' → logprob: -17.5
    5. '	r' → logprob: -17.75
    6. '_r' → logprob: -18.125
    7. ' ' → logprob: -19.125
    8. ''r' → logprob: -19.375
    9. '   ' → logprob: -19.5
    10. '```' → logprob: -19.5

Token 189: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038384294603019953
    2. ':
' → logprob: -5.628838539123535
    3. '           ' → logprob: -8.503838539123535
    4. '       ' → logprob: -10.503838539123535
    5. '   ' → logprob: -12.878838539123535
    6. '):' → logprob: -13.378838539123535
    7. ' :' → logprob: -13.753838539123535
    8. '               ' → logprob: -14.378838539123535
    9. ':
' → logprob: -14.378838539123535
    10. '):
' → logprob: -14.378838539123535

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.011373155459296e-05
    2. 'print' → logprob: -10.625030517578125
    3. '          ' → logprob: -13.125030517578125
    4. ' print' → logprob: -13.250030517578125
    5. '               ' → logprob: -14.500030517578125
    6. '   ' → logprob: -14.500030517578125
    7. '       ' → logprob: -14.500030517578125
    8. '		' → logprob: -15.750030517578125
    9. '	       ' → logprob: -16.000030517578125
    10. '         ' → logprob: -16.125030517578125

Token 191: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0031794982496649027
    2. ' print' → logprob: -5.753179550170898
    3. '1' → logprob: -13.253179550170898
    4. '           ' → logprob: -17.7531795501709
    5. '0' → logprob: -19.1281795501709
    6. '(print' → logprob: -19.5031795501709
    7. '4' → logprob: -19.6281795501709
    8. ' ' → logprob: -19.6281795501709
    9. '.print' → logprob: -20.2531795501709
    10. '	print' → logprob: -20.2531795501709

Token 192: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008615988306701183
    2. '1' → logprob: -4.758615970611572
    3. ' ' → logprob: -13.88361644744873
    4. '0' → logprob: -15.13361644744873
    5. ' (' → logprob: -15.75861644744873
    6. '(
' → logprob: -16.258615493774414
    7. '('' → logprob: -18.883615493774414
    8. '3' → logprob: -19.133615493774414
    9. '()' → logprob: -19.383615493774414
    10. '   ' → logprob: -19.383615493774414

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '0' → logprob: -20.5
    4. '   ' → logprob: -21.375
    5. '۱' → logprob: -21.625
    6. '１' → logprob: -22.0
    7. '১' → logprob: -22.375
    8. '१' → logprob: -22.75
    9. '  ' → logprob: -22.9375
    10. '```' → logprob: -22.9375

Token 194: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10338062793016434
    2. '):
' → logprob: -2.6033806800842285
    3. ')' → logprob: -3.7283806800842285
    4. ':' → logprob: -9.47838020324707
    5. ')
' → logprob: -9.85338020324707
    6. '       ' → logprob: -10.85338020324707
    7. '):
' → logprob: -12.72838020324707
    8. '   ' → logprob: -12.85338020324707
    9. ':
' → logprob: -12.97838020324707
    10. '):

' → logprob: -12.97838020324707

Token 195: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10065507888793945
    2. '       ' → logprob: -2.3506550788879395
    3. ' else' → logprob: -7.8506550788879395
    4. '           ' → logprob: -9.975654602050781
    5. '   ' → logprob: -12.225654602050781
    6. '               ' → logprob: -12.850654602050781
    7. '```' → logprob: -12.975654602050781
    8. 'print' → logprob: -13.350654602050781
    9. '	else' → logprob: -14.600654602050781
    10. '      ' → logprob: -16.60065460205078

Token 196: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.040995191782712936
    2. 'print' → logprob: -3.5409951210021973
    3. '       ' → logprob: -4.540995121002197
    4. '           ' → logprob: -8.415995597839355
    5. ' else' → logprob: -8.665995597839355
    6. '   ' → logprob: -9.040995597839355
    7. '0' → logprob: -13.165995597839355
    8. '               ' → logprob: -13.415995597839355
    9. '```' → logprob: -13.415995597839355
    10. '     ' → logprob: -14.665995597839355

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07261836528778076
    2. '           ' → logprob: -2.9476184844970703
    3. '(' → logprob: -4.69761848449707
    4. ':
' → logprob: -4.94761848449707
    5. '   ' → logprob: -7.19761848449707
    6. '       ' → logprob: -8.19761848449707
    7. 'print' → logprob: -8.44761848449707
    8. '(print' → logprob: -10.07261848449707
    9. ' print' → logprob: -10.69761848449707
    10. '          ' → logprob: -11.44761848449707

Token 198: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12840823829174042
    2. '           ' → logprob: -2.128408193588257
    3. ' print' → logprob: -7.128408432006836
    4. '       ' → logprob: -7.753408432006836
    5. '   ' → logprob: -8.628408432006836
    6. '0' → logprob: -9.628408432006836
    7. '               ' → logprob: -13.753408432006836
    8. ' ' → logprob: -14.503408432006836
    9. '```' → logprob: -14.503408432006836
    10. '          ' → logprob: -14.878408432006836

Token 199: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.4855663721391466e-05
    2. '0' → logprob: -11.250015258789062
    3. ' print' → logprob: -13.250015258789062
    4. '           ' → logprob: -18.000015258789062
    5. '   ' → logprob: -20.125015258789062
    6. '       ' → logprob: -20.625015258789062
    7. '	print' → logprob: -21.500015258789062
    8. ' ' → logprob: -23.125015258789062
    9. '.print' → logprob: -23.625015258789062
    10. '00' → logprob: -24.125015258789062

Token 200: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.1782583391759545e-05
    2. '0' → logprob: -10.375031471252441
    3. ' (' → logprob: -15.000031471252441
    4. '(
' → logprob: -16.250032424926758
    5. ' ' → logprob: -19.500032424926758
    6. '()' → logprob: -20.375032424926758
    7. '(

' → logprob: -20.750032424926758
    8. '('' → logprob: -20.875032424926758
    9. '((' → logprob: -21.000032424926758
    10. '```' → logprob: -21.125032424926758

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '۰' → logprob: -21.25
    4. ')' → logprob: -21.375
    5. '00' → logprob: -21.625
    6. '   ' → logprob: -22.25
    7. '０' → logprob: -22.5
    8. '٠' → logprob: -23.75
    9. '०' → logprob: -23.75
    10. '০' → logprob: -24.125

Token 202: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.694766489090398e-05
    2. ')
' → logprob: -9.625066757202148
    3. '))' → logprob: -15.500066757202148
    4. '')' → logprob: -15.875066757202148
    5. '   ' → logprob: -16.12506675720215
    6. ')}' → logprob: -16.37506675720215
    7. '")' → logprob: -16.50006675720215
    8. ')#' → logprob: -16.62506675720215
    9. '`)' → logprob: -17.00006675720215
    10. ')}}' → logprob: -17.00006675720215


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 200
Tokens correctement prédits (1ère position, stricte): 95
Tokens correctement prédits (1ère position, avec adaptation): 108
Tokens correctement prédits (top 10): 186
Précision stricte (1ère position): 47.50%
Précision adaptée (1ère position): 54.00%
Précision (top 10): 93.00%
================================================================================
