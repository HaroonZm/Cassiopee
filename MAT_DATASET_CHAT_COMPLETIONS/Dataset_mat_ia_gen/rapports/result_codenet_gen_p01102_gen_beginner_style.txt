================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def extract_parts(program):
    parts = []
    i = 0
    n = len(program)
    while i < n:
        if program[i] == '"':
            j = i + 1
            while j < n and program[j] != '"':
                j += 1
            # string literal is from i to j inclusive
            parts.append(program[i:j+1])
            i = j + 1
        else:
            j = i
            while j < n and program[j] != '"':
                j += 1
            parts.append(program[i:j])
            i = j
    return parts

def is_close(p1, p2):
    parts1 = extract_parts(p1)
    parts2 = extract_parts(p2)
    if len(parts1) != len(parts2):
        return False
    diff_count = 0
    for part1, part2 in zip(parts1, parts2):
        if part1 != part2:
            # differ, check if both are string literals and only one difference
            if not (part1.startswith('"') and part1.endswith('"') and part2.startswith('"') and part2.endswith('"')):
                return False
            diff_count += 1
            if diff_count > 1:
                return False
    if diff_count == 1:
        return True
    return False

while True:
    s1 = input()
    if s1 == '.':
        break
    s2 = input()
    if s1 == s2:
        print("IDENTICAL")
    elif is_close(s1, s2):
        print("CLOSE")
    else:
        print("DIFFERENT")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' extract' (ID: 13424)
  → Token d'amorce (pas de prédiction)

Token 2: '_parts' (ID: 81867)
  → Token d'amorce (pas de prédiction)

Token 3: '(program' (ID: 79745)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023018451407551765
    2. '_' → logprob: -4.1480183601379395
    3. '(_' → logprob: -5.7730183601379395
    4. '```' → logprob: -6.2730183601379395
    5. '(_:' → logprob: -7.7730183601379395
    6. '_parts' → logprob: -7.8980183601379395
    7. '():' → logprob: -8.898018836975098
    8. ':' → logprob: -9.023018836975098
    9. 'def' → logprob: -9.148018836975098
    10. '(:' → logprob: -9.398018836975098

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.031070634722709656
    2. ')' → logprob: -3.5310707092285156
    3. ':' → logprob: -8.156070709228516
    4. '_' → logprob: -8.406070709228516
    5. '):
' → logprob: -8.781070709228516
    6. '(' → logprob: -9.031070709228516
    7. '[' → logprob: -9.281070709228516
    8. '.' → logprob: -9.531070709228516
    9. ',' → logprob: -10.031070709228516
    10. ')_' → logprob: -10.031070709228516

Token 5: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4891614019870758
    2. '   ' → logprob: -1.3641613721847534
    3. '\' → logprob: -2.989161491394043
    4. ':' → logprob: -3.364161491394043
    5. ''' → logprob: -4.489161491394043
    6. '    
' → logprob: -5.114161491394043
    7. ''\' → logprob: -5.364161491394043
    8. '\n' → logprob: -5.489161491394043
    9. '"' → logprob: -5.489161491394043
    10. '``' → logprob: -5.614161491394043

Token 6: ' parts' (ID: 7881)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.46609458327293396
    2. '   ' → logprob: -1.3410946130752563
    3. '\n' → logprob: -3.091094493865967
    4. '\' → logprob: -3.966094493865967
    5. '``' → logprob: -4.091094493865967
    6. '`' → logprob: -4.591094493865967
    7. '       ' → logprob: -5.591094493865967
    8. '    
' → logprob: -5.966094493865967
    9. ''' → logprob: -6.091094493865967
    10. '"' → logprob: -6.341094493865967

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15446075797080994
    2. '[' → logprob: -2.4044606685638428
    3. ')' → logprob: -4.654460906982422
    4. '.' → logprob: -4.779460906982422
    5. ' =' → logprob: -4.779460906982422
    6. '```' → logprob: -4.779460906982422
    7. '[:]' → logprob: -5.779460906982422
    8. '_' → logprob: -5.904460906982422
    9. '(' → logprob: -6.279460906982422
    10. '['' → logprob: -6.404460906982422

Token 8: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.44960182905197144
    2. ' program' → logprob: -1.0746018886566162
    3. '[]' → logprob: -4.574601650238037
    4. 'program' → logprob: -4.574601650238037
    5. ' {}' → logprob: -10.574602127075195
    6. ' ' → logprob: -11.449602127075195
    7. ' programs' → logprob: -12.074602127075195
    8. '(program' → logprob: -12.199602127075195
    9. ' set' → logprob: -12.699602127075195
    10. '{}' → logprob: -13.199602127075195

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30420657992362976
    2. '    
' → logprob: -2.054206609725952
    3. '\' → logprob: -2.554206609725952
    4. '\n' → logprob: -4.054206371307373
    5. '```' → logprob: -4.554206371307373
    6. '    ' → logprob: -5.304206371307373
    7. '
' → logprob: -5.679206371307373
    8. '     
' → logprob: -5.929206371307373
    9. '  
' → logprob: -6.054206371307373
    10. '   
' → logprob: -6.304206371307373

Token 10: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4557528793811798
    2. '```' → logprob: -1.5807528495788574
    3. '\n' → logprob: -3.0807528495788574
    4. '\' → logprob: -3.0807528495788574
    5. '    
' → logprob: -3.7057528495788574
    6. '`' → logprob: -4.330752849578857
    7. '``' → logprob: -4.955752849578857
    8. ' for' → logprob: -5.205752849578857
    9. 'for' → logprob: -5.455752849578857
    10. '    ' → logprob: -5.705752849578857

Token 11: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4088155925273895
    2. 'n' → logprob: -1.658815622329712
    3. '=' → logprob: -2.033815622329712
    4. '+' → logprob: -4.408815383911133
    5. 's' → logprob: -7.408815383911133
    6. 'nd' → logprob: -7.783815383911133
    7. '+=' → logprob: -8.533815383911133
    8. ' =' → logprob: -8.658815383911133
    9. '[' → logprob: -9.033815383911133
    10. 'd' → logprob: -9.283815383911133

Token 12: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993821263313293
    2. ' ' → logprob: -2.6949381828308105
    3. '1' → logprob: -13.319938659667969
    4. '2' → logprob: -16.56993865966797
    5. ' len' → logprob: -17.56993865966797
    6. ' ' → logprob: -17.56993865966797
    7. '```' → logprob: -17.56993865966797
    8. '۰' → logprob: -17.81993865966797
    9. '4' → logprob: -18.31993865966797
    10. ')' → logprob: -18.69493865966797

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '1' → logprob: -16.375097274780273
    4. '   ' → logprob: -16.875097274780273
    5. '```' → logprob: -17.937597274780273
    6. '=' → logprob: -18.062597274780273
    7. '[' → logprob: -18.437597274780273
    8. 'def' → logprob: -18.625097274780273
    9. ')' → logprob: -18.750097274780273
    10. 'n' → logprob: -19.000097274780273

Token 14: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8058565855026245
    2. '
' → logprob: -1.8058565855026245
    3. ' ' → logprob: -2.305856704711914
    4. '```' → logprob: -2.680856704711914
    5. '    
' → logprob: -3.180856704711914
    6. 'while' → logprob: -3.430856704711914
    7. ' while' → logprob: -3.680856704711914
    8. ':' → logprob: -4.055856704711914
    9. '<|end|>' → logprob: -4.055856704711914
    10. '   
' → logprob: -4.055856704711914

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6974976062774658
    2. ' ' → logprob: -1.8224976062774658
    3. '
' → logprob: -2.447497606277466
    4. ':' → logprob: -2.822497606277466
    5. ' while' → logprob: -3.197497606277466
    6. '    
' → logprob: -3.322497606277466
    7. '   
' → logprob: -3.697497606277466
    8. 'while' → logprob: -3.947497606277466
    9. '```' → logprob: -4.197497367858887
    10. '  
' → logprob: -4.447497367858887

Token 16: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36602982878685
    2. 'while' → logprob: -1.9910298585891724
    3. ' while' → logprob: -2.616029739379883
    4. 'w' → logprob: -2.866029739379883
    5. '```' → logprob: -3.616029739379883
    6. ' ' → logprob: -4.866029739379883
    7. '    ' → logprob: -7.116029739379883
    8. 'n' (adapté à ' n') → logprob: -7.241029739379883
    9. ' w' → logprob: -7.366029739379883
    10. '  ' → logprob: -7.491029739379883

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05866425484418869
    2. '=' → logprob: -2.933664321899414
    3. ' ' → logprob: -5.683664321899414
    4. '  ' → logprob: -9.433664321899414
    5. ',' → logprob: -9.808664321899414
    6. ' ,' → logprob: -10.308664321899414
    7. ' ==' → logprob: -10.433664321899414
    8. '[' → logprob: -10.808664321899414
    9. ')' → logprob: -11.058664321899414
    10. '_' → logprob: -11.183664321899414

Token 18: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.005233882926404476
    2. 'len' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.380233764648438
    4. '=len' → logprob: -17.005233764648438
    5. '(len' → logprob: -17.380233764648438
    6. '	len' → logprob: -18.505233764648438
    7. '   ' → logprob: -19.630233764648438
    8. ' length' → logprob: -19.755233764648438
    9. '[len' → logprob: -19.880233764648438
    10. '<len' → logprob: -20.005233764648438

Token 19: '(program' (ID: 79745)
  Prédit: '(program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(program' → logprob: -0.003931048791855574
    2. '(' → logprob: -5.628931045532227
    3. 'program' → logprob: -8.128931045532227
    4. '(parts' → logprob: -11.003931045532227
    5. ' (' → logprob: -11.378931045532227
    6. ' program' → logprob: -12.253931045532227
    7. '(pro' → logprob: -13.753931045532227
    8. ')' → logprob: -14.753931045532227
    9. '(code' → logprob: -15.378931045532227
    10. '(
' → logprob: -15.628931045532227

Token 20: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.157039049663581e-05
    2. ' )' → logprob: -10.375051498413086
    3. '   ' → logprob: -11.250051498413086
    4. '`)' → logprob: -12.875051498413086
    5. '):' → logprob: -13.750051498413086
    6. '')' → logprob: -14.250051498413086
    7. ')
' → logprob: -14.250051498413086
    8. ' ' → logprob: -14.250051498413086
    9. ')))' → logprob: -15.125051498413086
    10. '))' → logprob: -15.375051498413086

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0296891927719116
    2. '
' → logprob: -1.9046891927719116
    3. '    
' → logprob: -1.9046891927719116
    4. ':' → logprob: -2.404689311981201
    5. '```' → logprob: -2.529689311981201
    6. '  
' → logprob: -3.279689311981201
    7. ':
' → logprob: -3.529689311981201
    8. ' ' → logprob: -3.654689311981201
    9. 'while' → logprob: -3.904689311981201
    10. ' 
' → logprob: -4.029689311981201

Token 22: ' while' (ID: 2049)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2884173393249512
    2. '   ' → logprob: -1.9134173393249512
    3. 'while' (adapté à ' while') → logprob: -2.038417339324951
    4. 'w' → logprob: -2.038417339324951
    5. ' while' → logprob: -2.163417339324951
    6. ':' → logprob: -2.288417339324951
    7. ' ' → logprob: -2.663417339324951
    8. '\' → logprob: -4.913417339324951
    9. '``' → logprob: -5.538417339324951
    10. '\n' → logprob: -5.538417339324951

Token 23: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004912092816084623
    2. 'i' → logprob: -5.37991189956665
    3. ' ' → logprob: -8.254912376403809
    4. ' ' → logprob: -12.004912376403809
    5. '<|end|>' → logprob: -12.254912376403809
    6. '  ' → logprob: -12.379912376403809
    7. ' True' → logprob: -12.379912376403809
    8. '    ' → logprob: -13.129912376403809
    9. '(i' → logprob: -13.254912376403809
    10. ' not' → logprob: -13.379912376403809

Token 24: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1131952777504921
    2. '<' → logprob: -2.2381951808929443
    3. ' ' → logprob: -8.113195419311523
    4. '<len' → logprob: -11.113195419311523
    5. ' <=' → logprob: -11.363195419311523
    6. '[' → logprob: -11.488195419311523
    7. '<|end|>' → logprob: -12.113195419311523
    8. '<size' → logprob: -12.363195419311523
    9. '<n' → logprob: -12.863195419311523
    10. '<=' → logprob: -12.863195419311523

Token 25: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07889540493488312
    2. 'n' → logprob: -2.578895330429077
    3. ' ' → logprob: -12.578895568847656
    4. '	n' → logprob: -14.203895568847656
    5. 'len' → logprob: -14.828895568847656
    6. ' ' → logprob: -14.828895568847656
    7. ' len' → logprob: -15.203895568847656
    8. '_n' → logprob: -15.953895568847656
    9. '<n' → logprob: -16.203895568847656
    10. ')n' → logprob: -16.328895568847656

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013238313840702176
    2. ' :' → logprob: -9.87513256072998
    3. ':
' → logprob: -10.37513256072998
    4. ':**' → logprob: -10.87513256072998
    5. '):' → logprob: -11.37513256072998
    6. '   ' → logprob: -11.62513256072998
    7. ' and' → logprob: -12.75013256072998
    8. '':' → logprob: -13.37513256072998
    9. ':def' → logprob: -14.25013256072998
    10. '       ' → logprob: -14.37513256072998

Token 27: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05063348263502121
    2. '    ' → logprob: -3.300633430480957
    3. '   ' → logprob: -5.175633430480957
    4. '       ' → logprob: -5.925633430480957
    5. '     
' → logprob: -6.550633430480957
    6. ' 
' → logprob: -7.175633430480957
    7. '  ' → logprob: -7.425633430480957
    8. ':' → logprob: -8.925633430480957
    9. '     ' → logprob: -9.050633430480957
    10. '        ' → logprob: -9.050633430480957

Token 28: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.452640175819397
    2. ' if' → logprob: -1.702640175819397
    3. 'if' (adapté à ' if') → logprob: -2.5776400566101074
    4. 'c' → logprob: -3.0776400566101074
    5. '   ' → logprob: -3.5776400566101074
    6. 'p' → logprob: -4.702640056610107
    7. '    ' → logprob: -4.952640056610107
    8. '  ' → logprob: -5.702640056610107
    9. '```' → logprob: -5.952640056610107
    10. 'i' → logprob: -6.077640056610107

Token 29: ' program' (ID: 2193)
  Prédit: ' program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' program' → logprob: -0.20328307151794434
    2. 'program' → logprob: -1.8282830715179443
    3. ' ' → logprob: -4.078283309936523
    4. '(program' → logprob: -5.453283309936523
    5. '<|end|>' → logprob: -6.953283309936523
    6. ' not' → logprob: -7.453283309936523
    7. ' isinstance' → logprob: -9.328283309936523
    8. ' (' → logprob: -9.703283309936523
    9. ' )' → logprob: -9.828283309936523
    10. ' '' → logprob: -9.953283309936523

Token 30: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06199177727103233
    2. '[' → logprob: -2.8119916915893555
    3. ' [' → logprob: -11.936991691589355
    4. '```' → logprob: -12.311991691589355
    5. '[
' → logprob: -12.811991691589355
    6. '\[' → logprob: -12.936991691589355
    7. '   ' → logprob: -13.311991691589355
    8. '[int' → logprob: -13.811991691589355
    9. '[I' → logprob: -13.811991691589355
    10. '[]' → logprob: -14.561991691589355

Token 31: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9017074108123779
    2. ' ==' → logprob: -1.026707410812378
    3. '.' → logprob: -1.651707410812378
    4. ' in' → logprob: -3.901707410812378
    5. '.is' → logprob: -4.401707649230957
    6. '[' → logprob: -5.901707649230957
    7. ']' → logprob: -6.276707649230957
    8. '=' → logprob: -6.901707649230957
    9. ' ' → logprob: -7.151707649230957
    10. ' .' → logprob: -7.151707649230957

Token 32: ' ==' (ID: 951)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5067881941795349
    2. ' ==' → logprob: -1.2567882537841797
    3. '==' → logprob: -2.6317882537841797
    4. ' in' → logprob: -4.25678825378418
    5. '[' → logprob: -4.75678825378418
    6. '.is' → logprob: -4.88178825378418
    7. '=' → logprob: -5.50678825378418
    8. '.startswith' → logprob: -6.50678825378418
    9. ' .' → logprob: -6.88178825378418
    10. ' ' → logprob: -7.38178825378418

Token 33: ' '"' (ID: 15197)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2112637609243393
    2. '"' → logprob: -2.336263656616211
    3. ''"' → logprob: -2.836263656616211
    4. ' '' → logprob: -3.961263656616211
    5. ' '"'' → logprob: -4.586263656616211
    6. '(' → logprob: -6.836263656616211
    7. ' '('' → logprob: -6.836263656616211
    8. ' "' → logprob: -7.211263656616211
    9. ' "'"' → logprob: -7.961263656616211
    10. '"""' → logprob: -8.211263656616211

Token 34: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18639351427555084
    2. '"' → logprob: -2.0613934993743896
    3. '':' → logprob: -4.186393737792969
    4. ''' → logprob: -4.686393737792969
    5. ''"' → logprob: -5.061393737792969
    6. '":' → logprob: -5.311393737792969
    7. '"""' → logprob: -5.811393737792969
    8. 's' → logprob: -7.311393737792969
    9. '):' → logprob: -7.436393737792969
    10. '{' → logprob: -8.061393737792969

Token 35: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12953120470046997
    2. '           ' → logprob: -2.879531145095825
    3. '"' → logprob: -3.629531145095825
    4. '   ' → logprob: -4.504531383514404
    5. '<|end|>' → logprob: -4.754531383514404
    6. '<|end|>' → logprob: -5.504531383514404
    7. 'token' → logprob: -6.004531383514404
    8. 'i' → logprob: -6.129531383514404
    9. ' i' → logprob: -6.254531383514404
    10. ' token' → logprob: -6.379531383514404

Token 36: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3295689821243286
    2. '"' → logprob: -1.4545689821243286
    3. 'i' → logprob: -1.5795689821243286
    4. ' i' → logprob: -2.704568862915039
    5. 'token' → logprob: -2.829568862915039
    6. '   ' → logprob: -3.079568862915039
    7. '       ' → logprob: -3.829568862915039
    8. ' token' → logprob: -3.954568862915039
    9. 'start' → logprob: -4.204568862915039
    10. ' parts' → logprob: -4.329568862915039

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8827939033508301
    2. '+=' → logprob: -1.38279390335083
    3. '+' → logprob: -2.00779390335083
    4. ' =' → logprob: -2.13279390335083
    5. ' +=' → logprob: -2.50779390335083
    6. '<|end|>' → logprob: -7.63279390335083
    7. '++' → logprob: -8.757793426513672
    8. ' ' → logprob: -8.882793426513672
    9. ' +' → logprob: -9.382793426513672
    10. ')' → logprob: -9.632793426513672

Token 38: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3484742045402527
    2. 'i' → logprob: -1.2234742641448975
    3. 'program' → logprob: -11.598474502563477
    4. ' ' → logprob: -11.848474502563477
    5. '(i' → logprob: -12.348474502563477
    6. ' program' → logprob: -12.723474502563477
    7. '   ' → logprob: -13.598474502563477
    8. '+' → logprob: -14.098474502563477
    9. '	i' → logprob: -14.223474502563477
    10. ' (' → logprob: -14.348474502563477

Token 39: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020763427019119
    2. ' +' → logprob: -2.350207567214966
    3. '<|end|>' → logprob: -14.850207328796387
    4. ' +
' → logprob: -15.475207328796387
    5. '+
' → logprob: -15.475207328796387
    6. '+j' → logprob: -16.100208282470703
    7. ' plus' → logprob: -17.475208282470703
    8. '<|end|>' → logprob: -17.600208282470703
    9. ' ' → logprob: -17.975208282470703
    10. '＋' → logprob: -18.100208282470703

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '2' → logprob: -16.125051498413086
    4. '<|end|>' → logprob: -16.375051498413086
    5. '```' → logprob: -17.000051498413086
    6. '   ' → logprob: -17.625051498413086
    7. '0' → logprob: -18.500051498413086
    8. '<|end|>' → logprob: -18.500051498413086
    9. '...' → logprob: -18.625051498413086
    10. '+' → logprob: -19.875051498413086

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -16.250003814697266
    4. '...' → logprob: -18.625003814697266
    5. '   ' → logprob: -18.750003814697266
    6. '2' → logprob: -18.812503814697266
    7. '+' → logprob: -18.812503814697266
    8. '<|end|>' → logprob: -19.250003814697266
    9. '۱' → logprob: -19.437503814697266
    10. '<|end|>' → logprob: -19.500003814697266

Token 42: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.002468047896400094
    2. ' while' → logprob: -6.252468109130859
    3. '<|end|>' → logprob: -7.627468109130859
    4. '<|end|>' → logprob: -10.87746810913086
    5. '           ' → logprob: -11.25246810913086
    6. '	while' → logprob: -11.75246810913086
    7. 'While' → logprob: -12.25246810913086
    8. '```' → logprob: -13.00246810913086
    9. 'hile' → logprob: -13.87746810913086
    10. '       ' → logprob: -14.00246810913086

Token 45: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3621538579463959
    2. ' j' → logprob: -1.2371538877487183
    3. 'program' → logprob: -4.612154006958008
    4. ' program' → logprob: -5.612154006958008
    5. ' ' → logprob: -11.362154006958008
    6. 'True' → logprob: -12.737154006958008
    7. ' True' → logprob: -12.862154006958008
    8. '   ' → logprob: -12.987154006958008
    9. '	j' → logprob: -13.112154006958008
    10. ' not' → logprob: -13.112154006958008

Token 46: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.30425819754600525
    2. '<' → logprob: -1.4292582273483276
    3. '<n' → logprob: -3.804258108139038
    4. '<len' → logprob: -7.554258346557617
    5. '<size' → logprob: -11.804258346557617
    6. '<|end|>' → logprob: -12.054258346557617
    7. 'n' → logprob: -12.304258346557617
    8. '<char' → logprob: -12.304258346557617
    9. '<num' → logprob: -12.679258346557617
    10. ' ' → logprob: -12.679258346557617

Token 47: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008614808320999146
    2. ' n' → logprob: -4.758615016937256
    3. '	n' → logprob: -16.383615493774414
    4. 'len' → logprob: -16.508615493774414
    5. '<|end|>' → logprob: -16.883615493774414
    6. ' ' → logprob: -17.008615493774414
    7. ')n' → logprob: -17.008615493774414
    8. '   ' → logprob: -18.008615493774414
    9. '<n' → logprob: -18.258615493774414
    10. 'program' → logprob: -18.258615493774414

Token 48: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01603507250547409
    2. 'and' → logprob: -4.141035079956055
    3. ' ' → logprob: -15.016035079956055
    4. '<|end|>' → logprob: -15.516035079956055
    5. '	and' → logprob: -16.391035079956055
    6. '   ' → logprob: -16.891035079956055
    7. '    ' → logprob: -16.891035079956055
    8. '           ' → logprob: -17.141035079956055
    9. '```' → logprob: -17.391035079956055
    10. '            ' → logprob: -17.891035079956055

Token 49: ' program' (ID: 2193)
  Prédit: ' program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' program' → logprob: -0.34950920939445496
    2. 'program' → logprob: -1.2245092391967773
    3. '(program' → logprob: -6.974509239196777
    4. ' (' → logprob: -9.349509239196777
    5. '   ' → logprob: -10.599509239196777
    6. ' not' → logprob: -12.724509239196777
    7. 'not' → logprob: -13.349509239196777
    8. '_program' → logprob: -13.474509239196777
    9. '.program' → logprob: -13.662009239196777
    10. '```' → logprob: -13.662009239196777

Token 50: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.625000953674316
    3. '```' → logprob: -15.625000953674316
    4. '[i' → logprob: -15.750000953674316
    5. 'j' → logprob: -16.5
    6. ' [' → logprob: -17.75
    7. '   ' → logprob: -17.75
    8. ')[' → logprob: -18.5
    9. '	j' → logprob: -18.5
    10. '[js' → logprob: -18.625

Token 51: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1491243988275528
    2. '!=' → logprob: -2.0241243839263916
    3. '!' → logprob: -5.399124622344971
    4. '!="' → logprob: -6.899124622344971
    5. '!='' → logprob: -7.649124622344971
    6. ' !' → logprob: -8.899124145507812
    7. ' not' → logprob: -9.024124145507812
    8. ']!=' → logprob: -9.399124145507812
    9. '```' → logprob: -10.649124145507812
    10. '   ' → logprob: -10.899124145507812

Token 52: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.028590023517608643
    2. '!=' → logprob: -3.653589963912964
    3. '!' → logprob: -7.278590202331543
    4. '!="' → logprob: -7.278590202331543
    5. ' not' → logprob: -7.653590202331543
    6. '!='' → logprob: -7.778590202331543
    7. ' !' → logprob: -11.528590202331543
    8. 'not' → logprob: -14.028590202331543
    9. ' ' → logprob: -14.028590202331543
    10. '!=(' → logprob: -14.653590202331543

Token 53: ' '"' (ID: 15197)
  Prédit: ''"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''"' → logprob: -0.13048800826072693
    2. ' '"' → logprob: -2.3804879188537598
    3. '"' → logprob: -3.6304879188537598
    4. ' '"'' → logprob: -5.75548791885376
    5. '":' → logprob: -9.505488395690918
    6. ' ' → logprob: -10.630488395690918
    7. ' "' → logprob: -10.880488395690918
    8. ':' → logprob: -12.005488395690918
    9. '('"' → logprob: -12.130488395690918
    10. '""' → logprob: -12.130488395690918

Token 54: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0536993183195591
    2. '":' → logprob: -3.303699254989624
    3. ':
' → logprob: -4.678699493408203
    4. '"' → logprob: -5.303699493408203
    5. '':' → logprob: -7.553699493408203
    6. ' and' → logprob: -8.928699493408203
    7. '       ' → logprob: -9.053699493408203
    8. '":
' → logprob: -9.178699493408203
    9. '):' → logprob: -9.553699493408203
    10. '```' → logprob: -10.053699493408203

Token 55: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14863000810146332
    2. 'j' → logprob: -2.398629903793335
    3. '           ' → logprob: -3.648629903793335
    4. '<|end|>' → logprob: -4.898630142211914
    5. ' j' → logprob: -5.148630142211914
    6. '<|end|>' → logprob: -6.148630142211914
    7. ':
' → logprob: -6.648630142211914
    8. '   ' → logprob: -7.148630142211914
    9. ':' → logprob: -7.398630142211914
    10. '
' → logprob: -7.648630142211914

Token 56: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5232536792755127
    2. 'j' (adapté à ' j') → logprob: -0.8982536792755127
    3. '               ' → logprob: -9.898253440856934
    4. '   ' → logprob: -10.773253440856934
    5. '           ' → logprob: -10.898253440856934
    6. '	j' → logprob: -11.898253440856934
    7. '                   ' → logprob: -12.148253440856934
    8. '                ' → logprob: -12.898253440856934
    9. '```' → logprob: -12.898253440856934
    10. ' ' → logprob: -13.023253440856934

Token 57: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.922065258026123
    2. '+=' → logprob: -1.172065258026123
    3. '+' → logprob: -1.297065258026123
    4. '<|end|>' → logprob: -4.297065258026123
    5. ' +' → logprob: -5.547065258026123
    6. '<|end|>' → logprob: -7.172065258026123
    7. '++' → logprob: -7.797065258026123
    8. '=' → logprob: -8.547065734863281
    9. ')' → logprob: -8.672065734863281
    10. ' ' → logprob: -10.172065734863281

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '```' → logprob: -16.125032424926758
    4. '   ' → logprob: -16.500032424926758
    5. '<|end|>' → logprob: -18.125032424926758
    6. '           ' → logprob: -18.375032424926758
    7. '+' → logprob: -19.312532424926758
    8. '<|end|>' → logprob: -19.687532424926758
    9. '  ' → logprob: -19.812532424926758
    10. '               ' → logprob: -20.062532424926758

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -19.875
    4. '<|end|>' → logprob: -20.875
    5. '`' → logprob: -22.25
    6. '۱' → logprob: -22.75
    7. '+' → logprob: -23.25
    8. '१' → logprob: -23.375
    9. ')' → logprob: -23.5
    10. '১' → logprob: -23.75

Token 60: '
' (ID: 198)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.19999785721302032
    2. '<|end|>' → logprob: -2.574997901916504
    3. '           ' → logprob: -3.324997901916504
    4. '       ' → logprob: -3.949997901916504
    5. ':' → logprob: -4.074997901916504
    6. '```' → logprob: -5.074997901916504
    7. '<|end|>' → logprob: -5.824997901916504
    8. '\' → logprob: -5.949997901916504
    9. ')' → logprob: -5.949997901916504
    10. '               ' → logprob: -5.949997901916504

Token 61: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1222503185272217
    2. '       ' → logprob: -1.2472503185272217
    3. '<|end|>' → logprob: -1.9972503185272217
    4. ':' → logprob: -2.2472503185272217
    5. '"' → logprob: -3.4972503185272217
    6. '               ' → logprob: -3.8722503185272217
    7. '#' → logprob: -4.122250556945801
    8. ')' → logprob: -4.122250556945801
    9. '   ' → logprob: -4.247250556945801
    10. ' ' → logprob: -4.497250556945801

Token 62: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20590254664421082
    2. '       ' → logprob: -2.330902576446533
    3. '"' → logprob: -2.580902576446533
    4. '               ' → logprob: -5.330902576446533
    5. ')' → logprob: -6.080902576446533
    6. '"""' → logprob: -6.705902576446533
    7. '<|end|>' → logprob: -6.705902576446533
    8. '   ' → logprob: -7.205902576446533
    9. ']' → logprob: -7.830902576446533
    10. ':' → logprob: -8.080902099609375

Token 63: ' string' (ID: 1621)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.21007892489433289
    2. '           ' → logprob: -2.5850789546966553
    3. ' if' → logprob: -2.8350789546966553
    4. 'parts' → logprob: -3.9600789546966553
    5. '       ' → logprob: -4.335078716278076
    6. 'j' → logprob: -5.085078716278076
    7. 'if' → logprob: -5.335078716278076
    8. '   ' → logprob: -5.585078716278076
    9. '"' → logprob: -6.085078716278076
    10. ' j' → logprob: -6.210078716278076

Token 64: ' literal' (ID: 41271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9581548571586609
    2. 's' → logprob: -1.9581549167633057
    3. '<|end|>' → logprob: -2.0831549167633057
    4. ' parts' → logprob: -2.4581549167633057
    5. '_parts' → logprob: -2.5831549167633057
    6. 'parts' → logprob: -3.0831549167633057
    7. '<|end|>' → logprob: -3.3331549167633057
    8. ' ' → logprob: -3.4581549167633057
    9. '       ' → logprob: -3.7081549167633057
    10. '   ' → logprob: -3.9581549167633057

Token 65: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24226659536361694
    2. '       ' → logprob: -1.7422666549682617
    3. ')' → logprob: -3.4922666549682617
    4. '<|end|>' → logprob: -5.117266654968262
    5. ' parts' → logprob: -6.867266654968262
    6. '   ' → logprob: -7.742266654968262
    7. 'parts' → logprob: -7.742266654968262
    8. '               ' → logprob: -7.867266654968262
    9. '<|end|>' → logprob: -7.867266654968262
    10. ',' → logprob: -8.492266654968262

Token 66: ' from' (ID: 591)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.27977532148361206
    2. '           ' → logprob: -1.6547753810882568
    3. '"' → logprob: -4.404775142669678
    4. ')' → logprob: -4.404775142669678
    5. '       ' → logprob: -4.904775142669678
    6. 'parts' → logprob: -4.904775142669678
    7. ' not' → logprob: -6.029775142669678
    8. ':' → logprob: -6.404775142669678
    9. ' "' → logprob: -7.029775142669678
    10. '")' → logprob: -7.154775142669678

Token 67: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5233280658721924
    2. 'i' → logprob: -0.8983280658721924
    3. ' program' → logprob: -8.773327827453613
    4. 'program' → logprob: -10.898327827453613
    5. '   ' → logprob: -11.523327827453613
    6. ' ' → logprob: -12.023327827453613
    7. '	i' → logprob: -12.648327827453613
    8. '           ' → logprob: -12.773327827453613
    9. '```' → logprob: -13.023327827453613
    10. '(i' → logprob: -13.148327827453613

Token 68: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.0577781200408936
    2. 'j' → logprob: -1.5577781200408936
    3. ':' → logprob: -1.6827781200408936
    4. ':j' → logprob: -2.0577781200408936
    5. 'i' → logprob: -2.6827781200408936
    6. ' :' → logprob: -4.432778358459473
    7. ' j' → logprob: -4.432778358459473
    8. ' ' → logprob: -4.682778358459473
    9. ' i' → logprob: -5.057778358459473
    10. '..' → logprob: -5.557778358459473

Token 69: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5759426951408386
    2. ' j' → logprob: -0.8259426951408386
    3. ' ' → logprob: -12.950942993164062
    4. '<|end|>' → logprob: -14.825942993164062
    5. '	j' → logprob: -15.825942993164062
    6. '   ' → logprob: -16.700942993164062
    7. ',j' → logprob: -17.200942993164062
    8. ' (' → logprob: -17.325942993164062
    9. '$j' → logprob: -17.325942993164062
    10. '<|end|>' → logprob: -17.450942993164062

Token 70: ' inclusive' (ID: 29482)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6138373017311096
    2. '           ' → logprob: -1.1138372421264648
    3. '       ' → logprob: -2.363837242126465
    4. '<|end|>' → logprob: -4.863837242126465
    5. ']' → logprob: -5.363837242126465
    6. ')' → logprob: -5.488837242126465
    7. ':' → logprob: -5.613837242126465
    8. ' +' → logprob: -5.613837242126465
    9. ' ' → logprob: -6.238837242126465
    10. '   ' → logprob: -6.488837242126465

Token 71: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21865998208522797
    2. '       ' → logprob: -1.8436599969863892
    3. ')' → logprob: -4.4686598777771
    4. ']' → logprob: -5.3436598777771
    5. '               ' → logprob: -5.3436598777771
    6. '<|end|>' → logprob: -5.5936598777771
    7. ':' → logprob: -5.7186598777771
    8. ',' → logprob: -6.2186598777771
    9. '            ' → logprob: -6.3436598777771
    10. '   ' → logprob: -6.5936598777771

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011938509531319141
    2. '       ' → logprob: -4.636938571929932
    3. '<|end|>' → logprob: -7.261938571929932
    4. '               ' → logprob: -7.761938571929932
    5. ')' → logprob: -8.136938095092773
    6. ',' → logprob: -8.636938095092773
    7. '   ' → logprob: -8.886938095092773
    8. '<|end|>' → logprob: -9.136938095092773
    9. ':' → logprob: -9.636938095092773
    10. '            ' → logprob: -10.011938095092773

Token 73: ' parts' (ID: 7881)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1535412073135376
    2. '       ' → logprob: -2.653541088104248
    3. ' parts' → logprob: -3.028541088104248
    4. ')' → logprob: -4.778541088104248
    5. 'parts' (adapté à ' parts') → logprob: -5.153541088104248
    6. '            ' → logprob: -5.778541088104248
    7. '   ' → logprob: -6.528541088104248
    8. '               ' → logprob: -6.903541088104248
    9. '        ' → logprob: -6.903541088104248
    10. ',' → logprob: -7.278541088104248

Token 74: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.020809410139918327
    2. '.' → logprob: -3.8958094120025635
    3. '.extend' → logprob: -8.270809173583984
    4. '.ap' → logprob: -12.645809173583984
    5. '.add' → logprob: -13.520809173583984
    6. '.app' → logprob: -13.645809173583984
    7. ' .' → logprob: -13.770809173583984
    8. '.Append' → logprob: -13.770809173583984
    9. '.push' → logprob: -13.895809173583984
    10. '.py' → logprob: -14.020809173583984

Token 75: '(program' (ID: 79745)
  Prédit: '(program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(program' → logprob: -0.002488737925887108
    2. '(' → logprob: -6.002488613128662
    3. '(pro' → logprob: -11.62748908996582
    4. ' (' → logprob: -13.12748908996582
    5. '('' → logprob: -14.50248908996582
    6. '((' → logprob: -14.75248908996582
    7. 'program' → logprob: -14.87748908996582
    8. '("("' → logprob: -15.00248908996582
    9. '(protocol' → logprob: -16.00248908996582
    10. '(project' → logprob: -16.25248908996582

Token 76: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004265044699423015
    2. '[' → logprob: -7.875426292419434
    3. '[:' → logprob: -10.000426292419434
    4. '[
' → logprob: -14.500426292419434
    5. '[j' → logprob: -15.250426292419434
    6. 'i' → logprob: -16.50042724609375
    7. '[:]' → logprob: -16.50042724609375
    8. '[I' → logprob: -17.25042724609375
    9. ')' → logprob: -17.75042724609375
    10. ' [' → logprob: -18.12542724609375

Token 77: ':j' (ID: 123557)
  Prédit: ':j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':j' → logprob: -0.006752071436494589
    2. ':' → logprob: -5.006752014160156
    3. ' :' → logprob: -10.256752014160156
    4. 'j' → logprob: -13.881752014160156
    5. ':(' → logprob: -15.756752014160156
    6. '+' → logprob: -16.006752014160156
    7. ',j' → logprob: -16.131752014160156
    8. ' ' → logprob: -16.381752014160156
    9. '   ' → logprob: -16.631752014160156
    10. '-' → logprob: -17.131752014160156

Token 78: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5213274309644476e-05
    2. ' +' → logprob: -11.125015258789062
    3. '+j' → logprob: -14.875015258789062
    4. '+i' → logprob: -18.000015258789062
    5. '＋' → logprob: -18.875015258789062
    6. ']+' → logprob: -20.000015258789062
    7. '+
' → logprob: -20.875015258789062
    8. '1' → logprob: -22.000015258789062
    9. '+k' → logprob: -22.000015258789062
    10. '+]' → logprob: -22.000015258789062

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '])' → logprob: -14.375000953674316
    3. ']' → logprob: -14.875000953674316
    4. ' ' → logprob: -15.875000953674316
    5. '2' → logprob: -16.875001907348633
    6. '"' → logprob: -16.875001907348633
    7. '-' → logprob: -18.500001907348633
    8. ')' → logprob: -18.625001907348633
    9. '```' → logprob: -18.750001907348633
    10. '"])' → logprob: -19.125001907348633

Token 80: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.236549335066229e-05
    2. ')
' → logprob: -10.875021934509277
    3. '))' → logprob: -13.500021934509277
    4. ' )' → logprob: -14.875021934509277
    5. ')`' → logprob: -14.875021934509277
    6. '])' → logprob: -15.125021934509277
    7. ']' → logprob: -15.625021934509277
    8. '`)' → logprob: -16.000022888183594
    9. '")' → logprob: -16.125022888183594
    10. '       ' → logprob: -16.125022888183594

Token 81: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19675388932228088
    2. '       ' → logprob: -2.321753978729248
    3. '<|end|>' → logprob: -2.696753978729248
    4. '            
' → logprob: -5.946753978729248
    5. '```' → logprob: -5.946753978729248
    6. '<|end|>' → logprob: -5.946753978729248
    7. '
' → logprob: -6.946753978729248
    8. '        
' → logprob: -7.071753978729248
    9. ')' → logprob: -7.696753978729248
    10. '               ' → logprob: -7.696753978729248

Token 82: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19261005520820618
    2. 'i' (adapté à ' i') → logprob: -1.8176100254058838
    3. ' i' → logprob: -4.442610263824463
    4. '```' → logprob: -7.942610263824463
    5. '       ' → logprob: -8.567609786987305
    6. '            
' → logprob: -9.192609786987305
    7. '
' → logprob: -9.317609786987305
    8. ' 
' → logprob: -9.567609786987305
    9. '   ' → logprob: -9.567609786987305
    10. '    
' → logprob: -10.692609786987305

Token 83: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804194927215576
    2. ' =' → logprob: -3.2880420684814453
    3. ' +=' → logprob: -15.288042068481445
    4. '+=' → logprob: -15.413042068481445
    5. ' ' → logprob: -18.538042068481445
    6. '=

' → logprob: -18.538042068481445
    7. '.=' → logprob: -18.663042068481445
    8. '=j' → logprob: -18.788042068481445
    9. '=}' → logprob: -18.913042068481445
    10. '＝' → logprob: -19.163042068481445

Token 84: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.048587486147880554
    2. ' j' → logprob: -3.0485875606536865
    3. '$j' → logprob: -16.548587799072266
    4. '	j' → logprob: -18.423587799072266
    5. '=j' → logprob: -18.923587799072266
    6. ':j' → logprob: -19.798587799072266
    7. '(j' → logprob: -20.548587799072266
    8. '[j' → logprob: -20.673587799072266
    9. ' ' → logprob: -21.423587799072266
    10. '   ' → logprob: -21.423587799072266

Token 85: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804275393486023
    2. ' +' → logprob: -3.2880427837371826
    3. '+
' → logprob: -14.413043022155762
    4. '+i' → logprob: -15.038043022155762
    5. ' +
' → logprob: -15.663043022155762
    6. '＋' → logprob: -15.663043022155762
    7. ' plus' → logprob: -17.163042068481445
    8. '++' → logprob: -17.413042068481445
    9. ' ' → logprob: -17.663042068481445
    10. '+j' → logprob: -17.913042068481445

Token 86: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -20.750001907348633
    4. '   ' → logprob: -22.125001907348633
    5. '１' → logprob: -23.500001907348633
    6. '2' → logprob: -23.625001907348633
    7. '۱' → logprob: -23.750001907348633
    8. '0' → logprob: -23.750001907348633
    9. '+' → logprob: -23.875001907348633
    10. '...' → logprob: -25.000001907348633

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '```' → logprob: -19.375
    4. '۱' → logprob: -21.625
    5. '0' → logprob: -22.625
    6. '１' → logprob: -22.75
    7. '2' → logprob: -23.5
    8. '   ' → logprob: -23.625
    9. '7' → logprob: -23.8125
    10. '' → logprob: -23.9375

Token 88: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41335445642471313
    2. 'elif' → logprob: -1.5383543968200684
    3. '<|end|>' → logprob: -2.1633543968200684
    4. ' elif' → logprob: -5.413354396820068
    5. 'else' → logprob: -6.288354396820068
    6. '	elif' → logprob: -7.538354396820068
    7. '```' → logprob: -7.663354396820068
    8. '   ' → logprob: -7.913354396820068
    9. '<|end|>' → logprob: -8.288354873657227
    10. ' else' → logprob: -8.538354873657227

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10380575060844421
    2. '<|end|>' → logprob: -2.8538057804107666
    3. 'elif' → logprob: -3.3538057804107666
    4. ' elif' → logprob: -5.9788055419921875
    5. '   ' → logprob: -6.9788055419921875
    6. 'else' → logprob: -7.4788055419921875
    7. '	elif' → logprob: -8.103805541992188
    8. '        
' → logprob: -8.103805541992188
    9. '```' → logprob: -8.228805541992188
    10. '<|end|>' → logprob: -8.728805541992188

Token 90: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.22237451374530792
    2. ' elif' → logprob: -2.097374439239502
    3. '       ' → logprob: -3.097374439239502
    4. '<|end|>' → logprob: -4.472374439239502
    5. 'else' (adapté à ' else') → logprob: -4.847374439239502
    6. '	elif' → logprob: -5.097374439239502
    7. ' else' → logprob: -5.347374439239502
    8. '```' → logprob: -7.347374439239502
    9. '   ' → logprob: -8.22237491607666
    10. '<|end|>' → logprob: -9.22237491607666

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5984946489334106
    2. '       ' → logprob: -1.3484946489334106
    3. ' ' → logprob: -1.9734946489334106
    4. '   ' → logprob: -4.223494529724121
    5. '<|end|>' → logprob: -4.723494529724121
    6. '           ' → logprob: -4.848494529724121
    7. '        ' → logprob: -5.098494529724121
    8. '    ' → logprob: -5.473494529724121
    9. ':
' → logprob: -5.973494529724121
    10. ' :' → logprob: -6.723494529724121

Token 92: '           ' (ID: 352)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8576120138168335
    2. ' parts' → logprob: -1.3576120138168335
    3. '       ' → logprob: -1.8576120138168335
    4. ' if' → logprob: -2.857612133026123
    5. '   ' → logprob: -3.482612133026123
    6. 'i' → logprob: -3.482612133026123
    7. '        ' → logprob: -4.232612133026123
    8. '           ' → logprob: -4.357612133026123
    9. ' ' → logprob: -4.857612133026123
    10. 'parts' → logprob: -5.857612133026123

Token 93: ' j' (ID: 441)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.37906497716903687
    2. ' j' → logprob: -2.5040650367736816
    3. 'parts' → logprob: -2.8790650367736816
    4. 'j' (adapté à ' j') → logprob: -3.0040650367736816
    5. ' k' → logprob: -3.2540650367736816
    6. 'k' → logprob: -3.3790650367736816
    7. ' start' → logprob: -3.8790650367736816
    8. ' if' → logprob: -4.754065036773682
    9. '           ' → logprob: -5.004065036773682
    10. 'start' → logprob: -5.004065036773682

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004734614863991737
    2. '=' → logprob: -5.504734516143799
    3. ' +=' → logprob: -7.379734516143799
    4. ' ' → logprob: -10.879734992980957
    5. '+=' → logprob: -12.129734992980957
    6. '<|end|>' → logprob: -12.254734992980957
    7. ')' → logprob: -14.379734992980957
    8. ' =
' → logprob: -14.629734992980957
    9. '+' → logprob: -14.879734992980957
    10. ' +' → logprob: -15.379734992980957

Token 95: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07889000326395035
    2. ' i' → logprob: -2.578890085220337
    3. '	i' → logprob: -15.578889846801758
    4. ' ' → logprob: -16.953889846801758
    5. '   ' → logprob: -19.453889846801758
    6. ' ' → logprob: -20.203889846801758
    7. 'n' → logprob: -20.453889846801758
    8. 'program' → logprob: -21.078889846801758
    9. '_i' → logprob: -21.328889846801758
    10. '```' → logprob: -21.328889846801758

Token 96: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693031132221222
    2. ' +' → logprob: -2.1269302368164062
    3. ' +=' → logprob: -14.126930236816406
    4. ' +
' → logprob: -14.251930236816406
    5. '+
' → logprob: -14.626930236816406
    6. '+=' → logprob: -15.001930236816406
    7. '＋' → logprob: -16.751930236816406
    8. ' ' → logprob: -17.501930236816406
    9. ' plus' → logprob: -17.501930236816406
    10. '+j' → logprob: -17.751930236816406

Token 97: '           ' (ID: 352)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16081735491752625
    2. ' while' → logprob: -2.6608173847198486
    3. '           ' → logprob: -3.0358173847198486
    4. ' +' → logprob: -4.2858171463012695
    5. 'while' → logprob: -4.2858171463012695
    6. '       ' → logprob: -6.6608171463012695
    7. ' +=' → logprob: -7.6608171463012695
    8. '+
' → logprob: -8.28581714630127
    9. '+=' → logprob: -8.28581714630127
    10. '            
' → logprob: -8.41081714630127

Token 98: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.579445481300354
    2. 'while' (adapté à ' while') → logprob: -0.829445481300354
    3. '           ' → logprob: -5.7044453620910645
    4. '            ' → logprob: -9.329445838928223
    5. '            
' → logprob: -10.579445838928223
    6. 'While' → logprob: -11.329445838928223
    7. '	while' → logprob: -11.329445838928223
    8. ' 
' → logprob: -12.079445838928223
    9. ' While' → logprob: -12.204445838928223
    10. ' j' → logprob: -12.579445838928223

Token 99: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6931476593017578
    2. ' j' → logprob: -0.6931476593017578
    3. ' ' → logprob: -15.318147659301758
    4. '	j' → logprob: -16.193147659301758
    5. 'program' → logprob: -16.568147659301758
    6. ' ' → logprob: -16.943147659301758
    7. '   ' → logprob: -18.068147659301758
    8. '```' → logprob: -18.193147659301758
    9. '$j' → logprob: -18.318147659301758
    10. '(j' → logprob: -18.318147659301758

Token 100: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.018185647204518318
    2. '<' → logprob: -4.018185615539551
    3. '<n' → logprob: -10.51818561553955
    4. '<len' → logprob: -11.76818561553955
    5. ' ' → logprob: -14.14318561553955
    6. '<size' → logprob: -15.89318561553955
    7. '[' → logprob: -17.268186569213867
    8. '+' → logprob: -17.893186569213867
    9. '<s' → logprob: -18.143186569213867
    10. '<const' → logprob: -18.393186569213867

Token 101: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07889066636562347
    2. 'n' → logprob: -2.578890562057495
    3. ' ' → logprob: -14.328890800476074
    4. '<|end|>' → logprob: -16.078889846801758
    5. '	n' → logprob: -16.203889846801758
    6. 'len' → logprob: -16.828889846801758
    7. 'program' → logprob: -17.953889846801758
    8. ')n' → logprob: -17.953889846801758
    9. ' н' → logprob: -17.953889846801758
    10. '_n' → logprob: -18.453889846801758

Token 102: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018150296062231064
    2. 'and' → logprob: -4.018150329589844
    3. ' ' → logprob: -14.893150329589844
    4. '	and' → logprob: -17.393150329589844
    5. '<|end|>' → logprob: -18.643150329589844
    6. ' not' → logprob: -18.893150329589844
    7. 'not' → logprob: -19.018150329589844
    8. '```' → logprob: -19.018150329589844
    9. '   ' → logprob: -19.268150329589844
    10. ' и' → logprob: -19.393150329589844

Token 103: ' program' (ID: 2193)
  Prédit: ' program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' program' → logprob: -0.34895551204681396
    2. 'program' → logprob: -1.223955512046814
    3. '(program' → logprob: -8.098955154418945
    4. ' not' → logprob: -8.848955154418945
    5. ' ' → logprob: -10.348955154418945
    6. '"' → logprob: -11.223955154418945
    7. ' (' → logprob: -11.723955154418945
    8. 'not' → logprob: -12.098955154418945
    9. ' "' → logprob: -13.348955154418945
    10. '   ' → logprob: -14.348955154418945

Token 104: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.796184723294573e-06
    2. '[i' → logprob: -12.125005722045898
    3. '[' → logprob: -14.875005722045898
    4. '[
' → logprob: -18.1250057220459
    5. '```' → logprob: -18.6250057220459
    6. '[q' → logprob: -19.0000057220459
    7. ' [' → logprob: -19.5000057220459
    8. '[js' → logprob: -19.7500057220459
    9. '[]' → logprob: -20.0000057220459
    10. '[n' → logprob: -20.8750057220459

Token 105: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.014411822892725468
    2. ' !=' → logprob: -4.389411926269531
    3. 'not' → logprob: -6.639411926269531
    4. '!=' → logprob: -7.514411926269531
    5. '!='' → logprob: -11.014411926269531
    6. ']' → logprob: -11.264411926269531
    7. ')' → logprob: -12.264411926269531
    8. '!="' → logprob: -12.514411926269531
    9. '!' → logprob: -12.889411926269531
    10. ' !' → logprob: -13.014411926269531

Token 106: ' !=' (ID: 1666)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.003222510451450944
    2. 'not' → logprob: -5.878222465515137
    3. ' !=' → logprob: -8.253222465515137
    4. '!=' → logprob: -9.253222465515137
    5. '!' → logprob: -10.628222465515137
    6. '!='' → logprob: -11.128222465515137
    7. ' !' → logprob: -11.628222465515137
    8. ' ' → logprob: -12.128222465515137
    9. '!="' → logprob: -12.878222465515137
    10. '<|end|>' → logprob: -13.003222465515137

Token 107: ' '"' (ID: 15197)
  Prédit: ''"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''"' → logprob: -0.0013404814526438713
    2. '"' → logprob: -6.626340389251709
    3. ''' → logprob: -11.876340866088867
    4. ' '"'' → logprob: -11.876340866088867
    5. ' '"' → logprob: -14.626340866088867
    6. '"""' → logprob: -16.626340866088867
    7. '"`' → logprob: -18.376340866088867
    8. '`' → logprob: -18.501340866088867
    9. ''''' → logprob: -18.501340866088867
    10. ''"
' → logprob: -19.001340866088867

Token 108: '':
' (ID: 7669)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1313856840133667
    2. ':
' → logprob: -2.3813858032226562
    3. 'and' → logprob: -4.131385803222656
    4. ':' → logprob: -4.256385803222656
    5. '   ' → logprob: -8.506385803222656
    6. ' ' → logprob: -9.631385803222656
    7. '):
' → logprob: -9.881385803222656
    8. '           ' → logprob: -10.006385803222656
    9. ':

' → logprob: -11.006385803222656
    10. ' :
' → logprob: -11.256385803222656

Token 109: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11936335265636444
    2. 'j' → logprob: -2.369363307952881
    3. '           ' → logprob: -4.369363307952881
    4. ' j' → logprob: -5.369363307952881
    5. '   ' → logprob: -6.744363307952881
    6. '       ' → logprob: -8.494363784790039
    7. '```' → logprob: -9.119363784790039
    8. '	j' → logprob: -10.494363784790039
    9. '                
' → logprob: -10.744363784790039
    10. ' ' → logprob: -10.869363784790039

Token 110: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.0010338802821934223
    2. ' j' → logprob: -6.876033782958984
    3. '                   ' → logprob: -14.626033782958984
    4. '	j' → logprob: -15.126033782958984
    5. '               ' → logprob: -15.626033782958984
    6. '   ' → logprob: -16.001033782958984
    7. '           ' → logprob: -16.626033782958984
    8. ' ' → logprob: -17.751033782958984
    9. '```' → logprob: -17.751033782958984
    10. '
' → logprob: -17.876033782958984

Token 111: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.29707208275794983
    2. ' +=' → logprob: -1.6720720529556274
    3. '+' → logprob: -2.672072172164917
    4. ' +' → logprob: -10.922072410583496
    5. '            ' → logprob: -12.172072410583496
    6. '```' → logprob: -12.547072410583496
    7. '=' → logprob: -13.047072410583496
    8. ' ' → logprob: -13.297072410583496
    9. ']+=' → logprob: -13.297072410583496
    10. '++' → logprob: -13.422072410583496

Token 112: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3132622241973877
    2. '1' → logprob: -1.3132622241973877
    3. ' ' → logprob: -15.938261985778809
    4. ' i' → logprob: -16.563262939453125
    5. '0' → logprob: -16.688262939453125
    6. '```' → logprob: -17.313262939453125
    7. 'i' → logprob: -17.688262939453125
    8. '_' → logprob: -18.000762939453125
    9. ' 

' → logprob: -18.250762939453125
    10. ' j' → logprob: -18.563262939453125

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -16.37507438659668
    4. '0' → logprob: -16.62507438659668
    5. 'i' → logprob: -17.87507438659668
    6. '   ' → logprob: -18.12507438659668
    7. '           ' → logprob: -19.43757438659668
    8. '  ' → logprob: -19.68757438659668
    9. ')' → logprob: -20.12507438659668
    10. '               ' → logprob: -20.31257438659668

Token 114: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03666134551167488
    2. ' parts' → logprob: -3.536661386489868
    3. '
' → logprob: -5.536661148071289
    4. ' 
' → logprob: -7.411661148071289
    5. '       ' → logprob: -7.786661148071289
    6. 'parts' → logprob: -7.911661148071289
    7. '            
' → logprob: -8.036661148071289
    8. '<|end|>' → logprob: -8.036661148071289
    9. '    
' → logprob: -8.411661148071289
    10. '   ' → logprob: -8.661661148071289

Token 115: '           ' (ID: 352)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.23992078006267548
    2. '           ' → logprob: -1.614920735359192
    3. 'parts' → logprob: -4.364920616149902
    4. '       ' → logprob: -6.489920616149902
    5. '```' → logprob: -9.989920616149902
    6. '   ' → logprob: -10.364920616149902
    7. '
' → logprob: -11.114920616149902
    8. ' part' → logprob: -11.364920616149902
    9. '          ' → logprob: -11.489920616149902
    10. '            
' → logprob: -11.489920616149902

Token 116: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.21323047578334808
    2. 'parts' (adapté à ' parts') → logprob: -1.7132304906845093
    3. '           ' → logprob: -4.463230609893799
    4. '   ' → logprob: -9.21323013305664
    5. '       ' → logprob: -9.71323013305664
    6. 'part' → logprob: -11.46323013305664
    7. '```' → logprob: -11.58823013305664
    8. ' part' → logprob: -11.71323013305664
    9. ' ' → logprob: -11.96323013305664
    10. '(parts' → logprob: -12.21323013305664

Token 117: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.022721562534570694
    2. '.' → logprob: -4.147721767425537
    3. '.extend' → logprob: -5.022721767425537
    4. '.app' → logprob: -10.022721290588379
    5. ' .' → logprob: -11.647721290588379
    6. '.py' → logprob: -11.897721290588379
    7. '.Append' → logprob: -12.147721290588379
    8. ').' → logprob: -12.522721290588379
    9. 'append' → logprob: -12.647721290588379
    10. '.ap' → logprob: -13.522721290588379

Token 118: '(program' (ID: 79745)
  Prédit: '(program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(program' → logprob: -0.06197104603052139
    2. '(' → logprob: -2.8119709491729736
    3. ' (' → logprob: -13.061970710754395
    4. '(pro' → logprob: -14.061970710754395
    5. '(process' → logprob: -16.43697166442871
    6. '(
' → logprob: -16.43697166442871
    7. '(project' → logprob: -16.68697166442871
    8. '(

' → logprob: -16.81197166442871
    9. 'program' → logprob: -16.93697166442871
    10. '(problem' → logprob: -17.18697166442871

Token 119: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003012617235071957
    2. '[' → logprob: -8.125301361083984
    3. '[j' → logprob: -12.875301361083984
    4. '[I' → logprob: -13.625301361083984
    5. '```' → logprob: -13.875301361083984
    6. '[s' → logprob: -15.625301361083984
    7. '[start' → logprob: -16.250301361083984
    8. '[a' → logprob: -16.875301361083984
    9. '[k' → logprob: -17.000301361083984
    10. ' [' → logprob: -17.125301361083984

Token 120: ':j' (ID: 123557)
  Prédit: ':j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':j' → logprob: -0.0004234051739331335
    2. ':' → logprob: -7.875423431396484
    3. 'j' → logprob: -10.125423431396484
    4. ' :' → logprob: -13.250423431396484
    5. '	j' → logprob: -14.500423431396484
    6. ' ' → logprob: -15.250423431396484
    7. '   ' → logprob: -15.250423431396484
    8. ' j' → logprob: -15.375423431396484
    9. ';j' → logprob: -16.000423431396484
    10. '```' → logprob: -16.125423431396484

Token 121: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07083439826965332
    2. '])' → logprob: -2.6958343982696533
    3. ' )' → logprob: -7.695834159851074
    4. ']' → logprob: -7.945834159851074
    5. ')
' → logprob: -10.570834159851074
    6. '<|end|>' → logprob: -10.945834159851074
    7. ' ])' → logprob: -11.070834159851074
    8. ')]' → logprob: -12.445834159851074
    9. '))' → logprob: -12.570834159851074
    10. '       ' → logprob: -12.695834159851074

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9711782336235046
    2. '       ' → logprob: -1.2211782932281494
    3. '   ' → logprob: -1.7211782932281494
    4. 'i' → logprob: -2.8461782932281494
    5. ' i' → logprob: -2.8461782932281494
    6. ' 
' → logprob: -4.34617805480957
    7. '    
' → logprob: -5.47117805480957
    8. '
' → logprob: -5.84617805480957
    9. '        
' → logprob: -6.09617805480957
    10. '	i' → logprob: -6.34617805480957

Token 123: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.005277038086205721
    2. ' i' → logprob: -5.255277156829834
    3. '   ' → logprob: -10.255276679992676
    4. '           ' → logprob: -12.005276679992676
    5. '       ' → logprob: -14.505276679992676
    6. '	i' → logprob: -14.505276679992676
    7. ' 
' → logprob: -14.755276679992676
    8. '
' → logprob: -15.130276679992676
    9. '```' → logprob: -16.505277633666992
    10. '    
' → logprob: -16.505277633666992

Token 124: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00026169343618676066
    2. ' =' → logprob: -8.250261306762695
    3. '=j' → logprob: -15.000261306762695
    4. '=
' → logprob: -18.000261306762695
    5. '=}' → logprob: -20.250261306762695
    6. '+=' → logprob: -21.000261306762695
    7. '=

' → logprob: -21.500261306762695
    8. '＝' → logprob: -21.875261306762695
    9. '.=' → logprob: -22.625261306762695
    10. '=i' → logprob: -22.875261306762695

Token 125: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029750604182481766
    2. ' j' → logprob: -3.5297505855560303
    3. '	j' → logprob: -16.65475082397461
    4. '$j' → logprob: -17.77975082397461
    5. ' ' → logprob: -19.40475082397461
    6. '    ' → logprob: -19.90475082397461
    7. '   ' → logprob: -20.40475082397461
    8. '<|end|>' → logprob: -20.65475082397461
    9. ':j' → logprob: -20.77975082397461
    10. '```' → logprob: -20.77975082397461

Token 126: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005918604787439108
    2. '<|end|>' → logprob: -5.505918502807617
    3. '
' → logprob: -7.755918502807617
    4. 'return' → logprob: -8.005918502807617
    5. '    
' → logprob: -8.130918502807617
    6. ' return' → logprob: -8.255918502807617
    7. '\n' → logprob: -9.130918502807617
    8. '	return' → logprob: -9.505918502807617
    9. ':return' → logprob: -9.505918502807617
    10. '       ' → logprob: -9.755918502807617

Token 128: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07281101495027542
    2. 'return' (adapté à ' return') → logprob: -3.3228111267089844
    3. ' return' → logprob: -4.322811126708984
    4. ' ' → logprob: -5.197811126708984
    5. '<|end|>' → logprob: -5.197811126708984
    6. '\n' → logprob: -6.197811126708984
    7. '    
' → logprob: -6.197811126708984
    8. ':return' → logprob: -6.572811126708984
    9. '    ' → logprob: -7.072811126708984
    10. '
' → logprob: -7.197811126708984

Token 129: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.1002226322889328
    2. ' parts' → logprob: -2.350222587585449
    3. '(parts' → logprob: -11.10022258758545
    4. '.parts' → logprob: -15.35022258758545
    5. '```' → logprob: -16.100223541259766
    6. ' ' → logprob: -16.350223541259766
    7. '`' → logprob: -16.475223541259766
    8. '[' → logprob: -16.475223541259766
    9. ' ' → logprob: -16.725223541259766
    10. 'part' → logprob: -16.975223541259766

Token 130: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8013810515403748
    2. '[' → logprob: -1.8013811111450195
    3. ')' → logprob: -1.9263811111450195
    4. '#' → logprob: -2.3013811111450195
    5. ''' → logprob: -3.3013811111450195
    6. '\' → logprob: -3.5513811111450195
    7. '\n' → logprob: -3.8013811111450195
    8. '```' → logprob: -3.9263811111450195
    9. '<|end|>' → logprob: -5.1763811111450195
    10. ' ' → logprob: -5.4263811111450195

Token 131: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2182245254516602
    2. '#' → logprob: -1.3432245254516602
    3. '\n' → logprob: -1.9682245254516602
    4. '
' → logprob: -2.34322452545166
    5. 'def' → logprob: -2.59322452545166
    6. '```' → logprob: -3.46822452545166
    7. '<|end|>' → logprob: -3.59322452545166
    8. '(' → logprob: -3.96822452545166
    9. 'newline' → logprob: -4.46822452545166
    10. '\' → logprob: -4.96822452545166

Token 132: ' is' (ID: 382)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.7709001302719116
    2. ' extract' → logprob: -1.7709001302719116
    3. ' process' → logprob: -2.020900249481201
    4. ' main' → logprob: -2.895900249481201
    5. ' tokenize' → logprob: -2.895900249481201
    6. ' combine' → logprob: -3.645900249481201
    7. ' assemble' → logprob: -4.145900249481201
    8. ' split' → logprob: -4.520900249481201
    9. ' analyze' → logprob: -4.645900249481201
    10. ' run' → logprob: -4.645900249481201

Token 133: '_close' (ID: 30665)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.39948570728302
    2. '_valid' → logprob: -1.64948570728302
    3. '_identifier' → logprob: -2.3994855880737305
    4. '_keyword' → logprob: -4.0244855880737305
    5. '_operator' → logprob: -5.1494855880737305
    6. '_bal' → logprob: -5.3994855880737305
    7. '_' → logprob: -5.6494855880737305
    8. '_variable' → logprob: -6.0244855880737305
    9. '_wh' → logprob: -6.6494855880737305
    10. '_function' → logprob: -6.7744855880737305

Token 134: '(p' (ID: 2407)
  Prédit: '_parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.03412381932139397
    2. 'Paren' → logprob: -4.65912389755249
    3. 'paren' → logprob: -4.78412389755249
    4. '_par' → logprob: -4.78412389755249
    5. '(parent' → logprob: -6.40912389755249
    6. '_' → logprob: -6.53412389755249
    7. '_to' → logprob: -6.65912389755249
    8. '(paren' → logprob: -7.28412389755249
    9. '(' → logprob: -7.40912389755249
    10. 'Parent' → logprob: -7.53412389755249

Token 135: '1' (ID: 16)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.2602929472923279
    2. ')' → logprob: -2.1352930068969727
    3. 'aram' → logprob: -3.6352930068969727
    4. 'u' → logprob: -3.7602930068969727
    5. 'r' → logprob: -3.8852930068969727
    6. 'a' → logprob: -4.635293006896973
    7. 'art' → logprob: -5.135293006896973
    8. 'paren' → logprob: -5.635293006896973
    9. 'arse' → logprob: -6.010293006896973
    10. 'oint' → logprob: -6.385293006896973

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0537717267870903
    2. ',p' → logprob: -3.303771734237671
    3. '_,' → logprob: -5.178771495819092
    4. ')' → logprob: -5.803771495819092
    5. '(p' → logprob: -5.803771495819092
    6. '):' → logprob: -6.803771495819092
    7. '(' → logprob: -7.053771495819092
    8. '_' → logprob: -7.678771495819092
    9. ' ,' → logprob: -7.803771495819092
    10. '[' → logprob: -8.92877197265625

Token 137: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.179775208234787
    2. ' p' → logprob: -1.8047752380371094
    3. '   ' → logprob: -11.17977523803711
    4. ' ' → logprob: -11.55477523803711
    5. '  ' → logprob: -12.92977523803711
    6. ')' → logprob: -13.17977523803711
    7. ')p' → logprob: -14.05477523803711
    8. ''p' → logprob: -14.67977523803711
    9. '    ' → logprob: -15.05477523803711
    10. '_p' → logprob: -16.11727523803711

Token 138: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.25
    3. 'art' → logprob: -18.0
    4. '):' → logprob: -19.125
    5. 'p' → logprob: -19.375
    6. 'r' → logprob: -19.375
    7. ')' → logprob: -19.375
    8. 'ar' → logprob: -19.75
    9. 'aram' → logprob: -19.875
    10. 'arts' → logprob: -20.25

Token 139: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006004283204674721
    2. ')' → logprob: -5.131004333496094
    3. '_' → logprob: -10.756004333496094
    4. '):
' → logprob: -10.881004333496094
    5. ':' → logprob: -11.006004333496094
    6. ',' → logprob: -11.506004333496094
    7. '(' → logprob: -13.006004333496094
    8. ' ):' → logprob: -13.756004333496094
    9. '[' → logprob: -14.381004333496094
    10. ''):' → logprob: -14.756004333496094

Token 140: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7094504833221436
    2. '(' → logprob: -1.3344504833221436
    3. '   ' → logprob: -1.7094504833221436
    4. '(p' → logprob: -2.9594504833221436
    5. ' :' → logprob: -6.334450721740723
    6. '.' → logprob: -6.709450721740723
    7. ':
' → logprob: -6.834450721740723
    8. '[' → logprob: -7.084450721740723
    9. ' (' → logprob: -7.084450721740723
    10. 'def' → logprob: -7.084450721740723

Token 141: ' parts' (ID: 7881)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7681383490562439
    2. 'return' → logprob: -0.8931383490562439
    3. '   ' → logprob: -2.1431384086608887
    4. 'abs' → logprob: -5.393138408660889
    5. ' ' → logprob: -6.518138408660889
    6. ' p' → logprob: -7.143138408660889
    7. ' abs' → logprob: -7.643138408660889
    8. 'def' → logprob: -7.768138408660889
    9. 'len' → logprob: -8.26813793182373
    10. ' for' → logprob: -8.39313793182373

Token 142: '1' (ID: 16)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13841821253299713
    2. '[' → logprob: -2.888418197631836
    3. '.append' → logprob: -3.513418197631836
    4. '[p' → logprob: -3.763418197631836
    5. ')' → logprob: -5.138418197631836
    6. '<|end|>' → logprob: -5.888418197631836
    7. '==' → logprob: -6.138418197631836
    8. '=' → logprob: -6.888418197631836
    9. ' ==' → logprob: -7.138418197631836
    10. '   ' → logprob: -7.388418197631836

Token 143: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04117824509739876
    2. '[' → logprob: -4.541178226470947
    3. ' ==' → logprob: -4.541178226470947
    4. '.startswith' → logprob: -5.166178226470947
    5. '.count' → logprob: -5.791178226470947
    6. '.endswith' → logprob: -5.916178226470947
    7. '==' → logprob: -6.291178226470947
    8. '.split' → logprob: -6.541178226470947
    9. ',' → logprob: -7.041178226470947
    10. ' .' → logprob: -7.291178226470947

Token 144: ' extract' (ID: 13424)
  Prédit: ' extract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extract' → logprob: -0.3885033130645752
    2. 'extract' → logprob: -1.1385033130645752
    3. ' p' → logprob: -6.513503074645996
    4. ' parts' → logprob: -9.388503074645996
    5. 'p' → logprob: -10.013503074645996
    6. 'parts' → logprob: -11.138503074645996
    7. '.extract' → logprob: -13.888503074645996
    8. '_extract' → logprob: -14.388503074645996
    9. '[' → logprob: -14.513503074645996
    10. ' ' → logprob: -14.763503074645996

Token 145: '_parts' (ID: 81867)
  Prédit: '_parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parts' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.000000953674316
    3. '_p' → logprob: -17.125001907348633
    4. 'parts' → logprob: -17.750001907348633
    5. '(parts' → logprob: -18.500001907348633
    6. '_chars' → logprob: -18.750001907348633
    7. '```' → logprob: -18.750001907348633
    8. '_part' → logprob: -18.750001907348633
    9. ' parts' → logprob: -19.125001907348633
    10. '_bits' → logprob: -19.125001907348633

Token 146: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4839593470096588
    2. '(parts' → logprob: -1.3589593172073364
    3. '(p' → logprob: -2.233959436416626
    4. '(program' → logprob: -3.983959436416626
    5. '("("' → logprob: -8.358959197998047
    6. '_parts' → logprob: -8.983959197998047
    7. '((' → logprob: -9.108959197998047
    8. '(part' → logprob: -9.358959197998047
    9. ' (' → logprob: -9.608959197998047
    10. '('' → logprob: -9.733959197998047

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.37298572063446045
    2. 'rogram' → logprob: -1.3729857206344604
    3. '2' → logprob: -2.99798583984375
    4. 'ro' → logprob: -5.62298583984375
    5. 'r' → logprob: -5.99798583984375
    6. 'art' → logprob: -6.99798583984375
    7. 'arts' → logprob: -7.49798583984375
    8. '(' → logprob: -9.24798583984375
    9. '[' → logprob: -9.37298583984375
    10. 'program' → logprob: -9.87298583984375

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04763885214924812
    2. ',' → logprob: -3.4226388931274414
    3. '[' → logprob: -4.672638893127441
    4. ')
' → logprob: -5.672638893127441
    5. ',
' → logprob: -7.422638893127441
    6. '   ' → logprob: -9.297638893127441
    7. ' )' → logprob: -9.297638893127441
    8. '[p' → logprob: -9.297638893127441
    9. ',p' → logprob: -9.422638893127441
    10. ' ' → logprob: -10.672638893127441

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2688767910003662
    2. ' and' → logprob: -2.018876791000366
    3. '[' → logprob: -3.768876791000366
    4. ' +' → logprob: -3.893876791000366
    5. ' parts' → logprob: -4.018877029418945
    6. ' ' → logprob: -4.143877029418945
    7. ',' → logprob: -5.518877029418945
    8. 'parts' → logprob: -5.518877029418945
    9. '.' → logprob: -5.643877029418945
    10. 'and' → logprob: -5.768877029418945

Token 150: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.6931546926498413
    2. 'parts' (adapté à ' parts') → logprob: -0.6931546926498413
    3. '   ' → logprob: -12.943154335021973
    4. '(parts' → logprob: -13.443154335021973
    5. '.parts' → logprob: -13.568154335021973
    6. ' ' → logprob: -14.443154335021973
    7. 'Parts' → logprob: -15.193154335021973
    8. '`' → logprob: -15.318154335021973
    9. ' partes' → logprob: -15.443154335021973
    10. '_parts' → logprob: -15.818154335021973

Token 151: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.050537604838609695
    2. '=' → logprob: -3.050537586212158
    3. ' =' → logprob: -6.925537586212158
    4. '_' → logprob: -7.925537586212158
    5. '[' → logprob: -8.175538063049316
    6. '1' → logprob: -8.675538063049316
    7. '.' → logprob: -9.675538063049316
    8. ',' → logprob: -11.300538063049316
    9. '[:]' → logprob: -11.425538063049316
    10. ')' → logprob: -11.550538063049316

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030263427644968033
    2. '=' → logprob: -3.5302634239196777
    3. '(' → logprob: -8.405263900756836
    4. ')' → logprob: -8.530263900756836
    5. '(p' → logprob: -10.155263900756836
    6. '(parts' → logprob: -10.405263900756836
    7. ',' → logprob: -12.280263900756836
    8. '<|end|>' → logprob: -12.655263900756836
    9. ' (' → logprob: -12.780263900756836
    10. ' =)' → logprob: -13.155263900756836

Token 153: ' extract' (ID: 13424)
  Prédit: 'extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extract' → logprob: -0.20141421258449554
    2. ' extract' → logprob: -1.7014142274856567
    3. '.extract' → logprob: -14.451414108276367
    4. ' parts' → logprob: -15.326414108276367
    5. '_extract' → logprob: -16.201414108276367
    6. 'parts' → logprob: -17.076414108276367
    7. '   ' → logprob: -17.701414108276367
    8. ' ' → logprob: -17.701414108276367
    9. ' extracts' → logprob: -17.701414108276367
    10. '(ex' → logprob: -17.951414108276367

Token 154: '_parts' (ID: 81867)
  Prédit: '_parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parts' → logprob: -9.849109119386412e-06
    2. 'parts' → logprob: -12.500009536743164
    3. '_' → logprob: -12.750009536743164
    4. '```' → logprob: -13.500009536743164
    5. 'Parts' → logprob: -14.750009536743164
    6. 's' → logprob: -15.000009536743164
    7. ' parts' → logprob: -15.250009536743164
    8. '_p' → logprob: -15.500009536743164
    9. ''_' → logprob: -16.375009536743164
    10. '(parts' → logprob: -16.375009536743164

Token 155: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.12700307369232178
    2. '(' → logprob: -2.1270031929016113
    3. '(parts' → logprob: -9.752002716064453
    4. ' (' → logprob: -11.127002716064453
    5. '('' → logprob: -14.752002716064453
    6. '("("' → logprob: -15.002002716064453
    7. '(
' → logprob: -15.252002716064453
    8. '(P' → logprob: -15.252002716064453
    9. '(

' → logprob: -15.627002716064453
    10. '(part' → logprob: -15.877002716064453

Token 156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 's' → logprob: -17.875
    3. '```' → logprob: -18.5
    4. '1' → logprob: -18.625
    5. ')' → logprob: -18.625
    6. 'r' → logprob: -18.75
    7. '۲' → logprob: -19.125
    8. 'o' → logprob: -19.25
    9. 'p' → logprob: -19.5
    10. '２' → logprob: -19.75

Token 157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007238718098960817
    2. ')
' → logprob: -7.250723838806152
    3. ' )' → logprob: -11.500723838806152
    4. '   ' → logprob: -13.625723838806152
    5. ')

' → logprob: -13.875723838806152
    6. ')
' → logprob: -14.375723838806152
    7. '[' → logprob: -14.750723838806152
    8. ' ' → logprob: -15.125723838806152
    9. ')[' → logprob: -16.62572479248047
    10. '))' → logprob: -16.75072479248047

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015026862733066082
    2. '
' → logprob: -4.890027046203613
    3. ' 
' → logprob: -6.140027046203613
    4. ' if' → logprob: -6.765027046203613
    5. ' for' → logprob: -6.890027046203613
    6. '    
' → logprob: -7.140027046203613
    7. '[' → logprob: -7.390027046203613
    8. ' return' → logprob: -7.890027046203613
    9. ' ' → logprob: -8.140027046203613
    10. ')' → logprob: -9.140027046203613

Token 159: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.013790750876069069
    2. ' if' → logprob: -4.888790607452393
    3. 'for' → logprob: -5.638790607452393
    4. 'i' → logprob: -6.388790607452393
    5. 'return' → logprob: -7.138790607452393
    6. '   ' → logprob: -9.88879108428955
    7. ' for' → logprob: -10.01379108428955
    8. ' return' → logprob: -11.13879108428955
    9. ' i' → logprob: -11.26379108428955
    10. 'idx' → logprob: -12.38879108428955

Token 160: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.27196183800697327
    2. 'len' → logprob: -1.5219618082046509
    3. ' parts' → logprob: -4.146961688995361
    4. 'parts' → logprob: -5.521961688995361
    5. '(len' → logprob: -11.64696216583252
    6. ' ' → logprob: -12.52196216583252
    7. '	len' → logprob: -12.89696216583252
    8. '   ' → logprob: -13.64696216583252
    9. ' not' → logprob: -13.95946216583252
    10. '(parts' → logprob: -14.08446216583252

Token 161: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -3.5954712075181305e-05
    2. '(' → logprob: -10.250036239624023
    3. 'parts' → logprob: -14.875036239624023
    4. '(part' → logprob: -16.375036239624023
    5. ' parts' → logprob: -18.250036239624023
    6. ' (' → logprob: -18.500036239624023
    7. '(points' → logprob: -21.000036239624023
    8. '(p' → logprob: -21.250036239624023
    9. '(posts' → logprob: -21.750036239624023
    10. '(
' → logprob: -21.875036239624023

Token 162: '1' (ID: 16)
  Prédit: '(parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.013051639311015606
    2. '(' → logprob: -4.513051509857178
    3. '1' → logprob: -6.263051509857178
    4. 'parts' → logprob: -9.638051986694336
    5. '(p' → logprob: -11.388051986694336
    6. ' parts' → logprob: -11.638051986694336
    7. 's' → logprob: -12.013051986694336
    8. ' (' → logprob: -13.013051986694336
    9. ')' → logprob: -14.138051986694336
    10. '[' → logprob: -14.263051986694336

Token 163: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0826946496963501
    2. '!=' → logprob: -2.5826945304870605
    3. ')' → logprob: -5.8326945304870605
    4. '()!=' → logprob: -7.5826945304870605
    5. ')!=' → logprob: -8.582695007324219
    6. ' )' → logprob: -9.582695007324219
    7. ' ==' → logprob: -10.332695007324219
    8. '==' → logprob: -10.582695007324219
    9. '()' → logprob: -10.707695007324219
    10. ' ' → logprob: -11.957695007324219

Token 164: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5820192098617554
    2. ' !=' → logprob: -0.8320192098617554
    3. '()!=' → logprob: -5.457019329071045
    4. '==' → logprob: -6.457019329071045
    5. ' ==' → logprob: -8.832018852233887
    6. '()' → logprob: -10.832018852233887
    7. '!=(' → logprob: -11.082018852233887
    8. '(' → logprob: -11.582018852233887
    9. '<|end|>' → logprob: -11.957018852233887
    10. '!==' → logprob: -12.207018852233887

Token 165: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2519344687461853
    2. ' len' → logprob: -1.50193452835083
    3. '(len' → logprob: -12.501934051513672
    4. '	len' → logprob: -14.001934051513672
    5. '   ' → logprob: -15.001934051513672
    6. '[len' → logprob: -15.751934051513672
    7. '=len' → logprob: -15.876934051513672
    8. '<len' → logprob: -16.001934051513672
    9. ',len' → logprob: -17.001934051513672
    10. ' ' → logprob: -17.126934051513672

Token 166: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -3.054500666621607e-06
    2. 'parts' → logprob: -13.25000286102295
    3. '(' → logprob: -14.00000286102295
    4. ' (' → logprob: -15.37500286102295
    5. ' parts' → logprob: -16.375003814697266
    6. '(part' → logprob: -17.875003814697266
    7. '(p' → logprob: -19.125003814697266
    8. '(
' → logprob: -20.500003814697266
    9. '.parts' → logprob: -21.000003814697266
    10. 'Parts' → logprob: -21.750003814697266

Token 167: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002222516923211515
    2. '1' → logprob: -8.500222206115723
    3. ')' → logprob: -11.375222206115723
    4. '_parts' → logprob: -13.000222206115723
    5. '_' → logprob: -13.375222206115723
    6. ' ' → logprob: -13.625222206115723
    7. '```' → logprob: -14.750222206115723
    8. 'parts' → logprob: -15.312722206115723
    9. '(parts' → logprob: -15.375222206115723
    10. ' parts' → logprob: -15.437722206115723

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017964430153369904
    2. ')' → logprob: -6.876796245574951
    3. ':' → logprob: -7.376796245574951
    4. '):
' → logprob: -9.50179672241211
    5. ' ):' → logprob: -10.37679672241211
    6. ' or' → logprob: -10.50179672241211
    7. ':return' → logprob: -13.50179672241211
    8. '():' → logprob: -14.00179672241211
    9. 'or' → logprob: -14.12679672241211
    10. '   ' → logprob: -14.62679672241211

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45724034309387207
    2. ':' → logprob: -1.332240343093872
    3. ':
' → logprob: -2.457240343093872
    4. '   ' → logprob: -4.707240104675293
    5. ':return' → logprob: -5.082240104675293
    6. ' or' → logprob: -6.582240104675293
    7. '    ' → logprob: -8.332240104675293
    8. ' and' → logprob: -9.082240104675293
    9. ' :
' → logprob: -9.332240104675293
    10. '):
' → logprob: -9.582240104675293

Token 170: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.11582612991333
    2. 'return' (adapté à ' return') → logprob: -1.11582612991333
    3. ' return' → logprob: -1.11582612991333
    4. '   ' → logprob: -4.11582612991333
    5. '
' → logprob: -7.49082612991333
    6. ' 
' → logprob: -9.240825653076172
    7. '	return' → logprob: -10.115825653076172
    8. '    ' → logprob: -10.615825653076172
    9. '        
' → logprob: -11.365825653076172
    10. ':return' → logprob: -12.115825653076172

Token 171: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001234428636962548
    2. ' False' → logprob: -9.000123023986816
    3. 'True' → logprob: -18.875123977661133
    4. '(False' → logprob: -19.000123977661133
    5. 'None' → logprob: -23.000123977661133
    6. 'false' → logprob: -23.125123977661133
    7. 'FALSE' → logprob: -24.000123977661133
    8. 'F' → logprob: -24.375123977661133
    9. '=False' → logprob: -24.375123977661133
    10. '_false' → logprob: -24.625123977661133

Token 172: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.611356258392334
    2. '
' → logprob: -0.861356258392334
    3. '    
' → logprob: -3.986356258392334
    4. '<|end|>' → logprob: -5.361356258392334
    5. '\n' → logprob: -5.736356258392334
    6. ' 
' → logprob: -6.111356258392334
    7. ' for' → logprob: -6.236356258392334
    8. '  
' → logprob: -6.236356258392334
    9. '   
' → logprob: -7.111356258392334
    10. 'for' → logprob: -8.486356735229492

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029818419367074966
    2. '    
' → logprob: -3.779818534851074
    3. '
' → logprob: -6.154818534851074
    4. ' for' → logprob: -6.779818534851074
    5. '   
' → logprob: -6.779818534851074
    6. ' 
' → logprob: -7.029818534851074
    7. '  
' → logprob: -7.779818534851074
    8. '<|end|>' → logprob: -8.279818534851074
    9. 'for' → logprob: -8.404818534851074
    10. '    ' → logprob: -9.154818534851074

Token 174: ' diff' (ID: 8868)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8695590496063232
    2. '   ' → logprob: -1.1195590496063232
    3. 'for' → logprob: -1.3695590496063232
    4. '	for' → logprob: -8.744559288024902
    5. '    
' → logprob: -10.494559288024902
    6. '
' → logprob: -10.994559288024902
    7. '  ' → logprob: -12.119559288024902
    8. ' ' → logprob: -12.369559288024902
    9. '       ' → logprob: -12.619559288024902
    10. ' 
' → logprob: -13.619559288024902

Token 175: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.22746510803699493
    2. 's' → logprob: -1.6024651527404785
    3. 'count' → logprob: -7.1024651527404785
    4. ' =' → logprob: -7.3524651527404785
    5. 'ers' → logprob: -8.97746467590332
    6. '_cnt' → logprob: -8.97746467590332
    7. '_index' → logprob: -9.72746467590332
    8. '_found' → logprob: -10.10246467590332
    9. 'er' → logprob: -10.47746467590332
    10. '=' → logprob: -10.47746467590332

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00015991552209015936
    2. '=' → logprob: -8.750160217285156
    3. ' ' → logprob: -13.500160217285156
    4. '  ' → logprob: -17.500160217285156
    5. ' +=' → logprob: -17.750160217285156
    6. ' =)' → logprob: -17.750160217285156
    7. '.' → logprob: -18.375160217285156
    8. 's' → logprob: -18.625160217285156
    9. ' ==' → logprob: -18.875160217285156
    10. ',' → logprob: -19.125160217285156

Token 177: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01416350994259119
    2. ' ' → logprob: -4.264163494110107
    3. '1' → logprob: -17.139163970947266
    4. '   ' → logprob: -18.889163970947266
    5. ' ' → logprob: -19.514163970947266
    6. '2' → logprob: -19.889163970947266
    7. '  ' → logprob: -20.264163970947266
    8. '۰' → logprob: -20.639163970947266
    9. '<|end|>' → logprob: -20.764163970947266
    10. 's' → logprob: -21.014163970947266

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -16.8750057220459
    4. 'sum' → logprob: -17.2500057220459
    5. '   ' → logprob: -18.8750057220459
    6. '2' → logprob: -19.1250057220459
    7. '۰' → logprob: -20.1250057220459
    8. '000' → logprob: -20.3750057220459
    9. '```' → logprob: -20.6250057220459
    10. 'int' → logprob: -20.6250057220459

Token 179: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11786376684904099
    2. '<|end|>' → logprob: -2.367863655090332
    3. '\n' → logprob: -5.117863655090332
    4. '   ' → logprob: -5.367863655090332
    5. ' 
' → logprob: -5.992863655090332
    6. '    
' → logprob: -6.867863655090332
    7. '<|end|>' → logprob: -7.117863655090332
    8. ' for' → logprob: -7.117863655090332
    9. '  
' → logprob: -7.242863655090332
    10. '\' → logprob: -8.117863655090332

Token 180: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01107045728713274
    2. ' for' → logprob: -4.511070251464844
    3. '   ' → logprob: -10.761070251464844
    4. '
' → logprob: -13.636070251464844
    5. '	for' → logprob: -15.886070251464844
    6. 'i' → logprob: -17.386070251464844
    7. '    
' → logprob: -17.636070251464844
    8. ' ' → logprob: -17.636070251464844
    9. ' 
' → logprob: -17.886070251464844
    10. '  ' → logprob: -18.886070251464844

Token 182: ' part' (ID: 997)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.996259868144989
    2. 'k' → logprob: -1.4962599277496338
    3. ' idx' → logprob: -1.9962599277496338
    4. 'p' → logprob: -2.496259927749634
    5. 'idx' → logprob: -2.496259927749634
    6. ' i' → logprob: -2.996259927749634
    7. 'x' → logprob: -3.746259927749634
    8. ' p' → logprob: -3.996259927749634
    9. ' k' → logprob: -5.246259689331055
    10. ' x' → logprob: -5.746259689331055

Token 183: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16112616658210754
    2. 'in' → logprob: -2.036126136779785
    3. '1' → logprob: -4.036126136779785
    4. '_' → logprob: -9.036126136779785
    5. '_in' → logprob: -9.036126136779785
    6. '[' → logprob: -9.286126136779785
    7. '_idx' → logprob: -9.286126136779785
    8. ' ' → logprob: -9.536126136779785
    9. '_index' → logprob: -9.536126136779785
    10. ',' → logprob: -11.286126136779785

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003535682801157236
    2. 'in' → logprob: -6.503535747528076
    3. ' in' → logprob: -6.753535747528076
    4. ' ,' → logprob: -7.128535747528076
    5. ',in' → logprob: -9.878535270690918
    6. ',p' → logprob: -12.378535270690918
    7. ',param' → logprob: -13.628535270690918
    8. '[' → logprob: -13.753535270690918
    9. ',line' → logprob: -14.503535270690918
    10. ' ' → logprob: -14.628535270690918

Token 185: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.01814994215965271
    2. 'part' → logprob: -4.0181498527526855
    3. '_part' → logprob: -17.768150329589844
    4. ' parts' → logprob: -17.768150329589844
    5. '	part' → logprob: -17.768150329589844
    6. ' ' → logprob: -18.268150329589844
    7. 'parts' → logprob: -19.393150329589844
    8. '(part' → logprob: -19.518150329589844
    9. ' ' → logprob: -19.643150329589844
    10. '    ' → logprob: -20.518150329589844

Token 186: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -14.250000953674316
    3. '1' → logprob: -15.125000953674316
    4. ',' → logprob: -15.250000953674316
    5. ' ' → logprob: -16.000001907348633
    6. ',_' → logprob: -17.375001907348633
    7. '```' → logprob: -18.000001907348633
    8. '₂' → logprob: -18.500001907348633
    9. ' _' → logprob: -18.625001907348633
    10. '_,' → logprob: -19.000001907348633

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007688851095736027
    2. 'in' → logprob: -4.882688999176025
    3. ',' → logprob: -9.507688522338867
    4. ' ' → logprob: -12.132688522338867
    5. '	in' → logprob: -13.757688522338867
    6. ' ,' → logprob: -14.257688522338867
    7. ',in' → logprob: -15.507688522338867
    8. '<|end|>' → logprob: -15.507688522338867
    9. 's' → logprob: -15.632688522338867
    10. '_in' → logprob: -15.632688522338867

Token 188: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.25193020701408386
    2. 'zip' → logprob: -1.5019302368164062
    3. '(zip' → logprob: -14.001930236816406
    4. '_zip' → logprob: -15.876930236816406
    5. '.zip' → logprob: -16.126930236816406
    6. ' ' → logprob: -18.126930236816406
    7. ' zipped' → logprob: -20.751930236816406
    8. 'Zip' → logprob: -20.876930236816406
    9. '   ' → logprob: -21.001930236816406
    10. 'z' → logprob: -21.626930236816406

Token 189: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.75
    3. ' (' → logprob: -15.75
    4. '(part' → logprob: -16.375
    5. ' parts' → logprob: -18.375
    6. 'parts' → logprob: -19.0
    7. '(p' → logprob: -19.875
    8. '(points' → logprob: -20.5
    9. '(par' → logprob: -21.125
    10. '(posts' → logprob: -21.5

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007948547718115151
    2. 'parts' → logprob: -7.875794887542725
    3. '(parts' → logprob: -8.000794410705566
    4. '_parts' → logprob: -10.375794410705566
    5. '(' → logprob: -11.125794410705566
    6. ' parts' → logprob: -11.250794410705566
    7. '_' → logprob: -12.250794410705566
    8. 's' → logprob: -12.500794410705566
    9. '(p' → logprob: -12.750794410705566
    10. ')' → logprob: -13.125794410705566

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2113979209971149e-05
    2. ' ,' → logprob: -11.500012397766113
    3. ',p' → logprob: -13.250012397766113
    4. '   ' → logprob: -16.125011444091797
    5. ',
' → logprob: -18.000011444091797
    6. ',)' → logprob: -18.625011444091797
    7. ',",' → logprob: -19.000011444091797
    8. '‌,' → logprob: -19.375011444091797
    9. ' ' → logprob: -19.750011444091797
    10. ',param' → logprob: -20.000011444091797

Token 192: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.38687753677368164
    2. 'parts' → logprob: -1.1368775367736816
    3. 'part' → logprob: -12.511877059936523
    4. '(parts' → logprob: -13.636877059936523
    5. '   ' → logprob: -14.511877059936523
    6. ' ' → logprob: -14.761877059936523
    7. ' part' → logprob: -15.761877059936523
    8. '_parts' → logprob: -16.011877059936523
    9. ')' → logprob: -16.261877059936523
    10. '.parts' → logprob: -16.261877059936523

Token 193: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16227342188358307
    2. '1' → logprob: -1.9122734069824219
    3. ')' → logprob: -6.912273406982422
    4. '):' → logprob: -7.287273406982422
    5. '):
' → logprob: -8.287273406982422
    6. '_' → logprob: -10.162273406982422
    7. ' ' → logprob: -10.912273406982422
    8. 's' → logprob: -11.037273406982422
    9. '   ' → logprob: -11.537273406982422
    10. ',' → logprob: -12.287273406982422

Token 194: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06199413165450096
    2. '):
' → logprob: -2.8119940757751465
    3. ':' → logprob: -11.311994552612305
    4. '):
' → logprob: -11.311994552612305
    5. ' ):' → logprob: -14.561994552612305
    6. '):

' → logprob: -14.686994552612305
    7. ')' → logprob: -14.811994552612305
    8. '   ' → logprob: -15.061994552612305
    9. '():' → logprob: -16.311994552612305
    10. ',' → logprob: -16.561994552612305

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020544764993246645
    2. '<|end|>' → logprob: -8.625205039978027
    3. '   ' → logprob: -12.250205039978027
    4. '    ' → logprob: -12.375205039978027
    5. '        
' → logprob: -12.750205039978027
    6. '<|end|>' → logprob: -12.750205039978027
    7. ',' → logprob: -12.750205039978027
    8. ' if' → logprob: -13.250205039978027
    9. '      ' → logprob: -13.375205039978027
    10. ':' → logprob: -14.000205039978027

Token 196: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34948205947875977
    2. ' if' → logprob: -1.2244820594787598
    3. 'if' (adapté à ' if') → logprob: -7.59948205947876
    4. '        ' → logprob: -8.599481582641602
    5. ' 
' → logprob: -8.599481582641602
    6. '           ' → logprob: -10.099481582641602
    7. '        
' → logprob: -10.224481582641602
    8. '   ' → logprob: -10.474481582641602
    9. '    ' → logprob: -10.724481582641602
    10. ' ' → logprob: -10.974481582641602

Token 197: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.693165123462677
    2. 'part' → logprob: -0.693165123462677
    3. '   ' → logprob: -11.943164825439453
    4. '	part' → logprob: -12.568164825439453
    5. '(part' → logprob: -12.943164825439453
    6. ' ' → logprob: -13.693164825439453
    7. 'parts' → logprob: -14.193164825439453
    8. 'not' → logprob: -14.318164825439453
    9. 'p' → logprob: -14.568164825439453
    10. ' not' → logprob: -14.693164825439453

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.875000953674316
    3. '```' → logprob: -16.375
    4. ' ' → logprob: -16.8125
    5. '2' → logprob: -18.0625
    6. '   ' → logprob: -18.25
    7. '[' → logprob: -18.4375
    8. '!=' → logprob: -18.875
    9. '...' → logprob: -19.375
    10. '۱' → logprob: -19.5

Token 199: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.01006711833178997
    2. '!=' → logprob: -4.635066986083984
    3. ' ' → logprob: -8.385066986083984
    4. ' ==' → logprob: -9.510066986083984
    5. '==' → logprob: -12.010066986083984
    6. '.' → logprob: -14.635066986083984
    7. '    ' → logprob: -15.135066986083984
    8. '.startswith' → logprob: -15.260066986083984
    9. ' not' → logprob: -15.260066986083984
    10. '.strip' → logprob: -15.510066986083984

Token 200: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.16022463142871857
    2. 'part' → logprob: -1.9102246761322021
    3. '	part' → logprob: -15.285224914550781
    4. '(part' → logprob: -15.785224914550781
    5. ' ' → logprob: -16.03522491455078
    6. '_part' → logprob: -19.16022491455078
    7. '   ' → logprob: -20.16022491455078
    8. 'Part' → logprob: -20.16022491455078
    9. '    ' → logprob: -20.28522491455078
    10. ' parts' → logprob: -20.53522491455078

Token 201: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9266199160483666e-05
    2. '1' → logprob: -10.875019073486328
    3. ' ' → logprob: -15.375019073486328
    4. '_' → logprob: -17.500019073486328
    5. '۲' → logprob: -20.000019073486328
    6. '   ' → logprob: -20.250019073486328
    7. '```' → logprob: -20.625019073486328
    8. '8' → logprob: -20.687519073486328
    9. '12' → logprob: -20.687519073486328
    10. '₂' → logprob: -21.250019073486328

Token 202: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31388428807258606
    2. ':
' → logprob: -1.3138842582702637
    3. ' and' → logprob: -8.438884735107422
    4. '           ' → logprob: -8.813884735107422
    5. '       ' → logprob: -9.188884735107422
    6. ':

' → logprob: -10.063884735107422
    7. '):
' → logprob: -10.438884735107422
    8. 'and' → logprob: -10.438884735107422
    9. ':
' → logprob: -11.188884735107422
    10. ' :
' → logprob: -11.563884735107422

Token 203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016110315918922424
    2. '
' → logprob: -7.376611232757568
    3. ':
' → logprob: -7.876611232757568
    4. '       ' → logprob: -8.62661075592041
    5. '            
' → logprob: -9.50161075592041
    6. ':' → logprob: -9.50161075592041
    7. '<|end|>' → logprob: -9.50161075592041
    8. '               ' → logprob: -9.87661075592041
    9. '):
' → logprob: -10.25161075592041
    10. ',' → logprob: -10.50161075592041

Token 204: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7789861559867859
    2. ' if' → logprob: -1.0289862155914307
    3. 'diff' → logprob: -2.2789862155914307
    4. ' diff' → logprob: -2.9039862155914307
    5. ' return' → logprob: -4.528985977172852
    6. '               ' → logprob: -4.528985977172852
    7. 'if' → logprob: -5.903985977172852
    8. 'return' → logprob: -7.403985977172852
    9. '            ' → logprob: -7.653985977172852
    10. '       ' → logprob: -8.028985977172852

Token 205: ' differ' (ID: 2171)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36015525460243225
    2. ' if' → logprob: -1.2351552248001099
    3. '           ' → logprob: -4.61015510559082
    4. 'return' → logprob: -7.11015510559082
    5. 'diff' → logprob: -7.61015510559082
    6. ' return' → logprob: -8.48515510559082
    7. 'If' → logprob: -9.86015510559082
    8. ' diff' → logprob: -10.23515510559082
    9. '```' → logprob: -10.61015510559082
    10. '       ' → logprob: -11.11015510559082

Token 206: ',' (ID: 11)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.9915912747383118
    2. 'ent' → logprob: -1.241591215133667
    3. 'ence' → logprob: -1.616591215133667
    4. '           ' → logprob: -3.616591215133667
    5. '   ' → logprob: -3.991591215133667
    6. '_token' → logprob: -4.116591453552246
    7. 'enti' → logprob: -4.241591453552246
    8. 'en' → logprob: -4.616591453552246
    9. '               ' → logprob: -4.991591453552246
    10. 's' → logprob: -4.991591453552246

Token 207: ' check' (ID: 2371)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.118767648935318
    2. 'if' → logprob: -2.743767738342285
    3. '           ' → logprob: -3.118767738342285
    4. ' diff' → logprob: -6.368767738342285
    5. 'diff' → logprob: -6.368767738342285
    6. '            ' → logprob: -11.243767738342285
    7. '            
' → logprob: -13.868767738342285
    8. '          ' → logprob: -13.868767738342285
    9. '	diff' → logprob: -14.118767738342285
    10. '               ' → logprob: -14.743767738342285

Token 208: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.007155064959079027
    2. '           ' → logprob: -5.007154941558838
    3. 'if' → logprob: -7.882154941558838
    4. '            ' → logprob: -10.007155418395996
    5. '               ' → logprob: -12.007155418395996
    6. ' tokens' → logprob: -12.757155418395996
    7. ' whether' → logprob: -13.632155418395996
    8. '          ' → logprob: -14.007155418395996
    9. ' token' → logprob: -14.257155418395996
    10. ' the' → logprob: -14.382155418395996

Token 209: ' both' (ID: 2973)
  Prédit: ' both'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' both' → logprob: -0.8502528071403503
    2. ' part' → logprob: -1.2252528667449951
    3. 'part' → logprob: -1.9752528667449951
    4. 'both' → logprob: -2.225252866744995
    5. ' (' → logprob: -5.350252628326416
    6. ' len' → logprob: -5.475252628326416
    7. 'len' → logprob: -5.475252628326416
    8. ' one' → logprob: -6.100252628326416
    9. ' not' → logprob: -6.100252628326416
    10. ' the' → logprob: -6.100252628326416

Token 210: ' are' (ID: 553)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.934571385383606
    2. '.startswith' → logprob: -1.184571385383606
    3. ' parts' → logprob: -1.684571385383606
    4. 'part' → logprob: -2.8095712661743164
    5. '.' → logprob: -3.1845712661743164
    6. 'startswith' → logprob: -4.934571266174316
    7. 'start' → logprob: -6.059571266174316
    8. '[' → logprob: -6.059571266174316
    9. ' part' → logprob: -6.809571266174316
    10. ' are' → logprob: -8.559571266174316

Token 211: ' string' (ID: 1621)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.6385378837585449
    2. 'strings' → logprob: -1.763537883758545
    3. ' string' → logprob: -1.888537883758545
    4. '"' → logprob: -2.138537883758545
    5. ' strings' → logprob: -3.638537883758545
    6. ''"' → logprob: -6.263537883758545
    7. 'quoted' → logprob: -7.013537883758545
    8. ' '"'' → logprob: -7.388537883758545
    9. 'inside' → logprob: -8.013538360595703
    10. '")' → logprob: -8.138538360595703

Token 212: ' literals' (ID: 193569)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.041447848081588745
    2. '"' → logprob: -3.541447877883911
    3. ' literals' → logprob: -6.416447639465332
    4. '[' → logprob: -6.666447639465332
    5. ')' → logprob: -6.666447639465332
    6. '_literals' → logprob: -6.791447639465332
    7. 'literal' → logprob: -7.166447639465332
    8. 'if' → logprob: -7.291447639465332
    9. '_' → logprob: -7.416447639465332
    10. '_literal' → logprob: -7.666447639465332

Token 213: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012881835922598839
    2. ' and' → logprob: -4.887881755828857
    3. '       ' → logprob: -5.762881755828857
    4. ' or' → logprob: -7.012881755828857
    5. ' if' → logprob: -7.887881755828857
    6. 'and' → logprob: -8.637882232666016
    7. ':' → logprob: -8.762882232666016
    8. ',' → logprob: -9.262882232666016
    9. '<|end|>' → logprob: -9.387882232666016
    10. ':
' → logprob: -9.637882232666016

Token 214: ' only' (ID: 1606)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.389940083026886
    2. 'part' → logprob: -1.2649400234222412
    3. 'len' → logprob: -4.38994026184082
    4. ' not' → logprob: -4.63994026184082
    5. ' len' → logprob: -5.13994026184082
    6. 'not' → logprob: -5.63994026184082
    7. ' (' → logprob: -5.63994026184082
    8. '(' → logprob: -5.88994026184082
    9. '(part' → logprob: -6.01494026184082
    10. '(
' → logprob: -9.51494026184082

Token 215: ' one' (ID: 1001)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0114924907684326
    2. ' differ' → logprob: -1.0114924907684326
    3. ' one' → logprob: -1.6364924907684326
    4. 'one' → logprob: -2.7614924907684326
    5. 'diff' → logprob: -5.636492729187012
    6. ' at' → logprob: -5.761492729187012
    7. 'at' → logprob: -6.636492729187012
    8. 'in' → logprob: -6.886492729187012
    9. ' in' → logprob: -6.886492729187012
    10. 'different' → logprob: -7.261492729187012

Token 216: ' difference' (ID: 9809)
  Prédit: ' character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.5306692719459534
    2. 'character' → logprob: -1.1556692123413086
    3. 'space' → logprob: -3.4056692123413086
    4. ' space' → logprob: -4.405669212341309
    5. ' ' → logprob: -4.780669212341309
    6. 'token' → logprob: -5.030669212341309
    7. ' token' → logprob: -5.155669212341309
    8. 'char' → logprob: -5.280669212341309
    9. '"' → logprob: -5.530669212341309
    10. ' of' → logprob: -5.780669212341309

Token 217: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11815424263477325
    2. ' in' → logprob: -3.368154287338257
    3. '           ' → logprob: -3.993154287338257
    4. ' s' → logprob: -4.368154048919678
    5. 'd' → logprob: -4.618154048919678
    6. ' ' → logprob: -4.743154048919678
    7. ':' → logprob: -5.118154048919678
    8. '"' → logprob: -5.868154048919678
    9. ' if' → logprob: -5.993154048919678
    10. ',' → logprob: -6.243154048919678

Token 218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019686005543917418
    2. ' if' → logprob: -6.5019683837890625
    3. '       ' → logprob: -9.251968383789062
    4. ',' → logprob: -9.251968383789062
    5. '               ' → logprob: -9.751968383789062
    6. ' and' → logprob: -10.376968383789062
    7. '            
' → logprob: -11.001968383789062
    8. '```' → logprob: -11.251968383789062
    9. ' tokens' → logprob: -11.376968383789062
    10. ' else' → logprob: -11.626968383789062

Token 219: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18791867792606354
    2. 'if' (adapté à ' if') → logprob: -1.8129186630249023
    3. '           ' → logprob: -4.812918663024902
    4. ' tokens' → logprob: -12.187918663024902
    5. 'tokens' → logprob: -13.062918663024902
    6. 'len' → logprob: -13.187918663024902
    7. '       ' → logprob: -14.187918663024902
    8. 'token' → logprob: -14.187918663024902
    9. 'import' → logprob: -14.562918663024902
    10. '   ' → logprob: -14.562918663024902

Token 220: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.31532761454582214
    2. ' part' → logprob: -2.0653276443481445
    3. 'part' → logprob: -2.4403276443481445
    4. 'not' → logprob: -3.0653276443481445
    5. ' len' → logprob: -5.1903276443481445
    6. 'len' → logprob: -6.1903276443481445
    7. ' (' → logprob: -7.0653276443481445
    8. '(part' → logprob: -7.1903276443481445
    9. '(not' → logprob: -8.190327644348145
    10. '(' → logprob: -8.690327644348145

Token 221: ' (' (ID: 350)
  Prédit: '(part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.05538543686270714
    2. ' (' → logprob: -2.9303853511810303
    3. '(' → logprob: -8.55538558959961
    4. 'part' → logprob: -9.05538558959961
    5. '(parts' → logprob: -9.18038558959961
    6. ' part' → logprob: -10.18038558959961
    7. '(p' → logprob: -10.18038558959961
    8. '((' → logprob: -11.80538558959961
    9. '(len' → logprob: -13.30538558959961
    10. '(
' → logprob: -13.30538558959961

Token 222: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.9504606825648807e-05
    2. ' part' → logprob: -11.000019073486328
    3. 'len' → logprob: -13.125019073486328
    4. '(part' → logprob: -14.250019073486328
    5. '   ' → logprob: -17.625019073486328
    6. 'p' → logprob: -18.125019073486328
    7. 'parts' → logprob: -18.375019073486328
    8. ' ' → logprob: -19.250019073486328
    9. 'Part' → logprob: -19.500019073486328
    10. '(' → logprob: -19.500019073486328

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.875000953674316
    3. ' ' → logprob: -16.250001907348633
    4. '.startswith' → logprob: -16.250001907348633
    5. '```' → logprob: -17.500001907348633
    6. '2' → logprob: -18.500001907348633
    7. '[
' → logprob: -19.000001907348633
    8. '_' → logprob: -19.125001907348633
    9. 'startswith' → logprob: -19.812501907348633
    10. 'part' → logprob: -19.875001907348633

Token 224: '.startswith' (ID: 64340)
  Prédit: '.startswith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.001290832064114511
    2. '[' → logprob: -7.251290798187256
    3. 'startswith' → logprob: -7.501290798187256
    4. 'and' → logprob: -11.001291275024414
    5. ' and' → logprob: -11.876291275024414
    6. '.' → logprob: -12.376291275024414
    7. '.starts' → logprob: -15.126291275024414
    8. ' starts' → logprob: -15.876291275024414
    9. 'starts' → logprob: -17.001291275024414
    10. '   ' → logprob: -17.001291275024414

Token 225: '('"' (ID: 79218)
  Prédit: ''"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''"' → logprob: -0.12708905339241028
    2. '('"' → logprob: -2.127089023590088
    3. '"' → logprob: -9.502089500427246
    4. '("\"' → logprob: -9.502089500427246
    5. ' '"'' → logprob: -11.752089500427246
    6. '(' → logprob: -13.502089500427246
    7. '"""' → logprob: -14.377089500427246
    8. ' '"' → logprob: -14.377089500427246
    9. '('' → logprob: -14.627089500427246
    10. '+'"' → logprob: -15.877089500427246

Token 226: '')' (ID: 1542)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0002636006975080818
    2. '')' → logprob: -8.250263214111328
    3. '')"' → logprob: -13.750263214111328
    4. '"'' → logprob: -15.125263214111328
    5. ''"' → logprob: -15.250263214111328
    6. '")' → logprob: -15.250263214111328
    7. '""' → logprob: -15.625263214111328
    8. ' "')' → logprob: -15.875263214111328
    9. '"',' → logprob: -16.250263214111328
    10. '"""' → logprob: -16.500263214111328

Token 227: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.251930832862854
    2. 'and' → logprob: -1.501930832862854
    3. ')' → logprob: -13.626931190490723
    4. ' ' → logprob: -14.876931190490723
    5. '           ' → logprob: -16.501930236816406
    6. '   ' → logprob: -17.001930236816406
    7. '          ' → logprob: -17.376930236816406
    8. '```' → logprob: -17.376930236816406
    9. '       ' → logprob: -17.501930236816406
    10. '&&' → logprob: -17.876930236816406

Token 228: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.2519608736038208
    2. ' part' → logprob: -1.5019608736038208
    3. '"' → logprob: -11.001960754394531
    4. '(part' → logprob: -12.626960754394531
    5. '           ' → logprob: -12.876960754394531
    6. ' ' → logprob: -13.251960754394531
    7. '   ' → logprob: -13.501960754394531
    8. '	part' → logprob: -14.126960754394531
    9. 'parts' → logprob: -14.251960754394531
    10. 'p' → logprob: -14.501960754394531

Token 229: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.080963092041202e-06
    2. '1' → logprob: -12.500004768371582
    3. '```' → logprob: -14.500004768371582
    4. '[' → logprob: -16.0000057220459
    5. 'part' → logprob: -16.0000057220459
    6. ' ' → logprob: -16.4375057220459
    7. 'art' → logprob: -16.8125057220459
    8. '"' → logprob: -16.9375057220459
    9. '.startswith' → logprob: -17.1250057220459
    10. '.endswith' → logprob: -17.4375057220459

Token 230: '.endswith' (ID: 100591)
  Prédit: '.endswith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.endswith' → logprob: -0.014919761568307877
    2. '.startswith' → logprob: -4.764919757843018
    3. 'ends' → logprob: -5.889919757843018
    4. '.' → logprob: -6.639919757843018
    5. 'and' → logprob: -6.889919757843018
    6. ' and' → logprob: -7.139919757843018
    7. 'startswith' → logprob: -8.514920234680176
    8. '[' → logprob: -8.889920234680176
    9. ')' → logprob: -11.389920234680176
    10. '==' → logprob: -11.764920234680176

Token 231: '('"' (ID: 79218)
  Prédit: '('"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('"' → logprob: -0.0005532711511477828
    2. ''"' → logprob: -7.500553131103516
    3. '(
' → logprob: -15.875553131103516
    4. ' ('' → logprob: -17.250553131103516
    5. '('' → logprob: -17.375553131103516
    6. '+'"' → logprob: -17.625553131103516
    7. '("\"' → logprob: -17.750553131103516
    8. '(' → logprob: -17.750553131103516
    9. ' '"' → logprob: -17.750553131103516
    10. '   ' → logprob: -17.875553131103516

Token 232: '')' (ID: 1542)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.21878699958324432
    2. '')' → logprob: -1.7187869548797607
    3. '")' → logprob: -4.09378719329834
    4. ''))' → logprob: -8.59378719329834
    5. '')):
' → logprob: -9.21878719329834
    6. '"'' → logprob: -9.34378719329834
    7. ')' → logprob: -9.84378719329834
    8. '')"' → logprob: -9.96878719329834
    9. ''' → logprob: -10.34378719329834
    10. ' and' → logprob: -11.09378719329834

Token 233: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006056774873286486
    2. 'and' → logprob: -5.256056785583496
    3. ')' → logprob: -7.131056785583496
    4. '           ' → logprob: -12.506056785583496
    5. '       ' → logprob: -12.631056785583496
    6. '          ' → logprob: -12.631056785583496
    7. '        ' → logprob: -12.881056785583496
    8. ' ' → logprob: -13.006056785583496
    9. ' )' → logprob: -13.131056785583496
    10. '    ' → logprob: -13.256056785583496

Token 234: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.029765525832772255
    2. 'part' → logprob: -3.5297656059265137
    3. '           ' → logprob: -11.779765129089355
    4. '            ' → logprob: -12.029765129089355
    5. '(part' → logprob: -14.029765129089355
    6. '             ' → logprob: -16.154766082763672
    7. '               ' → logprob: -16.154766082763672
    8. ' ' → logprob: -16.404766082763672
    9. '	part' → logprob: -16.529766082763672
    10. ' p' → logprob: -16.529766082763672

Token 235: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.955703818472102e-05
    2. '1' → logprob: -10.875059127807617
    3. '```' → logprob: -12.000059127807617
    4. '"' → logprob: -12.125059127807617
    5. ' ' → logprob: -12.375059127807617
    6. '.startswith' → logprob: -12.375059127807617
    7. '"_' → logprob: -12.750059127807617
    8. '   ' → logprob: -12.750059127807617
    9. 'startswith' → logprob: -13.125059127807617
    10. '")' → logprob: -13.250059127807617

Token 236: '.startswith' (ID: 64340)
  Prédit: '.startswith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.00023119196703191847
    2. '.' → logprob: -9.12523078918457
    3. 'startswith' → logprob: -9.12523078918457
    4. '.endswith' → logprob: -11.62523078918457
    5. '.starts' → logprob: -13.12523078918457
    6. ' .' → logprob: -13.50023078918457
    7. ').' → logprob: -15.12523078918457
    8. '".' → logprob: -15.75023078918457
    9. '[' → logprob: -15.87523078918457
    10. '.Starts' → logprob: -16.37523078918457

Token 237: '('"' (ID: 79218)
  Prédit: '('"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('"' → logprob: -0.0009209888521581888
    2. ''"' → logprob: -7.00092077255249
    3. '(' → logprob: -11.875921249389648
    4. '(
' → logprob: -13.625921249389648
    5. '("\"' → logprob: -14.250921249389648
    6. '"' → logprob: -14.875921249389648
    7. '('' → logprob: -15.500921249389648
    8. '("' → logprob: -16.37592124938965
    9. ' '"' → logprob: -17.37592124938965
    10. '("'' → logprob: -18.00092124938965

Token 238: '')' (ID: 1542)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00695323059335351
    2. '')' → logprob: -5.006953239440918
    3. ''"' → logprob: -9.006953239440918
    4. '')"' → logprob: -9.756953239440918
    5. '")' → logprob: -10.006953239440918
    6. '"'' → logprob: -11.631953239440918
    7. ' "')' → logprob: -13.506953239440918
    8. '"',' → logprob: -13.881953239440918
    9. ''' → logprob: -14.756953239440918
    10. ')' → logprob: -14.881953239440918

Token 239: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03901476413011551
    2. 'and' → logprob: -3.2890148162841797
    3. ')' → logprob: -7.28901481628418
    4. '"' → logprob: -8.41401481628418
    5. '")' → logprob: -10.16401481628418
    6. ' ' → logprob: -11.78901481628418
    7. ' "' → logprob: -12.03901481628418
    8. '<|end|>' → logprob: -12.03901481628418
    9. ''' → logprob: -12.41401481628418
    10. ' )' → logprob: -13.41401481628418

Token 240: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.07917662709951401
    2. ' part' → logprob: -2.579176664352417
    3. '"' → logprob: -8.329176902770996
    4. ''"' → logprob: -10.829176902770996
    5. '(part' → logprob: -11.579176902770996
    6. '")' → logprob: -11.954176902770996
    7. '	part' → logprob: -12.579176902770996
    8. '   ' → logprob: -13.454176902770996
    9. ' ' → logprob: -13.704176902770996
    10. ' '"'' → logprob: -14.079176902770996

Token 241: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.41190391778945923
    2. '"' → logprob: -1.4119038581848145
    3. ''"' → logprob: -2.4119038581848145
    4. '")' → logprob: -5.6619038581848145
    5. '"'' → logprob: -8.161904335021973
    6. ''' → logprob: -8.161904335021973
    7. '')"' → logprob: -10.161904335021973
    8. '')' → logprob: -10.411904335021973
    9. '"`' → logprob: -10.536904335021973
    10. '"_' → logprob: -10.661904335021973

Token 242: '.endswith' (ID: 100591)
  Prédit: '.endswith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.endswith' → logprob: -0.0010250702034682035
    2. 'ends' → logprob: -7.251025199890137
    3. 'and' → logprob: -8.626025199890137
    4. ' and' → logprob: -10.126025199890137
    5. '.ends' → logprob: -10.251025199890137
    6. '.' → logprob: -10.626025199890137
    7. ')' → logprob: -11.251025199890137
    8. ').' → logprob: -11.751025199890137
    9. ' .' → logprob: -11.751025199890137
    10. '```' → logprob: -13.251025199890137

Token 243: '('"' (ID: 79218)
  Prédit: '('"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('"' → logprob: -0.00016074994346126914
    2. ''"' → logprob: -8.750161170959473
    3. ' ('' → logprob: -13.375161170959473
    4. '('' → logprob: -15.000161170959473
    5. ' '"' → logprob: -15.875161170959473
    6. '(
' → logprob: -16.125160217285156
    7. '   ' → logprob: -16.875160217285156
    8. '='"' → logprob: -17.375160217285156
    9. '("\"' → logprob: -17.500160217285156
    10. '(' → logprob: -17.625160217285156

Token 244: '')):
' (ID: 199796)
  Prédit: '')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')):
' → logprob: -0.21853609383106232
    2. ')' → logprob: -2.718536138534546
    3. ''))' → logprob: -3.218536138534546
    4. '"' → logprob: -3.218536138534546
    5. ''):
' → logprob: -3.593536138534546
    6. ''):' → logprob: -4.343535900115967
    7. '"))' → logprob: -5.468535900115967
    8. '')' → logprob: -5.718535900115967
    9. '"):' → logprob: -6.968535900115967
    10. '")' → logprob: -7.468535900115967

Token 245: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000432695698691532
    2. '           ' → logprob: -7.87543249130249
    3. ':' → logprob: -11.500432968139648
    4. '                   ' → logprob: -11.875432968139648
    5. '       ' → logprob: -12.000432968139648
    6. ':
' → logprob: -12.250432968139648
    7. '                
' → logprob: -12.625432968139648
    8. '                ' → logprob: -12.750432968139648
    9. '):
' → logprob: -12.750432968139648
    10. ')' → logprob: -12.750432968139648

Token 246: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19972582161426544
    2. ' return' → logprob: -1.949725866317749
    3. '                   ' → logprob: -3.949725866317749
    4. '               ' → logprob: -3.949725866317749
    5. '
' → logprob: -9.199726104736328
    6. '                       ' → logprob: -9.449726104736328
    7. '   ' → logprob: -11.324726104736328
    8. '           ' → logprob: -11.449726104736328
    9. '	return' → logprob: -12.199726104736328
    10. '       ' → logprob: -12.824726104736328

Token 247: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.5491004129871726e-05
    2. ' False' → logprob: -10.000045776367188
    3. 'True' → logprob: -20.750045776367188
    4. '(False' → logprob: -22.750045776367188
    5. 'false' → logprob: -24.250045776367188
    6. 'F' → logprob: -25.250045776367188
    7. '
' → logprob: -25.625045776367188
    8. '=False' → logprob: -25.625045776367188
    9. '_false' → logprob: -25.750045776367188
    10. '"' → logprob: -27.125045776367188

Token 248: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45962944626808167
    2. '
' → logprob: -1.4596294164657593
    3. ' 
' → logprob: -2.084629535675049
    4. '            
' → logprob: -4.834629535675049
    5. '  
' → logprob: -6.084629535675049
    6. '\n' → logprob: -7.459629535675049
    7. '    
' → logprob: -7.959629535675049
    8. '       ' → logprob: -8.95962905883789
    9. '<|end|>' → logprob: -9.20962905883789
    10. '               ' → logprob: -9.33462905883789

Token 249: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014549975749105215
    2. ' 
' → logprob: -7.251454830169678
    3. '            
' → logprob: -8.126455307006836
    4. '       ' → logprob: -8.751455307006836
    5. '               ' → logprob: -9.251455307006836
    6. '            ' → logprob: -9.626455307006836
    7. ' ' → logprob: -10.626455307006836
    8. '
' → logprob: -11.001455307006836
    9. '  
' → logprob: -11.126455307006836
    10. ' continue' → logprob: -11.626455307006836

Token 250: ' diff' (ID: 8868)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34807366132736206
    2. '           ' → logprob: -2.223073720932007
    3. 'diff' (adapté à ' diff') → logprob: -2.848073720932007
    4. ' s' → logprob: -3.098073720932007
    5. ' diff' → logprob: -4.223073482513428
    6. 's' → logprob: -4.223073482513428
    7. ' if' → logprob: -4.598073482513428
    8. ' tokens' → logprob: -4.973073482513428
    9. 'token' → logprob: -5.723073482513428
    10. 'tokens' → logprob: -5.848073482513428

Token 251: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.0802738870552275e-05
    2. ' _' → logprob: -12.00001049041748
    3. '_' → logprob: -13.12501049041748
    4. '=_' → logprob: -14.50001049041748
    5. '_parts' → logprob: -14.87501049041748
    6. '\' → logprob: -15.00001049041748
    7. '_tokens' → logprob: -15.37501049041748
    8. 's' → logprob: -15.50001049041748
    9. '_diff' → logprob: -15.75001049041748
    10. 'count' → logprob: -16.125011444091797

Token 252: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0040801819413900375
    2. '+=' → logprob: -5.504080295562744
    3. ' =' → logprob: -13.379079818725586
    4. '=' → logprob: -15.629079818725586
    5. ' ' → logprob: -18.254079818725586
    6. ']+=' → logprob: -18.379079818725586
    7. ' -=' → logprob: -19.754079818725586
    8. '   ' → logprob: -20.004079818725586
    9. ' |=' → logprob: -20.004079818725586
    10. '+' → logprob: -20.379079818725586

Token 253: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '   ' → logprob: -20.250295639038086
    4. '```' → logprob: -20.500295639038086
    5. '0' → logprob: -21.500295639038086
    6. ' ' → logprob: -21.625295639038086
    7. '<|end|>' → logprob: -22.000295639038086
    8. '１' → logprob: -22.500295639038086
    9. '۱' → logprob: -22.687795639038086
    10. '2' → logprob: -22.812795639038086

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '<|end|>' → logprob: -21.0
    4. '```' → logprob: -21.625
    5. '۱' → logprob: -22.375
    6. '   ' → logprob: -23.0
    7. 'def' → logprob: -23.75
    8. '
' → logprob: -24.0625
    9. '１' → logprob: -24.375
    10. '2' → logprob: -24.4375

Token 255: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043448375072330236
    2. '       ' → logprob: -8.250434875488281
    3. '   ' → logprob: -9.250434875488281
    4. '
' → logprob: -10.250434875488281
    5. ' if' → logprob: -10.875434875488281
    6. '               ' → logprob: -11.500434875488281
    7. 'if' → logprob: -12.500434875488281
    8. '		' → logprob: -12.500434875488281
    9. '                   ' → logprob: -13.125434875488281
    10. '<|end|>' → logprob: -14.125434875488281

Token 256: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001446545124053955
    2. '       ' → logprob: -7.251446723937988
    3. '   ' → logprob: -7.876446723937988
    4. 'if' → logprob: -8.376446723937988
    5. ' if' → logprob: -9.251446723937988
    6. '
' → logprob: -11.376446723937988
    7. '               ' → logprob: -11.626446723937988
    8. '		' → logprob: -12.626446723937988
    9. '                   ' → logprob: -12.876446723937988
    10. ' ' → logprob: -13.876446723937988

Token 257: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00840428750962019
    2. '           ' → logprob: -5.25840425491333
    3. ' if' → logprob: -5.75840425491333
    4. '       ' → logprob: -12.133404731750488
    5. '               ' → logprob: -13.883404731750488
    6. '   ' → logprob: -13.883404731750488
    7. '```' → logprob: -14.258404731750488
    8. 'If' → logprob: -14.633404731750488
    9. 'continue' → logprob: -15.008404731750488
    10. 'return' → logprob: -15.008404731750488

Token 258: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.018150178715586662
    2. 'diff' → logprob: -4.018150329589844
    3. '	diff' → logprob: -15.393150329589844
    4. '(diff' → logprob: -17.893150329589844
    5. '   ' → logprob: -19.268150329589844
    6. ' ' → logprob: -20.768150329589844
    7. '
' → logprob: -22.143150329589844
    8. '    ' → logprob: -22.268150329589844
    9. '>' → logprob: -22.893150329589844
    10. '```' → logprob: -23.018150329589844

Token 259: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.5048530030981055e-06
    2. '>' → logprob: -13.625001907348633
    3. ' _' → logprob: -16.375001907348633
    4. '_' → logprob: -16.875001907348633
    5. 'count' → logprob: -17.000001907348633
    6. '_COUNT' → logprob: -17.250001907348633
    7. '_counts' → logprob: -17.375001907348633
    8. '_counter' → logprob: -17.875001907348633
    9. '_code' → logprob: -18.375001907348633
    10. '_token' → logprob: -18.375001907348633

Token 260: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5232204794883728
    2. ' >' → logprob: -0.8982204794883728
    3. '()>' → logprob: -10.52322006225586
    4. ' ' → logprob: -11.02322006225586
    5. '   ' → logprob: -11.39822006225586
    6. '1' → logprob: -11.64822006225586
    7. '<|end|>' → logprob: -12.02322006225586
    8. '[' → logprob: -12.14822006225586
    9. '2' → logprob: -12.14822006225586
    10. ')' → logprob: -12.39822006225586

Token 261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.250030517578125
    4. '0' → logprob: -18.375030517578125
    5. '```' → logprob: -18.750030517578125
    6. '  ' → logprob: -19.750030517578125
    7. '=' → logprob: -21.000030517578125
    8. '2' → logprob: -21.062530517578125
    9. '
' → logprob: -21.187530517578125
    10. '۱' → logprob: -21.625030517578125

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.7500057220459
    4. '0' → logprob: -19.3750057220459
    5. '2' → logprob: -19.5000057220459
    6. '  ' → logprob: -19.6250057220459
    7. '
' → logprob: -19.7500057220459
    8. '۱' → logprob: -20.1250057220459
    9. '```' → logprob: -20.9375057220459
    10. '１' → logprob: -21.2500057220459

Token 263: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34143635630607605
    2. '               ' → logprob: -1.5914363861083984
    3. ':
' → logprob: -2.7164363861083984
    4. '           ' → logprob: -4.591436386108398
    5. ':return' → logprob: -5.091436386108398
    6. '       ' → logprob: -5.966436386108398
    7. ')' → logprob: -9.091436386108398
    8. '):
' → logprob: -9.341436386108398
    9. '<|end|>' → logprob: -9.591436386108398
    10. '   ' → logprob: -9.716436386108398

Token 264: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019591135787777603
    2. ' return' → logprob: -8.625195503234863
    3. 'return' → logprob: -11.500195503234863
    4. '           ' → logprob: -12.750195503234863
    5. '                   ' → logprob: -13.625195503234863
    6. '       ' → logprob: -14.250195503234863
    7. '   ' → logprob: -14.625195503234863
    8. '              ' → logprob: -15.125195503234863
    9. '
' → logprob: -15.625195503234863
    10. '```' → logprob: -16.00019645690918

Token 265: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10768205672502518
    2. ' return' → logprob: -2.6076819896698
    3. '               ' → logprob: -3.6076819896698
    4. '                   ' → logprob: -6.857682228088379
    5. '
' → logprob: -9.482682228088379
    6. '   ' → logprob: -9.607682228088379
    7. '           ' → logprob: -9.857682228088379
    8. '       ' → logprob: -11.107682228088379
    9. '                       ' → logprob: -13.232682228088379
    10. '	return' → logprob: -13.732682228088379

Token 266: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020354038861114532
    2. ' False' → logprob: -8.500203132629395
    3. '(False' → logprob: -20.75020408630371
    4. 'True' → logprob: -21.37520408630371
    5. '_false' → logprob: -22.87520408630371
    6. 'F' → logprob: -23.37520408630371
    7. '=False' → logprob: -23.87520408630371
    8. 'false' → logprob: -24.62520408630371
    9. '.False' → logprob: -24.62520408630371
    10. ' ' → logprob: -25.37520408630371

Token 267: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14325328171253204
    2. '   ' → logprob: -2.3932533264160156
    3. '       ' → logprob: -3.6432533264160156
    4. '           ' → logprob: -4.893253326416016
    5. 'return' → logprob: -5.143253326416016
    6. ' return' → logprob: -6.268253326416016
    7. '	return' → logprob: -8.143253326416016
    8. '    
' → logprob: -8.268253326416016
    9. ' 
' → logprob: -10.518253326416016
    10. '        
' → logprob: -10.643253326416016

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5819805264472961
    2. '       ' → logprob: -1.4569804668426514
    3. '           ' → logprob: -1.7069804668426514
    4. 'return' → logprob: -3.7069804668426514
    5. '
' → logprob: -6.5819807052612305
    6. ' return' → logprob: -7.5819807052612305
    7. 'continue' → logprob: -8.58198070526123
    8. '```' → logprob: -9.45698070526123
    9. '	return' → logprob: -10.45698070526123
    10. ' continue' → logprob: -10.83198070526123

Token 269: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0397811196744442
    2. '   ' → logprob: -3.289781093597412
    3. ' return' → logprob: -6.414781093597412
    4. '
' → logprob: -9.78978157043457
    5. 'if' (adapté à ' if') → logprob: -10.66478157043457
    6. '    
' → logprob: -11.91478157043457
    7. '	return' → logprob: -12.16478157043457
    8. '```' → logprob: -12.41478157043457
    9. '  
' → logprob: -13.41478157043457
    10. '       ' → logprob: -13.41478157043457

Token 270: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.6931561827659607
    2. 'diff' → logprob: -0.6931561827659607
    3. '   ' → logprob: -12.443156242370605
    4. '	diff' → logprob: -12.818156242370605
    5. ' True' → logprob: -14.318156242370605
    6. 'True' → logprob: -14.318156242370605
    7. ' ' → logprob: -14.443156242370605
    8. '(diff' → logprob: -14.943156242370605
    9. '  ' → logprob: -17.06815528869629
    10. '    ' → logprob: -17.56815528869629

Token 271: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.000000953674316
    3. 'count' → logprob: -15.500000953674316
    4. ' _' → logprob: -16.5
    5. '_COUNT' → logprob: -17.875
    6. 'Count' → logprob: -18.75
    7. '\' → logprob: -19.125
    8. '_counts' → logprob: -19.125
    9. '_c' → logprob: -19.375
    10. ' count' → logprob: -19.5

Token 272: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5596945285797119
    2. '==' → logprob: -0.9346945285797119
    3. ' <=' → logprob: -3.684694528579712
    4. '<=' → logprob: -4.559694290161133
    5. '>' → logprob: -8.684694290161133
    6. ' >' → logprob: -10.309694290161133
    7. '<' → logprob: -10.309694290161133
    8. ' <' → logprob: -10.684694290161133
    9. '1' → logprob: -11.184694290161133
    10. '=' → logprob: -11.309694290161133

Token 273: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007665182929486036
    2. ' ' → logprob: -5.507665157318115
    3. '0' → logprob: -5.632665157318115
    4. '   ' → logprob: -14.320165634155273
    5. '  ' → logprob: -15.570165634155273
    6. ' ' → logprob: -16.945165634155273
    7. ' exactly' → logprob: -17.007665634155273
    8. '۱' → logprob: -17.070165634155273
    9. 'exact' → logprob: -17.132665634155273
    10. '```' → logprob: -17.257665634155273

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08898766338825226
    2. '0' → logprob: -2.4639875888824463
    3. ' ' → logprob: -9.963987350463867
    4. '   ' → logprob: -15.088987350463867
    5. '=' → logprob: -16.276487350463867
    6. '  ' → logprob: -16.401487350463867
    7. '```' → logprob: -16.526487350463867
    8. '01' → logprob: -16.776487350463867
    9. '۱' → logprob: -17.026487350463867
    10. '==' → logprob: -17.526487350463867

Token 275: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.576682448387146
    2. ':
' → logprob: -0.826682448387146
    3. ':return' → logprob: -7.3266825675964355
    4. '   ' → logprob: -10.076682090759277
    5. '       ' → logprob: -10.451682090759277
    6. ':
' → logprob: -11.951682090759277
    7. ':

' → logprob: -12.701682090759277
    8. 'return' → logprob: -13.576682090759277
    9. ' and' → logprob: -14.201682090759277
    10. ' or' → logprob: -14.576682090759277

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0068557970225811005
    2. 'return' → logprob: -5.1318559646606445
    3. ' return' → logprob: -7.2568559646606445
    4. '   ' → logprob: -8.506855964660645
    5. ' True' → logprob: -11.756855964660645
    6. 'True' → logprob: -11.881855964660645
    7. ':return' → logprob: -13.506855964660645
    8. '           ' → logprob: -13.631855964660645
    9. 'true' → logprob: -14.131855964660645
    10. '	return' → logprob: -15.256855964660645

Token 277: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7026727795600891
    2. 'return' (adapté à ' return') → logprob: -0.7026727795600891
    3. ' return' → logprob: -4.702672958374023
    4. '   ' → logprob: -7.827672958374023
    5. '	return' → logprob: -11.577672958374023
    6. '
' → logprob: -13.952672958374023
    7. '           ' → logprob: -15.202672958374023
    8. ' ' → logprob: -16.202672958374023
    9. '{return' → logprob: -16.577672958374023
    10. 'eturn' → logprob: -17.452672958374023

Token 278: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.1472419600977446e-06
    2. ' True' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.375001907348633
    4. 'true' → logprob: -22.750001907348633
    5. '(True' → logprob: -22.750001907348633
    6. 'False' → logprob: -23.250001907348633
    7. '=True' → logprob: -25.000001907348633
    8. '"' → logprob: -25.250001907348633
    9. '1' → logprob: -25.875001907348633
    10. 'TRUE' → logprob: -26.125001907348633

Token 279: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014879583613947034
    2. 'else' → logprob: -7.001487731933594
    3. 'return' → logprob: -7.501487731933594
    4. ' else' → logprob: -11.251487731933594
    5. ' return' → logprob: -12.251487731933594
    6. '
' → logprob: -13.126487731933594
    7. '	return' → logprob: -13.376487731933594
    8. '    
' → logprob: -13.876487731933594
    9. 'False' → logprob: -14.001487731933594
    10. '	else' → logprob: -15.626487731933594

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02356269769370556
    2. 'else' → logprob: -4.148562908172607
    3. 'return' → logprob: -5.023562908172607
    4. ' else' → logprob: -7.398562908172607
    5. ' return' → logprob: -8.64856243133545
    6. 'False' → logprob: -9.27356243133545
    7. '	return' → logprob: -11.27356243133545
    8. '    
' → logprob: -11.52356243133545
    9. '
' → logprob: -12.02356243133545
    10. '	else' → logprob: -12.64856243133545

Token 281: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02960212528705597
    2. 'else' → logprob: -4.02960205078125
    3. '   ' → logprob: -4.52960205078125
    4. ' return' → logprob: -7.52960205078125
    5. ' else' → logprob: -10.77960205078125
    6. 'False' → logprob: -11.15460205078125
    7. '	return' → logprob: -11.40460205078125
    8. '
' → logprob: -11.52960205078125
    9. '    
' → logprob: -11.90460205078125
    10. '```' → logprob: -14.52960205078125

Token 282: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0019286326132714748
    2. ' False' → logprob: -6.251928806304932
    3. '(False' → logprob: -22.376928329467773
    4. 'True' → logprob: -22.876928329467773
    5. '_false' → logprob: -23.251928329467773
    6. 'false' → logprob: -23.626928329467773
    7. '=False' → logprob: -24.626928329467773
    8. '.False' → logprob: -25.126928329467773
    9. '   ' → logprob: -26.501928329467773
    10. 'Falsy' → logprob: -26.751928329467773

Token 283: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: 'while' (ID: 7032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9334400296211243
    2. '<|end|>' → logprob: -1.0584399700164795
    3. '(' → logprob: -1.8084399700164795
    4. '#' → logprob: -3.4334399700164795
    5. '
' → logprob: -3.6834399700164795
    6. ':' → logprob: -4.433440208435059
    7. '[' → logprob: -5.308440208435059
    8. '\n' → logprob: -5.558440208435059
    9. '```' → logprob: -5.683440208435059
    10. '\' → logprob: -5.683440208435059

Token 285: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.002478273818269372
    2. 'True' → logprob: -6.002478122711182
    3. '(True' → logprob: -13.37747859954834
    4. ' ' → logprob: -14.25247859954834
    5. ' input' → logprob: -16.002477645874023
    6. '=True' → logprob: -16.127477645874023
    7. '1' → logprob: -17.252477645874023
    8. ' program' → logprob: -17.502477645874023
    9. ' Tru' → logprob: -18.252477645874023
    10. ' len' → logprob: -18.502477645874023

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12787578999996185
    2. ' :' → logprob: -2.127875804901123
    3. ':
' → logprob: -8.002875328063965
    4. '():' → logprob: -8.002875328063965
    5. ' :
' → logprob: -8.627875328063965
    6. '(' → logprob: -10.502875328063965
    7. '   ' → logprob: -10.752875328063965
    8. ',' → logprob: -11.252875328063965
    9. ' ' → logprob: -12.252875328063965
    10. ' (' → logprob: -12.377875328063965

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025990229099988937
    2. ' line' → logprob: -3.7759902477264404
    3. ' try' → logprob: -6.400990009307861
    4. ' user' → logprob: -8.52599048614502
    5. ' program' → logprob: -8.52599048614502
    6. ' command' → logprob: -8.52599048614502
    7. ' inp' → logprob: -8.65099048614502
    8. ' input' → logprob: -9.65099048614502
    9. '   ' → logprob: -9.65099048614502
    10. ' s' → logprob: -9.90099048614502

Token 288: ' s' (ID: 265)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5531457662582397
    2. ' line' → logprob: -1.5531457662582397
    3. 'try' → logprob: -1.9281457662582397
    4. 'p' → logprob: -3.9281458854675293
    5. ' try' → logprob: -3.9281458854675293
    6. 'program' → logprob: -4.178145885467529
    7. '   ' → logprob: -5.553145885467529
    8. 's' (adapté à ' s') → logprob: -5.803145885467529
    9. ' program' → logprob: -6.303145885467529
    10. 'code' → logprob: -6.553145885467529

Token 289: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31365954875946045
    2. '=' → logprob: -1.3136595487594604
    3. '=input' → logprob: -8.31365966796875
    4. '1' → logprob: -8.93865966796875
    5. ' ' → logprob: -11.43865966796875
    6. 's' → logprob: -12.81365966796875
    7. 'tring' → logprob: -13.56365966796875
    8. 'tr' → logprob: -13.81365966796875
    9. '   ' → logprob: -14.06365966796875
    10. '_' → logprob: -14.06365966796875

Token 290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5862265825271606
    2. ' =' → logprob: -0.8362265825271606
    3. ',' → logprob: -4.586226463317871
    4. '=input' → logprob: -10.211226463317871
    5. ' ,' → logprob: -13.586226463317871
    6. ',input' → logprob: -13.586226463317871
    7. 's' → logprob: -13.711226463317871
    8. 'input' → logprob: -14.461226463317871
    9. ' ' → logprob: -14.961226463317871
    10. ' =
' → logprob: -15.211226463317871

Token 291: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029750604182481766
    2. ' input' → logprob: -3.5297505855560303
    3. '(input' → logprob: -16.77975082397461
    4. '=input' → logprob: -16.90475082397461
    5. '	input' → logprob: -18.65475082397461
    6. ' ' → logprob: -19.65475082397461
    7. '<input' → logprob: -20.15475082397461
    8. '   ' → logprob: -20.27975082397461
    9. ',input' → logprob: -20.40475082397461
    10. '.input' → logprob: -21.77975082397461

Token 292: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.30171144008636475
    2. '(' → logprob: -2.0517115592956543
    3. '("' → logprob: -2.3017115592956543
    4. '('' → logprob: -3.5517115592956543
    5. '("("' → logprob: -6.176711559295654
    6. '("(' → logprob: -7.426711559295654
    7. '("")' → logprob: -8.176711082458496
    8. '(">' → logprob: -8.926711082458496
    9. '("""' → logprob: -10.551711082458496
    10. '('(' → logprob: -11.426711082458496

Token 293: '   ' (ID: 271)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6284026503562927
    2. 's' → logprob: -1.2534027099609375
    3. ' if' → logprob: -1.7534027099609375
    4. '   ' → logprob: -5.6284027099609375
    5. '<|end|>' → logprob: -5.8784027099609375
    6. ' ' → logprob: -7.6284027099609375
    7. 'if' → logprob: -7.6284027099609375
    8. ',' → logprob: -9.253402709960938
    9. '<|end|>' → logprob: -9.378402709960938
    10. '  
' → logprob: -10.253402709960938

Token 294: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6423137784004211
    2. 's' → logprob: -0.8923137784004211
    3. ' if' → logprob: -2.7673137187957764
    4. '   ' → logprob: -6.7673139572143555
    5. ' s' → logprob: -8.392313957214355
    6. 'If' → logprob: -12.517313957214355
    7. ' ' → logprob: -13.267313957214355
    8. '	if' → logprob: -13.642313957214355
    9. '<|end|>' → logprob: -14.142313957214355
    10. '  ' → logprob: -14.267313957214355

Token 295: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.033986594527959824
    2. ' not' → logprob: -3.4089865684509277
    3. 's' → logprob: -8.033987045288086
    4. 'not' → logprob: -11.658987045288086
    5. ' ' → logprob: -11.783987045288086
    6. '  ' → logprob: -16.408987045288086
    7. ' ' → logprob: -16.408987045288086
    8. '	s' → logprob: -16.783987045288086
    9. '   ' → logprob: -18.658987045288086
    10. '```' → logprob: -18.908987045288086

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003567959647625685
    2. ' ==' → logprob: -8.250356674194336
    3. '==' → logprob: -9.750356674194336
    4. '.strip' → logprob: -11.375356674194336
    5. '```' → logprob: -12.000356674194336
    6. '   ' → logprob: -12.375356674194336
    7. '.' → logprob: -12.750356674194336
    8. '()' → logprob: -13.250356674194336
    9. '=' → logprob: -13.875356674194336
    10. '_' → logprob: -14.000356674194336

Token 297: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10094046592712402
    2. '==' → logprob: -2.350940465927124
    3. '.strip' → logprob: -7.225940704345703
    4. '.' → logprob: -12.850940704345703
    5. '=' → logprob: -14.350940704345703
    6. ' ' → logprob: -14.475940704345703
    7. '.startswith' → logprob: -14.725940704345703
    8. ')==' → logprob: -15.100940704345703
    9. ' .' → logprob: -15.100940704345703
    10. '=="' → logprob: -15.225940704345703

Token 298: ' '.' (ID: 12662)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5848484039306641
    2. '""' → logprob: -0.8348484039306641
    3. '''' → logprob: -5.209848403930664
    4. '"":' → logprob: -6.209848403930664
    5. ''' → logprob: -6.834848403930664
    6. ' ""' → logprob: -8.209848403930664
    7. ' "' → logprob: -10.959848403930664
    8. ''ex' → logprob: -11.834848403930664
    9. ' "":
' → logprob: -11.959848403930664
    10. '"user' → logprob: -13.084848403930664

Token 299: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.20965883135795593
    2. '':' → logprob: -2.3346588611602783
    3. '.' → logprob: -2.8346588611602783
    4. ''' → logprob: -3.9596588611602783
    5. '"' → logprob: -5.459658622741699
    6. ':
' → logprob: -5.834658622741699
    7. ''):
' → logprob: -6.334658622741699
    8. '":
' → logprob: -6.459658622741699
    9. '':
' → logprob: -6.959658622741699
    10. '":' → logprob: -7.834658622741699

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2015780359506607
    2. '   ' → logprob: -1.7015780210494995
    3. ' break' → logprob: -9.076578140258789
    4. '     ' → logprob: -11.326578140258789
    5. ' ' → logprob: -11.701578140258789
    6. '	break' → logprob: -11.951578140258789
    7. '    ' → logprob: -12.076578140258789
    8. '           ' → logprob: -12.326578140258789
    9. '      ' → logprob: -12.326578140258789
    10. ':' → logprob: -13.201578140258789

Token 301: ' break' (ID: 2338)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8829534649848938
    2. 'break' (adapté à ' break') → logprob: -1.132953405380249
    3. ' break' → logprob: -1.382953405380249
    4. '       ' → logprob: -4.382953643798828
    5. '	break' → logprob: -6.882953643798828
    6. '           ' → logprob: -12.257953643798828
    7. ' ' → logprob: -13.257953643798828
    8. '_break' → logprob: -13.632953643798828
    9. '```' → logprob: -14.507953643798828
    10. '    ' → logprob: -15.007953643798828

Token 302: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18660621345043182
    2. 's' → logprob: -1.8116061687469482
    3. ' s' → logprob: -5.186606407165527
    4. '
' → logprob: -7.061606407165527
    5. '    
' → logprob: -8.686606407165527
    6. '  
' → logprob: -9.686606407165527
    7. '<|end|>' → logprob: -9.686606407165527
    8. ' ' → logprob: -10.936606407165527
    9. ' 
' → logprob: -11.061606407165527
    10. '  ' → logprob: -11.186606407165527

Token 303: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09072288125753403
    2. '   ' → logprob: -2.4657227993011475
    3. ' s' → logprob: -6.340723037719727
    4. '<|end|>' → logprob: -12.215723037719727
    5. '    
' → logprob: -12.465723037719727
    6. ' ' → logprob: -12.590723037719727
    7. '```' → logprob: -13.465723037719727
    8. '  ' → logprob: -13.715723037719727
    9. '	s' → logprob: -14.090723037719727
    10. ',' → logprob: -14.590723037719727

Token 304: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.11882820725440979
    2. ' s' → logprob: -2.368828296661377
    3. '   ' → logprob: -3.993828296661377
    4. '	s' → logprob: -11.118827819824219
    5. ' ' → logprob: -12.493827819824219
    6. '  ' → logprob: -14.118827819824219
    7. '    ' → logprob: -15.243827819824219
    8. '       ' → logprob: -15.993827819824219
    9. '.s' → logprob: -16.24382781982422
    10. '    
' → logprob: -16.61882781982422

Token 305: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -17.375
    3. '=' → logprob: -18.125
    4. ' ' → logprob: -18.625
    5. ' =' → logprob: -19.0
    6. '₂' → logprob: -20.125
    7. '２' → logprob: -20.5
    8. '_' → logprob: -20.875
    9. '   ' → logprob: -21.25
    10. '۲' → logprob: -21.375

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324547804892063
    2. '=' → logprob: -3.7732455730438232
    3. '=input' → logprob: -17.148244857788086
    4. ' ' → logprob: -17.773244857788086
    5. ' ' → logprob: -19.148244857788086
    6. 's' → logprob: -19.773244857788086
    7. '＝' → logprob: -20.398244857788086
    8. ')' → logprob: -20.523244857788086
    9. ',' → logprob: -20.773244857788086
    10. '.' → logprob: -21.023244857788086

Token 307: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759397745132446
    2. ' input' → logprob: -0.8259397745132446
    3. '=input' → logprob: -15.075940132141113
    4. '(input' → logprob: -17.325939178466797
    5. '   ' → logprob: -17.575939178466797
    6. '	input' → logprob: -18.200939178466797
    7. '<input' → logprob: -18.575939178466797
    8. '_input' → logprob: -18.950939178466797
    9. ' ' → logprob: -19.325939178466797
    10. '[input' → logprob: -19.700939178466797

Token 308: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.816093228830141e-06
    2. '()
' → logprob: -13.62500286102295
    3. '(' → logprob: -14.50000286102295
    4. '())' → logprob: -15.25000286102295
    5. ' ()' → logprob: -15.37500286102295
    6. '()]' → logprob: -15.62500286102295
    7. '().' → logprob: -15.87500286102295
    8. '()>' → logprob: -16.000001907348633
    9. '()

' → logprob: -16.250001907348633
    10. '()`' → logprob: -17.250001907348633

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10343212634325027
    2. ' if' → logprob: -2.6034321784973145
    3. 'if' → logprob: -3.7284321784973145
    4. '<|end|>' → logprob: -9.228431701660156
    5. 'print' → logprob: -9.478431701660156
    6. '
' → logprob: -11.603431701660156
    7. '	if' → logprob: -11.728431701660156
    8. '```' → logprob: -11.978431701660156
    9. ' print' → logprob: -12.103431701660156
    10. ' ' → logprob: -12.728431701660156

Token 310: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.030933456495404243
    2. 'if' (adapté à ' if') → logprob: -3.655933380126953
    3. ' print' → logprob: -5.780933380126953
    4. ' if' → logprob: -6.530933380126953
    5. '   ' → logprob: -9.530933380126953
    6. 'result' → logprob: -12.405933380126953
    7. '
' → logprob: -13.655933380126953
    8. '    
' → logprob: -14.405933380126953
    9. '```' → logprob: -16.030933380126953
    10. '	print' → logprob: -16.530933380126953

Token 311: ' s' (ID: 265)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.11291111260652542
    2. 'is' → logprob: -2.2379112243652344
    3. ' s' → logprob: -9.987911224365234
    4. ' not' → logprob: -10.612911224365234
    5. 's' → logprob: -11.237911224365234
    6. 'not' → logprob: -13.237911224365234
    7. ' ' → logprob: -13.487911224365234
    8. ' len' → logprob: -14.237911224365234
    9. '	is' → logprob: -14.987911224365234
    10. 'len' → logprob: -15.237911224365234

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030107740312814713
    2. '2' → logprob: -3.5301077365875244
    3. '_' → logprob: -8.655107498168945
    4. ' ==' → logprob: -9.405107498168945
    5. ' s' → logprob: -10.030107498168945
    6. '==' → logprob: -11.155107498168945
    7. '```' → logprob: -11.530107498168945
    8. ' ' → logprob: -11.905107498168945
    9. '_close' → logprob: -12.405107498168945
    10. ' not' → logprob: -12.530107498168945

Token 313: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5193159580230713
    2. '==' → logprob: -1.1443159580230713
    3. '.' → logprob: -3.6443159580230713
    4. '.startswith' → logprob: -4.019315719604492
    5. ' and' → logprob: -4.769315719604492
    6. 's' → logprob: -5.144315719604492
    7. '.endswith' → logprob: -5.394315719604492
    8. ' !=' → logprob: -5.644315719604492
    9. ' ' → logprob: -6.144315719604492
    10. '<|end|>' → logprob: -6.144315719604492

Token 314: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025032205507159233
    2. ''.' → logprob: -3.9000322818756104
    3. ' s' → logprob: -5.775032043457031
    4. ''' → logprob: -7.525032043457031
    5. ''s' → logprob: -7.900032043457031
    6. '".' → logprob: -8.775032043457031
    7. ''#' → logprob: -9.275032043457031
    8. '.' → logprob: -9.525032043457031
    9. '"."' → logprob: -10.400032043457031
    10. '   ' → logprob: -10.775032043457031

Token 315: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '```' → logprob: -17.0
    3. '1' → logprob: -18.75
    4. 's' → logprob: -18.875
    5. ' ' → logprob: -19.0
    6. '   ' → logprob: -19.125
    7. '"' → logprob: -19.25
    8. '_' → logprob: -19.5
    9. ''' → logprob: -19.875
    10. '₂' → logprob: -20.0

Token 316: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2083737552165985
    2. ' or' → logprob: -2.208373785018921
    3. ':
' → logprob: -2.583373785018921
    4. '   ' → logprob: -6.208373546600342
    5. '       ' → logprob: -7.458373546600342
    6. 'or' → logprob: -9.8333740234375
    7. ':return' → logprob: -10.9583740234375
    8. '    ' → logprob: -11.7083740234375
    9. '.' → logprob: -12.0833740234375
    10. ' :' → logprob: -12.2083740234375

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07316473871469498
    2. '   ' → logprob: -2.698164701461792
    3. ' print' → logprob: -6.448164939880371
    4. 'print' → logprob: -6.448164939880371
    5. '
' → logprob: -10.573164939880371
    6. '    
' → logprob: -12.073164939880371
    7. '	print' → logprob: -12.823164939880371
    8. ' or' → logprob: -12.948164939880371
    9. '	   ' → logprob: -13.198164939880371
    10. ' and' → logprob: -13.323164939880371

Token 318: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5415022373199463
    2. '   ' → logprob: -1.0415022373199463
    3. ' print' → logprob: -3.1665022373199463
    4. '       ' → logprob: -3.7915022373199463
    5. '
' → logprob: -8.541501998901367
    6. 'continue' → logprob: -9.291501998901367
    7. ' continue' → logprob: -10.166501998901367
    8. ' ' → logprob: -10.541501998901367
    9. '           ' → logprob: -10.666501998901367
    10. '    
' → logprob: -11.041501998901367

Token 319: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.14022377133369446
    2. '(' → logprob: -2.390223741531372
    3. '('' → logprob: -3.515223741531372
    4. '(True' → logprob: -5.015223979949951
    5. '(S' → logprob: -7.390223979949951
    6. '"' → logprob: -7.515223979949951
    7. '(E' → logprob: -8.390223503112793
    8. '(ok' → logprob: -9.015223503112793
    9. 'Yes' → logprob: -9.140223503112793
    10. '0' → logprob: -9.140223503112793

Token 320: 'IDENT' (ID: 38592)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.8348243832588196
    2. 'IDENT' → logprob: -1.7098243236541748
    3. 'Yes' → logprob: -2.209824323654175
    4. 'same' → logprob: -3.209824323654175
    5. 'exact' → logprob: -3.334824323654175
    6. 'OK' → logprob: -3.459824323654175
    7. 'equal' → logprob: -3.584824323654175
    8. ' identical' → logprob: -3.709824323654175
    9. 'yes' → logprob: -4.084824562072754
    10. 'Exactly' → logprob: -4.334824562072754

Token 321: 'ICAL' (ID: 29255)
  Prédit: 'ICAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ICAL' → logprob: -0.3527911901473999
    2. 'ITY' → logprob: -1.2277911901474
    3. '")' → logprob: -6.4777913093566895
    4. 'AL' → logprob: -6.9777913093566895
    5. 'ical' → logprob: -7.4777913093566895
    6. 'IC' → logprob: -7.9777913093566895
    7. 'I' → logprob: -8.102790832519531
    8. '"' → logprob: -8.227790832519531
    9. 'IT' → logprob: -9.477790832519531
    10. '"I' → logprob: -10.102790832519531

Token 322: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.3133099675178528
    2. '")' → logprob: -1.313309907913208
    3. '")
' → logprob: -10.188309669494629
    4. '"' → logprob: -12.688309669494629
    5. ' ")
' → logprob: -13.188309669494629
    6. '")

' → logprob: -13.438309669494629
    7. ')
' → logprob: -13.563309669494629
    8. ')' → logprob: -14.063309669494629
    9. '')
' → logprob: -14.438309669494629
    10. '"
' → logprob: -14.938309669494629

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005650151986628771
    2. 'elif' → logprob: -5.505650043487549
    3. '       ' → logprob: -7.005650043487549
    4. ' elif' → logprob: -7.880650043487549
    5. '<|end|>' → logprob: -8.505650520324707
    6. '	elif' → logprob: -10.755650520324707
    7. 'else' → logprob: -10.880650520324707
    8. ' else' → logprob: -11.380650520324707
    9. '    
' → logprob: -11.505650520324707
    10. '```' → logprob: -12.130650520324707

Token 324: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015363705344498158
    2. 'elif' (adapté à ' elif') → logprob: -4.390363693237305
    3. ' elif' → logprob: -5.890363693237305
    4. '	elif' → logprob: -9.890363693237305
    5. ' else' → logprob: -12.015363693237305
    6. '    
' → logprob: -12.015363693237305
    7. 'else' → logprob: -12.140363693237305
    8. '       ' → logprob: -12.265363693237305
    9. '<|end|>' → logprob: -12.640363693237305
    10. ' ' → logprob: -12.890363693237305

Token 325: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0008046258008107543
    2. 'is' → logprob: -7.125804424285889
    3. ' ' → logprob: -16.125804901123047
    4. ' not' → logprob: -17.625804901123047
    5. '    ' → logprob: -18.250804901123047
    6. 's' → logprob: -18.500804901123047
    7. '(is' → logprob: -19.000804901123047
    8. ' ' → logprob: -19.000804901123047
    9. '   ' → logprob: -19.875804901123047
    10. '	is' → logprob: -19.875804901123047

Token 326: '_close' (ID: 30665)
  Prédit: '_close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_close' → logprob: -1.8908587662735954e-05
    2. 'close' → logprob: -11.375019073486328
    3. '_closed' → logprob: -13.625019073486328
    4. '_CLOSE' → logprob: -13.625019073486328
    5. '_cl' → logprob: -13.750019073486328
    6. '_' → logprob: -14.000019073486328
    7. ' close' → logprob: -14.375019073486328
    8. ')_' → logprob: -14.375019073486328
    9. ' _' → logprob: -14.875019073486328
    10. 's' → logprob: -15.500019073486328

Token 327: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00014978687977418303
    2. '(' → logprob: -8.875149726867676
    3. ' (' → logprob: -11.625149726867676
    4. 's' → logprob: -14.000149726867676
    5. '(p' → logprob: -15.875149726867676
    6. ')' → logprob: -18.875150680541992
    7. '(
' → logprob: -19.250150680541992
    8. '((' → logprob: -19.625150680541992
    9. ' ' → logprob: -20.000150680541992
    10. '(S' → logprob: -20.250150680541992

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020497082732617855
    2. '2' → logprob: -8.875205039978027
    3. '(s' → logprob: -10.000205039978027
    4. 's' → logprob: -11.375205039978027
    5. '(' → logprob: -12.625205039978027
    6. ')' → logprob: -12.750205039978027
    7. 'close' → logprob: -14.500205039978027
    8. ' ' → logprob: -15.250205039978027
    9. '```' → logprob: -15.250205039978027
    10. ',' → logprob: -15.750205039978027

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020600393414497375
    2. ',s' → logprob: -3.8956003189086914
    3. ' ,' → logprob: -10.145600318908691
    4. 's' → logprob: -10.895600318908691
    5. '(' → logprob: -15.145600318908691
    6. '(s' → logprob: -15.770600318908691
    7. ' s' → logprob: -16.145601272583008
    8. ',
' → logprob: -16.395601272583008
    9. ',p' → logprob: -17.020601272583008
    10. '   ' → logprob: -17.895601272583008

Token 330: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38687121868133545
    2. ' s' → logprob: -1.1368712186813354
    3. ')' → logprob: -16.761871337890625
    4. ')s' → logprob: -16.761871337890625
    5. '   ' → logprob: -18.261871337890625
    6. '(s' → logprob: -18.511871337890625
    7. '	s' → logprob: -19.011871337890625
    8. ' ' → logprob: -19.261871337890625
    9. '`s' → logprob: -19.636871337890625
    10. '"s' → logprob: -20.386871337890625

Token 331: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. 's' → logprob: -15.5
    3. '```' → logprob: -19.125
    4. ' ' → logprob: -19.5
    5. '₂' → logprob: -20.0
    6. '２' → logprob: -20.0
    7. ')' → logprob: -20.25
    8. '۲' → logprob: -20.375
    9. 'p' → logprob: -21.125
    10. '_' → logprob: -21.25

Token 332: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5760171413421631
    2. '):' → logprob: -0.8260171413421631
    3. ':' → logprob: -9.701017379760742
    4. ':
' → logprob: -12.326017379760742
    5. '   ' → logprob: -12.951017379760742
    6. ')' → logprob: -12.951017379760742
    7. ' ):
' → logprob: -13.076017379760742
    8. ' ):' → logprob: -13.326017379760742
    9. '():
' → logprob: -13.451017379760742
    10. '):
' → logprob: -13.701017379760742

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007244677981361747
    2. 'print' → logprob: -7.3757243156433105
    3. ' print' → logprob: -9.875724792480469
    4. '   ' → logprob: -10.000724792480469
    5. '           ' → logprob: -14.625724792480469
    6. '	print' → logprob: -15.625724792480469
    7. '```' → logprob: -16.12572479248047
    8. '        
' → logprob: -16.75072479248047
    9. '	' → logprob: -17.12572479248047
    10. '	   ' → logprob: -17.50072479248047

Token 334: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0038979414384812117
    2. ' print' → logprob: -5.6288981437683105
    3. '   ' → logprob: -8.503897666931152
    4. '       ' → logprob: -9.503897666931152
    5. 'PRINT' → logprob: -11.628897666931152
    6. '           ' → logprob: -12.128897666931152
    7. '	print' → logprob: -12.378897666931152
    8. '```' → logprob: -14.503897666931152
    9. ' ' → logprob: -15.128897666931152
    10. '  ' → logprob: -15.628897666931152

Token 335: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.7729658540920354e-05
    2. '(' → logprob: -10.500027656555176
    3. '("("' → logprob: -15.625027656555176
    4. '("(' → logprob: -18.000028610229492
    5. '('' → logprob: -18.625028610229492
    6. '("""' → logprob: -20.875028610229492
    7. '(
' → logprob: -21.000028610229492
    8. '("_' → logprob: -21.625028610229492
    9. '("")' → logprob: -21.875028610229492
    10. ' ("' → logprob: -22.250028610229492

Token 336: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0030125302728265524
    2. '"' → logprob: -6.503012657165527
    3. 'SIM' → logprob: -7.253012657165527
    4. 'AL' → logprob: -8.503012657165527
    5. 'DI' → logprob: -8.753012657165527
    6. '"C' → logprob: -8.878012657165527
    7. 'ONE' → logprob: -9.128012657165527
    8. 'Close' → logprob: -10.253012657165527
    9. '.C' → logprob: -11.378012657165527
    10. '1' → logprob: -11.378012657165527

Token 337: 'LOSE' (ID: 38631)
  Prédit: 'LOSE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LOSE' → logprob: -0.0023218912538141012
    2. 'LO' → logprob: -6.127321720123291
    3. 'LOSED' → logprob: -10.00232219696045
    4. 'L' → logprob: -10.12732219696045
    5. 'O' → logprob: -11.37732219696045
    6. 'LOS' → logprob: -11.50232219696045
    7. 'l' → logprob: -12.12732219696045
    8. 'lose' → logprob: -12.75232219696045
    9. '_LO' → logprob: -12.87732219696045
    10. 'C' → logprob: -13.00232219696045

Token 338: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0004952482995577157
    2. '")
' → logprob: -7.625495433807373
    3. '"' → logprob: -12.625494956970215
    4. '")
' → logprob: -14.000494956970215
    5. ')' → logprob: -14.125494956970215
    6. '")

' → logprob: -14.125494956970215
    7. '')' → logprob: -14.625494956970215
    8. 'D' → logprob: -14.625494956970215
    9. ' ")' → logprob: -16.25049591064453
    10. '_' → logprob: -16.75049591064453

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013113131280988455
    2. 'else' → logprob: -6.751311302185059
    3. ' else' → logprob: -8.876311302185059
    4. 'elif' → logprob: -14.001311302185059
    5. '	else' → logprob: -15.126311302185059
    6. '       ' → logprob: -16.001312255859375
    7. '<|end|>' → logprob: -16.876312255859375
    8. ' elif' → logprob: -17.001312255859375
    9. '```' → logprob: -17.001312255859375
    10. ' ' → logprob: -18.126312255859375

Token 340: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1301533728837967
    2. 'else' (adapté à ' else') → logprob: -2.1301534175872803
    3. ' else' → logprob: -5.755153179168701
    4. 'elif' → logprob: -9.88015365600586
    5. '	else' → logprob: -13.25515365600586
    6. ' elif' → logprob: -14.38015365600586
    7. ' ' → logprob: -16.00515365600586
    8. '       ' → logprob: -16.75515365600586
    9. '  ' → logprob: -16.75515365600586
    10. '_else' → logprob: -17.50515365600586

Token 341: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07716243714094162
    2. ':' → logprob: -2.952162504196167
    3. ':
' → logprob: -3.827162504196167
    4. '   ' → logprob: -8.452162742614746
    5. '():
' → logprob: -10.952162742614746
    6. ',' → logprob: -12.327162742614746
    7. '():' → logprob: -12.452162742614746
    8. '           ' → logprob: -12.702162742614746
    9. '      ' → logprob: -12.827162742614746
    10. ' :
' → logprob: -13.077162742614746

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020441520027816296
    2. ' print' → logprob: -6.627044200897217
    3. 'print' → logprob: -7.627044200897217
    4. '   ' → logprob: -8.377043724060059
    5. '           ' → logprob: -15.252043724060059
    6. '	print' → logprob: -15.377043724060059
    7. '     ' → logprob: -16.002044677734375
    8. '```' → logprob: -16.252044677734375
    9. '	   ' → logprob: -16.877044677734375
    10. '      ' → logprob: -16.877044677734375

Token 343: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0003397535183466971
    2. ' print' → logprob: -8.00033950805664
    3. '       ' → logprob: -12.62533950805664
    4. '   ' → logprob: -13.87533950805664
    5. '	print' → logprob: -16.87533950805664
    6. '           ' → logprob: -19.50033950805664
    7. '```' → logprob: -20.37533950805664
    8. '.print' → logprob: -20.62533950805664
    9. ' ' → logprob: -21.87533950805664
    10. 'PRINT' → logprob: -22.12533950805664

Token 344: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.004079112783074379
    2. '(' → logprob: -5.504079341888428
    3. '("("' → logprob: -14.87907886505127
    4. '('' → logprob: -15.25407886505127
    5. '(
' → logprob: -15.75407886505127
    6. '()' → logprob: -17.004079818725586
    7. '("")' → logprob: -18.129079818725586
    8. '("(' → logprob: -18.379079818725586
    9. ' ("' → logprob: -18.879079818725586
    10. '"' → logprob: -19.379079818725586

Token 345: 'DI' (ID: 20764)
  Prédit: 'DI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DI' → logprob: -0.0001773192489054054
    2. 'DIST' → logprob: -9.250177383422852
    3. ' DIFFER' → logprob: -10.375177383422852
    4. 'NOT' → logprob: -10.625177383422852
    5. '"' → logprob: -12.000177383422852
    6. '"d' → logprob: -12.250177383422852
    7. 'different' → logprob: -12.750177383422852
    8. '不同' → logprob: -13.125177383422852
    9. '_DI' → logprob: -13.250177383422852
    10. 'WR' → logprob: -13.500177383422852

Token 346: 'FFER' (ID: 21805)
  Prédit: 'FFER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FFER' → logprob: -0.0001483564410591498
    2. 'FF' → logprob: -9.00014877319336
    3. 'F' → logprob: -11.00014877319336
    4. 'ST' → logprob: -12.00014877319336
    5. 'FER' → logprob: -13.87514877319336
    6. '"' → logprob: -15.12514877319336
    7. 'STANCE' → logprob: -15.37514877319336
    8. '
' → logprob: -15.75014877319336
    9. 'FFE' → logprob: -16.12514877319336
    10. 'ffer' → logprob: -16.25014877319336

Token 347: 'ENT' (ID: 2829)
  Prédit: 'ENT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENT' → logprob: -0.0001398929744027555
    2. '```' → logprob: -9.250140190124512
    3. 'NT' → logprob: -10.250140190124512
    4. ' ENT' → logprob: -12.625140190124512
    5. 'ent' → logprob: -13.000140190124512
    6. '
' → logprob: -14.250140190124512
    7. '``' → logprob: -14.375140190124512
    8. 'ANT' → logprob: -14.500140190124512
    9. '   ' → logprob: -15.125140190124512
    10. '

' → logprob: -16.250139236450195

Token 348: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00012868782505393028
    2. ')' → logprob: -9.000128746032715
    3. ')")' → logprob: -12.250128746032715
    4. '")
' → logprob: -14.875128746032715
    5. '}")' → logprob: -17.5001277923584
    6. '')' → logprob: -17.6251277923584
    7. '```' → logprob: -19.8751277923584
    8. '"))' → logprob: -20.1251277923584
    9. '");' → logprob: -20.2501277923584
    10. '"' → logprob: -20.5001277923584


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 346
Tokens correctement prédits (1ère position, stricte): 168
Tokens correctement prédits (1ère position, avec adaptation): 182
Tokens correctement prédits (top 10): 299
Précision stricte (1ère position): 48.55%
Précision adaptée (1ère position): 52.60%
Précision (top 10): 86.42%
================================================================================
