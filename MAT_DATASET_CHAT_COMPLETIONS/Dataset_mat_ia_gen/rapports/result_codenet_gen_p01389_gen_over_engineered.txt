================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class GridPosition:
    def __init__(self, row: int, col: int):
        self.row = row
        self.col = col

    def __eq__(self, other):
        return self.row == other.row and self.col == other.col

    def __hash__(self):
        return hash((self.row, self.col))

    def neighbors(self, max_row: int, max_col: int):
        if self.row + 1 < max_row:
            yield GridPosition(self.row + 1, self.col)
        if self.col + 1 < max_col:
            yield GridPosition(self.row, self.col + 1)

class CicadaGrid:
    def __init__(self, height: int, width: int, grid_data: list[str]):
        self.height = height
        self.width = width
        self.grid = [[int(ch) for ch in line] for line in grid_data]

    def cicadas_at(self, pos: GridPosition) -> int:
        return self.grid[pos.row][pos.col]

class PathCostCalculator:
    def __init__(self, cicada_grid: CicadaGrid):
        self.grid = cicada_grid
        self.dp = [[None for _ in range(self.grid.width)] for _ in range(self.grid.height)]

    def min_cicada_path_cost(self) -> int:
        # Start position (0,0) has no cicadas (by problem statement)
        self.dp[0][0] = 0
        for r in range(self.grid.height):
            for c in range(self.grid.width):
                pos = GridPosition(r, c)
                current_cost = self.dp[r][c]
                if current_cost is None:
                    continue
                for neighbor in pos.neighbors(self.grid.height, self.grid.width):
                    new_cost = current_cost + self.grid.cicadas_at(neighbor)
                    if self.dp[neighbor.row][neighbor.col] is None or self.dp[neighbor.row][neighbor.col] > new_cost:
                        self.dp[neighbor.row][neighbor.col] = new_cost
        # End position (H-1, W-1) also no cicadas by problem statement
        return self.dp[self.grid.height - 1][self.grid.width - 1]

class CicadaPathFinderFacade:
    def __init__(self, input_data: str):
        lines = input_data.strip().split('\n')
        h, w = map(int, lines[0].split())
        grid_lines = lines[1:]
        self.grid = CicadaGrid(h, w, grid_lines)
        self.calculator = PathCostCalculator(self.grid)

    def find_min_unpleasantness(self) -> int:
        return self.calculator.min_cicada_path_cost()

def main():
    import sys
    input_text = sys.stdin.read()
    facade = CicadaPathFinderFacade(input_text)
    print(facade.find_min_unpleasantness())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Grid' (ID: 18087)
  → Token d'amorce (pas de prédiction)

Token 2: 'Position' (ID: 5647)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8494423031806946
    2. ':' → logprob: -1.0994422435760498
    3. '{' → logprob: -1.5994422435760498
    4. '.' → logprob: -3.34944224357605
    5. ' {' → logprob: -6.474442481994629
    6. '[' → logprob: -8.099442481994629
    7. '```' → logprob: -8.849442481994629
    8. '(:' → logprob: -9.849442481994629
    9. ' ' → logprob: -10.599442481994629
    10. ' :' → logprob: -10.974442481994629

Token 4: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8063557147979736
    2. ':' → logprob: -0.9313557147979736
    3. '```' → logprob: -2.5563557147979736
    4. '   ' → logprob: -3.0563557147979736
    5. '(
' → logprob: -4.4313554763793945
    6. '.' → logprob: -5.0563554763793945
    7. '()' → logprob: -5.8063554763793945
    8. ' ' → logprob: -6.0563554763793945
    9. '\' → logprob: -6.4313554763793945
    10. ''' → logprob: -6.8063554763793945

Token 5: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09932651370763779
    2. '    ' → logprob: -3.2243266105651855
    3. '```' → logprob: -4.0993266105651855
    4. ' ' → logprob: -4.2243266105651855
    5. ' def' → logprob: -5.2243266105651855
    6. ' pass' → logprob: -5.3493266105651855
    7. '_' → logprob: -6.0993266105651855
    8. 'def' (adapté à ' def') → logprob: -6.2243266105651855
    9. '`' → logprob: -6.4743266105651855
    10. ' ```' → logprob: -6.8493266105651855

Token 6: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03611325845122337
    2. ' __' → logprob: -4.286113262176514
    3. '__' → logprob: -4.786113262176514
    4. ' ' → logprob: -4.911113262176514
    5. '    ' → logprob: -6.911113262176514
    6. '_' → logprob: -7.036113262176514
    7. '  ' → logprob: -7.536113262176514
    8. ' calculate' → logprob: -7.661113262176514
    9. ' )' → logprob: -8.036112785339355
    10. ' def' → logprob: -8.411112785339355

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -8.65707261255011e-06
    2. ' init' → logprob: -12.250008583068848
    3. '_init' → logprob: -12.625008583068848
    4. 'ini' → logprob: -15.125008583068848
    5. '	init' → logprob: -16.875009536743164
    6. '_' → logprob: -17.375009536743164
    7. 'in' → logprob: -17.500009536743164
    8. 'i' → logprob: -18.625009536743164
    9. 'inite' → logprob: -18.625009536743164
    10. '   ' → logprob: -19.625009536743164

Token 8: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6416692733764648
    2. '__(' → logprob: -0.7666692733764648
    3. '(' → logprob: -5.516669273376465
    4. '_' → logprob: -5.891669273376465
    5. '__(
' → logprob: -6.266669273376465
    6. '__((' → logprob: -8.641669273376465
    7. '__('' → logprob: -9.641669273376465
    8. '___' → logprob: -10.766669273376465
    9. '_(' → logprob: -10.766669273376465
    10. '(self' → logprob: -10.891669273376465

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004348413785919547
    2. ' self' → logprob: -7.750434875488281
    3. ')' → logprob: -13.000434875488281
    4. '(self' → logprob: -13.500434875488281
    5. ' ' → logprob: -15.875434875488281
    6. '	self' → logprob: -16.50043487548828
    7. ' )' → logprob: -16.75043487548828
    8. '       ' → logprob: -16.75043487548828
    9. '   ' → logprob: -17.00043487548828
    10. ',self' → logprob: -17.00043487548828

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15676555037498474
    2. ')' → logprob: -2.4067654609680176
    3. '_' → logprob: -3.1567654609680176
    4. ' ,' → logprob: -5.531765460968018
    5. 'self' → logprob: -5.781765460968018
    6. ' ' → logprob: -6.531765460968018
    7. ' )' → logprob: -6.656765460968018
    8. '(' → logprob: -7.656765460968018
    9. '):' → logprob: -7.906765460968018
    10. '<|end|>' → logprob: -7.906765460968018

Token 11: ' row' (ID: 5225)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07894663512706757
    2. ' self' → logprob: -2.578946590423584
    3. 'x' → logprob: -10.078947067260742
    4. ' x' → logprob: -11.328947067260742
    5. 'row' → logprob: -14.078947067260742
    6. 'grid' → logprob: -14.828947067260742
    7. '(self' → logprob: -14.828947067260742
    8. ')' → logprob: -14.828947067260742
    9. ' row' → logprob: -15.203947067260742
    10. ' grid' → logprob: -15.828947067260742

Token 12: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009013348608277738
    2. '):' → logprob: -7.750901222229004
    3. ')' → logprob: -8.250901222229004
    4. ' ,' → logprob: -8.875901222229004
    5. '_' → logprob: -11.250901222229004
    6. ',row' → logprob: -11.375901222229004
    7. '_,' → logprob: -12.000901222229004
    8. ',
' → logprob: -12.125901222229004
    9. ':' → logprob: -12.125901222229004
    10. ',column' → logprob: -12.375901222229004

Token 13: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16814863681793213
    2. ' int' → logprob: -3.0431485176086426
    3. ':int' → logprob: -3.0431485176086426
    4. ' ' → logprob: -4.418148517608643
    5. '<|end|>' → logprob: -4.418148517608643
    6. ' ,' → logprob: -4.793148517608643
    7. ',' → logprob: -5.043148517608643
    8. ')' → logprob: -5.293148517608643
    9. '=int' → logprob: -6.043148517608643
    10. ' )' → logprob: -6.168148517608643

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003851517685689032
    2. '):' → logprob: -8.750385284423828
    3. ' ,' → logprob: -9.375385284423828
    4. ')' → logprob: -9.375385284423828
    5. '   ' → logprob: -10.625385284423828
    6. ',
' → logprob: -11.875385284423828
    7. ',int' → logprob: -11.875385284423828
    8. '<|end|>' → logprob: -12.375385284423828
    9. ',row' → logprob: -12.875385284423828
    10. ',column' → logprob: -13.500385284423828

Token 15: ' col' (ID: 996)
  Prédit: 'column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'column' → logprob: -1.0733063220977783
    2. ' col' → logprob: -1.3233063220977783
    3. ' column' → logprob: -1.5733063220977783
    4. 'col' → logprob: -1.6983063220977783
    5. ' ' → logprob: -6.948306083679199
    6. ',column' → logprob: -9.0733060836792
    7. ''' → logprob: -9.3233060836792
    8. 'space' → logprob: -9.3233060836792
    9. ' ' → logprob: -9.6983060836792
    10. ' space' → logprob: -10.6983060836792

Token 16: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5252614617347717
    2. ':' → logprob: -1.025261402130127
    3. ')' → logprob: -3.025261402130127
    4. ',' → logprob: -7.525261402130127
    5. 's' → logprob: -8.150261878967285
    6. ':int' → logprob: -9.400261878967285
    7. '   ' → logprob: -9.525261878967285
    8. ' ):' → logprob: -9.525261878967285
    9. ' :' → logprob: -9.775261878967285
    10. '):
' → logprob: -10.025261878967285

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016069091856479645
    2. ' int' → logprob: -4.141068935394287
    3. ')' → logprob: -11.141069412231445
    4. ':int' → logprob: -11.391069412231445
    5. '[int' → logprob: -12.891069412231445
    6. ']int' → logprob: -13.266069412231445
    7. '=int' → logprob: -13.391069412231445
    8. '(int' → logprob: -13.641069412231445
    9. '	int' → logprob: -14.016069412231445
    10. '<int' → logprob: -14.266069412231445

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020977992098778486
    2. ')' → logprob: -6.2520976066589355
    3. '):
' → logprob: -9.752098083496094
    4. ':' → logprob: -9.752098083496094
    5. ',' → logprob: -10.377098083496094
    6. '   ' → logprob: -11.377098083496094
    7. '```' → logprob: -12.877098083496094
    8. ''):' → logprob: -13.127098083496094
    9. '),' → logprob: -14.127098083496094
    10. '       ' → logprob: -14.127098083496094

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02475486695766449
    2. ' ' → logprob: -4.899755001068115
    3. '   ' → logprob: -5.524755001068115
    4. '    ' → logprob: -5.649755001068115
    5. '<|end|>' → logprob: -5.649755001068115
    6. 'self' → logprob: -6.149755001068115
    7. '        ' → logprob: -7.149755001068115
    8. '_' → logprob: -7.399755001068115
    9. '     ' → logprob: -7.649755001068115
    10. ')' → logprob: -7.899755001068115

Token 20: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010591682977974415
    2. ' self' → logprob: -4.760591506958008
    3. '       ' → logprob: -6.385591506958008
    4. '        ' → logprob: -9.135591506958008
    5. '   ' → logprob: -9.760591506958008
    6. ' ' → logprob: -10.260591506958008
    7. 's' → logprob: -11.260591506958008
    8. '_' → logprob: -11.260591506958008
    9. '```' → logprob: -11.510591506958008
    10. 'space' → logprob: -11.635591506958008

Token 21: '.row' (ID: 24627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002107552019879222
    2. '.row' → logprob: -6.252107620239258
    3. ' .' → logprob: -9.252107620239258
    4. '.grid' → logprob: -10.127107620239258
    5. '._' → logprob: -11.752107620239258
    6. '.user' → logprob: -12.002107620239258
    7. ' ' → logprob: -12.377107620239258
    8. ')' → logprob: -13.377107620239258
    9. '.rows' → logprob: -13.502107620239258
    10. '.col' → logprob: -13.627107620239258

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24448536336421967
    2. '<|end|>' → logprob: -1.8694853782653809
    3. '.' → logprob: -3.869485378265381
    4. ')' → logprob: -4.244485378265381
    5. ',' → logprob: -4.619485378265381
    6. '_' → logprob: -4.744485378265381
    7. ' =' → logprob: -5.119485378265381
    8. '<|end|>' → logprob: -6.619485378265381
    9. ' ' → logprob: -7.744485378265381
    10. 'space' → logprob: -8.494484901428223

Token 23: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.1269330382347107
    2. 'row' → logprob: -2.1269330978393555
    3. '	row' → logprob: -13.001933097839355
    4. ' ' → logprob: -14.001933097839355
    5. '(row' → logprob: -14.376933097839355
    6. ' ' → logprob: -14.751933097839355
    7. '$row' → logprob: -14.876933097839355
    8. '=row' → logprob: -15.251933097839355
    9. '[row' → logprob: -16.12693214416504
    10. '    ' → logprob: -16.75193214416504

Token 24: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06877004355192184
    2. '<|end|>' → logprob: -3.318769931793213
    3. '```' → logprob: -4.943769931793213
    4. '   ' → logprob: -5.568769931793213
    5. '        
' → logprob: -5.693769931793213
    6. 'newline' → logprob: -5.818769931793213
    7. '\' → logprob: -6.193769931793213
    8. '    ' → logprob: -6.443769931793213
    9. ' ' → logprob: -6.568769931793213
    10. ',' → logprob: -6.568769931793213

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07733579725027084
    2. '<|end|>' → logprob: -2.702335834503174
    3. '        ' → logprob: -6.827335834503174
    4. '        
' → logprob: -6.952335834503174
    5. '    ' → logprob: -7.202335834503174
    6. ',' → logprob: -7.327335834503174
    7. '```' → logprob: -7.452335834503174
    8. ' ' → logprob: -7.577335834503174
    9. ')' → logprob: -7.577335834503174
    10. '<|end|>' → logprob: -7.827335834503174

Token 26: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03465307131409645
    2. 'self' (adapté à ' self') → logprob: -4.034653186798096
    3. ',' → logprob: -5.159653186798096
    4. '        ' → logprob: -6.034653186798096
    5. '<|end|>' → logprob: -6.284653186798096
    6. '        
' → logprob: -6.409653186798096
    7. ' ' → logprob: -6.909653186798096
    8. '```' → logprob: -7.034653186798096
    9. ' self' → logprob: -7.409653186798096
    10. '\' → logprob: -8.409652709960938

Token 27: '.col' (ID: 7320)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005252968054264784
    2. '.col' → logprob: -5.255252838134766
    3. ' .' → logprob: -12.005252838134766
    4. '.row' → logprob: -12.130252838134766
    5. '.column' → logprob: -12.255252838134766
    6. '.cell' → logprob: -15.255252838134766
    7. '.user' → logprob: -15.255252838134766
    8. '.grid' → logprob: -15.505252838134766
    9. '.cols' → logprob: -15.630252838134766
    10. '.columns' → logprob: -15.630252838134766

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5308743119239807
    2. '=' → logprob: -0.9058743119239807
    3. '<|end|>' → logprob: -4.905874252319336
    4. ')' → logprob: -8.530874252319336
    5. ' ' → logprob: -10.280874252319336
    6. '<|end|>' → logprob: -10.655874252319336
    7. '.' → logprob: -11.780874252319336
    8. '   ' → logprob: -11.905874252319336
    9. ' ==' → logprob: -11.905874252319336
    10. '```' → logprob: -12.030874252319336

Token 29: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.47408005595207214
    2. ' col' → logprob: -0.9740800857543945
    3. '	col' → logprob: -13.224080085754395
    4. 'colm' → logprob: -14.224080085754395
    5. 'coln' → logprob: -15.849080085754395
    6. ' coli' → logprob: -16.099079132080078
    7. '[col' → logprob: -16.349079132080078
    8. '(col' → logprob: -16.349079132080078
    9. ' ' → logprob: -16.474079132080078
    10. '.col' → logprob: -16.974079132080078

Token 30: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6095346212387085
    2. '
' → logprob: -1.6095346212387085
    3. '<|end|>' → logprob: -1.6095346212387085
    4. '\n' → logprob: -4.109534740447998
    5. '\' → logprob: -4.609534740447998
    6. '    
' → logprob: -5.109534740447998
    7. '.' → logprob: -5.484534740447998
    8. '```' → logprob: -5.734534740447998
    9. ' ' → logprob: -5.984534740447998
    10. '<|end|>' → logprob: -5.984534740447998

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07361225038766861
    2. '    
' → logprob: -3.3236122131347656
    3. '
' → logprob: -4.698612213134766
    4. '\' → logprob: -5.448612213134766
    5. ' ' → logprob: -5.698612213134766
    6. ' 
' → logprob: -5.698612213134766
    7. '    ' → logprob: -6.323612213134766
    8. '```' → logprob: -6.448612213134766
    9. '\n' → logprob: -6.573612213134766
    10. ')' → logprob: -6.698612213134766

Token 32: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.038467612117528915
    2. 'd' → logprob: -3.6634676456451416
    3. '   ' → logprob: -4.5384674072265625
    4. ' def' → logprob: -7.1634674072265625
    5. '    
' → logprob: -8.288467407226562
    6. '@' → logprob: -9.288467407226562
    7. ' ' → logprob: -9.413467407226562
    8. '```' → logprob: -9.538467407226562
    9. ')' → logprob: -10.788467407226562
    10. '    ' → logprob: -10.913467407226562

Token 33: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4761328399181366
    2. '_' → logprob: -1.226132869720459
    3. ' __' → logprob: -2.726132869720459
    4. ' _' → logprob: -4.601132869720459
    5. ' ==' → logprob: -5.601132869720459
    6. '__' → logprob: -6.351132869720459
    7. ' def' → logprob: -6.601132869720459
    8. ' is' → logprob: -7.101132869720459
    9. ' space' → logprob: -8.2261323928833
    10. '_equals' → logprob: -8.3511323928833

Token 34: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0017499112291261554
    2. 'repr' → logprob: -6.8767499923706055
    3. 'e' → logprob: -7.5017499923706055
    4. 'str' → logprob: -9.376749992370605
    5. 'init' → logprob: -9.751749992370605
    6. 'i' → logprob: -12.126749992370605
    7. '_' → logprob: -12.501749992370605
    8. '_eq' → logprob: -12.626749992370605
    9. 're' → logprob: -13.501749992370605
    10. 'hash' → logprob: -13.751749992370605

Token 35: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07928422093391418
    2. '__(' → logprob: -2.579284191131592
    3. '_' → logprob: -7.954284191131592
    4. '___' → logprob: -10.45428466796875
    5. '__((' → logprob: -12.57928466796875
    6. '__(
' → logprob: -12.57928466796875
    7. '__('' → logprob: -12.82928466796875
    8. '(' → logprob: -13.70428466796875
    9. '____' → logprob: -13.95428466796875
    10. '__

' → logprob: -14.57928466796875

Token 36: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.292907877039397e-06
    2. ')' → logprob: -13.37500286102295
    3. ' self' → logprob: -14.00000286102295
    4. 'other' → logprob: -14.50000286102295
    5. ' ' → logprob: -16.000003814697266
    6. '
' → logprob: -16.500003814697266
    7. '(self' → logprob: -17.125003814697266
    8. 's' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.625003814697266
    10. '0' → logprob: -17.625003814697266

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02803553268313408
    2. ' ,' → logprob: -4.153035640716553
    3. ')' → logprob: -5.028035640716553
    4. ' ' → logprob: -6.028035640716553
    5. 'self' → logprob: -6.528035640716553
    6. '<|end|>' → logprob: -6.903035640716553
    7. ' self' → logprob: -8.778035163879395
    8. ' )' → logprob: -9.278035163879395
    9. ',self' → logprob: -9.653035163879395
    10. '(self' → logprob: -9.778035163879395

Token 38: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.07891435921192169
    2. ' other' → logprob: -2.5789144039154053
    3. 'self' → logprob: -10.703914642333984
    4. 'o' → logprob: -14.203914642333984
    5. ' o' → logprob: -15.078914642333984
    6. ')' → logprob: -15.203914642333984
    7. ' self' → logprob: -15.578914642333984
    8. 'Other' → logprob: -15.703914642333984
    9. ' oth' → logprob: -16.078914642333984
    10. '(other' → logprob: -16.203914642333984

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2548978328704834
    2. ')' → logprob: -1.5048978328704834
    3. ' ):' → logprob: -6.6298980712890625
    4. ' )' → logprob: -6.8798980712890625
    5. ',' → logprob: -8.129898071289062
    6. ':' → logprob: -8.879898071289062
    7. '):
' → logprob: -9.379898071289062
    8. '<|end|>' → logprob: -9.879898071289062
    9. '),' → logprob: -12.004898071289062
    10. ' ,' → logprob: -12.254898071289062

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02497546561062336
    2. ' if' → logprob: -4.274975299835205
    3. ' return' → logprob: -5.399975299835205
    4. 'return' → logprob: -6.274975299835205
    5. ':' → logprob: -6.524975299835205
    6. '   ' → logprob: -7.274975299835205
    7. 'if' → logprob: -7.399975299835205
    8. ':return' → logprob: -7.899975299835205
    9. '<|end|>' → logprob: -8.149975776672363
    10. '    ' → logprob: -8.149975776672363

Token 41: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1264876425266266
    2. 'if' → logprob: -2.2514877319335938
    3. 'is' → logprob: -4.626487731933594
    4. '       ' → logprob: -5.876487731933594
    5. ' return' → logprob: -7.626487731933594
    6. ' if' → logprob: -8.501487731933594
    7. 'self' → logprob: -8.501487731933594
    8. ' isinstance' → logprob: -10.001487731933594
    9. 'other' → logprob: -11.501487731933594
    10. '   ' → logprob: -11.751487731933594

Token 42: ' self' (ID: 1051)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.6174600124359131
    2. ' self' → logprob: -1.367460012435913
    3. 'self' → logprob: -1.617460012435913
    4. 'is' → logprob: -4.992460250854492
    5. '(self' → logprob: -7.367460250854492
    6. ' (' → logprob: -9.492460250854492
    7. '(is' → logprob: -10.992460250854492
    8. ' is' → logprob: -11.742460250854492
    9. '(
' → logprob: -12.367460250854492
    10. '   ' → logprob: -13.242460250854492

Token 43: '.row' (ID: 24627)
  Prédit: '.row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -0.1610003411769867
    2. '.' → logprob: -1.911000370979309
    3. ' .' → logprob: -7.5360002517700195
    4. 'row' → logprob: -8.78600025177002
    5. ' is' → logprob: -10.53600025177002
    6. '.is' → logprob: -11.03600025177002
    7. '.col' → logprob: -11.91100025177002
    8. '.__' → logprob: -12.03600025177002
    9. '.rows' → logprob: -12.16100025177002
    10. ' ' → logprob: -12.41100025177002

Token 44: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.003651860635727644
    2. '==' → logprob: -5.628652095794678
    3. ' ' → logprob: -10.62865161895752
    4. '.' → logprob: -11.75365161895752
    5. '=' → logprob: -11.75365161895752
    6. ' .' → logprob: -13.37865161895752
    7. ' =' → logprob: -13.37865161895752
    8. '        ' → logprob: -13.37865161895752
    9. ' ==
' → logprob: -13.62865161895752
    10. '    ' → logprob: -14.00365161895752

Token 45: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.0040801819413900375
    2. 'other' → logprob: -5.504080295562744
    3. ' ' → logprob: -13.504079818725586
    4. '(other' → logprob: -16.129079818725586
    5. ' ' → logprob: -16.254079818725586
    6. '.other' → logprob: -16.629079818725586
    7. '_other' → logprob: -16.879079818725586
    8. 'Other' → logprob: -18.879079818725586
    9. ' oth' → logprob: -19.004079818725586
    10. ' andere' → logprob: -19.254079818725586

Token 46: '.row' (ID: 24627)
  Prédit: '.row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -0.25378865003585815
    2. '.' → logprob: -1.503788709640503
    3. ' .' → logprob: -6.878788471221924
    4. '.col' → logprob: -7.503788471221924
    5. '.token' → logprob: -10.128788948059082
    6. ' ' → logprob: -10.753788948059082
    7. '.rows' → logprob: -11.003788948059082
    8. '`.' → logprob: -11.128788948059082
    9. '".' → logprob: -11.253788948059082
    10. '​.' → logprob: -11.253788948059082

Token 47: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04341498762369156
    2. 'and' → logprob: -3.168415069580078
    3. '        ' → logprob: -8.543415069580078
    4. '       ' → logprob: -9.418415069580078
    5. ' ' → logprob: -9.543415069580078
    6. '    ' → logprob: -9.918415069580078
    7. '      ' → logprob: -12.168415069580078
    8. '<|end|>' → logprob: -12.668415069580078
    9. '   ' → logprob: -12.918415069580078
    10. '  ' → logprob: -13.043415069580078

Token 48: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.03493353724479675
    2. ' other' → logprob: -3.659933567047119
    3. 'self' → logprob: -4.784933567047119
    4. 'other' → logprob: -8.659933090209961
    5. ' ' → logprob: -10.284933090209961
    6. ' ' → logprob: -10.909933090209961
    7. '        ' → logprob: -11.909933090209961
    8. '```' → logprob: -13.659933090209961
    9. '(self' → logprob: -13.784933090209961
    10. '    ' → logprob: -13.909933090209961

Token 49: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -0.01816258206963539
    2. '.' → logprob: -4.018162727355957
    3. ' .' → logprob: -11.768162727355957
    4. '.cols' → logprob: -13.643162727355957
    5. '.cod' → logprob: -13.643162727355957
    6. '.Col' → logprob: -14.268162727355957
    7. '.row' → logprob: -15.018162727355957
    8. '	col' → logprob: -16.01816177368164
    9. '.coll' → logprob: -16.14316177368164
    10. '.con' → logprob: -16.14316177368164

Token 50: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.009763529524207115
    2. '==' → logprob: -4.634763717651367
    3. ' ' → logprob: -12.759763717651367
    4. '<|end|>' → logprob: -13.259763717651367
    5. '=' → logprob: -14.259763717651367
    6. '  ' → logprob: -14.884763717651367
    7. ' ==
' → logprob: -14.884763717651367
    8. '<|end|>' → logprob: -15.134763717651367
    9. ' =' → logprob: -15.259763717651367
    10. ')' → logprob: -15.509763717651367

Token 51: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.3132658004760742
    2. 'other' → logprob: -1.3132658004760742
    3. '(other' → logprob: -13.313265800476074
    4. 'Other' → logprob: -14.313265800476074
    5. '.other' → logprob: -14.313265800476074
    6. ' ' → logprob: -14.688265800476074
    7. '_other' → logprob: -15.438265800476074
    8. ' oth' → logprob: -15.813265800476074
    9. ' ' → logprob: -15.938265800476074
    10. 'col' → logprob: -16.18826675415039

Token 52: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -0.023335972800850868
    2. '.' → logprob: -3.7733359336853027
    3. ' .' → logprob: -9.523336410522461
    4. '   ' → logprob: -13.023336410522461
    5. 'col' → logprob: -13.148336410522461
    6. '[col' → logprob: -13.398336410522461
    7. ').' → logprob: -13.523336410522461
    8. ' col' → logprob: -13.648336410522461
    9. '.row' → logprob: -14.148336410522461
    10. ' ' → logprob: -14.148336410522461

Token 53: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16474390029907227
    2. '
' → logprob: -2.6647439002990723
    3. '<|end|>' → logprob: -3.6647439002990723
    4. ' ' → logprob: -4.039743900299072
    5. ' 
' → logprob: -4.164743900299072
    6. '    
' → logprob: -4.539743900299072
    7. '```' → logprob: -5.914743900299072
    8. '\n' → logprob: -6.414743900299072
    9. '\' → logprob: -6.664743900299072
    10. '  
' → logprob: -6.914743900299072

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011115968227386475
    2. '    
' → logprob: -5.011116027832031
    3. '
' → logprob: -6.136116027832031
    4. ' 
' → logprob: -7.386116027832031
    5. ' ' → logprob: -8.011116027832031
    6. '```' → logprob: -8.011116027832031
    7. '<|end|>' → logprob: -8.136116027832031
    8. 'def' → logprob: -8.886116027832031
    9. '    ' → logprob: -9.636116027832031
    10. '   
' → logprob: -9.761116027832031

Token 55: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09536315500736237
    2. 'def' (adapté à ' def') → logprob: -2.470363140106201
    3. ' def' → logprob: -5.595363140106201
    4. ' ' → logprob: -6.845363140106201
    5. '    
' → logprob: -7.220363140106201
    6. '    ' → logprob: -8.34536361694336
    7. ' 
' → logprob: -8.72036361694336
    8. '```' → logprob: -8.97036361694336
    9. '
' → logprob: -9.22036361694336
    10. '  ' → logprob: -9.22036361694336

Token 56: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.034586045891046524
    2. '__' → logprob: -3.534585952758789
    3. ' def' → logprob: -6.159585952758789
    4. 'def' → logprob: -6.409585952758789
    5. 'hash' → logprob: -7.909585952758789
    6. ' hash' → logprob: -8.034585952758789
    7. 'repr' → logprob: -9.159585952758789
    8. ' ' → logprob: -9.534585952758789
    9. ' ' → logprob: -9.659585952758789
    10. ' str' → logprob: -10.159585952758789

Token 57: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.04981948435306549
    2. 'lt' → logprob: -3.1748194694519043
    3. 'repr' → logprob: -5.299819469451904
    4. 'ne' → logprob: -6.424819469451904
    5. 'str' → logprob: -8.674819946289062
    6. 'gt' → logprob: -12.174819946289062
    7. 'add' → logprob: -12.799819946289062
    8. 'ge' → logprob: -13.924819946289062
    9. 'eq' → logprob: -14.049819946289062
    10. 'le' → logprob: -14.424819946289062

Token 58: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16370239853858948
    2. '(self' → logprob: -1.913702368736267
    3. '__(' → logprob: -6.038702487945557
    4. ')(' → logprob: -8.038702011108398
    5. '   ' → logprob: -8.288702011108398
    6. ' (' → logprob: -8.413702011108398
    7. ')' → logprob: -9.413702011108398
    8. ' ' → logprob: -9.913702011108398
    9. '_(' → logprob: -10.413702011108398
    10. '```' → logprob: -10.788702011108398

Token 59: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.896309739408025e-07
    2. ')' → logprob: -14.750000953674316
    3. ' self' → logprob: -15.250000953674316
    4. '   ' → logprob: -16.375
    5. ' ' → logprob: -18.375
    6. '       ' → logprob: -19.75
    7. 's' → logprob: -19.875
    8. '
' → logprob: -20.0
    9. '(self' → logprob: -20.0
    10. '	self' → logprob: -20.375

Token 60: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04989966005086899
    2. '):' → logprob: -3.0498995780944824
    3. 'self' → logprob: -7.424899578094482
    4. ')' → logprob: -7.549899578094482
    5. ' ,' → logprob: -9.04990005493164
    6. ',self' → logprob: -10.54990005493164
    7. '):
' → logprob: -11.17490005493164
    8. '   ' → logprob: -11.54990005493164
    9. ' ):' → logprob: -11.79990005493164
    10. '(self' → logprob: -12.67490005493164

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04875495657324791
    2. ' return' → logprob: -3.173754930496216
    3. '   ' → logprob: -5.798755168914795
    4. ' hash' → logprob: -6.423755168914795
    5. '        ' → logprob: -7.548755168914795
    6. 'return' → logprob: -8.048754692077637
    7. '    ' → logprob: -8.923754692077637
    8. '      ' → logprob: -10.173754692077637
    9. 'hash' → logprob: -10.298754692077637
    10. ' ' → logprob: -10.798754692077637

Token 62: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03765960782766342
    2. '       ' → logprob: -3.7876596450805664
    3. 'hash' → logprob: -4.412659645080566
    4. ' return' → logprob: -6.787659645080566
    5. '   ' → logprob: -6.912659645080566
    6. ' hash' → logprob: -10.412659645080566
    7. 'self' → logprob: -11.287659645080566
    8. '(hash' → logprob: -11.787659645080566
    9. ' ' → logprob: -11.912659645080566
    10. 'ret' → logprob: -13.037659645080566

Token 63: ' hash' (ID: 10691)
  Prédit: ' hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hash' → logprob: -0.47581395506858826
    2. 'hash' → logprob: -0.9758139848709106
    3. '(hash' → logprob: -7.350813865661621
    4. '   ' → logprob: -7.600813865661621
    5. ' self' → logprob: -7.725813865661621
    6. 'self' → logprob: -8.850813865661621
    7. ' (' → logprob: -12.850813865661621
    8. '(self' → logprob: -13.100813865661621
    9. '       ' → logprob: -13.600813865661621
    10. ' ' → logprob: -13.725813865661621

Token 64: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.011475122533738613
    2. '(' → logprob: -4.511475086212158
    3. '(self' → logprob: -7.761475086212158
    4. '(s' → logprob: -15.136475563049316
    5. '(tuple' → logprob: -15.636475563049316
    6. '(
' → logprob: -15.761475563049316
    7. '(('' → logprob: -15.761475563049316
    8. '(super' → logprob: -15.761475563049316
    9. '(("' → logprob: -16.636474609375
    10. '(()' → logprob: -16.636474609375

Token 65: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.45848218582978e-06
    2. ' self' → logprob: -13.12500286102295
    3. '       ' → logprob: -15.50000286102295
    4. '   ' → logprob: -16.500001907348633
    5. '(self' → logprob: -17.375001907348633
    6. 'sel' → logprob: -18.875001907348633
    7. '
' → logprob: -18.875001907348633
    8. '           ' → logprob: -20.000001907348633
    9. '	self' → logprob: -20.250001907348633
    10. ' ' → logprob: -20.375001907348633

Token 66: '.row' (ID: 24627)
  Prédit: '.row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -0.00044532763422466815
    2. '.' → logprob: -7.750445365905762
    3. ' .' → logprob: -11.625445365905762
    4. '.col' → logprob: -12.250445365905762
    5. '.rows' → logprob: -15.375445365905762
    6. '.grid' → logprob: -16.000444412231445
    7. '.Row' → logprob: -16.250444412231445
    8. ').' → logprob: -16.750444412231445
    9. '.user' → logprob: -16.875444412231445
    10. 'row' → logprob: -17.000444412231445

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011164903844473884
    2. ' ,' → logprob: -9.12511157989502
    3. ',self' → logprob: -13.62511157989502
    4. ',
' → logprob: -14.25011157989502
    5. ',col' → logprob: -14.62511157989502
    6. '       ' → logprob: -16.250112533569336
    7. '',' → logprob: -16.625112533569336
    8. '   ' → logprob: -16.750112533569336
    9. ',row' → logprob: -17.000112533569336
    10. 'self' → logprob: -17.250112533569336

Token 68: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5232511758804321
    2. 'self' → logprob: -0.8982511758804321
    3. '       ' → logprob: -9.8982515335083
    4. ' ' → logprob: -10.3982515335083
    5. '        ' → logprob: -10.6482515335083
    6. '    ' → logprob: -11.7732515335083
    7. '   ' → logprob: -12.3982515335083
    8. ' col' → logprob: -13.0232515335083
    9. ' ' → logprob: -13.1482515335083
    10. '  ' → logprob: -13.3982515335083

Token 69: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -1.759734732331708e-05
    2. '.' → logprob: -11.750017166137695
    3. 'col' → logprob: -12.125017166137695
    4. ' col' → logprob: -13.500017166137695
    5. ',col' → logprob: -13.625017166137695
    6. ' .' → logprob: -14.000017166137695
    7. '	col' → logprob: -15.250017166137695
    8. ',' → logprob: -15.375017166137695
    9. '[col' → logprob: -15.875017166137695
    10. ').' → logprob: -16.875017166137695

Token 70: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -4.584861744660884e-05
    2. ')' → logprob: -10.250045776367188
    3. '))
' → logprob: -11.875045776367188
    4. ' ))' → logprob: -13.250045776367188
    5. ')))' → logprob: -14.125045776367188
    6. '       ' → logprob: -14.375045776367188
    7. '   ' → logprob: -15.375045776367188
    8. '))

' → logprob: -17.125045776367188
    9. ' ' → logprob: -17.875045776367188
    10. '()))' → logprob: -18.875045776367188

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16633270680904388
    2. '
' → logprob: -2.166332721710205
    3. '    
' → logprob: -4.416332721710205
    4. 'def' → logprob: -5.041332721710205
    5. '<|end|>' → logprob: -5.166332721710205
    6. ' ' → logprob: -5.291332721710205
    7. ' 
' → logprob: -5.541332721710205
    8. '  
' → logprob: -7.416332721710205
    9. '    ' → logprob: -7.541332721710205
    10. 'n' → logprob: -7.541332721710205

Token 72: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2763851583003998
    2. '   ' → logprob: -1.5263851881027222
    3. 'class' → logprob: -4.026385307312012
    4. '```' → logprob: -6.401385307312012
    5. 'd' → logprob: -6.651385307312012
    6. ' def' → logprob: -6.776385307312012
    7. ' ' → logprob: -7.526385307312012
    8. '@' → logprob: -8.151385307312012
    9. '    
' → logprob: -8.651385307312012
    10. '#' → logprob: -8.776385307312012

Token 73: ' neighbors' (ID: 31655)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.037454426288604736
    2. '__' → logprob: -3.66245436668396
    3. 'to' → logprob: -5.287454605102539
    4. ' to' → logprob: -6.787454605102539
    5. ' ' → logprob: -7.037454605102539
    6. ' def' → logprob: -7.162454605102539
    7. ' neighbors' → logprob: -7.287454605102539
    8. ' is' → logprob: -7.412454605102539
    9. ' move' → logprob: -7.662454605102539
    10. 'is' → logprob: -8.037454605102539

Token 74: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03419548273086548
    2. '(self' → logprob: -3.4091954231262207
    3. ' (' → logprob: -7.784195423126221
    4. '(
' → logprob: -9.784195899963379
    5. '_' → logprob: -11.284195899963379
    6. '```' → logprob: -11.284195899963379
    7. 'self' → logprob: -11.534195899963379
    8. '   ' → logprob: -11.909195899963379
    9. ' ' → logprob: -11.909195899963379
    10. '(

' → logprob: -12.159195899963379

Token 75: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6679685711860657
    2. ',' → logprob: -0.9179685711860657
    3. ')' → logprob: -2.667968511581421
    4. '(self' → logprob: -4.66796875
    5. 'self' → logprob: -4.79296875
    6. ',self' → logprob: -8.41796875
    7. '):
' → logprob: -8.54296875
    8. '   ' → logprob: -8.91796875
    9. ' ,' → logprob: -9.29296875
    10. ' ):' → logprob: -9.54296875

Token 76: ' max' (ID: 2999)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3606705367565155
    2. ')' → logprob: -1.235670566558838
    3. ' self' → logprob: -5.485670566558838
    4. '):
' → logprob: -5.610670566558838
    5. '):' → logprob: -5.735670566558838
    6. '):

' → logprob: -8.11067008972168
    7. '(self' → logprob: -8.23567008972168
    8. 'grid' → logprob: -9.11067008972168
    9. '	self' → logprob: -9.23567008972168
    10. ' )' → logprob: -9.48567008972168

Token 77: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.01847720332443714
    2. '_rows' → logprob: -4.018477439880371
    3. '_' → logprob: -8.643477439880371
    4. '_size' → logprob: -10.018477439880371
    5. '```' → logprob: -10.893477439880371
    6. ')' → logprob: -11.018477439880371
    7. '_distance' → logprob: -11.143477439880371
    8. '_height' → logprob: -12.018477439880371
    9. 'row' → logprob: -12.393477439880371
    10. '_ROW' → logprob: -12.643477439880371

Token 78: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020926215802319348
    2. ' ,' → logprob: -8.500208854675293
    3. ':' → logprob: -12.875208854675293
    4. ',
' → logprob: -14.125208854675293
    5. '):' → logprob: -14.125208854675293
    6. '   ' → logprob: -14.625208854675293
    7. ')' → logprob: -15.500208854675293
    8. ' ' → logprob: -15.750208854675293
    9. ',int' → logprob: -15.750208854675293
    10. ':int' → logprob: -16.12520980834961

Token 79: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4757135808467865
    2. 'int' → logprob: -0.9757136106491089
    3. ',' → logprob: -7.350713729858398
    4. ' ' → logprob: -7.600713729858398
    5. ' ,' → logprob: -8.350713729858398
    6. ',int' → logprob: -9.100713729858398
    7. '<|end|>' → logprob: -10.100713729858398
    8. ':int' → logprob: -10.600713729858398
    9. ' self' → logprob: -10.850713729858398
    10. ')' → logprob: -11.100713729858398

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8828707804204896e-05
    2. ' ,' → logprob: -10.000048637390137
    3. ',
' → logprob: -13.125048637390137
    4. '):' → logprob: -14.625048637390137
    5. '   ' → logprob: -15.125048637390137
    6. '       ' → logprob: -15.750048637390137
    7. ',

' → logprob: -16.250049591064453
    8. '‌,' → logprob: -16.250049591064453
    9. ')' → logprob: -16.625049591064453
    10. ',int' → logprob: -17.375049591064453

Token 81: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.03804493322968483
    2. 'max' → logprob: -3.2880449295043945
    3. '	max' → logprob: -13.038044929504395
    4. ' ' → logprob: -14.038044929504395
    5. '    ' → logprob: -16.03804588317871
    6. '   ' → logprob: -16.41304588317871
    7. ' maxlength' → logprob: -16.66304588317871
    8. ' ' → logprob: -16.78804588317871
    9. 'maxlength' → logprob: -16.91304588317871
    10. ',max' → logprob: -17.53804588317871

Token 82: '_col' (ID: 7255)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.16394618153572083
    2. '_col' → logprob: -2.4139461517333984
    3. '_' → logprob: -2.7889461517333984
    4. '_Row' → logprob: -9.663946151733398
    5. ' _' → logprob: -9.788946151733398
    6. '<|end|>' → logprob: -10.038946151733398
    7. '_column' → logprob: -10.163946151733398
    8. '_,' → logprob: -11.288946151733398
    9. '_rows' → logprob: -12.038946151733398
    10. ' ' → logprob: -12.038946151733398

Token 83: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00862887967377901
    2. ')' → logprob: -5.008628845214844
    3. ',' → logprob: -6.883628845214844
    4. ':' → logprob: -8.008628845214844
    5. '):
' → logprob: -8.383628845214844
    6. ')):' → logprob: -8.883628845214844
    7. ' ):' → logprob: -8.883628845214844
    8. '   ' → logprob: -10.758628845214844
    9. ' ' → logprob: -12.008628845214844
    10. ''):' → logprob: -12.758628845214844

Token 84: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13996478915214539
    2. ' int' → logprob: -2.1399648189544678
    3. ')' → logprob: -4.514964580535889
    4. ' )' → logprob: -6.639964580535889
    5. '):' → logprob: -8.514965057373047
    6. ' ):' → logprob: -8.764965057373047
    7. '1' → logprob: -9.139965057373047
    8. ':int' → logprob: -9.514965057373047
    9. ' ' → logprob: -10.389965057373047
    10. ']int' → logprob: -10.889965057373047

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10023416578769684
    2. ')' → logprob: -2.350234270095825
    3. '):
' → logprob: -10.850234031677246
    4. ':' → logprob: -12.725234031677246
    5. ',' → logprob: -13.350234031677246
    6. ' ):' → logprob: -13.475234031677246
    7. ')->' → logprob: -14.100234031677246
    8. '   ' → logprob: -14.850234031677246
    9. '):

' → logprob: -15.600234031677246
    10. ' ' → logprob: -16.100234985351562

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.196743905544281
    2. ':' → logprob: -1.8217439651489258
    3. '[' → logprob: -5.071743965148926
    4. '   ' → logprob: -5.821743965148926
    5. '    ' → logprob: -6.446743965148926
    6. ':
' → logprob: -6.446743965148926
    7. '\' → logprob: -7.446743965148926
    8. '        
' → logprob: -7.571743965148926
    9. '(' → logprob: -7.696743965148926
    10. '):' → logprob: -7.821743965148926

Token 87: ' if' (ID: 538)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.7709041237831116
    2. '       ' → logprob: -1.6459040641784668
    3. '[' → logprob: -1.8959040641784668
    4. ' [
' → logprob: -2.395904064178467
    5. 'n' → logprob: -2.520904064178467
    6. '
' → logprob: -4.520904064178467
    7. 'r' → logprob: -5.895904064178467
    8. ' 
' → logprob: -6.145904064178467
    9. ' [' → logprob: -6.770904064178467
    10. '[]
' → logprob: -7.145904064178467

Token 88: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.009483827278017998
    2. ' ' → logprob: -4.759483814239502
    3. 'self' → logprob: -7.509483814239502
    4. ' ' → logprob: -8.13448429107666
    5. ' not' → logprob: -11.38448429107666
    6. '	self' → logprob: -12.13448429107666
    7. ' sel' → logprob: -12.13448429107666
    8. '0' → logprob: -13.63448429107666
    9. ' (' → logprob: -13.75948429107666
    10. '(self' → logprob: -15.00948429107666

Token 89: '.row' (ID: 24627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.033238623291254044
    2. '.row' → logprob: -3.533238649368286
    3. ' .' → logprob: -5.783238410949707
    4. ' ' → logprob: -7.908238410949707
    5. '.rows' → logprob: -12.158238410949707
    6. '.space' → logprob: -12.408238410949707
    7. '.Row' → logprob: -12.533238410949707
    8. ')' → logprob: -12.783238410949707
    9. '._' → logprob: -13.158238410949707
    10. 's' → logprob: -13.408238410949707

Token 90: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.010757035575807095
    2. '>' → logprob: -4.635756969451904
    3. ' -' → logprob: -7.885756969451904
    4. '+' → logprob: -8.385757446289062
    5. '-' → logprob: -8.510757446289062
    6. ' ' → logprob: -8.885757446289062
    7. ' +' → logprob: -10.010757446289062
    8. ' <' → logprob: -12.260757446289062
    9. '   ' → logprob: -13.135757446289062
    10. '()>' → logprob: -13.885757446289062

Token 91: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5231357216835022
    2. '1' → logprob: -0.8981357216835022
    3. '-' → logprob: -11.773136138916016
    4. '<|end|>' → logprob: -13.273136138916016
    5. '   ' → logprob: -13.898136138916016
    6. ' -' → logprob: -14.398136138916016
    7. '  ' → logprob: -14.523136138916016
    8. '```' → logprob: -14.898136138916016
    9. '	' → logprob: -15.398136138916016
    10. ' ' → logprob: -15.523136138916016

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006752623594366014
    2. '-' → logprob: -7.375675201416016
    3. ' ' → logprob: -10.000675201416016
    4. ' -' → logprob: -14.125675201416016
    5. '0' → logprob: -14.250675201416016
    6. '>' → logprob: -14.250675201416016
    7. '```' → logprob: -14.625675201416016
    8. '   ' → logprob: -15.250675201416016
    9. '<|end|>' → logprob: -16.313175201416016
    10. '  ' → logprob: -16.375675201416016

Token 93: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5889906287193298
    2. ' <=' → logprob: -0.8389906287193298
    3. '<' → logprob: -5.213990688323975
    4. ' ' → logprob: -5.588990688323975
    5. '<=' → logprob: -5.588990688323975
    6. ' >=' → logprob: -11.463990211486816
    7. ',' → logprob: -11.713990211486816
    8. ' >' → logprob: -11.838990211486816
    9. '1' → logprob: -12.713990211486816
    10. '```' → logprob: -12.963990211486816

Token 94: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.03805479779839516
    2. 'max' → logprob: -3.2880547046661377
    3. ' ' → logprob: -11.413054466247559
    4. ' ' → logprob: -13.663054466247559
    5. '	max' → logprob: -15.288054466247559
    6. ' m' → logprob: -15.288054466247559
    7. '(max' → logprob: -15.788054466247559
    8. '=max' → logprob: -16.163055419921875
    9. ' ma' → logprob: -16.288055419921875
    10. 'm' → logprob: -16.288055419921875

Token 95: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00042268994729965925
    2. '_' → logprob: -7.875422477722168
    3. '_r' → logprob: -10.625422477722168
    4. '_ro' → logprob: -11.250422477722168
    5. '_Row' → logprob: -12.375422477722168
    6. '_rows' → logprob: -15.500422477722168
    7. ' _' → logprob: -15.625422477722168
    8. '_ROW' → logprob: -15.875422477722168
    9. '_col' → logprob: -15.875422477722168
    10. '__' → logprob: -16.125423431396484

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03419306129217148
    2. ':
' → logprob: -3.4091930389404297
    3. ',' → logprob: -8.53419303894043
    4. '):' → logprob: -8.78419303894043
    5. '       ' → logprob: -9.40919303894043
    6. ' and' → logprob: -10.15919303894043
    7. ' :' → logprob: -10.65919303894043
    8. ')' → logprob: -11.03419303894043
    9. '):
' → logprob: -11.15919303894043
    10. ':return' → logprob: -11.78419303894043

Token 97: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7193637490272522
    2. ':' → logprob: -0.8443637490272522
    3. ':
' → logprob: -2.7193636894226074
    4. '
' → logprob: -4.469363689422607
    5. ' yield' → logprob: -6.469363689422607
    6. 'yield' → logprob: -6.969363689422607
    7. ',' → logprob: -7.094363689422607
    8. '       ' → logprob: -7.219363689422607
    9. ' 
' → logprob: -8.094364166259766
    10. '            ' → logprob: -8.469364166259766

Token 98: ' yield' (ID: 14376)
  Prédit: ' yield'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.28565239906311035
    2. 'yield' (adapté à ' yield') → logprob: -1.4106523990631104
    3. '           ' → logprob: -5.785652160644531
    4. '	yield' → logprob: -6.910652160644531
    5. ' 
' → logprob: -8.785652160644531
    6. '
' → logprob: -8.910652160644531
    7. 'Yield' → logprob: -10.285652160644531
    8. '       ' → logprob: -10.785652160644531
    9. '        ' → logprob: -10.910652160644531
    10. ' yields' → logprob: -11.535652160644531

Token 99: ' Grid' (ID: 18087)
  Prédit: ' Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Grid' → logprob: -0.5759826302528381
    2. 'Grid' → logprob: -0.8259826302528381
    3. '           ' → logprob: -10.700983047485352
    4. '(Grid' → logprob: -11.450983047485352
    5. '	Grid' → logprob: -11.950983047485352
    6. '               ' → logprob: -14.075983047485352
    7. 'self' → logprob: -14.200983047485352
    8. '<Grid' → logprob: -14.575983047485352
    9. '/Grid' → logprob: -14.825983047485352
    10. ' grid' → logprob: -14.950983047485352

Token 100: 'Position' (ID: 5647)
  Prédit: 'Position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Position' → logprob: -2.935296834039036e-06
    2. 'Pos' → logprob: -12.75000286102295
    3. 'P' → logprob: -17.500003814697266
    4. '(Position' → logprob: -18.125003814697266
    5. 'Post' → logprob: -19.125003814697266
    6. ' Position' → logprob: -19.500003814697266
    7. 'Po' → logprob: -19.500003814697266
    8. '_position' → logprob: -20.000003814697266
    9. 'Positions' → logprob: -20.125003814697266
    10. '_Position' → logprob: -20.250003814697266

Token 101: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12698081135749817
    2. '(' → logprob: -2.126980781555176
    3. '(
' → logprob: -10.751980781555176
    4. '((' → logprob: -11.001980781555176
    5. '(row' → logprob: -11.876980781555176
    6. '(s' → logprob: -12.126980781555176
    7. '(

' → logprob: -13.876980781555176
    8. '(this' → logprob: -14.501980781555176
    9. ' (' → logprob: -15.501980781555176
    10. 'self' → logprob: -15.751980781555176

Token 102: '.row' (ID: 24627)
  Prédit: '.row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -0.0052572377026081085
    2. '.' → logprob: -5.2552571296691895
    3. '.
' → logprob: -11.505257606506348
    4. ' .' → logprob: -12.005257606506348
    5. 'row' → logprob: -12.380257606506348
    6. '.Row' → logprob: -13.880257606506348
    7. '.r' → logprob: -15.130257606506348
    8. '.col' → logprob: -15.255257606506348
    9. ' ' → logprob: -15.380257606506348
    10. '	row' → logprob: -15.630257606506348

Token 103: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740791916847229
    2. '+' → logprob: -0.9740791916847229
    3. ' +
' → logprob: -13.849079132080078
    4. ' ' → logprob: -14.224079132080078
    5. '+
' → logprob: -15.349079132080078
    6. '   ' → logprob: -15.849079132080078
    7. '1' → logprob: -16.099079132080078
    8. '＋' → logprob: -17.474079132080078
    9. '()+' → logprob: -17.849079132080078
    10. ' plus' → logprob: -17.974079132080078

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016035424545407295
    2. ' ' → logprob: -4.141035556793213
    3. '<|end|>' → logprob: -14.516035079956055
    4. '   ' → logprob: -14.891035079956055
    5. ' ' → logprob: -16.391035079956055
    6. '       ' → logprob: -16.891035079956055
    7. '```' → logprob: -16.891035079956055
    8. '    ' → logprob: -17.891035079956055
    9. '           ' → logprob: -18.016035079956055
    10. '
' → logprob: -18.266035079956055

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -15.875027656555176
    4. '   ' → logprob: -16.625028610229492
    5. '
' → logprob: -17.125028610229492
    6. '```' → logprob: -17.750028610229492
    7. '  ' → logprob: -18.500028610229492
    8. '       ' → logprob: -18.875028610229492
    9. '           ' → logprob: -19.375028610229492
    10. '-' → logprob: -19.562528610229492

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4285862057004124e-05
    2. ' ,' → logprob: -10.37503433227539
    3. ')' → logprob: -14.00003433227539
    4. ',
' → logprob: -14.12503433227539
    5. '```' → logprob: -15.00003433227539
    6. '           ' → logprob: -15.50003433227539
    7. '<|end|>' → logprob: -15.75003433227539
    8. '‌,' → logprob: -16.12503433227539
    9. '   ' → logprob: -16.12503433227539
    10. '1' → logprob: -16.37503433227539

Token 107: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.14388558268547058
    2. 'self' → logprob: -2.018885612487793
    3. ' ' → logprob: -6.768885612487793
    4. ' ' → logprob: -10.518885612487793
    5. '	self' → logprob: -10.893885612487793
    6. '    ' → logprob: -12.768885612487793
    7. '        ' → logprob: -12.893885612487793
    8. '            ' → logprob: -13.143885612487793
    9. '0' → logprob: -13.768885612487793
    10. ')' → logprob: -14.143885612487793

Token 108: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -0.000504658033605665
    2. '.' → logprob: -7.625504493713379
    3. '_col' → logprob: -12.375504493713379
    4. ',' → logprob: -12.625504493713379
    5. 'col' → logprob: -12.875504493713379
    6. '   ' → logprob: -13.250504493713379
    7. '	col' → logprob: -13.500504493713379
    8. ' .' → logprob: -13.750504493713379
    9. '.
' → logprob: -14.625504493713379
    10. '.Col' → logprob: -14.750504493713379

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03380579501390457
    2. ')
' → logprob: -3.4088058471679688
    3. '       ' → logprob: -8.908805847167969
    4. ' )' → logprob: -11.533805847167969
    5. ')

' → logprob: -12.283805847167969
    6. ')
' → logprob: -12.408805847167969
    7. ' )
' → logprob: -13.033805847167969
    8. '   ' → logprob: -13.908805847167969
    9. '),' → logprob: -14.533805847167969
    10. ')\' → logprob: -14.658805847167969

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06840462982654572
    2. '
' → logprob: -3.1934046745300293
    3. '        
' → logprob: -4.693404674530029
    4. '\n' → logprob: -4.818404674530029
    5. '<|end|>' → logprob: -5.318404674530029
    6. ' 
' → logprob: -6.943404674530029
    7. '    
' → logprob: -7.693404674530029
    8. '   ' → logprob: -8.318404197692871
    9. '  
' → logprob: -8.318404197692871
    10. 'newline' → logprob: -8.818404197692871

Token 111: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006435525603592396
    2. '
' → logprob: -5.881435394287109
    3. '        
' → logprob: -7.006435394287109
    4. ' 
' → logprob: -7.131435394287109
    5. ' if' → logprob: -7.256435394287109
    6. 'if' (adapté à ' if') → logprob: -8.25643539428711
    7. '        ' → logprob: -8.25643539428711
    8. ' ' → logprob: -8.38143539428711
    9. '   ' → logprob: -8.63143539428711
    10. '    ' → logprob: -10.00643539428711

Token 112: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.012526246719062328
    2. 'self' → logprob: -4.387526035308838
    3. ' ' → logprob: -11.137526512145996
    4. '    ' → logprob: -14.012526512145996
    5. ' ' → logprob: -14.762526512145996
    6. '	self' → logprob: -15.012526512145996
    7. '   ' → logprob: -15.637526512145996
    8. '0' → logprob: -15.762526512145996
    9. '(self' → logprob: -16.26252555847168
    10. '
' → logprob: -17.70002555847168

Token 113: '.col' (ID: 7320)
  Prédit: '.row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -0.4038431942462921
    2. '.' → logprob: -1.6538431644439697
    3. '.col' → logprob: -2.2788431644439697
    4. ' .' → logprob: -3.2788431644439697
    5. ' ' → logprob: -7.903843402862549
    6. '.
' → logprob: -8.90384292602539
    7. '.user' → logprob: -10.27884292602539
    8. '.column' → logprob: -10.52884292602539
    9. '	' → logprob: -10.65384292602539
    10. 'row' → logprob: -10.77884292602539

Token 114: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.014182780869305134
    2. '+' → logprob: -4.2641825675964355
    3. ' ' → logprob: -11.139183044433594
    4. ' -' → logprob: -13.014183044433594
    5. ' >' → logprob: -14.264183044433594
    6. '>' → logprob: -14.389183044433594
    7. '   ' → logprob: -15.139183044433594
    8. ' +
' → logprob: -15.389183044433594
    9. '<|end|>' → logprob: -15.639183044433594
    10. '  ' → logprob: -15.889183044433594

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12692894041538239
    2. ' ' → logprob: -2.1269290447235107
    3. '<|end|>' → logprob: -15.00192928314209
    4. '   ' → logprob: -15.75192928314209
    5. '```' → logprob: -15.87692928314209
    6. ' ' → logprob: -16.251928329467773
    7. '  ' → logprob: -16.501928329467773
    8. '+' → logprob: -17.001928329467773
    9. '
' → logprob: -18.126928329467773
    10. '`' → logprob: -18.376928329467773

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '<|end|>' → logprob: -17.000261306762695
    4. '   ' → logprob: -17.625261306762695
    5. '```' → logprob: -17.875261306762695
    6. '-' → logprob: -18.250261306762695
    7. '
' → logprob: -18.375261306762695
    8. '  ' → logprob: -18.500261306762695
    9. '+' → logprob: -19.250261306762695
    10. '

' → logprob: -20.375261306762695

Token 117: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.007640940137207508
    2. '<' → logprob: -4.882640838623047
    3. '<|end|>' → logprob: -10.882640838623047
    4. ' ' → logprob: -11.132640838623047
    5. ')' → logprob: -15.007640838623047
    6. '<int' → logprob: -15.757640838623047
    7. '()<' → logprob: -15.882640838623047
    8. '[' → logprob: -16.007640838623047
    9. ' <",' → logprob: -16.382640838623047
    10. ',' → logprob: -16.507640838623047

Token 118: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3868802487850189
    2. 'max' → logprob: -1.1368802785873413
    3. ' ' → logprob: -11.761879920959473
    4. '	max' → logprob: -14.511879920959473
    5. '(max' → logprob: -15.636879920959473
    6. '[max' → logprob: -15.886879920959473
    7. '<|end|>' → logprob: -16.13688087463379
    8. '=max' → logprob: -16.76188087463379
    9. '```' → logprob: -16.76188087463379
    10. '_max' → logprob: -16.88688087463379

Token 119: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -4.1080467781284824e-05
    2. 'col' → logprob: -10.250041007995605
    3. '_' → logprob: -12.625041007995605
    4. '_row' → logprob: -13.625041007995605
    5. '_co' → logprob: -15.000041007995605
    6. 'Col' → logprob: -15.625041007995605
    7. '_COL' → logprob: -15.750041007995605
    8. '_c' → logprob: -15.875041007995605
    9. ' _' → logprob: -17.375041961669922
    10. 'c' → logprob: -17.625041961669922

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015796130755916238
    2. ':
' → logprob: -6.501579761505127
    3. '           ' → logprob: -9.876579284667969
    4. '       ' → logprob: -11.126579284667969
    5. '):' → logprob: -11.751579284667969
    6. ' :' → logprob: -13.376579284667969
    7. ',' → logprob: -14.126579284667969
    8. '):
' → logprob: -15.376579284667969
    9. ':

' → logprob: -16.12657928466797
    10. ')' → logprob: -16.25157928466797

Token 121: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48331543803215027
    2. '           ' → logprob: -0.9833154678344727
    3. ':
' → logprob: -5.108315467834473
    4. ' :' → logprob: -6.608315467834473
    5. '       ' → logprob: -7.358315467834473
    6. 'yield' → logprob: -7.608315467834473
    7. ' yield' → logprob: -8.608315467834473
    8. '):' → logprob: -9.358315467834473
    9. '          ' → logprob: -9.608315467834473
    10. '               ' → logprob: -9.858315467834473

Token 122: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.4808391332626343
    2. ' yield' → logprob: -0.9808391332626343
    3. '           ' → logprob: -5.105839252471924
    4. '	yield' → logprob: -8.230838775634766
    5. '
' → logprob: -8.605838775634766
    6. '            ' → logprob: -9.105838775634766
    7. 'Yield' → logprob: -9.730838775634766
    8. '               ' → logprob: -10.855838775634766
    9. '   ' → logprob: -11.605838775634766
    10. '```' → logprob: -12.230838775634766

Token 123: ' Grid' (ID: 18087)
  Prédit: ' Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Grid' → logprob: -0.0067240106873214245
    2. 'Grid' → logprob: -5.006723880767822
    3. '(Grid' → logprob: -12.25672435760498
    4. '	Grid' → logprob: -12.75672435760498
    5. ' ' → logprob: -14.13172435760498
    6. ' ' → logprob: -15.50672435760498
    7. '<Grid' → logprob: -16.256723403930664
    8. '.Grid' → logprob: -17.881723403930664
    9. '/Grid' → logprob: -18.756723403930664
    10. ' Gr' → logprob: -18.881723403930664

Token 124: 'Position' (ID: 5647)
  Prédit: 'Position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Position' → logprob: -4.008129963040119e-06
    2. 'Pos' → logprob: -12.500003814697266
    3. 'osition' → logprob: -15.875003814697266
    4. ' Position' → logprob: -18.125003814697266
    5. 'position' → logprob: -18.250003814697266
    6. 'Positions' → logprob: -18.625003814697266
    7. 'Po' → logprob: -18.625003814697266
    8. '(Position' → logprob: -18.625003814697266
    9. 'Post' → logprob: -19.500003814697266
    10. '.Position' → logprob: -19.625003814697266

Token 125: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009168167016468942
    2. '(' → logprob: -7.000916957855225
    3. '(
' → logprob: -12.750916481018066
    4. '(s' → logprob: -13.250916481018066
    5. '(this' → logprob: -14.625916481018066
    6. ' (' → logprob: -16.125917434692383
    7. 'self' → logprob: -17.250917434692383
    8. '((' → logprob: -17.750917434692383
    9. '(Grid' → logprob: -17.875917434692383
    10. '(sel' → logprob: -18.500917434692383

Token 126: '.row' (ID: 24627)
  Prédit: '.row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -0.2625722885131836
    2. '.' → logprob: -1.5125722885131836
    3. '.col' → logprob: -5.137572288513184
    4. ',' → logprob: -5.512572288513184
    5. ' .' → logprob: -7.762572288513184
    6. '.
' → logprob: -9.012572288513184
    7. '   ' → logprob: -9.887572288513184
    8. ' ' → logprob: -10.387572288513184
    9. 'row' → logprob: -11.637572288513184
    10. '.,' → logprob: -12.137572288513184

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34883761405944824
    2. ' ,' → logprob: -1.2238376140594482
    3. ' ' → logprob: -8.223837852478027
    4. ' +' → logprob: -9.473837852478027
    5. '<|end|>' → logprob: -11.223837852478027
    6. '   ' → logprob: -11.348837852478027
    7. ' ,
' → logprob: -11.973837852478027
    8. '+' → logprob: -12.598837852478027
    9. ',
' → logprob: -12.723837852478027
    10. '    ' → logprob: -13.348837852478027

Token 128: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16023924946784973
    2. 'self' → logprob: -1.9102392196655273
    3. ' ' → logprob: -12.035239219665527
    4. '(self' → logprob: -13.285239219665527
    5. '
' → logprob: -13.785239219665527
    6. '	self' → logprob: -13.785239219665527
    7. '       ' → logprob: -13.910239219665527
    8. '    ' → logprob: -13.910239219665527
    9. '   ' → logprob: -14.160239219665527
    10. '1' → logprob: -14.785239219665527

Token 129: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -0.01127617247402668
    2. 'col' → logprob: -5.3862762451171875
    3. '+' → logprob: -5.5112762451171875
    4. ' col' → logprob: -6.1362762451171875
    5. ' +' → logprob: -8.511276245117188
    6. '_col' → logprob: -9.511276245117188
    7. '	col' → logprob: -9.886276245117188
    8. '.' → logprob: -10.011276245117188
    9. '[col' → logprob: -10.636276245117188
    10. ' ' → logprob: -11.136276245117188

Token 130: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889155298471451
    2. '+' → logprob: -2.5788915157318115
    3. ' ' → logprob: -13.45389175415039
    4. ' +
' → logprob: -15.82889175415039
    5. '   ' → logprob: -16.45389175415039
    6. '1' → logprob: -16.82889175415039
    7. ')' → logprob: -17.57889175415039
    8. ' plus' → logprob: -17.95389175415039
    9. '<|end|>' → logprob: -18.57889175415039
    10. '+
' → logprob: -19.07889175415039

Token 131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11282773315906525
    2. ' ' → logprob: -2.237827777862549
    3. '<|end|>' → logprob: -13.23782730102539
    4. '   ' → logprob: -13.48782730102539
    5. ')' → logprob: -14.23782730102539
    6. '```' → logprob: -14.48782730102539
    7. '
' → logprob: -15.48782730102539
    8. '       ' → logprob: -15.73782730102539
    9. ' ' → logprob: -16.42532730102539
    10. '  ' → logprob: -16.48782730102539

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. ')' → logprob: -16.250009536743164
    4. '```' → logprob: -16.250009536743164
    5. '   ' → logprob: -17.375009536743164
    6. '
' → logprob: -17.375009536743164
    7. '<|end|>' → logprob: -17.875009536743164
    8. '-' → logprob: -18.687509536743164
    9. '+' → logprob: -19.125009536743164
    10. '  ' → logprob: -19.312509536743164

Token 133: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06251072883605957
    2. ')
' → logprob: -2.8125107288360596
    3. '       ' → logprob: -7.5625104904174805
    4. '   ' → logprob: -11.68751049041748
    5. ' )' → logprob: -11.93751049041748
    6. '()' → logprob: -12.93751049041748
    7. ' )
' → logprob: -13.06251049041748
    8. ')
' → logprob: -13.56251049041748
    9. ')

' → logprob: -14.18751049041748
    10. ')#' → logprob: -14.31251049041748

Token 134: 'class' (ID: 1444)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020899500232189894
    2. '   ' → logprob: -6.252089977264404
    3. '```' → logprob: -9.752089500427246
    4. '<|end|>' → logprob: -10.627089500427246
    5. ' if' → logprob: -10.752089500427246
    6. 'if' → logprob: -11.127089500427246
    7. '#' → logprob: -11.627089500427246
    8. '[' → logprob: -12.377089500427246
    9. '        
' → logprob: -12.377089500427246
    10. ' ' → logprob: -12.502089500427246

Token 135: ' Cic' (ID: 96235)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1738823652267456
    2. ' Grid' → logprob: -2.048882484436035
    3. ' Space' → logprob: -3.923882484436035
    4. ' Board' → logprob: -6.048882484436035
    5. ' Cell' → logprob: -6.298882484436035
    6. ' Maze' → logprob: -6.923882484436035
    7. ' A' → logprob: -7.923882484436035
    8. ' Position' → logprob: -8.048882484436035
    9. ' Depth' → logprob: -8.048882484436035
    10. ' Code' → logprob: -8.173882484436035

Token 136: 'ada' (ID: 1194)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8557775020599365
    2. 'e' → logprob: -1.8557775020599365
    3. 'k' → logprob: -2.3557775020599365
    4. 'le' → logprob: -2.8557775020599365
    5. 'l' → logprob: -3.1057775020599365
    6. 'u' → logprob: -3.2307775020599365
    7. 'ler' → logprob: -3.4807775020599365
    8. 'er' → logprob: -3.9807775020599365
    9. 'y' → logprob: -4.230777740478516
    10. 'i' → logprob: -4.230777740478516

Token 137: 'Grid' (ID: 5351)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4382842481136322
    2. 'Grid' → logprob: -2.313284158706665
    3. 'Position' → logprob: -2.938284158706665
    4. 'Maze' → logprob: -3.438284158706665
    5. 'Solver' → logprob: -3.688284158706665
    6. 'Game' → logprob: -3.938284158706665
    7. ':
' → logprob: -3.938284158706665
    8. 'C' → logprob: -4.563284397125244
    9. 'Puzzle' → logprob: -4.563284397125244
    10. 'Sound' → logprob: -4.813284397125244

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002699305070564151
    2. ':
' → logprob: -6.252699375152588
    3. '(Grid' → logprob: -7.627699375152588
    4. '(' → logprob: -8.25269889831543
    5. ' :' → logprob: -11.12769889831543
    6. ':

' → logprob: -13.37769889831543
    7. '<Grid' → logprob: -14.12769889831543
    8. '   ' → logprob: -14.25269889831543
    9. ':grid' → logprob: -14.37769889831543
    10. '(object' → logprob: -14.50269889831543

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001379402237944305
    2. ' def' → logprob: -7.376379489898682
    3. 'def' → logprob: -7.876379489898682
    4. '    
' → logprob: -8.126379013061523
    5. '
' → logprob: -10.001379013061523
    6. 'class' → logprob: -11.876379013061523
    7. ' 
' → logprob: -11.876379013061523
    8. '(' → logprob: -12.626379013061523
    9. '```' → logprob: -12.751379013061523
    10. '    ' → logprob: -12.876379013061523

Token 140: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4869460165500641
    2. ' def' → logprob: -0.9869459867477417
    3. '   ' → logprob: -4.361946105957031
    4. ' ' → logprob: -11.361946105957031
    5. '    ' → logprob: -11.486946105957031
    6. 'class' → logprob: -12.611946105957031
    7. 'de' → logprob: -12.611946105957031
    8. '  ' → logprob: -13.236946105957031
    9. '	def' → logprob: -13.486946105957031
    10. '```' → logprob: -14.861946105957031

Token 141: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00015157493180595338
    2. '_init' → logprob: -9.375151634216309
    3. ' _' → logprob: -10.625151634216309
    4. ' ' → logprob: -10.625151634216309
    5. '__' → logprob: -12.000151634216309
    6. ' init' → logprob: -12.375151634216309
    7. ' ' → logprob: -13.125151634216309
    8. 'init' → logprob: -13.125151634216309
    9. ' ___' → logprob: -13.625151634216309
    10. ' ‌' → logprob: -13.875151634216309

Token 142: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.896309739408025e-07
    2. ' init' → logprob: -15.125000953674316
    3. 'ini' → logprob: -15.500000953674316
    4. 'in' → logprob: -16.0
    5. 'i' → logprob: -16.5
    6. '   ' → logprob: -17.375
    7. 'inite' → logprob: -17.75
    8. '	init' → logprob: -18.0
    9. 'def' → logprob: -18.125
    10. '
' → logprob: -18.25

Token 143: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0001302374730585143
    2. '__' → logprob: -9.250130653381348
    3. '__(
' → logprob: -10.750130653381348
    4. '_(' → logprob: -11.500130653381348
    5. '(self' → logprob: -13.250130653381348
    6. '_' → logprob: -14.375130653381348
    7. '__((' → logprob: -16.37512969970703
    8. '___' → logprob: -17.37512969970703
    9. '__('' → logprob: -17.62512969970703
    10. ' __(' → logprob: -18.25012969970703

Token 144: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015943869948387146
    2. ' self' → logprob: -8.75015926361084
    3. '
' → logprob: -15.12515926361084
    4. '   ' → logprob: -15.25015926361084
    5. 'size' → logprob: -15.37515926361084
    6. ' ' → logprob: -16.375160217285156
    7. '0' → logprob: -17.000160217285156
    8. '       ' → logprob: -17.125160217285156
    9. ')' → logprob: -17.875160217285156
    10. 'max' → logprob: -18.125160217285156

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014108279719948769
    2. ' ,' → logprob: -6.751410961151123
    3. 'self' → logprob: -8.376410484313965
    4. '_,' → logprob: -12.876410484313965
    5. ')' → logprob: -13.126410484313965
    6. '(self' → logprob: -13.376410484313965
    7. ' self' → logprob: -13.501410484313965
    8. ',self' → logprob: -14.376410484313965
    9. ' ' → logprob: -14.751410484313965
    10. '<|end|>' → logprob: -14.876410484313965

Token 146: ' height' (ID: 4679)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6533348560333252
    2. ' grid' → logprob: -1.9033348560333252
    3. ' self' → logprob: -2.028334856033325
    4. 'grid' → logprob: -2.153334856033325
    5. 'rows' → logprob: -2.653334856033325
    6. ' rows' → logprob: -4.778334617614746
    7. '   ' → logprob: -6.653334617614746
    8. 'width' → logprob: -7.778334617614746
    9. 'height' → logprob: -7.778334617614746
    10. 'max' → logprob: -8.153334617614746

Token 147: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038588629104197025
    2. ' ,' → logprob: -5.628859043121338
    3. ':' → logprob: -8.37885856628418
    4. ':int' → logprob: -10.62885856628418
    5. ',int' → logprob: -13.37885856628418
    6. ' :' → logprob: -13.62885856628418
    7. '):' → logprob: -14.25385856628418
    8. '‌,' → logprob: -14.75385856628418
    9. ' ' → logprob: -15.75385856628418
    10. ':,' → logprob: -16.25385856628418

Token 148: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3535219132900238
    2. ' int' → logprob: -1.4785219430923462
    3. '<|end|>' → logprob: -2.8535218238830566
    4. ')' → logprob: -4.853521823883057
    5. '0' → logprob: -6.853521823883057
    6. ' ' → logprob: -6.978521823883057
    7. ',' → logprob: -6.978521823883057
    8. ':int' → logprob: -7.103521823883057
    9. 'height' → logprob: -9.478522300720215
    10. ',int' → logprob: -9.728522300720215

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028061794582754374
    2. ' ,' → logprob: -5.877806186676025
    3. '):' → logprob: -14.127805709838867
    4. '‌,' → logprob: -15.627805709838867
    5. ',width' → logprob: -16.627805709838867
    6. ',int' → logprob: -16.752805709838867
    7. '   ' → logprob: -16.752805709838867
    8. ',
' → logprob: -16.877805709838867
    9. ' ' → logprob: -17.127805709838867
    10. ':' → logprob: -17.377805709838867

Token 150: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.6932287216186523
    2. 'width' → logprob: -0.6932287216186523
    3. '   ' → logprob: -9.818228721618652
    4. '    ' → logprob: -11.818228721618652
    5. ' ' → logprob: -11.943228721618652
    6. '	width' → logprob: -12.193228721618652
    7. ',width' → logprob: -13.068228721618652
    8. '  ' → logprob: -13.943228721618652
    9. ';width' → logprob: -14.318228721618652
    10. '       ' → logprob: -14.318228721618652

Token 151: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.694080650806427
    2. '):' → logprob: -0.694080650806427
    3. ':int' → logprob: -8.069080352783203
    4. ' ):' → logprob: -8.444080352783203
    5. ')' → logprob: -8.569080352783203
    6. ' :' → logprob: -9.319080352783203
    7. ',' → logprob: -10.069080352783203
    8. '}:' → logprob: -10.319080352783203
    9. '):
' → logprob: -10.694080352783203
    10. '   ' → logprob: -11.819080352783203

Token 152: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47410276532173157
    2. ' int' → logprob: -0.9741027355194092
    3. ':int' → logprob: -11.349102973937988
    4. ')' → logprob: -11.599102973937988
    5. '):
' → logprob: -12.974102973937988
    6. '<int' → logprob: -13.974102973937988
    7. ']int' → logprob: -14.974102973937988
    8. '=int' → logprob: -15.474102973937988
    9. '):' → logprob: -15.599102973937988
    10. '[int' → logprob: -15.724102973937988

Token 153: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006800275295972824
    2. ',' → logprob: -5.131800174713135
    3. ' ):' → logprob: -7.256800174713135
    4. ')' → logprob: -9.256800651550293
    5. '):
' → logprob: -10.381800651550293
    6. ':' → logprob: -10.506800651550293
    7. ' ,' → logprob: -12.131800651550293
    8. '   ' → logprob: -13.006800651550293
    9. ' ' → logprob: -13.256800651550293
    10. '       ' → logprob: -14.881800651550293

Token 154: ' grid' (ID: 10586)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.5490432381629944
    2. 'initial' → logprob: -1.2990431785583496
    3. ' grid' → logprob: -3.2990431785583496
    4. 'grid' → logprob: -3.4240431785583496
    5. ' energy' → logprob: -3.9240431785583496
    6. 'energy' → logprob: -4.04904317855835
    7. ' ' → logprob: -5.04904317855835
    8. ')' → logprob: -5.17404317855835
    9. 'levels' → logprob: -5.29904317855835
    10. ' )' → logprob: -5.54904317855835

Token 155: '_data' (ID: 3537)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6368027925491333
    2. '):' → logprob: -0.7618027925491333
    3. '_data' → logprob: -6.261802673339844
    4. ' ):' → logprob: -7.386802673339844
    5. '):
' → logprob: -7.386802673339844
    6. ' :' → logprob: -7.886802673339844
    7. '_values' → logprob: -8.011802673339844
    8. '=None' → logprob: -9.636802673339844
    9. '_states' → logprob: -9.761802673339844
    10. ')' → logprob: -10.386802673339844

Token 156: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1611969918012619
    2. ':' → logprob: -1.9111969470977783
    3. ')' → logprob: -7.911197185516357
    4. ' ):' → logprob: -8.2861967086792
    5. '):
' → logprob: -8.9111967086792
    6. '=None' → logprob: -9.0361967086792
    7. ' :' → logprob: -10.4111967086792
    8. ':list' → logprob: -10.9111967086792
    9. '=' → logprob: -11.1611967086792
    10. '=[]' → logprob: -11.5361967086792

Token 157: ' list' (ID: 1562)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -1.2242820262908936
    2. '):' → logprob: -2.2242820262908936
    3. ' List' → logprob: -2.2242820262908936
    4. ')' → logprob: -2.3492820262908936
    5. 'list' → logprob: -2.3492820262908936
    6. '[List' → logprob: -2.5992820262908936
    7. ' ' → logprob: -2.9742820262908936
    8. ' list' → logprob: -2.9742820262908936
    9. 'None' → logprob: -3.5992820262908936
    10. ' None' → logprob: -3.7242820262908936

Token 158: '[str' (ID: 33439)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6940842270851135
    2. '[list' → logprob: -0.8190842270851135
    3. '):
' → logprob: -3.5690841674804688
    4. '[List' → logprob: -4.194084167480469
    5. '[int' → logprob: -4.319084167480469
    6. '[str' → logprob: -6.444084167480469
    7. '[' → logprob: -6.944084167480469
    8. ':' → logprob: -8.569084167480469
    9. ')' → logprob: -9.444084167480469
    10. '   ' → logprob: -9.569084167480469

Token 159: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.22026106715202332
    2. ']' → logprob: -1.7202610969543457
    3. '[str' → logprob: -4.970261096954346
    4. ']):
' → logprob: -5.095261096954346
    5. '])' → logprob: -5.470261096954346
    6. ']:' → logprob: -7.595261096954346
    7. '[' → logprob: -7.845261096954346
    8. '[List' → logprob: -8.720260620117188
    9. ']]' → logprob: -9.345260620117188
    10. '[int' → logprob: -9.470260620117188

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01935124211013317
    2. ':' → logprob: -4.644351005554199
    3. '):' → logprob: -5.144351005554199
    4. ',' → logprob: -5.894351005554199
    5. '):
' → logprob: -7.269351005554199
    6. ')' → logprob: -9.0193510055542
    7. '<|end|>' → logprob: -9.5193510055542
    8. '   ' → logprob: -11.1443510055542
    9. ':
' → logprob: -11.3943510055542
    10. '        
' → logprob: -11.6443510055542

Token 161: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.34141111373901367
    2. '       ' → logprob: -1.3414111137390137
    3. ' self' → logprob: -3.5914111137390137
    4. '   ' → logprob: -8.716411590576172
    5. ' ' → logprob: -11.216411590576172
    6. 'def' → logprob: -12.341411590576172
    7. '	self' → logprob: -12.591411590576172
    8. '
' → logprob: -12.841411590576172
    9. 'super' → logprob: -12.841411590576172
    10. '      ' → logprob: -13.091411590576172

Token 162: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.1465449035167694
    2. '.' → logprob: -2.021544933319092
    3. '.grid' → logprob: -5.771544933319092
    4. ' .' → logprob: -7.396544933319092
    5. '.rows' → logprob: -9.771544456481934
    6. ' ' → logprob: -11.271544456481934
    7. '.row' → logprob: -11.396544456481934
    8. 'height' → logprob: -11.521544456481934
    9. '.width' → logprob: -11.521544456481934
    10. '.h' → logprob: -11.771544456481934

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805147483944893
    2. '=' → logprob: -3.2880513668060303
    3. ' ' → logprob: -11.66305160522461
    4. ' =
' → logprob: -14.66305160522461
    5. ',' → logprob: -14.91305160522461
    6. '   ' → logprob: -15.91305160522461
    7. '    ' → logprob: -15.91305160522461
    8. ')' → logprob: -16.16305160522461
    9. '=self' → logprob: -16.16305160522461
    10. '        ' → logprob: -16.78805160522461

Token 164: ' height' (ID: 4679)
  Prédit: ' height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.011047814972698689
    2. 'height' → logprob: -4.511047840118408
    3. '(height' → logprob: -17.38604736328125
    4. '	height' → logprob: -18.63604736328125
    5. ' ' → logprob: -19.63604736328125
    6. '.height' → logprob: -19.76104736328125
    7. 'Height' → logprob: -19.76104736328125
    8. '_height' → logprob: -20.13604736328125
    9. ';height' → logprob: -20.13604736328125
    10. ',height' → logprob: -21.13604736328125

Token 165: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031067728996276855
    2. '
' → logprob: -6.378106594085693
    3. '<|end|>' → logprob: -7.003106594085693
    4. 'self' → logprob: -7.878106594085693
    5. ',' → logprob: -9.378107070922852
    6. ' self' → logprob: -11.628107070922852
    7. ',
' → logprob: -12.378107070922852
    8. '        
' → logprob: -12.378107070922852
    9. '<|end|>' → logprob: -13.128107070922852
    10. '   ' → logprob: -13.378107070922852

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019723113626241684
    2. '<|end|>' → logprob: -4.269722938537598
    3. '
' → logprob: -5.269722938537598
    4. ',' → logprob: -8.144722938537598
    5. '        
' → logprob: -10.269722938537598
    6. 'self' → logprob: -10.769722938537598
    7. '<|end|>' → logprob: -11.519722938537598
    8. ' ' → logprob: -11.894722938537598
    9. '  
' → logprob: -12.019722938537598
    10. '      ' → logprob: -12.144722938537598

Token 167: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006471532862633467
    2. 'width' → logprob: -5.631471633911133
    3. ' self' → logprob: -5.881471633911133
    4. ' width' → logprob: -9.631471633911133
    5. '       ' → logprob: -11.881471633911133
    6. '   ' → logprob: -13.006471633911133
    7. ' ' → logprob: -14.631471633911133
    8. '
' → logprob: -14.631471633911133
    9. '    ' → logprob: -15.131471633911133
    10. '        ' → logprob: -15.631471633911133

Token 168: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.014744059182703495
    2. ' .' → logprob: -5.014744281768799
    3. 'width' → logprob: -5.639744281768799
    4. '.' → logprob: -5.764744281768799
    5. '.grid' → logprob: -7.014744281768799
    6. '_width' → logprob: -8.63974380493164
    7. ' width' → logprob: -8.63974380493164
    8. 'Width' → logprob: -11.51474380493164
    9. '.Width' → logprob: -11.76474380493164
    10. '._' → logprob: -11.88974380493164

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038051363080739975
    2. '=' → logprob: -3.2880513668060303
    3. ' ' → logprob: -11.53805160522461
    4. ' =
' → logprob: -15.66305160522461
    5. ',' → logprob: -17.66305160522461
    6. '<|end|>' → logprob: -18.03805160522461
    7. ' ' → logprob: -18.66305160522461
    8. ' ,' → logprob: -18.66305160522461
    9. ' =
' → logprob: -19.53805160522461
    10. ')' → logprob: -19.53805160522461

Token 170: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.20141461491584778
    2. ' width' → logprob: -1.7014145851135254
    3. ' ' → logprob: -14.576415061950684
    4. 'idth' → logprob: -14.951415061950684
    5. '(width' → logprob: -15.451415061950684
    6. '	width' → logprob: -15.701415061950684
    7. ';width' → logprob: -17.076414108276367
    8. 'w' → logprob: -17.076414108276367
    9. '   ' → logprob: -17.451414108276367
    10. '    ' → logprob: -17.576414108276367

Token 171: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005898483213968575
    2. 'self' → logprob: -7.500589847564697
    3. '
' → logprob: -10.500590324401855
    4. ' self' → logprob: -11.875590324401855
    5. '   ' → logprob: -13.625590324401855
    6. ',' → logprob: -14.875590324401855
    7. '        
' → logprob: -15.375590324401855
    8. '      ' → logprob: -16.12558937072754
    9. '           ' → logprob: -16.37558937072754
    10. '	self' → logprob: -16.62558937072754

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012034466490149498
    2. 'self' → logprob: -6.751203536987305
    3. ' self' → logprob: -10.376203536987305
    4. '   ' → logprob: -13.751203536987305
    5. '
' → logprob: -14.626203536987305
    6. '      ' → logprob: -15.876203536987305
    7. '        
' → logprob: -16.001203536987305
    8. ' ' → logprob: -16.501203536987305
    9. '	self' → logprob: -16.626203536987305
    10. ',' → logprob: -17.126203536987305

Token 173: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.56102097814437e-05
    2. '       ' → logprob: -10.125045776367188
    3. ' self' → logprob: -12.250045776367188
    4. 'grid' → logprob: -14.250045776367188
    5. '   ' → logprob: -16.250045776367188
    6. '[self' → logprob: -18.250045776367188
    7. '#' → logprob: -18.375045776367188
    8. '
' → logprob: -18.500045776367188
    9. '```' → logprob: -18.500045776367188
    10. 's' → logprob: -18.625045776367188

Token 174: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.001377137377858162
    2. '.' → logprob: -6.751377105712891
    3. ' .' → logprob: -9.00137710571289
    4. '.data' → logprob: -10.12637710571289
    5. '.cells' → logprob: -11.00137710571289
    6. '._' → logprob: -11.87637710571289
    7. '.positions' → logprob: -12.25137710571289
    8. '.Grid' → logprob: -12.37637710571289
    9. '.rows' → logprob: -12.87637710571289
    10. '.matrix' → logprob: -13.75137710571289

Token 175: ' =' (ID: 314)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.1831619143486023
    2. '=' → logprob: -2.558161973953247
    3. '_' → logprob: -2.933161973953247
    4. ' =' → logprob: -3.308161973953247
    5. 'data' → logprob: -9.683161735534668
    6. '_=' → logprob: -11.183161735534668
    7. '=_' → logprob: -11.308161735534668
    8. 'Data' → logprob: -12.558161735534668
    9. '=[]' → logprob: -12.808161735534668
    10. '[' → logprob: -12.808161735534668

Token 176: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1299775391817093
    2. '[[' → logprob: -2.3799774646759033
    3. '[
' → logprob: -4.129977703094482
    4. 'grid' → logprob: -4.754977703094482
    5. '[list' → logprob: -6.254977703094482
    6. ' [' → logprob: -6.754977703094482
    7. '[row' → logprob: -7.629977703094482
    8. '[]
' → logprob: -8.754977226257324
    9. '[string' → logprob: -9.004977226257324
    10. '[]' → logprob: -9.504977226257324

Token 177: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001045551267452538
    2. '0' → logprob: -8.251045227050781
    3. 'c' → logprob: -8.501045227050781
    4. 'ord' → logprob: -8.751045227050781
    5. '(int' → logprob: -8.876045227050781
    6. 'grid' → logprob: -9.501045227050781
    7. 'C' → logprob: -9.751045227050781
    8. 'False' → logprob: -9.751045227050781
    9. 'char' → logprob: -10.876045227050781
    10. ' int' → logprob: -11.001045227050781

Token 178: '(ch' (ID: 15574)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.9414377808570862
    2. '(cell' → logprob: -1.3164377212524414
    3. '(char' → logprob: -1.8164377212524414
    4. '(ch' → logprob: -1.9414377212524414
    5. '(c' → logprob: -3.4414377212524414
    6. '(value' → logprob: -6.191437721252441
    7. '(' → logprob: -6.816437721252441
    8. '(x' → logprob: -8.316437721252441
    9. '(data' → logprob: -9.691437721252441
    10. '(d' → logprob: -9.941437721252441

Token 179: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.370294846012257e-05
    2. ')]' → logprob: -10.500043869018555
    3. ' )' → logprob: -11.500043869018555
    4. ')
' → logprob: -13.250043869018555
    5. '))' → logprob: -13.500043869018555
    6. ')])' → logprob: -14.875043869018555
    7. ')-' → logprob: -15.000043869018555
    8. '())' → logprob: -15.000043869018555
    9. '])' → logprob: -15.000043869018555
    10. ')`' → logprob: -15.250043869018555

Token 180: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20723247528076172
    2. ' for' → logprob: -1.8322324752807617
    3. 'for' → logprob: -3.8322324752807617
    4. ']' → logprob: -5.332232475280762
    5. '(ch' → logprob: -8.457232475280762
    6. '()' → logprob: -8.832232475280762
    7. ')]' → logprob: -9.457232475280762
    8. ' )' → logprob: -9.957232475280762
    9. '}' → logprob: -10.582232475280762
    10. ' ch' → logprob: -10.832232475280762

Token 181: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.13260719180107117
    2. 'ch' → logprob: -2.3826072216033936
    3. ' row' → logprob: -4.0076069831848145
    4. 'row' → logprob: -5.2576069831848145
    5. ' line' → logprob: -5.5076069831848145
    6. 'line' → logprob: -6.5076069831848145
    7. ' cell' → logprob: -6.5076069831848145
    8. ' col' → logprob: -7.3826069831848145
    9. 'cell' → logprob: -7.3826069831848145
    10. 'col' → logprob: -8.757607460021973

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006850115954875946
    2. 'in' → logprob: -5.006850242614746
    3. ' ' → logprob: -9.131850242614746
    4. 'row' → logprob: -11.256850242614746
    5. '<|end|>' → logprob: -12.006850242614746
    6. 'line' → logprob: -13.006850242614746
    7. ' line' → logprob: -14.381850242614746
    8. ' row' → logprob: -14.381850242614746
    9. '	in' → logprob: -14.506850242614746
    10. ')' → logprob: -14.506850242614746

Token 183: ' line' (ID: 2543)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.8632025718688965
    2. ' row' → logprob: -0.8632025718688965
    3. 'line' → logprob: -2.4882025718688965
    4. ' line' → logprob: -2.6132025718688965
    5. 'str' → logprob: -11.988203048706055
    6. ' ' → logprob: -11.988203048706055
    7. 'grid' → logprob: -12.613203048706055
    8. ' grid' → logprob: -12.988203048706055
    9. 'list' → logprob: -13.988203048706055
    10. '   ' → logprob: -14.113203048706055

Token 184: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010807292710524052
    2. '.strip' → logprob: -9.625107765197754
    3. ']]' → logprob: -10.625107765197754
    4. ' ]' → logprob: -11.500107765197754
    5. 'strip' → logprob: -12.750107765197754
    6. ']
' → logprob: -13.750107765197754
    7. '.rstrip' → logprob: -13.875107765197754
    8. ']]]' → logprob: -14.375107765197754
    9. ')]' → logprob: -14.500107765197754
    10. '()]' → logprob: -15.000107765197754

Token 185: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011712945997714996
    2. ' ]' → logprob: -7.001171112060547
    3. ' for' → logprob: -8.376171112060547
    4. 'for' → logprob: -10.876171112060547
    5. ')' → logprob: -12.376171112060547
    6. '       ' → logprob: -13.001171112060547
    7. ' in' → logprob: -13.751171112060547
    8. '           ' → logprob: -13.876171112060547
    9. ')]' → logprob: -14.376171112060547
    10. ']
' → logprob: -14.751171112060547

Token 186: ' line' (ID: 2543)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.10023277252912521
    2. 'grid' → logprob: -2.3502328395843506
    3. ' line' → logprob: -10.85023307800293
    4. ' row' → logprob: -13.47523307800293
    5. '	grid' → logprob: -13.60023307800293
    6. ':grid' → logprob: -13.85023307800293
    7. 'line' → logprob: -13.97523307800293
    8. '(grid' → logprob: -14.22523307800293
    9. ' ' → logprob: -14.35023307800293
    10. 'row' → logprob: -15.22523307800293

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009358783136121929
    2. 'in' → logprob: -7.000936031341553
    3. 'grid' → logprob: -11.250935554504395
    4. '(grid' → logprob: -11.875935554504395
    5. ' grid' → logprob: -12.750935554504395
    6. ':grid' → logprob: -14.250935554504395
    7. 'self' → logprob: -14.750935554504395
    8. '<|end|>' → logprob: -15.750935554504395
    9. 'In' → logprob: -16.37593650817871
    10. 'import' → logprob: -16.50093650817871

Token 188: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.12693136930465698
    2. ' grid' → logprob: -2.1269314289093018
    3. '   ' → logprob: -13.501931190490723
    4. '
' → logprob: -14.626931190490723
    5. ' ' → logprob: -14.626931190490723
    6. '(grid' → logprob: -15.001931190490723
    7. '	grid' → logprob: -15.126931190490723
    8. ':grid' → logprob: -16.12693214416504
    9. '.grid' → logprob: -16.87693214416504
    10. '       ' → logprob: -17.00193214416504

Token 189: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.7432603272027336e-06
    2. 'data' → logprob: -13.375001907348633
    3. '_' → logprob: -17.625001907348633
    4. ']' → logprob: -17.875001907348633
    5. ' data' → logprob: -18.000001907348633
    6. ')' → logprob: -18.250001907348633
    7. '])' → logprob: -18.875001907348633
    8. ')]' → logprob: -19.125001907348633
    9. 'Data' → logprob: -19.125001907348633
    10. ' _' → logprob: -20.625001907348633

Token 190: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2948405128554441e-05
    2. ' ]' → logprob: -11.62501335144043
    3. ']
' → logprob: -12.75001335144043
    4. ')]' → logprob: -14.00001335144043
    5. '])' → logprob: -15.75001335144043
    6. ']]' → logprob: -16.75001335144043
    7. ']

' → logprob: -17.37501335144043
    8. ')' → logprob: -17.50001335144043
    9. ']
' → logprob: -18.62501335144043
    10. '()]' → logprob: -19.00001335144043

Token 191: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03124811500310898
    2. '<|end|>' → logprob: -4.156248092651367
    3. '   ' → logprob: -4.531248092651367
    4. '

' → logprob: -5.906248092651367
    5. '    
' → logprob: -7.031248092651367
    6. 'def' → logprob: -8.156248092651367
    7. '  
' → logprob: -9.156248092651367
    8. ' 
' → logprob: -9.281248092651367
    9. '<|end|>' → logprob: -9.281248092651367
    10. ' def' → logprob: -10.281248092651367

Token 192: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00014239625306800008
    2. ' def' → logprob: -9.500142097473145
    3. '   ' → logprob: -9.625142097473145
    4. 'de' → logprob: -14.125142097473145
    5. '
' → logprob: -14.500142097473145
    6. 'self' → logprob: -16.37514305114746
    7. 'class' → logprob: -16.87514305114746
    8. '```' → logprob: -16.87514305114746
    9. 'from' → logprob: -17.87514305114746
    10. '    
' → logprob: -18.00014305114746

Token 193: ' cic' (ID: 30432)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.9387776851654053
    2. ' flash' → logprob: -1.6887776851654053
    3. ' is' → logprob: -1.8137776851654053
    4. 'flash' → logprob: -3.4387776851654053
    5. ' neighbors' → logprob: -3.4387776851654053
    6. ' step' → logprob: -3.8137776851654053
    7. ' increase' → logprob: -3.9387776851654053
    8. ' increment' → logprob: -4.063777923583984
    9. 'get' → logprob: -4.313777923583984
    10. ' flashes' → logprob: -4.313777923583984

Token 194: 'adas' (ID: 3921)
  Prédit: 'ada'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ada' → logprob: -0.0025107357650995255
    2. 'adas' → logprob: -6.7525105476379395
    3. 'ad' → logprob: -7.6275105476379395
    4. 'k' → logprob: -7.7525105476379395
    5. 'a' → logprob: -8.627511024475098
    6. ' ada' → logprob: -10.502511024475098
    7. '```' → logprob: -10.752511024475098
    8. 'ade' → logprob: -11.065011024475098
    9. 'ka' → logprob: -11.127511024475098
    10. 'ада' → logprob: -11.315011024475098

Token 195: '_at' (ID: 8254)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.047758638858795166
    2. '_fl' → logprob: -4.54775857925415
    3. '_b' → logprob: -5.04775857925415
    4. '(' → logprob: -5.29775857925415
    5. '_flash' → logprob: -5.79775857925415
    6. '_on' → logprob: -5.79775857925415
    7. '()' → logprob: -5.79775857925415
    8. '_' → logprob: -6.04775857925415
    9. 'fl' → logprob: -6.17275857925415
    10. '_positions' → logprob: -6.67275857925415

Token 196: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06473564356565475
    2. 'risk' → logprob: -2.9397356510162354
    3. '(' → logprob: -4.939735412597656
    4. 'self' → logprob: -7.064735412597656
    5. '<|end|>' → logprob: -7.814735412597656
    6. 'positions' → logprob: -8.689735412597656
    7. '_positions' → logprob: -8.939735412597656
    8. '_depth' → logprob: -9.189735412597656
    9. 'position' → logprob: -9.189735412597656
    10. ' risk' → logprob: -9.439735412597656

Token 197: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2707047462463379
    2. 'self' → logprob: -2.395704746246338
    3. '(self' → logprob: -2.645704746246338
    4. ',' → logprob: -3.770704746246338
    5. 'time' → logprob: -3.770704746246338
    6. ')(' → logprob: -4.270704746246338
    7. '_time' → logprob: -5.520704746246338
    8. '(' → logprob: -5.645704746246338
    9. 'position' → logprob: -6.895704746246338
    10. '<|end|>' → logprob: -7.020704746246338

Token 198: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0021972409449517727
    2. ' self' → logprob: -6.377197265625
    3. ')' → logprob: -8.002197265625
    4. 'pos' → logprob: -9.377197265625
    5. 'position' → logprob: -10.127197265625
    6. 'row' → logprob: -10.752197265625
    7. '
' → logprob: -12.252197265625
    8. ' ' → logprob: -13.127197265625
    9. '0' → logprob: -13.877197265625
    10. '   ' → logprob: -13.877197265625

Token 199: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3563205897808075
    2. ':' → logprob: -1.2313206195831299
    3. ')' → logprob: -4.981320381164551
    4. '):
' → logprob: -7.106320381164551
    5. 'self' → logprob: -10.48132038116455
    6. ' :' → logprob: -10.60632038116455
    7. '   ' → logprob: -10.73132038116455
    8. '       ' → logprob: -11.60632038116455
    9. '():' → logprob: -11.60632038116455
    10. '<|end|>' → logprob: -11.98132038116455

Token 200: ' Grid' (ID: 18087)
  Prédit: 'Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -0.38304033875465393
    2. 'self' → logprob: -1.6330403089523315
    3. ')' → logprob: -2.258040428161621
    4. '):' → logprob: -4.758040428161621
    5. ' Grid' → logprob: -5.758040428161621
    6. '):
' → logprob: -6.758040428161621
    7. '   ' → logprob: -7.008040428161621
    8. ' self' → logprob: -7.133040428161621
    9. ' ' → logprob: -7.258040428161621
    10. '(Grid' → logprob: -7.258040428161621

Token 201: 'Position' (ID: 5647)
  Prédit: 'Position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Position' → logprob: -9.088346359931165e-07
    2. 'Pos' → logprob: -14.625000953674316
    3. 'position' → logprob: -15.375000953674316
    4. '.Position' → logprob: -16.25
    5. ' Position' → logprob: -17.125
    6. 'osition' → logprob: -17.375
    7. 'Positions' → logprob: -17.375
    8. '(Position' → logprob: -17.375
    9. '   ' → logprob: -18.0
    10. ')' → logprob: -18.375

Token 202: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18103627860546112
    2. '):' → logprob: -1.8060362339019775
    3. 'self' → logprob: -7.306036472320557
    4. '   ' → logprob: -8.181035995483398
    5. '):
' → logprob: -9.056035995483398
    6. '       ' → logprob: -9.681035995483398
    7. ' )' → logprob: -9.931035995483398
    8. ')->' → logprob: -10.056035995483398
    9. ' ):' → logprob: -10.556035995483398
    10. ' ' → logprob: -10.681035995483398

Token 203: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06714927405118942
    2. '():' → logprob: -2.8171491622924805
    3. ':' → logprob: -5.9421491622924805
    4. '(' → logprob: -6.3171491622924805
    5. '):' → logprob: -8.44214916229248
    6. '->' → logprob: -8.56714916229248
    7. 'self' → logprob: -9.06714916229248
    8. ' ->' → logprob: -9.31714916229248
    9. ')' → logprob: -9.94214916229248
    10. '()' → logprob: -10.69214916229248

Token 204: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023258758708834648
    2. ' int' → logprob: -3.773258686065674
    3. '[int' → logprob: -12.023259162902832
    4. '   ' → logprob: -12.523259162902832
    5. ' ' → logprob: -13.398259162902832
    6. '	int' → logprob: -14.273259162902832
    7. 'list' → logprob: -14.648259162902832
    8. '  ' → logprob: -14.898259162902832
    9. ' list' → logprob: -15.273259162902832
    10. ':int' → logprob: -16.023258209228516

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2328300178050995
    2. '(self' → logprob: -1.6078300476074219
    3. '():' → logprob: -6.107830047607422
    4. '(' → logprob: -6.357830047607422
    5. '):' → logprob: -6.732830047607422
    6. '       ' → logprob: -6.982830047607422
    7. 'self' → logprob: -7.607830047607422
    8. '{' → logprob: -8.357830047607422
    9. ':
' → logprob: -8.732830047607422
    10. '   ' → logprob: -9.107830047607422

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01745012030005455
    2. 'return' → logprob: -4.142450332641602
    3. ' return' → logprob: -6.642450332641602
    4. 'self' → logprob: -9.392450332641602
    5. '   ' → logprob: -10.892450332641602
    6. '
' → logprob: -12.892450332641602
    7. '	return' → logprob: -14.017450332641602
    8. ' self' → logprob: -14.017450332641602
    9. '```' → logprob: -14.267450332641602
    10. '           ' → logprob: -14.392450332641602

Token 207: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00010771531378850341
    2. ' return' → logprob: -10.000107765197754
    3. '       ' → logprob: -10.000107765197754
    4. 'self' → logprob: -11.000107765197754
    5. '   ' → logprob: -16.500106811523438
    6. '```' → logprob: -17.875106811523438
    7. '	return' → logprob: -19.250106811523438
    8. '
' → logprob: -19.250106811523438
    9. ' self' → logprob: -21.125106811523438
    10. '           ' → logprob: -21.375106811523438

Token 208: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02324839122593403
    2. ' self' → logprob: -3.7732484340667725
    3. '       ' → logprob: -13.273248672485352
    4. '(self' → logprob: -14.523248672485352
    5. '   ' → logprob: -15.273248672485352
    6. '	self' → logprob: -15.398248672485352
    7. '
' → logprob: -16.14824867248535
    8. '[self' → logprob: -17.02324867248535
    9. ' ' → logprob: -17.27324867248535
    10. '           ' → logprob: -17.64824867248535

Token 209: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -9.150362166110426e-05
    2. '.' → logprob: -9.375091552734375
    3. ' .' → logprob: -12.000091552734375
    4. '.Grid' → logprob: -15.375091552734375
    5. '.gr' → logprob: -17.625091552734375
    6. '.g' → logprob: -17.875091552734375
    7. '	grid' → logprob: -18.125091552734375
    8. '​.' → logprob: -18.250091552734375
    9. ':grid' → logprob: -18.625091552734375
    10. '`.' → logprob: -18.750091552734375

Token 210: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.125000953674316
    3. 'pos' → logprob: -15.625000953674316
    4. ' [' → logprob: -16.25
    5. '[
' → logprob: -18.0
    6. '```' → logprob: -18.375
    7. '[position' → logprob: -18.5
    8. '[self' → logprob: -19.625
    9. '   ' → logprob: -19.875
    10. '

' → logprob: -20.5

Token 211: '.row' (ID: 24627)
  Prédit: '.row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -8.995397365652025e-05
    2. '.' → logprob: -9.750089645385742
    3. ' .' → logprob: -10.375089645385742
    4. '.
' → logprob: -15.625089645385742
    5. 'row' → logprob: -16.625089645385742
    6. '].' → logprob: -16.625089645385742
    7. '	row' → logprob: -18.000089645385742
    8. '.Row' → logprob: -18.375089645385742
    9. ' ' → logprob: -18.500089645385742
    10. '
' → logprob: -18.750089645385742

Token 212: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008096250821836293
    2. '[pos' → logprob: -7.375809669494629
    3. ' ][' → logprob: -8.625809669494629
    4. ']' → logprob: -12.625809669494629
    5. '   ' → logprob: -16.000808715820312
    6. '[' → logprob: -16.250808715820312
    7. ',pos' → logprob: -17.250808715820312
    8. 'pos' → logprob: -17.500808715820312
    9. '"][' → logprob: -17.625808715820312
    10. '()][' → logprob: -18.000808715820312

Token 213: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.676292231422849e-05
    2. ' pos' → logprob: -11.000017166137695
    3. '   ' → logprob: -21.625017166137695
    4. '	pos' → logprob: -21.625017166137695
    5. 'col' → logprob: -22.250017166137695
    6. '_pos' → logprob: -23.125017166137695
    7. ' ' → logprob: -23.375017166137695
    8. '
' → logprob: -23.500017166137695
    9. 'position' → logprob: -23.750017166137695
    10. '  ' → logprob: -24.000017166137695

Token 214: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -0.00011427151912357658
    2. '.' → logprob: -9.125114440917969
    3. ' .' → logprob: -12.250114440917969
    4. '.Col' → logprob: -16.00011444091797
    5. '.cols' → logprob: -16.75011444091797
    6. '.
' → logprob: -17.25011444091797
    7. '.pos' → logprob: -17.37511444091797
    8. '.column' → logprob: -17.50011444091797
    9. '.co' → logprob: -17.50011444091797
    10. '.cod' → logprob: -17.62511444091797

Token 215: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010324534960091114
    2. ']' → logprob: -7.00103235244751
    3. '}' → logprob: -9.251032829284668
    4. ' )' → logprob: -11.376032829284668
    5. '<|end|>' → logprob: -12.001032829284668
    6. ')]' → logprob: -13.001032829284668
    7. ')}' → logprob: -13.001032829284668
    8. ')
' → logprob: -13.751032829284668
    9. ')return' → logprob: -15.251032829284668
    10. '))' → logprob: -15.501032829284668

Token 216: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019129417836666107
    2. '
' → logprob: -4.269129276275635
    3. '<|end|>' → logprob: -6.269129276275635
    4. '    
' → logprob: -6.519129276275635
    5. ' ' → logprob: -7.519129276275635
    6. ' 
' → logprob: -8.144129753112793
    7. 'def' → logprob: -8.144129753112793
    8. '```' → logprob: -8.894129753112793
    9. '  
' → logprob: -9.019129753112793
    10. ' def' → logprob: -9.769129753112793

Token 217: ' Path' (ID: 14027)
  Prédit: ' Cic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Cic' → logprob: -1.0796658992767334
    2. 'C' → logprob: -1.3296658992767334
    3. ' Grid' → logprob: -1.3296658992767334
    4. ' C' → logprob: -3.3296658992767334
    5. 'Grid' → logprob: -3.7046658992767334
    6. ' List' → logprob: -4.0796661376953125
    7. ' ' → logprob: -5.1421661376953125
    8. ' Cycle' → logprob: -6.0171661376953125
    9. ' Simulation' → logprob: -6.0796661376953125
    10. ' Solution' → logprob: -6.1421661376953125

Token 218: 'Cost' (ID: 16815)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009844977408647537
    2. ':
' → logprob: -5.384844779968262
    3. 'Finding' → logprob: -5.759844779968262
    4. 'Finder' → logprob: -7.259844779968262
    5. 'Position' → logprob: -9.009844779968262
    6. 'Weight' → logprob: -9.009844779968262
    7. '(' → logprob: -9.134844779968262
    8. '(Position' → logprob: -9.134844779968262
    9. '{' → logprob: -9.259844779968262
    10. 'finding' → logprob: -9.509844779968262

Token 219: 'Calculator' (ID: 50159)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029513163026422262
    2. '(' → logprob: -5.877951145172119
    3. ':
' → logprob: -10.127951622009277
    4. '(Grid' → logprob: -10.877951622009277
    5. '(object' → logprob: -10.877951622009277
    6. ' :' → logprob: -11.002951622009277
    7. '):' → logprob: -11.252951622009277
    8. '():' → logprob: -11.752951622009277
    9. '>:' → logprob: -12.127951622009277
    10. '(":' → logprob: -13.002951622009277

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034726131707429886
    2. ' :' → logprob: -6.253472805023193
    3. ':
' → logprob: -6.503472805023193
    4. '(' → logprob: -10.753472328186035
    5. ' :
' → logprob: -11.128472328186035
    6. ':def' → logprob: -12.753472328186035
    7. '   ' → logprob: -13.378472328186035
    8. ':

' → logprob: -13.503472328186035
    9. '(object' → logprob: -14.003472328186035
    10. '):' → logprob: -14.753472328186035

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10053282976150513
    2. ' def' → logprob: -2.3505327701568604
    3. 'def' → logprob: -9.725532531738281
    4. '    ' → logprob: -9.850532531738281
    5. ' ' → logprob: -9.975532531738281
    6. ' indentation' → logprob: -10.225532531738281
    7. '<|end|>' → logprob: -11.100532531738281
    8. '    
' → logprob: -11.100532531738281
    9. ')' → logprob: -11.225532531738281
    10. '   ' → logprob: -11.850532531738281

Token 222: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0013701190473511815
    2. 'def' (adapté à ' def') → logprob: -6.626369953155518
    3. '   ' → logprob: -10.126370429992676
    4. ' ' → logprob: -13.126370429992676
    5. '    ' → logprob: -13.626370429992676
    6. ' class' → logprob: -14.751370429992676
    7. 'class' → logprob: -15.501370429992676
    8. 'de' → logprob: -16.37636947631836
    9. '	def' → logprob: -16.75136947631836
    10. ' de' → logprob: -16.87636947631836

Token 223: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005123819224536419
    2. ' def' → logprob: -5.505123615264893
    3. ' ' → logprob: -7.630123615264893
    4. '__' → logprob: -8.13012409210205
    5. ' _' → logprob: -8.88012409210205
    6. ' init' → logprob: -10.38012409210205
    7. 'def' → logprob: -10.50512409210205
    8. '_' → logprob: -11.38012409210205
    9. '_init' → logprob: -11.50512409210205
    10. 'class' → logprob: -11.50512409210205

Token 224: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.650518920039758e-06
    2. 'int' → logprob: -13.000003814697266
    3. ' init' → logprob: -15.000003814697266
    4. 'def' → logprob: -15.750003814697266
    5. '_init' → logprob: -15.875003814697266
    6. 'new' → logprob: -16.000003814697266
    7. 'in' → logprob: -16.000003814697266
    8. '__' → logprob: -16.250003814697266
    9. 'ini' → logprob: -16.500003814697266
    10. 'call' → logprob: -17.000003814697266

Token 225: '__(' (ID: 8241)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2713353931903839
    2. '(self' → logprob: -2.0213353633880615
    3. '__(' → logprob: -2.2713353633880615
    4. '(' → logprob: -6.771335601806641
    5. '_(' → logprob: -7.646335601806641
    6. ' ' → logprob: -8.77133560180664
    7. ',' → logprob: -9.52133560180664
    8. '__(
' → logprob: -10.27133560180664
    9. '<|end|>' → logprob: -11.02133560180664
    10. ')(' → logprob: -11.14633560180664

Token 226: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006178933195769787
    2. ' self' → logprob: -5.131178855895996
    3. ')' → logprob: -8.506178855895996
    4. '   ' → logprob: -11.381178855895996
    5. '
' → logprob: -11.631178855895996
    6. ',' → logprob: -11.881178855895996
    7. '(self' → logprob: -12.256178855895996
    8. ' ' → logprob: -12.756178855895996
    9. '<|end|>' → logprob: -12.756178855895996
    10. 'grid' → logprob: -13.006178855895996

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34847816824913025
    2. ' ,' → logprob: -1.2234781980514526
    3. ' ' → logprob: -11.348478317260742
    4. ' )' → logprob: -11.723478317260742
    5. 'self' → logprob: -12.098478317260742
    6. ')' → logprob: -12.348478317260742
    7. ' ,
' → logprob: -14.098478317260742
    8. '<|end|>' → logprob: -14.223478317260742
    9. '  ' → logprob: -14.848478317260742
    10. ',
' → logprob: -14.973478317260742

Token 228: ' cic' (ID: 30432)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.2471710741519928
    2. 'grid' → logprob: -2.24717116355896
    3. 'c' → logprob: -2.87217116355896
    4. ' cic' → logprob: -3.74717116355896
    5. ' max' → logprob: -4.497170925140381
    6. ' height' → logprob: -4.872170925140381
    7. ' start' → logprob: -5.497170925140381
    8. 'height' → logprob: -5.497170925140381
    9. 'max' → logprob: -6.372170925140381
    10. ' ' → logprob: -7.247170925140381

Token 229: 'ada' (ID: 1194)
  Prédit: 'ada'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ada' → logprob: -0.6933391094207764
    2. 'adas' → logprob: -0.6933391094207764
    3. 'ads' → logprob: -9.818339347839355
    4. 'ad' → logprob: -10.318339347839355
    5. 'adax' → logprob: -10.693339347839355
    6. 'ада' → logprob: -11.193339347839355
    7. 'a' → logprob: -11.943339347839355
    8. '```' → logprob: -12.318339347839355
    9. '   ' → logprob: -12.693339347839355
    10. 'as' → logprob: -12.693339347839355

Token 230: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.04004206135869026
    2. 's' → logprob: -4.165041923522949
    3. 'grid' → logprob: -4.415041923522949
    4. 'Grid' → logprob: -4.665041923522949
    5. '_positions' → logprob: -6.540041923522949
    6. ' grid' → logprob: -8.04004192352295
    7. ')' → logprob: -9.41504192352295
    8. '_' → logprob: -9.54004192352295
    9. 'positions' → logprob: -9.79004192352295
    10. '   ' → logprob: -10.04004192352295

Token 231: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7167326211929321
    2. ',' → logprob: -1.2167326211929321
    3. ':' → logprob: -1.5917326211929321
    4. ' ):' → logprob: -4.966732501983643
    5. '):
' → logprob: -5.841732501983643
    6. ' :' → logprob: -6.841732501983643
    7. ' ,' → logprob: -7.341732501983643
    8. ')' → logprob: -8.9667329788208
    9. '   ' → logprob: -10.3417329788208
    10. ' ):
' → logprob: -10.5917329788208

Token 232: ' Cic' (ID: 96235)
  Prédit: ' Cic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Cic' → logprob: -0.10207390785217285
    2. 'C' → logprob: -2.352073907852173
    3. ' C' → logprob: -7.352073669433594
    4. ')' → logprob: -7.602073669433594
    5. ' )' → logprob: -8.477073669433594
    6. ' ' → logprob: -8.477073669433594
    7. ' cic' → logprob: -8.727073669433594
    8. ' ' → logprob: -10.102073669433594
    9. 'c' → logprob: -10.852073669433594
    10. ' Cy' → logprob: -11.227073669433594

Token 233: 'ada' (ID: 1194)
  Prédit: 'ada'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ada' → logprob: -3.1186566047836095e-05
    2. 'ad' → logprob: -11.000031471252441
    3. 'adas' → logprob: -12.000031471252441
    4. 'a' → logprob: -12.625031471252441
    5. 'ада' → logprob: -13.625031471252441
    6. ' ada' → logprob: -14.250031471252441
    7. 'ida' → logprob: -14.375031471252441
    8. 'da' → logprob: -14.750031471252441
    9. 'Ada' → logprob: -14.875031471252441
    10. '```' → logprob: -15.000031471252441

Token 234: 'Grid' (ID: 5351)
  Prédit: 'Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -3.531315314830863e-06
    2. '<Grid' → logprob: -14.000003814697266
    3. '	Grid' → logprob: -14.375003814697266
    4. 'grid' → logprob: -14.375003814697266
    5. 'Gr' → logprob: -15.375003814697266
    6. '_grid' → logprob: -15.375003814697266
    7. ' Grid' → logprob: -15.500003814697266
    8. ')' → logprob: -15.500003814697266
    9. '.Grid' → logprob: -15.625003814697266
    10. '
' → logprob: -16.250003814697266

Token 235: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015072178095579147
    2. '):
' → logprob: -4.265072345733643
    3. ',' → logprob: -7.265072345733643
    4. ' ):' → logprob: -9.015071868896484
    5. ')' → logprob: -9.640071868896484
    6. '   ' → logprob: -11.640071868896484
    7. ':' → logprob: -12.015071868896484
    8. '):
' → logprob: -12.640071868896484
    9. ' ):
' → logprob: -13.265071868896484
    10. '       ' → logprob: -14.140071868896484

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011939727846765891
    2. 'self' → logprob: -9.75011920928955
    3. ' self' → logprob: -10.12511920928955
    4. '   ' → logprob: -11.00011920928955
    5. ',' → logprob: -13.25011920928955
    6. '      ' → logprob: -14.37511920928955
    7. '<|end|>' → logprob: -14.75011920928955
    8. ' ' → logprob: -14.87511920928955
    9. '
' → logprob: -14.87511920928955
    10. '```' → logprob: -16.000120162963867

Token 237: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.621091902256012
    2. ' self' → logprob: -0.871091902256012
    3. '       ' → logprob: -3.121091842651367
    4. '   ' → logprob: -10.496091842651367
    5. '	self' → logprob: -12.121091842651367
    6. ' ' → logprob: -13.621091842651367
    7. '        ' → logprob: -13.621091842651367
    8. 'import' → logprob: -14.121091842651367
    9. '    ' → logprob: -14.621091842651367
    10. '(self' → logprob: -14.746091842651367

Token 238: '.grid' (ID: 19269)
  Prédit: '.c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.0058070942759513855
    2. '.' → logprob: -5.255806922912598
    3. ' .' → logprob: -8.005806922912598
    4. '.grid' → logprob: -8.380806922912598
    5. '._' → logprob: -12.880806922912598
    6. 'c' → logprob: -13.130806922912598
    7. '   ' → logprob: -14.005806922912598
    8. '.py' → logprob: -14.630806922912598
    9. '.s' → logprob: -14.755806922912598
    10. '.C' → logprob: -15.255806922912598

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39006757736206055
    2. '=' → logprob: -1.1400675773620605
    3. '_grid' → logprob: -6.3900675773620605
    4. '   ' → logprob: -6.6400675773620605
    5. '_' → logprob: -9.015068054199219
    6. ' ' → logprob: -10.390068054199219
    7. '    ' → logprob: -10.765068054199219
    8. '_data' → logprob: -11.640068054199219
    9. 'grid' → logprob: -12.515068054199219
    10. '  ' → logprob: -12.640068054199219

Token 240: ' cic' (ID: 30432)
  Prédit: ' cic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cic' → logprob: -0.42874616384506226
    2. 'c' → logprob: -1.053746223449707
    3. ' c' → logprob: -11.178746223449707
    4. ' cik' → logprob: -11.303746223449707
    5. '   ' → logprob: -12.303746223449707
    6. '	c' → logprob: -12.428746223449707
    7. ' cicl' → logprob: -13.053746223449707
    8. ' ' → logprob: -13.303746223449707
    9. ' coc' → logprob: -14.053746223449707
    10. ' cyc' → logprob: -14.303746223449707

Token 241: 'ada' (ID: 1194)
  Prédit: 'ada'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ada' → logprob: -5.157039049663581e-05
    2. 'da' → logprob: -10.125051498413086
    3. 'ad' → logprob: -12.500051498413086
    4. 'a' → logprob: -12.875051498413086
    5. 'c' → logprob: -13.250051498413086
    6. 'adas' → logprob: -13.750051498413086
    7. 'ада' → logprob: -14.375051498413086
    8. 'cada' → logprob: -14.625051498413086
    9. '   ' → logprob: -14.875051498413086
    10. ' ada' → logprob: -15.500051498413086

Token 242: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.005111964885145426
    2. 'Grid' → logprob: -5.380112171173096
    3. 'grid' → logprob: -7.630112171173096
    4. '_' → logprob: -13.380111694335938
    5. '_gr' → logprob: -13.380111694335938
    6. '.grid' → logprob: -13.755111694335938
    7. '_GRID' → logprob: -14.880111694335938
    8. ' grid' → logprob: -15.380111694335938
    9. '<Grid' → logprob: -15.505111694335938
    10. '.Grid' → logprob: -15.505111694335938

Token 243: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17292998731136322
    2. '   ' → logprob: -2.0479300022125244
    3. '<|end|>' → logprob: -3.6729300022125244
    4. '    
' → logprob: -6.172929763793945
    5. 'def' → logprob: -7.047929763793945
    6. '

' → logprob: -7.297929763793945
    7. '<|end|>' → logprob: -8.672929763793945
    8. ' def' → logprob: -8.797929763793945
    9. '       ' → logprob: -9.172929763793945
    10. '  
' → logprob: -9.297929763793945

Token 245: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.14210785925388336
    2. 'from' → logprob: -2.5171079635620117
    3. 'import' → logprob: -3.8921079635620117
    4. 'def' → logprob: -4.142107963562012
    5. '       ' → logprob: -4.517107963562012
    6. ' self' → logprob: -5.642107963562012
    7. '   ' → logprob: -7.267107963562012
    8. ' from' → logprob: -8.767107963562012
    9. '
' → logprob: -9.267107963562012
    10. 'class' → logprob: -11.017107963562012

Token 246: '.dp' (ID: 77268)
  Prédit: ' .'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' .' → logprob: -1.1990002393722534
    2. '.cost' → logprob: -1.1990002393722534
    3. '.' → logprob: -1.4490002393722534
    4. '.dist' → logprob: -3.199000358581543
    5. 'import' → logprob: -4.199000358581543
    6. '._' → logprob: -4.199000358581543
    7. '.paths' → logprob: -4.824000358581543
    8. '.height' → logprob: -4.949000358581543
    9. 'cost' → logprob: -4.949000358581543
    10. '.best' → logprob: -5.199000358581543

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016401132568717003
    2. '=' → logprob: -4.141401290893555
    3. ' ' → logprob: -8.266401290893555
    4. '<|end|>' → logprob: -10.016401290893555
    5. '[' → logprob: -10.516401290893555
    6. '   ' → logprob: -11.641401290893555
    7. ':' → logprob: -12.141401290893555
    8. ' =[' → logprob: -12.516401290893555
    9. '  ' → logprob: -12.641401290893555
    10. '=[]' → logprob: -12.766401290893555

Token 248: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.534013032913208
    2. '{}' → logprob: -1.284013032913208
    3. ' [[' → logprob: -2.034013032913208
    4. ' {}' → logprob: -5.534012794494629
    5. '[' → logprob: -6.409012794494629
    6. '[
' → logprob: -8.284012794494629
    7. '{' → logprob: -9.409012794494629
    8. ' [' → logprob: -9.659012794494629
    9. '[]' → logprob: -12.284012794494629
    10. '[{' → logprob: -12.409012794494629

Token 249: 'None' (ID: 8505)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.10166027396917343
    2. 'None' → logprob: -2.3516602516174316
    3. '-' → logprob: -6.851660251617432
    4. '0' → logprob: -7.976660251617432
    5. ' None' → logprob: -10.35166072845459
    6. ' float' → logprob: -11.10166072845459
    7. '   ' → logprob: -13.22666072845459
    8. 'False' → logprob: -14.47666072845459
    9. '999' → logprob: -14.97666072845459
    10. ' -' → logprob: -14.97666072845459

Token 250: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0015913923271000385
    2. 'for' → logprob: -6.501591205596924
    3. ']' → logprob: -10.251591682434082
    4. ' ' → logprob: -10.251591682434082
    5. ' ]' → logprob: -11.876591682434082
    6. ' if' → logprob: -12.001591682434082
    7. '   ' → logprob: -13.626591682434082
    8. '	for' → logprob: -14.001591682434082
    9. '    ' → logprob: -14.376591682434082
    10. '        ' → logprob: -14.376591682434082

Token 251: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.029956553131341934
    2. '_' → logprob: -3.529956579208374
    3. ' ' → logprob: -9.279956817626953
    4. ' range' → logprob: -9.529956817626953
    5. ' in' → logprob: -10.904956817626953
    6. ' col' → logprob: -11.029956817626953
    7. '_col' → logprob: -12.529956817626953
    8. ' j' → logprob: -14.654956817626953
    9. 'range' → logprob: -14.654956817626953
    10. '_range' → logprob: -14.904956817626953

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08727794885635376
    2. 'in' → logprob: -2.587277889251709
    3. 'range' → logprob: -4.962277889251709
    4. ' range' → logprob: -6.712277889251709
    5. ' ' → logprob: -9.587278366088867
    6. 'col' → logprob: -9.837278366088867
    7. ' col' → logprob: -12.462278366088867
    8. 'x' → logprob: -12.962278366088867
    9. 'ange' → logprob: -13.212278366088867
    10. 'i' → logprob: -13.462278366088867

Token 253: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014138251543045
    2. ' range' → logprob: -1.701413869857788
    3. '   ' → logprob: -15.451414108276367
    4. '	range' → logprob: -15.701414108276367
    5. ' ' → logprob: -16.451414108276367
    6. '_range' → logprob: -16.951414108276367
    7. '  ' → logprob: -17.576414108276367
    8. 'row' → logprob: -17.951414108276367
    9. '(range' → logprob: -18.201414108276367
    10. '    ' → logprob: -18.451414108276367

Token 254: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002096197713399306
    2. '(c' → logprob: -8.62520980834961
    3. 'self' → logprob: -10.50020980834961
    4. '(' → logprob: -13.12520980834961
    5. ' self' → logprob: -15.50020980834961
    6. '(width' → logprob: -16.37520980834961
    7. ' (' → logprob: -16.50020980834961
    8. 'c' → logprob: -16.62520980834961
    9. '(len' → logprob: -17.62520980834961
    10. '
' → logprob: -18.25020980834961

Token 255: '.grid' (ID: 19269)
  Prédit: '.width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.4759140908718109
    2. '.grid' → logprob: -0.9759141206741333
    3. 'grid' → logprob: -7.600914001464844
    4. 'width' → logprob: -7.725914001464844
    5. ' .' → logprob: -7.975914001464844
    6. '.' → logprob: -7.975914001464844
    7. '
' → logprob: -9.725914001464844
    8. '.height' → logprob: -9.725914001464844
    9. '   ' → logprob: -10.475914001464844
    10. '       ' → logprob: -11.100914001464844

Token 256: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -3.2855416066013277e-05
    2. ' .' → logprob: -11.375032424926758
    3. '.' → logprob: -11.500032424926758
    4. '.height' → logprob: -11.625032424926758
    5. '   ' → logprob: -13.375032424926758
    6. 'width' → logprob: -15.125032424926758
    7. '.size' → logprob: -15.375032424926758
    8. ').' → logprob: -15.750032424926758
    9. ' width' → logprob: -17.500032424926758
    10. '	width' → logprob: -17.750032424926758

Token 257: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.304016228066757e-05
    2. ' )' → logprob: -9.625082969665527
    3. ']' → logprob: -11.875082969665527
    4. ')' → logprob: -12.625082969665527
    5. '       ' → logprob: -13.250082969665527
    6. ' ]' → logprob: -13.500082969665527
    7. ')]
' → logprob: -13.625082969665527
    8. ']]' → logprob: -14.000082969665527
    9. '   ' → logprob: -14.125082969665527
    10. '])' → logprob: -15.750082969665527

Token 258: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014395838603377342
    2. ' ]' → logprob: -4.264395713806152
    3. '       ' → logprob: -9.014395713806152
    4. ' for' → logprob: -9.264395713806152
    5. '           ' → logprob: -12.389395713806152
    6. 'for' → logprob: -12.639395713806152
    7. '        ' → logprob: -12.639395713806152
    8. '   ' → logprob: -13.139395713806152
    9. '               ' → logprob: -13.764395713806152
    10. '    ' → logprob: -14.264395713806152

Token 259: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.013494539074599743
    2. 'range' → logprob: -4.513494491577148
    3. ' _' → logprob: -6.513494491577148
    4. '_' → logprob: -7.263494491577148
    5. '_range' → logprob: -8.263494491577148
    6. '(range' → logprob: -14.263494491577148
    7. ' in' → logprob: -14.638494491577148
    8. '	range' → logprob: -14.638494491577148
    9. ' row' → logprob: -15.013494491577148
    10. '_row' → logprob: -16.63849449157715

Token 260: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02555060014128685
    2. 'range' → logprob: -3.900550603866577
    3. 'in' → logprob: -5.775550365447998
    4. ' range' → logprob: -6.275550365447998
    5. '_' → logprob: -12.150550842285156
    6. ' ' → logprob: -13.150550842285156
    7. '
' → logprob: -14.275550842285156
    8. '   ' → logprob: -14.525550842285156
    9. '_range' → logprob: -14.525550842285156
    10. 'ange' → logprob: -14.900550842285156

Token 261: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759398937225342
    2. ' range' → logprob: -0.8259398937225342
    3. '   ' → logprob: -15.575940132141113
    4. '	range' → logprob: -16.075939178466797
    5. ' ' → logprob: -16.575939178466797
    6. '_range' → logprob: -17.325939178466797
    7. '(range' → logprob: -17.700939178466797
    8. '
' → logprob: -18.825939178466797
    9. '    ' → logprob: -18.950939178466797
    10. '_' → logprob: -19.200939178466797

Token 262: '(self' (ID: 2402)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.015300426632165909
    2. 'range' → logprob: -4.765300273895264
    3. ' range' → logprob: -5.015300273895264
    4. '(' → logprob: -10.640300750732422
    5. '_range' → logprob: -13.140300750732422
    6. 'Range' → logprob: -14.515300750732422
    7. '	range' → logprob: -14.640300750732422
    8. '(self' → logprob: -14.890300750732422
    9. ' (' → logprob: -15.515300750732422
    10. '   ' → logprob: -15.515300750732422

Token 263: '.grid' (ID: 19269)
  Prédit: '.height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.01763683743774891
    2. '.grid' → logprob: -4.142636775970459
    3. 'height' → logprob: -6.642636775970459
    4. '.' → logprob: -8.642637252807617
    5. '.width' → logprob: -9.267637252807617
    6. 'grid' → logprob: -11.517637252807617
    7. ' .' → logprob: -11.892637252807617
    8. '   ' → logprob: -13.392637252807617
    9. ')' → logprob: -13.642637252807617
    10. '.depth' → logprob: -13.767637252807617

Token 264: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -9.865583706414327e-05
    2. 'height' → logprob: -9.25009822845459
    3. '.width' → logprob: -13.25009822845459
    4. '.' → logprob: -14.62509822845459
    5. ' height' → logprob: -16.000099182128906
    6. ' .' → logprob: -16.750099182128906
    7. '.he' → logprob: -17.500099182128906
    8. '_height' → logprob: -17.875099182128906
    9. 'Height' → logprob: -18.000099182128906
    10. ')' → logprob: -18.000099182128906

Token 265: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.012673038989305496
    2. ']' → logprob: -4.3876729011535645
    3. '       ' → logprob: -9.262673377990723
    4. ' ]' → logprob: -10.512673377990723
    5. '])]' → logprob: -11.262673377990723
    6. '])' → logprob: -11.512673377990723
    7. ']]' → logprob: -12.762673377990723
    8. ']}' → logprob: -12.887673377990723
    9. '   ' → logprob: -12.887673377990723
    10. ')' → logprob: -13.012673377990723

Token 266: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05831470340490341
    2. '   ' → logprob: -2.933314800262451
    3. '<|end|>' → logprob: -6.433314800262451
    4. '    
' → logprob: -7.183314800262451
    5. ' 
' → logprob: -7.683314800262451
    6. 'def' → logprob: -8.183314323425293
    7. ' def' → logprob: -9.058314323425293
    8. '

' → logprob: -9.558314323425293
    9. '  
' → logprob: -10.183314323425293
    10. '<|end|>' → logprob: -11.183314323425293

Token 267: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03207492083311081
    2. '   ' → logprob: -4.032074928283691
    3. ' def' → logprob: -4.282074928283691
    4. '
' → logprob: -11.407074928283691
    5. '    
' → logprob: -13.907074928283691
    6. ' ' → logprob: -14.032074928283691
    7. '	def' → logprob: -14.407074928283691
    8. '  ' → logprob: -15.157074928283691
    9. '

' → logprob: -15.907074928283691
    10. ' 
' → logprob: -16.032073974609375

Token 268: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.2263123989105225
    2. ' calculate' → logprob: -1.7263123989105225
    3. ' get' → logprob: -1.8513123989105225
    4. ' find' → logprob: -2.2263123989105225
    5. ' compute' → logprob: -2.7263123989105225
    6. ' minimal' → logprob: -3.1013123989105225
    7. ' minimum' → logprob: -3.2263123989105225
    8. 'min' → logprob: -3.9763123989105225
    9. ' path' → logprob: -4.101312637329102
    10. 'calculate' → logprob: -4.226312637329102

Token 269: '_c' (ID: 1303)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0793391615152359
    2. '_cost' → logprob: -2.5793392658233643
    3. '_' → logprob: -8.329339027404785
    4. '_c' → logprob: -8.704339027404785
    5. '_distance' → logprob: -11.204339027404785
    6. '_paths' → logprob: -12.079339027404785
    7. '_total' → logprob: -12.204339027404785
    8. '_sum' → logprob: -12.329339027404785
    9. ' _' → logprob: -13.829339027404785
    10. '_row' → logprob: -13.954339027404785

Token 270: 'ic' (ID: 291)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.0006136707379482687
    2. 'cost' → logprob: -8.37561321258545
    3. '_cost' → logprob: -9.12561321258545
    4. ' ost' → logprob: -10.62561321258545
    5. '
' → logprob: -11.00061321258545
    6. 'st' → logprob: -11.12561321258545
    7. 'ostas' → logprob: -11.18811321258545
    8. '   ' → logprob: -11.18811321258545
    9. 'ic' → logprob: -11.31311321258545
    10. 'ist' → logprob: -11.31311321258545

Token 271: 'ada' (ID: 1194)
  Prédit: 'ada'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ada' → logprob: -0.22587008774280548
    2. 'adas' → logprob: -1.600870132446289
    3. 'ade' → logprob: -10.100870132446289
    4. 'a' → logprob: -10.350870132446289
    5. 'ads' → logprob: -10.725870132446289
    6. 'ad' → logprob: -10.725870132446289
    7. 'ades' → logprob: -10.913370132446289
    8. '

' → logprob: -11.163370132446289
    9. 'ада' → logprob: -11.225870132446289
    10. ' ada' → logprob: -11.350870132446289

Token 272: '_path' (ID: 5558)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.06744150072336197
    2. '_path' → logprob: -2.817441463470459
    3. '_r' → logprob: -5.817441463470459
    4. '_count' → logprob: -6.942441463470459
    5. 's' → logprob: -7.442441463470459
    6. '_' → logprob: -8.317441940307617
    7. '_paths' → logprob: -8.817441940307617
    8. '_at' → logprob: -9.317441940307617
    9. '_sum' → logprob: -9.692441940307617
    10. 'cost' → logprob: -10.192441940307617

Token 273: '_cost' (ID: 36820)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004267269745469093
    2. '_cost' → logprob: -6.00426721572876
    3. '(' → logprob: -6.37926721572876
    4. ' (' → logprob: -10.254267692565918
    5. 'self' → logprob: -10.754267692565918
    6. '_count' → logprob: -11.879267692565918
    7. 'cost' → logprob: -11.879267692565918
    8. '_(' → logprob: -12.129267692565918
    9. '_sum' → logprob: -12.379267692565918
    10. '   ' → logprob: -12.504267692565918

Token 274: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.79811754100956e-05
    2. '(' → logprob: -10.250038146972656
    3. ' (' → logprob: -13.250038146972656
    4. 'self' → logprob: -15.125038146972656
    5. '(s' → logprob: -15.500038146972656
    6. '   ' → logprob: -15.875038146972656
    7. '(
' → logprob: -16.750038146972656
    8. ' self' → logprob: -18.250038146972656
    9. '(sel' → logprob: -18.375038146972656
    10. '       ' → logprob: -18.500038146972656

Token 275: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032260757870972157
    2. ' ,' → logprob: -5.753226280212402
    3. 'self' → logprob: -10.503226280212402
    4. ',self' → logprob: -11.878226280212402
    5. ',row' → logprob: -12.128226280212402
    6. '(self' → logprob: -12.378226280212402
    7. ',pos' → logprob: -13.378226280212402
    8. '_,' → logprob: -14.378226280212402
    9. ',
' → logprob: -15.003226280212402
    10. '   ' → logprob: -15.003226280212402

Token 276: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0025214420165866613
    2. '(' → logprob: -6.002521514892578
    3. ' (' → logprob: -10.377521514892578
    4. 'self' → logprob: -11.502521514892578
    5. '(s' → logprob: -13.377521514892578
    6. '(
' → logprob: -14.002521514892578
    7. '   ' → logprob: -14.252521514892578
    8. ' self' → logprob: -14.627521514892578
    9. '(sel' → logprob: -15.127521514892578
    10. ':' → logprob: -15.877521514892578

Token 277: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3869274854660034
    2. ' int' → logprob: -1.1369274854660034
    3. '(int' → logprob: -10.761927604675293
    4. ' None' → logprob: -11.636927604675293
    5. 'None' → logprob: -12.011927604675293
    6. '   ' → logprob: -12.136927604675293
    7. '[int' → logprob: -12.261927604675293
    8. ' list' → logprob: -13.386927604675293
    9. 'List' → logprob: -13.386927604675293
    10. ' ' → logprob: -13.511927604675293

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08743491768836975
    2. '(self' → logprob: -2.962435007095337
    3. '       ' → logprob: -4.087434768676758
    4. ':
' → logprob: -4.837434768676758
    5. '(' → logprob: -5.212434768676758
    6. '():' → logprob: -7.587434768676758
    7. '(
' → logprob: -7.837434768676758
    8. '   ' → logprob: -8.337434768676758
    9. ',' → logprob: -8.462434768676758
    10. '):' → logprob: -8.837434768676758

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.214019307051785e-05
    2. '        
' → logprob: -11.125032424926758
    3. '      ' → logprob: -12.250032424926758
    4. '   ' → logprob: -12.375032424926758
    5. '
' → logprob: -13.125032424926758
    6. '    ' → logprob: -13.500032424926758
    7. ' self' → logprob: -13.875032424926758
    8. '        ' → logprob: -14.250032424926758
    9. ' for' → logprob: -14.250032424926758
    10. 'self' → logprob: -14.625032424926758

Token 280: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47281092405319214
    2. 'for' → logprob: -1.597810983657837
    3. 'self' → logprob: -2.847810983657837
    4. ' for' → logprob: -2.847810983657837
    5. 'def' → logprob: -3.722810983657837
    6. 'return' → logprob: -4.472810745239258
    7. ' self' → logprob: -4.472810745239258
    8. 'dp' → logprob: -4.972810745239258
    9. ' def' → logprob: -6.097810745239258
    10. ' return' → logprob: -7.472810745239258

Token 281: ' Start' (ID: 7972)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7168517708778381
    2. 'self' → logprob: -0.9668517708778381
    3. 'def' → logprob: -3.0918517112731934
    4. ' for' → logprob: -3.3418517112731934
    5. '       ' → logprob: -3.7168517112731934
    6. 'dp' → logprob: -4.466851711273193
    7. ' self' → logprob: -4.591851711273193
    8. ' def' → logprob: -6.966851711273193
    9. '#' → logprob: -7.216851711273193
    10. 'from' → logprob: -7.341851711273193

Token 282: ' position' (ID: 4010)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4464999735355377
    2. 'pos' → logprob: -2.071500062942505
    3. ' at' → logprob: -2.821500062942505
    4. '        ' → logprob: -2.946500062942505
    5. '
' → logprob: -3.821500062942505
    6. '        
' → logprob: -3.946500062942505
    7. ' =' → logprob: -4.071499824523926
    8. 'def' → logprob: -4.946499824523926
    9. ' with' → logprob: -5.071499824523926
    10. 'position' → logprob: -5.071499824523926

Token 283: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04689021408557892
    2. '       ' → logprob: -3.6718902587890625
    3. '=' → logprob: -4.1718902587890625
    4. ':' → logprob: -6.4218902587890625
    5. '
' → logprob: -7.4218902587890625
    6. 'dp' → logprob: -7.5468902587890625
    7. 'return' → logprob: -7.9218902587890625
    8. '        ' → logprob: -8.171890258789062
    9. 'cost' → logprob: -8.171890258789062
    10. ',' → logprob: -8.421890258789062

Token 284: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02582155168056488
    2. 'Grid' → logprob: -4.650821685791016
    3. 'row' → logprob: -4.775821685791016
    4. 'self' → logprob: -6.025821685791016
    5. ')' → logprob: -6.275821685791016
    6. '(' → logprob: -6.400821685791016
    7. 'pos' → logprob: -7.650821685791016
    8. ' ' → logprob: -7.775821685791016
    9. ' Grid' → logprob: -8.900821685791016
    10. '(Grid' → logprob: -8.900821685791016

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03118976764380932
    2. '][' → logprob: -3.6561896800994873
    3. ' ,' → logprob: -5.781189918518066
    4. ')][' → logprob: -7.031189918518066
    5. ')' → logprob: -7.531189918518066
    6. '0' → logprob: -8.531189918518066
    7. ' ][' → logprob: -10.281189918518066
    8. ' ' → logprob: -10.656189918518066
    9. '()][' → logprob: -10.656189918518066
    10. '<|end|>' → logprob: -10.656189918518066

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021859495900571346
    2. ' ' → logprob: -6.127185821533203
    3. '<|end|>' → logprob: -14.377185821533203
    4. ')' → logprob: -16.502185821533203
    5. '   ' → logprob: -16.627185821533203
    6. '       ' → logprob: -17.627185821533203
    7. '  ' → logprob: -18.252185821533203
    8. ',' → logprob: -18.377185821533203
    9. '    ' → logprob: -18.877185821533203
    10. '<|end|>' → logprob: -19.127185821533203

Token 287: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029347501695156097
    2. ')
' → logprob: -3.6543474197387695
    3. '):' → logprob: -6.5293474197387695
    4. ' )' → logprob: -7.5293474197387695
    5. '):
' → logprob: -7.6543474197387695
    6. '       ' → logprob: -8.02934741973877
    7. ')
' → logprob: -9.02934741973877
    8. ' )
' → logprob: -10.15434741973877
    9. ')

' → logprob: -10.40434741973877
    10. ').' → logprob: -10.77934741973877

Token 288: ' has' (ID: 853)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4850352704524994
    2. '       ' → logprob: -0.9850353002548218
    3. '        
' → logprob: -4.735035419464111
    4. ' 
' → logprob: -7.235035419464111
    5. '<|end|>' → logprob: -8.235034942626953
    6. '    
' → logprob: -8.485034942626953
    7. '  
' → logprob: -8.735034942626953
    8. ',' → logprob: -9.110034942626953
    9. '        ' → logprob: -9.360034942626953
    10. ' =' → logprob: -9.485034942626953

Token 289: ' no' (ID: 860)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14904120564460754
    2. '0' → logprob: -2.399041175842285
    3. ' self' → logprob: -3.274041175842285
    4. ' ' → logprob: -5.399041175842285
    5. ' a' → logprob: -6.399041175842285
    6. 'a' → logprob: -6.774041175842285
    7. ' no' → logprob: -6.899041175842285
    8. 'cost' → logprob: -7.274041175842285
    9. 'no' → logprob: -8.399041175842285
    10. ' cost' → logprob: -8.524041175842285

Token 290: ' cic' (ID: 30432)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.2561293840408325
    2. 'cost' → logprob: -1.7561293840408325
    3. ' additional' → logprob: -3.256129264831543
    4. 'c' → logprob: -4.631129264831543
    5. 'additional' → logprob: -6.131129264831543
    6. ' extra' → logprob: -7.506129264831543
    7. '_cost' → logprob: -7.756129264831543
    8. ' added' → logprob: -8.131129264831543
    9. ' incremental' → logprob: -8.256129264831543
    10. 'increment' → logprob: -8.381129264831543

Token 291: 'adas' (ID: 3921)
  Prédit: 'ada'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ada' → logprob: -0.2021275758743286
    2. 'adas' → logprob: -1.7021275758743286
    3. 'ad' → logprob: -8.827127456665039
    4. '   ' → logprob: -9.202127456665039
    5. 'cada' → logprob: -9.827127456665039
    6. 'a' → logprob: -9.952127456665039
    7. '           ' → logprob: -10.077127456665039
    8. '       ' → logprob: -10.327127456665039
    9. 's' → logprob: -10.327127456665039
    10. '                   ' → logprob: -10.827127456665039

Token 292: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11409907042980194
    2. '       ' → logprob: -2.2390990257263184
    3. '        
' → logprob: -6.989099025726318
    4. ',' → logprob: -8.739099502563477
    5. '
' → logprob: -9.364099502563477
    6. ' 
' → logprob: -10.739099502563477
    7. '    
' → logprob: -10.989099502563477
    8. '  
' → logprob: -10.989099502563477
    9. '<|end|>' → logprob: -11.739099502563477
    10. '```' → logprob: -12.614099502563477

Token 293: 'by' (ID: 2345)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5518555045127869
    2. 'return' → logprob: -1.8018555641174316
    3. ' return' → logprob: -2.3018555641174316
    4. ' so' → logprob: -3.5518555641174316
    5. 'self' → logprob: -3.6768555641174316
    6. ' )' → logprob: -3.6768555641174316
    7. ')
' → logprob: -3.9268555641174316
    8. ' because' → logprob: -4.676855564117432
    9. '       ' → logprob: -5.176855564117432
    10. ',' → logprob: -5.301855564117432

Token 294: ' problem' (ID: 4792)
  Prédit: 'definition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'definition' → logprob: -0.405030757188797
    2. 'design' → logprob: -1.1550307273864746
    3. 'problem' → logprob: -4.780030727386475
    4. ' design' → logprob: -4.905030727386475
    5. ' definition' → logprob: -6.655030727386475
    6. 'con' → logprob: -8.405031204223633
    7. 'def' → logprob: -8.530031204223633
    8. ' problem' → logprob: -8.905031204223633
    9. ' ' → logprob: -9.030031204223633
    10. '   ' → logprob: -9.530031204223633

Token 295: ' statement' (ID: 9710)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4489305019378662
    2. ' cost' → logprob: -1.6989305019378662
    3. ')' → logprob: -2.073930501937866
    4. ' penalty' → logprob: -3.948930501937866
    5. 'pen' → logprob: -4.698930740356445
    6. '   ' → logprob: -4.823930740356445
    7. 'count' → logprob: -5.823930740356445
    8. '_cost' → logprob: -6.073930740356445
    9. ' at' → logprob: -6.823930740356445
    10. ' ' → logprob: -6.948930740356445

Token 296: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043698702938854694
    2. '       ' → logprob: -8.250436782836914
    3. ')
' → logprob: -9.000436782836914
    4. ' )' → logprob: -10.500436782836914
    5. ',' → logprob: -11.375436782836914
    6. ').' → logprob: -12.125436782836914
    7. '   ' → logprob: -13.500436782836914
    8. '),' → logprob: -13.625436782836914
    9. '.' → logprob: -14.000436782836914
    10. '):' → logprob: -14.375436782836914

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0044625201262533665
    2. '
' → logprob: -5.754462718963623
    3. '        
' → logprob: -7.254462718963623
    4. ',' → logprob: -8.379462242126465
    5. '<|end|>' → logprob: -9.254462242126465
    6. ')' → logprob: -9.379462242126465
    7. '   ' → logprob: -10.379462242126465
    8. '```' → logprob: -10.754462242126465
    9. '    
' → logprob: -11.004462242126465
    10. '  
' → logprob: -11.254462242126465

Token 298: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.056860726326704025
    2. '       ' → logprob: -3.1818606853485107
    3. ' self' → logprob: -4.30686092376709
    4. 'for' → logprob: -8.43186092376709
    5. 'if' → logprob: -10.05686092376709
    6. '   ' → logprob: -12.18186092376709
    7. ' for' → logprob: -12.18186092376709
    8. '
' → logprob: -12.30686092376709
    9. 'total' → logprob: -12.93186092376709
    10. 'current' → logprob: -13.05686092376709

Token 299: '.dp' (ID: 77268)
  Prédit: '.dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dp' → logprob: -2.3795937522663735e-05
    2. '.' → logprob: -11.12502384185791
    3. '	dp' → logprob: -12.87502384185791
    4. ' .' → logprob: -12.87502384185791
    5. 'dp' → logprob: -13.25002384185791
    6. '.dt' → logprob: -14.25002384185791
    7. '.d' → logprob: -14.87502384185791
    8. '.df' → logprob: -15.50002384185791
    9. ' dp' → logprob: -16.125022888183594
    10. '.dtp' → logprob: -16.250022888183594

Token 300: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '][' → logprob: -14.125000953674316
    3. ' [' → logprob: -15.250000953674316
    4. ')[' → logprob: -17.000001907348633
    5. '}[' → logprob: -17.750001907348633
    6. '```' → logprob: -18.125001907348633
    7. '0' → logprob: -18.375001907348633
    8. '\[' → logprob: -19.125001907348633
    9. '
' → logprob: -19.500001907348633
    10. '")[' → logprob: -19.750001907348633

Token 301: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '[' → logprob: -16.000009536743164
    4. '       ' → logprob: -17.000009536743164
    5. '   ' → logprob: -17.125009536743164
    6. '           ' → logprob: -17.500009536743164
    7. '
' → logprob: -18.500009536743164
    8. '][' → logprob: -19.375009536743164
    9. ')' → logprob: -19.625009536743164
    10. '00' → logprob: -19.625009536743164

Token 302: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002541872672736645
    2. '[' → logprob: -9.12525463104248
    3. ']' → logprob: -9.50025463104248
    4. ' ][' → logprob: -9.62525463104248
    5. '"][' → logprob: -13.25025463104248
    6. ''][' → logprob: -14.37525463104248
    7. ' ' → logprob: -14.87525463104248
    8. '   ' → logprob: -14.87525463104248
    9. '0' → logprob: -15.00025463104248
    10. '()][' → logprob: -15.37525463104248

Token 303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. ']' → logprob: -17.500001907348633
    4. '۰' → logprob: -18.375001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '
' → logprob: -18.875001907348633
    7. ')' → logprob: -19.250001907348633
    8. '０' → logprob: -20.625001907348633
    9. '<|end|>' → logprob: -20.750001907348633
    10. '    ' → logprob: -20.812501907348633

Token 304: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013938075862824917
    2. ' ]' → logprob: -6.626393795013428
    3. ']=' → logprob: -9.626394271850586
    4. '=' → logprob: -13.376394271850586
    5. ' =' → logprob: -15.126394271850586
    6. ' ' → logprob: -17.001394271850586
    7. '`]' → logprob: -17.376394271850586
    8. '0' → logprob: -17.501394271850586
    9. '"]' → logprob: -17.876394271850586
    10. ')' → logprob: -17.876394271850586

Token 305: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693272531032562
    2. ' =' → logprob: -2.1269326210021973
    3. ' ' → logprob: -12.501933097839355
    4. '0' → logprob: -14.376933097839355
    5. ']=' → logprob: -15.876933097839355
    6. ']' → logprob: -16.75193214416504
    7. '=
' → logprob: -16.87693214416504
    8. ')' → logprob: -17.37693214416504
    9. '<|end|>' → logprob: -17.62693214416504
    10. ')=' → logprob: -17.75193214416504

Token 306: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۰' → logprob: -20.750001907348633
    4. '   ' → logprob: -21.125001907348633
    5. '00' → logprob: -23.000001907348633
    6. '<|end|>' → logprob: -23.000001907348633
    7. '  ' → logprob: -23.125001907348633
    8. ' ' → logprob: -23.500001907348633
    9. '000' → logprob: -23.875001907348633
    10. '           ' → logprob: -24.375001907348633

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.6250057220459
    4. '۰' → logprob: -20.0000057220459
    5. '  ' → logprob: -22.0625057220459
    6. '00' → logprob: -22.2500057220459
    7. '000' → logprob: -22.5625057220459
    8. ' ' → logprob: -23.1250057220459
    9. '
' → logprob: -23.2500057220459
    10. '<|end|>' → logprob: -23.3125057220459

Token 308: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.049166906625032425
    2. '       ' → logprob: -3.0491669178009033
    3. ' for' → logprob: -8.549166679382324
    4. '        
' → logprob: -8.924166679382324
    5. '<|end|>' → logprob: -9.674166679382324
    6. '
' → logprob: -9.924166679382324
    7. 'for' → logprob: -10.049166679382324
    8. ',' → logprob: -10.799166679382324
    9. '    
' → logprob: -10.924166679382324
    10. ' 
' → logprob: -11.174166679382324

Token 309: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12912896275520325
    2. '       ' → logprob: -2.129128932952881
    3. ' for' → logprob: -7.004128932952881
    4. '        
' → logprob: -7.504128932952881
    5. '<|end|>' → logprob: -8.254129409790039
    6. 'for' → logprob: -8.379129409790039
    7. '
' → logprob: -10.004129409790039
    8. '    
' → logprob: -10.254129409790039
    9. '		
' → logprob: -10.629129409790039
    10. '   ' → logprob: -10.754129409790039

Token 310: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006006414070725441
    2. '       ' → logprob: -5.506006240844727
    3. ' for' → logprob: -6.256006240844727
    4. '   ' → logprob: -12.881006240844727
    5. 'from' → logprob: -13.006006240844727
    6. '
' → logprob: -13.256006240844727
    7. '```' → logprob: -15.131006240844727
    8. '	for' → logprob: -15.256006240844727
    9. 'def' → logprob: -15.881006240844727
    10. '      ' → logprob: -17.131006240844727

Token 311: ' r' (ID: 428)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.37086787819862366
    2. 'row' → logprob: -2.120867967605591
    3. ' r' → logprob: -2.620867967605591
    4. ' i' → logprob: -2.870867967605591
    5. 'r' → logprob: -3.120867967605591
    6. 'i' → logprob: -4.120867729187012
    7. '   ' → logprob: -9.370867729187012
    8. ' ' → logprob: -10.245867729187012
    9. '	row' → logprob: -11.120867729187012
    10. ' y' → logprob: -11.245867729187012

Token 312: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020060621201992035
    2. 'in' → logprob: -4.2700605392456055
    3. ' ' → logprob: -5.1450605392456055
    4. ',' → logprob: -11.270060539245605
    5. ' i' → logprob: -11.770060539245605
    6. ' ,' → logprob: -11.895060539245605
    7. '	in' → logprob: -12.145060539245605
    8. '  ' → logprob: -12.270060539245605
    9. '   ' → logprob: -13.020060539245605
    10. '0' → logprob: -13.145060539245605

Token 313: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759410262107849
    2. 'range' → logprob: -0.8259410262107849
    3. ' ' → logprob: -14.20094108581543
    4. '   ' → logprob: -15.20094108581543
    5. 'ange' → logprob: -15.32594108581543
    6. '	range' → logprob: -15.70094108581543
    7. '(range' → logprob: -16.32594108581543
    8. '  ' → logprob: -16.82594108581543
    9. '    ' → logprob: -17.95094108581543
    10. ' rang' → logprob: -18.07594108581543

Token 314: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2519405782222748
    2. '(self' → logprob: -1.5019406080245972
    3. '(
' → logprob: -11.876940727233887
    4. '(s' → logprob: -13.126940727233887
    5. '1' → logprob: -13.501940727233887
    6. ' (' → logprob: -14.501940727233887
    7. '(

' → logprob: -15.376940727233887
    8. 'self' → logprob: -15.501940727233887
    9. '(len' → logprob: -15.501940727233887
    10. 's' → logprob: -17.12693977355957

Token 315: '.grid' (ID: 19269)
  Prédit: '.height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.07369741052389145
    2. '1' → logprob: -3.323697328567505
    3. 'height' → logprob: -4.698697566986084
    4. '.grid' → logprob: -4.948697566986084
    5. ' ' → logprob: -5.073697566986084
    6. 'self' → logprob: -5.323697566986084
    7. ')' → logprob: -6.073697566986084
    8. '0' → logprob: -6.448697566986084
    9. '.width' → logprob: -6.948697566986084
    10. '.' → logprob: -6.948697566986084

Token 316: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -2.5822400857578032e-05
    2. 'height' → logprob: -11.250025749206543
    3. '.' → logprob: -12.250025749206543
    4. '.width' → logprob: -12.375025749206543
    5. ' .' → logprob: -12.625025749206543
    6. ' height' → logprob: -15.625025749206543
    7. '   ' → logprob: -15.875025749206543
    8. '1' → logprob: -16.87502670288086
    9. ' ' → logprob: -17.62502670288086
    10. '	height' → logprob: -18.37502670288086

Token 317: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25228068232536316
    2. '):
' → logprob: -1.5022807121276855
    3. '   ' → logprob: -8.877280235290527
    4. '       ' → logprob: -9.127280235290527
    5. ' ):' → logprob: -9.627280235290527
    6. ' ):
' → logprob: -11.377280235290527
    7. ')' → logprob: -11.627280235290527
    8. '):
' → logprob: -11.627280235290527
    9. '):

' → logprob: -12.877280235290527
    10. ' ' → logprob: -13.377280235290527

Token 318: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15896736085414886
    2. '           ' → logprob: -2.5339672565460205
    3. ' for' → logprob: -3.2839672565460205
    4. '   ' → logprob: -3.5339672565460205
    5. 'for' → logprob: -7.7839674949646
    6. '	   ' → logprob: -8.533967018127441
    7. ' ' → logprob: -9.033967018127441
    8. ',' → logprob: -10.033967018127441
    9. '	       ' → logprob: -10.033967018127441
    10. '    ' → logprob: -10.158967018127441

Token 319: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1828741431236267
    2. ' for' → logprob: -1.9328742027282715
    3. '   ' → logprob: -3.8078742027282715
    4. '           ' → logprob: -9.432873725891113
    5. '	for' → logprob: -9.807873725891113
    6. ' ' → logprob: -10.432873725891113
    7. '       ' → logprob: -10.557873725891113
    8. '  ' → logprob: -12.432873725891113
    9. '    ' → logprob: -12.682873725891113
    10. '   ' → logprob: -14.432873725891113

Token 320: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.25248488783836365
    2. 'c' → logprob: -1.502484917640686
    3. '   ' → logprob: -7.7524847984313965
    4. '       ' → logprob: -10.002485275268555
    5. ' ' → logprob: -11.002485275268555
    6. '	c' → logprob: -11.627485275268555
    7. ' range' → logprob: -11.752485275268555
    8. '           ' → logprob: -11.752485275268555
    9. '    ' → logprob: -11.877485275268555
    10. 'range' → logprob: -12.127485275268555

Token 321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024242796003818512
    2. 'in' → logprob: -3.774242877960205
    3. ' ' → logprob: -7.024242877960205
    4. '+' → logprob: -10.274242401123047
    5. '0' → logprob: -10.649242401123047
    6. '    ' → logprob: -11.774242401123047
    7. '1' → logprob: -11.774242401123047
    8. '   ' → logprob: -12.024242401123047
    9. '        ' → logprob: -12.399242401123047
    10. '	in' → logprob: -12.399242401123047

Token 322: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47410744428634644
    2. ' range' → logprob: -0.9741074442863464
    3. '1' → logprob: -11.59910774230957
    4. 'self' → logprob: -11.84910774230957
    5. '0' → logprob: -11.97410774230957
    6. '(range' → logprob: -12.84910774230957
    7. ' self' → logprob: -12.97410774230957
    8. ' ' → logprob: -13.22410774230957
    9. '   ' → logprob: -15.22410774230957
    10. ' in' → logprob: -15.47410774230957

Token 323: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5809676647186279
    2. '(self' → logprob: -0.8309676647186279
    3. ' (' → logprob: -5.455967903137207
    4. 'self' → logprob: -7.705967903137207
    5. '           ' → logprob: -9.205967903137207
    6. '(s' → logprob: -10.330967903137207
    7. ' in' → logprob: -10.330967903137207
    8. '1' → logprob: -10.580967903137207
    9. '0' → logprob: -10.830967903137207
    10. ' self' → logprob: -10.955967903137207

Token 324: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.3978217542171478
    2. '.width' → logprob: -1.1478217840194702
    3. '+' → logprob: -5.52282190322876
    4. '       ' → logprob: -6.02282190322876
    5. 'width' → logprob: -6.52282190322876
    6. '   ' → logprob: -7.27282190322876
    7. 'grid' → logprob: -7.39782190322876
    8. '           ' → logprob: -7.89782190322876
    9. ' .' → logprob: -8.147821426391602
    10. '.height' → logprob: -8.522821426391602

Token 325: '.width' (ID: 11038)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6738324165344238
    2. '+' → logprob: -0.7988324165344238
    3. ' +' → logprob: -4.423832416534424
    4. '.width' → logprob: -4.423832416534424
    5. 'width' → logprob: -4.798832416534424
    6. '       ' → logprob: -5.548832416534424
    7. '   ' → logprob: -6.173832416534424
    8. ' ' → logprob: -7.298832416534424
    9. '           ' → logprob: -7.548832416534424
    10. '.height' → logprob: -8.423831939697266

Token 326: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048630744218826294
    2. '):
' → logprob: -3.048630714416504
    3. ' ):' → logprob: -10.923630714416504
    4. ':' → logprob: -11.423630714416504
    5. '):

' → logprob: -12.548630714416504
    6. '):
' → logprob: -13.048630714416504
    7. '       ' → logprob: -13.173630714416504
    8. '           ' → logprob: -13.298630714416504
    9. ')' → logprob: -13.423630714416504
    10. '+' → logprob: -13.673630714416504

Token 327: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005995274521410465
    2. ' if' → logprob: -5.880995273590088
    3. 'if' → logprob: -6.255995273590088
    4. '           ' → logprob: -6.755995273590088
    5. '                
' → logprob: -10.380995750427246
    6. '
' → logprob: -11.380995750427246
    7. '              ' → logprob: -11.380995750427246
    8. '   ' → logprob: -11.630995750427246
    9. '                   ' → logprob: -11.755995750427246
    10. '                ' → logprob: -12.005995750427246

Token 328: ' pos' (ID: 1253)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9056033492088318
    2. '               ' → logprob: -1.1556034088134766
    3. ' if' → logprob: -1.4056034088134766
    4. '                   ' → logprob: -3.4056034088134766
    5. '           ' → logprob: -6.280603408813477
    6. '   ' → logprob: -8.280603408813477
    7. 'current' → logprob: -9.155603408813477
    8. 'pos' (adapté à ' pos') → logprob: -10.280603408813477
    9. 'continue' → logprob: -10.530603408813477
    10. ' current' → logprob: -10.905603408813477

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.036159709095954895
    2. '=' → logprob: -3.4111597537994385
    3. ' ' → logprob: -6.161159515380859
    4. '<|end|>' → logprob: -8.03615951538086
    5. ')' → logprob: -9.78615951538086
    6. ' =
' → logprob: -11.91115951538086
    7. '<|end|>' → logprob: -13.03615951538086
    8. '    ' → logprob: -13.72365951538086
    9. '  ' → logprob: -13.72365951538086
    10. ' =)' → logprob: -13.72365951538086

Token 330: ' Grid' (ID: 18087)
  Prédit: 'Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -0.20143340528011322
    2. ' Grid' → logprob: -1.7014334201812744
    3. '	Grid' → logprob: -10.826433181762695
    4. '(Grid' → logprob: -15.451433181762695
    5. '<Grid' → logprob: -16.951433181762695
    6. '.Grid' → logprob: -18.201433181762695
    7. ' grid' → logprob: -18.576433181762695
    8. ' ' → logprob: -18.701433181762695
    9. 'Gr' → logprob: -18.701433181762695
    10. '   ' → logprob: -18.701433181762695

Token 331: 'Position' (ID: 5647)
  Prédit: 'Position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Position' → logprob: -3.128163257315464e-07
    2. 'Pos' → logprob: -15.875
    3. ' Position' → logprob: -17.25
    4. '(Position' → logprob: -17.375
    5. 'position' → logprob: -17.5
    6. 'Grid' → logprob: -17.75
    7. 'osition' → logprob: -18.75
    8. '_Position' → logprob: -19.625
    9. '_position' → logprob: -19.625
    10. '[' → logprob: -20.0

Token 332: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00011236425780225545
    2. 'r' → logprob: -9.125112533569336
    3. '(' → logprob: -12.625112533569336
    4. ' r' → logprob: -17.000112533569336
    5. ' (' → logprob: -17.375112533569336
    6. '	r' → logprob: -17.625112533569336
    7. '(
' → logprob: -17.750112533569336
    8. '   ' → logprob: -19.125112533569336
    9. '[r' → logprob: -20.000112533569336
    10. '(row' → logprob: -20.125112533569336

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020884837955236435
    2. ',c' → logprob: -3.8958847522735596
    3. ' ,' → logprob: -8.02088451385498
    4. ',
' → logprob: -12.77088451385498
    5. '-' → logprob: -12.89588451385498
    6. ' ' → logprob: -13.14588451385498
    7. '   ' → logprob: -13.39588451385498
    8. ')' → logprob: -14.39588451385498
    9. ',C' → logprob: -14.64588451385498
    10. ',p' → logprob: -14.64588451385498

Token 334: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002476135268807411
    2. ' c' → logprob: -6.002476215362549
    3. ')c' → logprob: -15.50247573852539
    4. '   ' → logprob: -16.50247573852539
    5. '	c' → logprob: -16.87747573852539
    6. ' ' → logprob: -17.25247573852539
    7. '0' → logprob: -17.50247573852539
    8. ')' → logprob: -17.87747573852539
    9. '                               ' → logprob: -18.12747573852539
    10. '  ' → logprob: -18.25247573852539

Token 335: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1307043582201004
    2. ')
' → logprob: -2.130704402923584
    3. '               ' → logprob: -5.630704402923584
    4. ')
' → logprob: -8.755703926086426
    5. ')

' → logprob: -11.630703926086426
    6. '           ' → logprob: -12.005703926086426
    7. ' )
' → logprob: -13.505703926086426
    8. ' )' → logprob: -13.505703926086426
    9. '):
' → logprob: -13.630703926086426
    10. ')`
' → logprob: -13.880703926086426

Token 336: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024191797710955143
    2. '                
' → logprob: -6.1274189949035645
    3. ' if' → logprob: -9.127419471740723
    4. 'if' → logprob: -9.752419471740723
    5. '                

' → logprob: -10.377419471740723
    6. '                ' → logprob: -12.002419471740723
    7. '              ' → logprob: -12.127419471740723
    8. '                
                
' → logprob: -12.377419471740723
    9. '
' → logprob: -12.502419471740723
    10. '               
' → logprob: -12.877419471740723

Token 337: ' current' (ID: 2208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6339860558509827
    2. 'cost' → logprob: -1.508985996246338
    3. 'current' (adapté à ' current') → logprob: -1.633985996246338
    4. '               ' → logprob: -3.133985996246338
    5. ' if' → logprob: -6.133985996246338
    6. 'curr' → logprob: -6.258985996246338
    7. 'for' → logprob: -6.383985996246338
    8. 'neighbors' → logprob: -6.508985996246338
    9. '                   ' → logprob: -7.008985996246338
    10. ' cost' → logprob: -7.883985996246338

Token 338: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00010902655776590109
    2. '_' → logprob: -10.50010871887207
    3. '_value' → logprob: -10.50010871887207
    4. 'cost' → logprob: -10.87510871887207
    5. '_val' → logprob: -11.12510871887207
    6. '_c' → logprob: -11.25010871887207
    7. '_r' → logprob: -13.00010871887207
    8. '_dp' → logprob: -14.00010871887207
    9. 'Cost' → logprob: -14.37510871887207
    10. '_pos' → logprob: -14.62510871887207

Token 339: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269354522228241
    2. '=' → logprob: -2.1269354820251465
    3. ' ' → logprob: -12.126935005187988
    4. ',' → logprob: -15.001935005187988
    5. '=None' → logprob: -15.126935005187988
    6. 'if' → logprob: -15.251935005187988
    7. '    ' → logprob: -15.751935005187988
    8. ':' → logprob: -15.876935005187988
    9. '   ' → logprob: -16.001935958862305
    10. ' =
' → logprob: -16.126935958862305

Token 340: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0706314817070961
    2. ' self' → logprob: -2.695631504058838
    3. '0' → logprob: -7.445631504058838
    4. '               ' → logprob: -9.32063102722168
    5. '(self' → logprob: -12.07063102722168
    6. ' ' → logprob: -12.32063102722168
    7. '                   ' → logprob: -12.82063102722168
    8. '   ' → logprob: -13.57063102722168
    9. 'float' → logprob: -13.82063102722168
    10. '
' → logprob: -14.19563102722168

Token 341: '.dp' (ID: 77268)
  Prédit: '.dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dp' → logprob: -0.00013393278641160578
    2. '.' → logprob: -9.625133514404297
    3. '.grid' → logprob: -10.625133514404297
    4. '.c' → logprob: -11.000133514404297
    5. 'dp' → logprob: -11.125133514404297
    6. '	dp' → logprob: -12.500133514404297
    7. ' .' → logprob: -12.750133514404297
    8. ' dp' → logprob: -13.375133514404297
    9. '.d' → logprob: -13.875133514404297
    10. '.dc' → logprob: -14.500133514404297

Token 342: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.8624639324116288e-06
    2. 'r' → logprob: -14.000001907348633
    3. '[' → logprob: -14.125001907348633
    4. ' [' → logprob: -16.000001907348633
    5. '][' → logprob: -16.125001907348633
    6. '   ' → logprob: -17.000001907348633
    7. ')[' → logprob: -17.125001907348633
    8. '       ' → logprob: -17.625001907348633
    9. '[s' → logprob: -18.000001907348633
    10. '```' → logprob: -18.000001907348633

Token 343: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00013691288768313825
    2. ']' → logprob: -9.875137329101562
    3. ' ][' → logprob: -9.875137329101562
    4. '[c' → logprob: -11.500137329101562
    5. '   ' → logprob: -11.500137329101562
    6. '-' → logprob: -12.000137329101562
    7. ' -' → logprob: -13.000137329101562
    8. '[' → logprob: -13.625137329101562
    9. '       ' → logprob: -13.750137329101562
    10. ' ' → logprob: -14.750137329101562

Token 344: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.5577775128767826e-06
    2. ' c' → logprob: -12.500005722045898
    3. '   ' → logprob: -13.500005722045898
    4. '	c' → logprob: -15.875005722045898
    5. '       ' → logprob: -16.2500057220459
    6. ')c' → logprob: -17.1250057220459
    7. '  ' → logprob: -17.6250057220459
    8. '               ' → logprob: -17.6250057220459
    9. '           ' → logprob: -17.6250057220459
    10. '][' → logprob: -17.6250057220459

Token 345: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3561042845249176
    2. ']' → logprob: -1.8561042547225952
    3. ')
' → logprob: -2.2311043739318848
    4. ')' → logprob: -3.4811043739318848
    5. '       ' → logprob: -6.606104373931885
    6. 'if' → logprob: -6.606104373931885
    7. '
' → logprob: -6.856104373931885
    8. '               ' → logprob: -7.356104373931885
    9. ']

' → logprob: -8.606103897094727
    10. '])
' → logprob: -9.356103897094727

Token 346: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00498979352414608
    2. '                
' → logprob: -5.8799896240234375
    3. '
' → logprob: -6.3799896240234375
    4. ' if' → logprob: -8.129989624023438
    5. ' 
' → logprob: -9.754989624023438
    6. '                ' → logprob: -10.379989624023438
    7. '<|end|>' → logprob: -11.129989624023438
    8. 'if' → logprob: -11.504989624023438
    9. ' or' → logprob: -11.629989624023438
    10. '				
' → logprob: -11.879989624023438

Token 347: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01480313390493393
    2. '               ' → logprob: -4.264802932739258
    3. ' if' → logprob: -7.389802932739258
    4. 'for' → logprob: -11.139802932739258
    5. '                
' → logprob: -12.014802932739258
    6. '
' → logprob: -14.389802932739258
    7. '           ' → logprob: -15.639802932739258
    8. '```' → logprob: -15.764802932739258
    9. 'If' → logprob: -16.264802932739258
    10. '                   ' → logprob: -16.514802932739258

Token 348: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.18011446297168732
    2. 'current' → logprob: -1.805114507675171
    3. 'c' → logprob: -9.55511474609375
    4. ' c' → logprob: -9.55511474609375
    5. 'pos' → logprob: -9.80511474609375
    6. ' pos' → logprob: -9.93011474609375
    7. '   ' → logprob: -10.55511474609375
    8. 'r' → logprob: -10.55511474609375
    9. ' r' → logprob: -10.68011474609375
    10. '	current' → logprob: -11.18011474609375

Token 349: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00010223194840364158
    2. 'cost' → logprob: -9.500102043151855
    3. '_' → logprob: -11.125102043151855
    4. ' is' → logprob: -12.250102043151855
    5. 'is' → logprob: -13.625102043151855
    6. ' cost' → logprob: -13.750102043151855
    7. ' _' → logprob: -13.875102043151855
    8. '   ' → logprob: -14.000102043151855
    9. '_is' → logprob: -14.500102043151855
    10. ' ' → logprob: -14.500102043151855

Token 350: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.04859020933508873
    2. 'is' → logprob: -3.0485901832580566
    3. ' ' → logprob: -13.298590660095215
    4. ')' → logprob: -15.048590660095215
    5. '	is' → logprob: -15.298590660095215
    6. '   ' → logprob: -15.673590660095215
    7. ')is' → logprob: -16.1735897064209
    8. ' i' → logprob: -16.6735897064209
    9. '    ' → logprob: -16.9235897064209
    10. 'i' → logprob: -17.0485897064209

Token 351: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5654836297035217
    2. 'not' → logprob: -1.190483570098877
    3. ' None' → logprob: -2.690483570098877
    4. ' not' → logprob: -2.815483570098877
    5. '   ' → logprob: -9.815484046936035
    6. '	not' → logprob: -10.315484046936035
    7. 'Not' → logprob: -11.690484046936035
    8. '0' → logprob: -12.315484046936035
    9. 'none' → logprob: -12.440484046936035
    10. ' ' → logprob: -12.815484046936035

Token 352: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6945948600769043
    2. '                   ' → logprob: -0.9445948600769043
    3. ' or' → logprob: -2.6945948600769043
    4. ':
' → logprob: -3.4445948600769043
    5. '               ' → logprob: -4.569594860076904
    6. '                       ' → logprob: -6.944594860076904
    7. ' and' → logprob: -8.069595336914062
    8. '           ' → logprob: -8.069595336914062
    9. 'continue' → logprob: -8.819595336914062
    10. '   ' → logprob: -9.319595336914062

Token 353: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0041197193786501884
    2. 'continue' → logprob: -6.254119873046875
    3. ' continue' → logprob: -6.504119873046875
    4. '               ' → logprob: -7.754119873046875
    5. '   ' → logprob: -9.004119873046875
    6. '           ' → logprob: -9.629119873046875
    7. '                       ' → logprob: -10.504119873046875
    8. ':' → logprob: -11.629119873046875
    9. '	continue' → logprob: -11.879119873046875
    10. '       ' → logprob: -12.129119873046875

Token 354: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.1736043244600296
    2. ' continue' → logprob: -2.1736042499542236
    3. '                   ' → logprob: -3.1736042499542236
    4. '   ' → logprob: -6.048604488372803
    5. '                       ' → logprob: -7.048604488372803
    6. '               ' → logprob: -7.923604488372803
    7. '	continue' → logprob: -9.673604011535645
    8. '           ' → logprob: -10.173604011535645
    9. '       ' → logprob: -10.173604011535645
    10. ' ' → logprob: -11.798604011535645

Token 355: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008615515194833279
    2. '                
' → logprob: -5.258615493774414
    3. '
' → logprob: -5.758615493774414
    4. 'if' → logprob: -9.633615493774414
    5. '                

' → logprob: -10.258615493774414
    6. ' if' → logprob: -10.883615493774414
    7. '                    
' → logprob: -11.008615493774414
    8. '               
' → logprob: -11.133615493774414
    9. '              ' → logprob: -11.508615493774414
    10. '           ' → logprob: -11.633615493774414

Token 356: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023537646047770977
    2. 'if' → logprob: -6.752353668212891
    3. '                
' → logprob: -7.127353668212891
    4. ' if' → logprob: -8.87735366821289
    5. 'for' → logprob: -9.50235366821289
    6. '
' → logprob: -10.12735366821289
    7. '           ' → logprob: -10.12735366821289
    8. ' for' → logprob: -10.37735366821289
    9. '              ' → logprob: -11.62735366821289
    10. '```' → logprob: -11.75235366821289

Token 357: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.039055339992046356
    2. 'for' (adapté à ' for') → logprob: -4.664055347442627
    3. 'if' → logprob: -4.914055347442627
    4. 'neighbors' → logprob: -4.914055347442627
    5. ' for' → logprob: -5.414055347442627
    6. ' neighbors' → logprob: -5.789055347442627
    7. ' if' → logprob: -5.789055347442627
    8. '                
' → logprob: -6.039055347442627
    9. '           ' → logprob: -7.664055347442627
    10. 'neighbor' → logprob: -8.539054870605469

Token 358: ' neighbor' (ID: 13034)
  Prédit: ' neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.41601884365081787
    2. 'neighbor' → logprob: -1.1660188436508179
    3. 'n' → logprob: -4.041018962860107
    4. ' n' → logprob: -4.791018962860107
    5. ' nbr' → logprob: -6.791018962860107
    6. ' nei' → logprob: -7.791018962860107
    7. 'nbr' → logprob: -7.916018962860107
    8. ' next' → logprob: -8.29101848602295
    9. 'nei' → logprob: -8.91601848602295
    10. 'next' → logprob: -9.04101848602295

Token 359: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16037391126155853
    2. 'in' → logprob: -1.9103739261627197
    3. ' ' → logprob: -9.66037368774414
    4. '_' → logprob: -9.91037368774414
    5. '_in' → logprob: -11.41037368774414
    6. '_pos' → logprob: -11.78537368774414
    7. 'pos' → logprob: -12.03537368774414
    8. '	in' → logprob: -12.66037368774414
    9. 's' → logprob: -12.91037368774414
    10. ')' → logprob: -14.16037368774414

Token 360: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.054897740483284
    2. 'pos' → logprob: -2.9298977851867676
    3. '[pos' → logprob: -12.30489730834961
    4. '(pos' → logprob: -12.67989730834961
    5. 'neighbor' → logprob: -13.80489730834961
    6. '
' → logprob: -13.92989730834961
    7. ' self' → logprob: -14.05489730834961
    8. '	pos' → logprob: -14.05489730834961
    9. ' neighbor' → logprob: -14.30489730834961
    10. 'self' → logprob: -14.30489730834961

Token 361: '.ne' (ID: 39319)
  Prédit: '.ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ne' → logprob: -0.00010366239439463243
    2. ' .' → logprob: -9.750103950500488
    3. '.' → logprob: -10.125103950500488
    4. 'neighbors' → logprob: -12.875103950500488
    5. '_neighbors' → logprob: -13.500103950500488
    6. '.Ne' → logprob: -14.375103950500488
    7. 'Neighbors' → logprob: -15.875103950500488
    8. '(ne' → logprob: -16.000102996826172
    9. '.n' → logprob: -16.125102996826172
    10. ' neighbors' → logprob: -16.375102996826172

Token 362: 'ighbors' (ID: 46483)
  Prédit: 'ighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbors' → logprob: -0.00014561474381480366
    2. 'gh' → logprob: -9.37514591217041
    3. 'ighbor' → logprob: -10.50014591217041
    4. 'igh' → logprob: -10.87514591217041
    5. 'bors' → logprob: -11.75014591217041
    6. 'neighbors' → logprob: -12.87514591217041
    7. 'ig' → logprob: -13.00014591217041
    8. 'ib' → logprob: -15.00014591217041
    9. 'ctors' → logprob: -15.12514591217041
    10. 'ighbours' → logprob: -15.37514591217041

Token 363: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011105302110081539
    2. '(' → logprob: -9.125110626220703
    3. '(
' → logprob: -13.625110626220703
    4. ' (' → logprob: -14.750110626220703
    5. 'self' → logprob: -15.625110626220703
    6. '(s' → logprob: -16.250110626220703
    7. '(this' → logprob: -16.250110626220703
    8. '(max' → logprob: -17.375110626220703
    9. '((' → logprob: -18.125110626220703
    10. '(len' → logprob: -18.375110626220703

Token 364: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0004143456753809005
    2. '.height' → logprob: -8.00041389465332
    3. '.width' → logprob: -10.37541389465332
    4. 'self' → logprob: -10.50041389465332
    5. ' .' → logprob: -11.87541389465332
    6. 'grid' → logprob: -12.25041389465332
    7. '.' → logprob: -12.75041389465332
    8. '.self' → logprob: -13.62541389465332
    9. '       ' → logprob: -13.87541389465332
    10. '           ' → logprob: -14.12541389465332

Token 365: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -4.620622712536715e-05
    2. '.width' → logprob: -10.750045776367188
    3. '.' → logprob: -11.125045776367188
    4. 'height' → logprob: -12.000045776367188
    5. ' .' → logprob: -12.750045776367188
    6. '.
' → logprob: -15.250045776367188
    7. ' height' → logprob: -15.625045776367188
    8. '   ' → logprob: -16.125045776367188
    9. '.row' → logprob: -16.625045776367188
    10. ',' → logprob: -16.875045776367188

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.526570384972729e-05
    2. ',self' → logprob: -10.125055313110352
    3. ' ,' → logprob: -11.750055313110352
    4. '   ' → logprob: -12.750055313110352
    5. ',
' → logprob: -13.000055313110352
    6. ')' → logprob: -14.625055313110352
    7. ' ' → logprob: -14.875055313110352
    8. ',

' → logprob: -15.125055313110352
    9. '‌,' → logprob: -15.500055313110352
    10. '<|end|>' → logprob: -15.750055313110352

Token 367: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03365710750222206
    2. ' self' → logprob: -3.4086570739746094
    3. '               ' → logprob: -12.53365707397461
    4. '                   ' → logprob: -13.40865707397461
    5. '           ' → logprob: -13.65865707397461
    6. '   ' → logprob: -14.03365707397461
    7. ' ' → logprob: -14.15865707397461
    8. '(self' → logprob: -14.28365707397461
    9. '	self' → logprob: -14.90865707397461
    10. '[self' → logprob: -14.90865707397461

Token 368: '.grid' (ID: 19269)
  Prédit: '.width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.12704527378082275
    2. 'width' → logprob: -2.127045154571533
    3. '.grid' → logprob: -10.502045631408691
    4. '.' → logprob: -10.627045631408691
    5. 'grid' → logprob: -10.752045631408691
    6. ' width' → logprob: -11.002045631408691
    7. ' .' → logprob: -12.002045631408691
    8. '   ' → logprob: -12.127045631408691
    9. 'idth' → logprob: -12.502045631408691
    10. '.height' → logprob: -12.877045631408691

Token 369: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.020914368331432343
    2. 'width' → logprob: -3.895914316177368
    3. 'idth' → logprob: -8.270914077758789
    4. '.' → logprob: -10.270914077758789
    5. ' .' → logprob: -10.270914077758789
    6. '.height' → logprob: -11.395914077758789
    7. ' width' → logprob: -11.520914077758789
    8. '   ' → logprob: -11.770914077758789
    9. ' ' → logprob: -12.770914077758789
    10. '       ' → logprob: -13.520914077758789

Token 370: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002042840700596571
    2. '):
' → logprob: -6.252042770385742
    3. ' ):' → logprob: -9.502042770385742
    4. '):
' → logprob: -10.627042770385742
    5. ')' → logprob: -11.877042770385742
    6. '       ' → logprob: -12.502042770385742
    7. '           ' → logprob: -13.752042770385742
    8. '):

' → logprob: -14.002042770385742
    9. ':' → logprob: -14.127042770385742
    10. '   ' → logprob: -14.752042770385742

Token 371: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018001968041062355
    2. '                    
' → logprob: -4.268002033233643
    3. '               ' → logprob: -6.143002033233643
    4. '                    ' → logprob: -7.268002033233643
    5. '                ' → logprob: -8.143001556396484
    6. '                
' → logprob: -8.893001556396484
    7. '                       ' → logprob: -9.018001556396484
    8. '                   
' → logprob: -9.393001556396484
    9. '                  ' → logprob: -9.518001556396484
    10. '                        
' → logprob: -9.643001556396484

Token 372: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.2603214979171753
    2. 'neighbor' → logprob: -2.385321617126465
    3. 'next' → logprob: -2.635321617126465
    4. '                   ' → logprob: -2.885321617126465
    5. 'existing' → logprob: -5.510321617126465
    6. 'cost' → logprob: -5.760321617126465
    7. '   ' → logprob: -7.385321617126465
    8. '                       ' → logprob: -7.635321617126465
    9. ' new' → logprob: -8.135321617126465
    10. 'old' → logprob: -8.260321617126465

Token 373: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.8206473871250637e-05
    2. '_c' → logprob: -10.875028610229492
    3. '_' → logprob: -12.250028610229492
    4. 'cost' → logprob: -12.500028610229492
    5. ' _' → logprob: -16.125028610229492
    6. '_value' → logprob: -16.625028610229492
    7. '_r' → logprob: -16.750028610229492
    8. 'Cost' → logprob: -16.750028610229492
    9. '_COST' → logprob: -16.750028610229492
    10. '_score' → logprob: -17.125028610229492

Token 374: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014143168926239
    2. '=' → logprob: -1.7014143466949463
    3. ' ' → logprob: -14.451414108276367
    4. ' =
' → logprob: -15.451414108276367
    5. ')' → logprob: -16.701414108276367
    6. '<|end|>' → logprob: -16.951414108276367
    7. '=self' → logprob: -17.201414108276367
    8. '=
' → logprob: -17.326414108276367
    9. '＝' → logprob: -17.951414108276367
    10. ' ' → logprob: -18.076414108276367

Token 375: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.03383103385567665
    2. ' current' → logprob: -3.4088311195373535
    3. 'self' → logprob: -9.033830642700195
    4. '                   ' → logprob: -9.783830642700195
    5. ' self' → logprob: -12.783830642700195
    6. '                       ' → logprob: -13.283830642700195
    7. '               ' → logprob: -13.658830642700195
    8. 'cur' → logprob: -13.783830642700195
    9. '   ' → logprob: -14.533830642700195
    10. '(current' → logprob: -14.658830642700195

Token 376: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00022129806166049093
    2. 'cost' → logprob: -9.000221252441406
    3. '_c' → logprob: -9.375221252441406
    4. 'Cost' → logprob: -12.875221252441406
    5. '_' → logprob: -13.500221252441406
    6. '[' → logprob: -13.875221252441406
    7. ')' → logprob: -14.000221252441406
    8. '_COST' → logprob: -14.125221252441406
    9. '+' → logprob: -14.250221252441406
    10. '_code' → logprob: -14.375221252441406

Token 377: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.011049704626202583
    2. '+' → logprob: -4.511049747467041
    3. ' +
' → logprob: -13.636049270629883
    4. ' ' → logprob: -15.261049270629883
    5. ' ' → logprob: -15.511049270629883
    6. ' plus' → logprob: -16.261049270629883
    7. '+
' → logprob: -16.761049270629883
    8. ' +=' → logprob: -16.761049270629883
    9. '+self' → logprob: -17.136049270629883
    10. ' +
' → logprob: -17.761049270629883

Token 378: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03368685021996498
    2. ' self' → logprob: -3.408686876296997
    3. '                   ' → logprob: -10.783686637878418
    4. '(self' → logprob: -11.158686637878418
    5. '[self' → logprob: -13.908686637878418
    6. '                       ' → logprob: -14.033686637878418
    7. '                    
' → logprob: -14.283686637878418
    8. '	self' → logprob: -14.408686637878418
    9. '*self' → logprob: -14.783686637878418
    10. '=self' → logprob: -14.783686637878418

Token 379: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -7.958325295476243e-05
    2. 'grid' → logprob: -9.750079154968262
    3. '.' → logprob: -10.875079154968262
    4. ' .' → logprob: -14.500079154968262
    5. '.c' → logprob: -14.875079154968262
    6. '	grid' → logprob: -14.875079154968262
    7. ' grid' → logprob: -15.250079154968262
    8. ':grid' → logprob: -15.750079154968262
    9. '.g' → logprob: -15.875079154968262
    10. '.Grid' → logprob: -16.625080108642578

Token 380: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.00010819212911883369
    2. '.' → logprob: -9.250107765197754
    3. '.grid' → logprob: -11.875107765197754
    4. ' .' → logprob: -12.750107765197754
    5. '.cost' → logprob: -13.750107765197754
    6. '.cells' → logprob: -15.875107765197754
    7. ').' → logprob: -16.12510871887207
    8. '.cvt' → logprob: -16.50010871887207
    9. '.cbo' → logprob: -17.00010871887207
    10. '.C' → logprob: -17.00010871887207

Token 381: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.00013798571308143437
    2. 'c' → logprob: -9.375138282775879
    3. 'i' → logprob: -11.500138282775879
    4. 'cidas' → logprob: -11.750138282775879
    5. 'ac' → logprob: -12.625138282775879
    6. 'ich' → logprob: -13.000138282775879
    7. '```' → logprob: -13.187638282775879
    8. 'icas' → logprob: -13.250138282775879
    9. 'gadas' → logprob: -13.312638282775879
    10. 'at' → logprob: -13.437638282775879

Token 382: 'adas' (ID: 3921)
  Prédit: 'adas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adas' → logprob: -1.9027791495318525e-05
    2. 'ada' → logprob: -11.000019073486328
    3. 'idas' → logprob: -13.375019073486328
    4. 'das' → logprob: -15.750019073486328
    5. 'andas' → logprob: -16.000019073486328
    6. 'ads' → logprob: -16.375019073486328
    7. 'atas' → logprob: -16.750019073486328
    8. 'udas' → logprob: -17.250019073486328
    9. 'edas' → logprob: -17.375019073486328
    10. '
' → logprob: -17.500019073486328

Token 383: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -5.5577775128767826e-06
    2. 'at' → logprob: -12.375005722045898
    3. '_' → logprob: -14.500005722045898
    4. 's' → logprob: -15.875005722045898
    5. '_a' → logprob: -16.5000057220459
    6. 'a' → logprob: -16.5000057220459
    7. '_grid' → logprob: -16.5000057220459
    8. '__' → logprob: -16.6250057220459
    9. 'At' → logprob: -16.8750057220459
    10. 't' → logprob: -17.1250057220459

Token 384: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.011094626039266586
    2. '(' → logprob: -4.511094570159912
    3. 'neighbor' → logprob: -10.13609504699707
    4. '(
' → logprob: -12.63609504699707
    5. '(n' → logprob: -12.88609504699707
    6. '(

' → logprob: -15.26109504699707
    7. ' (' → logprob: -15.26109504699707
    8. ' neighbor' → logprob: -15.38609504699707
    9. '((' → logprob: -15.88609504699707
    10. '(next' → logprob: -15.88609504699707

Token 385: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -0.050598688423633575
    2. 'neighbor' → logprob: -3.050598621368408
    3. ' neighbor' → logprob: -6.675598621368408
    4. '                   ' → logprob: -8.550599098205566
    5. 'ighbors' → logprob: -8.550599098205566
    6. 'igh' → logprob: -8.800599098205566
    7. 'ighborhood' → logprob: -10.175599098205566
    8. 'gh' → logprob: -10.175599098205566
    9. 'ada' → logprob: -10.300599098205566
    10. 'ig' → logprob: -11.050599098205566

Token 386: ')
' (ID: 446)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20273533463478088
    2. ')' → logprob: -1.7027353048324585
    3. '()' → logprob: -7.077735424041748
    4. '())
' → logprob: -8.57773494720459
    5. ' ())' → logprob: -8.70273494720459
    6. '(' → logprob: -10.20273494720459
    7. ' )' → logprob: -10.70273494720459
    8. '))' → logprob: -10.95273494720459
    9. '()))' → logprob: -11.45273494720459
    10. ')
' → logprob: -11.45273494720459

Token 387: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009835658594965935
    2. '                    
' → logprob: -4.884835720062256
    3. '
' → logprob: -7.384835720062256
    4. '               ' → logprob: -7.759835720062256
    5. '                    ' → logprob: -7.759835720062256
    6. ' if' → logprob: -8.884835243225098
    7. '           ' → logprob: -9.259835243225098
    8. '<|end|>' → logprob: -9.509835243225098
    9. ')' → logprob: -9.634835243225098
    10. '                  ' → logprob: -10.009835243225098

Token 388: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.017137063667178154
    2. '                   ' → logprob: -4.892137050628662
    3. ' if' → logprob: -5.392137050628662
    4. 'existing' → logprob: -5.642137050628662
    5. 'old' → logprob: -6.892137050628662
    6. 'current' → logprob: -8.89213752746582
    7. 'prev' → logprob: -8.89213752746582
    8. '                       ' → logprob: -10.26713752746582
    9. ' existing' → logprob: -10.39213752746582
    10. 'dp' → logprob: -10.76713752746582

Token 389: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4768056571483612
    2. ' self' → logprob: -0.9768056869506836
    3. '                   ' → logprob: -5.976805686950684
    4. '                       ' → logprob: -9.351805686950684
    5. '(self' → logprob: -10.226805686950684
    6. '   ' → logprob: -10.726805686950684
    7. '               ' → logprob: -10.851805686950684
    8. ' ' → logprob: -12.101805686950684
    9. '	self' → logprob: -12.476805686950684
    10. ' (' → logprob: -12.726805686950684

Token 390: '.dp' (ID: 77268)
  Prédit: '.dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dp' → logprob: -3.03521392197581e-05
    2. 'dp' → logprob: -11.125030517578125
    3. '	dp' → logprob: -11.750030517578125
    4. '.' → logprob: -12.000030517578125
    5. '(dp' → logprob: -14.500030517578125
    6. ' dp' → logprob: -14.875030517578125
    7. '_dp' → logprob: -15.250030517578125
    8. ' .' → logprob: -15.750030517578125
    9. '.dj' → logprob: -16.125030517578125
    10. '.df' → logprob: -17.000030517578125

Token 391: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '                   ' → logprob: -14.625000953674316
    3. '[
' → logprob: -15.625000953674316
    4. 'neighbor' → logprob: -15.750000953674316
    5. '   ' → logprob: -16.375001907348633
    6. '[new' → logprob: -16.500001907348633
    7. '           ' → logprob: -16.625001907348633
    8. ' [' → logprob: -16.625001907348633
    9. '               ' → logprob: -16.750001907348633
    10. '```' → logprob: -16.875001907348633

Token 392: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0003907543432433158
    2. '[' → logprob: -7.875390529632568
    3. ' neighbor' → logprob: -12.000391006469727
    4. '[
' → logprob: -13.375391006469727
    5. '
' → logprob: -13.875391006469727
    6. '                   ' → logprob: -15.000391006469727
    7. 'ne' → logprob: -15.125391006469727
    8. '   ' → logprob: -15.500391006469727
    9. 'new' → logprob: -15.625391006469727
    10. '][' → logprob: -15.750391006469727

Token 393: '.row' (ID: 24627)
  Prédit: '.row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -9.198043699143454e-05
    2. '.' → logprob: -9.500091552734375
    3. '[' → logprob: -11.250091552734375
    4. ' .' → logprob: -13.250091552734375
    5. '[row' → logprob: -13.875091552734375
    6. 'row' → logprob: -15.250091552734375
    7. '].' → logprob: -16.000091552734375
    8. ' ' → logprob: -16.000091552734375
    9. '.rows' → logprob: -16.000091552734375
    10. ',row' → logprob: -16.125091552734375

Token 394: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005624461336992681
    2. '[' → logprob: -7.50056266784668
    3. ']' → logprob: -12.50056266784668
    4. ' ][' → logprob: -12.62556266784668
    5. '"][' → logprob: -14.25056266784668
    6. ']][' → logprob: -14.62556266784668
    7. '   ' → logprob: -15.12556266784668
    8. ''][' → logprob: -15.12556266784668
    9. 'neighbor' → logprob: -15.50056266784668
    10. '```' → logprob: -16.12556266784668

Token 395: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -2.7968066206085496e-05
    2. ' neighbor' → logprob: -10.500027656555176
    3. '                   ' → logprob: -15.375027656555176
    4. '           ' → logprob: -17.250028610229492
    5. '               ' → logprob: -17.250028610229492
    6. '
' → logprob: -17.375028610229492
    7. '   ' → logprob: -17.750028610229492
    8. '  ' → logprob: -18.750028610229492
    9. ' ' → logprob: -18.750028610229492
    10. '       ' → logprob: -18.875028610229492

Token 396: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -0.00018732868193183094
    2. 'col' → logprob: -9.625186920166016
    3. ']' → logprob: -9.750186920166016
    4. '.row' → logprob: -10.500186920166016
    5. '[col' → logprob: -11.125186920166016
    6. '][' → logprob: -11.750186920166016
    7. '].' → logprob: -12.750186920166016
    8. '_col' → logprob: -12.875186920166016
    9. '[' → logprob: -13.250186920166016
    10. '.column' → logprob: -13.875186920166016

Token 397: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.541574239730835
    2. ']' → logprob: -0.916574239730835
    3. 'is' → logprob: -4.416574478149414
    4. ' ]' → logprob: -5.166574478149414
    5. ')' → logprob: -7.666574478149414
    6. ' )' → logprob: -11.166574478149414
    7. ' ' → logprob: -12.416574478149414
    8. 's' → logprob: -13.041574478149414
    9. ']==' → logprob: -13.291574478149414
    10. '            ' → logprob: -13.291574478149414

Token 398: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06197172403335571
    2. 'is' → logprob: -2.811971664428711
    3. 'in' → logprob: -13.061971664428711
    4. '	is' → logprob: -14.186971664428711
    5. ' in' → logprob: -15.311971664428711
    6. ' ' → logprob: -15.311971664428711
    7. ')' → logprob: -15.561971664428711
    8. 'i' → logprob: -15.936971664428711
    9. '   ' → logprob: -16.06197166442871
    10. 's' → logprob: -16.31197166442871

Token 399: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5759426355361938
    2. 'None' → logprob: -0.8259426355361938
    3. '               ' → logprob: -13.825942993164062
    4. '                   ' → logprob: -14.450942993164062
    5. '(None' → logprob: -14.575942993164062
    6. '   ' → logprob: -15.075942993164062
    7. '_None' → logprob: -15.075942993164062
    8. '=None' → logprob: -15.450942993164062
    9. '           ' → logprob: -15.700942993164062
    10. ' ' → logprob: -16.325942993164062

Token 400: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00036655968870036304
    2. 'or' → logprob: -8.1253662109375
    3. '                   ' → logprob: -9.8753662109375
    4. '                    ' → logprob: -11.6253662109375
    5. '                       ' → logprob: -12.5003662109375
    6. ' ' → logprob: -12.8753662109375
    7. '                ' → logprob: -14.1253662109375
    8. '	or' → logprob: -14.2503662109375
    9. '               ' → logprob: -14.5003662109375
    10. '    ' → logprob: -15.1253662109375

Token 401: ' self' (ID: 1051)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.47566500306129456
    2. 'new' → logprob: -0.9756649732589722
    3. '                   ' → logprob: -7.100665092468262
    4. 'self' → logprob: -7.725665092468262
    5. ' self' → logprob: -8.475665092468262
    6. '                       ' → logprob: -9.350665092468262
    7. '   ' → logprob: -11.975665092468262
    8. '                    ' → logprob: -12.225665092468262
    9. '	new' → logprob: -12.725665092468262
    10. '                               ' → logprob: -13.225665092468262

Token 402: '.dp' (ID: 77268)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6314302086830139
    2. '.dp' → logprob: -1.0064301490783691
    3. '_dp' → logprob: -2.381430149078369
    4. 'new' → logprob: -5.506430149078369
    5. '	dp' → logprob: -5.631430149078369
    6. ' dp' → logprob: -7.381430149078369
    7. '[' → logprob: -7.631430149078369
    8. '(dp' → logprob: -8.131430625915527
    9. '           ' → logprob: -8.631430625915527
    10. '       ' → logprob: -8.631430625915527

Token 403: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[
' → logprob: -18.0
    3. '```' → logprob: -19.5
    4. '                   ' → logprob: -19.625
    5. 'neighbor' → logprob: -19.75
    6. '               ' → logprob: -20.125
    7. ')[' → logprob: -20.375
    8. '   ' → logprob: -20.375
    9. ' [' → logprob: -20.75
    10. '[next' → logprob: -20.875

Token 404: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.5759665966033936
    2. '[' → logprob: -0.8259665966033936
    3. ' neighbor' → logprob: -11.450966835021973
    4. '[
' → logprob: -12.075966835021973
    5. '][' → logprob: -12.450966835021973
    6. '                   ' → logprob: -13.700966835021973
    7. '               ' → logprob: -13.950966835021973
    8. '   ' → logprob: -14.075966835021973
    9. 'pos' → logprob: -14.200966835021973
    10. '```' → logprob: -14.450966835021973

Token 405: '.row' (ID: 24627)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1745983064174652
    2. '.row' → logprob: -2.049598217010498
    3. '[row' → logprob: -3.674598217010498
    4. '][' → logprob: -5.174598217010498
    5. '.ne' → logprob: -8.674598693847656
    6. '           ' → logprob: -10.174598693847656
    7. 'row' → logprob: -10.799598693847656
    8. '       ' → logprob: -10.799598693847656
    9. '.rows' → logprob: -10.799598693847656
    10. 'neighbor' → logprob: -10.799598693847656

Token 406: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007005562540143728
    2. '[' → logprob: -5.00700569152832
    3. '[row' → logprob: -9.88200569152832
    4. '[col' → logprob: -10.13200569152832
    5. '       ' → logprob: -10.75700569152832
    6. ']' → logprob: -10.75700569152832
    7. ')[' → logprob: -10.88200569152832
    8. ']][' → logprob: -11.00700569152832
    9. '               ' → logprob: -11.25700569152832
    10. '                       ' → logprob: -11.25700569152832

Token 407: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0018176245503127575
    2. 'col' → logprob: -6.37681770324707
    3. 'c' → logprob: -9.87681770324707
    4. ' neighbor' → logprob: -10.25181770324707
    5. '[' → logprob: -11.62681770324707
    6. '                   ' → logprob: -12.37681770324707
    7. '][' → logprob: -12.75181770324707
    8. '               ' → logprob: -13.12681770324707
    9. '[col' → logprob: -13.12681770324707
    10. '           ' → logprob: -13.37681770324707

Token 408: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -0.02452736720442772
    2. 'col' → logprob: -3.7745273113250732
    3. '[col' → logprob: -7.024527549743652
    4. '_col' → logprob: -8.899527549743652
    5. '][' → logprob: -9.274527549743652
    6. '.row' → logprob: -9.899527549743652
    7. ']' → logprob: -10.899527549743652
    8. ',col' → logprob: -11.149527549743652
    9. '.cost' → logprob: -11.149527549743652
    10. 'cost' → logprob: -11.399527549743652

Token 409: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0021880913991481066
    2. ' >' → logprob: -6.127188205718994
    3. ']' → logprob: -14.252187728881836
    4. '>
' → logprob: -14.752187728881836
    5. ']>' → logprob: -14.752187728881836
    6. '   ' → logprob: -14.877187728881836
    7. ' ' → logprob: -15.252187728881836
    8. '">' → logprob: -15.252187728881836
    9. '()>' → logprob: -16.127187728881836
    10. '>

' → logprob: -16.127187728881836

Token 410: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.018151583150029182
    2. ' >' → logprob: -4.018151760101318
    3. 'new' → logprob: -14.01815128326416
    4. '">' → logprob: -15.39315128326416
    5. ' ' → logprob: -15.89315128326416
    6. ' new' → logprob: -16.393152236938477
    7. '>
' → logprob: -16.518152236938477
    8. '>

' → logprob: -16.518152236938477
    9. '()>' → logprob: -16.643152236938477
    10. '>end' → logprob: -16.893152236938477

Token 411: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.10020828247070312
    2. ' new' → logprob: -2.350208282470703
    3. '                   ' → logprob: -14.225208282470703
    4. '	new' → logprob: -14.850208282470703
    5. '   ' → logprob: -15.600208282470703
    6. '               ' → logprob: -15.725208282470703
    7. '_new' → logprob: -16.975208282470703
    8. '                       ' → logprob: -17.225208282470703
    9. ' ' → logprob: -17.225208282470703
    10. '
' → logprob: -17.475208282470703

Token 412: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.1756367712223437e-05
    2. 'cost' → logprob: -12.375011444091797
    3. '_c' → logprob: -12.500011444091797
    4. '_' → logprob: -13.250011444091797
    5. 'w' → logprob: -14.250011444091797
    6. ' _' → logprob: -15.000011444091797
    7. '_COST' → logprob: -15.250011444091797
    8. 'ew' → logprob: -15.875011444091797
    9. '_code' → logprob: -16.000011444091797
    10. '-cost' → logprob: -16.125011444091797

Token 413: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02545299008488655
    2. ':
' → logprob: -3.7754530906677246
    3. '                   ' → logprob: -6.775453090667725
    4. '                       ' → logprob: -7.400453090667725
    5. '):
' → logprob: -8.525452613830566
    6. '):' → logprob: -8.650452613830566
    7. ')' → logprob: -10.650452613830566
    8. '               ' → logprob: -11.025452613830566
    9. '                           ' → logprob: -12.150452613830566
    10. '                    ' → logprob: -12.275452613830566

Token 414: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.013289636000990868
    2. '                   ' → logprob: -4.388289451599121
    3. '                           ' → logprob: -7.513289451599121
    4. '                        
' → logprob: -9.763289451599121
    5. '               ' → logprob: -10.013289451599121
    6. '                    ' → logprob: -10.388289451599121
    7. '                        ' → logprob: -10.763289451599121
    8. '                      ' → logprob: -11.263289451599121
    9. 'self' → logprob: -11.513289451599121
    10. ':' → logprob: -11.763289451599121

Token 415: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12724074721336365
    2. ' self' → logprob: -2.1272406578063965
    3. '                       ' → logprob: -8.502241134643555
    4. '                           ' → logprob: -9.252241134643555
    5. '                               ' → logprob: -12.252241134643555
    6. '                        
' → logprob: -13.002241134643555
    7. '                   ' → logprob: -13.252241134643555
    8. '	self' → logprob: -14.002241134643555
    9. '                        ' → logprob: -14.252241134643555
    10. '   ' → logprob: -14.502241134643555

Token 416: '.dp' (ID: 77268)
  Prédit: '.dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dp' → logprob: -9.305326966568828e-05
    2. '.' → logprob: -9.375093460083008
    3. '	dp' → logprob: -12.625093460083008
    4. '.df' → logprob: -13.375093460083008
    5. 'dp' → logprob: -14.250093460083008
    6. '.py' → logprob: -14.500093460083008
    7. '_dp' → logprob: -14.625093460083008
    8. '.dt' → logprob: -15.000093460083008
    9. ' .' → logprob: -15.125093460083008
    10. ' dp' → logprob: -15.375093460083008

Token 417: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '[pos' → logprob: -14.375000953674316
    3. '                   ' → logprob: -15.375000953674316
    4. ')[' → logprob: -16.500001907348633
    5. '                       ' → logprob: -17.000001907348633
    6. '```' → logprob: -17.125001907348633
    7. '               ' → logprob: -17.250001907348633
    8. '   ' → logprob: -17.500001907348633
    9. '][' → logprob: -17.625001907348633
    10. '[n' → logprob: -17.750001907348633

Token 418: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -2.093505099765025e-05
    2. '[' → logprob: -11.500020980834961
    3. ' neighbor' → logprob: -12.250020980834961
    4. '                   ' → logprob: -12.875020980834961
    5. '               ' → logprob: -14.250020980834961
    6. '   ' → logprob: -14.750020980834961
    7. '           ' → logprob: -15.000020980834961
    8. '
' → logprob: -15.625020980834961
    9. '```' → logprob: -15.625020980834961
    10. 'pos' → logprob: -16.00002098083496

Token 419: '.row' (ID: 24627)
  Prédit: '.row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -0.00012082771718269214
    2. '.' → logprob: -10.250121116638184
    3. ' .' → logprob: -10.625121116638184
    4. '[' → logprob: -10.625121116638184
    5. '[row' → logprob: -11.750121116638184
    6. 'row' → logprob: -12.000121116638184
    7. '.col' → logprob: -12.250121116638184
    8. '```' → logprob: -12.875121116638184
    9. '       ' → logprob: -13.125121116638184
    10. '].' → logprob: -13.500121116638184

Token 420: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001170460251159966
    2. '[' → logprob: -7.001170635223389
    3. ']' → logprob: -9.37617015838623
    4. '       ' → logprob: -10.37617015838623
    5. '           ' → logprob: -10.87617015838623
    6. ' ][' → logprob: -10.87617015838623
    7. '   ' → logprob: -11.00117015838623
    8. ']][' → logprob: -11.12617015838623
    9. '                       ' → logprob: -11.37617015838623
    10. '[col' → logprob: -11.62617015838623

Token 421: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.3134067952632904
    2. 'col' → logprob: -1.3134068250656128
    3. ' neighbor' → logprob: -9.188406944274902
    4. 'c' → logprob: -10.688406944274902
    5. 'coln' → logprob: -12.188406944274902
    6. 'pos' → logprob: -12.813406944274902
    7. 'colon' → logprob: -13.313406944274902
    8. 'cost' → logprob: -13.438406944274902
    9. 'coli' → logprob: -13.938406944274902
    10. '   ' → logprob: -13.938406944274902

Token 422: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -0.004507970064878464
    2. '.row' → logprob: -5.504508018493652
    3. 'col' → logprob: -8.004508018493652
    4. '_col' → logprob: -9.754508018493652
    5. '].' → logprob: -11.254508018493652
    6. ',col' → logprob: -12.629508018493652
    7. '][' → logprob: -12.754508018493652
    8. '	col' → logprob: -12.879508018493652
    9. ']' → logprob: -13.254508018493652
    10. '.cost' → logprob: -13.254508018493652

Token 423: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3252820074558258
    2. ' =' → logprob: -1.3252819776535034
    3. ']' → logprob: -4.575282096862793
    4. ']=' → logprob: -6.450282096862793
    5. ' ]' → logprob: -9.700282096862793
    6. ')' → logprob: -13.450282096862793
    7. '=new' → logprob: -13.950282096862793
    8. ')=' → logprob: -14.450282096862793
    9. ' ' → logprob: -15.200282096862793
    10. '']=' → logprob: -16.325281143188477

Token 424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759416222572327
    2. ' =' → logprob: -0.8259416222572327
    3. '=new' → logprob: -13.075942039489746
    4. 'new' → logprob: -17.95094108581543
    5. ' ' → logprob: -18.07594108581543
    6. ' new' → logprob: -18.20094108581543
    7. '＝' → logprob: -18.32594108581543
    8. '=n' → logprob: -18.57594108581543
    9. '=s' → logprob: -18.95094108581543
    10. ' =
' → logprob: -19.07594108581543

Token 425: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5759398937225342
    2. 'new' → logprob: -0.8259398937225342
    3. '	new' → logprob: -16.075939178466797
    4. '_new' → logprob: -16.325939178466797
    5. '$new' → logprob: -16.700939178466797
    6. 'New' → logprob: -17.075939178466797
    7. ' ' → logprob: -17.575939178466797
    8. ' ' → logprob: -17.700939178466797
    9. '[new' → logprob: -17.700939178466797
    10. '新' → logprob: -17.825939178466797

Token 426: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -4.723352049040841e-06
    2. 'cost' → logprob: -12.625004768371582
    3. '_c' → logprob: -13.875004768371582
    4. '_cos' → logprob: -15.875004768371582
    5. '_' → logprob: -16.500003814697266
    6. '_COST' → logprob: -16.625003814697266
    7. '-cost' → logprob: -16.750003814697266
    8. '_co' → logprob: -17.625003814697266
    9. ' _' → logprob: -17.750003814697266
    10. '_code' → logprob: -17.875003814697266

Token 427: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22977633774280548
    2. '       ' → logprob: -1.729776382446289
    3. '        
' → logprob: -4.354776382446289
    4. '\n' → logprob: -5.479776382446289
    5. '<|end|>' → logprob: -5.979776382446289
    6. '' → logprob: -6.604776382446289
    7. '        ' → logprob: -6.854776382446289
    8. 'return' → logprob: -6.854776382446289
    9. ' 
' → logprob: -7.104776382446289
    10. '    
' → logprob: -7.104776382446289

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14764924347400665
    2. '
' → logprob: -2.1476492881774902
    3. '        
' → logprob: -4.64764928817749
    4. 'return' → logprob: -5.52264928817749
    5. '<|end|>' → logprob: -6.14764928817749
    6. '	' → logprob: -6.89764928817749
    7. ' return' → logprob: -7.52264928817749
    8. '```' → logprob: -7.64764928817749
    9. '' → logprob: -7.77264928817749
    10. '   ' → logprob: -8.022648811340332

Token 429: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07931934297084808
    2. 'return' → logprob: -2.5793192386627197
    3. ' return' → logprob: -8.20431900024414
    4. '   ' → logprob: -9.57931900024414
    5. '        
' → logprob: -9.95431900024414
    6. '
' → logprob: -10.95431900024414
    7. '      ' → logprob: -12.57931900024414
    8. '               ' → logprob: -12.70431900024414
    9. '```' → logprob: -12.95431900024414
    10. '	return' → logprob: -13.32931900024414

Token 430: ' End' (ID: 6437)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0025298797991126776
    2. ' return' → logprob: -6.127530097961426
    3. '       ' → logprob: -8.002530097961426
    4. 'Return' → logprob: -12.377530097961426
    5. '#' → logprob: -12.752530097961426
    6. '   ' → logprob: -13.377530097961426
    7. 'final' → logprob: -14.752530097961426
    8. 'import' → logprob: -16.12752914428711
    9. '```' → logprob: -16.12752914428711
    10. '
' → logprob: -16.25252914428711

Token 431: ' position' (ID: 4010)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5658794641494751
    2. 'return' → logprob: -1.315879464149475
    3. '       ' → logprob: -1.815879464149475
    4. ' self' → logprob: -7.5658793449401855
    5. '        
' → logprob: -8.065879821777344
    6. 'self' → logprob: -9.065879821777344
    7. '   ' → logprob: -9.315879821777344
    8. '        ' → logprob: -9.690879821777344
    9. '
' → logprob: -10.065879821777344
    10. '    ' → logprob: -10.940879821777344

Token 432: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019929159432649612
    2. ' return' → logprob: -4.144928932189941
    3. 'return' → logprob: -5.894928932189941
    4. '        
' → logprob: -7.894928932189941
    5. '
' → logprob: -8.394928932189941
    6. ' (' → logprob: -8.519928932189941
    7. ',' → logprob: -9.394928932189941
    8. '[' → logprob: -9.644928932189941
    9. '<|end|>' → logprob: -9.894928932189941
    10. '(' → logprob: -10.644928932189941

Token 433: 'H' (ID: 39)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024839844554662704
    2. ' self' → logprob: -6.00248384475708
    3. 'Grid' → logprob: -11.877484321594238
    4. '
' → logprob: -14.752484321594238
    5. '(self' → logprob: -14.752484321594238
    6. ')' → logprob: -16.002483367919922
    7. ' Grid' → logprob: -16.002483367919922
    8. '       ' → logprob: -16.252483367919922
    9. 'return' → logprob: -16.502483367919922
    10. '   ' → logprob: -16.877483367919922

Token 434: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06197172403335571
    2. ' -' → logprob: -2.811971664428711
    3. ',' → logprob: -13.561971664428711
    4. '
' → logprob: -14.436971664428711
    5. ' ' → logprob: -14.436971664428711
    6. '1' → logprob: -14.686971664428711
    7. '-
' → logprob: -14.811971664428711
    8. '   ' → logprob: -14.936971664428711
    9. '       ' → logprob: -15.311971664428711
    10. '()-' → logprob: -16.43697166442871

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.625004768371582
    3. '   ' → logprob: -14.250004768371582
    4. '       ' → logprob: -15.375004768371582
    5. '
' → logprob: -16.250003814697266
    6. ',' → logprob: -16.625003814697266
    7. '2' → logprob: -17.125003814697266
    8. '           ' → logprob: -17.375003814697266
    9. '    ' → logprob: -18.250003814697266
    10. '  ' → logprob: -18.500003814697266

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012212936766445637
    2. '][' → logprob: -4.887212753295898
    3. ')[' → logprob: -6.137212753295898
    4. ')' → logprob: -6.262212753295898
    5. ' ,' → logprob: -8.137212753295898
    6. ')][' → logprob: -9.512212753295898
    7. '),(' → logprob: -9.637212753295898
    8. ')(' → logprob: -11.012212753295898
    9. '),' → logprob: -11.137212753295898
    10. ',self' → logprob: -11.387212753295898

Token 437: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.014347185380756855
    2. ' W' → logprob: -4.264347076416016
    3. 'self' → logprob: -8.889347076416016
    4. '	W' → logprob: -10.764347076416016
    5. ' self' → logprob: -11.139347076416016
    6. '   ' → logprob: -11.764347076416016
    7. '       ' → logprob: -14.639347076416016
    8. ' ' → logprob: -15.264347076416016
    9. '<W' → logprob: -15.389347076416016
    10. '```' → logprob: -15.514347076416016

Token 438: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001343446783721447
    2. ' -' → logprob: -6.876343250274658
    3. ')' → logprob: -8.751343727111816
    4. '1' → logprob: -8.876343727111816
    5. '   ' → logprob: -12.376343727111816
    6. ',' → logprob: -13.001343727111816
    7. '-
' → logprob: -13.501343727111816
    8. ')-' → logprob: -13.751343727111816
    9. ' ' → logprob: -14.126343727111816
    10. '+' → logprob: -14.126343727111816

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.625001907348633
    3. ')' → logprob: -15.500001907348633
    4. '```' → logprob: -16.375001907348633
    5. '-' → logprob: -17.000001907348633
    6. '１' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '۱' → logprob: -17.625001907348633
    9. '
' → logprob: -19.375001907348633
    10. '

' → logprob: -19.562501907348633

Token 440: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003966912627220154
    2. ']' → logprob: -6.003966808319092
    3. '])' → logprob: -6.878966808319092
    4. ' )' → logprob: -8.50396728515625
    5. ')]' → logprob: -8.75396728515625
    6. ').' → logprob: -10.25396728515625
    7. ')
' → logprob: -11.25396728515625
    8. '   ' → logprob: -11.37896728515625
    9. ')])' → logprob: -11.50396728515625
    10. ')return' → logprob: -11.75396728515625

Token 441: ' also' (ID: 1217)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005892414133995771
    2. '
' → logprob: -5.630892276763916
    3. 'return' → logprob: -6.255892276763916
    4. ' return' → logprob: -8.130892753601074
    5. '   ' → logprob: -10.255892753601074
    6. '        
' → logprob: -10.755892753601074
    7. '<|end|>' → logprob: -12.505892753601074
    8. '  
' → logprob: -12.755892753601074
    9. ' ' → logprob: -12.755892753601074
    10. '	return' → logprob: -12.880892753601074

Token 442: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.31860634684562683
    2. 'is' → logprob: -1.9436063766479492
    3. ' is' → logprob: -2.818606376647949
    4. '       ' → logprob: -3.443606376647949
    5. 'returns' → logprob: -4.818606376647949
    6. 'has' → logprob: -4.818606376647949
    7. ' return' → logprob: -4.943606376647949
    8. ' has' → logprob: -5.693606376647949
    9. '   ' → logprob: -6.568606376647949
    10. 'should' → logprob: -6.568606376647949

Token 443: ' cic' (ID: 30432)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.37746983766555786
    2. ' cic' → logprob: -1.252469778060913
    3. '_c' → logprob: -4.752470016479492
    4. '   ' → logprob: -4.752470016479492
    5. ' c' → logprob: -5.627470016479492
    6. ' ' → logprob: -6.252470016479492
    7. ' return' → logprob: -6.752470016479492
    8. '_' → logprob: -7.252470016479492
    9. '<|end|>' → logprob: -7.627470016479492
    10. '    ' → logprob: -7.877470016479492

Token 444: 'adas' (ID: 3921)
  Prédit: 'adas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adas' → logprob: -0.000517886015586555
    2. 'ada' → logprob: -7.625517845153809
    3. 'ad' → logprob: -10.625517845153809
    4. 'a' → logprob: -13.375517845153809
    5. '
' → logprob: -14.375517845153809
    6. 'ads' → logprob: -14.500517845153809
    7. '

' → logprob: -14.500517845153809
    8. '#' → logprob: -14.875517845153809
    9. '   ' → logprob: -15.000517845153809
    10. '```' → logprob: -15.000517845153809

Token 445: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.283575177192688
    2. '
' → logprob: -1.408575177192688
    3. 'return' → logprob: -6.408575057983398
    4. '        
' → logprob: -7.658575057983398
    5. '
' → logprob: -9.283575057983398
    6. ' return' → logprob: -9.533575057983398
    7. '<|end|>' → logprob: -9.658575057983398
    8. '   ' → logprob: -11.658575057983398
    9. '  
' → logprob: -11.658575057983398
    10. '    
' → logprob: -11.783575057983398

Token 446: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.3869442939758301
    2. ' problem' → logprob: -1.13694429397583
    3. 'the' → logprob: -10.511943817138672
    4. ' assumption' → logprob: -11.261943817138672
    5. 'ass' → logprob: -11.511943817138672
    6. ' the' → logprob: -11.636943817138672
    7. ' definition' → logprob: -12.261943817138672
    8. 'definition' → logprob: -12.261943817138672
    9. '(problem' → logprob: -13.011943817138672
    10. ' design' → logprob: -14.386943817138672

Token 447: ' statement' (ID: 9710)
  Prédit: 'statement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'statement' → logprob: -0.0027116762939840555
    2. ' statement' → logprob: -6.002711772918701
    3. 'description' → logprob: -9.127711296081543
    4. 'context' → logprob: -10.502711296081543
    5. '_statement' → logprob: -10.752711296081543
    6. 'state' → logprob: -10.752711296081543
    7. 'definition' → logprob: -10.877711296081543
    8. 'stat' → logprob: -11.377711296081543
    9. 'comment' → logprob: -11.502711296081543
    10. '   ' → logprob: -13.002711296081543

Token 448: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.424530435353518e-05
    2. 'return' → logprob: -9.625094413757324
    3. '
' → logprob: -10.750094413757324
    4. ' return' → logprob: -12.250094413757324
    5. '        
' → logprob: -14.000094413757324
    6. '   ' → logprob: -14.500094413757324
    7. '           ' → logprob: -15.625094413757324
    8. '<|end|>' → logprob: -16.750093460083008
    9. '      ' → logprob: -17.000093460083008
    10. '  
' → logprob: -17.250093460083008

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030424181022681296
    2. 'return' → logprob: -8.125304222106934
    3. ' return' → logprob: -12.125304222106934
    4. '
' → logprob: -13.500304222106934
    5. '   ' → logprob: -13.875304222106934
    6. '```' → logprob: -15.375304222106934
    7. '        
' → logprob: -16.37530517578125
    8. '      ' → logprob: -17.00030517578125
    9. '           ' → logprob: -17.12530517578125
    10. '	' → logprob: -17.37530517578125

Token 450: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3150734603404999
    2. '       ' → logprob: -1.3150734901428223
    3. ' return' → logprob: -6.315073490142822
    4. '   ' → logprob: -14.440073013305664
    5. '	return' → logprob: -14.690073013305664
    6. '{return' → logprob: -16.690073013305664
    7. '	' → logprob: -17.190073013305664
    8. '_return' → logprob: -17.815073013305664
    9. '           ' → logprob: -18.190073013305664
    10. '               ' → logprob: -18.315073013305664

Token 451: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47963374853134155
    2. '0' → logprob: -0.9796337485313416
    3. ' self' → logprob: -5.229633808135986
    4. ' ' → logprob: -8.604633331298828
    5. '	self' → logprob: -14.479633331298828
    6. '(self' → logprob: -14.479633331298828
    7. '   ' → logprob: -14.729633331298828
    8. '[self' → logprob: -14.854633331298828
    9. ' ' → logprob: -16.667133331298828
    10. '$self' → logprob: -16.792133331298828

Token 452: '.dp' (ID: 77268)
  Prédit: '.dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dp' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -13.12500286102295
    3. '	dp' → logprob: -15.37500286102295
    4. '.dt' → logprob: -15.75000286102295
    5. ' .' → logprob: -16.000003814697266
    6. '.df' → logprob: -16.625003814697266
    7. 'dp' → logprob: -16.625003814697266
    8. '.ds' → logprob: -17.000003814697266
    9. '_dp' → logprob: -17.375003814697266
    10. '.dc' → logprob: -17.375003814697266

Token 453: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0011841575615108013
    2. '[-' → logprob: -6.751183986663818
    3. 'self' → logprob: -11.251184463500977
    4. '[' → logprob: -14.001184463500977
    5. '[
' → logprob: -17.251184463500977
    6. ' self' → logprob: -18.501184463500977
    7. '
' → logprob: -18.751184463500977
    8. '   ' → logprob: -19.251184463500977
    9. '(self' → logprob: -19.376184463500977
    10. '[len' → logprob: -19.751184463500977

Token 454: '.grid' (ID: 19269)
  Prédit: '.height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.000264315924141556
    2. '.grid' → logprob: -8.250264167785645
    3. 'height' → logprob: -12.875264167785645
    4. '.width' → logprob: -15.375264167785645
    5. '.' → logprob: -15.625264167785645
    6. '.rows' → logprob: -17.62526512145996
    7. ' .' → logprob: -18.50026512145996
    8. 'grid' → logprob: -18.62526512145996
    9. '.row' → logprob: -19.25026512145996
    10. '.depth' → logprob: -20.37526512145996

Token 455: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -1.3856492842023727e-06
    2. 'height' → logprob: -13.750000953674316
    3. '.' → logprob: -15.625000953674316
    4. ' .' → logprob: -18.000001907348633
    5. '.width' → logprob: -18.000001907348633
    6. '.row' → logprob: -18.750001907348633
    7. '.
' → logprob: -18.875001907348633
    8. ' height' → logprob: -19.750001907348633
    9. '-' → logprob: -20.375001907348633
    10. '.rows' → logprob: -20.625001907348633

Token 456: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1002146452665329
    2. ' -' → logprob: -2.350214719772339
    3. '   ' → logprob: -12.225214958190918
    4. ' ' → logprob: -13.350214958190918
    5. '1' → logprob: -14.350214958190918
    6. '       ' → logprob: -15.225214958190918
    7. '[' → logprob: -15.350214958190918
    8. ' ' → logprob: -15.725214958190918
    9. '  ' → logprob: -16.4752140045166
    10. '```' → logprob: -16.7252140045166

Token 457: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018006093159783632
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.0001802444458
    4. '```' → logprob: -16.000179290771484
    5. '<|end|>' → logprob: -16.250179290771484
    6. '2' → logprob: -18.375179290771484
    7. '
' → logprob: -19.125179290771484
    8. '       ' → logprob: -19.250179290771484
    9. '  ' → logprob: -20.000179290771484
    10. '0' → logprob: -20.125179290771484

Token 458: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.875015258789062
    4. '<|end|>' → logprob: -16.375015258789062
    5. '```' → logprob: -17.000015258789062
    6. '
' → logprob: -18.625015258789062
    7. '2' → logprob: -19.000015258789062
    8. '       ' → logprob: -19.375015258789062
    9. '  ' → logprob: -19.500015258789062
    10. '۱' → logprob: -19.812515258789062

Token 459: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.6656825866666622e-05
    2. ' ][' → logprob: -10.62502670288086
    3. ']' → logprob: -13.87502670288086
    4. '[self' → logprob: -14.37502670288086
    5. '   ' → logprob: -15.37502670288086
    6. '()][' → logprob: -16.12502670288086
    7. '"][' → logprob: -16.25002670288086
    8. '       ' → logprob: -16.25002670288086
    9. ''][' → logprob: -16.87502670288086
    10. ',' → logprob: -17.00002670288086

Token 460: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011724866926670074
    2. ' self' → logprob: -6.7511725425720215
    3. '   ' → logprob: -13.626172065734863
    4. '       ' → logprob: -14.626172065734863
    5. '           ' → logprob: -15.126172065734863
    6. '(self' → logprob: -15.876172065734863
    7. '               ' → logprob: -16.37617301940918
    8. '	self' → logprob: -17.12617301940918
    9. ' ' → logprob: -17.50117301940918
    10. '                   ' → logprob: -17.75117301940918

Token 461: '.grid' (ID: 19269)
  Prédit: '.width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.00016063073417171836
    2. '.grid' → logprob: -8.750160217285156
    3. '.' → logprob: -14.000160217285156
    4. '.height' → logprob: -14.250160217285156
    5. ' .' → logprob: -14.500160217285156
    6. 'width' → logprob: -16.875160217285156
    7. '       ' → logprob: -17.000160217285156
    8. '   ' → logprob: -17.375160217285156
    9. '.w' → logprob: -18.000160217285156
    10. '.col' → logprob: -18.375160217285156

Token 462: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.001709328847937286
    2. 'width' → logprob: -6.376709461212158
    3. '.height' → logprob: -13.376708984375
    4. ' width' → logprob: -13.376708984375
    5. '   ' → logprob: -14.001708984375
    6. '.' → logprob: -14.626708984375
    7. '	width' → logprob: -14.626708984375
    8. ' .' → logprob: -14.751708984375
    9. '       ' → logprob: -15.376708984375
    10. 'col' → logprob: -15.501708984375

Token 463: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.054891765117645264
    2. '-' → logprob: -2.92989182472229
    3. ']' → logprob: -11.929891586303711
    4. ' -
' → logprob: -13.804891586303711
    5. '<|end|>' → logprob: -13.929891586303711
    6. '1' → logprob: -14.929891586303711
    7. ' ' → logprob: -15.054891586303711
    8. ' ]' → logprob: -16.30489158630371
    9. '-
' → logprob: -16.55489158630371
    10. ')' → logprob: -16.80489158630371

Token 464: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.943783253314905e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.250059127807617
    4. '<|end|>' → logprob: -15.250059127807617
    5. '```' → logprob: -15.750059127807617
    6. '       ' → logprob: -17.812559127807617
    7. ']' → logprob: -18.062559127807617
    8. '۱' → logprob: -18.250059127807617
    9. '>' → logprob: -18.312559127807617
    10. '2' → logprob: -18.500059127807617

Token 465: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.250001907348633
    4. '```' → logprob: -16.750001907348633
    5. ']' → logprob: -17.750001907348633
    6. '۱' → logprob: -18.562501907348633
    7. '１' → logprob: -19.062501907348633
    8. '<|end|>' → logprob: -19.062501907348633
    9. '  ' → logprob: -19.375001907348633
    10. '2' → logprob: -19.500001907348633

Token 466: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020795092859771103
    2. ' ]' → logprob: -8.625207901000977
    3. ')' → logprob: -11.125207901000977
    4. ')]' → logprob: -12.125207901000977
    5. ']
' → logprob: -12.250207901000977
    6. '])' → logprob: -13.875207901000977
    7. '<|end|>' → logprob: -14.625207901000977
    8. '()]' → logprob: -14.750207901000977
    9. '}' → logprob: -15.000207901000977
    10. ']+' → logprob: -15.000207901000977

Token 467: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: ' Cic' (ID: 96235)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.9338199496269226
    2. 'Solution' → logprob: -2.3088200092315674
    3. ' Grid' → logprob: -2.4338200092315674
    4. ' Path' → logprob: -2.4338200092315674
    5. ' Test' → logprob: -2.5588200092315674
    6. ' unittest' → logprob: -2.8088200092315674
    7. 'C' → logprob: -3.1838200092315674
    8. ' Solver' → logprob: -3.3088200092315674
    9. 'Test' → logprob: -3.6838200092315674
    10. 'Path' → logprob: -4.183819770812988

Token 469: 'ada' (ID: 1194)
  Prédit: 'ada'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ada' → logprob: -3.190178904333152e-05
    2. 'adas' → logprob: -11.750031471252441
    3. 'ad' → logprob: -12.000031471252441
    4. 'Ada' → logprob: -12.875031471252441
    5. 'ata' → logprob: -13.250031471252441
    6. 'a' → logprob: -13.250031471252441
    7. ' ada' → logprob: -13.625031471252441
    8. 'ade' → logprob: -13.625031471252441
    9. '```' → logprob: -13.875031471252441
    10. 'ада' → logprob: -13.875031471252441

Token 470: 'Path' (ID: 2619)
  Prédit: 'Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -0.17368058860301971
    2. 'Path' → logprob: -2.923680543899536
    3. 'Sw' → logprob: -3.798680543899536
    4. 'C' → logprob: -4.298680782318115
    5. 'Ch' → logprob: -4.298680782318115
    6. 'Solver' → logprob: -4.798680782318115
    7. 'Exp' → logprob: -4.923680782318115
    8. 'Runner' → logprob: -5.298680782318115
    9. 'Escape' → logprob: -5.923680782318115
    10. 'Risk' → logprob: -6.048680782318115

Token 471: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -0.052580203860998154
    2. 'Solver' → logprob: -3.4275801181793213
    3. 'Cost' → logprob: -4.8025803565979
    4. ':' → logprob: -6.1775803565979
    5. 'finder' → logprob: -6.1775803565979
    6. 'Sum' → logprob: -6.3025803565979
    7. ':
' → logprob: -6.3025803565979
    8. 'Counter' → logprob: -7.3025803565979
    9. 'Calculator' → logprob: -7.4275803565979
    10. 'Optimizer' → logprob: -8.177579879760742

Token 472: 'Facade' (ID: 46826)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012571929953992367
    2. ':
' → logprob: -4.387571811676025
    3. '(C' → logprob: -10.512572288513184
    4. '(' → logprob: -11.262572288513184
    5. ':def' → logprob: -12.137572288513184
    6. ' :' → logprob: -12.387572288513184
    7. ':C' → logprob: -12.512572288513184
    8. ':

' → logprob: -13.012572288513184
    9. '(object' → logprob: -13.762572288513184
    10. '(Grid' → logprob: -13.887572288513184

Token 473: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003864630125463009
    2. ':
' → logprob: -7.8753862380981445
    3. ':def' → logprob: -12.500386238098145
    4. ':

' → logprob: -13.750386238098145
    5. ' :' → logprob: -14.500386238098145
    6. '():' → logprob: -15.000386238098145
    7. '(object' → logprob: -15.125386238098145
    8. '(' → logprob: -15.625386238098145
    9. 'def' → logprob: -17.25038719177246
    10. ':
' → logprob: -17.50038719177246

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045307583059184253
    2. ' def' → logprob: -8.375452995300293
    3. 'class' → logprob: -9.125452995300293
    4. 'def' → logprob: -9.750452995300293
    5. ':' → logprob: -11.375452995300293
    6. '```' → logprob: -11.375452995300293
    7. '    
' → logprob: -11.750452995300293
    8. ' class' → logprob: -12.000452995300293
    9. '<|end|>' → logprob: -12.125452995300293
    10. '
' → logprob: -12.375452995300293

Token 475: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.28989946842193604
    2. 'def' (adapté à ' def') → logprob: -1.539899468421936
    3. '   ' → logprob: -3.2898993492126465
    4. '	def' → logprob: -15.539899826049805
    5. '```' → logprob: -15.914899826049805
    6. 'de' → logprob: -15.914899826049805
    7. '@' → logprob: -16.039899826049805
    8. ' ' → logprob: -16.289899826049805
    9. ':def' → logprob: -16.289899826049805
    10. '    ' → logprob: -16.539899826049805

Token 476: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9370397329330444
    2. ' def' → logprob: -1.4370397329330444
    3. ' __' → logprob: -1.4370397329330444
    4. 'init' → logprob: -2.312039852142334
    5. '__' → logprob: -3.437039852142334
    6. ' init' → logprob: -6.812039852142334
    7. '_init' → logprob: -8.187039375305176
    8. '```' → logprob: -9.437039375305176
    9. '___' → logprob: -9.687039375305176
    10. 'staticmethod' → logprob: -9.812039375305176

Token 477: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'def' → logprob: -18.5
    3. 'ini' → logprob: -19.0
    4. ' init' → logprob: -19.5
    5. 'call' → logprob: -20.0
    6. 'int' → logprob: -20.75
    7. '_init' → logprob: -20.75
    8. '(init' → logprob: -21.625
    9. 'new' → logprob: -21.875
    10. '.init' → logprob: -22.125

Token 478: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0001227276516146958
    2. '__' → logprob: -9.250123023986816
    3. '__(
' → logprob: -10.625123023986816
    4. '__((' → logprob: -13.750123023986816
    5. '__('' → logprob: -14.375123023986816
    6. '___' → logprob: -15.625123023986816
    7. '__("' → logprob: -15.875123023986816
    8. '(self' → logprob: -16.3751220703125
    9. '_(' → logprob: -16.5001220703125
    10. '__(*' → logprob: -16.8751220703125

Token 479: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.180879816180095e-05
    2. '   ' → logprob: -10.750051498413086
    3. '
' → logprob: -11.000051498413086
    4. ' self' → logprob: -12.000051498413086
    5. '(self' → logprob: -12.875051498413086
    6. ')' → logprob: -13.375051498413086
    7. 'c' → logprob: -14.000051498413086
    8. ')(' → logprob: -14.875051498413086
    9. '__(' → logprob: -15.250051498413086
    10. 'C' → logprob: -15.375051498413086

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0070102945901453495
    2. 'self' → logprob: -5.007010459899902
    3. ' ,' → logprob: -9.132010459899902
    4. ',self' → logprob: -9.632010459899902
    5. '__,' → logprob: -9.882010459899902
    6. '(self' → logprob: -10.007010459899902
    7. ' self' → logprob: -11.507010459899902
    8. '   ' → logprob: -12.257010459899902
    9. '__(' → logprob: -13.007010459899902
    10. '<|end|>' → logprob: -13.257010459899902

Token 481: ' input' (ID: 3422)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.759807288646698
    2. 'self' → logprob: -1.6348073482513428
    3. 'grid' → logprob: -2.0098073482513428
    4. ' grid' → logprob: -2.8848073482513428
    5. ' height' → logprob: -3.0098073482513428
    6. 'input' → logprob: -3.3848073482513428
    7. ' self' → logprob: -3.7598073482513428
    8. '   ' → logprob: -4.134807109832764
    9. ' input' → logprob: -4.509807109832764
    10. 'c' → logprob: -4.509807109832764

Token 482: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.07956378161907196
    2. '_lines' → logprob: -2.579563856124878
    3. '_str' → logprob: -8.204564094543457
    4. ':' → logprob: -8.329564094543457
    5. '_strings' → logprob: -10.204564094543457
    6. '_text' → logprob: -10.454564094543457
    7. 'data' → logprob: -10.579564094543457
    8. '_list' → logprob: -11.079564094543457
    9. '_:' → logprob: -11.329564094543457
    10. '_' → logprob: -11.454564094543457

Token 483: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013251169584691525
    2. '):' → logprob: -4.388251304626465
    3. '):
' → logprob: -7.263251304626465
    4. ':list' → logprob: -11.388251304626465
    5. '   ' → logprob: -11.763251304626465
    6. ' :' → logprob: -11.763251304626465
    7. ')' → logprob: -11.888251304626465
    8. ' ):' → logprob: -12.888251304626465
    9. ':str' → logprob: -13.263251304626465
    10. '=None' → logprob: -14.263251304626465

Token 484: ' str' (ID: 989)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0015136697329580784
    2. ' list' → logprob: -7.001513481140137
    3. 'str' → logprob: -7.751513481140137
    4. ')' → logprob: -8.876513481140137
    5. '   ' → logprob: -11.001513481140137
    6. 'List' → logprob: -12.126513481140137
    7. '):
' → logprob: -12.626513481140137
    8. '[list' → logprob: -12.876513481140137
    9. '```' → logprob: -13.501513481140137
    10. '(list' → logprob: -14.251513481140137

Token 485: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026561638340353966
    2. '):
' → logprob: -3.651561737060547
    3. ')' → logprob: -8.901561737060547
    4. ':' → logprob: -9.776561737060547
    5. '   ' → logprob: -10.026561737060547
    6. '):
' → logprob: -11.026561737060547
    7. '       ' → logprob: -12.026561737060547
    8. ' ):' → logprob: -13.901561737060547
    9. ',' → logprob: -15.151561737060547
    10. ' ' → logprob: -15.276561737060547

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.159660890465602e-05
    2. 'self' → logprob: -10.00007152557373
    3. ' lines' → logprob: -10.87507152557373
    4. ' self' → logprob: -13.37507152557373
    5. 'lines' → logprob: -13.37507152557373
    6. '   ' → logprob: -13.75007152557373
    7. '      ' → logprob: -13.87507152557373
    8. 'input' → logprob: -14.37507152557373
    9. 'data' → logprob: -14.87507152557373
    10. '```' → logprob: -15.50007152557373

Token 487: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' (adapté à ' lines') → logprob: -0.014009064994752407
    2. '       ' → logprob: -4.76400899887085
    3. ' lines' → logprob: -5.26400899887085
    4. 'data' → logprob: -9.139009475708008
    5. 'self' → logprob: -9.389009475708008
    6. 'input' → logprob: -11.764009475708008
    7. 'parts' → logprob: -12.639009475708008
    8. 'rows' → logprob: -14.139009475708008
    9. '   ' → logprob: -14.264009475708008
    10. '	lines' → logprob: -14.389009475708008

Token 488: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327077746391296
    2. '=' → logprob: -1.3132708072662354
    3. '=line' → logprob: -12.688270568847656
    4. '(lines' → logprob: -13.063270568847656
    5. '   ' → logprob: -14.063270568847656
    6. '_lines' → logprob: -14.313270568847656
    7. '=self' → logprob: -14.563270568847656
    8. 'lines' → logprob: -15.188270568847656
    9. '	' → logprob: -15.188270568847656
    10. '＝' → logprob: -15.438270568847656

Token 489: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001502717612311244
    2. ' input' → logprob: -6.501502513885498
    3. '[input' → logprob: -15.251502990722656
    4. '   ' → logprob: -16.126502990722656
    5. '[' → logprob: -18.251502990722656
    6. '	input' → logprob: -18.376502990722656
    7. '<input' → logprob: -19.376502990722656
    8. '(input' → logprob: -19.376502990722656
    9. ' [' → logprob: -19.626502990722656
    10. 'inputs' → logprob: -19.876502990722656

Token 490: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.00023631771910004318
    2. '_lines' → logprob: -9.000236511230469
    3. '=' → logprob: -10.500236511230469
    4. '_' → logprob: -11.125236511230469
    5. ' =' → logprob: -11.250236511230469
    6. 'data' → logprob: -11.250236511230469
    7. '().' → logprob: -11.375236511230469
    8. '=_' → logprob: -11.750236511230469
    9. '._' → logprob: -12.875236511230469
    10. '()' → logprob: -13.125236511230469

Token 491: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.04575817286968231
    2. '().' → logprob: -3.9207582473754883
    3. '.' → logprob: -4.295758247375488
    4. '.split' → logprob: -4.545758247375488
    5. '.rstrip' → logprob: -8.295758247375488
    6. ' .' → logprob: -8.420758247375488
    7. 'strip' → logprob: -8.920758247375488
    8. 'split' → logprob: -10.420758247375488
    9. '   ' → logprob: -10.920758247375488
    10. '.s' → logprob: -13.170758247375488

Token 492: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12693220376968384
    2. '()' → logprob: -2.126932144165039
    3. '(' → logprob: -13.751932144165039
    4. '()\' → logprob: -14.001932144165039
    5. '()`' → logprob: -14.626932144165039
    6. '()
' → logprob: -14.751932144165039
    7. '（）' → logprob: -15.501932144165039
    8. '().__' → logprob: -15.626932144165039
    9. ' ()' → logprob: -15.751932144165039
    10. '(),' → logprob: -15.751932144165039

Token 493: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.375
    3. '(split' → logprob: -18.875
    4. 'strip' → logprob: -19.25
    5. 'lines' → logprob: -19.375
    6. 'spl' → logprob: -19.5
    7. '```' → logprob: -20.75
    8. 'rstrip' → logprob: -21.125
    9. '.split' → logprob: -21.625
    10. 'plit' → logprob: -22.125

Token 494: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.17095807194709778
    2. 'lines' → logprob: -1.9209580421447754
    3. '("\' → logprob: -4.670958042144775
    4. '()' → logprob: -6.670958042144775
    5. ''\' → logprob: -10.545958518981934
    6. '(' → logprob: -11.545958518981934
    7. '()\' → logprob: -11.920958518981934
    8. '()
' → logprob: -12.920958518981934
    9. '"\' → logprob: -14.670958518981934
    10. '('' → logprob: -15.170958518981934

Token 495: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011076119728386402
    2. '\n' → logprob: -4.511075973510742
    3. '
' → logprob: -11.136075973510742
    4. ''\' → logprob: -11.636075973510742
    5. ')' → logprob: -13.636075973510742
    6. 'newline' → logprob: -13.636075973510742
    7. '\' → logprob: -14.136075973510742
    8. ''n' → logprob: -14.886075973510742
    9. '\
' → logprob: -15.136075973510742
    10. ')n' → logprob: -15.386075973510742

Token 496: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.25332018733024597
    2. ')' → logprob: -1.5033202171325684
    3. '')
' → logprob: -6.878320217132568
    4. '")' → logprob: -8.25331974029541
    5. ')
' → logprob: -9.50331974029541
    6. '       ' → logprob: -11.12831974029541
    7. '`)' → logprob: -12.87831974029541
    8. ']' → logprob: -13.00331974029541
    9. '')
' → logprob: -13.25331974029541
    10. '   ' → logprob: -14.00331974029541

Token 497: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5948975682258606
    2. 'height' → logprob: -1.0948975086212158
    3. 'self' → logprob: -2.344897508621216
    4. ' height' → logprob: -4.219897747039795
    5. ' self' → logprob: -5.844897747039795
    6. 'h' → logprob: -8.344897270202637
    7. '```' → logprob: -10.469897270202637
    8. 'n' → logprob: -10.844897270202637
    9. '   ' → logprob: -11.094897270202637
    10. '(height' → logprob: -11.844897270202637

Token 498: ' h' (ID: 312)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.14430522918701172
    2. 'h' (adapté à ' h') → logprob: -2.1443052291870117
    3. 'H' → logprob: -4.269305229187012
    4. 'self' → logprob: -6.519305229187012
    5. 'dimensions' → logprob: -7.144305229187012
    6. 'dims' → logprob: -7.894305229187012
    7. '       ' → logprob: -8.519305229187012
    8. 'hw' → logprob: -9.269305229187012
    9. 'header' → logprob: -9.269305229187012
    10. 'size' → logprob: -9.519305229187012

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34236055612564087
    2. '=' → logprob: -1.467360496520996
    3. ' =' → logprob: -2.842360496520996
    4. '=int' → logprob: -7.717360496520996
    5. '<|end|>' → logprob: -9.217360496520996
    6. '   ' → logprob: -9.467360496520996
    7. ' ,' → logprob: -9.592360496520996
    8. 't' → logprob: -9.967360496520996
    9. '       ' → logprob: -9.967360496520996
    10. '        ' → logprob: -10.092360496520996

Token 500: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.12702985107898712
    2. ' w' → logprob: -2.1270298957824707
    3. '<|end|>' → logprob: -9.502029418945312
    4. ' ' → logprob: -10.752029418945312
    5. ' 
' → logprob: -12.877029418945312
    6. '    ' → logprob: -14.127029418945312
    7. '*w' → logprob: -14.127029418945312
    8. 'width' → logprob: -14.877029418945312
    9. '  ' → logprob: -15.002029418945312
    10. '	w' → logprob: -15.877029418945312

Token 501: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869096040725708
    2. ' =' → logprob: -1.1369096040725708
    3. ',' → logprob: -10.261909484863281
    4. '<|end|>' → logprob: -13.511909484863281
    5. '=

' → logprob: -14.386909484863281
    6. ')' → logprob: -14.386909484863281
    7. ' ' → logprob: -14.886909484863281
    8. ')=' → logprob: -15.511909484863281
    9. '=int' → logprob: -15.636909484863281
    10. ' =
' → logprob: -16.51190948486328

Token 502: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6932010650634766
    2. ' map' → logprob: -0.6932010650634766
    3. ' lines' → logprob: -11.068201065063477
    4. 'lines' → logprob: -11.193201065063477
    5. 'int' → logprob: -11.568201065063477
    6. '(map' → logprob: -11.943201065063477
    7. '   ' → logprob: -12.568201065063477
    8. '[' → logprob: -12.818201065063477
    9. ' [' → logprob: -14.068201065063477
    10. '	map' → logprob: -15.068201065063477

Token 503: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.052377623040229e-05
    2. 'int' → logprob: -9.750070571899414
    3. '(' → logprob: -11.375070571899414
    4. '(str' → logprob: -15.250070571899414
    5. '(
' → logprob: -15.750070571899414
    6. '[int' → logprob: -16.000070571899414
    7. '<int' → logprob: -16.500070571899414
    8. ' int' → logprob: -16.875070571899414
    9. '=int' → logprob: -17.000070571899414
    10. ' (' → logprob: -17.500070571899414

Token 504: ',' (ID: 11)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0011748670367524028
    2. ',' → logprob: -7.1261749267578125
    3. ' lines' → logprob: -8.376174926757812
    4. 'lines' → logprob: -9.251174926757812
    5. ')' → logprob: -10.501174926757812
    6. ' (' → logprob: -12.376174926757812
    7. '	lines' → logprob: -12.376174926757812
    8. '(' → logprob: -12.501174926757812
    9. ')(' → logprob: -13.001174926757812
    10. ' ,' → logprob: -13.501174926757812

Token 505: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.12702785432338715
    2. ' lines' → logprob: -2.127027750015259
    3. '(lines' → logprob: -9.25202751159668
    4. '	lines' → logprob: -12.62702751159668
    5. 'line' → logprob: -15.62702751159668
    6. '   ' → logprob: -15.62702751159668
    7. ')' → logprob: -15.75202751159668
    8. '.lines' → logprob: -16.50202751159668
    9. ' ' → logprob: -17.12702751159668
    10. '_lines' → logprob: -17.25202751159668

Token 506: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.259079363080673e-05
    2. '()[' → logprob: -11.875012397766113
    3. '(' → logprob: -12.375012397766113
    4. '[
' → logprob: -14.375012397766113
    5. ')[' → logprob: -14.625012397766113
    6. ')' → logprob: -15.875012397766113
    7. '   ' → logprob: -16.62501335144043
    8. '```' → logprob: -16.75001335144043
    9. ' [' → logprob: -17.12501335144043
    10. '0' → logprob: -17.25001335144043

Token 507: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005651841638609767
    2. '[' → logprob: -7.500565052032471
    3. ' ' → logprob: -11.625565528869629
    4. '   ' → logprob: -13.250565528869629
    5. '1' → logprob: -14.250565528869629
    6. ')' → logprob: -15.750565528869629
    7. '(' → logprob: -16.563064575195312
    8. '    ' → logprob: -16.625564575195312
    9. '  ' → logprob: -16.625564575195312
    10. '       ' → logprob: -16.688064575195312

Token 508: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.009548296220600605
    2. '().' → logprob: -5.009548187255859
    3. '.split' → logprob: -6.134548187255859
    4. ' ].' → logprob: -7.759548187255859
    5. ']' → logprob: -10.00954818725586
    6. ').' → logprob: -10.13454818725586
    7. '()].' → logprob: -10.13454818725586
    8. ' .' → logprob: -10.13454818725586
    9. ''].' → logprob: -10.25954818725586
    10. '.' → logprob: -10.88454818725586

Token 509: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005538671393878758
    2. 'strip' → logprob: -7.500554084777832
    3. '(split' → logprob: -14.500554084777832
    4. ' split' → logprob: -15.125554084777832
    5. 'spl' → logprob: -17.250553131103516
    6. 'rstrip' → logprob: -17.250553131103516
    7. 'plit' → logprob: -18.500553131103516
    8. '.split' → logprob: -19.250553131103516
    9. ' ' → logprob: -19.500553131103516
    10. '```' → logprob: -19.750553131103516

Token 510: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004562799818813801
    2. '()' → logprob: -5.504562854766846
    3. '('' → logprob: -8.129562377929688
    4. ')' → logprob: -9.379562377929688
    5. '())
' → logprob: -9.879562377929688
    6. '(','' → logprob: -10.754562377929688
    7. ' ())' → logprob: -10.879562377929688
    8. '(' → logprob: -11.629562377929688
    9. '()))' → logprob: -13.629562377929688
    10. '())

' → logprob: -13.629562377929688

Token 511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07355820387601852
    2. '
' → logprob: -3.3235580921173096
    3. '        
' → logprob: -4.448558330535889
    4. '```' → logprob: -4.823558330535889
    5. '<|end|>' → logprob: -5.073558330535889
    6. 'self' → logprob: -5.573558330535889
    7. ',' → logprob: -6.823558330535889
    8. 'grid' → logprob: -7.073558330535889
    9. '[
' → logprob: -7.198558330535889
    10. '   ' → logprob: -7.448558330535889

Token 512: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.10803233087062836
    2. 'self' → logprob: -2.3580322265625
    3. ' grid' → logprob: -4.9830322265625
    4. '       ' → logprob: -7.7330322265625
    5. ' self' → logprob: -7.9830322265625
    6. 'data' → logprob: -9.3580322265625
    7. 'g' → logprob: -10.2330322265625
    8. 'c' → logprob: -11.1080322265625
    9. '   ' → logprob: -12.4830322265625
    10. 'gr' → logprob: -12.7330322265625

Token 513: '_lines' (ID: 42980)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -5.9795445849886164e-05
    2. ' =' → logprob: -10.500060081481934
    3. '_lines' → logprob: -11.000060081481934
    4. 'data' → logprob: -11.625060081481934
    5. '=' → logprob: -12.500060081481934
    6. '=_' → logprob: -13.875060081481934
    7. 'Data' → logprob: -14.250060081481934
    8. '_dat' → logprob: -15.000060081481934
    9. '_d' → logprob: -15.500060081481934
    10. '_' → logprob: -15.500060081481934

Token 514: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0788901224732399
    2. ' =' → logprob: -2.578890085220337
    3. '=

' → logprob: -16.078889846801758
    4. ',' → logprob: -17.203889846801758
    5. '=
' → logprob: -17.203889846801758
    6. '＝' → logprob: -17.578889846801758
    7. '=line' → logprob: -17.578889846801758
    8. '<|end|>' → logprob: -17.578889846801758
    9. '=[]' → logprob: -17.703889846801758
    10. '=data' → logprob: -17.828889846801758

Token 515: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.011049000546336174
    2. ' lines' → logprob: -4.511048793792725
    3. '	lines' → logprob: -14.261049270629883
    4. '(lines' → logprob: -15.011049270629883
    5. 'line' → logprob: -15.761049270629883
    6. '   ' → logprob: -15.761049270629883
    7. '[' → logprob: -18.386049270629883
    8. '.lines' → logprob: -18.761049270629883
    9. 'lin' → logprob: -18.761049270629883
    10. 'list' → logprob: -18.886049270629883

Token 516: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016062406823039055
    2. '1' → logprob: -4.141062259674072
    3. '```' → logprob: -11.51606273651123
    4. '
' → logprob: -11.64106273651123
    5. '[
' → logprob: -12.76606273651123
    6. 'from' → logprob: -12.89106273651123
    7. '   ' → logprob: -12.89106273651123
    8. '2' → logprob: -15.14106273651123
    9. ' [' → logprob: -15.26606273651123
    10. '=' → logprob: -15.76606273651123

Token 517: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.625004768371582
    4. '
' → logprob: -16.500003814697266
    5. '```' → logprob: -16.750003814697266
    6. '  ' → logprob: -18.125003814697266
    7. '    ' → logprob: -18.625003814697266
    8. 'from' → logprob: -18.625003814697266
    9. '۱' → logprob: -18.812503814697266
    10. '[' → logprob: -19.062503814697266

Token 518: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.00038813185528852046
    2. ':' → logprob: -7.875388145446777
    3. ' :]' → logprob: -11.875388145446777
    4. ':],' → logprob: -14.500388145446777
    5. ']' → logprob: -15.750388145446777
    6. ':]

' → logprob: -15.875388145446777
    7. ' :' → logprob: -16.25038719177246
    8. ':]
' → logprob: -17.00038719177246
    9. ':].' → logprob: -17.00038719177246
    10. ':h' → logprob: -17.12538719177246

Token 519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026528671383857727
    2. 'self' → logprob: -3.6515285968780518
    3. ' self' → logprob: -8.901528358459473
    4. '   ' → logprob: -9.901528358459473
    5. '
' → logprob: -10.401528358459473
    6. '        
' → logprob: -11.776528358459473
    7. '<|end|>' → logprob: -13.776528358459473
    8. '```' → logprob: -14.151528358459473
    9. '      ' → logprob: -14.776528358459473
    10. '           ' → logprob: -15.151528358459473

Token 520: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008124204352498055
    2. ' self' → logprob: -5.008124351501465
    3. '       ' → logprob: -6.883124351501465
    4. 'grid' → logprob: -8.008124351501465
    5. '   ' → logprob: -11.008124351501465
    6. '
' → logprob: -11.008124351501465
    7. ' grid' → logprob: -12.258124351501465
    8. '        
' → logprob: -12.758124351501465
    9. 'c' → logprob: -12.883124351501465
    10. 'def' → logprob: -13.508124351501465

Token 521: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.12790894508361816
    2. '.c' → logprob: -2.127908945083618
    3. 'grid' → logprob: -7.127908706665039
    4. '.height' → logprob: -9.252908706665039
    5. ' .' → logprob: -10.877908706665039
    6. 'c' → logprob: -11.127908706665039
    7. '   ' → logprob: -11.502908706665039
    8. '_grid' → logprob: -12.252908706665039
    9. '.gr' → logprob: -12.377908706665039
    10. '.' → logprob: -12.502908706665039

Token 522: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868734836578369
    2. ' =' → logprob: -1.136873483657837
    3. '=C' → logprob: -13.011873245239258
    4. 'C' → logprob: -16.261873245239258
    5. '=
' → logprob: -16.636873245239258
    6. '＝' → logprob: -17.761873245239258
    7. ' =
' → logprob: -17.886873245239258
    8. ' ' → logprob: -18.261873245239258
    9. '   ' → logprob: -18.636873245239258
    10. '=

' → logprob: -19.011873245239258

Token 523: ' Cic' (ID: 96235)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.002476135268807411
    2. ' Cic' → logprob: -6.002476215362549
    3. ' C' → logprob: -15.87747573852539
    4. '	C' → logprob: -16.12747573852539
    5. ' ' → logprob: -16.62747573852539
    6. 'Grid' → logprob: -17.12747573852539
    7. '   ' → logprob: -17.25247573852539
    8. '<C' → logprob: -19.25247573852539
    9. 'c' → logprob: -19.25247573852539
    10. '_C' → logprob: -19.75247573852539

Token 524: 'ada' (ID: 1194)
  Prédit: 'ada'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ada' → logprob: -3.128163257315464e-07
    2. 'da' → logprob: -16.75
    3. 'a' → logprob: -17.0
    4. 'ада' → logprob: -17.0
    5. 'ida' → logprob: -17.125
    6. 'adas' → logprob: -17.25
    7. 'ad' → logprob: -18.25
    8. 'ata' → logprob: -18.25
    9. 'Ada' → logprob: -18.5
    10. 'C' → logprob: -18.875

Token 525: 'Grid' (ID: 5351)
  Prédit: 'Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -6.704273118884885e-07
    2. 'grid' → logprob: -14.375000953674316
    3. 'C' → logprob: -17.625
    4. '<Grid' → logprob: -18.125
    5. 'Gr' → logprob: -18.375
    6. '_grid' → logprob: -18.625
    7. '	Grid' → logprob: -19.25
    8. ' Grid' → logprob: -19.75
    9. 'GRID' → logprob: -19.75
    10. ' grid' → logprob: -19.875

Token 526: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -14.000001907348633
    3. ' (' → logprob: -14.750001907348633
    4. 'h' → logprob: -15.500001907348633
    5. '(
' → logprob: -16.000001907348633
    6. '(H' → logprob: -18.375001907348633
    7. '       ' → logprob: -18.500001907348633
    8. '(height' → logprob: -18.750001907348633
    9. '((' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.500001907348633

Token 527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009724444826133549
    2. ',w' → logprob: -7.000972270965576
    3. ' ,' → logprob: -9.750972747802734
    4. 'w' → logprob: -13.375972747802734
    5. ',
' → logprob: -14.000972747802734
    6. ')' → logprob: -16.125972747802734
    7. ' w' → logprob: -16.125972747802734
    8. '=' → logprob: -17.375972747802734
    9. '   ' → logprob: -17.875972747802734
    10. '‌,' → logprob: -17.875972747802734

Token 528: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.03804171830415726
    2. ' w' → logprob: -3.288041830062866
    3. '   ' → logprob: -15.663042068481445
    4. '    ' → logprob: -16.663042068481445
    5. '       ' → logprob: -16.913042068481445
    6. '
' → logprob: -17.163042068481445
    7. '	w' → logprob: -18.288042068481445
    8. ' ' → logprob: -18.913042068481445
    9. '<|end|>' → logprob: -18.913042068481445
    10. '        ' → logprob: -19.038042068481445

Token 529: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.3458322731312364e-06
    2. ' ,' → logprob: -11.875007629394531
    3. ',
' → logprob: -15.125007629394531
    4. ')' → logprob: -19.37500762939453
    5. '       ' → logprob: -19.50000762939453
    6. 'grid' → logprob: -19.50000762939453
    7. ',

' → logprob: -19.50000762939453
    8. '   ' → logprob: -19.62500762939453
    9. '(grid' → logprob: -19.62500762939453
    10. '‌,' → logprob: -19.87500762939453

Token 530: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.00033546582562848926
    2. ' grid' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.500335693359375
    4. '	grid' → logprob: -18.250335693359375
    5. '(grid' → logprob: -18.750335693359375
    6. '       ' → logprob: -18.750335693359375
    7. ' ' → logprob: -19.625335693359375
    8. '           ' → logprob: -20.000335693359375
    9. '.grid' → logprob: -20.500335693359375
    10. '  ' → logprob: -21.375335693359375

Token 531: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.816093228830141e-06
    2. 'ines' → logprob: -13.12500286102295
    3. 'lines' → logprob: -14.50000286102295
    4. '_' → logprob: -16.250001907348633
    5. 'es' → logprob: -16.250001907348633
    6. '_l' → logprob: -18.750001907348633
    7. '.lines' → logprob: -18.875001907348633
    8. 's' → logprob: -19.125001907348633
    9. 'Lines' → logprob: -19.375001907348633
    10. '__' → logprob: -19.375001907348633

Token 532: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. '<|end|>' → logprob: -13.125004768371582
    3. ' )' → logprob: -13.500004768371582
    4. ')
' → logprob: -14.750004768371582
    5. '   ' → logprob: -15.000004768371582
    6. '       ' → logprob: -15.625004768371582
    7. ')

' → logprob: -17.375003814697266
    8. '}' → logprob: -17.375003814697266
    9. ' ' → logprob: -17.500003814697266
    10. ')}' → logprob: -17.750003814697266

Token 533: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025439854711294174
    2. '
' → logprob: -4.400439739227295
    3. 'def' → logprob: -5.150439739227295
    4. '       ' → logprob: -5.275439739227295
    5. '<|end|>' → logprob: -6.525439739227295
    6. ' def' → logprob: -8.525440216064453
    7. 'self' → logprob: -9.025440216064453
    8. '    
' → logprob: -9.775440216064453
    9. '```' → logprob: -10.650440216064453
    10. ' ' → logprob: -11.150440216064453

Token 534: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011188228614628315
    2. 'def' → logprob: -4.63618803024292
    3. ' self' → logprob: -7.13618803024292
    4. '<|end|>' → logprob: -7.76118803024292
    5. '       ' → logprob: -9.511188507080078
    6. '
' → logprob: -9.511188507080078
    7. '   ' → logprob: -11.011188507080078
    8. '@property' → logprob: -11.511188507080078
    9. '<|end|>' → logprob: -11.761188507080078
    10. ' def' → logprob: -12.136188507080078

Token 535: '.cal' (ID: 40302)
  Prédit: '.cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -0.492815762758255
    2. '.path' → logprob: -1.4928157329559326
    3. '.cost' → logprob: -2.4928157329559326
    4. 'calculator' → logprob: -3.3678157329559326
    5. 'path' → logprob: -4.742815971374512
    6. '.calc' → logprob: -4.742815971374512
    7. ' .' → logprob: -5.492815971374512
    8. '_cal' → logprob: -5.742815971374512
    9. '._' → logprob: -5.867815971374512
    10. '_path' → logprob: -5.867815971374512

Token 536: 'culator' (ID: 23033)
  Prédit: 'culator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culator' → logprob: -0.3873061239719391
    2. 'c' → logprob: -1.1373060941696167
    3. 'cul' → logprob: -8.262306213378906
    4. 'calculator' → logprob: -8.887306213378906
    5. ' c' → logprob: -11.887306213378906
    6. 'cular' → logprob: -12.137306213378906
    7. 'cc' → logprob: -12.137306213378906
    8. 'cl' → logprob: -12.637306213378906
    9. 'culation' → logprob: -13.512306213378906
    10. 'cd' → logprob: -13.512306213378906

Token 537: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020796209573746
    2. '=' → logprob: -2.350208044052124
    3. ' ' → logprob: -13.725208282470703
    4. ' =
' → logprob: -15.725208282470703
    5. '_' → logprob: -17.350208282470703
    6. '.' → logprob: -17.975208282470703
    7. ')' → logprob: -18.600208282470703
    8. ' ' → logprob: -18.600208282470703
    9. '=

' → logprob: -18.850208282470703
    10. '=create' → logprob: -18.850208282470703

Token 538: ' Path' (ID: 14027)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.06196768581867218
    2. ' Path' → logprob: -2.811967611312866
    3. '	Path' → logprob: -16.936967849731445
    4. '(Path' → logprob: -17.686967849731445
    5. '_Path' → logprob: -20.686967849731445
    6. '   ' → logprob: -20.811967849731445
    7. '@Path' → logprob: -20.811967849731445
    8. 'path' → logprob: -21.811967849731445
    9. 'PATH' → logprob: -22.061967849731445
    10. '_path' → logprob: -22.061967849731445

Token 539: 'Cost' (ID: 16815)
  Prédit: 'Cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cost' → logprob: 0.0
    2. 'cost' → logprob: -18.0
    3. 'Costs' → logprob: -18.875
    4. '_cost' → logprob: -18.875
    5. ' Cost' → logprob: -19.0
    6. 'C' → logprob: -19.0
    7. '_COST' → logprob: -20.375
    8. 'Calculator' → logprob: -21.375
    9. 'Costo' → logprob: -21.625
    10. 'Cos' → logprob: -21.75

Token 540: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -3.643152740551159e-05
    2. 'culator' → logprob: -10.625036239624023
    3. 'Cost' → logprob: -12.250036239624023
    4. 'calculator' → logprob: -12.500036239624023
    5. 'ulator' → logprob: -12.875036239624023
    6. ' Calculator' → logprob: -15.375036239624023
    7. 'ator' → logprob: -15.375036239624023
    8. 'C' → logprob: -15.750036239624023
    9. 'Cal' → logprob: -15.875036239624023
    10. 'Calc' → logprob: -16.250036239624023

Token 541: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -13.375003814697266
    3. '(
' → logprob: -13.375003814697266
    4. 'self' → logprob: -13.750003814697266
    5. ' self' → logprob: -18.375003814697266
    6. '(this' → logprob: -18.625003814697266
    7. ' (' → logprob: -18.875003814697266
    8. '(s' → logprob: -19.875003814697266
    9. '       ' → logprob: -20.500003814697266
    10. '[self' → logprob: -20.625003814697266

Token 542: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -4.4849443838757e-06
    2. '.' → logprob: -12.625004768371582
    3. 'grid' → logprob: -13.875004768371582
    4. ' .' → logprob: -16.625003814697266
    5. '	grid' → logprob: -18.500003814697266
    6. ').' → logprob: -18.625003814697266
    7. ' grid' → logprob: -18.625003814697266
    8. '.gr' → logprob: -19.625003814697266
    9. '.Grid' → logprob: -19.875003814697266
    10. ':grid' → logprob: -19.875003814697266

Token 543: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001462107611587271
    2. '<|end|>' → logprob: -9.12514591217041
    3. '   ' → logprob: -10.75014591217041
    4. ' ' → logprob: -11.75014591217041
    5. ' )' → logprob: -12.62514591217041
    6. 'def' → logprob: -13.75014591217041
    7. '<|end|>' → logprob: -13.75014591217041
    8. ')
' → logprob: -14.00014591217041
    9. ')

' → logprob: -14.62514591217041
    10. '}' → logprob: -15.00014591217041

Token 544: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2340656816959381
    2. 'def' → logprob: -1.6090656518936157
    3. ' def' → logprob: -5.359065532684326
    4. '
' → logprob: -5.609065532684326
    5. '<|end|>' → logprob: -9.234066009521484
    6. '    
' → logprob: -9.359066009521484
    7. ' ' → logprob: -10.609066009521484
    8. '

' → logprob: -11.609066009521484
    9. '	def' → logprob: -11.609066009521484
    10. '<|end|>' → logprob: -12.109066009521484

Token 545: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009181279456242919
    2. ' def' → logprob: -7.000917911529541
    3. '   ' → logprob: -12.0009183883667
    4. '	def' → logprob: -15.5009183883667
    5. '
' → logprob: -16.375917434692383
    6. ' ' → logprob: -16.750917434692383
    7. 'de' → logprob: -16.875917434692383
    8. '    
' → logprob: -17.875917434692383
    9. '```' → logprob: -18.125917434692383
    10. 'd' → logprob: -18.875917434692383

Token 546: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.6565449833869934
    2. ' find' → logprob: -1.0315449237823486
    3. 'min' → logprob: -2.2815449237823486
    4. ' min' → logprob: -4.031545162200928
    5. 'get' → logprob: -6.656545162200928
    6. ' get' → logprob: -6.906545162200928
    7. ' minimal' → logprob: -7.531545162200928
    8. ' minimum' → logprob: -7.656545162200928
    9. 'minimum' → logprob: -7.656545162200928
    10. 'compute' → logprob: -7.906545162200928

Token 547: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.023724300786852837
    2. '_path' → logprob: -3.898724317550659
    3. '_' → logprob: -6.64872407913208
    4. '_best' → logprob: -7.02372407913208
    5. '_max' → logprob: -8.148724555969238
    6. '_low' → logprob: -8.273724555969238
    7. '_opt' → logprob: -8.773724555969238
    8. '_c' → logprob: -9.023724555969238
    9. 'min' → logprob: -9.898724555969238
    10. '_paths' → logprob: -10.273724555969238

Token 548: '_un' (ID: 11119)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4056866765022278
    2. '_c' → logprob: -1.155686616897583
    3. '_path' → logprob: -4.030686855316162
    4. '_cost' → logprob: -7.405686855316162
    5. ' _' → logprob: -8.905686378479004
    6. '_
' → logprob: -10.655686378479004
    7. 'c' → logprob: -11.530686378479004
    8. '__' → logprob: -11.655686378479004
    9. '}_' → logprob: -11.905686378479004
    10. ')_' → logprob: -12.155686378479004

Token 549: 'pleasant' (ID: 69525)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.549586832523346
    2. 'blocked' → logprob: -0.924586832523346
    3. 'dert' → logprob: -5.174586772918701
    4. 'safe' → logprob: -5.424586772918701
    5. 'h' → logprob: -6.299586772918701
    6. 'd' → logprob: -6.549586772918701
    7. 'block' → logprob: -6.799586772918701
    8. 'covered' → logprob: -6.924586772918701
    9. 'def' → logprob: -7.049586772918701
    10. 'finished' → logprob: -7.174586772918701

Token 550: 'ness' (ID: 2816)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.005459881853312254
    2. 'ness' → logprob: -5.255459785461426
    3. '_cost' → logprob: -9.630459785461426
    4. '_paths' → logprob: -9.630459785461426
    5. '_' → logprob: -10.130459785461426
    6. 'path' → logprob: -10.630459785461426
    7. '_c' → logprob: -11.380459785461426
    8. '_value' → logprob: -12.880459785461426
    9. '_score' → logprob: -12.880459785461426
    10. '_trip' → logprob: -12.880459785461426

Token 551: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01479667704552412
    2. '_path' → logprob: -4.389796733856201
    3. '_cost' → logprob: -6.514796733856201
    4. '(' → logprob: -7.764796733856201
    5. '()' → logprob: -8.389796257019043
    6. 'self' → logprob: -9.139796257019043
    7. 'cost' → logprob: -11.139796257019043
    8. 'path' → logprob: -11.764796257019043
    9. '_' → logprob: -12.014796257019043
    10. '_score' → logprob: -12.514796257019043

Token 552: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31713977456092834
    2. ')' → logprob: -1.317139744758606
    3. '):
' → logprob: -6.192139625549316
    4. 'self' → logprob: -6.817139625549316
    5. '(self' → logprob: -7.567139625549316
    6. '   ' → logprob: -9.067139625549316
    7. ' ):' → logprob: -10.692139625549316
    8. '       ' → logprob: -10.942139625549316
    9. '):
' → logprob: -10.942139625549316
    10. ')->' → logprob: -11.067139625549316

Token 553: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00014299227041192353
    2. '(' → logprob: -9.000143051147461
    3. '():' → logprob: -11.750143051147461
    4. ' (' → logprob: -12.250143051147461
    5. '   ' → logprob: -12.875143051147461
    6. 'self' → logprob: -13.500143051147461
    7. '       ' → logprob: -13.750143051147461
    8. '(s' → logprob: -14.000143051147461
    9. '():
' → logprob: -14.750143051147461
    10. '(
' → logprob: -16.00014305114746

Token 554: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25425422191619873
    2. ' int' → logprob: -1.5042542219161987
    3. 'self' → logprob: -6.379254341125488
    4. ' self' → logprob: -7.379254341125488
    5. '(int' → logprob: -13.629254341125488
    6. '   ' → logprob: -14.504254341125488
    7. ' ' → logprob: -15.879254341125488
    8. '<int' → logprob: -16.629253387451172
    9. ':int' → logprob: -16.629253387451172
    10. '[int' → logprob: -18.004253387451172

Token 555: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.626685380935669
    2. '(self' → logprob: -1.126685380935669
    3. '(
' → logprob: -2.001685380935669
    4. '():' → logprob: -6.00168514251709
    5. '()' → logprob: -6.37668514251709
    6. '():
' → logprob: -6.50168514251709
    7. '       ' → logprob: -8.00168514251709
    8. '   ' → logprob: -8.62668514251709
    9. ':' → logprob: -8.75168514251709
    10. '(
' → logprob: -10.87668514251709

Token 556: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02923218533396721
    2. ' return' → logprob: -4.029232025146484
    3. 'return' → logprob: -4.529232025146484
    4. '   ' → logprob: -8.904232025146484
    5. '
' → logprob: -9.404232025146484
    6. '	return' → logprob: -11.904232025146484
    7. '```' → logprob: -13.404232025146484
    8. '{return' → logprob: -13.904232025146484
    9. '           ' → logprob: -14.029232025146484
    10. '    ' → logprob: -14.154232025146484

Token 557: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0003709701995830983
    2. '       ' → logprob: -8.000370979309082
    3. ' return' → logprob: -10.250370979309082
    4. '   ' → logprob: -16.750370025634766
    5. '	return' → logprob: -17.625370025634766
    6. '{return' → logprob: -20.250370025634766
    7. '```' → logprob: -20.375370025634766
    8. 'self' → logprob: -21.625370025634766
    9. 'result' → logprob: -21.875370025634766
    10. '
' → logprob: -22.375370025634766

Token 558: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931471824645996
    2. 'self' → logprob: -0.6931471824645996
    3. '(self' → logprob: -17.568147659301758
    4. '   ' → logprob: -17.818147659301758
    5. '	self' → logprob: -18.318147659301758
    6. '       ' → logprob: -20.943147659301758
    7. ' ' → logprob: -21.068147659301758
    8. '
' → logprob: -21.068147659301758
    9. '[self' → logprob: -21.443147659301758
    10. ' ' → logprob: -21.693147659301758

Token 559: '.cal' (ID: 40302)
  Prédit: '.cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -15.000000953674316
    3. '	cal' → logprob: -15.625000953674316
    4. '.calc' → logprob: -17.0
    5. 'cal' → logprob: -17.25
    6. ' .' → logprob: -18.5
    7. '.Cal' → logprob: -18.75
    8. 'calculator' → logprob: -19.0
    9. '.calendar' → logprob: -19.5
    10. ').' → logprob: -20.375

Token 560: 'culator' (ID: 23033)
  Prédit: 'culator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culator' → logprob: -0.023257127031683922
    2. 'ulator' → logprob: -3.77325701713562
    3. 'calculator' → logprob: -12.1482572555542
    4. 'ator' → logprob: -12.6482572555542
    5. 'cul' → logprob: -13.5232572555542
    6. 'c' → logprob: -13.8982572555542
    7. 'ocator' → logprob: -14.6482572555542
    8. 'uator' → logprob: -15.8982572555542
    9. 'lator' → logprob: -16.523256301879883
    10. '   ' → logprob: -17.273256301879883

Token 561: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -1.0564331205387134e-05
    2. '.' → logprob: -11.50001049041748
    3. 'min' → logprob: -15.50001049041748
    4. '.max' → logprob: -16.750011444091797
    5. ' .' → logprob: -17.000011444091797
    6. '.m' → logprob: -17.125011444091797
    7. ' min' → logprob: -19.125011444091797
    8. '	min' → logprob: -20.750011444091797
    9. '.Min' → logprob: -21.000011444091797
    10. '.mi' → logprob: -21.500011444091797

Token 562: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.583550642360933e-05
    2. '_' → logprob: -10.250036239624023
    3. '_cost' → logprob: -14.750036239624023
    4. ' _' → logprob: -18.250036239624023
    5. '_path' → logprob: -18.875036239624023
    6. 'c' → logprob: -19.250036239624023
    7. ')_' → logprob: -19.625036239624023
    8. '_s' → logprob: -19.625036239624023
    9. '_C' → logprob: -20.000036239624023
    10. '‌' → logprob: -20.000036239624023

Token 563: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.00016027313540689647
    2. 'ipada' → logprob: -10.125160217285156
    3. 'iada' → logprob: -10.625160217285156
    4. 'imada' → logprob: -11.000160217285156
    5. 'icado' → logprob: -11.250160217285156
    6. 'atada' → logprob: -11.500160217285156
    7. 'cada' → logprob: -11.625160217285156
    8. 'itada' → logprob: -11.875160217285156
    9. 'i' → logprob: -12.125160217285156
    10. 'izada' → logprob: -12.250160217285156

Token 564: 'ada' (ID: 1194)
  Prédit: 'ada'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ada' → logprob: -1.259079363080673e-05
    2. 'ad' → logprob: -13.000012397766113
    3. 'adas' → logprob: -13.000012397766113
    4. 'ада' → logprob: -13.250012397766113
    5. 'a' → logprob: -13.375012397766113
    6. 'aca' → logprob: -14.250012397766113
    7. ' ada' → logprob: -14.250012397766113
    8. '[' → logprob: -14.500012397766113
    9. '_' → logprob: -14.500012397766113
    10. '```' → logprob: -15.125012397766113

Token 565: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -4.320199877838604e-07
    2. 'path' → logprob: -14.875
    3. '_p' → logprob: -17.625
    4. '_pat' → logprob: -18.375
    5. '_paths' → logprob: -18.625
    6. '_' → logprob: -19.75
    7. ' _' → logprob: -19.875
    8. '"path' → logprob: -20.0
    9. '_patch' → logprob: -20.5
    10. '_PATH' → logprob: -21.0

Token 566: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -7.896309739408025e-07
    2. 'cost' → logprob: -14.250000953674316
    3. '_COST' → logprob: -17.625
    4. 'Cost' → logprob: -18.25
    5. '_cos' → logprob: -18.75
    6. '_co' → logprob: -18.875
    7. '_c' → logprob: -19.25
    8. ' _' → logprob: -19.375
    9. '   ' → logprob: -20.125
    10. '
' → logprob: -20.25

Token 567: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009432652732357383
    2. '()
' → logprob: -7.000943183898926
    3. '(' → logprob: -11.000943183898926
    4. '()\' → logprob: -12.250943183898926
    5. '()

' → logprob: -12.375943183898926
    6. '(
' → logprob: -13.125943183898926
    7. '()`' → logprob: -14.500943183898926
    8. '()
' → logprob: -14.625943183898926
    9. '()+' → logprob: -14.625943183898926
    10. ' ()' → logprob: -14.625943183898926

Token 568: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 569: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.020595261827111244
    2. ' solve' → logprob: -4.020595073699951
    3. ' run' → logprob: -6.770595073699951
    4. ' test' → logprob: -7.270595073699951
    5. ' example' → logprob: -8.39559555053711
    6. ' find' → logprob: -8.52059555053711
    7. ' parse' → logprob: -9.64559555053711
    8. ' solution' → logprob: -9.77059555053711
    9. ' sample' → logprob: -11.14559555053711
    10. ' read' → logprob: -11.52059555053711

Token 570: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.236549335066229e-05
    2. '():
' → logprob: -11.375021934509277
    3. '()' → logprob: -12.000021934509277
    4. ' ():' → logprob: -12.375021934509277
    5. '(' → logprob: -15.250021934509277
    6. '():
' → logprob: -16.500022888183594
    7. '()>' → logprob: -16.750022888183594
    8. '(":' → logprob: -17.125022888183594
    9. '():

' → logprob: -18.000022888183594
    10. '()">' → logprob: -18.375022888183594

Token 571: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7754126191139221
    2. '   ' → logprob: -1.2754125595092773
    3. ' input' → logprob: -1.4004125595092773
    4. 'import' → logprob: -4.650412559509277
    5. ' if' → logprob: -5.900412559509277
    6. 'input' → logprob: -6.900412559509277
    7. ' data' → logprob: -9.150412559509277
    8. '```' → logprob: -9.775412559509277
    9. 'if' → logprob: -10.275412559509277
    10. ' code' → logprob: -10.400412559509277

Token 572: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08120688050985336
    2. 'import' (adapté à ' import') → logprob: -2.581206798553467
    3. ' input' → logprob: -6.331206798553467
    4. '   ' → logprob: -7.831206798553467
    5. 'input' → logprob: -8.956207275390625
    6. ' if' → logprob: -13.456207275390625
    7. ' data' → logprob: -13.706207275390625
    8. 'if' → logprob: -13.956207275390625
    9. ' imports' → logprob: -13.956207275390625
    10. '	import' → logprob: -14.081207275390625

Token 573: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -7.941850526549388e-06
    2. ' sys' → logprob: -11.750007629394531
    3. '=sys' → logprob: -18.00000762939453
    4. '	sys' → logprob: -20.00000762939453
    5. 'io' → logprob: -20.75000762939453
    6. '(sys' → logprob: -21.37500762939453
    7. 'math' → logprob: -22.75000762939453
    8. 'os' → logprob: -22.87500762939453
    9. 'stdin' → logprob: -23.37500762939453
    10. '```' → logprob: -23.62500762939453

Token 574: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0058024669997394085
    2. '
' → logprob: -5.630802631378174
    3. 'input' → logprob: -6.755802631378174
    4. '    
' → logprob: -7.005802631378174
    5. 'data' → logprob: -10.255802154541016
    6. ' input' → logprob: -10.380802154541016
    7. '<|end|>' → logprob: -10.505802154541016
    8. '    ' → logprob: -12.005802154541016
    9. '	input' → logprob: -12.505802154541016
    10. '   
' → logprob: -12.755802154541016

Token 575: '   ' (ID: 271)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.45459380745887756
    2. '   ' → logprob: -1.0795937776565552
    3. ' input' → logprob: -3.7045938968658447
    4. 'data' → logprob: -7.079593658447266
    5. ' data' → logprob: -10.704593658447266
    6. '	input' → logprob: -10.829593658447266
    7. ' lines' → logprob: -11.079593658447266
    8. 'lines' → logprob: -11.204593658447266
    9. '_input' → logprob: -11.329593658447266
    10. '<|end|>' → logprob: -12.204593658447266

Token 576: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.24166452884674072
    2. ' input' → logprob: -1.7416645288467407
    3. '   ' → logprob: -3.241664409637451
    4. 'data' → logprob: -8.11666488647461
    5. ' data' → logprob: -10.11666488647461
    6. ' lines' → logprob: -12.36666488647461
    7. '_input' → logprob: -12.49166488647461
    8. 'lines' → logprob: -12.61666488647461
    9. '	input' → logprob: -13.61666488647461
    10. 'inputs' → logprob: -14.61666488647461

Token 577: '_text' (ID: 9118)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.0012830912601202726
    2. '_' → logprob: -7.751283168792725
    3. ' =' → logprob: -8.001282691955566
    4. '_lines' → logprob: -8.001282691955566
    5. '=' → logprob: -9.126282691955566
    6. 'data' → logprob: -10.251282691955566
    7. '_=' → logprob: -10.376282691955566
    8. '=sys' → logprob: -13.126282691955566
    9. '_line' → logprob: -13.376282691955566
    10. 'Data' → logprob: -14.001282691955566

Token 578: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01822369173169136
    2. ' =' → logprob: -4.018223762512207
    3. '=sys' → logprob: -9.518223762512207
    4. '=
' → logprob: -16.26822280883789
    5. '=

' → logprob: -16.39322280883789
    6. '＝' → logprob: -17.64322280883789
    7. '_=' → logprob: -17.89322280883789
    8. '_' → logprob: -18.26822280883789
    9. ' =
' → logprob: -18.64322280883789
    10. '.=' → logprob: -19.14322280883789

Token 579: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12692831456661224
    2. ' sys' → logprob: -2.1269283294677734
    3. '	sys' → logprob: -15.876928329467773
    4. '=sys' → logprob: -16.376928329467773
    5. '(sys' → logprob: -17.626928329467773
    6. '   ' → logprob: -19.001928329467773
    7. '_sys' → logprob: -20.376928329467773
    8. '.sys' → logprob: -20.501928329467773
    9. ' ' → logprob: -22.001928329467773
    10. '/sys' → logprob: -22.501928329467773

Token 580: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.803360495017841e-05
    2. '.' → logprob: -9.625078201293945
    3. '.argv' → logprob: -12.000078201293945
    4. '.std' → logprob: -13.125078201293945
    5. 'stdin' → logprob: -13.250078201293945
    6. '.stdout' → logprob: -13.500078201293945
    7. '.st' → logprob: -15.250078201293945
    8. ' .' → logprob: -16.625078201293945
    9. '.
' → logprob: -16.625078201293945
    10. '.stderr' → logprob: -16.875078201293945

Token 581: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.054986655712127686
    2. 'read' → logprob: -3.0549867153167725
    3. '.readline' → logprob: -5.054986476898193
    4. '.readlines' → logprob: -14.304986953735352
    5. '.' → logprob: -14.429986953735352
    6. '_read' → logprob: -15.554986953735352
    7. '	read' → logprob: -17.30498695373535
    8. 'rea' → logprob: -18.42998695373535
    9. 'Read' → logprob: -18.67998695373535
    10. '.Read' → logprob: -18.80498695373535

Token 582: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00022070204431656748
    2. '()
' → logprob: -8.50022029876709
    3. '().' → logprob: -11.50022029876709
    4. '   ' → logprob: -12.87522029876709
    5. '()\' → logprob: -13.62522029876709
    6. '()

' → logprob: -13.75022029876709
    7. '(' → logprob: -14.00022029876709
    8. '())' → logprob: -14.50022029876709
    9. '();' → logprob: -15.50022029876709
    10. ' ()' → logprob: -15.75022029876709

Token 583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011156888213008642
    2. 'fac' → logprob: -7.876115798950195
    3. '    
' → logprob: -8.001115798950195
    4. '
' → logprob: -8.126115798950195
    5. ' facade' → logprob: -9.751115798950195
    6. '<|end|>' → logprob: -11.501115798950195
    7. 'f' → logprob: -12.126115798950195
    8. '_fac' → logprob: -12.376115798950195
    9. 'fp' → logprob: -12.751115798950195
    10. '  
' → logprob: -13.126115798950195

Token 584: ' facade' (ID: 110108)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.0004452083958312869
    2. ' facade' → logprob: -8.125445365905762
    3. '   ' → logprob: -9.250445365905762
    4. 'finder' → logprob: -10.750445365905762
    5. 'facet' → logprob: -11.625445365905762
    6. '_fac' → logprob: -12.250445365905762
    7. 'facility' → logprob: -12.750445365905762
    8. 'Facade' → logprob: -12.875445365905762
    9. 'f' → logprob: -12.875445365905762
    10. 'fas' → logprob: -13.000445365905762

Token 585: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014394075609743595
    2. '=' → logprob: -4.264394283294678
    3. '.' → logprob: -8.38939380645752
    4. '   ' → logprob: -14.01439380645752
    5. ' ' → logprob: -14.38939380645752
    6. '	' → logprob: -14.51439380645752
    7. '.=' → logprob: -14.76439380645752
    8. '=find' → logprob: -15.13939380645752
    9. '.find' → logprob: -15.88939380645752
    10. '=C' → logprob: -16.389394760131836

Token 586: ' Cic' (ID: 96235)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.011087908409535885
    2. ' Cic' → logprob: -4.511087894439697
    3. ' C' → logprob: -10.136088371276855
    4. '	C' → logprob: -15.636088371276855
    5. '_C' → logprob: -15.886088371276855
    6. ' ' → logprob: -16.26108741760254
    7. ' Cy' → logprob: -16.76108741760254
    8. '>C' → logprob: -17.01108741760254
    9. ' Coc' → logprob: -17.26108741760254
    10. '<C' → logprob: -17.51108741760254

Token 587: 'ada' (ID: 1194)
  Prédit: 'ada'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ada' → logprob: -1.0280383548888494e-06
    2. 'C' → logprob: -15.000000953674316
    3. 'ада' → logprob: -15.750000953674316
    4. 'a' → logprob: -16.000001907348633
    5. 'Ada' → logprob: -16.000001907348633
    6. 'cada' → logprob: -16.500001907348633
    7. 'aca' → logprob: -16.875001907348633
    8. 'ad' → logprob: -17.000001907348633
    9. '```' → logprob: -18.375001907348633
    10. 'c' → logprob: -18.500001907348633

Token 588: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.0003012617235071957
    2. 'Grid' → logprob: -8.125301361083984
    3. 'path' → logprob: -12.500301361083984
    4. 'Facade' → logprob: -14.375301361083984
    5. '_path' → logprob: -15.125301361083984
    6. 'C' → logprob: -15.250301361083984
    7. 'Pat' → logprob: -15.625301361083984
    8. 'P' → logprob: -16.500301361083984
    9. 'PATH' → logprob: -16.875301361083984
    10. ' Path' → logprob: -17.625301361083984

Token 589: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -1.9361264946837764e-07
    2. 'finder' → logprob: -15.75
    3. ' Finder' → logprob: -18.75
    4. 'Find' → logprob: -19.5
    5. ' finder' → logprob: -20.375
    6. 'Facade' → logprob: -21.625
    7. 'Fac' → logprob: -21.75
    8. 'Fetcher' → logprob: -22.0
    9. 'Fi' → logprob: -22.25
    10. 'F' → logprob: -22.375

Token 590: 'Facade' (ID: 46826)
  Prédit: 'Facade'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Facade' → logprob: -7.896309739408025e-07
    2. 'Fac' → logprob: -14.375000953674316
    3. 'Facet' → logprob: -16.625
    4. 'C' → logprob: -17.875
    5. '\Fac' → logprob: -17.875
    6. ' facade' → logprob: -18.375
    7. '(' → logprob: -18.875
    8. '   ' → logprob: -19.875
    9. 'Face' → logprob: -20.375
    10. 'F' → logprob: -20.5

Token 591: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0015300977975130081
    2. '(' → logprob: -6.501530170440674
    3. '(
' → logprob: -10.501529693603516
    4. ' (' → logprob: -16.126529693603516
    5. '(inp' → logprob: -16.876529693603516
    6. '(in' → logprob: -17.001529693603516
    7. '(

' → logprob: -17.501529693603516
    8. '(i' → logprob: -17.876529693603516
    9. ',input' → logprob: -17.876529693603516
    10. '(output' → logprob: -18.251529693603516

Token 592: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -3.082895273109898e-05
    2. '_data' → logprob: -11.750030517578125
    3. '_' → logprob: -12.125030517578125
    4. '_TEXT' → logprob: -12.500030517578125
    5. '_Text' → logprob: -12.625030517578125
    6. ')_' → logprob: -12.750030517578125
    7. 'Text' → logprob: -13.125030517578125
    8. '   ' → logprob: -13.125030517578125
    9. '```' → logprob: -13.375030517578125
    10. 'text' → logprob: -14.375030517578125

Token 593: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00866125151515007
    2. ')
' → logprob: -4.758661270141602
    3. '   ' → logprob: -10.008661270141602
    4. ' )' → logprob: -14.383661270141602
    5. ')
' → logprob: -15.258661270141602
    6. '),' → logprob: -16.0086612701416
    7. ' ' → logprob: -16.0086612701416
    8. ').' → logprob: -16.2586612701416
    9. '
' → logprob: -16.6336612701416
    10. ')

' → logprob: -16.6336612701416

Token 594: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13017618656158447
    2. 'print' → logprob: -2.130176067352295
    3. 'result' → logprob: -5.755176067352295
    4. ' print' → logprob: -9.755176544189453
    5. ' result' → logprob: -11.380176544189453
    6. 'return' → logprob: -12.630176544189453
    7. '
' → logprob: -13.380176544189453
    8. '    
' → logprob: -13.630176544189453
    9. '```' → logprob: -14.630176544189453
    10. '	print' → logprob: -15.880176544189453

Token 595: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.018161294981837273
    2. 'result' → logprob: -4.018161296844482
    3. 'min' → logprob: -11.643160820007324
    4. ' print' → logprob: -13.143160820007324
    5. ' result' → logprob: -14.768160820007324
    6. '   ' → logprob: -15.518160820007324
    7. 'return' → logprob: -16.39316177368164
    8. 'answer' → logprob: -17.39316177368164
    9. '    
' → logprob: -17.39316177368164
    10. 'res' → logprob: -17.51816177368164

Token 596: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.001170460251159966
    2. '(' → logprob: -6.751170635223389
    3. '(
' → logprob: -15.62617015838623
    4. 'fac' → logprob: -16.876171112060547
    5. '(face' → logprob: -18.376171112060547
    6. ' (' → logprob: -18.626171112060547
    7. '(

' → logprob: -19.376171112060547
    8. '(F' → logprob: -19.751171112060547
    9. '_fac' → logprob: -20.876171112060547
    10. '.fac' → logprob: -20.876171112060547

Token 597: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0010914006270468235
    2. 'in' → logprob: -8.126091003417969
    3. '.fac' → logprob: -8.626091003417969
    4. '```' → logprob: -9.376091003417969
    5. '.' → logprob: -9.501091003417969
    6. 'Facade' → logprob: -9.751091003417969
    7. '.ac' → logprob: -9.876091003417969
    8. 'ace' → logprob: -10.251091003417969
    9. '(' → logprob: -10.376091003417969
    10. 'fac' → logprob: -10.501091003417969

Token 598: 'ade' (ID: 973)
  Prédit: 'ade'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ade' → logprob: -1.3425219549390022e-05
    2. 'ad' → logprob: -11.75001335144043
    3. 'ada' → logprob: -12.37501335144043
    4. 'a' → logprob: -15.00001335144043
    5. 'ades' → logprob: -15.62501335144043
    6. '
' → logprob: -15.62501335144043
    7. '   ' → logprob: -15.75001335144043
    8. 'aca' → logprob: -16.12501335144043
    9. 'de' → logprob: -16.62501335144043
    10. 'cade' → logprob: -16.75001335144043

Token 599: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0005601812736131251
    2. '.' → logprob: -7.500560283660889
    3. ').' → logprob: -12.75055980682373
    4. '.findall' → logprob: -12.75055980682373
    5. '.)' → logprob: -14.12555980682373
    6. ')' → logprob: -16.000560760498047
    7. '.Find' → logprob: -16.250560760498047
    8. ')find' → logprob: -16.250560760498047
    9. '.fin' → logprob: -16.250560760498047
    10. 'find' → logprob: -16.375560760498047

Token 600: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.0087516784551553e-05
    2. ' _' → logprob: -12.50001049041748
    3. '_' → logprob: -12.75001049041748
    4. '_max' → logprob: -13.62501049041748
    5. '_m' → logprob: -14.00001049041748
    6. ')_' → logprob: -14.50001049041748
    7. '
' → logprob: -15.75001049041748
    8. '```' → logprob: -15.87501049041748
    9. '__' → logprob: -16.125009536743164
    10. '"_' → logprob: -16.750009536743164

Token 601: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.250001907348633
    3. '_uns' → logprob: -17.250001907348633
    4. '_UN' → logprob: -17.375001907348633
    5. '_unc' → logprob: -17.625001907348633
    6. 'un' → logprob: -18.875001907348633
    7. '_unref' → logprob: -19.625001907348633
    8. '_uni' → logprob: -20.000001907348633
    9. '_Un' → logprob: -20.250001907348633
    10. '_min' → logprob: -21.000001907348633

Token 602: 'pleasant' (ID: 69525)
  Prédit: 'pleasant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pleasant' → logprob: -0.010598280467092991
    2. 'pes' → logprob: -4.885598182678223
    3. 'ple' → logprob: -7.010598182678223
    4. 'ples' → logprob: -7.260598182678223
    5. 'p' → logprob: -7.885598182678223
    6. 'un' → logprob: -8.010598182678223
    7. 'pl' → logprob: -8.135598182678223
    8. '_' → logprob: -9.510598182678223
    9. 'pal' → logprob: -9.885598182678223
    10. 'le' → logprob: -10.510598182678223

Token 603: 'ness' (ID: 2816)
  Prédit: 'ness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ness' → logprob: -0.0007899748161435127
    2. 'ess' → logprob: -7.250790119171143
    3. 'ance' → logprob: -10.375789642333984
    4. 'iness' → logprob: -10.500789642333984
    5. 'eness' → logprob: -12.250789642333984
    6. '_' → logprob: -13.000789642333984
    7. 'ity' → logprob: -13.125789642333984
    8. ' ness' → logprob: -13.125789642333984
    9. 'ateness' → logprob: -13.625789642333984
    10. 'ous' → logprob: -13.750789642333984

Token 604: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005241106729954481
    2. '()' → logprob: -5.2552409172058105
    3. ')' → logprob: -12.630241394042969
    4. '())
' → logprob: -12.880241394042969
    5. ' ())' → logprob: -14.005241394042969
    6. '()
' → logprob: -15.005241394042969
    7. '();)' → logprob: -15.880241394042969
    8. '()]' → logprob: -16.13024139404297
    9. '()))' → logprob: -17.25524139404297
    10. '()}' → logprob: -17.38024139404297

Token 605: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04932349920272827
    2. '
' → logprob: -3.049323558807373
    3. '<|end|>' → logprob: -7.549323558807373
    4. '```' → logprob: -9.049323081970215
    5. ' if' → logprob: -9.924323081970215
    6. '\n' → logprob: -10.799323081970215
    7. '#' → logprob: -12.049323081970215
    8. '

' → logprob: -12.299323081970215
    9. '  
' → logprob: -12.799323081970215
    10. '\' → logprob: -13.424323081970215

Token 606: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04868955910205841
    2. '__' → logprob: -3.048689603805542
    3. '_name' → logprob: -9.548689842224121
    4. '_' → logprob: -11.298689842224121
    5. 'name' → logprob: -11.423689842224121
    6. '___' → logprob: -12.798689842224121
    7. ' ' → logprob: -13.048689842224121
    8. ' "__' → logprob: -14.173689842224121
    9. ' _' → logprob: -14.798689842224121
    10. ' ' → logprob: -14.923689842224121

Token 607: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0055818757973611355
    2. ' ==' → logprob: -5.505581855773926
    3. '==' → logprob: -7.255581855773926
    4. ' __' → logprob: -7.380581855773926
    5. '=="' → logprob: -9.630581855773926
    6. '_' → logprob: -10.255581855773926
    7. '__.__' → logprob: -10.755581855773926
    8. '___' → logprob: -11.505581855773926
    9. '__["' → logprob: -11.505581855773926
    10. '__[' → logprob: -11.880581855773926

Token 608: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.895480277715251e-06
    2. '==' → logprob: -11.875008583068848
    3. '_' → logprob: -13.625008583068848
    4. '__.__' → logprob: -15.000008583068848
    5. ' ==' → logprob: -15.875008583068848
    6. '=' → logprob: -16.625009536743164
    7. '___' → logprob: -17.250009536743164
    8. '____' → logprob: -17.500009536743164
    9. '=="' → logprob: -17.750009536743164
    10. ' __' → logprob: -17.750009536743164

Token 609: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0022205570712685585
    2. '==' → logprob: -6.127220630645752
    3. ' ==' → logprob: -10.877220153808594
    4. '=="' → logprob: -11.127220153808594
    5. '_' → logprob: -14.502220153808594
    6. '__.__' → logprob: -14.752220153808594
    7. '=='' → logprob: -15.627220153808594
    8. '___' → logprob: -15.752220153808594
    9. '__
' → logprob: -15.877220153808594
    10. '=' → logprob: -15.877220153808594

Token 610: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014182187616825104
    2. ''' → logprob: -4.264182090759277
    3. ' "__' → logprob: -11.014182090759277
    4. '__' → logprob: -13.139182090759277
    5. ' '__' → logprob: -15.764182090759277
    6. '"user' → logprob: -17.014183044433594
    7. '"name' → logprob: -17.264183044433594
    8. ''"' → logprob: -17.514183044433594
    9. '"_' → logprob: -17.639183044433594
    10. '("__' → logprob: -18.139183044433594

Token 611: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.779520092299208e-05
    2. '__' → logprob: -9.500078201293945
    3. '_main' → logprob: -12.875078201293945
    4. ' main' → logprob: -16.000078201293945
    5. 'name' → logprob: -16.250078201293945
    6. '__
' → logprob: -17.500078201293945
    7. '-main' → logprob: -17.875078201293945
    8. 'ma' → logprob: -18.000078201293945
    9. 'm' → logprob: -18.375078201293945
    10. 'built' → logprob: -18.750078201293945

Token 612: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10026092082262039
    2. '__' → logprob: -2.3502609729766846
    3. '__':
' → logprob: -10.100260734558105
    4. '_' → logprob: -11.975260734558105
    5. '__["' → logprob: -12.350260734558105
    6. '__.__' → logprob: -14.100260734558105
    7. '_"' → logprob: -14.600260734558105
    8. '__.' → logprob: -14.725260734558105
    9. '__
' → logprob: -15.100260734558105
    10. '__",' → logprob: -15.725260734558105

Token 613: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0032326136715710163
    2. '__' → logprob: -5.753232479095459
    3. '"' → logprob: -10.378232955932617
    4. ' main' → logprob: -10.878232955932617
    5. '_main' → logprob: -12.878232955932617
    6. ''' → logprob: -14.003232955932617
    7. '	main' → logprob: -14.003232955932617
    8. '   ' → logprob: -15.128232955932617
    9. '____' → logprob: -15.878232955932617
    10. ' __' → logprob: -16.378232955932617

Token 614: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0009117019944824278
    2. ' main' → logprob: -7.000911712646484
    3. '	main' → logprob: -15.250911712646484
    4. '   ' → logprob: -17.875911712646484
    5. 'ma' → logprob: -19.750911712646484
    6. 'maine' → logprob: -19.875911712646484
    7. 'm' → logprob: -20.000911712646484
    8. '_main' → logprob: -20.125911712646484
    9. 'mai' → logprob: -20.625911712646484
    10. ' ' → logprob: -20.625911712646484

Token 615: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0020680641755461693
    2. '()
' → logprob: -6.752068042755127
    3. '(' → logprob: -8.002068519592285
    4. '<|end|>' → logprob: -8.002068519592285
    5. '
' → logprob: -9.127068519592285
    6. '```' → logprob: -9.752068519592285
    7. '\n' → logprob: -11.127068519592285
    8. '()\' → logprob: -11.502068519592285
    9. '()<' → logprob: -11.627068519592285
    10. '();' → logprob: -11.877068519592285


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 613
Tokens correctement prédits (1ère position, stricte): 327
Tokens correctement prédits (1ère position, avec adaptation): 360
Tokens correctement prédits (top 10): 560
Précision stricte (1ère position): 53.34%
Précision adaptée (1ère position): 58.73%
Précision (top 10): 91.35%
================================================================================
